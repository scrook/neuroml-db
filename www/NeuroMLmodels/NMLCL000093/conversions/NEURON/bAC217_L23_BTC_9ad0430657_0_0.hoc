// Cell: bAC217_L23_BTC_9ad0430657_0_0
/*
{
  "id" : "bAC217_L23_BTC_9ad0430657_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.636547, -11.2268, 0.0, 2.0961", "0.598333, -10.0461, 0.0, 3.03421", "0.560118, -8.86534, 0.0, 4.26504", "0.521904, -7.68461, 0.0, 5.45891", "0.483689, -6.50388, 0.0, 6.32885", "0.445475, -5.32315, 0.0, 7.1195", "0.40726, -4.14242, 0.0, 7.67098", "0.369046, -2.96169, 0.0, 8.08337", "0.330831, -1.78096, 0.0, 8.48415", "0.292617, -0.600232, 0.0, 8.88493", "0.254403, 0.580499, 0.0, 9.09061", "0.216188, 1.76123, 0.0, 8.76211", "0.177974, 2.94196, 0.0, 8.30944", "0.139759, 4.12269, 0.0, 7.83318", "0.101545, 5.30342, 0.0, 7.35692", "0.0633304, 6.48415, 0.0, 6.86553", "0.0251159, 7.66488, 0.0, 6.11195", "-0.0130985, 8.84561, 0.0, 5.27833", "-0.051313, 10.0263, 0.0, 4.23957", "-0.0895274, 11.2071, 0.0, 3.09571", "-0.127742, 12.3878, 0.0, 1.86556" ]
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "0.781648, -9.61407, 7.16, 0.83", "0.742819, -12.6647, 7.97826, 0.83", "0.874967, -14.3438, 8.63215, 0.55", "1.22373, -16.2843, 9.46044, 0.55", "1.66069, -18.0147, 10.1823, 0.55", "2.60283, -21.0648, 11.4007, 0.28", "2.87041, -21.8972, 11.7136, 0.55", "3.67682, -23.9107, 12.4846, 0.55", "4.36899, -25.5191, 13.1185, 0.55", "5.13654, -27.0335, 13.6477, 0.28", "5.67189, -28.0822, 13.9537, 0.55", "6.1824, -29.1976, 14.2215, 0.55", "6.94153, -31.1649, 14.674, 0.55", "7.96248, -34.2809, 15.3234, 0.55", "8.57957, -36.583, 15.823, 0.55", "9.10421, -38.9143, 16.3219, 0.55", "9.3286, -40.302, 16.5948, 0.55", "9.58279, -42.5729, 16.9927, 0.55", "9.64871, -43.7874, 17.1796, 0.55", "9.60213, -44.8515, 17.2785, 0.55", "9.35851, -46.7047, 17.4394, 0.55", "8.99796, -48.8155, 17.5661, 0.55", "8.94644, -49.1447, 17.5641, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995701300415,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-1.99836, -4.67357, -13.53, 0.83", "-1.88427, -3.51104, -14.0114, 0.83", "-2.23013, -1.18136, -14.718, 0.83", "-2.55161, -0.471524, -15.7978, 0.83", "-2.92725, 0.304073, -17.1007, 0.83", "-3.27164, 1.01517, -18.2951, 0.83", "-3.58648, 1.66524, -19.3871, 0.83", "-4.18224, 2.88115, -21.5136, 0.83", "-7.23975, 8.10892, -31.6527, 0.83", "-7.33363, 8.24364, -31.9632, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995701300415
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-1.60835, 11.4702, -0.19, 1.11", "-2.6522, 12.1318, -0.145144, 1.11", "-4.05285, 13.0195, -0.0849569, 1.11", "-5.313, 13.8182, -0.0308066, 1.11", "-6.71778, 14.7085, 0.0295583, 0.83", "-8.38537, 15.7654, 0.101217, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995701300415
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "0.641648, -12.0126, -8.79, 2.77", "0.433163, -15.6245, -8.79, 2.77", "0.135097, -20.7884, -8.79, 2.77", "-0.0133525, -23.3602, -8.79, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995701300415
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.358352, 12.0237, -1.3, 0.83", "0.280845, 17.2967, -1.03287, 0.83", "0.662542, 19.8863, -0.732527, 1.11", "1.25585, 24.2046, -0.0448983, 0.83", "1.7814, 28.3743, 0.686285, 0.83", "2.24581, 31.8019, 1.40376, 0.83", "3.00117, 37.3078, 2.50586, 0.83", "3.40938, 40.8986, 3.25863, 0.83", "3.74016, 43.7623, 3.83782, 0.83", "4.31746, 48.3527, 4.81576, 0.83", "5.3889, 56.6337, 6.61063, 0.83", "5.9174, 60.7769, 7.4657, 0.83", "6.21314, 63.4577, 7.85234, 0.83", "6.7456, 68.674, 8.44549, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995701300415,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.127742, 12.3878, 0.0, 0.930967", "-0.612964, 27.38, 0.0, 0.930967", "-1.09819, 42.3721, 0.0, 0.930967" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "8.94644, -49.1447, 17.5641, 0.55", "8.87505, -49.8277, 18.1044, 0.55", "8.77945, -50.5977, 18.6642, 0.55", "8.41297, -52.8658, 20.1385, 0.55", "8.18268, -54.3336, 21.0042, 0.55", "7.81301, -56.7297, 22.2729, 0.55", "7.54484, -58.6951, 23.2194, 0.28", "7.39599, -60.0148, 23.7752, 0.55", "7.2683, -61.4883, 24.2581, 0.55", "7.18621, -62.5454, 24.4952, 0.55", "7.09485, -63.871, 24.7254, 0.55", "7.02354, -64.9134, 24.9108, 0.55", "6.92165, -66.0905, 25.1711, 0.55", "6.74162, -67.5921, 25.5576, 0.55", "6.39034, -69.935, 26.1984, 0.55", "5.99901, -71.782, 26.688, 0.55", "5.26521, -74.8857, 27.4368, 0.55", "4.93721, -76.1716, 27.7133, 0.55", "4.37656, -78.4682, 28.1283, 0.55", "4.08017, -79.8783, 28.2667, 0.55", "3.71146, -82.3847, 28.2475, 0.55", "3.55523, -83.8282, 28.1114, 0.55", "3.50578, -84.6629, 27.9559, 0.55", "3.50185, -86.2608, 27.6378, 0.55", "3.62189, -88.3803, 27.0942, 0.55", "3.69278, -89.662, 26.7204, 0.55", "3.79843, -91.2203, 26.2492, 0.28", "3.84169, -92.8681, 25.778, 0.55", "3.85043, -93.446, 25.6171, 0.55", "3.84146, -95.4326, 25.1254, 0.28", "3.83775, -96.74, 24.7935, 0.55", "3.9025, -98.3656, 24.3214, 0.55", "4.00407, -99.2915, 24.0651, 0.55", "4.11643, -100.047, 23.8884, 0.28", "4.35581, -101.564, 23.6025, 0.55", "4.79008, -104.206, 23.2377, 0.28", "5.07321, -105.8, 23.0282, 0.55", "5.31563, -107.305, 22.8922, 0.28", "5.68048, -109.565, 22.7752, 0.28", "5.81135, -110.416, 22.7913, 0.55", "5.94508, -111.236, 22.8682, 0.28", "6.11835, -112.182, 23.0282, 0.55", "6.64864, -114.794, 23.4814, 0.28", "6.83897, -115.603, 23.6123, 0.28", "7.29028, -117.146, 23.8707, 0.55", "7.76773, -118.481, 24.0963, 0.55", "8.57953, -120.447, 24.4137, 0.55", "9.01073, -121.417, 24.5478, 0.55", "9.80113, -123.122, 24.7167, 0.55", "10.3857, -124.433, 24.839, 0.55", "10.8391, -125.431, 24.9599, 0.55", "11.3444, -126.486, 25.1584, 0.55", "12.2068, -128.153, 25.5692, 0.55", "12.7031, -129.1, 25.8565, 0.55", "13.332, -130.217, 26.2298, 0.28", "14.2167, -131.81, 26.7547, 0.55", "14.8929, -133.036, 27.062, 0.55", "15.712, -134.341, 27.3303, 0.55", "16.7853, -135.885, 27.5624, 0.28", "17.563, -137.006, 27.5953, 0.55", "18.2281, -137.992, 27.5099, 0.55", "19.8653, -140.384, 27.0003, 0.55", "20.3896, -141.147, 26.7578, 0.55", "20.9926, -142.011, 26.4303, 0.55", "22.2609, -143.755, 25.6992, 0.55", "22.6885, -144.381, 25.4612, 0.55", "23.9295, -146.155, 24.848, 0.28", "24.7852, -147.377, 24.4814, 0.55", "26.246, -149.566, 23.9599, 0.28", "26.8157, -150.445, 23.8119, 0.28", "27.8977, -152.177, 23.6928, 0.55", "28.4433, -153.141, 23.6913, 0.28", "28.6187, -153.485, 23.7175, 0.55", "29.397, -155.024, 23.9023, 0.28", "29.9051, -155.99, 24.0212, 0.55", "30.9365, -157.828, 24.3447, 0.28", "31.5833, -158.836, 24.5276, 0.55", "32.048, -159.539, 24.6449, 0.55", "32.5082, -160.228, 24.7582, 0.55", "33.8618, -162.258, 25.061, 0.28", "34.7453, -163.653, 25.26, 0.55", "35.8595, -165.686, 25.5061, 0.28", "37.0149, -168.082, 25.7453, 0.28", "37.5296, -169.504, 25.8521, 0.55", "38.0976, -171.598, 25.8847, 0.55", "38.3717, -173.136, 25.8137, 0.28", "38.6419, -175.648, 25.5665, 0.55", "38.6506, -176.014, 25.526, 0.55", "38.6019, -178.844, 25.1215, 0.28", "38.5933, -180.67, 24.8229, 0.55", "38.6458, -182.348, 24.5772, 0.28", "38.685, -183.096, 24.4664, 0.55", "38.8318, -184.874, 24.2146, 0.55", "39.2508, -188.683, 23.7567, 0.28", "39.4022, -189.644, 23.6857, 0.55", "39.761, -191.833, 23.6796, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "8.94644, -49.1447, 17.5641, 0.55", "7.35597, -49.768, 17.5021, 0.55", "5.45314, -50.0689, 16.6101, 0.55", "4.37219, -50.0114, 15.8892, 0.55", "3.29049, -49.9817, 15.1791, 0.55", "1.93346, -49.967, 14.2513, 0.55", "0.930981, -49.9527, 13.5783, 0.55", "-2.4961, -49.7173, 11.3426, 0.28", "-3.69066, -49.6372, 10.534, 0.28", "-5.01635, -49.5143, 9.67724, 0.55", "-7.34872, -49.253, 8.63325, 0.55", "-8.15376, -49.178, 8.45111, 0.55", "-10.2568, -49.0335, 8.47656, 0.83", "-11.9025, -48.9875, 9.06545, 0.55", "-13.1881, -49.0053, 9.7859, 0.55", "-17.9138, -49.3443, 13.2693, 0.55", "-18.4961, -49.4451, 13.8457, 0.55", "-18.8903, -49.5874, 14.3493, 0.55", "-20.8726, -50.7634, 17.7034, 0.28", "-21.4916, -51.2824, 18.9673, 0.55", "-22.0243, -51.8806, 20.1876, 0.55", "-23.3072, -53.9271, 23.3774, 0.55", "-24.6742, -56.6963, 27.2448, 0.55", "-25.3904, -58.5899, 29.5771, 0.55", "-25.6072, -59.3448, 30.4368, 0.55", "-25.7711, -59.9336, 31.1308, 0.55", "-25.9987, -61.171, 32.499, 0.55", "-25.9834, -62.2572, 33.2297, 0.28", "-25.8233, -63.5634, 33.4598, 0.28" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-7.33363, 8.24364, -31.9632, 0.83", "-6.43782, 12.7078, -32.6886, 0.83", "-5.55016, 17.127, -33.7289, 0.83", "-4.90687, 20.6794, -34.6293, 0.83", "-4.01891, 25.0847, -35.725, 0.83", "-2.80183, 31.1708, -37.1579, 0.83", "-1.74351, 37.058, -38.4564, 0.83", "-1.07714, 41.1254, -39.3287, 0.83", "-0.192827, 46.5909, -40.4618, 0.83", "0.859268, 53.9277, -41.861, 0.83", "1.60918, 59.0634, -42.7203, 0.83", "2.2999, 63.7312, -43.3322, 0.83", "3.1333, 68.4264, -43.7143, 0.83", "3.60141, 70.7617, -43.8921, 0.83", "4.51066, 74.6078, -44.2533, 0.83", "5.52433, 78.5252, -44.68, 0.83", "6.50934, 81.6987, -45.0506, 0.55", "8.00562, 86.0412, -45.5635, 1.11", "9.02851, 88.8251, -45.887, 0.83", "10.8057, 93.627, -46.4228, 0.83", "12.9804, 98.9918, -47.0088, 0.83", "14.6571, 102.923, -47.4153, 0.83", "16.8994, 108.153, -47.9056, 0.83", "18.69, 112.609, -48.2641, 0.83", "19.6346, 114.897, -48.4208, 0.83", "21.0138, 118.366, -48.6619, 0.83", "22.5249, 122.842, -49.2389, 0.83", "23.9437, 127.865, -50.1124, 0.83", "25.0003, 133.021, -51.2348, 0.83", "25.594, 137.027, -52.2579, 0.83", "26.2001, 142.313, -53.8459, 0.83", "26.5869, 150.811, -56.599, 0.83", "26.597, 151.627, -56.9328, 0.83", "26.5556, 158.692, -60.2629, 0.83", "26.5712, 161.165, -61.5348, 0.83", "26.6794, 164.896, -63.5301, 0.83", "27.1713, 171.145, -67.0247, 0.83", "28.5979, 179.136, -71.022, 0.83", "29.3143, 181.903, -72.4337, 0.83", "30.3717, 184.76, -73.8289, 0.83", "31.217, 186.708, -74.6823, 0.83", "33.6011, 191.642, -76.3968, 0.83", "37.0561, 198.531, -78.0099, 0.83", "38.7646, 202.388, -78.4432, 0.83", "40.4003, 206.963, -78.8055, 0.83", "41.8013, 212.34, -79.0627, 0.83", "42.6696, 217.624, -79.3231, 0.83", "43.2133, 223.807, -79.7435, 0.83", "43.0717, 229.06, -80.3051, 0.83", "42.5643, 234.048, -80.8544, 0.83", "42.0724, 236.739, -81.2534, 0.83", "40.6153, 242.828, -82.3508, 0.83", "39.1739, 247.82, -83.9711, 0.83", "38.2231, 251.24, -85.5132, 0.83", "37.6064, 254.519, -87.592, 0.83", "37.4776, 256.396, -88.9941, 0.83", "37.4357, 257.922, -90.2286, 0.83", "37.6923, 264.362, -95.8788, 0.83", "38.0412, 267.773, -99.2077, 1.11", "39.2515, 273.576, -105.432, 0.83", "39.814, 275.52, -107.833, 0.83" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-7.33363, 8.24364, -31.9632, 0.55", "-8.44996, 8.00561, -33.955, 0.55", "-11.2338, 7.23697, -38.2258, 0.55", "-12.0303, 6.97341, -39.3018, 0.55", "-12.7848, 6.73822, -40.2809, 0.55", "-13.4602, 6.64788, -41.2377, 0.55", "-15.7653, 6.37362, -45.0385, 0.55", "-16.7077, 6.21975, -46.6723, 0.55", "-17.2431, 6.13957, -47.5646, 0.55", "-18.7699, 5.90076, -50.4111, 0.55", "-20.9845, 5.46108, -54.7126, 1.11", "-23.643, 4.86359, -59.8056, 0.83", "-24.2818, 4.72338, -61.0048, 0.83", "-24.889, 4.60206, -62.2141, 0.83", "-27.4775, 4.0105, -67.4692, 0.83", "-28.0044, 3.8226, -68.4897, 0.83", "-28.8416, 3.36062, -69.9031, 0.83", "-29.0657, 3.28062, -70.2366, 0.83" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-8.38537, 15.7654, 0.101217, 0.83", "-9.89291, 19.3077, 2.22945, 0.83", "-10.9093, 21.05, 3.68216, 0.83", "-11.7064, 22.244, 4.80626, 0.83", "-15.7595, 27.2998, 9.77167, 0.83", "-17.6188, 29.4341, 11.783, 0.83", "-19.8713, 31.9459, 14.1497, 0.83", "-25.3586, 37.6841, 19.8074, 0.83", "-27.8014, 40.1079, 22.1593, 0.83", "-30.8987, 43.0931, 25.0483, 0.83", "-34.8405, 46.849, 28.4977, 0.83", "-38.5803, 50.185, 31.7769, 0.83", "-39.5461, 51.0216, 32.5926, 0.83", "-40.8055, 52.276, 33.458, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-8.38537, 15.7654, 0.101217, 0.83", "-11.3661, 14.6074, 1.87788, 0.83", "-16.0498, 13.0749, 4.41656, 0.83", "-17.7566, 12.4673, 5.28346, 0.83", "-20.5692, 11.4512, 6.24783, 0.83", "-22.1286, 10.8782, 6.61974, 0.83", "-23.8894, 10.169, 6.95458, 0.83", "-24.164, 10.0609, 6.98123, 0.83", "-26.4816, 8.95254, 6.69756, 0.83", "-30.245, 6.46512, 5.84201, 0.83", "-32.2471, 4.72061, 5.24278, 0.83", "-33.3043, 3.46469, 4.75329, 0.83", "-34.9114, 1.05541, 3.79714, 0.83", "-37.1805, -3.14951, 2.15007, 0.83", "-37.9642, -5.03828, 1.46341, 0.83", "-38.8251, -8.09081, 0.56311, 0.83", "-39.9291, -13.4516, -0.84894, 0.83", "-40.1692, -15.1251, -1.20246, 0.83", "-40.4083, -18.3862, -1.69756, 0.83", "-40.4873, -21.0193, -1.91493, 0.83", "-40.4313, -24.3155, -2.14343, 0.83", "-40.2425, -26.7809, -2.24101, 0.83", "-39.8283, -30.2564, -2.20995, 0.83", "-39.5061, -32.0614, -2.20357, 0.83", "-38.5224, -36.5561, -2.64475, 0.83", "-38.0701, -38.4022, -3.02241, 0.83", "-37.3001, -41.5628, -4.04092, 0.83", "-36.9923, -42.8006, -4.54813, 0.83", "-36.3966, -45.2432, -5.68473, 0.83", "-34.8215, -51.8887, -8.82203, 0.83", "-34.5455, -53.2127, -9.60246, 0.83", "-34.0572, -55.942, -11.3739, 0.28", "-33.911, -56.8172, -11.9906, 1.38", "-33.5325, -59.3427, -13.7427, 0.28", "-33.2142, -61.4173, -15.123, 1.11", "-32.0473, -67.7431, -18.7936, 0.28", "-31.7985, -69.0312, -19.5935, 1.11", "-31.7041, -69.4884, -19.8955, 1.11", "-31.4617, -70.7386, -20.7361, 0.28", "-31.3367, -71.3025, -21.104, 0.28", "-30.9699, -72.6338, -21.7397, 0.28", "-30.5063, -74.1004, -22.1856, 1.66", "-29.7936, -76.3511, -23.0371, 0.28", "-29.4863, -77.4033, -23.4874, 0.55", "-29.0269, -79.0426, -24.2324, 0.28", "-28.6121, -80.4001, -24.8706, 0.55", "-27.6469, -83.6688, -27.2012, 0.28", "-27.4801, -84.2999, -27.7625, 0.28", "-27.1777, -85.5827, -29.0323, 0.83", "-26.9635, -86.8604, -30.3124, 0.83", "-26.8969, -87.6582, -31.0656, 0.83", "-26.8616, -93.0661, -35.4233, 0.28", "-26.9532, -94.4755, -36.2629, 0.28", "-27.0361, -95.1004, -36.5558, 0.55", "-27.4091, -97.1161, -37.3624, 0.28", "-27.8632, -98.9251, -37.9728, 0.55", "-28.3417, -100.765, -38.4536, 0.28", "-28.6933, -102.636, -38.7313, 0.55", "-29.0143, -104.302, -39.1216, 0.28", "-29.4389, -106.489, -39.8408, 0.55", "-29.6832, -107.719, -40.3197, 0.28", "-30.221, -109.936, -41.3774, 0.83", "-30.9129, -112.57, -42.771, 0.28", "-31.9403, -115.953, -44.5524, 1.11", "-32.806, -118.479, -45.9317, 0.55", "-33.2258, -119.649, -46.5324, 0.83", "-34.2608, -122.367, -48.1031, 0.28", "-34.5675, -123.123, -48.5124, 0.28", "-35.3295, -125.164, -49.615, 0.55", "-36.0935, -128.316, -51.1852, 0.28", "-36.3624, -129.682, -51.8958, 0.55", "-36.9611, -133.364, -53.7967, 0.28", "-37.4319, -136.862, -55.6558, 0.55", "-37.8607, -139.558, -57.2398, 0.28", "-38.0793, -140.915, -58.0816, 0.55", "-38.685, -144.258, -60.0035, 0.28", "-39.1468, -146.32, -61.0989, 0.55", "-39.6676, -148.312, -61.9698, 0.55", "-40.4152, -150.644, -62.9193, 0.28", "-40.7649, -151.675, -63.1383, 0.55", "-41.2747, -153.23, -63.2458, 0.28", "-41.9115, -155.31, -63.26, 0.55", "-42.3541, -156.788, -63.2961, 0.28", "-42.8396, -158.489, -63.3087, 0.55", "-43.2858, -160.279, -63.3635, 0.28", "-43.4458, -160.94, -63.4157, 0.55", "-44.3449, -165.057, -64.3226, 0.28", "-44.4568, -165.708, -64.5118, 0.55", "-44.6396, -166.962, -64.8924, 0.28", "-44.9397, -168.95, -65.4867, 0.55", "-45.2909, -171.067, -66.0446, 0.28", "-45.8381, -174.815, -66.7551, 0.28", "-46.0916, -176.722, -66.9762, 0.28", "-46.4188, -178.855, -67.1795, 0.55", "-47.0885, -183.379, -67.5297, 0.28", "-47.3829, -185.309, -67.6519, 0.55", "-47.7059, -187.718, -67.7368, 0.28", "-47.8159, -188.58, -67.7639, 0.55", "-48.3837, -193.543, -68.0553, 0.28", "-48.5346, -195.392, -68.1981, 0.83", "-48.9159, -201.872, -68.7528, 0.28", "-49.0093, -203.702, -68.9456, 0.55", "-49.1428, -207.108, -69.4108, 0.28", "-49.1974, -208.739, -69.6326, 0.55", "-49.2603, -210.905, -69.8689, 0.28", "-49.3234, -212.007, -69.9424, 0.55", "-49.4168, -213.11, -69.9725, 0.55", "-49.6529, -215.005, -69.9802, 0.28", "-49.9397, -216.92, -69.892, 0.55", "-50.7549, -221.529, -69.6878, 0.28", "-51.2144, -223.881, -69.5535, 0.55", "-51.6436, -226.087, -69.4956, 0.28", "-52.0148, -227.835, -69.4793, 0.55", "-52.3898, -229.571, -69.4284, 0.28", "-52.646, -230.818, -69.4567, 0.55", "-53.0095, -232.397, -69.5549, 0.28", "-53.5756, -235.088, -69.7556, 0.55", "-53.9917, -237.265, -69.8866, 0.28", "-54.3708, -239.374, -70.1232, 0.83", "-55.0834, -243.961, -70.7789, 0.28", "-55.1635, -244.622, -70.8635, 0.55", "-55.2894, -246.479, -71.0467, 0.28", "-55.2775, -248.458, -71.1232, 0.55", "-54.9936, -251.215, -71.1314, 0.28", "-54.7852, -252.446, -71.1806, 0.55", "-54.1735, -254.619, -71.2398, 0.28", "-53.6055, -256.347, -71.3225, 0.28", "-52.9809, -258.083, -71.4065, 0.55", "-51.7119, -261.177, -71.5313, 0.28", "-50.2595, -264.426, -71.5505, 0.55", "-49.1197, -266.944, -71.698, 0.28", "-48.8766, -267.493, -71.7858, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-0.0133525, -23.3602, -8.79, 2.77", "0.294037, -25.2147, -8.83908, 2.77" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-0.0133525, -23.3602, -8.79, 0.83", "-2.75924, -28.3267, -9.69908, 0.83", "-4.2173, -30.9639, -10.1818, 1.11" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.7456, 68.674, 8.44549, 0.55", "6.07391, 70.9359, 8.31914, 0.55", "4.93715, 74.7639, 8.1053, 0.55", "4.40931, 76.5413, 8.006, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.7456, 68.674, 8.44549, 0.55", "8.0871, 70.539, 8.93383, 0.55", "9.57014, 72.4571, 9.46467, 0.55", "10.5168, 73.6197, 9.78512, 0.55", "13.0645, 76.7617, 10.5973, 0.55", "14.7579, 79.0712, 11.1239, 0.55", "16.6393, 81.7963, 11.6774, 0.55", "18.313, 84.3928, 12.1202, 0.55", "19.8936, 87.1977, 12.6434, 0.55", "21.5909, 90.4612, 13.3034, 0.55", "22.8771, 93.2235, 13.9637, 0.55", "23.9462, 96.036, 14.6962, 0.55", "24.8282, 98.8028, 15.4389, 0.55", "25.7988, 102.475, 16.4337, 0.55", "26.3266, 104.77, 17.068, 0.55", "26.9726, 107.538, 17.8549, 0.55", "27.6533, 110.391, 18.6566, 0.55", "28.3632, 113.473, 19.4591, 0.55", "29.3492, 117.395, 20.3993, 0.55", "29.7665, 118.704, 20.6816, 0.55", "30.4678, 120.875, 21.2154, 0.55", "31.1244, 122.827, 21.7126, 0.55", "31.9715, 125.421, 22.5252, 0.55", "33.2274, 129.627, 24.1681, 0.55", "34.0632, 132.621, 25.5178, 0.55", "35.1076, 136.014, 27.1943, 0.55", "36.0323, 138.718, 28.5718, 0.55", "37.3098, 142.034, 30.2727, 0.55", "39.1508, 146.322, 32.4681, 0.55", "40.944, 150.028, 34.358, 0.55", "43.0122, 153.835, 36.2425, 0.55", "45.1556, 157.427, 37.8661, 0.55", "46.6851, 159.876, 38.8908, 0.55", "48.7322, 163.017, 39.9816, 0.55", "51.0674, 166.478, 40.9711, 0.55", "52.6425, 168.906, 41.5571, 0.55", "54.1567, 171.51, 42.0848, 0.55", "55.1123, 173.26, 42.4206, 0.55", "56.6789, 176.306, 42.934, 0.55", "57.8601, 178.813, 43.2412, 0.55", "58.9705, 181.146, 43.416, 0.28", "59.4877, 182.267, 43.5137, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.09819, 42.3721, 0.0, 0.28", "-1.58341, 57.3643, 0.0, 0.28", "-2.06863, 72.3564, 0.0, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "39.761, -191.833, 23.6796, 0.28", "40.6776, -194.71, 23.1885, 0.28", "41.4459, -197.604, 22.6209, 0.55", "42.798, -202.271, 21.3677, 0.28", "43.5622, -204.869, 20.5771, 0.55", "44.7741, -209.018, 19.2586, 0.28", "44.875, -209.364, 19.1512, 0.55", "46.3233, -213.564, 17.6332, 0.28", "47.8648, -217.298, 16.1409, 0.55", "48.6109, -218.884, 15.5504, 0.55", "49.7844, -220.907, 14.7451, 0.55", "51.3815, -223.293, 13.7803, 0.55", "54.3743, -227.729, 12.3131, 0.28", "56.1242, -230.229, 11.723, 0.28", "57.496, -232.509, 11.462, 0.28", "58.995, -235.304, 11.3258, 0.55", "59.7806, -236.967, 11.3736, 0.55", "61.4444, -241.428, 11.8043, 0.28", "61.8255, -242.828, 12.0178, 0.55", "63.1359, -248.58, 12.938, 0.28", "63.7791, -251.89, 13.4335, 0.28", "64.4362, -255.877, 13.9759, 0.28", "64.7892, -257.945, 14.1623, 0.55", "64.9383, -258.754, 14.1705, 0.55", "65.3909, -261.542, 14.0798, 0.28", "65.5201, -262.361, 14.0292, 0.55", "66.107, -265.423, 13.6085, 0.28", "66.2757, -266.125, 13.4713, 0.55", "67.3707, -269.792, 12.9102, 0.28", "68.0407, -271.831, 12.7022, 0.55", "68.537, -273.315, 12.5909, 0.55", "69.3646, -276.557, 12.6703, 0.28", "69.5355, -277.641, 12.7868, 0.55", "69.5539, -281.531, 13.2551, 0.28", "69.4807, -282.254, 13.346, 0.55", "69.1431, -284.355, 13.6643, 0.28", "67.9383, -289.655, 14.4877, 0.28", "67.6064, -290.751, 14.6976, 0.55", "65.7559, -296.212, 15.5117, 0.28", "64.7968, -298.843, 15.6796, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "39.761, -191.833, 23.6796, 0.28", "42.9777, -193.879, 26.0719, 0.28", "43.8403, -194.434, 26.5716, 0.55", "46.0374, -195.933, 27.7011, 0.28", "46.9088, -196.527, 28.149, 0.55", "49.119, -198.035, 29.2852, 0.28", "50.1368, -198.73, 29.8083, 0.55", "53.8363, -201.144, 31.5951, 0.28", "55.0947, -201.976, 32.1064, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "39.814, 275.52, -107.833, 0.83", "41.6519, 279.63, -107.891, 0.83", "43.0378, 283.029, -107.924, 0.83", "44.6075, 287.011, -107.964, 0.83", "45.8591, 290.36, -108.005, 0.28", "46.5974, 292.451, -108.034, 0.55", "47.4154, 294.855, -108.072, 0.28", "48.5428, 298.451, -108.069, 0.55", "48.932, 299.895, -108.105, 0.28", "49.4542, 302.509, -108.263, 0.55", "49.6399, 303.471, -108.347, 0.28", "49.9933, 305.208, -108.46, 0.83", "50.4664, 307.413, -108.561, 0.28", "51.0908, 310.008, -108.601, 0.83", "52.2477, 314.441, -108.393, 0.55", "53.1489, 317.545, -108.049, 0.28", "53.6935, 319.31, -107.808, 0.55", "53.931, 320.041, -107.676, 0.28", "54.6492, 322.025, -107.178, 0.55", "55.6405, 324.559, -106.312, 0.28", "56.3582, 326.325, -105.403, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "39.814, 275.52, -107.833, 0.28", "39.1337, 276.7, -108.461, 0.28", "38.647, 277.935, -109.334, 0.28", "38.4951, 278.337, -109.642, 0.55", "37.9303, 279.705, -110.669, 0.28", "37.4728, 280.688, -111.35, 0.55", "36.9964, 281.543, -112.106, 0.55", "35.8799, 283.237, -113.942, 0.28", "35.398, 283.861, -114.69, 0.28", "34.8102, 284.583, -115.559, 0.55", "34.1486, 285.41, -116.563, 0.55", "32.2821, 287.972, -119.802, 0.28", "31.9183, 288.497, -120.454, 0.55", "31.539, 289.055, -121.108, 0.28", "31.3152, 289.46, -121.567, 0.55", "30.4568, 291.331, -123.514, 0.28", "29.928, 292.846, -124.824, 0.55", "29.7056, 293.655, -125.35, 0.28", "29.5704, 294.165, -125.684, 0.55", "29.3897, 294.881, -126.149, 0.28", "29.1327, 296.058, -126.835, 0.55", "28.9399, 296.932, -127.267, 0.28", "28.6223, 298.296, -127.983, 0.28", "28.2619, 299.819, -128.846, 0.28", "27.964, 300.873, -129.466, 0.28", "27.756, 301.529, -129.85, 0.55", "27.0405, 303.615, -130.893, 0.55", "26.519, 305.007, -131.452, 0.83", "26.2077, 305.797, -131.685, 0.83", "25.0766, 308.588, -132.284, 0.55", "24.613, 309.65, -132.476, 0.83", "23.732, 311.618, -132.736, 0.28", "23.2866, 312.623, -132.789, 0.28", "22.994, 313.267, -132.795, 0.28", "22.3744, 314.597, -132.778, 0.28", "21.7407, 315.859, -132.726, 0.55", "21.3432, 316.55, -132.731, 0.55", "20.6772, 317.511, -132.797, 0.55", "19.9681, 318.374, -132.84, 0.55", "19.565, 318.805, -132.853, 0.28", "18.6616, 319.642, -132.854, 0.55", "17.6134, 320.565, -132.931, 0.55", "16.4376, 321.589, -133.13, 0.83", "15.8516, 322.087, -133.226, 0.28", "15.2645, 322.599, -133.321, 0.55", "14.585, 323.22, -133.429, 0.55", "13.0295, 324.73, -133.641, 0.55", "11.8965, 325.831, -133.774, 0.55", "10.6247, 327.036, -133.884, 0.28", "9.80548, 327.798, -133.926, 0.28", "9.02742, 328.55, -133.964, 0.28", "8.67422, 328.903, -133.976, 0.55", "7.3073, 330.226, -133.983, 0.28", "6.29025, 331.174, -134.069, 0.28", "5.38051, 332.052, -134.155, 0.83", "4.47738, 332.958, -134.185, 0.28", "3.80304, 333.656, -134.161, 0.28", "3.12539, 334.366, -134.093, 0.28", "2.60559, 334.939, -134.0, 0.55", "1.2468, 336.351, -133.709, 0.28", "0.542684, 336.996, -133.547, 0.55", "-0.499844, 337.895, -133.308, 0.28", "-1.17141, 338.504, -133.172, 0.55", "-1.81801, 339.119, -133.076, 0.28", "-2.65803, 339.923, -132.97, 0.28", "-3.31523, 340.539, -132.916, 0.28", "-4.37992, 341.611, -132.725, 0.55", "-4.93725, 342.264, -132.584, 0.55", "-5.78755, 343.35, -132.322, 0.55", "-6.72229, 344.529, -132.007, 0.28", "-7.25344, 345.233, -131.746, 0.55", "-8.09658, 346.393, -131.227, 0.28", "-8.79673, 347.259, -130.736, 0.28", "-9.23167, 347.801, -130.378, 0.28", "-9.83228, 348.554, -129.831, 0.28", "-11.0278, 349.855, -128.84, 0.55", "-11.9928, 350.789, -128.128, 0.28", "-12.9982, 351.571, -127.57, 0.55", "-14.2244, 352.371, -127.019, 0.55", "-14.5718, 352.593, -126.895, 0.28", "-15.8867, 353.422, -126.579, 0.55", "-16.8597, 354.029, -126.373, 0.55", "-18.063, 354.773, -126.051, 0.28", "-18.9214, 355.396, -125.793, 0.55", "-19.7538, 356.119, -125.469, 0.28", "-20.499, 357.006, -125.045, 0.28", "-21.6837, 358.778, -124.174, 0.55", "-22.3767, 359.964, -123.646, 0.28", "-22.9643, 361.077, -123.194, 0.28", "-23.7714, 362.696, -122.612, 0.55", "-25.2577, 365.592, -121.762, 0.28", "-25.4651, 365.966, -121.683, 0.55", "-26.6878, 368.007, -121.47, 0.28", "-27.0247, 368.542, -121.443, 0.55", "-27.4124, 369.067, -121.444, 0.28", "-28.4252, 370.267, -121.531, 0.55", "-29.8053, 371.718, -121.684, 0.28", "-30.4328, 372.368, -121.731, 0.55", "-31.2117, 373.155, -121.761, 0.28", "-32.2996, 374.285, -121.796, 0.55", "-34.485, 376.515, -121.845, 0.28", "-34.8234, 376.866, -121.842, 0.55", "-36.2896, 378.317, -121.802, 0.28", "-36.9732, 378.954, -121.775, 0.55", "-37.624, 379.518, -121.71, 0.28", "-38.5981, 380.304, -121.578, 0.55", "-39.651, 381.028, -121.411, 0.28", "-40.9706, 381.85, -121.203, 0.28", "-42.6343, 382.804, -120.937, 0.28", "-44.3352, 383.728, -120.644, 0.55", "-45.8696, 384.49, -120.422, 0.28", "-46.9411, 384.982, -120.306, 0.28", "-48.6267, 385.665, -120.173, 0.28", "-49.237, 385.887, -120.146, 0.28", "-50.2887, 386.224, -120.172, 0.55", "-51.7782, 386.675, -120.327, 0.28", "-53.4386, 387.126, -120.556, 0.28", "-54.2072, 387.322, -120.69, 0.55", "-55.0369, 387.566, -120.84, 0.28", "-55.9991, 387.899, -121.012, 0.55", "-57.9561, 388.644, -121.396, 0.55", "-59.2362, 389.189, -121.613, 0.28", "-59.5159, 389.322, -121.666, 0.55", "-61.5398, 390.375, -122.053, 0.28", "-61.9501, 390.615, -122.104, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-29.0657, 3.28062, -70.2366, 0.55", "-32.3183, 1.67123, -78.2088, 0.55", "-32.685, 1.55886, -79.2149, 0.55", "-33.2974, 1.53176, -81.2394, 0.55", "-34.5551, 1.72366, -85.8968, 0.55", "-34.9361, 1.84104, -87.4198, 0.55", "-36.5871, 2.6322, -94.7384, 0.55", "-36.8879, 2.93502, -96.3424, 0.55", "-37.7344, 4.17726, -101.781, 0.28", "-37.8809, 4.47844, -102.91, 0.55", "-37.9597, 4.62036, -103.486, 0.55", "-38.6584, 5.57929, -108.059, 0.55", "-39.3959, 6.11444, -111.455, 0.55", "-39.6649, 6.23605, -112.484, 0.55", "-40.3319, 6.41476, -114.579, 0.55", "-43.9946, 7.05441, -124.545, 0.28", "-44.4139, 7.10338, -125.605, 0.55", "-45.1734, 7.16703, -127.346, 0.28", "-45.485, 7.20205, -128.011, 0.55", "-47.4242, 7.45277, -131.841, 0.28", "-47.9611, 7.55738, -132.785, 0.55", "-52.9441, 9.01939, -140.418, 0.28", "-53.39, 9.15677, -141.108, 0.55", "-54.3772, 9.51433, -142.695, 0.28", "-54.6876, 9.63162, -143.169, 0.55", "-56.5507, 10.4424, -145.719, 0.28", "-57.3529, 10.8222, -146.795, 0.55", "-58.0842, 11.2053, -147.647, 0.55", "-60.7236, 12.9028, -151.087, 0.55", "-61.3483, 13.3748, -151.968, 0.55", "-61.9222, 13.9145, -152.84, 0.55", "-63.8633, 16.2695, -155.878, 0.28", "-64.2104, 16.7783, -156.434, 0.55", "-65.3917, 18.8759, -158.395, 0.28", "-65.6968, 19.502, -158.876, 0.55", "-66.6565, 21.6636, -160.366, 0.28", "-67.3283, 23.2457, -161.294, 0.28", "-67.5985, 23.9339, -161.597, 0.55", "-68.278, 25.6156, -162.344, 0.28", "-68.5001, 26.1229, -162.557, 0.55", "-69.0662, 27.4315, -163.05, 0.28", "-69.2099, 27.7752, -163.107, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-29.0657, 3.28062, -70.2366, 0.28", "-29.1778, 2.52782, -70.434, 0.28", "-29.3182, 1.85162, -70.7053, 0.83", "-29.4268, 1.31386, -70.9335, 0.28", "-29.5944, 0.395184, -71.3641, 0.83", "-29.8836, -1.22584, -72.134, 0.28", "-29.9977, -1.88464, -72.4575, 0.83", "-30.2066, -3.04483, -73.088, 0.28", "-30.3655, -3.91817, -73.5921, 0.83", "-30.5239, -4.93333, -74.2029, 0.28", "-30.5913, -5.53048, -74.5636, 0.83", "-30.6456, -6.31836, -74.9591, 0.28", "-30.6433, -6.41356, -75.0012, 0.55", "-30.597, -6.76742, -75.1143, 0.28", "-30.5418, -7.04625, -75.1772, 0.55", "-30.4315, -7.48251, -75.2424, 0.28", "-30.2349, -8.17306, -75.3322, 1.38", "-29.9437, -9.18687, -75.4456, 0.28", "-29.7595, -9.84584, -75.5203, 0.28", "-29.3938, -11.0369, -75.6023, 1.38", "-29.1586, -11.742, -75.6221, 0.28", "-29.1272, -11.8394, -75.6254, 0.55", "-28.9675, -12.3445, -75.6392, 0.28", "-28.7791, -12.9405, -75.6663, 0.55", "-28.4218, -14.1575, -75.7709, 0.28", "-28.286, -14.6416, -75.8486, 0.83", "-27.9914, -15.8692, -76.0403, 0.28", "-27.8946, -16.3654, -76.1167, 0.83", "-27.7804, -17.0921, -76.2199, 0.28", "-27.7327, -17.3786, -76.2565, 0.55", "-27.5516, -18.4167, -76.3688, 0.28", "-27.3532, -19.3945, -76.4244, 0.55", "-27.0965, -20.3914, -76.439, 1.66", "-26.7808, -21.48, -76.4401, 0.28", "-26.2937, -22.9089, -76.415, 0.83", "-25.9109, -23.863, -76.3997, 0.28", "-25.6911, -24.3219, -76.3921, 0.83", "-25.2346, -25.1089, -76.4147, 0.28", "-24.8966, -25.6163, -76.4432, 0.55", "-24.432, -26.2563, -76.4917, 0.55", "-23.6684, -27.2461, -76.5878, 0.28", "-23.3182, -27.6591, -76.6352, 0.83", "-22.6669, -28.3992, -76.7216, 0.28", "-22.6012, -28.4761, -76.729, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-40.8055, 52.276, 33.458, 0.55", "-42.1907, 55.3093, 38.1598, 0.55", "-42.5175, 55.9491, 38.9645, 0.55", "-43.0164, 56.9406, 39.9596, 0.55", "-43.1461, 57.2431, 40.218, 0.55", "-44.0838, 59.4307, 42.0861, 0.55", "-44.7589, 61.0056, 43.4311, 0.55", "-45.158, 61.81, 43.8353, 0.55", "-45.787, 63.0584, 44.4623, 0.55", "-46.4731, 64.2626, 45.0047, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-40.8055, 52.276, 33.458, 0.55", "-46.0393, 54.8065, 32.0026, 0.55", "-48.2824, 55.4474, 31.4678, 0.55", "-51.0764, 55.814, 31.0392, 0.55", "-54.3991, 56.0978, 30.5987, 0.55", "-56.8872, 56.1966, 30.2468, 0.55", "-59.2396, 56.2435, 29.8574, 0.55", "-65.4484, 56.0442, 28.6301, 0.55", "-70.4286, 55.6119, 27.72, 0.55", "-72.322, 55.3578, 27.4155, 0.55", "-74.4049, 55.0379, 27.1473, 0.55", "-77.4786, 54.4048, 26.7277, 0.55", "-80.6513, 53.7611, 26.2375, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "0.294037, -25.2147, -8.83908, 1.38", "-0.438493, -28.0859, -8.8239, 1.38", "-1.00863, -29.8567, -8.8714, 1.38", "-1.75892, -31.8135, -8.9596, 1.38", "-3.86992, -36.388, -9.20066, 1.38", "-6.24988, -41.0931, -9.45227, 1.94", "-7.80852, -44.0227, -9.58414, 1.38", "-8.54078, -45.2946, -9.66158, 1.38", "-9.94851, -47.5295, -9.81053, 1.38", "-12.3934, -51.1469, -10.0751, 1.38", "-14.1882, -53.4509, -10.2706, 1.11", "-17.4198, -57.3371, -10.485, 1.66" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "0.294037, -25.2147, -8.83908, 0.83", "1.25002, -26.8467, -9.10829, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-4.2173, -30.9639, -10.1818, 0.83", "-6.61536, -32.3747, -11.1016, 0.83", "-8.59105, -33.537, -11.8594, 1.11" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-4.2173, -30.9639, -10.1818, 0.55", "-4.65613, -31.5874, -8.94931, 0.55", "-4.72694, -31.6761, -8.76592, 0.55", "-5.9882, -32.8224, -5.95855, 0.55", "-7.73204, -33.99, -2.58893, 0.55", "-9.37031, -34.8245, 0.239147, 0.55", "-10.6932, -35.3252, 2.27277, 0.55", "-11.1446, -35.4577, 2.92784, 0.83", "-13.7137, -36.1261, 6.36977, 0.28", "-14.8535, -36.326, 7.76107, 0.55", "-16.9753, -36.6467, 9.93581, 0.55", "-19.152, -37.0424, 12.1036, 0.28", "-20.238, -37.3644, 13.2449, 0.55", "-21.2705, -37.8406, 14.4161, 0.55", "-23.3549, -39.1179, 16.8825, 0.55", "-24.7384, -40.1856, 18.6789, 0.28", "-25.9379, -41.317, 20.3344, 0.55", "-26.5894, -42.064, 21.3378, 0.55", "-27.2035, -42.7111, 22.2775, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "4.40931, 76.5413, 8.006, 0.55", "2.75062, 77.1848, 8.57001, 0.55", "1.79889, 77.6071, 8.8966, 0.83", "-0.495743, 78.7159, 9.65269, 0.28", "-2.07844, 79.4862, 10.2446, 0.55", "-3.55006, 80.2775, 10.7999, 0.28", "-4.31596, 80.7324, 11.1355, 0.55", "-5.12643, 81.3326, 11.5659, 0.28", "-6.13067, 82.2749, 12.2749, 0.55", "-7.32856, 83.562, 13.2628, 0.28", "-8.5822, 84.9624, 14.322, 0.83", "-10.1359, 86.6606, 15.6528, 0.83", "-11.2964, 87.8323, 16.6822, 0.55", "-12.9338, 89.3664, 18.1149, 0.28", "-13.7178, 90.073, 18.7939, 0.55", "-15.1763, 91.2875, 19.933, 0.28", "-15.9298, 91.8445, 20.4653, 0.83", "-17.7, 93.0624, 21.4726, 0.55", "-18.8288, 93.8357, 22.1322, 0.28", "-19.7062, 94.5306, 22.6382, 0.83", "-20.4846, 95.1843, 23.0779, 0.83", "-21.8894, 96.2886, 23.7892, 0.28", "-22.8263, 97.0289, 24.211, 0.83", "-25.5047, 99.2126, 25.3233, 0.28", "-26.4367, 99.9488, 25.6893, 0.55", "-28.7687, 101.719, 26.5392, 0.55", "-30.4191, 102.888, 27.0915, 0.28", "-31.6917, 103.68, 27.4533, 0.55", "-33.0424, 104.447, 27.7518, 0.28", "-33.787, 104.85, 27.8774, 0.55", "-34.6951, 105.354, 28.0679, 0.28", "-36.0106, 106.241, 28.4466, 0.55", "-37.266, 107.196, 28.8513, 0.28", "-38.8273, 108.439, 29.3946, 0.55", "-39.8355, 109.444, 29.7428, 0.28", "-40.4465, 110.175, 29.9584, 0.55", "-41.3151, 111.42, 30.1891, 0.28", "-41.627, 111.94, 30.2621, 0.55", "-42.0731, 112.779, 30.3475, 0.28", "-43.0224, 114.692, 30.4665, 0.55", "-44.3267, 117.284, 30.4787, 0.55", "-45.1858, 118.936, 30.4507, 0.28", "-46.1229, 120.552, 30.3491, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "4.40931, 76.5413, 8.006, 0.55", "4.5279, 78.718, 8.03333, 0.55", "4.5503, 79.8589, 8.16486, 0.55", "4.57408, 81.0617, 8.38319, 0.55", "4.68487, 83.574, 9.04605, 0.55", "4.79957, 86.6193, 9.93595, 0.55", "4.82108, 88.1804, 10.4061, 0.55", "4.86454, 91.5999, 11.5155, 0.55", "4.94167, 94.7282, 12.5106, 0.55", "4.99687, 98.5757, 13.6993, 0.55", "4.98892, 100.123, 14.1501, 0.55", "4.91289, 102.837, 14.8621, 0.55", "4.83303, 105.598, 15.5169, 0.55", "4.57932, 109.715, 16.3993, 0.55", "4.41325, 111.743, 16.7913, 0.55", "4.09519, 114.972, 17.3342, 0.55", "3.88458, 117.226, 17.7347, 0.55", "3.44908, 121.393, 18.5294, 0.55", "2.91197, 124.648, 19.2248, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "56.3582, 326.325, -105.403, 0.55", "57.9726, 327.561, -104.929, 0.55", "58.6621, 328.198, -104.696, 0.55", "60.123, 329.638, -104.252, 0.28", "60.9935, 330.53, -103.984, 0.83", "61.8016, 331.396, -103.747, 0.28", "62.879, 332.609, -103.413, 0.55", "63.885, 333.873, -103.078, 0.28", "65.7813, 336.459, -102.393, 0.83", "67.0852, 338.351, -101.917, 0.28", "68.0282, 339.729, -101.524, 0.28", "68.9869, 341.169, -101.09, 0.28", "69.3516, 341.718, -100.904, 0.55", "71.0691, 344.179, -100.014, 0.28", "71.7721, 345.254, -99.61, 0.83", "73.1787, 347.437, -98.8028, 0.28", "74.0704, 348.843, -98.3016, 0.55", "75.2951, 350.786, -97.651, 0.28", "76.1158, 352.144, -97.2323, 0.28", "77.2328, 354.124, -96.7287, 0.55", "78.267, 356.051, -96.2954, 0.28", "78.8533, 357.276, -96.0832, 0.55", "79.94, 359.585, -95.7303, 0.28", "80.47, 360.749, -95.5814, 0.83", "81.6947, 363.679, -95.0838, 0.28", "82.2245, 364.982, -94.8381, 0.55", "82.9381, 366.834, -94.4742, 0.55", "84.0188, 369.762, -93.8885, 0.28", "84.3234, 370.656, -93.6852, 0.55", "85.5906, 374.629, -92.6678, 0.28", "86.0847, 376.425, -92.1786, 0.28", "86.3231, 377.448, -91.9023, 0.55", "86.6727, 379.12, -91.4768, 0.28", "87.1438, 381.597, -91.0616, 0.55", "87.3967, 382.828, -90.958, 0.28", "87.5907, 383.708, -90.972, 0.55", "87.7859, 384.595, -91.0173, 0.28", "88.7087, 388.475, -91.2094, 0.55", "89.3586, 390.977, -91.3595, 0.55", "89.9595, 393.11, -91.4197, 0.28", "90.4893, 394.787, -91.2914, 0.28", "90.7844, 395.675, -91.1214, 0.28", "91.4513, 397.599, -90.5552, 0.55", "91.7981, 398.551, -90.1692, 0.28", "93.0369, 401.862, -88.6237, 0.83", "93.8316, 403.926, -87.6807, 0.28", "94.4234, 405.462, -86.9977, 0.55", "94.8649, 406.572, -86.5391, 0.28", "95.3444, 407.751, -86.1212, 0.28", "95.9997, 409.317, -85.6247, 0.28", "97.6615, 412.998, -84.5642, 0.83", "98.6337, 415.138, -83.9996, 0.28", "99.0466, 415.988, -83.778, 0.28", "99.7851, 417.461, -83.354, 0.28", "100.072, 418.018, -83.1734, 0.28", "101.607, 420.916, -82.1726, 0.55", "102.054, 421.716, -81.8976, 0.55", "102.796, 423.078, -81.4628, 0.55", "103.665, 424.942, -80.8715, 0.28", "104.184, 426.241, -80.4473, 0.55", "104.543, 427.338, -80.0907, 0.55", "104.775, 428.239, -79.832, 0.28", "105.16, 429.474, -79.4778, 0.55", "105.667, 430.973, -78.8705, 0.28", "106.333, 432.53, -78.074, 0.83", "107.042, 434.089, -77.2373, 0.55", "107.705, 435.436, -76.4525, 0.55", "108.795, 437.547, -75.1295, 0.55", "111.235, 441.723, -72.2605, 0.28", "112.632, 443.785, -70.7463, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "56.3582, 326.325, -105.403, 0.28", "56.3932, 327.59, -104.587, 0.28", "56.4138, 329.451, -103.407, 0.55", "56.451, 331.08, -102.289, 0.28", "56.5326, 332.187, -101.519, 0.28", "56.6602, 333.379, -100.69, 0.28", "56.8417, 334.94, -99.625, 0.55", "57.0411, 336.074, -98.7934, 0.28", "57.2397, 337.042, -98.0331, 0.55", "57.5127, 338.111, -97.0774, 0.28", "57.7227, 338.826, -96.3908, 0.55", "57.9025, 339.496, -95.7277, 0.55", "58.2202, 341.291, -94.0236, 0.28", "58.236, 342.088, -93.2594, 0.55", "58.155, 342.8, -92.6011, 0.55", "58.036, 343.372, -91.9994, 0.55", "57.8907, 344.04, -91.2311, 0.55", "57.736, 344.853, -90.2758, 0.55", "57.369, 346.68, -88.1829, 0.28", "57.3332, 346.897, -87.9351, 0.55", "57.1697, 348.946, -85.5137, 0.28", "57.1527, 350.019, -84.2823, 0.55", "57.1844, 350.949, -83.2835, 0.55", "57.2151, 351.416, -82.8303, 0.55", "57.3406, 352.635, -81.7313, 0.28", "57.5827, 354.919, -79.8455, 0.55", "57.709, 356.285, -78.9316, 0.28", "57.7861, 357.288, -78.3163, 0.28", "57.85, 358.081, -77.8411, 0.28" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-22.6012, -28.4761, -76.729, 0.28", "-22.3834, -32.8637, -78.2803, 0.28", "-22.5095, -34.1621, -78.9246, 0.83", "-22.9477, -36.3395, -80.1224, 0.28", "-23.6081, -37.6245, -81.0469, 0.55", "-25.095, -39.6889, -82.6011, 0.28", "-26.444, -41.3627, -83.8367, 0.55", "-28.9239, -43.4719, -85.6487, 0.28", "-30.6086, -44.6484, -86.7477, 0.83", "-35.1913, -47.3532, -89.3586, 0.28", "-36.9393, -48.3505, -90.2348, 0.55", "-37.9434, -48.9585, -90.6633, 0.28", "-38.9141, -49.648, -91.0861, 0.55", "-41.1895, -51.5712, -91.8623, 0.28", "-41.6867, -52.0563, -92.0097, 0.55", "-42.7469, -53.4866, -92.2019, 0.28", "-43.9297, -55.3834, -92.4263, 0.55", "-45.5379, -58.4055, -92.6416, 0.28", "-46.2106, -59.9778, -92.896, 0.83", "-47.0481, -62.1418, -93.3488, 0.28", "-47.5869, -63.5501, -93.7664, 0.55", "-48.2101, -65.1824, -94.3638, 0.28", "-48.6844, -66.4887, -94.8513, 0.55", "-50.3382, -71.4043, -96.5382, 0.28", "-50.8248, -72.8443, -96.9675, 0.83", "-51.2152, -73.8813, -97.1943, 0.28", "-51.6796, -75.0414, -97.3999, 0.55", "-52.8848, -77.6585, -97.6405, 0.28", "-53.4269, -78.8032, -97.6422, 0.55", "-54.6613, -81.4633, -97.3635, 0.28", "-55.2472, -82.7337, -97.3364, 0.55", "-56.849, -86.0287, -97.455, 0.28", "-57.8683, -87.9939, -97.6961, 0.83", "-58.9846, -90.1897, -98.0816, 0.28", "-59.4408, -91.2116, -98.2406, 0.55", "-60.8495, -94.9158, -98.7747, 0.28", "-61.6019, -97.6522, -98.9767, 0.55", "-62.1041, -100.057, -98.9903, 0.28", "-62.4222, -101.866, -99.0619, 0.83", "-63.1469, -106.072, -99.2579, 0.28", "-63.3115, -107.12, -99.2814, 0.55", "-63.8837, -111.2, -99.1949, 0.28", "-64.0082, -112.089, -99.1994, 0.55", "-64.6665, -115.845, -99.2567, 0.28", "-65.0748, -117.386, -99.3264, 0.55", "-65.6496, -119.051, -99.4058, 0.28", "-66.0919, -120.445, -99.3856, 0.55", "-66.4256, -121.704, -99.2816, 0.28", "-66.7309, -123.184, -99.2051, 0.55", "-67.1054, -125.305, -99.1044, 0.28", "-67.5535, -127.807, -99.0176, 0.55", "-68.2205, -131.102, -98.9142, 0.28", "-68.8426, -134.079, -98.7973, 0.55", "-69.9781, -138.542, -98.6002, 0.28", "-70.3455, -139.758, -98.5251, 0.55", "-71.3605, -142.37, -98.2635, 0.28", "-72.2967, -144.165, -97.926, 0.28", "-72.8583, -144.938, -97.6553, 0.55", "-74.1468, -146.46, -96.8999, 0.28", "-75.6969, -148.051, -95.8989, 0.55", "-78.2359, -150.815, -94.3354, 0.28", "-79.1926, -151.947, -93.7798, 0.83", "-81.3045, -154.686, -92.5353, 0.28", "-82.9331, -156.992, -91.5704, 0.28", "-84.4066, -159.269, -90.7437, 0.55", "-86.5642, -162.801, -89.6988, 0.28", "-88.0709, -165.535, -88.8323, 0.55", "-89.2723, -168.064, -88.0263, 0.28", "-89.8184, -169.627, -87.4018, 0.55", "-90.3953, -172.014, -86.0695, 0.28", "-90.6878, -173.68, -85.024, 0.55", "-91.1482, -177.229, -82.2618, 0.28", "-91.1953, -178.88, -80.7687, 0.55", "-90.8468, -182.747, -76.7972, 0.28", "-90.359, -185.146, -73.9807, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-22.6012, -28.4761, -76.729, 0.28", "-20.7511, -29.0526, -77.4291, 0.28", "-19.823, -29.458, -77.7813, 0.55", "-17.991, -30.3813, -78.4665, 0.28", "-17.5799, -30.5899, -78.6099, 0.55", "-15.8386, -31.4928, -79.2035, 0.28", "-14.645, -32.1477, -79.6364, 0.55", "-12.9846, -33.1918, -80.2621, 0.28", "-12.0021, -33.843, -80.6399, 0.55", "-9.93393, -35.292, -81.441, 0.28", "-9.66962, -35.4745, -81.5333, 0.55", "-7.34244, -37.068, -82.2534, 0.28", "-6.94485, -37.317, -82.3362, 0.55", "-5.22887, -38.2598, -82.5641, 0.28", "-4.02261, -38.8785, -82.6754, 0.83", "-2.32927, -39.7004, -82.7829, 0.28", "-1.37182, -40.1745, -82.8551, 0.55", "1.68128, -41.8153, -83.0752, 0.28", "2.73906, -42.4192, -83.047, 0.55", "4.03278, -43.1662, -82.9353, 0.28", "5.50214, -43.9972, -82.7759, 0.55", "8.53954, -45.8782, -82.4133, 0.28", "10.2318, -46.9332, -82.0585, 0.55", "14.627, -49.6931, -80.9063, 0.28", "15.1744, -50.036, -80.7162, 0.55", "16.7734, -51.0181, -80.0616, 0.28", "18.6577, -52.2162, -79.2504, 0.83", "22.4296, -54.6174, -77.6021, 0.28", "23.7596, -55.5349, -77.0856, 0.55", "25.9774, -57.2942, -76.3854, 0.28", "26.5421, -57.786, -76.2329, 0.83", "30.173, -61.1653, -75.4394, 0.28", "31.2146, -62.1906, -75.3265, 0.83", "33.1012, -64.2428, -75.3954, 0.28", "34.2268, -65.5151, -75.5077, 0.55", "35.9092, -67.4331, -75.8287, 0.28", "36.3837, -68.0099, -75.988, 0.83", "38.3839, -70.6256, -77.1164, 0.28", "38.9298, -71.4315, -77.5625, 0.55", "39.5881, -72.4869, -78.2528, 0.28", "39.8782, -72.9809, -78.6173, 0.55", "41.5998, -76.2314, -81.1299, 0.28", "41.9254, -77.0716, -81.9072, 0.55", "42.4602, -78.7473, -83.6108, 0.28", "42.6117, -79.2655, -84.1565, 0.83", "43.3032, -81.8567, -86.9852, 0.28", "43.3952, -82.2261, -87.3962, 0.55", "44.3509, -86.63, -92.3174, 0.28", "44.6874, -88.2684, -94.1267, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-17.4198, -57.3371, -10.485, 1.38", "-19.0964, -58.6721, -12.3213, 1.38", "-20.563, -59.673, -14.237, 1.38", "-21.2554, -60.1491, -15.2199, 1.11", "-22.7279, -61.2448, -17.3063, 1.38", "-25.5942, -63.3884, -21.0603, 1.38", "-27.2368, -64.7128, -23.1041, 1.38", "-30.9448, -68.1982, -28.4244, 1.38", "-32.7105, -70.234, -31.2106, 1.38", "-33.7572, -71.6248, -32.8912, 1.38", "-35.0943, -73.5612, -34.9264, 1.38", "-36.6713, -75.7912, -36.8922, 1.38", "-40.3167, -81.2365, -41.2138, 1.38", "-41.6185, -83.1798, -42.5094, 1.38", "-43.3863, -85.4372, -44.02, 1.38", "-46.006, -88.4809, -46.1302, 1.94", "-47.2905, -89.9409, -47.0994, 1.94", "-49.2409, -91.9254, -48.4436, 0.28", "-49.9059, -92.5801, -48.7715, 0.28", "-51.9522, -94.6931, -49.9292, 1.38", "-53.152, -96.0708, -50.6403, 0.28", "-54.4914, -97.7154, -51.3926, 1.11", "-57.141, -100.768, -53.2779, 0.28", "-58.9454, -102.698, -54.6639, 1.38", "-61.13, -104.744, -56.5721, 0.55", "-63.5092, -106.625, -58.7656, 0.83", "-65.0548, -107.562, -60.083, 0.83", "-69.9724, -110.029, -63.9348, 0.28", "-71.1682, -110.575, -64.7857, 0.83", "-74.0256, -111.802, -67.1452, 0.83", "-75.298, -112.306, -68.2093, 0.83", "-77.2884, -112.941, -69.9093, 0.55", "-79.1407, -113.59, -71.4063, 0.28", "-80.7913, -114.283, -72.6315, 1.66", "-86.3424, -116.684, -77.0102, 0.28", "-88.239, -117.591, -78.5863, 0.83", "-90.5206, -118.769, -80.6205, 0.28", "-91.688, -119.399, -81.7334, 0.83", "-94.0838, -120.706, -84.0152, 0.28", "-96.6686, -122.361, -86.3659, 1.94", "-98.0987, -123.552, -87.4769, 0.28", "-99.2347, -124.789, -88.3917, 0.83", "-100.597, -126.544, -89.4444, 0.28", "-101.496, -127.79, -90.0947, 0.28", "-102.865, -129.971, -90.9176, 1.38", "-104.308, -132.403, -91.6505, 0.28", "-105.238, -133.857, -92.0232, 0.28", "-106.994, -136.286, -92.5884, 0.55", "-108.009, -137.446, -92.8312, 0.28", "-110.006, -139.435, -93.5817, 0.83", "-111.33, -140.717, -94.2197, 0.28", "-112.162, -141.544, -94.6686, 0.55", "-113.024, -142.384, -95.1814, 0.28", "-114.964, -144.435, -96.4693, 1.11", "-118.33, -148.748, -99.0742, 0.28", "-119.241, -150.3, -100.131, 0.28", "-120.025, -152.011, -101.236, 0.28", "-120.315, -152.824, -101.745, 0.83", "-120.791, -154.322, -102.816, 0.28", "-121.837, -157.76, -105.571, 0.83", "-123.733, -163.408, -110.61, 0.55", "-124.504, -165.487, -112.738, 0.55", "-125.567, -168.217, -115.733, 0.28", "-127.759, -173.01, -121.328, 0.83", "-128.745, -174.802, -123.761, 0.83", "-130.168, -177.09, -127.157, 0.83", "-131.44, -179.028, -129.97, 0.28", "-132.203, -180.14, -131.499, 0.83", "-133.276, -181.808, -133.333, 1.11", "-136.145, -187.307, -137.242, 0.28", "-137.184, -189.826, -138.621, 0.55", "-138.051, -192.567, -139.739, 0.55", "-138.799, -195.972, -140.788, 0.55", "-139.419, -200.19, -142.064, 0.55", "-139.571, -201.892, -142.526, 0.55", "-139.799, -205.579, -143.599, 0.28", "-139.874, -207.381, -144.453, 0.83", "-139.948, -209.614, -145.738, 0.28", "-140.076, -212.895, -147.781, 0.55", "-140.177, -214.754, -148.963, 0.55", "-140.321, -218.599, -151.403, 0.55", "-140.454, -221.978, -153.411, 0.55", "-140.554, -224.259, -154.748, 1.11", "-140.683, -226.053, -155.732, 0.28", "-140.956, -229.102, -157.222, 0.83", "-141.258, -231.361, -158.268, 0.28", "-141.623, -233.154, -159.064, 0.28", "-142.363, -235.918, -160.493, 0.55", "-143.052, -238.196, -161.821, 0.28", "-143.882, -240.765, -163.369, 0.28", "-144.305, -242.066, -164.177, 0.83", "-145.053, -244.777, -165.837, 0.28", "-145.721, -247.415, -167.555, 0.83", "-146.377, -250.602, -169.717, 0.83", "-146.652, -252.614, -171.077, 0.83", "-146.824, -255.667, -172.95, 0.28", "-146.765, -258.476, -174.498, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-17.4198, -57.3371, -10.485, 0.55", "-18.2279, -57.6515, -10.02, 0.55", "-19.2946, -58.0743, -9.45025, 0.28", "-20.5997, -58.5159, -8.80188, 0.55", "-21.5435, -58.7573, -8.39025, 0.28", "-25.658, -59.5013, -6.59544, 0.55", "-27.6035, -59.7778, -5.74564, 0.55", "-29.218, -59.9074, -5.05383, 0.55", "-31.4121, -59.9776, -4.16567, 0.55", "-33.3216, -60.0663, -3.47123, 0.55", "-36.5301, -60.269, -2.40762, 0.28", "-38.1398, -60.3745, -1.95933, 0.55", "-40.6827, -60.6135, -1.18849, 0.55", "-43.4532, -61.0181, -0.280945, 0.83", "-46.7859, -61.7847, 1.02496, 0.55", "-48.5581, -62.3414, 1.91097, 0.28", "-49.1588, -62.5537, 2.25434, 0.55", "-50.8953, -63.185, 3.5593, 0.28", "-51.8541, -63.5325, 4.47715, 0.55", "-54.1456, -64.2059, 6.89384, 0.83", "-55.8312, -64.5539, 8.69757, 0.55", "-56.8605, -64.7401, 9.71625, 0.55", "-59.1507, -65.0914, 11.9663, 0.55", "-61.1369, -65.3104, 13.7753, 0.28", "-62.88, -65.3761, 15.2164, 1.38", "-63.7877, -65.3713, 15.8769, 0.28", "-65.1061, -65.3206, 16.7532, 0.83", "-68.9388, -65.0865, 19.258, 0.28", "-71.3628, -64.8277, 20.8648, 0.55", "-72.7201, -64.6352, 21.8036, 0.28", "-73.7424, -64.5233, 22.5152, 0.55", "-74.5279, -64.4502, 23.0287, 0.28", "-76.1621, -64.3861, 24.0893, 0.83", "-78.2186, -64.41, 25.276, 0.28", "-80.5138, -64.6747, 26.8855, 0.55", "-82.5024, -65.0818, 28.4338, 0.55", "-83.3469, -65.3466, 29.1234, 0.55", "-85.4964, -66.2904, 31.1193, 0.28", "-86.5382, -66.8652, 32.2013, 0.83", "-88.3377, -68.0198, 34.5448, 0.28", "-88.6057, -68.2101, 34.9892, 0.28", "-89.7721, -68.9282, 37.0595, 0.55", "-91.2534, -69.8715, 39.7519, 0.28", "-92.3083, -70.5049, 41.6518, 0.55", "-94.0838, -71.5625, 44.9377, 0.28", "-95.3665, -72.1764, 47.1889, 0.55", "-96.9434, -72.8711, 50.1055, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "1.25002, -26.8467, -9.10829, 0.55", "2.00949, -29.2702, -10.645, 0.55", "2.63219, -31.2572, -11.905, 0.83", "3.52491, -34.1059, -13.7113, 0.83", "4.20713, -36.2828, -15.0917, 1.11" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "1.25002, -26.8467, -9.10829, 0.55", "1.20832, -25.6006, -11.4709, 0.55", "0.983877, -24.4998, -14.1695, 0.55", "0.87858, -24.192, -14.98, 0.55", "0.498099, -23.5565, -17.0669, 0.55", "-1.79305, -20.8592, -27.2889, 0.55", "-2.34767, -20.2062, -29.7634, 0.55", "-4.68469, -18.0116, -39.1056, 0.55", "-5.36465, -17.4739, -41.6203, 0.55", "-7.98235, -15.741, -50.7928, 0.55", "-9.31288, -15.0836, -54.9722, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-8.59105, -33.537, -11.8594, 0.83", "-10.8326, -34.194, -12.2362, 0.83", "-12.9508, -34.771, -12.603, 0.83", "-14.4831, -35.3778, -12.7894, 0.55", "-16.8617, -36.3442, -13.0644, 0.55", "-19.7157, -37.4125, -13.3651, 0.55", "-21.9014, -38.1907, -13.6626, 0.55", "-23.8968, -38.8575, -13.9958, 0.55", "-30.0666, -40.6153, -15.317, 0.55", "-34.6577, -41.7785, -16.4463, 0.55", "-36.681, -42.2542, -17.0125, 0.55", "-39.0227, -42.6442, -17.7504, 0.55", "-40.6361, -42.8034, -18.3232, 0.83", "-45.2285, -42.7874, -20.1778, 0.55", "-47.1217, -42.5049, -20.9961, 0.55", "-47.9641, -42.3354, -21.3389, 0.55", "-49.8071, -41.9592, -22.0522, 0.55", "-52.5871, -41.3316, -22.9531, 0.55", "-56.265, -40.388, -24.03, 0.55", "-58.5257, -39.71, -24.5013, 0.55", "-59.8849, -39.306, -24.776, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-8.59105, -33.537, -11.8594, 0.55", "-8.99765, -33.3323, -11.8579, 0.55", "-10.6691, -32.6216, -11.7713, 0.55", "-13.3685, -31.6469, -11.6803, 0.55", "-14.9545, -31.0947, -11.3544, 0.55", "-17.033, -30.4119, -10.756, 0.83", "-20.161, -29.4887, -9.78149, 0.55", "-22.2176, -28.8583, -9.08852, 0.55", "-23.7205, -28.3821, -8.5158, 0.55", "-29.8246, -26.6238, -5.86735, 0.55", "-33.8319, -25.5546, -4.06597, 0.55", "-36.8581, -24.8766, -2.69087, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "2.91197, 124.648, 19.2248, 0.28", "1.98387, 125.074, 19.2648, 0.28", "0.752679, 125.745, 19.3195, 0.55", "-0.678548, 126.553, 19.3832, 0.28", "-1.60861, 127.129, 19.4381, 0.83", "-2.48603, 127.685, 19.5136, 0.28", "-3.27079, 128.209, 19.5793, 0.83", "-4.54065, 129.156, 19.6892, 0.55", "-5.6742, 130.098, 19.7173, 0.55", "-6.927, 131.108, 19.6427, 0.28", "-7.82382, 131.855, 19.3975, 0.55", "-8.51366, 132.429, 19.1231, 0.28", "-9.1546, 133.048, 18.8212, 0.83", "-10.498, 134.397, 18.1687, 0.28", "-11.506, 135.469, 17.6798, 0.83", "-13.8125, 137.994, 16.6037, 0.28", "-15.8111, 140.256, 15.6536, 0.55", "-18.4844, 143.306, 14.4958, 0.55", "-19.689, 144.688, 14.0181, 0.83", "-20.7187, 145.82, 13.6796, 0.28", "-21.6101, 146.784, 13.4224, 0.83", "-23.2744, 148.456, 13.0326, 0.28", "-25.0683, 150.08, 12.5262, 0.83", "-26.9725, 151.504, 11.9333, 0.28", "-28.2187, 152.396, 11.5201, 0.55", "-29.5186, 153.239, 11.0868, 0.28", "-29.8166, 153.416, 10.9918, 0.83", "-31.5969, 154.334, 10.5335, 0.28", "-32.8531, 154.878, 10.1298, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "2.91197, 124.648, 19.2248, 0.55", "2.89561, 128.058, 20.1622, 0.55", "2.86965, 130.122, 20.7998, 0.55", "2.81343, 133.193, 21.6805, 0.55", "2.73935, 137.239, 22.841, 0.55", "2.70113, 139.327, 23.4398, 0.55", "2.60028, 144.836, 25.0196, 0.55", "2.58373, 148.648, 25.9756, 0.55", "2.69953, 153.6, 27.2116, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-146.765, -258.476, -174.498, 0.55", "-145.806, -260.17, -174.242, 0.55", "-144.682, -262.132, -173.913, 0.55", "-143.644, -263.931, -173.593, 0.28", "-143.451, -264.25, -173.539, 0.55", "-142.595, -265.625, -173.319, 0.28", "-142.268, -266.112, -173.164, 0.55", "-141.414, -267.264, -172.47, 0.28", "-141.108, -267.633, -172.141, 0.55", "-139.982, -268.884, -170.808, 0.55", "-139.695, -269.181, -170.428, 0.83", "-137.29, -271.512, -167.199, 0.28", "-135.892, -272.786, -165.286, 0.55", "-135.794, -272.871, -165.152, 0.28", "-135.299, -273.299, -164.459, 0.83", "-133.92, -274.515, -162.406, 0.28", "-133.209, -275.16, -161.442, 0.55", "-132.911, -275.446, -161.114, 0.28", "-132.265, -276.088, -160.473, 0.28", "-131.192, -277.177, -159.344, 0.28", "-130.062, -278.388, -158.029, 0.28", "-129.648, -278.901, -157.516, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-146.765, -258.476, -174.498, 0.28", "-147.719, -260.97, -175.373, 0.28", "-148.756, -263.886, -176.31, 0.28", "-149.26, -265.345, -176.785, 0.28", "-149.665, -266.497, -177.153, 0.55", "-151.235, -270.779, -178.4, 0.28", "-151.467, -271.403, -178.541, 0.28", "-152.195, -273.281, -178.781, 0.55", "-152.698, -274.593, -178.816, 0.28", "-153.001, -275.494, -178.844, 0.55", "-153.678, -277.557, -178.872, 0.28", "-154.212, -279.328, -178.827, 0.55", "-155.299, -283.317, -178.883, 0.28", "-155.485, -284.159, -178.963, 0.55", "-156.259, -288.746, -179.562, 0.28", "-156.316, -289.41, -179.676, 0.55", "-156.347, -291.206, -180.056, 0.28", "-156.284, -292.273, -180.295, 0.55", "-155.8, -295.594, -181.001, 0.28", "-155.665, -296.258, -181.105, 0.55", "-154.714, -299.79, -181.365, 0.28", "-154.459, -300.606, -181.406, 0.55", "-153.728, -302.719, -181.452, 0.28", "-153.615, -303.003, -181.448, 0.55", "-153.136, -304.14, -181.36, 0.28", "-152.906, -304.69, -181.33, 0.55", "-151.838, -307.281, -181.284, 0.28", "-151.732, -307.557, -181.271, 0.55", "-151.142, -309.273, -181.183, 0.28", "-151.048, -309.558, -181.158, 0.55", "-150.575, -311.102, -180.985, 0.28", "-150.406, -311.675, -180.976, 0.55", "-149.638, -314.539, -181.159, 0.28", "-149.351, -315.705, -181.303, 0.55", "-149.016, -317.174, -181.555, 0.28", "-148.825, -318.094, -181.721, 0.55", "-148.086, -322.113, -182.519, 0.28", "-147.787, -324.091, -182.88, 0.28", "-147.716, -324.752, -182.994, 0.28", "-147.621, -325.693, -183.035, 0.55", "-147.357, -328.241, -182.966, 0.28", "-147.273, -328.908, -182.915, 0.55", "-146.805, -332.138, -182.522, 0.28", "-146.503, -334.018, -182.266, 0.55", "-145.304, -341.263, -181.254, 0.28", "-145.258, -341.564, -181.212, 0.55", "-144.974, -343.396, -180.938, 0.28", "-144.839, -344.635, -180.738, 0.55", "-144.712, -347.754, -180.195, 0.28", "-144.703, -349.468, -179.872, 0.28", "-144.873, -350.981, -179.563, 0.55", "-145.215, -353.091, -179.094, 0.28", "-146.049, -356.408, -178.25, 0.28", "-146.408, -357.503, -177.964, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "4.20713, -36.2828, -15.0917, 0.55", "6.57739, -38.0886, -20.0597, 0.55", "7.47182, -38.761, -21.9677, 0.55", "8.19858, -39.2861, -23.5487, 0.83", "9.72307, -40.2542, -26.8566, 0.55", "11.8765, -41.4399, -31.4539, 1.11", "13.7673, -42.3111, -35.3539, 0.55", "15.009, -42.6855, -37.6839, 0.55", "16.7264, -42.8751, -41.1274, 0.83", "17.4538, -42.7992, -42.7732, 0.55", "17.9905, -42.5995, -44.0943, 0.55", "18.8073, -42.0151, -46.2101, 0.55", "20.0859, -40.9192, -49.5071, 0.28", "21.4441, -39.6044, -52.842, 0.83", "22.6809, -38.2212, -55.9066, 0.28", "23.4476, -37.3357, -57.8045, 0.55", "23.8763, -36.7801, -58.8552, 0.28", "24.5048, -35.8289, -60.3411, 0.55", "25.5737, -34.1212, -62.4907, 0.55", "26.0398, -33.2768, -63.3203, 0.28", "26.6087, -32.3253, -64.2058, 0.55", "27.5853, -30.5314, -65.8369, 0.55", "28.478, -28.9165, -67.3342, 1.11", "30.4713, -26.1105, -69.8679, 0.55", "31.7137, -24.7808, -71.1455, 0.55", "33.1063, -23.5544, -72.4278, 0.55", "35.0067, -22.0775, -74.0449, 0.55", "37.437, -20.3344, -75.9764, 1.11", "42.0718, -17.1695, -79.4759, 0.83", "45.574, -14.8644, -82.0028, 1.11", "47.8173, -13.385, -83.6109, 0.28", "48.0712, -13.2155, -83.7964, 0.55", "49.7511, -12.188, -85.0731, 0.28", "50.6723, -11.5831, -85.9559, 0.55", "51.4873, -10.9237, -87.0389, 0.28", "52.2188, -10.2629, -88.0925, 0.55", "53.9773, -8.63416, -90.678, 0.28", "54.7696, -7.77179, -92.072, 0.83", "56.3774, -5.67056, -95.4348, 0.28", "57.663, -3.67106, -98.5013, 1.11", "58.6082, -2.06686, -100.65, 0.28", "59.1162, -1.17219, -101.679, 0.83", "61.1354, 2.39328, -105.187, 0.55", "62.3798, 4.53422, -106.919, 0.55", "63.1902, 5.88771, -107.767, 0.55", "65.5388, 9.52328, -109.667, 0.28", "66.8533, 11.4673, -110.525, 0.55", "67.8865, 12.96, -111.079, 0.55", "69.1266, 14.6318, -111.598, 0.55", "71.0578, 17.4147, -112.503, 0.55", "72.55, 19.8864, -113.458, 0.55", "73.3737, 21.4275, -114.237, 0.55", "74.1364, 22.8159, -115.016, 0.55", "74.8029, 23.9584, -115.683, 0.28", "75.4931, 25.0557, -116.368, 0.55", "76.9241, 27.1376, -117.793, 0.28", "78.3533, 29.1255, -119.267, 0.83", "79.7768, 30.8751, -120.694, 0.28", "80.5997, 31.7721, -121.503, 0.28", "81.3234, 32.5525, -122.215, 0.28", "81.711, 32.9774, -122.603, 0.28", "82.5136, 33.8181, -123.42, 0.28", "83.3825, 34.765, -124.311, 0.28", "84.1792, 35.6431, -125.144, 0.55", "85.101, 36.5116, -125.945, 0.55", "86.9896, 38.0316, -127.391, 0.55", "88.2103, 38.9454, -128.256, 0.55", "89.5862, 39.9403, -129.119, 0.28", "91.1712, 41.0725, -130.022, 0.28", "93.3607, 42.5084, -131.22, 0.28", "94.5961, 43.1955, -131.906, 0.55", "95.9728, 43.9455, -132.71, 0.28", "97.084, 44.5636, -133.427, 0.28", "97.8752, 44.962, -133.997, 0.28", "99.9227, 46.0294, -135.651, 0.55", "102.03, 47.0774, -137.55, 0.28", "103.743, 47.8801, -139.138, 0.83", "105.154, 48.5298, -140.485, 0.28", "106.489, 49.1421, -141.804, 0.83", "108.88, 50.3191, -144.108, 0.28", "110.728, 51.3394, -145.864, 0.83", "112.883, 52.6335, -147.896, 0.55", "113.89, 53.224, -148.717, 0.55", "115.85, 54.3811, -150.131, 0.83", "118.697, 55.9644, -151.857, 0.28", "120.431, 56.8021, -152.74, 0.28", "121.92, 57.5151, -153.404, 0.55", "125.781, 58.9441, -154.551, 0.55", "127.421, 59.4212, -154.921, 0.83", "129.661, 60.0942, -155.218, 0.28", "131.544, 60.6897, -155.332, 0.28", "133.61, 61.4464, -155.419, 0.83", "139.796, 64.1966, -155.658, 0.28", "141.106, 64.9, -155.767, 0.55", "146.486, 68.2437, -156.245, 0.28", "148.558, 69.7836, -156.511, 0.55", "150.698, 71.6034, -156.861, 0.28", "151.919, 72.8519, -157.174, 0.55", "153.201, 74.8128, -157.849, 0.28", "153.39, 75.2593, -158.011, 0.55", "153.805, 77.615, -158.998, 0.28", "153.814, 78.0905, -159.159, 0.55", "153.701, 79.8124, -159.57, 0.28", "153.702, 80.8389, -159.706, 0.55", "153.842, 85.7297, -160.009, 0.28", "153.898, 86.8662, -160.047, 0.55", "154.124, 90.5517, -160.08, 0.28", "154.264, 92.3437, -160.087, 0.55", "154.857, 98.6201, -160.068, 0.28", "154.911, 99.1327, -160.068, 0.55", "155.54, 102.877, -159.999, 0.28", "155.71, 103.88, -159.965, 0.55", "155.947, 105.384, -159.902, 0.28", "156.243, 107.287, -159.716, 0.55", "156.604, 110.804, -159.352, 0.28", "157.153, 115.329, -158.764, 0.55", "157.534, 117.769, -158.33, 0.28", "157.885, 119.73, -157.921, 0.55", "158.736, 123.666, -156.918, 0.28" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.20713, -36.2828, -15.0917, 0.55", "2.9647, -37.2416, -15.1039, 0.55", "2.04756, -37.9449, -15.1172, 0.55", "-0.146, -39.602, -15.074, 0.55", "-4.76932, -43.1292, -14.8293, 0.55", "-6.34548, -44.2725, -14.9027, 0.55", "-7.11228, -44.8145, -14.9626, 0.55", "-9.37979, -46.3754, -15.2306, 0.55", "-10.5722, -47.1591, -15.3702, 0.55", "-11.992, -48.0641, -15.4542, 0.83", "-16.8543, -51.2105, -15.4024, 0.28", "-17.6558, -51.6894, -15.4061, 0.28", "-18.8653, -52.3222, -15.3961, 0.55", "-20.7918, -53.2724, -15.3004, 0.28", "-23.2598, -54.4884, -15.1917, 1.11", "-27.3873, -56.6102, -14.8287, 0.55", "-29.0848, -57.536, -14.5161, 0.55", "-30.1115, -58.0668, -14.4483, 0.55", "-32.3101, -59.14, -14.4515, 0.55", "-35.2239, -60.5263, -14.6652, 0.83", "-36.7909, -61.2792, -14.8145, 0.55", "-38.1321, -61.9976, -14.865, 0.55", "-43.0875, -64.9406, -14.813, 0.28", "-44.216, -65.6398, -14.7317, 0.55", "-46.5997, -67.0395, -14.3933, 0.28", "-48.1439, -67.9835, -13.9847, 0.83", "-49.7474, -69.0735, -13.3739, 0.28", "-50.9952, -70.1633, -12.6086, 0.28", "-51.994, -71.3079, -11.5895, 0.28", "-52.4155, -71.8221, -11.1123, 0.55", "-53.0038, -72.54, -10.43, 0.55", "-54.1559, -73.8497, -9.22031, 0.28", "-55.2379, -74.9836, -8.18466, 0.83", "-57.1246, -76.892, -6.45652, 0.28", "-57.913, -77.5918, -5.84396, 0.55", "-59.65, -79.0187, -4.48253, 0.28", "-60.7623, -79.8695, -3.6069, 0.83", "-62.0183, -80.7301, -2.62361, 0.28", "-62.3438, -80.9405, -2.34756, 0.55", "-64.7796, -82.4508, -0.060719, 0.28", "-67.1306, -83.889, 2.15266, 0.83", "-68.1888, -84.5203, 3.17982, 0.28", "-68.7841, -84.8465, 3.63208, 0.55", "-70.2053, -85.5569, 4.53015, 0.28", "-71.286, -86.0529, 5.13862, 0.55", "-74.0659, -87.2304, 6.56513, 0.28", "-74.9092, -87.5163, 6.8652, 0.55", "-79.3628, -88.7839, 8.2927, 0.28", "-80.2646, -89.0094, 8.57532, 0.55", "-82.3827, -89.4526, 9.23838, 0.28", "-84.5518, -89.8102, 9.9832, 0.55", "-87.6016, -90.0778, 11.1359, 0.28", "-89.7746, -90.1509, 11.98, 0.28", "-91.5618, -90.0559, 12.7615, 0.83", "-92.7431, -89.9146, 13.247, 0.28", "-93.3615, -89.7607, 13.4819, 0.55", "-94.7929, -89.1834, 14.0782, 0.28", "-94.969, -89.0854, 14.1784, 0.55", "-95.8986, -88.4872, 14.7158, 0.28", "-96.9337, -87.8059, 15.3546, 0.55", "-98.5361, -86.7623, 16.5345, 0.28", "-99.7239, -85.9239, 17.5708, 0.55", "-101.554, -84.5547, 19.37, 0.28", "-101.756, -84.4002, 19.5785, 0.55", "-102.632, -83.7214, 20.5369, 0.28", "-104.328, -82.3638, 22.4631, 0.55", "-106.065, -80.8826, 24.5152, 0.28", "-106.197, -80.7666, 24.6673, 0.55", "-106.761, -80.2729, 25.285, 0.28", "-107.266, -79.8703, 25.8069, 0.83", "-108.771, -78.8149, 27.2448, 0.28", "-109.283, -78.5402, 27.6725, 0.55", "-110.368, -78.1239, 28.5442, 0.28", "-110.532, -78.0598, 28.6768, 0.55", "-111.903, -77.5417, 29.7932, 0.28", "-112.334, -77.3512, 30.2281, 0.55", "-113.351, -76.8844, 31.4308, 0.28", "-114.298, -76.4069, 32.6394, 0.55", "-115.619, -75.6805, 34.475, 0.28", "-116.01, -75.4611, 35.0414, 0.55", "-118.01, -74.2707, 38.0854, 0.28", "-118.44, -74.0429, 38.7537, 0.55", "-119.715, -73.4873, 40.7729, 0.28", "-120.252, -73.354, 41.5994, 0.83", "-121.048, -73.2518, 42.8025, 0.28", "-121.242, -73.2427, 43.067, 0.55", "-122.343, -73.4007, 44.2203, 0.28", "-123.031, -73.5602, 44.9471, 0.55", "-124.377, -74.1708, 46.3739, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-9.31288, -15.0836, -54.9722, 0.28", "-12.4962, -10.4734, -53.4466, 0.28", "-13.8863, -8.34218, -52.7404, 0.83", "-15.4416, -5.7875, -51.9381, 0.28", "-16.2559, -4.3933, -51.712, 0.55", "-17.8949, -1.45524, -51.4808, 0.55", "-18.6478, -0.0181059, -51.4404, 0.55", "-19.9145, 2.8713, -51.5575, 0.28", "-20.7182, 5.01071, -51.823, 0.83", "-22.426, 10.7866, -53.0112, 0.28", "-22.7131, 12.0568, -53.3296, 0.28", "-22.8863, 13.3168, -53.6883, 0.55", "-22.9884, 15.7141, -54.3425, 0.28", "-22.8919, 17.0232, -54.6587, 0.55", "-22.5716, 18.8706, -54.9786, 0.28", "-22.0434, 20.8421, -55.1068, 0.55", "-21.1639, 23.9679, -55.3202, 0.28", "-20.9149, 24.8193, -55.3944, 0.55", "-20.3635, 26.6586, -55.5772, 0.28", "-20.1665, 27.3366, -55.6465, 0.55", "-19.475, 29.7747, -55.8143, 0.28", "-18.9646, 31.5085, -55.9031, 0.55", "-17.6784, 36.073, -56.0811, 0.28", "-16.9223, 38.9704, -56.1639, 0.83", "-16.0563, 42.2668, -56.2403, 0.28", "-15.135, 45.7102, -56.3089, 0.55", "-14.8912, 46.6151, -56.3249, 0.55", "-14.0752, 49.6992, -56.3706, 0.28", "-13.5953, 51.6721, -56.3854, 0.55", "-13.3902, 52.5475, -56.3774, 0.55", "-12.7454, 55.4757, -56.3273, 0.28", "-12.3274, 57.7226, -56.2857, 0.55", "-11.9353, 59.9846, -56.1852, 0.55", "-11.6118, 61.8026, -56.0654, 0.28", "-11.1853, 64.3407, -55.8878, 0.55", "-10.7801, 66.7223, -55.7337, 0.28", "-10.5531, 68.1134, -55.6456, 0.55", "-10.3546, 69.3983, -55.5844, 0.55", "-9.90252, 72.509, -55.5139, 0.55", "-9.5477, 75.2138, -55.4522, 0.28", "-9.21447, 77.4448, -55.423, 0.28", "-8.92179, 79.0407, -55.3653, 0.28", "-8.65774, 80.14, -55.3139, 0.28", "-8.4696, 80.8333, -55.2453, 0.55", "-7.81976, 82.972, -54.9176, 0.28", "-7.11753, 85.3855, -54.3811, 0.55", "-6.9475, 85.9848, -54.2135, 0.55", "-6.34839, 88.1206, -53.5762, 0.28", "-5.90435, 89.9296, -53.0182, 0.55", "-5.63004, 91.1878, -52.6442, 0.55", "-5.08231, 94.0738, -51.6781, 0.28", "-4.93485, 94.9768, -51.333, 0.55", "-4.6493, 96.5907, -50.6313, 0.28", "-4.51366, 97.3904, -50.2616, 0.55", "-4.0904, 99.9468, -49.0596, 0.28", "-3.54694, 102.797, -47.7334, 0.28", "-3.35962, 103.691, -47.3954, 0.55", "-2.67759, 106.343, -46.331, 0.28", "-2.19424, 108.005, -45.6573, 0.28", "-1.47657, 110.605, -44.6591, 0.55", "-0.894225, 112.654, -43.7763, 0.28", "0.00871396, 115.644, -42.4776, 0.55", "1.54665, 120.458, -40.352, 0.55", "2.14304, 122.18, -39.4712, 0.55", "2.86219, 124.192, -38.3502, 0.55", "4.35974, 128.188, -35.6277, 0.55", "4.92462, 129.728, -34.4732, 0.55", "5.64113, 131.784, -32.9004, 0.55", "6.65982, 134.879, -30.8727, 0.55", "7.6084, 137.444, -29.2852, 0.55", "9.25162, 141.518, -27.0114, 0.55", "10.2595, 144.218, -25.8015, 0.55", "10.9017, 145.995, -25.0755, 0.55", "11.9437, 148.882, -24.0988, 0.55", "12.376, 150.087, -23.8564, 0.55", "12.7376, 151.158, -23.7204, 0.55", "13.2098, 152.946, -23.7094, 0.83", "13.5037, 154.538, -23.6658, 0.55", "13.5486, 154.983, -23.6471, 0.55", "13.4857, 156.408, -23.6153, 0.55", "13.2776, 157.99, -23.6056, 0.55", "13.0028, 159.771, -23.7063, 0.55", "12.6776, 162.038, -23.9175, 0.55", "12.5832, 162.731, -23.9981, 0.55", "12.0763, 167.152, -24.4486, 0.28", "11.9297, 168.777, -24.5964, 0.55", "11.7265, 172.258, -24.8891, 0.55", "11.6794, 174.831, -25.0811, 0.55", "11.7141, 175.471, -25.1226, 0.55", "11.9831, 177.591, -24.9617, 0.55", "12.244, 179.321, -24.5342, 0.55", "12.2905, 179.732, -24.3871, 0.55", "12.2704, 181.079, -23.8963, 0.55", "12.0604, 182.905, -23.3504, 0.55", "10.9184, 188.535, -22.0952, 0.55", "10.2478, 191.006, -21.7397, 0.55", "9.76422, 192.517, -21.5908, 0.55", "8.15102, 197.148, -21.3614, 0.55", "7.60157, 198.652, -21.3124, 0.55", "6.83567, 200.521, -21.3813, 0.55", "6.30568, 201.777, -21.6219, 0.55", "5.84521, 203.097, -21.8619, 0.55", "5.19059, 205.249, -22.0787, 0.55", "4.81063, 207.479, -21.7693, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-9.31288, -15.0836, -54.9722, 0.55", "-11.2582, -15.1051, -56.453, 0.55", "-11.9757, -15.1062, -56.9966, 0.28", "-13.5682, -15.0629, -58.6512, 0.83", "-14.6026, -14.8733, -60.48, 0.28", "-15.3906, -14.6537, -62.4825, 0.55", "-16.4318, -14.2538, -65.4981, 0.28", "-16.7633, -14.0897, -66.5943, 0.83", "-19.0469, -12.5781, -74.9245, 0.83", "-22.5662, -9.59817, -89.011, 0.83", "-25.3253, -6.51847, -101.917, 0.55", "-25.8806, -5.72655, -104.865, 0.28", "-26.0083, -5.45589, -105.715, 0.55", "-26.3589, -4.25923, -108.821, 0.28", "-26.3896, -3.77902, -109.721, 0.55", "-26.157, -1.11814, -112.663, 0.28", "-25.8971, 0.511235, -113.849, 0.28", "-25.5902, 2.30154, -115.358, 0.83", "-25.2233, 4.26103, -117.321, 0.28", "-25.0691, 5.01067, -118.188, 0.55", "-24.6424, 7.17399, -120.953, 0.28", "-24.5094, 8.27249, -122.565, 0.55", "-24.4455, 10.2534, -126.049, 0.28", "-24.5846, 11.021, -127.606, 0.55", "-24.9263, 11.7575, -129.262, 0.28", "-25.0958, 11.9092, -129.681, 0.55", "-26.0812, 12.3781, -131.51, 0.55", "-27.6134, 12.671, -133.811, 0.55", "-29.2087, 12.654, -135.996, 0.28", "-30.467, 12.4473, -137.712, 0.83", "-33.899, 11.4495, -142.45, 0.28", "-34.776, 11.0818, -143.738, 0.55", "-36.1156, 10.4026, -145.781, 0.55", "-37.837, 9.48651, -148.417, 0.83", "-39.3496, 8.66855, -150.759, 0.28", "-39.5188, 8.59177, -151.024, 0.28", "-43.3371, 7.1341, -156.732, 0.28", "-44.9011, 6.68426, -158.952, 0.83", "-47.0822, 6.28065, -161.946, 0.28", "-48.8917, 6.09045, -164.141, 0.55", "-50.8405, 6.0419, -166.35, 0.55", "-51.925, 6.07756, -167.521, 0.55", "-52.4287, 6.11321, -168.028, 0.83", "-54.6328, 6.19437, -170.209, 0.28", "-55.5629, 6.22653, -171.187, 0.55", "-58.3668, 6.30917, -174.329, 0.28", "-59.5491, 6.34048, -175.709, 0.55", "-61.9765, 6.4733, -178.683, 0.28", "-62.3937, 6.49779, -179.17, 0.55", "-66.4022, 6.72355, -183.44, 0.28", "-66.8798, 6.7552, -183.967, 0.83", "-68.8541, 6.9338, -186.025, 0.28", "-70.4957, 7.10641, -187.841, 0.55", "-74.6879, 8.09671, -192.974, 0.28", "-75.427, 8.22536, -195.527, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-59.8849, -39.306, -24.776, 0.55", "-64.9453, -38.805, -27.9762, 0.55", "-67.2155, -38.5803, -29.4118, 0.55", "-69.6638, -38.3379, -30.9601, 0.55", "-73.0128, -38.0064, -33.078, 1.11", "-74.8319, -37.8263, -34.2284, 0.55", "-78.1881, -37.494, -36.3509, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-59.8849, -39.306, -24.776, 0.55", "-60.1536, -37.724, -25.4645, 0.55", "-60.4675, -36.1317, -26.1849, 0.28", "-60.66, -35.1484, -26.6759, 0.55", "-61.0947, -33.1409, -27.7086, 0.28", "-61.4777, -31.6992, -28.4219, 0.55", "-62.6134, -27.648, -30.3296, 0.28", "-62.838, -26.9196, -30.6829, 0.55", "-63.6333, -24.5051, -31.8602, 0.28", "-63.9164, -23.6965, -32.2564, 0.55", "-65.5474, -19.215, -34.3725, 0.28", "-65.9118, -18.2077, -34.84, 0.55", "-66.8192, -15.9391, -35.7785, 0.28", "-67.2858, -14.7627, -36.2536, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-36.8581, -24.8766, -2.69087, 0.55", "-39.8999, -24.9792, -2.8443, 0.55", "-41.1174, -25.0239, -2.63504, 0.83", "-42.897, -25.0297, -2.1909, 0.55", "-44.2251, -24.971, -1.77316, 0.55", "-46.4206, -24.7874, -1.07975, 0.55", "-47.9199, -24.5945, -0.53629, 0.83", "-51.849, -23.8552, 1.19423, 0.55", "-52.7922, -23.6492, 1.67093, 0.83", "-54.6704, -23.1907, 2.62347, 0.28", "-56.6732, -22.722, 3.50691, 0.55", "-58.7501, -22.3038, 4.19935, 0.28", "-59.4746, -22.2405, 4.3682, 0.55", "-62.3195, -22.1238, 4.72151, 0.55", "-64.6507, -22.1803, 4.9374, 0.55", "-67.3104, -22.4594, 5.02003, 0.55", "-68.6972, -22.7179, 4.99558, 0.55", "-71.7855, -23.4996, 4.68458, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-36.8581, -24.8766, -2.69087, 0.55", "-37.1538, -23.6579, -2.81093, 0.55", "-37.6817, -21.8532, -2.91106, 0.28", "-38.0491, -20.6129, -2.96711, 0.55", "-38.8681, -17.837, -3.12353, 0.55", "-40.1534, -13.7125, -3.4528, 0.55", "-40.9458, -11.3661, -3.65578, 0.55", "-41.8003, -8.83108, -3.85553, 0.28", "-42.6699, -6.05483, -4.08596, 0.28", "-43.1411, -4.25052, -4.31771, 0.28", "-43.4556, -2.74175, -4.66755, 0.55", "-43.8294, -0.31602, -5.53314, 0.55", "-44.0924, 2.04952, -6.44508, 0.55", "-44.2268, 4.00198, -7.33095, 0.55", "-44.3442, 6.59591, -8.55006, 0.55", "-44.378, 9.06374, -9.67414, 0.28", "-44.3922, 11.1603, -10.601, 0.55", "-44.42, 12.8502, -11.3327, 0.55", "-44.5821, 15.1723, -12.3374, 0.28", "-44.8457, 17.4263, -13.1305, 0.55", "-45.138, 19.4458, -13.6868, 0.28", "-45.6146, 22.4928, -14.3791, 0.55", "-46.1224, 25.2858, -14.9888, 0.55", "-46.8232, 28.8599, -15.8731, 0.55", "-47.5892, 32.1679, -16.8407, 0.28", "-47.9094, 33.6275, -17.4111, 0.55", "-48.0667, 34.5232, -17.8363, 0.28", "-48.2183, 35.9347, -18.629, 0.55", "-48.3465, 38.245, -20.0813, 0.28", "-48.168, 40.774, -21.9365, 0.83", "-47.6696, 44.4217, -24.9242, 0.55", "-47.0401, 47.8928, -27.6229, 0.55", "-46.4732, 50.1435, -29.2223, 0.28", "-46.159, 51.226, -29.9168, 0.55", "-44.8676, 55.6857, -32.4201, 0.28", "-44.5114, 56.7963, -32.9894, 0.55", "-43.3716, 60.7203, -34.8896, 0.55", "-42.3632, 64.0996, -36.5389, 0.28", "-41.8784, 66.0964, -37.4169, 0.55", "-41.6051, 67.8013, -38.0439, 0.28", "-41.5931, 69.4519, -38.4465, 0.55", "-41.8182, 72.1522, -39.0858, 0.28", "-42.0797, 73.4318, -39.4184, 0.55", "-42.8681, 76.1092, -40.0914, 0.28", "-43.7219, 79.0308, -40.9427, 0.55", "-44.8217, 82.9249, -42.1602, 0.28", "-45.6107, 85.6765, -43.0199, 0.55", "-46.0654, 87.8297, -43.7263, 0.28", "-46.3336, 89.2681, -44.1999, 0.28", "-46.6532, 91.9341, -45.1638, 0.55", "-46.7814, 94.1221, -45.9541, 0.28", "-46.7322, 95.3148, -46.423, 0.55", "-46.5602, 97.949, -47.2478, 0.28", "-46.2012, 101.315, -48.2028, 0.55", "-45.744, 104.19, -48.9692, 0.28", "-45.5717, 105.046, -49.1494, 0.55", "-44.66, 108.46, -49.9661, 0.28", "-43.9203, 110.569, -50.4674, 0.55", "-42.8937, 113.297, -51.205, 0.28", "-42.4513, 114.303, -51.4916, 0.55", "-40.7757, 118.074, -52.4585, 0.28", "-40.0359, 119.845, -52.8567, 0.55", "-38.7849, 123.059, -53.4204, 0.28", "-37.9389, 125.563, -53.8276, 0.55", "-37.1642, 128.104, -54.2232, 0.55", "-36.7954, 129.626, -54.4659, 0.55", "-36.2845, 131.947, -54.8568, 0.28", "-35.9346, 133.919, -55.1624, 1.11", "-35.152, 139.284, -55.9138, 0.55", "-34.7065, 142.609, -56.2926, 0.28", "-34.4273, 145.316, -56.6032, 0.55", "-34.1022, 148.797, -56.9652, 0.28", "-33.9852, 150.328, -57.1174, 0.55", "-33.7923, 153.358, -57.3476, 0.55", "-33.6378, 155.398, -57.5245, 0.28", "-33.5311, 156.329, -57.6377, 0.55", "-33.0451, 159.411, -58.071, 0.28", "-32.8688, 160.528, -58.2987, 0.55", "-32.5111, 162.781, -58.8133, 0.28", "-32.0764, 165.369, -59.5786, 0.55", "-31.3353, 168.807, -60.7576, 0.55", "-30.5563, 171.737, -61.9458, 0.28", "-29.9714, 173.694, -62.8388, 0.55", "-28.9308, 176.953, -64.271, 0.28", "-28.2557, 179.225, -65.2516, 0.55", "-27.4414, 181.932, -66.3159, 0.83", "-26.5314, 185.045, -67.4525, 0.28", "-26.4028, 185.423, -67.6067, 0.55", "-25.466, 188.118, -68.6692, 0.55", "-24.7843, 190.082, -69.4317, 0.55", "-24.036, 192.754, -70.3628, 0.28", "-23.3961, 195.601, -71.1366, 0.55", "-22.8136, 198.39, -71.6516, 0.28", "-22.2985, 200.88, -72.0178, 0.55", "-21.8311, 203.218, -72.2952, 0.28", "-21.3595, 205.601, -72.499, 0.55", "-20.5943, 210.038, -72.6951, 0.55", "-19.7999, 214.465, -72.7496, 0.28", "-19.5343, 216.038, -72.6444, 0.28", "-19.323, 217.286, -72.4999, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "2.69953, 153.6, 27.2116, 0.55", "2.11658, 154.349, 27.0797, 0.55", "2.00145, 154.497, 27.0537, 0.55", "1.6693, 154.924, 26.9786, 0.28", "1.15864, 155.58, 26.8631, 0.55", "0.64551, 156.239, 26.747, 0.28", "-0.181527, 157.302, 26.5599, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "2.69953, 153.6, 27.2116, 0.55", "3.05759, 155.167, 27.2779, 0.55", "3.28145, 156.57, 27.3355, 0.55", "3.52151, 158.022, 27.3938, 0.55", "3.8463, 160.027, 27.4791, 0.55", "4.38956, 162.982, 27.5596, 0.55", "4.53654, 163.71, 27.5719, 0.28", "4.71728, 164.795, 27.578, 0.55", "5.09897, 167.035, 27.5548, 0.55", "5.2761, 168.01, 27.5281, 0.55", "5.56384, 169.276, 27.4638, 0.55", "5.85027, 170.487, 27.3676, 0.55", "6.11982, 171.636, 27.2495, 0.83", "6.26062, 172.304, 27.172, 0.28", "6.36956, 172.97, 27.0458, 0.55", "6.43198, 173.416, 26.9404, 0.28", "6.53214, 174.299, 26.7641, 0.55", "6.70545, 175.414, 26.5624, 0.28", "6.81798, 176.013, 26.4476, 0.55", "7.24656, 178.039, 26.0703, 0.28", "7.37186, 178.516, 25.9779, 0.55", "7.82789, 179.93, 25.7122, 0.28", "8.19529, 180.833, 25.5449, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-78.1881, -37.494, -36.3509, 0.55", "-79.1958, -39.316, -38.5017, 0.55", "-81.0492, -42.4368, -42.1753, 0.28", "-81.8087, -43.5896, -43.5195, 0.55", "-82.9769, -45.1631, -45.4073, 1.38", "-84.3345, -46.7428, -47.412, 0.55", "-84.8279, -47.2017, -48.0826, 0.28", "-85.1899, -47.4394, -48.494, 0.55", "-86.1842, -47.7348, -49.3201, 0.28", "-87.0948, -47.9549, -49.9776, 0.55", "-88.6705, -48.2577, -50.9547, 0.55", "-90.9188, -48.6429, -52.324, 0.55", "-92.9501, -49.0112, -53.5783, 0.55", "-93.3954, -49.1017, -53.8504, 1.11", "-97.5589, -50.0467, -56.3281, 0.28", "-99.3226, -50.4774, -57.3378, 0.83", "-101.015, -50.8822, -58.2418, 0.28", "-102.179, -51.1743, -58.9021, 0.55", "-103.128, -51.3677, -59.4893, 0.28", "-104.507, -51.5697, -60.4338, 0.55", "-105.878, -51.6121, -61.4382, 0.28", "-106.748, -51.5977, -62.0873, 0.83", "-109.889, -51.2657, -64.2876, 0.28", "-111.463, -50.9621, -65.3664, 0.83", "-113.466, -50.3851, -66.7315, 0.28", "-114.974, -49.8437, -67.7262, 0.83", "-116.561, -49.1209, -68.6701, 0.55", "-118.387, -48.106, -69.662, 0.28", "-119.148, -47.6003, -69.9885, 0.55", "-120.272, -46.8062, -70.4438, 0.28", "-121.008, -46.2726, -70.7289, 0.55", "-123.147, -44.8938, -71.6666, 0.28", "-124.226, -44.3048, -72.2119, 0.55", "-125.918, -43.5633, -73.1663, 0.28", "-126.248, -43.4444, -73.3364, 0.55", "-127.227, -43.1865, -73.7927, 0.28", "-130.055, -42.7641, -75.0488, 0.55", "-131.524, -42.7044, -75.6615, 0.28", "-133.045, -42.7976, -76.2265, 0.83", "-136.468, -43.3649, -77.3819, 0.28", "-137.723, -43.6562, -77.7439, 0.55", "-139.596, -44.2217, -78.2403, 0.28", "-141.553, -44.9357, -78.7021, 0.83", "-143.757, -45.8162, -79.2627, 0.55", "-145.536, -46.5829, -79.7196, 0.28", "-146.446, -47.0219, -79.9159, 0.55", "-147.928, -47.7146, -80.1548, 0.28", "-149.165, -48.2968, -80.158, 0.55", "-151.133, -49.3379, -79.8624, 0.28", "-152.55, -50.1388, -79.4253, 0.55", "-154.988, -51.6876, -78.3638, 0.28", "-155.842, -52.2971, -77.9421, 0.55", "-158.208, -54.0911, -76.6185, 0.28", "-158.646, -54.4462, -76.3638, 0.83", "-160.162, -55.6584, -75.468, 0.28", "-160.7, -56.1236, -75.1911, 0.55", "-162.337, -57.5795, -74.4296, 0.28", "-162.731, -57.9098, -74.2686, 0.55", "-165.092, -59.8671, -73.3905, 0.28", "-166.6, -61.0718, -72.8286, 0.55", "-168.671, -62.7118, -72.0344, 0.28", "-170.318, -64.0057, -71.3982, 0.55", "-171.786, -65.1758, -70.8352, 0.28", "-172.077, -65.4146, -70.7206, 0.55", "-173.259, -66.406, -70.2796, 0.28", "-174.389, -67.3512, -69.8386, 0.55", "-175.007, -67.8166, -69.5829, 0.28", "-175.717, -68.3601, -69.2524, 0.55", "-177.135, -69.4708, -68.5391, 0.28", "-178.04, -70.1191, -68.0579, 0.55", "-179.244, -70.9661, -67.3593, 0.28", "-179.897, -71.3515, -66.9575, 0.55", "-180.825, -71.8708, -66.338, 0.28", "-181.44, -72.2185, -65.9344, 0.55", "-182.92, -73.0723, -65.0371, 0.28", "-184.125, -73.8484, -64.3735, 0.55", "-186.135, -75.4011, -63.3773, 0.28", "-186.716, -75.9101, -63.133, 0.55", "-187.876, -77.0257, -62.7516, 0.28", "-188.283, -77.4554, -62.6525, 0.55", "-189.557, -78.9045, -62.4942, 0.28", "-190.486, -80.0301, -62.439, 0.83", "-191.832, -81.9255, -62.3932, 0.28", "-192.328, -82.6202, -62.3674, 0.55", "-193.035, -83.6031, -62.2787, 0.28", "-193.604, -84.3948, -62.1762, 0.55", "-194.572, -85.8278, -61.9388, 1.11", "-195.823, -87.718, -61.5915, 0.28", "-196.112, -88.1783, -61.483, 0.55", "-197.241, -89.9228, -61.0233, 0.28", "-198.458, -91.8634, -60.5416, 0.55", "-199.287, -93.2292, -60.2516, 0.28", "-199.93, -94.4927, -60.1425, 0.55", "-200.335, -95.4316, -60.1391, 0.28", "-200.678, -96.4641, -60.2203, 0.55", "-201.39, -99.1145, -60.6332, 0.28", "-201.541, -99.7309, -60.7373, 0.55", "-202.544, -103.571, -61.3982, 0.28", "-202.862, -104.864, -61.6147, 0.55", "-203.267, -106.45, -61.8321, 0.28", "-203.549, -107.622, -61.957, 0.55", "-204.118, -109.491, -62.0617, 0.28", "-204.423, -110.295, -62.0705, 0.55", "-204.825, -111.169, -62.0082, 0.28", "-205.25, -112.061, -62.0282, 0.55", "-206.272, -114.39, -62.1778, 0.28", "-206.739, -115.514, -62.2447, 0.83", "-208.054, -118.608, -62.3877, 0.28", "-208.643, -119.943, -62.34, 0.83", "-210.177, -123.303, -61.9778, 0.28", "-211.198, -125.466, -61.6255, 0.83", "-212.333, -127.773, -61.0767, 0.28", "-212.944, -129.132, -60.6989, 0.55", "-214.037, -131.772, -59.8214, 0.28", "-214.398, -132.799, -59.4688, 0.55", "-214.731, -133.959, -59.0098, 0.28", "-214.872, -134.503, -58.7963, 0.28", "-215.565, -137.944, -57.6086, 0.28", "-215.635, -138.464, -57.4568, 0.55", "-215.969, -141.043, -56.6603, 0.28", "-216.124, -142.203, -56.1391, 0.55", "-216.29, -143.366, -55.4014, 0.28", "-216.39, -143.987, -54.9483, 0.55", "-216.707, -145.402, -53.5623, 0.28", "-217.177, -147.011, -51.7332, 0.55", "-217.678, -148.213, -49.7516, 0.28", "-217.843, -148.623, -48.9661, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-78.1881, -37.494, -36.3509, 0.28", "-81.1188, -36.1137, -39.6874, 0.28", "-81.8948, -35.6768, -40.7639, 0.55", "-82.9783, -35.0424, -42.3538, 0.28", "-83.3146, -34.7837, -43.0701, 0.55", "-83.7086, -34.4095, -44.0668, 0.28", "-84.1279, -33.9175, -45.1421, 0.55", "-85.0173, -32.4061, -48.0125, 0.28", "-85.2995, -31.8986, -48.8415, 0.55", "-86.9816, -28.8098, -53.4151, 0.28", "-87.4755, -27.9313, -54.7942, 0.55", "-88.5045, -26.1135, -57.4432, 0.28", "-88.8629, -25.4782, -58.3377, 0.55", "-90.4336, -22.7403, -61.9269, 0.28", "-90.5977, -22.4671, -62.266, 0.55", "-92.471, -19.9589, -65.0135, 0.28", "-93.8499, -18.3484, -67.1773, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_50", "dend_39", "dend_34", "dend_9", "dend_0", "dend_52", "dend_51", "dend_45", "dend_40", "dend_36", "dend_35", "dend_21", "dend_10", "dend_2", "dend_1", "dend_54", "dend_53", "dend_47", "dend_46", "dend_44", "dend_41", "dend_38", "dend_37", "dend_29", "dend_22", "dend_12", "dend_11", "dend_8", "dend_3", "dend_49", "dend_48", "dend_43", "dend_42", "dend_31", "dend_30", "dend_26", "dend_23", "dend_16", "dend_13", "dend_7", "dend_4", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_5", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_50", "dend_39", "dend_34", "dend_9", "dend_0", "dend_52", "dend_51", "dend_45", "dend_40", "dend_36", "dend_35", "dend_21", "dend_10", "dend_2", "dend_1", "dend_54", "dend_53", "dend_47", "dend_46", "dend_44", "dend_41", "dend_38", "dend_37", "dend_29", "dend_22", "dend_12", "dend_11", "dend_8", "dend_3", "dend_49", "dend_48", "dend_43", "dend_42", "dend_31", "dend_30", "dend_26", "dend_23", "dend_16", "dend_13", "dend_7", "dend_4", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_5", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_21", "dend_10", "dend_10", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_22", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_BTC_9ad0430657_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_45, id: dend_45, parent: dend_39
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_21, id: dend_21, parent: dend_9
create dend_21
public dend_21
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_29, id: dend_29, parent: dend_21
create dend_29
public dend_29
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_50, dend_39, dend_34, dend_9, dend_0, dend_52, dend_51, dend_45, dend_40, dend_36, dend_35, dend_21, dend_10, dend_2, dend_1, dend_54, dend_53, dend_47, dend_46, dend_44, dend_41, dend_38, dend_37, dend_29, dend_22, dend_12, dend_11, dend_8, dend_3, dend_49, dend_48, dend_43, dend_42, dend_31, dend_30, dend_26, dend_23, dend_16, dend_13, dend_7, dend_4, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_6, dend_5, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_50, dend_39, dend_34, dend_9, dend_0, dend_52, dend_51, dend_45, dend_40, dend_36, dend_35, dend_21, dend_10, dend_2, dend_1, dend_54, dend_53, dend_47, dend_46, dend_44, dend_41, dend_38, dend_37, dend_29, dend_22, dend_12, dend_11, dend_8, dend_3, dend_49, dend_48, dend_43, dend_42, dend_31, dend_30, dend_26, dend_23, dend_16, dend_13, dend_7, dend_4, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_6, dend_5, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_21, dend_10, dend_10, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_50(0), soma_0(0.49999995701300415)
    connect dend_39(0), soma_0(0.49999995701300415)
    connect dend_34(0), soma_0(0.49999995701300415)
    connect dend_9(0), soma_0(0.49999995701300415)
    connect dend_0(0), soma_0(0.49999995701300415)
    connect axon_0(0), soma_0(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_45(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_21(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_29(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.636547, -11.2268, 0.0, 2.0961 ) }
    soma_0 { pt3dadd( 0.598333, -10.0461, 0.0, 3.03421 ) }
    soma_0 { pt3dadd( 0.560118, -8.86534, 0.0, 4.26504 ) }
    soma_0 { pt3dadd( 0.521904, -7.68461, 0.0, 5.45891 ) }
    soma_0 { pt3dadd( 0.483689, -6.50388, 0.0, 6.32885 ) }
    soma_0 { pt3dadd( 0.445475, -5.32315, 0.0, 7.1195 ) }
    soma_0 { pt3dadd( 0.40726, -4.14242, 0.0, 7.67098 ) }
    soma_0 { pt3dadd( 0.369046, -2.96169, 0.0, 8.08337 ) }
    soma_0 { pt3dadd( 0.330831, -1.78096, 0.0, 8.48415 ) }
    soma_0 { pt3dadd( 0.292617, -0.600232, 0.0, 8.88493 ) }
    soma_0 { pt3dadd( 0.254403, 0.580499, 0.0, 9.09061 ) }
    soma_0 { pt3dadd( 0.216188, 1.76123, 0.0, 8.76211 ) }
    soma_0 { pt3dadd( 0.177974, 2.94196, 0.0, 8.30944 ) }
    soma_0 { pt3dadd( 0.139759, 4.12269, 0.0, 7.83318 ) }
    soma_0 { pt3dadd( 0.101545, 5.30342, 0.0, 7.35692 ) }
    soma_0 { pt3dadd( 0.0633304, 6.48415, 0.0, 6.86553 ) }
    soma_0 { pt3dadd( 0.0251159, 7.66488, 0.0, 6.11195 ) }
    soma_0 { pt3dadd( -0.0130985, 8.84561, 0.0, 5.27833 ) }
    soma_0 { pt3dadd( -0.051313, 10.0263, 0.0, 4.23957 ) }
    soma_0 { pt3dadd( -0.0895274, 11.2071, 0.0, 3.09571 ) }
    soma_0 { pt3dadd( -0.127742, 12.3878, 0.0, 1.86556 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 21/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 0.781648, -9.61407, 7.16, 0.83 ) }
    dend_50 { pt3dadd( 0.742819, -12.6647, 7.97826, 0.83 ) }
    dend_50 { pt3dadd( 0.874967, -14.3438, 8.63215, 0.55 ) }
    dend_50 { pt3dadd( 1.22373, -16.2843, 9.46044, 0.55 ) }
    dend_50 { pt3dadd( 1.66069, -18.0147, 10.1823, 0.55 ) }
    dend_50 { pt3dadd( 2.60283, -21.0648, 11.4007, 0.28 ) }
    dend_50 { pt3dadd( 2.87041, -21.8972, 11.7136, 0.55 ) }
    dend_50 { pt3dadd( 3.67682, -23.9107, 12.4846, 0.55 ) }
    dend_50 { pt3dadd( 4.36899, -25.5191, 13.1185, 0.55 ) }
    dend_50 { pt3dadd( 5.13654, -27.0335, 13.6477, 0.28 ) }
    dend_50 { pt3dadd( 5.67189, -28.0822, 13.9537, 0.55 ) }
    dend_50 { pt3dadd( 6.1824, -29.1976, 14.2215, 0.55 ) }
    dend_50 { pt3dadd( 6.94153, -31.1649, 14.674, 0.55 ) }
    dend_50 { pt3dadd( 7.96248, -34.2809, 15.3234, 0.55 ) }
    dend_50 { pt3dadd( 8.57957, -36.583, 15.823, 0.55 ) }
    dend_50 { pt3dadd( 9.10421, -38.9143, 16.3219, 0.55 ) }
    dend_50 { pt3dadd( 9.3286, -40.302, 16.5948, 0.55 ) }
    dend_50 { pt3dadd( 9.58279, -42.5729, 16.9927, 0.55 ) }
    dend_50 { pt3dadd( 9.64871, -43.7874, 17.1796, 0.55 ) }
    dend_50 { pt3dadd( 9.60213, -44.8515, 17.2785, 0.55 ) }
    dend_50 { pt3dadd( 9.35851, -46.7047, 17.4394, 0.55 ) }
    dend_50 { pt3dadd( 8.99796, -48.8155, 17.5661, 0.55 ) }
    dend_50 { pt3dadd( 8.94644, -49.1447, 17.5641, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 44/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -1.99836, -4.67357, -13.53, 0.83 ) }
    dend_39 { pt3dadd( -1.88427, -3.51104, -14.0114, 0.83 ) }
    dend_39 { pt3dadd( -2.23013, -1.18136, -14.718, 0.83 ) }
    dend_39 { pt3dadd( -2.55161, -0.471524, -15.7978, 0.83 ) }
    dend_39 { pt3dadd( -2.92725, 0.304073, -17.1007, 0.83 ) }
    dend_39 { pt3dadd( -3.27164, 1.01517, -18.2951, 0.83 ) }
    dend_39 { pt3dadd( -3.58648, 1.66524, -19.3871, 0.83 ) }
    dend_39 { pt3dadd( -4.18224, 2.88115, -21.5136, 0.83 ) }
    dend_39 { pt3dadd( -7.23975, 8.10892, -31.6527, 0.83 ) }
    dend_39 { pt3dadd( -7.33363, 8.24364, -31.9632, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 54/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -1.60835, 11.4702, -0.19, 1.11 ) }
    dend_34 { pt3dadd( -2.6522, 12.1318, -0.145144, 1.11 ) }
    dend_34 { pt3dadd( -4.05285, 13.0195, -0.0849569, 1.11 ) }
    dend_34 { pt3dadd( -5.313, 13.8182, -0.0308066, 1.11 ) }
    dend_34 { pt3dadd( -6.71778, 14.7085, 0.0295583, 0.83 ) }
    dend_34 { pt3dadd( -8.38537, 15.7654, 0.101217, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 60/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 0.641648, -12.0126, -8.79, 2.77 ) }
    dend_9 { pt3dadd( 0.433163, -15.6245, -8.79, 2.77 ) }
    dend_9 { pt3dadd( 0.135097, -20.7884, -8.79, 2.77 ) }
    dend_9 { pt3dadd( -0.0133525, -23.3602, -8.79, 2.77 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 64/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.358352, 12.0237, -1.3, 0.83 ) }
    dend_0 { pt3dadd( 0.280845, 17.2967, -1.03287, 0.83 ) }
    dend_0 { pt3dadd( 0.662542, 19.8863, -0.732527, 1.11 ) }
    dend_0 { pt3dadd( 1.25585, 24.2046, -0.0448983, 0.83 ) }
    dend_0 { pt3dadd( 1.7814, 28.3743, 0.686285, 0.83 ) }
    dend_0 { pt3dadd( 2.24581, 31.8019, 1.40376, 0.83 ) }
    dend_0 { pt3dadd( 3.00117, 37.3078, 2.50586, 0.83 ) }
    dend_0 { pt3dadd( 3.40938, 40.8986, 3.25863, 0.83 ) }
    dend_0 { pt3dadd( 3.74016, 43.7623, 3.83782, 0.83 ) }
    dend_0 { pt3dadd( 4.31746, 48.3527, 4.81576, 0.83 ) }
    dend_0 { pt3dadd( 5.3889, 56.6337, 6.61063, 0.83 ) }
    dend_0 { pt3dadd( 5.9174, 60.7769, 7.4657, 0.83 ) }
    dend_0 { pt3dadd( 6.21314, 63.4577, 7.85234, 0.83 ) }
    dend_0 { pt3dadd( 6.7456, 68.674, 8.44549, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 78/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.127742, 12.3878, 0.0, 0.930967 ) }
    axon_0 { pt3dadd( -0.612964, 27.38, 0.0, 0.930967 ) }
    axon_0 { pt3dadd( -1.09819, 42.3721, 0.0, 0.930967 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 81/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 8.94644, -49.1447, 17.5641, 0.55 ) }
    dend_52 { pt3dadd( 8.87505, -49.8277, 18.1044, 0.55 ) }
    dend_52 { pt3dadd( 8.77945, -50.5977, 18.6642, 0.55 ) }
    dend_52 { pt3dadd( 8.41297, -52.8658, 20.1385, 0.55 ) }
    dend_52 { pt3dadd( 8.18268, -54.3336, 21.0042, 0.55 ) }
    dend_52 { pt3dadd( 7.81301, -56.7297, 22.2729, 0.55 ) }
    dend_52 { pt3dadd( 7.54484, -58.6951, 23.2194, 0.28 ) }
    dend_52 { pt3dadd( 7.39599, -60.0148, 23.7752, 0.55 ) }
    dend_52 { pt3dadd( 7.2683, -61.4883, 24.2581, 0.55 ) }
    dend_52 { pt3dadd( 7.18621, -62.5454, 24.4952, 0.55 ) }
    dend_52 { pt3dadd( 7.09485, -63.871, 24.7254, 0.55 ) }
    dend_52 { pt3dadd( 7.02354, -64.9134, 24.9108, 0.55 ) }
    dend_52 { pt3dadd( 6.92165, -66.0905, 25.1711, 0.55 ) }
    dend_52 { pt3dadd( 6.74162, -67.5921, 25.5576, 0.55 ) }
    dend_52 { pt3dadd( 6.39034, -69.935, 26.1984, 0.55 ) }
    dend_52 { pt3dadd( 5.99901, -71.782, 26.688, 0.55 ) }
    dend_52 { pt3dadd( 5.26521, -74.8857, 27.4368, 0.55 ) }
    dend_52 { pt3dadd( 4.93721, -76.1716, 27.7133, 0.55 ) }
    dend_52 { pt3dadd( 4.37656, -78.4682, 28.1283, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_52 { pt3dadd( 4.08017, -79.8783, 28.2667, 0.55 ) }
    dend_52 { pt3dadd( 3.71146, -82.3847, 28.2475, 0.55 ) }
    dend_52 { pt3dadd( 3.55523, -83.8282, 28.1114, 0.55 ) }
    dend_52 { pt3dadd( 3.50578, -84.6629, 27.9559, 0.55 ) }
    dend_52 { pt3dadd( 3.50185, -86.2608, 27.6378, 0.55 ) }
    dend_52 { pt3dadd( 3.62189, -88.3803, 27.0942, 0.55 ) }
    dend_52 { pt3dadd( 3.69278, -89.662, 26.7204, 0.55 ) }
    dend_52 { pt3dadd( 3.79843, -91.2203, 26.2492, 0.28 ) }
    dend_52 { pt3dadd( 3.84169, -92.8681, 25.778, 0.55 ) }
    dend_52 { pt3dadd( 3.85043, -93.446, 25.6171, 0.55 ) }
    dend_52 { pt3dadd( 3.84146, -95.4326, 25.1254, 0.28 ) }
    dend_52 { pt3dadd( 3.83775, -96.74, 24.7935, 0.55 ) }
    dend_52 { pt3dadd( 3.9025, -98.3656, 24.3214, 0.55 ) }
    dend_52 { pt3dadd( 4.00407, -99.2915, 24.0651, 0.55 ) }
    dend_52 { pt3dadd( 4.11643, -100.047, 23.8884, 0.28 ) }
    dend_52 { pt3dadd( 4.35581, -101.564, 23.6025, 0.55 ) }
    dend_52 { pt3dadd( 4.79008, -104.206, 23.2377, 0.28 ) }
    dend_52 { pt3dadd( 5.07321, -105.8, 23.0282, 0.55 ) }
    dend_52 { pt3dadd( 5.31563, -107.305, 22.8922, 0.28 ) }
    dend_52 { pt3dadd( 5.68048, -109.565, 22.7752, 0.28 ) }
    dend_52 { pt3dadd( 5.81135, -110.416, 22.7913, 0.55 ) }
    dend_52 { pt3dadd( 5.94508, -111.236, 22.8682, 0.28 ) }
    dend_52 { pt3dadd( 6.11835, -112.182, 23.0282, 0.55 ) }
    dend_52 { pt3dadd( 6.64864, -114.794, 23.4814, 0.28 ) }
    dend_52 { pt3dadd( 6.83897, -115.603, 23.6123, 0.28 ) }
    dend_52 { pt3dadd( 7.29028, -117.146, 23.8707, 0.55 ) }
    dend_52 { pt3dadd( 7.76773, -118.481, 24.0963, 0.55 ) }
    dend_52 { pt3dadd( 8.57953, -120.447, 24.4137, 0.55 ) }
    dend_52 { pt3dadd( 9.01073, -121.417, 24.5478, 0.55 ) }
    dend_52 { pt3dadd( 9.80113, -123.122, 24.7167, 0.55 ) }
    dend_52 { pt3dadd( 10.3857, -124.433, 24.839, 0.55 ) }
    dend_52 { pt3dadd( 10.8391, -125.431, 24.9599, 0.55 ) }
    dend_52 { pt3dadd( 11.3444, -126.486, 25.1584, 0.55 ) }
    dend_52 { pt3dadd( 12.2068, -128.153, 25.5692, 0.55 ) }
    dend_52 { pt3dadd( 12.7031, -129.1, 25.8565, 0.55 ) }
    dend_52 { pt3dadd( 13.332, -130.217, 26.2298, 0.28 ) }
    dend_52 { pt3dadd( 14.2167, -131.81, 26.7547, 0.55 ) }
    dend_52 { pt3dadd( 14.8929, -133.036, 27.062, 0.55 ) }
    dend_52 { pt3dadd( 15.712, -134.341, 27.3303, 0.55 ) }
    dend_52 { pt3dadd( 16.7853, -135.885, 27.5624, 0.28 ) }
    dend_52 { pt3dadd( 17.563, -137.006, 27.5953, 0.55 ) }
    dend_52 { pt3dadd( 18.2281, -137.992, 27.5099, 0.55 ) }
    dend_52 { pt3dadd( 19.8653, -140.384, 27.0003, 0.55 ) }
    dend_52 { pt3dadd( 20.3896, -141.147, 26.7578, 0.55 ) }
    dend_52 { pt3dadd( 20.9926, -142.011, 26.4303, 0.55 ) }
    dend_52 { pt3dadd( 22.2609, -143.755, 25.6992, 0.55 ) }
    dend_52 { pt3dadd( 22.6885, -144.381, 25.4612, 0.55 ) }
    dend_52 { pt3dadd( 23.9295, -146.155, 24.848, 0.28 ) }
    dend_52 { pt3dadd( 24.7852, -147.377, 24.4814, 0.55 ) }
    dend_52 { pt3dadd( 26.246, -149.566, 23.9599, 0.28 ) }
    dend_52 { pt3dadd( 26.8157, -150.445, 23.8119, 0.28 ) }
    dend_52 { pt3dadd( 27.8977, -152.177, 23.6928, 0.55 ) }
    dend_52 { pt3dadd( 28.4433, -153.141, 23.6913, 0.28 ) }
    dend_52 { pt3dadd( 28.6187, -153.485, 23.7175, 0.55 ) }
    dend_52 { pt3dadd( 29.397, -155.024, 23.9023, 0.28 ) }
    dend_52 { pt3dadd( 29.9051, -155.99, 24.0212, 0.55 ) }
    dend_52 { pt3dadd( 30.9365, -157.828, 24.3447, 0.28 ) }
    dend_52 { pt3dadd( 31.5833, -158.836, 24.5276, 0.55 ) }
    dend_52 { pt3dadd( 32.048, -159.539, 24.6449, 0.55 ) }
    dend_52 { pt3dadd( 32.5082, -160.228, 24.7582, 0.55 ) }
    dend_52 { pt3dadd( 33.8618, -162.258, 25.061, 0.28 ) }
    dend_52 { pt3dadd( 34.7453, -163.653, 25.26, 0.55 ) }
    dend_52 { pt3dadd( 35.8595, -165.686, 25.5061, 0.28 ) }
    dend_52 { pt3dadd( 37.0149, -168.082, 25.7453, 0.28 ) }
    dend_52 { pt3dadd( 37.5296, -169.504, 25.8521, 0.55 ) }
    dend_52 { pt3dadd( 38.0976, -171.598, 25.8847, 0.55 ) }
    dend_52 { pt3dadd( 38.3717, -173.136, 25.8137, 0.28 ) }
    dend_52 { pt3dadd( 38.6419, -175.648, 25.5665, 0.55 ) }
    dend_52 { pt3dadd( 38.6506, -176.014, 25.526, 0.55 ) }
    dend_52 { pt3dadd( 38.6019, -178.844, 25.1215, 0.28 ) }
    dend_52 { pt3dadd( 38.5933, -180.67, 24.8229, 0.55 ) }
    dend_52 { pt3dadd( 38.6458, -182.348, 24.5772, 0.28 ) }
    dend_52 { pt3dadd( 38.685, -183.096, 24.4664, 0.55 ) }
    dend_52 { pt3dadd( 38.8318, -184.874, 24.2146, 0.55 ) }
    dend_52 { pt3dadd( 39.2508, -188.683, 23.7567, 0.28 ) }
    dend_52 { pt3dadd( 39.4022, -189.644, 23.6857, 0.55 ) }
    dend_52 { pt3dadd( 39.761, -191.833, 23.6796, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 8.94644, -49.1447, 17.5641, 0.55 ) }
    dend_51 { pt3dadd( 7.35597, -49.768, 17.5021, 0.55 ) }
    dend_51 { pt3dadd( 5.45314, -50.0689, 16.6101, 0.55 ) }
    dend_51 { pt3dadd( 4.37219, -50.0114, 15.8892, 0.55 ) }
    dend_51 { pt3dadd( 3.29049, -49.9817, 15.1791, 0.55 ) }
    dend_51 { pt3dadd( 1.93346, -49.967, 14.2513, 0.55 ) }
    dend_51 { pt3dadd( 0.930981, -49.9527, 13.5783, 0.55 ) }
    dend_51 { pt3dadd( -2.4961, -49.7173, 11.3426, 0.28 ) }
    dend_51 { pt3dadd( -3.69066, -49.6372, 10.534, 0.28 ) }
    dend_51 { pt3dadd( -5.01635, -49.5143, 9.67724, 0.55 ) }
    dend_51 { pt3dadd( -7.34872, -49.253, 8.63325, 0.55 ) }
    dend_51 { pt3dadd( -8.15376, -49.178, 8.45111, 0.55 ) }
    dend_51 { pt3dadd( -10.2568, -49.0335, 8.47656, 0.83 ) }
    dend_51 { pt3dadd( -11.9025, -48.9875, 9.06545, 0.55 ) }
    dend_51 { pt3dadd( -13.1881, -49.0053, 9.7859, 0.55 ) }
    dend_51 { pt3dadd( -17.9138, -49.3443, 13.2693, 0.55 ) }
    dend_51 { pt3dadd( -18.4961, -49.4451, 13.8457, 0.55 ) }
    dend_51 { pt3dadd( -18.8903, -49.5874, 14.3493, 0.55 ) }
    dend_51 { pt3dadd( -20.8726, -50.7634, 17.7034, 0.28 ) }
    dend_51 { pt3dadd( -21.4916, -51.2824, 18.9673, 0.55 ) }
    dend_51 { pt3dadd( -22.0243, -51.8806, 20.1876, 0.55 ) }
    dend_51 { pt3dadd( -23.3072, -53.9271, 23.3774, 0.55 ) }
    dend_51 { pt3dadd( -24.6742, -56.6963, 27.2448, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_51 { pt3dadd( -25.3904, -58.5899, 29.5771, 0.55 ) }
    dend_51 { pt3dadd( -25.6072, -59.3448, 30.4368, 0.55 ) }
    dend_51 { pt3dadd( -25.7711, -59.9336, 31.1308, 0.55 ) }
    dend_51 { pt3dadd( -25.9987, -61.171, 32.499, 0.55 ) }
    dend_51 { pt3dadd( -25.9834, -62.2572, 33.2297, 0.28 ) }
    dend_51 { pt3dadd( -25.8233, -63.5634, 33.4598, 0.28 ) }
    // Section: dend_45, id: dend_45, parent: dend_39 (entry count 6/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -7.33363, 8.24364, -31.9632, 0.83 ) }
    dend_45 { pt3dadd( -6.43782, 12.7078, -32.6886, 0.83 ) }
    dend_45 { pt3dadd( -5.55016, 17.127, -33.7289, 0.83 ) }
    dend_45 { pt3dadd( -4.90687, 20.6794, -34.6293, 0.83 ) }
    dend_45 { pt3dadd( -4.01891, 25.0847, -35.725, 0.83 ) }
    dend_45 { pt3dadd( -2.80183, 31.1708, -37.1579, 0.83 ) }
    dend_45 { pt3dadd( -1.74351, 37.058, -38.4564, 0.83 ) }
    dend_45 { pt3dadd( -1.07714, 41.1254, -39.3287, 0.83 ) }
    dend_45 { pt3dadd( -0.192827, 46.5909, -40.4618, 0.83 ) }
    dend_45 { pt3dadd( 0.859268, 53.9277, -41.861, 0.83 ) }
    dend_45 { pt3dadd( 1.60918, 59.0634, -42.7203, 0.83 ) }
    dend_45 { pt3dadd( 2.2999, 63.7312, -43.3322, 0.83 ) }
    dend_45 { pt3dadd( 3.1333, 68.4264, -43.7143, 0.83 ) }
    dend_45 { pt3dadd( 3.60141, 70.7617, -43.8921, 0.83 ) }
    dend_45 { pt3dadd( 4.51066, 74.6078, -44.2533, 0.83 ) }
    dend_45 { pt3dadd( 5.52433, 78.5252, -44.68, 0.83 ) }
    dend_45 { pt3dadd( 6.50934, 81.6987, -45.0506, 0.55 ) }
    dend_45 { pt3dadd( 8.00562, 86.0412, -45.5635, 1.11 ) }
    dend_45 { pt3dadd( 9.02851, 88.8251, -45.887, 0.83 ) }
    dend_45 { pt3dadd( 10.8057, 93.627, -46.4228, 0.83 ) }
    dend_45 { pt3dadd( 12.9804, 98.9918, -47.0088, 0.83 ) }
    dend_45 { pt3dadd( 14.6571, 102.923, -47.4153, 0.83 ) }
    dend_45 { pt3dadd( 16.8994, 108.153, -47.9056, 0.83 ) }
    dend_45 { pt3dadd( 18.69, 112.609, -48.2641, 0.83 ) }
    dend_45 { pt3dadd( 19.6346, 114.897, -48.4208, 0.83 ) }
    dend_45 { pt3dadd( 21.0138, 118.366, -48.6619, 0.83 ) }
    dend_45 { pt3dadd( 22.5249, 122.842, -49.2389, 0.83 ) }
    dend_45 { pt3dadd( 23.9437, 127.865, -50.1124, 0.83 ) }
    dend_45 { pt3dadd( 25.0003, 133.021, -51.2348, 0.83 ) }
    dend_45 { pt3dadd( 25.594, 137.027, -52.2579, 0.83 ) }
    dend_45 { pt3dadd( 26.2001, 142.313, -53.8459, 0.83 ) }
    dend_45 { pt3dadd( 26.5869, 150.811, -56.599, 0.83 ) }
    dend_45 { pt3dadd( 26.597, 151.627, -56.9328, 0.83 ) }
    dend_45 { pt3dadd( 26.5556, 158.692, -60.2629, 0.83 ) }
    dend_45 { pt3dadd( 26.5712, 161.165, -61.5348, 0.83 ) }
    dend_45 { pt3dadd( 26.6794, 164.896, -63.5301, 0.83 ) }
    dend_45 { pt3dadd( 27.1713, 171.145, -67.0247, 0.83 ) }
    dend_45 { pt3dadd( 28.5979, 179.136, -71.022, 0.83 ) }
    dend_45 { pt3dadd( 29.3143, 181.903, -72.4337, 0.83 ) }
    dend_45 { pt3dadd( 30.3717, 184.76, -73.8289, 0.83 ) }
    dend_45 { pt3dadd( 31.217, 186.708, -74.6823, 0.83 ) }
    dend_45 { pt3dadd( 33.6011, 191.642, -76.3968, 0.83 ) }
    dend_45 { pt3dadd( 37.0561, 198.531, -78.0099, 0.83 ) }
    dend_45 { pt3dadd( 38.7646, 202.388, -78.4432, 0.83 ) }
    dend_45 { pt3dadd( 40.4003, 206.963, -78.8055, 0.83 ) }
    dend_45 { pt3dadd( 41.8013, 212.34, -79.0627, 0.83 ) }
    dend_45 { pt3dadd( 42.6696, 217.624, -79.3231, 0.83 ) }
    dend_45 { pt3dadd( 43.2133, 223.807, -79.7435, 0.83 ) }
    dend_45 { pt3dadd( 43.0717, 229.06, -80.3051, 0.83 ) }
    dend_45 { pt3dadd( 42.5643, 234.048, -80.8544, 0.83 ) }
    dend_45 { pt3dadd( 42.0724, 236.739, -81.2534, 0.83 ) }
    dend_45 { pt3dadd( 40.6153, 242.828, -82.3508, 0.83 ) }
    dend_45 { pt3dadd( 39.1739, 247.82, -83.9711, 0.83 ) }
    dend_45 { pt3dadd( 38.2231, 251.24, -85.5132, 0.83 ) }
    dend_45 { pt3dadd( 37.6064, 254.519, -87.592, 0.83 ) }
    dend_45 { pt3dadd( 37.4776, 256.396, -88.9941, 0.83 ) }
    dend_45 { pt3dadd( 37.4357, 257.922, -90.2286, 0.83 ) }
    dend_45 { pt3dadd( 37.6923, 264.362, -95.8788, 0.83 ) }
    dend_45 { pt3dadd( 38.0412, 267.773, -99.2077, 1.11 ) }
    dend_45 { pt3dadd( 39.2515, 273.576, -105.432, 0.83 ) }
    dend_45 { pt3dadd( 39.814, 275.52, -107.833, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 67/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -7.33363, 8.24364, -31.9632, 0.55 ) }
    dend_40 { pt3dadd( -8.44996, 8.00561, -33.955, 0.55 ) }
    dend_40 { pt3dadd( -11.2338, 7.23697, -38.2258, 0.55 ) }
    dend_40 { pt3dadd( -12.0303, 6.97341, -39.3018, 0.55 ) }
    dend_40 { pt3dadd( -12.7848, 6.73822, -40.2809, 0.55 ) }
    dend_40 { pt3dadd( -13.4602, 6.64788, -41.2377, 0.55 ) }
    dend_40 { pt3dadd( -15.7653, 6.37362, -45.0385, 0.55 ) }
    dend_40 { pt3dadd( -16.7077, 6.21975, -46.6723, 0.55 ) }
    dend_40 { pt3dadd( -17.2431, 6.13957, -47.5646, 0.55 ) }
    dend_40 { pt3dadd( -18.7699, 5.90076, -50.4111, 0.55 ) }
    dend_40 { pt3dadd( -20.9845, 5.46108, -54.7126, 1.11 ) }
    dend_40 { pt3dadd( -23.643, 4.86359, -59.8056, 0.83 ) }
    dend_40 { pt3dadd( -24.2818, 4.72338, -61.0048, 0.83 ) }
    dend_40 { pt3dadd( -24.889, 4.60206, -62.2141, 0.83 ) }
    dend_40 { pt3dadd( -27.4775, 4.0105, -67.4692, 0.83 ) }
    dend_40 { pt3dadd( -28.0044, 3.8226, -68.4897, 0.83 ) }
    dend_40 { pt3dadd( -28.8416, 3.36062, -69.9031, 0.83 ) }
    dend_40 { pt3dadd( -29.0657, 3.28062, -70.2366, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 85/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -8.38537, 15.7654, 0.101217, 0.83 ) }
    dend_36 { pt3dadd( -9.89291, 19.3077, 2.22945, 0.83 ) }
    dend_36 { pt3dadd( -10.9093, 21.05, 3.68216, 0.83 ) }
    dend_36 { pt3dadd( -11.7064, 22.244, 4.80626, 0.83 ) }
    dend_36 { pt3dadd( -15.7595, 27.2998, 9.77167, 0.83 ) }
    dend_36 { pt3dadd( -17.6188, 29.4341, 11.783, 0.83 ) }
    dend_36 { pt3dadd( -19.8713, 31.9459, 14.1497, 0.83 ) }
    dend_36 { pt3dadd( -25.3586, 37.6841, 19.8074, 0.83 ) }
    dend_36 { pt3dadd( -27.8014, 40.1079, 22.1593, 0.83 ) }
    dend_36 { pt3dadd( -30.8987, 43.0931, 25.0483, 0.83 ) }
    dend_36 { pt3dadd( -34.8405, 46.849, 28.4977, 0.83 ) }
    dend_36 { pt3dadd( -38.5803, 50.185, 31.7769, 0.83 ) }
    dend_36 { pt3dadd( -39.5461, 51.0216, 32.5926, 0.83 ) }
    dend_36 { pt3dadd( -40.8055, 52.276, 33.458, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 99/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -8.38537, 15.7654, 0.101217, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_35 { pt3dadd( -11.3661, 14.6074, 1.87788, 0.83 ) }
    dend_35 { pt3dadd( -16.0498, 13.0749, 4.41656, 0.83 ) }
    dend_35 { pt3dadd( -17.7566, 12.4673, 5.28346, 0.83 ) }
    dend_35 { pt3dadd( -20.5692, 11.4512, 6.24783, 0.83 ) }
    dend_35 { pt3dadd( -22.1286, 10.8782, 6.61974, 0.83 ) }
    dend_35 { pt3dadd( -23.8894, 10.169, 6.95458, 0.83 ) }
    dend_35 { pt3dadd( -24.164, 10.0609, 6.98123, 0.83 ) }
    dend_35 { pt3dadd( -26.4816, 8.95254, 6.69756, 0.83 ) }
    dend_35 { pt3dadd( -30.245, 6.46512, 5.84201, 0.83 ) }
    dend_35 { pt3dadd( -32.2471, 4.72061, 5.24278, 0.83 ) }
    dend_35 { pt3dadd( -33.3043, 3.46469, 4.75329, 0.83 ) }
    dend_35 { pt3dadd( -34.9114, 1.05541, 3.79714, 0.83 ) }
    dend_35 { pt3dadd( -37.1805, -3.14951, 2.15007, 0.83 ) }
    dend_35 { pt3dadd( -37.9642, -5.03828, 1.46341, 0.83 ) }
    dend_35 { pt3dadd( -38.8251, -8.09081, 0.56311, 0.83 ) }
    dend_35 { pt3dadd( -39.9291, -13.4516, -0.84894, 0.83 ) }
    dend_35 { pt3dadd( -40.1692, -15.1251, -1.20246, 0.83 ) }
    dend_35 { pt3dadd( -40.4083, -18.3862, -1.69756, 0.83 ) }
    dend_35 { pt3dadd( -40.4873, -21.0193, -1.91493, 0.83 ) }
    dend_35 { pt3dadd( -40.4313, -24.3155, -2.14343, 0.83 ) }
    dend_35 { pt3dadd( -40.2425, -26.7809, -2.24101, 0.83 ) }
    dend_35 { pt3dadd( -39.8283, -30.2564, -2.20995, 0.83 ) }
    dend_35 { pt3dadd( -39.5061, -32.0614, -2.20357, 0.83 ) }
    dend_35 { pt3dadd( -38.5224, -36.5561, -2.64475, 0.83 ) }
    dend_35 { pt3dadd( -38.0701, -38.4022, -3.02241, 0.83 ) }
    dend_35 { pt3dadd( -37.3001, -41.5628, -4.04092, 0.83 ) }
    dend_35 { pt3dadd( -36.9923, -42.8006, -4.54813, 0.83 ) }
    dend_35 { pt3dadd( -36.3966, -45.2432, -5.68473, 0.83 ) }
    dend_35 { pt3dadd( -34.8215, -51.8887, -8.82203, 0.83 ) }
    dend_35 { pt3dadd( -34.5455, -53.2127, -9.60246, 0.83 ) }
    dend_35 { pt3dadd( -34.0572, -55.942, -11.3739, 0.28 ) }
    dend_35 { pt3dadd( -33.911, -56.8172, -11.9906, 1.38 ) }
    dend_35 { pt3dadd( -33.5325, -59.3427, -13.7427, 0.28 ) }
    dend_35 { pt3dadd( -33.2142, -61.4173, -15.123, 1.11 ) }
    dend_35 { pt3dadd( -32.0473, -67.7431, -18.7936, 0.28 ) }
    dend_35 { pt3dadd( -31.7985, -69.0312, -19.5935, 1.11 ) }
    dend_35 { pt3dadd( -31.7041, -69.4884, -19.8955, 1.11 ) }
    dend_35 { pt3dadd( -31.4617, -70.7386, -20.7361, 0.28 ) }
    dend_35 { pt3dadd( -31.3367, -71.3025, -21.104, 0.28 ) }
    dend_35 { pt3dadd( -30.9699, -72.6338, -21.7397, 0.28 ) }
    dend_35 { pt3dadd( -30.5063, -74.1004, -22.1856, 1.66 ) }
    dend_35 { pt3dadd( -29.7936, -76.3511, -23.0371, 0.28 ) }
    dend_35 { pt3dadd( -29.4863, -77.4033, -23.4874, 0.55 ) }
    dend_35 { pt3dadd( -29.0269, -79.0426, -24.2324, 0.28 ) }
    dend_35 { pt3dadd( -28.6121, -80.4001, -24.8706, 0.55 ) }
    dend_35 { pt3dadd( -27.6469, -83.6688, -27.2012, 0.28 ) }
    dend_35 { pt3dadd( -27.4801, -84.2999, -27.7625, 0.28 ) }
    dend_35 { pt3dadd( -27.1777, -85.5827, -29.0323, 0.83 ) }
    dend_35 { pt3dadd( -26.9635, -86.8604, -30.3124, 0.83 ) }
    dend_35 { pt3dadd( -26.8969, -87.6582, -31.0656, 0.83 ) }
    dend_35 { pt3dadd( -26.8616, -93.0661, -35.4233, 0.28 ) }
    dend_35 { pt3dadd( -26.9532, -94.4755, -36.2629, 0.28 ) }
    dend_35 { pt3dadd( -27.0361, -95.1004, -36.5558, 0.55 ) }
    dend_35 { pt3dadd( -27.4091, -97.1161, -37.3624, 0.28 ) }
    dend_35 { pt3dadd( -27.8632, -98.9251, -37.9728, 0.55 ) }
    dend_35 { pt3dadd( -28.3417, -100.765, -38.4536, 0.28 ) }
    dend_35 { pt3dadd( -28.6933, -102.636, -38.7313, 0.55 ) }
    dend_35 { pt3dadd( -29.0143, -104.302, -39.1216, 0.28 ) }
    dend_35 { pt3dadd( -29.4389, -106.489, -39.8408, 0.55 ) }
    dend_35 { pt3dadd( -29.6832, -107.719, -40.3197, 0.28 ) }
    dend_35 { pt3dadd( -30.221, -109.936, -41.3774, 0.83 ) }
    dend_35 { pt3dadd( -30.9129, -112.57, -42.771, 0.28 ) }
    dend_35 { pt3dadd( -31.9403, -115.953, -44.5524, 1.11 ) }
    dend_35 { pt3dadd( -32.806, -118.479, -45.9317, 0.55 ) }
    dend_35 { pt3dadd( -33.2258, -119.649, -46.5324, 0.83 ) }
    dend_35 { pt3dadd( -34.2608, -122.367, -48.1031, 0.28 ) }
    dend_35 { pt3dadd( -34.5675, -123.123, -48.5124, 0.28 ) }
    dend_35 { pt3dadd( -35.3295, -125.164, -49.615, 0.55 ) }
    dend_35 { pt3dadd( -36.0935, -128.316, -51.1852, 0.28 ) }
    dend_35 { pt3dadd( -36.3624, -129.682, -51.8958, 0.55 ) }
    dend_35 { pt3dadd( -36.9611, -133.364, -53.7967, 0.28 ) }
    dend_35 { pt3dadd( -37.4319, -136.862, -55.6558, 0.55 ) }
    dend_35 { pt3dadd( -37.8607, -139.558, -57.2398, 0.28 ) }
    dend_35 { pt3dadd( -38.0793, -140.915, -58.0816, 0.55 ) }
    dend_35 { pt3dadd( -38.685, -144.258, -60.0035, 0.28 ) }
    dend_35 { pt3dadd( -39.1468, -146.32, -61.0989, 0.55 ) }
    dend_35 { pt3dadd( -39.6676, -148.312, -61.9698, 0.55 ) }
    dend_35 { pt3dadd( -40.4152, -150.644, -62.9193, 0.28 ) }
    dend_35 { pt3dadd( -40.7649, -151.675, -63.1383, 0.55 ) }
    dend_35 { pt3dadd( -41.2747, -153.23, -63.2458, 0.28 ) }
    dend_35 { pt3dadd( -41.9115, -155.31, -63.26, 0.55 ) }
    dend_35 { pt3dadd( -42.3541, -156.788, -63.2961, 0.28 ) }
    dend_35 { pt3dadd( -42.8396, -158.489, -63.3087, 0.55 ) }
    dend_35 { pt3dadd( -43.2858, -160.279, -63.3635, 0.28 ) }
    dend_35 { pt3dadd( -43.4458, -160.94, -63.4157, 0.55 ) }
    dend_35 { pt3dadd( -44.3449, -165.057, -64.3226, 0.28 ) }
    dend_35 { pt3dadd( -44.4568, -165.708, -64.5118, 0.55 ) }
    dend_35 { pt3dadd( -44.6396, -166.962, -64.8924, 0.28 ) }
    dend_35 { pt3dadd( -44.9397, -168.95, -65.4867, 0.55 ) }
    dend_35 { pt3dadd( -45.2909, -171.067, -66.0446, 0.28 ) }
    dend_35 { pt3dadd( -45.8381, -174.815, -66.7551, 0.28 ) }
    dend_35 { pt3dadd( -46.0916, -176.722, -66.9762, 0.28 ) }
    dend_35 { pt3dadd( -46.4188, -178.855, -67.1795, 0.55 ) }
    dend_35 { pt3dadd( -47.0885, -183.379, -67.5297, 0.28 ) }
    dend_35 { pt3dadd( -47.3829, -185.309, -67.6519, 0.55 ) }
    dend_35 { pt3dadd( -47.7059, -187.718, -67.7368, 0.28 ) }
    dend_35 { pt3dadd( -47.8159, -188.58, -67.7639, 0.55 ) }
    dend_35 { pt3dadd( -48.3837, -193.543, -68.0553, 0.28 ) }
    dend_35 { pt3dadd( -48.5346, -195.392, -68.1981, 0.83 ) }
    dend_35 { pt3dadd( -48.9159, -201.872, -68.7528, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( -49.0093, -203.702, -68.9456, 0.55 ) }
    dend_35 { pt3dadd( -49.1428, -207.108, -69.4108, 0.28 ) }
    dend_35 { pt3dadd( -49.1974, -208.739, -69.6326, 0.55 ) }
    dend_35 { pt3dadd( -49.2603, -210.905, -69.8689, 0.28 ) }
    dend_35 { pt3dadd( -49.3234, -212.007, -69.9424, 0.55 ) }
    dend_35 { pt3dadd( -49.4168, -213.11, -69.9725, 0.55 ) }
    dend_35 { pt3dadd( -49.6529, -215.005, -69.9802, 0.28 ) }
    dend_35 { pt3dadd( -49.9397, -216.92, -69.892, 0.55 ) }
    dend_35 { pt3dadd( -50.7549, -221.529, -69.6878, 0.28 ) }
    dend_35 { pt3dadd( -51.2144, -223.881, -69.5535, 0.55 ) }
    dend_35 { pt3dadd( -51.6436, -226.087, -69.4956, 0.28 ) }
    dend_35 { pt3dadd( -52.0148, -227.835, -69.4793, 0.55 ) }
    dend_35 { pt3dadd( -52.3898, -229.571, -69.4284, 0.28 ) }
    dend_35 { pt3dadd( -52.646, -230.818, -69.4567, 0.55 ) }
    dend_35 { pt3dadd( -53.0095, -232.397, -69.5549, 0.28 ) }
    dend_35 { pt3dadd( -53.5756, -235.088, -69.7556, 0.55 ) }
    dend_35 { pt3dadd( -53.9917, -237.265, -69.8866, 0.28 ) }
    dend_35 { pt3dadd( -54.3708, -239.374, -70.1232, 0.83 ) }
    dend_35 { pt3dadd( -55.0834, -243.961, -70.7789, 0.28 ) }
    dend_35 { pt3dadd( -55.1635, -244.622, -70.8635, 0.55 ) }
    dend_35 { pt3dadd( -55.2894, -246.479, -71.0467, 0.28 ) }
    dend_35 { pt3dadd( -55.2775, -248.458, -71.1232, 0.55 ) }
    dend_35 { pt3dadd( -54.9936, -251.215, -71.1314, 0.28 ) }
    dend_35 { pt3dadd( -54.7852, -252.446, -71.1806, 0.55 ) }
    dend_35 { pt3dadd( -54.1735, -254.619, -71.2398, 0.28 ) }
    dend_35 { pt3dadd( -53.6055, -256.347, -71.3225, 0.28 ) }
    dend_35 { pt3dadd( -52.9809, -258.083, -71.4065, 0.55 ) }
    dend_35 { pt3dadd( -51.7119, -261.177, -71.5313, 0.28 ) }
    dend_35 { pt3dadd( -50.2595, -264.426, -71.5505, 0.55 ) }
    dend_35 { pt3dadd( -49.1197, -266.944, -71.698, 0.28 ) }
    dend_35 { pt3dadd( -48.8766, -267.493, -71.7858, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_9 (entry count 31/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -0.0133525, -23.3602, -8.79, 2.77 ) }
    dend_21 { pt3dadd( 0.294037, -25.2147, -8.83908, 2.77 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 33/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -0.0133525, -23.3602, -8.79, 0.83 ) }
    dend_10 { pt3dadd( -2.75924, -28.3267, -9.69908, 0.83 ) }
    dend_10 { pt3dadd( -4.2173, -30.9639, -10.1818, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 36/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.7456, 68.674, 8.44549, 0.55 ) }
    dend_2 { pt3dadd( 6.07391, 70.9359, 8.31914, 0.55 ) }
    dend_2 { pt3dadd( 4.93715, 74.7639, 8.1053, 0.55 ) }
    dend_2 { pt3dadd( 4.40931, 76.5413, 8.006, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.7456, 68.674, 8.44549, 0.55 ) }
    dend_1 { pt3dadd( 8.0871, 70.539, 8.93383, 0.55 ) }
    dend_1 { pt3dadd( 9.57014, 72.4571, 9.46467, 0.55 ) }
    dend_1 { pt3dadd( 10.5168, 73.6197, 9.78512, 0.55 ) }
    dend_1 { pt3dadd( 13.0645, 76.7617, 10.5973, 0.55 ) }
    dend_1 { pt3dadd( 14.7579, 79.0712, 11.1239, 0.55 ) }
    dend_1 { pt3dadd( 16.6393, 81.7963, 11.6774, 0.55 ) }
    dend_1 { pt3dadd( 18.313, 84.3928, 12.1202, 0.55 ) }
    dend_1 { pt3dadd( 19.8936, 87.1977, 12.6434, 0.55 ) }
    dend_1 { pt3dadd( 21.5909, 90.4612, 13.3034, 0.55 ) }
    dend_1 { pt3dadd( 22.8771, 93.2235, 13.9637, 0.55 ) }
    dend_1 { pt3dadd( 23.9462, 96.036, 14.6962, 0.55 ) }
    dend_1 { pt3dadd( 24.8282, 98.8028, 15.4389, 0.55 ) }
    dend_1 { pt3dadd( 25.7988, 102.475, 16.4337, 0.55 ) }
    dend_1 { pt3dadd( 26.3266, 104.77, 17.068, 0.55 ) }
    dend_1 { pt3dadd( 26.9726, 107.538, 17.8549, 0.55 ) }
    dend_1 { pt3dadd( 27.6533, 110.391, 18.6566, 0.55 ) }
    dend_1 { pt3dadd( 28.3632, 113.473, 19.4591, 0.55 ) }
    dend_1 { pt3dadd( 29.3492, 117.395, 20.3993, 0.55 ) }
    dend_1 { pt3dadd( 29.7665, 118.704, 20.6816, 0.55 ) }
    dend_1 { pt3dadd( 30.4678, 120.875, 21.2154, 0.55 ) }
    dend_1 { pt3dadd( 31.1244, 122.827, 21.7126, 0.55 ) }
    dend_1 { pt3dadd( 31.9715, 125.421, 22.5252, 0.55 ) }
    dend_1 { pt3dadd( 33.2274, 129.627, 24.1681, 0.55 ) }
    dend_1 { pt3dadd( 34.0632, 132.621, 25.5178, 0.55 ) }
    dend_1 { pt3dadd( 35.1076, 136.014, 27.1943, 0.55 ) }
    dend_1 { pt3dadd( 36.0323, 138.718, 28.5718, 0.55 ) }
    dend_1 { pt3dadd( 37.3098, 142.034, 30.2727, 0.55 ) }
    dend_1 { pt3dadd( 39.1508, 146.322, 32.4681, 0.55 ) }
    dend_1 { pt3dadd( 40.944, 150.028, 34.358, 0.55 ) }
    dend_1 { pt3dadd( 43.0122, 153.835, 36.2425, 0.55 ) }
    dend_1 { pt3dadd( 45.1556, 157.427, 37.8661, 0.55 ) }
    dend_1 { pt3dadd( 46.6851, 159.876, 38.8908, 0.55 ) }
    dend_1 { pt3dadd( 48.7322, 163.017, 39.9816, 0.55 ) }
    dend_1 { pt3dadd( 51.0674, 166.478, 40.9711, 0.55 ) }
    dend_1 { pt3dadd( 52.6425, 168.906, 41.5571, 0.55 ) }
    dend_1 { pt3dadd( 54.1567, 171.51, 42.0848, 0.55 ) }
    dend_1 { pt3dadd( 55.1123, 173.26, 42.4206, 0.55 ) }
    dend_1 { pt3dadd( 56.6789, 176.306, 42.934, 0.55 ) }
    dend_1 { pt3dadd( 57.8601, 178.813, 43.2412, 0.55 ) }
    dend_1 { pt3dadd( 58.9705, 181.146, 43.416, 0.28 ) }
    dend_1 { pt3dadd( 59.4877, 182.267, 43.5137, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 82/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.09819, 42.3721, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -1.58341, 57.3643, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -2.06863, 72.3564, 0.0, 0.28 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 85/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 39.761, -191.833, 23.6796, 0.28 ) }
    dend_54 { pt3dadd( 40.6776, -194.71, 23.1885, 0.28 ) }
    dend_54 { pt3dadd( 41.4459, -197.604, 22.6209, 0.55 ) }
    dend_54 { pt3dadd( 42.798, -202.271, 21.3677, 0.28 ) }
    dend_54 { pt3dadd( 43.5622, -204.869, 20.5771, 0.55 ) }
    dend_54 { pt3dadd( 44.7741, -209.018, 19.2586, 0.28 ) }
    dend_54 { pt3dadd( 44.875, -209.364, 19.1512, 0.55 ) }
    dend_54 { pt3dadd( 46.3233, -213.564, 17.6332, 0.28 ) }
    dend_54 { pt3dadd( 47.8648, -217.298, 16.1409, 0.55 ) }
    dend_54 { pt3dadd( 48.6109, -218.884, 15.5504, 0.55 ) }
    dend_54 { pt3dadd( 49.7844, -220.907, 14.7451, 0.55 ) }
    dend_54 { pt3dadd( 51.3815, -223.293, 13.7803, 0.55 ) }
    dend_54 { pt3dadd( 54.3743, -227.729, 12.3131, 0.28 ) }
    dend_54 { pt3dadd( 56.1242, -230.229, 11.723, 0.28 ) }
    dend_54 { pt3dadd( 57.496, -232.509, 11.462, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_54 { pt3dadd( 58.995, -235.304, 11.3258, 0.55 ) }
    dend_54 { pt3dadd( 59.7806, -236.967, 11.3736, 0.55 ) }
    dend_54 { pt3dadd( 61.4444, -241.428, 11.8043, 0.28 ) }
    dend_54 { pt3dadd( 61.8255, -242.828, 12.0178, 0.55 ) }
    dend_54 { pt3dadd( 63.1359, -248.58, 12.938, 0.28 ) }
    dend_54 { pt3dadd( 63.7791, -251.89, 13.4335, 0.28 ) }
    dend_54 { pt3dadd( 64.4362, -255.877, 13.9759, 0.28 ) }
    dend_54 { pt3dadd( 64.7892, -257.945, 14.1623, 0.55 ) }
    dend_54 { pt3dadd( 64.9383, -258.754, 14.1705, 0.55 ) }
    dend_54 { pt3dadd( 65.3909, -261.542, 14.0798, 0.28 ) }
    dend_54 { pt3dadd( 65.5201, -262.361, 14.0292, 0.55 ) }
    dend_54 { pt3dadd( 66.107, -265.423, 13.6085, 0.28 ) }
    dend_54 { pt3dadd( 66.2757, -266.125, 13.4713, 0.55 ) }
    dend_54 { pt3dadd( 67.3707, -269.792, 12.9102, 0.28 ) }
    dend_54 { pt3dadd( 68.0407, -271.831, 12.7022, 0.55 ) }
    dend_54 { pt3dadd( 68.537, -273.315, 12.5909, 0.55 ) }
    dend_54 { pt3dadd( 69.3646, -276.557, 12.6703, 0.28 ) }
    dend_54 { pt3dadd( 69.5355, -277.641, 12.7868, 0.55 ) }
    dend_54 { pt3dadd( 69.5539, -281.531, 13.2551, 0.28 ) }
    dend_54 { pt3dadd( 69.4807, -282.254, 13.346, 0.55 ) }
    dend_54 { pt3dadd( 69.1431, -284.355, 13.6643, 0.28 ) }
    dend_54 { pt3dadd( 67.9383, -289.655, 14.4877, 0.28 ) }
    dend_54 { pt3dadd( 67.6064, -290.751, 14.6976, 0.55 ) }
    dend_54 { pt3dadd( 65.7559, -296.212, 15.5117, 0.28 ) }
    dend_54 { pt3dadd( 64.7968, -298.843, 15.6796, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 25/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 39.761, -191.833, 23.6796, 0.28 ) }
    dend_53 { pt3dadd( 42.9777, -193.879, 26.0719, 0.28 ) }
    dend_53 { pt3dadd( 43.8403, -194.434, 26.5716, 0.55 ) }
    dend_53 { pt3dadd( 46.0374, -195.933, 27.7011, 0.28 ) }
    dend_53 { pt3dadd( 46.9088, -196.527, 28.149, 0.55 ) }
    dend_53 { pt3dadd( 49.119, -198.035, 29.2852, 0.28 ) }
    dend_53 { pt3dadd( 50.1368, -198.73, 29.8083, 0.55 ) }
    dend_53 { pt3dadd( 53.8363, -201.144, 31.5951, 0.28 ) }
    dend_53 { pt3dadd( 55.0947, -201.976, 32.1064, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 34/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 39.814, 275.52, -107.833, 0.83 ) }
    dend_47 { pt3dadd( 41.6519, 279.63, -107.891, 0.83 ) }
    dend_47 { pt3dadd( 43.0378, 283.029, -107.924, 0.83 ) }
    dend_47 { pt3dadd( 44.6075, 287.011, -107.964, 0.83 ) }
    dend_47 { pt3dadd( 45.8591, 290.36, -108.005, 0.28 ) }
    dend_47 { pt3dadd( 46.5974, 292.451, -108.034, 0.55 ) }
    dend_47 { pt3dadd( 47.4154, 294.855, -108.072, 0.28 ) }
    dend_47 { pt3dadd( 48.5428, 298.451, -108.069, 0.55 ) }
    dend_47 { pt3dadd( 48.932, 299.895, -108.105, 0.28 ) }
    dend_47 { pt3dadd( 49.4542, 302.509, -108.263, 0.55 ) }
    dend_47 { pt3dadd( 49.6399, 303.471, -108.347, 0.28 ) }
    dend_47 { pt3dadd( 49.9933, 305.208, -108.46, 0.83 ) }
    dend_47 { pt3dadd( 50.4664, 307.413, -108.561, 0.28 ) }
    dend_47 { pt3dadd( 51.0908, 310.008, -108.601, 0.83 ) }
    dend_47 { pt3dadd( 52.2477, 314.441, -108.393, 0.55 ) }
    dend_47 { pt3dadd( 53.1489, 317.545, -108.049, 0.28 ) }
    dend_47 { pt3dadd( 53.6935, 319.31, -107.808, 0.55 ) }
    dend_47 { pt3dadd( 53.931, 320.041, -107.676, 0.28 ) }
    dend_47 { pt3dadd( 54.6492, 322.025, -107.178, 0.55 ) }
    dend_47 { pt3dadd( 55.6405, 324.559, -106.312, 0.28 ) }
    dend_47 { pt3dadd( 56.3582, 326.325, -105.403, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 55/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 39.814, 275.52, -107.833, 0.28 ) }
    dend_46 { pt3dadd( 39.1337, 276.7, -108.461, 0.28 ) }
    dend_46 { pt3dadd( 38.647, 277.935, -109.334, 0.28 ) }
    dend_46 { pt3dadd( 38.4951, 278.337, -109.642, 0.55 ) }
    dend_46 { pt3dadd( 37.9303, 279.705, -110.669, 0.28 ) }
    dend_46 { pt3dadd( 37.4728, 280.688, -111.35, 0.55 ) }
    dend_46 { pt3dadd( 36.9964, 281.543, -112.106, 0.55 ) }
    dend_46 { pt3dadd( 35.8799, 283.237, -113.942, 0.28 ) }
    dend_46 { pt3dadd( 35.398, 283.861, -114.69, 0.28 ) }
    dend_46 { pt3dadd( 34.8102, 284.583, -115.559, 0.55 ) }
    dend_46 { pt3dadd( 34.1486, 285.41, -116.563, 0.55 ) }
    dend_46 { pt3dadd( 32.2821, 287.972, -119.802, 0.28 ) }
    dend_46 { pt3dadd( 31.9183, 288.497, -120.454, 0.55 ) }
    dend_46 { pt3dadd( 31.539, 289.055, -121.108, 0.28 ) }
    dend_46 { pt3dadd( 31.3152, 289.46, -121.567, 0.55 ) }
    dend_46 { pt3dadd( 30.4568, 291.331, -123.514, 0.28 ) }
    dend_46 { pt3dadd( 29.928, 292.846, -124.824, 0.55 ) }
    dend_46 { pt3dadd( 29.7056, 293.655, -125.35, 0.28 ) }
    dend_46 { pt3dadd( 29.5704, 294.165, -125.684, 0.55 ) }
    dend_46 { pt3dadd( 29.3897, 294.881, -126.149, 0.28 ) }
    dend_46 { pt3dadd( 29.1327, 296.058, -126.835, 0.55 ) }
    dend_46 { pt3dadd( 28.9399, 296.932, -127.267, 0.28 ) }
    dend_46 { pt3dadd( 28.6223, 298.296, -127.983, 0.28 ) }
    dend_46 { pt3dadd( 28.2619, 299.819, -128.846, 0.28 ) }
    dend_46 { pt3dadd( 27.964, 300.873, -129.466, 0.28 ) }
    dend_46 { pt3dadd( 27.756, 301.529, -129.85, 0.55 ) }
    dend_46 { pt3dadd( 27.0405, 303.615, -130.893, 0.55 ) }
    dend_46 { pt3dadd( 26.519, 305.007, -131.452, 0.83 ) }
    dend_46 { pt3dadd( 26.2077, 305.797, -131.685, 0.83 ) }
    dend_46 { pt3dadd( 25.0766, 308.588, -132.284, 0.55 ) }
    dend_46 { pt3dadd( 24.613, 309.65, -132.476, 0.83 ) }
    dend_46 { pt3dadd( 23.732, 311.618, -132.736, 0.28 ) }
    dend_46 { pt3dadd( 23.2866, 312.623, -132.789, 0.28 ) }
    dend_46 { pt3dadd( 22.994, 313.267, -132.795, 0.28 ) }
    dend_46 { pt3dadd( 22.3744, 314.597, -132.778, 0.28 ) }
    dend_46 { pt3dadd( 21.7407, 315.859, -132.726, 0.55 ) }
    dend_46 { pt3dadd( 21.3432, 316.55, -132.731, 0.55 ) }
    dend_46 { pt3dadd( 20.6772, 317.511, -132.797, 0.55 ) }
    dend_46 { pt3dadd( 19.9681, 318.374, -132.84, 0.55 ) }
    dend_46 { pt3dadd( 19.565, 318.805, -132.853, 0.28 ) }
    dend_46 { pt3dadd( 18.6616, 319.642, -132.854, 0.55 ) }
    dend_46 { pt3dadd( 17.6134, 320.565, -132.931, 0.55 ) }
    dend_46 { pt3dadd( 16.4376, 321.589, -133.13, 0.83 ) }
    dend_46 { pt3dadd( 15.8516, 322.087, -133.226, 0.28 ) }
    dend_46 { pt3dadd( 15.2645, 322.599, -133.321, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( 14.585, 323.22, -133.429, 0.55 ) }
    dend_46 { pt3dadd( 13.0295, 324.73, -133.641, 0.55 ) }
    dend_46 { pt3dadd( 11.8965, 325.831, -133.774, 0.55 ) }
    dend_46 { pt3dadd( 10.6247, 327.036, -133.884, 0.28 ) }
    dend_46 { pt3dadd( 9.80548, 327.798, -133.926, 0.28 ) }
    dend_46 { pt3dadd( 9.02742, 328.55, -133.964, 0.28 ) }
    dend_46 { pt3dadd( 8.67422, 328.903, -133.976, 0.55 ) }
    dend_46 { pt3dadd( 7.3073, 330.226, -133.983, 0.28 ) }
    dend_46 { pt3dadd( 6.29025, 331.174, -134.069, 0.28 ) }
    dend_46 { pt3dadd( 5.38051, 332.052, -134.155, 0.83 ) }
    dend_46 { pt3dadd( 4.47738, 332.958, -134.185, 0.28 ) }
    dend_46 { pt3dadd( 3.80304, 333.656, -134.161, 0.28 ) }
    dend_46 { pt3dadd( 3.12539, 334.366, -134.093, 0.28 ) }
    dend_46 { pt3dadd( 2.60559, 334.939, -134.0, 0.55 ) }
    dend_46 { pt3dadd( 1.2468, 336.351, -133.709, 0.28 ) }
    dend_46 { pt3dadd( 0.542684, 336.996, -133.547, 0.55 ) }
    dend_46 { pt3dadd( -0.499844, 337.895, -133.308, 0.28 ) }
    dend_46 { pt3dadd( -1.17141, 338.504, -133.172, 0.55 ) }
    dend_46 { pt3dadd( -1.81801, 339.119, -133.076, 0.28 ) }
    dend_46 { pt3dadd( -2.65803, 339.923, -132.97, 0.28 ) }
    dend_46 { pt3dadd( -3.31523, 340.539, -132.916, 0.28 ) }
    dend_46 { pt3dadd( -4.37992, 341.611, -132.725, 0.55 ) }
    dend_46 { pt3dadd( -4.93725, 342.264, -132.584, 0.55 ) }
    dend_46 { pt3dadd( -5.78755, 343.35, -132.322, 0.55 ) }
    dend_46 { pt3dadd( -6.72229, 344.529, -132.007, 0.28 ) }
    dend_46 { pt3dadd( -7.25344, 345.233, -131.746, 0.55 ) }
    dend_46 { pt3dadd( -8.09658, 346.393, -131.227, 0.28 ) }
    dend_46 { pt3dadd( -8.79673, 347.259, -130.736, 0.28 ) }
    dend_46 { pt3dadd( -9.23167, 347.801, -130.378, 0.28 ) }
    dend_46 { pt3dadd( -9.83228, 348.554, -129.831, 0.28 ) }
    dend_46 { pt3dadd( -11.0278, 349.855, -128.84, 0.55 ) }
    dend_46 { pt3dadd( -11.9928, 350.789, -128.128, 0.28 ) }
    dend_46 { pt3dadd( -12.9982, 351.571, -127.57, 0.55 ) }
    dend_46 { pt3dadd( -14.2244, 352.371, -127.019, 0.55 ) }
    dend_46 { pt3dadd( -14.5718, 352.593, -126.895, 0.28 ) }
    dend_46 { pt3dadd( -15.8867, 353.422, -126.579, 0.55 ) }
    dend_46 { pt3dadd( -16.8597, 354.029, -126.373, 0.55 ) }
    dend_46 { pt3dadd( -18.063, 354.773, -126.051, 0.28 ) }
    dend_46 { pt3dadd( -18.9214, 355.396, -125.793, 0.55 ) }
    dend_46 { pt3dadd( -19.7538, 356.119, -125.469, 0.28 ) }
    dend_46 { pt3dadd( -20.499, 357.006, -125.045, 0.28 ) }
    dend_46 { pt3dadd( -21.6837, 358.778, -124.174, 0.55 ) }
    dend_46 { pt3dadd( -22.3767, 359.964, -123.646, 0.28 ) }
    dend_46 { pt3dadd( -22.9643, 361.077, -123.194, 0.28 ) }
    dend_46 { pt3dadd( -23.7714, 362.696, -122.612, 0.55 ) }
    dend_46 { pt3dadd( -25.2577, 365.592, -121.762, 0.28 ) }
    dend_46 { pt3dadd( -25.4651, 365.966, -121.683, 0.55 ) }
    dend_46 { pt3dadd( -26.6878, 368.007, -121.47, 0.28 ) }
    dend_46 { pt3dadd( -27.0247, 368.542, -121.443, 0.55 ) }
    dend_46 { pt3dadd( -27.4124, 369.067, -121.444, 0.28 ) }
    dend_46 { pt3dadd( -28.4252, 370.267, -121.531, 0.55 ) }
    dend_46 { pt3dadd( -29.8053, 371.718, -121.684, 0.28 ) }
    dend_46 { pt3dadd( -30.4328, 372.368, -121.731, 0.55 ) }
    dend_46 { pt3dadd( -31.2117, 373.155, -121.761, 0.28 ) }
    dend_46 { pt3dadd( -32.2996, 374.285, -121.796, 0.55 ) }
    dend_46 { pt3dadd( -34.485, 376.515, -121.845, 0.28 ) }
    dend_46 { pt3dadd( -34.8234, 376.866, -121.842, 0.55 ) }
    dend_46 { pt3dadd( -36.2896, 378.317, -121.802, 0.28 ) }
    dend_46 { pt3dadd( -36.9732, 378.954, -121.775, 0.55 ) }
    dend_46 { pt3dadd( -37.624, 379.518, -121.71, 0.28 ) }
    dend_46 { pt3dadd( -38.5981, 380.304, -121.578, 0.55 ) }
    dend_46 { pt3dadd( -39.651, 381.028, -121.411, 0.28 ) }
    dend_46 { pt3dadd( -40.9706, 381.85, -121.203, 0.28 ) }
    dend_46 { pt3dadd( -42.6343, 382.804, -120.937, 0.28 ) }
    dend_46 { pt3dadd( -44.3352, 383.728, -120.644, 0.55 ) }
    dend_46 { pt3dadd( -45.8696, 384.49, -120.422, 0.28 ) }
    dend_46 { pt3dadd( -46.9411, 384.982, -120.306, 0.28 ) }
    dend_46 { pt3dadd( -48.6267, 385.665, -120.173, 0.28 ) }
    dend_46 { pt3dadd( -49.237, 385.887, -120.146, 0.28 ) }
    dend_46 { pt3dadd( -50.2887, 386.224, -120.172, 0.55 ) }
    dend_46 { pt3dadd( -51.7782, 386.675, -120.327, 0.28 ) }
    dend_46 { pt3dadd( -53.4386, 387.126, -120.556, 0.28 ) }
    dend_46 { pt3dadd( -54.2072, 387.322, -120.69, 0.55 ) }
    dend_46 { pt3dadd( -55.0369, 387.566, -120.84, 0.28 ) }
    dend_46 { pt3dadd( -55.9991, 387.899, -121.012, 0.55 ) }
    dend_46 { pt3dadd( -57.9561, 388.644, -121.396, 0.55 ) }
    dend_46 { pt3dadd( -59.2362, 389.189, -121.613, 0.28 ) }
    dend_46 { pt3dadd( -59.5159, 389.322, -121.666, 0.55 ) }
    dend_46 { pt3dadd( -61.5398, 390.375, -122.053, 0.28 ) }
    dend_46 { pt3dadd( -61.9501, 390.615, -122.104, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 80/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -29.0657, 3.28062, -70.2366, 0.55 ) }
    dend_44 { pt3dadd( -32.3183, 1.67123, -78.2088, 0.55 ) }
    dend_44 { pt3dadd( -32.685, 1.55886, -79.2149, 0.55 ) }
    dend_44 { pt3dadd( -33.2974, 1.53176, -81.2394, 0.55 ) }
    dend_44 { pt3dadd( -34.5551, 1.72366, -85.8968, 0.55 ) }
    dend_44 { pt3dadd( -34.9361, 1.84104, -87.4198, 0.55 ) }
    dend_44 { pt3dadd( -36.5871, 2.6322, -94.7384, 0.55 ) }
    dend_44 { pt3dadd( -36.8879, 2.93502, -96.3424, 0.55 ) }
    dend_44 { pt3dadd( -37.7344, 4.17726, -101.781, 0.28 ) }
    dend_44 { pt3dadd( -37.8809, 4.47844, -102.91, 0.55 ) }
    dend_44 { pt3dadd( -37.9597, 4.62036, -103.486, 0.55 ) }
    dend_44 { pt3dadd( -38.6584, 5.57929, -108.059, 0.55 ) }
    dend_44 { pt3dadd( -39.3959, 6.11444, -111.455, 0.55 ) }
    dend_44 { pt3dadd( -39.6649, 6.23605, -112.484, 0.55 ) }
    dend_44 { pt3dadd( -40.3319, 6.41476, -114.579, 0.55 ) }
    dend_44 { pt3dadd( -43.9946, 7.05441, -124.545, 0.28 ) }
    dend_44 { pt3dadd( -44.4139, 7.10338, -125.605, 0.55 ) }
    dend_44 { pt3dadd( -45.1734, 7.16703, -127.346, 0.28 ) }
    dend_44 { pt3dadd( -45.485, 7.20205, -128.011, 0.55 ) }
    dend_44 { pt3dadd( -47.4242, 7.45277, -131.841, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_44 { pt3dadd( -47.9611, 7.55738, -132.785, 0.55 ) }
    dend_44 { pt3dadd( -52.9441, 9.01939, -140.418, 0.28 ) }
    dend_44 { pt3dadd( -53.39, 9.15677, -141.108, 0.55 ) }
    dend_44 { pt3dadd( -54.3772, 9.51433, -142.695, 0.28 ) }
    dend_44 { pt3dadd( -54.6876, 9.63162, -143.169, 0.55 ) }
    dend_44 { pt3dadd( -56.5507, 10.4424, -145.719, 0.28 ) }
    dend_44 { pt3dadd( -57.3529, 10.8222, -146.795, 0.55 ) }
    dend_44 { pt3dadd( -58.0842, 11.2053, -147.647, 0.55 ) }
    dend_44 { pt3dadd( -60.7236, 12.9028, -151.087, 0.55 ) }
    dend_44 { pt3dadd( -61.3483, 13.3748, -151.968, 0.55 ) }
    dend_44 { pt3dadd( -61.9222, 13.9145, -152.84, 0.55 ) }
    dend_44 { pt3dadd( -63.8633, 16.2695, -155.878, 0.28 ) }
    dend_44 { pt3dadd( -64.2104, 16.7783, -156.434, 0.55 ) }
    dend_44 { pt3dadd( -65.3917, 18.8759, -158.395, 0.28 ) }
    dend_44 { pt3dadd( -65.6968, 19.502, -158.876, 0.55 ) }
    dend_44 { pt3dadd( -66.6565, 21.6636, -160.366, 0.28 ) }
    dend_44 { pt3dadd( -67.3283, 23.2457, -161.294, 0.28 ) }
    dend_44 { pt3dadd( -67.5985, 23.9339, -161.597, 0.55 ) }
    dend_44 { pt3dadd( -68.278, 25.6156, -162.344, 0.28 ) }
    dend_44 { pt3dadd( -68.5001, 26.1229, -162.557, 0.55 ) }
    dend_44 { pt3dadd( -69.0662, 27.4315, -163.05, 0.28 ) }
    dend_44 { pt3dadd( -69.2099, 27.7752, -163.107, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 22/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -29.0657, 3.28062, -70.2366, 0.28 ) }
    dend_41 { pt3dadd( -29.1778, 2.52782, -70.434, 0.28 ) }
    dend_41 { pt3dadd( -29.3182, 1.85162, -70.7053, 0.83 ) }
    dend_41 { pt3dadd( -29.4268, 1.31386, -70.9335, 0.28 ) }
    dend_41 { pt3dadd( -29.5944, 0.395184, -71.3641, 0.83 ) }
    dend_41 { pt3dadd( -29.8836, -1.22584, -72.134, 0.28 ) }
    dend_41 { pt3dadd( -29.9977, -1.88464, -72.4575, 0.83 ) }
    dend_41 { pt3dadd( -30.2066, -3.04483, -73.088, 0.28 ) }
    dend_41 { pt3dadd( -30.3655, -3.91817, -73.5921, 0.83 ) }
    dend_41 { pt3dadd( -30.5239, -4.93333, -74.2029, 0.28 ) }
    dend_41 { pt3dadd( -30.5913, -5.53048, -74.5636, 0.83 ) }
    dend_41 { pt3dadd( -30.6456, -6.31836, -74.9591, 0.28 ) }
    dend_41 { pt3dadd( -30.6433, -6.41356, -75.0012, 0.55 ) }
    dend_41 { pt3dadd( -30.597, -6.76742, -75.1143, 0.28 ) }
    dend_41 { pt3dadd( -30.5418, -7.04625, -75.1772, 0.55 ) }
    dend_41 { pt3dadd( -30.4315, -7.48251, -75.2424, 0.28 ) }
    dend_41 { pt3dadd( -30.2349, -8.17306, -75.3322, 1.38 ) }
    dend_41 { pt3dadd( -29.9437, -9.18687, -75.4456, 0.28 ) }
    dend_41 { pt3dadd( -29.7595, -9.84584, -75.5203, 0.28 ) }
    dend_41 { pt3dadd( -29.3938, -11.0369, -75.6023, 1.38 ) }
    dend_41 { pt3dadd( -29.1586, -11.742, -75.6221, 0.28 ) }
    dend_41 { pt3dadd( -29.1272, -11.8394, -75.6254, 0.55 ) }
    dend_41 { pt3dadd( -28.9675, -12.3445, -75.6392, 0.28 ) }
    dend_41 { pt3dadd( -28.7791, -12.9405, -75.6663, 0.55 ) }
    dend_41 { pt3dadd( -28.4218, -14.1575, -75.7709, 0.28 ) }
    dend_41 { pt3dadd( -28.286, -14.6416, -75.8486, 0.83 ) }
    dend_41 { pt3dadd( -27.9914, -15.8692, -76.0403, 0.28 ) }
    dend_41 { pt3dadd( -27.8946, -16.3654, -76.1167, 0.83 ) }
    dend_41 { pt3dadd( -27.7804, -17.0921, -76.2199, 0.28 ) }
    dend_41 { pt3dadd( -27.7327, -17.3786, -76.2565, 0.55 ) }
    dend_41 { pt3dadd( -27.5516, -18.4167, -76.3688, 0.28 ) }
    dend_41 { pt3dadd( -27.3532, -19.3945, -76.4244, 0.55 ) }
    dend_41 { pt3dadd( -27.0965, -20.3914, -76.439, 1.66 ) }
    dend_41 { pt3dadd( -26.7808, -21.48, -76.4401, 0.28 ) }
    dend_41 { pt3dadd( -26.2937, -22.9089, -76.415, 0.83 ) }
    dend_41 { pt3dadd( -25.9109, -23.863, -76.3997, 0.28 ) }
    dend_41 { pt3dadd( -25.6911, -24.3219, -76.3921, 0.83 ) }
    dend_41 { pt3dadd( -25.2346, -25.1089, -76.4147, 0.28 ) }
    dend_41 { pt3dadd( -24.8966, -25.6163, -76.4432, 0.55 ) }
    dend_41 { pt3dadd( -24.432, -26.2563, -76.4917, 0.55 ) }
    dend_41 { pt3dadd( -23.6684, -27.2461, -76.5878, 0.28 ) }
    dend_41 { pt3dadd( -23.3182, -27.6591, -76.6352, 0.83 ) }
    dend_41 { pt3dadd( -22.6669, -28.3992, -76.7216, 0.28 ) }
    dend_41 { pt3dadd( -22.6012, -28.4761, -76.729, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 66/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -40.8055, 52.276, 33.458, 0.55 ) }
    dend_38 { pt3dadd( -42.1907, 55.3093, 38.1598, 0.55 ) }
    dend_38 { pt3dadd( -42.5175, 55.9491, 38.9645, 0.55 ) }
    dend_38 { pt3dadd( -43.0164, 56.9406, 39.9596, 0.55 ) }
    dend_38 { pt3dadd( -43.1461, 57.2431, 40.218, 0.55 ) }
    dend_38 { pt3dadd( -44.0838, 59.4307, 42.0861, 0.55 ) }
    dend_38 { pt3dadd( -44.7589, 61.0056, 43.4311, 0.55 ) }
    dend_38 { pt3dadd( -45.158, 61.81, 43.8353, 0.55 ) }
    dend_38 { pt3dadd( -45.787, 63.0584, 44.4623, 0.55 ) }
    dend_38 { pt3dadd( -46.4731, 64.2626, 45.0047, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 76/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -40.8055, 52.276, 33.458, 0.55 ) }
    dend_37 { pt3dadd( -46.0393, 54.8065, 32.0026, 0.55 ) }
    dend_37 { pt3dadd( -48.2824, 55.4474, 31.4678, 0.55 ) }
    dend_37 { pt3dadd( -51.0764, 55.814, 31.0392, 0.55 ) }
    dend_37 { pt3dadd( -54.3991, 56.0978, 30.5987, 0.55 ) }
    dend_37 { pt3dadd( -56.8872, 56.1966, 30.2468, 0.55 ) }
    dend_37 { pt3dadd( -59.2396, 56.2435, 29.8574, 0.55 ) }
    dend_37 { pt3dadd( -65.4484, 56.0442, 28.6301, 0.55 ) }
    dend_37 { pt3dadd( -70.4286, 55.6119, 27.72, 0.55 ) }
    dend_37 { pt3dadd( -72.322, 55.3578, 27.4155, 0.55 ) }
    dend_37 { pt3dadd( -74.4049, 55.0379, 27.1473, 0.55 ) }
    dend_37 { pt3dadd( -77.4786, 54.4048, 26.7277, 0.55 ) }
    dend_37 { pt3dadd( -80.6513, 53.7611, 26.2375, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_21 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 0.294037, -25.2147, -8.83908, 1.38 ) }
    dend_29 { pt3dadd( -0.438493, -28.0859, -8.8239, 1.38 ) }
    dend_29 { pt3dadd( -1.00863, -29.8567, -8.8714, 1.38 ) }
    dend_29 { pt3dadd( -1.75892, -31.8135, -8.9596, 1.38 ) }
    dend_29 { pt3dadd( -3.86992, -36.388, -9.20066, 1.38 ) }
    dend_29 { pt3dadd( -6.24988, -41.0931, -9.45227, 1.94 ) }
    dend_29 { pt3dadd( -7.80852, -44.0227, -9.58414, 1.38 ) }
    dend_29 { pt3dadd( -8.54078, -45.2946, -9.66158, 1.38 ) }
    dend_29 { pt3dadd( -9.94851, -47.5295, -9.81053, 1.38 ) }
    dend_29 { pt3dadd( -12.3934, -51.1469, -10.0751, 1.38 ) }
    dend_29 { pt3dadd( -14.1882, -53.4509, -10.2706, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_29 { pt3dadd( -17.4198, -57.3371, -10.485, 1.66 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 1/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 0.294037, -25.2147, -8.83908, 0.83 ) }
    dend_22 { pt3dadd( 1.25002, -26.8467, -9.10829, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 3/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -4.2173, -30.9639, -10.1818, 0.83 ) }
    dend_12 { pt3dadd( -6.61536, -32.3747, -11.1016, 0.83 ) }
    dend_12 { pt3dadd( -8.59105, -33.537, -11.8594, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 6/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -4.2173, -30.9639, -10.1818, 0.55 ) }
    dend_11 { pt3dadd( -4.65613, -31.5874, -8.94931, 0.55 ) }
    dend_11 { pt3dadd( -4.72694, -31.6761, -8.76592, 0.55 ) }
    dend_11 { pt3dadd( -5.9882, -32.8224, -5.95855, 0.55 ) }
    dend_11 { pt3dadd( -7.73204, -33.99, -2.58893, 0.55 ) }
    dend_11 { pt3dadd( -9.37031, -34.8245, 0.239147, 0.55 ) }
    dend_11 { pt3dadd( -10.6932, -35.3252, 2.27277, 0.55 ) }
    dend_11 { pt3dadd( -11.1446, -35.4577, 2.92784, 0.83 ) }
    dend_11 { pt3dadd( -13.7137, -36.1261, 6.36977, 0.28 ) }
    dend_11 { pt3dadd( -14.8535, -36.326, 7.76107, 0.55 ) }
    dend_11 { pt3dadd( -16.9753, -36.6467, 9.93581, 0.55 ) }
    dend_11 { pt3dadd( -19.152, -37.0424, 12.1036, 0.28 ) }
    dend_11 { pt3dadd( -20.238, -37.3644, 13.2449, 0.55 ) }
    dend_11 { pt3dadd( -21.2705, -37.8406, 14.4161, 0.55 ) }
    dend_11 { pt3dadd( -23.3549, -39.1179, 16.8825, 0.55 ) }
    dend_11 { pt3dadd( -24.7384, -40.1856, 18.6789, 0.28 ) }
    dend_11 { pt3dadd( -25.9379, -41.317, 20.3344, 0.55 ) }
    dend_11 { pt3dadd( -26.5894, -42.064, 21.3378, 0.55 ) }
    dend_11 { pt3dadd( -27.2035, -42.7111, 22.2775, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 25/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 4.40931, 76.5413, 8.006, 0.55 ) }
    dend_8 { pt3dadd( 2.75062, 77.1848, 8.57001, 0.55 ) }
    dend_8 { pt3dadd( 1.79889, 77.6071, 8.8966, 0.83 ) }
    dend_8 { pt3dadd( -0.495743, 78.7159, 9.65269, 0.28 ) }
    dend_8 { pt3dadd( -2.07844, 79.4862, 10.2446, 0.55 ) }
    dend_8 { pt3dadd( -3.55006, 80.2775, 10.7999, 0.28 ) }
    dend_8 { pt3dadd( -4.31596, 80.7324, 11.1355, 0.55 ) }
    dend_8 { pt3dadd( -5.12643, 81.3326, 11.5659, 0.28 ) }
    dend_8 { pt3dadd( -6.13067, 82.2749, 12.2749, 0.55 ) }
    dend_8 { pt3dadd( -7.32856, 83.562, 13.2628, 0.28 ) }
    dend_8 { pt3dadd( -8.5822, 84.9624, 14.322, 0.83 ) }
    dend_8 { pt3dadd( -10.1359, 86.6606, 15.6528, 0.83 ) }
    dend_8 { pt3dadd( -11.2964, 87.8323, 16.6822, 0.55 ) }
    dend_8 { pt3dadd( -12.9338, 89.3664, 18.1149, 0.28 ) }
    dend_8 { pt3dadd( -13.7178, 90.073, 18.7939, 0.55 ) }
    dend_8 { pt3dadd( -15.1763, 91.2875, 19.933, 0.28 ) }
    dend_8 { pt3dadd( -15.9298, 91.8445, 20.4653, 0.83 ) }
    dend_8 { pt3dadd( -17.7, 93.0624, 21.4726, 0.55 ) }
    dend_8 { pt3dadd( -18.8288, 93.8357, 22.1322, 0.28 ) }
    dend_8 { pt3dadd( -19.7062, 94.5306, 22.6382, 0.83 ) }
    dend_8 { pt3dadd( -20.4846, 95.1843, 23.0779, 0.83 ) }
    dend_8 { pt3dadd( -21.8894, 96.2886, 23.7892, 0.28 ) }
    dend_8 { pt3dadd( -22.8263, 97.0289, 24.211, 0.83 ) }
    dend_8 { pt3dadd( -25.5047, 99.2126, 25.3233, 0.28 ) }
    dend_8 { pt3dadd( -26.4367, 99.9488, 25.6893, 0.55 ) }
    dend_8 { pt3dadd( -28.7687, 101.719, 26.5392, 0.55 ) }
    dend_8 { pt3dadd( -30.4191, 102.888, 27.0915, 0.28 ) }
    dend_8 { pt3dadd( -31.6917, 103.68, 27.4533, 0.55 ) }
    dend_8 { pt3dadd( -33.0424, 104.447, 27.7518, 0.28 ) }
    dend_8 { pt3dadd( -33.787, 104.85, 27.8774, 0.55 ) }
    dend_8 { pt3dadd( -34.6951, 105.354, 28.0679, 0.28 ) }
    dend_8 { pt3dadd( -36.0106, 106.241, 28.4466, 0.55 ) }
    dend_8 { pt3dadd( -37.266, 107.196, 28.8513, 0.28 ) }
    dend_8 { pt3dadd( -38.8273, 108.439, 29.3946, 0.55 ) }
    dend_8 { pt3dadd( -39.8355, 109.444, 29.7428, 0.28 ) }
    dend_8 { pt3dadd( -40.4465, 110.175, 29.9584, 0.55 ) }
    dend_8 { pt3dadd( -41.3151, 111.42, 30.1891, 0.28 ) }
    dend_8 { pt3dadd( -41.627, 111.94, 30.2621, 0.55 ) }
    dend_8 { pt3dadd( -42.0731, 112.779, 30.3475, 0.28 ) }
    dend_8 { pt3dadd( -43.0224, 114.692, 30.4665, 0.55 ) }
    dend_8 { pt3dadd( -44.3267, 117.284, 30.4787, 0.55 ) }
    dend_8 { pt3dadd( -45.1858, 118.936, 30.4507, 0.28 ) }
    dend_8 { pt3dadd( -46.1229, 120.552, 30.3491, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 68/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 4.40931, 76.5413, 8.006, 0.55 ) }
    dend_3 { pt3dadd( 4.5279, 78.718, 8.03333, 0.55 ) }
    dend_3 { pt3dadd( 4.5503, 79.8589, 8.16486, 0.55 ) }
    dend_3 { pt3dadd( 4.57408, 81.0617, 8.38319, 0.55 ) }
    dend_3 { pt3dadd( 4.68487, 83.574, 9.04605, 0.55 ) }
    dend_3 { pt3dadd( 4.79957, 86.6193, 9.93595, 0.55 ) }
    dend_3 { pt3dadd( 4.82108, 88.1804, 10.4061, 0.55 ) }
    dend_3 { pt3dadd( 4.86454, 91.5999, 11.5155, 0.55 ) }
    dend_3 { pt3dadd( 4.94167, 94.7282, 12.5106, 0.55 ) }
    dend_3 { pt3dadd( 4.99687, 98.5757, 13.6993, 0.55 ) }
    dend_3 { pt3dadd( 4.98892, 100.123, 14.1501, 0.55 ) }
    dend_3 { pt3dadd( 4.91289, 102.837, 14.8621, 0.55 ) }
    dend_3 { pt3dadd( 4.83303, 105.598, 15.5169, 0.55 ) }
    dend_3 { pt3dadd( 4.57932, 109.715, 16.3993, 0.55 ) }
    dend_3 { pt3dadd( 4.41325, 111.743, 16.7913, 0.55 ) }
    dend_3 { pt3dadd( 4.09519, 114.972, 17.3342, 0.55 ) }
    dend_3 { pt3dadd( 3.88458, 117.226, 17.7347, 0.55 ) }
    dend_3 { pt3dadd( 3.44908, 121.393, 18.5294, 0.55 ) }
    dend_3 { pt3dadd( 2.91197, 124.648, 19.2248, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 87/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 56.3582, 326.325, -105.403, 0.55 ) }
    dend_49 { pt3dadd( 57.9726, 327.561, -104.929, 0.55 ) }
    dend_49 { pt3dadd( 58.6621, 328.198, -104.696, 0.55 ) }
    dend_49 { pt3dadd( 60.123, 329.638, -104.252, 0.28 ) }
    dend_49 { pt3dadd( 60.9935, 330.53, -103.984, 0.83 ) }
    dend_49 { pt3dadd( 61.8016, 331.396, -103.747, 0.28 ) }
    dend_49 { pt3dadd( 62.879, 332.609, -103.413, 0.55 ) }
    dend_49 { pt3dadd( 63.885, 333.873, -103.078, 0.28 ) }
    dend_49 { pt3dadd( 65.7813, 336.459, -102.393, 0.83 ) }
    dend_49 { pt3dadd( 67.0852, 338.351, -101.917, 0.28 ) }
    dend_49 { pt3dadd( 68.0282, 339.729, -101.524, 0.28 ) }
    dend_49 { pt3dadd( 68.9869, 341.169, -101.09, 0.28 ) }
    dend_49 { pt3dadd( 69.3516, 341.718, -100.904, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_49 { pt3dadd( 71.0691, 344.179, -100.014, 0.28 ) }
    dend_49 { pt3dadd( 71.7721, 345.254, -99.61, 0.83 ) }
    dend_49 { pt3dadd( 73.1787, 347.437, -98.8028, 0.28 ) }
    dend_49 { pt3dadd( 74.0704, 348.843, -98.3016, 0.55 ) }
    dend_49 { pt3dadd( 75.2951, 350.786, -97.651, 0.28 ) }
    dend_49 { pt3dadd( 76.1158, 352.144, -97.2323, 0.28 ) }
    dend_49 { pt3dadd( 77.2328, 354.124, -96.7287, 0.55 ) }
    dend_49 { pt3dadd( 78.267, 356.051, -96.2954, 0.28 ) }
    dend_49 { pt3dadd( 78.8533, 357.276, -96.0832, 0.55 ) }
    dend_49 { pt3dadd( 79.94, 359.585, -95.7303, 0.28 ) }
    dend_49 { pt3dadd( 80.47, 360.749, -95.5814, 0.83 ) }
    dend_49 { pt3dadd( 81.6947, 363.679, -95.0838, 0.28 ) }
    dend_49 { pt3dadd( 82.2245, 364.982, -94.8381, 0.55 ) }
    dend_49 { pt3dadd( 82.9381, 366.834, -94.4742, 0.55 ) }
    dend_49 { pt3dadd( 84.0188, 369.762, -93.8885, 0.28 ) }
    dend_49 { pt3dadd( 84.3234, 370.656, -93.6852, 0.55 ) }
    dend_49 { pt3dadd( 85.5906, 374.629, -92.6678, 0.28 ) }
    dend_49 { pt3dadd( 86.0847, 376.425, -92.1786, 0.28 ) }
    dend_49 { pt3dadd( 86.3231, 377.448, -91.9023, 0.55 ) }
    dend_49 { pt3dadd( 86.6727, 379.12, -91.4768, 0.28 ) }
    dend_49 { pt3dadd( 87.1438, 381.597, -91.0616, 0.55 ) }
    dend_49 { pt3dadd( 87.3967, 382.828, -90.958, 0.28 ) }
    dend_49 { pt3dadd( 87.5907, 383.708, -90.972, 0.55 ) }
    dend_49 { pt3dadd( 87.7859, 384.595, -91.0173, 0.28 ) }
    dend_49 { pt3dadd( 88.7087, 388.475, -91.2094, 0.55 ) }
    dend_49 { pt3dadd( 89.3586, 390.977, -91.3595, 0.55 ) }
    dend_49 { pt3dadd( 89.9595, 393.11, -91.4197, 0.28 ) }
    dend_49 { pt3dadd( 90.4893, 394.787, -91.2914, 0.28 ) }
    dend_49 { pt3dadd( 90.7844, 395.675, -91.1214, 0.28 ) }
    dend_49 { pt3dadd( 91.4513, 397.599, -90.5552, 0.55 ) }
    dend_49 { pt3dadd( 91.7981, 398.551, -90.1692, 0.28 ) }
    dend_49 { pt3dadd( 93.0369, 401.862, -88.6237, 0.83 ) }
    dend_49 { pt3dadd( 93.8316, 403.926, -87.6807, 0.28 ) }
    dend_49 { pt3dadd( 94.4234, 405.462, -86.9977, 0.55 ) }
    dend_49 { pt3dadd( 94.8649, 406.572, -86.5391, 0.28 ) }
    dend_49 { pt3dadd( 95.3444, 407.751, -86.1212, 0.28 ) }
    dend_49 { pt3dadd( 95.9997, 409.317, -85.6247, 0.28 ) }
    dend_49 { pt3dadd( 97.6615, 412.998, -84.5642, 0.83 ) }
    dend_49 { pt3dadd( 98.6337, 415.138, -83.9996, 0.28 ) }
    dend_49 { pt3dadd( 99.0466, 415.988, -83.778, 0.28 ) }
    dend_49 { pt3dadd( 99.7851, 417.461, -83.354, 0.28 ) }
    dend_49 { pt3dadd( 100.072, 418.018, -83.1734, 0.28 ) }
    dend_49 { pt3dadd( 101.607, 420.916, -82.1726, 0.55 ) }
    dend_49 { pt3dadd( 102.054, 421.716, -81.8976, 0.55 ) }
    dend_49 { pt3dadd( 102.796, 423.078, -81.4628, 0.55 ) }
    dend_49 { pt3dadd( 103.665, 424.942, -80.8715, 0.28 ) }
    dend_49 { pt3dadd( 104.184, 426.241, -80.4473, 0.55 ) }
    dend_49 { pt3dadd( 104.543, 427.338, -80.0907, 0.55 ) }
    dend_49 { pt3dadd( 104.775, 428.239, -79.832, 0.28 ) }
    dend_49 { pt3dadd( 105.16, 429.474, -79.4778, 0.55 ) }
    dend_49 { pt3dadd( 105.667, 430.973, -78.8705, 0.28 ) }
    dend_49 { pt3dadd( 106.333, 432.53, -78.074, 0.83 ) }
    dend_49 { pt3dadd( 107.042, 434.089, -77.2373, 0.55 ) }
    dend_49 { pt3dadd( 107.705, 435.436, -76.4525, 0.55 ) }
    dend_49 { pt3dadd( 108.795, 437.547, -75.1295, 0.55 ) }
    dend_49 { pt3dadd( 111.235, 441.723, -72.2605, 0.28 ) }
    dend_49 { pt3dadd( 112.632, 443.785, -70.7463, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 57/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 56.3582, 326.325, -105.403, 0.28 ) }
    dend_48 { pt3dadd( 56.3932, 327.59, -104.587, 0.28 ) }
    dend_48 { pt3dadd( 56.4138, 329.451, -103.407, 0.55 ) }
    dend_48 { pt3dadd( 56.451, 331.08, -102.289, 0.28 ) }
    dend_48 { pt3dadd( 56.5326, 332.187, -101.519, 0.28 ) }
    dend_48 { pt3dadd( 56.6602, 333.379, -100.69, 0.28 ) }
    dend_48 { pt3dadd( 56.8417, 334.94, -99.625, 0.55 ) }
    dend_48 { pt3dadd( 57.0411, 336.074, -98.7934, 0.28 ) }
    dend_48 { pt3dadd( 57.2397, 337.042, -98.0331, 0.55 ) }
    dend_48 { pt3dadd( 57.5127, 338.111, -97.0774, 0.28 ) }
    dend_48 { pt3dadd( 57.7227, 338.826, -96.3908, 0.55 ) }
    dend_48 { pt3dadd( 57.9025, 339.496, -95.7277, 0.55 ) }
    dend_48 { pt3dadd( 58.2202, 341.291, -94.0236, 0.28 ) }
    dend_48 { pt3dadd( 58.236, 342.088, -93.2594, 0.55 ) }
    dend_48 { pt3dadd( 58.155, 342.8, -92.6011, 0.55 ) }
    dend_48 { pt3dadd( 58.036, 343.372, -91.9994, 0.55 ) }
    dend_48 { pt3dadd( 57.8907, 344.04, -91.2311, 0.55 ) }
    dend_48 { pt3dadd( 57.736, 344.853, -90.2758, 0.55 ) }
    dend_48 { pt3dadd( 57.369, 346.68, -88.1829, 0.28 ) }
    dend_48 { pt3dadd( 57.3332, 346.897, -87.9351, 0.55 ) }
    dend_48 { pt3dadd( 57.1697, 348.946, -85.5137, 0.28 ) }
    dend_48 { pt3dadd( 57.1527, 350.019, -84.2823, 0.55 ) }
    dend_48 { pt3dadd( 57.1844, 350.949, -83.2835, 0.55 ) }
    dend_48 { pt3dadd( 57.2151, 351.416, -82.8303, 0.55 ) }
    dend_48 { pt3dadd( 57.3406, 352.635, -81.7313, 0.28 ) }
    dend_48 { pt3dadd( 57.5827, 354.919, -79.8455, 0.55 ) }
    dend_48 { pt3dadd( 57.709, 356.285, -78.9316, 0.28 ) }
    dend_48 { pt3dadd( 57.7861, 357.288, -78.3163, 0.28 ) }
    dend_48 { pt3dadd( 57.85, 358.081, -77.8411, 0.28 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 86/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -22.6012, -28.4761, -76.729, 0.28 ) }
    dend_43 { pt3dadd( -22.3834, -32.8637, -78.2803, 0.28 ) }
    dend_43 { pt3dadd( -22.5095, -34.1621, -78.9246, 0.83 ) }
    dend_43 { pt3dadd( -22.9477, -36.3395, -80.1224, 0.28 ) }
    dend_43 { pt3dadd( -23.6081, -37.6245, -81.0469, 0.55 ) }
    dend_43 { pt3dadd( -25.095, -39.6889, -82.6011, 0.28 ) }
    dend_43 { pt3dadd( -26.444, -41.3627, -83.8367, 0.55 ) }
    dend_43 { pt3dadd( -28.9239, -43.4719, -85.6487, 0.28 ) }
    dend_43 { pt3dadd( -30.6086, -44.6484, -86.7477, 0.83 ) }
    dend_43 { pt3dadd( -35.1913, -47.3532, -89.3586, 0.28 ) }
    dend_43 { pt3dadd( -36.9393, -48.3505, -90.2348, 0.55 ) }
    dend_43 { pt3dadd( -37.9434, -48.9585, -90.6633, 0.28 ) }
    dend_43 { pt3dadd( -38.9141, -49.648, -91.0861, 0.55 ) }
    dend_43 { pt3dadd( -41.1895, -51.5712, -91.8623, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_43 { pt3dadd( -41.6867, -52.0563, -92.0097, 0.55 ) }
    dend_43 { pt3dadd( -42.7469, -53.4866, -92.2019, 0.28 ) }
    dend_43 { pt3dadd( -43.9297, -55.3834, -92.4263, 0.55 ) }
    dend_43 { pt3dadd( -45.5379, -58.4055, -92.6416, 0.28 ) }
    dend_43 { pt3dadd( -46.2106, -59.9778, -92.896, 0.83 ) }
    dend_43 { pt3dadd( -47.0481, -62.1418, -93.3488, 0.28 ) }
    dend_43 { pt3dadd( -47.5869, -63.5501, -93.7664, 0.55 ) }
    dend_43 { pt3dadd( -48.2101, -65.1824, -94.3638, 0.28 ) }
    dend_43 { pt3dadd( -48.6844, -66.4887, -94.8513, 0.55 ) }
    dend_43 { pt3dadd( -50.3382, -71.4043, -96.5382, 0.28 ) }
    dend_43 { pt3dadd( -50.8248, -72.8443, -96.9675, 0.83 ) }
    dend_43 { pt3dadd( -51.2152, -73.8813, -97.1943, 0.28 ) }
    dend_43 { pt3dadd( -51.6796, -75.0414, -97.3999, 0.55 ) }
    dend_43 { pt3dadd( -52.8848, -77.6585, -97.6405, 0.28 ) }
    dend_43 { pt3dadd( -53.4269, -78.8032, -97.6422, 0.55 ) }
    dend_43 { pt3dadd( -54.6613, -81.4633, -97.3635, 0.28 ) }
    dend_43 { pt3dadd( -55.2472, -82.7337, -97.3364, 0.55 ) }
    dend_43 { pt3dadd( -56.849, -86.0287, -97.455, 0.28 ) }
    dend_43 { pt3dadd( -57.8683, -87.9939, -97.6961, 0.83 ) }
    dend_43 { pt3dadd( -58.9846, -90.1897, -98.0816, 0.28 ) }
    dend_43 { pt3dadd( -59.4408, -91.2116, -98.2406, 0.55 ) }
    dend_43 { pt3dadd( -60.8495, -94.9158, -98.7747, 0.28 ) }
    dend_43 { pt3dadd( -61.6019, -97.6522, -98.9767, 0.55 ) }
    dend_43 { pt3dadd( -62.1041, -100.057, -98.9903, 0.28 ) }
    dend_43 { pt3dadd( -62.4222, -101.866, -99.0619, 0.83 ) }
    dend_43 { pt3dadd( -63.1469, -106.072, -99.2579, 0.28 ) }
    dend_43 { pt3dadd( -63.3115, -107.12, -99.2814, 0.55 ) }
    dend_43 { pt3dadd( -63.8837, -111.2, -99.1949, 0.28 ) }
    dend_43 { pt3dadd( -64.0082, -112.089, -99.1994, 0.55 ) }
    dend_43 { pt3dadd( -64.6665, -115.845, -99.2567, 0.28 ) }
    dend_43 { pt3dadd( -65.0748, -117.386, -99.3264, 0.55 ) }
    dend_43 { pt3dadd( -65.6496, -119.051, -99.4058, 0.28 ) }
    dend_43 { pt3dadd( -66.0919, -120.445, -99.3856, 0.55 ) }
    dend_43 { pt3dadd( -66.4256, -121.704, -99.2816, 0.28 ) }
    dend_43 { pt3dadd( -66.7309, -123.184, -99.2051, 0.55 ) }
    dend_43 { pt3dadd( -67.1054, -125.305, -99.1044, 0.28 ) }
    dend_43 { pt3dadd( -67.5535, -127.807, -99.0176, 0.55 ) }
    dend_43 { pt3dadd( -68.2205, -131.102, -98.9142, 0.28 ) }
    dend_43 { pt3dadd( -68.8426, -134.079, -98.7973, 0.55 ) }
    dend_43 { pt3dadd( -69.9781, -138.542, -98.6002, 0.28 ) }
    dend_43 { pt3dadd( -70.3455, -139.758, -98.5251, 0.55 ) }
    dend_43 { pt3dadd( -71.3605, -142.37, -98.2635, 0.28 ) }
    dend_43 { pt3dadd( -72.2967, -144.165, -97.926, 0.28 ) }
    dend_43 { pt3dadd( -72.8583, -144.938, -97.6553, 0.55 ) }
    dend_43 { pt3dadd( -74.1468, -146.46, -96.8999, 0.28 ) }
    dend_43 { pt3dadd( -75.6969, -148.051, -95.8989, 0.55 ) }
    dend_43 { pt3dadd( -78.2359, -150.815, -94.3354, 0.28 ) }
    dend_43 { pt3dadd( -79.1926, -151.947, -93.7798, 0.83 ) }
    dend_43 { pt3dadd( -81.3045, -154.686, -92.5353, 0.28 ) }
    dend_43 { pt3dadd( -82.9331, -156.992, -91.5704, 0.28 ) }
    dend_43 { pt3dadd( -84.4066, -159.269, -90.7437, 0.55 ) }
    dend_43 { pt3dadd( -86.5642, -162.801, -89.6988, 0.28 ) }
    dend_43 { pt3dadd( -88.0709, -165.535, -88.8323, 0.55 ) }
    dend_43 { pt3dadd( -89.2723, -168.064, -88.0263, 0.28 ) }
    dend_43 { pt3dadd( -89.8184, -169.627, -87.4018, 0.55 ) }
    dend_43 { pt3dadd( -90.3953, -172.014, -86.0695, 0.28 ) }
    dend_43 { pt3dadd( -90.6878, -173.68, -85.024, 0.55 ) }
    dend_43 { pt3dadd( -91.1482, -177.229, -82.2618, 0.28 ) }
    dend_43 { pt3dadd( -91.1953, -178.88, -80.7687, 0.55 ) }
    dend_43 { pt3dadd( -90.8468, -182.747, -76.7972, 0.28 ) }
    dend_43 { pt3dadd( -90.359, -185.146, -73.9807, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 61/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -22.6012, -28.4761, -76.729, 0.28 ) }
    dend_42 { pt3dadd( -20.7511, -29.0526, -77.4291, 0.28 ) }
    dend_42 { pt3dadd( -19.823, -29.458, -77.7813, 0.55 ) }
    dend_42 { pt3dadd( -17.991, -30.3813, -78.4665, 0.28 ) }
    dend_42 { pt3dadd( -17.5799, -30.5899, -78.6099, 0.55 ) }
    dend_42 { pt3dadd( -15.8386, -31.4928, -79.2035, 0.28 ) }
    dend_42 { pt3dadd( -14.645, -32.1477, -79.6364, 0.55 ) }
    dend_42 { pt3dadd( -12.9846, -33.1918, -80.2621, 0.28 ) }
    dend_42 { pt3dadd( -12.0021, -33.843, -80.6399, 0.55 ) }
    dend_42 { pt3dadd( -9.93393, -35.292, -81.441, 0.28 ) }
    dend_42 { pt3dadd( -9.66962, -35.4745, -81.5333, 0.55 ) }
    dend_42 { pt3dadd( -7.34244, -37.068, -82.2534, 0.28 ) }
    dend_42 { pt3dadd( -6.94485, -37.317, -82.3362, 0.55 ) }
    dend_42 { pt3dadd( -5.22887, -38.2598, -82.5641, 0.28 ) }
    dend_42 { pt3dadd( -4.02261, -38.8785, -82.6754, 0.83 ) }
    dend_42 { pt3dadd( -2.32927, -39.7004, -82.7829, 0.28 ) }
    dend_42 { pt3dadd( -1.37182, -40.1745, -82.8551, 0.55 ) }
    dend_42 { pt3dadd( 1.68128, -41.8153, -83.0752, 0.28 ) }
    dend_42 { pt3dadd( 2.73906, -42.4192, -83.047, 0.55 ) }
    dend_42 { pt3dadd( 4.03278, -43.1662, -82.9353, 0.28 ) }
    dend_42 { pt3dadd( 5.50214, -43.9972, -82.7759, 0.55 ) }
    dend_42 { pt3dadd( 8.53954, -45.8782, -82.4133, 0.28 ) }
    dend_42 { pt3dadd( 10.2318, -46.9332, -82.0585, 0.55 ) }
    dend_42 { pt3dadd( 14.627, -49.6931, -80.9063, 0.28 ) }
    dend_42 { pt3dadd( 15.1744, -50.036, -80.7162, 0.55 ) }
    dend_42 { pt3dadd( 16.7734, -51.0181, -80.0616, 0.28 ) }
    dend_42 { pt3dadd( 18.6577, -52.2162, -79.2504, 0.83 ) }
    dend_42 { pt3dadd( 22.4296, -54.6174, -77.6021, 0.28 ) }
    dend_42 { pt3dadd( 23.7596, -55.5349, -77.0856, 0.55 ) }
    dend_42 { pt3dadd( 25.9774, -57.2942, -76.3854, 0.28 ) }
    dend_42 { pt3dadd( 26.5421, -57.786, -76.2329, 0.83 ) }
    dend_42 { pt3dadd( 30.173, -61.1653, -75.4394, 0.28 ) }
    dend_42 { pt3dadd( 31.2146, -62.1906, -75.3265, 0.83 ) }
    dend_42 { pt3dadd( 33.1012, -64.2428, -75.3954, 0.28 ) }
    dend_42 { pt3dadd( 34.2268, -65.5151, -75.5077, 0.55 ) }
    dend_42 { pt3dadd( 35.9092, -67.4331, -75.8287, 0.28 ) }
    dend_42 { pt3dadd( 36.3837, -68.0099, -75.988, 0.83 ) }
    dend_42 { pt3dadd( 38.3839, -70.6256, -77.1164, 0.28 ) }
    dend_42 { pt3dadd( 38.9298, -71.4315, -77.5625, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_42 { pt3dadd( 39.5881, -72.4869, -78.2528, 0.28 ) }
    dend_42 { pt3dadd( 39.8782, -72.9809, -78.6173, 0.55 ) }
    dend_42 { pt3dadd( 41.5998, -76.2314, -81.1299, 0.28 ) }
    dend_42 { pt3dadd( 41.9254, -77.0716, -81.9072, 0.55 ) }
    dend_42 { pt3dadd( 42.4602, -78.7473, -83.6108, 0.28 ) }
    dend_42 { pt3dadd( 42.6117, -79.2655, -84.1565, 0.83 ) }
    dend_42 { pt3dadd( 43.3032, -81.8567, -86.9852, 0.28 ) }
    dend_42 { pt3dadd( 43.3952, -82.2261, -87.3962, 0.55 ) }
    dend_42 { pt3dadd( 44.3509, -86.63, -92.3174, 0.28 ) }
    dend_42 { pt3dadd( 44.6874, -88.2684, -94.1267, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 10/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -17.4198, -57.3371, -10.485, 1.38 ) }
    dend_31 { pt3dadd( -19.0964, -58.6721, -12.3213, 1.38 ) }
    dend_31 { pt3dadd( -20.563, -59.673, -14.237, 1.38 ) }
    dend_31 { pt3dadd( -21.2554, -60.1491, -15.2199, 1.11 ) }
    dend_31 { pt3dadd( -22.7279, -61.2448, -17.3063, 1.38 ) }
    dend_31 { pt3dadd( -25.5942, -63.3884, -21.0603, 1.38 ) }
    dend_31 { pt3dadd( -27.2368, -64.7128, -23.1041, 1.38 ) }
    dend_31 { pt3dadd( -30.9448, -68.1982, -28.4244, 1.38 ) }
    dend_31 { pt3dadd( -32.7105, -70.234, -31.2106, 1.38 ) }
    dend_31 { pt3dadd( -33.7572, -71.6248, -32.8912, 1.38 ) }
    dend_31 { pt3dadd( -35.0943, -73.5612, -34.9264, 1.38 ) }
    dend_31 { pt3dadd( -36.6713, -75.7912, -36.8922, 1.38 ) }
    dend_31 { pt3dadd( -40.3167, -81.2365, -41.2138, 1.38 ) }
    dend_31 { pt3dadd( -41.6185, -83.1798, -42.5094, 1.38 ) }
    dend_31 { pt3dadd( -43.3863, -85.4372, -44.02, 1.38 ) }
    dend_31 { pt3dadd( -46.006, -88.4809, -46.1302, 1.94 ) }
    dend_31 { pt3dadd( -47.2905, -89.9409, -47.0994, 1.94 ) }
    dend_31 { pt3dadd( -49.2409, -91.9254, -48.4436, 0.28 ) }
    dend_31 { pt3dadd( -49.9059, -92.5801, -48.7715, 0.28 ) }
    dend_31 { pt3dadd( -51.9522, -94.6931, -49.9292, 1.38 ) }
    dend_31 { pt3dadd( -53.152, -96.0708, -50.6403, 0.28 ) }
    dend_31 { pt3dadd( -54.4914, -97.7154, -51.3926, 1.11 ) }
    dend_31 { pt3dadd( -57.141, -100.768, -53.2779, 0.28 ) }
    dend_31 { pt3dadd( -58.9454, -102.698, -54.6639, 1.38 ) }
    dend_31 { pt3dadd( -61.13, -104.744, -56.5721, 0.55 ) }
    dend_31 { pt3dadd( -63.5092, -106.625, -58.7656, 0.83 ) }
    dend_31 { pt3dadd( -65.0548, -107.562, -60.083, 0.83 ) }
    dend_31 { pt3dadd( -69.9724, -110.029, -63.9348, 0.28 ) }
    dend_31 { pt3dadd( -71.1682, -110.575, -64.7857, 0.83 ) }
    dend_31 { pt3dadd( -74.0256, -111.802, -67.1452, 0.83 ) }
    dend_31 { pt3dadd( -75.298, -112.306, -68.2093, 0.83 ) }
    dend_31 { pt3dadd( -77.2884, -112.941, -69.9093, 0.55 ) }
    dend_31 { pt3dadd( -79.1407, -113.59, -71.4063, 0.28 ) }
    dend_31 { pt3dadd( -80.7913, -114.283, -72.6315, 1.66 ) }
    dend_31 { pt3dadd( -86.3424, -116.684, -77.0102, 0.28 ) }
    dend_31 { pt3dadd( -88.239, -117.591, -78.5863, 0.83 ) }
    dend_31 { pt3dadd( -90.5206, -118.769, -80.6205, 0.28 ) }
    dend_31 { pt3dadd( -91.688, -119.399, -81.7334, 0.83 ) }
    dend_31 { pt3dadd( -94.0838, -120.706, -84.0152, 0.28 ) }
    dend_31 { pt3dadd( -96.6686, -122.361, -86.3659, 1.94 ) }
    dend_31 { pt3dadd( -98.0987, -123.552, -87.4769, 0.28 ) }
    dend_31 { pt3dadd( -99.2347, -124.789, -88.3917, 0.83 ) }
    dend_31 { pt3dadd( -100.597, -126.544, -89.4444, 0.28 ) }
    dend_31 { pt3dadd( -101.496, -127.79, -90.0947, 0.28 ) }
    dend_31 { pt3dadd( -102.865, -129.971, -90.9176, 1.38 ) }
    dend_31 { pt3dadd( -104.308, -132.403, -91.6505, 0.28 ) }
    dend_31 { pt3dadd( -105.238, -133.857, -92.0232, 0.28 ) }
    dend_31 { pt3dadd( -106.994, -136.286, -92.5884, 0.55 ) }
    dend_31 { pt3dadd( -108.009, -137.446, -92.8312, 0.28 ) }
    dend_31 { pt3dadd( -110.006, -139.435, -93.5817, 0.83 ) }
    dend_31 { pt3dadd( -111.33, -140.717, -94.2197, 0.28 ) }
    dend_31 { pt3dadd( -112.162, -141.544, -94.6686, 0.55 ) }
    dend_31 { pt3dadd( -113.024, -142.384, -95.1814, 0.28 ) }
    dend_31 { pt3dadd( -114.964, -144.435, -96.4693, 1.11 ) }
    dend_31 { pt3dadd( -118.33, -148.748, -99.0742, 0.28 ) }
    dend_31 { pt3dadd( -119.241, -150.3, -100.131, 0.28 ) }
    dend_31 { pt3dadd( -120.025, -152.011, -101.236, 0.28 ) }
    dend_31 { pt3dadd( -120.315, -152.824, -101.745, 0.83 ) }
    dend_31 { pt3dadd( -120.791, -154.322, -102.816, 0.28 ) }
    dend_31 { pt3dadd( -121.837, -157.76, -105.571, 0.83 ) }
    dend_31 { pt3dadd( -123.733, -163.408, -110.61, 0.55 ) }
    dend_31 { pt3dadd( -124.504, -165.487, -112.738, 0.55 ) }
    dend_31 { pt3dadd( -125.567, -168.217, -115.733, 0.28 ) }
    dend_31 { pt3dadd( -127.759, -173.01, -121.328, 0.83 ) }
    dend_31 { pt3dadd( -128.745, -174.802, -123.761, 0.83 ) }
    dend_31 { pt3dadd( -130.168, -177.09, -127.157, 0.83 ) }
    dend_31 { pt3dadd( -131.44, -179.028, -129.97, 0.28 ) }
    dend_31 { pt3dadd( -132.203, -180.14, -131.499, 0.83 ) }
    dend_31 { pt3dadd( -133.276, -181.808, -133.333, 1.11 ) }
    dend_31 { pt3dadd( -136.145, -187.307, -137.242, 0.28 ) }
    dend_31 { pt3dadd( -137.184, -189.826, -138.621, 0.55 ) }
    dend_31 { pt3dadd( -138.051, -192.567, -139.739, 0.55 ) }
    dend_31 { pt3dadd( -138.799, -195.972, -140.788, 0.55 ) }
    dend_31 { pt3dadd( -139.419, -200.19, -142.064, 0.55 ) }
    dend_31 { pt3dadd( -139.571, -201.892, -142.526, 0.55 ) }
    dend_31 { pt3dadd( -139.799, -205.579, -143.599, 0.28 ) }
    dend_31 { pt3dadd( -139.874, -207.381, -144.453, 0.83 ) }
    dend_31 { pt3dadd( -139.948, -209.614, -145.738, 0.28 ) }
    dend_31 { pt3dadd( -140.076, -212.895, -147.781, 0.55 ) }
    dend_31 { pt3dadd( -140.177, -214.754, -148.963, 0.55 ) }
    dend_31 { pt3dadd( -140.321, -218.599, -151.403, 0.55 ) }
    dend_31 { pt3dadd( -140.454, -221.978, -153.411, 0.55 ) }
    dend_31 { pt3dadd( -140.554, -224.259, -154.748, 1.11 ) }
    dend_31 { pt3dadd( -140.683, -226.053, -155.732, 0.28 ) }
    dend_31 { pt3dadd( -140.956, -229.102, -157.222, 0.83 ) }
    dend_31 { pt3dadd( -141.258, -231.361, -158.268, 0.28 ) }
    dend_31 { pt3dadd( -141.623, -233.154, -159.064, 0.28 ) }
    dend_31 { pt3dadd( -142.363, -235.918, -160.493, 0.55 ) }
    dend_31 { pt3dadd( -143.052, -238.196, -161.821, 0.28 ) }
    dend_31 { pt3dadd( -143.882, -240.765, -163.369, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_31 { pt3dadd( -144.305, -242.066, -164.177, 0.83 ) }
    dend_31 { pt3dadd( -145.053, -244.777, -165.837, 0.28 ) }
    dend_31 { pt3dadd( -145.721, -247.415, -167.555, 0.83 ) }
    dend_31 { pt3dadd( -146.377, -250.602, -169.717, 0.83 ) }
    dend_31 { pt3dadd( -146.652, -252.614, -171.077, 0.83 ) }
    dend_31 { pt3dadd( -146.824, -255.667, -172.95, 0.28 ) }
    dend_31 { pt3dadd( -146.765, -258.476, -174.498, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 7/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -17.4198, -57.3371, -10.485, 0.55 ) }
    dend_30 { pt3dadd( -18.2279, -57.6515, -10.02, 0.55 ) }
    dend_30 { pt3dadd( -19.2946, -58.0743, -9.45025, 0.28 ) }
    dend_30 { pt3dadd( -20.5997, -58.5159, -8.80188, 0.55 ) }
    dend_30 { pt3dadd( -21.5435, -58.7573, -8.39025, 0.28 ) }
    dend_30 { pt3dadd( -25.658, -59.5013, -6.59544, 0.55 ) }
    dend_30 { pt3dadd( -27.6035, -59.7778, -5.74564, 0.55 ) }
    dend_30 { pt3dadd( -29.218, -59.9074, -5.05383, 0.55 ) }
    dend_30 { pt3dadd( -31.4121, -59.9776, -4.16567, 0.55 ) }
    dend_30 { pt3dadd( -33.3216, -60.0663, -3.47123, 0.55 ) }
    dend_30 { pt3dadd( -36.5301, -60.269, -2.40762, 0.28 ) }
    dend_30 { pt3dadd( -38.1398, -60.3745, -1.95933, 0.55 ) }
    dend_30 { pt3dadd( -40.6827, -60.6135, -1.18849, 0.55 ) }
    dend_30 { pt3dadd( -43.4532, -61.0181, -0.280945, 0.83 ) }
    dend_30 { pt3dadd( -46.7859, -61.7847, 1.02496, 0.55 ) }
    dend_30 { pt3dadd( -48.5581, -62.3414, 1.91097, 0.28 ) }
    dend_30 { pt3dadd( -49.1588, -62.5537, 2.25434, 0.55 ) }
    dend_30 { pt3dadd( -50.8953, -63.185, 3.5593, 0.28 ) }
    dend_30 { pt3dadd( -51.8541, -63.5325, 4.47715, 0.55 ) }
    dend_30 { pt3dadd( -54.1456, -64.2059, 6.89384, 0.83 ) }
    dend_30 { pt3dadd( -55.8312, -64.5539, 8.69757, 0.55 ) }
    dend_30 { pt3dadd( -56.8605, -64.7401, 9.71625, 0.55 ) }
    dend_30 { pt3dadd( -59.1507, -65.0914, 11.9663, 0.55 ) }
    dend_30 { pt3dadd( -61.1369, -65.3104, 13.7753, 0.28 ) }
    dend_30 { pt3dadd( -62.88, -65.3761, 15.2164, 1.38 ) }
    dend_30 { pt3dadd( -63.7877, -65.3713, 15.8769, 0.28 ) }
    dend_30 { pt3dadd( -65.1061, -65.3206, 16.7532, 0.83 ) }
    dend_30 { pt3dadd( -68.9388, -65.0865, 19.258, 0.28 ) }
    dend_30 { pt3dadd( -71.3628, -64.8277, 20.8648, 0.55 ) }
    dend_30 { pt3dadd( -72.7201, -64.6352, 21.8036, 0.28 ) }
    dend_30 { pt3dadd( -73.7424, -64.5233, 22.5152, 0.55 ) }
    dend_30 { pt3dadd( -74.5279, -64.4502, 23.0287, 0.28 ) }
    dend_30 { pt3dadd( -76.1621, -64.3861, 24.0893, 0.83 ) }
    dend_30 { pt3dadd( -78.2186, -64.41, 25.276, 0.28 ) }
    dend_30 { pt3dadd( -80.5138, -64.6747, 26.8855, 0.55 ) }
    dend_30 { pt3dadd( -82.5024, -65.0818, 28.4338, 0.55 ) }
    dend_30 { pt3dadd( -83.3469, -65.3466, 29.1234, 0.55 ) }
    dend_30 { pt3dadd( -85.4964, -66.2904, 31.1193, 0.28 ) }
    dend_30 { pt3dadd( -86.5382, -66.8652, 32.2013, 0.83 ) }
    dend_30 { pt3dadd( -88.3377, -68.0198, 34.5448, 0.28 ) }
    dend_30 { pt3dadd( -88.6057, -68.2101, 34.9892, 0.28 ) }
    dend_30 { pt3dadd( -89.7721, -68.9282, 37.0595, 0.55 ) }
    dend_30 { pt3dadd( -91.2534, -69.8715, 39.7519, 0.28 ) }
    dend_30 { pt3dadd( -92.3083, -70.5049, 41.6518, 0.55 ) }
    dend_30 { pt3dadd( -94.0838, -71.5625, 44.9377, 0.28 ) }
    dend_30 { pt3dadd( -95.3665, -72.1764, 47.1889, 0.55 ) }
    dend_30 { pt3dadd( -96.9434, -72.8711, 50.1055, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 54/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 1.25002, -26.8467, -9.10829, 0.55 ) }
    dend_26 { pt3dadd( 2.00949, -29.2702, -10.645, 0.55 ) }
    dend_26 { pt3dadd( 2.63219, -31.2572, -11.905, 0.83 ) }
    dend_26 { pt3dadd( 3.52491, -34.1059, -13.7113, 0.83 ) }
    dend_26 { pt3dadd( 4.20713, -36.2828, -15.0917, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 59/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 1.25002, -26.8467, -9.10829, 0.55 ) }
    dend_23 { pt3dadd( 1.20832, -25.6006, -11.4709, 0.55 ) }
    dend_23 { pt3dadd( 0.983877, -24.4998, -14.1695, 0.55 ) }
    dend_23 { pt3dadd( 0.87858, -24.192, -14.98, 0.55 ) }
    dend_23 { pt3dadd( 0.498099, -23.5565, -17.0669, 0.55 ) }
    dend_23 { pt3dadd( -1.79305, -20.8592, -27.2889, 0.55 ) }
    dend_23 { pt3dadd( -2.34767, -20.2062, -29.7634, 0.55 ) }
    dend_23 { pt3dadd( -4.68469, -18.0116, -39.1056, 0.55 ) }
    dend_23 { pt3dadd( -5.36465, -17.4739, -41.6203, 0.55 ) }
    dend_23 { pt3dadd( -7.98235, -15.741, -50.7928, 0.55 ) }
    dend_23 { pt3dadd( -9.31288, -15.0836, -54.9722, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 70/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -8.59105, -33.537, -11.8594, 0.83 ) }
    dend_16 { pt3dadd( -10.8326, -34.194, -12.2362, 0.83 ) }
    dend_16 { pt3dadd( -12.9508, -34.771, -12.603, 0.83 ) }
    dend_16 { pt3dadd( -14.4831, -35.3778, -12.7894, 0.55 ) }
    dend_16 { pt3dadd( -16.8617, -36.3442, -13.0644, 0.55 ) }
    dend_16 { pt3dadd( -19.7157, -37.4125, -13.3651, 0.55 ) }
    dend_16 { pt3dadd( -21.9014, -38.1907, -13.6626, 0.55 ) }
    dend_16 { pt3dadd( -23.8968, -38.8575, -13.9958, 0.55 ) }
    dend_16 { pt3dadd( -30.0666, -40.6153, -15.317, 0.55 ) }
    dend_16 { pt3dadd( -34.6577, -41.7785, -16.4463, 0.55 ) }
    dend_16 { pt3dadd( -36.681, -42.2542, -17.0125, 0.55 ) }
    dend_16 { pt3dadd( -39.0227, -42.6442, -17.7504, 0.55 ) }
    dend_16 { pt3dadd( -40.6361, -42.8034, -18.3232, 0.83 ) }
    dend_16 { pt3dadd( -45.2285, -42.7874, -20.1778, 0.55 ) }
    dend_16 { pt3dadd( -47.1217, -42.5049, -20.9961, 0.55 ) }
    dend_16 { pt3dadd( -47.9641, -42.3354, -21.3389, 0.55 ) }
    dend_16 { pt3dadd( -49.8071, -41.9592, -22.0522, 0.55 ) }
    dend_16 { pt3dadd( -52.5871, -41.3316, -22.9531, 0.55 ) }
    dend_16 { pt3dadd( -56.265, -40.388, -24.03, 0.55 ) }
    dend_16 { pt3dadd( -58.5257, -39.71, -24.5013, 0.55 ) }
    dend_16 { pt3dadd( -59.8849, -39.306, -24.776, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 91/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -8.59105, -33.537, -11.8594, 0.55 ) }
    dend_13 { pt3dadd( -8.99765, -33.3323, -11.8579, 0.55 ) }
    dend_13 { pt3dadd( -10.6691, -32.6216, -11.7713, 0.55 ) }
    dend_13 { pt3dadd( -13.3685, -31.6469, -11.6803, 0.55 ) }
    dend_13 { pt3dadd( -14.9545, -31.0947, -11.3544, 0.55 ) }
    dend_13 { pt3dadd( -17.033, -30.4119, -10.756, 0.83 ) }
    dend_13 { pt3dadd( -20.161, -29.4887, -9.78149, 0.55 ) }
    dend_13 { pt3dadd( -22.2176, -28.8583, -9.08852, 0.55 ) }
    dend_13 { pt3dadd( -23.7205, -28.3821, -8.5158, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_13 { pt3dadd( -29.8246, -26.6238, -5.86735, 0.55 ) }
    dend_13 { pt3dadd( -33.8319, -25.5546, -4.06597, 0.55 ) }
    dend_13 { pt3dadd( -36.8581, -24.8766, -2.69087, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 3/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 2.91197, 124.648, 19.2248, 0.28 ) }
    dend_7 { pt3dadd( 1.98387, 125.074, 19.2648, 0.28 ) }
    dend_7 { pt3dadd( 0.752679, 125.745, 19.3195, 0.55 ) }
    dend_7 { pt3dadd( -0.678548, 126.553, 19.3832, 0.28 ) }
    dend_7 { pt3dadd( -1.60861, 127.129, 19.4381, 0.83 ) }
    dend_7 { pt3dadd( -2.48603, 127.685, 19.5136, 0.28 ) }
    dend_7 { pt3dadd( -3.27079, 128.209, 19.5793, 0.83 ) }
    dend_7 { pt3dadd( -4.54065, 129.156, 19.6892, 0.55 ) }
    dend_7 { pt3dadd( -5.6742, 130.098, 19.7173, 0.55 ) }
    dend_7 { pt3dadd( -6.927, 131.108, 19.6427, 0.28 ) }
    dend_7 { pt3dadd( -7.82382, 131.855, 19.3975, 0.55 ) }
    dend_7 { pt3dadd( -8.51366, 132.429, 19.1231, 0.28 ) }
    dend_7 { pt3dadd( -9.1546, 133.048, 18.8212, 0.83 ) }
    dend_7 { pt3dadd( -10.498, 134.397, 18.1687, 0.28 ) }
    dend_7 { pt3dadd( -11.506, 135.469, 17.6798, 0.83 ) }
    dend_7 { pt3dadd( -13.8125, 137.994, 16.6037, 0.28 ) }
    dend_7 { pt3dadd( -15.8111, 140.256, 15.6536, 0.55 ) }
    dend_7 { pt3dadd( -18.4844, 143.306, 14.4958, 0.55 ) }
    dend_7 { pt3dadd( -19.689, 144.688, 14.0181, 0.83 ) }
    dend_7 { pt3dadd( -20.7187, 145.82, 13.6796, 0.28 ) }
    dend_7 { pt3dadd( -21.6101, 146.784, 13.4224, 0.83 ) }
    dend_7 { pt3dadd( -23.2744, 148.456, 13.0326, 0.28 ) }
    dend_7 { pt3dadd( -25.0683, 150.08, 12.5262, 0.83 ) }
    dend_7 { pt3dadd( -26.9725, 151.504, 11.9333, 0.28 ) }
    dend_7 { pt3dadd( -28.2187, 152.396, 11.5201, 0.55 ) }
    dend_7 { pt3dadd( -29.5186, 153.239, 11.0868, 0.28 ) }
    dend_7 { pt3dadd( -29.8166, 153.416, 10.9918, 0.83 ) }
    dend_7 { pt3dadd( -31.5969, 154.334, 10.5335, 0.28 ) }
    dend_7 { pt3dadd( -32.8531, 154.878, 10.1298, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 32/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 2.91197, 124.648, 19.2248, 0.55 ) }
    dend_4 { pt3dadd( 2.89561, 128.058, 20.1622, 0.55 ) }
    dend_4 { pt3dadd( 2.86965, 130.122, 20.7998, 0.55 ) }
    dend_4 { pt3dadd( 2.81343, 133.193, 21.6805, 0.55 ) }
    dend_4 { pt3dadd( 2.73935, 137.239, 22.841, 0.55 ) }
    dend_4 { pt3dadd( 2.70113, 139.327, 23.4398, 0.55 ) }
    dend_4 { pt3dadd( 2.60028, 144.836, 25.0196, 0.55 ) }
    dend_4 { pt3dadd( 2.58373, 148.648, 25.9756, 0.55 ) }
    dend_4 { pt3dadd( 2.69953, 153.6, 27.2116, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 41/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -146.765, -258.476, -174.498, 0.55 ) }
    dend_33 { pt3dadd( -145.806, -260.17, -174.242, 0.55 ) }
    dend_33 { pt3dadd( -144.682, -262.132, -173.913, 0.55 ) }
    dend_33 { pt3dadd( -143.644, -263.931, -173.593, 0.28 ) }
    dend_33 { pt3dadd( -143.451, -264.25, -173.539, 0.55 ) }
    dend_33 { pt3dadd( -142.595, -265.625, -173.319, 0.28 ) }
    dend_33 { pt3dadd( -142.268, -266.112, -173.164, 0.55 ) }
    dend_33 { pt3dadd( -141.414, -267.264, -172.47, 0.28 ) }
    dend_33 { pt3dadd( -141.108, -267.633, -172.141, 0.55 ) }
    dend_33 { pt3dadd( -139.982, -268.884, -170.808, 0.55 ) }
    dend_33 { pt3dadd( -139.695, -269.181, -170.428, 0.83 ) }
    dend_33 { pt3dadd( -137.29, -271.512, -167.199, 0.28 ) }
    dend_33 { pt3dadd( -135.892, -272.786, -165.286, 0.55 ) }
    dend_33 { pt3dadd( -135.794, -272.871, -165.152, 0.28 ) }
    dend_33 { pt3dadd( -135.299, -273.299, -164.459, 0.83 ) }
    dend_33 { pt3dadd( -133.92, -274.515, -162.406, 0.28 ) }
    dend_33 { pt3dadd( -133.209, -275.16, -161.442, 0.55 ) }
    dend_33 { pt3dadd( -132.911, -275.446, -161.114, 0.28 ) }
    dend_33 { pt3dadd( -132.265, -276.088, -160.473, 0.28 ) }
    dend_33 { pt3dadd( -131.192, -277.177, -159.344, 0.28 ) }
    dend_33 { pt3dadd( -130.062, -278.388, -158.029, 0.28 ) }
    dend_33 { pt3dadd( -129.648, -278.901, -157.516, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -146.765, -258.476, -174.498, 0.28 ) }
    dend_32 { pt3dadd( -147.719, -260.97, -175.373, 0.28 ) }
    dend_32 { pt3dadd( -148.756, -263.886, -176.31, 0.28 ) }
    dend_32 { pt3dadd( -149.26, -265.345, -176.785, 0.28 ) }
    dend_32 { pt3dadd( -149.665, -266.497, -177.153, 0.55 ) }
    dend_32 { pt3dadd( -151.235, -270.779, -178.4, 0.28 ) }
    dend_32 { pt3dadd( -151.467, -271.403, -178.541, 0.28 ) }
    dend_32 { pt3dadd( -152.195, -273.281, -178.781, 0.55 ) }
    dend_32 { pt3dadd( -152.698, -274.593, -178.816, 0.28 ) }
    dend_32 { pt3dadd( -153.001, -275.494, -178.844, 0.55 ) }
    dend_32 { pt3dadd( -153.678, -277.557, -178.872, 0.28 ) }
    dend_32 { pt3dadd( -154.212, -279.328, -178.827, 0.55 ) }
    dend_32 { pt3dadd( -155.299, -283.317, -178.883, 0.28 ) }
    dend_32 { pt3dadd( -155.485, -284.159, -178.963, 0.55 ) }
    dend_32 { pt3dadd( -156.259, -288.746, -179.562, 0.28 ) }
    dend_32 { pt3dadd( -156.316, -289.41, -179.676, 0.55 ) }
    dend_32 { pt3dadd( -156.347, -291.206, -180.056, 0.28 ) }
    dend_32 { pt3dadd( -156.284, -292.273, -180.295, 0.55 ) }
    dend_32 { pt3dadd( -155.8, -295.594, -181.001, 0.28 ) }
    dend_32 { pt3dadd( -155.665, -296.258, -181.105, 0.55 ) }
    dend_32 { pt3dadd( -154.714, -299.79, -181.365, 0.28 ) }
    dend_32 { pt3dadd( -154.459, -300.606, -181.406, 0.55 ) }
    dend_32 { pt3dadd( -153.728, -302.719, -181.452, 0.28 ) }
    dend_32 { pt3dadd( -153.615, -303.003, -181.448, 0.55 ) }
    dend_32 { pt3dadd( -153.136, -304.14, -181.36, 0.28 ) }
    dend_32 { pt3dadd( -152.906, -304.69, -181.33, 0.55 ) }
    dend_32 { pt3dadd( -151.838, -307.281, -181.284, 0.28 ) }
    dend_32 { pt3dadd( -151.732, -307.557, -181.271, 0.55 ) }
    dend_32 { pt3dadd( -151.142, -309.273, -181.183, 0.28 ) }
    dend_32 { pt3dadd( -151.048, -309.558, -181.158, 0.55 ) }
    dend_32 { pt3dadd( -150.575, -311.102, -180.985, 0.28 ) }
    dend_32 { pt3dadd( -150.406, -311.675, -180.976, 0.55 ) }
    dend_32 { pt3dadd( -149.638, -314.539, -181.159, 0.28 ) }
    dend_32 { pt3dadd( -149.351, -315.705, -181.303, 0.55 ) }
    dend_32 { pt3dadd( -149.016, -317.174, -181.555, 0.28 ) }
    dend_32 { pt3dadd( -148.825, -318.094, -181.721, 0.55 ) }
    dend_32 { pt3dadd( -148.086, -322.113, -182.519, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_32 { pt3dadd( -147.787, -324.091, -182.88, 0.28 ) }
    dend_32 { pt3dadd( -147.716, -324.752, -182.994, 0.28 ) }
    dend_32 { pt3dadd( -147.621, -325.693, -183.035, 0.55 ) }
    dend_32 { pt3dadd( -147.357, -328.241, -182.966, 0.28 ) }
    dend_32 { pt3dadd( -147.273, -328.908, -182.915, 0.55 ) }
    dend_32 { pt3dadd( -146.805, -332.138, -182.522, 0.28 ) }
    dend_32 { pt3dadd( -146.503, -334.018, -182.266, 0.55 ) }
    dend_32 { pt3dadd( -145.304, -341.263, -181.254, 0.28 ) }
    dend_32 { pt3dadd( -145.258, -341.564, -181.212, 0.55 ) }
    dend_32 { pt3dadd( -144.974, -343.396, -180.938, 0.28 ) }
    dend_32 { pt3dadd( -144.839, -344.635, -180.738, 0.55 ) }
    dend_32 { pt3dadd( -144.712, -347.754, -180.195, 0.28 ) }
    dend_32 { pt3dadd( -144.703, -349.468, -179.872, 0.28 ) }
    dend_32 { pt3dadd( -144.873, -350.981, -179.563, 0.55 ) }
    dend_32 { pt3dadd( -145.215, -353.091, -179.094, 0.28 ) }
    dend_32 { pt3dadd( -146.049, -356.408, -178.25, 0.28 ) }
    dend_32 { pt3dadd( -146.408, -357.503, -177.964, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 17/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 4.20713, -36.2828, -15.0917, 0.55 ) }
    dend_28 { pt3dadd( 6.57739, -38.0886, -20.0597, 0.55 ) }
    dend_28 { pt3dadd( 7.47182, -38.761, -21.9677, 0.55 ) }
    dend_28 { pt3dadd( 8.19858, -39.2861, -23.5487, 0.83 ) }
    dend_28 { pt3dadd( 9.72307, -40.2542, -26.8566, 0.55 ) }
    dend_28 { pt3dadd( 11.8765, -41.4399, -31.4539, 1.11 ) }
    dend_28 { pt3dadd( 13.7673, -42.3111, -35.3539, 0.55 ) }
    dend_28 { pt3dadd( 15.009, -42.6855, -37.6839, 0.55 ) }
    dend_28 { pt3dadd( 16.7264, -42.8751, -41.1274, 0.83 ) }
    dend_28 { pt3dadd( 17.4538, -42.7992, -42.7732, 0.55 ) }
    dend_28 { pt3dadd( 17.9905, -42.5995, -44.0943, 0.55 ) }
    dend_28 { pt3dadd( 18.8073, -42.0151, -46.2101, 0.55 ) }
    dend_28 { pt3dadd( 20.0859, -40.9192, -49.5071, 0.28 ) }
    dend_28 { pt3dadd( 21.4441, -39.6044, -52.842, 0.83 ) }
    dend_28 { pt3dadd( 22.6809, -38.2212, -55.9066, 0.28 ) }
    dend_28 { pt3dadd( 23.4476, -37.3357, -57.8045, 0.55 ) }
    dend_28 { pt3dadd( 23.8763, -36.7801, -58.8552, 0.28 ) }
    dend_28 { pt3dadd( 24.5048, -35.8289, -60.3411, 0.55 ) }
    dend_28 { pt3dadd( 25.5737, -34.1212, -62.4907, 0.55 ) }
    dend_28 { pt3dadd( 26.0398, -33.2768, -63.3203, 0.28 ) }
    dend_28 { pt3dadd( 26.6087, -32.3253, -64.2058, 0.55 ) }
    dend_28 { pt3dadd( 27.5853, -30.5314, -65.8369, 0.55 ) }
    dend_28 { pt3dadd( 28.478, -28.9165, -67.3342, 1.11 ) }
    dend_28 { pt3dadd( 30.4713, -26.1105, -69.8679, 0.55 ) }
    dend_28 { pt3dadd( 31.7137, -24.7808, -71.1455, 0.55 ) }
    dend_28 { pt3dadd( 33.1063, -23.5544, -72.4278, 0.55 ) }
    dend_28 { pt3dadd( 35.0067, -22.0775, -74.0449, 0.55 ) }
    dend_28 { pt3dadd( 37.437, -20.3344, -75.9764, 1.11 ) }
    dend_28 { pt3dadd( 42.0718, -17.1695, -79.4759, 0.83 ) }
    dend_28 { pt3dadd( 45.574, -14.8644, -82.0028, 1.11 ) }
    dend_28 { pt3dadd( 47.8173, -13.385, -83.6109, 0.28 ) }
    dend_28 { pt3dadd( 48.0712, -13.2155, -83.7964, 0.55 ) }
    dend_28 { pt3dadd( 49.7511, -12.188, -85.0731, 0.28 ) }
    dend_28 { pt3dadd( 50.6723, -11.5831, -85.9559, 0.55 ) }
    dend_28 { pt3dadd( 51.4873, -10.9237, -87.0389, 0.28 ) }
    dend_28 { pt3dadd( 52.2188, -10.2629, -88.0925, 0.55 ) }
    dend_28 { pt3dadd( 53.9773, -8.63416, -90.678, 0.28 ) }
    dend_28 { pt3dadd( 54.7696, -7.77179, -92.072, 0.83 ) }
    dend_28 { pt3dadd( 56.3774, -5.67056, -95.4348, 0.28 ) }
    dend_28 { pt3dadd( 57.663, -3.67106, -98.5013, 1.11 ) }
    dend_28 { pt3dadd( 58.6082, -2.06686, -100.65, 0.28 ) }
    dend_28 { pt3dadd( 59.1162, -1.17219, -101.679, 0.83 ) }
    dend_28 { pt3dadd( 61.1354, 2.39328, -105.187, 0.55 ) }
    dend_28 { pt3dadd( 62.3798, 4.53422, -106.919, 0.55 ) }
    dend_28 { pt3dadd( 63.1902, 5.88771, -107.767, 0.55 ) }
    dend_28 { pt3dadd( 65.5388, 9.52328, -109.667, 0.28 ) }
    dend_28 { pt3dadd( 66.8533, 11.4673, -110.525, 0.55 ) }
    dend_28 { pt3dadd( 67.8865, 12.96, -111.079, 0.55 ) }
    dend_28 { pt3dadd( 69.1266, 14.6318, -111.598, 0.55 ) }
    dend_28 { pt3dadd( 71.0578, 17.4147, -112.503, 0.55 ) }
    dend_28 { pt3dadd( 72.55, 19.8864, -113.458, 0.55 ) }
    dend_28 { pt3dadd( 73.3737, 21.4275, -114.237, 0.55 ) }
    dend_28 { pt3dadd( 74.1364, 22.8159, -115.016, 0.55 ) }
    dend_28 { pt3dadd( 74.8029, 23.9584, -115.683, 0.28 ) }
    dend_28 { pt3dadd( 75.4931, 25.0557, -116.368, 0.55 ) }
    dend_28 { pt3dadd( 76.9241, 27.1376, -117.793, 0.28 ) }
    dend_28 { pt3dadd( 78.3533, 29.1255, -119.267, 0.83 ) }
    dend_28 { pt3dadd( 79.7768, 30.8751, -120.694, 0.28 ) }
    dend_28 { pt3dadd( 80.5997, 31.7721, -121.503, 0.28 ) }
    dend_28 { pt3dadd( 81.3234, 32.5525, -122.215, 0.28 ) }
    dend_28 { pt3dadd( 81.711, 32.9774, -122.603, 0.28 ) }
    dend_28 { pt3dadd( 82.5136, 33.8181, -123.42, 0.28 ) }
    dend_28 { pt3dadd( 83.3825, 34.765, -124.311, 0.28 ) }
    dend_28 { pt3dadd( 84.1792, 35.6431, -125.144, 0.55 ) }
    dend_28 { pt3dadd( 85.101, 36.5116, -125.945, 0.55 ) }
    dend_28 { pt3dadd( 86.9896, 38.0316, -127.391, 0.55 ) }
    dend_28 { pt3dadd( 88.2103, 38.9454, -128.256, 0.55 ) }
    dend_28 { pt3dadd( 89.5862, 39.9403, -129.119, 0.28 ) }
    dend_28 { pt3dadd( 91.1712, 41.0725, -130.022, 0.28 ) }
    dend_28 { pt3dadd( 93.3607, 42.5084, -131.22, 0.28 ) }
    dend_28 { pt3dadd( 94.5961, 43.1955, -131.906, 0.55 ) }
    dend_28 { pt3dadd( 95.9728, 43.9455, -132.71, 0.28 ) }
    dend_28 { pt3dadd( 97.084, 44.5636, -133.427, 0.28 ) }
    dend_28 { pt3dadd( 97.8752, 44.962, -133.997, 0.28 ) }
    dend_28 { pt3dadd( 99.9227, 46.0294, -135.651, 0.55 ) }
    dend_28 { pt3dadd( 102.03, 47.0774, -137.55, 0.28 ) }
    dend_28 { pt3dadd( 103.743, 47.8801, -139.138, 0.83 ) }
    dend_28 { pt3dadd( 105.154, 48.5298, -140.485, 0.28 ) }
    dend_28 { pt3dadd( 106.489, 49.1421, -141.804, 0.83 ) }
    dend_28 { pt3dadd( 108.88, 50.3191, -144.108, 0.28 ) }
    dend_28 { pt3dadd( 110.728, 51.3394, -145.864, 0.83 ) }
    dend_28 { pt3dadd( 112.883, 52.6335, -147.896, 0.55 ) }
    dend_28 { pt3dadd( 113.89, 53.224, -148.717, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_28 { pt3dadd( 115.85, 54.3811, -150.131, 0.83 ) }
    dend_28 { pt3dadd( 118.697, 55.9644, -151.857, 0.28 ) }
    dend_28 { pt3dadd( 120.431, 56.8021, -152.74, 0.28 ) }
    dend_28 { pt3dadd( 121.92, 57.5151, -153.404, 0.55 ) }
    dend_28 { pt3dadd( 125.781, 58.9441, -154.551, 0.55 ) }
    dend_28 { pt3dadd( 127.421, 59.4212, -154.921, 0.83 ) }
    dend_28 { pt3dadd( 129.661, 60.0942, -155.218, 0.28 ) }
    dend_28 { pt3dadd( 131.544, 60.6897, -155.332, 0.28 ) }
    dend_28 { pt3dadd( 133.61, 61.4464, -155.419, 0.83 ) }
    dend_28 { pt3dadd( 139.796, 64.1966, -155.658, 0.28 ) }
    dend_28 { pt3dadd( 141.106, 64.9, -155.767, 0.55 ) }
    dend_28 { pt3dadd( 146.486, 68.2437, -156.245, 0.28 ) }
    dend_28 { pt3dadd( 148.558, 69.7836, -156.511, 0.55 ) }
    dend_28 { pt3dadd( 150.698, 71.6034, -156.861, 0.28 ) }
    dend_28 { pt3dadd( 151.919, 72.8519, -157.174, 0.55 ) }
    dend_28 { pt3dadd( 153.201, 74.8128, -157.849, 0.28 ) }
    dend_28 { pt3dadd( 153.39, 75.2593, -158.011, 0.55 ) }
    dend_28 { pt3dadd( 153.805, 77.615, -158.998, 0.28 ) }
    dend_28 { pt3dadd( 153.814, 78.0905, -159.159, 0.55 ) }
    dend_28 { pt3dadd( 153.701, 79.8124, -159.57, 0.28 ) }
    dend_28 { pt3dadd( 153.702, 80.8389, -159.706, 0.55 ) }
    dend_28 { pt3dadd( 153.842, 85.7297, -160.009, 0.28 ) }
    dend_28 { pt3dadd( 153.898, 86.8662, -160.047, 0.55 ) }
    dend_28 { pt3dadd( 154.124, 90.5517, -160.08, 0.28 ) }
    dend_28 { pt3dadd( 154.264, 92.3437, -160.087, 0.55 ) }
    dend_28 { pt3dadd( 154.857, 98.6201, -160.068, 0.28 ) }
    dend_28 { pt3dadd( 154.911, 99.1327, -160.068, 0.55 ) }
    dend_28 { pt3dadd( 155.54, 102.877, -159.999, 0.28 ) }
    dend_28 { pt3dadd( 155.71, 103.88, -159.965, 0.55 ) }
    dend_28 { pt3dadd( 155.947, 105.384, -159.902, 0.28 ) }
    dend_28 { pt3dadd( 156.243, 107.287, -159.716, 0.55 ) }
    dend_28 { pt3dadd( 156.604, 110.804, -159.352, 0.28 ) }
    dend_28 { pt3dadd( 157.153, 115.329, -158.764, 0.55 ) }
    dend_28 { pt3dadd( 157.534, 117.769, -158.33, 0.28 ) }
    dend_28 { pt3dadd( 157.885, 119.73, -157.921, 0.55 ) }
    dend_28 { pt3dadd( 158.736, 123.666, -156.918, 0.28 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 36/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.20713, -36.2828, -15.0917, 0.55 ) }
    dend_27 { pt3dadd( 2.9647, -37.2416, -15.1039, 0.55 ) }
    dend_27 { pt3dadd( 2.04756, -37.9449, -15.1172, 0.55 ) }
    dend_27 { pt3dadd( -0.146, -39.602, -15.074, 0.55 ) }
    dend_27 { pt3dadd( -4.76932, -43.1292, -14.8293, 0.55 ) }
    dend_27 { pt3dadd( -6.34548, -44.2725, -14.9027, 0.55 ) }
    dend_27 { pt3dadd( -7.11228, -44.8145, -14.9626, 0.55 ) }
    dend_27 { pt3dadd( -9.37979, -46.3754, -15.2306, 0.55 ) }
    dend_27 { pt3dadd( -10.5722, -47.1591, -15.3702, 0.55 ) }
    dend_27 { pt3dadd( -11.992, -48.0641, -15.4542, 0.83 ) }
    dend_27 { pt3dadd( -16.8543, -51.2105, -15.4024, 0.28 ) }
    dend_27 { pt3dadd( -17.6558, -51.6894, -15.4061, 0.28 ) }
    dend_27 { pt3dadd( -18.8653, -52.3222, -15.3961, 0.55 ) }
    dend_27 { pt3dadd( -20.7918, -53.2724, -15.3004, 0.28 ) }
    dend_27 { pt3dadd( -23.2598, -54.4884, -15.1917, 1.11 ) }
    dend_27 { pt3dadd( -27.3873, -56.6102, -14.8287, 0.55 ) }
    dend_27 { pt3dadd( -29.0848, -57.536, -14.5161, 0.55 ) }
    dend_27 { pt3dadd( -30.1115, -58.0668, -14.4483, 0.55 ) }
    dend_27 { pt3dadd( -32.3101, -59.14, -14.4515, 0.55 ) }
    dend_27 { pt3dadd( -35.2239, -60.5263, -14.6652, 0.83 ) }
    dend_27 { pt3dadd( -36.7909, -61.2792, -14.8145, 0.55 ) }
    dend_27 { pt3dadd( -38.1321, -61.9976, -14.865, 0.55 ) }
    dend_27 { pt3dadd( -43.0875, -64.9406, -14.813, 0.28 ) }
    dend_27 { pt3dadd( -44.216, -65.6398, -14.7317, 0.55 ) }
    dend_27 { pt3dadd( -46.5997, -67.0395, -14.3933, 0.28 ) }
    dend_27 { pt3dadd( -48.1439, -67.9835, -13.9847, 0.83 ) }
    dend_27 { pt3dadd( -49.7474, -69.0735, -13.3739, 0.28 ) }
    dend_27 { pt3dadd( -50.9952, -70.1633, -12.6086, 0.28 ) }
    dend_27 { pt3dadd( -51.994, -71.3079, -11.5895, 0.28 ) }
    dend_27 { pt3dadd( -52.4155, -71.8221, -11.1123, 0.55 ) }
    dend_27 { pt3dadd( -53.0038, -72.54, -10.43, 0.55 ) }
    dend_27 { pt3dadd( -54.1559, -73.8497, -9.22031, 0.28 ) }
    dend_27 { pt3dadd( -55.2379, -74.9836, -8.18466, 0.83 ) }
    dend_27 { pt3dadd( -57.1246, -76.892, -6.45652, 0.28 ) }
    dend_27 { pt3dadd( -57.913, -77.5918, -5.84396, 0.55 ) }
    dend_27 { pt3dadd( -59.65, -79.0187, -4.48253, 0.28 ) }
    dend_27 { pt3dadd( -60.7623, -79.8695, -3.6069, 0.83 ) }
    dend_27 { pt3dadd( -62.0183, -80.7301, -2.62361, 0.28 ) }
    dend_27 { pt3dadd( -62.3438, -80.9405, -2.34756, 0.55 ) }
    dend_27 { pt3dadd( -64.7796, -82.4508, -0.060719, 0.28 ) }
    dend_27 { pt3dadd( -67.1306, -83.889, 2.15266, 0.83 ) }
    dend_27 { pt3dadd( -68.1888, -84.5203, 3.17982, 0.28 ) }
    dend_27 { pt3dadd( -68.7841, -84.8465, 3.63208, 0.55 ) }
    dend_27 { pt3dadd( -70.2053, -85.5569, 4.53015, 0.28 ) }
    dend_27 { pt3dadd( -71.286, -86.0529, 5.13862, 0.55 ) }
    dend_27 { pt3dadd( -74.0659, -87.2304, 6.56513, 0.28 ) }
    dend_27 { pt3dadd( -74.9092, -87.5163, 6.8652, 0.55 ) }
    dend_27 { pt3dadd( -79.3628, -88.7839, 8.2927, 0.28 ) }
    dend_27 { pt3dadd( -80.2646, -89.0094, 8.57532, 0.55 ) }
    dend_27 { pt3dadd( -82.3827, -89.4526, 9.23838, 0.28 ) }
    dend_27 { pt3dadd( -84.5518, -89.8102, 9.9832, 0.55 ) }
    dend_27 { pt3dadd( -87.6016, -90.0778, 11.1359, 0.28 ) }
    dend_27 { pt3dadd( -89.7746, -90.1509, 11.98, 0.28 ) }
    dend_27 { pt3dadd( -91.5618, -90.0559, 12.7615, 0.83 ) }
    dend_27 { pt3dadd( -92.7431, -89.9146, 13.247, 0.28 ) }
    dend_27 { pt3dadd( -93.3615, -89.7607, 13.4819, 0.55 ) }
    dend_27 { pt3dadd( -94.7929, -89.1834, 14.0782, 0.28 ) }
    dend_27 { pt3dadd( -94.969, -89.0854, 14.1784, 0.55 ) }
    dend_27 { pt3dadd( -95.8986, -88.4872, 14.7158, 0.28 ) }
    dend_27 { pt3dadd( -96.9337, -87.8059, 15.3546, 0.55 ) }
    dend_27 { pt3dadd( -98.5361, -86.7623, 16.5345, 0.28 ) }
    dend_27 { pt3dadd( -99.7239, -85.9239, 17.5708, 0.55 ) }
    dend_27 { pt3dadd( -101.554, -84.5547, 19.37, 0.28 ) }
    dend_27 { pt3dadd( -101.756, -84.4002, 19.5785, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_27 { pt3dadd( -102.632, -83.7214, 20.5369, 0.28 ) }
    dend_27 { pt3dadd( -104.328, -82.3638, 22.4631, 0.55 ) }
    dend_27 { pt3dadd( -106.065, -80.8826, 24.5152, 0.28 ) }
    dend_27 { pt3dadd( -106.197, -80.7666, 24.6673, 0.55 ) }
    dend_27 { pt3dadd( -106.761, -80.2729, 25.285, 0.28 ) }
    dend_27 { pt3dadd( -107.266, -79.8703, 25.8069, 0.83 ) }
    dend_27 { pt3dadd( -108.771, -78.8149, 27.2448, 0.28 ) }
    dend_27 { pt3dadd( -109.283, -78.5402, 27.6725, 0.55 ) }
    dend_27 { pt3dadd( -110.368, -78.1239, 28.5442, 0.28 ) }
    dend_27 { pt3dadd( -110.532, -78.0598, 28.6768, 0.55 ) }
    dend_27 { pt3dadd( -111.903, -77.5417, 29.7932, 0.28 ) }
    dend_27 { pt3dadd( -112.334, -77.3512, 30.2281, 0.55 ) }
    dend_27 { pt3dadd( -113.351, -76.8844, 31.4308, 0.28 ) }
    dend_27 { pt3dadd( -114.298, -76.4069, 32.6394, 0.55 ) }
    dend_27 { pt3dadd( -115.619, -75.6805, 34.475, 0.28 ) }
    dend_27 { pt3dadd( -116.01, -75.4611, 35.0414, 0.55 ) }
    dend_27 { pt3dadd( -118.01, -74.2707, 38.0854, 0.28 ) }
    dend_27 { pt3dadd( -118.44, -74.0429, 38.7537, 0.55 ) }
    dend_27 { pt3dadd( -119.715, -73.4873, 40.7729, 0.28 ) }
    dend_27 { pt3dadd( -120.252, -73.354, 41.5994, 0.83 ) }
    dend_27 { pt3dadd( -121.048, -73.2518, 42.8025, 0.28 ) }
    dend_27 { pt3dadd( -121.242, -73.2427, 43.067, 0.55 ) }
    dend_27 { pt3dadd( -122.343, -73.4007, 44.2203, 0.28 ) }
    dend_27 { pt3dadd( -123.031, -73.5602, 44.9471, 0.55 ) }
    dend_27 { pt3dadd( -124.377, -74.1708, 46.3739, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 25/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -9.31288, -15.0836, -54.9722, 0.28 ) }
    dend_25 { pt3dadd( -12.4962, -10.4734, -53.4466, 0.28 ) }
    dend_25 { pt3dadd( -13.8863, -8.34218, -52.7404, 0.83 ) }
    dend_25 { pt3dadd( -15.4416, -5.7875, -51.9381, 0.28 ) }
    dend_25 { pt3dadd( -16.2559, -4.3933, -51.712, 0.55 ) }
    dend_25 { pt3dadd( -17.8949, -1.45524, -51.4808, 0.55 ) }
    dend_25 { pt3dadd( -18.6478, -0.0181059, -51.4404, 0.55 ) }
    dend_25 { pt3dadd( -19.9145, 2.8713, -51.5575, 0.28 ) }
    dend_25 { pt3dadd( -20.7182, 5.01071, -51.823, 0.83 ) }
    dend_25 { pt3dadd( -22.426, 10.7866, -53.0112, 0.28 ) }
    dend_25 { pt3dadd( -22.7131, 12.0568, -53.3296, 0.28 ) }
    dend_25 { pt3dadd( -22.8863, 13.3168, -53.6883, 0.55 ) }
    dend_25 { pt3dadd( -22.9884, 15.7141, -54.3425, 0.28 ) }
    dend_25 { pt3dadd( -22.8919, 17.0232, -54.6587, 0.55 ) }
    dend_25 { pt3dadd( -22.5716, 18.8706, -54.9786, 0.28 ) }
    dend_25 { pt3dadd( -22.0434, 20.8421, -55.1068, 0.55 ) }
    dend_25 { pt3dadd( -21.1639, 23.9679, -55.3202, 0.28 ) }
    dend_25 { pt3dadd( -20.9149, 24.8193, -55.3944, 0.55 ) }
    dend_25 { pt3dadd( -20.3635, 26.6586, -55.5772, 0.28 ) }
    dend_25 { pt3dadd( -20.1665, 27.3366, -55.6465, 0.55 ) }
    dend_25 { pt3dadd( -19.475, 29.7747, -55.8143, 0.28 ) }
    dend_25 { pt3dadd( -18.9646, 31.5085, -55.9031, 0.55 ) }
    dend_25 { pt3dadd( -17.6784, 36.073, -56.0811, 0.28 ) }
    dend_25 { pt3dadd( -16.9223, 38.9704, -56.1639, 0.83 ) }
    dend_25 { pt3dadd( -16.0563, 42.2668, -56.2403, 0.28 ) }
    dend_25 { pt3dadd( -15.135, 45.7102, -56.3089, 0.55 ) }
    dend_25 { pt3dadd( -14.8912, 46.6151, -56.3249, 0.55 ) }
    dend_25 { pt3dadd( -14.0752, 49.6992, -56.3706, 0.28 ) }
    dend_25 { pt3dadd( -13.5953, 51.6721, -56.3854, 0.55 ) }
    dend_25 { pt3dadd( -13.3902, 52.5475, -56.3774, 0.55 ) }
    dend_25 { pt3dadd( -12.7454, 55.4757, -56.3273, 0.28 ) }
    dend_25 { pt3dadd( -12.3274, 57.7226, -56.2857, 0.55 ) }
    dend_25 { pt3dadd( -11.9353, 59.9846, -56.1852, 0.55 ) }
    dend_25 { pt3dadd( -11.6118, 61.8026, -56.0654, 0.28 ) }
    dend_25 { pt3dadd( -11.1853, 64.3407, -55.8878, 0.55 ) }
    dend_25 { pt3dadd( -10.7801, 66.7223, -55.7337, 0.28 ) }
    dend_25 { pt3dadd( -10.5531, 68.1134, -55.6456, 0.55 ) }
    dend_25 { pt3dadd( -10.3546, 69.3983, -55.5844, 0.55 ) }
    dend_25 { pt3dadd( -9.90252, 72.509, -55.5139, 0.55 ) }
    dend_25 { pt3dadd( -9.5477, 75.2138, -55.4522, 0.28 ) }
    dend_25 { pt3dadd( -9.21447, 77.4448, -55.423, 0.28 ) }
    dend_25 { pt3dadd( -8.92179, 79.0407, -55.3653, 0.28 ) }
    dend_25 { pt3dadd( -8.65774, 80.14, -55.3139, 0.28 ) }
    dend_25 { pt3dadd( -8.4696, 80.8333, -55.2453, 0.55 ) }
    dend_25 { pt3dadd( -7.81976, 82.972, -54.9176, 0.28 ) }
    dend_25 { pt3dadd( -7.11753, 85.3855, -54.3811, 0.55 ) }
    dend_25 { pt3dadd( -6.9475, 85.9848, -54.2135, 0.55 ) }
    dend_25 { pt3dadd( -6.34839, 88.1206, -53.5762, 0.28 ) }
    dend_25 { pt3dadd( -5.90435, 89.9296, -53.0182, 0.55 ) }
    dend_25 { pt3dadd( -5.63004, 91.1878, -52.6442, 0.55 ) }
    dend_25 { pt3dadd( -5.08231, 94.0738, -51.6781, 0.28 ) }
    dend_25 { pt3dadd( -4.93485, 94.9768, -51.333, 0.55 ) }
    dend_25 { pt3dadd( -4.6493, 96.5907, -50.6313, 0.28 ) }
    dend_25 { pt3dadd( -4.51366, 97.3904, -50.2616, 0.55 ) }
    dend_25 { pt3dadd( -4.0904, 99.9468, -49.0596, 0.28 ) }
    dend_25 { pt3dadd( -3.54694, 102.797, -47.7334, 0.28 ) }
    dend_25 { pt3dadd( -3.35962, 103.691, -47.3954, 0.55 ) }
    dend_25 { pt3dadd( -2.67759, 106.343, -46.331, 0.28 ) }
    dend_25 { pt3dadd( -2.19424, 108.005, -45.6573, 0.28 ) }
    dend_25 { pt3dadd( -1.47657, 110.605, -44.6591, 0.55 ) }
    dend_25 { pt3dadd( -0.894225, 112.654, -43.7763, 0.28 ) }
    dend_25 { pt3dadd( 0.00871396, 115.644, -42.4776, 0.55 ) }
    dend_25 { pt3dadd( 1.54665, 120.458, -40.352, 0.55 ) }
    dend_25 { pt3dadd( 2.14304, 122.18, -39.4712, 0.55 ) }
    dend_25 { pt3dadd( 2.86219, 124.192, -38.3502, 0.55 ) }
    dend_25 { pt3dadd( 4.35974, 128.188, -35.6277, 0.55 ) }
    dend_25 { pt3dadd( 4.92462, 129.728, -34.4732, 0.55 ) }
    dend_25 { pt3dadd( 5.64113, 131.784, -32.9004, 0.55 ) }
    dend_25 { pt3dadd( 6.65982, 134.879, -30.8727, 0.55 ) }
    dend_25 { pt3dadd( 7.6084, 137.444, -29.2852, 0.55 ) }
    dend_25 { pt3dadd( 9.25162, 141.518, -27.0114, 0.55 ) }
    dend_25 { pt3dadd( 10.2595, 144.218, -25.8015, 0.55 ) }
    dend_25 { pt3dadd( 10.9017, 145.995, -25.0755, 0.55 ) }
    dend_25 { pt3dadd( 11.9437, 148.882, -24.0988, 0.55 ) }
    dend_25 { pt3dadd( 12.376, 150.087, -23.8564, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_25 { pt3dadd( 12.7376, 151.158, -23.7204, 0.55 ) }
    dend_25 { pt3dadd( 13.2098, 152.946, -23.7094, 0.83 ) }
    dend_25 { pt3dadd( 13.5037, 154.538, -23.6658, 0.55 ) }
    dend_25 { pt3dadd( 13.5486, 154.983, -23.6471, 0.55 ) }
    dend_25 { pt3dadd( 13.4857, 156.408, -23.6153, 0.55 ) }
    dend_25 { pt3dadd( 13.2776, 157.99, -23.6056, 0.55 ) }
    dend_25 { pt3dadd( 13.0028, 159.771, -23.7063, 0.55 ) }
    dend_25 { pt3dadd( 12.6776, 162.038, -23.9175, 0.55 ) }
    dend_25 { pt3dadd( 12.5832, 162.731, -23.9981, 0.55 ) }
    dend_25 { pt3dadd( 12.0763, 167.152, -24.4486, 0.28 ) }
    dend_25 { pt3dadd( 11.9297, 168.777, -24.5964, 0.55 ) }
    dend_25 { pt3dadd( 11.7265, 172.258, -24.8891, 0.55 ) }
    dend_25 { pt3dadd( 11.6794, 174.831, -25.0811, 0.55 ) }
    dend_25 { pt3dadd( 11.7141, 175.471, -25.1226, 0.55 ) }
    dend_25 { pt3dadd( 11.9831, 177.591, -24.9617, 0.55 ) }
    dend_25 { pt3dadd( 12.244, 179.321, -24.5342, 0.55 ) }
    dend_25 { pt3dadd( 12.2905, 179.732, -24.3871, 0.55 ) }
    dend_25 { pt3dadd( 12.2704, 181.079, -23.8963, 0.55 ) }
    dend_25 { pt3dadd( 12.0604, 182.905, -23.3504, 0.55 ) }
    dend_25 { pt3dadd( 10.9184, 188.535, -22.0952, 0.55 ) }
    dend_25 { pt3dadd( 10.2478, 191.006, -21.7397, 0.55 ) }
    dend_25 { pt3dadd( 9.76422, 192.517, -21.5908, 0.55 ) }
    dend_25 { pt3dadd( 8.15102, 197.148, -21.3614, 0.55 ) }
    dend_25 { pt3dadd( 7.60157, 198.652, -21.3124, 0.55 ) }
    dend_25 { pt3dadd( 6.83567, 200.521, -21.3813, 0.55 ) }
    dend_25 { pt3dadd( 6.30568, 201.777, -21.6219, 0.55 ) }
    dend_25 { pt3dadd( 5.84521, 203.097, -21.8619, 0.55 ) }
    dend_25 { pt3dadd( 5.19059, 205.249, -22.0787, 0.55 ) }
    dend_25 { pt3dadd( 4.81063, 207.479, -21.7693, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 29/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -9.31288, -15.0836, -54.9722, 0.55 ) }
    dend_24 { pt3dadd( -11.2582, -15.1051, -56.453, 0.55 ) }
    dend_24 { pt3dadd( -11.9757, -15.1062, -56.9966, 0.28 ) }
    dend_24 { pt3dadd( -13.5682, -15.0629, -58.6512, 0.83 ) }
    dend_24 { pt3dadd( -14.6026, -14.8733, -60.48, 0.28 ) }
    dend_24 { pt3dadd( -15.3906, -14.6537, -62.4825, 0.55 ) }
    dend_24 { pt3dadd( -16.4318, -14.2538, -65.4981, 0.28 ) }
    dend_24 { pt3dadd( -16.7633, -14.0897, -66.5943, 0.83 ) }
    dend_24 { pt3dadd( -19.0469, -12.5781, -74.9245, 0.83 ) }
    dend_24 { pt3dadd( -22.5662, -9.59817, -89.011, 0.83 ) }
    dend_24 { pt3dadd( -25.3253, -6.51847, -101.917, 0.55 ) }
    dend_24 { pt3dadd( -25.8806, -5.72655, -104.865, 0.28 ) }
    dend_24 { pt3dadd( -26.0083, -5.45589, -105.715, 0.55 ) }
    dend_24 { pt3dadd( -26.3589, -4.25923, -108.821, 0.28 ) }
    dend_24 { pt3dadd( -26.3896, -3.77902, -109.721, 0.55 ) }
    dend_24 { pt3dadd( -26.157, -1.11814, -112.663, 0.28 ) }
    dend_24 { pt3dadd( -25.8971, 0.511235, -113.849, 0.28 ) }
    dend_24 { pt3dadd( -25.5902, 2.30154, -115.358, 0.83 ) }
    dend_24 { pt3dadd( -25.2233, 4.26103, -117.321, 0.28 ) }
    dend_24 { pt3dadd( -25.0691, 5.01067, -118.188, 0.55 ) }
    dend_24 { pt3dadd( -24.6424, 7.17399, -120.953, 0.28 ) }
    dend_24 { pt3dadd( -24.5094, 8.27249, -122.565, 0.55 ) }
    dend_24 { pt3dadd( -24.4455, 10.2534, -126.049, 0.28 ) }
    dend_24 { pt3dadd( -24.5846, 11.021, -127.606, 0.55 ) }
    dend_24 { pt3dadd( -24.9263, 11.7575, -129.262, 0.28 ) }
    dend_24 { pt3dadd( -25.0958, 11.9092, -129.681, 0.55 ) }
    dend_24 { pt3dadd( -26.0812, 12.3781, -131.51, 0.55 ) }
    dend_24 { pt3dadd( -27.6134, 12.671, -133.811, 0.55 ) }
    dend_24 { pt3dadd( -29.2087, 12.654, -135.996, 0.28 ) }
    dend_24 { pt3dadd( -30.467, 12.4473, -137.712, 0.83 ) }
    dend_24 { pt3dadd( -33.899, 11.4495, -142.45, 0.28 ) }
    dend_24 { pt3dadd( -34.776, 11.0818, -143.738, 0.55 ) }
    dend_24 { pt3dadd( -36.1156, 10.4026, -145.781, 0.55 ) }
    dend_24 { pt3dadd( -37.837, 9.48651, -148.417, 0.83 ) }
    dend_24 { pt3dadd( -39.3496, 8.66855, -150.759, 0.28 ) }
    dend_24 { pt3dadd( -39.5188, 8.59177, -151.024, 0.28 ) }
    dend_24 { pt3dadd( -43.3371, 7.1341, -156.732, 0.28 ) }
    dend_24 { pt3dadd( -44.9011, 6.68426, -158.952, 0.83 ) }
    dend_24 { pt3dadd( -47.0822, 6.28065, -161.946, 0.28 ) }
    dend_24 { pt3dadd( -48.8917, 6.09045, -164.141, 0.55 ) }
    dend_24 { pt3dadd( -50.8405, 6.0419, -166.35, 0.55 ) }
    dend_24 { pt3dadd( -51.925, 6.07756, -167.521, 0.55 ) }
    dend_24 { pt3dadd( -52.4287, 6.11321, -168.028, 0.83 ) }
    dend_24 { pt3dadd( -54.6328, 6.19437, -170.209, 0.28 ) }
    dend_24 { pt3dadd( -55.5629, 6.22653, -171.187, 0.55 ) }
    dend_24 { pt3dadd( -58.3668, 6.30917, -174.329, 0.28 ) }
    dend_24 { pt3dadd( -59.5491, 6.34048, -175.709, 0.55 ) }
    dend_24 { pt3dadd( -61.9765, 6.4733, -178.683, 0.28 ) }
    dend_24 { pt3dadd( -62.3937, 6.49779, -179.17, 0.55 ) }
    dend_24 { pt3dadd( -66.4022, 6.72355, -183.44, 0.28 ) }
    dend_24 { pt3dadd( -66.8798, 6.7552, -183.967, 0.83 ) }
    dend_24 { pt3dadd( -68.8541, 6.9338, -186.025, 0.28 ) }
    dend_24 { pt3dadd( -70.4957, 7.10641, -187.841, 0.55 ) }
    dend_24 { pt3dadd( -74.6879, 8.09671, -192.974, 0.28 ) }
    dend_24 { pt3dadd( -75.427, 8.22536, -195.527, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 84/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -59.8849, -39.306, -24.776, 0.55 ) }
    dend_18 { pt3dadd( -64.9453, -38.805, -27.9762, 0.55 ) }
    dend_18 { pt3dadd( -67.2155, -38.5803, -29.4118, 0.55 ) }
    dend_18 { pt3dadd( -69.6638, -38.3379, -30.9601, 0.55 ) }
    dend_18 { pt3dadd( -73.0128, -38.0064, -33.078, 1.11 ) }
    dend_18 { pt3dadd( -74.8319, -37.8263, -34.2284, 0.55 ) }
    dend_18 { pt3dadd( -78.1881, -37.494, -36.3509, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 91/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -59.8849, -39.306, -24.776, 0.55 ) }
    dend_17 { pt3dadd( -60.1536, -37.724, -25.4645, 0.55 ) }
    dend_17 { pt3dadd( -60.4675, -36.1317, -26.1849, 0.28 ) }
    dend_17 { pt3dadd( -60.66, -35.1484, -26.6759, 0.55 ) }
    dend_17 { pt3dadd( -61.0947, -33.1409, -27.7086, 0.28 ) }
    dend_17 { pt3dadd( -61.4777, -31.6992, -28.4219, 0.55 ) }
    dend_17 { pt3dadd( -62.6134, -27.648, -30.3296, 0.28 ) }
    dend_17 { pt3dadd( -62.838, -26.9196, -30.6829, 0.55 ) }
    dend_17 { pt3dadd( -63.6333, -24.5051, -31.8602, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_17 { pt3dadd( -63.9164, -23.6965, -32.2564, 0.55 ) }
    dend_17 { pt3dadd( -65.5474, -19.215, -34.3725, 0.28 ) }
    dend_17 { pt3dadd( -65.9118, -18.2077, -34.84, 0.55 ) }
    dend_17 { pt3dadd( -66.8192, -15.9391, -35.7785, 0.28 ) }
    dend_17 { pt3dadd( -67.2858, -14.7627, -36.2536, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 5/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -36.8581, -24.8766, -2.69087, 0.55 ) }
    dend_15 { pt3dadd( -39.8999, -24.9792, -2.8443, 0.55 ) }
    dend_15 { pt3dadd( -41.1174, -25.0239, -2.63504, 0.83 ) }
    dend_15 { pt3dadd( -42.897, -25.0297, -2.1909, 0.55 ) }
    dend_15 { pt3dadd( -44.2251, -24.971, -1.77316, 0.55 ) }
    dend_15 { pt3dadd( -46.4206, -24.7874, -1.07975, 0.55 ) }
    dend_15 { pt3dadd( -47.9199, -24.5945, -0.53629, 0.83 ) }
    dend_15 { pt3dadd( -51.849, -23.8552, 1.19423, 0.55 ) }
    dend_15 { pt3dadd( -52.7922, -23.6492, 1.67093, 0.83 ) }
    dend_15 { pt3dadd( -54.6704, -23.1907, 2.62347, 0.28 ) }
    dend_15 { pt3dadd( -56.6732, -22.722, 3.50691, 0.55 ) }
    dend_15 { pt3dadd( -58.7501, -22.3038, 4.19935, 0.28 ) }
    dend_15 { pt3dadd( -59.4746, -22.2405, 4.3682, 0.55 ) }
    dend_15 { pt3dadd( -62.3195, -22.1238, 4.72151, 0.55 ) }
    dend_15 { pt3dadd( -64.6507, -22.1803, 4.9374, 0.55 ) }
    dend_15 { pt3dadd( -67.3104, -22.4594, 5.02003, 0.55 ) }
    dend_15 { pt3dadd( -68.6972, -22.7179, 4.99558, 0.55 ) }
    dend_15 { pt3dadd( -71.7855, -23.4996, 4.68458, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 23/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -36.8581, -24.8766, -2.69087, 0.55 ) }
    dend_14 { pt3dadd( -37.1538, -23.6579, -2.81093, 0.55 ) }
    dend_14 { pt3dadd( -37.6817, -21.8532, -2.91106, 0.28 ) }
    dend_14 { pt3dadd( -38.0491, -20.6129, -2.96711, 0.55 ) }
    dend_14 { pt3dadd( -38.8681, -17.837, -3.12353, 0.55 ) }
    dend_14 { pt3dadd( -40.1534, -13.7125, -3.4528, 0.55 ) }
    dend_14 { pt3dadd( -40.9458, -11.3661, -3.65578, 0.55 ) }
    dend_14 { pt3dadd( -41.8003, -8.83108, -3.85553, 0.28 ) }
    dend_14 { pt3dadd( -42.6699, -6.05483, -4.08596, 0.28 ) }
    dend_14 { pt3dadd( -43.1411, -4.25052, -4.31771, 0.28 ) }
    dend_14 { pt3dadd( -43.4556, -2.74175, -4.66755, 0.55 ) }
    dend_14 { pt3dadd( -43.8294, -0.31602, -5.53314, 0.55 ) }
    dend_14 { pt3dadd( -44.0924, 2.04952, -6.44508, 0.55 ) }
    dend_14 { pt3dadd( -44.2268, 4.00198, -7.33095, 0.55 ) }
    dend_14 { pt3dadd( -44.3442, 6.59591, -8.55006, 0.55 ) }
    dend_14 { pt3dadd( -44.378, 9.06374, -9.67414, 0.28 ) }
    dend_14 { pt3dadd( -44.3922, 11.1603, -10.601, 0.55 ) }
    dend_14 { pt3dadd( -44.42, 12.8502, -11.3327, 0.55 ) }
    dend_14 { pt3dadd( -44.5821, 15.1723, -12.3374, 0.28 ) }
    dend_14 { pt3dadd( -44.8457, 17.4263, -13.1305, 0.55 ) }
    dend_14 { pt3dadd( -45.138, 19.4458, -13.6868, 0.28 ) }
    dend_14 { pt3dadd( -45.6146, 22.4928, -14.3791, 0.55 ) }
    dend_14 { pt3dadd( -46.1224, 25.2858, -14.9888, 0.55 ) }
    dend_14 { pt3dadd( -46.8232, 28.8599, -15.8731, 0.55 ) }
    dend_14 { pt3dadd( -47.5892, 32.1679, -16.8407, 0.28 ) }
    dend_14 { pt3dadd( -47.9094, 33.6275, -17.4111, 0.55 ) }
    dend_14 { pt3dadd( -48.0667, 34.5232, -17.8363, 0.28 ) }
    dend_14 { pt3dadd( -48.2183, 35.9347, -18.629, 0.55 ) }
    dend_14 { pt3dadd( -48.3465, 38.245, -20.0813, 0.28 ) }
    dend_14 { pt3dadd( -48.168, 40.774, -21.9365, 0.83 ) }
    dend_14 { pt3dadd( -47.6696, 44.4217, -24.9242, 0.55 ) }
    dend_14 { pt3dadd( -47.0401, 47.8928, -27.6229, 0.55 ) }
    dend_14 { pt3dadd( -46.4732, 50.1435, -29.2223, 0.28 ) }
    dend_14 { pt3dadd( -46.159, 51.226, -29.9168, 0.55 ) }
    dend_14 { pt3dadd( -44.8676, 55.6857, -32.4201, 0.28 ) }
    dend_14 { pt3dadd( -44.5114, 56.7963, -32.9894, 0.55 ) }
    dend_14 { pt3dadd( -43.3716, 60.7203, -34.8896, 0.55 ) }
    dend_14 { pt3dadd( -42.3632, 64.0996, -36.5389, 0.28 ) }
    dend_14 { pt3dadd( -41.8784, 66.0964, -37.4169, 0.55 ) }
    dend_14 { pt3dadd( -41.6051, 67.8013, -38.0439, 0.28 ) }
    dend_14 { pt3dadd( -41.5931, 69.4519, -38.4465, 0.55 ) }
    dend_14 { pt3dadd( -41.8182, 72.1522, -39.0858, 0.28 ) }
    dend_14 { pt3dadd( -42.0797, 73.4318, -39.4184, 0.55 ) }
    dend_14 { pt3dadd( -42.8681, 76.1092, -40.0914, 0.28 ) }
    dend_14 { pt3dadd( -43.7219, 79.0308, -40.9427, 0.55 ) }
    dend_14 { pt3dadd( -44.8217, 82.9249, -42.1602, 0.28 ) }
    dend_14 { pt3dadd( -45.6107, 85.6765, -43.0199, 0.55 ) }
    dend_14 { pt3dadd( -46.0654, 87.8297, -43.7263, 0.28 ) }
    dend_14 { pt3dadd( -46.3336, 89.2681, -44.1999, 0.28 ) }
    dend_14 { pt3dadd( -46.6532, 91.9341, -45.1638, 0.55 ) }
    dend_14 { pt3dadd( -46.7814, 94.1221, -45.9541, 0.28 ) }
    dend_14 { pt3dadd( -46.7322, 95.3148, -46.423, 0.55 ) }
    dend_14 { pt3dadd( -46.5602, 97.949, -47.2478, 0.28 ) }
    dend_14 { pt3dadd( -46.2012, 101.315, -48.2028, 0.55 ) }
    dend_14 { pt3dadd( -45.744, 104.19, -48.9692, 0.28 ) }
    dend_14 { pt3dadd( -45.5717, 105.046, -49.1494, 0.55 ) }
    dend_14 { pt3dadd( -44.66, 108.46, -49.9661, 0.28 ) }
    dend_14 { pt3dadd( -43.9203, 110.569, -50.4674, 0.55 ) }
    dend_14 { pt3dadd( -42.8937, 113.297, -51.205, 0.28 ) }
    dend_14 { pt3dadd( -42.4513, 114.303, -51.4916, 0.55 ) }
    dend_14 { pt3dadd( -40.7757, 118.074, -52.4585, 0.28 ) }
    dend_14 { pt3dadd( -40.0359, 119.845, -52.8567, 0.55 ) }
    dend_14 { pt3dadd( -38.7849, 123.059, -53.4204, 0.28 ) }
    dend_14 { pt3dadd( -37.9389, 125.563, -53.8276, 0.55 ) }
    dend_14 { pt3dadd( -37.1642, 128.104, -54.2232, 0.55 ) }
    dend_14 { pt3dadd( -36.7954, 129.626, -54.4659, 0.55 ) }
    dend_14 { pt3dadd( -36.2845, 131.947, -54.8568, 0.28 ) }
    dend_14 { pt3dadd( -35.9346, 133.919, -55.1624, 1.11 ) }
    dend_14 { pt3dadd( -35.152, 139.284, -55.9138, 0.55 ) }
    dend_14 { pt3dadd( -34.7065, 142.609, -56.2926, 0.28 ) }
    dend_14 { pt3dadd( -34.4273, 145.316, -56.6032, 0.55 ) }
    dend_14 { pt3dadd( -34.1022, 148.797, -56.9652, 0.28 ) }
    dend_14 { pt3dadd( -33.9852, 150.328, -57.1174, 0.55 ) }
    dend_14 { pt3dadd( -33.7923, 153.358, -57.3476, 0.55 ) }
    dend_14 { pt3dadd( -33.6378, 155.398, -57.5245, 0.28 ) }
    dend_14 { pt3dadd( -33.5311, 156.329, -57.6377, 0.55 ) }
    dend_14 { pt3dadd( -33.0451, 159.411, -58.071, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_14 { pt3dadd( -32.8688, 160.528, -58.2987, 0.55 ) }
    dend_14 { pt3dadd( -32.5111, 162.781, -58.8133, 0.28 ) }
    dend_14 { pt3dadd( -32.0764, 165.369, -59.5786, 0.55 ) }
    dend_14 { pt3dadd( -31.3353, 168.807, -60.7576, 0.55 ) }
    dend_14 { pt3dadd( -30.5563, 171.737, -61.9458, 0.28 ) }
    dend_14 { pt3dadd( -29.9714, 173.694, -62.8388, 0.55 ) }
    dend_14 { pt3dadd( -28.9308, 176.953, -64.271, 0.28 ) }
    dend_14 { pt3dadd( -28.2557, 179.225, -65.2516, 0.55 ) }
    dend_14 { pt3dadd( -27.4414, 181.932, -66.3159, 0.83 ) }
    dend_14 { pt3dadd( -26.5314, 185.045, -67.4525, 0.28 ) }
    dend_14 { pt3dadd( -26.4028, 185.423, -67.6067, 0.55 ) }
    dend_14 { pt3dadd( -25.466, 188.118, -68.6692, 0.55 ) }
    dend_14 { pt3dadd( -24.7843, 190.082, -69.4317, 0.55 ) }
    dend_14 { pt3dadd( -24.036, 192.754, -70.3628, 0.28 ) }
    dend_14 { pt3dadd( -23.3961, 195.601, -71.1366, 0.55 ) }
    dend_14 { pt3dadd( -22.8136, 198.39, -71.6516, 0.28 ) }
    dend_14 { pt3dadd( -22.2985, 200.88, -72.0178, 0.55 ) }
    dend_14 { pt3dadd( -21.8311, 203.218, -72.2952, 0.28 ) }
    dend_14 { pt3dadd( -21.3595, 205.601, -72.499, 0.55 ) }
    dend_14 { pt3dadd( -20.5943, 210.038, -72.6951, 0.55 ) }
    dend_14 { pt3dadd( -19.7999, 214.465, -72.7496, 0.28 ) }
    dend_14 { pt3dadd( -19.5343, 216.038, -72.6444, 0.28 ) }
    dend_14 { pt3dadd( -19.323, 217.286, -72.4999, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 23/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 2.69953, 153.6, 27.2116, 0.55 ) }
    dend_6 { pt3dadd( 2.11658, 154.349, 27.0797, 0.55 ) }
    dend_6 { pt3dadd( 2.00145, 154.497, 27.0537, 0.55 ) }
    dend_6 { pt3dadd( 1.6693, 154.924, 26.9786, 0.28 ) }
    dend_6 { pt3dadd( 1.15864, 155.58, 26.8631, 0.55 ) }
    dend_6 { pt3dadd( 0.64551, 156.239, 26.747, 0.28 ) }
    dend_6 { pt3dadd( -0.181527, 157.302, 26.5599, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 30/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 2.69953, 153.6, 27.2116, 0.55 ) }
    dend_5 { pt3dadd( 3.05759, 155.167, 27.2779, 0.55 ) }
    dend_5 { pt3dadd( 3.28145, 156.57, 27.3355, 0.55 ) }
    dend_5 { pt3dadd( 3.52151, 158.022, 27.3938, 0.55 ) }
    dend_5 { pt3dadd( 3.8463, 160.027, 27.4791, 0.55 ) }
    dend_5 { pt3dadd( 4.38956, 162.982, 27.5596, 0.55 ) }
    dend_5 { pt3dadd( 4.53654, 163.71, 27.5719, 0.28 ) }
    dend_5 { pt3dadd( 4.71728, 164.795, 27.578, 0.55 ) }
    dend_5 { pt3dadd( 5.09897, 167.035, 27.5548, 0.55 ) }
    dend_5 { pt3dadd( 5.2761, 168.01, 27.5281, 0.55 ) }
    dend_5 { pt3dadd( 5.56384, 169.276, 27.4638, 0.55 ) }
    dend_5 { pt3dadd( 5.85027, 170.487, 27.3676, 0.55 ) }
    dend_5 { pt3dadd( 6.11982, 171.636, 27.2495, 0.83 ) }
    dend_5 { pt3dadd( 6.26062, 172.304, 27.172, 0.28 ) }
    dend_5 { pt3dadd( 6.36956, 172.97, 27.0458, 0.55 ) }
    dend_5 { pt3dadd( 6.43198, 173.416, 26.9404, 0.28 ) }
    dend_5 { pt3dadd( 6.53214, 174.299, 26.7641, 0.55 ) }
    dend_5 { pt3dadd( 6.70545, 175.414, 26.5624, 0.28 ) }
    dend_5 { pt3dadd( 6.81798, 176.013, 26.4476, 0.55 ) }
    dend_5 { pt3dadd( 7.24656, 178.039, 26.0703, 0.28 ) }
    dend_5 { pt3dadd( 7.37186, 178.516, 25.9779, 0.55 ) }
    dend_5 { pt3dadd( 7.82789, 179.93, 25.7122, 0.28 ) }
    dend_5 { pt3dadd( 8.19529, 180.833, 25.5449, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 53/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -78.1881, -37.494, -36.3509, 0.55 ) }
    dend_20 { pt3dadd( -79.1958, -39.316, -38.5017, 0.55 ) }
    dend_20 { pt3dadd( -81.0492, -42.4368, -42.1753, 0.28 ) }
    dend_20 { pt3dadd( -81.8087, -43.5896, -43.5195, 0.55 ) }
    dend_20 { pt3dadd( -82.9769, -45.1631, -45.4073, 1.38 ) }
    dend_20 { pt3dadd( -84.3345, -46.7428, -47.412, 0.55 ) }
    dend_20 { pt3dadd( -84.8279, -47.2017, -48.0826, 0.28 ) }
    dend_20 { pt3dadd( -85.1899, -47.4394, -48.494, 0.55 ) }
    dend_20 { pt3dadd( -86.1842, -47.7348, -49.3201, 0.28 ) }
    dend_20 { pt3dadd( -87.0948, -47.9549, -49.9776, 0.55 ) }
    dend_20 { pt3dadd( -88.6705, -48.2577, -50.9547, 0.55 ) }
    dend_20 { pt3dadd( -90.9188, -48.6429, -52.324, 0.55 ) }
    dend_20 { pt3dadd( -92.9501, -49.0112, -53.5783, 0.55 ) }
    dend_20 { pt3dadd( -93.3954, -49.1017, -53.8504, 1.11 ) }
    dend_20 { pt3dadd( -97.5589, -50.0467, -56.3281, 0.28 ) }
    dend_20 { pt3dadd( -99.3226, -50.4774, -57.3378, 0.83 ) }
    dend_20 { pt3dadd( -101.015, -50.8822, -58.2418, 0.28 ) }
    dend_20 { pt3dadd( -102.179, -51.1743, -58.9021, 0.55 ) }
    dend_20 { pt3dadd( -103.128, -51.3677, -59.4893, 0.28 ) }
    dend_20 { pt3dadd( -104.507, -51.5697, -60.4338, 0.55 ) }
    dend_20 { pt3dadd( -105.878, -51.6121, -61.4382, 0.28 ) }
    dend_20 { pt3dadd( -106.748, -51.5977, -62.0873, 0.83 ) }
    dend_20 { pt3dadd( -109.889, -51.2657, -64.2876, 0.28 ) }
    dend_20 { pt3dadd( -111.463, -50.9621, -65.3664, 0.83 ) }
    dend_20 { pt3dadd( -113.466, -50.3851, -66.7315, 0.28 ) }
    dend_20 { pt3dadd( -114.974, -49.8437, -67.7262, 0.83 ) }
    dend_20 { pt3dadd( -116.561, -49.1209, -68.6701, 0.55 ) }
    dend_20 { pt3dadd( -118.387, -48.106, -69.662, 0.28 ) }
    dend_20 { pt3dadd( -119.148, -47.6003, -69.9885, 0.55 ) }
    dend_20 { pt3dadd( -120.272, -46.8062, -70.4438, 0.28 ) }
    dend_20 { pt3dadd( -121.008, -46.2726, -70.7289, 0.55 ) }
    dend_20 { pt3dadd( -123.147, -44.8938, -71.6666, 0.28 ) }
    dend_20 { pt3dadd( -124.226, -44.3048, -72.2119, 0.55 ) }
    dend_20 { pt3dadd( -125.918, -43.5633, -73.1663, 0.28 ) }
    dend_20 { pt3dadd( -126.248, -43.4444, -73.3364, 0.55 ) }
    dend_20 { pt3dadd( -127.227, -43.1865, -73.7927, 0.28 ) }
    dend_20 { pt3dadd( -130.055, -42.7641, -75.0488, 0.55 ) }
    dend_20 { pt3dadd( -131.524, -42.7044, -75.6615, 0.28 ) }
    dend_20 { pt3dadd( -133.045, -42.7976, -76.2265, 0.83 ) }
    dend_20 { pt3dadd( -136.468, -43.3649, -77.3819, 0.28 ) }
    dend_20 { pt3dadd( -137.723, -43.6562, -77.7439, 0.55 ) }
    dend_20 { pt3dadd( -139.596, -44.2217, -78.2403, 0.28 ) }
    dend_20 { pt3dadd( -141.553, -44.9357, -78.7021, 0.83 ) }
    dend_20 { pt3dadd( -143.757, -45.8162, -79.2627, 0.55 ) }
    dend_20 { pt3dadd( -145.536, -46.5829, -79.7196, 0.28 ) }
    dend_20 { pt3dadd( -146.446, -47.0219, -79.9159, 0.55 ) }
    dend_20 { pt3dadd( -147.928, -47.7146, -80.1548, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_20 { pt3dadd( -149.165, -48.2968, -80.158, 0.55 ) }
    dend_20 { pt3dadd( -151.133, -49.3379, -79.8624, 0.28 ) }
    dend_20 { pt3dadd( -152.55, -50.1388, -79.4253, 0.55 ) }
    dend_20 { pt3dadd( -154.988, -51.6876, -78.3638, 0.28 ) }
    dend_20 { pt3dadd( -155.842, -52.2971, -77.9421, 0.55 ) }
    dend_20 { pt3dadd( -158.208, -54.0911, -76.6185, 0.28 ) }
    dend_20 { pt3dadd( -158.646, -54.4462, -76.3638, 0.83 ) }
    dend_20 { pt3dadd( -160.162, -55.6584, -75.468, 0.28 ) }
    dend_20 { pt3dadd( -160.7, -56.1236, -75.1911, 0.55 ) }
    dend_20 { pt3dadd( -162.337, -57.5795, -74.4296, 0.28 ) }
    dend_20 { pt3dadd( -162.731, -57.9098, -74.2686, 0.55 ) }
    dend_20 { pt3dadd( -165.092, -59.8671, -73.3905, 0.28 ) }
    dend_20 { pt3dadd( -166.6, -61.0718, -72.8286, 0.55 ) }
    dend_20 { pt3dadd( -168.671, -62.7118, -72.0344, 0.28 ) }
    dend_20 { pt3dadd( -170.318, -64.0057, -71.3982, 0.55 ) }
    dend_20 { pt3dadd( -171.786, -65.1758, -70.8352, 0.28 ) }
    dend_20 { pt3dadd( -172.077, -65.4146, -70.7206, 0.55 ) }
    dend_20 { pt3dadd( -173.259, -66.406, -70.2796, 0.28 ) }
    dend_20 { pt3dadd( -174.389, -67.3512, -69.8386, 0.55 ) }
    dend_20 { pt3dadd( -175.007, -67.8166, -69.5829, 0.28 ) }
    dend_20 { pt3dadd( -175.717, -68.3601, -69.2524, 0.55 ) }
    dend_20 { pt3dadd( -177.135, -69.4708, -68.5391, 0.28 ) }
    dend_20 { pt3dadd( -178.04, -70.1191, -68.0579, 0.55 ) }
    dend_20 { pt3dadd( -179.244, -70.9661, -67.3593, 0.28 ) }
    dend_20 { pt3dadd( -179.897, -71.3515, -66.9575, 0.55 ) }
    dend_20 { pt3dadd( -180.825, -71.8708, -66.338, 0.28 ) }
    dend_20 { pt3dadd( -181.44, -72.2185, -65.9344, 0.55 ) }
    dend_20 { pt3dadd( -182.92, -73.0723, -65.0371, 0.28 ) }
    dend_20 { pt3dadd( -184.125, -73.8484, -64.3735, 0.55 ) }
    dend_20 { pt3dadd( -186.135, -75.4011, -63.3773, 0.28 ) }
    dend_20 { pt3dadd( -186.716, -75.9101, -63.133, 0.55 ) }
    dend_20 { pt3dadd( -187.876, -77.0257, -62.7516, 0.28 ) }
    dend_20 { pt3dadd( -188.283, -77.4554, -62.6525, 0.55 ) }
    dend_20 { pt3dadd( -189.557, -78.9045, -62.4942, 0.28 ) }
    dend_20 { pt3dadd( -190.486, -80.0301, -62.439, 0.83 ) }
    dend_20 { pt3dadd( -191.832, -81.9255, -62.3932, 0.28 ) }
    dend_20 { pt3dadd( -192.328, -82.6202, -62.3674, 0.55 ) }
    dend_20 { pt3dadd( -193.035, -83.6031, -62.2787, 0.28 ) }
    dend_20 { pt3dadd( -193.604, -84.3948, -62.1762, 0.55 ) }
    dend_20 { pt3dadd( -194.572, -85.8278, -61.9388, 1.11 ) }
    dend_20 { pt3dadd( -195.823, -87.718, -61.5915, 0.28 ) }
    dend_20 { pt3dadd( -196.112, -88.1783, -61.483, 0.55 ) }
    dend_20 { pt3dadd( -197.241, -89.9228, -61.0233, 0.28 ) }
    dend_20 { pt3dadd( -198.458, -91.8634, -60.5416, 0.55 ) }
    dend_20 { pt3dadd( -199.287, -93.2292, -60.2516, 0.28 ) }
    dend_20 { pt3dadd( -199.93, -94.4927, -60.1425, 0.55 ) }
    dend_20 { pt3dadd( -200.335, -95.4316, -60.1391, 0.28 ) }
    dend_20 { pt3dadd( -200.678, -96.4641, -60.2203, 0.55 ) }
    dend_20 { pt3dadd( -201.39, -99.1145, -60.6332, 0.28 ) }
    dend_20 { pt3dadd( -201.541, -99.7309, -60.7373, 0.55 ) }
    dend_20 { pt3dadd( -202.544, -103.571, -61.3982, 0.28 ) }
    dend_20 { pt3dadd( -202.862, -104.864, -61.6147, 0.55 ) }
    dend_20 { pt3dadd( -203.267, -106.45, -61.8321, 0.28 ) }
    dend_20 { pt3dadd( -203.549, -107.622, -61.957, 0.55 ) }
    dend_20 { pt3dadd( -204.118, -109.491, -62.0617, 0.28 ) }
    dend_20 { pt3dadd( -204.423, -110.295, -62.0705, 0.55 ) }
    dend_20 { pt3dadd( -204.825, -111.169, -62.0082, 0.28 ) }
    dend_20 { pt3dadd( -205.25, -112.061, -62.0282, 0.55 ) }
    dend_20 { pt3dadd( -206.272, -114.39, -62.1778, 0.28 ) }
    dend_20 { pt3dadd( -206.739, -115.514, -62.2447, 0.83 ) }
    dend_20 { pt3dadd( -208.054, -118.608, -62.3877, 0.28 ) }
    dend_20 { pt3dadd( -208.643, -119.943, -62.34, 0.83 ) }
    dend_20 { pt3dadd( -210.177, -123.303, -61.9778, 0.28 ) }
    dend_20 { pt3dadd( -211.198, -125.466, -61.6255, 0.83 ) }
    dend_20 { pt3dadd( -212.333, -127.773, -61.0767, 0.28 ) }
    dend_20 { pt3dadd( -212.944, -129.132, -60.6989, 0.55 ) }
    dend_20 { pt3dadd( -214.037, -131.772, -59.8214, 0.28 ) }
    dend_20 { pt3dadd( -214.398, -132.799, -59.4688, 0.55 ) }
    dend_20 { pt3dadd( -214.731, -133.959, -59.0098, 0.28 ) }
    dend_20 { pt3dadd( -214.872, -134.503, -58.7963, 0.28 ) }
    dend_20 { pt3dadd( -215.565, -137.944, -57.6086, 0.28 ) }
    dend_20 { pt3dadd( -215.635, -138.464, -57.4568, 0.55 ) }
    dend_20 { pt3dadd( -215.969, -141.043, -56.6603, 0.28 ) }
    dend_20 { pt3dadd( -216.124, -142.203, -56.1391, 0.55 ) }
    dend_20 { pt3dadd( -216.29, -143.366, -55.4014, 0.28 ) }
    dend_20 { pt3dadd( -216.39, -143.987, -54.9483, 0.55 ) }
    dend_20 { pt3dadd( -216.707, -145.402, -53.5623, 0.28 ) }
    dend_20 { pt3dadd( -217.177, -147.011, -51.7332, 0.55 ) }
    dend_20 { pt3dadd( -217.678, -148.213, -49.7516, 0.28 ) }
    dend_20 { pt3dadd( -217.843, -148.623, -48.9661, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 80/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -78.1881, -37.494, -36.3509, 0.28 ) }
    dend_19 { pt3dadd( -81.1188, -36.1137, -39.6874, 0.28 ) }
    dend_19 { pt3dadd( -81.8948, -35.6768, -40.7639, 0.55 ) }
    dend_19 { pt3dadd( -82.9783, -35.0424, -42.3538, 0.28 ) }
    dend_19 { pt3dadd( -83.3146, -34.7837, -43.0701, 0.55 ) }
    dend_19 { pt3dadd( -83.7086, -34.4095, -44.0668, 0.28 ) }
    dend_19 { pt3dadd( -84.1279, -33.9175, -45.1421, 0.55 ) }
    dend_19 { pt3dadd( -85.0173, -32.4061, -48.0125, 0.28 ) }
    dend_19 { pt3dadd( -85.2995, -31.8986, -48.8415, 0.55 ) }
    dend_19 { pt3dadd( -86.9816, -28.8098, -53.4151, 0.28 ) }
    dend_19 { pt3dadd( -87.4755, -27.9313, -54.7942, 0.55 ) }
    dend_19 { pt3dadd( -88.5045, -26.1135, -57.4432, 0.28 ) }
    dend_19 { pt3dadd( -88.8629, -25.4782, -58.3377, 0.55 ) }
    dend_19 { pt3dadd( -90.4336, -22.7403, -61.9269, 0.28 ) }
    dend_19 { pt3dadd( -90.5977, -22.4671, -62.266, 0.55 ) }
    dend_19 { pt3dadd( -92.471, -19.9589, -65.0135, 0.28 ) }
    dend_19 { pt3dadd( -93.8499, -18.3484, -67.1773, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_50, dend_39, dend_34, dend_9, dend_0, dend_52, dend_51, dend_45, dend_40, dend_36, dend_35, dend_21, dend_10, dend_2, dend_1, dend_54, dend_53, dend_47, dend_46, dend_44, dend_41, dend_38, dend_37, dend_29, dend_22, dend_12, dend_11, dend_8, dend_3, dend_49, dend_48, dend_43, dend_42, dend_31, dend_30, dend_26, dend_23, dend_16, dend_13, dend_7, dend_4, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_6, dend_5, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_50 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_50, dend_39, dend_34, dend_9, dend_0, dend_52, dend_51, dend_45, dend_40, dend_36, dend_35, dend_21, dend_10, dend_2, dend_1, dend_54, dend_53, dend_47, dend_46, dend_44, dend_41, dend_38, dend_37, dend_29, dend_22, dend_12, dend_11, dend_8, dend_3, dend_49, dend_48, dend_43, dend_42, dend_31, dend_30, dend_26, dend_23, dend_16, dend_13, dend_7, dend_4, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_6, dend_5, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_50 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_52 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_51 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_45 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_40 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_36 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_35 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_54 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_47 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_46 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_44 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_37 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_11 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_3 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_49 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_48 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_43 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_42 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_31 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_30 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_23 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_16 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_7 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_32 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_28 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_27 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_25 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_24 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_14 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_20 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_19 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_34 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_9 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_21 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_22 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_39 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_12 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_26 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_13 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_38 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_41 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_17 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_6 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_5 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_53 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_33 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_21, dend_10, dend_10, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_21 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_22 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_50 nseg = 3
    dend_0 nseg = 3
    dend_52 nseg = 7
    dend_51 nseg = 3
    dend_45 nseg = 15
    dend_40 nseg = 3
    dend_36 nseg = 3
    dend_35 nseg = 17
    dend_1 nseg = 7
    dend_54 nseg = 5
    dend_47 nseg = 3
    dend_46 nseg = 9
    dend_44 nseg = 5
    dend_37 nseg = 3
    dend_11 nseg = 3
    dend_8 nseg = 3
    dend_3 nseg = 3
    dend_49 nseg = 7
    dend_48 nseg = 3
    dend_43 nseg = 9
    dend_42 nseg = 5
    dend_31 nseg = 15
    dend_30 nseg = 5
    dend_23 nseg = 3
    dend_16 nseg = 3
    dend_7 nseg = 3
    dend_32 nseg = 5
    dend_28 nseg = 15
    dend_27 nseg = 9
    dend_25 nseg = 13
    dend_24 nseg = 9
    dend_14 nseg = 13
    dend_20 nseg = 11
    dend_19 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_BTC_9ad0430657_0_0


