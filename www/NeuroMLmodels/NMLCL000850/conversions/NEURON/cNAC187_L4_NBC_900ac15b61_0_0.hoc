// Cell: cNAC187_L4_NBC_900ac15b61_0_0
/*
{
  "id" : "cNAC187_L4_NBC_900ac15b61_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-5.09764, -8.67532, 0.645002, 2.68797", "-4.60344, -7.96551, 0.570575, 4.73408", "-4.10924, -7.25569, 0.496148, 7.4359", "-3.61503, -6.54587, 0.421721, 8.59973", "-3.12083, -5.83605, 0.347294, 9.0848", "-2.62663, -5.12623, 0.272868, 9.56987", "-2.13243, -4.41641, 0.198441, 10.0549", "-1.63822, -3.70659, 0.124014, 10.54", "-1.14402, -2.99677, 0.049587, 11.0283", "-0.649817, -2.28695, -0.0248399, 11.5469", "-0.155615, -1.57714, -0.0992667, 12.0729", "0.338588, -0.867317, -0.173694, 12.4151", "0.832791, -0.157498, -0.24812, 12.7013", "1.32699, 0.552321, -0.322547, 12.6038", "1.8212, 1.26214, -0.396974, 12.4311", "2.3154, 1.97196, -0.471401, 12.1547", "2.8096, 2.68178, -0.545828, 11.8066", "3.3038, 3.3916, -0.620255, 10.9507", "3.79801, 4.10142, -0.694681, 9.34672", "4.29221, 4.81123, -0.769108, 7.74278", "4.78641, 5.52105, -0.843535, 4.17384" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "3.6438, 0.523465, -7.80437, 1.94", "6.68796, 1.41949, -12.2385, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999976551736225
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-6.8862, -7.02304, -7.80437, 2.49", "-9.49294, -6.97013, -8.90769, 2.49", "-12.5622, -6.90784, -10.2068, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999976551736225
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-1.2562, -9.81153, 2.88563, 1.66", "-1.75879, -11.5796, 3.12177, 1.66", "-3.2285, -16.7497, 3.81229, 1.11", "-4.68194, -21.8626, 4.49517, 1.11", "-6.38413, -27.8505, 5.29492, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999976551736225
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.4238, 0.396714, 2.48563, 2.22", "11.2381, -0.639103, 2.48563, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999976551736225
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.1838, 5.31072, 7.68563, 0.83", "5.05703, 6.37262, 8.42983, 0.83", "6.15943, 8.11215, 10.751, 1.39", "7.3002, 10.306, 13.6241, 0.83", "7.7882, 11.5504, 15.1536, 0.83", "8.86237, 14.6806, 18.7705, 0.83", "10.3299, 18.737, 23.2385, 0.83", "11.0327, 20.9451, 26.1297, 0.83", "11.2003, 21.6769, 27.1574, 0.83", "11.3693, 22.7009, 28.7359, 0.55", "11.4247, 23.2856, 29.6135, 0.55", "11.3949, 24.5294, 31.0352, 0.55", "11.1614, 27.8553, 33.9618, 0.55", "11.1116, 29.7248, 35.7902, 0.83", "11.0997, 32.1634, 38.2735, 0.55", "11.0957, 32.8379, 38.9666, 0.83", "10.9616, 34.9691, 41.1627, 0.28", "10.6315, 37.6937, 43.8799, 0.83", "10.3871, 40.3941, 46.2884, 0.83", "10.4382, 41.8566, 47.7933, 0.28", "10.474, 42.0799, 48.0227, 0.55", "11.4089, 47.9585, 54.0147, 0.55", "13.3388, 53.9869, 59.6017, 0.55", "15.9575, 60.3434, 64.4843, 0.55", "17.4311, 66.1902, 70.4017, 0.55", "18.3858, 70.9518, 77.3566, 0.55", "19.7098, 76.4125, 83.6828, 0.55", "21.989, 81.01, 90.4457, 0.55", "24.7617, 85.3126, 97.2294, 0.55", "26.2366, 89.9841, 104.159, 0.55", "28.8534, 94.9689, 110.499, 0.55", "30.6634, 100.9, 116.233, 0.55", "31.7341, 106.726, 122.256, 0.55", "32.5966, 111.3, 129.354, 0.55", "32.2433, 115.432, 136.772, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999976551736225,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.78641, 5.52105, -0.843535, 0.9026", "13.3572, 17.8312, -0.843535, 0.9026", "21.9281, 30.1414, -0.843535, 0.9026" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "6.68796, 1.41949, -12.2385, 0.83", "6.43354, 3.33945, -13.966, 0.83", "6.07262, 5.5317, -16.5598, 0.83", "5.84254, 6.5466, -17.8198, 1.66", "5.11931, 9.04494, -20.9198, 1.11", "4.72472, 10.2235, -22.4212, 1.11", "3.58299, 13.1153, -26.5174, 1.11", "2.16124, 15.6428, -31.4247, 0.83", "1.61075, 16.238, -33.2804, 0.83", "1.18623, 16.4788, -34.7381, 0.55", "0.85485, 16.5456, -35.8354, 0.55", "-0.100162, 16.5187, -39.1174, 1.39", "-1.93012, 15.8383, -46.4891, 0.83", "-2.1871, 15.6726, -47.466, 0.83", "-3.19023, 14.7444, -52.0837, 0.83", "-3.70553, 14.1694, -54.8455, 2.49" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "6.68796, 1.41949, -12.2385, 1.11", "5.82506, 1.38672, -14.4844, 1.11", "3.71479, 0.771795, -21.564, 1.11", "2.80192, 0.170366, -25.4504, 1.11", "2.52953, -0.115063, -26.9493, 1.11", "1.26552, -2.44775, -38.7476, 1.11", "1.02307, -3.12763, -42.9565, 1.11", "0.622047, -3.95418, -48.3332, 0.83", "0.377797, -4.3501, -51.0807, 0.83", "0.166394, -4.6246, -53.0277, 0.83", "-0.559016, -5.6506, -60.8391, 2.22", "-0.424446, -6.61175, -67.6924, 2.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-12.5622, -6.90784, -10.2068, 0.83", "-12.951, -2.13064, -14.0692, 0.83", "-13.2588, 0.469543, -15.7463, 0.83", "-13.8022, 4.60892, -18.0854, 0.83", "-13.9842, 6.58714, -19.2375, 0.55", "-14.2491, 9.24185, -20.9015, 0.83", "-14.5195, 11.2947, -22.2333, 0.28", "-15.3072, 15.4424, -25.0036, 0.83", "-15.9524, 17.7507, -26.8368, 0.55", "-17.9226, 21.267, -30.235, 0.28", "-20.1424, 23.0945, -32.9032, 0.28", "-21.5566, 23.4508, -34.1922, 0.28", "-24.5949, 23.2721, -36.6052, 0.28", "-26.5933, 23.0149, -37.9988, 0.28", "-31.1804, 22.3239, -40.8528, 0.55", "-36.8729, 21.4849, -44.0529, 0.55", "-40.0696, 21.1199, -45.8053, 0.55", "-43.1265, 21.0304, -47.5964, 0.55", "-48.625, 21.5475, -50.8663, 0.55", "-49.5522, 21.7494, -51.5063, 0.55", "-50.8899, 22.1879, -52.5376, 0.28", "-51.9317, 22.5983, -53.3055, 0.83", "-54.5483, 23.6764, -55.2586, 0.55", "-56.5441, 24.4006, -56.808, 0.55", "-59.9688, 25.0845, -59.5951, 1.11", "-63.3376, 25.5544, -62.2169, 0.55", "-64.5802, 25.6821, -63.2151, 0.28", "-65.9668, 25.8283, -64.3676, 0.55", "-67.9554, 26.0786, -66.1726, 0.28", "-70.0861, 26.3962, -68.3279, 1.39", "-71.8345, 26.7159, -70.2316, 0.28", "-73.2701, 27.1157, -72.0888, 0.83", "-74.0803, 27.4331, -73.2405, 0.83", "-76.4566, 28.582, -76.5799, 0.28", "-77.0289, 28.9124, -77.3547, 0.55", "-78.6113, 29.9469, -79.3475, 0.28", "-80.3028, 31.043, -81.3333, 1.94", "-83.9369, 33.3157, -85.1555, 0.28", "-86.1652, 34.7094, -87.3737, 0.55", "-88.0198, 35.8784, -89.0752, 0.28", "-90.0781, 37.1976, -90.8581, 1.66", "-94.3635, 39.9009, -94.1898, 0.28", "-95.3528, 40.4878, -94.854, 0.55", "-96.1805, 40.9425, -95.3312, 0.28", "-99.1183, 42.4455, -97.154, 1.66", "-101.605, 43.708, -98.7416, 0.28", "-103.029, 44.416, -99.7196, 1.11", "-105.87, 45.8059, -101.751, 0.28", "-107.074, 46.3881, -102.698, 0.83", "-111.718, 48.5104, -106.449, 0.28", "-112.474, 48.8282, -107.062, 0.28", "-114.432, 49.516, -108.636, 1.66", "-117.279, 50.4387, -110.862, 0.28", "-118.972, 50.9122, -112.073, 0.55", "-120.898, 51.3456, -113.324, 0.28", "-122.895, 51.707, -114.482, 0.55", "-126.342, 52.1688, -116.509, 0.28", "-127.327, 52.2498, -117.113, 0.83", "-129.248, 52.3305, -118.324, 0.28", "-132.162, 52.376, -120.404, 0.83", "-134.408, 52.3883, -122.141, 0.28", "-135.84, 52.4261, -123.426, 0.55", "-139.798, 52.6399, -127.095, 0.28", "-140.866, 52.699, -128.071, 1.11", "-143.653, 52.9328, -130.724, 0.28", "-144.918, 53.0753, -131.893, 0.55", "-147.924, 53.4352, -134.776, 0.28", "-150.639, 53.8083, -137.507, 0.28", "-151.757, 53.9883, -138.63, 1.11", "-155.512, 54.6322, -142.325, 0.28", "-156.143, 54.7516, -142.954, 0.83", "-159.458, 55.4145, -146.351, 0.28", "-160.34, 55.6115, -147.269, 0.55", "-161.628, 55.9837, -148.79, 0.28", "-162.193, 56.1741, -149.48, 1.39", "-165.007, 57.2518, -152.567, 0.28", "-165.688, 57.5161, -153.391, 0.55", "-167.801, 58.3719, -155.964, 0.28", "-168.023, 58.4679, -156.193, 0.83", "-169.576, 59.1224, -157.504, 0.28", "-172.352, 60.3388, -159.406, 1.11", "-180.46, 63.9848, -163.546, 0.28", "-181.898, 64.5681, -164.284, 1.66", "-186.592, 66.3405, -166.384, 0.28", "-187.681, 66.7411, -166.935, 0.55", "-189.13, 67.2271, -167.709, 0.28", "-190.17, 67.6085, -168.385, 0.83", "-194.525, 69.5955, -170.493, 0.28", "-196.049, 70.286, -171.467, 1.11", "-198.682, 71.4346, -173.729, 0.28", "-199.611, 71.8628, -174.575, 0.55", "-202.937, 73.3986, -177.69, 0.28", "-206.449, 75.4951, -180.964, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-12.5622, -6.90784, -10.2068, 1.66", "-15.6907, -8.44738, -12.5917, 1.66", "-19.0849, -10.1177, -15.1791, 1.66" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-6.38413, -27.8505, 5.29492, 0.55", "-8.37976, -31.0224, 8.41592, 0.55", "-9.98276, -33.4112, 11.074, 0.28", "-10.2994, -33.8456, 11.4521, 0.55", "-11.4275, -35.3997, 12.1292, 0.28", "-13.2185, -37.7956, 10.7109, 0.55", "-16.3648, -41.7426, 5.82698, 0.28", "-16.6337, -42.0263, 5.23555, 0.83", "-18.4628, -43.8925, 0.957328, 0.83", "-21.4198, -46.8177, -6.6017, 0.28", "-21.974, -47.3501, -8.27848, 1.11", "-23.0951, -48.5138, -12.7519, 0.28", "-23.6141, -49.0589, -15.1571, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-6.38413, -27.8505, 5.29492, 1.11", "-5.6775, -34.3258, 1.92111, 1.11", "-5.28644, -37.9094, 0.0539666, 1.11", "-5.1068, -39.5556, -0.803732, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "11.2381, -0.639103, 2.48563, 0.83", "11.6638, -3.2294, 1.00303, 0.83", "11.9624, -5.17945, -0.106201, 0.83", "12.495, -8.5302, -1.94693, 0.83", "13.121, -12.0375, -3.76454, 0.83", "13.9586, -16.7307, -6.19673, 0.83", "15.3373, -24.4552, -10.1999, 0.83", "15.7786, -26.8557, -11.4255, 0.83", "16.0397, -28.165, -12.1229, 0.83", "16.4457, -30.2119, -13.1747, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "11.2381, -0.639103, 2.48563, 1.11", "15.5434, -4.25543, 5.03725, 1.11", "18.1904, -6.32796, 6.7721, 1.11", "22.5697, -9.47202, 9.65562, 1.11", "28.8305, -13.3331, 13.3229, 1.11", "35.1946, -16.714, 16.5285, 1.11", "40.3095, -19.2522, 18.7774, 0.83", "44.2313, -21.3939, 20.5027, 0.83", "46.1824, -22.3784, 21.2206, 0.83", "51.1477, -24.2559, 22.253, 1.39", "54.3489, -24.9538, 22.3447, 0.83", "56.907, -25.2369, 22.253, 0.83", "61.012, -25.8224, 21.8923, 0.83", "64.7132, -26.7999, 21.467, 0.83", "67.7585, -27.803, 21.2275, 0.83", "70.4185, -28.8317, 21.1316, 1.11", "72.887, -29.9145, 21.1249, 0.83", "79.8049, -33.0507, 21.1557, 0.83", "83.2406, -34.7706, 21.141, 0.83", "88.0774, -37.4838, 21.0978, 1.11", "89.4162, -38.3422, 21.0562, 0.83", "91.8028, -39.9059, 20.9316, 0.83", "93.4485, -40.9051, 20.887, 0.83", "96.1781, -42.1427, 20.7904, 1.11", "98.083, -42.6827, 20.6604, 0.55", "99.5516, -42.879, 20.4272, 0.55", "102.133, -42.9043, 20.1709, 0.83", "105.629, -42.6052, 19.9846, 0.83", "108.735, -42.2558, 19.8602, 0.83", "111.757, -41.8449, 19.7464, 0.83", "115.827, -41.2215, 19.6066, 1.11", "119.123, -40.7007, 19.576, 0.83", "120.705, -40.5269, 19.58, 0.83", "123.211, -40.3643, 19.6517, 0.83", "125.294, -40.4861, 19.7173, 0.83", "127.841, -40.9538, 19.6258, 0.83", "130.644, -41.5165, 19.3001, 1.11", "132.476, -41.8905, 18.9361, 1.11", "135.048, -42.4979, 18.3655, 0.83", "137.882, -43.083, 17.4566, 0.55", "140.26, -43.5572, 16.5056, 1.11", "143.302, -44.1335, 15.0935, 0.83", "145.42, -44.4846, 14.013, 0.28", "150.525, -44.9289, 10.8285, 0.83", "154.952, -45.0181, 7.61017, 0.83", "156.341, -44.898, 6.46538, 0.28", "157.414, -44.7735, 5.51741, 0.28", "158.909, -44.5926, 4.18999, 0.83", "163.226, -43.9365, 0.369596, 0.28", "164.305, -43.7777, -0.595349, 0.83", "166.837, -43.828, -2.53681, 1.11", "168.834, -43.9234, -4.15669, 0.28", "170.356, -44.0344, -5.32633, 0.28", "171.534, -44.1368, -6.17875, 0.28", "172.21, -44.2488, -6.58238, 0.55", "173.4, -44.4969, -7.31941, 0.28", "178.349, -45.7608, -10.4615, 0.55", "180.053, -46.1656, -11.5409, 0.28", "180.709, -46.3575, -11.9469, 0.55", "182.578, -47.0076, -13.033, 0.28", "183.655, -47.4361, -13.595, 0.83", "185.403, -48.2431, -14.3603, 0.28", "187.835, -49.4976, -15.093, 0.28", "189.74, -50.2647, -15.7256, 0.28", "191.073, -50.7212, -16.1841, 0.83", "192.394, -51.1067, -16.6386, 0.55", "194.608, -51.6505, -17.3714, 1.94", "199.326, -52.4754, -19.0763, 1.11", "203.549, -52.8805, -20.7228, 0.55", "204.621, -52.8926, -21.1262, 0.55", "206.364, -52.7615, -21.9202, 0.28", "207.613, -52.6044, -22.5941, 0.83", "210.881, -52.1148, -24.5965, 0.28", "211.939, -51.9751, -25.3069, 0.83", "215.27, -51.7139, -27.4801, 0.28", "219.181, -51.7597, -30.5075, 0.83", "220.008, -51.8667, -31.245, 0.83", "222.299, -52.5663, -33.4813, 0.28", "223.93, -53.3848, -35.0166, 0.28", "224.187, -53.5545, -35.2537, 0.83", "228.043, -56.8599, -38.4535, 0.28", "228.556, -57.357, -38.7544, 0.55", "229.964, -58.7929, -39.4731, 0.28", "231.601, -60.6503, -40.1197, 1.11", "232.878, -62.1468, -40.3996, 0.28", "234.408, -63.9406, -40.5912, 0.55", "235.365, -65.0332, -40.5852, 0.28", "235.711, -65.3978, -40.6104, 0.55", "238.053, -67.725, -40.9819, 0.28", "239.324, -68.9827, -41.3369, 0.83", "241.584, -71.1851, -42.1165, 0.28", "242.383, -71.8924, -42.424, 0.55", "243.716, -72.954, -42.8736, 0.28", "244.522, -73.5098, -43.1037, 0.83", "246.066, -74.2611, -43.656, 0.83", "248.435, -75.0757, -44.6393, 0.28", "249.679, -75.1935, -45.345, 0.55", "251.12, -75.13, -46.272, 0.28", "252.604, -74.8725, -47.2818, 0.83", "257.33, -73.7533, -50.6377, 0.28", "258.209, -73.4764, -51.2918, 1.11", "262.933, -71.6265, -55.0643, 0.55", "264.533, -70.9422, -56.46, 0.28", "266.212, -70.1271, -58.0557, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "21.9281, 30.1414, -0.843535, 0.635051", "30.4989, 42.4516, -0.843535, 0.635051", "39.0697, 54.7618, -0.843535, 0.635051" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-3.70553, 14.1694, -54.8455, 0.55", "-5.92854, 11.7237, -59.929, 0.55", "-6.48132, 11.1257, -61.0359, 0.83", "-7.25907, 10.3416, -62.4995, 0.55", "-7.59436, 9.99183, -63.0615, 0.28", "-8.10022, 9.47054, -64.1929, 0.83", "-8.37753, 9.18093, -64.8329, 0.28", "-8.55516, 9.01712, -65.2307, 0.83", "-9.69606, 8.1776, -67.9319, 0.28", "-10.273, 7.927, -69.5042, 0.83", "-12.5135, 7.17193, -75.8727, 0.28", "-13.0089, 7.01753, -77.2937, 0.83", "-13.6763, 6.8205, -79.1454, 0.28", "-14.4573, 6.60949, -81.1977, 1.94", "-16.8402, 6.07636, -86.9855, 1.94", "-17.747, 5.87443, -88.9997, 0.28", "-18.3423, 5.67611, -90.062, 0.83", "-19.4434, 5.19629, -91.9946, 0.28", "-19.8123, 4.9761, -92.6166, 0.28", "-20.4559, 4.50738, -93.6293, 0.55", "-21.234, 3.8841, -94.7592, 0.55", "-22.6093, 2.79817, -96.9206, 0.28", "-23.782, 1.92384, -98.7683, 1.11", "-25.0521, 0.956415, -100.746, 0.28", "-25.3475, 0.732995, -101.25, 0.83", "-26.3371, 0.0291771, -102.926, 0.28", "-26.7502, -0.230692, -103.617, 1.66", "-27.3117, -0.553043, -104.452, 0.83", "-27.7443, -0.800464, -105.009, 0.83", "-30.3889, -2.43795, -107.946, 0.28", "-31.1087, -2.92034, -108.707, 0.28", "-31.9484, -3.52389, -109.488, 0.83", "-32.7872, -4.16509, -110.227, 0.28", "-33.1742, -4.47867, -110.584, 1.11", "-34.22, -5.29795, -111.461, 0.28", "-34.5428, -5.52253, -111.713, 0.83", "-35.6056, -6.11358, -112.594, 0.28", "-36.0777, -6.31839, -112.955, 1.11", "-38.7291, -7.21567, -114.84, 0.28", "-39.5123, -7.41123, -115.342, 1.39", "-41.9889, -7.83131, -117.028, 0.28", "-43.2791, -7.99169, -117.969, 0.55", "-44.4905, -8.12099, -118.789, 0.28", "-45.3767, -8.24311, -119.412, 0.55", "-46.1437, -8.387, -119.929, 0.28", "-48.6927, -9.07679, -121.89, 1.11", "-50.5424, -9.73135, -123.417, 0.28", "-52.3111, -10.4601, -125.103, 1.11", "-54.7912, -11.5804, -127.644, 0.28", "-55.4104, -11.8712, -128.301, 0.83", "-57.2867, -12.7338, -130.273, 0.28", "-57.6911, -12.9114, -130.692, 0.83", "-58.7908, -13.3442, -131.927, 0.28", "-59.0738, -13.432, -132.285, 0.55", "-59.9623, -13.6465, -133.365, 0.28", "-60.8643, -13.8763, -134.52, 1.39", "-62.1658, -14.2367, -136.23, 0.28", "-62.4315, -14.3295, -136.574, 0.28", "-63.276, -14.6698, -137.541, 0.55", "-63.802, -14.9464, -138.084, 0.55", "-64.8425, -15.6857, -139.047, 0.28", "-64.9771, -15.7942, -139.154, 0.55", "-65.2998, -16.0274, -139.398, 0.28", "-65.9558, -16.4478, -139.911, 0.55", "-66.5892, -16.818, -140.405, 0.55", "-68.2733, -17.6599, -141.812, 0.28", "-68.8378, -17.8762, -142.327, 0.55", "-70.2067, -18.3466, -143.581, 0.28", "-70.5718, -18.4432, -143.911, 0.55", "-70.9288, -18.511, -144.215, 0.28", "-71.3565, -18.5697, -144.527, 0.83", "-72.7882, -18.7795, -145.328, 0.28", "-73.3609, -18.9452, -145.549, 0.55", "-73.9034, -19.2564, -145.539, 0.28", "-74.4997, -19.7339, -145.349, 0.55", "-75.1656, -20.3308, -145.28, 0.28", "-75.4045, -20.5655, -145.288, 0.83", "-77.0944, -22.3016, -145.348, 0.28", "-77.4197, -22.5763, -145.465, 0.28", "-78.0572, -23.0564, -145.8, 1.11", "-80.2997, -24.4869, -147.159, 0.28", "-80.9261, -24.8191, -147.515, 0.55", "-82.4625, -25.596, -148.319, 0.28", "-84.4862, -26.525, -149.559, 0.55", "-85.1331, -26.7976, -149.929, 0.55", "-85.8694, -27.0816, -150.289, 0.28", "-87.111, -27.5506, -150.548, 0.83", "-88.3429, -28.0631, -150.772, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-3.70553, 14.1694, -54.8455, 0.55", "-5.3573, 16.2915, -58.3246, 0.55", "-5.62567, 16.593, -58.8083, 0.55", "-6.95756, 18.0396, -61.1544, 0.28", "-7.91824, 19.0249, -62.7658, 1.11", "-9.65907, 20.7923, -65.573, 0.28", "-11.3792, 22.5782, -68.2432, 0.83", "-12.9584, 24.0315, -70.5709, 1.94", "-14.7229, 25.6714, -72.9515, 0.28", "-15.2154, 26.1335, -73.5263, 0.28", "-16.3694, 27.1612, -74.7242, 0.55", "-17.2937, 27.8915, -75.5459, 0.28", "-17.8353, 28.2585, -75.955, 0.55", "-19.941, 29.3946, -77.4264, 0.55", "-21.0153, 29.8013, -78.0988, 0.55", "-22.8418, 30.2503, -79.487, 0.55", "-24.3027, 30.3545, -81.0969, 0.28", "-25.046, 30.387, -82.2663, 0.55", "-25.4271, 30.4146, -83.0208, 0.28", "-25.8154, 30.4703, -83.9473, 0.83", "-26.9963, 30.7715, -87.0021, 0.28", "-28.7151, 31.3635, -91.481, 2.49", "-30.8604, 32.2127, -97.101, 1.39", "-32.9622, 33.0836, -102.575, 0.28", "-34.781, 33.9579, -107.311, 1.66", "-35.7118, 34.4474, -109.579, 1.66", "-37.5187, 35.5105, -113.723, 0.55", "-38.8824, 36.4024, -116.576, 0.28", "-40.0155, 37.2449, -118.797, 1.66", "-41.6145, 38.6734, -121.783, 0.55", "-42.6292, 39.7413, -123.665, 0.55", "-43.5661, 40.9367, -125.68, 0.55", "-43.8313, 41.3518, -126.382, 0.55", "-44.5187, 42.5623, -128.454, 1.94", "-45.1403, 43.7281, -130.552, 0.55", "-45.4711, 44.2714, -131.891, 1.39", "-46.7146, 46.4236, -137.815, 0.55", "-47.395, 47.3791, -140.952, 0.28", "-47.4915, 47.4968, -141.384, 0.28", "-48.1629, 48.1601, -144.063, 1.11", "-50.7115, 50.1785, -153.541, 0.55", "-51.6897, 50.836, -156.921, 1.66", "-52.9681, 51.62, -160.932, 0.28", "-53.1029, 51.6946, -161.308, 0.83", "-53.7988, 52.0435, -163.041, 0.28", "-55.7872, 52.7598, -167.328, 0.28", "-56.0827, 52.8281, -167.832, 0.83", "-57.2531, 53.0466, -169.814, 0.28", "-58.0876, 53.2615, -171.251, 0.28", "-59.9196, 53.8083, -174.57, 0.55", "-61.8178, 54.4427, -178.136, 0.28", "-62.2444, 54.5666, -178.859, 0.28", "-63.9409, 54.9532, -181.638, 0.28", "-64.2594, 54.9975, -182.144, 0.55", "-66.1874, 55.1633, -184.827, 0.28", "-67.5102, 55.1055, -186.229, 0.55", "-69.3598, 54.875, -187.707, 0.28", "-70.0219, 54.6876, -188.132, 0.55", "-71.0207, 54.1419, -188.527, 0.28", "-72.9615, 52.8469, -188.981, 0.55", "-74.7905, 51.3831, -189.069, 0.28", "-75.5155, 50.7347, -189.019, 0.28", "-76.1429, 50.1305, -188.928, 0.55", "-77.41, 48.8712, -188.737, 0.28", "-78.1327, 48.1976, -188.621, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.424446, -6.61175, -67.6924, 0.55", "1.61716, -7.6611, -82.9737, 0.55", "2.56205, -8.18352, -87.6854, 0.55", "3.78559, -8.8728, -93.1049, 0.83", "4.11587, -9.03578, -94.4228, 0.28", "4.47245, -9.21042, -95.6962, 1.11", "6.99928, -10.2614, -103.786, 1.11", "10.2917, -11.7163, -112.172, 0.28", "10.4334, -11.7656, -112.592, 2.22", "12.27, -12.2776, -118.628, 0.55", "12.7379, -12.3734, -120.376, 0.83", "13.6886, -12.4561, -124.599, 0.28", "15.3376, -11.4351, -136.441, 0.28", "16.1046, -12.7116, -130.155, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.424446, -6.61175, -67.6924, 0.55", "2.51384, -3.27122, -76.3273, 0.55", "3.15613, -2.48059, -78.1603, 1.94", "3.80371, -1.62394, -80.0239, 1.39", "4.87669, 0.0629742, -83.4512, 0.55", "5.52766, 0.992045, -85.6417, 0.55", "6.92943, 2.73512, -89.8086, 0.55", "8.47285, 4.31814, -93.4834, 0.55", "9.60401, 5.49123, -96.3189, 1.39", "10.4113, 6.35654, -98.3345, 1.39", "12.6563, 8.55891, -103.477, 0.55", "14.2899, 9.79072, -106.844, 0.55", "15.0304, 10.2451, -108.234, 0.28", "16.0661, 10.7997, -110.056, 0.55", "17.8811, 11.6539, -113.234, 2.22", "20.0698, 12.5834, -117.176, 0.55", "21.5628, 13.2079, -120.126, 0.28", "23.009, 13.648, -123.339, 1.66", "25.1276, 14.0124, -128.591, 0.55", "26.0331, 13.9439, -131.09, 0.55", "26.5144, 13.6663, -132.924, 0.83", "27.2618, 12.9222, -136.337, 0.28", "27.5137, 12.6663, -137.526, 0.28", "28.5478, 11.6418, -142.85, 0.83", "29.4521, 10.9405, -147.879, 3.05", "31.5529, 10.0011, -159.108, 0.28", "31.8065, 9.95592, -160.407, 1.39", "32.8947, 9.99312, -166.337, 0.28", "33.6418, 10.2433, -170.603, 1.39", "34.8625, 11.2131, -177.844, 0.28", "35.0473, 11.5189, -179.042, 0.28", "35.1221, 11.763, -179.677, 0.55", "35.2199, 12.2752, -181.078, 0.28", "35.2314, 12.5855, -181.967, 0.55", "35.2601, 12.8607, -182.872, 0.28", "35.3197, 13.0411, -183.513, 1.39", "36.2807, 14.7909, -190.494, 0.28", "36.434, 14.9879, -191.362, 0.28", "36.8806, 15.3679, -193.189, 1.39", "38.611, 16.4535, -199.166, 0.55", "39.8598, 17.049, -203.008, 1.39", "41.3058, 17.6594, -207.14, 0.55", "44.0825, 18.8385, -214.738, 0.28", "45.1675, 19.2524, -217.69, 0.28", "46.5082, 19.689, -221.243, 1.66", "48.8117, 20.3822, -226.899, 0.28", "49.0527, 20.4655, -227.503, 1.11", "51.019, 21.4668, -233.228, 0.28", "51.1263, 21.5755, -233.644, 0.83", "51.2033, 21.7864, -234.285, 0.28", "51.1971, 22.0077, -234.909, 0.28", "51.1469, 22.1948, -235.44, 0.83", "50.3887, 24.4998, -242.259, 0.28", "50.1054, 25.1987, -244.405, 0.28", "49.5437, 26.5236, -248.685, 1.11", "48.5561, 28.7834, -256.405, 0.28", "48.4557, 28.9847, -257.142, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-19.0849, -10.1177, -15.1791, 0.83", "-19.7339, -11.8088, -13.9825, 0.83", "-21.2779, -17.7721, -10.6699, 0.83", "-21.6537, -20.0115, -9.64906, 0.83", "-22.04, -24.0112, -8.09847, 0.83", "-22.3622, -27.4682, -6.88295, 0.83", "-23.0811, -32.6721, -5.20771, 0.83", "-23.3929, -34.9279, -4.70111, 0.83", "-23.9358, -39.1986, -4.18458, 0.83", "-24.6619, -44.3909, -3.73441, 0.83", "-25.1636, -47.4058, -3.64593, 0.83", "-26.3072, -52.7639, -3.57605, 0.83", "-27.1015, -55.7617, -3.6734, 0.83", "-27.8104, -57.9141, -3.83955, 0.83", "-28.6121, -59.8902, -4.15612, 0.83", "-30.4286, -63.7589, -5.24224, 1.39" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-19.0849, -10.1177, -15.1791, 1.11", "-25.5217, -7.69743, -8.4788, 1.11", "-29.4126, -6.23444, -4.42858, 1.11", "-31.1753, -5.57165, -2.59369, 1.11", "-32.6112, -5.03175, -1.099, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-5.1068, -39.5556, -0.803732, 0.83", "-6.70079, -42.6878, -1.50736, 0.83", "-7.41364, -44.1349, -1.76131, 0.83", "-8.29804, -46.2514, -1.97058, 0.83", "-9.51878, -49.549, -2.01077, 0.83", "-10.2438, -51.4351, -1.8628, 0.83", "-11.3229, -54.18, -1.44356, 0.83", "-12.4104, -57.1178, -0.559718, 0.83", "-13.2305, -59.7913, 0.54982, 0.83", "-13.8233, -61.996, 1.62795, 0.83", "-14.6397, -65.4633, 3.45177, 0.83", "-14.9345, -67.254, 4.41794, 0.83", "-15.1458, -69.5176, 5.64697, 0.83", "-15.3135, -72.5544, 7.25595, 0.83", "-15.4189, -75.4273, 8.59654, 0.55", "-15.3657, -78.2735, 9.79061, 0.55", "-15.2173, -80.2894, 10.5456, 0.55", "-15.1889, -81.5035, 10.928, 0.83", "-15.3156, -83.3129, 11.5793, 0.55", "-15.4523, -84.0466, 11.8883, 0.55", "-16.1598, -87.0414, 13.3806, 0.55", "-16.6121, -88.5112, 14.149, 0.55", "-17.5991, -90.8951, 15.435, 0.55", "-19.2041, -94.3848, 17.1986, 0.55", "-20.1454, -96.3733, 18.2547, 0.55", "-21.0747, -98.2337, 19.269, 0.55", "-21.3125, -98.6683, 19.5051, 0.55", "-22.2726, -100.324, 20.4387, 0.55", "-23.3259, -102.085, 21.4069, 0.83", "-25.4194, -105.401, 22.7911, 0.28", "-26.3188, -106.676, 23.3467, 0.28", "-26.5416, -106.957, 23.475, 0.55", "-27.3212, -107.97, 23.9183, 0.28", "-27.6622, -108.45, 24.0941, 0.55", "-28.5666, -109.427, 24.4622, 0.28", "-29.035, -109.827, 24.3638, 0.28", "-29.8329, -116.387, 26.2357, 0.28", "-30.5376, -122.854, 28.4512, 0.28", "-31.5474, -128.704, 31.966, 0.28", "-31.9393, -134.632, 35.4645, 0.28", "-32.9938, -140.406, 39.0968, 0.28", "-33.9791, -146.827, 41.3474, 0.28", "-35.8167, -152.825, 44.2067, 0.28", "-38.3006, -158.597, 47.0702, 0.28", "-39.5186, -164.351, 50.6855, 0.28", "-40.1363, -169.678, 55.0576, 0.28", "-41.3812, -174.083, 60.2919, 0.28", "-41.1305, -178.978, 65.1976, 0.28", "-40.2679, -183.394, 70.496, 0.28", "-40.5183, -188.704, 74.9245, 0.28", "-39.6768, -192.824, 80.4717, 0.28", "-39.3958, -197.155, 85.9048, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-5.1068, -39.5556, -0.803732, 0.55", "-4.51723, -43.1469, -3.69062, 0.55", "-4.27167, -44.9682, -5.11543, 0.55", "-3.95942, -48.4435, -8.1645, 0.83", "-3.62443, -53.02, -11.7531, 0.83", "-3.5397, -56.478, -14.2575, 0.83", "-3.55027, -59.8636, -16.5619, 0.83", "-3.63695, -61.7763, -17.7344, 0.83", "-3.91344, -67.3463, -20.983, 0.55", "-4.09495, -72.5596, -24.1901, 0.83", "-4.05435, -77.3718, -26.8383, 1.11", "-3.90246, -79.8835, -28.0748, 0.55", "-3.60658, -82.1415, -29.1184, 0.55", "-3.05379, -84.9971, -30.4367, 0.83", "-1.50046, -90.655, -32.9379, 0.55", "-0.860135, -92.5547, -33.898, 0.28", "0.76444, -96.358, -35.9293, 0.55", "1.6103, -98.1944, -36.9549, 0.28", "2.13444, -99.3496, -37.6102, 0.55", "2.72081, -100.474, -38.2927, 0.28", "3.35726, -101.484, -38.7478, 0.55", "6.29561, -105.735, -40.7003, 0.28", "7.15963, -106.96, -41.305, 0.83", "9.03673, -109.205, -41.9367, 0.83", "10.5664, -110.983, -42.1044, 0.83", "13.6836, -114.9, -42.4001, 0.28", "14.0581, -115.429, -42.378, 0.83", "15.6751, -118.032, -42.04, 0.28", "18.4934, -123.242, -41.5385, 0.55", "19.1675, -124.706, -41.3466, 0.55", "20.8075, -129.523, -40.7225, 0.83", "21.8173, -133.692, -40.699, 0.55", "22.0745, -135.094, -40.7374, 0.55", "22.405, -137.96, -40.8784, 0.55", "22.5381, -140.747, -41.1698, 0.28", "22.7247, -143.256, -41.4597, 0.55", "23.3244, -149.574, -42.3745, 0.28", "23.5778, -151.726, -42.8739, 0.83", "23.8717, -153.665, -43.3912, 0.28", "24.1923, -155.16, -43.8562, 0.55", "25.2545, -158.15, -44.8603, 0.28", "25.9866, -159.455, -45.2564, 0.55", "26.9796, -160.717, -45.5457, 0.28", "27.6772, -161.431, -45.7502, 1.11", "29.5295, -163.092, -46.0803, 0.55", "32.6362, -165.624, -46.3991, 0.28", "34.5759, -167.126, -46.494, 0.28", "36.4885, -168.652, -46.511, 0.55", "40.4053, -171.839, -46.2648, 0.28", "43.7518, -174.688, -45.899, 0.55", "45.6211, -176.357, -45.6075, 0.55", "47.5107, -178.124, -45.2507, 0.28", "49.0737, -179.724, -44.8986, 0.28", "52.0512, -182.797, -44.1786, 0.83", "53.8606, -184.703, -43.7624, 0.28", "54.3595, -185.227, -43.7682, 0.55", "55.8258, -186.783, -43.9964, 0.28", "57.1267, -188.205, -44.6874, 0.28", "58.0343, -189.238, -45.507, 0.55", "59.0325, -190.548, -46.7654, 0.28", "61.057, -193.492, -49.5554, 0.83", "61.5466, -194.353, -50.3825, 0.83", "63.0384, -197.353, -53.1901, 0.28", "64.0306, -199.35, -55.0324, 0.28", "64.5012, -200.456, -56.0659, 0.28", "64.9757, -201.65, -57.1021, 0.83", "66.6651, -206.208, -60.742, 0.28", "67.1971, -207.657, -61.9446, 0.83", "67.7713, -209.242, -63.2752, 0.83", "68.7885, -212.308, -66.1155, 0.28", "69.5217, -214.512, -68.3148, 0.55", "70.7829, -218.397, -72.4121, 0.28", "70.89, -218.722, -72.7425, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "16.4457, -30.2119, -13.1747, 0.83", "17.4105, -32.9778, -14.8656, 0.83", "18.5533, -35.7685, -16.628, 0.28", "18.6616, -35.9862, -16.7637, 0.83", "19.2611, -37.0779, -17.511, 0.28", "21.1679, -40.5016, -20.0739, 0.83", "22.2164, -42.4451, -21.5222, 0.55", "22.6965, -43.2858, -22.1683, 0.55", "23.3961, -44.4603, -23.0911, 0.83", "24.983, -46.9392, -24.8255, 0.83", "27.4577, -50.6031, -27.0033, 0.55", "28.5291, -52.2176, -27.6925, 0.55", "29.1609, -53.2448, -28.0402, 0.55", "30.1725, -54.8881, -28.4826, 0.28", "31.8395, -57.5803, -28.9409, 0.55", "32.9256, -59.231, -28.9895, 0.28", "34.291, -61.3483, -28.9359, 0.83", "35.0903, -62.6218, -28.8556, 0.28", "35.4894, -63.3215, -28.7948, 0.55", "36.2328, -64.7564, -28.69, 0.28", "36.3611, -65.001, -28.6758, 0.83", "38.3837, -68.3418, -28.6745, 0.28", "39.9926, -70.8248, -28.5957, 1.11", "40.9158, -72.2448, -28.5046, 1.66", "42.3438, -74.3961, -28.3128, 0.28", "42.9757, -75.3297, -28.2093, 0.55", "44.1368, -76.991, -27.9869, 0.28", "46.0142, -79.4799, -27.5963, 0.83", "47.982, -82.0797, -27.0533, 0.28", "48.4741, -82.6677, -26.8966, 0.83", "49.0085, -83.306, -26.698, 0.83", "50.1162, -84.6386, -26.2858, 0.28", "50.6873, -85.3246, -26.1287, 0.83", "53.5144, -88.5988, -25.5917, 0.83", "55.9068, -91.311, -25.1322, 0.28", "57.7561, -93.4202, -24.8038, 0.28", "58.1759, -93.896, -24.7404, 0.83", "60.3136, -96.4018, -24.5294, 0.28", "61.58, -98.0566, -24.5374, 1.11" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "16.4457, -30.2119, -13.1747, 0.83", "23.106, -30.8993, -9.97467, 0.83", "26.4076, -31.3047, -9.03824, 0.55", "28.0695, -31.3444, -8.94617, 0.55", "30.0179, -31.3663, -9.04095, 0.55", "31.023, -31.3851, -9.13406, 0.55", "33.625, -31.4354, -9.4324, 0.28", "38.1004, -31.4061, -10.2916, 0.83", "44.169, -31.2348, -11.3072, 0.83", "46.4763, -31.1272, -11.6158, 0.55", "48.1296, -31.066, -11.7396, 0.28", "49.1535, -31.0173, -11.7724, 0.83", "53.1176, -30.6632, -11.6988, 0.55", "54.0336, -30.5397, -11.6116, 0.55", "57.3096, -29.9568, -11.0271, 0.55", "59.5799, -29.352, -10.666, 0.55", "61.1094, -28.8891, -10.365, 0.55", "63.672, -28.0892, -9.73048, 0.55", "65.6581, -27.4316, -9.49945, 0.28", "67.0052, -26.9889, -9.50544, 0.55", "68.0146, -26.7197, -9.4939, 0.55", "72.1991, -25.8062, -9.69004, 0.55", "75.0166, -25.352, -10.1466, 0.55", "80.2967, -24.9908, -11.2868, 0.55", "85.3125, -24.9669, -12.5995, 0.55", "90.2324, -25.1418, -14.0876, 0.55", "95.035, -25.4916, -15.5794, 0.83", "100.177, -26.1437, -17.3112, 0.55", "103.174, -26.7268, -18.1738, 0.55", "105.24, -27.2974, -18.5034, 0.28", "106.36, -27.698, -18.6335, 0.83", "109.715, -28.8965, -18.9867, 0.28", "111.319, -29.4416, -18.8722, 0.55", "113.877, -30.1099, -18.6369, 0.55", "115.09, -30.3028, -18.6802, 0.55", "117.392, -30.4755, -18.993, 0.28", "119.738, -30.4432, -19.5784, 0.55", "120.861, -30.2769, -19.9746, 0.55", "124.06, -29.4549, -21.1509, 0.28", "124.702, -29.1995, -21.4016, 0.55", "126.483, -28.24, -22.0998, 0.28", "128.4, -26.9745, -22.826, 0.55", "130.356, -25.4119, -23.4979, 0.28", "131.431, -24.4198, -23.7773, 0.55", "133.33, -22.5754, -24.0554, 0.28", "134.007, -21.9154, -24.1107, 0.55", "134.788, -21.2249, -24.1688, 0.28", "135.977, -20.3426, -24.2515, 0.55", "137.522, -19.3558, -24.3269, 0.28", "139.284, -18.3739, -24.388, 0.83", "141.863, -17.2146, -24.4418, 0.28", "144.497, -16.1506, -24.4951, 0.83", "147.075, -15.2262, -24.5654, 0.28" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "16.1046, -12.7116, -130.155, 0.28", "14.5369, -11.6892, -136.696, 0.28", "14.4185, -11.5431, -138.318, 0.83", "15.2758, -12.3755, -142.355, 0.28", "15.4526, -12.8734, -143.543, 0.83", "15.6526, -13.5683, -144.821, 0.28", "15.7235, -13.9117, -145.51, 0.55", "15.9412, -15.7917, -149.131, 0.28", "16.0767, -17.4376, -152.479, 1.39", "16.1737, -19.7381, -157.284, 0.28", "16.1518, -20.4675, -158.929, 1.39", "15.9146, -23.8599, -167.081, 0.28", "15.902, -23.9645, -167.342, 0.55", "15.6874, -25.1578, -170.315, 0.28", "15.626, -25.5455, -171.303, 1.39", "15.2997, -28.5996, -179.336, 0.28", "15.2943, -28.6883, -179.564, 0.55", "15.3137, -29.9827, -182.387, 0.28", "15.33, -30.2208, -182.866, 0.28", "15.6956, -33.0539, -187.908, 0.28", "16.0078, -34.7509, -190.597, 2.22", "16.7906, -37.6788, -194.261, 0.55", "17.2437, -39.2264, -195.974, 0.28", "17.4384, -39.8217, -196.475, 0.55", "17.8722, -41.0387, -197.277, 0.28", "18.1275, -41.7004, -197.538, 0.28", "18.6168, -42.9828, -197.87, 0.28", "19.0359, -44.1642, -198.224, 1.11", "20.8283, -49.5638, -200.327, 0.28", "20.9848, -50.0705, -200.559, 0.55", "21.7788, -52.7768, -201.945, 0.28", "22.0493, -53.6134, -202.305, 1.11", "23.7572, -58.5979, -204.093, 0.28", "23.869, -58.8775, -204.175, 0.55", "24.7779, -60.8022, -204.486, 0.28", "25.0292, -61.3, -204.542, 0.83", "28.347, -67.0421, -204.524, 0.28", "28.7794, -67.7048, -204.431, 0.28", "30.6386, -70.1858, -203.42, 0.28", "31.1683, -70.8682, -203.113, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "16.1046, -12.7116, -130.155, 0.28", "17.8111, -13.787, -127.717, 0.28", "18.4224, -14.1722, -126.844, 1.11", "20.8592, -15.7077, -123.363, 0.28", "21.1773, -15.9081, -122.909, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-30.4286, -63.7589, -5.24224, 0.55", "-31.5543, -64.0837, -6.57293, 0.55", "-33.5928, -64.7254, -9.03742, 0.55", "-36.7368, -65.8077, -12.7306, 1.11", "-39.7595, -67.0002, -16.9829, 0.55", "-40.5136, -67.3382, -18.1227, 0.55", "-43.8802, -68.9776, -23.4769, 0.28", "-44.4863, -69.3148, -24.5258, 0.55", "-45.0706, -69.6914, -25.714, 0.55", "-49.2027, -72.3765, -34.5229, 0.55", "-49.6136, -72.7076, -35.5202, 0.28", "-49.8277, -72.9027, -36.1173, 0.83", "-50.5457, -73.4894, -38.1175, 0.55", "-52.4698, -74.9383, -43.4615, 0.83", "-54.6102, -76.4808, -49.2903, 0.55", "-55.4932, -77.1082, -51.7029, 0.55", "-56.0982, -77.5574, -53.4833, 1.11", "-57.923, -79.0371, -59.2453, 1.11", "-58.3625, -79.4068, -60.7022, 0.55", "-58.9995, -79.954, -62.7625, 0.83", "-60.6875, -81.648, -68.6815, 0.55", "-61.9373, -82.755, -72.8116, 0.55", "-63.0555, -83.8273, -76.7815, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-30.4286, -63.7589, -5.24224, 0.55", "-30.5259, -67.7334, -5.05574, 0.55", "-30.5014, -70.9986, -5.28542, 0.55", "-30.4731, -74.8473, -5.65383, 0.83", "-30.4549, -76.2107, -5.80609, 0.28", "-30.2787, -80.5533, -6.22556, 0.83", "-30.0801, -82.8788, -6.36154, 0.83", "-29.1096, -88.2722, -6.58823, 0.83", "-28.8354, -89.3526, -6.58073, 0.28", "-28.4439, -90.6788, -6.42242, 0.83", "-27.6755, -92.9067, -5.6674, 0.28", "-26.6368, -95.2954, -3.56243, 0.83", "-26.0352, -96.4991, -1.78041, 0.55", "-25.9371, -96.6514, -1.44172, 0.55", "-25.4102, -97.6387, 0.715976, 0.55", "-25.0953, -98.8242, 3.14083, 0.28", "-25.1129, -99.339, 3.99275, 0.28", "-25.1058, -100.11, 4.96481, 0.28", "-24.7449, -102.578, 7.44375, 0.55", "-24.4986, -103.765, 8.49237, 0.28", "-24.1152, -105.101, 9.57366, 0.55", "-23.8762, -105.865, 10.1693, 0.55", "-22.9014, -109.36, 12.8582, 0.28", "-22.7619, -110.01, 13.346, 0.55", "-22.2473, -113.007, 15.3916, 0.55", "-21.5969, -116.317, 17.7339, 0.28", "-21.3125, -117.713, 18.7383, 0.55", "-21.0619, -119.421, 19.9707, 0.28", "-21.0863, -120.546, 20.7461, 0.55", "-21.1637, -121.723, 21.5127, 0.55", "-18.3309, -130.247, 25.6579, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-32.6112, -5.03175, -1.099, 0.55", "-35.5854, -4.49108, -3.73234, 0.55", "-37.7923, -3.98694, -5.74073, 0.55", "-41.7894, -3.18927, -9.15075, 0.55", "-45.9389, -2.44745, -12.739, 0.55", "-48.0504, -2.01252, -14.6108, 0.55", "-50.841, -1.3382, -17.1425, 0.83", "-53.8833, -0.563492, -19.9886, 0.55", "-58.0265, 0.542795, -24.1767, 0.83", "-61.0247, 1.56631, -27.486, 0.55", "-62.6788, 2.32322, -29.2814, 0.55", "-63.7344, 2.93191, -30.4508, 0.55", "-65.7611, 4.34968, -32.6415, 0.55", "-67.4542, 5.94644, -34.7744, 0.55", "-68.2864, 7.11866, -35.9998, 0.55", "-69.2729, 8.65201, -37.3049, 0.55", "-70.1989, 9.90623, -38.3687, 0.55", "-71.5329, 11.6888, -39.6975, 1.66", "-72.5088, 13.2238, -40.4644, 2.49" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-32.6112, -5.03175, -1.099, 0.83", "-33.9403, -4.22707, -1.87211, 0.83", "-35.9621, -3.00302, -3.04814, 0.83", "-37.915, -1.82068, -4.1841, 0.55", "-39.3147, -0.973279, -4.99826, 0.55", "-43.3785, 1.48705, -7.36206, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "61.58, -98.0566, -24.5374, 0.28", "61.6488, -100.301, -26.9307, 0.28", "61.6332, -101.267, -27.9182, 0.55", "61.5555, -103.362, -29.8215, 0.28", "61.4757, -104.619, -30.8851, 0.83", "60.8753, -115.83, -40.8321, 0.28", "60.7806, -117.483, -42.3347, 1.39", "60.692, -118.783, -43.7588, 1.11", "60.5059, -120.846, -46.3258, 0.28", "60.351, -121.447, -47.1401, 0.83", "58.1609, -125.683, -53.254, 0.28", "57.7643, -125.964, -53.7088, 0.55", "54.214, -127.443, -57.1435, 0.28", "53.8375, -127.504, -57.4343, 0.83", "47.0636, -127.465, -61.5711, 0.28", "45.9756, -127.322, -62.0367, 0.55", "43.0524, -126.546, -62.7293, 0.28", "41.2703, -125.835, -63.1405, 1.11", "38.4014, -124.222, -63.7065, 0.28", "38.1369, -124.016, -63.7757, 0.55", "37.0492, -122.816, -64.1393, 0.28", "35.6674, -121.257, -64.5887, 1.39", "33.0807, -118.323, -65.7276, 0.28", "32.4254, -117.627, -66.1137, 1.11", "31.2534, -116.518, -66.8727, 0.28", "30.0647, -115.422, -67.6549, 1.66", "27.4396, -113.135, -69.4106, 0.28", "24.881, -110.986, -71.1605, 0.55", "19.428, -106.666, -74.8091, 0.28", "17.4661, -105.154, -76.2427, 1.11" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "61.58, -98.0566, -24.5374, 0.28", "62.931, -99.4804, -24.4972, 0.28", "65.4925, -102.181, -24.3987, 0.28", "66.3967, -103.115, -24.3572, 1.11", "67.2588, -104.079, -24.3303, 1.11", "68.7474, -105.809, -24.296, 0.28", "69.0694, -106.196, -24.2886, 0.55", "70.8813, -108.577, -24.2371, 0.28", "71.1889, -109.063, -24.1638, 0.55", "72.9826, -112.685, -23.3639, 0.28", "73.0753, -112.911, -23.3042, 0.55", "73.6188, -114.466, -22.7928, 0.28", "73.8708, -115.302, -22.4694, 1.11", "75.5042, -121.601, -19.7398, 0.28", "76.0069, -123.641, -18.789, 0.55", "76.2095, -124.454, -18.3737, 0.28", "76.6957, -126.179, -17.4749, 0.83", "77.78, -129.52, -15.4757, 0.28", "78.2892, -130.823, -14.6088, 0.28", "78.5431, -131.233, -14.2985, 0.55", "79.213, -132.077, -13.5768, 0.28", "79.9676, -132.966, -12.9129, 0.55", "82.3314, -135.433, -10.9548, 0.28", "82.4985, -135.596, -10.8224, 0.55", "84.6158, -137.524, -9.44206, 0.28", "85.1634, -138.058, -9.16807, 0.83", "87.9688, -140.89, -7.78821, 0.28", "91.3245, -144.164, -6.34054, 0.83", "93.3557, -145.957, -5.62238, 0.55", "95.6685, -147.992, -4.72721, 0.28", "97.9443, -150.017, -3.69276, 0.28", "100.114, -151.864, -2.58366, 0.55", "101.882, -153.208, -1.54374, 0.28", "102.982, -153.981, -1.18062, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-72.5088, 13.2238, -40.4644, 0.55", "-71.9339, 13.8142, -44.8361, 0.55", "-71.8184, 13.909, -45.8406, 0.55", "-71.3991, 14.2434, -50.2028, 1.94", "-70.8468, 14.682, -57.5108, 0.55", "-70.8225, 14.694, -58.0099, 0.83", "-70.7741, 14.702, -59.985, 0.28", "-70.7963, 14.5174, -64.6556, 1.66", "-70.8246, 14.2605, -69.5101, 0.55", "-70.8076, 14.1879, -70.5491, 0.83", "-70.5878, 13.8576, -74.6974, 0.28", "-70.3942, 13.7625, -76.47, 1.11", "-68.965, 13.5031, -85.643, 0.28", "-68.7062, 13.5276, -86.9566, 0.83", "-67.9486, 13.6984, -90.2289, 0.55", "-67.1939, 13.9703, -93.6672, 1.66", "-66.217, 14.4553, -98.5917, 0.28", "-66.1856, 14.4709, -98.8071, 0.55", "-65.8253, 14.6703, -103.016, 0.28", "-65.6682, 14.655, -107.593, 1.94", "-65.7638, 14.468, -113.731, 0.28", "-65.9927, 14.2641, -117.175, 0.83", "-66.8075, 13.5704, -124.661, 0.28", "-66.9752, 13.4408, -125.866, 0.83", "-67.8836, 12.7536, -131.135, 0.28", "-68.022, 12.67, -131.78, 0.55", "-68.5465, 12.4323, -133.856, 0.28", "-68.6947, 12.4006, -134.34, 0.83", "-70.3666, 12.4377, -138.717, 0.28", "-71.6295, 12.5985, -141.59, 0.83", "-72.4424, 12.7558, -143.173, 0.28", "-72.5894, 12.7812, -143.469, 0.55", "-74.098, 13.0146, -146.63, 0.28", "-74.6136, 13.101, -147.624, 0.55", "-76.9345, 13.448, -151.037, 0.28", "-77.518, 13.5174, -151.763, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-72.5088, 13.2238, -40.4644, 0.28", "-75.1312, 14.9652, -41.5892, 0.28", "-78.0608, 16.7867, -43.1073, 0.55", "-81.3502, 18.7085, -44.913, 0.55", "-82.7565, 19.5361, -45.5618, 0.55", "-84.1938, 20.4525, -46.0885, 0.28", "-85.8678, 21.5464, -46.7145, 0.55", "-88.5295, 23.2182, -47.8152, 0.28", "-90.1916, 24.1257, -48.7723, 0.55", "-93.2549, 24.8734, -51.5922, 0.28", "-95.2124, 25.0305, -54.0631, 0.28", "-97.4862, 24.9287, -57.6459, 0.55", "-98.9427, 24.6447, -60.3699, 0.55", "-100.756, 23.9374, -64.3608, 1.94", "-102.496, 22.9257, -68.8568, 0.28", "-103.052, 22.5089, -70.4609, 0.28", "-103.327, 22.2626, -71.2709, 1.39" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-103.327, 22.2626, -71.2709, 0.28", "-105.089, 21.5747, -73.9411, 0.28", "-105.563, 21.4149, -74.6049, 0.83", "-106.413, 21.1531, -75.7214, 0.28", "-108.587, 20.533, -78.4565, 0.83", "-114.799, 19.157, -85.1979, 0.28", "-116.337, 18.894, -86.6228, 1.39", "-118.264, 18.5525, -88.5296, 0.28", "-119.083, 18.4198, -89.3323, 0.55", "-119.469, 18.3645, -89.6809, 0.55", "-125.776, 18.319, -92.4524, 0.28", "-127.206, 18.7661, -91.784, 1.39" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-103.327, 22.2626, -71.2709, 0.28", "-105.96, 21.9643, -76.2947, 0.28", "-106.491, 21.778, -77.289, 0.83", "-108.524, 20.8111, -80.9674, 0.28", "-108.843, 20.591, -81.5112, 0.83", "-111.002, 18.9661, -84.7846, 0.28", "-111.959, 18.213, -86.11, 0.55", "-114.134, 16.0446, -88.6934, 0.28", "-114.484, 15.6595, -89.073, 0.55", "-116.738, 12.9151, -91.1016, 0.28", "-117.907, 11.5274, -92.0749, 0.83", "-118.408, 10.9707, -92.4312, 0.83", "-119.315, 10.118, -93.162, 0.83", "-122.386, 7.80479, -95.6812, 0.28", "-123.405, 7.16529, -96.6987, 0.28", "-126.245, 5.63913, -100.297, 0.28", "-127.022, 5.24799, -101.506, 1.11", "-129.568, 4.1534, -105.833, 0.28", "-130.015, 3.99565, -106.634, 0.83", "-132.028, 3.46669, -110.583, 0.28", "-133.387, 3.17661, -113.623, 0.83", "-134.61, 2.92485, -117.126, 0.28", "-134.872, 2.85085, -118.015, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_13", "dend_8", "dend_1", "dend_0", "dend_32", "dend_27", "dend_25", "dend_14", "dend_12", "dend_9", "dend_3", "dend_2", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_15", "dend_11", "dend_10", "dend_5", "dend_4", "dend_31", "dend_30", "dend_24", "dend_23", "dend_17", "dend_16", "dend_7", "dend_6", "dend_21", "dend_18", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_13", "dend_8", "dend_1", "dend_0", "dend_32", "dend_27", "dend_25", "dend_14", "dend_12", "dend_9", "dend_3", "dend_2", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_15", "dend_11", "dend_10", "dend_5", "dend_4", "dend_31", "dend_30", "dend_24", "dend_23", "dend_17", "dend_16", "dend_7", "dend_6", "dend_21", "dend_18", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_NBC_900ac15b61_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_13
create dend_25
public dend_25
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_14
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_13, dend_8, dend_1, dend_0, dend_32, dend_27, dend_25, dend_14, dend_12, dend_9, dend_3, dend_2, dend_34, dend_33, dend_29, dend_28, dend_22, dend_15, dend_11, dend_10, dend_5, dend_4, dend_31, dend_30, dend_24, dend_23, dend_17, dend_16, dend_7, dend_6, dend_21, dend_18, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_13, dend_8, dend_1, dend_0, dend_32, dend_27, dend_25, dend_14, dend_12, dend_9, dend_3, dend_2, dend_34, dend_33, dend_29, dend_28, dend_22, dend_15, dend_11, dend_10, dend_5, dend_4, dend_31, dend_30, dend_24, dend_23, dend_17, dend_16, dend_7, dend_6, dend_21, dend_18, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_37
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.49999976551736225)
    connect dend_13(0), soma_0(0.49999976551736225)
    connect dend_8(0), soma_0(0.49999976551736225)
    connect dend_1(0), soma_0(0.49999976551736225)
    connect dend_0(0), soma_0(0.49999976551736225)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -5.09764, -8.67532, 0.645002, 2.68797 ) }
    soma_0 { pt3dadd( -4.60344, -7.96551, 0.570575, 4.73408 ) }
    soma_0 { pt3dadd( -4.10924, -7.25569, 0.496148, 7.4359 ) }
    soma_0 { pt3dadd( -3.61503, -6.54587, 0.421721, 8.59973 ) }
    soma_0 { pt3dadd( -3.12083, -5.83605, 0.347294, 9.0848 ) }
    soma_0 { pt3dadd( -2.62663, -5.12623, 0.272868, 9.56987 ) }
    soma_0 { pt3dadd( -2.13243, -4.41641, 0.198441, 10.0549 ) }
    soma_0 { pt3dadd( -1.63822, -3.70659, 0.124014, 10.54 ) }
    soma_0 { pt3dadd( -1.14402, -2.99677, 0.049587, 11.0283 ) }
    soma_0 { pt3dadd( -0.649817, -2.28695, -0.0248399, 11.5469 ) }
    soma_0 { pt3dadd( -0.155615, -1.57714, -0.0992667, 12.0729 ) }
    soma_0 { pt3dadd( 0.338588, -0.867317, -0.173694, 12.4151 ) }
    soma_0 { pt3dadd( 0.832791, -0.157498, -0.24812, 12.7013 ) }
    soma_0 { pt3dadd( 1.32699, 0.552321, -0.322547, 12.6038 ) }
    soma_0 { pt3dadd( 1.8212, 1.26214, -0.396974, 12.4311 ) }
    soma_0 { pt3dadd( 2.3154, 1.97196, -0.471401, 12.1547 ) }
    soma_0 { pt3dadd( 2.8096, 2.68178, -0.545828, 11.8066 ) }
    soma_0 { pt3dadd( 3.3038, 3.3916, -0.620255, 10.9507 ) }
    soma_0 { pt3dadd( 3.79801, 4.10142, -0.694681, 9.34672 ) }
    soma_0 { pt3dadd( 4.29221, 4.81123, -0.769108, 7.74278 ) }
    soma_0 { pt3dadd( 4.78641, 5.52105, -0.843535, 4.17384 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 3.6438, 0.523465, -7.80437, 1.94 ) }
    dend_26 { pt3dadd( 6.68796, 1.41949, -12.2385, 1.94 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 23/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -6.8862, -7.02304, -7.80437, 2.49 ) }
    dend_13 { pt3dadd( -9.49294, -6.97013, -8.90769, 2.49 ) }
    dend_13 { pt3dadd( -12.5622, -6.90784, -10.2068, 2.49 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 26/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -1.2562, -9.81153, 2.88563, 1.66 ) }
    dend_8 { pt3dadd( -1.75879, -11.5796, 3.12177, 1.66 ) }
    dend_8 { pt3dadd( -3.2285, -16.7497, 3.81229, 1.11 ) }
    dend_8 { pt3dadd( -4.68194, -21.8626, 4.49517, 1.11 ) }
    dend_8 { pt3dadd( -6.38413, -27.8505, 5.29492, 1.39 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 31/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.4238, 0.396714, 2.48563, 2.22 ) }
    dend_1 { pt3dadd( 11.2381, -0.639103, 2.48563, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 33/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.1838, 5.31072, 7.68563, 0.83 ) }
    dend_0 { pt3dadd( 5.05703, 6.37262, 8.42983, 0.83 ) }
    dend_0 { pt3dadd( 6.15943, 8.11215, 10.751, 1.39 ) }
    dend_0 { pt3dadd( 7.3002, 10.306, 13.6241, 0.83 ) }
    dend_0 { pt3dadd( 7.7882, 11.5504, 15.1536, 0.83 ) }
    dend_0 { pt3dadd( 8.86237, 14.6806, 18.7705, 0.83 ) }
    dend_0 { pt3dadd( 10.3299, 18.737, 23.2385, 0.83 ) }
    dend_0 { pt3dadd( 11.0327, 20.9451, 26.1297, 0.83 ) }
    dend_0 { pt3dadd( 11.2003, 21.6769, 27.1574, 0.83 ) }
    dend_0 { pt3dadd( 11.3693, 22.7009, 28.7359, 0.55 ) }
    dend_0 { pt3dadd( 11.4247, 23.2856, 29.6135, 0.55 ) }
    dend_0 { pt3dadd( 11.3949, 24.5294, 31.0352, 0.55 ) }
    dend_0 { pt3dadd( 11.1614, 27.8553, 33.9618, 0.55 ) }
    dend_0 { pt3dadd( 11.1116, 29.7248, 35.7902, 0.83 ) }
    dend_0 { pt3dadd( 11.0997, 32.1634, 38.2735, 0.55 ) }
    dend_0 { pt3dadd( 11.0957, 32.8379, 38.9666, 0.83 ) }
    dend_0 { pt3dadd( 10.9616, 34.9691, 41.1627, 0.28 ) }
    dend_0 { pt3dadd( 10.6315, 37.6937, 43.8799, 0.83 ) }
    dend_0 { pt3dadd( 10.3871, 40.3941, 46.2884, 0.83 ) }
    dend_0 { pt3dadd( 10.4382, 41.8566, 47.7933, 0.28 ) }
    dend_0 { pt3dadd( 10.474, 42.0799, 48.0227, 0.55 ) }
    dend_0 { pt3dadd( 11.4089, 47.9585, 54.0147, 0.55 ) }
    dend_0 { pt3dadd( 13.3388, 53.9869, 59.6017, 0.55 ) }
    dend_0 { pt3dadd( 15.9575, 60.3434, 64.4843, 0.55 ) }
    dend_0 { pt3dadd( 17.4311, 66.1902, 70.4017, 0.55 ) }
    dend_0 { pt3dadd( 18.3858, 70.9518, 77.3566, 0.55 ) }
    dend_0 { pt3dadd( 19.7098, 76.4125, 83.6828, 0.55 ) }
    dend_0 { pt3dadd( 21.989, 81.01, 90.4457, 0.55 ) }
    dend_0 { pt3dadd( 24.7617, 85.3126, 97.2294, 0.55 ) }
    dend_0 { pt3dadd( 26.2366, 89.9841, 104.159, 0.55 ) }
    dend_0 { pt3dadd( 28.8534, 94.9689, 110.499, 0.55 ) }
    dend_0 { pt3dadd( 30.6634, 100.9, 116.233, 0.55 ) }
    dend_0 { pt3dadd( 31.7341, 106.726, 122.256, 0.55 ) }
    dend_0 { pt3dadd( 32.5966, 111.3, 129.354, 0.55 ) }
    dend_0 { pt3dadd( 32.2433, 115.432, 136.772, 0.55 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 68/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.78641, 5.52105, -0.843535, 0.9026 ) }
    axon_0 { pt3dadd( 13.3572, 17.8312, -0.843535, 0.9026 ) }
    axon_0 { pt3dadd( 21.9281, 30.1414, -0.843535, 0.9026 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 71/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 6.68796, 1.41949, -12.2385, 0.83 ) }
    dend_32 { pt3dadd( 6.43354, 3.33945, -13.966, 0.83 ) }
    dend_32 { pt3dadd( 6.07262, 5.5317, -16.5598, 0.83 ) }
    dend_32 { pt3dadd( 5.84254, 6.5466, -17.8198, 1.66 ) }
    dend_32 { pt3dadd( 5.11931, 9.04494, -20.9198, 1.11 ) }
    dend_32 { pt3dadd( 4.72472, 10.2235, -22.4212, 1.11 ) }
    dend_32 { pt3dadd( 3.58299, 13.1153, -26.5174, 1.11 ) }
    dend_32 { pt3dadd( 2.16124, 15.6428, -31.4247, 0.83 ) }
    dend_32 { pt3dadd( 1.61075, 16.238, -33.2804, 0.83 ) }
    dend_32 { pt3dadd( 1.18623, 16.4788, -34.7381, 0.55 ) }
    dend_32 { pt3dadd( 0.85485, 16.5456, -35.8354, 0.55 ) }
    dend_32 { pt3dadd( -0.100162, 16.5187, -39.1174, 1.39 ) }
    dend_32 { pt3dadd( -1.93012, 15.8383, -46.4891, 0.83 ) }
    dend_32 { pt3dadd( -2.1871, 15.6726, -47.466, 0.83 ) }
    dend_32 { pt3dadd( -3.19023, 14.7444, -52.0837, 0.83 ) }
    dend_32 { pt3dadd( -3.70553, 14.1694, -54.8455, 2.49 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 87/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 6.68796, 1.41949, -12.2385, 1.11 ) }
    dend_27 { pt3dadd( 5.82506, 1.38672, -14.4844, 1.11 ) }
    dend_27 { pt3dadd( 3.71479, 0.771795, -21.564, 1.11 ) }
    dend_27 { pt3dadd( 2.80192, 0.170366, -25.4504, 1.11 ) }
    dend_27 { pt3dadd( 2.52953, -0.115063, -26.9493, 1.11 ) }
    dend_27 { pt3dadd( 1.26552, -2.44775, -38.7476, 1.11 ) }
    dend_27 { pt3dadd( 1.02307, -3.12763, -42.9565, 1.11 ) }
    dend_27 { pt3dadd( 0.622047, -3.95418, -48.3332, 0.83 ) }
    dend_27 { pt3dadd( 0.377797, -4.3501, -51.0807, 0.83 ) }
    dend_27 { pt3dadd( 0.166394, -4.6246, -53.0277, 0.83 ) }
    dend_27 { pt3dadd( -0.559016, -5.6506, -60.8391, 2.22 ) }
    dend_27 { pt3dadd( -0.424446, -6.61175, -67.6924, 2.22 ) }
    // Section: dend_25, id: dend_25, parent: dend_13 (entry count 99/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -12.5622, -6.90784, -10.2068, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_25 { pt3dadd( -12.951, -2.13064, -14.0692, 0.83 ) }
    dend_25 { pt3dadd( -13.2588, 0.469543, -15.7463, 0.83 ) }
    dend_25 { pt3dadd( -13.8022, 4.60892, -18.0854, 0.83 ) }
    dend_25 { pt3dadd( -13.9842, 6.58714, -19.2375, 0.55 ) }
    dend_25 { pt3dadd( -14.2491, 9.24185, -20.9015, 0.83 ) }
    dend_25 { pt3dadd( -14.5195, 11.2947, -22.2333, 0.28 ) }
    dend_25 { pt3dadd( -15.3072, 15.4424, -25.0036, 0.83 ) }
    dend_25 { pt3dadd( -15.9524, 17.7507, -26.8368, 0.55 ) }
    dend_25 { pt3dadd( -17.9226, 21.267, -30.235, 0.28 ) }
    dend_25 { pt3dadd( -20.1424, 23.0945, -32.9032, 0.28 ) }
    dend_25 { pt3dadd( -21.5566, 23.4508, -34.1922, 0.28 ) }
    dend_25 { pt3dadd( -24.5949, 23.2721, -36.6052, 0.28 ) }
    dend_25 { pt3dadd( -26.5933, 23.0149, -37.9988, 0.28 ) }
    dend_25 { pt3dadd( -31.1804, 22.3239, -40.8528, 0.55 ) }
    dend_25 { pt3dadd( -36.8729, 21.4849, -44.0529, 0.55 ) }
    dend_25 { pt3dadd( -40.0696, 21.1199, -45.8053, 0.55 ) }
    dend_25 { pt3dadd( -43.1265, 21.0304, -47.5964, 0.55 ) }
    dend_25 { pt3dadd( -48.625, 21.5475, -50.8663, 0.55 ) }
    dend_25 { pt3dadd( -49.5522, 21.7494, -51.5063, 0.55 ) }
    dend_25 { pt3dadd( -50.8899, 22.1879, -52.5376, 0.28 ) }
    dend_25 { pt3dadd( -51.9317, 22.5983, -53.3055, 0.83 ) }
    dend_25 { pt3dadd( -54.5483, 23.6764, -55.2586, 0.55 ) }
    dend_25 { pt3dadd( -56.5441, 24.4006, -56.808, 0.55 ) }
    dend_25 { pt3dadd( -59.9688, 25.0845, -59.5951, 1.11 ) }
    dend_25 { pt3dadd( -63.3376, 25.5544, -62.2169, 0.55 ) }
    dend_25 { pt3dadd( -64.5802, 25.6821, -63.2151, 0.28 ) }
    dend_25 { pt3dadd( -65.9668, 25.8283, -64.3676, 0.55 ) }
    dend_25 { pt3dadd( -67.9554, 26.0786, -66.1726, 0.28 ) }
    dend_25 { pt3dadd( -70.0861, 26.3962, -68.3279, 1.39 ) }
    dend_25 { pt3dadd( -71.8345, 26.7159, -70.2316, 0.28 ) }
    dend_25 { pt3dadd( -73.2701, 27.1157, -72.0888, 0.83 ) }
    dend_25 { pt3dadd( -74.0803, 27.4331, -73.2405, 0.83 ) }
    dend_25 { pt3dadd( -76.4566, 28.582, -76.5799, 0.28 ) }
    dend_25 { pt3dadd( -77.0289, 28.9124, -77.3547, 0.55 ) }
    dend_25 { pt3dadd( -78.6113, 29.9469, -79.3475, 0.28 ) }
    dend_25 { pt3dadd( -80.3028, 31.043, -81.3333, 1.94 ) }
    dend_25 { pt3dadd( -83.9369, 33.3157, -85.1555, 0.28 ) }
    dend_25 { pt3dadd( -86.1652, 34.7094, -87.3737, 0.55 ) }
    dend_25 { pt3dadd( -88.0198, 35.8784, -89.0752, 0.28 ) }
    dend_25 { pt3dadd( -90.0781, 37.1976, -90.8581, 1.66 ) }
    dend_25 { pt3dadd( -94.3635, 39.9009, -94.1898, 0.28 ) }
    dend_25 { pt3dadd( -95.3528, 40.4878, -94.854, 0.55 ) }
    dend_25 { pt3dadd( -96.1805, 40.9425, -95.3312, 0.28 ) }
    dend_25 { pt3dadd( -99.1183, 42.4455, -97.154, 1.66 ) }
    dend_25 { pt3dadd( -101.605, 43.708, -98.7416, 0.28 ) }
    dend_25 { pt3dadd( -103.029, 44.416, -99.7196, 1.11 ) }
    dend_25 { pt3dadd( -105.87, 45.8059, -101.751, 0.28 ) }
    dend_25 { pt3dadd( -107.074, 46.3881, -102.698, 0.83 ) }
    dend_25 { pt3dadd( -111.718, 48.5104, -106.449, 0.28 ) }
    dend_25 { pt3dadd( -112.474, 48.8282, -107.062, 0.28 ) }
    dend_25 { pt3dadd( -114.432, 49.516, -108.636, 1.66 ) }
    dend_25 { pt3dadd( -117.279, 50.4387, -110.862, 0.28 ) }
    dend_25 { pt3dadd( -118.972, 50.9122, -112.073, 0.55 ) }
    dend_25 { pt3dadd( -120.898, 51.3456, -113.324, 0.28 ) }
    dend_25 { pt3dadd( -122.895, 51.707, -114.482, 0.55 ) }
    dend_25 { pt3dadd( -126.342, 52.1688, -116.509, 0.28 ) }
    dend_25 { pt3dadd( -127.327, 52.2498, -117.113, 0.83 ) }
    dend_25 { pt3dadd( -129.248, 52.3305, -118.324, 0.28 ) }
    dend_25 { pt3dadd( -132.162, 52.376, -120.404, 0.83 ) }
    dend_25 { pt3dadd( -134.408, 52.3883, -122.141, 0.28 ) }
    dend_25 { pt3dadd( -135.84, 52.4261, -123.426, 0.55 ) }
    dend_25 { pt3dadd( -139.798, 52.6399, -127.095, 0.28 ) }
    dend_25 { pt3dadd( -140.866, 52.699, -128.071, 1.11 ) }
    dend_25 { pt3dadd( -143.653, 52.9328, -130.724, 0.28 ) }
    dend_25 { pt3dadd( -144.918, 53.0753, -131.893, 0.55 ) }
    dend_25 { pt3dadd( -147.924, 53.4352, -134.776, 0.28 ) }
    dend_25 { pt3dadd( -150.639, 53.8083, -137.507, 0.28 ) }
    dend_25 { pt3dadd( -151.757, 53.9883, -138.63, 1.11 ) }
    dend_25 { pt3dadd( -155.512, 54.6322, -142.325, 0.28 ) }
    dend_25 { pt3dadd( -156.143, 54.7516, -142.954, 0.83 ) }
    dend_25 { pt3dadd( -159.458, 55.4145, -146.351, 0.28 ) }
    dend_25 { pt3dadd( -160.34, 55.6115, -147.269, 0.55 ) }
    dend_25 { pt3dadd( -161.628, 55.9837, -148.79, 0.28 ) }
    dend_25 { pt3dadd( -162.193, 56.1741, -149.48, 1.39 ) }
    dend_25 { pt3dadd( -165.007, 57.2518, -152.567, 0.28 ) }
    dend_25 { pt3dadd( -165.688, 57.5161, -153.391, 0.55 ) }
    dend_25 { pt3dadd( -167.801, 58.3719, -155.964, 0.28 ) }
    dend_25 { pt3dadd( -168.023, 58.4679, -156.193, 0.83 ) }
    dend_25 { pt3dadd( -169.576, 59.1224, -157.504, 0.28 ) }
    dend_25 { pt3dadd( -172.352, 60.3388, -159.406, 1.11 ) }
    dend_25 { pt3dadd( -180.46, 63.9848, -163.546, 0.28 ) }
    dend_25 { pt3dadd( -181.898, 64.5681, -164.284, 1.66 ) }
    dend_25 { pt3dadd( -186.592, 66.3405, -166.384, 0.28 ) }
    dend_25 { pt3dadd( -187.681, 66.7411, -166.935, 0.55 ) }
    dend_25 { pt3dadd( -189.13, 67.2271, -167.709, 0.28 ) }
    dend_25 { pt3dadd( -190.17, 67.6085, -168.385, 0.83 ) }
    dend_25 { pt3dadd( -194.525, 69.5955, -170.493, 0.28 ) }
    dend_25 { pt3dadd( -196.049, 70.286, -171.467, 1.11 ) }
    dend_25 { pt3dadd( -198.682, 71.4346, -173.729, 0.28 ) }
    dend_25 { pt3dadd( -199.611, 71.8628, -174.575, 0.55 ) }
    dend_25 { pt3dadd( -202.937, 73.3986, -177.69, 0.28 ) }
    dend_25 { pt3dadd( -206.449, 75.4951, -180.964, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 92/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -12.5622, -6.90784, -10.2068, 1.66 ) }
    dend_14 { pt3dadd( -15.6907, -8.44738, -12.5917, 1.66 ) }
    dend_14 { pt3dadd( -19.0849, -10.1177, -15.1791, 1.66 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 95/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -6.38413, -27.8505, 5.29492, 0.55 ) }
    dend_12 { pt3dadd( -8.37976, -31.0224, 8.41592, 0.55 ) }
    dend_12 { pt3dadd( -9.98276, -33.4112, 11.074, 0.28 ) }
    dend_12 { pt3dadd( -10.2994, -33.8456, 11.4521, 0.55 ) }
    dend_12 { pt3dadd( -11.4275, -35.3997, 12.1292, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_12 { pt3dadd( -13.2185, -37.7956, 10.7109, 0.55 ) }
    dend_12 { pt3dadd( -16.3648, -41.7426, 5.82698, 0.28 ) }
    dend_12 { pt3dadd( -16.6337, -42.0263, 5.23555, 0.83 ) }
    dend_12 { pt3dadd( -18.4628, -43.8925, 0.957328, 0.83 ) }
    dend_12 { pt3dadd( -21.4198, -46.8177, -6.6017, 0.28 ) }
    dend_12 { pt3dadd( -21.974, -47.3501, -8.27848, 1.11 ) }
    dend_12 { pt3dadd( -23.0951, -48.5138, -12.7519, 0.28 ) }
    dend_12 { pt3dadd( -23.6141, -49.0589, -15.1571, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 8/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -6.38413, -27.8505, 5.29492, 1.11 ) }
    dend_9 { pt3dadd( -5.6775, -34.3258, 1.92111, 1.11 ) }
    dend_9 { pt3dadd( -5.28644, -37.9094, 0.0539666, 1.11 ) }
    dend_9 { pt3dadd( -5.1068, -39.5556, -0.803732, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 12/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 11.2381, -0.639103, 2.48563, 0.83 ) }
    dend_3 { pt3dadd( 11.6638, -3.2294, 1.00303, 0.83 ) }
    dend_3 { pt3dadd( 11.9624, -5.17945, -0.106201, 0.83 ) }
    dend_3 { pt3dadd( 12.495, -8.5302, -1.94693, 0.83 ) }
    dend_3 { pt3dadd( 13.121, -12.0375, -3.76454, 0.83 ) }
    dend_3 { pt3dadd( 13.9586, -16.7307, -6.19673, 0.83 ) }
    dend_3 { pt3dadd( 15.3373, -24.4552, -10.1999, 0.83 ) }
    dend_3 { pt3dadd( 15.7786, -26.8557, -11.4255, 0.83 ) }
    dend_3 { pt3dadd( 16.0397, -28.165, -12.1229, 0.83 ) }
    dend_3 { pt3dadd( 16.4457, -30.2119, -13.1747, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 22/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 11.2381, -0.639103, 2.48563, 1.11 ) }
    dend_2 { pt3dadd( 15.5434, -4.25543, 5.03725, 1.11 ) }
    dend_2 { pt3dadd( 18.1904, -6.32796, 6.7721, 1.11 ) }
    dend_2 { pt3dadd( 22.5697, -9.47202, 9.65562, 1.11 ) }
    dend_2 { pt3dadd( 28.8305, -13.3331, 13.3229, 1.11 ) }
    dend_2 { pt3dadd( 35.1946, -16.714, 16.5285, 1.11 ) }
    dend_2 { pt3dadd( 40.3095, -19.2522, 18.7774, 0.83 ) }
    dend_2 { pt3dadd( 44.2313, -21.3939, 20.5027, 0.83 ) }
    dend_2 { pt3dadd( 46.1824, -22.3784, 21.2206, 0.83 ) }
    dend_2 { pt3dadd( 51.1477, -24.2559, 22.253, 1.39 ) }
    dend_2 { pt3dadd( 54.3489, -24.9538, 22.3447, 0.83 ) }
    dend_2 { pt3dadd( 56.907, -25.2369, 22.253, 0.83 ) }
    dend_2 { pt3dadd( 61.012, -25.8224, 21.8923, 0.83 ) }
    dend_2 { pt3dadd( 64.7132, -26.7999, 21.467, 0.83 ) }
    dend_2 { pt3dadd( 67.7585, -27.803, 21.2275, 0.83 ) }
    dend_2 { pt3dadd( 70.4185, -28.8317, 21.1316, 1.11 ) }
    dend_2 { pt3dadd( 72.887, -29.9145, 21.1249, 0.83 ) }
    dend_2 { pt3dadd( 79.8049, -33.0507, 21.1557, 0.83 ) }
    dend_2 { pt3dadd( 83.2406, -34.7706, 21.141, 0.83 ) }
    dend_2 { pt3dadd( 88.0774, -37.4838, 21.0978, 1.11 ) }
    dend_2 { pt3dadd( 89.4162, -38.3422, 21.0562, 0.83 ) }
    dend_2 { pt3dadd( 91.8028, -39.9059, 20.9316, 0.83 ) }
    dend_2 { pt3dadd( 93.4485, -40.9051, 20.887, 0.83 ) }
    dend_2 { pt3dadd( 96.1781, -42.1427, 20.7904, 1.11 ) }
    dend_2 { pt3dadd( 98.083, -42.6827, 20.6604, 0.55 ) }
    dend_2 { pt3dadd( 99.5516, -42.879, 20.4272, 0.55 ) }
    dend_2 { pt3dadd( 102.133, -42.9043, 20.1709, 0.83 ) }
    dend_2 { pt3dadd( 105.629, -42.6052, 19.9846, 0.83 ) }
    dend_2 { pt3dadd( 108.735, -42.2558, 19.8602, 0.83 ) }
    dend_2 { pt3dadd( 111.757, -41.8449, 19.7464, 0.83 ) }
    dend_2 { pt3dadd( 115.827, -41.2215, 19.6066, 1.11 ) }
    dend_2 { pt3dadd( 119.123, -40.7007, 19.576, 0.83 ) }
    dend_2 { pt3dadd( 120.705, -40.5269, 19.58, 0.83 ) }
    dend_2 { pt3dadd( 123.211, -40.3643, 19.6517, 0.83 ) }
    dend_2 { pt3dadd( 125.294, -40.4861, 19.7173, 0.83 ) }
    dend_2 { pt3dadd( 127.841, -40.9538, 19.6258, 0.83 ) }
    dend_2 { pt3dadd( 130.644, -41.5165, 19.3001, 1.11 ) }
    dend_2 { pt3dadd( 132.476, -41.8905, 18.9361, 1.11 ) }
    dend_2 { pt3dadd( 135.048, -42.4979, 18.3655, 0.83 ) }
    dend_2 { pt3dadd( 137.882, -43.083, 17.4566, 0.55 ) }
    dend_2 { pt3dadd( 140.26, -43.5572, 16.5056, 1.11 ) }
    dend_2 { pt3dadd( 143.302, -44.1335, 15.0935, 0.83 ) }
    dend_2 { pt3dadd( 145.42, -44.4846, 14.013, 0.28 ) }
    dend_2 { pt3dadd( 150.525, -44.9289, 10.8285, 0.83 ) }
    dend_2 { pt3dadd( 154.952, -45.0181, 7.61017, 0.83 ) }
    dend_2 { pt3dadd( 156.341, -44.898, 6.46538, 0.28 ) }
    dend_2 { pt3dadd( 157.414, -44.7735, 5.51741, 0.28 ) }
    dend_2 { pt3dadd( 158.909, -44.5926, 4.18999, 0.83 ) }
    dend_2 { pt3dadd( 163.226, -43.9365, 0.369596, 0.28 ) }
    dend_2 { pt3dadd( 164.305, -43.7777, -0.595349, 0.83 ) }
    dend_2 { pt3dadd( 166.837, -43.828, -2.53681, 1.11 ) }
    dend_2 { pt3dadd( 168.834, -43.9234, -4.15669, 0.28 ) }
    dend_2 { pt3dadd( 170.356, -44.0344, -5.32633, 0.28 ) }
    dend_2 { pt3dadd( 171.534, -44.1368, -6.17875, 0.28 ) }
    dend_2 { pt3dadd( 172.21, -44.2488, -6.58238, 0.55 ) }
    dend_2 { pt3dadd( 173.4, -44.4969, -7.31941, 0.28 ) }
    dend_2 { pt3dadd( 178.349, -45.7608, -10.4615, 0.55 ) }
    dend_2 { pt3dadd( 180.053, -46.1656, -11.5409, 0.28 ) }
    dend_2 { pt3dadd( 180.709, -46.3575, -11.9469, 0.55 ) }
    dend_2 { pt3dadd( 182.578, -47.0076, -13.033, 0.28 ) }
    dend_2 { pt3dadd( 183.655, -47.4361, -13.595, 0.83 ) }
    dend_2 { pt3dadd( 185.403, -48.2431, -14.3603, 0.28 ) }
    dend_2 { pt3dadd( 187.835, -49.4976, -15.093, 0.28 ) }
    dend_2 { pt3dadd( 189.74, -50.2647, -15.7256, 0.28 ) }
    dend_2 { pt3dadd( 191.073, -50.7212, -16.1841, 0.83 ) }
    dend_2 { pt3dadd( 192.394, -51.1067, -16.6386, 0.55 ) }
    dend_2 { pt3dadd( 194.608, -51.6505, -17.3714, 1.94 ) }
    dend_2 { pt3dadd( 199.326, -52.4754, -19.0763, 1.11 ) }
    dend_2 { pt3dadd( 203.549, -52.8805, -20.7228, 0.55 ) }
    dend_2 { pt3dadd( 204.621, -52.8926, -21.1262, 0.55 ) }
    dend_2 { pt3dadd( 206.364, -52.7615, -21.9202, 0.28 ) }
    dend_2 { pt3dadd( 207.613, -52.6044, -22.5941, 0.83 ) }
    dend_2 { pt3dadd( 210.881, -52.1148, -24.5965, 0.28 ) }
    dend_2 { pt3dadd( 211.939, -51.9751, -25.3069, 0.83 ) }
    dend_2 { pt3dadd( 215.27, -51.7139, -27.4801, 0.28 ) }
    dend_2 { pt3dadd( 219.181, -51.7597, -30.5075, 0.83 ) }
    dend_2 { pt3dadd( 220.008, -51.8667, -31.245, 0.83 ) }
    dend_2 { pt3dadd( 222.299, -52.5663, -33.4813, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_2 { pt3dadd( 223.93, -53.3848, -35.0166, 0.28 ) }
    dend_2 { pt3dadd( 224.187, -53.5545, -35.2537, 0.83 ) }
    dend_2 { pt3dadd( 228.043, -56.8599, -38.4535, 0.28 ) }
    dend_2 { pt3dadd( 228.556, -57.357, -38.7544, 0.55 ) }
    dend_2 { pt3dadd( 229.964, -58.7929, -39.4731, 0.28 ) }
    dend_2 { pt3dadd( 231.601, -60.6503, -40.1197, 1.11 ) }
    dend_2 { pt3dadd( 232.878, -62.1468, -40.3996, 0.28 ) }
    dend_2 { pt3dadd( 234.408, -63.9406, -40.5912, 0.55 ) }
    dend_2 { pt3dadd( 235.365, -65.0332, -40.5852, 0.28 ) }
    dend_2 { pt3dadd( 235.711, -65.3978, -40.6104, 0.55 ) }
    dend_2 { pt3dadd( 238.053, -67.725, -40.9819, 0.28 ) }
    dend_2 { pt3dadd( 239.324, -68.9827, -41.3369, 0.83 ) }
    dend_2 { pt3dadd( 241.584, -71.1851, -42.1165, 0.28 ) }
    dend_2 { pt3dadd( 242.383, -71.8924, -42.424, 0.55 ) }
    dend_2 { pt3dadd( 243.716, -72.954, -42.8736, 0.28 ) }
    dend_2 { pt3dadd( 244.522, -73.5098, -43.1037, 0.83 ) }
    dend_2 { pt3dadd( 246.066, -74.2611, -43.656, 0.83 ) }
    dend_2 { pt3dadd( 248.435, -75.0757, -44.6393, 0.28 ) }
    dend_2 { pt3dadd( 249.679, -75.1935, -45.345, 0.55 ) }
    dend_2 { pt3dadd( 251.12, -75.13, -46.272, 0.28 ) }
    dend_2 { pt3dadd( 252.604, -74.8725, -47.2818, 0.83 ) }
    dend_2 { pt3dadd( 257.33, -73.7533, -50.6377, 0.28 ) }
    dend_2 { pt3dadd( 258.209, -73.4764, -51.2918, 1.11 ) }
    dend_2 { pt3dadd( 262.933, -71.6265, -55.0643, 0.55 ) }
    dend_2 { pt3dadd( 264.533, -70.9422, -56.46, 0.28 ) }
    dend_2 { pt3dadd( 266.212, -70.1271, -58.0557, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 26/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 21.9281, 30.1414, -0.843535, 0.635051 ) }
    axon_1 { pt3dadd( 30.4989, 42.4516, -0.843535, 0.635051 ) }
    axon_1 { pt3dadd( 39.0697, 54.7618, -0.843535, 0.635051 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 29/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -3.70553, 14.1694, -54.8455, 0.55 ) }
    dend_34 { pt3dadd( -5.92854, 11.7237, -59.929, 0.55 ) }
    dend_34 { pt3dadd( -6.48132, 11.1257, -61.0359, 0.83 ) }
    dend_34 { pt3dadd( -7.25907, 10.3416, -62.4995, 0.55 ) }
    dend_34 { pt3dadd( -7.59436, 9.99183, -63.0615, 0.28 ) }
    dend_34 { pt3dadd( -8.10022, 9.47054, -64.1929, 0.83 ) }
    dend_34 { pt3dadd( -8.37753, 9.18093, -64.8329, 0.28 ) }
    dend_34 { pt3dadd( -8.55516, 9.01712, -65.2307, 0.83 ) }
    dend_34 { pt3dadd( -9.69606, 8.1776, -67.9319, 0.28 ) }
    dend_34 { pt3dadd( -10.273, 7.927, -69.5042, 0.83 ) }
    dend_34 { pt3dadd( -12.5135, 7.17193, -75.8727, 0.28 ) }
    dend_34 { pt3dadd( -13.0089, 7.01753, -77.2937, 0.83 ) }
    dend_34 { pt3dadd( -13.6763, 6.8205, -79.1454, 0.28 ) }
    dend_34 { pt3dadd( -14.4573, 6.60949, -81.1977, 1.94 ) }
    dend_34 { pt3dadd( -16.8402, 6.07636, -86.9855, 1.94 ) }
    dend_34 { pt3dadd( -17.747, 5.87443, -88.9997, 0.28 ) }
    dend_34 { pt3dadd( -18.3423, 5.67611, -90.062, 0.83 ) }
    dend_34 { pt3dadd( -19.4434, 5.19629, -91.9946, 0.28 ) }
    dend_34 { pt3dadd( -19.8123, 4.9761, -92.6166, 0.28 ) }
    dend_34 { pt3dadd( -20.4559, 4.50738, -93.6293, 0.55 ) }
    dend_34 { pt3dadd( -21.234, 3.8841, -94.7592, 0.55 ) }
    dend_34 { pt3dadd( -22.6093, 2.79817, -96.9206, 0.28 ) }
    dend_34 { pt3dadd( -23.782, 1.92384, -98.7683, 1.11 ) }
    dend_34 { pt3dadd( -25.0521, 0.956415, -100.746, 0.28 ) }
    dend_34 { pt3dadd( -25.3475, 0.732995, -101.25, 0.83 ) }
    dend_34 { pt3dadd( -26.3371, 0.0291771, -102.926, 0.28 ) }
    dend_34 { pt3dadd( -26.7502, -0.230692, -103.617, 1.66 ) }
    dend_34 { pt3dadd( -27.3117, -0.553043, -104.452, 0.83 ) }
    dend_34 { pt3dadd( -27.7443, -0.800464, -105.009, 0.83 ) }
    dend_34 { pt3dadd( -30.3889, -2.43795, -107.946, 0.28 ) }
    dend_34 { pt3dadd( -31.1087, -2.92034, -108.707, 0.28 ) }
    dend_34 { pt3dadd( -31.9484, -3.52389, -109.488, 0.83 ) }
    dend_34 { pt3dadd( -32.7872, -4.16509, -110.227, 0.28 ) }
    dend_34 { pt3dadd( -33.1742, -4.47867, -110.584, 1.11 ) }
    dend_34 { pt3dadd( -34.22, -5.29795, -111.461, 0.28 ) }
    dend_34 { pt3dadd( -34.5428, -5.52253, -111.713, 0.83 ) }
    dend_34 { pt3dadd( -35.6056, -6.11358, -112.594, 0.28 ) }
    dend_34 { pt3dadd( -36.0777, -6.31839, -112.955, 1.11 ) }
    dend_34 { pt3dadd( -38.7291, -7.21567, -114.84, 0.28 ) }
    dend_34 { pt3dadd( -39.5123, -7.41123, -115.342, 1.39 ) }
    dend_34 { pt3dadd( -41.9889, -7.83131, -117.028, 0.28 ) }
    dend_34 { pt3dadd( -43.2791, -7.99169, -117.969, 0.55 ) }
    dend_34 { pt3dadd( -44.4905, -8.12099, -118.789, 0.28 ) }
    dend_34 { pt3dadd( -45.3767, -8.24311, -119.412, 0.55 ) }
    dend_34 { pt3dadd( -46.1437, -8.387, -119.929, 0.28 ) }
    dend_34 { pt3dadd( -48.6927, -9.07679, -121.89, 1.11 ) }
    dend_34 { pt3dadd( -50.5424, -9.73135, -123.417, 0.28 ) }
    dend_34 { pt3dadd( -52.3111, -10.4601, -125.103, 1.11 ) }
    dend_34 { pt3dadd( -54.7912, -11.5804, -127.644, 0.28 ) }
    dend_34 { pt3dadd( -55.4104, -11.8712, -128.301, 0.83 ) }
    dend_34 { pt3dadd( -57.2867, -12.7338, -130.273, 0.28 ) }
    dend_34 { pt3dadd( -57.6911, -12.9114, -130.692, 0.83 ) }
    dend_34 { pt3dadd( -58.7908, -13.3442, -131.927, 0.28 ) }
    dend_34 { pt3dadd( -59.0738, -13.432, -132.285, 0.55 ) }
    dend_34 { pt3dadd( -59.9623, -13.6465, -133.365, 0.28 ) }
    dend_34 { pt3dadd( -60.8643, -13.8763, -134.52, 1.39 ) }
    dend_34 { pt3dadd( -62.1658, -14.2367, -136.23, 0.28 ) }
    dend_34 { pt3dadd( -62.4315, -14.3295, -136.574, 0.28 ) }
    dend_34 { pt3dadd( -63.276, -14.6698, -137.541, 0.55 ) }
    dend_34 { pt3dadd( -63.802, -14.9464, -138.084, 0.55 ) }
    dend_34 { pt3dadd( -64.8425, -15.6857, -139.047, 0.28 ) }
    dend_34 { pt3dadd( -64.9771, -15.7942, -139.154, 0.55 ) }
    dend_34 { pt3dadd( -65.2998, -16.0274, -139.398, 0.28 ) }
    dend_34 { pt3dadd( -65.9558, -16.4478, -139.911, 0.55 ) }
    dend_34 { pt3dadd( -66.5892, -16.818, -140.405, 0.55 ) }
    dend_34 { pt3dadd( -68.2733, -17.6599, -141.812, 0.28 ) }
    dend_34 { pt3dadd( -68.8378, -17.8762, -142.327, 0.55 ) }
    dend_34 { pt3dadd( -70.2067, -18.3466, -143.581, 0.28 ) }
    dend_34 { pt3dadd( -70.5718, -18.4432, -143.911, 0.55 ) }
    dend_34 { pt3dadd( -70.9288, -18.511, -144.215, 0.28 ) }
    dend_34 { pt3dadd( -71.3565, -18.5697, -144.527, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_34 { pt3dadd( -72.7882, -18.7795, -145.328, 0.28 ) }
    dend_34 { pt3dadd( -73.3609, -18.9452, -145.549, 0.55 ) }
    dend_34 { pt3dadd( -73.9034, -19.2564, -145.539, 0.28 ) }
    dend_34 { pt3dadd( -74.4997, -19.7339, -145.349, 0.55 ) }
    dend_34 { pt3dadd( -75.1656, -20.3308, -145.28, 0.28 ) }
    dend_34 { pt3dadd( -75.4045, -20.5655, -145.288, 0.83 ) }
    dend_34 { pt3dadd( -77.0944, -22.3016, -145.348, 0.28 ) }
    dend_34 { pt3dadd( -77.4197, -22.5763, -145.465, 0.28 ) }
    dend_34 { pt3dadd( -78.0572, -23.0564, -145.8, 1.11 ) }
    dend_34 { pt3dadd( -80.2997, -24.4869, -147.159, 0.28 ) }
    dend_34 { pt3dadd( -80.9261, -24.8191, -147.515, 0.55 ) }
    dend_34 { pt3dadd( -82.4625, -25.596, -148.319, 0.28 ) }
    dend_34 { pt3dadd( -84.4862, -26.525, -149.559, 0.55 ) }
    dend_34 { pt3dadd( -85.1331, -26.7976, -149.929, 0.55 ) }
    dend_34 { pt3dadd( -85.8694, -27.0816, -150.289, 0.28 ) }
    dend_34 { pt3dadd( -87.111, -27.5506, -150.548, 0.83 ) }
    dend_34 { pt3dadd( -88.3429, -28.0631, -150.772, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 17/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -3.70553, 14.1694, -54.8455, 0.55 ) }
    dend_33 { pt3dadd( -5.3573, 16.2915, -58.3246, 0.55 ) }
    dend_33 { pt3dadd( -5.62567, 16.593, -58.8083, 0.55 ) }
    dend_33 { pt3dadd( -6.95756, 18.0396, -61.1544, 0.28 ) }
    dend_33 { pt3dadd( -7.91824, 19.0249, -62.7658, 1.11 ) }
    dend_33 { pt3dadd( -9.65907, 20.7923, -65.573, 0.28 ) }
    dend_33 { pt3dadd( -11.3792, 22.5782, -68.2432, 0.83 ) }
    dend_33 { pt3dadd( -12.9584, 24.0315, -70.5709, 1.94 ) }
    dend_33 { pt3dadd( -14.7229, 25.6714, -72.9515, 0.28 ) }
    dend_33 { pt3dadd( -15.2154, 26.1335, -73.5263, 0.28 ) }
    dend_33 { pt3dadd( -16.3694, 27.1612, -74.7242, 0.55 ) }
    dend_33 { pt3dadd( -17.2937, 27.8915, -75.5459, 0.28 ) }
    dend_33 { pt3dadd( -17.8353, 28.2585, -75.955, 0.55 ) }
    dend_33 { pt3dadd( -19.941, 29.3946, -77.4264, 0.55 ) }
    dend_33 { pt3dadd( -21.0153, 29.8013, -78.0988, 0.55 ) }
    dend_33 { pt3dadd( -22.8418, 30.2503, -79.487, 0.55 ) }
    dend_33 { pt3dadd( -24.3027, 30.3545, -81.0969, 0.28 ) }
    dend_33 { pt3dadd( -25.046, 30.387, -82.2663, 0.55 ) }
    dend_33 { pt3dadd( -25.4271, 30.4146, -83.0208, 0.28 ) }
    dend_33 { pt3dadd( -25.8154, 30.4703, -83.9473, 0.83 ) }
    dend_33 { pt3dadd( -26.9963, 30.7715, -87.0021, 0.28 ) }
    dend_33 { pt3dadd( -28.7151, 31.3635, -91.481, 2.49 ) }
    dend_33 { pt3dadd( -30.8604, 32.2127, -97.101, 1.39 ) }
    dend_33 { pt3dadd( -32.9622, 33.0836, -102.575, 0.28 ) }
    dend_33 { pt3dadd( -34.781, 33.9579, -107.311, 1.66 ) }
    dend_33 { pt3dadd( -35.7118, 34.4474, -109.579, 1.66 ) }
    dend_33 { pt3dadd( -37.5187, 35.5105, -113.723, 0.55 ) }
    dend_33 { pt3dadd( -38.8824, 36.4024, -116.576, 0.28 ) }
    dend_33 { pt3dadd( -40.0155, 37.2449, -118.797, 1.66 ) }
    dend_33 { pt3dadd( -41.6145, 38.6734, -121.783, 0.55 ) }
    dend_33 { pt3dadd( -42.6292, 39.7413, -123.665, 0.55 ) }
    dend_33 { pt3dadd( -43.5661, 40.9367, -125.68, 0.55 ) }
    dend_33 { pt3dadd( -43.8313, 41.3518, -126.382, 0.55 ) }
    dend_33 { pt3dadd( -44.5187, 42.5623, -128.454, 1.94 ) }
    dend_33 { pt3dadd( -45.1403, 43.7281, -130.552, 0.55 ) }
    dend_33 { pt3dadd( -45.4711, 44.2714, -131.891, 1.39 ) }
    dend_33 { pt3dadd( -46.7146, 46.4236, -137.815, 0.55 ) }
    dend_33 { pt3dadd( -47.395, 47.3791, -140.952, 0.28 ) }
    dend_33 { pt3dadd( -47.4915, 47.4968, -141.384, 0.28 ) }
    dend_33 { pt3dadd( -48.1629, 48.1601, -144.063, 1.11 ) }
    dend_33 { pt3dadd( -50.7115, 50.1785, -153.541, 0.55 ) }
    dend_33 { pt3dadd( -51.6897, 50.836, -156.921, 1.66 ) }
    dend_33 { pt3dadd( -52.9681, 51.62, -160.932, 0.28 ) }
    dend_33 { pt3dadd( -53.1029, 51.6946, -161.308, 0.83 ) }
    dend_33 { pt3dadd( -53.7988, 52.0435, -163.041, 0.28 ) }
    dend_33 { pt3dadd( -55.7872, 52.7598, -167.328, 0.28 ) }
    dend_33 { pt3dadd( -56.0827, 52.8281, -167.832, 0.83 ) }
    dend_33 { pt3dadd( -57.2531, 53.0466, -169.814, 0.28 ) }
    dend_33 { pt3dadd( -58.0876, 53.2615, -171.251, 0.28 ) }
    dend_33 { pt3dadd( -59.9196, 53.8083, -174.57, 0.55 ) }
    dend_33 { pt3dadd( -61.8178, 54.4427, -178.136, 0.28 ) }
    dend_33 { pt3dadd( -62.2444, 54.5666, -178.859, 0.28 ) }
    dend_33 { pt3dadd( -63.9409, 54.9532, -181.638, 0.28 ) }
    dend_33 { pt3dadd( -64.2594, 54.9975, -182.144, 0.55 ) }
    dend_33 { pt3dadd( -66.1874, 55.1633, -184.827, 0.28 ) }
    dend_33 { pt3dadd( -67.5102, 55.1055, -186.229, 0.55 ) }
    dend_33 { pt3dadd( -69.3598, 54.875, -187.707, 0.28 ) }
    dend_33 { pt3dadd( -70.0219, 54.6876, -188.132, 0.55 ) }
    dend_33 { pt3dadd( -71.0207, 54.1419, -188.527, 0.28 ) }
    dend_33 { pt3dadd( -72.9615, 52.8469, -188.981, 0.55 ) }
    dend_33 { pt3dadd( -74.7905, 51.3831, -189.069, 0.28 ) }
    dend_33 { pt3dadd( -75.5155, 50.7347, -189.019, 0.28 ) }
    dend_33 { pt3dadd( -76.1429, 50.1305, -188.928, 0.55 ) }
    dend_33 { pt3dadd( -77.41, 48.8712, -188.737, 0.28 ) }
    dend_33 { pt3dadd( -78.1327, 48.1976, -188.621, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 82/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.424446, -6.61175, -67.6924, 0.55 ) }
    dend_29 { pt3dadd( 1.61716, -7.6611, -82.9737, 0.55 ) }
    dend_29 { pt3dadd( 2.56205, -8.18352, -87.6854, 0.55 ) }
    dend_29 { pt3dadd( 3.78559, -8.8728, -93.1049, 0.83 ) }
    dend_29 { pt3dadd( 4.11587, -9.03578, -94.4228, 0.28 ) }
    dend_29 { pt3dadd( 4.47245, -9.21042, -95.6962, 1.11 ) }
    dend_29 { pt3dadd( 6.99928, -10.2614, -103.786, 1.11 ) }
    dend_29 { pt3dadd( 10.2917, -11.7163, -112.172, 0.28 ) }
    dend_29 { pt3dadd( 10.4334, -11.7656, -112.592, 2.22 ) }
    dend_29 { pt3dadd( 12.27, -12.2776, -118.628, 0.55 ) }
    dend_29 { pt3dadd( 12.7379, -12.3734, -120.376, 0.83 ) }
    dend_29 { pt3dadd( 13.6886, -12.4561, -124.599, 0.28 ) }
    dend_29 { pt3dadd( 15.3376, -11.4351, -136.441, 0.28 ) }
    dend_29 { pt3dadd( 16.1046, -12.7116, -130.155, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 96/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.424446, -6.61175, -67.6924, 0.55 ) }
    dend_28 { pt3dadd( 2.51384, -3.27122, -76.3273, 0.55 ) }
    dend_28 { pt3dadd( 3.15613, -2.48059, -78.1603, 1.94 ) }
    dend_28 { pt3dadd( 3.80371, -1.62394, -80.0239, 1.39 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_28 { pt3dadd( 4.87669, 0.0629742, -83.4512, 0.55 ) }
    dend_28 { pt3dadd( 5.52766, 0.992045, -85.6417, 0.55 ) }
    dend_28 { pt3dadd( 6.92943, 2.73512, -89.8086, 0.55 ) }
    dend_28 { pt3dadd( 8.47285, 4.31814, -93.4834, 0.55 ) }
    dend_28 { pt3dadd( 9.60401, 5.49123, -96.3189, 1.39 ) }
    dend_28 { pt3dadd( 10.4113, 6.35654, -98.3345, 1.39 ) }
    dend_28 { pt3dadd( 12.6563, 8.55891, -103.477, 0.55 ) }
    dend_28 { pt3dadd( 14.2899, 9.79072, -106.844, 0.55 ) }
    dend_28 { pt3dadd( 15.0304, 10.2451, -108.234, 0.28 ) }
    dend_28 { pt3dadd( 16.0661, 10.7997, -110.056, 0.55 ) }
    dend_28 { pt3dadd( 17.8811, 11.6539, -113.234, 2.22 ) }
    dend_28 { pt3dadd( 20.0698, 12.5834, -117.176, 0.55 ) }
    dend_28 { pt3dadd( 21.5628, 13.2079, -120.126, 0.28 ) }
    dend_28 { pt3dadd( 23.009, 13.648, -123.339, 1.66 ) }
    dend_28 { pt3dadd( 25.1276, 14.0124, -128.591, 0.55 ) }
    dend_28 { pt3dadd( 26.0331, 13.9439, -131.09, 0.55 ) }
    dend_28 { pt3dadd( 26.5144, 13.6663, -132.924, 0.83 ) }
    dend_28 { pt3dadd( 27.2618, 12.9222, -136.337, 0.28 ) }
    dend_28 { pt3dadd( 27.5137, 12.6663, -137.526, 0.28 ) }
    dend_28 { pt3dadd( 28.5478, 11.6418, -142.85, 0.83 ) }
    dend_28 { pt3dadd( 29.4521, 10.9405, -147.879, 3.05 ) }
    dend_28 { pt3dadd( 31.5529, 10.0011, -159.108, 0.28 ) }
    dend_28 { pt3dadd( 31.8065, 9.95592, -160.407, 1.39 ) }
    dend_28 { pt3dadd( 32.8947, 9.99312, -166.337, 0.28 ) }
    dend_28 { pt3dadd( 33.6418, 10.2433, -170.603, 1.39 ) }
    dend_28 { pt3dadd( 34.8625, 11.2131, -177.844, 0.28 ) }
    dend_28 { pt3dadd( 35.0473, 11.5189, -179.042, 0.28 ) }
    dend_28 { pt3dadd( 35.1221, 11.763, -179.677, 0.55 ) }
    dend_28 { pt3dadd( 35.2199, 12.2752, -181.078, 0.28 ) }
    dend_28 { pt3dadd( 35.2314, 12.5855, -181.967, 0.55 ) }
    dend_28 { pt3dadd( 35.2601, 12.8607, -182.872, 0.28 ) }
    dend_28 { pt3dadd( 35.3197, 13.0411, -183.513, 1.39 ) }
    dend_28 { pt3dadd( 36.2807, 14.7909, -190.494, 0.28 ) }
    dend_28 { pt3dadd( 36.434, 14.9879, -191.362, 0.28 ) }
    dend_28 { pt3dadd( 36.8806, 15.3679, -193.189, 1.39 ) }
    dend_28 { pt3dadd( 38.611, 16.4535, -199.166, 0.55 ) }
    dend_28 { pt3dadd( 39.8598, 17.049, -203.008, 1.39 ) }
    dend_28 { pt3dadd( 41.3058, 17.6594, -207.14, 0.55 ) }
    dend_28 { pt3dadd( 44.0825, 18.8385, -214.738, 0.28 ) }
    dend_28 { pt3dadd( 45.1675, 19.2524, -217.69, 0.28 ) }
    dend_28 { pt3dadd( 46.5082, 19.689, -221.243, 1.66 ) }
    dend_28 { pt3dadd( 48.8117, 20.3822, -226.899, 0.28 ) }
    dend_28 { pt3dadd( 49.0527, 20.4655, -227.503, 1.11 ) }
    dend_28 { pt3dadd( 51.019, 21.4668, -233.228, 0.28 ) }
    dend_28 { pt3dadd( 51.1263, 21.5755, -233.644, 0.83 ) }
    dend_28 { pt3dadd( 51.2033, 21.7864, -234.285, 0.28 ) }
    dend_28 { pt3dadd( 51.1971, 22.0077, -234.909, 0.28 ) }
    dend_28 { pt3dadd( 51.1469, 22.1948, -235.44, 0.83 ) }
    dend_28 { pt3dadd( 50.3887, 24.4998, -242.259, 0.28 ) }
    dend_28 { pt3dadd( 50.1054, 25.1987, -244.405, 0.28 ) }
    dend_28 { pt3dadd( 49.5437, 26.5236, -248.685, 1.11 ) }
    dend_28 { pt3dadd( 48.5561, 28.7834, -256.405, 0.28 ) }
    dend_28 { pt3dadd( 48.4557, 28.9847, -257.142, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_14 (entry count 53/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -19.0849, -10.1177, -15.1791, 0.83 ) }
    dend_22 { pt3dadd( -19.7339, -11.8088, -13.9825, 0.83 ) }
    dend_22 { pt3dadd( -21.2779, -17.7721, -10.6699, 0.83 ) }
    dend_22 { pt3dadd( -21.6537, -20.0115, -9.64906, 0.83 ) }
    dend_22 { pt3dadd( -22.04, -24.0112, -8.09847, 0.83 ) }
    dend_22 { pt3dadd( -22.3622, -27.4682, -6.88295, 0.83 ) }
    dend_22 { pt3dadd( -23.0811, -32.6721, -5.20771, 0.83 ) }
    dend_22 { pt3dadd( -23.3929, -34.9279, -4.70111, 0.83 ) }
    dend_22 { pt3dadd( -23.9358, -39.1986, -4.18458, 0.83 ) }
    dend_22 { pt3dadd( -24.6619, -44.3909, -3.73441, 0.83 ) }
    dend_22 { pt3dadd( -25.1636, -47.4058, -3.64593, 0.83 ) }
    dend_22 { pt3dadd( -26.3072, -52.7639, -3.57605, 0.83 ) }
    dend_22 { pt3dadd( -27.1015, -55.7617, -3.6734, 0.83 ) }
    dend_22 { pt3dadd( -27.8104, -57.9141, -3.83955, 0.83 ) }
    dend_22 { pt3dadd( -28.6121, -59.8902, -4.15612, 0.83 ) }
    dend_22 { pt3dadd( -30.4286, -63.7589, -5.24224, 1.39 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 69/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -19.0849, -10.1177, -15.1791, 1.11 ) }
    dend_15 { pt3dadd( -25.5217, -7.69743, -8.4788, 1.11 ) }
    dend_15 { pt3dadd( -29.4126, -6.23444, -4.42858, 1.11 ) }
    dend_15 { pt3dadd( -31.1753, -5.57165, -2.59369, 1.11 ) }
    dend_15 { pt3dadd( -32.6112, -5.03175, -1.099, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 74/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -5.1068, -39.5556, -0.803732, 0.83 ) }
    dend_11 { pt3dadd( -6.70079, -42.6878, -1.50736, 0.83 ) }
    dend_11 { pt3dadd( -7.41364, -44.1349, -1.76131, 0.83 ) }
    dend_11 { pt3dadd( -8.29804, -46.2514, -1.97058, 0.83 ) }
    dend_11 { pt3dadd( -9.51878, -49.549, -2.01077, 0.83 ) }
    dend_11 { pt3dadd( -10.2438, -51.4351, -1.8628, 0.83 ) }
    dend_11 { pt3dadd( -11.3229, -54.18, -1.44356, 0.83 ) }
    dend_11 { pt3dadd( -12.4104, -57.1178, -0.559718, 0.83 ) }
    dend_11 { pt3dadd( -13.2305, -59.7913, 0.54982, 0.83 ) }
    dend_11 { pt3dadd( -13.8233, -61.996, 1.62795, 0.83 ) }
    dend_11 { pt3dadd( -14.6397, -65.4633, 3.45177, 0.83 ) }
    dend_11 { pt3dadd( -14.9345, -67.254, 4.41794, 0.83 ) }
    dend_11 { pt3dadd( -15.1458, -69.5176, 5.64697, 0.83 ) }
    dend_11 { pt3dadd( -15.3135, -72.5544, 7.25595, 0.83 ) }
    dend_11 { pt3dadd( -15.4189, -75.4273, 8.59654, 0.55 ) }
    dend_11 { pt3dadd( -15.3657, -78.2735, 9.79061, 0.55 ) }
    dend_11 { pt3dadd( -15.2173, -80.2894, 10.5456, 0.55 ) }
    dend_11 { pt3dadd( -15.1889, -81.5035, 10.928, 0.83 ) }
    dend_11 { pt3dadd( -15.3156, -83.3129, 11.5793, 0.55 ) }
    dend_11 { pt3dadd( -15.4523, -84.0466, 11.8883, 0.55 ) }
    dend_11 { pt3dadd( -16.1598, -87.0414, 13.3806, 0.55 ) }
    dend_11 { pt3dadd( -16.6121, -88.5112, 14.149, 0.55 ) }
    dend_11 { pt3dadd( -17.5991, -90.8951, 15.435, 0.55 ) }
    dend_11 { pt3dadd( -19.2041, -94.3848, 17.1986, 0.55 ) }
    dend_11 { pt3dadd( -20.1454, -96.3733, 18.2547, 0.55 ) }
    dend_11 { pt3dadd( -21.0747, -98.2337, 19.269, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_11 { pt3dadd( -21.3125, -98.6683, 19.5051, 0.55 ) }
    dend_11 { pt3dadd( -22.2726, -100.324, 20.4387, 0.55 ) }
    dend_11 { pt3dadd( -23.3259, -102.085, 21.4069, 0.83 ) }
    dend_11 { pt3dadd( -25.4194, -105.401, 22.7911, 0.28 ) }
    dend_11 { pt3dadd( -26.3188, -106.676, 23.3467, 0.28 ) }
    dend_11 { pt3dadd( -26.5416, -106.957, 23.475, 0.55 ) }
    dend_11 { pt3dadd( -27.3212, -107.97, 23.9183, 0.28 ) }
    dend_11 { pt3dadd( -27.6622, -108.45, 24.0941, 0.55 ) }
    dend_11 { pt3dadd( -28.5666, -109.427, 24.4622, 0.28 ) }
    dend_11 { pt3dadd( -29.035, -109.827, 24.3638, 0.28 ) }
    dend_11 { pt3dadd( -29.8329, -116.387, 26.2357, 0.28 ) }
    dend_11 { pt3dadd( -30.5376, -122.854, 28.4512, 0.28 ) }
    dend_11 { pt3dadd( -31.5474, -128.704, 31.966, 0.28 ) }
    dend_11 { pt3dadd( -31.9393, -134.632, 35.4645, 0.28 ) }
    dend_11 { pt3dadd( -32.9938, -140.406, 39.0968, 0.28 ) }
    dend_11 { pt3dadd( -33.9791, -146.827, 41.3474, 0.28 ) }
    dend_11 { pt3dadd( -35.8167, -152.825, 44.2067, 0.28 ) }
    dend_11 { pt3dadd( -38.3006, -158.597, 47.0702, 0.28 ) }
    dend_11 { pt3dadd( -39.5186, -164.351, 50.6855, 0.28 ) }
    dend_11 { pt3dadd( -40.1363, -169.678, 55.0576, 0.28 ) }
    dend_11 { pt3dadd( -41.3812, -174.083, 60.2919, 0.28 ) }
    dend_11 { pt3dadd( -41.1305, -178.978, 65.1976, 0.28 ) }
    dend_11 { pt3dadd( -40.2679, -183.394, 70.496, 0.28 ) }
    dend_11 { pt3dadd( -40.5183, -188.704, 74.9245, 0.28 ) }
    dend_11 { pt3dadd( -39.6768, -192.824, 80.4717, 0.28 ) }
    dend_11 { pt3dadd( -39.3958, -197.155, 85.9048, 0.28 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 26/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -5.1068, -39.5556, -0.803732, 0.55 ) }
    dend_10 { pt3dadd( -4.51723, -43.1469, -3.69062, 0.55 ) }
    dend_10 { pt3dadd( -4.27167, -44.9682, -5.11543, 0.55 ) }
    dend_10 { pt3dadd( -3.95942, -48.4435, -8.1645, 0.83 ) }
    dend_10 { pt3dadd( -3.62443, -53.02, -11.7531, 0.83 ) }
    dend_10 { pt3dadd( -3.5397, -56.478, -14.2575, 0.83 ) }
    dend_10 { pt3dadd( -3.55027, -59.8636, -16.5619, 0.83 ) }
    dend_10 { pt3dadd( -3.63695, -61.7763, -17.7344, 0.83 ) }
    dend_10 { pt3dadd( -3.91344, -67.3463, -20.983, 0.55 ) }
    dend_10 { pt3dadd( -4.09495, -72.5596, -24.1901, 0.83 ) }
    dend_10 { pt3dadd( -4.05435, -77.3718, -26.8383, 1.11 ) }
    dend_10 { pt3dadd( -3.90246, -79.8835, -28.0748, 0.55 ) }
    dend_10 { pt3dadd( -3.60658, -82.1415, -29.1184, 0.55 ) }
    dend_10 { pt3dadd( -3.05379, -84.9971, -30.4367, 0.83 ) }
    dend_10 { pt3dadd( -1.50046, -90.655, -32.9379, 0.55 ) }
    dend_10 { pt3dadd( -0.860135, -92.5547, -33.898, 0.28 ) }
    dend_10 { pt3dadd( 0.76444, -96.358, -35.9293, 0.55 ) }
    dend_10 { pt3dadd( 1.6103, -98.1944, -36.9549, 0.28 ) }
    dend_10 { pt3dadd( 2.13444, -99.3496, -37.6102, 0.55 ) }
    dend_10 { pt3dadd( 2.72081, -100.474, -38.2927, 0.28 ) }
    dend_10 { pt3dadd( 3.35726, -101.484, -38.7478, 0.55 ) }
    dend_10 { pt3dadd( 6.29561, -105.735, -40.7003, 0.28 ) }
    dend_10 { pt3dadd( 7.15963, -106.96, -41.305, 0.83 ) }
    dend_10 { pt3dadd( 9.03673, -109.205, -41.9367, 0.83 ) }
    dend_10 { pt3dadd( 10.5664, -110.983, -42.1044, 0.83 ) }
    dend_10 { pt3dadd( 13.6836, -114.9, -42.4001, 0.28 ) }
    dend_10 { pt3dadd( 14.0581, -115.429, -42.378, 0.83 ) }
    dend_10 { pt3dadd( 15.6751, -118.032, -42.04, 0.28 ) }
    dend_10 { pt3dadd( 18.4934, -123.242, -41.5385, 0.55 ) }
    dend_10 { pt3dadd( 19.1675, -124.706, -41.3466, 0.55 ) }
    dend_10 { pt3dadd( 20.8075, -129.523, -40.7225, 0.83 ) }
    dend_10 { pt3dadd( 21.8173, -133.692, -40.699, 0.55 ) }
    dend_10 { pt3dadd( 22.0745, -135.094, -40.7374, 0.55 ) }
    dend_10 { pt3dadd( 22.405, -137.96, -40.8784, 0.55 ) }
    dend_10 { pt3dadd( 22.5381, -140.747, -41.1698, 0.28 ) }
    dend_10 { pt3dadd( 22.7247, -143.256, -41.4597, 0.55 ) }
    dend_10 { pt3dadd( 23.3244, -149.574, -42.3745, 0.28 ) }
    dend_10 { pt3dadd( 23.5778, -151.726, -42.8739, 0.83 ) }
    dend_10 { pt3dadd( 23.8717, -153.665, -43.3912, 0.28 ) }
    dend_10 { pt3dadd( 24.1923, -155.16, -43.8562, 0.55 ) }
    dend_10 { pt3dadd( 25.2545, -158.15, -44.8603, 0.28 ) }
    dend_10 { pt3dadd( 25.9866, -159.455, -45.2564, 0.55 ) }
    dend_10 { pt3dadd( 26.9796, -160.717, -45.5457, 0.28 ) }
    dend_10 { pt3dadd( 27.6772, -161.431, -45.7502, 1.11 ) }
    dend_10 { pt3dadd( 29.5295, -163.092, -46.0803, 0.55 ) }
    dend_10 { pt3dadd( 32.6362, -165.624, -46.3991, 0.28 ) }
    dend_10 { pt3dadd( 34.5759, -167.126, -46.494, 0.28 ) }
    dend_10 { pt3dadd( 36.4885, -168.652, -46.511, 0.55 ) }
    dend_10 { pt3dadd( 40.4053, -171.839, -46.2648, 0.28 ) }
    dend_10 { pt3dadd( 43.7518, -174.688, -45.899, 0.55 ) }
    dend_10 { pt3dadd( 45.6211, -176.357, -45.6075, 0.55 ) }
    dend_10 { pt3dadd( 47.5107, -178.124, -45.2507, 0.28 ) }
    dend_10 { pt3dadd( 49.0737, -179.724, -44.8986, 0.28 ) }
    dend_10 { pt3dadd( 52.0512, -182.797, -44.1786, 0.83 ) }
    dend_10 { pt3dadd( 53.8606, -184.703, -43.7624, 0.28 ) }
    dend_10 { pt3dadd( 54.3595, -185.227, -43.7682, 0.55 ) }
    dend_10 { pt3dadd( 55.8258, -186.783, -43.9964, 0.28 ) }
    dend_10 { pt3dadd( 57.1267, -188.205, -44.6874, 0.28 ) }
    dend_10 { pt3dadd( 58.0343, -189.238, -45.507, 0.55 ) }
    dend_10 { pt3dadd( 59.0325, -190.548, -46.7654, 0.28 ) }
    dend_10 { pt3dadd( 61.057, -193.492, -49.5554, 0.83 ) }
    dend_10 { pt3dadd( 61.5466, -194.353, -50.3825, 0.83 ) }
    dend_10 { pt3dadd( 63.0384, -197.353, -53.1901, 0.28 ) }
    dend_10 { pt3dadd( 64.0306, -199.35, -55.0324, 0.28 ) }
    dend_10 { pt3dadd( 64.5012, -200.456, -56.0659, 0.28 ) }
    dend_10 { pt3dadd( 64.9757, -201.65, -57.1021, 0.83 ) }
    dend_10 { pt3dadd( 66.6651, -206.208, -60.742, 0.28 ) }
    dend_10 { pt3dadd( 67.1971, -207.657, -61.9446, 0.83 ) }
    dend_10 { pt3dadd( 67.7713, -209.242, -63.2752, 0.83 ) }
    dend_10 { pt3dadd( 68.7885, -212.308, -66.1155, 0.28 ) }
    dend_10 { pt3dadd( 69.5217, -214.512, -68.3148, 0.55 ) }
    dend_10 { pt3dadd( 70.7829, -218.397, -72.4121, 0.28 ) }
    dend_10 { pt3dadd( 70.89, -218.722, -72.7425, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 99/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 16.4457, -30.2119, -13.1747, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_5 { pt3dadd( 17.4105, -32.9778, -14.8656, 0.83 ) }
    dend_5 { pt3dadd( 18.5533, -35.7685, -16.628, 0.28 ) }
    dend_5 { pt3dadd( 18.6616, -35.9862, -16.7637, 0.83 ) }
    dend_5 { pt3dadd( 19.2611, -37.0779, -17.511, 0.28 ) }
    dend_5 { pt3dadd( 21.1679, -40.5016, -20.0739, 0.83 ) }
    dend_5 { pt3dadd( 22.2164, -42.4451, -21.5222, 0.55 ) }
    dend_5 { pt3dadd( 22.6965, -43.2858, -22.1683, 0.55 ) }
    dend_5 { pt3dadd( 23.3961, -44.4603, -23.0911, 0.83 ) }
    dend_5 { pt3dadd( 24.983, -46.9392, -24.8255, 0.83 ) }
    dend_5 { pt3dadd( 27.4577, -50.6031, -27.0033, 0.55 ) }
    dend_5 { pt3dadd( 28.5291, -52.2176, -27.6925, 0.55 ) }
    dend_5 { pt3dadd( 29.1609, -53.2448, -28.0402, 0.55 ) }
    dend_5 { pt3dadd( 30.1725, -54.8881, -28.4826, 0.28 ) }
    dend_5 { pt3dadd( 31.8395, -57.5803, -28.9409, 0.55 ) }
    dend_5 { pt3dadd( 32.9256, -59.231, -28.9895, 0.28 ) }
    dend_5 { pt3dadd( 34.291, -61.3483, -28.9359, 0.83 ) }
    dend_5 { pt3dadd( 35.0903, -62.6218, -28.8556, 0.28 ) }
    dend_5 { pt3dadd( 35.4894, -63.3215, -28.7948, 0.55 ) }
    dend_5 { pt3dadd( 36.2328, -64.7564, -28.69, 0.28 ) }
    dend_5 { pt3dadd( 36.3611, -65.001, -28.6758, 0.83 ) }
    dend_5 { pt3dadd( 38.3837, -68.3418, -28.6745, 0.28 ) }
    dend_5 { pt3dadd( 39.9926, -70.8248, -28.5957, 1.11 ) }
    dend_5 { pt3dadd( 40.9158, -72.2448, -28.5046, 1.66 ) }
    dend_5 { pt3dadd( 42.3438, -74.3961, -28.3128, 0.28 ) }
    dend_5 { pt3dadd( 42.9757, -75.3297, -28.2093, 0.55 ) }
    dend_5 { pt3dadd( 44.1368, -76.991, -27.9869, 0.28 ) }
    dend_5 { pt3dadd( 46.0142, -79.4799, -27.5963, 0.83 ) }
    dend_5 { pt3dadd( 47.982, -82.0797, -27.0533, 0.28 ) }
    dend_5 { pt3dadd( 48.4741, -82.6677, -26.8966, 0.83 ) }
    dend_5 { pt3dadd( 49.0085, -83.306, -26.698, 0.83 ) }
    dend_5 { pt3dadd( 50.1162, -84.6386, -26.2858, 0.28 ) }
    dend_5 { pt3dadd( 50.6873, -85.3246, -26.1287, 0.83 ) }
    dend_5 { pt3dadd( 53.5144, -88.5988, -25.5917, 0.83 ) }
    dend_5 { pt3dadd( 55.9068, -91.311, -25.1322, 0.28 ) }
    dend_5 { pt3dadd( 57.7561, -93.4202, -24.8038, 0.28 ) }
    dend_5 { pt3dadd( 58.1759, -93.896, -24.7404, 0.83 ) }
    dend_5 { pt3dadd( 60.3136, -96.4018, -24.5294, 0.28 ) }
    dend_5 { pt3dadd( 61.58, -98.0566, -24.5374, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 38/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 16.4457, -30.2119, -13.1747, 0.83 ) }
    dend_4 { pt3dadd( 23.106, -30.8993, -9.97467, 0.83 ) }
    dend_4 { pt3dadd( 26.4076, -31.3047, -9.03824, 0.55 ) }
    dend_4 { pt3dadd( 28.0695, -31.3444, -8.94617, 0.55 ) }
    dend_4 { pt3dadd( 30.0179, -31.3663, -9.04095, 0.55 ) }
    dend_4 { pt3dadd( 31.023, -31.3851, -9.13406, 0.55 ) }
    dend_4 { pt3dadd( 33.625, -31.4354, -9.4324, 0.28 ) }
    dend_4 { pt3dadd( 38.1004, -31.4061, -10.2916, 0.83 ) }
    dend_4 { pt3dadd( 44.169, -31.2348, -11.3072, 0.83 ) }
    dend_4 { pt3dadd( 46.4763, -31.1272, -11.6158, 0.55 ) }
    dend_4 { pt3dadd( 48.1296, -31.066, -11.7396, 0.28 ) }
    dend_4 { pt3dadd( 49.1535, -31.0173, -11.7724, 0.83 ) }
    dend_4 { pt3dadd( 53.1176, -30.6632, -11.6988, 0.55 ) }
    dend_4 { pt3dadd( 54.0336, -30.5397, -11.6116, 0.55 ) }
    dend_4 { pt3dadd( 57.3096, -29.9568, -11.0271, 0.55 ) }
    dend_4 { pt3dadd( 59.5799, -29.352, -10.666, 0.55 ) }
    dend_4 { pt3dadd( 61.1094, -28.8891, -10.365, 0.55 ) }
    dend_4 { pt3dadd( 63.672, -28.0892, -9.73048, 0.55 ) }
    dend_4 { pt3dadd( 65.6581, -27.4316, -9.49945, 0.28 ) }
    dend_4 { pt3dadd( 67.0052, -26.9889, -9.50544, 0.55 ) }
    dend_4 { pt3dadd( 68.0146, -26.7197, -9.4939, 0.55 ) }
    dend_4 { pt3dadd( 72.1991, -25.8062, -9.69004, 0.55 ) }
    dend_4 { pt3dadd( 75.0166, -25.352, -10.1466, 0.55 ) }
    dend_4 { pt3dadd( 80.2967, -24.9908, -11.2868, 0.55 ) }
    dend_4 { pt3dadd( 85.3125, -24.9669, -12.5995, 0.55 ) }
    dend_4 { pt3dadd( 90.2324, -25.1418, -14.0876, 0.55 ) }
    dend_4 { pt3dadd( 95.035, -25.4916, -15.5794, 0.83 ) }
    dend_4 { pt3dadd( 100.177, -26.1437, -17.3112, 0.55 ) }
    dend_4 { pt3dadd( 103.174, -26.7268, -18.1738, 0.55 ) }
    dend_4 { pt3dadd( 105.24, -27.2974, -18.5034, 0.28 ) }
    dend_4 { pt3dadd( 106.36, -27.698, -18.6335, 0.83 ) }
    dend_4 { pt3dadd( 109.715, -28.8965, -18.9867, 0.28 ) }
    dend_4 { pt3dadd( 111.319, -29.4416, -18.8722, 0.55 ) }
    dend_4 { pt3dadd( 113.877, -30.1099, -18.6369, 0.55 ) }
    dend_4 { pt3dadd( 115.09, -30.3028, -18.6802, 0.55 ) }
    dend_4 { pt3dadd( 117.392, -30.4755, -18.993, 0.28 ) }
    dend_4 { pt3dadd( 119.738, -30.4432, -19.5784, 0.55 ) }
    dend_4 { pt3dadd( 120.861, -30.2769, -19.9746, 0.55 ) }
    dend_4 { pt3dadd( 124.06, -29.4549, -21.1509, 0.28 ) }
    dend_4 { pt3dadd( 124.702, -29.1995, -21.4016, 0.55 ) }
    dend_4 { pt3dadd( 126.483, -28.24, -22.0998, 0.28 ) }
    dend_4 { pt3dadd( 128.4, -26.9745, -22.826, 0.55 ) }
    dend_4 { pt3dadd( 130.356, -25.4119, -23.4979, 0.28 ) }
    dend_4 { pt3dadd( 131.431, -24.4198, -23.7773, 0.55 ) }
    dend_4 { pt3dadd( 133.33, -22.5754, -24.0554, 0.28 ) }
    dend_4 { pt3dadd( 134.007, -21.9154, -24.1107, 0.55 ) }
    dend_4 { pt3dadd( 134.788, -21.2249, -24.1688, 0.28 ) }
    dend_4 { pt3dadd( 135.977, -20.3426, -24.2515, 0.55 ) }
    dend_4 { pt3dadd( 137.522, -19.3558, -24.3269, 0.28 ) }
    dend_4 { pt3dadd( 139.284, -18.3739, -24.388, 0.83 ) }
    dend_4 { pt3dadd( 141.863, -17.2146, -24.4418, 0.28 ) }
    dend_4 { pt3dadd( 144.497, -16.1506, -24.4951, 0.83 ) }
    dend_4 { pt3dadd( 147.075, -15.2262, -24.5654, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 91/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 16.1046, -12.7116, -130.155, 0.28 ) }
    dend_31 { pt3dadd( 14.5369, -11.6892, -136.696, 0.28 ) }
    dend_31 { pt3dadd( 14.4185, -11.5431, -138.318, 0.83 ) }
    dend_31 { pt3dadd( 15.2758, -12.3755, -142.355, 0.28 ) }
    dend_31 { pt3dadd( 15.4526, -12.8734, -143.543, 0.83 ) }
    dend_31 { pt3dadd( 15.6526, -13.5683, -144.821, 0.28 ) }
    dend_31 { pt3dadd( 15.7235, -13.9117, -145.51, 0.55 ) }
    dend_31 { pt3dadd( 15.9412, -15.7917, -149.131, 0.28 ) }
    dend_31 { pt3dadd( 16.0767, -17.4376, -152.479, 1.39 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_31 { pt3dadd( 16.1737, -19.7381, -157.284, 0.28 ) }
    dend_31 { pt3dadd( 16.1518, -20.4675, -158.929, 1.39 ) }
    dend_31 { pt3dadd( 15.9146, -23.8599, -167.081, 0.28 ) }
    dend_31 { pt3dadd( 15.902, -23.9645, -167.342, 0.55 ) }
    dend_31 { pt3dadd( 15.6874, -25.1578, -170.315, 0.28 ) }
    dend_31 { pt3dadd( 15.626, -25.5455, -171.303, 1.39 ) }
    dend_31 { pt3dadd( 15.2997, -28.5996, -179.336, 0.28 ) }
    dend_31 { pt3dadd( 15.2943, -28.6883, -179.564, 0.55 ) }
    dend_31 { pt3dadd( 15.3137, -29.9827, -182.387, 0.28 ) }
    dend_31 { pt3dadd( 15.33, -30.2208, -182.866, 0.28 ) }
    dend_31 { pt3dadd( 15.6956, -33.0539, -187.908, 0.28 ) }
    dend_31 { pt3dadd( 16.0078, -34.7509, -190.597, 2.22 ) }
    dend_31 { pt3dadd( 16.7906, -37.6788, -194.261, 0.55 ) }
    dend_31 { pt3dadd( 17.2437, -39.2264, -195.974, 0.28 ) }
    dend_31 { pt3dadd( 17.4384, -39.8217, -196.475, 0.55 ) }
    dend_31 { pt3dadd( 17.8722, -41.0387, -197.277, 0.28 ) }
    dend_31 { pt3dadd( 18.1275, -41.7004, -197.538, 0.28 ) }
    dend_31 { pt3dadd( 18.6168, -42.9828, -197.87, 0.28 ) }
    dend_31 { pt3dadd( 19.0359, -44.1642, -198.224, 1.11 ) }
    dend_31 { pt3dadd( 20.8283, -49.5638, -200.327, 0.28 ) }
    dend_31 { pt3dadd( 20.9848, -50.0705, -200.559, 0.55 ) }
    dend_31 { pt3dadd( 21.7788, -52.7768, -201.945, 0.28 ) }
    dend_31 { pt3dadd( 22.0493, -53.6134, -202.305, 1.11 ) }
    dend_31 { pt3dadd( 23.7572, -58.5979, -204.093, 0.28 ) }
    dend_31 { pt3dadd( 23.869, -58.8775, -204.175, 0.55 ) }
    dend_31 { pt3dadd( 24.7779, -60.8022, -204.486, 0.28 ) }
    dend_31 { pt3dadd( 25.0292, -61.3, -204.542, 0.83 ) }
    dend_31 { pt3dadd( 28.347, -67.0421, -204.524, 0.28 ) }
    dend_31 { pt3dadd( 28.7794, -67.7048, -204.431, 0.28 ) }
    dend_31 { pt3dadd( 30.6386, -70.1858, -203.42, 0.28 ) }
    dend_31 { pt3dadd( 31.1683, -70.8682, -203.113, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 31/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 16.1046, -12.7116, -130.155, 0.28 ) }
    dend_30 { pt3dadd( 17.8111, -13.787, -127.717, 0.28 ) }
    dend_30 { pt3dadd( 18.4224, -14.1722, -126.844, 1.11 ) }
    dend_30 { pt3dadd( 20.8592, -15.7077, -123.363, 0.28 ) }
    dend_30 { pt3dadd( 21.1773, -15.9081, -122.909, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 36/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -30.4286, -63.7589, -5.24224, 0.55 ) }
    dend_24 { pt3dadd( -31.5543, -64.0837, -6.57293, 0.55 ) }
    dend_24 { pt3dadd( -33.5928, -64.7254, -9.03742, 0.55 ) }
    dend_24 { pt3dadd( -36.7368, -65.8077, -12.7306, 1.11 ) }
    dend_24 { pt3dadd( -39.7595, -67.0002, -16.9829, 0.55 ) }
    dend_24 { pt3dadd( -40.5136, -67.3382, -18.1227, 0.55 ) }
    dend_24 { pt3dadd( -43.8802, -68.9776, -23.4769, 0.28 ) }
    dend_24 { pt3dadd( -44.4863, -69.3148, -24.5258, 0.55 ) }
    dend_24 { pt3dadd( -45.0706, -69.6914, -25.714, 0.55 ) }
    dend_24 { pt3dadd( -49.2027, -72.3765, -34.5229, 0.55 ) }
    dend_24 { pt3dadd( -49.6136, -72.7076, -35.5202, 0.28 ) }
    dend_24 { pt3dadd( -49.8277, -72.9027, -36.1173, 0.83 ) }
    dend_24 { pt3dadd( -50.5457, -73.4894, -38.1175, 0.55 ) }
    dend_24 { pt3dadd( -52.4698, -74.9383, -43.4615, 0.83 ) }
    dend_24 { pt3dadd( -54.6102, -76.4808, -49.2903, 0.55 ) }
    dend_24 { pt3dadd( -55.4932, -77.1082, -51.7029, 0.55 ) }
    dend_24 { pt3dadd( -56.0982, -77.5574, -53.4833, 1.11 ) }
    dend_24 { pt3dadd( -57.923, -79.0371, -59.2453, 1.11 ) }
    dend_24 { pt3dadd( -58.3625, -79.4068, -60.7022, 0.55 ) }
    dend_24 { pt3dadd( -58.9995, -79.954, -62.7625, 0.83 ) }
    dend_24 { pt3dadd( -60.6875, -81.648, -68.6815, 0.55 ) }
    dend_24 { pt3dadd( -61.9373, -82.755, -72.8116, 0.55 ) }
    dend_24 { pt3dadd( -63.0555, -83.8273, -76.7815, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 59/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -30.4286, -63.7589, -5.24224, 0.55 ) }
    dend_23 { pt3dadd( -30.5259, -67.7334, -5.05574, 0.55 ) }
    dend_23 { pt3dadd( -30.5014, -70.9986, -5.28542, 0.55 ) }
    dend_23 { pt3dadd( -30.4731, -74.8473, -5.65383, 0.83 ) }
    dend_23 { pt3dadd( -30.4549, -76.2107, -5.80609, 0.28 ) }
    dend_23 { pt3dadd( -30.2787, -80.5533, -6.22556, 0.83 ) }
    dend_23 { pt3dadd( -30.0801, -82.8788, -6.36154, 0.83 ) }
    dend_23 { pt3dadd( -29.1096, -88.2722, -6.58823, 0.83 ) }
    dend_23 { pt3dadd( -28.8354, -89.3526, -6.58073, 0.28 ) }
    dend_23 { pt3dadd( -28.4439, -90.6788, -6.42242, 0.83 ) }
    dend_23 { pt3dadd( -27.6755, -92.9067, -5.6674, 0.28 ) }
    dend_23 { pt3dadd( -26.6368, -95.2954, -3.56243, 0.83 ) }
    dend_23 { pt3dadd( -26.0352, -96.4991, -1.78041, 0.55 ) }
    dend_23 { pt3dadd( -25.9371, -96.6514, -1.44172, 0.55 ) }
    dend_23 { pt3dadd( -25.4102, -97.6387, 0.715976, 0.55 ) }
    dend_23 { pt3dadd( -25.0953, -98.8242, 3.14083, 0.28 ) }
    dend_23 { pt3dadd( -25.1129, -99.339, 3.99275, 0.28 ) }
    dend_23 { pt3dadd( -25.1058, -100.11, 4.96481, 0.28 ) }
    dend_23 { pt3dadd( -24.7449, -102.578, 7.44375, 0.55 ) }
    dend_23 { pt3dadd( -24.4986, -103.765, 8.49237, 0.28 ) }
    dend_23 { pt3dadd( -24.1152, -105.101, 9.57366, 0.55 ) }
    dend_23 { pt3dadd( -23.8762, -105.865, 10.1693, 0.55 ) }
    dend_23 { pt3dadd( -22.9014, -109.36, 12.8582, 0.28 ) }
    dend_23 { pt3dadd( -22.7619, -110.01, 13.346, 0.55 ) }
    dend_23 { pt3dadd( -22.2473, -113.007, 15.3916, 0.55 ) }
    dend_23 { pt3dadd( -21.5969, -116.317, 17.7339, 0.28 ) }
    dend_23 { pt3dadd( -21.3125, -117.713, 18.7383, 0.55 ) }
    dend_23 { pt3dadd( -21.0619, -119.421, 19.9707, 0.28 ) }
    dend_23 { pt3dadd( -21.0863, -120.546, 20.7461, 0.55 ) }
    dend_23 { pt3dadd( -21.1637, -121.723, 21.5127, 0.55 ) }
    dend_23 { pt3dadd( -18.3309, -130.247, 25.6579, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 90/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -32.6112, -5.03175, -1.099, 0.55 ) }
    dend_17 { pt3dadd( -35.5854, -4.49108, -3.73234, 0.55 ) }
    dend_17 { pt3dadd( -37.7923, -3.98694, -5.74073, 0.55 ) }
    dend_17 { pt3dadd( -41.7894, -3.18927, -9.15075, 0.55 ) }
    dend_17 { pt3dadd( -45.9389, -2.44745, -12.739, 0.55 ) }
    dend_17 { pt3dadd( -48.0504, -2.01252, -14.6108, 0.55 ) }
    dend_17 { pt3dadd( -50.841, -1.3382, -17.1425, 0.83 ) }
    dend_17 { pt3dadd( -53.8833, -0.563492, -19.9886, 0.55 ) }
    dend_17 { pt3dadd( -58.0265, 0.542795, -24.1767, 0.83 ) }
    dend_17 { pt3dadd( -61.0247, 1.56631, -27.486, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_17 { pt3dadd( -62.6788, 2.32322, -29.2814, 0.55 ) }
    dend_17 { pt3dadd( -63.7344, 2.93191, -30.4508, 0.55 ) }
    dend_17 { pt3dadd( -65.7611, 4.34968, -32.6415, 0.55 ) }
    dend_17 { pt3dadd( -67.4542, 5.94644, -34.7744, 0.55 ) }
    dend_17 { pt3dadd( -68.2864, 7.11866, -35.9998, 0.55 ) }
    dend_17 { pt3dadd( -69.2729, 8.65201, -37.3049, 0.55 ) }
    dend_17 { pt3dadd( -70.1989, 9.90623, -38.3687, 0.55 ) }
    dend_17 { pt3dadd( -71.5329, 11.6888, -39.6975, 1.66 ) }
    dend_17 { pt3dadd( -72.5088, 13.2238, -40.4644, 2.49 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 9/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -32.6112, -5.03175, -1.099, 0.83 ) }
    dend_16 { pt3dadd( -33.9403, -4.22707, -1.87211, 0.83 ) }
    dend_16 { pt3dadd( -35.9621, -3.00302, -3.04814, 0.83 ) }
    dend_16 { pt3dadd( -37.915, -1.82068, -4.1841, 0.55 ) }
    dend_16 { pt3dadd( -39.3147, -0.973279, -4.99826, 0.55 ) }
    dend_16 { pt3dadd( -43.3785, 1.48705, -7.36206, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 61.58, -98.0566, -24.5374, 0.28 ) }
    dend_7 { pt3dadd( 61.6488, -100.301, -26.9307, 0.28 ) }
    dend_7 { pt3dadd( 61.6332, -101.267, -27.9182, 0.55 ) }
    dend_7 { pt3dadd( 61.5555, -103.362, -29.8215, 0.28 ) }
    dend_7 { pt3dadd( 61.4757, -104.619, -30.8851, 0.83 ) }
    dend_7 { pt3dadd( 60.8753, -115.83, -40.8321, 0.28 ) }
    dend_7 { pt3dadd( 60.7806, -117.483, -42.3347, 1.39 ) }
    dend_7 { pt3dadd( 60.692, -118.783, -43.7588, 1.11 ) }
    dend_7 { pt3dadd( 60.5059, -120.846, -46.3258, 0.28 ) }
    dend_7 { pt3dadd( 60.351, -121.447, -47.1401, 0.83 ) }
    dend_7 { pt3dadd( 58.1609, -125.683, -53.254, 0.28 ) }
    dend_7 { pt3dadd( 57.7643, -125.964, -53.7088, 0.55 ) }
    dend_7 { pt3dadd( 54.214, -127.443, -57.1435, 0.28 ) }
    dend_7 { pt3dadd( 53.8375, -127.504, -57.4343, 0.83 ) }
    dend_7 { pt3dadd( 47.0636, -127.465, -61.5711, 0.28 ) }
    dend_7 { pt3dadd( 45.9756, -127.322, -62.0367, 0.55 ) }
    dend_7 { pt3dadd( 43.0524, -126.546, -62.7293, 0.28 ) }
    dend_7 { pt3dadd( 41.2703, -125.835, -63.1405, 1.11 ) }
    dend_7 { pt3dadd( 38.4014, -124.222, -63.7065, 0.28 ) }
    dend_7 { pt3dadd( 38.1369, -124.016, -63.7757, 0.55 ) }
    dend_7 { pt3dadd( 37.0492, -122.816, -64.1393, 0.28 ) }
    dend_7 { pt3dadd( 35.6674, -121.257, -64.5887, 1.39 ) }
    dend_7 { pt3dadd( 33.0807, -118.323, -65.7276, 0.28 ) }
    dend_7 { pt3dadd( 32.4254, -117.627, -66.1137, 1.11 ) }
    dend_7 { pt3dadd( 31.2534, -116.518, -66.8727, 0.28 ) }
    dend_7 { pt3dadd( 30.0647, -115.422, -67.6549, 1.66 ) }
    dend_7 { pt3dadd( 27.4396, -113.135, -69.4106, 0.28 ) }
    dend_7 { pt3dadd( 24.881, -110.986, -71.1605, 0.55 ) }
    dend_7 { pt3dadd( 19.428, -106.666, -74.8091, 0.28 ) }
    dend_7 { pt3dadd( 17.4661, -105.154, -76.2427, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 45/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 61.58, -98.0566, -24.5374, 0.28 ) }
    dend_6 { pt3dadd( 62.931, -99.4804, -24.4972, 0.28 ) }
    dend_6 { pt3dadd( 65.4925, -102.181, -24.3987, 0.28 ) }
    dend_6 { pt3dadd( 66.3967, -103.115, -24.3572, 1.11 ) }
    dend_6 { pt3dadd( 67.2588, -104.079, -24.3303, 1.11 ) }
    dend_6 { pt3dadd( 68.7474, -105.809, -24.296, 0.28 ) }
    dend_6 { pt3dadd( 69.0694, -106.196, -24.2886, 0.55 ) }
    dend_6 { pt3dadd( 70.8813, -108.577, -24.2371, 0.28 ) }
    dend_6 { pt3dadd( 71.1889, -109.063, -24.1638, 0.55 ) }
    dend_6 { pt3dadd( 72.9826, -112.685, -23.3639, 0.28 ) }
    dend_6 { pt3dadd( 73.0753, -112.911, -23.3042, 0.55 ) }
    dend_6 { pt3dadd( 73.6188, -114.466, -22.7928, 0.28 ) }
    dend_6 { pt3dadd( 73.8708, -115.302, -22.4694, 1.11 ) }
    dend_6 { pt3dadd( 75.5042, -121.601, -19.7398, 0.28 ) }
    dend_6 { pt3dadd( 76.0069, -123.641, -18.789, 0.55 ) }
    dend_6 { pt3dadd( 76.2095, -124.454, -18.3737, 0.28 ) }
    dend_6 { pt3dadd( 76.6957, -126.179, -17.4749, 0.83 ) }
    dend_6 { pt3dadd( 77.78, -129.52, -15.4757, 0.28 ) }
    dend_6 { pt3dadd( 78.2892, -130.823, -14.6088, 0.28 ) }
    dend_6 { pt3dadd( 78.5431, -131.233, -14.2985, 0.55 ) }
    dend_6 { pt3dadd( 79.213, -132.077, -13.5768, 0.28 ) }
    dend_6 { pt3dadd( 79.9676, -132.966, -12.9129, 0.55 ) }
    dend_6 { pt3dadd( 82.3314, -135.433, -10.9548, 0.28 ) }
    dend_6 { pt3dadd( 82.4985, -135.596, -10.8224, 0.55 ) }
    dend_6 { pt3dadd( 84.6158, -137.524, -9.44206, 0.28 ) }
    dend_6 { pt3dadd( 85.1634, -138.058, -9.16807, 0.83 ) }
    dend_6 { pt3dadd( 87.9688, -140.89, -7.78821, 0.28 ) }
    dend_6 { pt3dadd( 91.3245, -144.164, -6.34054, 0.83 ) }
    dend_6 { pt3dadd( 93.3557, -145.957, -5.62238, 0.55 ) }
    dend_6 { pt3dadd( 95.6685, -147.992, -4.72721, 0.28 ) }
    dend_6 { pt3dadd( 97.9443, -150.017, -3.69276, 0.28 ) }
    dend_6 { pt3dadd( 100.114, -151.864, -2.58366, 0.55 ) }
    dend_6 { pt3dadd( 101.882, -153.208, -1.54374, 0.28 ) }
    dend_6 { pt3dadd( 102.982, -153.981, -1.18062, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 79/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -72.5088, 13.2238, -40.4644, 0.55 ) }
    dend_21 { pt3dadd( -71.9339, 13.8142, -44.8361, 0.55 ) }
    dend_21 { pt3dadd( -71.8184, 13.909, -45.8406, 0.55 ) }
    dend_21 { pt3dadd( -71.3991, 14.2434, -50.2028, 1.94 ) }
    dend_21 { pt3dadd( -70.8468, 14.682, -57.5108, 0.55 ) }
    dend_21 { pt3dadd( -70.8225, 14.694, -58.0099, 0.83 ) }
    dend_21 { pt3dadd( -70.7741, 14.702, -59.985, 0.28 ) }
    dend_21 { pt3dadd( -70.7963, 14.5174, -64.6556, 1.66 ) }
    dend_21 { pt3dadd( -70.8246, 14.2605, -69.5101, 0.55 ) }
    dend_21 { pt3dadd( -70.8076, 14.1879, -70.5491, 0.83 ) }
    dend_21 { pt3dadd( -70.5878, 13.8576, -74.6974, 0.28 ) }
    dend_21 { pt3dadd( -70.3942, 13.7625, -76.47, 1.11 ) }
    dend_21 { pt3dadd( -68.965, 13.5031, -85.643, 0.28 ) }
    dend_21 { pt3dadd( -68.7062, 13.5276, -86.9566, 0.83 ) }
    dend_21 { pt3dadd( -67.9486, 13.6984, -90.2289, 0.55 ) }
    dend_21 { pt3dadd( -67.1939, 13.9703, -93.6672, 1.66 ) }
    dend_21 { pt3dadd( -66.217, 14.4553, -98.5917, 0.28 ) }
    dend_21 { pt3dadd( -66.1856, 14.4709, -98.8071, 0.55 ) }
    dend_21 { pt3dadd( -65.8253, 14.6703, -103.016, 0.28 ) }
    dend_21 { pt3dadd( -65.6682, 14.655, -107.593, 1.94 ) }
    dend_21 { pt3dadd( -65.7638, 14.468, -113.731, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( -65.9927, 14.2641, -117.175, 0.83 ) }
    dend_21 { pt3dadd( -66.8075, 13.5704, -124.661, 0.28 ) }
    dend_21 { pt3dadd( -66.9752, 13.4408, -125.866, 0.83 ) }
    dend_21 { pt3dadd( -67.8836, 12.7536, -131.135, 0.28 ) }
    dend_21 { pt3dadd( -68.022, 12.67, -131.78, 0.55 ) }
    dend_21 { pt3dadd( -68.5465, 12.4323, -133.856, 0.28 ) }
    dend_21 { pt3dadd( -68.6947, 12.4006, -134.34, 0.83 ) }
    dend_21 { pt3dadd( -70.3666, 12.4377, -138.717, 0.28 ) }
    dend_21 { pt3dadd( -71.6295, 12.5985, -141.59, 0.83 ) }
    dend_21 { pt3dadd( -72.4424, 12.7558, -143.173, 0.28 ) }
    dend_21 { pt3dadd( -72.5894, 12.7812, -143.469, 0.55 ) }
    dend_21 { pt3dadd( -74.098, 13.0146, -146.63, 0.28 ) }
    dend_21 { pt3dadd( -74.6136, 13.101, -147.624, 0.55 ) }
    dend_21 { pt3dadd( -76.9345, 13.448, -151.037, 0.28 ) }
    dend_21 { pt3dadd( -77.518, 13.5174, -151.763, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 15/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -72.5088, 13.2238, -40.4644, 0.28 ) }
    dend_18 { pt3dadd( -75.1312, 14.9652, -41.5892, 0.28 ) }
    dend_18 { pt3dadd( -78.0608, 16.7867, -43.1073, 0.55 ) }
    dend_18 { pt3dadd( -81.3502, 18.7085, -44.913, 0.55 ) }
    dend_18 { pt3dadd( -82.7565, 19.5361, -45.5618, 0.55 ) }
    dend_18 { pt3dadd( -84.1938, 20.4525, -46.0885, 0.28 ) }
    dend_18 { pt3dadd( -85.8678, 21.5464, -46.7145, 0.55 ) }
    dend_18 { pt3dadd( -88.5295, 23.2182, -47.8152, 0.28 ) }
    dend_18 { pt3dadd( -90.1916, 24.1257, -48.7723, 0.55 ) }
    dend_18 { pt3dadd( -93.2549, 24.8734, -51.5922, 0.28 ) }
    dend_18 { pt3dadd( -95.2124, 25.0305, -54.0631, 0.28 ) }
    dend_18 { pt3dadd( -97.4862, 24.9287, -57.6459, 0.55 ) }
    dend_18 { pt3dadd( -98.9427, 24.6447, -60.3699, 0.55 ) }
    dend_18 { pt3dadd( -100.756, 23.9374, -64.3608, 1.94 ) }
    dend_18 { pt3dadd( -102.496, 22.9257, -68.8568, 0.28 ) }
    dend_18 { pt3dadd( -103.052, 22.5089, -70.4609, 0.28 ) }
    dend_18 { pt3dadd( -103.327, 22.2626, -71.2709, 1.39 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 32/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -103.327, 22.2626, -71.2709, 0.28 ) }
    dend_20 { pt3dadd( -105.089, 21.5747, -73.9411, 0.28 ) }
    dend_20 { pt3dadd( -105.563, 21.4149, -74.6049, 0.83 ) }
    dend_20 { pt3dadd( -106.413, 21.1531, -75.7214, 0.28 ) }
    dend_20 { pt3dadd( -108.587, 20.533, -78.4565, 0.83 ) }
    dend_20 { pt3dadd( -114.799, 19.157, -85.1979, 0.28 ) }
    dend_20 { pt3dadd( -116.337, 18.894, -86.6228, 1.39 ) }
    dend_20 { pt3dadd( -118.264, 18.5525, -88.5296, 0.28 ) }
    dend_20 { pt3dadd( -119.083, 18.4198, -89.3323, 0.55 ) }
    dend_20 { pt3dadd( -119.469, 18.3645, -89.6809, 0.55 ) }
    dend_20 { pt3dadd( -125.776, 18.319, -92.4524, 0.28 ) }
    dend_20 { pt3dadd( -127.206, 18.7661, -91.784, 1.39 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 44/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -103.327, 22.2626, -71.2709, 0.28 ) }
    dend_19 { pt3dadd( -105.96, 21.9643, -76.2947, 0.28 ) }
    dend_19 { pt3dadd( -106.491, 21.778, -77.289, 0.83 ) }
    dend_19 { pt3dadd( -108.524, 20.8111, -80.9674, 0.28 ) }
    dend_19 { pt3dadd( -108.843, 20.591, -81.5112, 0.83 ) }
    dend_19 { pt3dadd( -111.002, 18.9661, -84.7846, 0.28 ) }
    dend_19 { pt3dadd( -111.959, 18.213, -86.11, 0.55 ) }
    dend_19 { pt3dadd( -114.134, 16.0446, -88.6934, 0.28 ) }
    dend_19 { pt3dadd( -114.484, 15.6595, -89.073, 0.55 ) }
    dend_19 { pt3dadd( -116.738, 12.9151, -91.1016, 0.28 ) }
    dend_19 { pt3dadd( -117.907, 11.5274, -92.0749, 0.83 ) }
    dend_19 { pt3dadd( -118.408, 10.9707, -92.4312, 0.83 ) }
    dend_19 { pt3dadd( -119.315, 10.118, -93.162, 0.83 ) }
    dend_19 { pt3dadd( -122.386, 7.80479, -95.6812, 0.28 ) }
    dend_19 { pt3dadd( -123.405, 7.16529, -96.6987, 0.28 ) }
    dend_19 { pt3dadd( -126.245, 5.63913, -100.297, 0.28 ) }
    dend_19 { pt3dadd( -127.022, 5.24799, -101.506, 1.11 ) }
    dend_19 { pt3dadd( -129.568, 4.1534, -105.833, 0.28 ) }
    dend_19 { pt3dadd( -130.015, 3.99565, -106.634, 0.83 ) }
    dend_19 { pt3dadd( -132.028, 3.46669, -110.583, 0.28 ) }
    dend_19 { pt3dadd( -133.387, 3.17661, -113.623, 0.83 ) }
    dend_19 { pt3dadd( -134.61, 2.92485, -117.126, 0.28 ) }
    dend_19 { pt3dadd( -134.872, 2.85085, -118.015, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_13, dend_8, dend_1, dend_0, dend_32, dend_27, dend_25, dend_14, dend_12, dend_9, dend_3, dend_2, dend_34, dend_33, dend_29, dend_28, dend_22, dend_15, dend_11, dend_10, dend_5, dend_4, dend_31, dend_30, dend_24, dend_23, dend_17, dend_16, dend_7, dend_6, dend_21, dend_18, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_13, dend_8, dend_1, dend_0, dend_32, dend_27, dend_25, dend_14, dend_12, dend_9, dend_3, dend_2, dend_34, dend_33, dend_29, dend_28, dend_22, dend_15, dend_11, dend_10, dend_5, dend_4, dend_31, dend_30, dend_24, dend_23, dend_17, dend_16, dend_7, dend_6, dend_21, dend_18, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_27 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_25 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_12 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_34 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_33 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_29 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_28 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_22 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_11 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_5 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_4 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_31 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_24 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_23 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_17 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_7 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_6 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_21 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_18 OneSecGrp_SectionRef_36.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_19 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_13 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_14 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_8 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_9 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_15 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_3 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_16 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_30 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_20 OneSecGrp_SectionRef_37.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 9
    dend_32 nseg = 3
    dend_27 nseg = 3
    dend_25 nseg = 15
    dend_12 nseg = 3
    dend_2 nseg = 15
    dend_34 nseg = 7
    dend_33 nseg = 9
    dend_29 nseg = 3
    dend_28 nseg = 11
    dend_22 nseg = 3
    dend_11 nseg = 9
    dend_10 nseg = 11
    dend_5 nseg = 5
    dend_4 nseg = 7
    dend_31 nseg = 5
    dend_24 nseg = 5
    dend_23 nseg = 5
    dend_17 nseg = 3
    dend_7 nseg = 5
    dend_6 nseg = 3
    dend_21 nseg = 5
    dend_18 nseg = 3
    dend_19 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_NBC_900ac15b61_0_0


