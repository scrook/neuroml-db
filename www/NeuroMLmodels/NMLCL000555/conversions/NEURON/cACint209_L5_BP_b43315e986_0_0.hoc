// Cell: cACint209_L5_BP_b43315e986_0_0
/*
{
  "id" : "cACint209_L5_BP_b43315e986_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.49405, 8.69821, 2.92901, 0.83", "-6.90982, 11.3457, 3.44415, 1.11", "-8.92377, 12.9057, 3.71212, 0.83", "-10.8804, 14.4081, 3.95222, 0.83", "-12.0389, 15.2648, 4.08379, 1.11", "-15.6667, 17.9418, 4.50546, 1.11", "-22.1554, 22.525, 5.25085, 0.83", "-24.4931, 24.1133, 5.49699, 0.83", "-26.3443, 25.3336, 5.64988, 0.83", "-28.1494, 26.543, 5.78223, 0.83", "-29.6189, 27.5398, 5.85363, 0.55", "-30.7234, 28.2147, 5.9261, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "5.12203, 6.46417, -6.37705, 0.55", "8.54661, 7.20498, -7.14182, 0.55", "10.5337, 7.39198, -8.15377, 0.83", "13.6788, 7.591, -10.0335, 0.55", "15.197, 7.68706, -10.9409, 1.38", "18.9298, 7.92327, -13.172, 0.55", "20.5197, 7.84328, -14.2366, 0.83", "28.7437, 6.37638, -20.2178, 0.55", "29.5394, 6.17911, -20.8759, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.681041, -10.2152, 3.13506, 1.11", "-0.723517, -13.9629, 4.47861, 1.11", "-0.740816, -15.4892, 5.02578, 0.83", "-0.763798, -17.517, 5.75274, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.754508, 9.6497, -1.35849, 1.11", "0.705751, 11.4545, -1.35599, 1.11", "0.586322, 14.3985, -1.25179, 1.38", "0.581483, 14.5626, -1.24233, 1.38", "0.631634, 16.6017, -1.06887, 0.83", "0.732807, 18.7634, -0.749945, 0.83", "0.955335, 21.2173, -0.0482012, 0.83", "1.11375, 22.1553, 0.359996, 0.83", "1.29314, 22.8403, 0.746436, 1.11", "1.87209, 24.5198, 1.77992, 0.55", "2.55091, 26.2803, 3.01037, 0.83", "3.52299, 28.1121, 4.4693, 0.55", "4.04859, 28.8822, 5.15669, 0.83", "4.76127, 29.9273, 6.19616, 0.55", "5.61513, 31.254, 7.56965, 0.55", "6.7574, 33.2413, 9.61865, 0.55", "8.01003, 35.5078, 11.8785, 0.55", "8.73548, 36.976, 13.5027, 0.55", "9.54674, 38.8288, 15.7308, 0.55", "9.70546, 39.201, 16.2286, 0.83", "10.1015, 40.1844, 17.6171, 0.55", "10.459, 40.9546, 18.7212, 0.83", "11.2421, 43.0389, 21.3201, 0.55", "11.5951, 43.8017, 22.1173, 0.83", "11.9857, 44.3722, 22.704, 0.55", "12.4078, 44.8685, 23.1914, 0.83", "13.396, 45.8052, 24.1427, 0.83", "14.7462, 47.0775, 25.2529, 0.83", "15.6049, 47.9134, 25.8232, 0.55", "16.253, 48.6297, 26.261, 0.55", "17.9632, 50.4823, 27.3786, 0.83", "19.0845, 51.6711, 28.0477, 0.55", "20.8156, 53.4175, 28.9839, 0.55", "22.4323, 54.8923, 29.7713, 0.55", "23.8959, 56.1477, 30.4331, 0.55", "25.7809, 57.6288, 31.178, 0.55", "26.9562, 58.3715, 31.5957, 0.55", "27.7943, 58.7995, 31.7801, 0.55", "28.9507, 59.1537, 31.9336, 0.55", "30.7371, 59.3978, 32.0301, 0.55", "31.8724, 59.4116, 32.0523, 0.55", "33.5017, 59.3884, 32.1931, 0.55", "36.5204, 59.4405, 32.72, 0.55", "38.8325, 59.5912, 33.2944, 0.55", "41.2314, 59.8709, 34.0457, 0.55", "42.7288, 60.1054, 34.6492, 0.55", "46.5135, 61.0951, 36.4762, 0.55", "48.6856, 61.872, 37.7337, 0.55", "50.2555, 62.5767, 38.8424, 0.55", "51.184, 63.1932, 39.555, 0.55", "52.2504, 64.0855, 40.3716, 0.55", "54.0981, 65.8207, 41.5585, 0.55", "54.5412, 66.2369, 41.7625, 0.55", "55.8455, 67.3567, 42.2561, 0.55", "57.0356, 68.5351, 42.702, 0.83", "57.6878, 69.188, 42.934, 0.55", "58.6683, 70.2979, 43.2369, 0.83", "63.3829, 76.2179, 46.2998, 0.83", "67.4959, 82.9014, 48.5514, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-30.7234, 28.2147, 5.9261, 0.55", "-32.0339, 29.2854, 5.05287, 0.55", "-33.4589, 30.4496, 4.10332, 0.55", "-35.1786, 31.8545, 2.95742, 0.55", "-36.5986, 33.0146, 2.01122, 0.83", "-37.7886, 33.9868, 1.21831, 0.55", "-39.9973, 35.7913, -0.253459, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-30.7234, 28.2147, 5.9261, 0.55", "-32.847, 28.5704, 5.76913, 0.55", "-35.0937, 28.8894, 5.82882, 0.55", "-37.638, 29.25, 5.95877, 0.55", "-41.3041, 29.7486, 6.48717, 0.55", "-44.3589, 30.0866, 7.15314, 0.55", "-47.5547, 30.3979, 7.99246, 0.55", "-50.6227, 30.503, 9.15209, 0.55", "-53.246, 30.3432, 10.4249, 0.55", "-56.492, 29.9258, 12.3838, 0.55", "-57.8908, 29.6467, 13.4453, 0.55", "-59.3979, 29.3317, 14.6612, 0.55", "-62.0601, 28.5583, 16.6893, 0.55", "-63.4897, 28.1401, 17.534, 0.55", "-64.9869, 27.6538, 18.412, 0.55", "-66.778, 27.09, 19.2671, 0.55", "-68.728, 26.5164, 20.1392, 0.55", "-71.5144, 25.6878, 21.3216, 0.55", "-75.2581, 24.8207, 22.5437, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "29.5394, 6.17911, -20.8759, 0.55", "34.482, 7.48506, -21.9287, 0.55", "37.3307, 8.07809, -22.9418, 0.55", "40.1422, 8.53736, -23.9855, 0.55", "42.0633, 8.77403, -24.6997, 0.55", "44.871, 9.05402, -25.7235, 0.55", "50.6955, 9.52545, -28.0326, 0.55", "57.3028, 10.0275, -31.0958, 0.55", "60.5066, 10.0744, -32.8088, 0.55", "62.2225, 10.0594, -33.8405, 0.55", "64.1038, 10.0538, -35.0483, 0.55", "67.461, 9.94916, -37.1925, 0.55", "68.6802, 9.83994, -38.0137, 0.55", "73.8413, 9.51577, -41.8884, 0.55", "77.4942, 9.35095, -44.9019, 0.55", "79.5973, 9.29848, -46.6941, 0.55", "81.6948, 9.22748, -48.4805, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "29.5394, 6.17911, -20.8759, 0.83", "31.8363, 7.13786, -20.757, 0.83", "33.1474, 7.69782, -20.7436, 0.55", "35.0787, 8.59583, -20.8635, 0.83", "36.3809, 9.23788, -20.9726, 0.55", "38.1845, 10.1605, -21.0892, 0.83", "40.3617, 11.2905, -21.1486, 0.55", "41.4468, 11.7776, -21.1547, 0.55", "43.9002, 12.5571, -21.0808, 0.83", "46.0964, 12.9569, -20.8046, 0.55", "47.3256, 13.1423, -20.5431, 0.83", "49.1815, 13.4145, -19.9611, 0.55", "51.864, 13.7736, -18.7986, 0.55", "55.5663, 14.0552, -17.0489, 0.55", "59.0848, 14.1534, -15.1813, 0.55", "61.8693, 14.1928, -13.6615, 0.55", "66.4636, 14.2719, -11.1288, 0.55", "69.8413, 14.4022, -9.18602, 0.55", "71.9076, 14.6208, -7.90673, 0.55", "75.7698, 15.3681, -5.43553, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.763798, -17.517, 5.75274, 0.83", "-0.978956, -19.5394, 5.67746, 0.83", "-1.18858, -21.5097, 5.60412, 0.83", "-1.42263, -23.7096, 5.52223, 0.83", "-1.54485, -24.8584, 5.47947, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.763798, -17.517, 5.75274, 0.55", "-0.239859, -19.1424, 6.98375, 0.55", "0.189232, -21.1417, 8.55402, 0.55", "0.33426, -23.7802, 10.6676, 0.55", "0.315049, -24.8091, 11.5081, 0.83", "-0.0123394, -27.445, 13.9236, 0.55", "-0.295956, -28.8113, 15.1832, 0.55", "-0.917345, -31.4705, 17.7377, 0.83", "-1.50741, -33.45, 19.7454, 0.55", "-2.13489, -35.0895, 21.3586, 0.55", "-3.38539, -38.1978, 24.3498, 0.55", "-4.37602, -40.6752, 26.7054, 0.55", "-5.13384, -42.6593, 28.6263, 0.55", "-5.8157, -44.7609, 30.6142, 0.28", "-6.02276, -45.633, 31.4179, 0.55", "-6.35234, -47.2422, 32.8167, 0.28", "-6.4789, -49.7397, 34.6542, 0.55", "-8.95552, -58.1387, 40.9699, 0.55", "-11.7571, -65.9134, 47.9177, 0.55", "-14.3054, -72.2935, 56.2463, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-39.9973, 35.7913, -0.253459, 0.55", "-43.1428, 36.0245, 1.10404, 0.55", "-44.4811, 36.0367, 1.82399, 0.83", "-46.0648, 35.9554, 2.85527, 0.55", "-47.2853, 35.8814, 3.74756, 0.83", "-50.4786, 35.7963, 6.07109, 0.55", "-51.688, 35.7819, 6.96186, 0.28", "-53.7172, 35.7614, 8.60854, 0.55", "-56.4386, 35.75, 10.8079, 0.55", "-58.4976, 35.7516, 12.3896, 0.55", "-61.2415, 35.7622, 14.4205, 0.28", "-61.9477, 35.7788, 14.8682, 0.55", "-63.4045, 35.8351, 15.7444, 0.28", "-64.3859, 35.9074, 16.2541, 0.55", "-66.3761, 36.0598, 17.127, 0.28", "-67.5412, 36.0937, 17.5741, 0.55", "-69.602, 36.0071, 18.3632, 0.28", "-70.9825, 35.9453, 18.8455, 0.55", "-79.7075, 34.5269, 25.3199, 0.55", "-87.8056, 32.0008, 32.255, 0.55", "-95.6394, 28.4504, 39.0433, 0.55", "-103.413, 23.7195, 45.1458, 0.55", "-110.089, 19.2466, 52.5942, 0.55", "-117.515, 15.2481, 59.5885, 0.55", "-125.062, 12.9649, 67.1965, 0.55", "-132.581, 9.84536, 74.531, 0.55", "-139.911, 7.39718, 82.2979, 0.55", "-146.778, 4.73537, 90.4108, 0.55", "-152.645, 0.777334, 98.7752, 0.55", "-158.607, -2.20291, 107.471, 0.55", "-164.702, -6.20746, 115.649, 0.55", "-169.594, -10.7706, 124.326, 0.55", "-172.74, -14.7671, 134.031, 0.55", "-175.797, -20.6498, 142.755, 0.55", "-177.317, -26.8071, 151.69, 0.55", "-179.42, -32.5142, 160.804, 0.55", "-182.674, -37.4145, 170.047, 0.55", "-188.103, -40.5091, 179.048, 0.55", "-192.633, -44.8448, 188.034, 0.55", "-195.183, -47.5851, 198.331, 0.55", "-199.41, -49.4202, 208.272, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-39.9973, 35.7913, -0.253459, 0.55", "-41.069, 37.1657, -2.33469, 0.55", "-41.7042, 38.6475, -4.50346, 0.55", "-42.2212, 40.3481, -6.7155, 0.55", "-42.545, 41.4129, -8.10065, 0.55", "-43.1355, 43.3553, -10.6273, 0.83", "-43.5675, 44.7764, -12.4759, 0.55", "-43.886, 46.7533, -15.1306, 0.83", "-43.8466, 47.9788, -16.5252, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-75.2581, 24.8207, 22.5437, 0.28", "-76.5692, 22.7714, 21.7675, 0.28", "-77.1918, 21.9059, 21.3548, 0.28", "-78.0068, 20.6874, 20.7227, 0.55", "-78.6821, 19.6125, 20.1772, 0.28", "-79.6809, 17.9701, 19.3686, 0.55", "-82.4717, 13.1225, 17.0773, 0.28", "-83.3891, 11.4437, 16.1286, 0.55", "-84.7816, 8.87285, 14.5727, 0.28", "-85.5853, 7.34625, 13.5666, 0.55", "-86.1404, 6.29881, 12.8453, 0.28", "-86.7736, 5.09468, 12.0283, 0.55", "-88.7052, 1.05027, 9.41117, 0.28", "-89.3108, -0.164461, 8.57211, 0.55", "-90.358, -1.98184, 7.0769, 0.28", "-91.2036, -3.11887, 6.00421, 0.28", "-91.949, -3.8644, 5.25351, 0.55", "-94.5182, -5.94475, 3.21076, 0.28", "-95.7054, -6.78317, 2.40338, 0.55", "-98.6032, -8.65979, 0.420581, 0.28", "-101.49, -10.2966, -1.38747, 0.28", "-104.619, -11.8234, -3.21651, 0.28", "-106.045, -12.3851, -3.91595, 0.55", "-113.111, -19.4443, -9.23669, 0.55", "-120.929, -26.9341, -12.5333, 0.55", "-128.581, -33.7154, -17.3848, 0.55", "-136.393, -39.6364, -23.0413, 0.55", "-144.267, -44.5916, -29.4853, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-75.2581, 24.8207, 22.5437, 0.55", "-76.0927, 24.7498, 22.7103, 0.55", "-78.4287, 24.574, 23.4881, 0.55", "-79.3035, 24.4882, 23.8297, 0.55", "-81.3581, 24.2251, 24.6693, 0.55", "-84.5275, 23.8426, 25.8022, 0.55", "-86.1768, 23.6934, 26.3575, 0.28", "-88.7459, 23.4009, 27.1745, 0.55", "-90.6574, 23.139, 27.7142, 0.55", "-91.4644, 23.0231, 27.9443, 0.28", "-96.3055, 22.3247, 29.3178, 0.55", "-98.5752, 21.8827, 29.8266, 0.28", "-101.646, 21.2622, 30.3322, 0.28", "-104.304, 20.7556, 30.6089, 0.55", "-114.561, 20.4623, 33.8477, 0.55", "-124.392, 19.9797, 38.195, 0.55", "-133.567, 18.4838, 43.6136, 0.55", "-142.434, 18.8467, 49.6979, 0.55", "-149.851, 18.9863, 57.4925, 0.55", "-155.64, 19.8242, 66.524, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "81.6948, 9.22748, -48.4805, 0.55", "85.9605, 10.3823, -52.1814, 0.55", "87.3161, 10.6732, -53.4269, 0.55", "89.0178, 10.9846, -54.956, 0.55", "92.1114, 11.4917, -57.9082, 0.55", "95.3546, 11.8741, -61.0469, 0.55", "96.9517, 11.9407, -62.52, 0.83", "98.2767, 11.8889, -63.816, 0.55", "99.2773, 11.7524, -64.8704, 0.83", "101.724, 11.065, -67.5194, 0.55", "103.755, 10.3143, -69.6833, 0.55", "106.092, 9.45422, -72.0589, 0.55", "108.687, 8.55987, -74.767, 0.55", "110.432, 7.91327, -76.6184, 0.55", "112.403, 7.16779, -78.7664, 0.55", "114.102, 6.56235, -80.7467, 0.55", "115.164, 6.25274, -82.1455, 0.55", "116.535, 5.61359, -84.9732, 0.55", "117.294, 5.14844, -86.7324, 0.55", "117.981, 4.39644, -89.053, 0.55", "118.959, 2.98595, -92.9549, 0.55", "119.165, 2.63213, -93.8288, 0.28", "121.812, -1.78058, -104.431, 0.28", "122.685, -3.04454, -107.546, 0.83", "126.091, -7.70532, -118.558, 0.83", "127.837, -10.0702, -123.634, 0.83", "128.667, -11.1054, -125.673, 0.55", "129.603, -12.1122, -127.657, 0.55", "132.104, -14.0013, -131.313, 0.55", "134.748, -15.6566, -134.515, 0.28", "135.518, -15.8641, -134.668, 0.55", "137.192, -16.1064, -134.441, 0.28", "138.219, -16.1597, -134.168, 0.55", "139.289, -16.2139, -133.79, 0.28", "140.566, -16.2059, -133.29, 0.55", "142.472, -16.1288, -132.76, 0.28", "144.007, -16.122, -132.376, 0.55", "145.699, -16.0262, -132.105, 0.28", "148.002, -15.923, -131.94, 0.55", "150.583, -15.7744, -131.918, 0.55", "152.853, -15.6428, -132.053, 0.28", "155.995, -15.4617, -132.417, 0.55", "161.425, -15.0984, -133.645, 0.55", "163.818, -14.8643, -134.496, 0.55", "164.845, -14.7401, -134.979, 0.83", "166.804, -14.5201, -136.08, 0.55", "168.16, -14.3273, -136.938, 0.83", "171.799, -13.72, -139.306, 0.55", "174.037, -13.5119, -140.783, 0.28", "174.983, -13.4645, -141.289, 0.55", "177.589, -13.5224, -142.351, 0.28", "178.508, -13.6149, -142.649, 0.55", "180.408, -13.872, -142.958, 0.28", "182.352, -14.26, -142.915, 0.55", "186.284, -15.1322, -142.126, 0.28", "188.1, -15.5793, -141.562, 0.55", "190.812, -16.3694, -140.559, 0.28", "194.235, -17.3342, -139.175, 0.55", "196.707, -17.9929, -138.142, 0.55", "200.975, -18.9933, -136.306, 0.28", "202.722, -19.3499, -135.706, 0.55", "205.725, -19.8539, -135.022, 0.28", "208.702, -20.1692, -134.58, 0.55", "210.322, -20.2006, -134.592, 0.28", "211.771, -20.0552, -134.749, 0.55", "215.845, -19.4693, -135.619, 0.28", "218.737, -18.8586, -136.323, 0.28", "221.236, -18.1505, -137.003, 0.55", "223.99, -17.3155, -137.91, 0.28", "224.679, -17.0571, -138.123, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "81.6948, 9.22748, -48.4805, 0.55", "82.4168, 6.9744, -49.9552, 0.55", "82.8574, 5.0552, -51.0669, 0.28", "83.2592, 3.29606, -51.9349, 0.55", "84.3016, -0.419655, -53.8114, 0.28", "84.3608, -0.653768, -53.9626, 0.55", "84.7048, -1.87737, -54.8563, 0.28", "84.8965, -2.89488, -55.7566, 0.55", "85.0363, -3.96038, -56.8175, 0.28", "85.1846, -5.41618, -58.3318, 0.55", "85.5546, -9.07229, -62.0648, 0.55", "85.8538, -12.4068, -65.5263, 0.55", "86.0668, -15.0737, -68.2965, 0.55", "86.2285, -17.6987, -70.9725, 0.55", "86.2681, -18.3773, -71.6351, 0.28", "86.3309, -19.101, -72.2829, 0.55", "86.5106, -20.0981, -73.0882, 0.28", "87.0133, -21.8747, -74.3693, 0.55", "88.2661, -25.2611, -76.2831, 0.55", "88.9558, -27.082, -77.1479, 0.28", "89.5495, -28.9395, -78.1077, 0.55", "90.1913, -31.5526, -79.5487, 0.28", "90.5754, -33.6698, -80.7602, 0.55", "91.0165, -36.8438, -82.5766, 0.28", "91.4964, -40.1269, -84.3554, 0.55", "92.1309, -44.8974, -86.9793, 0.28", "92.4146, -47.4438, -88.3857, 0.55", "92.6632, -50.0508, -89.885, 0.28", "92.8585, -52.3474, -91.3459, 0.28", "93.1995, -55.2136, -93.4185, 0.55", "93.6964, -57.8596, -95.2754, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "75.7698, 15.3681, -5.43553, 0.55", "77.4753, 14.7926, -5.25306, 0.55", "78.7048, 14.3562, -5.25042, 0.55", "81.3847, 13.4063, -5.39502, 0.55", "82.5805, 12.982, -5.57564, 0.55", "83.8875, 12.5646, -5.83372, 0.55", "85.6424, 12.068, -6.29973, 0.55", "87.4764, 11.5406, -6.9837, 0.55", "88.4314, 11.2801, -7.45964, 0.55", "90.3591, 10.821, -8.70332, 0.55", "91.247, 10.6249, -9.30383, 0.55", "93.3169, 10.1383, -10.7781, 0.55", "94.7085, 9.7466, -11.7792, 0.55", "95.7338, 9.43872, -12.468, 0.83", "97.3608, 8.8774, -13.565, 0.55", "98.9421, 8.22781, -14.5938, 0.83", "100.275, 7.59711, -15.4316, 0.55", "101.467, 7.03705, -16.1047, 0.55", "102.153, 6.73999, -16.4388, 0.83", "103.76, 6.0284, -17.1268, 0.28", "104.568, 5.69551, -17.4059, 0.28", "105.338, 5.33255, -17.7318, 0.28", "106.175, 4.96485, -18.0821, 0.28", "107.518, 4.41071, -18.6654, 0.28", "108.061, 4.19035, -18.8812, 0.55", "109.368, 3.64252, -19.2592, 0.55", "111.722, 2.60067, -19.8208, 0.55", "112.371, 2.28667, -19.9507, 0.55", "112.949, 1.97969, -20.0455, 0.83", "114.217, 1.32576, -20.1337, 0.55", "115.321, 0.754777, -20.1913, 0.55", "116.365, 0.218535, -20.2395, 0.55", "117.17, -0.205144, -20.3045, 0.55", "118.425, -0.952599, -20.497, 0.55", "119.872, -1.94865, -20.8469, 0.55", "122.059, -3.72575, -21.634, 0.55", "123.217, -4.87594, -22.2031, 0.55", "124.178, -6.05607, -22.8069, 0.28", "124.449, -6.47887, -23.0271, 0.55", "124.999, -7.6349, -23.6148, 0.28", "125.412, -8.90773, -24.2302, 0.55", "125.728, -10.4973, -24.8562, 0.55", "125.95, -11.5562, -25.2199, 0.28", "126.034, -11.9356, -25.3313, 0.55", "126.263, -12.8837, -25.5971, 0.28", "126.587, -14.1283, -25.917, 0.55", "127.482, -17.161, -26.6275, 0.55", "127.96, -18.7005, -26.9579, 0.55", "128.408, -20.1157, -27.2499, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "75.7698, 15.3681, -5.43553, 0.55", "77.5689, 15.4612, -3.94516, 0.55", "78.1475, 15.4871, -3.49973, 0.55", "80.2969, 15.4727, -1.93191, 0.55", "82.6999, 15.507, -0.146635, 0.55", "85.7741, 15.5483, 2.22599, 0.55", "86.6237, 15.5604, 2.87545, 0.55", "88.142, 15.5213, 4.0272, 0.55", "89.8148, 15.5144, 5.22338, 0.55", "91.7712, 15.5576, 6.52225, 0.55", "93.6175, 15.6252, 7.75212, 0.55", "94.6384, 15.7067, 8.37731, 0.55", "95.841, 15.8371, 9.10812, 0.55", "97.3351, 16.0405, 9.98376, 0.83", "99.7967, 16.3549, 11.1607, 0.55", "101.424, 16.4952, 11.8639, 0.83", "103.676, 16.5826, 12.7656, 0.55", "104.364, 16.5712, 13.0336, 0.55", "106.489, 16.4273, 13.8238, 0.55", "110.274, 15.9302, 15.0905, 0.55", "113.032, 15.4068, 15.9583, 0.55", "115.201, 14.8917, 16.7009, 0.55", "117.393, 14.2511, 17.5396, 0.55", "117.853, 14.1037, 17.7188, 0.28", "118.781, 13.7658, 18.0812, 0.83", "122.583, 12.3214, 19.594, 0.55", "125.247, 11.3115, 20.5978, 0.55", "127.436, 10.5434, 21.4779, 0.55", "128.743, 10.081, 22.017, 0.83", "129.773, 9.73263, 22.443, 0.28", "130.709, 9.4178, 22.82, 0.55", "138.146, 8.87042, 26.8071, 0.55", "145.963, 6.92701, 29.3835, 0.55", "153.84, 6.02125, 32.323, 0.55", "160.636, 4.12087, 36.9836, 0.55", "166.781, 1.177, 41.9926, 0.55", "173.521, -3.13552, 44.728, 0.55", "180.115, -8.26034, 46.0579, 0.55", "187.638, -12.0301, 46.8975, 0.55", "195.031, -15.8919, 48.2956, 0.55", "202.881, -18.9146, 49.1598, 0.55", "210.689, -21.5225, 51.0967, 0.55", "217.789, -25.4577, 53.4667, 0.55", "225.228, -27.922, 56.6457, 0.55", "232.419, -29.07, 60.9453, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.54485, -24.8584, 5.47947, 1.38", "1.24725, -28.2222, 4.16318, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.54485, -24.8584, 5.47947, 0.55", "-2.9152, -26.3585, 5.95618, 0.55", "-4.454, -28.3013, 6.48298, 0.55", "-5.62734, -29.5737, 6.90632, 0.55", "-6.66761, -30.6318, 7.11775, 0.55", "-8.99557, -32.8077, 7.38774, 0.55", "-10.6358, -34.2531, 7.53793, 0.55", "-12.1124, -35.5484, 7.62352, 0.55", "-15.8887, -38.6849, 7.84733, 0.55", "-20.4025, -42.3036, 8.14801, 0.55", "-23.9113, -45.0363, 8.32871, 0.55", "-26.1654, -46.8352, 8.41584, 0.55", "-28.7579, -49.0036, 8.52203, 0.55", "-32.0668, -52.1506, 8.69181, 0.55", "-34.0261, -54.4185, 8.82387, 0.55", "-36.4211, -57.7192, 9.16224, 0.55", "-38.3493, -60.841, 9.4938, 0.55", "-40.3541, -64.7732, 9.85344, 0.55", "-42.3011, -69.427, 10.2545, 0.55", "-43.4219, -73.0176, 10.5229, 0.55", "-43.8229, -74.8186, 10.7272, 0.55", "-44.4445, -79.0794, 11.3408, 0.55", "-44.9237, -83.0754, 11.9899, 0.55", "-45.1103, -87.1275, 12.8557, 0.55", "-45.1975, -89.454, 13.4798, 0.55", "-45.3372, -96.6587, 15.6431, 0.55", "-45.3476, -97.1891, 15.8123, 0.55", "-45.3278, -100.445, 16.9027, 0.55", "-45.4999, -106.249, 19.0716, 0.55", "-45.6067, -108.186, 19.6924, 0.55", "-46.0185, -111.191, 20.1997, 0.55", "-46.2308, -112.303, 20.1363, 0.55", "-47.0321, -116.057, 19.1922, 0.55", "-47.597, -118.485, 18.0454, 0.55", "-48.6648, -122.338, 15.4316, 0.55", "-49.9135, -127.057, 11.8185, 0.28", "-50.2588, -128.221, 10.768, 0.55", "-50.8301, -129.98, 9.02384, 0.28", "-50.9234, -130.245, 8.74828, 0.55", "-51.4003, -131.696, 7.36236, 0.28", "-51.5554, -132.19, 7.01282, 0.55", "-52.2472, -134.765, 5.69265, 0.28", "-52.5111, -135.638, 5.26573, 0.55", "-53.2555, -138.167, 4.18021, 0.28", "-53.4854, -138.963, 3.84006, 0.55", "-54.2848, -141.71, 2.71713, 0.28", "-54.6485, -142.974, 2.1921, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-14.3054, -72.2935, 56.2463, 0.55", "-18.7326, -80.1403, 62.3064, 0.55", "-24.392, -87.247, 68.2532, 0.55", "-29.5122, -95.0016, 73.8698, 0.55", "-34.7494, -102.828, 79.2748, 0.55", "-38.4963, -111.65, 84.3761, 0.55", "-42.3611, -120.108, 89.9828, 0.55", "-44.16, -130.017, 94.04, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-14.3054, -72.2935, 56.2463, 0.55", "-14.1221, -81.7905, 65.6017, 0.55", "-13.0923, -92.7299, 73.1526, 0.55", "-14.1756, -103.873, 80.3911, 0.55", "-15.8311, -115.697, 86.3252, 0.55", "-16.9827, -127.442, 92.5277, 0.55", "-18.1628, -138.705, 99.5631, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-43.8466, 47.9788, -16.5252, 0.83", "-43.2455, 49.4895, -17.6601, 0.83", "-41.9244, 53.1052, -20.164, 0.55", "-41.3742, 54.6482, -21.1291, 0.83", "-40.7988, 56.2843, -22.0597, 0.55", "-40.2476, 57.9366, -22.8022, 0.55", "-39.9828, 58.7524, -23.0761, 0.28", "-39.8627, 59.2765, -23.1363, 0.55", "-39.4764, 60.9721, -22.9703, 0.28", "-39.2999, 61.6912, -22.8602, 0.55", "-38.7352, 64.1782, -22.3814, 0.28", "-38.3512, 66.142, -21.9436, 0.55", "-37.9168, 69.2025, -21.1884, 0.28", "-37.6397, 71.8899, -20.4882, 0.28", "-37.5779, 73.394, -20.0812, 0.55", "-37.6158, 75.1825, -19.6157, 0.28", "-37.6925, 76.0367, -19.3908, 0.55", "-37.9675, 78.0642, -18.9709, 0.28", "-38.2281, 79.4296, -18.7758, 0.28", "-38.5049, 80.7778, -18.6289, 0.28", "-38.624, 81.4894, -18.5497, 0.55", "-38.9428, 84.3725, -18.2702, 0.28", "-39.1985, 87.7926, -17.982, 0.55", "-39.2691, 88.9738, -17.8841, 0.55", "-39.3628, 90.1551, -17.7642, 0.55", "-39.6849, 92.6751, -17.5711, 0.55", "-39.994, 94.338, -17.4963, 0.28", "-40.1802, 94.9709, -17.488, 0.55", "-40.807, 96.6829, -17.4502, 0.28", "-41.5339, 98.5177, -17.4914, 0.55", "-42.7971, 101.177, -17.6886, 0.28", "-43.4327, 102.295, -17.8244, 0.28", "-44.4792, 103.877, -18.1916, 0.55", "-45.6572, 105.539, -18.6721, 0.28", "-45.8761, 105.803, -18.7656, 0.55", "-46.6765, 106.65, -19.1136, 0.28", "-49.4663, 109.375, -20.2856, 0.55", "-53.3574, 112.8, -22.1417, 0.28", "-54.0734, 113.388, -22.541, 0.55", "-56.0415, 114.923, -23.6883, 0.28", "-56.8651, 115.558, -24.1973, 0.28", "-57.5767, 116.095, -24.6816, 0.55", "-59.6575, 117.408, -26.3265, 0.28", "-61.1543, 118.153, -27.4495, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-43.8466, 47.9788, -16.5252, 0.55", "-44.0665, 49.436, -16.2886, 0.55", "-44.2421, 50.2711, -16.0832, 0.28", "-44.5315, 50.8241, -15.8392, 0.55", "-45.196, 52.094, -15.2789, 0.28", "-45.6628, 52.9861, -14.8853, 0.55", "-46.5232, 54.6305, -14.1597, 0.28", "-47.1321, 55.4603, -13.6479, 0.55", "-49.5038, 57.1913, -11.9007, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-144.267, -44.5916, -29.4853, 0.55", "-150.06, -50.6277, -33.8546, 0.55", "-154.403, -57.2411, -39.0013, 0.55", "-157.959, -62.7577, -45.7845, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-144.267, -44.5916, -29.4853, 0.55", "-150.847, -50.8511, -34.7999, 0.55", "-156.327, -57.1492, -41.2051, 0.55", "-161.384, -63.5999, -47.8035, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-155.64, 19.8242, 66.524, 0.55", "-162.982, 20.0103, 72.1618, 0.55", "-170.823, 21.3242, 76.9083, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-155.64, 19.8242, 66.524, 0.55", "-165.881, 18.63, 70.5074, 0.55", "-176.054, 19.2392, 74.7867, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "93.6964, -57.8596, -95.2754, 0.28", "101.343, -63.6863, -107.516, 0.28", "102.123, -64.289, -108.586, 0.55", "103.439, -65.3067, -110.393, 0.28", "104.548, -66.1635, -111.915, 0.28", "106.015, -67.2977, -113.928, 0.55", "107.949, -68.7931, -116.583, 0.55", "110.764, -70.6192, -117.752, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "93.6964, -57.8596, -95.2754, 0.55", "94.3634, -58.9457, -96.3704, 0.55", "94.5698, -59.4365, -96.8592, 0.28", "94.878, -60.2795, -97.7164, 0.55", "95.5569, -62.1367, -99.6046, 0.28", "96.0274, -63.4237, -100.914, 0.55", "96.8245, -65.6043, -103.131, 0.28", "97.724, -68.2732, -106.059, 0.28", "98.0838, -69.5026, -107.433, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "128.408, -20.1157, -27.2499, 0.28", "130.301, -23.5019, -26.6921, 0.28", "132.692, -27.9717, -25.5927, 0.28", "134.204, -30.8705, -24.7638, 0.55", "135.139, -32.4828, -24.2343, 0.28", "135.635, -33.3502, -23.9407, 0.28", "138.095, -37.6327, -22.5561, 0.55", "138.673, -38.59, -22.1291, 0.28", "140.023, -41.0975, -20.8314, 0.55", "141.165, -43.2732, -19.79, 0.28", "142.174, -45.0502, -18.9802, 0.55", "143.344, -47.1703, -18.1388, 0.55", "145.179, -50.5311, -17.2129, 0.55", "145.618, -51.3542, -17.0141, 0.55", "147.169, -54.4185, -16.3017, 0.28", "147.759, -55.6657, -16.041, 0.55", "148.603, -57.268, -15.7176, 0.28", "149.784, -59.5402, -15.3588, 0.55", "151.735, -63.1259, -15.3034, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "128.408, -20.1157, -27.2499, 0.55", "125.804, -19.8179, -27.0425, 0.55", "123.69, -19.5761, -26.8741, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.24725, -28.2222, 4.16318, 0.83", "1.34846, -28.4644, 4.12131, 0.83", "2.57919, -30.618, 3.82272, 0.83", "3.63492, -32.5027, 3.43857, 0.55", "4.47717, -34.0064, 3.1321, 0.55", "6.2674, -37.2024, 2.48069, 0.83", "8.43883, -41.0789, 1.69057, 0.55", "9.635, -43.1099, 1.30657, 0.83", "11.7969, -46.3488, 0.793134, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.24725, -28.2222, 4.16318, 0.55", "-1.56386, -29.3808, 1.39249, 0.55", "-4.58124, -30.6244, -1.5815, 0.55", "-8.14329, -32.0924, -5.09232, 0.55", "-12.4688, -33.8752, -9.35559, 0.55", "-14.9234, -34.8868, -11.7748, 0.55", "-15.4165, -35.09, -12.2608, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-18.1628, -138.705, 99.5631, 0.55", "-18.2818, -144.57, 103.753, 0.55", "-17.3783, -150.796, 107.271, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-18.1628, -138.705, 99.5631, 0.55", "-19.1542, -148.436, 105.078, 0.55", "-20.657, -157.923, 110.896, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-49.5038, 57.1913, -11.9007, 0.28", "-51.4799, 57.9205, -10.6375, 0.28", "-52.2556, 58.1637, -10.1008, 0.55", "-54.5011, 58.8504, -8.50768, 0.28", "-55.5791, 59.2328, -7.79171, 0.55", "-58.479, 60.3077, -5.92993, 0.28", "-61.4263, 61.4002, -4.03767, 0.55", "-66.2904, 63.0104, -0.96626, 0.28", "-67.3272, 63.3588, -0.308591, 0.55", "-69.5965, 64.2547, 1.13477, 0.28", "-70.489, 64.6419, 1.72115, 0.55", "-79.3871, 66.7508, 5.39703, 0.55", "-88.1122, 70.8386, 7.46987, 0.55", "-96.4937, 74.5366, 11.1044, 0.55", "-103.811, 79.3206, 15.6539, 0.55", "-111.713, 84.114, 19.0757, 0.55", "-120.523, 87.1906, 22.2478, 0.55", "-129.243, 88.9335, 26.4968, 0.55", "-137.565, 89.1617, 31.773, 0.55", "-145.853, 90.0293, 37.0348, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-49.5038, 57.1913, -11.9007, 0.55", "-51.8606, 56.1876, -12.505, 0.55", "-53.0781, 55.6305, -12.8379, 0.28", "-53.9841, 55.2158, -13.0856, 0.55", "-54.7392, 54.8703, -13.292, 0.28", "-55.2681, 54.6282, -13.4366, 0.55", "-56.7265, 53.9607, -13.8353, 0.28", "-57.6316, 53.4969, -14.233, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-157.959, -62.7577, -45.7845, 0.55", "-161.79, -69.7379, -49.7099, 0.55", "-165.354, -77.2492, -52.8222, 0.55", "-168.414, -84.1789, -57.4509, 0.55", "-172.24, -91.4266, -60.8632, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-157.959, -62.7577, -45.7845, 0.55", "-161.843, -67.445, -52.6026, 0.55", "-165.064, -71.095, -60.3385, 0.55", "-169.255, -75.5729, -67.1152, 0.55", "-175.108, -78.3744, -73.5521, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-161.384, -63.5999, -47.8035, 0.55", "-166.349, -68.1533, -56.3321, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-161.384, -63.5999, -47.8035, 0.55", "-166.046, -72.9767, -49.3013, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "110.764, -70.6192, -117.752, 0.28", "113.49, -72.1193, -119.094, 0.28", "114.756, -72.8161, -119.718, 0.55", "117.171, -74.1449, -120.907, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "110.764, -70.6192, -117.752, 0.55", "110.357, -71.7337, -119.177, 0.55", "109.545, -73.963, -122.027, 0.28", "109.28, -74.6892, -122.955, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "98.0838, -69.5026, -107.433, 0.28", "99.0369, -71.7757, -109.259, 0.28", "99.5088, -72.9012, -110.164, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "98.0838, -69.5026, -107.433, 0.55", "96.838, -70.4862, -105.865, 0.55", "93.3639, -73.2288, -101.493, 0.28", "92.5386, -73.8803, -100.454, 0.55", "90.281, -75.6626, -97.6129, 0.28", "88.8258, -76.8115, -95.7816, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "11.7969, -46.3488, 0.793134, 0.83", "11.8071, -46.6027, 0.763626, 0.83", "12.0192, -49.9231, 0.446508, 0.83", "12.031, -52.3987, 0.430933, 0.83", "11.9703, -54.7746, 0.705269, 0.83", "11.8667, -57.9243, 1.33441, 0.83", "11.699, -61.5447, 2.22112, 0.83", "11.6023, -65.5798, 3.40671, 0.83", "11.5727, -69.4926, 4.73035, 0.83", "11.1983, -74.2899, 6.35859, 0.83", "10.8663, -76.4945, 7.0293, 0.83", "10.5736, -78.1563, 7.43589, 0.83", "9.92369, -81.3447, 8.17515, 0.83", "9.3502, -84.209, 8.6631, 0.83", "8.20434, -90.3548, 8.93837, 0.83", "7.46192, -93.7342, 8.66023, 0.83", "6.69707, -96.8566, 8.1904, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "11.7969, -46.3488, 0.793134, 0.55", "10.7989, -48.4773, 0.741487, 0.55", "10.0445, -50.0264, 0.819645, 0.55", "9.58215, -51.021, 0.971619, 0.55", "8.92296, -52.5845, 1.36612, 0.55", "7.68523, -55.6888, 2.35151, 0.55", "6.71242, -58.0477, 3.35377, 0.55", "5.92161, -59.9458, 4.3576, 0.55", "5.06812, -61.8671, 5.50296, 0.55", "4.3419, -63.4633, 6.53422, 0.28", "3.71801, -64.774, 7.56382, 0.55", "2.50776, -67.1701, 9.76284, 0.55", "1.6775, -68.6431, 11.261, 0.55", "1.20397, -69.4678, 12.0916, 0.55", "0.600547, -70.438, 13.0185, 0.83", "-1.20209, -73.3077, 15.5766, 0.28", "-1.79614, -74.2565, 16.3978, 0.55", "-2.81249, -75.9684, 17.8285, 0.28", "-3.12772, -76.4974, 18.3075, 0.55", "-3.79818, -77.7402, 19.4125, 0.28", "-4.17157, -78.4451, 19.99, 0.55", "-5.48866, -80.7152, 21.2511, 0.55", "-7.6586, -86.9452, 27.1317, 0.55", "-9.42799, -92.911, 33.4072, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-15.4165, -35.09, -12.2608, 0.55", "-16.8634, -36.054, -15.156, 0.55", "-17.2932, -36.2793, -15.9861, 0.55", "-18.3968, -36.8362, -18.0112, 0.55", "-20.8521, -37.9227, -22.3106, 0.28", "-21.2283, -38.067, -22.92, 0.55", "-22.8405, -38.7191, -25.374, 0.55", "-25.1575, -39.572, -28.4584, 0.55", "-26.0485, -39.8579, -29.6156, 0.28", "-26.8391, -40.0312, -30.5818, 0.28", "-28.267, -40.2606, -32.017, 0.55", "-29.9661, -40.4535, -33.8513, 0.28", "-31.4946, -40.4733, -35.6028, 0.55", "-32.6669, -40.3617, -36.9419, 0.55", "-33.4494, -40.2039, -37.9032, 0.55", "-35.6961, -39.6172, -40.8265, 0.55", "-38.0481, -38.7767, -43.8678, 0.55", "-39.0198, -38.3529, -45.1006, 0.28", "-39.9383, -37.9731, -46.2918, 0.55", "-41.8374, -37.3616, -48.6682, 0.28", "-42.4834, -37.1789, -49.4575, 0.83", "-43.725, -36.8044, -50.8313, 0.28", "-44.6852, -36.5997, -51.6719, 0.55", "-46.1004, -36.3558, -52.8551, 0.28", "-46.6702, -36.2472, -53.3066, 0.55", "-47.7521, -36.0599, -54.0784, 0.55", "-49.3805, -35.5831, -55.1951, 0.55", "-50.4545, -35.1883, -55.8669, 0.28", "-51.3257, -34.7398, -56.3459, 0.55", "-52.3278, -34.0723, -56.9288, 0.28", "-52.4882, -33.9484, -57.0323, 0.55", "-53.8684, -32.8059, -58.281, 0.28", "-54.8239, -31.9695, -59.319, 0.55", "-55.9941, -30.7874, -60.9196, 0.83", "-56.904, -29.8029, -62.3893, 0.28", "-57.1283, -29.5558, -62.8024, 0.55", "-58.8062, -27.7212, -66.1131, 0.28", "-59.0858, -27.4144, -66.737, 0.55", "-59.866, -26.4258, -68.6724, 0.28", "-60.0666, -26.1719, -69.1745, 0.55", "-60.6014, -25.5021, -70.4021, 0.28", "-60.993, -25.0143, -71.232, 0.55", "-61.9427, -23.8947, -72.8699, 0.28", "-62.5295, -23.2878, -73.804, 0.55", "-63.8373, -22.0975, -75.6894, 0.28", "-64.2356, -21.7727, -76.2397, 0.55", "-64.8836, -21.3274, -77.0651, 0.28", "-65.4449, -20.9473, -77.7289, 0.55", "-66.6454, -20.1663, -79.0152, 0.28", "-67.0141, -19.9396, -79.3868, 0.55", "-69.7927, -18.1653, -81.9966, 0.28", "-70.7852, -17.4422, -82.816, 0.55", "-72.5797, -16.029, -84.1509, 0.28", "-73.3905, -15.349, -84.7265, 0.55", "-75.2914, -13.7894, -85.9181, 0.28", "-76.0067, -13.2491, -86.3168, 0.55", "-78.691, -11.5433, -87.5763, 0.28", "-79.8428, -10.9877, -88.0757, 0.55", "-81.5473, -10.4863, -88.7411, 0.55", "-82.616, -10.2446, -89.1179, 0.55", "-84.8521, -9.78824, -89.7096, 0.28", "-87.0915, -9.34405, -90.1508, 0.28", "-88.9689, -8.96057, -90.4652, 0.55", "-91.2841, -8.26541, -90.6195, 0.28", "-92.4345, -7.76328, -90.5569, 0.55", "-95.1387, -6.1055, -90.1757, 0.28", "-96.528, -4.94198, -89.668, 0.55", "-97.4217, -4.02793, -89.1507, 0.28", "-98.4447, -2.97256, -88.3153, 0.55", "-99.7251, -1.58943, -87.1123, 0.28", "-100.217, -1.09347, -86.6603, 0.55", "-102.818, 1.19058, -84.6194, 0.28", "-103.704, 1.92382, -83.9381, 0.55", "-105.831, 3.58785, -82.2552, 0.28", "-106.989, 4.47746, -81.3405, 0.55", "-107.943, 5.20695, -80.5905, 0.55", "-109.084, 6.06688, -79.7251, 0.28", "-109.683, 6.4987, -79.3774, 0.55", "-111.676, 8.00259, -78.3464, 0.28", "-112.692, 8.91612, -77.7941, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-15.4165, -35.09, -12.2608, 0.55", "-14.8687, -35.3806, -13.1776, 0.55", "-14.27, -35.5583, -14.0913, 0.55", "-13.4511, -35.6938, -15.1961, 0.55", "-12.7319, -35.7224, -16.072, 0.55", "-7.5021, -35.229, -21.4973, 0.55", "-6.30125, -34.9469, -22.7472, 0.55", "-4.52385, -34.3683, -24.6407, 0.55", "-3.26189, -33.9057, -25.9923, 0.55", "-1.99882, -33.3661, -27.2853, 0.28", "0.0287938, -32.4048, -29.184, 0.55", "3.16667, -30.8693, -31.8497, 0.28", "3.39452, -30.7958, -32.146, 0.55", "4.36392, -30.7076, -34.4234, 0.28", "4.74861, -30.721, -36.0578, 0.55", "4.98366, -30.8411, -37.8595, 0.55", "5.33733, -31.2135, -41.0935, 0.55", "6.0422, -31.9909, -47.4346, 0.55", "6.58424, -32.5665, -51.6794, 0.55", "6.8083, -32.783, -53.1372, 0.55", "8.51789, -34.1569, -62.6808, 0.55", "9.09488, -34.5039, -65.2443, 0.55", "9.52658, -34.711, -66.656, 0.55", "10.8081, -35.3078, -69.8476, 0.55", "14.2761, -37.1933, -77.2866, 0.55", "15.2848, -37.7974, -79.2413, 0.28", "15.9374, -38.2032, -80.3034, 0.55", "16.925, -38.8814, -81.8524, 0.28", "17.3695, -39.2384, -82.4498, 0.55", "19.068, -40.6505, -83.7873, 0.28", "20.489, -42.2502, -83.8036, 0.55", "21.3185, -43.3524, -83.7321, 0.28", "22.051, -44.5278, -83.5332, 0.55", "22.656, -45.7721, -83.2628, 0.28", "22.9021, -46.405, -83.1503, 0.55", "23.4422, -48.0414, -82.8008, 0.28", "23.5717, -48.5313, -82.7733, 0.55", "24.3077, -51.3513, -82.7688, 0.28", "24.6889, -52.6744, -82.927, 0.55", "25.6102, -55.5398, -83.5633, 0.28", "25.9944, -56.61, -83.9065, 0.55", "27.3905, -60.1583, -85.2278, 0.28", "27.7362, -61.0245, -85.5828, 0.55", "28.7636, -63.7654, -86.8006, 0.28", "28.9688, -64.3992, -87.0419, 0.55", "29.4589, -66.066, -87.668, 0.28", "29.7544, -67.0415, -88.1187, 0.55", "30.0774, -68.0093, -88.6308, 0.55", "30.7223, -69.9395, -89.6392, 0.28", "31.2269, -71.1579, -90.3869, 0.55", "33.0433, -74.3251, -92.8643, 0.28", "33.7954, -75.3921, -93.8882, 0.55", "34.3364, -76.0817, -94.5843, 0.28", "34.9084, -76.7265, -95.2817, 0.55", "36.7407, -78.5762, -97.3964, 0.28", "38.139, -80.0011, -98.947, 0.55", "40.5424, -82.6333, -101.34, 0.28", "41.303, -83.4544, -102.089, 0.55", "42.8157, -84.9726, -103.37, 0.28", "43.3328, -85.4704, -103.747, 0.55", "44.21, -86.2609, -104.179, 0.28", "45.0018, -86.9307, -104.485, 0.55", "47.2098, -88.6133, -105.074, 0.28", "49.7734, -90.4317, -105.712, 0.28", "51.0959, -91.2849, -105.94, 0.28", "52.4303, -92.1072, -106.259, 0.55", "54.4001, -93.2163, -106.741, 0.28", "55.2815, -93.6951, -106.936, 0.83", "57.5318, -94.941, -107.342, 0.28", "58.4973, -95.5073, -107.574, 0.55", "62.6823, -98.1739, -108.79, 0.28", "64.748, -99.5431, -109.576, 0.28", "66.2362, -100.544, -110.256, 0.55", "67.0832, -101.152, -110.757, 0.55", "69.2908, -102.81, -112.284, 0.28", "71.3135, -104.468, -113.8, 0.55", "73.1401, -106.043, -115.175, 0.28", "74.7666, -107.5, -116.518, 0.55", "76.1176, -108.685, -117.621, 0.28", "77.2593, -109.56, -118.461, 0.55", "80.0839, -111.487, -120.354, 0.28", "81.529, -112.458, -121.247, 0.55", "83.7148, -113.92, -122.499, 0.28", "85.5254, -115.058, -123.482, 0.55", "89.8085, -117.521, -125.807, 0.28", "91.5539, -118.425, -126.889, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-17.3783, -150.796, 107.271, 0.55", "-17.2566, -161.018, 112.14, 0.55", "-15.8376, -171.988, 114.557, 0.55", "-15.2032, -182.601, 118.45, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-17.3783, -150.796, 107.271, 0.55", "-16.4389, -160.457, 114.539, 0.55", "-17.354, -168.799, 123.291, 0.55", "-18.486, -175.154, 133.556, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-20.657, -157.923, 110.896, 0.55", "-20.4205, -168.249, 117.205, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-20.657, -157.923, 110.896, 0.55", "-22.9946, -167.509, 117.011, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "6.69707, -96.8566, 8.1904, 0.83", "7.92844, -101.816, 8.81975, 0.83", "9.22074, -105.986, 9.60814, 0.83", "10.5053, -110.131, 10.3918, 0.83", "11.7252, -114.067, 11.136, 0.83", "13.6052, -120.133, 12.2829, 0.83", "15.4716, -126.156, 13.4216, 0.83", "17.1322, -130.125, 14.6059, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.69707, -96.8566, 8.1904, 0.55", "8.31348, -99.2416, 7.8795, 0.55", "9.47566, -101.115, 7.33423, 0.55", "10.2413, -102.505, 6.81643, 0.55", "10.8544, -104.139, 6.07489, 0.83", "11.3798, -106.0, 5.04909, 0.55", "11.8936, -107.821, 4.04573, 0.83", "12.3009, -109.801, 2.81188, 0.55", "12.509, -110.954, 1.99585, 0.83", "12.9643, -114.693, -0.880284, 0.55", "13.0497, -117.63, -3.25224, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-9.42799, -92.911, 33.4072, 0.55", "-13.2868, -100.482, 38.0054, 0.55", "-18.4342, -107.114, 42.7891, 0.55", "-24.2338, -112.849, 47.9681, 0.55", "-30.8262, -117.459, 53.3202, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-9.42799, -92.911, 33.4072, 0.55", "-12.4433, -102.294, 41.3026, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "17.1322, -130.125, 14.6059, 0.55", "17.4468, -131.852, 15.0755, 0.55", "17.931, -134.057, 15.6864, 0.55", "18.382, -136.14, 16.2533, 0.55", "18.6752, -137.621, 16.6473, 0.55", "19.15, -140.264, 17.3333, 0.55", "20.469, -147.715, 19.0384, 0.55", "20.9045, -150.256, 19.4915, 0.55", "21.1652, -152.054, 19.7325, 0.55", "21.382, -154.12, 19.8623, 0.55", "21.4463, -155.724, 19.8619, 0.55", "21.599, -159.49, 19.6714, 0.55", "21.6317, -162.344, 19.5804, 0.55", "21.7257, -164.217, 19.5368, 0.55", "22.098, -169.058, 19.6358, 0.55", "22.4143, -172.302, 19.8318, 0.55", "22.9741, -176.471, 20.2653, 0.55", "23.8709, -181.182, 21.0203, 0.55", "24.6997, -184.323, 21.6021, 0.55", "25.2555, -186.179, 21.9607, 0.55", "25.7388, -187.889, 22.3058, 0.55", "26.3215, -190.063, 22.6372, 0.55", "27.4681, -195.322, 23.1809, 0.55", "27.9243, -197.365, 23.2896, 0.55", "28.3791, -199.639, 23.4294, 0.55", "29.0288, -203.053, 23.6412, 0.55", "29.4431, -205.669, 23.8952, 0.55", "29.7001, -208.147, 24.1937, 0.55", "29.8591, -210.504, 24.5399, 0.55", "30.0014, -212.799, 24.9282, 0.55", "30.1013, -214.434, 25.1854, 0.55", "30.2245, -217.116, 25.52, 0.55", "30.1925, -220.349, 25.7457, 0.55", "30.1417, -221.929, 25.7344, 0.55", "30.049, -223.324, 25.6296, 0.55", "29.8825, -225.973, 25.2348, 0.55", "29.7365, -227.654, 24.9564, 0.55", "29.62, -229.723, 24.6634, 0.55", "29.544, -231.168, 24.5605, 0.55", "29.3759, -234.913, 24.4521, 0.55", "29.3092, -237.7, 24.5755, 0.55", "29.3515, -241.988, 25.0996, 0.55", "29.5799, -244.742, 25.6195, 0.55", "29.8562, -247.627, 26.2567, 0.28", "29.9712, -248.781, 26.5695, 0.28", "30.3887, -251.567, 27.5502, 0.28", "30.875, -254.125, 28.6428, 0.28", "31.9892, -257.503, 30.1981, 0.28", "34.1835, -265.289, 31.4545, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "17.1322, -130.125, 14.6059, 0.55", "19.3705, -130.916, 14.9091, 0.55", "23.9842, -132.894, 15.8781, 0.55", "27.9718, -134.823, 16.8909, 0.28", "32.2543, -137.003, 18.108, 0.55", "34.8549, -138.366, 19.1805, 0.28", "39.3797, -140.79, 21.4437, 0.55", "41.2782, -142.036, 22.924, 0.28", "41.9663, -142.478, 23.5809, 0.28", "43.1602, -143.096, 24.7202, 0.55", "47.851, -145.118, 28.7565, 0.28", "49.8568, -145.906, 30.3857, 0.55", "55.9784, -148.242, 34.5882, 0.28", "59.3252, -149.405, 36.6164, 0.28", "63.5112, -150.921, 38.8988, 0.55", "69.767, -153.327, 41.7575, 0.28", "70.6174, -153.653, 42.0534, 0.55", "74.8105, -155.266, 43.2297, 0.28", "75.191, -155.419, 43.2958, 0.55", "78.5377, -157.207, 44.0142, 0.28", "80.1278, -158.173, 44.461, 0.55", "93.2292, -165.314, 48.1893, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-30.8262, -117.459, 53.3202, 0.55", "-36.0634, -123.149, 63.4368, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-30.8262, -117.459, 53.3202, 0.55", "-34.1776, -121.73, 56.801, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "axon_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "axon_1", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_BP_b43315e986_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, axon_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, axon_1, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.49405, 8.69821, 2.92901, 0.83 ) }
    dend_43 { pt3dadd( -6.90982, 11.3457, 3.44415, 1.11 ) }
    dend_43 { pt3dadd( -8.92377, 12.9057, 3.71212, 0.83 ) }
    dend_43 { pt3dadd( -10.8804, 14.4081, 3.95222, 0.83 ) }
    dend_43 { pt3dadd( -12.0389, 15.2648, 4.08379, 1.11 ) }
    dend_43 { pt3dadd( -15.6667, 17.9418, 4.50546, 1.11 ) }
    dend_43 { pt3dadd( -22.1554, 22.525, 5.25085, 0.83 ) }
    dend_43 { pt3dadd( -24.4931, 24.1133, 5.49699, 0.83 ) }
    dend_43 { pt3dadd( -26.3443, 25.3336, 5.64988, 0.83 ) }
    dend_43 { pt3dadd( -28.1494, 26.543, 5.78223, 0.83 ) }
    dend_43 { pt3dadd( -29.6189, 27.5398, 5.85363, 0.55 ) }
    dend_43 { pt3dadd( -30.7234, 28.2147, 5.9261, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 5.12203, 6.46417, -6.37705, 0.55 ) }
    dend_28 { pt3dadd( 8.54661, 7.20498, -7.14182, 0.55 ) }
    dend_28 { pt3dadd( 10.5337, 7.39198, -8.15377, 0.83 ) }
    dend_28 { pt3dadd( 13.6788, 7.591, -10.0335, 0.55 ) }
    dend_28 { pt3dadd( 15.197, 7.68706, -10.9409, 1.38 ) }
    dend_28 { pt3dadd( 18.9298, 7.92327, -13.172, 0.55 ) }
    dend_28 { pt3dadd( 20.5197, 7.84328, -14.2366, 0.83 ) }
    dend_28 { pt3dadd( 28.7437, 6.37638, -20.2178, 0.55 ) }
    dend_28 { pt3dadd( 29.5394, 6.17911, -20.8759, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.681041, -10.2152, 3.13506, 1.11 ) }
    dend_1 { pt3dadd( -0.723517, -13.9629, 4.47861, 1.11 ) }
    dend_1 { pt3dadd( -0.740816, -15.4892, 5.02578, 0.83 ) }
    dend_1 { pt3dadd( -0.763798, -17.517, 5.75274, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.754508, 9.6497, -1.35849, 1.11 ) }
    dend_0 { pt3dadd( 0.705751, 11.4545, -1.35599, 1.11 ) }
    dend_0 { pt3dadd( 0.586322, 14.3985, -1.25179, 1.38 ) }
    dend_0 { pt3dadd( 0.581483, 14.5626, -1.24233, 1.38 ) }
    dend_0 { pt3dadd( 0.631634, 16.6017, -1.06887, 0.83 ) }
    dend_0 { pt3dadd( 0.732807, 18.7634, -0.749945, 0.83 ) }
    dend_0 { pt3dadd( 0.955335, 21.2173, -0.0482012, 0.83 ) }
    dend_0 { pt3dadd( 1.11375, 22.1553, 0.359996, 0.83 ) }
    dend_0 { pt3dadd( 1.29314, 22.8403, 0.746436, 1.11 ) }
    dend_0 { pt3dadd( 1.87209, 24.5198, 1.77992, 0.55 ) }
    dend_0 { pt3dadd( 2.55091, 26.2803, 3.01037, 0.83 ) }
    dend_0 { pt3dadd( 3.52299, 28.1121, 4.4693, 0.55 ) }
    dend_0 { pt3dadd( 4.04859, 28.8822, 5.15669, 0.83 ) }
    dend_0 { pt3dadd( 4.76127, 29.9273, 6.19616, 0.55 ) }
    dend_0 { pt3dadd( 5.61513, 31.254, 7.56965, 0.55 ) }
    dend_0 { pt3dadd( 6.7574, 33.2413, 9.61865, 0.55 ) }
    dend_0 { pt3dadd( 8.01003, 35.5078, 11.8785, 0.55 ) }
    dend_0 { pt3dadd( 8.73548, 36.976, 13.5027, 0.55 ) }
    dend_0 { pt3dadd( 9.54674, 38.8288, 15.7308, 0.55 ) }
    dend_0 { pt3dadd( 9.70546, 39.201, 16.2286, 0.83 ) }
    dend_0 { pt3dadd( 10.1015, 40.1844, 17.6171, 0.55 ) }
    dend_0 { pt3dadd( 10.459, 40.9546, 18.7212, 0.83 ) }
    dend_0 { pt3dadd( 11.2421, 43.0389, 21.3201, 0.55 ) }
    dend_0 { pt3dadd( 11.5951, 43.8017, 22.1173, 0.83 ) }
    dend_0 { pt3dadd( 11.9857, 44.3722, 22.704, 0.55 ) }
    dend_0 { pt3dadd( 12.4078, 44.8685, 23.1914, 0.83 ) }
    dend_0 { pt3dadd( 13.396, 45.8052, 24.1427, 0.83 ) }
    dend_0 { pt3dadd( 14.7462, 47.0775, 25.2529, 0.83 ) }
    dend_0 { pt3dadd( 15.6049, 47.9134, 25.8232, 0.55 ) }
    dend_0 { pt3dadd( 16.253, 48.6297, 26.261, 0.55 ) }
    dend_0 { pt3dadd( 17.9632, 50.4823, 27.3786, 0.83 ) }
    dend_0 { pt3dadd( 19.0845, 51.6711, 28.0477, 0.55 ) }
    dend_0 { pt3dadd( 20.8156, 53.4175, 28.9839, 0.55 ) }
    dend_0 { pt3dadd( 22.4323, 54.8923, 29.7713, 0.55 ) }
    dend_0 { pt3dadd( 23.8959, 56.1477, 30.4331, 0.55 ) }
    dend_0 { pt3dadd( 25.7809, 57.6288, 31.178, 0.55 ) }
    dend_0 { pt3dadd( 26.9562, 58.3715, 31.5957, 0.55 ) }
    dend_0 { pt3dadd( 27.7943, 58.7995, 31.7801, 0.55 ) }
    dend_0 { pt3dadd( 28.9507, 59.1537, 31.9336, 0.55 ) }
    dend_0 { pt3dadd( 30.7371, 59.3978, 32.0301, 0.55 ) }
    dend_0 { pt3dadd( 31.8724, 59.4116, 32.0523, 0.55 ) }
    dend_0 { pt3dadd( 33.5017, 59.3884, 32.1931, 0.55 ) }
    dend_0 { pt3dadd( 36.5204, 59.4405, 32.72, 0.55 ) }
    dend_0 { pt3dadd( 38.8325, 59.5912, 33.2944, 0.55 ) }
    dend_0 { pt3dadd( 41.2314, 59.8709, 34.0457, 0.55 ) }
    dend_0 { pt3dadd( 42.7288, 60.1054, 34.6492, 0.55 ) }
    dend_0 { pt3dadd( 46.5135, 61.0951, 36.4762, 0.55 ) }
    dend_0 { pt3dadd( 48.6856, 61.872, 37.7337, 0.55 ) }
    dend_0 { pt3dadd( 50.2555, 62.5767, 38.8424, 0.55 ) }
    dend_0 { pt3dadd( 51.184, 63.1932, 39.555, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 52.2504, 64.0855, 40.3716, 0.55 ) }
    dend_0 { pt3dadd( 54.0981, 65.8207, 41.5585, 0.55 ) }
    dend_0 { pt3dadd( 54.5412, 66.2369, 41.7625, 0.55 ) }
    dend_0 { pt3dadd( 55.8455, 67.3567, 42.2561, 0.55 ) }
    dend_0 { pt3dadd( 57.0356, 68.5351, 42.702, 0.83 ) }
    dend_0 { pt3dadd( 57.6878, 69.188, 42.934, 0.55 ) }
    dend_0 { pt3dadd( 58.6683, 70.2979, 43.2369, 0.83 ) }
    dend_0 { pt3dadd( 63.3829, 76.2179, 46.2998, 0.83 ) }
    dend_0 { pt3dadd( 67.4959, 82.9014, 48.5514, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -30.7234, 28.2147, 5.9261, 0.55 ) }
    dend_55 { pt3dadd( -32.0339, 29.2854, 5.05287, 0.55 ) }
    dend_55 { pt3dadd( -33.4589, 30.4496, 4.10332, 0.55 ) }
    dend_55 { pt3dadd( -35.1786, 31.8545, 2.95742, 0.55 ) }
    dend_55 { pt3dadd( -36.5986, 33.0146, 2.01122, 0.83 ) }
    dend_55 { pt3dadd( -37.7886, 33.9868, 1.21831, 0.55 ) }
    dend_55 { pt3dadd( -39.9973, 35.7913, -0.253459, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -30.7234, 28.2147, 5.9261, 0.55 ) }
    dend_44 { pt3dadd( -32.847, 28.5704, 5.76913, 0.55 ) }
    dend_44 { pt3dadd( -35.0937, 28.8894, 5.82882, 0.55 ) }
    dend_44 { pt3dadd( -37.638, 29.25, 5.95877, 0.55 ) }
    dend_44 { pt3dadd( -41.3041, 29.7486, 6.48717, 0.55 ) }
    dend_44 { pt3dadd( -44.3589, 30.0866, 7.15314, 0.55 ) }
    dend_44 { pt3dadd( -47.5547, 30.3979, 7.99246, 0.55 ) }
    dend_44 { pt3dadd( -50.6227, 30.503, 9.15209, 0.55 ) }
    dend_44 { pt3dadd( -53.246, 30.3432, 10.4249, 0.55 ) }
    dend_44 { pt3dadd( -56.492, 29.9258, 12.3838, 0.55 ) }
    dend_44 { pt3dadd( -57.8908, 29.6467, 13.4453, 0.55 ) }
    dend_44 { pt3dadd( -59.3979, 29.3317, 14.6612, 0.55 ) }
    dend_44 { pt3dadd( -62.0601, 28.5583, 16.6893, 0.55 ) }
    dend_44 { pt3dadd( -63.4897, 28.1401, 17.534, 0.55 ) }
    dend_44 { pt3dadd( -64.9869, 27.6538, 18.412, 0.55 ) }
    dend_44 { pt3dadd( -66.778, 27.09, 19.2671, 0.55 ) }
    dend_44 { pt3dadd( -68.728, 26.5164, 20.1392, 0.55 ) }
    dend_44 { pt3dadd( -71.5144, 25.6878, 21.3216, 0.55 ) }
    dend_44 { pt3dadd( -75.2581, 24.8207, 22.5437, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 29.5394, 6.17911, -20.8759, 0.55 ) }
    dend_34 { pt3dadd( 34.482, 7.48506, -21.9287, 0.55 ) }
    dend_34 { pt3dadd( 37.3307, 8.07809, -22.9418, 0.55 ) }
    dend_34 { pt3dadd( 40.1422, 8.53736, -23.9855, 0.55 ) }
    dend_34 { pt3dadd( 42.0633, 8.77403, -24.6997, 0.55 ) }
    dend_34 { pt3dadd( 44.871, 9.05402, -25.7235, 0.55 ) }
    dend_34 { pt3dadd( 50.6955, 9.52545, -28.0326, 0.55 ) }
    dend_34 { pt3dadd( 57.3028, 10.0275, -31.0958, 0.55 ) }
    dend_34 { pt3dadd( 60.5066, 10.0744, -32.8088, 0.55 ) }
    dend_34 { pt3dadd( 62.2225, 10.0594, -33.8405, 0.55 ) }
    dend_34 { pt3dadd( 64.1038, 10.0538, -35.0483, 0.55 ) }
    dend_34 { pt3dadd( 67.461, 9.94916, -37.1925, 0.55 ) }
    dend_34 { pt3dadd( 68.6802, 9.83994, -38.0137, 0.55 ) }
    dend_34 { pt3dadd( 73.8413, 9.51577, -41.8884, 0.55 ) }
    dend_34 { pt3dadd( 77.4942, 9.35095, -44.9019, 0.55 ) }
    dend_34 { pt3dadd( 79.5973, 9.29848, -46.6941, 0.55 ) }
    dend_34 { pt3dadd( 81.6948, 9.22748, -48.4805, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 29.5394, 6.17911, -20.8759, 0.83 ) }
    dend_29 { pt3dadd( 31.8363, 7.13786, -20.757, 0.83 ) }
    dend_29 { pt3dadd( 33.1474, 7.69782, -20.7436, 0.55 ) }
    dend_29 { pt3dadd( 35.0787, 8.59583, -20.8635, 0.83 ) }
    dend_29 { pt3dadd( 36.3809, 9.23788, -20.9726, 0.55 ) }
    dend_29 { pt3dadd( 38.1845, 10.1605, -21.0892, 0.83 ) }
    dend_29 { pt3dadd( 40.3617, 11.2905, -21.1486, 0.55 ) }
    dend_29 { pt3dadd( 41.4468, 11.7776, -21.1547, 0.55 ) }
    dend_29 { pt3dadd( 43.9002, 12.5571, -21.0808, 0.83 ) }
    dend_29 { pt3dadd( 46.0964, 12.9569, -20.8046, 0.55 ) }
    dend_29 { pt3dadd( 47.3256, 13.1423, -20.5431, 0.83 ) }
    dend_29 { pt3dadd( 49.1815, 13.4145, -19.9611, 0.55 ) }
    dend_29 { pt3dadd( 51.864, 13.7736, -18.7986, 0.55 ) }
    dend_29 { pt3dadd( 55.5663, 14.0552, -17.0489, 0.55 ) }
    dend_29 { pt3dadd( 59.0848, 14.1534, -15.1813, 0.55 ) }
    dend_29 { pt3dadd( 61.8693, 14.1928, -13.6615, 0.55 ) }
    dend_29 { pt3dadd( 66.4636, 14.2719, -11.1288, 0.55 ) }
    dend_29 { pt3dadd( 69.8413, 14.4022, -9.18602, 0.55 ) }
    dend_29 { pt3dadd( 71.9076, 14.6208, -7.90673, 0.55 ) }
    dend_29 { pt3dadd( 75.7698, 15.3681, -5.43553, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.763798, -17.517, 5.75274, 0.83 ) }
    dend_11 { pt3dadd( -0.978956, -19.5394, 5.67746, 0.83 ) }
    dend_11 { pt3dadd( -1.18858, -21.5097, 5.60412, 0.83 ) }
    dend_11 { pt3dadd( -1.42263, -23.7096, 5.52223, 0.83 ) }
    dend_11 { pt3dadd( -1.54485, -24.8584, 5.47947, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.763798, -17.517, 5.75274, 0.55 ) }
    dend_2 { pt3dadd( -0.239859, -19.1424, 6.98375, 0.55 ) }
    dend_2 { pt3dadd( 0.189232, -21.1417, 8.55402, 0.55 ) }
    dend_2 { pt3dadd( 0.33426, -23.7802, 10.6676, 0.55 ) }
    dend_2 { pt3dadd( 0.315049, -24.8091, 11.5081, 0.83 ) }
    dend_2 { pt3dadd( -0.0123394, -27.445, 13.9236, 0.55 ) }
    dend_2 { pt3dadd( -0.295956, -28.8113, 15.1832, 0.55 ) }
    dend_2 { pt3dadd( -0.917345, -31.4705, 17.7377, 0.83 ) }
    dend_2 { pt3dadd( -1.50741, -33.45, 19.7454, 0.55 ) }
    dend_2 { pt3dadd( -2.13489, -35.0895, 21.3586, 0.55 ) }
    dend_2 { pt3dadd( -3.38539, -38.1978, 24.3498, 0.55 ) }
    dend_2 { pt3dadd( -4.37602, -40.6752, 26.7054, 0.55 ) }
    dend_2 { pt3dadd( -5.13384, -42.6593, 28.6263, 0.55 ) }
    dend_2 { pt3dadd( -5.8157, -44.7609, 30.6142, 0.28 ) }
    dend_2 { pt3dadd( -6.02276, -45.633, 31.4179, 0.55 ) }
    dend_2 { pt3dadd( -6.35234, -47.2422, 32.8167, 0.28 ) }
    dend_2 { pt3dadd( -6.4789, -49.7397, 34.6542, 0.55 ) }
    dend_2 { pt3dadd( -8.95552, -58.1387, 40.9699, 0.55 ) }
    dend_2 { pt3dadd( -11.7571, -65.9134, 47.9177, 0.55 ) }
    dend_2 { pt3dadd( -14.3054, -72.2935, 56.2463, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -39.9973, 35.7913, -0.253459, 0.55 ) }
    dend_61 { pt3dadd( -43.1428, 36.0245, 1.10404, 0.55 ) }
    dend_61 { pt3dadd( -44.4811, 36.0367, 1.82399, 0.83 ) }
    dend_61 { pt3dadd( -46.0648, 35.9554, 2.85527, 0.55 ) }
    dend_61 { pt3dadd( -47.2853, 35.8814, 3.74756, 0.83 ) }
    dend_61 { pt3dadd( -50.4786, 35.7963, 6.07109, 0.55 ) }
    dend_61 { pt3dadd( -51.688, 35.7819, 6.96186, 0.28 ) }
    dend_61 { pt3dadd( -53.7172, 35.7614, 8.60854, 0.55 ) }
    dend_61 { pt3dadd( -56.4386, 35.75, 10.8079, 0.55 ) }
    dend_61 { pt3dadd( -58.4976, 35.7516, 12.3896, 0.55 ) }
    dend_61 { pt3dadd( -61.2415, 35.7622, 14.4205, 0.28 ) }
    dend_61 { pt3dadd( -61.9477, 35.7788, 14.8682, 0.55 ) }
    dend_61 { pt3dadd( -63.4045, 35.8351, 15.7444, 0.28 ) }
    dend_61 { pt3dadd( -64.3859, 35.9074, 16.2541, 0.55 ) }
    dend_61 { pt3dadd( -66.3761, 36.0598, 17.127, 0.28 ) }
    dend_61 { pt3dadd( -67.5412, 36.0937, 17.5741, 0.55 ) }
    dend_61 { pt3dadd( -69.602, 36.0071, 18.3632, 0.28 ) }
    dend_61 { pt3dadd( -70.9825, 35.9453, 18.8455, 0.55 ) }
    dend_61 { pt3dadd( -79.7075, 34.5269, 25.3199, 0.55 ) }
    dend_61 { pt3dadd( -87.8056, 32.0008, 32.255, 0.55 ) }
    dend_61 { pt3dadd( -95.6394, 28.4504, 39.0433, 0.55 ) }
    dend_61 { pt3dadd( -103.413, 23.7195, 45.1458, 0.55 ) }
    dend_61 { pt3dadd( -110.089, 19.2466, 52.5942, 0.55 ) }
    dend_61 { pt3dadd( -117.515, 15.2481, 59.5885, 0.55 ) }
    dend_61 { pt3dadd( -125.062, 12.9649, 67.1965, 0.55 ) }
    dend_61 { pt3dadd( -132.581, 9.84536, 74.531, 0.55 ) }
    dend_61 { pt3dadd( -139.911, 7.39718, 82.2979, 0.55 ) }
    dend_61 { pt3dadd( -146.778, 4.73537, 90.4108, 0.55 ) }
    dend_61 { pt3dadd( -152.645, 0.777334, 98.7752, 0.55 ) }
    dend_61 { pt3dadd( -158.607, -2.20291, 107.471, 0.55 ) }
    dend_61 { pt3dadd( -164.702, -6.20746, 115.649, 0.55 ) }
    dend_61 { pt3dadd( -169.594, -10.7706, 124.326, 0.55 ) }
    dend_61 { pt3dadd( -172.74, -14.7671, 134.031, 0.55 ) }
    dend_61 { pt3dadd( -175.797, -20.6498, 142.755, 0.55 ) }
    dend_61 { pt3dadd( -177.317, -26.8071, 151.69, 0.55 ) }
    dend_61 { pt3dadd( -179.42, -32.5142, 160.804, 0.55 ) }
    dend_61 { pt3dadd( -182.674, -37.4145, 170.047, 0.55 ) }
    dend_61 { pt3dadd( -188.103, -40.5091, 179.048, 0.55 ) }
    dend_61 { pt3dadd( -192.633, -44.8448, 188.034, 0.55 ) }
    dend_61 { pt3dadd( -195.183, -47.5851, 198.331, 0.55 ) }
    dend_61 { pt3dadd( -199.41, -49.4202, 208.272, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -39.9973, 35.7913, -0.253459, 0.55 ) }
    dend_56 { pt3dadd( -41.069, 37.1657, -2.33469, 0.55 ) }
    dend_56 { pt3dadd( -41.7042, 38.6475, -4.50346, 0.55 ) }
    dend_56 { pt3dadd( -42.2212, 40.3481, -6.7155, 0.55 ) }
    dend_56 { pt3dadd( -42.545, 41.4129, -8.10065, 0.55 ) }
    dend_56 { pt3dadd( -43.1355, 43.3553, -10.6273, 0.83 ) }
    dend_56 { pt3dadd( -43.5675, 44.7764, -12.4759, 0.55 ) }
    dend_56 { pt3dadd( -43.886, 46.7533, -15.1306, 0.83 ) }
    dend_56 { pt3dadd( -43.8466, 47.9788, -16.5252, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -75.2581, 24.8207, 22.5437, 0.28 ) }
    dend_48 { pt3dadd( -76.5692, 22.7714, 21.7675, 0.28 ) }
    dend_48 { pt3dadd( -77.1918, 21.9059, 21.3548, 0.28 ) }
    dend_48 { pt3dadd( -78.0068, 20.6874, 20.7227, 0.55 ) }
    dend_48 { pt3dadd( -78.6821, 19.6125, 20.1772, 0.28 ) }
    dend_48 { pt3dadd( -79.6809, 17.9701, 19.3686, 0.55 ) }
    dend_48 { pt3dadd( -82.4717, 13.1225, 17.0773, 0.28 ) }
    dend_48 { pt3dadd( -83.3891, 11.4437, 16.1286, 0.55 ) }
    dend_48 { pt3dadd( -84.7816, 8.87285, 14.5727, 0.28 ) }
    dend_48 { pt3dadd( -85.5853, 7.34625, 13.5666, 0.55 ) }
    dend_48 { pt3dadd( -86.1404, 6.29881, 12.8453, 0.28 ) }
    dend_48 { pt3dadd( -86.7736, 5.09468, 12.0283, 0.55 ) }
    dend_48 { pt3dadd( -88.7052, 1.05027, 9.41117, 0.28 ) }
    dend_48 { pt3dadd( -89.3108, -0.164461, 8.57211, 0.55 ) }
    dend_48 { pt3dadd( -90.358, -1.98184, 7.0769, 0.28 ) }
    dend_48 { pt3dadd( -91.2036, -3.11887, 6.00421, 0.28 ) }
    dend_48 { pt3dadd( -91.949, -3.8644, 5.25351, 0.55 ) }
    dend_48 { pt3dadd( -94.5182, -5.94475, 3.21076, 0.28 ) }
    dend_48 { pt3dadd( -95.7054, -6.78317, 2.40338, 0.55 ) }
    dend_48 { pt3dadd( -98.6032, -8.65979, 0.420581, 0.28 ) }
    dend_48 { pt3dadd( -101.49, -10.2966, -1.38747, 0.28 ) }
    dend_48 { pt3dadd( -104.619, -11.8234, -3.21651, 0.28 ) }
    dend_48 { pt3dadd( -106.045, -12.3851, -3.91595, 0.55 ) }
    dend_48 { pt3dadd( -113.111, -19.4443, -9.23669, 0.55 ) }
    dend_48 { pt3dadd( -120.929, -26.9341, -12.5333, 0.55 ) }
    dend_48 { pt3dadd( -128.581, -33.7154, -17.3848, 0.55 ) }
    dend_48 { pt3dadd( -136.393, -39.6364, -23.0413, 0.55 ) }
    dend_48 { pt3dadd( -144.267, -44.5916, -29.4853, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -75.2581, 24.8207, 22.5437, 0.55 ) }
    dend_45 { pt3dadd( -76.0927, 24.7498, 22.7103, 0.55 ) }
    dend_45 { pt3dadd( -78.4287, 24.574, 23.4881, 0.55 ) }
    dend_45 { pt3dadd( -79.3035, 24.4882, 23.8297, 0.55 ) }
    dend_45 { pt3dadd( -81.3581, 24.2251, 24.6693, 0.55 ) }
    dend_45 { pt3dadd( -84.5275, 23.8426, 25.8022, 0.55 ) }
    dend_45 { pt3dadd( -86.1768, 23.6934, 26.3575, 0.28 ) }
    dend_45 { pt3dadd( -88.7459, 23.4009, 27.1745, 0.55 ) }
    dend_45 { pt3dadd( -90.6574, 23.139, 27.7142, 0.55 ) }
    dend_45 { pt3dadd( -91.4644, 23.0231, 27.9443, 0.28 ) }
    dend_45 { pt3dadd( -96.3055, 22.3247, 29.3178, 0.55 ) }
    dend_45 { pt3dadd( -98.5752, 21.8827, 29.8266, 0.28 ) }
    dend_45 { pt3dadd( -101.646, 21.2622, 30.3322, 0.28 ) }
    dend_45 { pt3dadd( -104.304, 20.7556, 30.6089, 0.55 ) }
    dend_45 { pt3dadd( -114.561, 20.4623, 33.8477, 0.55 ) }
    dend_45 { pt3dadd( -124.392, 19.9797, 38.195, 0.55 ) }
    dend_45 { pt3dadd( -133.567, 18.4838, 43.6136, 0.55 ) }
    dend_45 { pt3dadd( -142.434, 18.8467, 49.6979, 0.55 ) }
    dend_45 { pt3dadd( -149.851, 18.9863, 57.4925, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -155.64, 19.8242, 66.524, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 81.6948, 9.22748, -48.4805, 0.55 ) }
    dend_42 { pt3dadd( 85.9605, 10.3823, -52.1814, 0.55 ) }
    dend_42 { pt3dadd( 87.3161, 10.6732, -53.4269, 0.55 ) }
    dend_42 { pt3dadd( 89.0178, 10.9846, -54.956, 0.55 ) }
    dend_42 { pt3dadd( 92.1114, 11.4917, -57.9082, 0.55 ) }
    dend_42 { pt3dadd( 95.3546, 11.8741, -61.0469, 0.55 ) }
    dend_42 { pt3dadd( 96.9517, 11.9407, -62.52, 0.83 ) }
    dend_42 { pt3dadd( 98.2767, 11.8889, -63.816, 0.55 ) }
    dend_42 { pt3dadd( 99.2773, 11.7524, -64.8704, 0.83 ) }
    dend_42 { pt3dadd( 101.724, 11.065, -67.5194, 0.55 ) }
    dend_42 { pt3dadd( 103.755, 10.3143, -69.6833, 0.55 ) }
    dend_42 { pt3dadd( 106.092, 9.45422, -72.0589, 0.55 ) }
    dend_42 { pt3dadd( 108.687, 8.55987, -74.767, 0.55 ) }
    dend_42 { pt3dadd( 110.432, 7.91327, -76.6184, 0.55 ) }
    dend_42 { pt3dadd( 112.403, 7.16779, -78.7664, 0.55 ) }
    dend_42 { pt3dadd( 114.102, 6.56235, -80.7467, 0.55 ) }
    dend_42 { pt3dadd( 115.164, 6.25274, -82.1455, 0.55 ) }
    dend_42 { pt3dadd( 116.535, 5.61359, -84.9732, 0.55 ) }
    dend_42 { pt3dadd( 117.294, 5.14844, -86.7324, 0.55 ) }
    dend_42 { pt3dadd( 117.981, 4.39644, -89.053, 0.55 ) }
    dend_42 { pt3dadd( 118.959, 2.98595, -92.9549, 0.55 ) }
    dend_42 { pt3dadd( 119.165, 2.63213, -93.8288, 0.28 ) }
    dend_42 { pt3dadd( 121.812, -1.78058, -104.431, 0.28 ) }
    dend_42 { pt3dadd( 122.685, -3.04454, -107.546, 0.83 ) }
    dend_42 { pt3dadd( 126.091, -7.70532, -118.558, 0.83 ) }
    dend_42 { pt3dadd( 127.837, -10.0702, -123.634, 0.83 ) }
    dend_42 { pt3dadd( 128.667, -11.1054, -125.673, 0.55 ) }
    dend_42 { pt3dadd( 129.603, -12.1122, -127.657, 0.55 ) }
    dend_42 { pt3dadd( 132.104, -14.0013, -131.313, 0.55 ) }
    dend_42 { pt3dadd( 134.748, -15.6566, -134.515, 0.28 ) }
    dend_42 { pt3dadd( 135.518, -15.8641, -134.668, 0.55 ) }
    dend_42 { pt3dadd( 137.192, -16.1064, -134.441, 0.28 ) }
    dend_42 { pt3dadd( 138.219, -16.1597, -134.168, 0.55 ) }
    dend_42 { pt3dadd( 139.289, -16.2139, -133.79, 0.28 ) }
    dend_42 { pt3dadd( 140.566, -16.2059, -133.29, 0.55 ) }
    dend_42 { pt3dadd( 142.472, -16.1288, -132.76, 0.28 ) }
    dend_42 { pt3dadd( 144.007, -16.122, -132.376, 0.55 ) }
    dend_42 { pt3dadd( 145.699, -16.0262, -132.105, 0.28 ) }
    dend_42 { pt3dadd( 148.002, -15.923, -131.94, 0.55 ) }
    dend_42 { pt3dadd( 150.583, -15.7744, -131.918, 0.55 ) }
    dend_42 { pt3dadd( 152.853, -15.6428, -132.053, 0.28 ) }
    dend_42 { pt3dadd( 155.995, -15.4617, -132.417, 0.55 ) }
    dend_42 { pt3dadd( 161.425, -15.0984, -133.645, 0.55 ) }
    dend_42 { pt3dadd( 163.818, -14.8643, -134.496, 0.55 ) }
    dend_42 { pt3dadd( 164.845, -14.7401, -134.979, 0.83 ) }
    dend_42 { pt3dadd( 166.804, -14.5201, -136.08, 0.55 ) }
    dend_42 { pt3dadd( 168.16, -14.3273, -136.938, 0.83 ) }
    dend_42 { pt3dadd( 171.799, -13.72, -139.306, 0.55 ) }
    dend_42 { pt3dadd( 174.037, -13.5119, -140.783, 0.28 ) }
    dend_42 { pt3dadd( 174.983, -13.4645, -141.289, 0.55 ) }
    dend_42 { pt3dadd( 177.589, -13.5224, -142.351, 0.28 ) }
    dend_42 { pt3dadd( 178.508, -13.6149, -142.649, 0.55 ) }
    dend_42 { pt3dadd( 180.408, -13.872, -142.958, 0.28 ) }
    dend_42 { pt3dadd( 182.352, -14.26, -142.915, 0.55 ) }
    dend_42 { pt3dadd( 186.284, -15.1322, -142.126, 0.28 ) }
    dend_42 { pt3dadd( 188.1, -15.5793, -141.562, 0.55 ) }
    dend_42 { pt3dadd( 190.812, -16.3694, -140.559, 0.28 ) }
    dend_42 { pt3dadd( 194.235, -17.3342, -139.175, 0.55 ) }
    dend_42 { pt3dadd( 196.707, -17.9929, -138.142, 0.55 ) }
    dend_42 { pt3dadd( 200.975, -18.9933, -136.306, 0.28 ) }
    dend_42 { pt3dadd( 202.722, -19.3499, -135.706, 0.55 ) }
    dend_42 { pt3dadd( 205.725, -19.8539, -135.022, 0.28 ) }
    dend_42 { pt3dadd( 208.702, -20.1692, -134.58, 0.55 ) }
    dend_42 { pt3dadd( 210.322, -20.2006, -134.592, 0.28 ) }
    dend_42 { pt3dadd( 211.771, -20.0552, -134.749, 0.55 ) }
    dend_42 { pt3dadd( 215.845, -19.4693, -135.619, 0.28 ) }
    dend_42 { pt3dadd( 218.737, -18.8586, -136.323, 0.28 ) }
    dend_42 { pt3dadd( 221.236, -18.1505, -137.003, 0.55 ) }
    dend_42 { pt3dadd( 223.99, -17.3155, -137.91, 0.28 ) }
    dend_42 { pt3dadd( 224.679, -17.0571, -138.123, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 81.6948, 9.22748, -48.4805, 0.55 ) }
    dend_35 { pt3dadd( 82.4168, 6.9744, -49.9552, 0.55 ) }
    dend_35 { pt3dadd( 82.8574, 5.0552, -51.0669, 0.28 ) }
    dend_35 { pt3dadd( 83.2592, 3.29606, -51.9349, 0.55 ) }
    dend_35 { pt3dadd( 84.3016, -0.419655, -53.8114, 0.28 ) }
    dend_35 { pt3dadd( 84.3608, -0.653768, -53.9626, 0.55 ) }
    dend_35 { pt3dadd( 84.7048, -1.87737, -54.8563, 0.28 ) }
    dend_35 { pt3dadd( 84.8965, -2.89488, -55.7566, 0.55 ) }
    dend_35 { pt3dadd( 85.0363, -3.96038, -56.8175, 0.28 ) }
    dend_35 { pt3dadd( 85.1846, -5.41618, -58.3318, 0.55 ) }
    dend_35 { pt3dadd( 85.5546, -9.07229, -62.0648, 0.55 ) }
    dend_35 { pt3dadd( 85.8538, -12.4068, -65.5263, 0.55 ) }
    dend_35 { pt3dadd( 86.0668, -15.0737, -68.2965, 0.55 ) }
    dend_35 { pt3dadd( 86.2285, -17.6987, -70.9725, 0.55 ) }
    dend_35 { pt3dadd( 86.2681, -18.3773, -71.6351, 0.28 ) }
    dend_35 { pt3dadd( 86.3309, -19.101, -72.2829, 0.55 ) }
    dend_35 { pt3dadd( 86.5106, -20.0981, -73.0882, 0.28 ) }
    dend_35 { pt3dadd( 87.0133, -21.8747, -74.3693, 0.55 ) }
    dend_35 { pt3dadd( 88.2661, -25.2611, -76.2831, 0.55 ) }
    dend_35 { pt3dadd( 88.9558, -27.082, -77.1479, 0.28 ) }
    dend_35 { pt3dadd( 89.5495, -28.9395, -78.1077, 0.55 ) }
    dend_35 { pt3dadd( 90.1913, -31.5526, -79.5487, 0.28 ) }
    dend_35 { pt3dadd( 90.5754, -33.6698, -80.7602, 0.55 ) }
    dend_35 { pt3dadd( 91.0165, -36.8438, -82.5766, 0.28 ) }
    dend_35 { pt3dadd( 91.4964, -40.1269, -84.3554, 0.55 ) }
    dend_35 { pt3dadd( 92.1309, -44.8974, -86.9793, 0.28 ) }
    dend_35 { pt3dadd( 92.4146, -47.4438, -88.3857, 0.55 ) }
    dend_35 { pt3dadd( 92.6632, -50.0508, -89.885, 0.28 ) }
    dend_35 { pt3dadd( 92.8585, -52.3474, -91.3459, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 93.1995, -55.2136, -93.4185, 0.55 ) }
    dend_35 { pt3dadd( 93.6964, -57.8596, -95.2754, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 75.7698, 15.3681, -5.43553, 0.55 ) }
    dend_31 { pt3dadd( 77.4753, 14.7926, -5.25306, 0.55 ) }
    dend_31 { pt3dadd( 78.7048, 14.3562, -5.25042, 0.55 ) }
    dend_31 { pt3dadd( 81.3847, 13.4063, -5.39502, 0.55 ) }
    dend_31 { pt3dadd( 82.5805, 12.982, -5.57564, 0.55 ) }
    dend_31 { pt3dadd( 83.8875, 12.5646, -5.83372, 0.55 ) }
    dend_31 { pt3dadd( 85.6424, 12.068, -6.29973, 0.55 ) }
    dend_31 { pt3dadd( 87.4764, 11.5406, -6.9837, 0.55 ) }
    dend_31 { pt3dadd( 88.4314, 11.2801, -7.45964, 0.55 ) }
    dend_31 { pt3dadd( 90.3591, 10.821, -8.70332, 0.55 ) }
    dend_31 { pt3dadd( 91.247, 10.6249, -9.30383, 0.55 ) }
    dend_31 { pt3dadd( 93.3169, 10.1383, -10.7781, 0.55 ) }
    dend_31 { pt3dadd( 94.7085, 9.7466, -11.7792, 0.55 ) }
    dend_31 { pt3dadd( 95.7338, 9.43872, -12.468, 0.83 ) }
    dend_31 { pt3dadd( 97.3608, 8.8774, -13.565, 0.55 ) }
    dend_31 { pt3dadd( 98.9421, 8.22781, -14.5938, 0.83 ) }
    dend_31 { pt3dadd( 100.275, 7.59711, -15.4316, 0.55 ) }
    dend_31 { pt3dadd( 101.467, 7.03705, -16.1047, 0.55 ) }
    dend_31 { pt3dadd( 102.153, 6.73999, -16.4388, 0.83 ) }
    dend_31 { pt3dadd( 103.76, 6.0284, -17.1268, 0.28 ) }
    dend_31 { pt3dadd( 104.568, 5.69551, -17.4059, 0.28 ) }
    dend_31 { pt3dadd( 105.338, 5.33255, -17.7318, 0.28 ) }
    dend_31 { pt3dadd( 106.175, 4.96485, -18.0821, 0.28 ) }
    dend_31 { pt3dadd( 107.518, 4.41071, -18.6654, 0.28 ) }
    dend_31 { pt3dadd( 108.061, 4.19035, -18.8812, 0.55 ) }
    dend_31 { pt3dadd( 109.368, 3.64252, -19.2592, 0.55 ) }
    dend_31 { pt3dadd( 111.722, 2.60067, -19.8208, 0.55 ) }
    dend_31 { pt3dadd( 112.371, 2.28667, -19.9507, 0.55 ) }
    dend_31 { pt3dadd( 112.949, 1.97969, -20.0455, 0.83 ) }
    dend_31 { pt3dadd( 114.217, 1.32576, -20.1337, 0.55 ) }
    dend_31 { pt3dadd( 115.321, 0.754777, -20.1913, 0.55 ) }
    dend_31 { pt3dadd( 116.365, 0.218535, -20.2395, 0.55 ) }
    dend_31 { pt3dadd( 117.17, -0.205144, -20.3045, 0.55 ) }
    dend_31 { pt3dadd( 118.425, -0.952599, -20.497, 0.55 ) }
    dend_31 { pt3dadd( 119.872, -1.94865, -20.8469, 0.55 ) }
    dend_31 { pt3dadd( 122.059, -3.72575, -21.634, 0.55 ) }
    dend_31 { pt3dadd( 123.217, -4.87594, -22.2031, 0.55 ) }
    dend_31 { pt3dadd( 124.178, -6.05607, -22.8069, 0.28 ) }
    dend_31 { pt3dadd( 124.449, -6.47887, -23.0271, 0.55 ) }
    dend_31 { pt3dadd( 124.999, -7.6349, -23.6148, 0.28 ) }
    dend_31 { pt3dadd( 125.412, -8.90773, -24.2302, 0.55 ) }
    dend_31 { pt3dadd( 125.728, -10.4973, -24.8562, 0.55 ) }
    dend_31 { pt3dadd( 125.95, -11.5562, -25.2199, 0.28 ) }
    dend_31 { pt3dadd( 126.034, -11.9356, -25.3313, 0.55 ) }
    dend_31 { pt3dadd( 126.263, -12.8837, -25.5971, 0.28 ) }
    dend_31 { pt3dadd( 126.587, -14.1283, -25.917, 0.55 ) }
    dend_31 { pt3dadd( 127.482, -17.161, -26.6275, 0.55 ) }
    dend_31 { pt3dadd( 127.96, -18.7005, -26.9579, 0.55 ) }
    dend_31 { pt3dadd( 128.408, -20.1157, -27.2499, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 75.7698, 15.3681, -5.43553, 0.55 ) }
    dend_30 { pt3dadd( 77.5689, 15.4612, -3.94516, 0.55 ) }
    dend_30 { pt3dadd( 78.1475, 15.4871, -3.49973, 0.55 ) }
    dend_30 { pt3dadd( 80.2969, 15.4727, -1.93191, 0.55 ) }
    dend_30 { pt3dadd( 82.6999, 15.507, -0.146635, 0.55 ) }
    dend_30 { pt3dadd( 85.7741, 15.5483, 2.22599, 0.55 ) }
    dend_30 { pt3dadd( 86.6237, 15.5604, 2.87545, 0.55 ) }
    dend_30 { pt3dadd( 88.142, 15.5213, 4.0272, 0.55 ) }
    dend_30 { pt3dadd( 89.8148, 15.5144, 5.22338, 0.55 ) }
    dend_30 { pt3dadd( 91.7712, 15.5576, 6.52225, 0.55 ) }
    dend_30 { pt3dadd( 93.6175, 15.6252, 7.75212, 0.55 ) }
    dend_30 { pt3dadd( 94.6384, 15.7067, 8.37731, 0.55 ) }
    dend_30 { pt3dadd( 95.841, 15.8371, 9.10812, 0.55 ) }
    dend_30 { pt3dadd( 97.3351, 16.0405, 9.98376, 0.83 ) }
    dend_30 { pt3dadd( 99.7967, 16.3549, 11.1607, 0.55 ) }
    dend_30 { pt3dadd( 101.424, 16.4952, 11.8639, 0.83 ) }
    dend_30 { pt3dadd( 103.676, 16.5826, 12.7656, 0.55 ) }
    dend_30 { pt3dadd( 104.364, 16.5712, 13.0336, 0.55 ) }
    dend_30 { pt3dadd( 106.489, 16.4273, 13.8238, 0.55 ) }
    dend_30 { pt3dadd( 110.274, 15.9302, 15.0905, 0.55 ) }
    dend_30 { pt3dadd( 113.032, 15.4068, 15.9583, 0.55 ) }
    dend_30 { pt3dadd( 115.201, 14.8917, 16.7009, 0.55 ) }
    dend_30 { pt3dadd( 117.393, 14.2511, 17.5396, 0.55 ) }
    dend_30 { pt3dadd( 117.853, 14.1037, 17.7188, 0.28 ) }
    dend_30 { pt3dadd( 118.781, 13.7658, 18.0812, 0.83 ) }
    dend_30 { pt3dadd( 122.583, 12.3214, 19.594, 0.55 ) }
    dend_30 { pt3dadd( 125.247, 11.3115, 20.5978, 0.55 ) }
    dend_30 { pt3dadd( 127.436, 10.5434, 21.4779, 0.55 ) }
    dend_30 { pt3dadd( 128.743, 10.081, 22.017, 0.83 ) }
    dend_30 { pt3dadd( 129.773, 9.73263, 22.443, 0.28 ) }
    dend_30 { pt3dadd( 130.709, 9.4178, 22.82, 0.55 ) }
    dend_30 { pt3dadd( 138.146, 8.87042, 26.8071, 0.55 ) }
    dend_30 { pt3dadd( 145.963, 6.92701, 29.3835, 0.55 ) }
    dend_30 { pt3dadd( 153.84, 6.02125, 32.323, 0.55 ) }
    dend_30 { pt3dadd( 160.636, 4.12087, 36.9836, 0.55 ) }
    dend_30 { pt3dadd( 166.781, 1.177, 41.9926, 0.55 ) }
    dend_30 { pt3dadd( 173.521, -3.13552, 44.728, 0.55 ) }
    dend_30 { pt3dadd( 180.115, -8.26034, 46.0579, 0.55 ) }
    dend_30 { pt3dadd( 187.638, -12.0301, 46.8975, 0.55 ) }
    dend_30 { pt3dadd( 195.031, -15.8919, 48.2956, 0.55 ) }
    dend_30 { pt3dadd( 202.881, -18.9146, 49.1598, 0.55 ) }
    dend_30 { pt3dadd( 210.689, -21.5225, 51.0967, 0.55 ) }
    dend_30 { pt3dadd( 217.789, -25.4577, 53.4667, 0.55 ) }
    dend_30 { pt3dadd( 225.228, -27.922, 56.6457, 0.55 ) }
    dend_30 { pt3dadd( 232.419, -29.07, 60.9453, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.54485, -24.8584, 5.47947, 1.38 ) }
    dend_13 { pt3dadd( 1.24725, -28.2222, 4.16318, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.54485, -24.8584, 5.47947, 0.55 ) }
    dend_12 { pt3dadd( -2.9152, -26.3585, 5.95618, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.454, -28.3013, 6.48298, 0.55 ) }
    dend_12 { pt3dadd( -5.62734, -29.5737, 6.90632, 0.55 ) }
    dend_12 { pt3dadd( -6.66761, -30.6318, 7.11775, 0.55 ) }
    dend_12 { pt3dadd( -8.99557, -32.8077, 7.38774, 0.55 ) }
    dend_12 { pt3dadd( -10.6358, -34.2531, 7.53793, 0.55 ) }
    dend_12 { pt3dadd( -12.1124, -35.5484, 7.62352, 0.55 ) }
    dend_12 { pt3dadd( -15.8887, -38.6849, 7.84733, 0.55 ) }
    dend_12 { pt3dadd( -20.4025, -42.3036, 8.14801, 0.55 ) }
    dend_12 { pt3dadd( -23.9113, -45.0363, 8.32871, 0.55 ) }
    dend_12 { pt3dadd( -26.1654, -46.8352, 8.41584, 0.55 ) }
    dend_12 { pt3dadd( -28.7579, -49.0036, 8.52203, 0.55 ) }
    dend_12 { pt3dadd( -32.0668, -52.1506, 8.69181, 0.55 ) }
    dend_12 { pt3dadd( -34.0261, -54.4185, 8.82387, 0.55 ) }
    dend_12 { pt3dadd( -36.4211, -57.7192, 9.16224, 0.55 ) }
    dend_12 { pt3dadd( -38.3493, -60.841, 9.4938, 0.55 ) }
    dend_12 { pt3dadd( -40.3541, -64.7732, 9.85344, 0.55 ) }
    dend_12 { pt3dadd( -42.3011, -69.427, 10.2545, 0.55 ) }
    dend_12 { pt3dadd( -43.4219, -73.0176, 10.5229, 0.55 ) }
    dend_12 { pt3dadd( -43.8229, -74.8186, 10.7272, 0.55 ) }
    dend_12 { pt3dadd( -44.4445, -79.0794, 11.3408, 0.55 ) }
    dend_12 { pt3dadd( -44.9237, -83.0754, 11.9899, 0.55 ) }
    dend_12 { pt3dadd( -45.1103, -87.1275, 12.8557, 0.55 ) }
    dend_12 { pt3dadd( -45.1975, -89.454, 13.4798, 0.55 ) }
    dend_12 { pt3dadd( -45.3372, -96.6587, 15.6431, 0.55 ) }
    dend_12 { pt3dadd( -45.3476, -97.1891, 15.8123, 0.55 ) }
    dend_12 { pt3dadd( -45.3278, -100.445, 16.9027, 0.55 ) }
    dend_12 { pt3dadd( -45.4999, -106.249, 19.0716, 0.55 ) }
    dend_12 { pt3dadd( -45.6067, -108.186, 19.6924, 0.55 ) }
    dend_12 { pt3dadd( -46.0185, -111.191, 20.1997, 0.55 ) }
    dend_12 { pt3dadd( -46.2308, -112.303, 20.1363, 0.55 ) }
    dend_12 { pt3dadd( -47.0321, -116.057, 19.1922, 0.55 ) }
    dend_12 { pt3dadd( -47.597, -118.485, 18.0454, 0.55 ) }
    dend_12 { pt3dadd( -48.6648, -122.338, 15.4316, 0.55 ) }
    dend_12 { pt3dadd( -49.9135, -127.057, 11.8185, 0.28 ) }
    dend_12 { pt3dadd( -50.2588, -128.221, 10.768, 0.55 ) }
    dend_12 { pt3dadd( -50.8301, -129.98, 9.02384, 0.28 ) }
    dend_12 { pt3dadd( -50.9234, -130.245, 8.74828, 0.55 ) }
    dend_12 { pt3dadd( -51.4003, -131.696, 7.36236, 0.28 ) }
    dend_12 { pt3dadd( -51.5554, -132.19, 7.01282, 0.55 ) }
    dend_12 { pt3dadd( -52.2472, -134.765, 5.69265, 0.28 ) }
    dend_12 { pt3dadd( -52.5111, -135.638, 5.26573, 0.55 ) }
    dend_12 { pt3dadd( -53.2555, -138.167, 4.18021, 0.28 ) }
    dend_12 { pt3dadd( -53.4854, -138.963, 3.84006, 0.55 ) }
    dend_12 { pt3dadd( -54.2848, -141.71, 2.71713, 0.28 ) }
    dend_12 { pt3dadd( -54.6485, -142.974, 2.1921, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -14.3054, -72.2935, 56.2463, 0.55 ) }
    dend_10 { pt3dadd( -18.7326, -80.1403, 62.3064, 0.55 ) }
    dend_10 { pt3dadd( -24.392, -87.247, 68.2532, 0.55 ) }
    dend_10 { pt3dadd( -29.5122, -95.0016, 73.8698, 0.55 ) }
    dend_10 { pt3dadd( -34.7494, -102.828, 79.2748, 0.55 ) }
    dend_10 { pt3dadd( -38.4963, -111.65, 84.3761, 0.55 ) }
    dend_10 { pt3dadd( -42.3611, -120.108, 89.9828, 0.55 ) }
    dend_10 { pt3dadd( -44.16, -130.017, 94.04, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -14.3054, -72.2935, 56.2463, 0.55 ) }
    dend_3 { pt3dadd( -14.1221, -81.7905, 65.6017, 0.55 ) }
    dend_3 { pt3dadd( -13.0923, -92.7299, 73.1526, 0.55 ) }
    dend_3 { pt3dadd( -14.1756, -103.873, 80.3911, 0.55 ) }
    dend_3 { pt3dadd( -15.8311, -115.697, 86.3252, 0.55 ) }
    dend_3 { pt3dadd( -16.9827, -127.442, 92.5277, 0.55 ) }
    dend_3 { pt3dadd( -18.1628, -138.705, 99.5631, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -43.8466, 47.9788, -16.5252, 0.83 ) }
    dend_60 { pt3dadd( -43.2455, 49.4895, -17.6601, 0.83 ) }
    dend_60 { pt3dadd( -41.9244, 53.1052, -20.164, 0.55 ) }
    dend_60 { pt3dadd( -41.3742, 54.6482, -21.1291, 0.83 ) }
    dend_60 { pt3dadd( -40.7988, 56.2843, -22.0597, 0.55 ) }
    dend_60 { pt3dadd( -40.2476, 57.9366, -22.8022, 0.55 ) }
    dend_60 { pt3dadd( -39.9828, 58.7524, -23.0761, 0.28 ) }
    dend_60 { pt3dadd( -39.8627, 59.2765, -23.1363, 0.55 ) }
    dend_60 { pt3dadd( -39.4764, 60.9721, -22.9703, 0.28 ) }
    dend_60 { pt3dadd( -39.2999, 61.6912, -22.8602, 0.55 ) }
    dend_60 { pt3dadd( -38.7352, 64.1782, -22.3814, 0.28 ) }
    dend_60 { pt3dadd( -38.3512, 66.142, -21.9436, 0.55 ) }
    dend_60 { pt3dadd( -37.9168, 69.2025, -21.1884, 0.28 ) }
    dend_60 { pt3dadd( -37.6397, 71.8899, -20.4882, 0.28 ) }
    dend_60 { pt3dadd( -37.5779, 73.394, -20.0812, 0.55 ) }
    dend_60 { pt3dadd( -37.6158, 75.1825, -19.6157, 0.28 ) }
    dend_60 { pt3dadd( -37.6925, 76.0367, -19.3908, 0.55 ) }
    dend_60 { pt3dadd( -37.9675, 78.0642, -18.9709, 0.28 ) }
    dend_60 { pt3dadd( -38.2281, 79.4296, -18.7758, 0.28 ) }
    dend_60 { pt3dadd( -38.5049, 80.7778, -18.6289, 0.28 ) }
    dend_60 { pt3dadd( -38.624, 81.4894, -18.5497, 0.55 ) }
    dend_60 { pt3dadd( -38.9428, 84.3725, -18.2702, 0.28 ) }
    dend_60 { pt3dadd( -39.1985, 87.7926, -17.982, 0.55 ) }
    dend_60 { pt3dadd( -39.2691, 88.9738, -17.8841, 0.55 ) }
    dend_60 { pt3dadd( -39.3628, 90.1551, -17.7642, 0.55 ) }
    dend_60 { pt3dadd( -39.6849, 92.6751, -17.5711, 0.55 ) }
    dend_60 { pt3dadd( -39.994, 94.338, -17.4963, 0.28 ) }
    dend_60 { pt3dadd( -40.1802, 94.9709, -17.488, 0.55 ) }
    dend_60 { pt3dadd( -40.807, 96.6829, -17.4502, 0.28 ) }
    dend_60 { pt3dadd( -41.5339, 98.5177, -17.4914, 0.55 ) }
    dend_60 { pt3dadd( -42.7971, 101.177, -17.6886, 0.28 ) }
    dend_60 { pt3dadd( -43.4327, 102.295, -17.8244, 0.28 ) }
    dend_60 { pt3dadd( -44.4792, 103.877, -18.1916, 0.55 ) }
    dend_60 { pt3dadd( -45.6572, 105.539, -18.6721, 0.28 ) }
    dend_60 { pt3dadd( -45.8761, 105.803, -18.7656, 0.55 ) }
    dend_60 { pt3dadd( -46.6765, 106.65, -19.1136, 0.28 ) }
    dend_60 { pt3dadd( -49.4663, 109.375, -20.2856, 0.55 ) }
    dend_60 { pt3dadd( -53.3574, 112.8, -22.1417, 0.28 ) }
    dend_60 { pt3dadd( -54.0734, 113.388, -22.541, 0.55 ) }
    dend_60 { pt3dadd( -56.0415, 114.923, -23.6883, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -56.8651, 115.558, -24.1973, 0.28 ) }
    dend_60 { pt3dadd( -57.5767, 116.095, -24.6816, 0.55 ) }
    dend_60 { pt3dadd( -59.6575, 117.408, -26.3265, 0.28 ) }
    dend_60 { pt3dadd( -61.1543, 118.153, -27.4495, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -43.8466, 47.9788, -16.5252, 0.55 ) }
    dend_57 { pt3dadd( -44.0665, 49.436, -16.2886, 0.55 ) }
    dend_57 { pt3dadd( -44.2421, 50.2711, -16.0832, 0.28 ) }
    dend_57 { pt3dadd( -44.5315, 50.8241, -15.8392, 0.55 ) }
    dend_57 { pt3dadd( -45.196, 52.094, -15.2789, 0.28 ) }
    dend_57 { pt3dadd( -45.6628, 52.9861, -14.8853, 0.55 ) }
    dend_57 { pt3dadd( -46.5232, 54.6305, -14.1597, 0.28 ) }
    dend_57 { pt3dadd( -47.1321, 55.4603, -13.6479, 0.55 ) }
    dend_57 { pt3dadd( -49.5038, 57.1913, -11.9007, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -144.267, -44.5916, -29.4853, 0.55 ) }
    dend_52 { pt3dadd( -150.06, -50.6277, -33.8546, 0.55 ) }
    dend_52 { pt3dadd( -154.403, -57.2411, -39.0013, 0.55 ) }
    dend_52 { pt3dadd( -157.959, -62.7577, -45.7845, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -144.267, -44.5916, -29.4853, 0.55 ) }
    dend_49 { pt3dadd( -150.847, -50.8511, -34.7999, 0.55 ) }
    dend_49 { pt3dadd( -156.327, -57.1492, -41.2051, 0.55 ) }
    dend_49 { pt3dadd( -161.384, -63.5999, -47.8035, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -155.64, 19.8242, 66.524, 0.55 ) }
    dend_47 { pt3dadd( -162.982, 20.0103, 72.1618, 0.55 ) }
    dend_47 { pt3dadd( -170.823, 21.3242, 76.9083, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -155.64, 19.8242, 66.524, 0.55 ) }
    dend_46 { pt3dadd( -165.881, 18.63, 70.5074, 0.55 ) }
    dend_46 { pt3dadd( -176.054, 19.2392, 74.7867, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 93.6964, -57.8596, -95.2754, 0.28 ) }
    dend_39 { pt3dadd( 101.343, -63.6863, -107.516, 0.28 ) }
    dend_39 { pt3dadd( 102.123, -64.289, -108.586, 0.55 ) }
    dend_39 { pt3dadd( 103.439, -65.3067, -110.393, 0.28 ) }
    dend_39 { pt3dadd( 104.548, -66.1635, -111.915, 0.28 ) }
    dend_39 { pt3dadd( 106.015, -67.2977, -113.928, 0.55 ) }
    dend_39 { pt3dadd( 107.949, -68.7931, -116.583, 0.55 ) }
    dend_39 { pt3dadd( 110.764, -70.6192, -117.752, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 93.6964, -57.8596, -95.2754, 0.55 ) }
    dend_36 { pt3dadd( 94.3634, -58.9457, -96.3704, 0.55 ) }
    dend_36 { pt3dadd( 94.5698, -59.4365, -96.8592, 0.28 ) }
    dend_36 { pt3dadd( 94.878, -60.2795, -97.7164, 0.55 ) }
    dend_36 { pt3dadd( 95.5569, -62.1367, -99.6046, 0.28 ) }
    dend_36 { pt3dadd( 96.0274, -63.4237, -100.914, 0.55 ) }
    dend_36 { pt3dadd( 96.8245, -65.6043, -103.131, 0.28 ) }
    dend_36 { pt3dadd( 97.724, -68.2732, -106.059, 0.28 ) }
    dend_36 { pt3dadd( 98.0838, -69.5026, -107.433, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 128.408, -20.1157, -27.2499, 0.28 ) }
    dend_33 { pt3dadd( 130.301, -23.5019, -26.6921, 0.28 ) }
    dend_33 { pt3dadd( 132.692, -27.9717, -25.5927, 0.28 ) }
    dend_33 { pt3dadd( 134.204, -30.8705, -24.7638, 0.55 ) }
    dend_33 { pt3dadd( 135.139, -32.4828, -24.2343, 0.28 ) }
    dend_33 { pt3dadd( 135.635, -33.3502, -23.9407, 0.28 ) }
    dend_33 { pt3dadd( 138.095, -37.6327, -22.5561, 0.55 ) }
    dend_33 { pt3dadd( 138.673, -38.59, -22.1291, 0.28 ) }
    dend_33 { pt3dadd( 140.023, -41.0975, -20.8314, 0.55 ) }
    dend_33 { pt3dadd( 141.165, -43.2732, -19.79, 0.28 ) }
    dend_33 { pt3dadd( 142.174, -45.0502, -18.9802, 0.55 ) }
    dend_33 { pt3dadd( 143.344, -47.1703, -18.1388, 0.55 ) }
    dend_33 { pt3dadd( 145.179, -50.5311, -17.2129, 0.55 ) }
    dend_33 { pt3dadd( 145.618, -51.3542, -17.0141, 0.55 ) }
    dend_33 { pt3dadd( 147.169, -54.4185, -16.3017, 0.28 ) }
    dend_33 { pt3dadd( 147.759, -55.6657, -16.041, 0.55 ) }
    dend_33 { pt3dadd( 148.603, -57.268, -15.7176, 0.28 ) }
    dend_33 { pt3dadd( 149.784, -59.5402, -15.3588, 0.55 ) }
    dend_33 { pt3dadd( 151.735, -63.1259, -15.3034, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 128.408, -20.1157, -27.2499, 0.55 ) }
    dend_32 { pt3dadd( 125.804, -19.8179, -27.0425, 0.55 ) }
    dend_32 { pt3dadd( 123.69, -19.5761, -26.8741, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.24725, -28.2222, 4.16318, 0.83 ) }
    dend_17 { pt3dadd( 1.34846, -28.4644, 4.12131, 0.83 ) }
    dend_17 { pt3dadd( 2.57919, -30.618, 3.82272, 0.83 ) }
    dend_17 { pt3dadd( 3.63492, -32.5027, 3.43857, 0.55 ) }
    dend_17 { pt3dadd( 4.47717, -34.0064, 3.1321, 0.55 ) }
    dend_17 { pt3dadd( 6.2674, -37.2024, 2.48069, 0.83 ) }
    dend_17 { pt3dadd( 8.43883, -41.0789, 1.69057, 0.55 ) }
    dend_17 { pt3dadd( 9.635, -43.1099, 1.30657, 0.83 ) }
    dend_17 { pt3dadd( 11.7969, -46.3488, 0.793134, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.24725, -28.2222, 4.16318, 0.55 ) }
    dend_14 { pt3dadd( -1.56386, -29.3808, 1.39249, 0.55 ) }
    dend_14 { pt3dadd( -4.58124, -30.6244, -1.5815, 0.55 ) }
    dend_14 { pt3dadd( -8.14329, -32.0924, -5.09232, 0.55 ) }
    dend_14 { pt3dadd( -12.4688, -33.8752, -9.35559, 0.55 ) }
    dend_14 { pt3dadd( -14.9234, -34.8868, -11.7748, 0.55 ) }
    dend_14 { pt3dadd( -15.4165, -35.09, -12.2608, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -18.1628, -138.705, 99.5631, 0.55 ) }
    dend_7 { pt3dadd( -18.2818, -144.57, 103.753, 0.55 ) }
    dend_7 { pt3dadd( -17.3783, -150.796, 107.271, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -18.1628, -138.705, 99.5631, 0.55 ) }
    dend_4 { pt3dadd( -19.1542, -148.436, 105.078, 0.55 ) }
    dend_4 { pt3dadd( -20.657, -157.923, 110.896, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -49.5038, 57.1913, -11.9007, 0.28 ) }
    dend_59 { pt3dadd( -51.4799, 57.9205, -10.6375, 0.28 ) }
    dend_59 { pt3dadd( -52.2556, 58.1637, -10.1008, 0.55 ) }
    dend_59 { pt3dadd( -54.5011, 58.8504, -8.50768, 0.28 ) }
    dend_59 { pt3dadd( -55.5791, 59.2328, -7.79171, 0.55 ) }
    dend_59 { pt3dadd( -58.479, 60.3077, -5.92993, 0.28 ) }
    dend_59 { pt3dadd( -61.4263, 61.4002, -4.03767, 0.55 ) }
    dend_59 { pt3dadd( -66.2904, 63.0104, -0.96626, 0.28 ) }
    dend_59 { pt3dadd( -67.3272, 63.3588, -0.308591, 0.55 ) }
    dend_59 { pt3dadd( -69.5965, 64.2547, 1.13477, 0.28 ) }
    dend_59 { pt3dadd( -70.489, 64.6419, 1.72115, 0.55 ) }
    dend_59 { pt3dadd( -79.3871, 66.7508, 5.39703, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -88.1122, 70.8386, 7.46987, 0.55 ) }
    dend_59 { pt3dadd( -96.4937, 74.5366, 11.1044, 0.55 ) }
    dend_59 { pt3dadd( -103.811, 79.3206, 15.6539, 0.55 ) }
    dend_59 { pt3dadd( -111.713, 84.114, 19.0757, 0.55 ) }
    dend_59 { pt3dadd( -120.523, 87.1906, 22.2478, 0.55 ) }
    dend_59 { pt3dadd( -129.243, 88.9335, 26.4968, 0.55 ) }
    dend_59 { pt3dadd( -137.565, 89.1617, 31.773, 0.55 ) }
    dend_59 { pt3dadd( -145.853, 90.0293, 37.0348, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -49.5038, 57.1913, -11.9007, 0.55 ) }
    dend_58 { pt3dadd( -51.8606, 56.1876, -12.505, 0.55 ) }
    dend_58 { pt3dadd( -53.0781, 55.6305, -12.8379, 0.28 ) }
    dend_58 { pt3dadd( -53.9841, 55.2158, -13.0856, 0.55 ) }
    dend_58 { pt3dadd( -54.7392, 54.8703, -13.292, 0.28 ) }
    dend_58 { pt3dadd( -55.2681, 54.6282, -13.4366, 0.55 ) }
    dend_58 { pt3dadd( -56.7265, 53.9607, -13.8353, 0.28 ) }
    dend_58 { pt3dadd( -57.6316, 53.4969, -14.233, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -157.959, -62.7577, -45.7845, 0.55 ) }
    dend_54 { pt3dadd( -161.79, -69.7379, -49.7099, 0.55 ) }
    dend_54 { pt3dadd( -165.354, -77.2492, -52.8222, 0.55 ) }
    dend_54 { pt3dadd( -168.414, -84.1789, -57.4509, 0.55 ) }
    dend_54 { pt3dadd( -172.24, -91.4266, -60.8632, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -157.959, -62.7577, -45.7845, 0.55 ) }
    dend_53 { pt3dadd( -161.843, -67.445, -52.6026, 0.55 ) }
    dend_53 { pt3dadd( -165.064, -71.095, -60.3385, 0.55 ) }
    dend_53 { pt3dadd( -169.255, -75.5729, -67.1152, 0.55 ) }
    dend_53 { pt3dadd( -175.108, -78.3744, -73.5521, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -161.384, -63.5999, -47.8035, 0.55 ) }
    dend_51 { pt3dadd( -166.349, -68.1533, -56.3321, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -161.384, -63.5999, -47.8035, 0.55 ) }
    dend_50 { pt3dadd( -166.046, -72.9767, -49.3013, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 110.764, -70.6192, -117.752, 0.28 ) }
    dend_41 { pt3dadd( 113.49, -72.1193, -119.094, 0.28 ) }
    dend_41 { pt3dadd( 114.756, -72.8161, -119.718, 0.55 ) }
    dend_41 { pt3dadd( 117.171, -74.1449, -120.907, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 110.764, -70.6192, -117.752, 0.55 ) }
    dend_40 { pt3dadd( 110.357, -71.7337, -119.177, 0.55 ) }
    dend_40 { pt3dadd( 109.545, -73.963, -122.027, 0.28 ) }
    dend_40 { pt3dadd( 109.28, -74.6892, -122.955, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 98.0838, -69.5026, -107.433, 0.28 ) }
    dend_38 { pt3dadd( 99.0369, -71.7757, -109.259, 0.28 ) }
    dend_38 { pt3dadd( 99.5088, -72.9012, -110.164, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 98.0838, -69.5026, -107.433, 0.55 ) }
    dend_37 { pt3dadd( 96.838, -70.4862, -105.865, 0.55 ) }
    dend_37 { pt3dadd( 93.3639, -73.2288, -101.493, 0.28 ) }
    dend_37 { pt3dadd( 92.5386, -73.8803, -100.454, 0.55 ) }
    dend_37 { pt3dadd( 90.281, -75.6626, -97.6129, 0.28 ) }
    dend_37 { pt3dadd( 88.8258, -76.8115, -95.7816, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 11.7969, -46.3488, 0.793134, 0.83 ) }
    dend_23 { pt3dadd( 11.8071, -46.6027, 0.763626, 0.83 ) }
    dend_23 { pt3dadd( 12.0192, -49.9231, 0.446508, 0.83 ) }
    dend_23 { pt3dadd( 12.031, -52.3987, 0.430933, 0.83 ) }
    dend_23 { pt3dadd( 11.9703, -54.7746, 0.705269, 0.83 ) }
    dend_23 { pt3dadd( 11.8667, -57.9243, 1.33441, 0.83 ) }
    dend_23 { pt3dadd( 11.699, -61.5447, 2.22112, 0.83 ) }
    dend_23 { pt3dadd( 11.6023, -65.5798, 3.40671, 0.83 ) }
    dend_23 { pt3dadd( 11.5727, -69.4926, 4.73035, 0.83 ) }
    dend_23 { pt3dadd( 11.1983, -74.2899, 6.35859, 0.83 ) }
    dend_23 { pt3dadd( 10.8663, -76.4945, 7.0293, 0.83 ) }
    dend_23 { pt3dadd( 10.5736, -78.1563, 7.43589, 0.83 ) }
    dend_23 { pt3dadd( 9.92369, -81.3447, 8.17515, 0.83 ) }
    dend_23 { pt3dadd( 9.3502, -84.209, 8.6631, 0.83 ) }
    dend_23 { pt3dadd( 8.20434, -90.3548, 8.93837, 0.83 ) }
    dend_23 { pt3dadd( 7.46192, -93.7342, 8.66023, 0.83 ) }
    dend_23 { pt3dadd( 6.69707, -96.8566, 8.1904, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 11.7969, -46.3488, 0.793134, 0.55 ) }
    dend_18 { pt3dadd( 10.7989, -48.4773, 0.741487, 0.55 ) }
    dend_18 { pt3dadd( 10.0445, -50.0264, 0.819645, 0.55 ) }
    dend_18 { pt3dadd( 9.58215, -51.021, 0.971619, 0.55 ) }
    dend_18 { pt3dadd( 8.92296, -52.5845, 1.36612, 0.55 ) }
    dend_18 { pt3dadd( 7.68523, -55.6888, 2.35151, 0.55 ) }
    dend_18 { pt3dadd( 6.71242, -58.0477, 3.35377, 0.55 ) }
    dend_18 { pt3dadd( 5.92161, -59.9458, 4.3576, 0.55 ) }
    dend_18 { pt3dadd( 5.06812, -61.8671, 5.50296, 0.55 ) }
    dend_18 { pt3dadd( 4.3419, -63.4633, 6.53422, 0.28 ) }
    dend_18 { pt3dadd( 3.71801, -64.774, 7.56382, 0.55 ) }
    dend_18 { pt3dadd( 2.50776, -67.1701, 9.76284, 0.55 ) }
    dend_18 { pt3dadd( 1.6775, -68.6431, 11.261, 0.55 ) }
    dend_18 { pt3dadd( 1.20397, -69.4678, 12.0916, 0.55 ) }
    dend_18 { pt3dadd( 0.600547, -70.438, 13.0185, 0.83 ) }
    dend_18 { pt3dadd( -1.20209, -73.3077, 15.5766, 0.28 ) }
    dend_18 { pt3dadd( -1.79614, -74.2565, 16.3978, 0.55 ) }
    dend_18 { pt3dadd( -2.81249, -75.9684, 17.8285, 0.28 ) }
    dend_18 { pt3dadd( -3.12772, -76.4974, 18.3075, 0.55 ) }
    dend_18 { pt3dadd( -3.79818, -77.7402, 19.4125, 0.28 ) }
    dend_18 { pt3dadd( -4.17157, -78.4451, 19.99, 0.55 ) }
    dend_18 { pt3dadd( -5.48866, -80.7152, 21.2511, 0.55 ) }
    dend_18 { pt3dadd( -7.6586, -86.9452, 27.1317, 0.55 ) }
    dend_18 { pt3dadd( -9.42799, -92.911, 33.4072, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -15.4165, -35.09, -12.2608, 0.55 ) }
    dend_16 { pt3dadd( -16.8634, -36.054, -15.156, 0.55 ) }
    dend_16 { pt3dadd( -17.2932, -36.2793, -15.9861, 0.55 ) }
    dend_16 { pt3dadd( -18.3968, -36.8362, -18.0112, 0.55 ) }
    dend_16 { pt3dadd( -20.8521, -37.9227, -22.3106, 0.28 ) }
    dend_16 { pt3dadd( -21.2283, -38.067, -22.92, 0.55 ) }
    dend_16 { pt3dadd( -22.8405, -38.7191, -25.374, 0.55 ) }
    dend_16 { pt3dadd( -25.1575, -39.572, -28.4584, 0.55 ) }
    dend_16 { pt3dadd( -26.0485, -39.8579, -29.6156, 0.28 ) }
    dend_16 { pt3dadd( -26.8391, -40.0312, -30.5818, 0.28 ) }
    dend_16 { pt3dadd( -28.267, -40.2606, -32.017, 0.55 ) }
    dend_16 { pt3dadd( -29.9661, -40.4535, -33.8513, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -31.4946, -40.4733, -35.6028, 0.55 ) }
    dend_16 { pt3dadd( -32.6669, -40.3617, -36.9419, 0.55 ) }
    dend_16 { pt3dadd( -33.4494, -40.2039, -37.9032, 0.55 ) }
    dend_16 { pt3dadd( -35.6961, -39.6172, -40.8265, 0.55 ) }
    dend_16 { pt3dadd( -38.0481, -38.7767, -43.8678, 0.55 ) }
    dend_16 { pt3dadd( -39.0198, -38.3529, -45.1006, 0.28 ) }
    dend_16 { pt3dadd( -39.9383, -37.9731, -46.2918, 0.55 ) }
    dend_16 { pt3dadd( -41.8374, -37.3616, -48.6682, 0.28 ) }
    dend_16 { pt3dadd( -42.4834, -37.1789, -49.4575, 0.83 ) }
    dend_16 { pt3dadd( -43.725, -36.8044, -50.8313, 0.28 ) }
    dend_16 { pt3dadd( -44.6852, -36.5997, -51.6719, 0.55 ) }
    dend_16 { pt3dadd( -46.1004, -36.3558, -52.8551, 0.28 ) }
    dend_16 { pt3dadd( -46.6702, -36.2472, -53.3066, 0.55 ) }
    dend_16 { pt3dadd( -47.7521, -36.0599, -54.0784, 0.55 ) }
    dend_16 { pt3dadd( -49.3805, -35.5831, -55.1951, 0.55 ) }
    dend_16 { pt3dadd( -50.4545, -35.1883, -55.8669, 0.28 ) }
    dend_16 { pt3dadd( -51.3257, -34.7398, -56.3459, 0.55 ) }
    dend_16 { pt3dadd( -52.3278, -34.0723, -56.9288, 0.28 ) }
    dend_16 { pt3dadd( -52.4882, -33.9484, -57.0323, 0.55 ) }
    dend_16 { pt3dadd( -53.8684, -32.8059, -58.281, 0.28 ) }
    dend_16 { pt3dadd( -54.8239, -31.9695, -59.319, 0.55 ) }
    dend_16 { pt3dadd( -55.9941, -30.7874, -60.9196, 0.83 ) }
    dend_16 { pt3dadd( -56.904, -29.8029, -62.3893, 0.28 ) }
    dend_16 { pt3dadd( -57.1283, -29.5558, -62.8024, 0.55 ) }
    dend_16 { pt3dadd( -58.8062, -27.7212, -66.1131, 0.28 ) }
    dend_16 { pt3dadd( -59.0858, -27.4144, -66.737, 0.55 ) }
    dend_16 { pt3dadd( -59.866, -26.4258, -68.6724, 0.28 ) }
    dend_16 { pt3dadd( -60.0666, -26.1719, -69.1745, 0.55 ) }
    dend_16 { pt3dadd( -60.6014, -25.5021, -70.4021, 0.28 ) }
    dend_16 { pt3dadd( -60.993, -25.0143, -71.232, 0.55 ) }
    dend_16 { pt3dadd( -61.9427, -23.8947, -72.8699, 0.28 ) }
    dend_16 { pt3dadd( -62.5295, -23.2878, -73.804, 0.55 ) }
    dend_16 { pt3dadd( -63.8373, -22.0975, -75.6894, 0.28 ) }
    dend_16 { pt3dadd( -64.2356, -21.7727, -76.2397, 0.55 ) }
    dend_16 { pt3dadd( -64.8836, -21.3274, -77.0651, 0.28 ) }
    dend_16 { pt3dadd( -65.4449, -20.9473, -77.7289, 0.55 ) }
    dend_16 { pt3dadd( -66.6454, -20.1663, -79.0152, 0.28 ) }
    dend_16 { pt3dadd( -67.0141, -19.9396, -79.3868, 0.55 ) }
    dend_16 { pt3dadd( -69.7927, -18.1653, -81.9966, 0.28 ) }
    dend_16 { pt3dadd( -70.7852, -17.4422, -82.816, 0.55 ) }
    dend_16 { pt3dadd( -72.5797, -16.029, -84.1509, 0.28 ) }
    dend_16 { pt3dadd( -73.3905, -15.349, -84.7265, 0.55 ) }
    dend_16 { pt3dadd( -75.2914, -13.7894, -85.9181, 0.28 ) }
    dend_16 { pt3dadd( -76.0067, -13.2491, -86.3168, 0.55 ) }
    dend_16 { pt3dadd( -78.691, -11.5433, -87.5763, 0.28 ) }
    dend_16 { pt3dadd( -79.8428, -10.9877, -88.0757, 0.55 ) }
    dend_16 { pt3dadd( -81.5473, -10.4863, -88.7411, 0.55 ) }
    dend_16 { pt3dadd( -82.616, -10.2446, -89.1179, 0.55 ) }
    dend_16 { pt3dadd( -84.8521, -9.78824, -89.7096, 0.28 ) }
    dend_16 { pt3dadd( -87.0915, -9.34405, -90.1508, 0.28 ) }
    dend_16 { pt3dadd( -88.9689, -8.96057, -90.4652, 0.55 ) }
    dend_16 { pt3dadd( -91.2841, -8.26541, -90.6195, 0.28 ) }
    dend_16 { pt3dadd( -92.4345, -7.76328, -90.5569, 0.55 ) }
    dend_16 { pt3dadd( -95.1387, -6.1055, -90.1757, 0.28 ) }
    dend_16 { pt3dadd( -96.528, -4.94198, -89.668, 0.55 ) }
    dend_16 { pt3dadd( -97.4217, -4.02793, -89.1507, 0.28 ) }
    dend_16 { pt3dadd( -98.4447, -2.97256, -88.3153, 0.55 ) }
    dend_16 { pt3dadd( -99.7251, -1.58943, -87.1123, 0.28 ) }
    dend_16 { pt3dadd( -100.217, -1.09347, -86.6603, 0.55 ) }
    dend_16 { pt3dadd( -102.818, 1.19058, -84.6194, 0.28 ) }
    dend_16 { pt3dadd( -103.704, 1.92382, -83.9381, 0.55 ) }
    dend_16 { pt3dadd( -105.831, 3.58785, -82.2552, 0.28 ) }
    dend_16 { pt3dadd( -106.989, 4.47746, -81.3405, 0.55 ) }
    dend_16 { pt3dadd( -107.943, 5.20695, -80.5905, 0.55 ) }
    dend_16 { pt3dadd( -109.084, 6.06688, -79.7251, 0.28 ) }
    dend_16 { pt3dadd( -109.683, 6.4987, -79.3774, 0.55 ) }
    dend_16 { pt3dadd( -111.676, 8.00259, -78.3464, 0.28 ) }
    dend_16 { pt3dadd( -112.692, 8.91612, -77.7941, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -15.4165, -35.09, -12.2608, 0.55 ) }
    dend_15 { pt3dadd( -14.8687, -35.3806, -13.1776, 0.55 ) }
    dend_15 { pt3dadd( -14.27, -35.5583, -14.0913, 0.55 ) }
    dend_15 { pt3dadd( -13.4511, -35.6938, -15.1961, 0.55 ) }
    dend_15 { pt3dadd( -12.7319, -35.7224, -16.072, 0.55 ) }
    dend_15 { pt3dadd( -7.5021, -35.229, -21.4973, 0.55 ) }
    dend_15 { pt3dadd( -6.30125, -34.9469, -22.7472, 0.55 ) }
    dend_15 { pt3dadd( -4.52385, -34.3683, -24.6407, 0.55 ) }
    dend_15 { pt3dadd( -3.26189, -33.9057, -25.9923, 0.55 ) }
    dend_15 { pt3dadd( -1.99882, -33.3661, -27.2853, 0.28 ) }
    dend_15 { pt3dadd( 0.0287938, -32.4048, -29.184, 0.55 ) }
    dend_15 { pt3dadd( 3.16667, -30.8693, -31.8497, 0.28 ) }
    dend_15 { pt3dadd( 3.39452, -30.7958, -32.146, 0.55 ) }
    dend_15 { pt3dadd( 4.36392, -30.7076, -34.4234, 0.28 ) }
    dend_15 { pt3dadd( 4.74861, -30.721, -36.0578, 0.55 ) }
    dend_15 { pt3dadd( 4.98366, -30.8411, -37.8595, 0.55 ) }
    dend_15 { pt3dadd( 5.33733, -31.2135, -41.0935, 0.55 ) }
    dend_15 { pt3dadd( 6.0422, -31.9909, -47.4346, 0.55 ) }
    dend_15 { pt3dadd( 6.58424, -32.5665, -51.6794, 0.55 ) }
    dend_15 { pt3dadd( 6.8083, -32.783, -53.1372, 0.55 ) }
    dend_15 { pt3dadd( 8.51789, -34.1569, -62.6808, 0.55 ) }
    dend_15 { pt3dadd( 9.09488, -34.5039, -65.2443, 0.55 ) }
    dend_15 { pt3dadd( 9.52658, -34.711, -66.656, 0.55 ) }
    dend_15 { pt3dadd( 10.8081, -35.3078, -69.8476, 0.55 ) }
    dend_15 { pt3dadd( 14.2761, -37.1933, -77.2866, 0.55 ) }
    dend_15 { pt3dadd( 15.2848, -37.7974, -79.2413, 0.28 ) }
    dend_15 { pt3dadd( 15.9374, -38.2032, -80.3034, 0.55 ) }
    dend_15 { pt3dadd( 16.925, -38.8814, -81.8524, 0.28 ) }
    dend_15 { pt3dadd( 17.3695, -39.2384, -82.4498, 0.55 ) }
    dend_15 { pt3dadd( 19.068, -40.6505, -83.7873, 0.28 ) }
    dend_15 { pt3dadd( 20.489, -42.2502, -83.8036, 0.55 ) }
    dend_15 { pt3dadd( 21.3185, -43.3524, -83.7321, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 22.051, -44.5278, -83.5332, 0.55 ) }
    dend_15 { pt3dadd( 22.656, -45.7721, -83.2628, 0.28 ) }
    dend_15 { pt3dadd( 22.9021, -46.405, -83.1503, 0.55 ) }
    dend_15 { pt3dadd( 23.4422, -48.0414, -82.8008, 0.28 ) }
    dend_15 { pt3dadd( 23.5717, -48.5313, -82.7733, 0.55 ) }
    dend_15 { pt3dadd( 24.3077, -51.3513, -82.7688, 0.28 ) }
    dend_15 { pt3dadd( 24.6889, -52.6744, -82.927, 0.55 ) }
    dend_15 { pt3dadd( 25.6102, -55.5398, -83.5633, 0.28 ) }
    dend_15 { pt3dadd( 25.9944, -56.61, -83.9065, 0.55 ) }
    dend_15 { pt3dadd( 27.3905, -60.1583, -85.2278, 0.28 ) }
    dend_15 { pt3dadd( 27.7362, -61.0245, -85.5828, 0.55 ) }
    dend_15 { pt3dadd( 28.7636, -63.7654, -86.8006, 0.28 ) }
    dend_15 { pt3dadd( 28.9688, -64.3992, -87.0419, 0.55 ) }
    dend_15 { pt3dadd( 29.4589, -66.066, -87.668, 0.28 ) }
    dend_15 { pt3dadd( 29.7544, -67.0415, -88.1187, 0.55 ) }
    dend_15 { pt3dadd( 30.0774, -68.0093, -88.6308, 0.55 ) }
    dend_15 { pt3dadd( 30.7223, -69.9395, -89.6392, 0.28 ) }
    dend_15 { pt3dadd( 31.2269, -71.1579, -90.3869, 0.55 ) }
    dend_15 { pt3dadd( 33.0433, -74.3251, -92.8643, 0.28 ) }
    dend_15 { pt3dadd( 33.7954, -75.3921, -93.8882, 0.55 ) }
    dend_15 { pt3dadd( 34.3364, -76.0817, -94.5843, 0.28 ) }
    dend_15 { pt3dadd( 34.9084, -76.7265, -95.2817, 0.55 ) }
    dend_15 { pt3dadd( 36.7407, -78.5762, -97.3964, 0.28 ) }
    dend_15 { pt3dadd( 38.139, -80.0011, -98.947, 0.55 ) }
    dend_15 { pt3dadd( 40.5424, -82.6333, -101.34, 0.28 ) }
    dend_15 { pt3dadd( 41.303, -83.4544, -102.089, 0.55 ) }
    dend_15 { pt3dadd( 42.8157, -84.9726, -103.37, 0.28 ) }
    dend_15 { pt3dadd( 43.3328, -85.4704, -103.747, 0.55 ) }
    dend_15 { pt3dadd( 44.21, -86.2609, -104.179, 0.28 ) }
    dend_15 { pt3dadd( 45.0018, -86.9307, -104.485, 0.55 ) }
    dend_15 { pt3dadd( 47.2098, -88.6133, -105.074, 0.28 ) }
    dend_15 { pt3dadd( 49.7734, -90.4317, -105.712, 0.28 ) }
    dend_15 { pt3dadd( 51.0959, -91.2849, -105.94, 0.28 ) }
    dend_15 { pt3dadd( 52.4303, -92.1072, -106.259, 0.55 ) }
    dend_15 { pt3dadd( 54.4001, -93.2163, -106.741, 0.28 ) }
    dend_15 { pt3dadd( 55.2815, -93.6951, -106.936, 0.83 ) }
    dend_15 { pt3dadd( 57.5318, -94.941, -107.342, 0.28 ) }
    dend_15 { pt3dadd( 58.4973, -95.5073, -107.574, 0.55 ) }
    dend_15 { pt3dadd( 62.6823, -98.1739, -108.79, 0.28 ) }
    dend_15 { pt3dadd( 64.748, -99.5431, -109.576, 0.28 ) }
    dend_15 { pt3dadd( 66.2362, -100.544, -110.256, 0.55 ) }
    dend_15 { pt3dadd( 67.0832, -101.152, -110.757, 0.55 ) }
    dend_15 { pt3dadd( 69.2908, -102.81, -112.284, 0.28 ) }
    dend_15 { pt3dadd( 71.3135, -104.468, -113.8, 0.55 ) }
    dend_15 { pt3dadd( 73.1401, -106.043, -115.175, 0.28 ) }
    dend_15 { pt3dadd( 74.7666, -107.5, -116.518, 0.55 ) }
    dend_15 { pt3dadd( 76.1176, -108.685, -117.621, 0.28 ) }
    dend_15 { pt3dadd( 77.2593, -109.56, -118.461, 0.55 ) }
    dend_15 { pt3dadd( 80.0839, -111.487, -120.354, 0.28 ) }
    dend_15 { pt3dadd( 81.529, -112.458, -121.247, 0.55 ) }
    dend_15 { pt3dadd( 83.7148, -113.92, -122.499, 0.28 ) }
    dend_15 { pt3dadd( 85.5254, -115.058, -123.482, 0.55 ) }
    dend_15 { pt3dadd( 89.8085, -117.521, -125.807, 0.28 ) }
    dend_15 { pt3dadd( 91.5539, -118.425, -126.889, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -17.3783, -150.796, 107.271, 0.55 ) }
    dend_9 { pt3dadd( -17.2566, -161.018, 112.14, 0.55 ) }
    dend_9 { pt3dadd( -15.8376, -171.988, 114.557, 0.55 ) }
    dend_9 { pt3dadd( -15.2032, -182.601, 118.45, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -17.3783, -150.796, 107.271, 0.55 ) }
    dend_8 { pt3dadd( -16.4389, -160.457, 114.539, 0.55 ) }
    dend_8 { pt3dadd( -17.354, -168.799, 123.291, 0.55 ) }
    dend_8 { pt3dadd( -18.486, -175.154, 133.556, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -20.657, -157.923, 110.896, 0.55 ) }
    dend_6 { pt3dadd( -20.4205, -168.249, 117.205, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -20.657, -157.923, 110.896, 0.55 ) }
    dend_5 { pt3dadd( -22.9946, -167.509, 117.011, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 6.69707, -96.8566, 8.1904, 0.83 ) }
    dend_25 { pt3dadd( 7.92844, -101.816, 8.81975, 0.83 ) }
    dend_25 { pt3dadd( 9.22074, -105.986, 9.60814, 0.83 ) }
    dend_25 { pt3dadd( 10.5053, -110.131, 10.3918, 0.83 ) }
    dend_25 { pt3dadd( 11.7252, -114.067, 11.136, 0.83 ) }
    dend_25 { pt3dadd( 13.6052, -120.133, 12.2829, 0.83 ) }
    dend_25 { pt3dadd( 15.4716, -126.156, 13.4216, 0.83 ) }
    dend_25 { pt3dadd( 17.1322, -130.125, 14.6059, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.69707, -96.8566, 8.1904, 0.55 ) }
    dend_24 { pt3dadd( 8.31348, -99.2416, 7.8795, 0.55 ) }
    dend_24 { pt3dadd( 9.47566, -101.115, 7.33423, 0.55 ) }
    dend_24 { pt3dadd( 10.2413, -102.505, 6.81643, 0.55 ) }
    dend_24 { pt3dadd( 10.8544, -104.139, 6.07489, 0.83 ) }
    dend_24 { pt3dadd( 11.3798, -106.0, 5.04909, 0.55 ) }
    dend_24 { pt3dadd( 11.8936, -107.821, 4.04573, 0.83 ) }
    dend_24 { pt3dadd( 12.3009, -109.801, 2.81188, 0.55 ) }
    dend_24 { pt3dadd( 12.509, -110.954, 1.99585, 0.83 ) }
    dend_24 { pt3dadd( 12.9643, -114.693, -0.880284, 0.55 ) }
    dend_24 { pt3dadd( 13.0497, -117.63, -3.25224, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -9.42799, -92.911, 33.4072, 0.55 ) }
    dend_20 { pt3dadd( -13.2868, -100.482, 38.0054, 0.55 ) }
    dend_20 { pt3dadd( -18.4342, -107.114, 42.7891, 0.55 ) }
    dend_20 { pt3dadd( -24.2338, -112.849, 47.9681, 0.55 ) }
    dend_20 { pt3dadd( -30.8262, -117.459, 53.3202, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -9.42799, -92.911, 33.4072, 0.55 ) }
    dend_19 { pt3dadd( -12.4433, -102.294, 41.3026, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 17.1322, -130.125, 14.6059, 0.55 ) }
    dend_27 { pt3dadd( 17.4468, -131.852, 15.0755, 0.55 ) }
    dend_27 { pt3dadd( 17.931, -134.057, 15.6864, 0.55 ) }
    dend_27 { pt3dadd( 18.382, -136.14, 16.2533, 0.55 ) }
    dend_27 { pt3dadd( 18.6752, -137.621, 16.6473, 0.55 ) }
    dend_27 { pt3dadd( 19.15, -140.264, 17.3333, 0.55 ) }
    dend_27 { pt3dadd( 20.469, -147.715, 19.0384, 0.55 ) }
    dend_27 { pt3dadd( 20.9045, -150.256, 19.4915, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 21.1652, -152.054, 19.7325, 0.55 ) }
    dend_27 { pt3dadd( 21.382, -154.12, 19.8623, 0.55 ) }
    dend_27 { pt3dadd( 21.4463, -155.724, 19.8619, 0.55 ) }
    dend_27 { pt3dadd( 21.599, -159.49, 19.6714, 0.55 ) }
    dend_27 { pt3dadd( 21.6317, -162.344, 19.5804, 0.55 ) }
    dend_27 { pt3dadd( 21.7257, -164.217, 19.5368, 0.55 ) }
    dend_27 { pt3dadd( 22.098, -169.058, 19.6358, 0.55 ) }
    dend_27 { pt3dadd( 22.4143, -172.302, 19.8318, 0.55 ) }
    dend_27 { pt3dadd( 22.9741, -176.471, 20.2653, 0.55 ) }
    dend_27 { pt3dadd( 23.8709, -181.182, 21.0203, 0.55 ) }
    dend_27 { pt3dadd( 24.6997, -184.323, 21.6021, 0.55 ) }
    dend_27 { pt3dadd( 25.2555, -186.179, 21.9607, 0.55 ) }
    dend_27 { pt3dadd( 25.7388, -187.889, 22.3058, 0.55 ) }
    dend_27 { pt3dadd( 26.3215, -190.063, 22.6372, 0.55 ) }
    dend_27 { pt3dadd( 27.4681, -195.322, 23.1809, 0.55 ) }
    dend_27 { pt3dadd( 27.9243, -197.365, 23.2896, 0.55 ) }
    dend_27 { pt3dadd( 28.3791, -199.639, 23.4294, 0.55 ) }
    dend_27 { pt3dadd( 29.0288, -203.053, 23.6412, 0.55 ) }
    dend_27 { pt3dadd( 29.4431, -205.669, 23.8952, 0.55 ) }
    dend_27 { pt3dadd( 29.7001, -208.147, 24.1937, 0.55 ) }
    dend_27 { pt3dadd( 29.8591, -210.504, 24.5399, 0.55 ) }
    dend_27 { pt3dadd( 30.0014, -212.799, 24.9282, 0.55 ) }
    dend_27 { pt3dadd( 30.1013, -214.434, 25.1854, 0.55 ) }
    dend_27 { pt3dadd( 30.2245, -217.116, 25.52, 0.55 ) }
    dend_27 { pt3dadd( 30.1925, -220.349, 25.7457, 0.55 ) }
    dend_27 { pt3dadd( 30.1417, -221.929, 25.7344, 0.55 ) }
    dend_27 { pt3dadd( 30.049, -223.324, 25.6296, 0.55 ) }
    dend_27 { pt3dadd( 29.8825, -225.973, 25.2348, 0.55 ) }
    dend_27 { pt3dadd( 29.7365, -227.654, 24.9564, 0.55 ) }
    dend_27 { pt3dadd( 29.62, -229.723, 24.6634, 0.55 ) }
    dend_27 { pt3dadd( 29.544, -231.168, 24.5605, 0.55 ) }
    dend_27 { pt3dadd( 29.3759, -234.913, 24.4521, 0.55 ) }
    dend_27 { pt3dadd( 29.3092, -237.7, 24.5755, 0.55 ) }
    dend_27 { pt3dadd( 29.3515, -241.988, 25.0996, 0.55 ) }
    dend_27 { pt3dadd( 29.5799, -244.742, 25.6195, 0.55 ) }
    dend_27 { pt3dadd( 29.8562, -247.627, 26.2567, 0.28 ) }
    dend_27 { pt3dadd( 29.9712, -248.781, 26.5695, 0.28 ) }
    dend_27 { pt3dadd( 30.3887, -251.567, 27.5502, 0.28 ) }
    dend_27 { pt3dadd( 30.875, -254.125, 28.6428, 0.28 ) }
    dend_27 { pt3dadd( 31.9892, -257.503, 30.1981, 0.28 ) }
    dend_27 { pt3dadd( 34.1835, -265.289, 31.4545, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 17.1322, -130.125, 14.6059, 0.55 ) }
    dend_26 { pt3dadd( 19.3705, -130.916, 14.9091, 0.55 ) }
    dend_26 { pt3dadd( 23.9842, -132.894, 15.8781, 0.55 ) }
    dend_26 { pt3dadd( 27.9718, -134.823, 16.8909, 0.28 ) }
    dend_26 { pt3dadd( 32.2543, -137.003, 18.108, 0.55 ) }
    dend_26 { pt3dadd( 34.8549, -138.366, 19.1805, 0.28 ) }
    dend_26 { pt3dadd( 39.3797, -140.79, 21.4437, 0.55 ) }
    dend_26 { pt3dadd( 41.2782, -142.036, 22.924, 0.28 ) }
    dend_26 { pt3dadd( 41.9663, -142.478, 23.5809, 0.28 ) }
    dend_26 { pt3dadd( 43.1602, -143.096, 24.7202, 0.55 ) }
    dend_26 { pt3dadd( 47.851, -145.118, 28.7565, 0.28 ) }
    dend_26 { pt3dadd( 49.8568, -145.906, 30.3857, 0.55 ) }
    dend_26 { pt3dadd( 55.9784, -148.242, 34.5882, 0.28 ) }
    dend_26 { pt3dadd( 59.3252, -149.405, 36.6164, 0.28 ) }
    dend_26 { pt3dadd( 63.5112, -150.921, 38.8988, 0.55 ) }
    dend_26 { pt3dadd( 69.767, -153.327, 41.7575, 0.28 ) }
    dend_26 { pt3dadd( 70.6174, -153.653, 42.0534, 0.55 ) }
    dend_26 { pt3dadd( 74.8105, -155.266, 43.2297, 0.28 ) }
    dend_26 { pt3dadd( 75.191, -155.419, 43.2958, 0.55 ) }
    dend_26 { pt3dadd( 78.5377, -157.207, 44.0142, 0.28 ) }
    dend_26 { pt3dadd( 80.1278, -158.173, 44.461, 0.55 ) }
    dend_26 { pt3dadd( 93.2292, -165.314, 48.1893, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -30.8262, -117.459, 53.3202, 0.55 ) }
    dend_22 { pt3dadd( -36.0634, -123.149, 63.4368, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -30.8262, -117.459, 53.3202, 0.55 ) }
    dend_21 { pt3dadd( -34.1776, -121.73, 56.801, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, axon_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, axon_1, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_5 = new SectionList()
    dend_43 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 15
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 11
    dend_35 nseg = 5
    dend_31 nseg = 3
    dend_30 nseg = 9
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 5
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 7
    dend_15 nseg = 11
    dend_27 nseg = 7
    dend_26 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_BP_b43315e986_0_0


