// Cell: cACint209_L5_NBC_3064d86d49_0_0
/*
{
  "id" : "cACint209_L5_NBC_3064d86d49_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.04084, -7.79073, 6.11351, 3.00137", "-5.42935, -7.07755, 5.54109, 5.08972", "-4.81786, -6.36438, 4.96868, 6.81398", "-4.20638, -5.6512, 4.39626, 7.60007", "-3.59489, -4.93802, 3.82385, 8.22315", "-2.9834, -4.22485, 3.25143, 8.68938", "-2.37191, -3.51167, 2.67902, 8.90978", "-1.76042, -2.7985, 2.1066, 9.28414", "-1.14893, -2.08532, 1.53419, 9.71321", "-0.537444, -1.37214, 0.961772, 9.53282", "0.0740441, -0.658968, 0.389358, 9.44691", "0.685533, 0.0542076, -0.183057, 9.12467", "1.29702, 0.767383, -0.755472, 8.9488", "1.90851, 1.48056, -1.32789, 8.45797", "2.52, 2.19374, -1.9003, 7.56647", "3.13149, 2.90691, -2.47272, 6.84034", "3.74298, 3.62009, -3.04513, 6.52525", "4.35446, 4.33326, -3.61755, 5.93791", "4.96595, 5.04644, -4.18996, 5.19964", "5.57744, 5.75961, -4.76238, 4.44836", "6.18893, 6.47279, -5.33479, 2.69612" ]
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-7.6347, -3.79942, 4.3315, 2.36", "-7.6347, -3.79942, 4.3315, 2.36", "-8.03075, -3.28462, 4.79784, 1.99", "-8.34129, -2.43142, 5.66232, 1.25", "-8.5083, -1.50215, 6.69363, 1.55", "-8.57159, -0.784558, 7.55215, 1.62", "-8.67839, 0.21095, 8.75062, 1.47", "-8.80791, 1.20499, 9.9708, 1.69", "-9.06136, 2.48539, 11.5497, 2.14", "-9.36672, 3.47035, 12.7743, 2.58", "-9.97409, 4.54074, 14.1057, 1.77", "-10.8062, 5.27879, 15.0357, 1.18", "-11.9505, 5.85303, 15.7026, 1.18", "-13.7794, 6.48774, 16.3259, 1.18", "-15.1184, 6.83881, 16.5711, 1.18", "-16.4959, 7.11729, 16.7287, 1.4", "-17.5737, 7.27245, 16.78, 1.4", "-19.1175, 7.395, 16.8115, 1.18", "-20.2177, 7.42677, 16.8277, 1.18", "-21.6181, 7.37824, 16.8694, 1.55", "-23.1231, 7.21542, 16.968, 1.84", "-24.7702, 6.90434, 17.1388, 2.06", "-26.3356, 6.50769, 17.448, 1.62", "-27.6305, 6.1085, 17.7429, 1.47", "-28.7207, 5.72261, 18.0278, 1.25", "-30.0211, 5.21181, 18.4293, 1.47", "-31.189, 4.71869, 18.8581, 1.84", "-33.1023, 3.91836, 19.8724, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000023510978554
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-5.3447, -8.29342, 4.8315, 1.47", "-5.3447, -8.29342, 4.8315, 1.47", "-5.56349, -9.11279, 5.02818, 1.47", "-5.8283, -10.089, 5.27202, 1.25", "-6.17553, -11.3341, 5.59796, 1.25", "-6.47335, -12.3786, 5.95069, 1.03", "-6.74221, -13.376, 6.39198, 1.03", "-6.92966, -14.231, 6.87171, 1.03", "-7.09864, -15.2621, 7.56527, 0.96", "-7.22441, -16.1077, 8.19817, 1.03", "-7.45425, -17.4369, 9.22863, 1.47", "-7.73566, -18.6813, 10.1758, 1.62", "-7.99078, -19.5554, 10.813, 1.69", "-8.37294, -20.5743, 11.4652, 0.74", "-8.82218, -21.6254, 11.923, 0.59", "-9.30856, -22.7077, 12.2489, 1.18", "-9.74958, -23.6686, 12.4423, 1.18", "-10.2566, -24.7752, 12.6274, 1.18", "-10.8106, -26.0945, 12.8788, 1.11", "-11.2913, -27.6625, 13.293, 1.03", "-11.5652, -29.2214, 13.9029, 0.96", "-11.637, -29.9435, 14.2595, 1.25", "-11.6932, -30.7432, 14.7257, 1.4", "-11.7209, -31.7532, 15.3842, 1.18", "-11.7263, -32.894, 16.2162, 1.33", "-11.7585, -34.3425, 17.4129, 0.96", "-11.783, -34.9287, 17.8732, 1.4", "-11.8417, -35.7407, 18.5206, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000023510978554
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "2.78531, -5.27992, -8.2385, 2.5", "2.79621, -5.75892, -8.30745, 2.5", "2.75931, -6.17154, -8.41701, 2.5", "2.57694, -7.38442, -8.79112, 1.25", "2.44883, -8.11668, -9.05315, 1.4", "2.28628, -9.07446, -9.4478, 1.33", "2.17454, -9.81888, -9.77414, 1.55", "1.96723, -11.2058, -10.4472, 1.62", "1.88728, -11.789, -10.7449, 1.62", "1.76372, -12.778, -11.2726, 1.62", "1.62309, -14.1527, -12.0244, 1.62", "1.57604, -14.9766, -12.4681, 1.55", "1.57493, -15.7572, -12.8887, 1.47", "1.62675, -16.7728, -13.3953, 1.47", "1.66631, -17.2418, -13.629, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000023510978554
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.5053, 7.67708, -7.6085, 3.09", "4.88315, 8.82047, -8.12568, 3.09", "5.58373, 10.8965, -9.11394, 2.43", "5.87766, 11.7818, -9.53542, 2.65", "6.22288, 12.8859, -10.0829, 2.43", "6.41947, 13.5146, -10.3946, 2.58", "6.52814, 13.8621, -10.567, 2.8", "6.75162, 14.6403, -10.9801, 2.87", "6.85938, 15.0546, -11.183, 2.87", "7.11915, 16.0513, -11.7681, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000023510978554
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.18893, 6.47279, -5.33479, 0.52", "15.9526, 17.8601, -5.33479, 0.52", "25.7163, 29.2474, -5.33479, 0.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-33.1023, 3.91836, 19.8724, 0.66", "-33.9226, 4.97213, 20.1501, 0.66", "-34.466, 5.58555, 20.4063, 0.66", "-35.1302, 6.20657, 20.7745, 0.81", "-35.6017, 6.55438, 21.0548, 1.03", "-36.2607, 6.9239, 21.4549, 1.11", "-36.8314, 7.15507, 21.793, 1.11", "-37.7876, 7.29961, 22.3552, 1.11", "-38.7864, 7.2761, 22.9355, 0.88", "-39.7974, 7.10666, 23.5152, 0.88", "-40.7196, 6.86079, 23.9859, 0.88", "-41.642, 6.55491, 24.3607, 0.88", "-42.4434, 6.30138, 24.6027, 0.88", "-43.1607, 6.12478, 24.7285, 0.88", "-43.8503, 6.03376, 24.7841, 0.74", "-44.9089, 6.0967, 24.7819, 0.74", "-46.1004, 6.43374, 24.7358, 0.74", "-47.3094, 7.00363, 24.6792, 0.88", "-48.1899, 7.51946, 24.6552, 0.88", "-48.7529, 7.87375, 24.6765, 0.88", "-49.3613, 8.25163, 24.7608, 0.81", "-50.0727, 8.6268, 24.9972, 0.81", "-50.4345, 8.72659, 25.1909, 0.81", "-51.0539, 8.71784, 25.6709, 0.81", "-51.767, 8.63746, 26.3199, 0.81", "-52.293, 8.59284, 26.8259, 0.81", "-53.1961, 8.57174, 27.6968, 1.11", "-53.8022, 8.6142, 28.2715, 0.96", "-54.7989, 8.80933, 29.1847, 1.11", "-55.5024, 9.01882, 29.8227, 1.03", "-56.3737, 9.39997, 30.5701, 1.03", "-56.9528, 9.73368, 31.03, 1.25", "-57.5588, 10.1701, 31.4234, 1.62", "-58.0235, 10.5635, 31.6873, 1.62" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-33.1023, 3.91836, 19.8724, 1.03", "-33.7506, 3.16051, 21.2733, 1.03", "-34.6043, 2.08243, 23.1213, 0.88", "-35.0036, 1.5088, 23.9653, 1.4", "-35.3713, 0.956582, 24.6864, 1.92", "-36.6081, -0.872705, 26.8942, 1.69", "-37.1144, -1.59086, 27.7084, 0.88", "-37.5248, -2.15679, 28.3725, 0.74", "-38.1746, -3.06395, 29.3047, 0.74", "-38.5981, -3.69709, 29.8549, 0.74", "-38.9567, -4.25294, 30.2152, 1.25", "-39.3417, -4.88721, 30.3634, 1.77" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-11.8417, -35.7407, 18.5206, 0.96", "-11.6008, -36.7631, 17.8729, 0.96", "-11.478, -37.2364, 17.5685, 0.96", "-11.3233, -37.7919, 17.1713, 0.66", "-11.0685, -38.6608, 16.5429, 0.66", "-10.8214, -39.4846, 15.9693, 0.74", "-10.52, -40.4536, 15.3289, 0.96", "-10.3883, -40.8754, 15.0777, 0.96", "-10.1505, -41.64, 14.641, 0.88", "-10.0024, -42.186, 14.3557, 0.81", "-9.87839, -42.7972, 14.1005, 0.81", "-9.81479, -43.329, 13.9441, 0.81", "-9.77984, -44.0411, 13.8033, 0.81", "-9.77368, -44.5209, 13.7267, 0.74", "-9.78125, -45.4103, 13.6086, 0.74", "-9.79522, -45.7544, 13.5582, 1.03", "-9.83843, -46.3954, 13.4532, 0.81", "-9.89139, -47.0175, 13.3427, 0.81", "-9.91999, -47.5071, 13.2508, 1.4", "-9.92919, -48.0866, 13.151, 1.4" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-11.8417, -35.7407, 18.5206, 1.03", "-13.3312, -36.7095, 19.4549, 1.03", "-14.0572, -37.2289, 19.9532, 0.81", "-14.9485, -37.947, 20.5804, 0.81", "-15.6576, -38.5724, 21.0689, 0.96", "-16.911, -39.7752, 21.9022, 0.74", "-17.5983, -40.502, 22.3436, 0.66", "-18.245, -41.2974, 22.6673, 0.96", "-18.8173, -42.1093, 22.9782, 1.03", "-19.3414, -42.966, 23.3547, 1.25", "-19.7655, -43.7297, 23.749, 1.4", "-20.2129, -44.6029, 24.2692, 1.18", "-20.8128, -45.7711, 25.0789, 0.66", "-21.5139, -47.0027, 26.0126, 0.66", "-22.4292, -48.466, 27.2123, 1.25", "-22.8933, -49.1873, 27.7919, 1.4", "-23.4245, -50.0247, 28.4716, 0.88", "-23.9497, -50.8883, 29.1505, 0.81", "-24.4106, -51.7537, 29.8022, 0.96", "-24.8268, -52.5962, 30.3182, 0.96", "-25.3134, -53.5989, 30.8514, 0.96", "-26.1054, -55.124, 31.6868, 1.03", "-26.5411, -55.8631, 32.1235, 0.88", "-27.4721, -57.2189, 33.0667, 0.88", "-28.1449, -58.1019, 33.7582, 0.88", "-28.6921, -58.7677, 34.3108, 0.96", "-29.4943, -59.7379, 35.1469, 0.96", "-30.2744, -60.7086, 35.9342, 0.81", "-30.8427, -61.4376, 36.5242, 0.74", "-31.42, -62.2113, 37.1255, 0.74", "-31.957, -63.0276, 37.7498, 0.66", "-32.5709, -64.1454, 38.5688, 0.66", "-33.1141, -65.2357, 39.3083, 0.59", "-33.5127, -66.0038, 39.805, 0.59", "-33.8544, -66.5567, 40.1376, 0.88", "-34.2839, -67.1244, 40.4599, 0.88", "-35.2634, -68.2428, 41.0678, 0.74", "-36.0715, -69.0872, 41.5034, 0.74", "-36.5915, -69.6257, 41.7621, 0.96", "-37.2631, -70.3457, 42.0889, 0.96", "-37.9757, -71.2157, 42.5292, 0.81", "-38.5364, -72.0632, 43.004, 0.66", "-38.6484, -72.3329, 43.1637, 0.81", "-38.7977, -73.0735, 43.6309, 1.03", "-38.8405, -73.4852, 43.9046, 1.25", "-38.9624, -75.4778, 45.383, 0.81", "-39.0442, -76.3892, 46.1383, 0.59", "-39.197, -77.2706, 46.91, 0.52", "-39.4047, -77.9579, 47.5053, 0.52", "-39.7156, -78.722, 48.1812, 0.66", "-40.1978, -79.625, 48.9416, 0.81", "-40.6377, -80.34, 49.5228, 1.18", "-41.0417, -81.0681, 50.1545, 0.74", "-41.4089, -81.91, 50.9096, 0.59", "-41.6739, -82.8185, 51.7244, 0.59", "-41.8197, -83.5621, 52.3603, 0.74", "-42.0574, -84.9062, 53.4844, 0.52", "-42.2083, -85.6969, 54.2011, 0.74", "-42.3102, -86.0637, 54.5828, 0.74", "-42.6123, -86.8141, 55.4544, 0.29", "-42.8392, -87.2088, 55.9408, 0.29", "-43.3257, -87.7944, 56.7359, 0.29", "-43.9662, -88.3053, 57.4498, 0.44", "-44.3721, -88.5636, 57.8283, 0.44", "-44.7398, -88.7552, 58.1734, 0.29", "-51.5527, -98.3459, 62.5612, 0.29", "-56.9219, -107.863, 68.6878, 0.29", "-63.1938, -117.425, 73.8443, 0.29", "-69.8128, -126.202, 79.771, 0.29", "-76.1526, -136.452, 83.4609, 0.29" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "1.66631, -17.2418, -13.629, 0.74", "2.97244, -18.0464, -14.1756, 0.74", "3.61743, -18.5044, -14.4895, 0.81", "4.21706, -19.0024, -14.845, 0.81", "4.82463, -19.6371, -15.3072, 0.81", "5.40326, -20.4137, -15.8549, 0.96", "5.77895, -21.1437, -16.4033, 1.11", "5.87315, -21.7519, -16.9058, 0.96", "5.83656, -22.3662, -17.4879, 1.03", "5.67387, -23.2362, -18.3809, 1.03", "5.50093, -23.8865, -19.0628, 0.96", "5.11239, -25.1625, -20.3858, 1.03", "4.68242, -26.438, -21.7259, 0.81", "4.23714, -27.7153, -23.0634, 0.96", "3.99739, -28.4239, -23.8167, 1.33", "3.82204, -28.9889, -24.4354, 1.47", "3.6883, -29.56, -25.0639, 1.69" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "1.66631, -17.2418, -13.629, 0.88", "2.32491, -18.9995, -13.8807, 0.88", "2.83268, -20.3326, -14.2007, 0.88", "3.21749, -21.5295, -14.5701, 0.88", "3.47148, -22.5895, -14.9436, 0.88", "3.72554, -24.0638, -15.5173, 0.88", "3.95842, -25.9083, -16.283, 0.66", "4.01959, -26.9007, -16.7685, 0.44", "4.02412, -28.115, -17.42, 0.66", "3.99309, -29.1327, -17.9938, 0.96", "3.96133, -30.0731, -18.5164, 1.11", "3.93731, -31.5857, -19.2967, 0.96", "3.93191, -32.451, -19.694, 0.96", "4.00512, -33.989, -20.3774, 0.96", "4.23443, -35.7563, -21.1378, 1.18", "4.39894, -36.6274, -21.5171, 1.62", "4.54623, -37.3362, -21.8298, 1.84" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "7.11915, 16.0513, -11.7681, 1.25", "7.01768, 16.1824, -16.5641, 1.25", "6.98774, 16.2211, -17.9792, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.11915, 16.0513, -11.7681, 1.11", "7.09962, 17.8535, -12.0242, 1.11", "7.07764, 19.2874, -12.2156, 0.96", "7.09728, 20.3316, -12.3418, 1.18", "7.16951, 21.3103, -12.4468, 1.47", "7.35079, 22.6647, -12.5739, 0.37", "7.53311, 23.5842, -12.6466, 0.37", "7.7925, 24.3684, -12.6674, 0.59", "8.13209, 25.1141, -12.6931, 0.59", "8.58769, 25.9899, -12.7257, 0.74", "9.01097, 26.7848, -12.7632, 0.74", "9.56745, 27.8873, -12.8231, 0.74", "10.1324, 29.0705, -12.8932, 0.74", "10.926, 30.8069, -13.013, 0.66", "11.4212, 32.0406, -13.1152, 0.66", "11.8729, 33.3441, -13.2404, 0.96", "12.1912, 34.4208, -13.3593, 1.33", "12.3496, 35.085, -13.4441, 1.47" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "25.7163, 29.2474, -5.33479, 0.52", "35.4799, 40.6347, -5.33479, 0.52", "45.2436, 52.022, -5.33479, 0.52" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-58.0235, 10.5635, 31.6873, 0.88", "-58.6199, 9.62274, 32.1269, 0.88", "-59.0861, 8.97977, 32.5722, 0.88", "-59.609, 8.3982, 33.1176, 0.88", "-60.298, 7.73143, 33.9617, 0.88", "-60.8504, 7.2816, 34.663, 0.88", "-61.6033, 6.7684, 35.6223, 0.81", "-62.441, 6.36922, 36.6876, 0.96", "-63.3084, 6.1146, 37.7385, 1.11", "-64.6014, 5.92653, 39.2041, 1.33", "-65.4671, 5.87413, 40.177, 1.03", "-66.3096, 5.87388, 41.0783, 0.88", "-67.2683, 5.91887, 42.0123, 0.81", "-68.0259, 5.98125, 42.6779, 0.96", "-68.8202, 6.08377, 43.2907, 1.11" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-58.0235, 10.5635, 31.6873, 0.81", "-55.7304, 11.9378, 32.5708, 0.81", "-54.8285, 12.5033, 32.9127, 0.81", "-53.2449, 13.4996, 33.6182, 0.74", "-51.5136, 14.5667, 34.4752, 0.74", "-50.3033, 15.2762, 35.1032, 0.74", "-49.0259, 15.9604, 35.7743, 0.59", "-47.7812, 16.6321, 36.5258, 0.74", "-46.2561, 17.3931, 37.6211, 0.81", "-45.0265, 17.9717, 38.6947, 0.96", "-44.0914, 18.4106, 39.6809, 0.66", "-43.25, 18.8404, 40.689, 0.29", "-41.7233, 19.819, 42.7788, 0.29", "-40.7118, 20.7667, 44.3538, 0.22", "-39.7924, 21.8257, 45.9342, 0.59", "-39.4572, 22.3439, 46.6349, 0.74", "-39.1727, 22.9941, 47.3969, 0.29", "-38.9442, 23.8846, 48.2317, 0.29", "-38.7967, 25.3048, 49.0436, 0.29", "-29.1685, 32.2526, 55.5914, 0.29", "-20.3187, 40.9318, 61.265, 0.29", "-10.3879, 48.7522, 66.2759, 0.29", "0.434068, 56.1866, 69.7822, 0.29", "13.0589, 60.7134, 71.4365, 0.29", "24.618, 66.6975, 75.1668, 0.29", "36.1599, 71.8655, 79.9404, 0.29", "48.3361, 76.0456, 84.0098, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-39.3417, -4.88721, 30.3634, 0.59", "-39.1609, -5.83338, 29.8717, 0.59", "-38.9232, -6.87252, 29.3263, 0.59", "-38.7747, -7.47592, 28.9938, 0.88", "-38.4942, -8.5879, 28.3912, 0.81", "-38.2747, -9.46097, 27.9424, 0.74", "-38.0894, -10.2366, 27.5684, 0.66", "-37.7868, -11.5181, 27.0223, 0.74", "-37.6402, -12.1411, 26.7971, 0.96", "-37.4568, -12.9857, 26.5319, 0.81", "-37.3419, -13.6052, 26.3779, 0.81", "-37.2549, -14.1671, 26.253, 0.74", "-37.1903, -14.5939, 26.1742, 0.96", "-37.0513, -15.4262, 26.0892, 0.66", "-36.9127, -16.138, 26.0324, 0.66", "-36.781, -16.7367, 25.9764, 0.88", "-36.6364, -17.3713, 25.9058, 0.88", "-36.4861, -18.0497, 25.8126, 0.66", "-36.3594, -18.7026, 25.6862, 0.59", "-36.2871, -19.2406, 25.5205, 0.59", "-36.2317, -19.8808, 25.2732, 0.59", "-36.2133, -20.4243, 25.0381, 0.59", "-36.2262, -21.0, 24.7689, 1.03", "-36.2907, -21.7337, 24.4006, 0.88", "-36.464, -22.9624, 23.7657, 0.66", "-36.5496, -23.4336, 23.5297, 0.66", "-36.6654, -23.9427, 23.2989, 0.66", "-36.8076, -24.4489, 23.109, 0.66", "-37.0714, -25.2017, 22.8891, 0.81", "-37.2668, -25.6549, 22.8084, 1.11", "-37.4574, -26.0283, 22.7889, 1.11", "-37.7979, -26.6215, 22.7924, 0.66", "-38.1244, -27.1295, 22.8534, 0.52", "-38.5036, -27.6676, 22.9812, 0.81", "-38.7807, -28.0555, 23.1195, 0.81", "-39.1773, -28.653, 23.3342, 0.66", "-39.404, -29.0087, 23.4615, 0.81", "-39.8423, -29.7248, 23.7338, 0.81", "-40.0587, -30.0711, 23.8722, 0.66", "-40.3545, -30.5292, 24.0672, 0.52", "-40.7626, -31.1325, 24.2927, 0.59", "-41.0365, -31.4874, 24.4146, 0.59", "-41.5165, -32.0589, 24.6016, 0.44", "-41.9292, -32.5008, 24.7433, 0.44", "-42.4805, -33.024, 24.929, 0.44", "-43.0869, -33.5352, 25.1258, 0.59", "-43.6997, -34.0169, 25.3101, 0.66", "-44.1086, -34.3271, 25.4303, 1.03", "-44.4394, -34.585, 25.5378, 1.03", "-44.7518, -34.8478, 25.6906, 1.03", "-45.3195, -35.3628, 25.9873, 0.81", "-45.7397, -35.795, 26.2626, 0.66", "-46.3762, -36.5715, 26.7811, 1.11", "-46.9445, -37.379, 27.3455, 0.52", "-47.5203, -38.3714, 28.1236, 0.88", "-47.9442, -39.2669, 28.9074, 1.03", "-48.1458, -39.7941, 29.4314, 1.11", "-48.2261, -40.0418, 29.6906, 1.03", "-48.3392, -40.4565, 30.095, 0.81", "-48.5625, -41.254, 30.8835, 0.66", "-48.6376, -41.4825, 31.1016, 0.66", "-48.8493, -42.0683, 31.6699, 0.52", "-49.0337, -42.5612, 32.0844, 0.52", "-49.2591, -43.1499, 32.5308, 0.59", "-49.4939, -43.7306, 32.9146, 0.59", "-49.7681, -44.3352, 33.2559, 0.74", "-49.9828, -44.7298, 33.4902, 0.74", "-50.2675, -45.1504, 33.7739, 0.52", "-50.5224, -45.454, 34.0189, 0.52", "-50.8764, -45.812, 34.358, 0.52", "-51.2414, -46.1601, 34.7233, 0.44", "-51.793, -46.6833, 35.3128, 0.44", "-52.267, -47.1458, 35.8428, 0.81", "-52.641, -47.5531, 36.2949, 0.96", "-52.9679, -47.9843, 36.7359, 0.96", "-53.326, -48.605, 37.2999, 0.88", "-53.5024, -49.0183, 37.619, 0.59", "-53.6579, -49.4608, 37.9206, 0.81", "-53.8279, -49.9705, 38.2491, 0.81", "-53.9754, -50.3858, 38.5145, 0.81", "-54.1485, -50.8484, 38.8079, 0.44", "-54.3041, -51.2876, 39.0412, 0.37", "-54.5215, -51.9823, 39.3298, 0.37", "-54.6677, -52.4975, 39.4706, 0.81", "-54.8009, -52.9905, 39.5125, 1.03", "-54.9082, -53.4009, 39.4912, 1.03", "-55.2682, -54.6464, 39.3097, 0.52", "-55.5063, -55.3845, 39.1459, 0.74", "-55.6441, -55.7986, 39.0366, 0.74", "-56.0085, -56.7537, 38.7609, 0.44", "-56.2387, -57.2516, 38.6152, 0.44", "-56.6447, -57.9639, 38.4335, 0.37", "-56.9095, -58.3543, 38.3648, 0.37", "-57.3734, -58.9986, 38.2944, 0.29", "-57.79, -59.5918, 38.2602, 0.29", "-58.179, -60.1894, 38.2552, 0.37", "-58.6373, -60.9695, 38.2635, 0.59", "-58.8641, -61.3688, 38.2783, 0.59", "-59.1095, -61.7831, 38.3057, 0.81", "-59.3342, -62.1391, 38.3372, 0.81", "-59.6775, -62.6998, 38.4029, 0.66", "-60.1051, -63.4149, 38.4921, 0.29", "-60.6406, -64.3199, 38.5779, 0.29", "-61.0285, -64.9484, 38.6336, 0.29", "-61.2573, -65.2972, 38.6616, 0.44", "-61.5496, -65.7102, 38.6901, 0.44", "-61.806, -66.0537, 38.7074, 0.22", "-62.2281, -66.6618, 38.7206, 0.22", "-64.5066, -73.4674, 40.3391, 0.22", "-66.3407, -80.5734, 41.0725, 0.22", "-66.8952, -87.8563, 42.3301, 0.22", "-67.0004, -95.0462, 44.1428, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-39.3417, -4.88721, 30.3634, 1.18", "-40.6023, -5.34556, 30.3613, 1.18", "-41.2909, -5.70195, 30.3437, 1.18", "-42.0932, -6.20989, 30.3497, 1.03", "-43.1857, -7.00223, 30.3992, 0.96", "-43.8193, -7.55506, 30.4589, 1.11", "-44.4181, -8.14863, 30.5454, 1.11", "-45.0411, -8.95662, 30.6857, 1.11", "-45.4938, -9.64789, 30.8438, 0.88", "-45.8598, -10.2707, 31.0362, 0.88", "-46.4137, -11.2095, 31.4309, 0.88", "-46.7819, -11.762, 31.7, 1.25", "-47.1763, -12.2612, 31.9753, 1.25", "-47.7708, -12.8523, 32.3351, 1.55", "-48.6353, -13.5373, 32.7525, 1.03", "-49.2188, -13.9074, 32.9945, 0.96", "-49.8886, -14.2446, 33.192, 1.11", "-50.5761, -14.5549, 33.3653, 1.11", "-51.5579, -14.9508, 33.5608, 1.11", "-52.1818, -15.1677, 33.649, 1.33", "-52.9, -15.3896, 33.6927, 1.55", "-53.9905, -15.7503, 33.7195, 1.4" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-9.92919, -48.0866, 13.151, 0.52", "-10.1694, -52.0303, 10.0733, 0.52", "-10.1614, -52.8394, 9.57253, 0.52", "-10.096, -53.9262, 9.04, 0.52", "-9.97679, -55.0364, 8.5588, 0.52", "-9.86606, -55.9569, 8.21043, 0.74", "-9.73937, -56.9705, 7.83737, 0.74", "-9.52701, -58.3403, 7.51526, 0.59", "-9.33477, -59.4853, 7.22241, 0.59", "-9.02847, -61.0596, 6.73542, 0.44", "-8.78522, -62.3333, 6.22833, 0.44", "-8.55228, -63.6673, 5.62658, 0.81", "-8.32953, -65.0964, 4.97257, 0.88", "-8.12285, -66.5275, 4.29215, 0.29", "-7.91475, -68.0919, 3.563, 0.29", "-7.64175, -70.3078, 2.60162, 0.44", "-7.54078, -71.1292, 2.26932, 0.44", "-7.34022, -72.8311, 1.69544, 0.29", "-7.24281, -73.6761, 1.4841, 0.29", "-7.07396, -75.0744, 1.24955, 0.74", "-6.98367, -75.7607, 1.1973, 1.03", "-6.84797, -76.5516, 1.16718, 1.03", "-6.64766, -77.5681, 1.1195, 0.81", "-6.09431, -80.0249, 0.998217, 0.29", "-5.61105, -81.9116, 0.918357, 0.29", "-5.23552, -83.1805, 0.870551, 0.29", "-4.53216, -85.3719, 0.794982, 0.29", "-4.18627, -86.3459, 0.767245, 0.29", "-3.79703, -87.2933, 0.743858, 0.81", "-3.44045, -88.0007, 0.735853, 1.11", "-2.74095, -89.132, 0.754629, 0.59", "-2.18178, -89.8775, 0.787782, 1.11", "-1.54616, -90.5995, 0.836876, 1.11", "-0.52339, -91.6833, 0.896117, 0.52", "0.082725, -92.3154, 0.924007, 0.88", "0.855705, -93.0999, 0.957067, 0.96", "1.41818, -93.6577, 0.981877, 1.03", "2.24686, -94.4676, 0.997247, 0.96", "2.83492, -95.0469, 0.996207, 0.52", "3.75399, -95.9895, 0.985067, 0.29", "4.57185, -96.8493, 0.966077, 0.59", "5.14191, -97.4653, 0.950177, 0.59", "5.90289, -98.3038, 0.879767, 0.74", "6.25394, -98.701, 0.816288, 0.52", "6.72981, -99.2724, 0.691454, 0.52", "7.51533, -100.298, 0.432142, 0.96", "7.79316, -100.707, 0.33304, 1.11", "8.72421, -102.214, 0.0138067, 0.44", "9.62464, -103.742, -0.238176, 0.37", "10.0996, -104.58, -0.35576, 0.44", "10.4219, -105.156, -0.420646, 0.44", "11.1704, -106.501, -0.523801, 0.29", "11.6625, -107.338, -0.541119, 0.29", "12.3905, -108.531, -0.470337, 0.22", "13.0483, -109.569, -0.371408, 0.22", "13.4289, -110.18, -0.326942, 0.22", "13.7817, -110.778, -0.295998, 0.81", "14.2791, -111.693, -0.267496, 0.96", "14.7054, -112.575, -0.254069, 1.18", "14.8437, -112.908, -0.252618, 1.18", "15.4426, -114.472, -0.282746, 0.29", "15.695, -115.217, -0.312598, 0.29", "15.9405, -116.002, -0.349936, 0.52", "16.1785, -116.759, -0.37915, 0.52", "16.5311, -117.777, -0.415614, 0.66", "16.99, -118.958, -0.449937, 0.96", "17.3219, -119.674, -0.467233, 1.11", "17.7917, -120.581, -0.494284, 0.66", "18.5573, -121.989, -0.551522, 0.22", "19.0395, -122.848, -0.60052, 0.44", "19.3184, -123.333, -0.637113, 0.44", "20.0434, -124.581, -0.741577, 0.29", "20.4825, -125.338, -0.821719, 0.29", "20.9653, -126.223, -0.959741, 0.22", "21.3913, -127.01, -1.13687, 0.59", "21.6445, -127.478, -1.28272, 0.59", "22.0439, -128.105, -1.66367, 0.29", "22.3064, -128.457, -1.95073, 0.52", "22.9075, -129.181, -2.62552, 0.52", "23.4781, -129.817, -3.30095, 0.96", "24.1577, -130.546, -4.12534, 0.66", "26.1135, -132.518, -6.58722, 0.22", "26.9096, -133.27, -7.59467, 0.22", "27.2186, -133.557, -8.00724, 0.22", "28.1217, -134.357, -9.21813, 0.22", "28.8335, -134.966, -10.1537, 0.66", "29.4418, -135.484, -10.9064, 0.66", "30.16, -136.113, -11.7545, 0.15", "31.4843, -137.234, -13.2609, 0.74", "31.9157, -137.584, -13.7101, 0.74", "33.865, -139.065, -15.2921, 0.22", "34.8842, -139.822, -15.8892, 0.22", "35.5251, -140.315, -16.1472, 0.22", "36.4288, -140.991, -16.4214, 0.81", "36.8143, -141.281, -16.5025, 0.81", "39.2764, -143.187, -16.916, 0.22", "41.6151, -144.975, -17.197, 0.22", "43.1122, -146.099, -17.3754, 0.22", "44.4904, -147.157, -17.5353, 0.59", "45.3573, -147.874, -17.6317, 0.59", "45.9202, -148.385, -17.7001, 0.37", "46.657, -149.118, -17.795, 1.25", "47.335, -149.832, -17.8771, 1.77", "47.9725, -150.552, -17.9273, 1.77", "49.5532, -152.541, -17.9751, 0.29", "50.6905, -154.113, -18.0059, 0.29", "51.148, -154.801, -18.012, 0.74", "51.5243, -155.411, -18.0101, 0.66", "52.4647, -157.006, -17.9994, 0.29", "52.9753, -157.905, -17.9997, 0.29", "53.7305, -159.231, -18.019, 0.29", "54.3769, -160.321, -18.0311, 0.22", "54.6495, -160.759, -18.0389, 0.66", "55.0327, -161.296, -18.0473, 0.88", "55.5256, -161.886, -18.0561, 0.96", "56.5923, -163.043, -18.0425, 0.22", "57.2672, -163.755, -18.0329, 0.29", "58.2843, -164.86, -18.0127, 0.29", "59.6604, -166.389, -17.9696, 0.29", "60.4244, -167.261, -17.9493, 0.66", "61.1383, -168.114, -17.9392, 1.11", "61.7864, -168.943, -17.9357, 1.47", "62.3608, -169.727, -17.9437, 1.47", "62.9996, -170.647, -17.9589, 1.03", "63.6196, -171.609, -17.9904, 1.4", "64.8963, -173.604, -18.1045, 0.37", "65.7181, -174.862, -18.1512, 0.29", "66.3855, -175.843, -18.1549, 0.44", "67.2299, -177.041, -18.1267, 0.44", "68.2121, -178.396, -18.0479, 1.33", "68.8307, -179.197, -17.9923, 1.92", "70.0005, -180.597, -17.88, 2.28", "70.6679, -181.314, -17.8189, 2.28", "71.5108, -182.121, -17.7568, 1.77", "72.6034, -183.084, -17.6557, 0.52", "74.0556, -184.317, -17.3697, 0.37", "75.0973, -185.191, -17.1081, 0.59", "75.9525, -185.91, -16.8817, 0.74", "77.086, -186.861, -16.5337, 1.03", "78.1557, -187.764, -16.1608, 0.44", "81.0585, -190.199, -15.0219, 0.22", "82.653, -191.561, -14.2962, 0.22", "83.1955, -192.04, -14.0329, 0.44", "83.9189, -192.714, -13.6597, 0.22", "84.1942, -192.982, -13.5104, 0.29", "84.6184, -193.381, -13.3202, 0.22" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-9.92919, -48.0866, 13.151, 0.81", "-9.42395, -49.6383, 14.2484, 0.81", "-9.35751, -50.1703, 15.339, 0.81", "-9.33417, -50.4911, 16.4293, 0.81", "-9.3321, -50.6457, 17.5882, 1.18", "-9.32362, -50.6975, 18.8035, 0.81", "-9.19792, -50.6662, 22.2918, 0.66", "-9.08775, -50.3049, 25.8661, 0.44", "-9.03936, -50.1386, 27.0518, 0.44", "-8.92595, -49.8879, 28.958, 0.81", "-8.83581, -49.7623, 29.9307, 0.81", "-8.618, -49.5821, 31.3038, 0.59", "-8.4422, -49.4922, 32.0542, 0.52", "-8.18544, -49.4133, 32.9056, 0.74", "-7.27746, -49.2714, 35.595, 0.44", "-6.74813, -49.2625, 36.9572, 0.37", "-5.62881, -49.2839, 39.547, 0.96", "-4.68822, -49.268, 41.6716, 1.18", "-3.8699, -49.1599, 43.5385, 0.59", "-3.33393, -49.077, 44.7645, 0.59", "-2.81629, -49.0376, 45.9324, 0.59", "-2.38219, -49.1235, 47.0008, 0.44", "-1.08673, -49.9889, 50.5262, 0.44", "-0.468063, -50.8905, 52.617, 0.44", "-0.246275, -51.4265, 53.5712, 0.37", "-0.011472, -52.1175, 54.6707, 0.37", "0.211656, -52.7702, 55.5562, 0.52", "0.641667, -53.8246, 56.635, 0.52", "1.1584, -54.8409, 57.4136, 0.44", "2.12483, -56.3406, 58.663, 0.37", "2.49444, -56.7509, 59.1307, 0.37", "3.13047, -57.2939, 60.0157, 0.59", "3.60158, -57.6374, 60.7712, 0.96", "4.35729, -58.1583, 62.2765, 0.88", "4.70614, -58.5076, 63.2698, 0.22", "4.79115, -58.7716, 63.8121, 0.22", "4.841, -59.6601, 65.1254, 0.22", "4.81241, -60.2147, 65.6621, 0.59", "4.75067, -60.8251, 66.134, 0.59", "4.67106, -61.7886, 66.6424, 0.44", "4.64848, -62.5242, 66.9421, 0.22", "4.66813, -63.4528, 67.2497, 0.22", "4.73596, -64.5012, 67.468, 0.22", "6.38616, -65.8193, 80.1286, 0.22" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "3.6883, -29.56, -25.0639, 0.52", "3.92625, -30.1412, -25.1176, 0.52", "4.04273, -30.4089, -25.1381, 0.74", "4.24841, -30.8398, -25.1664, 0.74", "4.44475, -31.2245, -25.1885, 0.66", "4.55529, -31.4304, -25.1988, 0.88", "4.64456, -31.5892, -25.2058, 0.88", "4.81066, -31.8533, -25.207, 0.37", "4.97344, -32.0877, -25.2084, 0.74", "5.12106, -32.2802, -25.21, 0.74", "5.34546, -32.5492, -25.213, 1.18", "5.53229, -32.76, -25.2134, 1.18", "5.72398, -32.9668, -25.2124, 1.03", "5.91877, -33.1723, -25.2045, 0.96", "6.08461, -33.3427, -25.1918, 1.11", "6.25548, -33.515, -25.1738, 1.03", "6.47813, -33.7405, -25.1404, 0.96", "6.67113, -33.9439, -25.1034, 0.88", "6.8785, -34.1677, -25.0589, 0.74", "7.01636, -34.3095, -25.0293, 0.59", "7.22482, -34.5083, -24.9848, 0.74", "7.39057, -34.6522, -24.9607, 0.74", "7.61716, -34.8238, -24.9462, 0.66", "7.90394, -35.0062, -24.9479, 1.11", "8.18092, -35.1555, -24.9672, 0.88", "8.38546, -35.2492, -24.9872, 0.88", "8.70627, -35.3767, -25.0368, 0.74", "8.96374, -35.4652, -25.0873, 0.74", "9.23059, -35.5597, -25.1531, 0.96", "9.41895, -35.6386, -25.2079, 0.81", "9.7305, -35.8041, -25.3154, 0.66", "10.0293, -36.0002, -25.4274, 0.37", "10.227, -36.1541, -25.5007, 0.37", "10.476, -36.3774, -25.6149, 0.59", "10.607, -36.5089, -25.6839, 0.88", "10.7609, -36.6784, -25.7715, 0.88", "10.985, -36.936, -25.8998, 0.81", "11.1782, -37.1447, -25.9922, 1.11", "11.3922, -37.3514, -26.078, 1.33", "11.5013, -37.4375, -26.1105, 1.25", "11.6173, -37.5174, -26.139, 1.03", "11.7831, -37.6231, -26.1706, 0.66", "12.0634, -37.7894, -26.2132, 0.29", "12.2853, -37.9153, -26.2338, 0.29", "12.4662, -38.014, -26.2411, 0.88", "12.6201, -38.0946, -26.2489, 1.18", "12.7803, -38.1751, -26.2602, 1.18", "12.9699, -38.2685, -26.2781, 0.88", "13.2161, -38.3814, -26.306, 0.74", "13.384, -38.4503, -26.3262, 0.88", "13.5535, -38.5142, -26.3467, 0.88", "13.7535, -38.5871, -26.3701, 0.74", "14.0258, -38.6912, -26.4086, 0.44", "14.1719, -38.7508, -26.4312, 0.66", "14.3646, -38.8326, -26.4612, 1.11", "14.4689, -38.8781, -26.4751, 1.25", "14.6071, -38.9381, -26.4899, 1.25", "14.975, -39.1, -26.5279, 0.81", "15.2339, -39.2159, -26.5554, 1.47", "15.4764, -39.3248, -26.582, 1.77", "15.6514, -39.4016, -26.6013, 1.92", "15.742, -39.4389, -26.6106, 1.92" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "3.6883, -29.56, -25.0639, 0.88", "2.83932, -31.1909, -27.1427, 0.88", "2.51603, -31.9979, -28.0185, 0.96", "2.19193, -32.9997, -29.0058, 0.74", "1.85003, -34.2836, -30.1902, 0.88", "1.67058, -35.0788, -30.8983, 1.11", "1.45125, -36.1762, -31.8438, 1.25", "1.27576, -37.5035, -32.8395, 1.18", "1.20715, -38.5591, -33.5961, 1.11", "1.19048, -39.3076, -34.0947, 1.55", "1.18571, -39.9959, -34.5129, 1.84", "1.20052, -40.4086, -34.7706, 1.99" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "4.54623, -37.3362, -21.8298, 0.59", "3.3222, -37.9307, -23.3913, 0.59", "2.92148, -38.0626, -23.8481, 0.66", "2.45405, -38.1655, -24.359, 0.81", "2.08941, -38.1969, -24.7836, 0.66", "1.70646, -38.1999, -25.281, 0.66", "1.36287, -38.1833, -25.788, 0.52", "1.06134, -38.1006, -26.3358, 0.52", "0.916929, -38.0492, -26.6645, 0.52", "0.496457, -37.9255, -27.6738, 1.11", "0.18227, -37.8761, -28.4544, 1.33", "-0.0860155, -37.8787, -29.1546, 1.47", "-0.682086, -37.9746, -30.7352, 1.03", "-0.949359, -38.0572, -31.4229, 1.11", "-1.37805, -38.2206, -32.4437, 0.44", "-1.77408, -38.3891, -33.2687, 1.4", "-2.22609, -38.5809, -34.1061, 1.69", "-2.51571, -38.7047, -34.5688, 2.14", "-2.9461, -38.8891, -35.1732, 2.14", "-3.28775, -39.0324, -35.6454, 1.69", "-3.74495, -39.2028, -36.2869, 0.59", "-4.05833, -39.3001, -36.7002, 0.29", "-4.51359, -39.4298, -37.3387, 0.29", "-4.74367, -39.5121, -37.6965, 0.74", "-5.09168, -39.6731, -38.3202, 0.74", "-5.29565, -39.8276, -38.8039, 0.81", "-5.47884, -40.0312, -39.3645, 0.81", "-5.81729, -40.4927, -40.5043, 0.44", "-5.99994, -40.7794, -41.151, 1.33", "-6.13033, -40.9857, -41.5774, 1.33", "-6.54552, -41.5972, -42.7386, 0.29", "-6.76866, -41.8942, -43.293, 0.29", "-6.97174, -42.1343, -43.7437, 0.88", "-7.09623, -42.2649, -44.0089, 1.11", "-7.23696, -42.401, -44.3236, 1.11", "-7.41021, -42.5669, -44.7177, 0.81", "-7.90475, -43.0887, -46.0152, 0.29", "-8.12972, -43.4364, -46.8592, 0.22", "-8.30566, -43.9011, -47.9788, 0.22", "-8.33157, -44.0248, -48.2691, 1.18", "-8.34992, -44.244, -48.7599, 1.4", "-8.32362, -44.7164, -49.7798, 1.03", "-8.17574, -45.4969, -51.3835, 0.29", "-7.94619, -46.2494, -52.9258, 0.52", "-7.75574, -46.7713, -53.9427, 0.81", "-7.69069, -46.9423, -54.2553, 0.81", "-7.4556, -47.5622, -55.2961, 0.59", "-7.29421, -47.9872, -55.9246, 0.29", "-7.05748, -48.5876, -56.6937, 0.52", "-6.85455, -49.0699, -57.2281, 0.52", "-6.60495, -49.597, -57.769, 0.37", "-6.16538, -50.4492, -58.59, 1.03", "-5.9492, -50.8511, -58.9423, 0.96", "-5.72753, -51.2566, -59.2767, 0.88", "-5.42394, -51.7931, -59.6742, 0.88", "-5.09958, -52.3416, -60.0553, 0.37", "-4.86063, -52.75, -60.2962, 0.29", "-4.65176, -53.1224, -60.4788, 0.22", "-4.46909, -53.483, -60.6434, 0.22", "-4.26237, -53.9204, -60.8414, 0.44", "-4.07057, -54.3405, -61.0083, 0.44", "-3.79854, -54.8735, -61.2428, 0.37", "-3.60513, -55.2298, -61.435, 0.37", "-3.24899, -55.8224, -61.7752, 0.88", "-2.91357, -56.3383, -62.0988, 1.33", "-2.61422, -56.7897, -62.3935, 1.55", "-2.09285, -57.5884, -62.9312, 0.74", "-1.72497, -58.1761, -63.3558, 0.52", "-1.40975, -58.7015, -63.7634, 0.37", "-1.19175, -59.0275, -64.0713, 0.88", "-0.956879, -59.3487, -64.3908, 1.03", "-0.78298, -59.5852, -64.6354, 0.74", "-0.308218, -60.2345, -65.2657, 1.03", "0.184786, -60.8815, -65.8903, 1.18", "0.811163, -61.6638, -66.6846, 1.47", "1.28424, -62.2625, -67.3406, 0.59", "1.62468, -62.7199, -67.8659, 0.29", "2.13111, -63.4674, -68.7177, 0.29", "2.37582, -63.8803, -69.158, 0.74", "2.69028, -64.4796, -69.7579, 0.88", "3.24501, -65.6757, -70.8354, 0.66", "3.51172, -66.243, -71.3235, 0.59", "3.75326, -66.7471, -71.7165, 0.81", "3.96822, -67.2199, -72.0369, 1.03", "4.21456, -67.7804, -72.3535, 0.59", "4.55507, -68.5582, -72.6965, 0.44", "4.8897, -69.2678, -72.9419, 0.29", "5.18678, -69.9143, -73.1859, 0.96", "5.33264, -70.2896, -73.3711, 1.18", "5.43796, -70.6568, -73.5903, 1.18", "5.48064, -70.8925, -73.7476, 1.18", "5.5545, -71.6377, -74.2859, 0.88", "5.5724, -72.4118, -74.8544, 0.29", "5.56071, -73.4244, -75.6357, 0.81", "5.52986, -74.0135, -76.1022, 1.03", "5.48914, -74.4688, -76.4532, 1.03", "5.44404, -74.8272, -76.724, 1.03", "5.37134, -75.2668, -77.0518, 0.74", "5.19332, -76.1298, -77.6784, 0.37", "4.9671, -77.0516, -78.3271, 0.29", "4.67561, -78.0721, -79.0262, 0.29", "4.56716, -78.4187, -79.253, 1.03", "4.40472, -78.9069, -79.554, 1.03", "4.30482, -79.1968, -79.7195, 1.18", "4.02351, -79.9845, -80.1277, 0.66", "3.71411, -80.8342, -80.558, 0.37", "3.46937, -81.486, -80.9026, 0.37", "3.17381, -82.2513, -81.3528, 0.81", "2.95087, -82.8104, -81.6989, 0.81", "2.65298, -83.5372, -82.163, 0.66", "2.38299, -84.1687, -82.581, 0.37", "1.94203, -85.1668, -83.2752, 0.22", "1.54112, -86.0202, -83.863, 0.74", "1.17892, -86.7325, -84.3503, 0.29", "0.855628, -87.3465, -84.7729, 0.29", "0.402799, -88.1758, -85.3413, 0.44", "0.154679, -88.6278, -85.6394, 0.44", "-0.208876, -89.2855, -86.0121, 0.22", "-0.428171, -89.6795, -86.2021, 0.22" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "4.54623, -37.3362, -21.8298, 0.52", "5.78643, -38.7577, -22.1001, 0.52", "6.33367, -39.5214, -22.2489, 0.52", "6.90642, -40.5108, -22.4348, 0.96", "7.51158, -41.8501, -22.6712, 0.96", "7.84804, -42.7435, -22.8198, 0.88", "8.28686, -44.1413, -23.0395, 0.66", "8.61736, -45.8269, -23.3235, 1.03", "8.77029, -47.1291, -23.5773, 1.11", "8.87074, -48.8961, -23.9475, 0.37", "8.88581, -49.4873, -24.0862, 0.29", "8.89526, -50.4166, -24.3462, 0.66", "8.88915, -51.3151, -24.6296, 0.88", "8.86663, -53.0675, -25.2254, 0.52", "8.87623, -54.146, -25.6401, 0.37", "8.91209, -55.3006, -26.1198, 0.37", "8.99078, -56.508, -26.6101, 0.29", "9.07797, -57.3125, -26.9297, 0.29", "9.16455, -57.9155, -27.1496, 0.74", "9.38746, -59.0861, -27.5644, 0.88", "9.62756, -60.0165, -27.9392, 0.66", "9.89336, -60.9151, -28.3219, 0.59", "10.2784, -62.0679, -28.8051, 0.81", "10.5214, -62.7369, -29.1131, 0.81", "10.9531, -63.8437, -29.6706, 0.59", "11.4241, -64.9137, -30.2223, 0.37", "11.8636, -65.8126, -30.7024, 0.29", "12.1553, -66.3455, -30.999, 0.96", "12.9053, -67.5228, -31.6405, 1.18", "13.5671, -68.4487, -32.0629, 0.81", "14.5751, -69.7218, -32.5153, 0.59", "15.0333, -70.2732, -32.6592, 0.96", "15.6374, -70.9566, -32.7824, 0.96", "16.4146, -71.8723, -32.8709, 0.52", "17.4359, -73.2012, -32.8654, 0.37", "17.8476, -73.8046, -32.8443, 0.37", "18.5295, -74.9829, -32.8187, 0.74", "18.9298, -75.7802, -32.8062, 0.74", "19.4146, -76.8664, -32.7949, 1.18", "19.736, -77.6448, -32.8048, 1.47", "20.018, -78.3387, -32.8405, 1.47", "20.4806, -79.519, -32.8669, 0.88", "20.8589, -80.565, -32.8728, 0.37", "21.0842, -81.2874, -32.8688, 0.37", "21.2564, -81.8982, -32.8452, 0.88", "21.4347, -82.64, -32.7942, 1.03", "21.5822, -83.3946, -32.6995, 0.74", "21.7299, -84.3162, -32.5316, 0.37", "21.8711, -85.367, -32.2799, 0.29", "21.9356, -86.1182, -32.0202, 0.29", "21.9435, -86.8114, -31.7235, 0.96", "21.9008, -87.6096, -31.3482, 1.25", "21.8507, -88.0401, -31.1161, 1.25", "21.7137, -88.8532, -30.6483, 0.66", "21.3802, -90.4598, -29.7242, 0.29", "21.1478, -91.4677, -29.1894, 0.29", "20.878, -92.6353, -28.6302, 1.55", "20.5929, -93.9896, -28.0707, 1.92", "20.4082, -95.0232, -27.6733, 1.77", "20.2657, -96.0355, -27.3172, 1.47", "20.1623, -97.296, -26.9315, 0.96", "20.138, -98.334, -26.6155, 0.59", "20.1544, -99.2757, -26.3396, 0.37", "20.2373, -100.772, -25.9501, 0.37", "20.2988, -101.479, -25.7586, 1.03", "20.3751, -102.137, -25.562, 1.4", "20.4716, -102.808, -25.3203, 1.55", "20.5513, -103.417, -25.0729, 1.69" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "6.98774, 16.2211, -17.9792, 1.92", "8.54412, 15.4725, -20.2661, 1.92", "9.41961, 15.1256, -21.3917, 0.74", "9.94898, 14.9531, -22.0368, 0.88", "10.6422, 14.7761, -22.8609, 0.44", "11.2404, 14.6658, -23.5363, 0.44", "11.9919, 14.5577, -24.341, 0.96", "12.6917, 14.4846, -24.8992, 1.18", "13.2819, 14.4445, -25.3416, 0.96", "13.9722, 14.3529, -25.8781, 0.44", "14.4883, 14.2002, -26.3273, 0.29", "14.7572, 14.0449, -26.5818, 0.52", "15.3828, 13.4837, -27.1529, 0.66", "15.9124, 12.8792, -27.5839, 0.96", "16.26, 12.4067, -27.8596, 1.33", "16.7385, 11.7504, -28.2235, 1.47", "17.4306, 10.8854, -28.7265, 1.03", "17.9385, 10.3692, -29.0557, 0.81", "18.5015, 9.93229, -29.3894, 0.52", "19.0494, 9.58259, -29.7083, 0.52", "19.9213, 9.06225, -30.202, 0.66", "20.5978, 8.65734, -30.5968, 0.66", "21.2524, 8.26964, -30.9955, 0.66", "22.244, 7.69461, -31.6032, 0.74", "23.1184, 7.19342, -32.1388, 0.74", "23.7051, 6.84922, -32.4867, 0.81", "24.5945, 6.29264, -33.0025, 0.52", "25.0964, 5.98382, -33.2781, 0.37", "25.8408, 5.57061, -33.6348, 1.18", "26.4559, 5.31086, -33.8572, 1.55", "27.0602, 5.13568, -34.0289, 1.77", "27.6776, 4.99425, -34.1834, 1.99", "28.2364, 4.8748, -34.3073, 1.99", "29.132, 4.65786, -34.506, 1.47", "30.3457, 4.29341, -34.7835, 0.52", "31.3506, 3.93209, -35.0121, 0.52", "32.1031, 3.59956, -35.2034, 0.96", "32.7102, 3.29979, -35.3697, 1.4", "33.2669, 3.00251, -35.5302, 1.77", "33.9061, 2.61803, -35.7287, 1.92", "34.614, 2.09625, -35.9736, 0.74", "35.4728, 1.34834, -36.2976, 0.44", "35.9183, 0.949654, -36.464, 0.44" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "6.98774, 16.2211, -17.9792, 0.66", "6.77472, 14.0188, -20.2314, 0.66", "6.57819, 11.987, -22.3092, 1.03", "6.45951, 10.7601, -23.5639, 1.18", "6.37759, 9.91321, -24.4301, 0.88", "6.21097, 8.19069, -26.1917, 1.69", "6.05306, 6.55813, -27.8612, 2.36" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.3496, 35.085, -13.4441, 0.44", "11.6026, 36.7746, -13.336, 0.44", "11.1818, 37.7691, -13.2837, 0.52", "10.8903, 38.5007, -13.2617, 0.66", "10.618, 39.1868, -13.2559, 0.74", "10.1675, 40.3288, -13.2879, 0.74", "9.73142, 41.3361, -13.3456, 0.52", "9.25756, 42.2907, -13.4442, 0.52", "8.68746, 43.2379, -13.6008, 1.11", "8.29714, 43.8526, -13.7306, 1.11", "7.57357, 44.8954, -13.9835, 0.59", "6.94966, 45.6861, -14.2141, 0.52", "6.18386, 46.5212, -14.5115, 0.52", "4.901, 47.6729, -14.9971, 1.84" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "12.3496, 35.085, -13.4441, 0.52", "12.9165, 36.6836, -13.1831, 0.52", "13.1749, 37.4366, -13.0918, 0.52", "13.4809, 38.3236, -13.0071, 0.52", "13.8017, 39.3038, -12.9342, 0.96", "14.0282, 40.0082, -12.8893, 0.96", "14.2545, 40.7384, -12.8503, 0.66", "14.56, 41.8895, -12.8462, 1.25", "14.8506, 42.9268, -12.8416, 1.25", "15.0793, 43.6712, -12.8367, 0.96", "15.4365, 44.6962, -12.8184, 0.52", "15.7255, 45.4299, -12.7969, 0.52", "15.8631, 45.7405, -12.7794, 0.81", "16.1871, 46.3145, -12.7216, 0.88", "16.5704, 46.8361, -12.6398, 1.03", "17.2325, 47.5711, -12.4877, 0.66", "17.7659, 48.0935, -12.3629, 0.52", "18.5514, 48.7968, -12.2119, 0.37", "19.2094, 49.3523, -12.1036, 0.37", "19.9382, 49.9314, -11.9978, 0.52", "20.6617, 50.4675, -11.9038, 0.52", "21.5361, 51.0781, -11.8045, 0.52", "22.7, 51.8179, -11.6874, 0.74", "23.4011, 52.1814, -11.6291, 0.96", "23.8871, 52.3846, -11.588, 1.11", "24.4027, 52.497, -11.5328, 1.11", "24.7684, 52.509, -11.5015, 1.11", "25.4082, 52.464, -11.4534, 0.59", "26.5473, 52.3643, -11.3688, 0.37", "27.0839, 52.3419, -11.3388, 0.37", "27.9639, 52.3544, -11.2924, 0.74", "29.3325, 52.4519, -11.2156, 0.44", "29.9958, 52.5381, -11.1703, 0.59", "30.7156, 52.6777, -11.109, 0.37", "31.7295, 52.9308, -10.9953, 0.52", "32.5262, 53.1339, -10.8836, 0.52", "33.1032, 53.2708, -10.7799, 0.44", "33.8943, 53.419, -10.5931, 0.81", "34.5523, 53.5138, -10.4354, 0.81", "35.3491, 53.617, -10.2436, 1.03", "35.8496, 53.6964, -10.1263, 1.18", "36.2966, 53.7777, -10.0295, 1.18", "36.7312, 53.8508, -9.94529, 0.81", "37.2389, 53.9184, -9.85467, 0.29", "38.3865, 54.0401, -9.66206, 0.44", "39.29, 54.1187, -9.56137, 0.66", "39.9952, 54.1865, -9.51013, 0.66", "40.8461, 54.2663, -9.44946, 0.81", "41.6206, 54.3292, -9.37502, 0.96", "41.9134, 54.3506, -9.33874, 0.96", "43.1636, 54.4302, -9.1213, 0.37", "44.1179, 54.5055, -8.89755, 0.37", "45.0662, 54.6129, -8.60208, 0.37", "45.6326, 54.7019, -8.3822, 0.37", "46.5072, 54.8578, -7.98442, 0.96", "46.9712, 54.9372, -7.73315, 1.18", "47.3481, 55.0, -7.48724, 1.18", "47.7861, 55.0751, -7.20767, 1.03", "48.2431, 55.1619, -6.94488, 0.88", "48.7744, 55.2614, -6.67356, 1.33", "49.3821, 55.3729, -6.37893, 1.33", "50.1478, 55.5236, -5.99787, 0.88", "50.8216, 55.6619, -5.65613, 0.66", "51.5987, 55.8389, -5.2728, 0.74", "52.1973, 56.0053, -4.98107, 0.88", "52.5953, 56.1395, -4.79184, 0.88", "53.4758, 56.501, -4.37164, 0.88", "54.2127, 56.8647, -3.97936, 0.44", "55.0039, 57.3296, -3.51027, 0.44", "55.968, 58.0049, -2.88031, 0.52", "56.9067, 58.7598, -2.19481, 0.66", "57.6462, 59.4406, -1.58445, 0.96", "58.3662, 60.2067, -0.886516, 1.4", "58.7305, 60.6675, -0.453866, 1.69", "59.1446, 61.2598, 0.115574, 1.84", "59.5597, 61.9073, 0.750527, 1.55", "60.1949, 62.9202, 1.7902, 1.33", "60.7961, 63.7934, 2.69268, 1.11", "61.3249, 64.4791, 3.39039, 0.74", "61.8578, 65.1133, 4.01535, 0.81", "62.445, 65.7598, 4.61431, 0.59", "63.0345, 66.3745, 5.10982, 0.52", "63.6806, 67.0105, 5.52499, 0.44", "64.041, 67.3421, 5.66237, 0.44", "64.6583, 67.8644, 5.78712, 0.81", "64.905, 68.0703, 5.80467, 0.81", "65.2936, 68.3994, 5.80029, 0.52", "65.6584, 68.7218, 5.78774, 0.52", "66.6286, 69.6281, 5.79963, 0.52", "67.4196, 70.3819, 5.81988, 0.88", "67.7851, 70.7034, 5.83213, 0.88", "68.3766, 71.185, 5.86342, 0.59", "68.9354, 71.6107, 5.89455, 0.59", "69.8345, 72.284, 5.95244, 0.74", "70.6116, 72.8608, 6.01778, 0.74", "71.5714, 73.5621, 6.04527, 0.44", "72.2571, 74.0461, 6.04202, 0.44", "73.2784, 74.7155, 6.01488, 0.66", "73.7781, 75.0185, 5.99544, 0.74", "74.2874, 75.2945, 5.97011, 0.74", "75.5808, 75.9474, 5.91013, 0.44", "76.1636, 76.2453, 5.89127, 0.44", "76.9767, 76.6429, 5.88326, 0.88", "77.4001, 76.8235, 5.8865, 1.03", "78.7433, 77.3111, 5.92011, 0.37", "79.3909, 77.5089, 5.95359, 0.37", "80.1783, 77.7063, 6.02517, 0.37", "81.0746, 77.9211, 6.11104, 0.37", "81.8033, 78.1098, 6.17746, 0.37", "82.6884, 78.3449, 6.26201, 0.74", "83.2759, 78.4863, 6.32598, 0.74", "83.7888, 78.5994, 6.36526, 0.74", "84.4211, 78.7225, 6.40183, 0.52", "85.425, 78.9177, 6.45113, 0.88", "86.013, 79.0465, 6.46168, 0.66", "86.7432, 79.2217, 6.44237, 0.37", "87.8936, 79.5392, 6.41062, 1.18", "88.3262, 79.6866, 6.40254, 1.18", "88.7628, 79.8763, 6.40574, 0.96", "89.5339, 80.3031, 6.45276, 1.03", "89.9853, 80.6259, 6.51018, 0.96", "90.7181, 81.2795, 6.68667, 0.29", "91.3568, 81.9684, 6.94345, 0.29", "92.0255, 82.7888, 7.27796, 0.52", "92.3773, 83.2729, 7.48795, 0.52", "92.8001, 83.9079, 7.78591, 0.52", "93.1657, 84.4726, 8.05241, 0.37", "93.6883, 85.2722, 8.43791, 0.59", "94.059, 85.8248, 8.71046, 0.59", "94.4986, 86.4489, 9.01078, 0.22", "95.2422, 87.4392, 9.44595, 0.22", "95.6423, 87.9241, 9.64275, 0.22", "96.1424, 88.469, 9.84878, 0.22", "96.6388, 88.9418, 10.014, 0.96", "97.1642, 89.4115, 10.1596, 1.03", "97.6729, 89.8862, 10.27, 0.74", "98.0808, 90.341, 10.3286, 0.29", "98.5341, 90.9876, 10.3674, 0.29", "99.1074, 92.0204, 10.3843, 0.29", "99.5386, 93.0318, 10.376, 0.37", "99.9678, 94.2592, 10.3166, 0.37", "100.37, 95.6017, 10.2196, 0.37", "100.697, 96.885, 10.1051, 0.37", "100.954, 98.1453, 9.98, 0.37", "101.207, 99.7072, 9.81775, 0.37", "101.418, 101.167, 9.65536, 0.66", "101.487, 101.652, 9.60128, 1.11", "101.596, 102.386, 9.52394, 0.52", "101.754, 103.418, 9.42566, 0.29", "101.88, 104.263, 9.35864, 0.29", "102.088, 105.619, 9.28648, 0.96", "102.184, 106.234, 9.27226, 1.47", "102.304, 106.967, 9.25412, 1.62", "102.423, 107.628, 9.23739, 1.62", "102.607, 108.545, 9.21494, 0.96", "102.79, 109.423, 9.20726, 0.59", "103.055, 110.645, 9.14648, 0.44", "103.332, 111.935, 9.04689, 0.37", "103.575, 113.168, 8.92183, 0.37", "103.859, 114.74, 8.71281, 0.29", "104.059, 116.03, 8.48946, 1.03", "104.273, 117.767, 8.12781, 0.66", "104.335, 118.388, 7.95516, 1.18", "104.404, 119.198, 7.68482, 1.18", "104.481, 120.001, 7.35607, 1.47", "104.633, 121.182, 6.8097, 0.37", "104.828, 122.216, 6.29804, 0.29", "105.191, 123.58, 5.60234, 0.96", "105.408, 124.191, 5.25807, 1.11", "105.969, 125.476, 4.4993, 0.52", "106.384, 126.31, 4.00782, 1.11", "106.877, 127.237, 3.49088, 1.11", "107.481, 128.365, 2.86973, 0.29", "107.933, 129.221, 2.42572, 0.44", "108.136, 129.62, 2.21709, 0.44", "108.391, 130.208, 1.93239, 0.29", "108.878, 131.489, 1.31782, 1.18", "109.222, 132.59, 0.86604, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-68.8202, 6.08377, 43.2907, 0.59", "-70.3657, 6.52795, 42.9429, 0.59", "-71.2327, 6.75656, 42.7698, 0.74", "-72.4432, 7.01624, 42.565, 0.74", "-73.6859, 7.23288, 42.3844, 0.96", "-74.6999, 7.40184, 42.2398, 1.11", "-75.4347, 7.54329, 42.1335, 1.11", "-76.4435, 7.78734, 42.0033, 0.96", "-77.5242, 8.10814, 41.8894, 1.03", "-78.286, 8.35668, 41.7992, 1.03", "-79.3899, 8.73973, 41.7204, 0.81", "-80.5733, 9.17536, 41.6888, 0.81", "-81.6817, 9.60023, 41.7075, 0.81", "-82.4856, 9.91809, 41.7407, 0.81", "-84.0237, 10.5196, 41.8256, 0.81", "-85.8168, 11.1002, 41.9476, 0.96", "-86.7643, 11.2879, 42.0341, 0.96", "-87.7541, 11.3258, 42.1258, 0.96", "-88.9143, 11.1862, 42.2251, 0.52", "-89.8162, 10.9361, 42.2982, 0.74", "-90.8279, 10.4647, 42.3894, 0.66", "-91.8194, 9.79451, 42.4049, 0.88", "-92.6685, 9.08068, 42.4233, 0.96", "-93.1706, 8.60746, 42.4429, 0.96", "-93.6232, 8.17008, 42.476, 0.96", "-94.0511, 7.80342, 42.5113, 0.96", "-94.7615, 7.40098, 42.5561, 0.74", "-95.3938, 7.22179, 42.5752, 0.74", "-96.0217, 7.14099, 42.583, 0.52", "-96.7726, 7.10389, 42.5791, 0.52", "-97.5741, 7.08909, 42.57, 0.74", "-98.449, 7.10523, 42.554, 0.74", "-99.3268, 7.14303, 42.5342, 0.88", "-100.441, 7.20089, 42.5087, 0.74", "-101.182, 7.23159, 42.4946, 0.74", "-102.448, 7.23745, 42.4988, 1.4", "-103.596, 7.27919, 42.4963, 0.88", "-104.703, 7.37372, 42.4403, 0.52", "-105.268, 7.45012, 42.3781, 0.52", "-105.658, 7.52059, 42.3186, 0.52", "-107.558, 7.85078, 42.0534, 1.03", "-109.001, 8.05648, 41.9395, 0.44", "-110.778, 8.20695, 41.9952, 0.52", "-111.558, 8.30175, 42.0784, 0.66", "-112.575, 8.54601, 42.2078, 0.66", "-113.86, 9.00768, 42.3741, 0.66", "-114.786, 9.42344, 42.4945, 0.52", "-115.608, 9.78305, 42.5879, 0.52", "-116.442, 10.2147, 42.6613, 0.52", "-117.494, 10.9412, 42.6192, 0.59", "-118.196, 11.5235, 42.5379, 0.59", "-118.798, 12.0673, 42.4383, 0.59", "-119.642, 12.8171, 42.2874, 0.44", "-120.481, 13.5014, 42.1547, 0.44", "-121.165, 13.9938, 42.077, 0.44", "-122.512, 14.864, 41.9868, 0.59", "-123.216, 15.281, 41.9642, 0.74", "-123.714, 15.546, 41.9683, 0.74", "-124.406, 15.8537, 41.9987, 0.59", "-125.101, 16.0846, 42.032, 0.59", "-125.799, 16.3055, 42.045, 0.59", "-126.851, 16.6957, 42.0076, 0.44", "-127.872, 17.1381, 41.9827, 0.44", "-128.675, 17.5124, 41.9922, 0.44", "-129.692, 17.9947, 42.0445, 0.44", "-130.743, 18.4778, 42.133, 0.52", "-132.042, 19.0933, 42.2645, 0.66", "-132.949, 19.5736, 42.3624, 0.74", "-133.79, 20.0709, 42.4444, 0.74", "-134.613, 20.6083, 42.511, 0.59", "-135.763, 21.3985, 42.5775, 0.29", "-136.443, 21.8376, 42.6022, 0.52", "-136.991, 22.176, 42.5905, 0.52", "-137.863, 22.7258, 42.5203, 0.52", "-138.726, 23.2838, 42.4051, 0.37", "-139.384, 23.7183, 42.3036, 0.29", "-139.725, 23.9359, 42.2526, 0.29", "-140.267, 24.2298, 42.1835, 0.52", "-141.055, 24.5832, 42.0997, 0.52", "-141.625, 24.7809, 42.0522, 0.66", "-142.231, 24.9615, 41.9976, 0.66", "-142.884, 25.1572, 41.9303, 0.59", "-143.564, 25.3685, 41.8528, 0.59", "-144.196, 25.5435, 41.782, 1.18", "-145.198, 25.7456, 41.6432, 1.03", "-146.229, 25.8791, 41.4703, 0.29", "-146.996, 25.9083, 41.3309, 0.29", "-147.663, 25.8857, 41.1973, 0.29", "-148.545, 25.8054, 41.0086, 0.29", "-149.697, 25.6543, 40.7479, 0.59", "-150.51, 25.5317, 40.5616, 0.59", "-151.475, 25.3565, 40.3574, 0.74", "-152.448, 25.1751, 40.155, 0.74", "-152.848, 25.1207, 40.075, 0.74", "-153.202, 25.1094, 40.0073, 0.74", "-154.11, 25.1914, 39.837, 0.37", "-154.647, 25.3076, 39.7714, 0.37", "-155.605, 25.6149, 39.6847, 0.96", "-156.375, 25.9036, 39.6066, 0.59", "-157.062, 26.2153, 39.57, 0.59", "-157.819, 26.6346, 39.5526, 0.37", "-159.26, 27.664, 39.5347, 0.29", "-160.048, 28.3875, 39.5144, 0.29", "-160.869, 29.2298, 39.5083, 0.88", "-161.915, 30.3742, 39.5114, 0.44", "-162.629, 31.1931, 39.5202, 0.37", "-163.345, 32.0933, 39.5156, 0.29", "-163.89, 32.9078, 39.4085, 0.29", "-174.158, 36.5407, 38.9608, 0.29" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-68.8202, 6.08377, 43.2907, 0.59", "-69.6456, 5.14494, 44.4094, 0.59", "-70.6085, 4.21159, 45.6026, 0.52", "-71.1746, 3.76681, 46.2253, 0.74", "-72.0802, 3.25352, 47.0794, 0.88", "-72.9777, 2.8855, 47.8403, 0.74", "-73.5301, 2.65896, 48.3087, 0.22", "-74.2565, 2.49636, 48.8443, 0.22", "-75.0396, 2.45679, 49.2899, 0.22", "-76.2268, 2.62729, 49.8276, 0.22", "-76.775, 2.81422, 49.9999, 0.22", "-84.4598, -2.01662, 58.5301, 0.22" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "48.3361, 76.0456, 84.0098, 0.74", "56.3489, 80.5852, 88.256, 0.74", "63.7443, 86.4326, 92.1241, 0.74", "72.6324, 90.3503, 95.0028, 0.74", "81.9515, 93.0534, 97.8286, 0.74", "91.0372, 95.931, 101.194, 0.74", "99.6517, 100.892, 103.33, 0.74" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "48.3361, 76.0456, 84.0098, 0.96", "53.5767, 78.8756, 86.8088, 0.74", "58.5354, 82.7312, 88.9132, 0.74", "63.6097, 85.362, 92.1586, 0.74", "69.1767, 87.1009, 95.1539, 0.74" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-53.9905, -15.7503, 33.7195, 0.59", "-56.3823, -15.7973, 32.6272, 0.59", "-57.2328, -15.7678, 32.2469, 0.74", "-57.9464, -15.6961, 31.9195, 0.74", "-58.9524, -15.511, 31.4507, 0.74", "-59.9388, -15.238, 30.9786, 0.74", "-61.0201, -14.8446, 30.4522, 0.74", "-62.1267, -14.285, 29.9689, 0.74", "-62.8473, -13.8671, 29.6397, 0.74", "-63.7592, -13.303, 29.2216, 0.81", "-64.5704, -12.7941, 28.8508, 0.81", "-65.3769, -12.3428, 28.5192, 0.81", "-66.0171, -12.0505, 28.3137, 0.81", "-66.8785, -11.7636, 28.0716, 0.96", "-67.6868, -11.5681, 27.875, 0.96", "-68.6329, -11.4032, 27.6662, 0.96", "-69.3884, -11.313, 27.5001, 0.74", "-70.1796, -11.2439, 27.3106, 0.74", "-71.0222, -11.1699, 27.0914, 0.74", "-72.0102, -11.0956, 26.7647, 0.96", "-72.8685, -11.057, 26.4028, 1.11", "-73.7218, -11.0232, 26.018, 0.88", "-74.4885, -11.0198, 25.6366, 0.96", "-74.9696, -11.0551, 25.3764, 1.18", "-76.3725, -11.2874, 24.5342, 1.47", "-77.2722, -11.522, 23.9108, 1.47" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-53.9905, -15.7503, 33.7195, 1.03", "-54.9841, -16.289, 33.6763, 1.03", "-56.0668, -16.8655, 33.6996, 0.66", "-56.7731, -17.2127, 33.8512, 0.66", "-57.5333, -17.5191, 34.1128, 0.88", "-58.3339, -17.8005, 34.4598, 0.59", "-59.4343, -18.2033, 35.0583, 0.59", "-59.7321, -18.2843, 35.2882, 1.25", "-61.0472, -18.4579, 36.5704, 1.33", "-61.6445, -18.4339, 37.2347, 0.44", "-61.9715, -18.3374, 37.6266, 0.44", "-62.7694, -17.9149, 38.5413, 0.88", "-63.3903, -17.4986, 39.1123, 0.52", "-63.9211, -17.1178, 39.4838, 0.52", "-64.569, -16.6286, 39.7786, 0.59", "-65.3076, -16.0315, 40.0657, 0.59", "-65.8329, -15.5962, 40.2581, 0.59", "-66.5339, -15.0327, 40.5328, 0.59", "-67.056, -14.6927, 40.7737, 0.52", "-67.7385, -14.3661, 41.1329, 0.52", "-68.3926, -14.1584, 41.5446, 0.66", "-69.2049, -14.0422, 42.1759, 0.88", "-69.8249, -14.055, 42.7966, 0.88", "-70.1425, -14.1339, 43.2231, 0.66", "-70.5274, -14.3516, 43.8768, 0.44", "-70.8484, -14.6701, 44.5981, 0.44", "-71.136, -15.1726, 45.6081, 0.44", "-71.1872, -15.4661, 46.2282, 0.66", "-71.1208, -15.8869, 47.2136, 0.81", "-71.0376, -16.1007, 47.7621, 0.59", "-70.8789, -16.318, 48.3855, 0.59", "-70.5573, -16.5941, 49.26, 0.66", "-69.8426, -16.9815, 50.7224, 0.66", "-69.6544, -17.0556, 51.0686, 0.44", "-75.2306, -15.9144, 57.9471, 0.44", "-80.4932, -14.0863, 64.9326, 0.44", "-85.8573, -12.7099, 71.9377, 0.44", "-90.9048, -12.3054, 79.2873, 0.44", "-95.4563, -10.1755, 86.6782, 0.44", "-98.4933, -8.09268, 94.8166, 0.44", "-100.285, -5.39541, 103.149, 0.44", "-102.744, -1.75061, 110.96, 0.44" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "6.38616, -65.8193, 80.1286, 0.74", "10.0287, -68.3848, 87.981, 0.74" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "6.38616, -65.8193, 80.1286, 0.96", "7.77556, -68.2008, 89.9857, 0.74", "8.02514, -72.1745, 99.463, 0.74", "10.0143, -74.7878, 109.164, 0.74", "12.1069, -77.3645, 118.853, 0.74", "14.5131, -78.9727, 128.656, 0.74", "16.8146, -78.9322, 138.6, 0.74", "17.0264, -78.109, 148.773, 0.74" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "15.742, -39.4389, -26.6106, 0.81", "16.4639, -39.1441, -24.6894, 0.81", "16.9466, -38.9484, -23.5339, 0.29", "17.1838, -38.8627, -23.016, 0.29", "17.8071, -38.6837, -21.8141, 0.37", "18.0862, -38.6228, -21.3239, 0.44", "18.4214, -38.5679, -20.7758, 0.37", "18.9161, -38.5314, -20.1475, 0.59", "19.2202, -38.5381, -19.8236, 0.59", "19.7582, -38.6092, -19.3204, 0.29", "20.1735, -38.7143, -18.9872, 0.52", "20.3886, -38.7945, -18.8171, 0.66", "20.9991, -39.0752, -18.3477, 0.29", "21.3736, -39.2673, -18.0649, 0.29", "21.7366, -39.4638, -17.7805, 0.66", "21.9983, -39.6191, -17.5622, 0.66", "22.2794, -39.7948, -17.3301, 0.37", "22.3861, -39.8674, -17.2398, 0.15" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "15.742, -39.4389, -26.6106, 0.44", "17.06, -40.4463, -26.8329, 0.44", "17.7763, -41.0136, -26.9323, 0.74", "18.3399, -41.4706, -27.0004, 0.74", "19.2176, -42.1858, -27.0961, 0.37", "19.7212, -42.5987, -27.1522, 0.52", "20.486, -43.2294, -27.239, 0.29", "21.1279, -43.7702, -27.3015, 0.66", "21.495, -44.0957, -27.3298, 0.74", "21.7289, -44.3125, -27.3513, 0.74", "22.6063, -45.1357, -27.4547, 0.22", "23.1505, -45.6409, -27.5276, 0.59", "23.4414, -45.9187, -27.5703, 0.81", "23.6922, -46.1559, -27.6056, 0.81", "24.5572, -46.9266, -27.7096, 0.29", "24.8882, -47.2039, -27.7416, 0.29", "25.5571, -47.718, -27.7878, 1.4", "26.1218, -48.1274, -27.7877, 1.62", "26.6802, -48.5192, -27.7626, 1.25", "27.6891, -49.1933, -27.6828, 0.29", "28.2851, -49.5744, -27.6174, 0.37", "28.8677, -49.9437, -27.5446, 0.37", "30.15, -50.7681, -27.3707, 0.29", "30.7186, -51.1355, -27.2911, 1.4", "31.1418, -51.4163, -27.2279, 1.4", "31.8417, -51.887, -27.1218, 1.03", "32.712, -52.458, -26.9977, 0.37", "33.3979, -52.8873, -26.9162, 0.59", "33.7858, -53.1117, -26.8839, 0.59", "35.002, -53.7909, -26.7724, 0.22", "35.6231, -54.1313, -26.7134, 0.52", "35.9989, -54.326, -26.6767, 0.52", "37.1129, -54.8553, -26.5767, 0.29", "37.4953, -55.022, -26.5442, 0.66", "37.8802, -55.1781, -26.5158, 0.81", "38.4479, -55.4184, -26.487, 0.52", "39.7049, -55.949, -26.4405, 0.22", "40.4137, -56.2324, -26.4243, 0.22", "40.8079, -56.3826, -26.4196, 0.52", "41.2409, -56.541, -26.4181, 0.52", "42.8048, -57.0625, -26.4296, 0.22", "43.9974, -57.4426, -26.4461, 0.22", "45.2526, -57.8434, -26.473, 0.22", "45.8955, -58.0474, -26.4869, 0.44", "46.2294, -58.1376, -26.4934, 0.44", "47.589, -58.4136, -26.5176, 0.22", "48.5077, -58.5248, -26.5329, 0.22", "49.6095, -58.6225, -26.5502, 0.74", "50.1583, -58.6512, -26.5587, 0.96", "51.2984, -58.6955, -26.5562, 0.22", "52.4611, -58.7479, -26.5201, 0.22", "54.2002, -58.8285, -26.4154, 0.22", "54.9477, -58.8778, -26.324, 0.66", "55.8911, -58.9754, -26.1617, 0.96", "56.7729, -59.1185, -25.9712, 0.96", "57.7674, -59.3663, -25.6969, 0.29", "58.5466, -59.5904, -25.4377, 0.29", "59.9006, -60.0139, -24.9275, 0.96", "60.6258, -60.2278, -24.6529, 1.69", "61.2899, -60.3832, -24.4077, 1.92", "62.3761, -60.5526, -24.052, 0.81", "63.327, -60.6377, -23.7629, 0.66", "63.724, -60.6508, -23.6474, 0.66", "64.4976, -60.6242, -23.4399, 0.29", "65.6353, -60.5332, -23.1199, 0.22", "66.3061, -60.461, -22.9273, 0.74", "66.9234, -60.3751, -22.7463, 0.74", "67.3958, -60.3204, -22.587, 0.74", "67.6922, -60.2964, -22.4774, 0.74", "68.6557, -60.2979, -22.1084, 0.29", "69.4232, -60.3687, -21.7942, 0.29", "70.1305, -60.4875, -21.495, 0.29", "70.8607, -60.6706, -21.193, 0.52", "71.2828, -60.812, -21.0085, 0.52", "72.2184, -61.1725, -20.592, 0.44", "73.0355, -61.5548, -20.2028, 0.81", "73.6393, -61.8882, -19.9122, 1.03", "74.1646, -62.23, -19.6579, 1.03", "74.8087, -62.6891, -19.3497, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "1.20052, -40.4086, -34.7706, 0.81", "2.61859, -41.565, -34.9052, 0.81", "3.63503, -42.3598, -35.0113, 0.66", "4.44163, -42.9914, -35.0873, 0.81", "5.48472, -43.8472, -35.2907, 1.18", "6.27052, -44.5316, -35.4948, 0.96", "6.90001, -45.1308, -35.6838, 0.81", "7.40617, -45.678, -35.9045, 0.96", "7.79256, -46.1577, -36.0946, 0.96", "8.82994, -47.6215, -36.6734, 0.59", "9.29622, -48.4221, -36.9762, 0.96", "9.73254, -49.3138, -37.3272, 0.96", "10.0688, -50.0721, -37.6253, 0.96", "10.3964, -50.8646, -37.9379, 0.66", "10.7881, -51.8388, -38.3343, 0.52", "11.2619, -53.0028, -38.781, 0.81", "11.6313, -53.9208, -39.1776, 1.18", "11.9361, -54.6597, -39.5155, 1.33", "12.2095, -55.327, -39.8309, 1.33", "12.6502, -56.379, -40.3303, 0.88", "13.0085, -57.2378, -40.7123, 0.37", "13.4127, -58.1748, -41.105, 0.37", "13.8236, -59.1339, -41.4885, 0.29", "13.956, -59.4543, -41.6252, 0.29", "14.2707, -60.2018, -41.9447, 0.88", "14.4992, -60.7349, -42.1791, 1.11", "14.6794, -61.1572, -42.3843, 1.11", "14.9074, -61.6981, -42.6752, 0.81", "15.4076, -62.9778, -43.4092, 0.44", "15.6345, -63.5933, -43.7603, 0.66", "15.8899, -64.3085, -44.1686, 0.29", "16.0554, -64.7511, -44.4407, 0.29", "16.3995, -65.627, -45.0159, 1.11", "16.6235, -66.1749, -45.3792, 1.25", "16.7698, -66.5061, -45.5896, 1.25", "17.0315, -67.0672, -45.9524, 1.03", "17.6787, -68.3633, -46.8184, 0.29", "18.3201, -69.563, -47.6621, 0.29", "18.5764, -69.9984, -47.9875, 0.88", "18.8358, -70.422, -48.3182, 1.25", "19.1562, -70.9319, -48.7128, 1.47", "19.5448, -71.5428, -49.1742, 1.25", "19.9192, -72.1056, -49.57, 0.81", "20.6969, -73.2032, -50.3192, 0.22", "21.1619, -73.8445, -50.7492, 0.81", "21.5192, -74.3107, -51.0509, 1.03", "21.9392, -74.8345, -51.3741, 1.03", "22.8265, -75.9053, -52.0008, 0.22", "23.2579, -76.4281, -52.2953, 0.29", "23.4132, -76.6302, -52.4183, 0.29", "24.0335, -77.4879, -52.977, 0.22", "24.2864, -77.8726, -53.2398, 0.96", "24.5751, -78.3459, -53.5651, 1.11", "24.921, -78.9774, -54.0077, 0.96", "25.7437, -80.6284, -55.144, 0.22", "25.9513, -81.0918, -55.4646, 0.29", "26.1433, -81.5806, -55.7894, 0.81", "26.3237, -82.0638, -56.096, 1.25", "26.4833, -82.5332, -56.3827, 1.11", "26.6529, -83.1243, -56.7173, 0.74", "26.9136, -84.2296, -57.3094, 0.37", "27.0525, -84.8445, -57.6402, 0.81", "27.1906, -85.4202, -57.9383, 0.96", "27.3642, -86.1665, -58.3671, 0.66", "27.5086, -86.7621, -58.7232, 0.44", "27.7682, -87.8412, -59.4052, 0.37", "27.9181, -88.4639, -59.7927, 0.44", "28.0878, -89.2057, -60.2736, 0.66", "28.4165, -90.6422, -61.1823, 0.88", "28.5339, -91.1703, -61.5146, 0.66", "28.6972, -92.0052, -62.0514, 0.44", "28.7852, -92.6024, -62.4029, 0.44", "28.923, -93.9035, -63.1199, 1.47", "28.9724, -94.597, -63.4684, 2.06", "29.011, -95.2738, -63.7555, 2.28", "29.0512, -96.3441, -64.1695, 1.62", "29.0477, -97.4507, -64.6469, 0.74", "29.0228, -97.9007, -64.8471, 0.66", "28.9669, -98.5186, -65.1144, 1.03", "28.906, -99.1086, -65.3962, 1.03", "28.8211, -99.9228, -65.8115, 0.74", "28.6557, -101.954, -66.9479, 0.52", "28.5913, -103.23, -67.7294, 0.29", "28.5842, -103.632, -67.9989, 0.29", "28.6081, -104.678, -68.7442, 0.81", "28.6321, -105.075, -69.0412, 0.81", "28.7596, -106.146, -69.8721, 0.29", "28.8774, -106.606, -70.2067, 0.29", "29.2669, -107.677, -71.0225, 0.88", "29.4865, -108.189, -71.3997, 0.88", "29.665, -108.537, -71.6268, 0.88", "30.2019, -109.46, -72.1986, 0.22", "31.0945, -110.789, -73.0057, 0.22", "31.4828, -111.283, -73.2967, 0.59", "31.6105, -111.418, -73.3737, 0.59", "32.4863, -112.2, -73.852, 0.15", "33.0264, -112.608, -74.122, 0.44", "33.5671, -112.946, -74.3613, 0.44", "34.4773, -113.454, -74.7475, 0.22", "35.4022, -113.93, -75.1202, 1.11", "35.8502, -114.143, -75.2863, 1.55", "36.5013, -114.421, -75.4996, 1.69", "37.6787, -114.889, -75.8645, 0.22", "38.2508, -115.104, -76.0025, 0.74", "38.576, -115.223, -76.0671, 0.81", "39.7698, -115.642, -76.2745, 0.22", "41.2315, -116.139, -76.5228, 0.22", "42.8879, -116.681, -76.7953, 0.22", "44.2937, -117.117, -77.0177, 0.88", "44.7001, -117.24, -77.08, 0.88", "47.7181, -118.157, -77.5246, 0.15", "48.6226, -118.426, -77.6483, 0.37" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "1.20052, -40.4086, -34.7706, 0.44", "1.25101, -41.1404, -35.9199, 0.44", "1.27773, -41.4821, -36.5222, 0.44", "1.33539, -42.0071, -37.4459, 0.44", "1.42283, -42.5784, -38.4486, 0.81", "1.52636, -43.2337, -39.6702, 0.96", "1.69048, -44.5875, -42.2717, 0.37", "1.74839, -45.0547, -43.2167, 0.37", "1.78332, -45.4597, -44.0433, 0.81", "1.79245, -45.7625, -44.6676, 0.81", "1.75935, -46.8911, -46.9479, 0.29", "1.71069, -47.3496, -47.8045, 0.29", "1.57797, -48.0107, -48.9543, 0.29", "1.32834, -48.8616, -50.3453, 1.25", "1.09054, -49.4776, -51.3034, 1.92", "0.790729, -50.142, -52.2483, 2.06", "0.321164, -51.1677, -53.6001, 0.29", "0.00562271, -51.8567, -54.4677, 0.29", "-0.297476, -52.516, -55.2751, 0.59", "-0.543986, -53.0291, -55.8602, 0.59", "-0.925798, -53.8414, -56.7932, 0.29", "-1.52115, -55.1798, -58.3664, 0.52", "-1.76442, -55.7791, -59.0888, 0.52", "-2.14349, -56.809, -60.4124, 0.22", "-2.42532, -57.6047, -61.5125, 0.22", "-2.82605, -58.7029, -63.0717, 1.11", "-2.97224, -59.1044, -63.669, 1.55", "-3.103, -59.4818, -64.2186, 1.55", "-3.54061, -60.9405, -66.3379, 0.22", "-3.71806, -61.6425, -67.2817, 0.74", "-3.80467, -62.0871, -67.8324, 0.96", "-3.9492, -63.0041, -68.8429, 0.81", "-4.08011, -63.9389, -69.7471, 0.22", "-4.1343, -64.3773, -70.1103, 0.37", "-4.21309, -65.0426, -70.5591, 0.22", "-4.28972, -65.7289, -71.0072, 0.81", "-4.38853, -66.6118, -71.5941, 0.96", "-4.55563, -68.0713, -72.5553, 0.22", "-4.62145, -68.6674, -72.9624, 0.22", "-4.7074, -69.5291, -73.5419, 0.88", "-4.81584, -70.6107, -74.2275, 1.11", "-4.95599, -72.0744, -75.1138, 0.22", "-5.0229, -72.6902, -75.4808, 0.59", "-5.08062, -73.1508, -75.7647, 0.59", "-5.15276, -73.6029, -76.0468, 0.59", "-5.32868, -74.552, -76.7014, 0.22", "-5.63419, -76.0658, -77.8389, 0.96", "-5.72719, -76.5141, -78.2036, 1.18", "-5.83183, -76.9848, -78.6209, 1.18", "-5.91668, -77.3627, -78.9748, 1.18", "-6.23992, -78.7971, -80.2753, 0.29", "-6.39366, -79.4948, -80.8674, 0.29", "-6.63734, -80.5598, -81.6459, 1.11", "-6.77698, -81.1696, -82.0377, 1.11", "-7.04585, -82.3521, -82.6788, 0.22", "-7.30939, -83.5753, -83.2362, 0.22", "-7.51959, -84.5903, -83.6003, 0.44", "-7.66956, -85.3522, -83.8406, 0.44", "-7.79934, -86.0025, -84.0212, 0.29", "-8.06514, -87.2274, -84.3374, 0.29", "-8.4068, -88.6345, -84.7172, 0.74", "-8.64392, -89.5155, -85.0004, 0.96", "-8.90284, -90.3284, -85.3301, 0.96", "-9.26716, -91.2735, -85.8076, 0.96", "-9.69113, -92.1555, -86.3473, 0.96", "-10.1621, -92.908, -86.9462, 0.88", "-10.639, -93.5032, -87.5797, 0.88", "-11.4327, -94.2968, -88.7111, 0.22", "-11.9117, -94.6987, -89.4351, 0.22", "-12.672, -95.233, -90.6217, 0.52", "-13.5496, -95.7529, -91.9463, 0.29", "-14.6309, -96.3016, -93.4954, 0.29", "-15.6429, -96.7802, -94.9307, 0.29", "-16.1888, -97.0457, -95.6952, 0.74", "-16.5694, -97.2496, -96.222, 0.74", "-17.5642, -97.8484, -97.5516, 0.22", "-18.5122, -98.5329, -98.7162, 0.22", "-19.3267, -99.2138, -99.7009, 0.22", "-19.8228, -99.6929, -100.299, 0.44", "-20.3356, -100.217, -100.859, 0.37", "-20.9685, -100.895, -101.516, 0.37", "-21.6634, -101.681, -102.231, 0.22", "-22.5695, -102.74, -103.113, 0.22", "-23.258, -103.516, -103.716, 0.59", "-24.1582, -104.489, -104.522, 0.52", "-24.7996, -105.167, -105.108, 0.37" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "20.5513, -103.417, -25.0729, 0.96", "20.8875, -104.303, -24.8388, 0.96", "21.1655, -105.081, -24.6817, 0.44", "21.3506, -105.673, -24.602, 0.37", "21.4574, -106.055, -24.5655, 0.37", "21.5755, -106.516, -24.5306, 0.81", "21.675, -106.939, -24.505, 0.96", "21.7451, -107.33, -24.5099, 0.96", "21.8459, -108.167, -24.5456, 0.22", "21.8808, -108.496, -24.5609, 0.22", "21.9295, -108.905, -24.5859, 0.88", "21.9959, -109.342, -24.6155, 1.11", "22.0673, -109.711, -24.6433, 1.11", "22.16, -110.259, -24.6483, 0.66", "22.2518, -110.939, -24.5993, 0.22", "22.2997, -111.388, -24.5443, 0.22", "22.3512, -111.97, -24.448, 0.44", "22.3757, -112.323, -24.3759, 0.66", "22.4273, -113.525, -24.0754, 0.22", "22.4228, -114.166, -23.8886, 0.22", "22.4022, -114.672, -23.7282, 0.74", "22.3881, -114.885, -23.6605, 0.74", "22.3595, -115.317, -23.5446, 0.52", "22.3482, -115.89, -23.4343, 0.29", "22.3591, -116.524, -23.3271, 0.88", "22.3534, -116.976, -23.2196, 1.25", "22.3336, -117.281, -23.1236, 1.4", "22.2819, -117.727, -22.9617, 1.18", "22.2168, -118.152, -22.7867, 0.96", "22.0127, -119.365, -22.2525, 0.29", "21.9369, -119.919, -22.0018, 0.52", "21.8953, -120.418, -21.7629, 0.22", "21.8826, -120.917, -21.5223, 0.22", "21.9057, -121.418, -21.2806, 0.59", "21.9694, -121.773, -21.1346, 0.59", "22.1592, -122.367, -20.9353, 0.29", "22.4436, -123.057, -20.7155, 1.11", "22.6037, -123.36, -20.6143, 1.33", "22.7848, -123.65, -20.5164, 1.33", "23.3627, -124.538, -20.2408, 0.22", "23.667, -125.023, -20.1099, 0.59", "23.9038, -125.409, -20.0152, 0.74", "24.2178, -125.894, -19.906, 0.74", "24.8944, -126.857, -19.6765, 0.22", "25.354, -127.465, -19.5247, 0.22", "25.9303, -128.142, -19.337, 0.22", "26.192, -128.443, -19.2574, 0.96", "26.566, -128.872, -19.1324, 0.96", "26.8826, -129.223, -19.0171, 0.81", "27.164, -129.464, -18.9058, 0.52", "27.5423, -129.679, -18.7244, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "20.5513, -103.417, -25.0729, 0.52", "20.1651, -104.127, -25.1355, 0.52", "19.9511, -104.581, -25.1648, 0.52", "19.7321, -105.113, -25.1891, 0.52", "19.5777, -105.526, -25.2041, 0.59", "19.4342, -105.953, -25.2174, 0.59", "19.3544, -106.216, -25.231, 0.59", "19.2639, -106.649, -25.2517, 0.22", "19.1982, -107.085, -25.2991, 0.22", "19.1559, -107.389, -25.3494, 0.37", "19.0821, -107.905, -25.4587, 0.22", "19.0078, -108.434, -25.5902, 0.37", "18.9858, -108.612, -25.6361, 0.37", "18.8955, -109.45, -25.8498, 0.29", "18.8458, -109.967, -25.9767, 1.11", "18.82, -110.267, -26.0438, 1.4", "18.7978, -110.489, -26.0867, 1.4", "18.7145, -111.125, -26.1484, 0.52", "18.6519, -111.522, -26.1571, 0.44", "18.6069, -111.738, -26.1369, 0.44", "18.5492, -111.952, -26.1094, 0.44", "18.3726, -112.496, -26.0329, 0.22", "18.1446, -113.114, -25.9457, 0.59", "18.0623, -113.317, -25.9177, 0.59", "17.6913, -114.124, -25.8228, 0.22", "17.3829, -114.73, -25.7697, 0.22", "17.1416, -115.155, -25.7438, 0.59", "16.9274, -115.492, -25.7338, 0.88", "16.7203, -115.781, -25.7429, 0.96", "16.2318, -116.371, -25.7645, 0.22", "15.8951, -116.734, -25.7839, 0.22", "15.5763, -117.067, -25.8012, 0.44", "15.3945, -117.256, -25.8073, 0.44", "15.1022, -117.576, -25.8222, 0.29", "14.7293, -118.015, -25.8498, 0.52", "14.1477, -118.773, -25.9069, 0.22", "13.604, -119.521, -25.9793, 0.22", "13.3898, -119.841, -26.0293, 0.59", "13.0548, -120.367, -26.1199, 0.44", "12.8041, -120.783, -26.2014, 1.18", "12.6621, -121.034, -26.2642, 1.4", "12.4283, -121.458, -26.3926, 1.4", "12.1557, -121.985, -26.5943, 1.18" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "35.9183, 0.949654, -36.464, 0.66", "36.485, 1.2175, -38.4263, 0.66", "36.8764, 1.33901, -39.6672, 0.44", "38.5219, 1.61547, -44.4027, 0.66", "39.3067, 1.63781, -46.532, 0.81", "39.8548, 1.61556, -47.9143, 0.96", "40.4913, 1.55788, -49.3808, 0.37", "40.8271, 1.48215, -50.0802, 0.59", "41.2778, 1.29635, -50.8699, 0.59", "42.4119, 0.626733, -52.2992, 0.44", "43.0039, 0.217406, -52.9609, 0.29", "43.8313, -0.39727, -53.8662, 0.29", "44.4951, -0.894485, -54.6741, 0.29", "45.1955, -1.42463, -55.7507, 0.29", "45.8861, -1.9623, -56.8663, 0.29", "46.6647, -2.60527, -58.1679, 1.33", "47.2745, -3.16371, -59.3116, 1.77", "48.0907, -3.95, -61.0733, 1.4", "49.3741, -5.10153, -64.1971, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "35.9183, 0.949654, -36.464, 0.59", "36.1803, 0.654362, -36.4999, 0.59", "37.3273, -0.721659, -36.7267, 0.29", "38.1739, -1.7749, -36.9443, 0.22", "38.5098, -2.20861, -37.0626, 0.59", "39.1732, -3.07732, -37.3565, 1.03", "39.6186, -3.66762, -37.5858, 0.74", "40.2065, -4.48322, -37.9596, 0.22", "40.7534, -5.26665, -38.3808, 0.22", "41.5397, -6.36859, -39.0265, 0.88", "42.0237, -7.00857, -39.3999, 1.25", "42.6177, -7.71894, -39.8121, 0.74", "43.305, -8.45613, -40.1997, 0.29", "43.5943, -8.71864, -40.3159, 0.29", "44.169, -9.15563, -40.4339, 0.74", "45.0907, -9.76544, -40.4903, 0.59", "45.686, -10.1163, -40.4567, 0.22", "46.3754, -10.4554, -40.3449, 0.22", "47.0986, -10.7487, -40.1642, 0.66", "47.5832, -10.9322, -40.0086, 0.81" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "6.05306, 6.55813, -27.8612, 1.11", "5.8619, 5.81927, -28.5367, 1.11", "5.86107, 4.71275, -29.7249, 0.88", "5.99479, 4.21897, -30.3588, 0.74", "6.31607, 3.59464, -31.3091, 0.81", "6.79848, 2.98624, -32.4621, 0.81", "7.27841, 2.53221, -33.513, 1.11", "8.13561, 1.87969, -35.1793, 1.33", "9.03857, 1.32558, -36.7253, 1.4", "10.1689, 0.707693, -38.568, 1.03", "11.6594, -0.0433632, -40.8251, 1.25", "12.7799, -0.55257, -42.3924, 1.4", "13.4835, -0.848925, -43.3062, 1.18", "14.7541, -1.34022, -44.7567, 1.11", "16.2851, -1.92334, -46.289, 1.25", "17.0085, -2.18808, -46.9146, 1.25", "17.9689, -2.5077, -47.6203, 0.81", "19.4951, -2.91374, -48.6307, 1.4", "20.6987, -3.12144, -49.3841, 1.11", "22.3049, -3.27412, -50.2569, 1.33", "23.347, -3.33258, -50.8161, 1.33", "24.5828, -3.39474, -51.5416, 0.44", "25.6075, -3.45778, -52.1957, 0.44", "26.3227, -3.4908, -52.6521, 0.81", "27.1994, -3.52271, -53.1875, 0.81", "29.0612, -3.56184, -54.2879, 0.29", "29.8211, -3.59524, -54.7128, 0.66", "30.5021, -3.64537, -55.0813, 0.66", "31.5102, -3.73411, -55.5523, 1.03", "32.1919, -3.78891, -55.8221, 1.03", "33.7004, -3.87252, -56.3079, 0.29", "34.7787, -3.90354, -56.5516, 0.29", "36.4176, -3.93907, -56.8747, 1.25", "37.5297, -3.95665, -57.0637, 1.62", "38.3018, -3.96491, -57.1839, 1.92", "39.0133, -3.96831, -57.2814, 1.33", "40.1269, -3.96958, -57.4189, 0.81", "41.112, -3.9645, -57.5841, 0.29", "42.0151, -3.98055, -57.7643, 0.29", "42.4966, -4.00281, -57.888, 0.29", "43.5645, -4.07854, -58.1727, 0.74", "44.2504, -4.14192, -58.3589, 0.74", "45.5278, -4.2842, -58.741, 0.74", "46.532, -4.40539, -59.0425, 0.29", "47.1822, -4.47347, -59.2395, 0.29", "48.1645, -4.52635, -59.549, 0.81", "49.254, -4.49652, -59.921, 0.81", "50.3002, -4.35703, -60.3527, 0.59", "51.3321, -4.1026, -60.8729, 0.29", "52.2938, -3.79155, -61.455, 0.29", "53.3495, -3.44037, -62.1813, 0.29", "54.2, -3.15555, -62.8122, 0.66", "55.7244, -2.66494, -63.97, 0.29", "57.2965, -2.21723, -65.1589, 0.29", "58.3166, -1.99659, -65.9222, 0.59", "59.4333, -1.87775, -66.6857, 0.29", "60.1411, -1.90314, -67.0753, 1.03", "60.8037, -2.02038, -67.3453, 1.03", "61.3979, -2.18981, -67.5079, 0.74", "62.2267, -2.46771, -67.6553, 0.44", "63.1033, -2.7524, -67.7617, 0.29", "64.3804, -3.1459, -67.8878, 0.29", "65.5339, -3.53845, -68.0073, 0.96", "66.4637, -3.87498, -68.1062, 1.11", "67.4182, -4.23364, -68.2052, 1.11", "68.4552, -4.66238, -68.2792, 0.81", "69.3878, -5.09619, -68.3119, 0.44", "70.4363, -5.65482, -68.3026, 0.44", "70.8693, -5.91779, -68.2779, 0.59", "71.8266, -6.56921, -68.1983, 0.37", "72.9865, -7.43149, -68.0887, 0.29", "73.4788, -7.81367, -68.0382, 0.29", "74.3046, -8.43944, -67.9434, 1.18", "75.0638, -8.97742, -67.8563, 1.18", "75.6346, -9.34733, -67.798, 1.18", "76.1166, -9.62632, -67.7583, 1.4", "76.6615, -9.89686, -67.728, 1.18", "78.1962, -10.5568, -67.6452, 0.29", "79.0659, -10.8685, -67.6008, 0.29", "80.2699, -11.2596, -67.5385, 0.29", "81.3335, -11.5688, -67.4853, 0.52", "82.0443, -11.75, -67.4534, 0.52", "82.9791, -11.9525, -67.4231, 0.29", "83.7795, -12.0675, -67.426, 0.52" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "6.05306, 6.55813, -27.8612, 0.81", "4.22847, 6.24704, -28.0825, 0.81", "3.40938, 6.18441, -28.1858, 0.81", "2.30742, 6.1403, -28.412, 0.74", "1.54472, 6.11608, -28.6516, 0.74", "0.570657, 6.09296, -29.0071, 0.96", "-0.126705, 6.08646, -29.2829, 1.18", "-0.816192, 6.12654, -29.588, 1.33", "-2.032, 6.25202, -30.1294, 1.03", "-3.23663, 6.41911, -30.6694, 0.81", "-4.19926, 6.54559, -31.1227, 1.33", "-5.01216, 6.62494, -31.5159, 1.84", "-5.82162, 6.68628, -31.8926, 1.69", "-6.57461, 6.74441, -32.1846, 1.69", "-6.99685, 6.81237, -32.2643, 1.69" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "4.901, 47.6729, -14.9971, 0.96", "5.40656, 46.2149, -16.0963, 0.96", "6.20206, 43.9452, -17.4089, 0.88", "6.53297, 42.9814, -17.9285, 0.74", "6.84876, 42.0712, -18.3926, 0.88", "7.22603, 41.0373, -18.9223, 0.59", "7.69632, 39.7363, -19.6079, 0.59", "8.15372, 38.4517, -20.2335, 1.03", "8.59052, 37.3639, -20.8069, 1.03", "9.19188, 36.0788, -21.6656, 1.18", "9.65934, 35.293, -22.3108, 1.55", "10.8419, 33.7359, -23.867, 0.74", "11.79, 32.7447, -24.9945, 0.74", "12.7962, 31.8857, -26.0088, 0.81", "13.7681, 31.1667, -26.8598, 0.66", "14.9289, 30.4353, -27.7355, 0.52", "16.0641, 29.7762, -28.4649, 0.52", "17.3637, 29.0603, -29.2017, 0.44", "18.3217, 28.496, -29.7301, 0.44", "20.0271, 27.3824, -30.6569, 0.96", "21.0143, 26.6935, -31.1802, 1.03", "21.8925, 26.0507, -31.6546, 1.11", "22.9722, 25.2925, -32.2592, 0.81", "24.1567, 24.4503, -32.9585, 0.52", "25.0963, 23.761, -33.4887, 1.18", "25.6667, 23.3021, -33.7706, 1.18", "26.2638, 22.7763, -34.0537, 0.88", "27.5441, 21.62, -34.4989, 0.44", "28.2537, 20.9542, -34.6342, 0.37", "29.0115, 20.2023, -34.6993, 0.29", "29.4499, 19.7467, -34.7225, 0.52", "29.8836, 19.2978, -34.7236, 0.66", "30.8997, 18.2331, -34.6667, 0.44", "31.8575, 17.2128, -34.5466, 0.88", "32.2913, 16.7515, -34.4966, 1.03", "32.7646, 16.2267, -34.447, 0.74", "33.6509, 15.2331, -34.3709, 0.29", "34.2122, 14.5918, -34.3406, 0.29", "34.8048, 13.8992, -34.3701, 0.59", "35.1154, 13.5168, -34.3964, 0.59", "35.5678, 12.9442, -34.4679, 0.44", "36.1204, 12.2403, -34.5965, 0.29", "37.133, 10.9279, -34.9409, 0.29", "38.3041, 9.37502, -35.4299, 0.29", "39.227, 8.10694, -35.9447, 0.29", "39.9582, 7.05553, -36.4175, 1.11", "40.3625, 6.422, -36.7157, 1.47", "40.7262, 5.83728, -37.0021, 1.69", "41.1429, 5.17365, -37.3226, 1.55", "41.9829, 3.93519, -37.8794, 1.4", "43.2557, 2.32561, -38.5975, 0.44", "43.9398, 1.54476, -38.9443, 0.44", "45.4873, -0.10241, -39.7264, 0.44", "46.2794, -0.900663, -40.1154, 0.44", "47.0033, -1.56746, -40.3974, 0.44", "48.6061, -2.87418, -40.8631, 1.25", "49.6916, -3.63769, -41.1322, 1.47", "50.6477, -4.23701, -41.3391, 1.47", "51.7809, -4.89308, -41.5976, 1.03", "54.5408, -6.45837, -42.2485, 0.44", "56.0282, -7.306, -42.5766, 0.59", "57.2427, -7.98825, -42.801, 0.74", "58.4771, -8.65444, -42.9901, 0.81", "61.2943, -10.0731, -43.4255, 0.37", "62.3961, -10.5817, -43.6779, 0.37" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "4.901, 47.6729, -14.9971, 1.25", "4.31491, 48.8006, -14.7805, 1.25", "3.8156, 49.6795, -14.5892, 1.25", "3.20625, 50.6649, -14.338, 1.4", "2.83851, 51.2353, -14.1814, 1.25", "2.36189, 51.9675, -13.9799, 1.03", "1.59889, 53.1073, -13.6982, 0.74", "1.05171, 53.892, -13.5116, 1.03", "0.499767, 54.6546, -13.3574, 1.55", "0.261304, 54.9874, -13.312, 1.55", "-0.320355, 55.8726, -13.2463, 0.88", "-0.777299, 56.6875, -13.2405, 0.59", "-1.1816, 57.5891, -13.303, 0.96", "-1.44847, 58.3798, -13.3753, 1.33", "-1.69997, 59.3556, -13.4852, 1.33", "-1.88244, 60.2038, -13.5815, 1.33", "-2.00599, 60.8879, -13.654, 1.25", "-2.11572, 61.5098, -13.7075, 1.25", "-2.27387, 62.256, -13.7774, 1.03", "-2.48598, 63.007, -13.8502, 1.03", "-2.81802, 63.9506, -13.8938, 0.59", "-3.04426, 64.5269, -13.8727, 0.59", "-3.43626, 65.5052, -13.7591, 1.11", "-3.77652, 66.343, -13.5728, 1.47", "-4.25099, 67.5085, -13.2159, 1.25", "-4.68673, 68.5314, -12.8254, 1.11", "-5.09846, 69.4155, -12.4291, 0.96", "-5.5538, 70.3095, -12.0003, 0.81", "-6.04807, 71.1805, -11.5429, 0.96", "-6.48648, 71.8407, -11.1832, 0.74", "-7.01229, 72.4911, -10.8414, 0.52", "-7.76095, 73.2384, -10.5131, 0.52", "-8.4495, 73.7691, -10.3118, 0.52", "-9.0852, 74.1232, -10.2027, 0.88", "-9.79006, 74.4018, -10.1523, 1.18", "-10.2581, 74.5181, -10.1395, 1.18", "-10.989, 74.6125, -10.1508, 1.18", "-11.9343, 74.6348, -10.2082, 0.96", "-12.9725, 74.5748, -10.2409, 0.74", "-13.9037, 74.4801, -10.2518, 0.74", "-14.78, 74.3767, -10.2157, 1.11", "-15.7779, 74.2726, -10.1219, 1.11", "-16.501, 74.2169, -10.017, 1.11", "-17.9296, 74.1471, -9.74374, 1.03", "-18.8372, 74.1319, -9.51571, 1.69", "-19.6647, 74.1349, -9.28274, 2.06", "-20.6154, 74.1698, -8.98665, 2.14", "-21.2784, 74.2198, -8.76252, 2.28", "-21.9712, 74.3004, -8.52558, 2.65", "-22.4899, 74.3926, -8.40294, 2.65" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-77.2722, -11.522, 23.9108, 0.74", "-81.2058, -11.4779, 26.4649, 0.74", "-81.8697, -11.3918, 26.8541, 0.74", "-82.9854, -11.1484, 27.3985, 0.74", "-84.0525, -10.8885, 27.8544, 0.74", "-85.1442, -10.6638, 28.2133, 0.88", "-86.1422, -10.4774, 28.4656, 0.66", "-87.6884, -10.1667, 28.5268, 0.81", "-89.1098, -9.84296, 28.6138, 0.81", "-90.236, -9.60136, 28.7308, 0.88", "-92.0944, -9.31136, 29.0477, 0.74", "-93.0342, -9.25185, 29.2841, 0.74", "-93.794, -9.27773, 29.5871, 0.74", "-95.3278, -9.43949, 30.4208, 0.74", "-96.3341, -9.51266, 31.1695, 0.66", "-97.2392, -9.51192, 31.9853, 0.52", "-97.8369, -9.4775, 32.6189, 0.74", "-98.9453, -9.45841, 33.8642, 0.74", "-99.424, -9.47243, 34.3959, 0.59", "-100.378, -9.53637, 35.3131, 0.52", "-101.0, -9.57578, 35.8122, 0.52", "-101.647, -9.65242, 36.2449, 0.52", "-102.494, -9.84181, 36.7257, 0.96", "-103.12, -10.051, 37.0326, 0.96", "-104.274, -10.5192, 37.5413, 0.52", "-105.333, -11.0196, 37.9278, 0.52", "-106.437, -11.5647, 38.2542, 0.44", "-107.615, -12.1677, 38.5406, 0.44", "-108.345, -12.5619, 38.7023, 0.44", "-108.855, -12.8736, 38.8132, 0.44", "-109.895, -13.5697, 39.0467, 0.81", "-110.646, -14.0748, 39.2202, 0.81", "-111.62, -14.6822, 39.4787, 0.37", "-112.646, -15.3077, 39.8236, 0.29", "-113.447, -15.8197, 40.1823, 0.29", "-114.26, -16.3549, 40.6313, 0.29", "-115.213, -16.9621, 41.2905, 0.52", "-115.989, -17.4465, 41.8951, 0.52", "-116.786, -17.9187, 42.5598, 0.52", "-117.708, -18.4573, 43.3909, 0.52", "-118.175, -18.7406, 43.8613, 0.74", "-119.098, -19.3832, 44.9314, 0.81", "-119.811, -19.9275, 45.8343, 0.22", "-120.308, -20.3149, 46.464, 0.22", "-120.606, -20.5168, 46.8335, 0.22", "-121.089, -20.789, 47.35, 0.44", "-121.41, -20.9721, 47.6923, 0.29", "-131.902, -22.8068, 51.7052, 0.29", "-141.656, -25.5962, 56.9129, 0.29", "-151.062, -30.7364, 60.9436, 0.29" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-77.2722, -11.522, 23.9108, 0.81", "-78.7726, -10.9721, 21.3498, 0.81", "-79.372, -10.8433, 20.3703, 0.88", "-79.8704, -10.8239, 19.6368, 0.88", "-80.4439, -10.8698, 18.8552, 0.66", "-80.8732, -10.9602, 18.2875, 0.66", "-81.9148, -11.2942, 16.9368, 0.88", "-82.6769, -11.6559, 16.08, 0.88", "-83.5404, -12.1709, 15.1169, 0.66", "-84.1006, -12.5514, 14.5273, 0.66", "-85.2105, -13.415, 13.434, 0.81", "-85.9076, -14.0087, 12.8218, 0.81", "-86.5506, -14.5973, 12.3503, 0.74", "-87.0631, -15.1069, 11.9864, 0.52", "-87.5242, -15.6016, 11.6622, 0.52", "-88.0722, -16.1827, 11.3076, 0.59", "-88.6275, -16.7213, 10.9822, 0.66", "-89.3742, -17.3708, 10.5332, 0.52", "-90.2005, -18.0088, 10.0342, 0.52", "-91.2204, -18.6639, 9.50225, 0.96", "-91.704, -18.9248, 9.23932, 0.96", "-92.29, -19.189, 8.91034, 0.52", "-92.6974, -19.3504, 8.68155, 0.52", "-93.4205, -19.6127, 8.2941, 0.52", "-94.7087, -20.0816, 7.6471, 0.52", "-95.8479, -20.554, 7.04148, 0.96", "-96.6092, -20.916, 6.5749, 0.96", "-97.359, -21.2801, 6.07443, 0.81", "-97.6856, -21.4365, 5.82391, 0.81", "-98.2941, -21.7319, 5.2367, 0.66", "-99.0224, -22.1192, 4.40909, 0.66", "-99.7676, -22.5404, 3.53541, 0.37", "-100.231, -22.821, 2.99574, 0.81", "-100.806, -23.2088, 2.31191, 1.18", "-101.869, -23.9765, 1.0591, 0.96", "-102.458, -24.4119, 0.407341, 0.66", "-102.851, -24.7002, 0.0246277, 0.66", "-103.52, -25.2062, -0.545728, 0.96", "-104.218, -25.7239, -1.0711, 1.03", "-104.982, -26.2162, -1.53457, 0.88", "-105.961, -26.7505, -2.0308, 0.66", "-106.702, -27.0977, -2.38702, 0.88", "-107.796, -27.5631, -2.87621, 1.11", "-108.424, -27.818, -3.11594, 1.11", "-109.419, -28.1903, -3.42128, 1.25", "-110.316, -28.5001, -3.65659, 1.4", "-110.81, -28.6636, -3.76603, 1.4", "-111.611, -28.9278, -3.92819, 1.33", "-112.527, -29.2366, -4.09463, 0.66", "-113.418, -29.5865, -4.24861, 0.66", "-114.356, -30.0488, -4.37999, 0.88", "-114.914, -30.3785, -4.40707, 1.4", "-115.246, -30.6072, -4.40286, 1.62", "-115.547, -30.8376, -4.3794, 1.62", "-115.94, -31.1535, -4.31315, 1.62", "-116.728, -31.7704, -4.09317, 0.96", "-117.563, -32.3937, -3.8493, 0.52", "-117.926, -32.6272, -3.77523, 0.52", "-118.492, -32.9405, -3.71128, 0.74", "-118.953, -33.1549, -3.70591, 0.74", "-119.801, -33.4895, -3.76677, 0.52", "-120.495, -33.7407, -3.85262, 0.52", "-121.42, -34.0917, -3.98892, 0.88", "-122.055, -34.3461, -4.07008, 0.88", "-123.181, -34.8068, -4.1882, 0.59", "-123.98, -35.1405, -4.2581, 0.59", "-124.952, -35.5748, -4.30329, 1.11", "-125.576, -35.853, -4.29721, 1.33", "-126.303, -36.1706, -4.26058, 1.18", "-127.386, -36.632, -4.19025, 0.44", "-127.925, -36.8447, -4.14546, 0.44", "-128.64, -37.0796, -4.0953, 0.44", "-129.491, -37.3032, -4.04794, 0.44", "-130.472, -37.5213, -3.98704, 0.66", "-131.035, -37.6302, -3.93597, 0.66", "-131.894, -37.7686, -3.84272, 0.88", "-132.911, -37.8972, -3.72327, 0.96", "-133.346, -37.9404, -3.67114, 0.96", "-134.109, -38.023, -3.56946, 0.81", "-134.967, -38.1084, -3.47236, 1.03", "-135.917, -38.1899, -3.40149, 1.47", "-136.652, -38.2489, -3.38373, 1.69", "-137.149, -38.2758, -3.3863, 1.69", "-138.021, -38.2818, -3.43166, 1.25", "-139.202, -38.2334, -3.55455, 0.74", "-139.939, -38.1799, -3.65801, 0.74", "-141.021, -38.0742, -3.83513, 1.18", "-141.445, -38.0305, -3.90898, 1.18", "-142.212, -37.9529, -4.05334, 0.88", "-143.351, -37.8598, -4.28086, 0.52", "-143.957, -37.8484, -4.39841, 0.52", "-144.359, -37.8644, -4.47421, 0.74", "-145.137, -37.9515, -4.61027, 0.96", "-145.574, -38.0434, -4.68716, 1.18", "-146.187, -38.2166, -4.79579, 1.18", "-147.21, -38.5294, -4.97551, 0.96", "-147.763, -38.6799, -5.06566, 0.96", "-148.743, -38.904, -5.20261, 0.37", "-149.537, -39.0407, -5.28925, 0.29", "-149.954, -39.0882, -5.3136, 0.44", "-150.573, -39.1041, -5.31285, 0.59", "-151.254, -39.0646, -5.25974, 0.74", "-151.652, -39.0367, -5.2065, 0.74", "-152.248, -38.9873, -5.09308, 0.74", "-152.975, -38.942, -4.91662, 0.44", "-153.687, -38.9324, -4.72825, 0.44", "-154.168, -38.9493, -4.59962, 0.44", "-155.431, -39.021, -4.2759, 0.81", "-156.156, -39.0602, -4.1037, 1.4", "-157.187, -39.1303, -3.88219, 1.55", "-157.778, -39.1764, -3.7454, 1.55", "-158.261, -39.2233, -3.6364, 1.55", "-158.986, -39.288, -3.48543, 1.33", "-159.453, -39.3276, -3.39509, 1.03", "-160.314, -39.4002, -3.26068, 0.44", "-161.351, -39.4382, -3.15218, 0.29", "-161.953, -39.437, -3.11371, 0.74", "-162.504, -39.4212, -3.09998, 0.88", "-163.082, -39.403, -3.11279, 0.74", "-163.802, -39.3768, -3.18413, 0.37", "-164.646, -39.3396, -3.364, 0.37", "-165.405, -39.3088, -3.59826, 0.81", "-166.017, -39.2747, -3.81107, 1.62", "-166.76, -39.2295, -4.09589, 1.92", "-167.819, -39.1143, -4.55349, 1.18", "-168.528, -39.0181, -4.87821, 0.66", "-169.201, -38.9049, -5.1824, 0.66", "-169.924, -38.7176, -5.52152, 0.96", "-170.331, -38.576, -5.71636, 0.96", "-171.151, -38.2258, -6.10425, 0.29", "-171.955, -37.8609, -6.45031, 0.29", "-172.813, -37.4944, -6.77699, 0.74", "-173.452, -37.258, -6.99784, 0.96", "-173.874, -37.1261, -7.12901, 0.96", "-174.36, -36.9999, -7.26476, 0.96", "-175.201, -36.8127, -7.47931, 0.22", "-175.759, -36.6944, -7.60583, 0.22", "-176.58, -36.5474, -7.75694, 0.59", "-177.085, -36.4842, -7.82781, 0.74", "-177.977, -36.4156, -7.91851, 0.22", "-178.563, -36.3894, -7.9619, 0.22", "-179.391, -36.351, -8.01534, 0.22", "-180.116, -36.328, -8.06363, 0.22", "-180.668, -36.3117, -8.09775, 0.96", "-181.315, -36.2889, -8.13534, 1.03", "-182.052, -36.2422, -8.18787, 0.74", "-182.657, -36.1597, -8.25841, 0.74", "-183.293, -36.0006, -8.37698, 0.96", "-183.993, -35.7703, -8.57617, 0.96", "-184.971, -35.4021, -8.96492, 0.29", "-185.498, -35.2225, -9.2333, 0.29", "-186.4, -34.9864, -9.76799, 0.37", "-187.021, -34.8756, -10.1709, 0.74", "-187.905, -34.7792, -10.7849, 1.4", "-188.552, -34.768, -11.2489, 1.62", "-189.843, -34.8275, -12.1711, 0.44", "-190.567, -34.8898, -12.656, 0.29", "-190.81, -34.914, -12.8027, 0.74", "-191.157, -34.9374, -12.983, 0.74", "-191.646, -34.9328, -13.1444, 0.59", "-192.341, -34.8868, -13.2709, 0.37", "-193.006, -34.7922, -13.3369, 0.29", "-193.611, -34.6811, -13.3816, 0.29", "-194.504, -34.4707, -13.4617, 0.29", "-196.13, -34.0643, -13.6645, 0.29", "-196.985, -33.8392, -13.7795, 0.29", "-197.964, -33.5666, -13.9214, 0.29", "-198.95, -33.2949, -14.0718, 0.29", "-200.383, -32.8923, -14.3178, 0.29", "-201.577, -32.5274, -14.5612, 0.96", "-202.434, -32.2528, -14.768, 1.4", "-203.069, -32.0519, -14.9284, 1.77", "-204.45, -31.6539, -15.2573, 0.96", "-205.468, -31.3904, -15.4757, 0.66", "-206.418, -31.1812, -15.6429, 0.88", "-207.523, -30.9185, -15.8047, 1.18" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-6.99685, 6.81237, -32.2643, 1.03", "-6.75009, 7.04169, -36.5153, 1.03", "-6.46281, 7.08624, -38.771, 1.11", "-6.10779, 6.97963, -41.094, 1.47", "-5.76656, 6.76133, -43.755, 1.03", "-5.58045, 6.55002, -45.7142, 0.96", "-5.48604, 6.36849, -47.2087, 1.33", "-5.42189, 5.9875, -49.6299, 1.25", "-5.50461, 5.34045, -52.7573, 0.59", "-5.73608, 4.54494, -55.7551, 0.96", "-5.98808, 3.98545, -57.5232, 1.62", "-6.14188, 3.68522, -58.3606, 1.84", "-6.49803, 2.99726, -60.2107, 1.55", "-6.87551, 2.1822, -62.3216, 0.88", "-7.32491, 1.0724, -65.2459, 0.74", "-7.43575, 0.730321, -66.1147, 1.4", "-7.74955, -0.357879, -68.8413, 1.47", "-8.08911, -1.62013, -71.9415, 0.96", "-8.27636, -2.32485, -73.6085, 1.18", "-8.52418, -2.91188, -75.0808, 0.74", "-8.68116, -3.1495, -75.6711, 0.74", "-9.0748, -3.6084, -76.8187, 1.33", "-9.6997, -4.1575, -78.1792, 1.84", "-10.7336, -4.88205, -79.973, 1.84", "-12.0391, -5.59142, -82.0104, 0.81", "-13.02, -6.00141, -83.4261, 1.25", "-13.6213, -6.14712, -84.2212, 1.69", "-14.448, -6.20197, -85.1877, 0.44", "-15.1325, -6.18332, -85.8868, 0.44", "-15.8139, -6.09801, -86.6476, 0.44", "-16.2785, -6.00919, -87.2893, 0.44", "-16.5754, -5.95096, -87.8093, 0.66", "-17.3013, -5.86441, -89.2468, 0.81", "-17.8479, -5.82936, -90.4565, 1.25", "-19.1555, -5.77014, -93.2731, 0.74", "-19.62, -5.76946, -94.3096, 0.52", "-20.0737, -5.76964, -95.3595, 0.52", "-20.6191, -5.73026, -96.6258, 0.81", "-21.2296, -5.60302, -97.9284, 0.96", "-21.9714, -5.36052, -99.2975, 1.47" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-6.99685, 6.81237, -32.2643, 1.84", "-7.27753, 6.93566, -32.314, 1.84", "-8.5157, 7.45321, -32.539, 1.99", "-9.37626, 7.77146, -32.7066, 1.84", "-10.2044, 7.9771, -32.9009, 1.55", "-11.2897, 8.14425, -33.1684, 1.03", "-12.4682, 8.24412, -33.4608, 0.59", "-13.4431, 8.23934, -33.7024, 0.44", "-14.2032, 8.16784, -33.8643, 0.44", "-15.9187, 7.89817, -34.3383, 0.44", "-16.8061, 7.70878, -34.6183, 0.81", "-17.5119, 7.52077, -34.8518, 1.03", "-18.5787, 7.20391, -35.23, 1.03", "-19.7644, 6.86416, -35.67, 0.81", "-21.9856, 6.34102, -36.4988, 1.25", "-23.1021, 6.14146, -36.912, 1.25", "-24.373, 5.96989, -37.3818, 1.25", "-25.51, 5.8715, -37.7815, 1.03", "-26.4782, 5.83142, -38.1102, 0.81", "-27.6253, 5.82315, -38.4553, 0.81", "-28.6043, 5.84898, -38.6644, 0.81", "-30.1139, 5.89941, -38.9974, 1.11", "-31.586, 5.91264, -39.2431, 1.11", "-32.977, 5.84588, -39.4101, 1.03", "-33.9485, 5.71784, -39.4868, 1.25", "-35.0455, 5.47843, -39.5399, 1.25", "-36.8475, 4.94158, -39.5905, 1.11", "-38.836, 4.21172, -39.6148, 1.03", "-39.957, 3.77332, -39.6134, 1.18", "-41.0473, 3.37857, -39.6376, 1.33", "-41.8557, 3.14646, -39.7136, 1.33", "-42.9416, 2.98044, -39.9069, 1.03", "-44.027, 3.00687, -40.1886, 0.96", "-44.8181, 3.10738, -40.4902, 1.03", "-46.1855, 3.34143, -40.9894, 1.18", "-47.1519, 3.49388, -41.3394, 1.03", "-48.2286, 3.62339, -41.724, 1.03", "-49.0462, 3.6593, -42.034, 1.03", "-50.1674, 3.60398, -42.4546, 1.03", "-51.5381, 3.41298, -42.9019, 0.88", "-53.0292, 3.09387, -43.2725, 0.74", "-54.068, 2.84005, -43.4795, 0.74", "-55.3831, 2.51579, -43.684, 0.81", "-56.4175, 2.28468, -43.7713, 0.96", "-57.4707, 2.06855, -43.7484, 0.96", "-58.6349, 1.8223, -43.6426, 0.81", "-59.6384, 1.57401, -43.4644, 1.18", "-60.5978, 1.29236, -43.2566, 1.18", "-61.9461, 0.828319, -42.9314, 0.74", "-63.4063, 0.221784, -42.6284, 0.96", "-64.1713, -0.14507, -42.5145, 1.25", "-65.2869, -0.733359, -42.3974, 1.25", "-66.1869, -1.2389, -42.3467, 1.03", "-67.3572, -1.90262, -42.354, 0.66", "-68.562, -2.58605, -42.4655, 0.96", "-69.5383, -3.11685, -42.6266, 1.18", "-70.4748, -3.60497, -42.8042, 1.18", "-71.3061, -4.01012, -42.9817, 1.03", "-72.3649, -4.50087, -43.2346, 1.03", "-73.3706, -4.93895, -43.5116, 1.18", "-74.5014, -5.45108, -43.8464, 1.33", "-75.3114, -5.8501, -44.0972, 1.4", "-75.886, -6.17262, -44.2765, 1.4", "-76.6011, -6.59057, -44.4958, 1.55", "-77.5359, -7.15487, -44.766, 1.55", "-78.6943, -7.85682, -45.0531, 1.69", "-79.6449, -8.4809, -45.293, 1.84", "-80.8969, -9.36561, -45.6176, 2.06" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "62.3961, -10.5817, -43.6779, 0.74", "64.7915, -11.6303, -44.868, 0.74", "66.9009, -12.5229, -45.7893, 0.29", "68.7591, -13.3387, -46.5017, 0.29", "70.2867, -14.0085, -47.0493, 1.25", "71.0694, -14.3435, -47.3148, 1.25", "72.3086, -14.8504, -47.7099, 0.29", "73.709, -15.3878, -48.0031, 0.29", "75.0628, -15.8736, -48.2399, 0.29", "76.0833, -16.2117, -48.4416, 0.88", "76.6481, -16.3844, -48.5791, 1.33", "77.4437, -16.5961, -48.7488, 1.33", "78.125, -16.7321, -48.8817, 0.66", "78.8675, -16.8329, -49.0209, 0.29", "79.623, -16.8783, -49.154, 0.29", "80.6512, -16.915, -49.319, 0.88", "81.1187, -16.9339, -49.3924, 0.88", "82.1327, -16.9709, -49.5585, 0.44", "82.9102, -16.9862, -49.6898, 0.44", "83.7344, -16.9864, -49.8503, 0.81", "84.3524, -16.9804, -49.9863, 0.81", "85.0138, -16.9853, -50.1429, 0.66", "85.8474, -17.0132, -50.3465, 0.96", "86.3056, -17.0386, -50.4594, 0.96", "87.5518, -17.112, -50.7498, 0.29", "88.2798, -17.1509, -50.9077, 0.52", "89.1977, -17.1891, -51.079, 0.88", "89.5182, -17.1985, -51.129, 0.88", "90.6495, -17.2488, -51.258, 0.29", "91.5392, -17.3164, -51.326, 0.29", "92.5298, -17.4458, -51.3642, 1.33", "93.3071, -17.5968, -51.3825, 2.06", "93.825, -17.7471, -51.3887, 2.06", "94.5341, -18.0412, -51.3893, 2.28", "95.447, -18.5121, -51.3794, 1.84", "96.1917, -18.943, -51.3627, 1.55", "96.9059, -19.3845, -51.3378, 0.96", "98.1671, -20.2109, -51.2924, 0.29", "99.1999, -20.9165, -51.2549, 0.29", "99.9012, -21.4044, -51.2305, 0.81", "100.511, -21.818, -51.212, 0.81", "100.974, -22.1007, -51.2015, 0.59" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "62.3961, -10.5817, -43.6779, 0.96", "62.6853, -11.0531, -44.0779, 0.96", "63.408, -12.1332, -44.9927, 0.44", "64.1573, -13.2178, -46.0203, 0.81", "64.4332, -13.6251, -46.4468, 0.81", "65.038, -14.5232, -47.4174, 0.37", "65.3904, -15.0436, -47.9852, 0.37", "65.9119, -15.7693, -48.8078, 0.96", "66.7609, -16.8698, -50.1298, 1.11", "67.8762, -18.2144, -51.8382, 0.52", "68.379, -18.7712, -52.5832, 1.03", "68.697, -19.0866, -53.0324, 1.03", "69.7726, -19.9738, -54.3204, 0.29", "70.1161, -20.1881, -54.6477, 0.29", "70.5187, -20.3573, -54.9209, 0.66", "70.9419, -20.4655, -55.1362, 0.66", "71.6946, -20.5978, -55.4692, 0.44", "73.009, -20.7261, -55.9893, 1.25", "73.828, -20.757, -56.2868, 1.47", "74.3084, -20.7674, -56.4555, 1.47", "75.8829, -20.7599, -56.9816, 0.66", "76.576, -20.7352, -57.2024, 0.66", "77.5063, -20.6707, -57.4846, 1.11", "78.1951, -20.5908, -57.6615, 1.11", "79.1847, -20.4178, -57.852, 0.37", "79.9885, -20.2328, -57.9851, 1.03", "80.399, -20.1262, -58.0564, 1.18", "80.7628, -20.0368, -58.1306, 0.88", "81.8256, -19.8003, -58.3527, 0.52", "82.3734, -19.6771, -58.4781, 0.52", "83.287, -19.4651, -58.7308, 0.88", "84.4162, -19.2097, -59.0777, 0.37", "85.2749, -19.0204, -59.338, 0.37", "86.1969, -18.8279, -59.618, 0.29", "87.1188, -18.6419, -59.8828, 0.88", "87.7339, -18.5115, -60.0432, 0.96", "88.0513, -18.4385, -60.1169, 0.96", "89.0398, -18.2001, -60.341, 0.29", "89.6419, -18.0799, -60.4805, 0.29", "90.6424, -17.9232, -60.7251, 0.29", "91.6267, -17.7974, -60.9505, 0.96", "92.2681, -17.7324, -61.0874, 1.18", "92.8564, -17.6757, -61.2109, 1.18", "93.7376, -17.5943, -61.4105, 0.29", "94.7647, -17.5281, -61.6187, 0.52", "95.5716, -17.5189, -61.7756, 0.66", "96.1246, -17.5484, -61.8643, 0.29", "96.585, -17.5904, -61.9378, 0.22", "97.1286, -17.6431, -62.0202, 0.37", "98.5015, -17.783, -62.238, 0.44", "99.5505, -17.9362, -62.3896, 0.22", "101.023, -18.2319, -62.6215, 0.81", "101.735, -18.3976, -62.7363, 0.96" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-22.4899, 74.3926, -8.40294, 0.88", "-23.5854, 75.4968, -8.33464, 0.88", "-23.9432, 75.8362, -8.26307, 0.74", "-24.6678, 76.5107, -8.07077, 0.52", "-25.2511, 77.0542, -7.8804, 0.52", "-25.7351, 77.5078, -7.70616, 0.29", "-26.2555, 77.9862, -7.50533, 0.29", "-26.894, 78.5416, -7.18581, 0.88", "-27.2183, 78.8238, -7.01965, 1.25", "-27.5571, 79.1226, -6.84867, 1.25", "-28.2182, 79.8036, -6.51858, 0.44", "-28.6333, 80.3463, -6.31791, 0.59", "-28.9863, 80.9203, -6.15883, 1.11", "-29.2358, 81.4015, -6.06838, 1.11", "-29.4799, 81.9317, -5.97658, 0.59", "-29.8365, 82.7914, -5.84875, 0.44", "-30.1944, 83.7755, -5.70226, 0.44", "-30.4386, 84.4867, -5.59514, 0.44", "-30.6476, 85.0621, -5.484, 0.59", "-31.0535, 86.1481, -5.26115, 0.74", "-31.3527, 86.8794, -5.09521, 0.74", "-31.6644, 87.5363, -4.91857, 0.88", "-32.0583, 88.2871, -4.67505, 1.55", "-32.5339, 89.1766, -4.34322, 1.92" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-22.4899, 74.3926, -8.40294, 0.59", "-24.301, 73.983, -8.13071, 0.59", "-25.1515, 73.7592, -7.99831, 0.44", "-25.6532, 73.6042, -7.91821, 0.66", "-26.078, 73.4669, -7.83943, 0.66", "-26.4208, 73.3574, -7.79029, 0.66", "-27.0711, 73.1632, -7.71316, 0.29", "-27.8166, 72.9704, -7.67565, 0.29", "-28.4117, 72.8288, -7.681, 0.52", "-28.9363, 72.7262, -7.7056, 0.52", "-29.946, 72.5708, -7.78044, 0.52", "-30.8783, 72.4754, -7.86588, 0.88", "-31.5241, 72.4454, -7.94636, 1.25", "-32.0151, 72.4459, -8.01713, 1.25", "-33.1668, 72.4494, -8.18412, 0.37", "-33.6788, 72.4392, -8.26264, 0.37", "-34.2449, 72.4282, -8.29932, 0.52", "-34.8689, 72.4095, -8.29186, 0.52", "-35.4559, 72.3855, -8.2281, 0.52", "-36.0862, 72.3402, -8.10828, 0.37", "-36.5803, 72.2833, -7.96846, 0.37", "-37.6727, 72.1129, -7.58068, 0.37", "-38.5254, 71.8869, -7.2262, 0.59", "-38.9583, 71.7038, -6.98714, 0.81", "-39.2978, 71.485, -6.70649, 0.81", "-39.7339, 71.1016, -6.20026, 0.81", "-39.9855, 70.7835, -5.78119, 0.66", "-40.3747, 70.0183, -4.87544, 0.37", "-40.7325, 68.946, -3.62673, 0.37", "-41.09, 67.5597, -2.01237, 1.11", "-41.2467, 66.8628, -1.18198, 1.62", "-41.4298, 65.9951, -0.0947751, 0.59", "-41.5972, 65.3596, 0.747007, 0.52", "-41.8782, 64.6339, 1.76431, 0.81", "-42.2306, 64.1205, 2.46768, 0.66", "-42.6787, 63.7816, 2.89906, 0.88", "-43.3438, 63.4502, 3.32433, 0.88", "-44.4637, 63.0585, 3.88393, 0.29", "-45.2988, 62.8468, 4.27105, 0.29", "-46.1795, 62.6759, 4.6712, 0.29", "-47.5407, 62.4798, 5.32617, 0.74", "-48.436, 62.3982, 5.85638, 0.96", "-49.0024, 62.3525, 6.295, 0.96", "-49.6512, 62.2957, 6.92124, 0.88", "-50.397, 62.2138, 7.75833, 0.88", "-50.9183, 62.1327, 8.43364, 0.44", "-52.2297, 61.8033, 10.3918, 0.37", "-53.0185, 61.4622, 11.6442, 1.03", "-53.3737, 61.2301, 12.2503, 0.44", "-53.6169, 61.0103, 12.6619, 0.52", "-53.9074, 60.6621, 13.1551, 0.52", "-54.2761, 60.089, 13.78, 0.37", "-54.599, 59.468, 14.3317, 0.59", "-55.1981, 58.3397, 15.304, 0.37", "-55.631, 57.4855, 16.0683, 0.37", "-55.8412, 57.0788, 16.443, 0.37", "-56.1597, 56.4935, 16.979, 0.59", "-56.4741, 55.9001, 17.489, 0.66", "-63.4977, 52.6453, 23.5614, 0.66", "-70.9274, 50.1105, 29.4558, 0.66", "-76.7956, 46.7583, 36.6166, 0.66", "-81.2274, 43.3471, 44.7289, 0.66", "-85.5945, 39.9589, 52.885, 0.66", "-91.355, 38.6367, 60.6975, 0.66", "-97.0417, 38.2234, 68.6503, 0.66", "-103.863, 35.6103, 75.2153, 0.66", "-110.212, 32.7532, 82.1536, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-207.523, -30.9185, -15.8047, 0.37", "-208.899, -30.6389, -15.9921, 0.37", "-209.787, -30.4868, -16.0905, 0.22", "-210.425, -30.4007, -16.145, 0.22", "-211.718, -30.2557, -16.2231, 0.59", "-212.248, -30.1929, -16.249, 0.59", "-213.587, -30.0226, -16.3055, 0.29", "-214.843, -29.8386, -16.3196, 0.29", "-215.753, -29.6887, -16.3909, 0.29", "-216.328, -29.5878, -16.4819, 0.74", "-217.042, -29.4542, -16.6447, 0.74", "-217.819, -29.3176, -16.8968, 0.44", "-218.947, -29.0885, -17.3016, 0.29", "-220.196, -28.7439, -17.7456, 0.29", "-220.843, -28.5176, -17.9512, 0.29", "-221.689, -28.1972, -18.1337, 0.22", "-222.635, -27.8495, -18.1897, 0.22", "-224.088, -27.3127, -18.0118, 0.22", "-225.062, -26.9472, -17.7632, 0.22", "-226.047, -26.5612, -17.4357, 0.96", "-227.093, -26.1534, -17.0524, 0.96", "-228.168, -25.7511, -16.6387, 0.74", "-229.338, -25.3782, -16.2184, 0.52", "-229.938, -25.2153, -16.0297, 0.52", "-230.784, -24.9944, -15.7815, 0.59", "-231.218, -24.8783, -15.6723, 0.59", "-231.918, -24.6613, -15.5332, 0.44", "-232.927, -24.3216, -15.3803, 0.37", "-234.419, -23.8016, -15.1696, 0.59", "-235.311, -23.4377, -15.029, 0.44", "-235.997, -23.1214, -14.927, 0.59", "-236.624, -22.8223, -14.8339, 0.74", "-237.517, -22.4236, -14.7177, 0.88", "-238.281, -22.1371, -14.6183, 1.03", "-239.759, -21.7734, -14.4601, 0.88", "-240.81, -21.658, -14.3148, 0.29", "-241.969, -21.6368, -14.1606, 0.29", "-242.936, -21.6951, -14.059, 0.29", "-243.719, -21.8099, -14.0047, 0.74", "-244.468, -21.9872, -13.9926, 0.74", "-245.392, -22.2874, -14.007, 0.29", "-246.183, -22.5285, -14.0437, 0.29", "-246.921, -22.7033, -14.107, 0.29", "-247.839, -22.8517, -14.1835, 0.66", "-248.652, -22.9267, -14.2622, 0.88", "-249.194, -22.9565, -14.3398, 1.03", "-249.64, -22.9749, -14.4162, 1.03", "-250.371, -23.0127, -14.5464, 0.81", "-251.437, -23.0517, -14.7282, 0.44", "-252.419, -23.0721, -14.8784, 0.44", "-253.74, -23.0941, -15.0321, 0.44", "-255.402, -23.1148, -15.1513, 0.44", "-256.456, -23.1192, -15.1525, 0.88", "-257.16, -23.1158, -15.1386, 1.18", "-257.988, -23.1184, -15.0872, 1.18", "-259.475, -23.1765, -14.8791, 0.22", "-260.223, -23.2257, -14.6717, 0.22", "-261.297, -23.3425, -14.2299, 0.44", "-273.17, -20.8405, -12.3302, 0.44" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-207.523, -30.9185, -15.8047, 0.66", "-208.387, -31.2068, -15.2561, 0.66", "-208.961, -31.3513, -14.8988, 0.59", "-209.572, -31.4681, -14.517, 0.52", "-210.335, -31.6167, -14.0336, 0.66", "-210.952, -31.7371, -13.6421, 0.66", "-211.753, -31.8931, -13.1348, 0.29", "-212.209, -31.9472, -12.8504, 0.29", "-212.886, -31.9951, -12.4484, 0.29", "-213.547, -32.0187, -12.0527, 0.29", "-220.101, -34.3461, -6.85331, 0.29" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-21.9714, -5.36052, -99.2975, 0.44", "-22.7821, -2.92717, -101.377, 0.44", "-23.3545, -1.20909, -102.846, 0.29", "-23.8262, 0.206709, -104.056, 0.66", "-24.3048, 1.64305, -105.283, 0.81", "-24.7882, 3.09411, -106.523, 0.66", "-25.1347, 4.13389, -107.412, 0.52" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-21.9714, -5.36052, -99.2975, 0.52", "-24.4018, -5.86752, -101.601, 0.52", "-25.1034, -6.03521, -102.173, 0.96", "-25.5437, -6.15626, -102.505, 1.18", "-26.3865, -6.37914, -103.103, 0.52", "-26.7545, -6.47096, -103.372, 0.29", "-27.3061, -6.61479, -103.816, 0.29", "-28.0435, -6.78751, -104.366, 0.29", "-29.0413, -7.10835, -105.233, 0.52", "-29.5807, -7.34914, -105.733, 0.74", "-30.4231, -7.84211, -106.552, 0.88", "-31.4431, -8.57017, -107.684, 1.11", "-31.8936, -8.99273, -108.37, 1.25", "-32.3912, -9.66042, -109.567, 0.96", "-32.6121, -10.2086, -110.515, 0.66", "-32.6821, -10.6747, -111.267, 0.88", "-32.6498, -11.7035, -112.834, 1.11", "-32.3673, -13.335, -115.219, 0.66", "-32.0402, -14.5049, -116.916, 0.81", "-31.8291, -15.0678, -117.746, 0.59", "-31.5653, -15.6845, -118.659, 0.81", "-31.3048, -16.255, -119.482, 0.81", "-31.1003, -16.7559, -120.093, 0.81", "-30.9144, -17.4096, -120.702, 0.66", "-30.7406, -18.3722, -121.497, 0.44", "-30.6408, -18.9889, -122.103, 0.37" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-80.8969, -9.36561, -45.6176, 1.11", "-82.6027, -10.6848, -45.2219, 1.11", "-83.4782, -11.3302, -45.0715, 1.11", "-84.5343, -12.0892, -44.936, 0.96", "-85.6117, -12.8403, -44.8139, 0.96", "-86.6612, -13.5219, -44.7688, 0.96", "-87.5914, -14.0914, -44.7772, 1.11", "-88.6563, -14.7259, -44.887, 1.11", "-89.5753, -15.2194, -45.0258, 1.11", "-90.6021, -15.7365, -45.2291, 1.11", "-92.1281, -16.5025, -45.5428, 0.88", "-93.2908, -17.0963, -45.7172, 0.74", "-94.206, -17.581, -45.7991, 1.03", "-95.0955, -18.0675, -45.8228, 1.03", "-96.1362, -18.6705, -45.7864, 1.18", "-97.1405, -19.2743, -45.6871, 1.18", "-98.1482, -19.8698, -45.5051, 1.18", "-99.0305, -20.3287, -45.343, 0.74", "-100.086, -20.7765, -45.1625, 0.59", "-101.155, -21.1293, -45.0117, 1.03", "-101.805, -21.2696, -44.9316, 1.03", "-102.989, -21.4639, -44.8113, 0.88", "-104.021, -21.6048, -44.6407, 0.88", "-105.26, -21.7387, -44.3967, 0.74", "-106.406, -21.8269, -44.1315, 0.74", "-107.945, -21.9074, -43.7242, 0.88", "-109.092, -21.9833, -43.3759, 0.88", "-111.619, -22.1975, -42.4534, 1.4" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-80.8969, -9.36561, -45.6176, 0.29", "-82.0883, -8.89635, -45.7112, 0.29", "-82.7955, -8.62628, -45.7806, 0.29", "-84.2025, -8.10108, -45.926, 0.29", "-84.9561, -7.82002, -45.9982, 0.44", "-85.6139, -7.57478, -46.0543, 0.44", "-86.7207, -7.14495, -46.1318, 0.22", "-87.3619, -6.9056, -46.1496, 0.37", "-87.8042, -6.72051, -46.1748, 0.52", "-88.1779, -6.5494, -46.2086, 0.66", "-89.0411, -6.09737, -46.3194, 0.29", "-89.7037, -5.68187, -46.3354, 0.29", "-90.0918, -5.38113, -46.3017, 0.29", "-90.5426, -4.98725, -46.2334, 0.52", "-90.938, -4.60651, -46.1582, 0.74", "-91.1555, -4.3794, -46.1084, 0.74", "-92.5648, -2.73986, -45.7286, 0.22", "-93.3868, -1.71748, -45.5196, 0.22", "-93.8283, -1.13347, -45.4283, 0.66", "-94.2647, -0.533815, -45.35, 0.66", "-94.5102, -0.189217, -45.3226, 0.66", "-95.1151, 0.65693, -45.3087, 0.22", "-95.8373, 1.63536, -45.3657, 0.22", "-96.6538, 2.71375, -45.4225, 0.22", "-97.1624, 3.3742, -45.4514, 0.22", "-97.9627, 4.38386, -45.4829, 0.22", "-98.4564, 5.0027, -45.4998, 0.22", "-99.1126, 5.84401, -45.5155, 0.52", "-99.8097, 6.80359, -45.5255, 0.74", "-100.154, 7.31858, -45.5431, 0.74", "-100.557, 7.98796, -45.5817, 0.59", "-101.015, 8.86195, -45.6418, 0.22", "-101.396, 9.6959, -45.709, 0.22", "-101.803, 10.6953, -45.7899, 0.22", "-102.183, 11.661, -45.847, 0.52", "-102.4, 12.2151, -45.9106, 0.52", "-102.744, 13.1003, -46.0615, 0.22", "-103.172, 14.1715, -46.2422, 0.88", "-103.422, 14.7765, -46.3526, 0.88", "-103.61, 15.2243, -46.4487, 0.88", "-104.343, 16.9797, -46.9393, 0.81", "-104.482, 17.2799, -47.0866, 0.59" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-80.8969, -9.36561, -45.6176, 0.74", "-80.8017, -11.1811, -45.6094, 0.74", "-80.7512, -11.9747, -45.6105, 0.74", "-80.6763, -12.8713, -45.6253, 0.96", "-80.6141, -13.5215, -45.6181, 0.96", "-80.5277, -14.4283, -45.5817, 0.66", "-80.4601, -15.38, -45.5116, 0.37", "-80.4239, -16.1839, -45.4243, 0.37", "-80.3923, -17.6641, -45.2203, 0.37", "-80.4056, -18.49, -45.0845, 0.81", "-80.4725, -19.5234, -44.8994, 0.88", "-80.6412, -20.8036, -44.6532, 0.22", "-80.9238, -22.0704, -44.3833, 0.22", "-81.2423, -23.0087, -44.1724, 0.22", "-81.728, -24.0558, -43.9453, 0.66", "-82.0767, -24.6824, -43.8343, 0.66", "-82.5651, -25.4142, -43.727, 0.44", "-83.3327, -26.4106, -43.6145, 0.74", "-84.3304, -27.5614, -43.5158, 0.22", "-84.8757, -28.1462, -43.4792, 0.66", "-85.5322, -28.8267, -43.4509, 0.81", "-86.1788, -29.5011, -43.4349, 0.81", "-86.6472, -29.9873, -43.4444, 0.66", "-87.2194, -30.5794, -43.5022, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-32.5339, 89.1766, -4.34322, 0.88", "-33.3365, 89.7038, -3.72951, 0.88", "-33.9612, 90.1854, -3.25543, 0.74", "-34.706, 90.8837, -2.65535, 0.81", "-35.2712, 91.5264, -2.17987, 0.96", "-35.7579, 92.1475, -1.72272, 0.29", "-36.099, 92.586, -1.40703, 0.29", "-36.4969, 93.0856, -1.02484, 0.37", "-36.8715, 93.5624, -0.662322, 0.37", "-37.1869, 93.9788, -0.335711, 0.44", "-37.9243, 94.9626, 0.445262, 0.52", "-38.3283, 95.4785, 0.857383, 0.66", "-38.688, 95.8951, 1.21858, 0.88", "-39.5864, 96.8708, 2.044, 0.52", "-39.8925, 97.2045, 2.30341, 0.37", "-40.3265, 97.7319, 2.67188, 0.52", "-40.6609, 98.1987, 2.98447, 0.59", "-41.0659, 98.8565, 3.41016, 0.59", "-41.4835, 99.6479, 3.88106, 0.81", "-41.6958, 100.054, 4.17238, 0.81", "-42.0421, 100.658, 4.75693, 0.66", "-42.5291, 101.471, 5.89856, 0.88", "-42.8448, 101.945, 6.95139, 0.52", "-43.0874, 102.277, 7.86329, 0.52", "-43.5979, 102.921, 9.81001, 0.52", "-43.8249, 103.225, 10.7046, 0.52", "-44.0584, 103.601, 11.739, 0.66", "-44.4323, 104.41, 13.6583, 0.88", "-44.6405, 105.0, 14.8305, 0.59", "-44.795, 105.53, 15.6328, 0.74", "-45.1245, 106.766, 16.982, 0.74", "-45.3091, 107.36, 17.5832, 0.59", "-45.5261, 107.848, 18.129, 0.59", "-45.8095, 108.47, 18.8332, 0.44", "-46.0552, 108.934, 19.4792, 0.44", "-46.3772, 109.37, 20.239, 0.88", "-47.0745, 109.884, 21.4434, 0.88", "-48.2153, 110.367, 23.1582, 1.18" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-32.5339, 89.1766, -4.34322, 0.37", "-32.7514, 90.5225, -4.7214, 0.37", "-32.9343, 91.4371, -4.97475, 0.37", "-33.1616, 92.4145, -5.2221, 0.59", "-33.2697, 92.8856, -5.3375, 0.59", "-33.4581, 93.8152, -5.54635, 0.37", "-33.5924, 94.5689, -5.69442, 0.37", "-33.7106, 95.2285, -5.80161, 0.37", "-33.8868, 96.3305, -5.92629, 0.81", "-33.9936, 97.1329, -5.98177, 0.81", "-34.0858, 97.8818, -6.01871, 0.59", "-34.196, 98.8145, -6.06101, 0.52", "-34.3219, 99.9688, -6.12853, 0.52", "-34.4144, 100.84, -6.20426, 0.52", "-34.5068, 101.62, -6.30088, 0.96", "-34.6391, 102.458, -6.44799, 0.96", "-34.7961, 103.267, -6.66556, 0.66", "-34.9504, 104.011, -6.93358, 0.37", "-35.1435, 104.863, -7.31385, 0.37", "-35.2276, 105.199, -7.48734, 0.74", "-35.3898, 105.804, -7.842, 0.96", "-35.601, 106.557, -8.35548, 1.18", "-35.6856, 106.843, -8.58313, 1.18", "-35.9397, 107.665, -9.34881, 0.74", "-36.1798, 108.409, -10.1098, 0.66", "-36.358, 108.945, -10.6918, 0.66", "-36.6721, 109.835, -11.7635, 0.37", "-36.9022, 110.374, -12.4904, 0.37", "-37.1614, 110.897, -13.31, 0.37", "-37.5297, 111.492, -14.4031, 0.74", "-37.6798, 111.673, -14.7918, 0.74", "-38.0018, 111.971, -15.5311, 0.74", "-38.3068, 112.187, -16.1315, 0.37", "-39.0789, 112.635, -17.4335, 0.37", "-39.4995, 112.852, -18.0475, 0.29", "-39.8204, 113.007, -18.4816, 0.29", "-40.4393, 113.299, -19.274, 0.44", "-40.9039, 113.508, -19.8148, 0.59", "-41.4726, 113.758, -20.424, 0.88", "-41.8291, 113.894, -20.7507, 1.33", "-42.3471, 114.088, -21.2079, 1.4", "-43.1105, 114.356, -21.8344, 0.29", "-43.6135, 114.503, -22.2111, 0.29", "-44.1472, 114.626, -22.6226, 0.66", "-44.4212, 114.687, -22.8292, 0.66", "-44.7945, 114.787, -23.1148, 0.37", "-45.0651, 114.878, -23.3156, 0.29", "-45.6157, 115.112, -23.7331, 0.29", "-45.9798, 115.287, -24.0515, 0.29", "-46.6611, 115.65, -24.6948, 1.11", "-47.1232, 115.896, -25.1665, 1.55", "-47.4869, 116.077, -25.5554, 1.25", "-47.8624, 116.253, -25.9812, 0.74", "-48.4359, 116.5, -26.6985, 0.29", "-48.8572, 116.658, -27.2513, 0.29", "-49.5149, 116.824, -28.1326, 0.66", "-49.9035, 116.907, -28.6411, 0.88", "-50.2245, 116.971, -29.075, 0.88", "-50.5938, 117.033, -29.5826, 0.88", "-51.083, 117.07, -30.253, 0.66", "-51.6499, 117.065, -31.0703, 0.29", "-52.1163, 117.017, -31.733, 0.29", "-52.6711, 116.913, -32.5026, 0.66", "-52.932, 116.845, -32.8547, 0.66", "-53.5059, 116.677, -33.5916, 0.29", "-53.9976, 116.517, -34.2159, 0.29", "-54.6209, 116.309, -34.984, 1.25", "-55.0189, 116.178, -35.4641, 1.77", "-55.5113, 116.054, -36.0202, 1.77", "-56.1148, 115.965, -36.6774, 1.55", "-56.49, 115.949, -37.0857, 1.18", "-56.8287, 115.95, -37.4791, 1.18", "-57.3393, 115.971, -38.163, 0.59", "-57.9406, 116.005, -39.0063, 0.22", "-58.3744, 116.033, -39.6464, 0.66", "-58.6516, 116.051, -40.1017, 0.66", "-59.2596, 116.089, -41.1684, 0.29", "-59.7617, 116.113, -42.0753, 0.74" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-111.619, -22.1975, -42.4534, 0.59", "-110.341, -23.2562, -41.402, 0.59", "-109.336, -24.1048, -40.604, 0.29", "-108.404, -24.8715, -39.8102, 0.29", "-107.737, -25.4052, -39.1494, 0.74", "-107.206, -25.8314, -38.578, 0.74", "-106.613, -26.3373, -37.9025, 0.74", "-106.233, -26.6862, -37.4082, 0.74", "-105.387, -27.6228, -36.2676, 0.29", "-104.689, -28.629, -35.2146, 0.29", "-104.269, -29.3913, -34.5296, 0.52", "-103.986, -30.0562, -34.026, 0.74", "-103.733, -30.7973, -33.5458, 0.74", "-103.462, -31.7276, -33.0373, 0.66", "-103.03, -33.3624, -32.3017, 0.59", "-102.663, -34.7839, -31.7028, 0.44", "-102.315, -36.2528, -31.0238, 0.37", "-102.058, -37.4627, -30.3817, 0.37", "-101.902, -38.4293, -29.7911, 0.37", "-101.831, -39.33, -29.1704, 0.66", "-101.846, -39.9747, -28.6945, 0.66", "-101.975, -41.0121, -27.8179, 0.29", "-102.113, -41.777, -27.1263, 0.29", "-102.333, -42.721, -26.1945, 0.66", "-102.533, -43.4298, -25.4646, 0.88", "-102.798, -44.2753, -24.5831, 0.37", "-103.056, -45.1561, -23.701, 0.22", "-103.246, -45.9803, -22.9124, 0.59", "-103.395, -46.9104, -22.055, 0.59" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-111.619, -22.1975, -42.4534, 1.11", "-112.729, -21.8734, -43.1613, 1.11", "-113.235, -21.7424, -43.4512, 1.11", "-113.881, -21.5873, -43.7828, 0.81", "-114.444, -21.4369, -44.0607, 1.03", "-114.964, -21.2843, -44.3079, 1.03", "-115.537, -21.1105, -44.5671, 1.03", "-116.359, -20.8729, -44.8697, 0.88", "-117.188, -20.6592, -45.1464, 1.11", "-117.682, -20.5375, -45.3041, 1.47", "-118.326, -20.3756, -45.5054, 1.47", "-119.063, -20.1864, -45.7254, 1.47", "-119.953, -19.9545, -45.976, 1.47", "-121.165, -19.6689, -46.3035, 1.47", "-121.645, -19.5754, -46.4282, 1.47" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-48.2153, 110.367, 23.1582, 0.29", "-48.4989, 109.139, 23.8284, 0.29", "-48.6513, 108.539, 24.1726, 0.29", "-48.8444, 107.828, 24.6233, 0.29", "-49.1109, 106.867, 25.2329, 0.52", "-49.3306, 105.985, 25.875, 0.81", "-49.451, 105.469, 26.3033, 0.81", "-49.6487, 104.597, 27.1281, 0.29", "-49.8546, 103.639, 28.0898, 0.44", "-50.0022, 102.927, 28.8414, 0.37", "-50.2603, 101.583, 30.3503, 0.52", "-50.4189, 100.72, 31.4042, 0.81", "-50.4862, 100.293, 31.9594, 0.59", "-52.7053, 93.6251, 39.3048, 0.59" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-48.2153, 110.367, 23.1582, 0.37", "-48.6021, 111.939, 23.9253, 0.37", "-48.8119, 112.545, 24.2224, 0.37", "-49.0496, 113.134, 24.4946, 0.37", "-49.3913, 113.933, 24.8624, 0.44", "-49.7752, 114.773, 25.322, 0.44", "-50.0282, 115.287, 25.622, 0.37", "-50.4385, 116.001, 26.0165, 0.29", "-50.7474, 116.476, 26.2749, 0.44", "-51.1126, 117.023, 26.5749, 0.29", "-51.7882, 118.106, 27.1275, 0.52", "-52.1559, 118.791, 27.4155, 0.44", "-52.5318, 119.528, 27.6856, 0.44", "-52.9342, 120.336, 27.9349, 0.37", "-53.2169, 120.883, 28.0765, 0.37", "-53.6032, 121.586, 28.2339, 0.29", "-53.9607, 122.233, 28.3762, 0.29", "-54.2659, 122.799, 28.5511, 0.22", "-54.556, 123.317, 28.7618, 0.22", "-54.7897, 123.724, 28.9547, 0.37", "-55.3143, 124.638, 29.3987, 0.52", "-55.6781, 125.276, 29.7169, 0.44", "-55.9393, 125.77, 29.9523, 0.29", "-56.2108, 126.352, 30.2071, 0.29", "-56.4841, 126.976, 30.454, 0.29", "-56.9415, 128.063, 30.8892, 0.44", "-57.2232, 128.768, 31.1718, 0.52", "-57.4409, 129.321, 31.4251, 0.44", "-57.6793, 129.936, 31.734, 0.29", "-57.9149, 130.548, 32.0741, 0.29", "-58.2189, 131.315, 32.5006, 0.44", "-58.3857, 131.756, 32.7734, 0.74", "-58.6641, 132.537, 33.2929, 0.88", "-58.7989, 132.911, 33.5639, 0.29", "-58.9738, 133.403, 33.9282, 0.29", "-59.2695, 134.198, 34.4567, 0.29", "-62.8333, 140.681, 37.2216, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-121.645, -19.5754, -46.4282, 0.44", "-122.541, -19.9479, -46.7943, 0.44", "-122.811, -20.0658, -46.8894, 0.52", "-123.142, -20.2008, -46.9924, 0.52", "-123.711, -20.4125, -47.1552, 0.37", "-124.494, -20.691, -47.3564, 0.44", "-125.175, -20.9391, -47.5113, 0.29", "-125.955, -21.2598, -47.697, 0.29", "-126.525, -21.5088, -47.8178, 0.29", "-126.981, -21.7241, -47.8953, 0.37", "-127.691, -22.0969, -47.9712, 0.37", "-128.241, -22.4272, -48.0077, 0.37", "-129.117, -23.0336, -48.0512, 0.59", "-129.356, -23.2363, -48.0483, 0.96", "-129.733, -23.6039, -48.02, 0.96", "-130.134, -24.0524, -47.9581, 1.18", "-130.354, -24.3346, -47.9032, 1.03", "-130.768, -24.9051, -47.766, 0.52", "-131.398, -25.8415, -47.4943, 0.29", "-131.678, -26.297, -47.3762, 0.74", "-132.055, -26.9677, -47.2194, 0.88", "-132.328, -27.5149, -47.1038, 1.03", "-132.469, -27.8513, -47.03, 1.03", "-132.572, -28.1606, -46.9542, 0.81", "-132.8, -28.9094, -46.7261, 0.44", "-132.989, -29.5499, -46.5373, 0.37", "-133.14, -30.0496, -46.3944, 0.37", "-133.328, -30.6572, -46.2137, 0.22", "-133.62, -31.549, -45.9147, 0.22", "-134.081, -32.7732, -45.3855, 0.22", "-134.419, -33.5972, -45.0068, 1.03", "-134.637, -34.1073, -44.7766, 1.18", "-134.819, -34.4795, -44.5865, 1.18", "-135.215, -35.1525, -44.2028, 0.74", "-135.908, -36.1082, -43.5812, 0.52", "-136.527, -36.8278, -43.0703, 0.44", "-136.776, -37.0793, -42.8827, 0.59", "-137.753, -38.0006, -42.2215, 0.22", "-138.384, -38.5624, -41.8204, 0.22", "-139.262, -39.3048, -41.2997, 0.22", "-140.091, -39.972, -40.8392, 0.22", "-140.696, -40.4163, -40.502, 0.74", "-141.001, -40.6308, -40.3476, 0.74", "-141.631, -41.0488, -40.0923, 0.59", "-142.207, -41.3896, -39.8833, 0.22", "-142.62, -41.5892, -39.7597, 0.66", "-143.364, -41.8972, -39.5798, 0.22", "-143.72, -42.044, -39.5086, 0.29", "-144.461, -42.3037, -39.3365, 0.29", "-144.861, -42.4301, -39.2384, 0.44", "-145.325, -42.5539, -39.1092, 0.22", "-145.713, -42.6539, -38.9853, 0.29", "-146.31, -42.82, -38.7799, 0.29", "-147.78, -43.2563, -38.2732, 0.22", "-148.292, -43.4214, -38.0921, 1.18", "-148.71, -43.5713, -37.9519, 1.47", "-149.005, -43.684, -37.8688, 1.47", "-149.775, -43.9845, -37.7154, 0.96", "-150.465, -44.2647, -37.6276, 0.74", "-150.812, -44.4214, -37.605, 1.11", "-151.316, -44.6467, -37.5486, 1.25", "-152.039, -44.9662, -37.4303, 0.66", "-152.6, -45.213, -37.3183, 0.66", "-153.281, -45.5311, -37.1496, 1.18", "-153.921, -45.846, -36.9705, 1.18", "-154.541, -46.1486, -36.797, 1.03", "-155.276, -46.5154, -36.5954, 0.66", "-155.732, -46.7402, -36.4761, 0.29", "-156.242, -46.9765, -36.3581, 0.37", "-156.575, -47.1175, -36.2881, 0.37", "-157.377, -47.4151, -36.1183, 0.22", "-158.096, -47.6487, -35.9598, 0.22", "-159.122, -47.9555, -35.7399, 0.59", "-159.614, -48.0909, -35.6259, 0.81", "-160.302, -48.2782, -35.4484, 0.81", "-161.321, -48.6301, -35.1405, 0.22", "-161.779, -48.83, -34.9831, 0.22", "-162.453, -49.1802, -34.7486, 0.96", "-162.971, -49.5202, -34.5676, 1.03", "-163.156, -49.6687, -34.499, 1.03", "-164.35, -50.7792, -34.0226, 0.22", "-164.788, -51.238, -33.8267, 0.22", "-165.008, -51.4808, -33.718, 0.44", "-165.309, -51.8288, -33.5479, 0.52", "-166.01, -52.6471, -33.1497, 0.22", "-166.461, -53.1628, -32.891, 0.44", "-166.797, -53.5412, -32.683, 0.52", "-167.221, -54.0058, -32.4098, 0.52", "-167.623, -54.4336, -32.1434, 0.44", "-168.036, -54.8591, -31.8831, 0.22", "-168.413, -55.2424, -31.6826, 0.44" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-121.645, -19.5754, -46.4282, 0.52", "-122.29, -18.9519, -47.0966, 0.52", "-122.792, -18.4816, -47.5317, 0.52", "-123.409, -17.9459, -47.9955, 0.29", "-123.862, -17.5956, -48.2898, 0.29", "-124.275, -17.3136, -48.5244, 0.29", "-124.639, -17.0954, -48.7076, 0.52", "-125.406, -16.744, -48.9874, 0.66", "-125.788, -16.5933, -49.11, 0.66", "-126.297, -16.4031, -49.2721, 0.29", "-126.738, -16.211, -49.4108, 0.29", "-127.263, -15.9912, -49.546, 0.52", "-127.671, -15.8395, -49.6292, 0.59", "-128.149, -15.6878, -49.7128, 0.59", "-128.602, -15.5381, -49.7814, 0.59", "-129.314, -15.2803, -49.8909, 0.29", "-129.88, -15.0735, -49.9741, 0.22", "-130.363, -14.9357, -50.0577, 0.29", "-130.771, -14.8668, -50.1317, 0.44", "-131.161, -14.8514, -50.2102, 0.52", "-131.644, -14.9116, -50.3456, 0.52", "-131.858, -14.9589, -50.4228, 0.52", "-132.598, -15.1253, -50.7343, 0.29", "-132.998, -15.2286, -50.9109, 0.29", "-133.463, -15.3723, -51.1001, 0.29", "-134.269, -15.6492, -51.3743, 0.66", "-134.504, -15.7355, -51.4427, 0.88", "-135.024, -15.9199, -51.5742, 0.88", "-135.414, -16.0347, -51.6691, 0.88", "-135.986, -16.1783, -51.8288, 0.88", "-136.711, -16.3352, -52.0581, 1.11", "-137.286, -16.4286, -52.2551, 1.11", "-138.031, -16.5375, -52.5163, 0.29", "-138.688, -16.6204, -52.748, 0.29", "-139.411, -16.6951, -53.016, 0.74", "-139.723, -16.7201, -53.1461, 0.74", "-140.618, -16.7827, -53.5481, 0.29", "-141.263, -16.8137, -53.8465, 0.29", "-142.161, -16.8783, -54.2896, 0.81", "-142.925, -16.9803, -54.6781, 0.88", "-143.531, -17.0703, -54.9899, 0.88", "-144.006, -17.1437, -55.2332, 0.88", "-144.412, -17.2032, -55.4494, 0.88", "-145.375, -17.2944, -55.9846, 0.44", "-146.149, -17.3159, -56.422, 0.88", "-146.985, -17.273, -56.8928, 1.03", "-147.558, -17.2069, -57.2116, 1.03", "-148.265, -17.0888, -57.6112, 0.59", "-149.041, -16.9235, -58.0475, 0.29", "-149.636, -16.7505, -58.3779, 0.29", "-150.425, -16.4855, -58.8382, 0.66", "-151.022, -16.2688, -59.2203, 0.88", "-151.478, -16.0719, -59.5404, 1.25", "-151.8, -15.9066, -59.789, 1.25", "-152.564, -15.4545, -60.4288, 0.29", "-153.103, -15.0774, -60.9304, 0.22", "-153.598, -14.6568, -61.4589, 0.22", "-154.223, -14.0023, -62.2441, 0.66", "-154.573, -13.5708, -62.7297, 1.11", "-154.777, -13.2778, -63.0263, 1.18", "-155.206, -12.5724, -63.6544, 0.37", "-155.537, -12.0351, -64.0679, 0.66", "-156.349, -10.7988, -64.7993, 0.29", "-156.745, -10.259, -65.0415, 0.29", "-157.556, -9.28522, -65.3462, 0.59", "-158.017, -8.79681, -65.4476, 0.59", "-158.782, -8.12393, -65.5544, 0.22", "-160.06, -7.14479, -65.6789, 0.22", "-160.701, -6.71648, -65.7083, 0.22", "-161.822, -6.03875, -65.7453, 0.22", "-163.108, -5.31856, -65.7744, 0.22", "-165.11, -4.22472, -65.823, 0.22", "-165.965, -3.7508, -65.8322, 0.66", "-166.789, -3.27065, -65.7736, 0.37", "-167.248, -2.98, -65.6893, 0.37", "-167.792, -2.60329, -65.5018, 0.52", "-168.292, -2.21096, -65.2018, 0.66", "-169.373, -1.29523, -64.3554, 0.22", "-170.607, -0.226852, -63.3492, 0.66", "-170.944, 0.0700998, -63.0909, 0.66", "-171.661, 0.691634, -62.5735, 0.44", "-173.255, 2.08015, -61.449, 0.15", "-173.859, 2.60501, -61.0174, 0.15", "-174.616, 3.25933, -60.4968, 0.15", "-175.464, 3.95577, -59.9908, 0.52", "-175.93, 4.34549, -59.7362, 0.74", "-176.842, 5.10623, -59.3667, 0.74" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_52", "dend_45", "dend_32", "dend_0", "dend_62", "dend_53", "dend_47", "dend_46", "dend_38", "dend_33", "dend_14", "dend_1", "dend_66", "dend_63", "dend_61", "dend_54", "dend_51", "dend_48", "dend_42", "dend_39", "dend_37", "dend_34", "dend_29", "dend_15", "dend_3", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_56", "dend_55", "dend_50", "dend_49", "dend_44", "dend_43", "dend_41", "dend_40", "dend_36", "dend_35", "dend_31", "dend_30", "dend_28", "dend_16", "dend_11", "dend_4", "dend_60", "dend_57", "dend_25", "dend_17", "dend_13", "dend_12", "dend_6", "dend_5", "dend_59", "dend_58", "dend_27", "dend_26", "dend_20", "dend_19", "dend_18", "dend_8", "dend_7", "dend_24", "dend_21", "dend_10", "dend_9", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_52", "dend_45", "dend_32", "dend_0", "dend_62", "dend_53", "dend_47", "dend_46", "dend_38", "dend_33", "dend_14", "dend_1", "dend_66", "dend_63", "dend_61", "dend_54", "dend_51", "dend_48", "dend_42", "dend_39", "dend_37", "dend_34", "dend_29", "dend_15", "dend_3", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_56", "dend_55", "dend_50", "dend_49", "dend_44", "dend_43", "dend_41", "dend_40", "dend_36", "dend_35", "dend_31", "dend_30", "dend_28", "dend_16", "dend_11", "dend_4", "dend_60", "dend_57", "dend_25", "dend_17", "dend_13", "dend_12", "dend_6", "dend_5", "dend_59", "dend_58", "dend_27", "dend_26", "dend_20", "dend_19", "dend_18", "dend_8", "dend_7", "dend_24", "dend_21", "dend_10", "dend_9", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_52", "dend_45", "dend_32", "dend_0", "axon_0", "dend_62", "dend_53", "dend_47", "dend_46", "dend_38", "dend_33", "dend_14", "dend_1", "axon_1", "dend_66", "dend_63", "dend_61", "dend_54", "dend_51", "dend_48", "dend_42", "dend_39", "dend_37", "dend_34", "dend_29", "dend_15", "dend_3", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_56", "dend_55", "dend_50", "dend_49", "dend_44", "dend_43", "dend_41", "dend_40", "dend_36", "dend_35", "dend_31", "dend_30", "dend_28", "dend_16", "dend_11", "dend_4", "dend_60", "dend_57", "dend_25", "dend_17", "dend_13", "dend_12", "dend_6", "dend_5", "dend_59", "dend_58", "dend_27", "dend_26", "dend_20", "dend_19", "dend_18", "dend_8", "dend_7", "dend_24", "dend_21", "dend_10", "dend_9", "dend_23", "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_NBC_3064d86d49_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_52, id: dend_52, parent: soma_0
create dend_52
public dend_52
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_52
create dend_62
public dend_62
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_53
create dend_61
public dend_61
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_14
create dend_29
public dend_29
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_15
create dend_28
public dend_28
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_25, id: dend_25, parent: dend_16
create dend_25
public dend_25
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_20, id: dend_20, parent: dend_17
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_52, dend_45, dend_32, dend_0, dend_62, dend_53, dend_47, dend_46, dend_38, dend_33, dend_14, dend_1, dend_66, dend_63, dend_61, dend_54, dend_51, dend_48, dend_42, dend_39, dend_37, dend_34, dend_29, dend_15, dend_3, dend_2, dend_68, dend_67, dend_65, dend_64, dend_56, dend_55, dend_50, dend_49, dend_44, dend_43, dend_41, dend_40, dend_36, dend_35, dend_31, dend_30, dend_28, dend_16, dend_11, dend_4, dend_60, dend_57, dend_25, dend_17, dend_13, dend_12, dend_6, dend_5, dend_59, dend_58, dend_27, dend_26, dend_20, dend_19, dend_18, dend_8, dend_7, dend_24, dend_21, dend_10, dend_9, dend_23, dend_22]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_52, dend_45, dend_32, dend_0, dend_62, dend_53, dend_47, dend_46, dend_38, dend_33, dend_14, dend_1, dend_66, dend_63, dend_61, dend_54, dend_51, dend_48, dend_42, dend_39, dend_37, dend_34, dend_29, dend_15, dend_3, dend_2, dend_68, dend_67, dend_65, dend_64, dend_56, dend_55, dend_50, dend_49, dend_44, dend_43, dend_41, dend_40, dend_36, dend_35, dend_31, dend_30, dend_28, dend_16, dend_11, dend_4, dend_60, dend_57, dend_25, dend_17, dend_13, dend_12, dend_6, dend_5, dend_59, dend_58, dend_27, dend_26, dend_20, dend_19, dend_18, dend_8, dend_7, dend_24, dend_21, dend_10, dend_9, dend_23, dend_22]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_52, dend_45, dend_32, dend_0, axon_0, dend_62, dend_53, dend_47, dend_46, dend_38, dend_33, dend_14, dend_1, axon_1, dend_66, dend_63, dend_61, dend_54, dend_51, dend_48, dend_42, dend_39, dend_37, dend_34, dend_29, dend_15, dend_3, dend_2, dend_68, dend_67, dend_65, dend_64, dend_56, dend_55, dend_50, dend_49, dend_44, dend_43, dend_41, dend_40, dend_36, dend_35, dend_31, dend_30, dend_28, dend_16, dend_11, dend_4, dend_60, dend_57, dend_25, dend_17, dend_13, dend_12, dend_6, dend_5, dend_59, dend_58, dend_27, dend_26, dend_20, dend_19, dend_18, dend_8, dend_7, dend_24, dend_21, dend_10, dend_9, dend_23, dend_22]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_59
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_52(0), soma_0(0.45000023510978554)
    connect dend_45(0), soma_0(0.45000023510978554)
    connect dend_32(0), soma_0(0.45000023510978554)
    connect dend_0(0), soma_0(0.45000023510978554)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_29(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_25(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_20(0), dend_17(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.04084, -7.79073, 6.11351, 3.00137 ) }
    soma_0 { pt3dadd( -5.42935, -7.07755, 5.54109, 5.08972 ) }
    soma_0 { pt3dadd( -4.81786, -6.36438, 4.96868, 6.81398 ) }
    soma_0 { pt3dadd( -4.20638, -5.6512, 4.39626, 7.60007 ) }
    soma_0 { pt3dadd( -3.59489, -4.93802, 3.82385, 8.22315 ) }
    soma_0 { pt3dadd( -2.9834, -4.22485, 3.25143, 8.68938 ) }
    soma_0 { pt3dadd( -2.37191, -3.51167, 2.67902, 8.90978 ) }
    soma_0 { pt3dadd( -1.76042, -2.7985, 2.1066, 9.28414 ) }
    soma_0 { pt3dadd( -1.14893, -2.08532, 1.53419, 9.71321 ) }
    soma_0 { pt3dadd( -0.537444, -1.37214, 0.961772, 9.53282 ) }
    soma_0 { pt3dadd( 0.0740441, -0.658968, 0.389358, 9.44691 ) }
    soma_0 { pt3dadd( 0.685533, 0.0542076, -0.183057, 9.12467 ) }
    soma_0 { pt3dadd( 1.29702, 0.767383, -0.755472, 8.9488 ) }
    soma_0 { pt3dadd( 1.90851, 1.48056, -1.32789, 8.45797 ) }
    soma_0 { pt3dadd( 2.52, 2.19374, -1.9003, 7.56647 ) }
    soma_0 { pt3dadd( 3.13149, 2.90691, -2.47272, 6.84034 ) }
    soma_0 { pt3dadd( 3.74298, 3.62009, -3.04513, 6.52525 ) }
    soma_0 { pt3dadd( 4.35446, 4.33326, -3.61755, 5.93791 ) }
    soma_0 { pt3dadd( 4.96595, 5.04644, -4.18996, 5.19964 ) }
    soma_0 { pt3dadd( 5.57744, 5.75961, -4.76238, 4.44836 ) }
    soma_0 { pt3dadd( 6.18893, 6.47279, -5.33479, 2.69612 ) }
    // Section: dend_52, id: dend_52, parent: soma_0 (entry count 21/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -7.6347, -3.79942, 4.3315, 2.36 ) }
    dend_52 { pt3dadd( -7.6347, -3.79942, 4.3315, 2.36 ) }
    dend_52 { pt3dadd( -8.03075, -3.28462, 4.79784, 1.99 ) }
    dend_52 { pt3dadd( -8.34129, -2.43142, 5.66232, 1.25 ) }
    dend_52 { pt3dadd( -8.5083, -1.50215, 6.69363, 1.55 ) }
    dend_52 { pt3dadd( -8.57159, -0.784558, 7.55215, 1.62 ) }
    dend_52 { pt3dadd( -8.67839, 0.21095, 8.75062, 1.47 ) }
    dend_52 { pt3dadd( -8.80791, 1.20499, 9.9708, 1.69 ) }
    dend_52 { pt3dadd( -9.06136, 2.48539, 11.5497, 2.14 ) }
    dend_52 { pt3dadd( -9.36672, 3.47035, 12.7743, 2.58 ) }
    dend_52 { pt3dadd( -9.97409, 4.54074, 14.1057, 1.77 ) }
    dend_52 { pt3dadd( -10.8062, 5.27879, 15.0357, 1.18 ) }
    dend_52 { pt3dadd( -11.9505, 5.85303, 15.7026, 1.18 ) }
    dend_52 { pt3dadd( -13.7794, 6.48774, 16.3259, 1.18 ) }
    dend_52 { pt3dadd( -15.1184, 6.83881, 16.5711, 1.18 ) }
    dend_52 { pt3dadd( -16.4959, 7.11729, 16.7287, 1.4 ) }
    dend_52 { pt3dadd( -17.5737, 7.27245, 16.78, 1.4 ) }
    dend_52 { pt3dadd( -19.1175, 7.395, 16.8115, 1.18 ) }
    dend_52 { pt3dadd( -20.2177, 7.42677, 16.8277, 1.18 ) }
    dend_52 { pt3dadd( -21.6181, 7.37824, 16.8694, 1.55 ) }
    dend_52 { pt3dadd( -23.1231, 7.21542, 16.968, 1.84 ) }
    dend_52 { pt3dadd( -24.7702, 6.90434, 17.1388, 2.06 ) }
    dend_52 { pt3dadd( -26.3356, 6.50769, 17.448, 1.62 ) }
    dend_52 { pt3dadd( -27.6305, 6.1085, 17.7429, 1.47 ) }
    dend_52 { pt3dadd( -28.7207, 5.72261, 18.0278, 1.25 ) }
    dend_52 { pt3dadd( -30.0211, 5.21181, 18.4293, 1.47 ) }
    dend_52 { pt3dadd( -31.189, 4.71869, 18.8581, 1.84 ) }
    dend_52 { pt3dadd( -33.1023, 3.91836, 19.8724, 2.28 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 49/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -5.3447, -8.29342, 4.8315, 1.47 ) }
    dend_45 { pt3dadd( -5.3447, -8.29342, 4.8315, 1.47 ) }
    dend_45 { pt3dadd( -5.56349, -9.11279, 5.02818, 1.47 ) }
    dend_45 { pt3dadd( -5.8283, -10.089, 5.27202, 1.25 ) }
    dend_45 { pt3dadd( -6.17553, -11.3341, 5.59796, 1.25 ) }
    dend_45 { pt3dadd( -6.47335, -12.3786, 5.95069, 1.03 ) }
    dend_45 { pt3dadd( -6.74221, -13.376, 6.39198, 1.03 ) }
    dend_45 { pt3dadd( -6.92966, -14.231, 6.87171, 1.03 ) }
    dend_45 { pt3dadd( -7.09864, -15.2621, 7.56527, 0.96 ) }
    dend_45 { pt3dadd( -7.22441, -16.1077, 8.19817, 1.03 ) }
    dend_45 { pt3dadd( -7.45425, -17.4369, 9.22863, 1.47 ) }
    dend_45 { pt3dadd( -7.73566, -18.6813, 10.1758, 1.62 ) }
    dend_45 { pt3dadd( -7.99078, -19.5554, 10.813, 1.69 ) }
    dend_45 { pt3dadd( -8.37294, -20.5743, 11.4652, 0.74 ) }
    dend_45 { pt3dadd( -8.82218, -21.6254, 11.923, 0.59 ) }
    dend_45 { pt3dadd( -9.30856, -22.7077, 12.2489, 1.18 ) }
    dend_45 { pt3dadd( -9.74958, -23.6686, 12.4423, 1.18 ) }
    dend_45 { pt3dadd( -10.2566, -24.7752, 12.6274, 1.18 ) }
    dend_45 { pt3dadd( -10.8106, -26.0945, 12.8788, 1.11 ) }
    dend_45 { pt3dadd( -11.2913, -27.6625, 13.293, 1.03 ) }
    dend_45 { pt3dadd( -11.5652, -29.2214, 13.9029, 0.96 ) }
    dend_45 { pt3dadd( -11.637, -29.9435, 14.2595, 1.25 ) }
    dend_45 { pt3dadd( -11.6932, -30.7432, 14.7257, 1.4 ) }
    dend_45 { pt3dadd( -11.7209, -31.7532, 15.3842, 1.18 ) }
    dend_45 { pt3dadd( -11.7263, -32.894, 16.2162, 1.33 ) }
    dend_45 { pt3dadd( -11.7585, -34.3425, 17.4129, 0.96 ) }
    dend_45 { pt3dadd( -11.783, -34.9287, 17.8732, 1.4 ) }
    dend_45 { pt3dadd( -11.8417, -35.7407, 18.5206, 1.77 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 77/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 2.78531, -5.27992, -8.2385, 2.5 ) }
    dend_32 { pt3dadd( 2.79621, -5.75892, -8.30745, 2.5 ) }
    dend_32 { pt3dadd( 2.75931, -6.17154, -8.41701, 2.5 ) }
    dend_32 { pt3dadd( 2.57694, -7.38442, -8.79112, 1.25 ) }
    dend_32 { pt3dadd( 2.44883, -8.11668, -9.05315, 1.4 ) }
    dend_32 { pt3dadd( 2.28628, -9.07446, -9.4478, 1.33 ) }
    dend_32 { pt3dadd( 2.17454, -9.81888, -9.77414, 1.55 ) }
    dend_32 { pt3dadd( 1.96723, -11.2058, -10.4472, 1.62 ) }
    dend_32 { pt3dadd( 1.88728, -11.789, -10.7449, 1.62 ) }
    dend_32 { pt3dadd( 1.76372, -12.778, -11.2726, 1.62 ) }
    dend_32 { pt3dadd( 1.62309, -14.1527, -12.0244, 1.62 ) }
    dend_32 { pt3dadd( 1.57604, -14.9766, -12.4681, 1.55 ) }
    dend_32 { pt3dadd( 1.57493, -15.7572, -12.8887, 1.47 ) }
    dend_32 { pt3dadd( 1.62675, -16.7728, -13.3953, 1.47 ) }
    dend_32 { pt3dadd( 1.66631, -17.2418, -13.629, 1.47 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.5053, 7.67708, -7.6085, 3.09 ) }
    dend_0 { pt3dadd( 4.88315, 8.82047, -8.12568, 3.09 ) }
    dend_0 { pt3dadd( 5.58373, 10.8965, -9.11394, 2.43 ) }
    dend_0 { pt3dadd( 5.87766, 11.7818, -9.53542, 2.65 ) }
    dend_0 { pt3dadd( 6.22288, 12.8859, -10.0829, 2.43 ) }
    dend_0 { pt3dadd( 6.41947, 13.5146, -10.3946, 2.58 ) }
    dend_0 { pt3dadd( 6.52814, 13.8621, -10.567, 2.8 ) }
    dend_0 { pt3dadd( 6.75162, 14.6403, -10.9801, 2.87 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 6.85938, 15.0546, -11.183, 2.87 ) }
    dend_0 { pt3dadd( 7.11915, 16.0513, -11.7681, 2.5 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 2/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.18893, 6.47279, -5.33479, 0.52 ) }
    axon_0 { pt3dadd( 15.9526, 17.8601, -5.33479, 0.52 ) }
    axon_0 { pt3dadd( 25.7163, 29.2474, -5.33479, 0.52 ) }
    // Section: dend_62, id: dend_62, parent: dend_52 (entry count 5/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -33.1023, 3.91836, 19.8724, 0.66 ) }
    dend_62 { pt3dadd( -33.9226, 4.97213, 20.1501, 0.66 ) }
    dend_62 { pt3dadd( -34.466, 5.58555, 20.4063, 0.66 ) }
    dend_62 { pt3dadd( -35.1302, 6.20657, 20.7745, 0.81 ) }
    dend_62 { pt3dadd( -35.6017, 6.55438, 21.0548, 1.03 ) }
    dend_62 { pt3dadd( -36.2607, 6.9239, 21.4549, 1.11 ) }
    dend_62 { pt3dadd( -36.8314, 7.15507, 21.793, 1.11 ) }
    dend_62 { pt3dadd( -37.7876, 7.29961, 22.3552, 1.11 ) }
    dend_62 { pt3dadd( -38.7864, 7.2761, 22.9355, 0.88 ) }
    dend_62 { pt3dadd( -39.7974, 7.10666, 23.5152, 0.88 ) }
    dend_62 { pt3dadd( -40.7196, 6.86079, 23.9859, 0.88 ) }
    dend_62 { pt3dadd( -41.642, 6.55491, 24.3607, 0.88 ) }
    dend_62 { pt3dadd( -42.4434, 6.30138, 24.6027, 0.88 ) }
    dend_62 { pt3dadd( -43.1607, 6.12478, 24.7285, 0.88 ) }
    dend_62 { pt3dadd( -43.8503, 6.03376, 24.7841, 0.74 ) }
    dend_62 { pt3dadd( -44.9089, 6.0967, 24.7819, 0.74 ) }
    dend_62 { pt3dadd( -46.1004, 6.43374, 24.7358, 0.74 ) }
    dend_62 { pt3dadd( -47.3094, 7.00363, 24.6792, 0.88 ) }
    dend_62 { pt3dadd( -48.1899, 7.51946, 24.6552, 0.88 ) }
    dend_62 { pt3dadd( -48.7529, 7.87375, 24.6765, 0.88 ) }
    dend_62 { pt3dadd( -49.3613, 8.25163, 24.7608, 0.81 ) }
    dend_62 { pt3dadd( -50.0727, 8.6268, 24.9972, 0.81 ) }
    dend_62 { pt3dadd( -50.4345, 8.72659, 25.1909, 0.81 ) }
    dend_62 { pt3dadd( -51.0539, 8.71784, 25.6709, 0.81 ) }
    dend_62 { pt3dadd( -51.767, 8.63746, 26.3199, 0.81 ) }
    dend_62 { pt3dadd( -52.293, 8.59284, 26.8259, 0.81 ) }
    dend_62 { pt3dadd( -53.1961, 8.57174, 27.6968, 1.11 ) }
    dend_62 { pt3dadd( -53.8022, 8.6142, 28.2715, 0.96 ) }
    dend_62 { pt3dadd( -54.7989, 8.80933, 29.1847, 1.11 ) }
    dend_62 { pt3dadd( -55.5024, 9.01882, 29.8227, 1.03 ) }
    dend_62 { pt3dadd( -56.3737, 9.39997, 30.5701, 1.03 ) }
    dend_62 { pt3dadd( -56.9528, 9.73368, 31.03, 1.25 ) }
    dend_62 { pt3dadd( -57.5588, 10.1701, 31.4234, 1.62 ) }
    dend_62 { pt3dadd( -58.0235, 10.5635, 31.6873, 1.62 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 39/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -33.1023, 3.91836, 19.8724, 1.03 ) }
    dend_53 { pt3dadd( -33.7506, 3.16051, 21.2733, 1.03 ) }
    dend_53 { pt3dadd( -34.6043, 2.08243, 23.1213, 0.88 ) }
    dend_53 { pt3dadd( -35.0036, 1.5088, 23.9653, 1.4 ) }
    dend_53 { pt3dadd( -35.3713, 0.956582, 24.6864, 1.92 ) }
    dend_53 { pt3dadd( -36.6081, -0.872705, 26.8942, 1.69 ) }
    dend_53 { pt3dadd( -37.1144, -1.59086, 27.7084, 0.88 ) }
    dend_53 { pt3dadd( -37.5248, -2.15679, 28.3725, 0.74 ) }
    dend_53 { pt3dadd( -38.1746, -3.06395, 29.3047, 0.74 ) }
    dend_53 { pt3dadd( -38.5981, -3.69709, 29.8549, 0.74 ) }
    dend_53 { pt3dadd( -38.9567, -4.25294, 30.2152, 1.25 ) }
    dend_53 { pt3dadd( -39.3417, -4.88721, 30.3634, 1.77 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 51/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -11.8417, -35.7407, 18.5206, 0.96 ) }
    dend_47 { pt3dadd( -11.6008, -36.7631, 17.8729, 0.96 ) }
    dend_47 { pt3dadd( -11.478, -37.2364, 17.5685, 0.96 ) }
    dend_47 { pt3dadd( -11.3233, -37.7919, 17.1713, 0.66 ) }
    dend_47 { pt3dadd( -11.0685, -38.6608, 16.5429, 0.66 ) }
    dend_47 { pt3dadd( -10.8214, -39.4846, 15.9693, 0.74 ) }
    dend_47 { pt3dadd( -10.52, -40.4536, 15.3289, 0.96 ) }
    dend_47 { pt3dadd( -10.3883, -40.8754, 15.0777, 0.96 ) }
    dend_47 { pt3dadd( -10.1505, -41.64, 14.641, 0.88 ) }
    dend_47 { pt3dadd( -10.0024, -42.186, 14.3557, 0.81 ) }
    dend_47 { pt3dadd( -9.87839, -42.7972, 14.1005, 0.81 ) }
    dend_47 { pt3dadd( -9.81479, -43.329, 13.9441, 0.81 ) }
    dend_47 { pt3dadd( -9.77984, -44.0411, 13.8033, 0.81 ) }
    dend_47 { pt3dadd( -9.77368, -44.5209, 13.7267, 0.74 ) }
    dend_47 { pt3dadd( -9.78125, -45.4103, 13.6086, 0.74 ) }
    dend_47 { pt3dadd( -9.79522, -45.7544, 13.5582, 1.03 ) }
    dend_47 { pt3dadd( -9.83843, -46.3954, 13.4532, 0.81 ) }
    dend_47 { pt3dadd( -9.89139, -47.0175, 13.3427, 0.81 ) }
    dend_47 { pt3dadd( -9.91999, -47.5071, 13.2508, 1.4 ) }
    dend_47 { pt3dadd( -9.92919, -48.0866, 13.151, 1.4 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 71/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -11.8417, -35.7407, 18.5206, 1.03 ) }
    dend_46 { pt3dadd( -13.3312, -36.7095, 19.4549, 1.03 ) }
    dend_46 { pt3dadd( -14.0572, -37.2289, 19.9532, 0.81 ) }
    dend_46 { pt3dadd( -14.9485, -37.947, 20.5804, 0.81 ) }
    dend_46 { pt3dadd( -15.6576, -38.5724, 21.0689, 0.96 ) }
    dend_46 { pt3dadd( -16.911, -39.7752, 21.9022, 0.74 ) }
    dend_46 { pt3dadd( -17.5983, -40.502, 22.3436, 0.66 ) }
    dend_46 { pt3dadd( -18.245, -41.2974, 22.6673, 0.96 ) }
    dend_46 { pt3dadd( -18.8173, -42.1093, 22.9782, 1.03 ) }
    dend_46 { pt3dadd( -19.3414, -42.966, 23.3547, 1.25 ) }
    dend_46 { pt3dadd( -19.7655, -43.7297, 23.749, 1.4 ) }
    dend_46 { pt3dadd( -20.2129, -44.6029, 24.2692, 1.18 ) }
    dend_46 { pt3dadd( -20.8128, -45.7711, 25.0789, 0.66 ) }
    dend_46 { pt3dadd( -21.5139, -47.0027, 26.0126, 0.66 ) }
    dend_46 { pt3dadd( -22.4292, -48.466, 27.2123, 1.25 ) }
    dend_46 { pt3dadd( -22.8933, -49.1873, 27.7919, 1.4 ) }
    dend_46 { pt3dadd( -23.4245, -50.0247, 28.4716, 0.88 ) }
    dend_46 { pt3dadd( -23.9497, -50.8883, 29.1505, 0.81 ) }
    dend_46 { pt3dadd( -24.4106, -51.7537, 29.8022, 0.96 ) }
    dend_46 { pt3dadd( -24.8268, -52.5962, 30.3182, 0.96 ) }
    dend_46 { pt3dadd( -25.3134, -53.5989, 30.8514, 0.96 ) }
    dend_46 { pt3dadd( -26.1054, -55.124, 31.6868, 1.03 ) }
    dend_46 { pt3dadd( -26.5411, -55.8631, 32.1235, 0.88 ) }
    dend_46 { pt3dadd( -27.4721, -57.2189, 33.0667, 0.88 ) }
    dend_46 { pt3dadd( -28.1449, -58.1019, 33.7582, 0.88 ) }
    dend_46 { pt3dadd( -28.6921, -58.7677, 34.3108, 0.96 ) }
    dend_46 { pt3dadd( -29.4943, -59.7379, 35.1469, 0.96 ) }
    dend_46 { pt3dadd( -30.2744, -60.7086, 35.9342, 0.81 ) }
    dend_46 { pt3dadd( -30.8427, -61.4376, 36.5242, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_46 { pt3dadd( -31.42, -62.2113, 37.1255, 0.74 ) }
    dend_46 { pt3dadd( -31.957, -63.0276, 37.7498, 0.66 ) }
    dend_46 { pt3dadd( -32.5709, -64.1454, 38.5688, 0.66 ) }
    dend_46 { pt3dadd( -33.1141, -65.2357, 39.3083, 0.59 ) }
    dend_46 { pt3dadd( -33.5127, -66.0038, 39.805, 0.59 ) }
    dend_46 { pt3dadd( -33.8544, -66.5567, 40.1376, 0.88 ) }
    dend_46 { pt3dadd( -34.2839, -67.1244, 40.4599, 0.88 ) }
    dend_46 { pt3dadd( -35.2634, -68.2428, 41.0678, 0.74 ) }
    dend_46 { pt3dadd( -36.0715, -69.0872, 41.5034, 0.74 ) }
    dend_46 { pt3dadd( -36.5915, -69.6257, 41.7621, 0.96 ) }
    dend_46 { pt3dadd( -37.2631, -70.3457, 42.0889, 0.96 ) }
    dend_46 { pt3dadd( -37.9757, -71.2157, 42.5292, 0.81 ) }
    dend_46 { pt3dadd( -38.5364, -72.0632, 43.004, 0.66 ) }
    dend_46 { pt3dadd( -38.6484, -72.3329, 43.1637, 0.81 ) }
    dend_46 { pt3dadd( -38.7977, -73.0735, 43.6309, 1.03 ) }
    dend_46 { pt3dadd( -38.8405, -73.4852, 43.9046, 1.25 ) }
    dend_46 { pt3dadd( -38.9624, -75.4778, 45.383, 0.81 ) }
    dend_46 { pt3dadd( -39.0442, -76.3892, 46.1383, 0.59 ) }
    dend_46 { pt3dadd( -39.197, -77.2706, 46.91, 0.52 ) }
    dend_46 { pt3dadd( -39.4047, -77.9579, 47.5053, 0.52 ) }
    dend_46 { pt3dadd( -39.7156, -78.722, 48.1812, 0.66 ) }
    dend_46 { pt3dadd( -40.1978, -79.625, 48.9416, 0.81 ) }
    dend_46 { pt3dadd( -40.6377, -80.34, 49.5228, 1.18 ) }
    dend_46 { pt3dadd( -41.0417, -81.0681, 50.1545, 0.74 ) }
    dend_46 { pt3dadd( -41.4089, -81.91, 50.9096, 0.59 ) }
    dend_46 { pt3dadd( -41.6739, -82.8185, 51.7244, 0.59 ) }
    dend_46 { pt3dadd( -41.8197, -83.5621, 52.3603, 0.74 ) }
    dend_46 { pt3dadd( -42.0574, -84.9062, 53.4844, 0.52 ) }
    dend_46 { pt3dadd( -42.2083, -85.6969, 54.2011, 0.74 ) }
    dend_46 { pt3dadd( -42.3102, -86.0637, 54.5828, 0.74 ) }
    dend_46 { pt3dadd( -42.6123, -86.8141, 55.4544, 0.29 ) }
    dend_46 { pt3dadd( -42.8392, -87.2088, 55.9408, 0.29 ) }
    dend_46 { pt3dadd( -43.3257, -87.7944, 56.7359, 0.29 ) }
    dend_46 { pt3dadd( -43.9662, -88.3053, 57.4498, 0.44 ) }
    dend_46 { pt3dadd( -44.3721, -88.5636, 57.8283, 0.44 ) }
    dend_46 { pt3dadd( -44.7398, -88.7552, 58.1734, 0.29 ) }
    dend_46 { pt3dadd( -51.5527, -98.3459, 62.5612, 0.29 ) }
    dend_46 { pt3dadd( -56.9219, -107.863, 68.6878, 0.29 ) }
    dend_46 { pt3dadd( -63.1938, -117.425, 73.8443, 0.29 ) }
    dend_46 { pt3dadd( -69.8128, -126.202, 79.771, 0.29 ) }
    dend_46 { pt3dadd( -76.1526, -136.452, 83.4609, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 41/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 1.66631, -17.2418, -13.629, 0.74 ) }
    dend_38 { pt3dadd( 2.97244, -18.0464, -14.1756, 0.74 ) }
    dend_38 { pt3dadd( 3.61743, -18.5044, -14.4895, 0.81 ) }
    dend_38 { pt3dadd( 4.21706, -19.0024, -14.845, 0.81 ) }
    dend_38 { pt3dadd( 4.82463, -19.6371, -15.3072, 0.81 ) }
    dend_38 { pt3dadd( 5.40326, -20.4137, -15.8549, 0.96 ) }
    dend_38 { pt3dadd( 5.77895, -21.1437, -16.4033, 1.11 ) }
    dend_38 { pt3dadd( 5.87315, -21.7519, -16.9058, 0.96 ) }
    dend_38 { pt3dadd( 5.83656, -22.3662, -17.4879, 1.03 ) }
    dend_38 { pt3dadd( 5.67387, -23.2362, -18.3809, 1.03 ) }
    dend_38 { pt3dadd( 5.50093, -23.8865, -19.0628, 0.96 ) }
    dend_38 { pt3dadd( 5.11239, -25.1625, -20.3858, 1.03 ) }
    dend_38 { pt3dadd( 4.68242, -26.438, -21.7259, 0.81 ) }
    dend_38 { pt3dadd( 4.23714, -27.7153, -23.0634, 0.96 ) }
    dend_38 { pt3dadd( 3.99739, -28.4239, -23.8167, 1.33 ) }
    dend_38 { pt3dadd( 3.82204, -28.9889, -24.4354, 1.47 ) }
    dend_38 { pt3dadd( 3.6883, -29.56, -25.0639, 1.69 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 58/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 1.66631, -17.2418, -13.629, 0.88 ) }
    dend_33 { pt3dadd( 2.32491, -18.9995, -13.8807, 0.88 ) }
    dend_33 { pt3dadd( 2.83268, -20.3326, -14.2007, 0.88 ) }
    dend_33 { pt3dadd( 3.21749, -21.5295, -14.5701, 0.88 ) }
    dend_33 { pt3dadd( 3.47148, -22.5895, -14.9436, 0.88 ) }
    dend_33 { pt3dadd( 3.72554, -24.0638, -15.5173, 0.88 ) }
    dend_33 { pt3dadd( 3.95842, -25.9083, -16.283, 0.66 ) }
    dend_33 { pt3dadd( 4.01959, -26.9007, -16.7685, 0.44 ) }
    dend_33 { pt3dadd( 4.02412, -28.115, -17.42, 0.66 ) }
    dend_33 { pt3dadd( 3.99309, -29.1327, -17.9938, 0.96 ) }
    dend_33 { pt3dadd( 3.96133, -30.0731, -18.5164, 1.11 ) }
    dend_33 { pt3dadd( 3.93731, -31.5857, -19.2967, 0.96 ) }
    dend_33 { pt3dadd( 3.93191, -32.451, -19.694, 0.96 ) }
    dend_33 { pt3dadd( 4.00512, -33.989, -20.3774, 0.96 ) }
    dend_33 { pt3dadd( 4.23443, -35.7563, -21.1378, 1.18 ) }
    dend_33 { pt3dadd( 4.39894, -36.6274, -21.5171, 1.62 ) }
    dend_33 { pt3dadd( 4.54623, -37.3362, -21.8298, 1.84 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 7.11915, 16.0513, -11.7681, 1.25 ) }
    dend_14 { pt3dadd( 7.01768, 16.1824, -16.5641, 1.25 ) }
    dend_14 { pt3dadd( 6.98774, 16.2211, -17.9792, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 78/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.11915, 16.0513, -11.7681, 1.11 ) }
    dend_1 { pt3dadd( 7.09962, 17.8535, -12.0242, 1.11 ) }
    dend_1 { pt3dadd( 7.07764, 19.2874, -12.2156, 0.96 ) }
    dend_1 { pt3dadd( 7.09728, 20.3316, -12.3418, 1.18 ) }
    dend_1 { pt3dadd( 7.16951, 21.3103, -12.4468, 1.47 ) }
    dend_1 { pt3dadd( 7.35079, 22.6647, -12.5739, 0.37 ) }
    dend_1 { pt3dadd( 7.53311, 23.5842, -12.6466, 0.37 ) }
    dend_1 { pt3dadd( 7.7925, 24.3684, -12.6674, 0.59 ) }
    dend_1 { pt3dadd( 8.13209, 25.1141, -12.6931, 0.59 ) }
    dend_1 { pt3dadd( 8.58769, 25.9899, -12.7257, 0.74 ) }
    dend_1 { pt3dadd( 9.01097, 26.7848, -12.7632, 0.74 ) }
    dend_1 { pt3dadd( 9.56745, 27.8873, -12.8231, 0.74 ) }
    dend_1 { pt3dadd( 10.1324, 29.0705, -12.8932, 0.74 ) }
    dend_1 { pt3dadd( 10.926, 30.8069, -13.013, 0.66 ) }
    dend_1 { pt3dadd( 11.4212, 32.0406, -13.1152, 0.66 ) }
    dend_1 { pt3dadd( 11.8729, 33.3441, -13.2404, 0.96 ) }
    dend_1 { pt3dadd( 12.1912, 34.4208, -13.3593, 1.33 ) }
    dend_1 { pt3dadd( 12.3496, 35.085, -13.4441, 1.47 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 96/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 25.7163, 29.2474, -5.33479, 0.52 ) }
    axon_1 { pt3dadd( 35.4799, 40.6347, -5.33479, 0.52 ) }
    axon_1 { pt3dadd( 45.2436, 52.022, -5.33479, 0.52 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 99/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -58.0235, 10.5635, 31.6873, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_66 { pt3dadd( -58.6199, 9.62274, 32.1269, 0.88 ) }
    dend_66 { pt3dadd( -59.0861, 8.97977, 32.5722, 0.88 ) }
    dend_66 { pt3dadd( -59.609, 8.3982, 33.1176, 0.88 ) }
    dend_66 { pt3dadd( -60.298, 7.73143, 33.9617, 0.88 ) }
    dend_66 { pt3dadd( -60.8504, 7.2816, 34.663, 0.88 ) }
    dend_66 { pt3dadd( -61.6033, 6.7684, 35.6223, 0.81 ) }
    dend_66 { pt3dadd( -62.441, 6.36922, 36.6876, 0.96 ) }
    dend_66 { pt3dadd( -63.3084, 6.1146, 37.7385, 1.11 ) }
    dend_66 { pt3dadd( -64.6014, 5.92653, 39.2041, 1.33 ) }
    dend_66 { pt3dadd( -65.4671, 5.87413, 40.177, 1.03 ) }
    dend_66 { pt3dadd( -66.3096, 5.87388, 41.0783, 0.88 ) }
    dend_66 { pt3dadd( -67.2683, 5.91887, 42.0123, 0.81 ) }
    dend_66 { pt3dadd( -68.0259, 5.98125, 42.6779, 0.96 ) }
    dend_66 { pt3dadd( -68.8202, 6.08377, 43.2907, 1.11 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 14/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -58.0235, 10.5635, 31.6873, 0.81 ) }
    dend_63 { pt3dadd( -55.7304, 11.9378, 32.5708, 0.81 ) }
    dend_63 { pt3dadd( -54.8285, 12.5033, 32.9127, 0.81 ) }
    dend_63 { pt3dadd( -53.2449, 13.4996, 33.6182, 0.74 ) }
    dend_63 { pt3dadd( -51.5136, 14.5667, 34.4752, 0.74 ) }
    dend_63 { pt3dadd( -50.3033, 15.2762, 35.1032, 0.74 ) }
    dend_63 { pt3dadd( -49.0259, 15.9604, 35.7743, 0.59 ) }
    dend_63 { pt3dadd( -47.7812, 16.6321, 36.5258, 0.74 ) }
    dend_63 { pt3dadd( -46.2561, 17.3931, 37.6211, 0.81 ) }
    dend_63 { pt3dadd( -45.0265, 17.9717, 38.6947, 0.96 ) }
    dend_63 { pt3dadd( -44.0914, 18.4106, 39.6809, 0.66 ) }
    dend_63 { pt3dadd( -43.25, 18.8404, 40.689, 0.29 ) }
    dend_63 { pt3dadd( -41.7233, 19.819, 42.7788, 0.29 ) }
    dend_63 { pt3dadd( -40.7118, 20.7667, 44.3538, 0.22 ) }
    dend_63 { pt3dadd( -39.7924, 21.8257, 45.9342, 0.59 ) }
    dend_63 { pt3dadd( -39.4572, 22.3439, 46.6349, 0.74 ) }
    dend_63 { pt3dadd( -39.1727, 22.9941, 47.3969, 0.29 ) }
    dend_63 { pt3dadd( -38.9442, 23.8846, 48.2317, 0.29 ) }
    dend_63 { pt3dadd( -38.7967, 25.3048, 49.0436, 0.29 ) }
    dend_63 { pt3dadd( -29.1685, 32.2526, 55.5914, 0.29 ) }
    dend_63 { pt3dadd( -20.3187, 40.9318, 61.265, 0.29 ) }
    dend_63 { pt3dadd( -10.3879, 48.7522, 66.2759, 0.29 ) }
    dend_63 { pt3dadd( 0.434068, 56.1866, 69.7822, 0.29 ) }
    dend_63 { pt3dadd( 13.0589, 60.7134, 71.4365, 0.29 ) }
    dend_63 { pt3dadd( 24.618, 66.6975, 75.1668, 0.29 ) }
    dend_63 { pt3dadd( 36.1599, 71.8655, 79.9404, 0.29 ) }
    dend_63 { pt3dadd( 48.3361, 76.0456, 84.0098, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_53 (entry count 41/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -39.3417, -4.88721, 30.3634, 0.59 ) }
    dend_61 { pt3dadd( -39.1609, -5.83338, 29.8717, 0.59 ) }
    dend_61 { pt3dadd( -38.9232, -6.87252, 29.3263, 0.59 ) }
    dend_61 { pt3dadd( -38.7747, -7.47592, 28.9938, 0.88 ) }
    dend_61 { pt3dadd( -38.4942, -8.5879, 28.3912, 0.81 ) }
    dend_61 { pt3dadd( -38.2747, -9.46097, 27.9424, 0.74 ) }
    dend_61 { pt3dadd( -38.0894, -10.2366, 27.5684, 0.66 ) }
    dend_61 { pt3dadd( -37.7868, -11.5181, 27.0223, 0.74 ) }
    dend_61 { pt3dadd( -37.6402, -12.1411, 26.7971, 0.96 ) }
    dend_61 { pt3dadd( -37.4568, -12.9857, 26.5319, 0.81 ) }
    dend_61 { pt3dadd( -37.3419, -13.6052, 26.3779, 0.81 ) }
    dend_61 { pt3dadd( -37.2549, -14.1671, 26.253, 0.74 ) }
    dend_61 { pt3dadd( -37.1903, -14.5939, 26.1742, 0.96 ) }
    dend_61 { pt3dadd( -37.0513, -15.4262, 26.0892, 0.66 ) }
    dend_61 { pt3dadd( -36.9127, -16.138, 26.0324, 0.66 ) }
    dend_61 { pt3dadd( -36.781, -16.7367, 25.9764, 0.88 ) }
    dend_61 { pt3dadd( -36.6364, -17.3713, 25.9058, 0.88 ) }
    dend_61 { pt3dadd( -36.4861, -18.0497, 25.8126, 0.66 ) }
    dend_61 { pt3dadd( -36.3594, -18.7026, 25.6862, 0.59 ) }
    dend_61 { pt3dadd( -36.2871, -19.2406, 25.5205, 0.59 ) }
    dend_61 { pt3dadd( -36.2317, -19.8808, 25.2732, 0.59 ) }
    dend_61 { pt3dadd( -36.2133, -20.4243, 25.0381, 0.59 ) }
    dend_61 { pt3dadd( -36.2262, -21.0, 24.7689, 1.03 ) }
    dend_61 { pt3dadd( -36.2907, -21.7337, 24.4006, 0.88 ) }
    dend_61 { pt3dadd( -36.464, -22.9624, 23.7657, 0.66 ) }
    dend_61 { pt3dadd( -36.5496, -23.4336, 23.5297, 0.66 ) }
    dend_61 { pt3dadd( -36.6654, -23.9427, 23.2989, 0.66 ) }
    dend_61 { pt3dadd( -36.8076, -24.4489, 23.109, 0.66 ) }
    dend_61 { pt3dadd( -37.0714, -25.2017, 22.8891, 0.81 ) }
    dend_61 { pt3dadd( -37.2668, -25.6549, 22.8084, 1.11 ) }
    dend_61 { pt3dadd( -37.4574, -26.0283, 22.7889, 1.11 ) }
    dend_61 { pt3dadd( -37.7979, -26.6215, 22.7924, 0.66 ) }
    dend_61 { pt3dadd( -38.1244, -27.1295, 22.8534, 0.52 ) }
    dend_61 { pt3dadd( -38.5036, -27.6676, 22.9812, 0.81 ) }
    dend_61 { pt3dadd( -38.7807, -28.0555, 23.1195, 0.81 ) }
    dend_61 { pt3dadd( -39.1773, -28.653, 23.3342, 0.66 ) }
    dend_61 { pt3dadd( -39.404, -29.0087, 23.4615, 0.81 ) }
    dend_61 { pt3dadd( -39.8423, -29.7248, 23.7338, 0.81 ) }
    dend_61 { pt3dadd( -40.0587, -30.0711, 23.8722, 0.66 ) }
    dend_61 { pt3dadd( -40.3545, -30.5292, 24.0672, 0.52 ) }
    dend_61 { pt3dadd( -40.7626, -31.1325, 24.2927, 0.59 ) }
    dend_61 { pt3dadd( -41.0365, -31.4874, 24.4146, 0.59 ) }
    dend_61 { pt3dadd( -41.5165, -32.0589, 24.6016, 0.44 ) }
    dend_61 { pt3dadd( -41.9292, -32.5008, 24.7433, 0.44 ) }
    dend_61 { pt3dadd( -42.4805, -33.024, 24.929, 0.44 ) }
    dend_61 { pt3dadd( -43.0869, -33.5352, 25.1258, 0.59 ) }
    dend_61 { pt3dadd( -43.6997, -34.0169, 25.3101, 0.66 ) }
    dend_61 { pt3dadd( -44.1086, -34.3271, 25.4303, 1.03 ) }
    dend_61 { pt3dadd( -44.4394, -34.585, 25.5378, 1.03 ) }
    dend_61 { pt3dadd( -44.7518, -34.8478, 25.6906, 1.03 ) }
    dend_61 { pt3dadd( -45.3195, -35.3628, 25.9873, 0.81 ) }
    dend_61 { pt3dadd( -45.7397, -35.795, 26.2626, 0.66 ) }
    dend_61 { pt3dadd( -46.3762, -36.5715, 26.7811, 1.11 ) }
    dend_61 { pt3dadd( -46.9445, -37.379, 27.3455, 0.52 ) }
    dend_61 { pt3dadd( -47.5203, -38.3714, 28.1236, 0.88 ) }
    dend_61 { pt3dadd( -47.9442, -39.2669, 28.9074, 1.03 ) }
    dend_61 { pt3dadd( -48.1458, -39.7941, 29.4314, 1.11 ) }
    dend_61 { pt3dadd( -48.2261, -40.0418, 29.6906, 1.03 ) }
    dend_61 { pt3dadd( -48.3392, -40.4565, 30.095, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_61 { pt3dadd( -48.5625, -41.254, 30.8835, 0.66 ) }
    dend_61 { pt3dadd( -48.6376, -41.4825, 31.1016, 0.66 ) }
    dend_61 { pt3dadd( -48.8493, -42.0683, 31.6699, 0.52 ) }
    dend_61 { pt3dadd( -49.0337, -42.5612, 32.0844, 0.52 ) }
    dend_61 { pt3dadd( -49.2591, -43.1499, 32.5308, 0.59 ) }
    dend_61 { pt3dadd( -49.4939, -43.7306, 32.9146, 0.59 ) }
    dend_61 { pt3dadd( -49.7681, -44.3352, 33.2559, 0.74 ) }
    dend_61 { pt3dadd( -49.9828, -44.7298, 33.4902, 0.74 ) }
    dend_61 { pt3dadd( -50.2675, -45.1504, 33.7739, 0.52 ) }
    dend_61 { pt3dadd( -50.5224, -45.454, 34.0189, 0.52 ) }
    dend_61 { pt3dadd( -50.8764, -45.812, 34.358, 0.52 ) }
    dend_61 { pt3dadd( -51.2414, -46.1601, 34.7233, 0.44 ) }
    dend_61 { pt3dadd( -51.793, -46.6833, 35.3128, 0.44 ) }
    dend_61 { pt3dadd( -52.267, -47.1458, 35.8428, 0.81 ) }
    dend_61 { pt3dadd( -52.641, -47.5531, 36.2949, 0.96 ) }
    dend_61 { pt3dadd( -52.9679, -47.9843, 36.7359, 0.96 ) }
    dend_61 { pt3dadd( -53.326, -48.605, 37.2999, 0.88 ) }
    dend_61 { pt3dadd( -53.5024, -49.0183, 37.619, 0.59 ) }
    dend_61 { pt3dadd( -53.6579, -49.4608, 37.9206, 0.81 ) }
    dend_61 { pt3dadd( -53.8279, -49.9705, 38.2491, 0.81 ) }
    dend_61 { pt3dadd( -53.9754, -50.3858, 38.5145, 0.81 ) }
    dend_61 { pt3dadd( -54.1485, -50.8484, 38.8079, 0.44 ) }
    dend_61 { pt3dadd( -54.3041, -51.2876, 39.0412, 0.37 ) }
    dend_61 { pt3dadd( -54.5215, -51.9823, 39.3298, 0.37 ) }
    dend_61 { pt3dadd( -54.6677, -52.4975, 39.4706, 0.81 ) }
    dend_61 { pt3dadd( -54.8009, -52.9905, 39.5125, 1.03 ) }
    dend_61 { pt3dadd( -54.9082, -53.4009, 39.4912, 1.03 ) }
    dend_61 { pt3dadd( -55.2682, -54.6464, 39.3097, 0.52 ) }
    dend_61 { pt3dadd( -55.5063, -55.3845, 39.1459, 0.74 ) }
    dend_61 { pt3dadd( -55.6441, -55.7986, 39.0366, 0.74 ) }
    dend_61 { pt3dadd( -56.0085, -56.7537, 38.7609, 0.44 ) }
    dend_61 { pt3dadd( -56.2387, -57.2516, 38.6152, 0.44 ) }
    dend_61 { pt3dadd( -56.6447, -57.9639, 38.4335, 0.37 ) }
    dend_61 { pt3dadd( -56.9095, -58.3543, 38.3648, 0.37 ) }
    dend_61 { pt3dadd( -57.3734, -58.9986, 38.2944, 0.29 ) }
    dend_61 { pt3dadd( -57.79, -59.5918, 38.2602, 0.29 ) }
    dend_61 { pt3dadd( -58.179, -60.1894, 38.2552, 0.37 ) }
    dend_61 { pt3dadd( -58.6373, -60.9695, 38.2635, 0.59 ) }
    dend_61 { pt3dadd( -58.8641, -61.3688, 38.2783, 0.59 ) }
    dend_61 { pt3dadd( -59.1095, -61.7831, 38.3057, 0.81 ) }
    dend_61 { pt3dadd( -59.3342, -62.1391, 38.3372, 0.81 ) }
    dend_61 { pt3dadd( -59.6775, -62.6998, 38.4029, 0.66 ) }
    dend_61 { pt3dadd( -60.1051, -63.4149, 38.4921, 0.29 ) }
    dend_61 { pt3dadd( -60.6406, -64.3199, 38.5779, 0.29 ) }
    dend_61 { pt3dadd( -61.0285, -64.9484, 38.6336, 0.29 ) }
    dend_61 { pt3dadd( -61.2573, -65.2972, 38.6616, 0.44 ) }
    dend_61 { pt3dadd( -61.5496, -65.7102, 38.6901, 0.44 ) }
    dend_61 { pt3dadd( -61.806, -66.0537, 38.7074, 0.22 ) }
    dend_61 { pt3dadd( -62.2281, -66.6618, 38.7206, 0.22 ) }
    dend_61 { pt3dadd( -64.5066, -73.4674, 40.3391, 0.22 ) }
    dend_61 { pt3dadd( -66.3407, -80.5734, 41.0725, 0.22 ) }
    dend_61 { pt3dadd( -66.8952, -87.8563, 42.3301, 0.22 ) }
    dend_61 { pt3dadd( -67.0004, -95.0462, 44.1428, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 53/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -39.3417, -4.88721, 30.3634, 1.18 ) }
    dend_54 { pt3dadd( -40.6023, -5.34556, 30.3613, 1.18 ) }
    dend_54 { pt3dadd( -41.2909, -5.70195, 30.3437, 1.18 ) }
    dend_54 { pt3dadd( -42.0932, -6.20989, 30.3497, 1.03 ) }
    dend_54 { pt3dadd( -43.1857, -7.00223, 30.3992, 0.96 ) }
    dend_54 { pt3dadd( -43.8193, -7.55506, 30.4589, 1.11 ) }
    dend_54 { pt3dadd( -44.4181, -8.14863, 30.5454, 1.11 ) }
    dend_54 { pt3dadd( -45.0411, -8.95662, 30.6857, 1.11 ) }
    dend_54 { pt3dadd( -45.4938, -9.64789, 30.8438, 0.88 ) }
    dend_54 { pt3dadd( -45.8598, -10.2707, 31.0362, 0.88 ) }
    dend_54 { pt3dadd( -46.4137, -11.2095, 31.4309, 0.88 ) }
    dend_54 { pt3dadd( -46.7819, -11.762, 31.7, 1.25 ) }
    dend_54 { pt3dadd( -47.1763, -12.2612, 31.9753, 1.25 ) }
    dend_54 { pt3dadd( -47.7708, -12.8523, 32.3351, 1.55 ) }
    dend_54 { pt3dadd( -48.6353, -13.5373, 32.7525, 1.03 ) }
    dend_54 { pt3dadd( -49.2188, -13.9074, 32.9945, 0.96 ) }
    dend_54 { pt3dadd( -49.8886, -14.2446, 33.192, 1.11 ) }
    dend_54 { pt3dadd( -50.5761, -14.5549, 33.3653, 1.11 ) }
    dend_54 { pt3dadd( -51.5579, -14.9508, 33.5608, 1.11 ) }
    dend_54 { pt3dadd( -52.1818, -15.1677, 33.649, 1.33 ) }
    dend_54 { pt3dadd( -52.9, -15.3896, 33.6927, 1.55 ) }
    dend_54 { pt3dadd( -53.9905, -15.7503, 33.7195, 1.4 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 75/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -9.92919, -48.0866, 13.151, 0.52 ) }
    dend_51 { pt3dadd( -10.1694, -52.0303, 10.0733, 0.52 ) }
    dend_51 { pt3dadd( -10.1614, -52.8394, 9.57253, 0.52 ) }
    dend_51 { pt3dadd( -10.096, -53.9262, 9.04, 0.52 ) }
    dend_51 { pt3dadd( -9.97679, -55.0364, 8.5588, 0.52 ) }
    dend_51 { pt3dadd( -9.86606, -55.9569, 8.21043, 0.74 ) }
    dend_51 { pt3dadd( -9.73937, -56.9705, 7.83737, 0.74 ) }
    dend_51 { pt3dadd( -9.52701, -58.3403, 7.51526, 0.59 ) }
    dend_51 { pt3dadd( -9.33477, -59.4853, 7.22241, 0.59 ) }
    dend_51 { pt3dadd( -9.02847, -61.0596, 6.73542, 0.44 ) }
    dend_51 { pt3dadd( -8.78522, -62.3333, 6.22833, 0.44 ) }
    dend_51 { pt3dadd( -8.55228, -63.6673, 5.62658, 0.81 ) }
    dend_51 { pt3dadd( -8.32953, -65.0964, 4.97257, 0.88 ) }
    dend_51 { pt3dadd( -8.12285, -66.5275, 4.29215, 0.29 ) }
    dend_51 { pt3dadd( -7.91475, -68.0919, 3.563, 0.29 ) }
    dend_51 { pt3dadd( -7.64175, -70.3078, 2.60162, 0.44 ) }
    dend_51 { pt3dadd( -7.54078, -71.1292, 2.26932, 0.44 ) }
    dend_51 { pt3dadd( -7.34022, -72.8311, 1.69544, 0.29 ) }
    dend_51 { pt3dadd( -7.24281, -73.6761, 1.4841, 0.29 ) }
    dend_51 { pt3dadd( -7.07396, -75.0744, 1.24955, 0.74 ) }
    dend_51 { pt3dadd( -6.98367, -75.7607, 1.1973, 1.03 ) }
    dend_51 { pt3dadd( -6.84797, -76.5516, 1.16718, 1.03 ) }
    dend_51 { pt3dadd( -6.64766, -77.5681, 1.1195, 0.81 ) }
    dend_51 { pt3dadd( -6.09431, -80.0249, 0.998217, 0.29 ) }
    dend_51 { pt3dadd( -5.61105, -81.9116, 0.918357, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_51 { pt3dadd( -5.23552, -83.1805, 0.870551, 0.29 ) }
    dend_51 { pt3dadd( -4.53216, -85.3719, 0.794982, 0.29 ) }
    dend_51 { pt3dadd( -4.18627, -86.3459, 0.767245, 0.29 ) }
    dend_51 { pt3dadd( -3.79703, -87.2933, 0.743858, 0.81 ) }
    dend_51 { pt3dadd( -3.44045, -88.0007, 0.735853, 1.11 ) }
    dend_51 { pt3dadd( -2.74095, -89.132, 0.754629, 0.59 ) }
    dend_51 { pt3dadd( -2.18178, -89.8775, 0.787782, 1.11 ) }
    dend_51 { pt3dadd( -1.54616, -90.5995, 0.836876, 1.11 ) }
    dend_51 { pt3dadd( -0.52339, -91.6833, 0.896117, 0.52 ) }
    dend_51 { pt3dadd( 0.082725, -92.3154, 0.924007, 0.88 ) }
    dend_51 { pt3dadd( 0.855705, -93.0999, 0.957067, 0.96 ) }
    dend_51 { pt3dadd( 1.41818, -93.6577, 0.981877, 1.03 ) }
    dend_51 { pt3dadd( 2.24686, -94.4676, 0.997247, 0.96 ) }
    dend_51 { pt3dadd( 2.83492, -95.0469, 0.996207, 0.52 ) }
    dend_51 { pt3dadd( 3.75399, -95.9895, 0.985067, 0.29 ) }
    dend_51 { pt3dadd( 4.57185, -96.8493, 0.966077, 0.59 ) }
    dend_51 { pt3dadd( 5.14191, -97.4653, 0.950177, 0.59 ) }
    dend_51 { pt3dadd( 5.90289, -98.3038, 0.879767, 0.74 ) }
    dend_51 { pt3dadd( 6.25394, -98.701, 0.816288, 0.52 ) }
    dend_51 { pt3dadd( 6.72981, -99.2724, 0.691454, 0.52 ) }
    dend_51 { pt3dadd( 7.51533, -100.298, 0.432142, 0.96 ) }
    dend_51 { pt3dadd( 7.79316, -100.707, 0.33304, 1.11 ) }
    dend_51 { pt3dadd( 8.72421, -102.214, 0.0138067, 0.44 ) }
    dend_51 { pt3dadd( 9.62464, -103.742, -0.238176, 0.37 ) }
    dend_51 { pt3dadd( 10.0996, -104.58, -0.35576, 0.44 ) }
    dend_51 { pt3dadd( 10.4219, -105.156, -0.420646, 0.44 ) }
    dend_51 { pt3dadd( 11.1704, -106.501, -0.523801, 0.29 ) }
    dend_51 { pt3dadd( 11.6625, -107.338, -0.541119, 0.29 ) }
    dend_51 { pt3dadd( 12.3905, -108.531, -0.470337, 0.22 ) }
    dend_51 { pt3dadd( 13.0483, -109.569, -0.371408, 0.22 ) }
    dend_51 { pt3dadd( 13.4289, -110.18, -0.326942, 0.22 ) }
    dend_51 { pt3dadd( 13.7817, -110.778, -0.295998, 0.81 ) }
    dend_51 { pt3dadd( 14.2791, -111.693, -0.267496, 0.96 ) }
    dend_51 { pt3dadd( 14.7054, -112.575, -0.254069, 1.18 ) }
    dend_51 { pt3dadd( 14.8437, -112.908, -0.252618, 1.18 ) }
    dend_51 { pt3dadd( 15.4426, -114.472, -0.282746, 0.29 ) }
    dend_51 { pt3dadd( 15.695, -115.217, -0.312598, 0.29 ) }
    dend_51 { pt3dadd( 15.9405, -116.002, -0.349936, 0.52 ) }
    dend_51 { pt3dadd( 16.1785, -116.759, -0.37915, 0.52 ) }
    dend_51 { pt3dadd( 16.5311, -117.777, -0.415614, 0.66 ) }
    dend_51 { pt3dadd( 16.99, -118.958, -0.449937, 0.96 ) }
    dend_51 { pt3dadd( 17.3219, -119.674, -0.467233, 1.11 ) }
    dend_51 { pt3dadd( 17.7917, -120.581, -0.494284, 0.66 ) }
    dend_51 { pt3dadd( 18.5573, -121.989, -0.551522, 0.22 ) }
    dend_51 { pt3dadd( 19.0395, -122.848, -0.60052, 0.44 ) }
    dend_51 { pt3dadd( 19.3184, -123.333, -0.637113, 0.44 ) }
    dend_51 { pt3dadd( 20.0434, -124.581, -0.741577, 0.29 ) }
    dend_51 { pt3dadd( 20.4825, -125.338, -0.821719, 0.29 ) }
    dend_51 { pt3dadd( 20.9653, -126.223, -0.959741, 0.22 ) }
    dend_51 { pt3dadd( 21.3913, -127.01, -1.13687, 0.59 ) }
    dend_51 { pt3dadd( 21.6445, -127.478, -1.28272, 0.59 ) }
    dend_51 { pt3dadd( 22.0439, -128.105, -1.66367, 0.29 ) }
    dend_51 { pt3dadd( 22.3064, -128.457, -1.95073, 0.52 ) }
    dend_51 { pt3dadd( 22.9075, -129.181, -2.62552, 0.52 ) }
    dend_51 { pt3dadd( 23.4781, -129.817, -3.30095, 0.96 ) }
    dend_51 { pt3dadd( 24.1577, -130.546, -4.12534, 0.66 ) }
    dend_51 { pt3dadd( 26.1135, -132.518, -6.58722, 0.22 ) }
    dend_51 { pt3dadd( 26.9096, -133.27, -7.59467, 0.22 ) }
    dend_51 { pt3dadd( 27.2186, -133.557, -8.00724, 0.22 ) }
    dend_51 { pt3dadd( 28.1217, -134.357, -9.21813, 0.22 ) }
    dend_51 { pt3dadd( 28.8335, -134.966, -10.1537, 0.66 ) }
    dend_51 { pt3dadd( 29.4418, -135.484, -10.9064, 0.66 ) }
    dend_51 { pt3dadd( 30.16, -136.113, -11.7545, 0.15 ) }
    dend_51 { pt3dadd( 31.4843, -137.234, -13.2609, 0.74 ) }
    dend_51 { pt3dadd( 31.9157, -137.584, -13.7101, 0.74 ) }
    dend_51 { pt3dadd( 33.865, -139.065, -15.2921, 0.22 ) }
    dend_51 { pt3dadd( 34.8842, -139.822, -15.8892, 0.22 ) }
    dend_51 { pt3dadd( 35.5251, -140.315, -16.1472, 0.22 ) }
    dend_51 { pt3dadd( 36.4288, -140.991, -16.4214, 0.81 ) }
    dend_51 { pt3dadd( 36.8143, -141.281, -16.5025, 0.81 ) }
    dend_51 { pt3dadd( 39.2764, -143.187, -16.916, 0.22 ) }
    dend_51 { pt3dadd( 41.6151, -144.975, -17.197, 0.22 ) }
    dend_51 { pt3dadd( 43.1122, -146.099, -17.3754, 0.22 ) }
    dend_51 { pt3dadd( 44.4904, -147.157, -17.5353, 0.59 ) }
    dend_51 { pt3dadd( 45.3573, -147.874, -17.6317, 0.59 ) }
    dend_51 { pt3dadd( 45.9202, -148.385, -17.7001, 0.37 ) }
    dend_51 { pt3dadd( 46.657, -149.118, -17.795, 1.25 ) }
    dend_51 { pt3dadd( 47.335, -149.832, -17.8771, 1.77 ) }
    dend_51 { pt3dadd( 47.9725, -150.552, -17.9273, 1.77 ) }
    dend_51 { pt3dadd( 49.5532, -152.541, -17.9751, 0.29 ) }
    dend_51 { pt3dadd( 50.6905, -154.113, -18.0059, 0.29 ) }
    dend_51 { pt3dadd( 51.148, -154.801, -18.012, 0.74 ) }
    dend_51 { pt3dadd( 51.5243, -155.411, -18.0101, 0.66 ) }
    dend_51 { pt3dadd( 52.4647, -157.006, -17.9994, 0.29 ) }
    dend_51 { pt3dadd( 52.9753, -157.905, -17.9997, 0.29 ) }
    dend_51 { pt3dadd( 53.7305, -159.231, -18.019, 0.29 ) }
    dend_51 { pt3dadd( 54.3769, -160.321, -18.0311, 0.22 ) }
    dend_51 { pt3dadd( 54.6495, -160.759, -18.0389, 0.66 ) }
    dend_51 { pt3dadd( 55.0327, -161.296, -18.0473, 0.88 ) }
    dend_51 { pt3dadd( 55.5256, -161.886, -18.0561, 0.96 ) }
    dend_51 { pt3dadd( 56.5923, -163.043, -18.0425, 0.22 ) }
    dend_51 { pt3dadd( 57.2672, -163.755, -18.0329, 0.29 ) }
    dend_51 { pt3dadd( 58.2843, -164.86, -18.0127, 0.29 ) }
    dend_51 { pt3dadd( 59.6604, -166.389, -17.9696, 0.29 ) }
    dend_51 { pt3dadd( 60.4244, -167.261, -17.9493, 0.66 ) }
    dend_51 { pt3dadd( 61.1383, -168.114, -17.9392, 1.11 ) }
    dend_51 { pt3dadd( 61.7864, -168.943, -17.9357, 1.47 ) }
    dend_51 { pt3dadd( 62.3608, -169.727, -17.9437, 1.47 ) }
    dend_51 { pt3dadd( 62.9996, -170.647, -17.9589, 1.03 ) }
    dend_51 { pt3dadd( 63.6196, -171.609, -17.9904, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_51 { pt3dadd( 64.8963, -173.604, -18.1045, 0.37 ) }
    dend_51 { pt3dadd( 65.7181, -174.862, -18.1512, 0.29 ) }
    dend_51 { pt3dadd( 66.3855, -175.843, -18.1549, 0.44 ) }
    dend_51 { pt3dadd( 67.2299, -177.041, -18.1267, 0.44 ) }
    dend_51 { pt3dadd( 68.2121, -178.396, -18.0479, 1.33 ) }
    dend_51 { pt3dadd( 68.8307, -179.197, -17.9923, 1.92 ) }
    dend_51 { pt3dadd( 70.0005, -180.597, -17.88, 2.28 ) }
    dend_51 { pt3dadd( 70.6679, -181.314, -17.8189, 2.28 ) }
    dend_51 { pt3dadd( 71.5108, -182.121, -17.7568, 1.77 ) }
    dend_51 { pt3dadd( 72.6034, -183.084, -17.6557, 0.52 ) }
    dend_51 { pt3dadd( 74.0556, -184.317, -17.3697, 0.37 ) }
    dend_51 { pt3dadd( 75.0973, -185.191, -17.1081, 0.59 ) }
    dend_51 { pt3dadd( 75.9525, -185.91, -16.8817, 0.74 ) }
    dend_51 { pt3dadd( 77.086, -186.861, -16.5337, 1.03 ) }
    dend_51 { pt3dadd( 78.1557, -187.764, -16.1608, 0.44 ) }
    dend_51 { pt3dadd( 81.0585, -190.199, -15.0219, 0.22 ) }
    dend_51 { pt3dadd( 82.653, -191.561, -14.2962, 0.22 ) }
    dend_51 { pt3dadd( 83.1955, -192.04, -14.0329, 0.44 ) }
    dend_51 { pt3dadd( 83.9189, -192.714, -13.6597, 0.22 ) }
    dend_51 { pt3dadd( 84.1942, -192.982, -13.5104, 0.29 ) }
    dend_51 { pt3dadd( 84.6184, -193.381, -13.3202, 0.22 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 21/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -9.92919, -48.0866, 13.151, 0.81 ) }
    dend_48 { pt3dadd( -9.42395, -49.6383, 14.2484, 0.81 ) }
    dend_48 { pt3dadd( -9.35751, -50.1703, 15.339, 0.81 ) }
    dend_48 { pt3dadd( -9.33417, -50.4911, 16.4293, 0.81 ) }
    dend_48 { pt3dadd( -9.3321, -50.6457, 17.5882, 1.18 ) }
    dend_48 { pt3dadd( -9.32362, -50.6975, 18.8035, 0.81 ) }
    dend_48 { pt3dadd( -9.19792, -50.6662, 22.2918, 0.66 ) }
    dend_48 { pt3dadd( -9.08775, -50.3049, 25.8661, 0.44 ) }
    dend_48 { pt3dadd( -9.03936, -50.1386, 27.0518, 0.44 ) }
    dend_48 { pt3dadd( -8.92595, -49.8879, 28.958, 0.81 ) }
    dend_48 { pt3dadd( -8.83581, -49.7623, 29.9307, 0.81 ) }
    dend_48 { pt3dadd( -8.618, -49.5821, 31.3038, 0.59 ) }
    dend_48 { pt3dadd( -8.4422, -49.4922, 32.0542, 0.52 ) }
    dend_48 { pt3dadd( -8.18544, -49.4133, 32.9056, 0.74 ) }
    dend_48 { pt3dadd( -7.27746, -49.2714, 35.595, 0.44 ) }
    dend_48 { pt3dadd( -6.74813, -49.2625, 36.9572, 0.37 ) }
    dend_48 { pt3dadd( -5.62881, -49.2839, 39.547, 0.96 ) }
    dend_48 { pt3dadd( -4.68822, -49.268, 41.6716, 1.18 ) }
    dend_48 { pt3dadd( -3.8699, -49.1599, 43.5385, 0.59 ) }
    dend_48 { pt3dadd( -3.33393, -49.077, 44.7645, 0.59 ) }
    dend_48 { pt3dadd( -2.81629, -49.0376, 45.9324, 0.59 ) }
    dend_48 { pt3dadd( -2.38219, -49.1235, 47.0008, 0.44 ) }
    dend_48 { pt3dadd( -1.08673, -49.9889, 50.5262, 0.44 ) }
    dend_48 { pt3dadd( -0.468063, -50.8905, 52.617, 0.44 ) }
    dend_48 { pt3dadd( -0.246275, -51.4265, 53.5712, 0.37 ) }
    dend_48 { pt3dadd( -0.011472, -52.1175, 54.6707, 0.37 ) }
    dend_48 { pt3dadd( 0.211656, -52.7702, 55.5562, 0.52 ) }
    dend_48 { pt3dadd( 0.641667, -53.8246, 56.635, 0.52 ) }
    dend_48 { pt3dadd( 1.1584, -54.8409, 57.4136, 0.44 ) }
    dend_48 { pt3dadd( 2.12483, -56.3406, 58.663, 0.37 ) }
    dend_48 { pt3dadd( 2.49444, -56.7509, 59.1307, 0.37 ) }
    dend_48 { pt3dadd( 3.13047, -57.2939, 60.0157, 0.59 ) }
    dend_48 { pt3dadd( 3.60158, -57.6374, 60.7712, 0.96 ) }
    dend_48 { pt3dadd( 4.35729, -58.1583, 62.2765, 0.88 ) }
    dend_48 { pt3dadd( 4.70614, -58.5076, 63.2698, 0.22 ) }
    dend_48 { pt3dadd( 4.79115, -58.7716, 63.8121, 0.22 ) }
    dend_48 { pt3dadd( 4.841, -59.6601, 65.1254, 0.22 ) }
    dend_48 { pt3dadd( 4.81241, -60.2147, 65.6621, 0.59 ) }
    dend_48 { pt3dadd( 4.75067, -60.8251, 66.134, 0.59 ) }
    dend_48 { pt3dadd( 4.67106, -61.7886, 66.6424, 0.44 ) }
    dend_48 { pt3dadd( 4.64848, -62.5242, 66.9421, 0.22 ) }
    dend_48 { pt3dadd( 4.66813, -63.4528, 67.2497, 0.22 ) }
    dend_48 { pt3dadd( 4.73596, -64.5012, 67.468, 0.22 ) }
    dend_48 { pt3dadd( 6.38616, -65.8193, 80.1286, 0.22 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 65/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 3.6883, -29.56, -25.0639, 0.52 ) }
    dend_42 { pt3dadd( 3.92625, -30.1412, -25.1176, 0.52 ) }
    dend_42 { pt3dadd( 4.04273, -30.4089, -25.1381, 0.74 ) }
    dend_42 { pt3dadd( 4.24841, -30.8398, -25.1664, 0.74 ) }
    dend_42 { pt3dadd( 4.44475, -31.2245, -25.1885, 0.66 ) }
    dend_42 { pt3dadd( 4.55529, -31.4304, -25.1988, 0.88 ) }
    dend_42 { pt3dadd( 4.64456, -31.5892, -25.2058, 0.88 ) }
    dend_42 { pt3dadd( 4.81066, -31.8533, -25.207, 0.37 ) }
    dend_42 { pt3dadd( 4.97344, -32.0877, -25.2084, 0.74 ) }
    dend_42 { pt3dadd( 5.12106, -32.2802, -25.21, 0.74 ) }
    dend_42 { pt3dadd( 5.34546, -32.5492, -25.213, 1.18 ) }
    dend_42 { pt3dadd( 5.53229, -32.76, -25.2134, 1.18 ) }
    dend_42 { pt3dadd( 5.72398, -32.9668, -25.2124, 1.03 ) }
    dend_42 { pt3dadd( 5.91877, -33.1723, -25.2045, 0.96 ) }
    dend_42 { pt3dadd( 6.08461, -33.3427, -25.1918, 1.11 ) }
    dend_42 { pt3dadd( 6.25548, -33.515, -25.1738, 1.03 ) }
    dend_42 { pt3dadd( 6.47813, -33.7405, -25.1404, 0.96 ) }
    dend_42 { pt3dadd( 6.67113, -33.9439, -25.1034, 0.88 ) }
    dend_42 { pt3dadd( 6.8785, -34.1677, -25.0589, 0.74 ) }
    dend_42 { pt3dadd( 7.01636, -34.3095, -25.0293, 0.59 ) }
    dend_42 { pt3dadd( 7.22482, -34.5083, -24.9848, 0.74 ) }
    dend_42 { pt3dadd( 7.39057, -34.6522, -24.9607, 0.74 ) }
    dend_42 { pt3dadd( 7.61716, -34.8238, -24.9462, 0.66 ) }
    dend_42 { pt3dadd( 7.90394, -35.0062, -24.9479, 1.11 ) }
    dend_42 { pt3dadd( 8.18092, -35.1555, -24.9672, 0.88 ) }
    dend_42 { pt3dadd( 8.38546, -35.2492, -24.9872, 0.88 ) }
    dend_42 { pt3dadd( 8.70627, -35.3767, -25.0368, 0.74 ) }
    dend_42 { pt3dadd( 8.96374, -35.4652, -25.0873, 0.74 ) }
    dend_42 { pt3dadd( 9.23059, -35.5597, -25.1531, 0.96 ) }
    dend_42 { pt3dadd( 9.41895, -35.6386, -25.2079, 0.81 ) }
    dend_42 { pt3dadd( 9.7305, -35.8041, -25.3154, 0.66 ) }
    dend_42 { pt3dadd( 10.0293, -36.0002, -25.4274, 0.37 ) }
    dend_42 { pt3dadd( 10.227, -36.1541, -25.5007, 0.37 ) }
    dend_42 { pt3dadd( 10.476, -36.3774, -25.6149, 0.59 ) }
    dend_42 { pt3dadd( 10.607, -36.5089, -25.6839, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_42 { pt3dadd( 10.7609, -36.6784, -25.7715, 0.88 ) }
    dend_42 { pt3dadd( 10.985, -36.936, -25.8998, 0.81 ) }
    dend_42 { pt3dadd( 11.1782, -37.1447, -25.9922, 1.11 ) }
    dend_42 { pt3dadd( 11.3922, -37.3514, -26.078, 1.33 ) }
    dend_42 { pt3dadd( 11.5013, -37.4375, -26.1105, 1.25 ) }
    dend_42 { pt3dadd( 11.6173, -37.5174, -26.139, 1.03 ) }
    dend_42 { pt3dadd( 11.7831, -37.6231, -26.1706, 0.66 ) }
    dend_42 { pt3dadd( 12.0634, -37.7894, -26.2132, 0.29 ) }
    dend_42 { pt3dadd( 12.2853, -37.9153, -26.2338, 0.29 ) }
    dend_42 { pt3dadd( 12.4662, -38.014, -26.2411, 0.88 ) }
    dend_42 { pt3dadd( 12.6201, -38.0946, -26.2489, 1.18 ) }
    dend_42 { pt3dadd( 12.7803, -38.1751, -26.2602, 1.18 ) }
    dend_42 { pt3dadd( 12.9699, -38.2685, -26.2781, 0.88 ) }
    dend_42 { pt3dadd( 13.2161, -38.3814, -26.306, 0.74 ) }
    dend_42 { pt3dadd( 13.384, -38.4503, -26.3262, 0.88 ) }
    dend_42 { pt3dadd( 13.5535, -38.5142, -26.3467, 0.88 ) }
    dend_42 { pt3dadd( 13.7535, -38.5871, -26.3701, 0.74 ) }
    dend_42 { pt3dadd( 14.0258, -38.6912, -26.4086, 0.44 ) }
    dend_42 { pt3dadd( 14.1719, -38.7508, -26.4312, 0.66 ) }
    dend_42 { pt3dadd( 14.3646, -38.8326, -26.4612, 1.11 ) }
    dend_42 { pt3dadd( 14.4689, -38.8781, -26.4751, 1.25 ) }
    dend_42 { pt3dadd( 14.6071, -38.9381, -26.4899, 1.25 ) }
    dend_42 { pt3dadd( 14.975, -39.1, -26.5279, 0.81 ) }
    dend_42 { pt3dadd( 15.2339, -39.2159, -26.5554, 1.47 ) }
    dend_42 { pt3dadd( 15.4764, -39.3248, -26.582, 1.77 ) }
    dend_42 { pt3dadd( 15.6514, -39.4016, -26.6013, 1.92 ) }
    dend_42 { pt3dadd( 15.742, -39.4389, -26.6106, 1.92 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 3.6883, -29.56, -25.0639, 0.88 ) }
    dend_39 { pt3dadd( 2.83932, -31.1909, -27.1427, 0.88 ) }
    dend_39 { pt3dadd( 2.51603, -31.9979, -28.0185, 0.96 ) }
    dend_39 { pt3dadd( 2.19193, -32.9997, -29.0058, 0.74 ) }
    dend_39 { pt3dadd( 1.85003, -34.2836, -30.1902, 0.88 ) }
    dend_39 { pt3dadd( 1.67058, -35.0788, -30.8983, 1.11 ) }
    dend_39 { pt3dadd( 1.45125, -36.1762, -31.8438, 1.25 ) }
    dend_39 { pt3dadd( 1.27576, -37.5035, -32.8395, 1.18 ) }
    dend_39 { pt3dadd( 1.20715, -38.5591, -33.5961, 1.11 ) }
    dend_39 { pt3dadd( 1.19048, -39.3076, -34.0947, 1.55 ) }
    dend_39 { pt3dadd( 1.18571, -39.9959, -34.5129, 1.84 ) }
    dend_39 { pt3dadd( 1.20052, -40.4086, -34.7706, 1.99 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 39/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 4.54623, -37.3362, -21.8298, 0.59 ) }
    dend_37 { pt3dadd( 3.3222, -37.9307, -23.3913, 0.59 ) }
    dend_37 { pt3dadd( 2.92148, -38.0626, -23.8481, 0.66 ) }
    dend_37 { pt3dadd( 2.45405, -38.1655, -24.359, 0.81 ) }
    dend_37 { pt3dadd( 2.08941, -38.1969, -24.7836, 0.66 ) }
    dend_37 { pt3dadd( 1.70646, -38.1999, -25.281, 0.66 ) }
    dend_37 { pt3dadd( 1.36287, -38.1833, -25.788, 0.52 ) }
    dend_37 { pt3dadd( 1.06134, -38.1006, -26.3358, 0.52 ) }
    dend_37 { pt3dadd( 0.916929, -38.0492, -26.6645, 0.52 ) }
    dend_37 { pt3dadd( 0.496457, -37.9255, -27.6738, 1.11 ) }
    dend_37 { pt3dadd( 0.18227, -37.8761, -28.4544, 1.33 ) }
    dend_37 { pt3dadd( -0.0860155, -37.8787, -29.1546, 1.47 ) }
    dend_37 { pt3dadd( -0.682086, -37.9746, -30.7352, 1.03 ) }
    dend_37 { pt3dadd( -0.949359, -38.0572, -31.4229, 1.11 ) }
    dend_37 { pt3dadd( -1.37805, -38.2206, -32.4437, 0.44 ) }
    dend_37 { pt3dadd( -1.77408, -38.3891, -33.2687, 1.4 ) }
    dend_37 { pt3dadd( -2.22609, -38.5809, -34.1061, 1.69 ) }
    dend_37 { pt3dadd( -2.51571, -38.7047, -34.5688, 2.14 ) }
    dend_37 { pt3dadd( -2.9461, -38.8891, -35.1732, 2.14 ) }
    dend_37 { pt3dadd( -3.28775, -39.0324, -35.6454, 1.69 ) }
    dend_37 { pt3dadd( -3.74495, -39.2028, -36.2869, 0.59 ) }
    dend_37 { pt3dadd( -4.05833, -39.3001, -36.7002, 0.29 ) }
    dend_37 { pt3dadd( -4.51359, -39.4298, -37.3387, 0.29 ) }
    dend_37 { pt3dadd( -4.74367, -39.5121, -37.6965, 0.74 ) }
    dend_37 { pt3dadd( -5.09168, -39.6731, -38.3202, 0.74 ) }
    dend_37 { pt3dadd( -5.29565, -39.8276, -38.8039, 0.81 ) }
    dend_37 { pt3dadd( -5.47884, -40.0312, -39.3645, 0.81 ) }
    dend_37 { pt3dadd( -5.81729, -40.4927, -40.5043, 0.44 ) }
    dend_37 { pt3dadd( -5.99994, -40.7794, -41.151, 1.33 ) }
    dend_37 { pt3dadd( -6.13033, -40.9857, -41.5774, 1.33 ) }
    dend_37 { pt3dadd( -6.54552, -41.5972, -42.7386, 0.29 ) }
    dend_37 { pt3dadd( -6.76866, -41.8942, -43.293, 0.29 ) }
    dend_37 { pt3dadd( -6.97174, -42.1343, -43.7437, 0.88 ) }
    dend_37 { pt3dadd( -7.09623, -42.2649, -44.0089, 1.11 ) }
    dend_37 { pt3dadd( -7.23696, -42.401, -44.3236, 1.11 ) }
    dend_37 { pt3dadd( -7.41021, -42.5669, -44.7177, 0.81 ) }
    dend_37 { pt3dadd( -7.90475, -43.0887, -46.0152, 0.29 ) }
    dend_37 { pt3dadd( -8.12972, -43.4364, -46.8592, 0.22 ) }
    dend_37 { pt3dadd( -8.30566, -43.9011, -47.9788, 0.22 ) }
    dend_37 { pt3dadd( -8.33157, -44.0248, -48.2691, 1.18 ) }
    dend_37 { pt3dadd( -8.34992, -44.244, -48.7599, 1.4 ) }
    dend_37 { pt3dadd( -8.32362, -44.7164, -49.7798, 1.03 ) }
    dend_37 { pt3dadd( -8.17574, -45.4969, -51.3835, 0.29 ) }
    dend_37 { pt3dadd( -7.94619, -46.2494, -52.9258, 0.52 ) }
    dend_37 { pt3dadd( -7.75574, -46.7713, -53.9427, 0.81 ) }
    dend_37 { pt3dadd( -7.69069, -46.9423, -54.2553, 0.81 ) }
    dend_37 { pt3dadd( -7.4556, -47.5622, -55.2961, 0.59 ) }
    dend_37 { pt3dadd( -7.29421, -47.9872, -55.9246, 0.29 ) }
    dend_37 { pt3dadd( -7.05748, -48.5876, -56.6937, 0.52 ) }
    dend_37 { pt3dadd( -6.85455, -49.0699, -57.2281, 0.52 ) }
    dend_37 { pt3dadd( -6.60495, -49.597, -57.769, 0.37 ) }
    dend_37 { pt3dadd( -6.16538, -50.4492, -58.59, 1.03 ) }
    dend_37 { pt3dadd( -5.9492, -50.8511, -58.9423, 0.96 ) }
    dend_37 { pt3dadd( -5.72753, -51.2566, -59.2767, 0.88 ) }
    dend_37 { pt3dadd( -5.42394, -51.7931, -59.6742, 0.88 ) }
    dend_37 { pt3dadd( -5.09958, -52.3416, -60.0553, 0.37 ) }
    dend_37 { pt3dadd( -4.86063, -52.75, -60.2962, 0.29 ) }
    dend_37 { pt3dadd( -4.65176, -53.1224, -60.4788, 0.22 ) }
    dend_37 { pt3dadd( -4.46909, -53.483, -60.6434, 0.22 ) }
    dend_37 { pt3dadd( -4.26237, -53.9204, -60.8414, 0.44 ) }
    dend_37 { pt3dadd( -4.07057, -54.3405, -61.0083, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_37 { pt3dadd( -3.79854, -54.8735, -61.2428, 0.37 ) }
    dend_37 { pt3dadd( -3.60513, -55.2298, -61.435, 0.37 ) }
    dend_37 { pt3dadd( -3.24899, -55.8224, -61.7752, 0.88 ) }
    dend_37 { pt3dadd( -2.91357, -56.3383, -62.0988, 1.33 ) }
    dend_37 { pt3dadd( -2.61422, -56.7897, -62.3935, 1.55 ) }
    dend_37 { pt3dadd( -2.09285, -57.5884, -62.9312, 0.74 ) }
    dend_37 { pt3dadd( -1.72497, -58.1761, -63.3558, 0.52 ) }
    dend_37 { pt3dadd( -1.40975, -58.7015, -63.7634, 0.37 ) }
    dend_37 { pt3dadd( -1.19175, -59.0275, -64.0713, 0.88 ) }
    dend_37 { pt3dadd( -0.956879, -59.3487, -64.3908, 1.03 ) }
    dend_37 { pt3dadd( -0.78298, -59.5852, -64.6354, 0.74 ) }
    dend_37 { pt3dadd( -0.308218, -60.2345, -65.2657, 1.03 ) }
    dend_37 { pt3dadd( 0.184786, -60.8815, -65.8903, 1.18 ) }
    dend_37 { pt3dadd( 0.811163, -61.6638, -66.6846, 1.47 ) }
    dend_37 { pt3dadd( 1.28424, -62.2625, -67.3406, 0.59 ) }
    dend_37 { pt3dadd( 1.62468, -62.7199, -67.8659, 0.29 ) }
    dend_37 { pt3dadd( 2.13111, -63.4674, -68.7177, 0.29 ) }
    dend_37 { pt3dadd( 2.37582, -63.8803, -69.158, 0.74 ) }
    dend_37 { pt3dadd( 2.69028, -64.4796, -69.7579, 0.88 ) }
    dend_37 { pt3dadd( 3.24501, -65.6757, -70.8354, 0.66 ) }
    dend_37 { pt3dadd( 3.51172, -66.243, -71.3235, 0.59 ) }
    dend_37 { pt3dadd( 3.75326, -66.7471, -71.7165, 0.81 ) }
    dend_37 { pt3dadd( 3.96822, -67.2199, -72.0369, 1.03 ) }
    dend_37 { pt3dadd( 4.21456, -67.7804, -72.3535, 0.59 ) }
    dend_37 { pt3dadd( 4.55507, -68.5582, -72.6965, 0.44 ) }
    dend_37 { pt3dadd( 4.8897, -69.2678, -72.9419, 0.29 ) }
    dend_37 { pt3dadd( 5.18678, -69.9143, -73.1859, 0.96 ) }
    dend_37 { pt3dadd( 5.33264, -70.2896, -73.3711, 1.18 ) }
    dend_37 { pt3dadd( 5.43796, -70.6568, -73.5903, 1.18 ) }
    dend_37 { pt3dadd( 5.48064, -70.8925, -73.7476, 1.18 ) }
    dend_37 { pt3dadd( 5.5545, -71.6377, -74.2859, 0.88 ) }
    dend_37 { pt3dadd( 5.5724, -72.4118, -74.8544, 0.29 ) }
    dend_37 { pt3dadd( 5.56071, -73.4244, -75.6357, 0.81 ) }
    dend_37 { pt3dadd( 5.52986, -74.0135, -76.1022, 1.03 ) }
    dend_37 { pt3dadd( 5.48914, -74.4688, -76.4532, 1.03 ) }
    dend_37 { pt3dadd( 5.44404, -74.8272, -76.724, 1.03 ) }
    dend_37 { pt3dadd( 5.37134, -75.2668, -77.0518, 0.74 ) }
    dend_37 { pt3dadd( 5.19332, -76.1298, -77.6784, 0.37 ) }
    dend_37 { pt3dadd( 4.9671, -77.0516, -78.3271, 0.29 ) }
    dend_37 { pt3dadd( 4.67561, -78.0721, -79.0262, 0.29 ) }
    dend_37 { pt3dadd( 4.56716, -78.4187, -79.253, 1.03 ) }
    dend_37 { pt3dadd( 4.40472, -78.9069, -79.554, 1.03 ) }
    dend_37 { pt3dadd( 4.30482, -79.1968, -79.7195, 1.18 ) }
    dend_37 { pt3dadd( 4.02351, -79.9845, -80.1277, 0.66 ) }
    dend_37 { pt3dadd( 3.71411, -80.8342, -80.558, 0.37 ) }
    dend_37 { pt3dadd( 3.46937, -81.486, -80.9026, 0.37 ) }
    dend_37 { pt3dadd( 3.17381, -82.2513, -81.3528, 0.81 ) }
    dend_37 { pt3dadd( 2.95087, -82.8104, -81.6989, 0.81 ) }
    dend_37 { pt3dadd( 2.65298, -83.5372, -82.163, 0.66 ) }
    dend_37 { pt3dadd( 2.38299, -84.1687, -82.581, 0.37 ) }
    dend_37 { pt3dadd( 1.94203, -85.1668, -83.2752, 0.22 ) }
    dend_37 { pt3dadd( 1.54112, -86.0202, -83.863, 0.74 ) }
    dend_37 { pt3dadd( 1.17892, -86.7325, -84.3503, 0.29 ) }
    dend_37 { pt3dadd( 0.855628, -87.3465, -84.7729, 0.29 ) }
    dend_37 { pt3dadd( 0.402799, -88.1758, -85.3413, 0.44 ) }
    dend_37 { pt3dadd( 0.154679, -88.6278, -85.6394, 0.44 ) }
    dend_37 { pt3dadd( -0.208876, -89.2855, -86.0121, 0.22 ) }
    dend_37 { pt3dadd( -0.428171, -89.6795, -86.2021, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 58/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 4.54623, -37.3362, -21.8298, 0.52 ) }
    dend_34 { pt3dadd( 5.78643, -38.7577, -22.1001, 0.52 ) }
    dend_34 { pt3dadd( 6.33367, -39.5214, -22.2489, 0.52 ) }
    dend_34 { pt3dadd( 6.90642, -40.5108, -22.4348, 0.96 ) }
    dend_34 { pt3dadd( 7.51158, -41.8501, -22.6712, 0.96 ) }
    dend_34 { pt3dadd( 7.84804, -42.7435, -22.8198, 0.88 ) }
    dend_34 { pt3dadd( 8.28686, -44.1413, -23.0395, 0.66 ) }
    dend_34 { pt3dadd( 8.61736, -45.8269, -23.3235, 1.03 ) }
    dend_34 { pt3dadd( 8.77029, -47.1291, -23.5773, 1.11 ) }
    dend_34 { pt3dadd( 8.87074, -48.8961, -23.9475, 0.37 ) }
    dend_34 { pt3dadd( 8.88581, -49.4873, -24.0862, 0.29 ) }
    dend_34 { pt3dadd( 8.89526, -50.4166, -24.3462, 0.66 ) }
    dend_34 { pt3dadd( 8.88915, -51.3151, -24.6296, 0.88 ) }
    dend_34 { pt3dadd( 8.86663, -53.0675, -25.2254, 0.52 ) }
    dend_34 { pt3dadd( 8.87623, -54.146, -25.6401, 0.37 ) }
    dend_34 { pt3dadd( 8.91209, -55.3006, -26.1198, 0.37 ) }
    dend_34 { pt3dadd( 8.99078, -56.508, -26.6101, 0.29 ) }
    dend_34 { pt3dadd( 9.07797, -57.3125, -26.9297, 0.29 ) }
    dend_34 { pt3dadd( 9.16455, -57.9155, -27.1496, 0.74 ) }
    dend_34 { pt3dadd( 9.38746, -59.0861, -27.5644, 0.88 ) }
    dend_34 { pt3dadd( 9.62756, -60.0165, -27.9392, 0.66 ) }
    dend_34 { pt3dadd( 9.89336, -60.9151, -28.3219, 0.59 ) }
    dend_34 { pt3dadd( 10.2784, -62.0679, -28.8051, 0.81 ) }
    dend_34 { pt3dadd( 10.5214, -62.7369, -29.1131, 0.81 ) }
    dend_34 { pt3dadd( 10.9531, -63.8437, -29.6706, 0.59 ) }
    dend_34 { pt3dadd( 11.4241, -64.9137, -30.2223, 0.37 ) }
    dend_34 { pt3dadd( 11.8636, -65.8126, -30.7024, 0.29 ) }
    dend_34 { pt3dadd( 12.1553, -66.3455, -30.999, 0.96 ) }
    dend_34 { pt3dadd( 12.9053, -67.5228, -31.6405, 1.18 ) }
    dend_34 { pt3dadd( 13.5671, -68.4487, -32.0629, 0.81 ) }
    dend_34 { pt3dadd( 14.5751, -69.7218, -32.5153, 0.59 ) }
    dend_34 { pt3dadd( 15.0333, -70.2732, -32.6592, 0.96 ) }
    dend_34 { pt3dadd( 15.6374, -70.9566, -32.7824, 0.96 ) }
    dend_34 { pt3dadd( 16.4146, -71.8723, -32.8709, 0.52 ) }
    dend_34 { pt3dadd( 17.4359, -73.2012, -32.8654, 0.37 ) }
    dend_34 { pt3dadd( 17.8476, -73.8046, -32.8443, 0.37 ) }
    dend_34 { pt3dadd( 18.5295, -74.9829, -32.8187, 0.74 ) }
    dend_34 { pt3dadd( 18.9298, -75.7802, -32.8062, 0.74 ) }
    dend_34 { pt3dadd( 19.4146, -76.8664, -32.7949, 1.18 ) }
    dend_34 { pt3dadd( 19.736, -77.6448, -32.8048, 1.47 ) }
    dend_34 { pt3dadd( 20.018, -78.3387, -32.8405, 1.47 ) }
    dend_34 { pt3dadd( 20.4806, -79.519, -32.8669, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_34 { pt3dadd( 20.8589, -80.565, -32.8728, 0.37 ) }
    dend_34 { pt3dadd( 21.0842, -81.2874, -32.8688, 0.37 ) }
    dend_34 { pt3dadd( 21.2564, -81.8982, -32.8452, 0.88 ) }
    dend_34 { pt3dadd( 21.4347, -82.64, -32.7942, 1.03 ) }
    dend_34 { pt3dadd( 21.5822, -83.3946, -32.6995, 0.74 ) }
    dend_34 { pt3dadd( 21.7299, -84.3162, -32.5316, 0.37 ) }
    dend_34 { pt3dadd( 21.8711, -85.367, -32.2799, 0.29 ) }
    dend_34 { pt3dadd( 21.9356, -86.1182, -32.0202, 0.29 ) }
    dend_34 { pt3dadd( 21.9435, -86.8114, -31.7235, 0.96 ) }
    dend_34 { pt3dadd( 21.9008, -87.6096, -31.3482, 1.25 ) }
    dend_34 { pt3dadd( 21.8507, -88.0401, -31.1161, 1.25 ) }
    dend_34 { pt3dadd( 21.7137, -88.8532, -30.6483, 0.66 ) }
    dend_34 { pt3dadd( 21.3802, -90.4598, -29.7242, 0.29 ) }
    dend_34 { pt3dadd( 21.1478, -91.4677, -29.1894, 0.29 ) }
    dend_34 { pt3dadd( 20.878, -92.6353, -28.6302, 1.55 ) }
    dend_34 { pt3dadd( 20.5929, -93.9896, -28.0707, 1.92 ) }
    dend_34 { pt3dadd( 20.4082, -95.0232, -27.6733, 1.77 ) }
    dend_34 { pt3dadd( 20.2657, -96.0355, -27.3172, 1.47 ) }
    dend_34 { pt3dadd( 20.1623, -97.296, -26.9315, 0.96 ) }
    dend_34 { pt3dadd( 20.138, -98.334, -26.6155, 0.59 ) }
    dend_34 { pt3dadd( 20.1544, -99.2757, -26.3396, 0.37 ) }
    dend_34 { pt3dadd( 20.2373, -100.772, -25.9501, 0.37 ) }
    dend_34 { pt3dadd( 20.2988, -101.479, -25.7586, 1.03 ) }
    dend_34 { pt3dadd( 20.3751, -102.137, -25.562, 1.4 ) }
    dend_34 { pt3dadd( 20.4716, -102.808, -25.3203, 1.55 ) }
    dend_34 { pt3dadd( 20.5513, -103.417, -25.0729, 1.69 ) }
    // Section: dend_29, id: dend_29, parent: dend_14 (entry count 26/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 6.98774, 16.2211, -17.9792, 1.92 ) }
    dend_29 { pt3dadd( 8.54412, 15.4725, -20.2661, 1.92 ) }
    dend_29 { pt3dadd( 9.41961, 15.1256, -21.3917, 0.74 ) }
    dend_29 { pt3dadd( 9.94898, 14.9531, -22.0368, 0.88 ) }
    dend_29 { pt3dadd( 10.6422, 14.7761, -22.8609, 0.44 ) }
    dend_29 { pt3dadd( 11.2404, 14.6658, -23.5363, 0.44 ) }
    dend_29 { pt3dadd( 11.9919, 14.5577, -24.341, 0.96 ) }
    dend_29 { pt3dadd( 12.6917, 14.4846, -24.8992, 1.18 ) }
    dend_29 { pt3dadd( 13.2819, 14.4445, -25.3416, 0.96 ) }
    dend_29 { pt3dadd( 13.9722, 14.3529, -25.8781, 0.44 ) }
    dend_29 { pt3dadd( 14.4883, 14.2002, -26.3273, 0.29 ) }
    dend_29 { pt3dadd( 14.7572, 14.0449, -26.5818, 0.52 ) }
    dend_29 { pt3dadd( 15.3828, 13.4837, -27.1529, 0.66 ) }
    dend_29 { pt3dadd( 15.9124, 12.8792, -27.5839, 0.96 ) }
    dend_29 { pt3dadd( 16.26, 12.4067, -27.8596, 1.33 ) }
    dend_29 { pt3dadd( 16.7385, 11.7504, -28.2235, 1.47 ) }
    dend_29 { pt3dadd( 17.4306, 10.8854, -28.7265, 1.03 ) }
    dend_29 { pt3dadd( 17.9385, 10.3692, -29.0557, 0.81 ) }
    dend_29 { pt3dadd( 18.5015, 9.93229, -29.3894, 0.52 ) }
    dend_29 { pt3dadd( 19.0494, 9.58259, -29.7083, 0.52 ) }
    dend_29 { pt3dadd( 19.9213, 9.06225, -30.202, 0.66 ) }
    dend_29 { pt3dadd( 20.5978, 8.65734, -30.5968, 0.66 ) }
    dend_29 { pt3dadd( 21.2524, 8.26964, -30.9955, 0.66 ) }
    dend_29 { pt3dadd( 22.244, 7.69461, -31.6032, 0.74 ) }
    dend_29 { pt3dadd( 23.1184, 7.19342, -32.1388, 0.74 ) }
    dend_29 { pt3dadd( 23.7051, 6.84922, -32.4867, 0.81 ) }
    dend_29 { pt3dadd( 24.5945, 6.29264, -33.0025, 0.52 ) }
    dend_29 { pt3dadd( 25.0964, 5.98382, -33.2781, 0.37 ) }
    dend_29 { pt3dadd( 25.8408, 5.57061, -33.6348, 1.18 ) }
    dend_29 { pt3dadd( 26.4559, 5.31086, -33.8572, 1.55 ) }
    dend_29 { pt3dadd( 27.0602, 5.13568, -34.0289, 1.77 ) }
    dend_29 { pt3dadd( 27.6776, 4.99425, -34.1834, 1.99 ) }
    dend_29 { pt3dadd( 28.2364, 4.8748, -34.3073, 1.99 ) }
    dend_29 { pt3dadd( 29.132, 4.65786, -34.506, 1.47 ) }
    dend_29 { pt3dadd( 30.3457, 4.29341, -34.7835, 0.52 ) }
    dend_29 { pt3dadd( 31.3506, 3.93209, -35.0121, 0.52 ) }
    dend_29 { pt3dadd( 32.1031, 3.59956, -35.2034, 0.96 ) }
    dend_29 { pt3dadd( 32.7102, 3.29979, -35.3697, 1.4 ) }
    dend_29 { pt3dadd( 33.2669, 3.00251, -35.5302, 1.77 ) }
    dend_29 { pt3dadd( 33.9061, 2.61803, -35.7287, 1.92 ) }
    dend_29 { pt3dadd( 34.614, 2.09625, -35.9736, 0.74 ) }
    dend_29 { pt3dadd( 35.4728, 1.34834, -36.2976, 0.44 ) }
    dend_29 { pt3dadd( 35.9183, 0.949654, -36.464, 0.44 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 69/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 6.98774, 16.2211, -17.9792, 0.66 ) }
    dend_15 { pt3dadd( 6.77472, 14.0188, -20.2314, 0.66 ) }
    dend_15 { pt3dadd( 6.57819, 11.987, -22.3092, 1.03 ) }
    dend_15 { pt3dadd( 6.45951, 10.7601, -23.5639, 1.18 ) }
    dend_15 { pt3dadd( 6.37759, 9.91321, -24.4301, 0.88 ) }
    dend_15 { pt3dadd( 6.21097, 8.19069, -26.1917, 1.69 ) }
    dend_15 { pt3dadd( 6.05306, 6.55813, -27.8612, 2.36 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 76/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.3496, 35.085, -13.4441, 0.44 ) }
    dend_3 { pt3dadd( 11.6026, 36.7746, -13.336, 0.44 ) }
    dend_3 { pt3dadd( 11.1818, 37.7691, -13.2837, 0.52 ) }
    dend_3 { pt3dadd( 10.8903, 38.5007, -13.2617, 0.66 ) }
    dend_3 { pt3dadd( 10.618, 39.1868, -13.2559, 0.74 ) }
    dend_3 { pt3dadd( 10.1675, 40.3288, -13.2879, 0.74 ) }
    dend_3 { pt3dadd( 9.73142, 41.3361, -13.3456, 0.52 ) }
    dend_3 { pt3dadd( 9.25756, 42.2907, -13.4442, 0.52 ) }
    dend_3 { pt3dadd( 8.68746, 43.2379, -13.6008, 1.11 ) }
    dend_3 { pt3dadd( 8.29714, 43.8526, -13.7306, 1.11 ) }
    dend_3 { pt3dadd( 7.57357, 44.8954, -13.9835, 0.59 ) }
    dend_3 { pt3dadd( 6.94966, 45.6861, -14.2141, 0.52 ) }
    dend_3 { pt3dadd( 6.18386, 46.5212, -14.5115, 0.52 ) }
    dend_3 { pt3dadd( 4.901, 47.6729, -14.9971, 1.84 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 90/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 12.3496, 35.085, -13.4441, 0.52 ) }
    dend_2 { pt3dadd( 12.9165, 36.6836, -13.1831, 0.52 ) }
    dend_2 { pt3dadd( 13.1749, 37.4366, -13.0918, 0.52 ) }
    dend_2 { pt3dadd( 13.4809, 38.3236, -13.0071, 0.52 ) }
    dend_2 { pt3dadd( 13.8017, 39.3038, -12.9342, 0.96 ) }
    dend_2 { pt3dadd( 14.0282, 40.0082, -12.8893, 0.96 ) }
    dend_2 { pt3dadd( 14.2545, 40.7384, -12.8503, 0.66 ) }
    dend_2 { pt3dadd( 14.56, 41.8895, -12.8462, 1.25 ) }
    dend_2 { pt3dadd( 14.8506, 42.9268, -12.8416, 1.25 ) }
    dend_2 { pt3dadd( 15.0793, 43.6712, -12.8367, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_2 { pt3dadd( 15.4365, 44.6962, -12.8184, 0.52 ) }
    dend_2 { pt3dadd( 15.7255, 45.4299, -12.7969, 0.52 ) }
    dend_2 { pt3dadd( 15.8631, 45.7405, -12.7794, 0.81 ) }
    dend_2 { pt3dadd( 16.1871, 46.3145, -12.7216, 0.88 ) }
    dend_2 { pt3dadd( 16.5704, 46.8361, -12.6398, 1.03 ) }
    dend_2 { pt3dadd( 17.2325, 47.5711, -12.4877, 0.66 ) }
    dend_2 { pt3dadd( 17.7659, 48.0935, -12.3629, 0.52 ) }
    dend_2 { pt3dadd( 18.5514, 48.7968, -12.2119, 0.37 ) }
    dend_2 { pt3dadd( 19.2094, 49.3523, -12.1036, 0.37 ) }
    dend_2 { pt3dadd( 19.9382, 49.9314, -11.9978, 0.52 ) }
    dend_2 { pt3dadd( 20.6617, 50.4675, -11.9038, 0.52 ) }
    dend_2 { pt3dadd( 21.5361, 51.0781, -11.8045, 0.52 ) }
    dend_2 { pt3dadd( 22.7, 51.8179, -11.6874, 0.74 ) }
    dend_2 { pt3dadd( 23.4011, 52.1814, -11.6291, 0.96 ) }
    dend_2 { pt3dadd( 23.8871, 52.3846, -11.588, 1.11 ) }
    dend_2 { pt3dadd( 24.4027, 52.497, -11.5328, 1.11 ) }
    dend_2 { pt3dadd( 24.7684, 52.509, -11.5015, 1.11 ) }
    dend_2 { pt3dadd( 25.4082, 52.464, -11.4534, 0.59 ) }
    dend_2 { pt3dadd( 26.5473, 52.3643, -11.3688, 0.37 ) }
    dend_2 { pt3dadd( 27.0839, 52.3419, -11.3388, 0.37 ) }
    dend_2 { pt3dadd( 27.9639, 52.3544, -11.2924, 0.74 ) }
    dend_2 { pt3dadd( 29.3325, 52.4519, -11.2156, 0.44 ) }
    dend_2 { pt3dadd( 29.9958, 52.5381, -11.1703, 0.59 ) }
    dend_2 { pt3dadd( 30.7156, 52.6777, -11.109, 0.37 ) }
    dend_2 { pt3dadd( 31.7295, 52.9308, -10.9953, 0.52 ) }
    dend_2 { pt3dadd( 32.5262, 53.1339, -10.8836, 0.52 ) }
    dend_2 { pt3dadd( 33.1032, 53.2708, -10.7799, 0.44 ) }
    dend_2 { pt3dadd( 33.8943, 53.419, -10.5931, 0.81 ) }
    dend_2 { pt3dadd( 34.5523, 53.5138, -10.4354, 0.81 ) }
    dend_2 { pt3dadd( 35.3491, 53.617, -10.2436, 1.03 ) }
    dend_2 { pt3dadd( 35.8496, 53.6964, -10.1263, 1.18 ) }
    dend_2 { pt3dadd( 36.2966, 53.7777, -10.0295, 1.18 ) }
    dend_2 { pt3dadd( 36.7312, 53.8508, -9.94529, 0.81 ) }
    dend_2 { pt3dadd( 37.2389, 53.9184, -9.85467, 0.29 ) }
    dend_2 { pt3dadd( 38.3865, 54.0401, -9.66206, 0.44 ) }
    dend_2 { pt3dadd( 39.29, 54.1187, -9.56137, 0.66 ) }
    dend_2 { pt3dadd( 39.9952, 54.1865, -9.51013, 0.66 ) }
    dend_2 { pt3dadd( 40.8461, 54.2663, -9.44946, 0.81 ) }
    dend_2 { pt3dadd( 41.6206, 54.3292, -9.37502, 0.96 ) }
    dend_2 { pt3dadd( 41.9134, 54.3506, -9.33874, 0.96 ) }
    dend_2 { pt3dadd( 43.1636, 54.4302, -9.1213, 0.37 ) }
    dend_2 { pt3dadd( 44.1179, 54.5055, -8.89755, 0.37 ) }
    dend_2 { pt3dadd( 45.0662, 54.6129, -8.60208, 0.37 ) }
    dend_2 { pt3dadd( 45.6326, 54.7019, -8.3822, 0.37 ) }
    dend_2 { pt3dadd( 46.5072, 54.8578, -7.98442, 0.96 ) }
    dend_2 { pt3dadd( 46.9712, 54.9372, -7.73315, 1.18 ) }
    dend_2 { pt3dadd( 47.3481, 55.0, -7.48724, 1.18 ) }
    dend_2 { pt3dadd( 47.7861, 55.0751, -7.20767, 1.03 ) }
    dend_2 { pt3dadd( 48.2431, 55.1619, -6.94488, 0.88 ) }
    dend_2 { pt3dadd( 48.7744, 55.2614, -6.67356, 1.33 ) }
    dend_2 { pt3dadd( 49.3821, 55.3729, -6.37893, 1.33 ) }
    dend_2 { pt3dadd( 50.1478, 55.5236, -5.99787, 0.88 ) }
    dend_2 { pt3dadd( 50.8216, 55.6619, -5.65613, 0.66 ) }
    dend_2 { pt3dadd( 51.5987, 55.8389, -5.2728, 0.74 ) }
    dend_2 { pt3dadd( 52.1973, 56.0053, -4.98107, 0.88 ) }
    dend_2 { pt3dadd( 52.5953, 56.1395, -4.79184, 0.88 ) }
    dend_2 { pt3dadd( 53.4758, 56.501, -4.37164, 0.88 ) }
    dend_2 { pt3dadd( 54.2127, 56.8647, -3.97936, 0.44 ) }
    dend_2 { pt3dadd( 55.0039, 57.3296, -3.51027, 0.44 ) }
    dend_2 { pt3dadd( 55.968, 58.0049, -2.88031, 0.52 ) }
    dend_2 { pt3dadd( 56.9067, 58.7598, -2.19481, 0.66 ) }
    dend_2 { pt3dadd( 57.6462, 59.4406, -1.58445, 0.96 ) }
    dend_2 { pt3dadd( 58.3662, 60.2067, -0.886516, 1.4 ) }
    dend_2 { pt3dadd( 58.7305, 60.6675, -0.453866, 1.69 ) }
    dend_2 { pt3dadd( 59.1446, 61.2598, 0.115574, 1.84 ) }
    dend_2 { pt3dadd( 59.5597, 61.9073, 0.750527, 1.55 ) }
    dend_2 { pt3dadd( 60.1949, 62.9202, 1.7902, 1.33 ) }
    dend_2 { pt3dadd( 60.7961, 63.7934, 2.69268, 1.11 ) }
    dend_2 { pt3dadd( 61.3249, 64.4791, 3.39039, 0.74 ) }
    dend_2 { pt3dadd( 61.8578, 65.1133, 4.01535, 0.81 ) }
    dend_2 { pt3dadd( 62.445, 65.7598, 4.61431, 0.59 ) }
    dend_2 { pt3dadd( 63.0345, 66.3745, 5.10982, 0.52 ) }
    dend_2 { pt3dadd( 63.6806, 67.0105, 5.52499, 0.44 ) }
    dend_2 { pt3dadd( 64.041, 67.3421, 5.66237, 0.44 ) }
    dend_2 { pt3dadd( 64.6583, 67.8644, 5.78712, 0.81 ) }
    dend_2 { pt3dadd( 64.905, 68.0703, 5.80467, 0.81 ) }
    dend_2 { pt3dadd( 65.2936, 68.3994, 5.80029, 0.52 ) }
    dend_2 { pt3dadd( 65.6584, 68.7218, 5.78774, 0.52 ) }
    dend_2 { pt3dadd( 66.6286, 69.6281, 5.79963, 0.52 ) }
    dend_2 { pt3dadd( 67.4196, 70.3819, 5.81988, 0.88 ) }
    dend_2 { pt3dadd( 67.7851, 70.7034, 5.83213, 0.88 ) }
    dend_2 { pt3dadd( 68.3766, 71.185, 5.86342, 0.59 ) }
    dend_2 { pt3dadd( 68.9354, 71.6107, 5.89455, 0.59 ) }
    dend_2 { pt3dadd( 69.8345, 72.284, 5.95244, 0.74 ) }
    dend_2 { pt3dadd( 70.6116, 72.8608, 6.01778, 0.74 ) }
    dend_2 { pt3dadd( 71.5714, 73.5621, 6.04527, 0.44 ) }
    dend_2 { pt3dadd( 72.2571, 74.0461, 6.04202, 0.44 ) }
    dend_2 { pt3dadd( 73.2784, 74.7155, 6.01488, 0.66 ) }
    dend_2 { pt3dadd( 73.7781, 75.0185, 5.99544, 0.74 ) }
    dend_2 { pt3dadd( 74.2874, 75.2945, 5.97011, 0.74 ) }
    dend_2 { pt3dadd( 75.5808, 75.9474, 5.91013, 0.44 ) }
    dend_2 { pt3dadd( 76.1636, 76.2453, 5.89127, 0.44 ) }
    dend_2 { pt3dadd( 76.9767, 76.6429, 5.88326, 0.88 ) }
    dend_2 { pt3dadd( 77.4001, 76.8235, 5.8865, 1.03 ) }
    dend_2 { pt3dadd( 78.7433, 77.3111, 5.92011, 0.37 ) }
    dend_2 { pt3dadd( 79.3909, 77.5089, 5.95359, 0.37 ) }
    dend_2 { pt3dadd( 80.1783, 77.7063, 6.02517, 0.37 ) }
    dend_2 { pt3dadd( 81.0746, 77.9211, 6.11104, 0.37 ) }
    dend_2 { pt3dadd( 81.8033, 78.1098, 6.17746, 0.37 ) }
    dend_2 { pt3dadd( 82.6884, 78.3449, 6.26201, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_2 { pt3dadd( 83.2759, 78.4863, 6.32598, 0.74 ) }
    dend_2 { pt3dadd( 83.7888, 78.5994, 6.36526, 0.74 ) }
    dend_2 { pt3dadd( 84.4211, 78.7225, 6.40183, 0.52 ) }
    dend_2 { pt3dadd( 85.425, 78.9177, 6.45113, 0.88 ) }
    dend_2 { pt3dadd( 86.013, 79.0465, 6.46168, 0.66 ) }
    dend_2 { pt3dadd( 86.7432, 79.2217, 6.44237, 0.37 ) }
    dend_2 { pt3dadd( 87.8936, 79.5392, 6.41062, 1.18 ) }
    dend_2 { pt3dadd( 88.3262, 79.6866, 6.40254, 1.18 ) }
    dend_2 { pt3dadd( 88.7628, 79.8763, 6.40574, 0.96 ) }
    dend_2 { pt3dadd( 89.5339, 80.3031, 6.45276, 1.03 ) }
    dend_2 { pt3dadd( 89.9853, 80.6259, 6.51018, 0.96 ) }
    dend_2 { pt3dadd( 90.7181, 81.2795, 6.68667, 0.29 ) }
    dend_2 { pt3dadd( 91.3568, 81.9684, 6.94345, 0.29 ) }
    dend_2 { pt3dadd( 92.0255, 82.7888, 7.27796, 0.52 ) }
    dend_2 { pt3dadd( 92.3773, 83.2729, 7.48795, 0.52 ) }
    dend_2 { pt3dadd( 92.8001, 83.9079, 7.78591, 0.52 ) }
    dend_2 { pt3dadd( 93.1657, 84.4726, 8.05241, 0.37 ) }
    dend_2 { pt3dadd( 93.6883, 85.2722, 8.43791, 0.59 ) }
    dend_2 { pt3dadd( 94.059, 85.8248, 8.71046, 0.59 ) }
    dend_2 { pt3dadd( 94.4986, 86.4489, 9.01078, 0.22 ) }
    dend_2 { pt3dadd( 95.2422, 87.4392, 9.44595, 0.22 ) }
    dend_2 { pt3dadd( 95.6423, 87.9241, 9.64275, 0.22 ) }
    dend_2 { pt3dadd( 96.1424, 88.469, 9.84878, 0.22 ) }
    dend_2 { pt3dadd( 96.6388, 88.9418, 10.014, 0.96 ) }
    dend_2 { pt3dadd( 97.1642, 89.4115, 10.1596, 1.03 ) }
    dend_2 { pt3dadd( 97.6729, 89.8862, 10.27, 0.74 ) }
    dend_2 { pt3dadd( 98.0808, 90.341, 10.3286, 0.29 ) }
    dend_2 { pt3dadd( 98.5341, 90.9876, 10.3674, 0.29 ) }
    dend_2 { pt3dadd( 99.1074, 92.0204, 10.3843, 0.29 ) }
    dend_2 { pt3dadd( 99.5386, 93.0318, 10.376, 0.37 ) }
    dend_2 { pt3dadd( 99.9678, 94.2592, 10.3166, 0.37 ) }
    dend_2 { pt3dadd( 100.37, 95.6017, 10.2196, 0.37 ) }
    dend_2 { pt3dadd( 100.697, 96.885, 10.1051, 0.37 ) }
    dend_2 { pt3dadd( 100.954, 98.1453, 9.98, 0.37 ) }
    dend_2 { pt3dadd( 101.207, 99.7072, 9.81775, 0.37 ) }
    dend_2 { pt3dadd( 101.418, 101.167, 9.65536, 0.66 ) }
    dend_2 { pt3dadd( 101.487, 101.652, 9.60128, 1.11 ) }
    dend_2 { pt3dadd( 101.596, 102.386, 9.52394, 0.52 ) }
    dend_2 { pt3dadd( 101.754, 103.418, 9.42566, 0.29 ) }
    dend_2 { pt3dadd( 101.88, 104.263, 9.35864, 0.29 ) }
    dend_2 { pt3dadd( 102.088, 105.619, 9.28648, 0.96 ) }
    dend_2 { pt3dadd( 102.184, 106.234, 9.27226, 1.47 ) }
    dend_2 { pt3dadd( 102.304, 106.967, 9.25412, 1.62 ) }
    dend_2 { pt3dadd( 102.423, 107.628, 9.23739, 1.62 ) }
    dend_2 { pt3dadd( 102.607, 108.545, 9.21494, 0.96 ) }
    dend_2 { pt3dadd( 102.79, 109.423, 9.20726, 0.59 ) }
    dend_2 { pt3dadd( 103.055, 110.645, 9.14648, 0.44 ) }
    dend_2 { pt3dadd( 103.332, 111.935, 9.04689, 0.37 ) }
    dend_2 { pt3dadd( 103.575, 113.168, 8.92183, 0.37 ) }
    dend_2 { pt3dadd( 103.859, 114.74, 8.71281, 0.29 ) }
    dend_2 { pt3dadd( 104.059, 116.03, 8.48946, 1.03 ) }
    dend_2 { pt3dadd( 104.273, 117.767, 8.12781, 0.66 ) }
    dend_2 { pt3dadd( 104.335, 118.388, 7.95516, 1.18 ) }
    dend_2 { pt3dadd( 104.404, 119.198, 7.68482, 1.18 ) }
    dend_2 { pt3dadd( 104.481, 120.001, 7.35607, 1.47 ) }
    dend_2 { pt3dadd( 104.633, 121.182, 6.8097, 0.37 ) }
    dend_2 { pt3dadd( 104.828, 122.216, 6.29804, 0.29 ) }
    dend_2 { pt3dadd( 105.191, 123.58, 5.60234, 0.96 ) }
    dend_2 { pt3dadd( 105.408, 124.191, 5.25807, 1.11 ) }
    dend_2 { pt3dadd( 105.969, 125.476, 4.4993, 0.52 ) }
    dend_2 { pt3dadd( 106.384, 126.31, 4.00782, 1.11 ) }
    dend_2 { pt3dadd( 106.877, 127.237, 3.49088, 1.11 ) }
    dend_2 { pt3dadd( 107.481, 128.365, 2.86973, 0.29 ) }
    dend_2 { pt3dadd( 107.933, 129.221, 2.42572, 0.44 ) }
    dend_2 { pt3dadd( 108.136, 129.62, 2.21709, 0.44 ) }
    dend_2 { pt3dadd( 108.391, 130.208, 1.93239, 0.29 ) }
    dend_2 { pt3dadd( 108.878, 131.489, 1.31782, 1.18 ) }
    dend_2 { pt3dadd( 109.222, 132.59, 0.86604, 1.33 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 68/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -68.8202, 6.08377, 43.2907, 0.59 ) }
    dend_68 { pt3dadd( -70.3657, 6.52795, 42.9429, 0.59 ) }
    dend_68 { pt3dadd( -71.2327, 6.75656, 42.7698, 0.74 ) }
    dend_68 { pt3dadd( -72.4432, 7.01624, 42.565, 0.74 ) }
    dend_68 { pt3dadd( -73.6859, 7.23288, 42.3844, 0.96 ) }
    dend_68 { pt3dadd( -74.6999, 7.40184, 42.2398, 1.11 ) }
    dend_68 { pt3dadd( -75.4347, 7.54329, 42.1335, 1.11 ) }
    dend_68 { pt3dadd( -76.4435, 7.78734, 42.0033, 0.96 ) }
    dend_68 { pt3dadd( -77.5242, 8.10814, 41.8894, 1.03 ) }
    dend_68 { pt3dadd( -78.286, 8.35668, 41.7992, 1.03 ) }
    dend_68 { pt3dadd( -79.3899, 8.73973, 41.7204, 0.81 ) }
    dend_68 { pt3dadd( -80.5733, 9.17536, 41.6888, 0.81 ) }
    dend_68 { pt3dadd( -81.6817, 9.60023, 41.7075, 0.81 ) }
    dend_68 { pt3dadd( -82.4856, 9.91809, 41.7407, 0.81 ) }
    dend_68 { pt3dadd( -84.0237, 10.5196, 41.8256, 0.81 ) }
    dend_68 { pt3dadd( -85.8168, 11.1002, 41.9476, 0.96 ) }
    dend_68 { pt3dadd( -86.7643, 11.2879, 42.0341, 0.96 ) }
    dend_68 { pt3dadd( -87.7541, 11.3258, 42.1258, 0.96 ) }
    dend_68 { pt3dadd( -88.9143, 11.1862, 42.2251, 0.52 ) }
    dend_68 { pt3dadd( -89.8162, 10.9361, 42.2982, 0.74 ) }
    dend_68 { pt3dadd( -90.8279, 10.4647, 42.3894, 0.66 ) }
    dend_68 { pt3dadd( -91.8194, 9.79451, 42.4049, 0.88 ) }
    dend_68 { pt3dadd( -92.6685, 9.08068, 42.4233, 0.96 ) }
    dend_68 { pt3dadd( -93.1706, 8.60746, 42.4429, 0.96 ) }
    dend_68 { pt3dadd( -93.6232, 8.17008, 42.476, 0.96 ) }
    dend_68 { pt3dadd( -94.0511, 7.80342, 42.5113, 0.96 ) }
    dend_68 { pt3dadd( -94.7615, 7.40098, 42.5561, 0.74 ) }
    dend_68 { pt3dadd( -95.3938, 7.22179, 42.5752, 0.74 ) }
    dend_68 { pt3dadd( -96.0217, 7.14099, 42.583, 0.52 ) }
    dend_68 { pt3dadd( -96.7726, 7.10389, 42.5791, 0.52 ) }
    dend_68 { pt3dadd( -97.5741, 7.08909, 42.57, 0.74 ) }
    dend_68 { pt3dadd( -98.449, 7.10523, 42.554, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_68 { pt3dadd( -99.3268, 7.14303, 42.5342, 0.88 ) }
    dend_68 { pt3dadd( -100.441, 7.20089, 42.5087, 0.74 ) }
    dend_68 { pt3dadd( -101.182, 7.23159, 42.4946, 0.74 ) }
    dend_68 { pt3dadd( -102.448, 7.23745, 42.4988, 1.4 ) }
    dend_68 { pt3dadd( -103.596, 7.27919, 42.4963, 0.88 ) }
    dend_68 { pt3dadd( -104.703, 7.37372, 42.4403, 0.52 ) }
    dend_68 { pt3dadd( -105.268, 7.45012, 42.3781, 0.52 ) }
    dend_68 { pt3dadd( -105.658, 7.52059, 42.3186, 0.52 ) }
    dend_68 { pt3dadd( -107.558, 7.85078, 42.0534, 1.03 ) }
    dend_68 { pt3dadd( -109.001, 8.05648, 41.9395, 0.44 ) }
    dend_68 { pt3dadd( -110.778, 8.20695, 41.9952, 0.52 ) }
    dend_68 { pt3dadd( -111.558, 8.30175, 42.0784, 0.66 ) }
    dend_68 { pt3dadd( -112.575, 8.54601, 42.2078, 0.66 ) }
    dend_68 { pt3dadd( -113.86, 9.00768, 42.3741, 0.66 ) }
    dend_68 { pt3dadd( -114.786, 9.42344, 42.4945, 0.52 ) }
    dend_68 { pt3dadd( -115.608, 9.78305, 42.5879, 0.52 ) }
    dend_68 { pt3dadd( -116.442, 10.2147, 42.6613, 0.52 ) }
    dend_68 { pt3dadd( -117.494, 10.9412, 42.6192, 0.59 ) }
    dend_68 { pt3dadd( -118.196, 11.5235, 42.5379, 0.59 ) }
    dend_68 { pt3dadd( -118.798, 12.0673, 42.4383, 0.59 ) }
    dend_68 { pt3dadd( -119.642, 12.8171, 42.2874, 0.44 ) }
    dend_68 { pt3dadd( -120.481, 13.5014, 42.1547, 0.44 ) }
    dend_68 { pt3dadd( -121.165, 13.9938, 42.077, 0.44 ) }
    dend_68 { pt3dadd( -122.512, 14.864, 41.9868, 0.59 ) }
    dend_68 { pt3dadd( -123.216, 15.281, 41.9642, 0.74 ) }
    dend_68 { pt3dadd( -123.714, 15.546, 41.9683, 0.74 ) }
    dend_68 { pt3dadd( -124.406, 15.8537, 41.9987, 0.59 ) }
    dend_68 { pt3dadd( -125.101, 16.0846, 42.032, 0.59 ) }
    dend_68 { pt3dadd( -125.799, 16.3055, 42.045, 0.59 ) }
    dend_68 { pt3dadd( -126.851, 16.6957, 42.0076, 0.44 ) }
    dend_68 { pt3dadd( -127.872, 17.1381, 41.9827, 0.44 ) }
    dend_68 { pt3dadd( -128.675, 17.5124, 41.9922, 0.44 ) }
    dend_68 { pt3dadd( -129.692, 17.9947, 42.0445, 0.44 ) }
    dend_68 { pt3dadd( -130.743, 18.4778, 42.133, 0.52 ) }
    dend_68 { pt3dadd( -132.042, 19.0933, 42.2645, 0.66 ) }
    dend_68 { pt3dadd( -132.949, 19.5736, 42.3624, 0.74 ) }
    dend_68 { pt3dadd( -133.79, 20.0709, 42.4444, 0.74 ) }
    dend_68 { pt3dadd( -134.613, 20.6083, 42.511, 0.59 ) }
    dend_68 { pt3dadd( -135.763, 21.3985, 42.5775, 0.29 ) }
    dend_68 { pt3dadd( -136.443, 21.8376, 42.6022, 0.52 ) }
    dend_68 { pt3dadd( -136.991, 22.176, 42.5905, 0.52 ) }
    dend_68 { pt3dadd( -137.863, 22.7258, 42.5203, 0.52 ) }
    dend_68 { pt3dadd( -138.726, 23.2838, 42.4051, 0.37 ) }
    dend_68 { pt3dadd( -139.384, 23.7183, 42.3036, 0.29 ) }
    dend_68 { pt3dadd( -139.725, 23.9359, 42.2526, 0.29 ) }
    dend_68 { pt3dadd( -140.267, 24.2298, 42.1835, 0.52 ) }
    dend_68 { pt3dadd( -141.055, 24.5832, 42.0997, 0.52 ) }
    dend_68 { pt3dadd( -141.625, 24.7809, 42.0522, 0.66 ) }
    dend_68 { pt3dadd( -142.231, 24.9615, 41.9976, 0.66 ) }
    dend_68 { pt3dadd( -142.884, 25.1572, 41.9303, 0.59 ) }
    dend_68 { pt3dadd( -143.564, 25.3685, 41.8528, 0.59 ) }
    dend_68 { pt3dadd( -144.196, 25.5435, 41.782, 1.18 ) }
    dend_68 { pt3dadd( -145.198, 25.7456, 41.6432, 1.03 ) }
    dend_68 { pt3dadd( -146.229, 25.8791, 41.4703, 0.29 ) }
    dend_68 { pt3dadd( -146.996, 25.9083, 41.3309, 0.29 ) }
    dend_68 { pt3dadd( -147.663, 25.8857, 41.1973, 0.29 ) }
    dend_68 { pt3dadd( -148.545, 25.8054, 41.0086, 0.29 ) }
    dend_68 { pt3dadd( -149.697, 25.6543, 40.7479, 0.59 ) }
    dend_68 { pt3dadd( -150.51, 25.5317, 40.5616, 0.59 ) }
    dend_68 { pt3dadd( -151.475, 25.3565, 40.3574, 0.74 ) }
    dend_68 { pt3dadd( -152.448, 25.1751, 40.155, 0.74 ) }
    dend_68 { pt3dadd( -152.848, 25.1207, 40.075, 0.74 ) }
    dend_68 { pt3dadd( -153.202, 25.1094, 40.0073, 0.74 ) }
    dend_68 { pt3dadd( -154.11, 25.1914, 39.837, 0.37 ) }
    dend_68 { pt3dadd( -154.647, 25.3076, 39.7714, 0.37 ) }
    dend_68 { pt3dadd( -155.605, 25.6149, 39.6847, 0.96 ) }
    dend_68 { pt3dadd( -156.375, 25.9036, 39.6066, 0.59 ) }
    dend_68 { pt3dadd( -157.062, 26.2153, 39.57, 0.59 ) }
    dend_68 { pt3dadd( -157.819, 26.6346, 39.5526, 0.37 ) }
    dend_68 { pt3dadd( -159.26, 27.664, 39.5347, 0.29 ) }
    dend_68 { pt3dadd( -160.048, 28.3875, 39.5144, 0.29 ) }
    dend_68 { pt3dadd( -160.869, 29.2298, 39.5083, 0.88 ) }
    dend_68 { pt3dadd( -161.915, 30.3742, 39.5114, 0.44 ) }
    dend_68 { pt3dadd( -162.629, 31.1931, 39.5202, 0.37 ) }
    dend_68 { pt3dadd( -163.345, 32.0933, 39.5156, 0.29 ) }
    dend_68 { pt3dadd( -163.89, 32.9078, 39.4085, 0.29 ) }
    dend_68 { pt3dadd( -174.158, 36.5407, 38.9608, 0.29 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 77/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -68.8202, 6.08377, 43.2907, 0.59 ) }
    dend_67 { pt3dadd( -69.6456, 5.14494, 44.4094, 0.59 ) }
    dend_67 { pt3dadd( -70.6085, 4.21159, 45.6026, 0.52 ) }
    dend_67 { pt3dadd( -71.1746, 3.76681, 46.2253, 0.74 ) }
    dend_67 { pt3dadd( -72.0802, 3.25352, 47.0794, 0.88 ) }
    dend_67 { pt3dadd( -72.9777, 2.8855, 47.8403, 0.74 ) }
    dend_67 { pt3dadd( -73.5301, 2.65896, 48.3087, 0.22 ) }
    dend_67 { pt3dadd( -74.2565, 2.49636, 48.8443, 0.22 ) }
    dend_67 { pt3dadd( -75.0396, 2.45679, 49.2899, 0.22 ) }
    dend_67 { pt3dadd( -76.2268, 2.62729, 49.8276, 0.22 ) }
    dend_67 { pt3dadd( -76.775, 2.81422, 49.9999, 0.22 ) }
    dend_67 { pt3dadd( -84.4598, -2.01662, 58.5301, 0.22 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 89/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 48.3361, 76.0456, 84.0098, 0.74 ) }
    dend_65 { pt3dadd( 56.3489, 80.5852, 88.256, 0.74 ) }
    dend_65 { pt3dadd( 63.7443, 86.4326, 92.1241, 0.74 ) }
    dend_65 { pt3dadd( 72.6324, 90.3503, 95.0028, 0.74 ) }
    dend_65 { pt3dadd( 81.9515, 93.0534, 97.8286, 0.74 ) }
    dend_65 { pt3dadd( 91.0372, 95.931, 101.194, 0.74 ) }
    dend_65 { pt3dadd( 99.6517, 100.892, 103.33, 0.74 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 96/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 48.3361, 76.0456, 84.0098, 0.96 ) }
    dend_64 { pt3dadd( 53.5767, 78.8756, 86.8088, 0.74 ) }
    dend_64 { pt3dadd( 58.5354, 82.7312, 88.9132, 0.74 ) }
    dend_64 { pt3dadd( 63.6097, 85.362, 92.1586, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_64 { pt3dadd( 69.1767, 87.1009, 95.1539, 0.74 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 1/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -53.9905, -15.7503, 33.7195, 0.59 ) }
    dend_56 { pt3dadd( -56.3823, -15.7973, 32.6272, 0.59 ) }
    dend_56 { pt3dadd( -57.2328, -15.7678, 32.2469, 0.74 ) }
    dend_56 { pt3dadd( -57.9464, -15.6961, 31.9195, 0.74 ) }
    dend_56 { pt3dadd( -58.9524, -15.511, 31.4507, 0.74 ) }
    dend_56 { pt3dadd( -59.9388, -15.238, 30.9786, 0.74 ) }
    dend_56 { pt3dadd( -61.0201, -14.8446, 30.4522, 0.74 ) }
    dend_56 { pt3dadd( -62.1267, -14.285, 29.9689, 0.74 ) }
    dend_56 { pt3dadd( -62.8473, -13.8671, 29.6397, 0.74 ) }
    dend_56 { pt3dadd( -63.7592, -13.303, 29.2216, 0.81 ) }
    dend_56 { pt3dadd( -64.5704, -12.7941, 28.8508, 0.81 ) }
    dend_56 { pt3dadd( -65.3769, -12.3428, 28.5192, 0.81 ) }
    dend_56 { pt3dadd( -66.0171, -12.0505, 28.3137, 0.81 ) }
    dend_56 { pt3dadd( -66.8785, -11.7636, 28.0716, 0.96 ) }
    dend_56 { pt3dadd( -67.6868, -11.5681, 27.875, 0.96 ) }
    dend_56 { pt3dadd( -68.6329, -11.4032, 27.6662, 0.96 ) }
    dend_56 { pt3dadd( -69.3884, -11.313, 27.5001, 0.74 ) }
    dend_56 { pt3dadd( -70.1796, -11.2439, 27.3106, 0.74 ) }
    dend_56 { pt3dadd( -71.0222, -11.1699, 27.0914, 0.74 ) }
    dend_56 { pt3dadd( -72.0102, -11.0956, 26.7647, 0.96 ) }
    dend_56 { pt3dadd( -72.8685, -11.057, 26.4028, 1.11 ) }
    dend_56 { pt3dadd( -73.7218, -11.0232, 26.018, 0.88 ) }
    dend_56 { pt3dadd( -74.4885, -11.0198, 25.6366, 0.96 ) }
    dend_56 { pt3dadd( -74.9696, -11.0551, 25.3764, 1.18 ) }
    dend_56 { pt3dadd( -76.3725, -11.2874, 24.5342, 1.47 ) }
    dend_56 { pt3dadd( -77.2722, -11.522, 23.9108, 1.47 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 27/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -53.9905, -15.7503, 33.7195, 1.03 ) }
    dend_55 { pt3dadd( -54.9841, -16.289, 33.6763, 1.03 ) }
    dend_55 { pt3dadd( -56.0668, -16.8655, 33.6996, 0.66 ) }
    dend_55 { pt3dadd( -56.7731, -17.2127, 33.8512, 0.66 ) }
    dend_55 { pt3dadd( -57.5333, -17.5191, 34.1128, 0.88 ) }
    dend_55 { pt3dadd( -58.3339, -17.8005, 34.4598, 0.59 ) }
    dend_55 { pt3dadd( -59.4343, -18.2033, 35.0583, 0.59 ) }
    dend_55 { pt3dadd( -59.7321, -18.2843, 35.2882, 1.25 ) }
    dend_55 { pt3dadd( -61.0472, -18.4579, 36.5704, 1.33 ) }
    dend_55 { pt3dadd( -61.6445, -18.4339, 37.2347, 0.44 ) }
    dend_55 { pt3dadd( -61.9715, -18.3374, 37.6266, 0.44 ) }
    dend_55 { pt3dadd( -62.7694, -17.9149, 38.5413, 0.88 ) }
    dend_55 { pt3dadd( -63.3903, -17.4986, 39.1123, 0.52 ) }
    dend_55 { pt3dadd( -63.9211, -17.1178, 39.4838, 0.52 ) }
    dend_55 { pt3dadd( -64.569, -16.6286, 39.7786, 0.59 ) }
    dend_55 { pt3dadd( -65.3076, -16.0315, 40.0657, 0.59 ) }
    dend_55 { pt3dadd( -65.8329, -15.5962, 40.2581, 0.59 ) }
    dend_55 { pt3dadd( -66.5339, -15.0327, 40.5328, 0.59 ) }
    dend_55 { pt3dadd( -67.056, -14.6927, 40.7737, 0.52 ) }
    dend_55 { pt3dadd( -67.7385, -14.3661, 41.1329, 0.52 ) }
    dend_55 { pt3dadd( -68.3926, -14.1584, 41.5446, 0.66 ) }
    dend_55 { pt3dadd( -69.2049, -14.0422, 42.1759, 0.88 ) }
    dend_55 { pt3dadd( -69.8249, -14.055, 42.7966, 0.88 ) }
    dend_55 { pt3dadd( -70.1425, -14.1339, 43.2231, 0.66 ) }
    dend_55 { pt3dadd( -70.5274, -14.3516, 43.8768, 0.44 ) }
    dend_55 { pt3dadd( -70.8484, -14.6701, 44.5981, 0.44 ) }
    dend_55 { pt3dadd( -71.136, -15.1726, 45.6081, 0.44 ) }
    dend_55 { pt3dadd( -71.1872, -15.4661, 46.2282, 0.66 ) }
    dend_55 { pt3dadd( -71.1208, -15.8869, 47.2136, 0.81 ) }
    dend_55 { pt3dadd( -71.0376, -16.1007, 47.7621, 0.59 ) }
    dend_55 { pt3dadd( -70.8789, -16.318, 48.3855, 0.59 ) }
    dend_55 { pt3dadd( -70.5573, -16.5941, 49.26, 0.66 ) }
    dend_55 { pt3dadd( -69.8426, -16.9815, 50.7224, 0.66 ) }
    dend_55 { pt3dadd( -69.6544, -17.0556, 51.0686, 0.44 ) }
    dend_55 { pt3dadd( -75.2306, -15.9144, 57.9471, 0.44 ) }
    dend_55 { pt3dadd( -80.4932, -14.0863, 64.9326, 0.44 ) }
    dend_55 { pt3dadd( -85.8573, -12.7099, 71.9377, 0.44 ) }
    dend_55 { pt3dadd( -90.9048, -12.3054, 79.2873, 0.44 ) }
    dend_55 { pt3dadd( -95.4563, -10.1755, 86.6782, 0.44 ) }
    dend_55 { pt3dadd( -98.4933, -8.09268, 94.8166, 0.44 ) }
    dend_55 { pt3dadd( -100.285, -5.39541, 103.149, 0.44 ) }
    dend_55 { pt3dadd( -102.744, -1.75061, 110.96, 0.44 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 69/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 6.38616, -65.8193, 80.1286, 0.74 ) }
    dend_50 { pt3dadd( 10.0287, -68.3848, 87.981, 0.74 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 71/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 6.38616, -65.8193, 80.1286, 0.96 ) }
    dend_49 { pt3dadd( 7.77556, -68.2008, 89.9857, 0.74 ) }
    dend_49 { pt3dadd( 8.02514, -72.1745, 99.463, 0.74 ) }
    dend_49 { pt3dadd( 10.0143, -74.7878, 109.164, 0.74 ) }
    dend_49 { pt3dadd( 12.1069, -77.3645, 118.853, 0.74 ) }
    dend_49 { pt3dadd( 14.5131, -78.9727, 128.656, 0.74 ) }
    dend_49 { pt3dadd( 16.8146, -78.9322, 138.6, 0.74 ) }
    dend_49 { pt3dadd( 17.0264, -78.109, 148.773, 0.74 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 79/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 15.742, -39.4389, -26.6106, 0.81 ) }
    dend_44 { pt3dadd( 16.4639, -39.1441, -24.6894, 0.81 ) }
    dend_44 { pt3dadd( 16.9466, -38.9484, -23.5339, 0.29 ) }
    dend_44 { pt3dadd( 17.1838, -38.8627, -23.016, 0.29 ) }
    dend_44 { pt3dadd( 17.8071, -38.6837, -21.8141, 0.37 ) }
    dend_44 { pt3dadd( 18.0862, -38.6228, -21.3239, 0.44 ) }
    dend_44 { pt3dadd( 18.4214, -38.5679, -20.7758, 0.37 ) }
    dend_44 { pt3dadd( 18.9161, -38.5314, -20.1475, 0.59 ) }
    dend_44 { pt3dadd( 19.2202, -38.5381, -19.8236, 0.59 ) }
    dend_44 { pt3dadd( 19.7582, -38.6092, -19.3204, 0.29 ) }
    dend_44 { pt3dadd( 20.1735, -38.7143, -18.9872, 0.52 ) }
    dend_44 { pt3dadd( 20.3886, -38.7945, -18.8171, 0.66 ) }
    dend_44 { pt3dadd( 20.9991, -39.0752, -18.3477, 0.29 ) }
    dend_44 { pt3dadd( 21.3736, -39.2673, -18.0649, 0.29 ) }
    dend_44 { pt3dadd( 21.7366, -39.4638, -17.7805, 0.66 ) }
    dend_44 { pt3dadd( 21.9983, -39.6191, -17.5622, 0.66 ) }
    dend_44 { pt3dadd( 22.2794, -39.7948, -17.3301, 0.37 ) }
    dend_44 { pt3dadd( 22.3861, -39.8674, -17.2398, 0.15 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 97/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 15.742, -39.4389, -26.6106, 0.44 ) }
    dend_43 { pt3dadd( 17.06, -40.4463, -26.8329, 0.44 ) }
    dend_43 { pt3dadd( 17.7763, -41.0136, -26.9323, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_43 { pt3dadd( 18.3399, -41.4706, -27.0004, 0.74 ) }
    dend_43 { pt3dadd( 19.2176, -42.1858, -27.0961, 0.37 ) }
    dend_43 { pt3dadd( 19.7212, -42.5987, -27.1522, 0.52 ) }
    dend_43 { pt3dadd( 20.486, -43.2294, -27.239, 0.29 ) }
    dend_43 { pt3dadd( 21.1279, -43.7702, -27.3015, 0.66 ) }
    dend_43 { pt3dadd( 21.495, -44.0957, -27.3298, 0.74 ) }
    dend_43 { pt3dadd( 21.7289, -44.3125, -27.3513, 0.74 ) }
    dend_43 { pt3dadd( 22.6063, -45.1357, -27.4547, 0.22 ) }
    dend_43 { pt3dadd( 23.1505, -45.6409, -27.5276, 0.59 ) }
    dend_43 { pt3dadd( 23.4414, -45.9187, -27.5703, 0.81 ) }
    dend_43 { pt3dadd( 23.6922, -46.1559, -27.6056, 0.81 ) }
    dend_43 { pt3dadd( 24.5572, -46.9266, -27.7096, 0.29 ) }
    dend_43 { pt3dadd( 24.8882, -47.2039, -27.7416, 0.29 ) }
    dend_43 { pt3dadd( 25.5571, -47.718, -27.7878, 1.4 ) }
    dend_43 { pt3dadd( 26.1218, -48.1274, -27.7877, 1.62 ) }
    dend_43 { pt3dadd( 26.6802, -48.5192, -27.7626, 1.25 ) }
    dend_43 { pt3dadd( 27.6891, -49.1933, -27.6828, 0.29 ) }
    dend_43 { pt3dadd( 28.2851, -49.5744, -27.6174, 0.37 ) }
    dend_43 { pt3dadd( 28.8677, -49.9437, -27.5446, 0.37 ) }
    dend_43 { pt3dadd( 30.15, -50.7681, -27.3707, 0.29 ) }
    dend_43 { pt3dadd( 30.7186, -51.1355, -27.2911, 1.4 ) }
    dend_43 { pt3dadd( 31.1418, -51.4163, -27.2279, 1.4 ) }
    dend_43 { pt3dadd( 31.8417, -51.887, -27.1218, 1.03 ) }
    dend_43 { pt3dadd( 32.712, -52.458, -26.9977, 0.37 ) }
    dend_43 { pt3dadd( 33.3979, -52.8873, -26.9162, 0.59 ) }
    dend_43 { pt3dadd( 33.7858, -53.1117, -26.8839, 0.59 ) }
    dend_43 { pt3dadd( 35.002, -53.7909, -26.7724, 0.22 ) }
    dend_43 { pt3dadd( 35.6231, -54.1313, -26.7134, 0.52 ) }
    dend_43 { pt3dadd( 35.9989, -54.326, -26.6767, 0.52 ) }
    dend_43 { pt3dadd( 37.1129, -54.8553, -26.5767, 0.29 ) }
    dend_43 { pt3dadd( 37.4953, -55.022, -26.5442, 0.66 ) }
    dend_43 { pt3dadd( 37.8802, -55.1781, -26.5158, 0.81 ) }
    dend_43 { pt3dadd( 38.4479, -55.4184, -26.487, 0.52 ) }
    dend_43 { pt3dadd( 39.7049, -55.949, -26.4405, 0.22 ) }
    dend_43 { pt3dadd( 40.4137, -56.2324, -26.4243, 0.22 ) }
    dend_43 { pt3dadd( 40.8079, -56.3826, -26.4196, 0.52 ) }
    dend_43 { pt3dadd( 41.2409, -56.541, -26.4181, 0.52 ) }
    dend_43 { pt3dadd( 42.8048, -57.0625, -26.4296, 0.22 ) }
    dend_43 { pt3dadd( 43.9974, -57.4426, -26.4461, 0.22 ) }
    dend_43 { pt3dadd( 45.2526, -57.8434, -26.473, 0.22 ) }
    dend_43 { pt3dadd( 45.8955, -58.0474, -26.4869, 0.44 ) }
    dend_43 { pt3dadd( 46.2294, -58.1376, -26.4934, 0.44 ) }
    dend_43 { pt3dadd( 47.589, -58.4136, -26.5176, 0.22 ) }
    dend_43 { pt3dadd( 48.5077, -58.5248, -26.5329, 0.22 ) }
    dend_43 { pt3dadd( 49.6095, -58.6225, -26.5502, 0.74 ) }
    dend_43 { pt3dadd( 50.1583, -58.6512, -26.5587, 0.96 ) }
    dend_43 { pt3dadd( 51.2984, -58.6955, -26.5562, 0.22 ) }
    dend_43 { pt3dadd( 52.4611, -58.7479, -26.5201, 0.22 ) }
    dend_43 { pt3dadd( 54.2002, -58.8285, -26.4154, 0.22 ) }
    dend_43 { pt3dadd( 54.9477, -58.8778, -26.324, 0.66 ) }
    dend_43 { pt3dadd( 55.8911, -58.9754, -26.1617, 0.96 ) }
    dend_43 { pt3dadd( 56.7729, -59.1185, -25.9712, 0.96 ) }
    dend_43 { pt3dadd( 57.7674, -59.3663, -25.6969, 0.29 ) }
    dend_43 { pt3dadd( 58.5466, -59.5904, -25.4377, 0.29 ) }
    dend_43 { pt3dadd( 59.9006, -60.0139, -24.9275, 0.96 ) }
    dend_43 { pt3dadd( 60.6258, -60.2278, -24.6529, 1.69 ) }
    dend_43 { pt3dadd( 61.2899, -60.3832, -24.4077, 1.92 ) }
    dend_43 { pt3dadd( 62.3761, -60.5526, -24.052, 0.81 ) }
    dend_43 { pt3dadd( 63.327, -60.6377, -23.7629, 0.66 ) }
    dend_43 { pt3dadd( 63.724, -60.6508, -23.6474, 0.66 ) }
    dend_43 { pt3dadd( 64.4976, -60.6242, -23.4399, 0.29 ) }
    dend_43 { pt3dadd( 65.6353, -60.5332, -23.1199, 0.22 ) }
    dend_43 { pt3dadd( 66.3061, -60.461, -22.9273, 0.74 ) }
    dend_43 { pt3dadd( 66.9234, -60.3751, -22.7463, 0.74 ) }
    dend_43 { pt3dadd( 67.3958, -60.3204, -22.587, 0.74 ) }
    dend_43 { pt3dadd( 67.6922, -60.2964, -22.4774, 0.74 ) }
    dend_43 { pt3dadd( 68.6557, -60.2979, -22.1084, 0.29 ) }
    dend_43 { pt3dadd( 69.4232, -60.3687, -21.7942, 0.29 ) }
    dend_43 { pt3dadd( 70.1305, -60.4875, -21.495, 0.29 ) }
    dend_43 { pt3dadd( 70.8607, -60.6706, -21.193, 0.52 ) }
    dend_43 { pt3dadd( 71.2828, -60.812, -21.0085, 0.52 ) }
    dend_43 { pt3dadd( 72.2184, -61.1725, -20.592, 0.44 ) }
    dend_43 { pt3dadd( 73.0355, -61.5548, -20.2028, 0.81 ) }
    dend_43 { pt3dadd( 73.6393, -61.8882, -19.9122, 1.03 ) }
    dend_43 { pt3dadd( 74.1646, -62.23, -19.6579, 1.03 ) }
    dend_43 { pt3dadd( 74.8087, -62.6891, -19.3497, 0.52 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 76/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 1.20052, -40.4086, -34.7706, 0.81 ) }
    dend_41 { pt3dadd( 2.61859, -41.565, -34.9052, 0.81 ) }
    dend_41 { pt3dadd( 3.63503, -42.3598, -35.0113, 0.66 ) }
    dend_41 { pt3dadd( 4.44163, -42.9914, -35.0873, 0.81 ) }
    dend_41 { pt3dadd( 5.48472, -43.8472, -35.2907, 1.18 ) }
    dend_41 { pt3dadd( 6.27052, -44.5316, -35.4948, 0.96 ) }
    dend_41 { pt3dadd( 6.90001, -45.1308, -35.6838, 0.81 ) }
    dend_41 { pt3dadd( 7.40617, -45.678, -35.9045, 0.96 ) }
    dend_41 { pt3dadd( 7.79256, -46.1577, -36.0946, 0.96 ) }
    dend_41 { pt3dadd( 8.82994, -47.6215, -36.6734, 0.59 ) }
    dend_41 { pt3dadd( 9.29622, -48.4221, -36.9762, 0.96 ) }
    dend_41 { pt3dadd( 9.73254, -49.3138, -37.3272, 0.96 ) }
    dend_41 { pt3dadd( 10.0688, -50.0721, -37.6253, 0.96 ) }
    dend_41 { pt3dadd( 10.3964, -50.8646, -37.9379, 0.66 ) }
    dend_41 { pt3dadd( 10.7881, -51.8388, -38.3343, 0.52 ) }
    dend_41 { pt3dadd( 11.2619, -53.0028, -38.781, 0.81 ) }
    dend_41 { pt3dadd( 11.6313, -53.9208, -39.1776, 1.18 ) }
    dend_41 { pt3dadd( 11.9361, -54.6597, -39.5155, 1.33 ) }
    dend_41 { pt3dadd( 12.2095, -55.327, -39.8309, 1.33 ) }
    dend_41 { pt3dadd( 12.6502, -56.379, -40.3303, 0.88 ) }
    dend_41 { pt3dadd( 13.0085, -57.2378, -40.7123, 0.37 ) }
    dend_41 { pt3dadd( 13.4127, -58.1748, -41.105, 0.37 ) }
    dend_41 { pt3dadd( 13.8236, -59.1339, -41.4885, 0.29 ) }
    dend_41 { pt3dadd( 13.956, -59.4543, -41.6252, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_41 { pt3dadd( 14.2707, -60.2018, -41.9447, 0.88 ) }
    dend_41 { pt3dadd( 14.4992, -60.7349, -42.1791, 1.11 ) }
    dend_41 { pt3dadd( 14.6794, -61.1572, -42.3843, 1.11 ) }
    dend_41 { pt3dadd( 14.9074, -61.6981, -42.6752, 0.81 ) }
    dend_41 { pt3dadd( 15.4076, -62.9778, -43.4092, 0.44 ) }
    dend_41 { pt3dadd( 15.6345, -63.5933, -43.7603, 0.66 ) }
    dend_41 { pt3dadd( 15.8899, -64.3085, -44.1686, 0.29 ) }
    dend_41 { pt3dadd( 16.0554, -64.7511, -44.4407, 0.29 ) }
    dend_41 { pt3dadd( 16.3995, -65.627, -45.0159, 1.11 ) }
    dend_41 { pt3dadd( 16.6235, -66.1749, -45.3792, 1.25 ) }
    dend_41 { pt3dadd( 16.7698, -66.5061, -45.5896, 1.25 ) }
    dend_41 { pt3dadd( 17.0315, -67.0672, -45.9524, 1.03 ) }
    dend_41 { pt3dadd( 17.6787, -68.3633, -46.8184, 0.29 ) }
    dend_41 { pt3dadd( 18.3201, -69.563, -47.6621, 0.29 ) }
    dend_41 { pt3dadd( 18.5764, -69.9984, -47.9875, 0.88 ) }
    dend_41 { pt3dadd( 18.8358, -70.422, -48.3182, 1.25 ) }
    dend_41 { pt3dadd( 19.1562, -70.9319, -48.7128, 1.47 ) }
    dend_41 { pt3dadd( 19.5448, -71.5428, -49.1742, 1.25 ) }
    dend_41 { pt3dadd( 19.9192, -72.1056, -49.57, 0.81 ) }
    dend_41 { pt3dadd( 20.6969, -73.2032, -50.3192, 0.22 ) }
    dend_41 { pt3dadd( 21.1619, -73.8445, -50.7492, 0.81 ) }
    dend_41 { pt3dadd( 21.5192, -74.3107, -51.0509, 1.03 ) }
    dend_41 { pt3dadd( 21.9392, -74.8345, -51.3741, 1.03 ) }
    dend_41 { pt3dadd( 22.8265, -75.9053, -52.0008, 0.22 ) }
    dend_41 { pt3dadd( 23.2579, -76.4281, -52.2953, 0.29 ) }
    dend_41 { pt3dadd( 23.4132, -76.6302, -52.4183, 0.29 ) }
    dend_41 { pt3dadd( 24.0335, -77.4879, -52.977, 0.22 ) }
    dend_41 { pt3dadd( 24.2864, -77.8726, -53.2398, 0.96 ) }
    dend_41 { pt3dadd( 24.5751, -78.3459, -53.5651, 1.11 ) }
    dend_41 { pt3dadd( 24.921, -78.9774, -54.0077, 0.96 ) }
    dend_41 { pt3dadd( 25.7437, -80.6284, -55.144, 0.22 ) }
    dend_41 { pt3dadd( 25.9513, -81.0918, -55.4646, 0.29 ) }
    dend_41 { pt3dadd( 26.1433, -81.5806, -55.7894, 0.81 ) }
    dend_41 { pt3dadd( 26.3237, -82.0638, -56.096, 1.25 ) }
    dend_41 { pt3dadd( 26.4833, -82.5332, -56.3827, 1.11 ) }
    dend_41 { pt3dadd( 26.6529, -83.1243, -56.7173, 0.74 ) }
    dend_41 { pt3dadd( 26.9136, -84.2296, -57.3094, 0.37 ) }
    dend_41 { pt3dadd( 27.0525, -84.8445, -57.6402, 0.81 ) }
    dend_41 { pt3dadd( 27.1906, -85.4202, -57.9383, 0.96 ) }
    dend_41 { pt3dadd( 27.3642, -86.1665, -58.3671, 0.66 ) }
    dend_41 { pt3dadd( 27.5086, -86.7621, -58.7232, 0.44 ) }
    dend_41 { pt3dadd( 27.7682, -87.8412, -59.4052, 0.37 ) }
    dend_41 { pt3dadd( 27.9181, -88.4639, -59.7927, 0.44 ) }
    dend_41 { pt3dadd( 28.0878, -89.2057, -60.2736, 0.66 ) }
    dend_41 { pt3dadd( 28.4165, -90.6422, -61.1823, 0.88 ) }
    dend_41 { pt3dadd( 28.5339, -91.1703, -61.5146, 0.66 ) }
    dend_41 { pt3dadd( 28.6972, -92.0052, -62.0514, 0.44 ) }
    dend_41 { pt3dadd( 28.7852, -92.6024, -62.4029, 0.44 ) }
    dend_41 { pt3dadd( 28.923, -93.9035, -63.1199, 1.47 ) }
    dend_41 { pt3dadd( 28.9724, -94.597, -63.4684, 2.06 ) }
    dend_41 { pt3dadd( 29.011, -95.2738, -63.7555, 2.28 ) }
    dend_41 { pt3dadd( 29.0512, -96.3441, -64.1695, 1.62 ) }
    dend_41 { pt3dadd( 29.0477, -97.4507, -64.6469, 0.74 ) }
    dend_41 { pt3dadd( 29.0228, -97.9007, -64.8471, 0.66 ) }
    dend_41 { pt3dadd( 28.9669, -98.5186, -65.1144, 1.03 ) }
    dend_41 { pt3dadd( 28.906, -99.1086, -65.3962, 1.03 ) }
    dend_41 { pt3dadd( 28.8211, -99.9228, -65.8115, 0.74 ) }
    dend_41 { pt3dadd( 28.6557, -101.954, -66.9479, 0.52 ) }
    dend_41 { pt3dadd( 28.5913, -103.23, -67.7294, 0.29 ) }
    dend_41 { pt3dadd( 28.5842, -103.632, -67.9989, 0.29 ) }
    dend_41 { pt3dadd( 28.6081, -104.678, -68.7442, 0.81 ) }
    dend_41 { pt3dadd( 28.6321, -105.075, -69.0412, 0.81 ) }
    dend_41 { pt3dadd( 28.7596, -106.146, -69.8721, 0.29 ) }
    dend_41 { pt3dadd( 28.8774, -106.606, -70.2067, 0.29 ) }
    dend_41 { pt3dadd( 29.2669, -107.677, -71.0225, 0.88 ) }
    dend_41 { pt3dadd( 29.4865, -108.189, -71.3997, 0.88 ) }
    dend_41 { pt3dadd( 29.665, -108.537, -71.6268, 0.88 ) }
    dend_41 { pt3dadd( 30.2019, -109.46, -72.1986, 0.22 ) }
    dend_41 { pt3dadd( 31.0945, -110.789, -73.0057, 0.22 ) }
    dend_41 { pt3dadd( 31.4828, -111.283, -73.2967, 0.59 ) }
    dend_41 { pt3dadd( 31.6105, -111.418, -73.3737, 0.59 ) }
    dend_41 { pt3dadd( 32.4863, -112.2, -73.852, 0.15 ) }
    dend_41 { pt3dadd( 33.0264, -112.608, -74.122, 0.44 ) }
    dend_41 { pt3dadd( 33.5671, -112.946, -74.3613, 0.44 ) }
    dend_41 { pt3dadd( 34.4773, -113.454, -74.7475, 0.22 ) }
    dend_41 { pt3dadd( 35.4022, -113.93, -75.1202, 1.11 ) }
    dend_41 { pt3dadd( 35.8502, -114.143, -75.2863, 1.55 ) }
    dend_41 { pt3dadd( 36.5013, -114.421, -75.4996, 1.69 ) }
    dend_41 { pt3dadd( 37.6787, -114.889, -75.8645, 0.22 ) }
    dend_41 { pt3dadd( 38.2508, -115.104, -76.0025, 0.74 ) }
    dend_41 { pt3dadd( 38.576, -115.223, -76.0671, 0.81 ) }
    dend_41 { pt3dadd( 39.7698, -115.642, -76.2745, 0.22 ) }
    dend_41 { pt3dadd( 41.2315, -116.139, -76.5228, 0.22 ) }
    dend_41 { pt3dadd( 42.8879, -116.681, -76.7953, 0.22 ) }
    dend_41 { pt3dadd( 44.2937, -117.117, -77.0177, 0.88 ) }
    dend_41 { pt3dadd( 44.7001, -117.24, -77.08, 0.88 ) }
    dend_41 { pt3dadd( 47.7181, -118.157, -77.5246, 0.15 ) }
    dend_41 { pt3dadd( 48.6226, -118.426, -77.6483, 0.37 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 88/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 1.20052, -40.4086, -34.7706, 0.44 ) }
    dend_40 { pt3dadd( 1.25101, -41.1404, -35.9199, 0.44 ) }
    dend_40 { pt3dadd( 1.27773, -41.4821, -36.5222, 0.44 ) }
    dend_40 { pt3dadd( 1.33539, -42.0071, -37.4459, 0.44 ) }
    dend_40 { pt3dadd( 1.42283, -42.5784, -38.4486, 0.81 ) }
    dend_40 { pt3dadd( 1.52636, -43.2337, -39.6702, 0.96 ) }
    dend_40 { pt3dadd( 1.69048, -44.5875, -42.2717, 0.37 ) }
    dend_40 { pt3dadd( 1.74839, -45.0547, -43.2167, 0.37 ) }
    dend_40 { pt3dadd( 1.78332, -45.4597, -44.0433, 0.81 ) }
    dend_40 { pt3dadd( 1.79245, -45.7625, -44.6676, 0.81 ) }
    dend_40 { pt3dadd( 1.75935, -46.8911, -46.9479, 0.29 ) }
    dend_40 { pt3dadd( 1.71069, -47.3496, -47.8045, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_40 { pt3dadd( 1.57797, -48.0107, -48.9543, 0.29 ) }
    dend_40 { pt3dadd( 1.32834, -48.8616, -50.3453, 1.25 ) }
    dend_40 { pt3dadd( 1.09054, -49.4776, -51.3034, 1.92 ) }
    dend_40 { pt3dadd( 0.790729, -50.142, -52.2483, 2.06 ) }
    dend_40 { pt3dadd( 0.321164, -51.1677, -53.6001, 0.29 ) }
    dend_40 { pt3dadd( 0.00562271, -51.8567, -54.4677, 0.29 ) }
    dend_40 { pt3dadd( -0.297476, -52.516, -55.2751, 0.59 ) }
    dend_40 { pt3dadd( -0.543986, -53.0291, -55.8602, 0.59 ) }
    dend_40 { pt3dadd( -0.925798, -53.8414, -56.7932, 0.29 ) }
    dend_40 { pt3dadd( -1.52115, -55.1798, -58.3664, 0.52 ) }
    dend_40 { pt3dadd( -1.76442, -55.7791, -59.0888, 0.52 ) }
    dend_40 { pt3dadd( -2.14349, -56.809, -60.4124, 0.22 ) }
    dend_40 { pt3dadd( -2.42532, -57.6047, -61.5125, 0.22 ) }
    dend_40 { pt3dadd( -2.82605, -58.7029, -63.0717, 1.11 ) }
    dend_40 { pt3dadd( -2.97224, -59.1044, -63.669, 1.55 ) }
    dend_40 { pt3dadd( -3.103, -59.4818, -64.2186, 1.55 ) }
    dend_40 { pt3dadd( -3.54061, -60.9405, -66.3379, 0.22 ) }
    dend_40 { pt3dadd( -3.71806, -61.6425, -67.2817, 0.74 ) }
    dend_40 { pt3dadd( -3.80467, -62.0871, -67.8324, 0.96 ) }
    dend_40 { pt3dadd( -3.9492, -63.0041, -68.8429, 0.81 ) }
    dend_40 { pt3dadd( -4.08011, -63.9389, -69.7471, 0.22 ) }
    dend_40 { pt3dadd( -4.1343, -64.3773, -70.1103, 0.37 ) }
    dend_40 { pt3dadd( -4.21309, -65.0426, -70.5591, 0.22 ) }
    dend_40 { pt3dadd( -4.28972, -65.7289, -71.0072, 0.81 ) }
    dend_40 { pt3dadd( -4.38853, -66.6118, -71.5941, 0.96 ) }
    dend_40 { pt3dadd( -4.55563, -68.0713, -72.5553, 0.22 ) }
    dend_40 { pt3dadd( -4.62145, -68.6674, -72.9624, 0.22 ) }
    dend_40 { pt3dadd( -4.7074, -69.5291, -73.5419, 0.88 ) }
    dend_40 { pt3dadd( -4.81584, -70.6107, -74.2275, 1.11 ) }
    dend_40 { pt3dadd( -4.95599, -72.0744, -75.1138, 0.22 ) }
    dend_40 { pt3dadd( -5.0229, -72.6902, -75.4808, 0.59 ) }
    dend_40 { pt3dadd( -5.08062, -73.1508, -75.7647, 0.59 ) }
    dend_40 { pt3dadd( -5.15276, -73.6029, -76.0468, 0.59 ) }
    dend_40 { pt3dadd( -5.32868, -74.552, -76.7014, 0.22 ) }
    dend_40 { pt3dadd( -5.63419, -76.0658, -77.8389, 0.96 ) }
    dend_40 { pt3dadd( -5.72719, -76.5141, -78.2036, 1.18 ) }
    dend_40 { pt3dadd( -5.83183, -76.9848, -78.6209, 1.18 ) }
    dend_40 { pt3dadd( -5.91668, -77.3627, -78.9748, 1.18 ) }
    dend_40 { pt3dadd( -6.23992, -78.7971, -80.2753, 0.29 ) }
    dend_40 { pt3dadd( -6.39366, -79.4948, -80.8674, 0.29 ) }
    dend_40 { pt3dadd( -6.63734, -80.5598, -81.6459, 1.11 ) }
    dend_40 { pt3dadd( -6.77698, -81.1696, -82.0377, 1.11 ) }
    dend_40 { pt3dadd( -7.04585, -82.3521, -82.6788, 0.22 ) }
    dend_40 { pt3dadd( -7.30939, -83.5753, -83.2362, 0.22 ) }
    dend_40 { pt3dadd( -7.51959, -84.5903, -83.6003, 0.44 ) }
    dend_40 { pt3dadd( -7.66956, -85.3522, -83.8406, 0.44 ) }
    dend_40 { pt3dadd( -7.79934, -86.0025, -84.0212, 0.29 ) }
    dend_40 { pt3dadd( -8.06514, -87.2274, -84.3374, 0.29 ) }
    dend_40 { pt3dadd( -8.4068, -88.6345, -84.7172, 0.74 ) }
    dend_40 { pt3dadd( -8.64392, -89.5155, -85.0004, 0.96 ) }
    dend_40 { pt3dadd( -8.90284, -90.3284, -85.3301, 0.96 ) }
    dend_40 { pt3dadd( -9.26716, -91.2735, -85.8076, 0.96 ) }
    dend_40 { pt3dadd( -9.69113, -92.1555, -86.3473, 0.96 ) }
    dend_40 { pt3dadd( -10.1621, -92.908, -86.9462, 0.88 ) }
    dend_40 { pt3dadd( -10.639, -93.5032, -87.5797, 0.88 ) }
    dend_40 { pt3dadd( -11.4327, -94.2968, -88.7111, 0.22 ) }
    dend_40 { pt3dadd( -11.9117, -94.6987, -89.4351, 0.22 ) }
    dend_40 { pt3dadd( -12.672, -95.233, -90.6217, 0.52 ) }
    dend_40 { pt3dadd( -13.5496, -95.7529, -91.9463, 0.29 ) }
    dend_40 { pt3dadd( -14.6309, -96.3016, -93.4954, 0.29 ) }
    dend_40 { pt3dadd( -15.6429, -96.7802, -94.9307, 0.29 ) }
    dend_40 { pt3dadd( -16.1888, -97.0457, -95.6952, 0.74 ) }
    dend_40 { pt3dadd( -16.5694, -97.2496, -96.222, 0.74 ) }
    dend_40 { pt3dadd( -17.5642, -97.8484, -97.5516, 0.22 ) }
    dend_40 { pt3dadd( -18.5122, -98.5329, -98.7162, 0.22 ) }
    dend_40 { pt3dadd( -19.3267, -99.2138, -99.7009, 0.22 ) }
    dend_40 { pt3dadd( -19.8228, -99.6929, -100.299, 0.44 ) }
    dend_40 { pt3dadd( -20.3356, -100.217, -100.859, 0.37 ) }
    dend_40 { pt3dadd( -20.9685, -100.895, -101.516, 0.37 ) }
    dend_40 { pt3dadd( -21.6634, -101.681, -102.231, 0.22 ) }
    dend_40 { pt3dadd( -22.5695, -102.74, -103.113, 0.22 ) }
    dend_40 { pt3dadd( -23.258, -103.516, -103.716, 0.59 ) }
    dend_40 { pt3dadd( -24.1582, -104.489, -104.522, 0.52 ) }
    dend_40 { pt3dadd( -24.7996, -105.167, -105.108, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 74/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 20.5513, -103.417, -25.0729, 0.96 ) }
    dend_36 { pt3dadd( 20.8875, -104.303, -24.8388, 0.96 ) }
    dend_36 { pt3dadd( 21.1655, -105.081, -24.6817, 0.44 ) }
    dend_36 { pt3dadd( 21.3506, -105.673, -24.602, 0.37 ) }
    dend_36 { pt3dadd( 21.4574, -106.055, -24.5655, 0.37 ) }
    dend_36 { pt3dadd( 21.5755, -106.516, -24.5306, 0.81 ) }
    dend_36 { pt3dadd( 21.675, -106.939, -24.505, 0.96 ) }
    dend_36 { pt3dadd( 21.7451, -107.33, -24.5099, 0.96 ) }
    dend_36 { pt3dadd( 21.8459, -108.167, -24.5456, 0.22 ) }
    dend_36 { pt3dadd( 21.8808, -108.496, -24.5609, 0.22 ) }
    dend_36 { pt3dadd( 21.9295, -108.905, -24.5859, 0.88 ) }
    dend_36 { pt3dadd( 21.9959, -109.342, -24.6155, 1.11 ) }
    dend_36 { pt3dadd( 22.0673, -109.711, -24.6433, 1.11 ) }
    dend_36 { pt3dadd( 22.16, -110.259, -24.6483, 0.66 ) }
    dend_36 { pt3dadd( 22.2518, -110.939, -24.5993, 0.22 ) }
    dend_36 { pt3dadd( 22.2997, -111.388, -24.5443, 0.22 ) }
    dend_36 { pt3dadd( 22.3512, -111.97, -24.448, 0.44 ) }
    dend_36 { pt3dadd( 22.3757, -112.323, -24.3759, 0.66 ) }
    dend_36 { pt3dadd( 22.4273, -113.525, -24.0754, 0.22 ) }
    dend_36 { pt3dadd( 22.4228, -114.166, -23.8886, 0.22 ) }
    dend_36 { pt3dadd( 22.4022, -114.672, -23.7282, 0.74 ) }
    dend_36 { pt3dadd( 22.3881, -114.885, -23.6605, 0.74 ) }
    dend_36 { pt3dadd( 22.3595, -115.317, -23.5446, 0.52 ) }
    dend_36 { pt3dadd( 22.3482, -115.89, -23.4343, 0.29 ) }
    dend_36 { pt3dadd( 22.3591, -116.524, -23.3271, 0.88 ) }
    dend_36 { pt3dadd( 22.3534, -116.976, -23.2196, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_36 { pt3dadd( 22.3336, -117.281, -23.1236, 1.4 ) }
    dend_36 { pt3dadd( 22.2819, -117.727, -22.9617, 1.18 ) }
    dend_36 { pt3dadd( 22.2168, -118.152, -22.7867, 0.96 ) }
    dend_36 { pt3dadd( 22.0127, -119.365, -22.2525, 0.29 ) }
    dend_36 { pt3dadd( 21.9369, -119.919, -22.0018, 0.52 ) }
    dend_36 { pt3dadd( 21.8953, -120.418, -21.7629, 0.22 ) }
    dend_36 { pt3dadd( 21.8826, -120.917, -21.5223, 0.22 ) }
    dend_36 { pt3dadd( 21.9057, -121.418, -21.2806, 0.59 ) }
    dend_36 { pt3dadd( 21.9694, -121.773, -21.1346, 0.59 ) }
    dend_36 { pt3dadd( 22.1592, -122.367, -20.9353, 0.29 ) }
    dend_36 { pt3dadd( 22.4436, -123.057, -20.7155, 1.11 ) }
    dend_36 { pt3dadd( 22.6037, -123.36, -20.6143, 1.33 ) }
    dend_36 { pt3dadd( 22.7848, -123.65, -20.5164, 1.33 ) }
    dend_36 { pt3dadd( 23.3627, -124.538, -20.2408, 0.22 ) }
    dend_36 { pt3dadd( 23.667, -125.023, -20.1099, 0.59 ) }
    dend_36 { pt3dadd( 23.9038, -125.409, -20.0152, 0.74 ) }
    dend_36 { pt3dadd( 24.2178, -125.894, -19.906, 0.74 ) }
    dend_36 { pt3dadd( 24.8944, -126.857, -19.6765, 0.22 ) }
    dend_36 { pt3dadd( 25.354, -127.465, -19.5247, 0.22 ) }
    dend_36 { pt3dadd( 25.9303, -128.142, -19.337, 0.22 ) }
    dend_36 { pt3dadd( 26.192, -128.443, -19.2574, 0.96 ) }
    dend_36 { pt3dadd( 26.566, -128.872, -19.1324, 0.96 ) }
    dend_36 { pt3dadd( 26.8826, -129.223, -19.0171, 0.81 ) }
    dend_36 { pt3dadd( 27.164, -129.464, -18.9058, 0.52 ) }
    dend_36 { pt3dadd( 27.5423, -129.679, -18.7244, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 25/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 20.5513, -103.417, -25.0729, 0.52 ) }
    dend_35 { pt3dadd( 20.1651, -104.127, -25.1355, 0.52 ) }
    dend_35 { pt3dadd( 19.9511, -104.581, -25.1648, 0.52 ) }
    dend_35 { pt3dadd( 19.7321, -105.113, -25.1891, 0.52 ) }
    dend_35 { pt3dadd( 19.5777, -105.526, -25.2041, 0.59 ) }
    dend_35 { pt3dadd( 19.4342, -105.953, -25.2174, 0.59 ) }
    dend_35 { pt3dadd( 19.3544, -106.216, -25.231, 0.59 ) }
    dend_35 { pt3dadd( 19.2639, -106.649, -25.2517, 0.22 ) }
    dend_35 { pt3dadd( 19.1982, -107.085, -25.2991, 0.22 ) }
    dend_35 { pt3dadd( 19.1559, -107.389, -25.3494, 0.37 ) }
    dend_35 { pt3dadd( 19.0821, -107.905, -25.4587, 0.22 ) }
    dend_35 { pt3dadd( 19.0078, -108.434, -25.5902, 0.37 ) }
    dend_35 { pt3dadd( 18.9858, -108.612, -25.6361, 0.37 ) }
    dend_35 { pt3dadd( 18.8955, -109.45, -25.8498, 0.29 ) }
    dend_35 { pt3dadd( 18.8458, -109.967, -25.9767, 1.11 ) }
    dend_35 { pt3dadd( 18.82, -110.267, -26.0438, 1.4 ) }
    dend_35 { pt3dadd( 18.7978, -110.489, -26.0867, 1.4 ) }
    dend_35 { pt3dadd( 18.7145, -111.125, -26.1484, 0.52 ) }
    dend_35 { pt3dadd( 18.6519, -111.522, -26.1571, 0.44 ) }
    dend_35 { pt3dadd( 18.6069, -111.738, -26.1369, 0.44 ) }
    dend_35 { pt3dadd( 18.5492, -111.952, -26.1094, 0.44 ) }
    dend_35 { pt3dadd( 18.3726, -112.496, -26.0329, 0.22 ) }
    dend_35 { pt3dadd( 18.1446, -113.114, -25.9457, 0.59 ) }
    dend_35 { pt3dadd( 18.0623, -113.317, -25.9177, 0.59 ) }
    dend_35 { pt3dadd( 17.6913, -114.124, -25.8228, 0.22 ) }
    dend_35 { pt3dadd( 17.3829, -114.73, -25.7697, 0.22 ) }
    dend_35 { pt3dadd( 17.1416, -115.155, -25.7438, 0.59 ) }
    dend_35 { pt3dadd( 16.9274, -115.492, -25.7338, 0.88 ) }
    dend_35 { pt3dadd( 16.7203, -115.781, -25.7429, 0.96 ) }
    dend_35 { pt3dadd( 16.2318, -116.371, -25.7645, 0.22 ) }
    dend_35 { pt3dadd( 15.8951, -116.734, -25.7839, 0.22 ) }
    dend_35 { pt3dadd( 15.5763, -117.067, -25.8012, 0.44 ) }
    dend_35 { pt3dadd( 15.3945, -117.256, -25.8073, 0.44 ) }
    dend_35 { pt3dadd( 15.1022, -117.576, -25.8222, 0.29 ) }
    dend_35 { pt3dadd( 14.7293, -118.015, -25.8498, 0.52 ) }
    dend_35 { pt3dadd( 14.1477, -118.773, -25.9069, 0.22 ) }
    dend_35 { pt3dadd( 13.604, -119.521, -25.9793, 0.22 ) }
    dend_35 { pt3dadd( 13.3898, -119.841, -26.0293, 0.59 ) }
    dend_35 { pt3dadd( 13.0548, -120.367, -26.1199, 0.44 ) }
    dend_35 { pt3dadd( 12.8041, -120.783, -26.2014, 1.18 ) }
    dend_35 { pt3dadd( 12.6621, -121.034, -26.2642, 1.4 ) }
    dend_35 { pt3dadd( 12.4283, -121.458, -26.3926, 1.4 ) }
    dend_35 { pt3dadd( 12.1557, -121.985, -26.5943, 1.18 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 68/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 35.9183, 0.949654, -36.464, 0.66 ) }
    dend_31 { pt3dadd( 36.485, 1.2175, -38.4263, 0.66 ) }
    dend_31 { pt3dadd( 36.8764, 1.33901, -39.6672, 0.44 ) }
    dend_31 { pt3dadd( 38.5219, 1.61547, -44.4027, 0.66 ) }
    dend_31 { pt3dadd( 39.3067, 1.63781, -46.532, 0.81 ) }
    dend_31 { pt3dadd( 39.8548, 1.61556, -47.9143, 0.96 ) }
    dend_31 { pt3dadd( 40.4913, 1.55788, -49.3808, 0.37 ) }
    dend_31 { pt3dadd( 40.8271, 1.48215, -50.0802, 0.59 ) }
    dend_31 { pt3dadd( 41.2778, 1.29635, -50.8699, 0.59 ) }
    dend_31 { pt3dadd( 42.4119, 0.626733, -52.2992, 0.44 ) }
    dend_31 { pt3dadd( 43.0039, 0.217406, -52.9609, 0.29 ) }
    dend_31 { pt3dadd( 43.8313, -0.39727, -53.8662, 0.29 ) }
    dend_31 { pt3dadd( 44.4951, -0.894485, -54.6741, 0.29 ) }
    dend_31 { pt3dadd( 45.1955, -1.42463, -55.7507, 0.29 ) }
    dend_31 { pt3dadd( 45.8861, -1.9623, -56.8663, 0.29 ) }
    dend_31 { pt3dadd( 46.6647, -2.60527, -58.1679, 1.33 ) }
    dend_31 { pt3dadd( 47.2745, -3.16371, -59.3116, 1.77 ) }
    dend_31 { pt3dadd( 48.0907, -3.95, -61.0733, 1.4 ) }
    dend_31 { pt3dadd( 49.3741, -5.10153, -64.1971, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 87/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 35.9183, 0.949654, -36.464, 0.59 ) }
    dend_30 { pt3dadd( 36.1803, 0.654362, -36.4999, 0.59 ) }
    dend_30 { pt3dadd( 37.3273, -0.721659, -36.7267, 0.29 ) }
    dend_30 { pt3dadd( 38.1739, -1.7749, -36.9443, 0.22 ) }
    dend_30 { pt3dadd( 38.5098, -2.20861, -37.0626, 0.59 ) }
    dend_30 { pt3dadd( 39.1732, -3.07732, -37.3565, 1.03 ) }
    dend_30 { pt3dadd( 39.6186, -3.66762, -37.5858, 0.74 ) }
    dend_30 { pt3dadd( 40.2065, -4.48322, -37.9596, 0.22 ) }
    dend_30 { pt3dadd( 40.7534, -5.26665, -38.3808, 0.22 ) }
    dend_30 { pt3dadd( 41.5397, -6.36859, -39.0265, 0.88 ) }
    dend_30 { pt3dadd( 42.0237, -7.00857, -39.3999, 1.25 ) }
    dend_30 { pt3dadd( 42.6177, -7.71894, -39.8121, 0.74 ) }
    dend_30 { pt3dadd( 43.305, -8.45613, -40.1997, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_30 { pt3dadd( 43.5943, -8.71864, -40.3159, 0.29 ) }
    dend_30 { pt3dadd( 44.169, -9.15563, -40.4339, 0.74 ) }
    dend_30 { pt3dadd( 45.0907, -9.76544, -40.4903, 0.59 ) }
    dend_30 { pt3dadd( 45.686, -10.1163, -40.4567, 0.22 ) }
    dend_30 { pt3dadd( 46.3754, -10.4554, -40.3449, 0.22 ) }
    dend_30 { pt3dadd( 47.0986, -10.7487, -40.1642, 0.66 ) }
    dend_30 { pt3dadd( 47.5832, -10.9322, -40.0086, 0.81 ) }
    // Section: dend_28, id: dend_28, parent: dend_15 (entry count 7/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 6.05306, 6.55813, -27.8612, 1.11 ) }
    dend_28 { pt3dadd( 5.8619, 5.81927, -28.5367, 1.11 ) }
    dend_28 { pt3dadd( 5.86107, 4.71275, -29.7249, 0.88 ) }
    dend_28 { pt3dadd( 5.99479, 4.21897, -30.3588, 0.74 ) }
    dend_28 { pt3dadd( 6.31607, 3.59464, -31.3091, 0.81 ) }
    dend_28 { pt3dadd( 6.79848, 2.98624, -32.4621, 0.81 ) }
    dend_28 { pt3dadd( 7.27841, 2.53221, -33.513, 1.11 ) }
    dend_28 { pt3dadd( 8.13561, 1.87969, -35.1793, 1.33 ) }
    dend_28 { pt3dadd( 9.03857, 1.32558, -36.7253, 1.4 ) }
    dend_28 { pt3dadd( 10.1689, 0.707693, -38.568, 1.03 ) }
    dend_28 { pt3dadd( 11.6594, -0.0433632, -40.8251, 1.25 ) }
    dend_28 { pt3dadd( 12.7799, -0.55257, -42.3924, 1.4 ) }
    dend_28 { pt3dadd( 13.4835, -0.848925, -43.3062, 1.18 ) }
    dend_28 { pt3dadd( 14.7541, -1.34022, -44.7567, 1.11 ) }
    dend_28 { pt3dadd( 16.2851, -1.92334, -46.289, 1.25 ) }
    dend_28 { pt3dadd( 17.0085, -2.18808, -46.9146, 1.25 ) }
    dend_28 { pt3dadd( 17.9689, -2.5077, -47.6203, 0.81 ) }
    dend_28 { pt3dadd( 19.4951, -2.91374, -48.6307, 1.4 ) }
    dend_28 { pt3dadd( 20.6987, -3.12144, -49.3841, 1.11 ) }
    dend_28 { pt3dadd( 22.3049, -3.27412, -50.2569, 1.33 ) }
    dend_28 { pt3dadd( 23.347, -3.33258, -50.8161, 1.33 ) }
    dend_28 { pt3dadd( 24.5828, -3.39474, -51.5416, 0.44 ) }
    dend_28 { pt3dadd( 25.6075, -3.45778, -52.1957, 0.44 ) }
    dend_28 { pt3dadd( 26.3227, -3.4908, -52.6521, 0.81 ) }
    dend_28 { pt3dadd( 27.1994, -3.52271, -53.1875, 0.81 ) }
    dend_28 { pt3dadd( 29.0612, -3.56184, -54.2879, 0.29 ) }
    dend_28 { pt3dadd( 29.8211, -3.59524, -54.7128, 0.66 ) }
    dend_28 { pt3dadd( 30.5021, -3.64537, -55.0813, 0.66 ) }
    dend_28 { pt3dadd( 31.5102, -3.73411, -55.5523, 1.03 ) }
    dend_28 { pt3dadd( 32.1919, -3.78891, -55.8221, 1.03 ) }
    dend_28 { pt3dadd( 33.7004, -3.87252, -56.3079, 0.29 ) }
    dend_28 { pt3dadd( 34.7787, -3.90354, -56.5516, 0.29 ) }
    dend_28 { pt3dadd( 36.4176, -3.93907, -56.8747, 1.25 ) }
    dend_28 { pt3dadd( 37.5297, -3.95665, -57.0637, 1.62 ) }
    dend_28 { pt3dadd( 38.3018, -3.96491, -57.1839, 1.92 ) }
    dend_28 { pt3dadd( 39.0133, -3.96831, -57.2814, 1.33 ) }
    dend_28 { pt3dadd( 40.1269, -3.96958, -57.4189, 0.81 ) }
    dend_28 { pt3dadd( 41.112, -3.9645, -57.5841, 0.29 ) }
    dend_28 { pt3dadd( 42.0151, -3.98055, -57.7643, 0.29 ) }
    dend_28 { pt3dadd( 42.4966, -4.00281, -57.888, 0.29 ) }
    dend_28 { pt3dadd( 43.5645, -4.07854, -58.1727, 0.74 ) }
    dend_28 { pt3dadd( 44.2504, -4.14192, -58.3589, 0.74 ) }
    dend_28 { pt3dadd( 45.5278, -4.2842, -58.741, 0.74 ) }
    dend_28 { pt3dadd( 46.532, -4.40539, -59.0425, 0.29 ) }
    dend_28 { pt3dadd( 47.1822, -4.47347, -59.2395, 0.29 ) }
    dend_28 { pt3dadd( 48.1645, -4.52635, -59.549, 0.81 ) }
    dend_28 { pt3dadd( 49.254, -4.49652, -59.921, 0.81 ) }
    dend_28 { pt3dadd( 50.3002, -4.35703, -60.3527, 0.59 ) }
    dend_28 { pt3dadd( 51.3321, -4.1026, -60.8729, 0.29 ) }
    dend_28 { pt3dadd( 52.2938, -3.79155, -61.455, 0.29 ) }
    dend_28 { pt3dadd( 53.3495, -3.44037, -62.1813, 0.29 ) }
    dend_28 { pt3dadd( 54.2, -3.15555, -62.8122, 0.66 ) }
    dend_28 { pt3dadd( 55.7244, -2.66494, -63.97, 0.29 ) }
    dend_28 { pt3dadd( 57.2965, -2.21723, -65.1589, 0.29 ) }
    dend_28 { pt3dadd( 58.3166, -1.99659, -65.9222, 0.59 ) }
    dend_28 { pt3dadd( 59.4333, -1.87775, -66.6857, 0.29 ) }
    dend_28 { pt3dadd( 60.1411, -1.90314, -67.0753, 1.03 ) }
    dend_28 { pt3dadd( 60.8037, -2.02038, -67.3453, 1.03 ) }
    dend_28 { pt3dadd( 61.3979, -2.18981, -67.5079, 0.74 ) }
    dend_28 { pt3dadd( 62.2267, -2.46771, -67.6553, 0.44 ) }
    dend_28 { pt3dadd( 63.1033, -2.7524, -67.7617, 0.29 ) }
    dend_28 { pt3dadd( 64.3804, -3.1459, -67.8878, 0.29 ) }
    dend_28 { pt3dadd( 65.5339, -3.53845, -68.0073, 0.96 ) }
    dend_28 { pt3dadd( 66.4637, -3.87498, -68.1062, 1.11 ) }
    dend_28 { pt3dadd( 67.4182, -4.23364, -68.2052, 1.11 ) }
    dend_28 { pt3dadd( 68.4552, -4.66238, -68.2792, 0.81 ) }
    dend_28 { pt3dadd( 69.3878, -5.09619, -68.3119, 0.44 ) }
    dend_28 { pt3dadd( 70.4363, -5.65482, -68.3026, 0.44 ) }
    dend_28 { pt3dadd( 70.8693, -5.91779, -68.2779, 0.59 ) }
    dend_28 { pt3dadd( 71.8266, -6.56921, -68.1983, 0.37 ) }
    dend_28 { pt3dadd( 72.9865, -7.43149, -68.0887, 0.29 ) }
    dend_28 { pt3dadd( 73.4788, -7.81367, -68.0382, 0.29 ) }
    dend_28 { pt3dadd( 74.3046, -8.43944, -67.9434, 1.18 ) }
    dend_28 { pt3dadd( 75.0638, -8.97742, -67.8563, 1.18 ) }
    dend_28 { pt3dadd( 75.6346, -9.34733, -67.798, 1.18 ) }
    dend_28 { pt3dadd( 76.1166, -9.62632, -67.7583, 1.4 ) }
    dend_28 { pt3dadd( 76.6615, -9.89686, -67.728, 1.18 ) }
    dend_28 { pt3dadd( 78.1962, -10.5568, -67.6452, 0.29 ) }
    dend_28 { pt3dadd( 79.0659, -10.8685, -67.6008, 0.29 ) }
    dend_28 { pt3dadd( 80.2699, -11.2596, -67.5385, 0.29 ) }
    dend_28 { pt3dadd( 81.3335, -11.5688, -67.4853, 0.52 ) }
    dend_28 { pt3dadd( 82.0443, -11.75, -67.4534, 0.52 ) }
    dend_28 { pt3dadd( 82.9791, -11.9525, -67.4231, 0.29 ) }
    dend_28 { pt3dadd( 83.7795, -12.0675, -67.426, 0.52 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 91/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 6.05306, 6.55813, -27.8612, 0.81 ) }
    dend_16 { pt3dadd( 4.22847, 6.24704, -28.0825, 0.81 ) }
    dend_16 { pt3dadd( 3.40938, 6.18441, -28.1858, 0.81 ) }
    dend_16 { pt3dadd( 2.30742, 6.1403, -28.412, 0.74 ) }
    dend_16 { pt3dadd( 1.54472, 6.11608, -28.6516, 0.74 ) }
    dend_16 { pt3dadd( 0.570657, 6.09296, -29.0071, 0.96 ) }
    dend_16 { pt3dadd( -0.126705, 6.08646, -29.2829, 1.18 ) }
    dend_16 { pt3dadd( -0.816192, 6.12654, -29.588, 1.33 ) }
    dend_16 { pt3dadd( -2.032, 6.25202, -30.1294, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_16 { pt3dadd( -3.23663, 6.41911, -30.6694, 0.81 ) }
    dend_16 { pt3dadd( -4.19926, 6.54559, -31.1227, 1.33 ) }
    dend_16 { pt3dadd( -5.01216, 6.62494, -31.5159, 1.84 ) }
    dend_16 { pt3dadd( -5.82162, 6.68628, -31.8926, 1.69 ) }
    dend_16 { pt3dadd( -6.57461, 6.74441, -32.1846, 1.69 ) }
    dend_16 { pt3dadd( -6.99685, 6.81237, -32.2643, 1.69 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 6/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 4.901, 47.6729, -14.9971, 0.96 ) }
    dend_11 { pt3dadd( 5.40656, 46.2149, -16.0963, 0.96 ) }
    dend_11 { pt3dadd( 6.20206, 43.9452, -17.4089, 0.88 ) }
    dend_11 { pt3dadd( 6.53297, 42.9814, -17.9285, 0.74 ) }
    dend_11 { pt3dadd( 6.84876, 42.0712, -18.3926, 0.88 ) }
    dend_11 { pt3dadd( 7.22603, 41.0373, -18.9223, 0.59 ) }
    dend_11 { pt3dadd( 7.69632, 39.7363, -19.6079, 0.59 ) }
    dend_11 { pt3dadd( 8.15372, 38.4517, -20.2335, 1.03 ) }
    dend_11 { pt3dadd( 8.59052, 37.3639, -20.8069, 1.03 ) }
    dend_11 { pt3dadd( 9.19188, 36.0788, -21.6656, 1.18 ) }
    dend_11 { pt3dadd( 9.65934, 35.293, -22.3108, 1.55 ) }
    dend_11 { pt3dadd( 10.8419, 33.7359, -23.867, 0.74 ) }
    dend_11 { pt3dadd( 11.79, 32.7447, -24.9945, 0.74 ) }
    dend_11 { pt3dadd( 12.7962, 31.8857, -26.0088, 0.81 ) }
    dend_11 { pt3dadd( 13.7681, 31.1667, -26.8598, 0.66 ) }
    dend_11 { pt3dadd( 14.9289, 30.4353, -27.7355, 0.52 ) }
    dend_11 { pt3dadd( 16.0641, 29.7762, -28.4649, 0.52 ) }
    dend_11 { pt3dadd( 17.3637, 29.0603, -29.2017, 0.44 ) }
    dend_11 { pt3dadd( 18.3217, 28.496, -29.7301, 0.44 ) }
    dend_11 { pt3dadd( 20.0271, 27.3824, -30.6569, 0.96 ) }
    dend_11 { pt3dadd( 21.0143, 26.6935, -31.1802, 1.03 ) }
    dend_11 { pt3dadd( 21.8925, 26.0507, -31.6546, 1.11 ) }
    dend_11 { pt3dadd( 22.9722, 25.2925, -32.2592, 0.81 ) }
    dend_11 { pt3dadd( 24.1567, 24.4503, -32.9585, 0.52 ) }
    dend_11 { pt3dadd( 25.0963, 23.761, -33.4887, 1.18 ) }
    dend_11 { pt3dadd( 25.6667, 23.3021, -33.7706, 1.18 ) }
    dend_11 { pt3dadd( 26.2638, 22.7763, -34.0537, 0.88 ) }
    dend_11 { pt3dadd( 27.5441, 21.62, -34.4989, 0.44 ) }
    dend_11 { pt3dadd( 28.2537, 20.9542, -34.6342, 0.37 ) }
    dend_11 { pt3dadd( 29.0115, 20.2023, -34.6993, 0.29 ) }
    dend_11 { pt3dadd( 29.4499, 19.7467, -34.7225, 0.52 ) }
    dend_11 { pt3dadd( 29.8836, 19.2978, -34.7236, 0.66 ) }
    dend_11 { pt3dadd( 30.8997, 18.2331, -34.6667, 0.44 ) }
    dend_11 { pt3dadd( 31.8575, 17.2128, -34.5466, 0.88 ) }
    dend_11 { pt3dadd( 32.2913, 16.7515, -34.4966, 1.03 ) }
    dend_11 { pt3dadd( 32.7646, 16.2267, -34.447, 0.74 ) }
    dend_11 { pt3dadd( 33.6509, 15.2331, -34.3709, 0.29 ) }
    dend_11 { pt3dadd( 34.2122, 14.5918, -34.3406, 0.29 ) }
    dend_11 { pt3dadd( 34.8048, 13.8992, -34.3701, 0.59 ) }
    dend_11 { pt3dadd( 35.1154, 13.5168, -34.3964, 0.59 ) }
    dend_11 { pt3dadd( 35.5678, 12.9442, -34.4679, 0.44 ) }
    dend_11 { pt3dadd( 36.1204, 12.2403, -34.5965, 0.29 ) }
    dend_11 { pt3dadd( 37.133, 10.9279, -34.9409, 0.29 ) }
    dend_11 { pt3dadd( 38.3041, 9.37502, -35.4299, 0.29 ) }
    dend_11 { pt3dadd( 39.227, 8.10694, -35.9447, 0.29 ) }
    dend_11 { pt3dadd( 39.9582, 7.05553, -36.4175, 1.11 ) }
    dend_11 { pt3dadd( 40.3625, 6.422, -36.7157, 1.47 ) }
    dend_11 { pt3dadd( 40.7262, 5.83728, -37.0021, 1.69 ) }
    dend_11 { pt3dadd( 41.1429, 5.17365, -37.3226, 1.55 ) }
    dend_11 { pt3dadd( 41.9829, 3.93519, -37.8794, 1.4 ) }
    dend_11 { pt3dadd( 43.2557, 2.32561, -38.5975, 0.44 ) }
    dend_11 { pt3dadd( 43.9398, 1.54476, -38.9443, 0.44 ) }
    dend_11 { pt3dadd( 45.4873, -0.10241, -39.7264, 0.44 ) }
    dend_11 { pt3dadd( 46.2794, -0.900663, -40.1154, 0.44 ) }
    dend_11 { pt3dadd( 47.0033, -1.56746, -40.3974, 0.44 ) }
    dend_11 { pt3dadd( 48.6061, -2.87418, -40.8631, 1.25 ) }
    dend_11 { pt3dadd( 49.6916, -3.63769, -41.1322, 1.47 ) }
    dend_11 { pt3dadd( 50.6477, -4.23701, -41.3391, 1.47 ) }
    dend_11 { pt3dadd( 51.7809, -4.89308, -41.5976, 1.03 ) }
    dend_11 { pt3dadd( 54.5408, -6.45837, -42.2485, 0.44 ) }
    dend_11 { pt3dadd( 56.0282, -7.306, -42.5766, 0.59 ) }
    dend_11 { pt3dadd( 57.2427, -7.98825, -42.801, 0.74 ) }
    dend_11 { pt3dadd( 58.4771, -8.65444, -42.9901, 0.81 ) }
    dend_11 { pt3dadd( 61.2943, -10.0731, -43.4255, 0.37 ) }
    dend_11 { pt3dadd( 62.3961, -10.5817, -43.6779, 0.37 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 71/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 4.901, 47.6729, -14.9971, 1.25 ) }
    dend_4 { pt3dadd( 4.31491, 48.8006, -14.7805, 1.25 ) }
    dend_4 { pt3dadd( 3.8156, 49.6795, -14.5892, 1.25 ) }
    dend_4 { pt3dadd( 3.20625, 50.6649, -14.338, 1.4 ) }
    dend_4 { pt3dadd( 2.83851, 51.2353, -14.1814, 1.25 ) }
    dend_4 { pt3dadd( 2.36189, 51.9675, -13.9799, 1.03 ) }
    dend_4 { pt3dadd( 1.59889, 53.1073, -13.6982, 0.74 ) }
    dend_4 { pt3dadd( 1.05171, 53.892, -13.5116, 1.03 ) }
    dend_4 { pt3dadd( 0.499767, 54.6546, -13.3574, 1.55 ) }
    dend_4 { pt3dadd( 0.261304, 54.9874, -13.312, 1.55 ) }
    dend_4 { pt3dadd( -0.320355, 55.8726, -13.2463, 0.88 ) }
    dend_4 { pt3dadd( -0.777299, 56.6875, -13.2405, 0.59 ) }
    dend_4 { pt3dadd( -1.1816, 57.5891, -13.303, 0.96 ) }
    dend_4 { pt3dadd( -1.44847, 58.3798, -13.3753, 1.33 ) }
    dend_4 { pt3dadd( -1.69997, 59.3556, -13.4852, 1.33 ) }
    dend_4 { pt3dadd( -1.88244, 60.2038, -13.5815, 1.33 ) }
    dend_4 { pt3dadd( -2.00599, 60.8879, -13.654, 1.25 ) }
    dend_4 { pt3dadd( -2.11572, 61.5098, -13.7075, 1.25 ) }
    dend_4 { pt3dadd( -2.27387, 62.256, -13.7774, 1.03 ) }
    dend_4 { pt3dadd( -2.48598, 63.007, -13.8502, 1.03 ) }
    dend_4 { pt3dadd( -2.81802, 63.9506, -13.8938, 0.59 ) }
    dend_4 { pt3dadd( -3.04426, 64.5269, -13.8727, 0.59 ) }
    dend_4 { pt3dadd( -3.43626, 65.5052, -13.7591, 1.11 ) }
    dend_4 { pt3dadd( -3.77652, 66.343, -13.5728, 1.47 ) }
    dend_4 { pt3dadd( -4.25099, 67.5085, -13.2159, 1.25 ) }
    dend_4 { pt3dadd( -4.68673, 68.5314, -12.8254, 1.11 ) }
    dend_4 { pt3dadd( -5.09846, 69.4155, -12.4291, 0.96 ) }
    dend_4 { pt3dadd( -5.5538, 70.3095, -12.0003, 0.81 ) }
    dend_4 { pt3dadd( -6.04807, 71.1805, -11.5429, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_4 { pt3dadd( -6.48648, 71.8407, -11.1832, 0.74 ) }
    dend_4 { pt3dadd( -7.01229, 72.4911, -10.8414, 0.52 ) }
    dend_4 { pt3dadd( -7.76095, 73.2384, -10.5131, 0.52 ) }
    dend_4 { pt3dadd( -8.4495, 73.7691, -10.3118, 0.52 ) }
    dend_4 { pt3dadd( -9.0852, 74.1232, -10.2027, 0.88 ) }
    dend_4 { pt3dadd( -9.79006, 74.4018, -10.1523, 1.18 ) }
    dend_4 { pt3dadd( -10.2581, 74.5181, -10.1395, 1.18 ) }
    dend_4 { pt3dadd( -10.989, 74.6125, -10.1508, 1.18 ) }
    dend_4 { pt3dadd( -11.9343, 74.6348, -10.2082, 0.96 ) }
    dend_4 { pt3dadd( -12.9725, 74.5748, -10.2409, 0.74 ) }
    dend_4 { pt3dadd( -13.9037, 74.4801, -10.2518, 0.74 ) }
    dend_4 { pt3dadd( -14.78, 74.3767, -10.2157, 1.11 ) }
    dend_4 { pt3dadd( -15.7779, 74.2726, -10.1219, 1.11 ) }
    dend_4 { pt3dadd( -16.501, 74.2169, -10.017, 1.11 ) }
    dend_4 { pt3dadd( -17.9296, 74.1471, -9.74374, 1.03 ) }
    dend_4 { pt3dadd( -18.8372, 74.1319, -9.51571, 1.69 ) }
    dend_4 { pt3dadd( -19.6647, 74.1349, -9.28274, 2.06 ) }
    dend_4 { pt3dadd( -20.6154, 74.1698, -8.98665, 2.14 ) }
    dend_4 { pt3dadd( -21.2784, 74.2198, -8.76252, 2.28 ) }
    dend_4 { pt3dadd( -21.9712, 74.3004, -8.52558, 2.65 ) }
    dend_4 { pt3dadd( -22.4899, 74.3926, -8.40294, 2.65 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 21/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -77.2722, -11.522, 23.9108, 0.74 ) }
    dend_60 { pt3dadd( -81.2058, -11.4779, 26.4649, 0.74 ) }
    dend_60 { pt3dadd( -81.8697, -11.3918, 26.8541, 0.74 ) }
    dend_60 { pt3dadd( -82.9854, -11.1484, 27.3985, 0.74 ) }
    dend_60 { pt3dadd( -84.0525, -10.8885, 27.8544, 0.74 ) }
    dend_60 { pt3dadd( -85.1442, -10.6638, 28.2133, 0.88 ) }
    dend_60 { pt3dadd( -86.1422, -10.4774, 28.4656, 0.66 ) }
    dend_60 { pt3dadd( -87.6884, -10.1667, 28.5268, 0.81 ) }
    dend_60 { pt3dadd( -89.1098, -9.84296, 28.6138, 0.81 ) }
    dend_60 { pt3dadd( -90.236, -9.60136, 28.7308, 0.88 ) }
    dend_60 { pt3dadd( -92.0944, -9.31136, 29.0477, 0.74 ) }
    dend_60 { pt3dadd( -93.0342, -9.25185, 29.2841, 0.74 ) }
    dend_60 { pt3dadd( -93.794, -9.27773, 29.5871, 0.74 ) }
    dend_60 { pt3dadd( -95.3278, -9.43949, 30.4208, 0.74 ) }
    dend_60 { pt3dadd( -96.3341, -9.51266, 31.1695, 0.66 ) }
    dend_60 { pt3dadd( -97.2392, -9.51192, 31.9853, 0.52 ) }
    dend_60 { pt3dadd( -97.8369, -9.4775, 32.6189, 0.74 ) }
    dend_60 { pt3dadd( -98.9453, -9.45841, 33.8642, 0.74 ) }
    dend_60 { pt3dadd( -99.424, -9.47243, 34.3959, 0.59 ) }
    dend_60 { pt3dadd( -100.378, -9.53637, 35.3131, 0.52 ) }
    dend_60 { pt3dadd( -101.0, -9.57578, 35.8122, 0.52 ) }
    dend_60 { pt3dadd( -101.647, -9.65242, 36.2449, 0.52 ) }
    dend_60 { pt3dadd( -102.494, -9.84181, 36.7257, 0.96 ) }
    dend_60 { pt3dadd( -103.12, -10.051, 37.0326, 0.96 ) }
    dend_60 { pt3dadd( -104.274, -10.5192, 37.5413, 0.52 ) }
    dend_60 { pt3dadd( -105.333, -11.0196, 37.9278, 0.52 ) }
    dend_60 { pt3dadd( -106.437, -11.5647, 38.2542, 0.44 ) }
    dend_60 { pt3dadd( -107.615, -12.1677, 38.5406, 0.44 ) }
    dend_60 { pt3dadd( -108.345, -12.5619, 38.7023, 0.44 ) }
    dend_60 { pt3dadd( -108.855, -12.8736, 38.8132, 0.44 ) }
    dend_60 { pt3dadd( -109.895, -13.5697, 39.0467, 0.81 ) }
    dend_60 { pt3dadd( -110.646, -14.0748, 39.2202, 0.81 ) }
    dend_60 { pt3dadd( -111.62, -14.6822, 39.4787, 0.37 ) }
    dend_60 { pt3dadd( -112.646, -15.3077, 39.8236, 0.29 ) }
    dend_60 { pt3dadd( -113.447, -15.8197, 40.1823, 0.29 ) }
    dend_60 { pt3dadd( -114.26, -16.3549, 40.6313, 0.29 ) }
    dend_60 { pt3dadd( -115.213, -16.9621, 41.2905, 0.52 ) }
    dend_60 { pt3dadd( -115.989, -17.4465, 41.8951, 0.52 ) }
    dend_60 { pt3dadd( -116.786, -17.9187, 42.5598, 0.52 ) }
    dend_60 { pt3dadd( -117.708, -18.4573, 43.3909, 0.52 ) }
    dend_60 { pt3dadd( -118.175, -18.7406, 43.8613, 0.74 ) }
    dend_60 { pt3dadd( -119.098, -19.3832, 44.9314, 0.81 ) }
    dend_60 { pt3dadd( -119.811, -19.9275, 45.8343, 0.22 ) }
    dend_60 { pt3dadd( -120.308, -20.3149, 46.464, 0.22 ) }
    dend_60 { pt3dadd( -120.606, -20.5168, 46.8335, 0.22 ) }
    dend_60 { pt3dadd( -121.089, -20.789, 47.35, 0.44 ) }
    dend_60 { pt3dadd( -121.41, -20.9721, 47.6923, 0.29 ) }
    dend_60 { pt3dadd( -131.902, -22.8068, 51.7052, 0.29 ) }
    dend_60 { pt3dadd( -141.656, -25.5962, 56.9129, 0.29 ) }
    dend_60 { pt3dadd( -151.062, -30.7364, 60.9436, 0.29 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 71/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -77.2722, -11.522, 23.9108, 0.81 ) }
    dend_57 { pt3dadd( -78.7726, -10.9721, 21.3498, 0.81 ) }
    dend_57 { pt3dadd( -79.372, -10.8433, 20.3703, 0.88 ) }
    dend_57 { pt3dadd( -79.8704, -10.8239, 19.6368, 0.88 ) }
    dend_57 { pt3dadd( -80.4439, -10.8698, 18.8552, 0.66 ) }
    dend_57 { pt3dadd( -80.8732, -10.9602, 18.2875, 0.66 ) }
    dend_57 { pt3dadd( -81.9148, -11.2942, 16.9368, 0.88 ) }
    dend_57 { pt3dadd( -82.6769, -11.6559, 16.08, 0.88 ) }
    dend_57 { pt3dadd( -83.5404, -12.1709, 15.1169, 0.66 ) }
    dend_57 { pt3dadd( -84.1006, -12.5514, 14.5273, 0.66 ) }
    dend_57 { pt3dadd( -85.2105, -13.415, 13.434, 0.81 ) }
    dend_57 { pt3dadd( -85.9076, -14.0087, 12.8218, 0.81 ) }
    dend_57 { pt3dadd( -86.5506, -14.5973, 12.3503, 0.74 ) }
    dend_57 { pt3dadd( -87.0631, -15.1069, 11.9864, 0.52 ) }
    dend_57 { pt3dadd( -87.5242, -15.6016, 11.6622, 0.52 ) }
    dend_57 { pt3dadd( -88.0722, -16.1827, 11.3076, 0.59 ) }
    dend_57 { pt3dadd( -88.6275, -16.7213, 10.9822, 0.66 ) }
    dend_57 { pt3dadd( -89.3742, -17.3708, 10.5332, 0.52 ) }
    dend_57 { pt3dadd( -90.2005, -18.0088, 10.0342, 0.52 ) }
    dend_57 { pt3dadd( -91.2204, -18.6639, 9.50225, 0.96 ) }
    dend_57 { pt3dadd( -91.704, -18.9248, 9.23932, 0.96 ) }
    dend_57 { pt3dadd( -92.29, -19.189, 8.91034, 0.52 ) }
    dend_57 { pt3dadd( -92.6974, -19.3504, 8.68155, 0.52 ) }
    dend_57 { pt3dadd( -93.4205, -19.6127, 8.2941, 0.52 ) }
    dend_57 { pt3dadd( -94.7087, -20.0816, 7.6471, 0.52 ) }
    dend_57 { pt3dadd( -95.8479, -20.554, 7.04148, 0.96 ) }
    dend_57 { pt3dadd( -96.6092, -20.916, 6.5749, 0.96 ) }
    dend_57 { pt3dadd( -97.359, -21.2801, 6.07443, 0.81 ) }
    dend_57 { pt3dadd( -97.6856, -21.4365, 5.82391, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_57 { pt3dadd( -98.2941, -21.7319, 5.2367, 0.66 ) }
    dend_57 { pt3dadd( -99.0224, -22.1192, 4.40909, 0.66 ) }
    dend_57 { pt3dadd( -99.7676, -22.5404, 3.53541, 0.37 ) }
    dend_57 { pt3dadd( -100.231, -22.821, 2.99574, 0.81 ) }
    dend_57 { pt3dadd( -100.806, -23.2088, 2.31191, 1.18 ) }
    dend_57 { pt3dadd( -101.869, -23.9765, 1.0591, 0.96 ) }
    dend_57 { pt3dadd( -102.458, -24.4119, 0.407341, 0.66 ) }
    dend_57 { pt3dadd( -102.851, -24.7002, 0.0246277, 0.66 ) }
    dend_57 { pt3dadd( -103.52, -25.2062, -0.545728, 0.96 ) }
    dend_57 { pt3dadd( -104.218, -25.7239, -1.0711, 1.03 ) }
    dend_57 { pt3dadd( -104.982, -26.2162, -1.53457, 0.88 ) }
    dend_57 { pt3dadd( -105.961, -26.7505, -2.0308, 0.66 ) }
    dend_57 { pt3dadd( -106.702, -27.0977, -2.38702, 0.88 ) }
    dend_57 { pt3dadd( -107.796, -27.5631, -2.87621, 1.11 ) }
    dend_57 { pt3dadd( -108.424, -27.818, -3.11594, 1.11 ) }
    dend_57 { pt3dadd( -109.419, -28.1903, -3.42128, 1.25 ) }
    dend_57 { pt3dadd( -110.316, -28.5001, -3.65659, 1.4 ) }
    dend_57 { pt3dadd( -110.81, -28.6636, -3.76603, 1.4 ) }
    dend_57 { pt3dadd( -111.611, -28.9278, -3.92819, 1.33 ) }
    dend_57 { pt3dadd( -112.527, -29.2366, -4.09463, 0.66 ) }
    dend_57 { pt3dadd( -113.418, -29.5865, -4.24861, 0.66 ) }
    dend_57 { pt3dadd( -114.356, -30.0488, -4.37999, 0.88 ) }
    dend_57 { pt3dadd( -114.914, -30.3785, -4.40707, 1.4 ) }
    dend_57 { pt3dadd( -115.246, -30.6072, -4.40286, 1.62 ) }
    dend_57 { pt3dadd( -115.547, -30.8376, -4.3794, 1.62 ) }
    dend_57 { pt3dadd( -115.94, -31.1535, -4.31315, 1.62 ) }
    dend_57 { pt3dadd( -116.728, -31.7704, -4.09317, 0.96 ) }
    dend_57 { pt3dadd( -117.563, -32.3937, -3.8493, 0.52 ) }
    dend_57 { pt3dadd( -117.926, -32.6272, -3.77523, 0.52 ) }
    dend_57 { pt3dadd( -118.492, -32.9405, -3.71128, 0.74 ) }
    dend_57 { pt3dadd( -118.953, -33.1549, -3.70591, 0.74 ) }
    dend_57 { pt3dadd( -119.801, -33.4895, -3.76677, 0.52 ) }
    dend_57 { pt3dadd( -120.495, -33.7407, -3.85262, 0.52 ) }
    dend_57 { pt3dadd( -121.42, -34.0917, -3.98892, 0.88 ) }
    dend_57 { pt3dadd( -122.055, -34.3461, -4.07008, 0.88 ) }
    dend_57 { pt3dadd( -123.181, -34.8068, -4.1882, 0.59 ) }
    dend_57 { pt3dadd( -123.98, -35.1405, -4.2581, 0.59 ) }
    dend_57 { pt3dadd( -124.952, -35.5748, -4.30329, 1.11 ) }
    dend_57 { pt3dadd( -125.576, -35.853, -4.29721, 1.33 ) }
    dend_57 { pt3dadd( -126.303, -36.1706, -4.26058, 1.18 ) }
    dend_57 { pt3dadd( -127.386, -36.632, -4.19025, 0.44 ) }
    dend_57 { pt3dadd( -127.925, -36.8447, -4.14546, 0.44 ) }
    dend_57 { pt3dadd( -128.64, -37.0796, -4.0953, 0.44 ) }
    dend_57 { pt3dadd( -129.491, -37.3032, -4.04794, 0.44 ) }
    dend_57 { pt3dadd( -130.472, -37.5213, -3.98704, 0.66 ) }
    dend_57 { pt3dadd( -131.035, -37.6302, -3.93597, 0.66 ) }
    dend_57 { pt3dadd( -131.894, -37.7686, -3.84272, 0.88 ) }
    dend_57 { pt3dadd( -132.911, -37.8972, -3.72327, 0.96 ) }
    dend_57 { pt3dadd( -133.346, -37.9404, -3.67114, 0.96 ) }
    dend_57 { pt3dadd( -134.109, -38.023, -3.56946, 0.81 ) }
    dend_57 { pt3dadd( -134.967, -38.1084, -3.47236, 1.03 ) }
    dend_57 { pt3dadd( -135.917, -38.1899, -3.40149, 1.47 ) }
    dend_57 { pt3dadd( -136.652, -38.2489, -3.38373, 1.69 ) }
    dend_57 { pt3dadd( -137.149, -38.2758, -3.3863, 1.69 ) }
    dend_57 { pt3dadd( -138.021, -38.2818, -3.43166, 1.25 ) }
    dend_57 { pt3dadd( -139.202, -38.2334, -3.55455, 0.74 ) }
    dend_57 { pt3dadd( -139.939, -38.1799, -3.65801, 0.74 ) }
    dend_57 { pt3dadd( -141.021, -38.0742, -3.83513, 1.18 ) }
    dend_57 { pt3dadd( -141.445, -38.0305, -3.90898, 1.18 ) }
    dend_57 { pt3dadd( -142.212, -37.9529, -4.05334, 0.88 ) }
    dend_57 { pt3dadd( -143.351, -37.8598, -4.28086, 0.52 ) }
    dend_57 { pt3dadd( -143.957, -37.8484, -4.39841, 0.52 ) }
    dend_57 { pt3dadd( -144.359, -37.8644, -4.47421, 0.74 ) }
    dend_57 { pt3dadd( -145.137, -37.9515, -4.61027, 0.96 ) }
    dend_57 { pt3dadd( -145.574, -38.0434, -4.68716, 1.18 ) }
    dend_57 { pt3dadd( -146.187, -38.2166, -4.79579, 1.18 ) }
    dend_57 { pt3dadd( -147.21, -38.5294, -4.97551, 0.96 ) }
    dend_57 { pt3dadd( -147.763, -38.6799, -5.06566, 0.96 ) }
    dend_57 { pt3dadd( -148.743, -38.904, -5.20261, 0.37 ) }
    dend_57 { pt3dadd( -149.537, -39.0407, -5.28925, 0.29 ) }
    dend_57 { pt3dadd( -149.954, -39.0882, -5.3136, 0.44 ) }
    dend_57 { pt3dadd( -150.573, -39.1041, -5.31285, 0.59 ) }
    dend_57 { pt3dadd( -151.254, -39.0646, -5.25974, 0.74 ) }
    dend_57 { pt3dadd( -151.652, -39.0367, -5.2065, 0.74 ) }
    dend_57 { pt3dadd( -152.248, -38.9873, -5.09308, 0.74 ) }
    dend_57 { pt3dadd( -152.975, -38.942, -4.91662, 0.44 ) }
    dend_57 { pt3dadd( -153.687, -38.9324, -4.72825, 0.44 ) }
    dend_57 { pt3dadd( -154.168, -38.9493, -4.59962, 0.44 ) }
    dend_57 { pt3dadd( -155.431, -39.021, -4.2759, 0.81 ) }
    dend_57 { pt3dadd( -156.156, -39.0602, -4.1037, 1.4 ) }
    dend_57 { pt3dadd( -157.187, -39.1303, -3.88219, 1.55 ) }
    dend_57 { pt3dadd( -157.778, -39.1764, -3.7454, 1.55 ) }
    dend_57 { pt3dadd( -158.261, -39.2233, -3.6364, 1.55 ) }
    dend_57 { pt3dadd( -158.986, -39.288, -3.48543, 1.33 ) }
    dend_57 { pt3dadd( -159.453, -39.3276, -3.39509, 1.03 ) }
    dend_57 { pt3dadd( -160.314, -39.4002, -3.26068, 0.44 ) }
    dend_57 { pt3dadd( -161.351, -39.4382, -3.15218, 0.29 ) }
    dend_57 { pt3dadd( -161.953, -39.437, -3.11371, 0.74 ) }
    dend_57 { pt3dadd( -162.504, -39.4212, -3.09998, 0.88 ) }
    dend_57 { pt3dadd( -163.082, -39.403, -3.11279, 0.74 ) }
    dend_57 { pt3dadd( -163.802, -39.3768, -3.18413, 0.37 ) }
    dend_57 { pt3dadd( -164.646, -39.3396, -3.364, 0.37 ) }
    dend_57 { pt3dadd( -165.405, -39.3088, -3.59826, 0.81 ) }
    dend_57 { pt3dadd( -166.017, -39.2747, -3.81107, 1.62 ) }
    dend_57 { pt3dadd( -166.76, -39.2295, -4.09589, 1.92 ) }
    dend_57 { pt3dadd( -167.819, -39.1143, -4.55349, 1.18 ) }
    dend_57 { pt3dadd( -168.528, -39.0181, -4.87821, 0.66 ) }
    dend_57 { pt3dadd( -169.201, -38.9049, -5.1824, 0.66 ) }
    dend_57 { pt3dadd( -169.924, -38.7176, -5.52152, 0.96 ) }
    dend_57 { pt3dadd( -170.331, -38.576, -5.71636, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_57 { pt3dadd( -171.151, -38.2258, -6.10425, 0.29 ) }
    dend_57 { pt3dadd( -171.955, -37.8609, -6.45031, 0.29 ) }
    dend_57 { pt3dadd( -172.813, -37.4944, -6.77699, 0.74 ) }
    dend_57 { pt3dadd( -173.452, -37.258, -6.99784, 0.96 ) }
    dend_57 { pt3dadd( -173.874, -37.1261, -7.12901, 0.96 ) }
    dend_57 { pt3dadd( -174.36, -36.9999, -7.26476, 0.96 ) }
    dend_57 { pt3dadd( -175.201, -36.8127, -7.47931, 0.22 ) }
    dend_57 { pt3dadd( -175.759, -36.6944, -7.60583, 0.22 ) }
    dend_57 { pt3dadd( -176.58, -36.5474, -7.75694, 0.59 ) }
    dend_57 { pt3dadd( -177.085, -36.4842, -7.82781, 0.74 ) }
    dend_57 { pt3dadd( -177.977, -36.4156, -7.91851, 0.22 ) }
    dend_57 { pt3dadd( -178.563, -36.3894, -7.9619, 0.22 ) }
    dend_57 { pt3dadd( -179.391, -36.351, -8.01534, 0.22 ) }
    dend_57 { pt3dadd( -180.116, -36.328, -8.06363, 0.22 ) }
    dend_57 { pt3dadd( -180.668, -36.3117, -8.09775, 0.96 ) }
    dend_57 { pt3dadd( -181.315, -36.2889, -8.13534, 1.03 ) }
    dend_57 { pt3dadd( -182.052, -36.2422, -8.18787, 0.74 ) }
    dend_57 { pt3dadd( -182.657, -36.1597, -8.25841, 0.74 ) }
    dend_57 { pt3dadd( -183.293, -36.0006, -8.37698, 0.96 ) }
    dend_57 { pt3dadd( -183.993, -35.7703, -8.57617, 0.96 ) }
    dend_57 { pt3dadd( -184.971, -35.4021, -8.96492, 0.29 ) }
    dend_57 { pt3dadd( -185.498, -35.2225, -9.2333, 0.29 ) }
    dend_57 { pt3dadd( -186.4, -34.9864, -9.76799, 0.37 ) }
    dend_57 { pt3dadd( -187.021, -34.8756, -10.1709, 0.74 ) }
    dend_57 { pt3dadd( -187.905, -34.7792, -10.7849, 1.4 ) }
    dend_57 { pt3dadd( -188.552, -34.768, -11.2489, 1.62 ) }
    dend_57 { pt3dadd( -189.843, -34.8275, -12.1711, 0.44 ) }
    dend_57 { pt3dadd( -190.567, -34.8898, -12.656, 0.29 ) }
    dend_57 { pt3dadd( -190.81, -34.914, -12.8027, 0.74 ) }
    dend_57 { pt3dadd( -191.157, -34.9374, -12.983, 0.74 ) }
    dend_57 { pt3dadd( -191.646, -34.9328, -13.1444, 0.59 ) }
    dend_57 { pt3dadd( -192.341, -34.8868, -13.2709, 0.37 ) }
    dend_57 { pt3dadd( -193.006, -34.7922, -13.3369, 0.29 ) }
    dend_57 { pt3dadd( -193.611, -34.6811, -13.3816, 0.29 ) }
    dend_57 { pt3dadd( -194.504, -34.4707, -13.4617, 0.29 ) }
    dend_57 { pt3dadd( -196.13, -34.0643, -13.6645, 0.29 ) }
    dend_57 { pt3dadd( -196.985, -33.8392, -13.7795, 0.29 ) }
    dend_57 { pt3dadd( -197.964, -33.5666, -13.9214, 0.29 ) }
    dend_57 { pt3dadd( -198.95, -33.2949, -14.0718, 0.29 ) }
    dend_57 { pt3dadd( -200.383, -32.8923, -14.3178, 0.29 ) }
    dend_57 { pt3dadd( -201.577, -32.5274, -14.5612, 0.96 ) }
    dend_57 { pt3dadd( -202.434, -32.2528, -14.768, 1.4 ) }
    dend_57 { pt3dadd( -203.069, -32.0519, -14.9284, 1.77 ) }
    dend_57 { pt3dadd( -204.45, -31.6539, -15.2573, 0.96 ) }
    dend_57 { pt3dadd( -205.468, -31.3904, -15.4757, 0.66 ) }
    dend_57 { pt3dadd( -206.418, -31.1812, -15.6429, 0.88 ) }
    dend_57 { pt3dadd( -207.523, -30.9185, -15.8047, 1.18 ) }
    // Section: dend_25, id: dend_25, parent: dend_16 (entry count 47/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -6.99685, 6.81237, -32.2643, 1.03 ) }
    dend_25 { pt3dadd( -6.75009, 7.04169, -36.5153, 1.03 ) }
    dend_25 { pt3dadd( -6.46281, 7.08624, -38.771, 1.11 ) }
    dend_25 { pt3dadd( -6.10779, 6.97963, -41.094, 1.47 ) }
    dend_25 { pt3dadd( -5.76656, 6.76133, -43.755, 1.03 ) }
    dend_25 { pt3dadd( -5.58045, 6.55002, -45.7142, 0.96 ) }
    dend_25 { pt3dadd( -5.48604, 6.36849, -47.2087, 1.33 ) }
    dend_25 { pt3dadd( -5.42189, 5.9875, -49.6299, 1.25 ) }
    dend_25 { pt3dadd( -5.50461, 5.34045, -52.7573, 0.59 ) }
    dend_25 { pt3dadd( -5.73608, 4.54494, -55.7551, 0.96 ) }
    dend_25 { pt3dadd( -5.98808, 3.98545, -57.5232, 1.62 ) }
    dend_25 { pt3dadd( -6.14188, 3.68522, -58.3606, 1.84 ) }
    dend_25 { pt3dadd( -6.49803, 2.99726, -60.2107, 1.55 ) }
    dend_25 { pt3dadd( -6.87551, 2.1822, -62.3216, 0.88 ) }
    dend_25 { pt3dadd( -7.32491, 1.0724, -65.2459, 0.74 ) }
    dend_25 { pt3dadd( -7.43575, 0.730321, -66.1147, 1.4 ) }
    dend_25 { pt3dadd( -7.74955, -0.357879, -68.8413, 1.47 ) }
    dend_25 { pt3dadd( -8.08911, -1.62013, -71.9415, 0.96 ) }
    dend_25 { pt3dadd( -8.27636, -2.32485, -73.6085, 1.18 ) }
    dend_25 { pt3dadd( -8.52418, -2.91188, -75.0808, 0.74 ) }
    dend_25 { pt3dadd( -8.68116, -3.1495, -75.6711, 0.74 ) }
    dend_25 { pt3dadd( -9.0748, -3.6084, -76.8187, 1.33 ) }
    dend_25 { pt3dadd( -9.6997, -4.1575, -78.1792, 1.84 ) }
    dend_25 { pt3dadd( -10.7336, -4.88205, -79.973, 1.84 ) }
    dend_25 { pt3dadd( -12.0391, -5.59142, -82.0104, 0.81 ) }
    dend_25 { pt3dadd( -13.02, -6.00141, -83.4261, 1.25 ) }
    dend_25 { pt3dadd( -13.6213, -6.14712, -84.2212, 1.69 ) }
    dend_25 { pt3dadd( -14.448, -6.20197, -85.1877, 0.44 ) }
    dend_25 { pt3dadd( -15.1325, -6.18332, -85.8868, 0.44 ) }
    dend_25 { pt3dadd( -15.8139, -6.09801, -86.6476, 0.44 ) }
    dend_25 { pt3dadd( -16.2785, -6.00919, -87.2893, 0.44 ) }
    dend_25 { pt3dadd( -16.5754, -5.95096, -87.8093, 0.66 ) }
    dend_25 { pt3dadd( -17.3013, -5.86441, -89.2468, 0.81 ) }
    dend_25 { pt3dadd( -17.8479, -5.82936, -90.4565, 1.25 ) }
    dend_25 { pt3dadd( -19.1555, -5.77014, -93.2731, 0.74 ) }
    dend_25 { pt3dadd( -19.62, -5.76946, -94.3096, 0.52 ) }
    dend_25 { pt3dadd( -20.0737, -5.76964, -95.3595, 0.52 ) }
    dend_25 { pt3dadd( -20.6191, -5.73026, -96.6258, 0.81 ) }
    dend_25 { pt3dadd( -21.2296, -5.60302, -97.9284, 0.96 ) }
    dend_25 { pt3dadd( -21.9714, -5.36052, -99.2975, 1.47 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 87/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -6.99685, 6.81237, -32.2643, 1.84 ) }
    dend_17 { pt3dadd( -7.27753, 6.93566, -32.314, 1.84 ) }
    dend_17 { pt3dadd( -8.5157, 7.45321, -32.539, 1.99 ) }
    dend_17 { pt3dadd( -9.37626, 7.77146, -32.7066, 1.84 ) }
    dend_17 { pt3dadd( -10.2044, 7.9771, -32.9009, 1.55 ) }
    dend_17 { pt3dadd( -11.2897, 8.14425, -33.1684, 1.03 ) }
    dend_17 { pt3dadd( -12.4682, 8.24412, -33.4608, 0.59 ) }
    dend_17 { pt3dadd( -13.4431, 8.23934, -33.7024, 0.44 ) }
    dend_17 { pt3dadd( -14.2032, 8.16784, -33.8643, 0.44 ) }
    dend_17 { pt3dadd( -15.9187, 7.89817, -34.3383, 0.44 ) }
    dend_17 { pt3dadd( -16.8061, 7.70878, -34.6183, 0.81 ) }
    dend_17 { pt3dadd( -17.5119, 7.52077, -34.8518, 1.03 ) }
    dend_17 { pt3dadd( -18.5787, 7.20391, -35.23, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_17 { pt3dadd( -19.7644, 6.86416, -35.67, 0.81 ) }
    dend_17 { pt3dadd( -21.9856, 6.34102, -36.4988, 1.25 ) }
    dend_17 { pt3dadd( -23.1021, 6.14146, -36.912, 1.25 ) }
    dend_17 { pt3dadd( -24.373, 5.96989, -37.3818, 1.25 ) }
    dend_17 { pt3dadd( -25.51, 5.8715, -37.7815, 1.03 ) }
    dend_17 { pt3dadd( -26.4782, 5.83142, -38.1102, 0.81 ) }
    dend_17 { pt3dadd( -27.6253, 5.82315, -38.4553, 0.81 ) }
    dend_17 { pt3dadd( -28.6043, 5.84898, -38.6644, 0.81 ) }
    dend_17 { pt3dadd( -30.1139, 5.89941, -38.9974, 1.11 ) }
    dend_17 { pt3dadd( -31.586, 5.91264, -39.2431, 1.11 ) }
    dend_17 { pt3dadd( -32.977, 5.84588, -39.4101, 1.03 ) }
    dend_17 { pt3dadd( -33.9485, 5.71784, -39.4868, 1.25 ) }
    dend_17 { pt3dadd( -35.0455, 5.47843, -39.5399, 1.25 ) }
    dend_17 { pt3dadd( -36.8475, 4.94158, -39.5905, 1.11 ) }
    dend_17 { pt3dadd( -38.836, 4.21172, -39.6148, 1.03 ) }
    dend_17 { pt3dadd( -39.957, 3.77332, -39.6134, 1.18 ) }
    dend_17 { pt3dadd( -41.0473, 3.37857, -39.6376, 1.33 ) }
    dend_17 { pt3dadd( -41.8557, 3.14646, -39.7136, 1.33 ) }
    dend_17 { pt3dadd( -42.9416, 2.98044, -39.9069, 1.03 ) }
    dend_17 { pt3dadd( -44.027, 3.00687, -40.1886, 0.96 ) }
    dend_17 { pt3dadd( -44.8181, 3.10738, -40.4902, 1.03 ) }
    dend_17 { pt3dadd( -46.1855, 3.34143, -40.9894, 1.18 ) }
    dend_17 { pt3dadd( -47.1519, 3.49388, -41.3394, 1.03 ) }
    dend_17 { pt3dadd( -48.2286, 3.62339, -41.724, 1.03 ) }
    dend_17 { pt3dadd( -49.0462, 3.6593, -42.034, 1.03 ) }
    dend_17 { pt3dadd( -50.1674, 3.60398, -42.4546, 1.03 ) }
    dend_17 { pt3dadd( -51.5381, 3.41298, -42.9019, 0.88 ) }
    dend_17 { pt3dadd( -53.0292, 3.09387, -43.2725, 0.74 ) }
    dend_17 { pt3dadd( -54.068, 2.84005, -43.4795, 0.74 ) }
    dend_17 { pt3dadd( -55.3831, 2.51579, -43.684, 0.81 ) }
    dend_17 { pt3dadd( -56.4175, 2.28468, -43.7713, 0.96 ) }
    dend_17 { pt3dadd( -57.4707, 2.06855, -43.7484, 0.96 ) }
    dend_17 { pt3dadd( -58.6349, 1.8223, -43.6426, 0.81 ) }
    dend_17 { pt3dadd( -59.6384, 1.57401, -43.4644, 1.18 ) }
    dend_17 { pt3dadd( -60.5978, 1.29236, -43.2566, 1.18 ) }
    dend_17 { pt3dadd( -61.9461, 0.828319, -42.9314, 0.74 ) }
    dend_17 { pt3dadd( -63.4063, 0.221784, -42.6284, 0.96 ) }
    dend_17 { pt3dadd( -64.1713, -0.14507, -42.5145, 1.25 ) }
    dend_17 { pt3dadd( -65.2869, -0.733359, -42.3974, 1.25 ) }
    dend_17 { pt3dadd( -66.1869, -1.2389, -42.3467, 1.03 ) }
    dend_17 { pt3dadd( -67.3572, -1.90262, -42.354, 0.66 ) }
    dend_17 { pt3dadd( -68.562, -2.58605, -42.4655, 0.96 ) }
    dend_17 { pt3dadd( -69.5383, -3.11685, -42.6266, 1.18 ) }
    dend_17 { pt3dadd( -70.4748, -3.60497, -42.8042, 1.18 ) }
    dend_17 { pt3dadd( -71.3061, -4.01012, -42.9817, 1.03 ) }
    dend_17 { pt3dadd( -72.3649, -4.50087, -43.2346, 1.03 ) }
    dend_17 { pt3dadd( -73.3706, -4.93895, -43.5116, 1.18 ) }
    dend_17 { pt3dadd( -74.5014, -5.45108, -43.8464, 1.33 ) }
    dend_17 { pt3dadd( -75.3114, -5.8501, -44.0972, 1.4 ) }
    dend_17 { pt3dadd( -75.886, -6.17262, -44.2765, 1.4 ) }
    dend_17 { pt3dadd( -76.6011, -6.59057, -44.4958, 1.55 ) }
    dend_17 { pt3dadd( -77.5359, -7.15487, -44.766, 1.55 ) }
    dend_17 { pt3dadd( -78.6943, -7.85682, -45.0531, 1.69 ) }
    dend_17 { pt3dadd( -79.6449, -8.4809, -45.293, 1.84 ) }
    dend_17 { pt3dadd( -80.8969, -9.36561, -45.6176, 2.06 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 55/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 62.3961, -10.5817, -43.6779, 0.74 ) }
    dend_13 { pt3dadd( 64.7915, -11.6303, -44.868, 0.74 ) }
    dend_13 { pt3dadd( 66.9009, -12.5229, -45.7893, 0.29 ) }
    dend_13 { pt3dadd( 68.7591, -13.3387, -46.5017, 0.29 ) }
    dend_13 { pt3dadd( 70.2867, -14.0085, -47.0493, 1.25 ) }
    dend_13 { pt3dadd( 71.0694, -14.3435, -47.3148, 1.25 ) }
    dend_13 { pt3dadd( 72.3086, -14.8504, -47.7099, 0.29 ) }
    dend_13 { pt3dadd( 73.709, -15.3878, -48.0031, 0.29 ) }
    dend_13 { pt3dadd( 75.0628, -15.8736, -48.2399, 0.29 ) }
    dend_13 { pt3dadd( 76.0833, -16.2117, -48.4416, 0.88 ) }
    dend_13 { pt3dadd( 76.6481, -16.3844, -48.5791, 1.33 ) }
    dend_13 { pt3dadd( 77.4437, -16.5961, -48.7488, 1.33 ) }
    dend_13 { pt3dadd( 78.125, -16.7321, -48.8817, 0.66 ) }
    dend_13 { pt3dadd( 78.8675, -16.8329, -49.0209, 0.29 ) }
    dend_13 { pt3dadd( 79.623, -16.8783, -49.154, 0.29 ) }
    dend_13 { pt3dadd( 80.6512, -16.915, -49.319, 0.88 ) }
    dend_13 { pt3dadd( 81.1187, -16.9339, -49.3924, 0.88 ) }
    dend_13 { pt3dadd( 82.1327, -16.9709, -49.5585, 0.44 ) }
    dend_13 { pt3dadd( 82.9102, -16.9862, -49.6898, 0.44 ) }
    dend_13 { pt3dadd( 83.7344, -16.9864, -49.8503, 0.81 ) }
    dend_13 { pt3dadd( 84.3524, -16.9804, -49.9863, 0.81 ) }
    dend_13 { pt3dadd( 85.0138, -16.9853, -50.1429, 0.66 ) }
    dend_13 { pt3dadd( 85.8474, -17.0132, -50.3465, 0.96 ) }
    dend_13 { pt3dadd( 86.3056, -17.0386, -50.4594, 0.96 ) }
    dend_13 { pt3dadd( 87.5518, -17.112, -50.7498, 0.29 ) }
    dend_13 { pt3dadd( 88.2798, -17.1509, -50.9077, 0.52 ) }
    dend_13 { pt3dadd( 89.1977, -17.1891, -51.079, 0.88 ) }
    dend_13 { pt3dadd( 89.5182, -17.1985, -51.129, 0.88 ) }
    dend_13 { pt3dadd( 90.6495, -17.2488, -51.258, 0.29 ) }
    dend_13 { pt3dadd( 91.5392, -17.3164, -51.326, 0.29 ) }
    dend_13 { pt3dadd( 92.5298, -17.4458, -51.3642, 1.33 ) }
    dend_13 { pt3dadd( 93.3071, -17.5968, -51.3825, 2.06 ) }
    dend_13 { pt3dadd( 93.825, -17.7471, -51.3887, 2.06 ) }
    dend_13 { pt3dadd( 94.5341, -18.0412, -51.3893, 2.28 ) }
    dend_13 { pt3dadd( 95.447, -18.5121, -51.3794, 1.84 ) }
    dend_13 { pt3dadd( 96.1917, -18.943, -51.3627, 1.55 ) }
    dend_13 { pt3dadd( 96.9059, -19.3845, -51.3378, 0.96 ) }
    dend_13 { pt3dadd( 98.1671, -20.2109, -51.2924, 0.29 ) }
    dend_13 { pt3dadd( 99.1999, -20.9165, -51.2549, 0.29 ) }
    dend_13 { pt3dadd( 99.9012, -21.4044, -51.2305, 0.81 ) }
    dend_13 { pt3dadd( 100.511, -21.818, -51.212, 0.81 ) }
    dend_13 { pt3dadd( 100.974, -22.1007, -51.2015, 0.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 97/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 62.3961, -10.5817, -43.6779, 0.96 ) }
    dend_12 { pt3dadd( 62.6853, -11.0531, -44.0779, 0.96 ) }
    dend_12 { pt3dadd( 63.408, -12.1332, -44.9927, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_12 { pt3dadd( 64.1573, -13.2178, -46.0203, 0.81 ) }
    dend_12 { pt3dadd( 64.4332, -13.6251, -46.4468, 0.81 ) }
    dend_12 { pt3dadd( 65.038, -14.5232, -47.4174, 0.37 ) }
    dend_12 { pt3dadd( 65.3904, -15.0436, -47.9852, 0.37 ) }
    dend_12 { pt3dadd( 65.9119, -15.7693, -48.8078, 0.96 ) }
    dend_12 { pt3dadd( 66.7609, -16.8698, -50.1298, 1.11 ) }
    dend_12 { pt3dadd( 67.8762, -18.2144, -51.8382, 0.52 ) }
    dend_12 { pt3dadd( 68.379, -18.7712, -52.5832, 1.03 ) }
    dend_12 { pt3dadd( 68.697, -19.0866, -53.0324, 1.03 ) }
    dend_12 { pt3dadd( 69.7726, -19.9738, -54.3204, 0.29 ) }
    dend_12 { pt3dadd( 70.1161, -20.1881, -54.6477, 0.29 ) }
    dend_12 { pt3dadd( 70.5187, -20.3573, -54.9209, 0.66 ) }
    dend_12 { pt3dadd( 70.9419, -20.4655, -55.1362, 0.66 ) }
    dend_12 { pt3dadd( 71.6946, -20.5978, -55.4692, 0.44 ) }
    dend_12 { pt3dadd( 73.009, -20.7261, -55.9893, 1.25 ) }
    dend_12 { pt3dadd( 73.828, -20.757, -56.2868, 1.47 ) }
    dend_12 { pt3dadd( 74.3084, -20.7674, -56.4555, 1.47 ) }
    dend_12 { pt3dadd( 75.8829, -20.7599, -56.9816, 0.66 ) }
    dend_12 { pt3dadd( 76.576, -20.7352, -57.2024, 0.66 ) }
    dend_12 { pt3dadd( 77.5063, -20.6707, -57.4846, 1.11 ) }
    dend_12 { pt3dadd( 78.1951, -20.5908, -57.6615, 1.11 ) }
    dend_12 { pt3dadd( 79.1847, -20.4178, -57.852, 0.37 ) }
    dend_12 { pt3dadd( 79.9885, -20.2328, -57.9851, 1.03 ) }
    dend_12 { pt3dadd( 80.399, -20.1262, -58.0564, 1.18 ) }
    dend_12 { pt3dadd( 80.7628, -20.0368, -58.1306, 0.88 ) }
    dend_12 { pt3dadd( 81.8256, -19.8003, -58.3527, 0.52 ) }
    dend_12 { pt3dadd( 82.3734, -19.6771, -58.4781, 0.52 ) }
    dend_12 { pt3dadd( 83.287, -19.4651, -58.7308, 0.88 ) }
    dend_12 { pt3dadd( 84.4162, -19.2097, -59.0777, 0.37 ) }
    dend_12 { pt3dadd( 85.2749, -19.0204, -59.338, 0.37 ) }
    dend_12 { pt3dadd( 86.1969, -18.8279, -59.618, 0.29 ) }
    dend_12 { pt3dadd( 87.1188, -18.6419, -59.8828, 0.88 ) }
    dend_12 { pt3dadd( 87.7339, -18.5115, -60.0432, 0.96 ) }
    dend_12 { pt3dadd( 88.0513, -18.4385, -60.1169, 0.96 ) }
    dend_12 { pt3dadd( 89.0398, -18.2001, -60.341, 0.29 ) }
    dend_12 { pt3dadd( 89.6419, -18.0799, -60.4805, 0.29 ) }
    dend_12 { pt3dadd( 90.6424, -17.9232, -60.7251, 0.29 ) }
    dend_12 { pt3dadd( 91.6267, -17.7974, -60.9505, 0.96 ) }
    dend_12 { pt3dadd( 92.2681, -17.7324, -61.0874, 1.18 ) }
    dend_12 { pt3dadd( 92.8564, -17.6757, -61.2109, 1.18 ) }
    dend_12 { pt3dadd( 93.7376, -17.5943, -61.4105, 0.29 ) }
    dend_12 { pt3dadd( 94.7647, -17.5281, -61.6187, 0.52 ) }
    dend_12 { pt3dadd( 95.5716, -17.5189, -61.7756, 0.66 ) }
    dend_12 { pt3dadd( 96.1246, -17.5484, -61.8643, 0.29 ) }
    dend_12 { pt3dadd( 96.585, -17.5904, -61.9378, 0.22 ) }
    dend_12 { pt3dadd( 97.1286, -17.6431, -62.0202, 0.37 ) }
    dend_12 { pt3dadd( 98.5015, -17.783, -62.238, 0.44 ) }
    dend_12 { pt3dadd( 99.5505, -17.9362, -62.3896, 0.22 ) }
    dend_12 { pt3dadd( 101.023, -18.2319, -62.6215, 0.81 ) }
    dend_12 { pt3dadd( 101.735, -18.3976, -62.7363, 0.96 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 50/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -22.4899, 74.3926, -8.40294, 0.88 ) }
    dend_6 { pt3dadd( -23.5854, 75.4968, -8.33464, 0.88 ) }
    dend_6 { pt3dadd( -23.9432, 75.8362, -8.26307, 0.74 ) }
    dend_6 { pt3dadd( -24.6678, 76.5107, -8.07077, 0.52 ) }
    dend_6 { pt3dadd( -25.2511, 77.0542, -7.8804, 0.52 ) }
    dend_6 { pt3dadd( -25.7351, 77.5078, -7.70616, 0.29 ) }
    dend_6 { pt3dadd( -26.2555, 77.9862, -7.50533, 0.29 ) }
    dend_6 { pt3dadd( -26.894, 78.5416, -7.18581, 0.88 ) }
    dend_6 { pt3dadd( -27.2183, 78.8238, -7.01965, 1.25 ) }
    dend_6 { pt3dadd( -27.5571, 79.1226, -6.84867, 1.25 ) }
    dend_6 { pt3dadd( -28.2182, 79.8036, -6.51858, 0.44 ) }
    dend_6 { pt3dadd( -28.6333, 80.3463, -6.31791, 0.59 ) }
    dend_6 { pt3dadd( -28.9863, 80.9203, -6.15883, 1.11 ) }
    dend_6 { pt3dadd( -29.2358, 81.4015, -6.06838, 1.11 ) }
    dend_6 { pt3dadd( -29.4799, 81.9317, -5.97658, 0.59 ) }
    dend_6 { pt3dadd( -29.8365, 82.7914, -5.84875, 0.44 ) }
    dend_6 { pt3dadd( -30.1944, 83.7755, -5.70226, 0.44 ) }
    dend_6 { pt3dadd( -30.4386, 84.4867, -5.59514, 0.44 ) }
    dend_6 { pt3dadd( -30.6476, 85.0621, -5.484, 0.59 ) }
    dend_6 { pt3dadd( -31.0535, 86.1481, -5.26115, 0.74 ) }
    dend_6 { pt3dadd( -31.3527, 86.8794, -5.09521, 0.74 ) }
    dend_6 { pt3dadd( -31.6644, 87.5363, -4.91857, 0.88 ) }
    dend_6 { pt3dadd( -32.0583, 88.2871, -4.67505, 1.55 ) }
    dend_6 { pt3dadd( -32.5339, 89.1766, -4.34322, 1.92 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 74/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -22.4899, 74.3926, -8.40294, 0.59 ) }
    dend_5 { pt3dadd( -24.301, 73.983, -8.13071, 0.59 ) }
    dend_5 { pt3dadd( -25.1515, 73.7592, -7.99831, 0.44 ) }
    dend_5 { pt3dadd( -25.6532, 73.6042, -7.91821, 0.66 ) }
    dend_5 { pt3dadd( -26.078, 73.4669, -7.83943, 0.66 ) }
    dend_5 { pt3dadd( -26.4208, 73.3574, -7.79029, 0.66 ) }
    dend_5 { pt3dadd( -27.0711, 73.1632, -7.71316, 0.29 ) }
    dend_5 { pt3dadd( -27.8166, 72.9704, -7.67565, 0.29 ) }
    dend_5 { pt3dadd( -28.4117, 72.8288, -7.681, 0.52 ) }
    dend_5 { pt3dadd( -28.9363, 72.7262, -7.7056, 0.52 ) }
    dend_5 { pt3dadd( -29.946, 72.5708, -7.78044, 0.52 ) }
    dend_5 { pt3dadd( -30.8783, 72.4754, -7.86588, 0.88 ) }
    dend_5 { pt3dadd( -31.5241, 72.4454, -7.94636, 1.25 ) }
    dend_5 { pt3dadd( -32.0151, 72.4459, -8.01713, 1.25 ) }
    dend_5 { pt3dadd( -33.1668, 72.4494, -8.18412, 0.37 ) }
    dend_5 { pt3dadd( -33.6788, 72.4392, -8.26264, 0.37 ) }
    dend_5 { pt3dadd( -34.2449, 72.4282, -8.29932, 0.52 ) }
    dend_5 { pt3dadd( -34.8689, 72.4095, -8.29186, 0.52 ) }
    dend_5 { pt3dadd( -35.4559, 72.3855, -8.2281, 0.52 ) }
    dend_5 { pt3dadd( -36.0862, 72.3402, -8.10828, 0.37 ) }
    dend_5 { pt3dadd( -36.5803, 72.2833, -7.96846, 0.37 ) }
    dend_5 { pt3dadd( -37.6727, 72.1129, -7.58068, 0.37 ) }
    dend_5 { pt3dadd( -38.5254, 71.8869, -7.2262, 0.59 ) }
    dend_5 { pt3dadd( -38.9583, 71.7038, -6.98714, 0.81 ) }
    dend_5 { pt3dadd( -39.2978, 71.485, -6.70649, 0.81 ) }
    dend_5 { pt3dadd( -39.7339, 71.1016, -6.20026, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_5 { pt3dadd( -39.9855, 70.7835, -5.78119, 0.66 ) }
    dend_5 { pt3dadd( -40.3747, 70.0183, -4.87544, 0.37 ) }
    dend_5 { pt3dadd( -40.7325, 68.946, -3.62673, 0.37 ) }
    dend_5 { pt3dadd( -41.09, 67.5597, -2.01237, 1.11 ) }
    dend_5 { pt3dadd( -41.2467, 66.8628, -1.18198, 1.62 ) }
    dend_5 { pt3dadd( -41.4298, 65.9951, -0.0947751, 0.59 ) }
    dend_5 { pt3dadd( -41.5972, 65.3596, 0.747007, 0.52 ) }
    dend_5 { pt3dadd( -41.8782, 64.6339, 1.76431, 0.81 ) }
    dend_5 { pt3dadd( -42.2306, 64.1205, 2.46768, 0.66 ) }
    dend_5 { pt3dadd( -42.6787, 63.7816, 2.89906, 0.88 ) }
    dend_5 { pt3dadd( -43.3438, 63.4502, 3.32433, 0.88 ) }
    dend_5 { pt3dadd( -44.4637, 63.0585, 3.88393, 0.29 ) }
    dend_5 { pt3dadd( -45.2988, 62.8468, 4.27105, 0.29 ) }
    dend_5 { pt3dadd( -46.1795, 62.6759, 4.6712, 0.29 ) }
    dend_5 { pt3dadd( -47.5407, 62.4798, 5.32617, 0.74 ) }
    dend_5 { pt3dadd( -48.436, 62.3982, 5.85638, 0.96 ) }
    dend_5 { pt3dadd( -49.0024, 62.3525, 6.295, 0.96 ) }
    dend_5 { pt3dadd( -49.6512, 62.2957, 6.92124, 0.88 ) }
    dend_5 { pt3dadd( -50.397, 62.2138, 7.75833, 0.88 ) }
    dend_5 { pt3dadd( -50.9183, 62.1327, 8.43364, 0.44 ) }
    dend_5 { pt3dadd( -52.2297, 61.8033, 10.3918, 0.37 ) }
    dend_5 { pt3dadd( -53.0185, 61.4622, 11.6442, 1.03 ) }
    dend_5 { pt3dadd( -53.3737, 61.2301, 12.2503, 0.44 ) }
    dend_5 { pt3dadd( -53.6169, 61.0103, 12.6619, 0.52 ) }
    dend_5 { pt3dadd( -53.9074, 60.6621, 13.1551, 0.52 ) }
    dend_5 { pt3dadd( -54.2761, 60.089, 13.78, 0.37 ) }
    dend_5 { pt3dadd( -54.599, 59.468, 14.3317, 0.59 ) }
    dend_5 { pt3dadd( -55.1981, 58.3397, 15.304, 0.37 ) }
    dend_5 { pt3dadd( -55.631, 57.4855, 16.0683, 0.37 ) }
    dend_5 { pt3dadd( -55.8412, 57.0788, 16.443, 0.37 ) }
    dend_5 { pt3dadd( -56.1597, 56.4935, 16.979, 0.59 ) }
    dend_5 { pt3dadd( -56.4741, 55.9001, 17.489, 0.66 ) }
    dend_5 { pt3dadd( -63.4977, 52.6453, 23.5614, 0.66 ) }
    dend_5 { pt3dadd( -70.9274, 50.1105, 29.4558, 0.66 ) }
    dend_5 { pt3dadd( -76.7956, 46.7583, 36.6166, 0.66 ) }
    dend_5 { pt3dadd( -81.2274, 43.3471, 44.7289, 0.66 ) }
    dend_5 { pt3dadd( -85.5945, 39.9589, 52.885, 0.66 ) }
    dend_5 { pt3dadd( -91.355, 38.6367, 60.6975, 0.66 ) }
    dend_5 { pt3dadd( -97.0417, 38.2234, 68.6503, 0.66 ) }
    dend_5 { pt3dadd( -103.863, 35.6103, 75.2153, 0.66 ) }
    dend_5 { pt3dadd( -110.212, 32.7532, 82.1536, 0.66 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 41/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -207.523, -30.9185, -15.8047, 0.37 ) }
    dend_59 { pt3dadd( -208.899, -30.6389, -15.9921, 0.37 ) }
    dend_59 { pt3dadd( -209.787, -30.4868, -16.0905, 0.22 ) }
    dend_59 { pt3dadd( -210.425, -30.4007, -16.145, 0.22 ) }
    dend_59 { pt3dadd( -211.718, -30.2557, -16.2231, 0.59 ) }
    dend_59 { pt3dadd( -212.248, -30.1929, -16.249, 0.59 ) }
    dend_59 { pt3dadd( -213.587, -30.0226, -16.3055, 0.29 ) }
    dend_59 { pt3dadd( -214.843, -29.8386, -16.3196, 0.29 ) }
    dend_59 { pt3dadd( -215.753, -29.6887, -16.3909, 0.29 ) }
    dend_59 { pt3dadd( -216.328, -29.5878, -16.4819, 0.74 ) }
    dend_59 { pt3dadd( -217.042, -29.4542, -16.6447, 0.74 ) }
    dend_59 { pt3dadd( -217.819, -29.3176, -16.8968, 0.44 ) }
    dend_59 { pt3dadd( -218.947, -29.0885, -17.3016, 0.29 ) }
    dend_59 { pt3dadd( -220.196, -28.7439, -17.7456, 0.29 ) }
    dend_59 { pt3dadd( -220.843, -28.5176, -17.9512, 0.29 ) }
    dend_59 { pt3dadd( -221.689, -28.1972, -18.1337, 0.22 ) }
    dend_59 { pt3dadd( -222.635, -27.8495, -18.1897, 0.22 ) }
    dend_59 { pt3dadd( -224.088, -27.3127, -18.0118, 0.22 ) }
    dend_59 { pt3dadd( -225.062, -26.9472, -17.7632, 0.22 ) }
    dend_59 { pt3dadd( -226.047, -26.5612, -17.4357, 0.96 ) }
    dend_59 { pt3dadd( -227.093, -26.1534, -17.0524, 0.96 ) }
    dend_59 { pt3dadd( -228.168, -25.7511, -16.6387, 0.74 ) }
    dend_59 { pt3dadd( -229.338, -25.3782, -16.2184, 0.52 ) }
    dend_59 { pt3dadd( -229.938, -25.2153, -16.0297, 0.52 ) }
    dend_59 { pt3dadd( -230.784, -24.9944, -15.7815, 0.59 ) }
    dend_59 { pt3dadd( -231.218, -24.8783, -15.6723, 0.59 ) }
    dend_59 { pt3dadd( -231.918, -24.6613, -15.5332, 0.44 ) }
    dend_59 { pt3dadd( -232.927, -24.3216, -15.3803, 0.37 ) }
    dend_59 { pt3dadd( -234.419, -23.8016, -15.1696, 0.59 ) }
    dend_59 { pt3dadd( -235.311, -23.4377, -15.029, 0.44 ) }
    dend_59 { pt3dadd( -235.997, -23.1214, -14.927, 0.59 ) }
    dend_59 { pt3dadd( -236.624, -22.8223, -14.8339, 0.74 ) }
    dend_59 { pt3dadd( -237.517, -22.4236, -14.7177, 0.88 ) }
    dend_59 { pt3dadd( -238.281, -22.1371, -14.6183, 1.03 ) }
    dend_59 { pt3dadd( -239.759, -21.7734, -14.4601, 0.88 ) }
    dend_59 { pt3dadd( -240.81, -21.658, -14.3148, 0.29 ) }
    dend_59 { pt3dadd( -241.969, -21.6368, -14.1606, 0.29 ) }
    dend_59 { pt3dadd( -242.936, -21.6951, -14.059, 0.29 ) }
    dend_59 { pt3dadd( -243.719, -21.8099, -14.0047, 0.74 ) }
    dend_59 { pt3dadd( -244.468, -21.9872, -13.9926, 0.74 ) }
    dend_59 { pt3dadd( -245.392, -22.2874, -14.007, 0.29 ) }
    dend_59 { pt3dadd( -246.183, -22.5285, -14.0437, 0.29 ) }
    dend_59 { pt3dadd( -246.921, -22.7033, -14.107, 0.29 ) }
    dend_59 { pt3dadd( -247.839, -22.8517, -14.1835, 0.66 ) }
    dend_59 { pt3dadd( -248.652, -22.9267, -14.2622, 0.88 ) }
    dend_59 { pt3dadd( -249.194, -22.9565, -14.3398, 1.03 ) }
    dend_59 { pt3dadd( -249.64, -22.9749, -14.4162, 1.03 ) }
    dend_59 { pt3dadd( -250.371, -23.0127, -14.5464, 0.81 ) }
    dend_59 { pt3dadd( -251.437, -23.0517, -14.7282, 0.44 ) }
    dend_59 { pt3dadd( -252.419, -23.0721, -14.8784, 0.44 ) }
    dend_59 { pt3dadd( -253.74, -23.0941, -15.0321, 0.44 ) }
    dend_59 { pt3dadd( -255.402, -23.1148, -15.1513, 0.44 ) }
    dend_59 { pt3dadd( -256.456, -23.1192, -15.1525, 0.88 ) }
    dend_59 { pt3dadd( -257.16, -23.1158, -15.1386, 1.18 ) }
    dend_59 { pt3dadd( -257.988, -23.1184, -15.0872, 1.18 ) }
    dend_59 { pt3dadd( -259.475, -23.1765, -14.8791, 0.22 ) }
    dend_59 { pt3dadd( -260.223, -23.2257, -14.6717, 0.22 ) }
    dend_59 { pt3dadd( -261.297, -23.3425, -14.2299, 0.44 ) }
    dend_59 { pt3dadd( -273.17, -20.8405, -12.3302, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 0/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -207.523, -30.9185, -15.8047, 0.66 ) }
    dend_58 { pt3dadd( -208.387, -31.2068, -15.2561, 0.66 ) }
    dend_58 { pt3dadd( -208.961, -31.3513, -14.8988, 0.59 ) }
    dend_58 { pt3dadd( -209.572, -31.4681, -14.517, 0.52 ) }
    dend_58 { pt3dadd( -210.335, -31.6167, -14.0336, 0.66 ) }
    dend_58 { pt3dadd( -210.952, -31.7371, -13.6421, 0.66 ) }
    dend_58 { pt3dadd( -211.753, -31.8931, -13.1348, 0.29 ) }
    dend_58 { pt3dadd( -212.209, -31.9472, -12.8504, 0.29 ) }
    dend_58 { pt3dadd( -212.886, -31.9951, -12.4484, 0.29 ) }
    dend_58 { pt3dadd( -213.547, -32.0187, -12.0527, 0.29 ) }
    dend_58 { pt3dadd( -220.101, -34.3461, -6.85331, 0.29 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 11/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -21.9714, -5.36052, -99.2975, 0.44 ) }
    dend_27 { pt3dadd( -22.7821, -2.92717, -101.377, 0.44 ) }
    dend_27 { pt3dadd( -23.3545, -1.20909, -102.846, 0.29 ) }
    dend_27 { pt3dadd( -23.8262, 0.206709, -104.056, 0.66 ) }
    dend_27 { pt3dadd( -24.3048, 1.64305, -105.283, 0.81 ) }
    dend_27 { pt3dadd( -24.7882, 3.09411, -106.523, 0.66 ) }
    dend_27 { pt3dadd( -25.1347, 4.13389, -107.412, 0.52 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 18/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -21.9714, -5.36052, -99.2975, 0.52 ) }
    dend_26 { pt3dadd( -24.4018, -5.86752, -101.601, 0.52 ) }
    dend_26 { pt3dadd( -25.1034, -6.03521, -102.173, 0.96 ) }
    dend_26 { pt3dadd( -25.5437, -6.15626, -102.505, 1.18 ) }
    dend_26 { pt3dadd( -26.3865, -6.37914, -103.103, 0.52 ) }
    dend_26 { pt3dadd( -26.7545, -6.47096, -103.372, 0.29 ) }
    dend_26 { pt3dadd( -27.3061, -6.61479, -103.816, 0.29 ) }
    dend_26 { pt3dadd( -28.0435, -6.78751, -104.366, 0.29 ) }
    dend_26 { pt3dadd( -29.0413, -7.10835, -105.233, 0.52 ) }
    dend_26 { pt3dadd( -29.5807, -7.34914, -105.733, 0.74 ) }
    dend_26 { pt3dadd( -30.4231, -7.84211, -106.552, 0.88 ) }
    dend_26 { pt3dadd( -31.4431, -8.57017, -107.684, 1.11 ) }
    dend_26 { pt3dadd( -31.8936, -8.99273, -108.37, 1.25 ) }
    dend_26 { pt3dadd( -32.3912, -9.66042, -109.567, 0.96 ) }
    dend_26 { pt3dadd( -32.6121, -10.2086, -110.515, 0.66 ) }
    dend_26 { pt3dadd( -32.6821, -10.6747, -111.267, 0.88 ) }
    dend_26 { pt3dadd( -32.6498, -11.7035, -112.834, 1.11 ) }
    dend_26 { pt3dadd( -32.3673, -13.335, -115.219, 0.66 ) }
    dend_26 { pt3dadd( -32.0402, -14.5049, -116.916, 0.81 ) }
    dend_26 { pt3dadd( -31.8291, -15.0678, -117.746, 0.59 ) }
    dend_26 { pt3dadd( -31.5653, -15.6845, -118.659, 0.81 ) }
    dend_26 { pt3dadd( -31.3048, -16.255, -119.482, 0.81 ) }
    dend_26 { pt3dadd( -31.1003, -16.7559, -120.093, 0.81 ) }
    dend_26 { pt3dadd( -30.9144, -17.4096, -120.702, 0.66 ) }
    dend_26 { pt3dadd( -30.7406, -18.3722, -121.497, 0.44 ) }
    dend_26 { pt3dadd( -30.6408, -18.9889, -122.103, 0.37 ) }
    // Section: dend_20, id: dend_20, parent: dend_17 (entry count 44/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -80.8969, -9.36561, -45.6176, 1.11 ) }
    dend_20 { pt3dadd( -82.6027, -10.6848, -45.2219, 1.11 ) }
    dend_20 { pt3dadd( -83.4782, -11.3302, -45.0715, 1.11 ) }
    dend_20 { pt3dadd( -84.5343, -12.0892, -44.936, 0.96 ) }
    dend_20 { pt3dadd( -85.6117, -12.8403, -44.8139, 0.96 ) }
    dend_20 { pt3dadd( -86.6612, -13.5219, -44.7688, 0.96 ) }
    dend_20 { pt3dadd( -87.5914, -14.0914, -44.7772, 1.11 ) }
    dend_20 { pt3dadd( -88.6563, -14.7259, -44.887, 1.11 ) }
    dend_20 { pt3dadd( -89.5753, -15.2194, -45.0258, 1.11 ) }
    dend_20 { pt3dadd( -90.6021, -15.7365, -45.2291, 1.11 ) }
    dend_20 { pt3dadd( -92.1281, -16.5025, -45.5428, 0.88 ) }
    dend_20 { pt3dadd( -93.2908, -17.0963, -45.7172, 0.74 ) }
    dend_20 { pt3dadd( -94.206, -17.581, -45.7991, 1.03 ) }
    dend_20 { pt3dadd( -95.0955, -18.0675, -45.8228, 1.03 ) }
    dend_20 { pt3dadd( -96.1362, -18.6705, -45.7864, 1.18 ) }
    dend_20 { pt3dadd( -97.1405, -19.2743, -45.6871, 1.18 ) }
    dend_20 { pt3dadd( -98.1482, -19.8698, -45.5051, 1.18 ) }
    dend_20 { pt3dadd( -99.0305, -20.3287, -45.343, 0.74 ) }
    dend_20 { pt3dadd( -100.086, -20.7765, -45.1625, 0.59 ) }
    dend_20 { pt3dadd( -101.155, -21.1293, -45.0117, 1.03 ) }
    dend_20 { pt3dadd( -101.805, -21.2696, -44.9316, 1.03 ) }
    dend_20 { pt3dadd( -102.989, -21.4639, -44.8113, 0.88 ) }
    dend_20 { pt3dadd( -104.021, -21.6048, -44.6407, 0.88 ) }
    dend_20 { pt3dadd( -105.26, -21.7387, -44.3967, 0.74 ) }
    dend_20 { pt3dadd( -106.406, -21.8269, -44.1315, 0.74 ) }
    dend_20 { pt3dadd( -107.945, -21.9074, -43.7242, 0.88 ) }
    dend_20 { pt3dadd( -109.092, -21.9833, -43.3759, 0.88 ) }
    dend_20 { pt3dadd( -111.619, -22.1975, -42.4534, 1.4 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 72/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -80.8969, -9.36561, -45.6176, 0.29 ) }
    dend_19 { pt3dadd( -82.0883, -8.89635, -45.7112, 0.29 ) }
    dend_19 { pt3dadd( -82.7955, -8.62628, -45.7806, 0.29 ) }
    dend_19 { pt3dadd( -84.2025, -8.10108, -45.926, 0.29 ) }
    dend_19 { pt3dadd( -84.9561, -7.82002, -45.9982, 0.44 ) }
    dend_19 { pt3dadd( -85.6139, -7.57478, -46.0543, 0.44 ) }
    dend_19 { pt3dadd( -86.7207, -7.14495, -46.1318, 0.22 ) }
    dend_19 { pt3dadd( -87.3619, -6.9056, -46.1496, 0.37 ) }
    dend_19 { pt3dadd( -87.8042, -6.72051, -46.1748, 0.52 ) }
    dend_19 { pt3dadd( -88.1779, -6.5494, -46.2086, 0.66 ) }
    dend_19 { pt3dadd( -89.0411, -6.09737, -46.3194, 0.29 ) }
    dend_19 { pt3dadd( -89.7037, -5.68187, -46.3354, 0.29 ) }
    dend_19 { pt3dadd( -90.0918, -5.38113, -46.3017, 0.29 ) }
    dend_19 { pt3dadd( -90.5426, -4.98725, -46.2334, 0.52 ) }
    dend_19 { pt3dadd( -90.938, -4.60651, -46.1582, 0.74 ) }
    dend_19 { pt3dadd( -91.1555, -4.3794, -46.1084, 0.74 ) }
    dend_19 { pt3dadd( -92.5648, -2.73986, -45.7286, 0.22 ) }
    dend_19 { pt3dadd( -93.3868, -1.71748, -45.5196, 0.22 ) }
    dend_19 { pt3dadd( -93.8283, -1.13347, -45.4283, 0.66 ) }
    dend_19 { pt3dadd( -94.2647, -0.533815, -45.35, 0.66 ) }
    dend_19 { pt3dadd( -94.5102, -0.189217, -45.3226, 0.66 ) }
    dend_19 { pt3dadd( -95.1151, 0.65693, -45.3087, 0.22 ) }
    dend_19 { pt3dadd( -95.8373, 1.63536, -45.3657, 0.22 ) }
    dend_19 { pt3dadd( -96.6538, 2.71375, -45.4225, 0.22 ) }
    dend_19 { pt3dadd( -97.1624, 3.3742, -45.4514, 0.22 ) }
    dend_19 { pt3dadd( -97.9627, 4.38386, -45.4829, 0.22 ) }
    dend_19 { pt3dadd( -98.4564, 5.0027, -45.4998, 0.22 ) }
    dend_19 { pt3dadd( -99.1126, 5.84401, -45.5155, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_19 { pt3dadd( -99.8097, 6.80359, -45.5255, 0.74 ) }
    dend_19 { pt3dadd( -100.154, 7.31858, -45.5431, 0.74 ) }
    dend_19 { pt3dadd( -100.557, 7.98796, -45.5817, 0.59 ) }
    dend_19 { pt3dadd( -101.015, 8.86195, -45.6418, 0.22 ) }
    dend_19 { pt3dadd( -101.396, 9.6959, -45.709, 0.22 ) }
    dend_19 { pt3dadd( -101.803, 10.6953, -45.7899, 0.22 ) }
    dend_19 { pt3dadd( -102.183, 11.661, -45.847, 0.52 ) }
    dend_19 { pt3dadd( -102.4, 12.2151, -45.9106, 0.52 ) }
    dend_19 { pt3dadd( -102.744, 13.1003, -46.0615, 0.22 ) }
    dend_19 { pt3dadd( -103.172, 14.1715, -46.2422, 0.88 ) }
    dend_19 { pt3dadd( -103.422, 14.7765, -46.3526, 0.88 ) }
    dend_19 { pt3dadd( -103.61, 15.2243, -46.4487, 0.88 ) }
    dend_19 { pt3dadd( -104.343, 16.9797, -46.9393, 0.81 ) }
    dend_19 { pt3dadd( -104.482, 17.2799, -47.0866, 0.59 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 14/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -80.8969, -9.36561, -45.6176, 0.74 ) }
    dend_18 { pt3dadd( -80.8017, -11.1811, -45.6094, 0.74 ) }
    dend_18 { pt3dadd( -80.7512, -11.9747, -45.6105, 0.74 ) }
    dend_18 { pt3dadd( -80.6763, -12.8713, -45.6253, 0.96 ) }
    dend_18 { pt3dadd( -80.6141, -13.5215, -45.6181, 0.96 ) }
    dend_18 { pt3dadd( -80.5277, -14.4283, -45.5817, 0.66 ) }
    dend_18 { pt3dadd( -80.4601, -15.38, -45.5116, 0.37 ) }
    dend_18 { pt3dadd( -80.4239, -16.1839, -45.4243, 0.37 ) }
    dend_18 { pt3dadd( -80.3923, -17.6641, -45.2203, 0.37 ) }
    dend_18 { pt3dadd( -80.4056, -18.49, -45.0845, 0.81 ) }
    dend_18 { pt3dadd( -80.4725, -19.5234, -44.8994, 0.88 ) }
    dend_18 { pt3dadd( -80.6412, -20.8036, -44.6532, 0.22 ) }
    dend_18 { pt3dadd( -80.9238, -22.0704, -44.3833, 0.22 ) }
    dend_18 { pt3dadd( -81.2423, -23.0087, -44.1724, 0.22 ) }
    dend_18 { pt3dadd( -81.728, -24.0558, -43.9453, 0.66 ) }
    dend_18 { pt3dadd( -82.0767, -24.6824, -43.8343, 0.66 ) }
    dend_18 { pt3dadd( -82.5651, -25.4142, -43.727, 0.44 ) }
    dend_18 { pt3dadd( -83.3327, -26.4106, -43.6145, 0.74 ) }
    dend_18 { pt3dadd( -84.3304, -27.5614, -43.5158, 0.22 ) }
    dend_18 { pt3dadd( -84.8757, -28.1462, -43.4792, 0.66 ) }
    dend_18 { pt3dadd( -85.5322, -28.8267, -43.4509, 0.81 ) }
    dend_18 { pt3dadd( -86.1788, -29.5011, -43.4349, 0.81 ) }
    dend_18 { pt3dadd( -86.6472, -29.9873, -43.4444, 0.66 ) }
    dend_18 { pt3dadd( -87.2194, -30.5794, -43.5022, 0.52 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 38/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -32.5339, 89.1766, -4.34322, 0.88 ) }
    dend_8 { pt3dadd( -33.3365, 89.7038, -3.72951, 0.88 ) }
    dend_8 { pt3dadd( -33.9612, 90.1854, -3.25543, 0.74 ) }
    dend_8 { pt3dadd( -34.706, 90.8837, -2.65535, 0.81 ) }
    dend_8 { pt3dadd( -35.2712, 91.5264, -2.17987, 0.96 ) }
    dend_8 { pt3dadd( -35.7579, 92.1475, -1.72272, 0.29 ) }
    dend_8 { pt3dadd( -36.099, 92.586, -1.40703, 0.29 ) }
    dend_8 { pt3dadd( -36.4969, 93.0856, -1.02484, 0.37 ) }
    dend_8 { pt3dadd( -36.8715, 93.5624, -0.662322, 0.37 ) }
    dend_8 { pt3dadd( -37.1869, 93.9788, -0.335711, 0.44 ) }
    dend_8 { pt3dadd( -37.9243, 94.9626, 0.445262, 0.52 ) }
    dend_8 { pt3dadd( -38.3283, 95.4785, 0.857383, 0.66 ) }
    dend_8 { pt3dadd( -38.688, 95.8951, 1.21858, 0.88 ) }
    dend_8 { pt3dadd( -39.5864, 96.8708, 2.044, 0.52 ) }
    dend_8 { pt3dadd( -39.8925, 97.2045, 2.30341, 0.37 ) }
    dend_8 { pt3dadd( -40.3265, 97.7319, 2.67188, 0.52 ) }
    dend_8 { pt3dadd( -40.6609, 98.1987, 2.98447, 0.59 ) }
    dend_8 { pt3dadd( -41.0659, 98.8565, 3.41016, 0.59 ) }
    dend_8 { pt3dadd( -41.4835, 99.6479, 3.88106, 0.81 ) }
    dend_8 { pt3dadd( -41.6958, 100.054, 4.17238, 0.81 ) }
    dend_8 { pt3dadd( -42.0421, 100.658, 4.75693, 0.66 ) }
    dend_8 { pt3dadd( -42.5291, 101.471, 5.89856, 0.88 ) }
    dend_8 { pt3dadd( -42.8448, 101.945, 6.95139, 0.52 ) }
    dend_8 { pt3dadd( -43.0874, 102.277, 7.86329, 0.52 ) }
    dend_8 { pt3dadd( -43.5979, 102.921, 9.81001, 0.52 ) }
    dend_8 { pt3dadd( -43.8249, 103.225, 10.7046, 0.52 ) }
    dend_8 { pt3dadd( -44.0584, 103.601, 11.739, 0.66 ) }
    dend_8 { pt3dadd( -44.4323, 104.41, 13.6583, 0.88 ) }
    dend_8 { pt3dadd( -44.6405, 105.0, 14.8305, 0.59 ) }
    dend_8 { pt3dadd( -44.795, 105.53, 15.6328, 0.74 ) }
    dend_8 { pt3dadd( -45.1245, 106.766, 16.982, 0.74 ) }
    dend_8 { pt3dadd( -45.3091, 107.36, 17.5832, 0.59 ) }
    dend_8 { pt3dadd( -45.5261, 107.848, 18.129, 0.59 ) }
    dend_8 { pt3dadd( -45.8095, 108.47, 18.8332, 0.44 ) }
    dend_8 { pt3dadd( -46.0552, 108.934, 19.4792, 0.44 ) }
    dend_8 { pt3dadd( -46.3772, 109.37, 20.239, 0.88 ) }
    dend_8 { pt3dadd( -47.0745, 109.884, 21.4434, 0.88 ) }
    dend_8 { pt3dadd( -48.2153, 110.367, 23.1582, 1.18 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -32.5339, 89.1766, -4.34322, 0.37 ) }
    dend_7 { pt3dadd( -32.7514, 90.5225, -4.7214, 0.37 ) }
    dend_7 { pt3dadd( -32.9343, 91.4371, -4.97475, 0.37 ) }
    dend_7 { pt3dadd( -33.1616, 92.4145, -5.2221, 0.59 ) }
    dend_7 { pt3dadd( -33.2697, 92.8856, -5.3375, 0.59 ) }
    dend_7 { pt3dadd( -33.4581, 93.8152, -5.54635, 0.37 ) }
    dend_7 { pt3dadd( -33.5924, 94.5689, -5.69442, 0.37 ) }
    dend_7 { pt3dadd( -33.7106, 95.2285, -5.80161, 0.37 ) }
    dend_7 { pt3dadd( -33.8868, 96.3305, -5.92629, 0.81 ) }
    dend_7 { pt3dadd( -33.9936, 97.1329, -5.98177, 0.81 ) }
    dend_7 { pt3dadd( -34.0858, 97.8818, -6.01871, 0.59 ) }
    dend_7 { pt3dadd( -34.196, 98.8145, -6.06101, 0.52 ) }
    dend_7 { pt3dadd( -34.3219, 99.9688, -6.12853, 0.52 ) }
    dend_7 { pt3dadd( -34.4144, 100.84, -6.20426, 0.52 ) }
    dend_7 { pt3dadd( -34.5068, 101.62, -6.30088, 0.96 ) }
    dend_7 { pt3dadd( -34.6391, 102.458, -6.44799, 0.96 ) }
    dend_7 { pt3dadd( -34.7961, 103.267, -6.66556, 0.66 ) }
    dend_7 { pt3dadd( -34.9504, 104.011, -6.93358, 0.37 ) }
    dend_7 { pt3dadd( -35.1435, 104.863, -7.31385, 0.37 ) }
    dend_7 { pt3dadd( -35.2276, 105.199, -7.48734, 0.74 ) }
    dend_7 { pt3dadd( -35.3898, 105.804, -7.842, 0.96 ) }
    dend_7 { pt3dadd( -35.601, 106.557, -8.35548, 1.18 ) }
    dend_7 { pt3dadd( -35.6856, 106.843, -8.58313, 1.18 ) }
    dend_7 { pt3dadd( -35.9397, 107.665, -9.34881, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_7 { pt3dadd( -36.1798, 108.409, -10.1098, 0.66 ) }
    dend_7 { pt3dadd( -36.358, 108.945, -10.6918, 0.66 ) }
    dend_7 { pt3dadd( -36.6721, 109.835, -11.7635, 0.37 ) }
    dend_7 { pt3dadd( -36.9022, 110.374, -12.4904, 0.37 ) }
    dend_7 { pt3dadd( -37.1614, 110.897, -13.31, 0.37 ) }
    dend_7 { pt3dadd( -37.5297, 111.492, -14.4031, 0.74 ) }
    dend_7 { pt3dadd( -37.6798, 111.673, -14.7918, 0.74 ) }
    dend_7 { pt3dadd( -38.0018, 111.971, -15.5311, 0.74 ) }
    dend_7 { pt3dadd( -38.3068, 112.187, -16.1315, 0.37 ) }
    dend_7 { pt3dadd( -39.0789, 112.635, -17.4335, 0.37 ) }
    dend_7 { pt3dadd( -39.4995, 112.852, -18.0475, 0.29 ) }
    dend_7 { pt3dadd( -39.8204, 113.007, -18.4816, 0.29 ) }
    dend_7 { pt3dadd( -40.4393, 113.299, -19.274, 0.44 ) }
    dend_7 { pt3dadd( -40.9039, 113.508, -19.8148, 0.59 ) }
    dend_7 { pt3dadd( -41.4726, 113.758, -20.424, 0.88 ) }
    dend_7 { pt3dadd( -41.8291, 113.894, -20.7507, 1.33 ) }
    dend_7 { pt3dadd( -42.3471, 114.088, -21.2079, 1.4 ) }
    dend_7 { pt3dadd( -43.1105, 114.356, -21.8344, 0.29 ) }
    dend_7 { pt3dadd( -43.6135, 114.503, -22.2111, 0.29 ) }
    dend_7 { pt3dadd( -44.1472, 114.626, -22.6226, 0.66 ) }
    dend_7 { pt3dadd( -44.4212, 114.687, -22.8292, 0.66 ) }
    dend_7 { pt3dadd( -44.7945, 114.787, -23.1148, 0.37 ) }
    dend_7 { pt3dadd( -45.0651, 114.878, -23.3156, 0.29 ) }
    dend_7 { pt3dadd( -45.6157, 115.112, -23.7331, 0.29 ) }
    dend_7 { pt3dadd( -45.9798, 115.287, -24.0515, 0.29 ) }
    dend_7 { pt3dadd( -46.6611, 115.65, -24.6948, 1.11 ) }
    dend_7 { pt3dadd( -47.1232, 115.896, -25.1665, 1.55 ) }
    dend_7 { pt3dadd( -47.4869, 116.077, -25.5554, 1.25 ) }
    dend_7 { pt3dadd( -47.8624, 116.253, -25.9812, 0.74 ) }
    dend_7 { pt3dadd( -48.4359, 116.5, -26.6985, 0.29 ) }
    dend_7 { pt3dadd( -48.8572, 116.658, -27.2513, 0.29 ) }
    dend_7 { pt3dadd( -49.5149, 116.824, -28.1326, 0.66 ) }
    dend_7 { pt3dadd( -49.9035, 116.907, -28.6411, 0.88 ) }
    dend_7 { pt3dadd( -50.2245, 116.971, -29.075, 0.88 ) }
    dend_7 { pt3dadd( -50.5938, 117.033, -29.5826, 0.88 ) }
    dend_7 { pt3dadd( -51.083, 117.07, -30.253, 0.66 ) }
    dend_7 { pt3dadd( -51.6499, 117.065, -31.0703, 0.29 ) }
    dend_7 { pt3dadd( -52.1163, 117.017, -31.733, 0.29 ) }
    dend_7 { pt3dadd( -52.6711, 116.913, -32.5026, 0.66 ) }
    dend_7 { pt3dadd( -52.932, 116.845, -32.8547, 0.66 ) }
    dend_7 { pt3dadd( -53.5059, 116.677, -33.5916, 0.29 ) }
    dend_7 { pt3dadd( -53.9976, 116.517, -34.2159, 0.29 ) }
    dend_7 { pt3dadd( -54.6209, 116.309, -34.984, 1.25 ) }
    dend_7 { pt3dadd( -55.0189, 116.178, -35.4641, 1.77 ) }
    dend_7 { pt3dadd( -55.5113, 116.054, -36.0202, 1.77 ) }
    dend_7 { pt3dadd( -56.1148, 115.965, -36.6774, 1.55 ) }
    dend_7 { pt3dadd( -56.49, 115.949, -37.0857, 1.18 ) }
    dend_7 { pt3dadd( -56.8287, 115.95, -37.4791, 1.18 ) }
    dend_7 { pt3dadd( -57.3393, 115.971, -38.163, 0.59 ) }
    dend_7 { pt3dadd( -57.9406, 116.005, -39.0063, 0.22 ) }
    dend_7 { pt3dadd( -58.3744, 116.033, -39.6464, 0.66 ) }
    dend_7 { pt3dadd( -58.6516, 116.051, -40.1017, 0.66 ) }
    dend_7 { pt3dadd( -59.2596, 116.089, -41.1684, 0.29 ) }
    dend_7 { pt3dadd( -59.7617, 116.113, -42.0753, 0.74 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 54/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -111.619, -22.1975, -42.4534, 0.59 ) }
    dend_24 { pt3dadd( -110.341, -23.2562, -41.402, 0.59 ) }
    dend_24 { pt3dadd( -109.336, -24.1048, -40.604, 0.29 ) }
    dend_24 { pt3dadd( -108.404, -24.8715, -39.8102, 0.29 ) }
    dend_24 { pt3dadd( -107.737, -25.4052, -39.1494, 0.74 ) }
    dend_24 { pt3dadd( -107.206, -25.8314, -38.578, 0.74 ) }
    dend_24 { pt3dadd( -106.613, -26.3373, -37.9025, 0.74 ) }
    dend_24 { pt3dadd( -106.233, -26.6862, -37.4082, 0.74 ) }
    dend_24 { pt3dadd( -105.387, -27.6228, -36.2676, 0.29 ) }
    dend_24 { pt3dadd( -104.689, -28.629, -35.2146, 0.29 ) }
    dend_24 { pt3dadd( -104.269, -29.3913, -34.5296, 0.52 ) }
    dend_24 { pt3dadd( -103.986, -30.0562, -34.026, 0.74 ) }
    dend_24 { pt3dadd( -103.733, -30.7973, -33.5458, 0.74 ) }
    dend_24 { pt3dadd( -103.462, -31.7276, -33.0373, 0.66 ) }
    dend_24 { pt3dadd( -103.03, -33.3624, -32.3017, 0.59 ) }
    dend_24 { pt3dadd( -102.663, -34.7839, -31.7028, 0.44 ) }
    dend_24 { pt3dadd( -102.315, -36.2528, -31.0238, 0.37 ) }
    dend_24 { pt3dadd( -102.058, -37.4627, -30.3817, 0.37 ) }
    dend_24 { pt3dadd( -101.902, -38.4293, -29.7911, 0.37 ) }
    dend_24 { pt3dadd( -101.831, -39.33, -29.1704, 0.66 ) }
    dend_24 { pt3dadd( -101.846, -39.9747, -28.6945, 0.66 ) }
    dend_24 { pt3dadd( -101.975, -41.0121, -27.8179, 0.29 ) }
    dend_24 { pt3dadd( -102.113, -41.777, -27.1263, 0.29 ) }
    dend_24 { pt3dadd( -102.333, -42.721, -26.1945, 0.66 ) }
    dend_24 { pt3dadd( -102.533, -43.4298, -25.4646, 0.88 ) }
    dend_24 { pt3dadd( -102.798, -44.2753, -24.5831, 0.37 ) }
    dend_24 { pt3dadd( -103.056, -45.1561, -23.701, 0.22 ) }
    dend_24 { pt3dadd( -103.246, -45.9803, -22.9124, 0.59 ) }
    dend_24 { pt3dadd( -103.395, -46.9104, -22.055, 0.59 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 83/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -111.619, -22.1975, -42.4534, 1.11 ) }
    dend_21 { pt3dadd( -112.729, -21.8734, -43.1613, 1.11 ) }
    dend_21 { pt3dadd( -113.235, -21.7424, -43.4512, 1.11 ) }
    dend_21 { pt3dadd( -113.881, -21.5873, -43.7828, 0.81 ) }
    dend_21 { pt3dadd( -114.444, -21.4369, -44.0607, 1.03 ) }
    dend_21 { pt3dadd( -114.964, -21.2843, -44.3079, 1.03 ) }
    dend_21 { pt3dadd( -115.537, -21.1105, -44.5671, 1.03 ) }
    dend_21 { pt3dadd( -116.359, -20.8729, -44.8697, 0.88 ) }
    dend_21 { pt3dadd( -117.188, -20.6592, -45.1464, 1.11 ) }
    dend_21 { pt3dadd( -117.682, -20.5375, -45.3041, 1.47 ) }
    dend_21 { pt3dadd( -118.326, -20.3756, -45.5054, 1.47 ) }
    dend_21 { pt3dadd( -119.063, -20.1864, -45.7254, 1.47 ) }
    dend_21 { pt3dadd( -119.953, -19.9545, -45.976, 1.47 ) }
    dend_21 { pt3dadd( -121.165, -19.6689, -46.3035, 1.47 ) }
    dend_21 { pt3dadd( -121.645, -19.5754, -46.4282, 1.47 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 98/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -48.2153, 110.367, 23.1582, 0.29 ) }
    dend_10 { pt3dadd( -48.4989, 109.139, 23.8284, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_10 { pt3dadd( -48.6513, 108.539, 24.1726, 0.29 ) }
    dend_10 { pt3dadd( -48.8444, 107.828, 24.6233, 0.29 ) }
    dend_10 { pt3dadd( -49.1109, 106.867, 25.2329, 0.52 ) }
    dend_10 { pt3dadd( -49.3306, 105.985, 25.875, 0.81 ) }
    dend_10 { pt3dadd( -49.451, 105.469, 26.3033, 0.81 ) }
    dend_10 { pt3dadd( -49.6487, 104.597, 27.1281, 0.29 ) }
    dend_10 { pt3dadd( -49.8546, 103.639, 28.0898, 0.44 ) }
    dend_10 { pt3dadd( -50.0022, 102.927, 28.8414, 0.37 ) }
    dend_10 { pt3dadd( -50.2603, 101.583, 30.3503, 0.52 ) }
    dend_10 { pt3dadd( -50.4189, 100.72, 31.4042, 0.81 ) }
    dend_10 { pt3dadd( -50.4862, 100.293, 31.9594, 0.59 ) }
    dend_10 { pt3dadd( -52.7053, 93.6251, 39.3048, 0.59 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 12/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -48.2153, 110.367, 23.1582, 0.37 ) }
    dend_9 { pt3dadd( -48.6021, 111.939, 23.9253, 0.37 ) }
    dend_9 { pt3dadd( -48.8119, 112.545, 24.2224, 0.37 ) }
    dend_9 { pt3dadd( -49.0496, 113.134, 24.4946, 0.37 ) }
    dend_9 { pt3dadd( -49.3913, 113.933, 24.8624, 0.44 ) }
    dend_9 { pt3dadd( -49.7752, 114.773, 25.322, 0.44 ) }
    dend_9 { pt3dadd( -50.0282, 115.287, 25.622, 0.37 ) }
    dend_9 { pt3dadd( -50.4385, 116.001, 26.0165, 0.29 ) }
    dend_9 { pt3dadd( -50.7474, 116.476, 26.2749, 0.44 ) }
    dend_9 { pt3dadd( -51.1126, 117.023, 26.5749, 0.29 ) }
    dend_9 { pt3dadd( -51.7882, 118.106, 27.1275, 0.52 ) }
    dend_9 { pt3dadd( -52.1559, 118.791, 27.4155, 0.44 ) }
    dend_9 { pt3dadd( -52.5318, 119.528, 27.6856, 0.44 ) }
    dend_9 { pt3dadd( -52.9342, 120.336, 27.9349, 0.37 ) }
    dend_9 { pt3dadd( -53.2169, 120.883, 28.0765, 0.37 ) }
    dend_9 { pt3dadd( -53.6032, 121.586, 28.2339, 0.29 ) }
    dend_9 { pt3dadd( -53.9607, 122.233, 28.3762, 0.29 ) }
    dend_9 { pt3dadd( -54.2659, 122.799, 28.5511, 0.22 ) }
    dend_9 { pt3dadd( -54.556, 123.317, 28.7618, 0.22 ) }
    dend_9 { pt3dadd( -54.7897, 123.724, 28.9547, 0.37 ) }
    dend_9 { pt3dadd( -55.3143, 124.638, 29.3987, 0.52 ) }
    dend_9 { pt3dadd( -55.6781, 125.276, 29.7169, 0.44 ) }
    dend_9 { pt3dadd( -55.9393, 125.77, 29.9523, 0.29 ) }
    dend_9 { pt3dadd( -56.2108, 126.352, 30.2071, 0.29 ) }
    dend_9 { pt3dadd( -56.4841, 126.976, 30.454, 0.29 ) }
    dend_9 { pt3dadd( -56.9415, 128.063, 30.8892, 0.44 ) }
    dend_9 { pt3dadd( -57.2232, 128.768, 31.1718, 0.52 ) }
    dend_9 { pt3dadd( -57.4409, 129.321, 31.4251, 0.44 ) }
    dend_9 { pt3dadd( -57.6793, 129.936, 31.734, 0.29 ) }
    dend_9 { pt3dadd( -57.9149, 130.548, 32.0741, 0.29 ) }
    dend_9 { pt3dadd( -58.2189, 131.315, 32.5006, 0.44 ) }
    dend_9 { pt3dadd( -58.3857, 131.756, 32.7734, 0.74 ) }
    dend_9 { pt3dadd( -58.6641, 132.537, 33.2929, 0.88 ) }
    dend_9 { pt3dadd( -58.7989, 132.911, 33.5639, 0.29 ) }
    dend_9 { pt3dadd( -58.9738, 133.403, 33.9282, 0.29 ) }
    dend_9 { pt3dadd( -59.2695, 134.198, 34.4567, 0.29 ) }
    dend_9 { pt3dadd( -62.8333, 140.681, 37.2216, 0.29 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 49/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -121.645, -19.5754, -46.4282, 0.44 ) }
    dend_23 { pt3dadd( -122.541, -19.9479, -46.7943, 0.44 ) }
    dend_23 { pt3dadd( -122.811, -20.0658, -46.8894, 0.52 ) }
    dend_23 { pt3dadd( -123.142, -20.2008, -46.9924, 0.52 ) }
    dend_23 { pt3dadd( -123.711, -20.4125, -47.1552, 0.37 ) }
    dend_23 { pt3dadd( -124.494, -20.691, -47.3564, 0.44 ) }
    dend_23 { pt3dadd( -125.175, -20.9391, -47.5113, 0.29 ) }
    dend_23 { pt3dadd( -125.955, -21.2598, -47.697, 0.29 ) }
    dend_23 { pt3dadd( -126.525, -21.5088, -47.8178, 0.29 ) }
    dend_23 { pt3dadd( -126.981, -21.7241, -47.8953, 0.37 ) }
    dend_23 { pt3dadd( -127.691, -22.0969, -47.9712, 0.37 ) }
    dend_23 { pt3dadd( -128.241, -22.4272, -48.0077, 0.37 ) }
    dend_23 { pt3dadd( -129.117, -23.0336, -48.0512, 0.59 ) }
    dend_23 { pt3dadd( -129.356, -23.2363, -48.0483, 0.96 ) }
    dend_23 { pt3dadd( -129.733, -23.6039, -48.02, 0.96 ) }
    dend_23 { pt3dadd( -130.134, -24.0524, -47.9581, 1.18 ) }
    dend_23 { pt3dadd( -130.354, -24.3346, -47.9032, 1.03 ) }
    dend_23 { pt3dadd( -130.768, -24.9051, -47.766, 0.52 ) }
    dend_23 { pt3dadd( -131.398, -25.8415, -47.4943, 0.29 ) }
    dend_23 { pt3dadd( -131.678, -26.297, -47.3762, 0.74 ) }
    dend_23 { pt3dadd( -132.055, -26.9677, -47.2194, 0.88 ) }
    dend_23 { pt3dadd( -132.328, -27.5149, -47.1038, 1.03 ) }
    dend_23 { pt3dadd( -132.469, -27.8513, -47.03, 1.03 ) }
    dend_23 { pt3dadd( -132.572, -28.1606, -46.9542, 0.81 ) }
    dend_23 { pt3dadd( -132.8, -28.9094, -46.7261, 0.44 ) }
    dend_23 { pt3dadd( -132.989, -29.5499, -46.5373, 0.37 ) }
    dend_23 { pt3dadd( -133.14, -30.0496, -46.3944, 0.37 ) }
    dend_23 { pt3dadd( -133.328, -30.6572, -46.2137, 0.22 ) }
    dend_23 { pt3dadd( -133.62, -31.549, -45.9147, 0.22 ) }
    dend_23 { pt3dadd( -134.081, -32.7732, -45.3855, 0.22 ) }
    dend_23 { pt3dadd( -134.419, -33.5972, -45.0068, 1.03 ) }
    dend_23 { pt3dadd( -134.637, -34.1073, -44.7766, 1.18 ) }
    dend_23 { pt3dadd( -134.819, -34.4795, -44.5865, 1.18 ) }
    dend_23 { pt3dadd( -135.215, -35.1525, -44.2028, 0.74 ) }
    dend_23 { pt3dadd( -135.908, -36.1082, -43.5812, 0.52 ) }
    dend_23 { pt3dadd( -136.527, -36.8278, -43.0703, 0.44 ) }
    dend_23 { pt3dadd( -136.776, -37.0793, -42.8827, 0.59 ) }
    dend_23 { pt3dadd( -137.753, -38.0006, -42.2215, 0.22 ) }
    dend_23 { pt3dadd( -138.384, -38.5624, -41.8204, 0.22 ) }
    dend_23 { pt3dadd( -139.262, -39.3048, -41.2997, 0.22 ) }
    dend_23 { pt3dadd( -140.091, -39.972, -40.8392, 0.22 ) }
    dend_23 { pt3dadd( -140.696, -40.4163, -40.502, 0.74 ) }
    dend_23 { pt3dadd( -141.001, -40.6308, -40.3476, 0.74 ) }
    dend_23 { pt3dadd( -141.631, -41.0488, -40.0923, 0.59 ) }
    dend_23 { pt3dadd( -142.207, -41.3896, -39.8833, 0.22 ) }
    dend_23 { pt3dadd( -142.62, -41.5892, -39.7597, 0.66 ) }
    dend_23 { pt3dadd( -143.364, -41.8972, -39.5798, 0.22 ) }
    dend_23 { pt3dadd( -143.72, -42.044, -39.5086, 0.29 ) }
    dend_23 { pt3dadd( -144.461, -42.3037, -39.3365, 0.29 ) }
    dend_23 { pt3dadd( -144.861, -42.4301, -39.2384, 0.44 ) }
    dend_23 { pt3dadd( -145.325, -42.5539, -39.1092, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_23 { pt3dadd( -145.713, -42.6539, -38.9853, 0.29 ) }
    dend_23 { pt3dadd( -146.31, -42.82, -38.7799, 0.29 ) }
    dend_23 { pt3dadd( -147.78, -43.2563, -38.2732, 0.22 ) }
    dend_23 { pt3dadd( -148.292, -43.4214, -38.0921, 1.18 ) }
    dend_23 { pt3dadd( -148.71, -43.5713, -37.9519, 1.47 ) }
    dend_23 { pt3dadd( -149.005, -43.684, -37.8688, 1.47 ) }
    dend_23 { pt3dadd( -149.775, -43.9845, -37.7154, 0.96 ) }
    dend_23 { pt3dadd( -150.465, -44.2647, -37.6276, 0.74 ) }
    dend_23 { pt3dadd( -150.812, -44.4214, -37.605, 1.11 ) }
    dend_23 { pt3dadd( -151.316, -44.6467, -37.5486, 1.25 ) }
    dend_23 { pt3dadd( -152.039, -44.9662, -37.4303, 0.66 ) }
    dend_23 { pt3dadd( -152.6, -45.213, -37.3183, 0.66 ) }
    dend_23 { pt3dadd( -153.281, -45.5311, -37.1496, 1.18 ) }
    dend_23 { pt3dadd( -153.921, -45.846, -36.9705, 1.18 ) }
    dend_23 { pt3dadd( -154.541, -46.1486, -36.797, 1.03 ) }
    dend_23 { pt3dadd( -155.276, -46.5154, -36.5954, 0.66 ) }
    dend_23 { pt3dadd( -155.732, -46.7402, -36.4761, 0.29 ) }
    dend_23 { pt3dadd( -156.242, -46.9765, -36.3581, 0.37 ) }
    dend_23 { pt3dadd( -156.575, -47.1175, -36.2881, 0.37 ) }
    dend_23 { pt3dadd( -157.377, -47.4151, -36.1183, 0.22 ) }
    dend_23 { pt3dadd( -158.096, -47.6487, -35.9598, 0.22 ) }
    dend_23 { pt3dadd( -159.122, -47.9555, -35.7399, 0.59 ) }
    dend_23 { pt3dadd( -159.614, -48.0909, -35.6259, 0.81 ) }
    dend_23 { pt3dadd( -160.302, -48.2782, -35.4484, 0.81 ) }
    dend_23 { pt3dadd( -161.321, -48.6301, -35.1405, 0.22 ) }
    dend_23 { pt3dadd( -161.779, -48.83, -34.9831, 0.22 ) }
    dend_23 { pt3dadd( -162.453, -49.1802, -34.7486, 0.96 ) }
    dend_23 { pt3dadd( -162.971, -49.5202, -34.5676, 1.03 ) }
    dend_23 { pt3dadd( -163.156, -49.6687, -34.499, 1.03 ) }
    dend_23 { pt3dadd( -164.35, -50.7792, -34.0226, 0.22 ) }
    dend_23 { pt3dadd( -164.788, -51.238, -33.8267, 0.22 ) }
    dend_23 { pt3dadd( -165.008, -51.4808, -33.718, 0.44 ) }
    dend_23 { pt3dadd( -165.309, -51.8288, -33.5479, 0.52 ) }
    dend_23 { pt3dadd( -166.01, -52.6471, -33.1497, 0.22 ) }
    dend_23 { pt3dadd( -166.461, -53.1628, -32.891, 0.44 ) }
    dend_23 { pt3dadd( -166.797, -53.5412, -32.683, 0.52 ) }
    dend_23 { pt3dadd( -167.221, -54.0058, -32.4098, 0.52 ) }
    dend_23 { pt3dadd( -167.623, -54.4336, -32.1434, 0.44 ) }
    dend_23 { pt3dadd( -168.036, -54.8591, -31.8831, 0.22 ) }
    dend_23 { pt3dadd( -168.413, -55.2424, -31.6826, 0.44 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 40/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -121.645, -19.5754, -46.4282, 0.52 ) }
    dend_22 { pt3dadd( -122.29, -18.9519, -47.0966, 0.52 ) }
    dend_22 { pt3dadd( -122.792, -18.4816, -47.5317, 0.52 ) }
    dend_22 { pt3dadd( -123.409, -17.9459, -47.9955, 0.29 ) }
    dend_22 { pt3dadd( -123.862, -17.5956, -48.2898, 0.29 ) }
    dend_22 { pt3dadd( -124.275, -17.3136, -48.5244, 0.29 ) }
    dend_22 { pt3dadd( -124.639, -17.0954, -48.7076, 0.52 ) }
    dend_22 { pt3dadd( -125.406, -16.744, -48.9874, 0.66 ) }
    dend_22 { pt3dadd( -125.788, -16.5933, -49.11, 0.66 ) }
    dend_22 { pt3dadd( -126.297, -16.4031, -49.2721, 0.29 ) }
    dend_22 { pt3dadd( -126.738, -16.211, -49.4108, 0.29 ) }
    dend_22 { pt3dadd( -127.263, -15.9912, -49.546, 0.52 ) }
    dend_22 { pt3dadd( -127.671, -15.8395, -49.6292, 0.59 ) }
    dend_22 { pt3dadd( -128.149, -15.6878, -49.7128, 0.59 ) }
    dend_22 { pt3dadd( -128.602, -15.5381, -49.7814, 0.59 ) }
    dend_22 { pt3dadd( -129.314, -15.2803, -49.8909, 0.29 ) }
    dend_22 { pt3dadd( -129.88, -15.0735, -49.9741, 0.22 ) }
    dend_22 { pt3dadd( -130.363, -14.9357, -50.0577, 0.29 ) }
    dend_22 { pt3dadd( -130.771, -14.8668, -50.1317, 0.44 ) }
    dend_22 { pt3dadd( -131.161, -14.8514, -50.2102, 0.52 ) }
    dend_22 { pt3dadd( -131.644, -14.9116, -50.3456, 0.52 ) }
    dend_22 { pt3dadd( -131.858, -14.9589, -50.4228, 0.52 ) }
    dend_22 { pt3dadd( -132.598, -15.1253, -50.7343, 0.29 ) }
    dend_22 { pt3dadd( -132.998, -15.2286, -50.9109, 0.29 ) }
    dend_22 { pt3dadd( -133.463, -15.3723, -51.1001, 0.29 ) }
    dend_22 { pt3dadd( -134.269, -15.6492, -51.3743, 0.66 ) }
    dend_22 { pt3dadd( -134.504, -15.7355, -51.4427, 0.88 ) }
    dend_22 { pt3dadd( -135.024, -15.9199, -51.5742, 0.88 ) }
    dend_22 { pt3dadd( -135.414, -16.0347, -51.6691, 0.88 ) }
    dend_22 { pt3dadd( -135.986, -16.1783, -51.8288, 0.88 ) }
    dend_22 { pt3dadd( -136.711, -16.3352, -52.0581, 1.11 ) }
    dend_22 { pt3dadd( -137.286, -16.4286, -52.2551, 1.11 ) }
    dend_22 { pt3dadd( -138.031, -16.5375, -52.5163, 0.29 ) }
    dend_22 { pt3dadd( -138.688, -16.6204, -52.748, 0.29 ) }
    dend_22 { pt3dadd( -139.411, -16.6951, -53.016, 0.74 ) }
    dend_22 { pt3dadd( -139.723, -16.7201, -53.1461, 0.74 ) }
    dend_22 { pt3dadd( -140.618, -16.7827, -53.5481, 0.29 ) }
    dend_22 { pt3dadd( -141.263, -16.8137, -53.8465, 0.29 ) }
    dend_22 { pt3dadd( -142.161, -16.8783, -54.2896, 0.81 ) }
    dend_22 { pt3dadd( -142.925, -16.9803, -54.6781, 0.88 ) }
    dend_22 { pt3dadd( -143.531, -17.0703, -54.9899, 0.88 ) }
    dend_22 { pt3dadd( -144.006, -17.1437, -55.2332, 0.88 ) }
    dend_22 { pt3dadd( -144.412, -17.2032, -55.4494, 0.88 ) }
    dend_22 { pt3dadd( -145.375, -17.2944, -55.9846, 0.44 ) }
    dend_22 { pt3dadd( -146.149, -17.3159, -56.422, 0.88 ) }
    dend_22 { pt3dadd( -146.985, -17.273, -56.8928, 1.03 ) }
    dend_22 { pt3dadd( -147.558, -17.2069, -57.2116, 1.03 ) }
    dend_22 { pt3dadd( -148.265, -17.0888, -57.6112, 0.59 ) }
    dend_22 { pt3dadd( -149.041, -16.9235, -58.0475, 0.29 ) }
    dend_22 { pt3dadd( -149.636, -16.7505, -58.3779, 0.29 ) }
    dend_22 { pt3dadd( -150.425, -16.4855, -58.8382, 0.66 ) }
    dend_22 { pt3dadd( -151.022, -16.2688, -59.2203, 0.88 ) }
    dend_22 { pt3dadd( -151.478, -16.0719, -59.5404, 1.25 ) }
    dend_22 { pt3dadd( -151.8, -15.9066, -59.789, 1.25 ) }
    dend_22 { pt3dadd( -152.564, -15.4545, -60.4288, 0.29 ) }
    dend_22 { pt3dadd( -153.103, -15.0774, -60.9304, 0.22 ) }
    dend_22 { pt3dadd( -153.598, -14.6568, -61.4589, 0.22 ) }
    dend_22 { pt3dadd( -154.223, -14.0023, -62.2441, 0.66 ) }
    dend_22 { pt3dadd( -154.573, -13.5708, -62.7297, 1.11 ) }
    dend_22 { pt3dadd( -154.777, -13.2778, -63.0263, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_22 { pt3dadd( -155.206, -12.5724, -63.6544, 0.37 ) }
    dend_22 { pt3dadd( -155.537, -12.0351, -64.0679, 0.66 ) }
    dend_22 { pt3dadd( -156.349, -10.7988, -64.7993, 0.29 ) }
    dend_22 { pt3dadd( -156.745, -10.259, -65.0415, 0.29 ) }
    dend_22 { pt3dadd( -157.556, -9.28522, -65.3462, 0.59 ) }
    dend_22 { pt3dadd( -158.017, -8.79681, -65.4476, 0.59 ) }
    dend_22 { pt3dadd( -158.782, -8.12393, -65.5544, 0.22 ) }
    dend_22 { pt3dadd( -160.06, -7.14479, -65.6789, 0.22 ) }
    dend_22 { pt3dadd( -160.701, -6.71648, -65.7083, 0.22 ) }
    dend_22 { pt3dadd( -161.822, -6.03875, -65.7453, 0.22 ) }
    dend_22 { pt3dadd( -163.108, -5.31856, -65.7744, 0.22 ) }
    dend_22 { pt3dadd( -165.11, -4.22472, -65.823, 0.22 ) }
    dend_22 { pt3dadd( -165.965, -3.7508, -65.8322, 0.66 ) }
    dend_22 { pt3dadd( -166.789, -3.27065, -65.7736, 0.37 ) }
    dend_22 { pt3dadd( -167.248, -2.98, -65.6893, 0.37 ) }
    dend_22 { pt3dadd( -167.792, -2.60329, -65.5018, 0.52 ) }
    dend_22 { pt3dadd( -168.292, -2.21096, -65.2018, 0.66 ) }
    dend_22 { pt3dadd( -169.373, -1.29523, -64.3554, 0.22 ) }
    dend_22 { pt3dadd( -170.607, -0.226852, -63.3492, 0.66 ) }
    dend_22 { pt3dadd( -170.944, 0.0700998, -63.0909, 0.66 ) }
    dend_22 { pt3dadd( -171.661, 0.691634, -62.5735, 0.44 ) }
    dend_22 { pt3dadd( -173.255, 2.08015, -61.449, 0.15 ) }
    dend_22 { pt3dadd( -173.859, 2.60501, -61.0174, 0.15 ) }
    dend_22 { pt3dadd( -174.616, 3.25933, -60.4968, 0.15 ) }
    dend_22 { pt3dadd( -175.464, 3.95577, -59.9908, 0.52 ) }
    dend_22 { pt3dadd( -175.93, 4.34549, -59.7362, 0.74 ) }
    dend_22 { pt3dadd( -176.842, 5.10623, -59.3667, 0.74 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_52, dend_45, dend_32, dend_0, dend_62, dend_53, dend_47, dend_46, dend_38, dend_33, dend_14, dend_1, dend_66, dend_63, dend_61, dend_54, dend_51, dend_48, dend_42, dend_39, dend_37, dend_34, dend_29, dend_15, dend_3, dend_2, dend_68, dend_67, dend_65, dend_64, dend_56, dend_55, dend_50, dend_49, dend_44, dend_43, dend_41, dend_40, dend_36, dend_35, dend_31, dend_30, dend_28, dend_16, dend_11, dend_4, dend_60, dend_57, dend_25, dend_17, dend_13, dend_12, dend_6, dend_5, dend_59, dend_58, dend_27, dend_26, dend_20, dend_19, dend_18, dend_8, dend_7, dend_24, dend_21, dend_10, dend_9, dend_23, dend_22]}
    ModelViewParmSubset_2 = new SectionList()
    dend_52 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_52, dend_45, dend_32, dend_0, dend_62, dend_53, dend_47, dend_46, dend_38, dend_33, dend_14, dend_1, dend_66, dend_63, dend_61, dend_54, dend_51, dend_48, dend_42, dend_39, dend_37, dend_34, dend_29, dend_15, dend_3, dend_2, dend_68, dend_67, dend_65, dend_64, dend_56, dend_55, dend_50, dend_49, dend_44, dend_43, dend_41, dend_40, dend_36, dend_35, dend_31, dend_30, dend_28, dend_16, dend_11, dend_4, dend_60, dend_57, dend_25, dend_17, dend_13, dend_12, dend_6, dend_5, dend_59, dend_58, dend_27, dend_26, dend_20, dend_19, dend_18, dend_8, dend_7, dend_24, dend_21, dend_10, dend_9, dend_23, dend_22]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_2 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_52, dend_45, dend_32, dend_0, axon_0, dend_62, dend_53, dend_47, dend_46, dend_38, dend_33, dend_14, dend_1, axon_1, dend_66, dend_63, dend_61, dend_54, dend_51, dend_48, dend_42, dend_39, dend_37, dend_34, dend_29, dend_15, dend_3, dend_2, dend_68, dend_67, dend_65, dend_64, dend_56, dend_55, dend_50, dend_49, dend_44, dend_43, dend_41, dend_40, dend_36, dend_35, dend_31, dend_30, dend_28, dend_16, dend_11, dend_4, dend_60, dend_57, dend_25, dend_17, dend_13, dend_12, dend_6, dend_5, dend_59, dend_58, dend_27, dend_26, dend_20, dend_19, dend_18, dend_8, dend_7, dend_24, dend_21, dend_10, dend_9, dend_23, dend_22]}
    ModelViewParmSubset_5 = new SectionList()
    dend_52 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_46 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_63 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_61 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_51 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_48 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_37 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_34 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_68 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_65 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_55 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_49 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_43 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_41 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_40 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_28 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_11 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_4 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_60 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_57 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_25 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_17 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_13 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_12 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_59 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_7 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_23 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_22 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_14 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_15 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_38 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_45 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_33 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_52 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_16 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_3 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_47 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_39 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_42 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_53 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_29 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_44 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_62 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_30 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_54 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_66 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_31 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_56 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_67 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_27 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_35 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_50 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_36 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_18 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_26 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_8 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_20 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_19 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_21 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_10 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_9 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_24 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_64 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_58 OneSecGrp_SectionRef_59.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_28 all.append()
    dend_28 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_46 nseg = 7
    dend_63 nseg = 7
    dend_61 nseg = 5
    dend_51 nseg = 9
    dend_48 nseg = 3
    dend_37 nseg = 5
    dend_34 nseg = 3
    dend_2 nseg = 9
    dend_68 nseg = 5
    dend_65 nseg = 3
    dend_55 nseg = 5
    dend_49 nseg = 3
    dend_43 nseg = 3
    dend_41 nseg = 5
    dend_40 nseg = 5
    dend_28 nseg = 5
    dend_11 nseg = 5
    dend_4 nseg = 3
    dend_60 nseg = 5
    dend_57 nseg = 7
    dend_25 nseg = 3
    dend_17 nseg = 3
    dend_13 nseg = 3
    dend_12 nseg = 3
    dend_5 nseg = 7
    dend_59 nseg = 3
    dend_7 nseg = 3
    dend_23 nseg = 3
    dend_22 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_NBC_3064d86d49_0_0


