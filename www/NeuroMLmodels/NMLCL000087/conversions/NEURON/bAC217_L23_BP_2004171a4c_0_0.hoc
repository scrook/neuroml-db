// Cell: bAC217_L23_BP_2004171a4c_0_0
/*
{
  "id" : "bAC217_L23_BP_2004171a4c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -9.3824, 10.7418, 1.66", "-0.78334, -12.3815, 13.1085, 1.66", "-1.57172, -15.6186, 15.663, 1.66", "-2.92565, -21.1778, 20.05, 1.39", "-8.31025, -43.2868, 37.497, 1.11", "-9.25483, -47.1653, 40.5576, 1.11", "-10.4512, -52.0774, 44.434, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 8.2471, -0.778182, 1.39", "0.631064, 16.2344, 2.54097, 0.83", "0.635667, 18.8644, 3.63387, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-10.4512, -52.0774, 44.434, 0.83", "-13.345, -57.4232, 42.7059, 0.83", "-14.0341, -58.6961, 42.2944, 0.83", "-15.793, -61.9453, 41.2441, 0.83", "-16.5815, -63.4018, 40.7733, 0.83", "-18.2772, -66.5341, 39.7607, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-10.4512, -52.0774, 44.434, 0.83", "-10.3484, -53.0347, 44.6201, 0.83", "-10.2533, -53.9021, 44.776, 0.83", "-10.1615, -55.0442, 44.9599, 0.83", "-9.89704, -57.6494, 45.3218, 0.83", "-9.64649, -59.7959, 45.5941, 0.55", "-9.20937, -63.4388, 45.9795, 0.55", "-8.94641, -65.2425, 46.1945, 0.83", "-8.60129, -67.2977, 46.4504, 0.55", "-7.95922, -70.6374, 46.9806, 0.55", "-7.75909, -71.5879, 47.1464, 0.55", "-7.21104, -74.1635, 47.6117, 0.55", "-6.52315, -77.4073, 48.2798, 0.55", "-6.11718, -79.3493, 48.701, 0.55", "-5.60454, -81.9386, 49.2813, 0.55", "-4.84706, -86.6249, 50.3491, 0.55", "-4.51396, -89.1103, 50.8924, 0.55", "-4.29964, -90.9725, 51.2662, 0.55", "-4.21636, -92.2777, 51.4607, 0.55", "-4.19604, -93.4304, 51.5991, 0.55", "-4.25685, -95.755, 51.909, 0.55", "-4.31375, -96.9222, 52.0692, 0.55", "-4.4213, -98.7037, 52.3833, 0.55", "-4.57935, -101.089, 52.8403, 0.55", "-4.85461, -104.535, 53.5428, 0.55", "-5.09168, -107.633, 54.2215, 0.55", "-5.33107, -110.338, 54.8633, 0.83", "-5.58122, -112.918, 55.5607, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.635667, 18.8644, 3.63387, 0.83", "1.30207, 27.5235, -0.324458, 0.83", "1.53138, 29.8045, -1.27538, 0.83", "1.815, 32.5999, -2.46788, 0.83", "2.07151, 34.9086, -3.3835, 0.83", "2.48725, 38.601, -4.77124, 0.83", "3.07366, 43.4291, -6.4752, 0.83", "3.41572, 46.8644, -7.42247, 0.83", "3.82752, 50.58, -8.50431, 0.83", "4.32275, 54.3922, -9.75128, 0.55", "4.48065, 55.5995, -10.153, 0.55", "4.72198, 57.6656, -10.8577, 0.55", "5.27045, 61.9787, -12.2454, 0.55", "5.63298, 65.1089, -13.2203, 0.55", "6.60007, 72.9516, -15.6439, 0.55", "7.02601, 76.4915, -16.8865, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.635667, 18.8644, 3.63387, 0.83", "2.04329, 22.6563, 4.69098, 0.83", "3.10384, 25.645, 5.64209, 0.83", "4.69242, 30.3543, 7.3195, 0.83", "6.18617, 34.8917, 8.98768, 0.83", "7.86227, 40.6308, 10.9082, 0.83", "9.09374, 44.9575, 12.2473, 0.83", "9.91511, 48.2267, 13.2914, 0.83", "10.7505, 51.8125, 14.3268, 0.83", "10.9266, 52.7876, 14.5647, 0.83", "12.8091, 64.0, 16.732, 0.83", "13.1253, 66.3826, 17.0539, 0.83", "13.4896, 69.6224, 17.3372, 0.83", "13.7628, 72.4263, 17.5277, 0.83", "14.0181, 75.6767, 17.7077, 0.83", "14.3706, 79.7832, 17.9314, 0.83", "14.6281, 84.0116, 18.1677, 0.83", "14.8165, 86.4284, 18.2972, 0.83", "15.2037, 90.1696, 18.4742, 0.83", "15.5282, 93.8464, 18.6673, 0.83", "15.9231, 97.7129, 18.8157, 0.83", "16.4494, 102.766, 19.0614, 0.83", "16.8261, 106.066, 19.3648, 0.83", "17.0124, 107.891, 19.587, 0.83", "17.2068, 109.954, 19.9457, 0.83", "17.5284, 113.004, 20.6492, 0.83", "17.8722, 117.475, 21.9915, 0.55", "18.3984, 123.34, 23.9751, 0.55", "18.4759, 125.062, 24.6036, 0.55", "18.6201, 128.684, 25.908, 0.55", "18.6385, 130.201, 26.4403, 0.55", "18.6273, 133.046, 27.4408, 0.55", "18.6387, 136.015, 28.3415, 0.55", "18.7826, 140.338, 29.3779, 0.55", "18.8773, 143.187, 30.0177, 0.55", "18.9033, 145.779, 30.5284, 0.55", "19.0157, 149.02, 31.1386, 0.55", "19.3064, 152.403, 31.6763, 0.55", "19.847, 157.02, 32.4492, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-18.2772, -66.5341, 39.7607, 0.83", "-20.9724, -72.7427, 42.5537, 0.83", "-23.1239, -77.653, 44.5286, 0.83", "-25.737, -83.565, 46.649, 0.83", "-27.9296, -88.441, 48.2387, 0.83", "-29.2622, -91.4042, 49.2048, 0.83", "-30.8509, -94.9373, 50.3566, 0.83", "-31.9318, -97.5018, 50.9917, 0.83", "-33.1767, -100.423, 51.5861, 0.83", "-34.7713, -104.143, 51.7757, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-18.2772, -66.5341, 39.7607, 0.55", "-16.8003, -66.8447, 45.404, 0.55", "-15.0401, -67.1523, 51.3974, 0.55", "-14.1459, -67.3086, 54.4419, 0.55", "-13.0197, -67.5054, 58.2766, 0.28", "-12.8336, -67.5379, 58.9101, 0.83", "-11.8576, -67.7085, 62.2333, 0.28", "-11.6679, -67.7, 62.7967, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "7.02601, 76.4915, -16.8865, 0.55", "7.44969, 80.2351, -16.9284, 0.55", "7.97071, 84.1902, -17.0471, 0.55", "8.32067, 86.9707, -17.11, 0.55", "8.86206, 91.146, -17.1605, 0.83", "9.23738, 94.1141, -17.1825, 0.55", "9.59965, 96.8829, -17.1761, 0.55", "9.89312, 99.4735, -17.1153, 1.11", "10.5103, 103.973, -17.088, 0.55", "10.7058, 105.476, -17.1267, 0.55", "10.9604, 107.372, -17.1964, 1.11", "11.2787, 109.725, -17.3034, 0.55", "11.4662, 111.261, -17.393, 1.11", "11.9748, 115.947, -17.6607, 0.55", "12.2891, 118.413, -17.984, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "7.02601, 76.4915, -16.8865, 0.28", "7.80726, 79.0964, -19.4146, 0.28", "7.93538, 79.4858, -19.7772, 0.55", "9.07833, 82.9299, -22.8264, 0.28", "10.2788, 86.1331, -25.803, 1.11", "10.9783, 87.7943, -27.4213, 0.28", "10.9783, 87.7943, -27.4213, 0.55", "11.9321, 89.8105, -28.9052, 0.28", "12.3368, 90.581, -29.3693, 1.11", "14.4212, 93.9816, -30.2509, 0.55", "16.1524, 96.6222, -29.9822, 0.28", "18.9595, 100.745, -28.9602, 1.11", "21.3697, 104.238, -27.6613, 0.28", "21.4269, 104.319, -27.6108, 0.55", "23.0672, 106.614, -25.6819, 0.28", "23.2047, 106.817, -25.4535, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-34.7713, -104.143, 51.7757, 0.83", "-35.33, -109.927, 53.399, 0.83", "-35.7272, -114.585, 54.9945, 0.83", "-35.8567, -116.777, 55.7379, 0.83", "-35.9222, -118.042, 56.2676, 0.83", "-36.161, -121.488, 57.8131, 0.83", "-36.3469, -123.513, 58.5974, 0.83", "-36.7515, -127.346, 59.7364, 0.83", "-36.9322, -130.024, 60.5072, 0.83", "-37.0755, -134.629, 61.6271, 0.83", "-37.0748, -137.01, 62.0309, 0.83", "-37.0717, -142.859, 62.4855, 0.83", "-37.1786, -148.05, 62.5934, 0.83", "-37.4479, -152.3, 62.3728, 0.83", "-37.7957, -155.345, 62.1669, 0.83", "-37.8787, -155.956, 62.1092, 0.83", "-38.4443, -159.449, 61.9809, 0.28", "-38.6369, -160.366, 62.0238, 0.83", "-39.2952, -162.698, 62.1139, 0.28", "-40.5307, -166.825, 62.2257, 0.28", "-40.7975, -167.711, 62.284, 0.28", "-41.6239, -170.541, 62.4852, 0.83", "-42.2892, -173.059, 62.6802, 0.28", "-42.8044, -175.082, 62.8598, 0.83", "-43.1459, -176.717, 63.0289, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-34.7713, -104.143, 51.7757, 0.55", "-40.0866, -107.442, 52.6919, 0.55", "-42.3561, -108.854, 53.1916, 0.55", "-47.1332, -111.862, 54.4154, 0.55", "-49.17, -113.149, 55.011, 0.55", "-51.1536, -114.394, 55.682, 0.28", "-52.04, -114.95, 55.9818, 0.55", "-54.0794, -116.225, 56.9209, 0.28", "-55.3899, -117.059, 57.5718, 0.55", "-56.8602, -118.049, 58.5013, 0.28", "-59.1301, -119.495, 59.9736, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_BP_2004171a4c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -9.3824, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.78334, -12.3815, 13.1085, 1.66 ) }
    dend_5 { pt3dadd( -1.57172, -15.6186, 15.663, 1.66 ) }
    dend_5 { pt3dadd( -2.92565, -21.1778, 20.05, 1.39 ) }
    dend_5 { pt3dadd( -8.31025, -43.2868, 37.497, 1.11 ) }
    dend_5 { pt3dadd( -9.25483, -47.1653, 40.5576, 1.11 ) }
    dend_5 { pt3dadd( -10.4512, -52.0774, 44.434, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 8.2471, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.631064, 16.2344, 2.54097, 0.83 ) }
    dend_0 { pt3dadd( 0.635667, 18.8644, 3.63387, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -10.4512, -52.0774, 44.434, 0.83 ) }
    dend_7 { pt3dadd( -13.345, -57.4232, 42.7059, 0.83 ) }
    dend_7 { pt3dadd( -14.0341, -58.6961, 42.2944, 0.83 ) }
    dend_7 { pt3dadd( -15.793, -61.9453, 41.2441, 0.83 ) }
    dend_7 { pt3dadd( -16.5815, -63.4018, 40.7733, 0.83 ) }
    dend_7 { pt3dadd( -18.2772, -66.5341, 39.7607, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -10.4512, -52.0774, 44.434, 0.83 ) }
    dend_6 { pt3dadd( -10.3484, -53.0347, 44.6201, 0.83 ) }
    dend_6 { pt3dadd( -10.2533, -53.9021, 44.776, 0.83 ) }
    dend_6 { pt3dadd( -10.1615, -55.0442, 44.9599, 0.83 ) }
    dend_6 { pt3dadd( -9.89704, -57.6494, 45.3218, 0.83 ) }
    dend_6 { pt3dadd( -9.64649, -59.7959, 45.5941, 0.55 ) }
    dend_6 { pt3dadd( -9.20937, -63.4388, 45.9795, 0.55 ) }
    dend_6 { pt3dadd( -8.94641, -65.2425, 46.1945, 0.83 ) }
    dend_6 { pt3dadd( -8.60129, -67.2977, 46.4504, 0.55 ) }
    dend_6 { pt3dadd( -7.95922, -70.6374, 46.9806, 0.55 ) }
    dend_6 { pt3dadd( -7.75909, -71.5879, 47.1464, 0.55 ) }
    dend_6 { pt3dadd( -7.21104, -74.1635, 47.6117, 0.55 ) }
    dend_6 { pt3dadd( -6.52315, -77.4073, 48.2798, 0.55 ) }
    dend_6 { pt3dadd( -6.11718, -79.3493, 48.701, 0.55 ) }
    dend_6 { pt3dadd( -5.60454, -81.9386, 49.2813, 0.55 ) }
    dend_6 { pt3dadd( -4.84706, -86.6249, 50.3491, 0.55 ) }
    dend_6 { pt3dadd( -4.51396, -89.1103, 50.8924, 0.55 ) }
    dend_6 { pt3dadd( -4.29964, -90.9725, 51.2662, 0.55 ) }
    dend_6 { pt3dadd( -4.21636, -92.2777, 51.4607, 0.55 ) }
    dend_6 { pt3dadd( -4.19604, -93.4304, 51.5991, 0.55 ) }
    dend_6 { pt3dadd( -4.25685, -95.755, 51.909, 0.55 ) }
    dend_6 { pt3dadd( -4.31375, -96.9222, 52.0692, 0.55 ) }
    dend_6 { pt3dadd( -4.4213, -98.7037, 52.3833, 0.55 ) }
    dend_6 { pt3dadd( -4.57935, -101.089, 52.8403, 0.55 ) }
    dend_6 { pt3dadd( -4.85461, -104.535, 53.5428, 0.55 ) }
    dend_6 { pt3dadd( -5.09168, -107.633, 54.2215, 0.55 ) }
    dend_6 { pt3dadd( -5.33107, -110.338, 54.8633, 0.83 ) }
    dend_6 { pt3dadd( -5.58122, -112.918, 55.5607, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.635667, 18.8644, 3.63387, 0.83 ) }
    dend_2 { pt3dadd( 1.30207, 27.5235, -0.324458, 0.83 ) }
    dend_2 { pt3dadd( 1.53138, 29.8045, -1.27538, 0.83 ) }
    dend_2 { pt3dadd( 1.815, 32.5999, -2.46788, 0.83 ) }
    dend_2 { pt3dadd( 2.07151, 34.9086, -3.3835, 0.83 ) }
    dend_2 { pt3dadd( 2.48725, 38.601, -4.77124, 0.83 ) }
    dend_2 { pt3dadd( 3.07366, 43.4291, -6.4752, 0.83 ) }
    dend_2 { pt3dadd( 3.41572, 46.8644, -7.42247, 0.83 ) }
    dend_2 { pt3dadd( 3.82752, 50.58, -8.50431, 0.83 ) }
    dend_2 { pt3dadd( 4.32275, 54.3922, -9.75128, 0.55 ) }
    dend_2 { pt3dadd( 4.48065, 55.5995, -10.153, 0.55 ) }
    dend_2 { pt3dadd( 4.72198, 57.6656, -10.8577, 0.55 ) }
    dend_2 { pt3dadd( 5.27045, 61.9787, -12.2454, 0.55 ) }
    dend_2 { pt3dadd( 5.63298, 65.1089, -13.2203, 0.55 ) }
    dend_2 { pt3dadd( 6.60007, 72.9516, -15.6439, 0.55 ) }
    dend_2 { pt3dadd( 7.02601, 76.4915, -16.8865, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.635667, 18.8644, 3.63387, 0.83 ) }
    dend_1 { pt3dadd( 2.04329, 22.6563, 4.69098, 0.83 ) }
    dend_1 { pt3dadd( 3.10384, 25.645, 5.64209, 0.83 ) }
    dend_1 { pt3dadd( 4.69242, 30.3543, 7.3195, 0.83 ) }
    dend_1 { pt3dadd( 6.18617, 34.8917, 8.98768, 0.83 ) }
    dend_1 { pt3dadd( 7.86227, 40.6308, 10.9082, 0.83 ) }
    dend_1 { pt3dadd( 9.09374, 44.9575, 12.2473, 0.83 ) }
    dend_1 { pt3dadd( 9.91511, 48.2267, 13.2914, 0.83 ) }
    dend_1 { pt3dadd( 10.7505, 51.8125, 14.3268, 0.83 ) }
    dend_1 { pt3dadd( 10.9266, 52.7876, 14.5647, 0.83 ) }
    dend_1 { pt3dadd( 12.8091, 64.0, 16.732, 0.83 ) }
    dend_1 { pt3dadd( 13.1253, 66.3826, 17.0539, 0.83 ) }
    dend_1 { pt3dadd( 13.4896, 69.6224, 17.3372, 0.83 ) }
    dend_1 { pt3dadd( 13.7628, 72.4263, 17.5277, 0.83 ) }
    dend_1 { pt3dadd( 14.0181, 75.6767, 17.7077, 0.83 ) }
    dend_1 { pt3dadd( 14.3706, 79.7832, 17.9314, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 14.6281, 84.0116, 18.1677, 0.83 ) }
    dend_1 { pt3dadd( 14.8165, 86.4284, 18.2972, 0.83 ) }
    dend_1 { pt3dadd( 15.2037, 90.1696, 18.4742, 0.83 ) }
    dend_1 { pt3dadd( 15.5282, 93.8464, 18.6673, 0.83 ) }
    dend_1 { pt3dadd( 15.9231, 97.7129, 18.8157, 0.83 ) }
    dend_1 { pt3dadd( 16.4494, 102.766, 19.0614, 0.83 ) }
    dend_1 { pt3dadd( 16.8261, 106.066, 19.3648, 0.83 ) }
    dend_1 { pt3dadd( 17.0124, 107.891, 19.587, 0.83 ) }
    dend_1 { pt3dadd( 17.2068, 109.954, 19.9457, 0.83 ) }
    dend_1 { pt3dadd( 17.5284, 113.004, 20.6492, 0.83 ) }
    dend_1 { pt3dadd( 17.8722, 117.475, 21.9915, 0.55 ) }
    dend_1 { pt3dadd( 18.3984, 123.34, 23.9751, 0.55 ) }
    dend_1 { pt3dadd( 18.4759, 125.062, 24.6036, 0.55 ) }
    dend_1 { pt3dadd( 18.6201, 128.684, 25.908, 0.55 ) }
    dend_1 { pt3dadd( 18.6385, 130.201, 26.4403, 0.55 ) }
    dend_1 { pt3dadd( 18.6273, 133.046, 27.4408, 0.55 ) }
    dend_1 { pt3dadd( 18.6387, 136.015, 28.3415, 0.55 ) }
    dend_1 { pt3dadd( 18.7826, 140.338, 29.3779, 0.55 ) }
    dend_1 { pt3dadd( 18.8773, 143.187, 30.0177, 0.55 ) }
    dend_1 { pt3dadd( 18.9033, 145.779, 30.5284, 0.55 ) }
    dend_1 { pt3dadd( 19.0157, 149.02, 31.1386, 0.55 ) }
    dend_1 { pt3dadd( 19.3064, 152.403, 31.6763, 0.55 ) }
    dend_1 { pt3dadd( 19.847, 157.02, 32.4492, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -18.2772, -66.5341, 39.7607, 0.83 ) }
    dend_9 { pt3dadd( -20.9724, -72.7427, 42.5537, 0.83 ) }
    dend_9 { pt3dadd( -23.1239, -77.653, 44.5286, 0.83 ) }
    dend_9 { pt3dadd( -25.737, -83.565, 46.649, 0.83 ) }
    dend_9 { pt3dadd( -27.9296, -88.441, 48.2387, 0.83 ) }
    dend_9 { pt3dadd( -29.2622, -91.4042, 49.2048, 0.83 ) }
    dend_9 { pt3dadd( -30.8509, -94.9373, 50.3566, 0.83 ) }
    dend_9 { pt3dadd( -31.9318, -97.5018, 50.9917, 0.83 ) }
    dend_9 { pt3dadd( -33.1767, -100.423, 51.5861, 0.83 ) }
    dend_9 { pt3dadd( -34.7713, -104.143, 51.7757, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -18.2772, -66.5341, 39.7607, 0.55 ) }
    dend_8 { pt3dadd( -16.8003, -66.8447, 45.404, 0.55 ) }
    dend_8 { pt3dadd( -15.0401, -67.1523, 51.3974, 0.55 ) }
    dend_8 { pt3dadd( -14.1459, -67.3086, 54.4419, 0.55 ) }
    dend_8 { pt3dadd( -13.0197, -67.5054, 58.2766, 0.28 ) }
    dend_8 { pt3dadd( -12.8336, -67.5379, 58.9101, 0.83 ) }
    dend_8 { pt3dadd( -11.8576, -67.7085, 62.2333, 0.28 ) }
    dend_8 { pt3dadd( -11.6679, -67.7, 62.7967, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 7.02601, 76.4915, -16.8865, 0.55 ) }
    dend_4 { pt3dadd( 7.44969, 80.2351, -16.9284, 0.55 ) }
    dend_4 { pt3dadd( 7.97071, 84.1902, -17.0471, 0.55 ) }
    dend_4 { pt3dadd( 8.32067, 86.9707, -17.11, 0.55 ) }
    dend_4 { pt3dadd( 8.86206, 91.146, -17.1605, 0.83 ) }
    dend_4 { pt3dadd( 9.23738, 94.1141, -17.1825, 0.55 ) }
    dend_4 { pt3dadd( 9.59965, 96.8829, -17.1761, 0.55 ) }
    dend_4 { pt3dadd( 9.89312, 99.4735, -17.1153, 1.11 ) }
    dend_4 { pt3dadd( 10.5103, 103.973, -17.088, 0.55 ) }
    dend_4 { pt3dadd( 10.7058, 105.476, -17.1267, 0.55 ) }
    dend_4 { pt3dadd( 10.9604, 107.372, -17.1964, 1.11 ) }
    dend_4 { pt3dadd( 11.2787, 109.725, -17.3034, 0.55 ) }
    dend_4 { pt3dadd( 11.4662, 111.261, -17.393, 1.11 ) }
    dend_4 { pt3dadd( 11.9748, 115.947, -17.6607, 0.55 ) }
    dend_4 { pt3dadd( 12.2891, 118.413, -17.984, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 7.02601, 76.4915, -16.8865, 0.28 ) }
    dend_3 { pt3dadd( 7.80726, 79.0964, -19.4146, 0.28 ) }
    dend_3 { pt3dadd( 7.93538, 79.4858, -19.7772, 0.55 ) }
    dend_3 { pt3dadd( 9.07833, 82.9299, -22.8264, 0.28 ) }
    dend_3 { pt3dadd( 10.2788, 86.1331, -25.803, 1.11 ) }
    dend_3 { pt3dadd( 10.9783, 87.7943, -27.4213, 0.28 ) }
    dend_3 { pt3dadd( 10.9783, 87.7943, -27.4213, 0.55 ) }
    dend_3 { pt3dadd( 11.9321, 89.8105, -28.9052, 0.28 ) }
    dend_3 { pt3dadd( 12.3368, 90.581, -29.3693, 1.11 ) }
    dend_3 { pt3dadd( 14.4212, 93.9816, -30.2509, 0.55 ) }
    dend_3 { pt3dadd( 16.1524, 96.6222, -29.9822, 0.28 ) }
    dend_3 { pt3dadd( 18.9595, 100.745, -28.9602, 1.11 ) }
    dend_3 { pt3dadd( 21.3697, 104.238, -27.6613, 0.28 ) }
    dend_3 { pt3dadd( 21.4269, 104.319, -27.6108, 0.55 ) }
    dend_3 { pt3dadd( 23.0672, 106.614, -25.6819, 0.28 ) }
    dend_3 { pt3dadd( 23.2047, 106.817, -25.4535, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -34.7713, -104.143, 51.7757, 0.83 ) }
    dend_11 { pt3dadd( -35.33, -109.927, 53.399, 0.83 ) }
    dend_11 { pt3dadd( -35.7272, -114.585, 54.9945, 0.83 ) }
    dend_11 { pt3dadd( -35.8567, -116.777, 55.7379, 0.83 ) }
    dend_11 { pt3dadd( -35.9222, -118.042, 56.2676, 0.83 ) }
    dend_11 { pt3dadd( -36.161, -121.488, 57.8131, 0.83 ) }
    dend_11 { pt3dadd( -36.3469, -123.513, 58.5974, 0.83 ) }
    dend_11 { pt3dadd( -36.7515, -127.346, 59.7364, 0.83 ) }
    dend_11 { pt3dadd( -36.9322, -130.024, 60.5072, 0.83 ) }
    dend_11 { pt3dadd( -37.0755, -134.629, 61.6271, 0.83 ) }
    dend_11 { pt3dadd( -37.0748, -137.01, 62.0309, 0.83 ) }
    dend_11 { pt3dadd( -37.0717, -142.859, 62.4855, 0.83 ) }
    dend_11 { pt3dadd( -37.1786, -148.05, 62.5934, 0.83 ) }
    dend_11 { pt3dadd( -37.4479, -152.3, 62.3728, 0.83 ) }
    dend_11 { pt3dadd( -37.7957, -155.345, 62.1669, 0.83 ) }
    dend_11 { pt3dadd( -37.8787, -155.956, 62.1092, 0.83 ) }
    dend_11 { pt3dadd( -38.4443, -159.449, 61.9809, 0.28 ) }
    dend_11 { pt3dadd( -38.6369, -160.366, 62.0238, 0.83 ) }
    dend_11 { pt3dadd( -39.2952, -162.698, 62.1139, 0.28 ) }
    dend_11 { pt3dadd( -40.5307, -166.825, 62.2257, 0.28 ) }
    dend_11 { pt3dadd( -40.7975, -167.711, 62.284, 0.28 ) }
    dend_11 { pt3dadd( -41.6239, -170.541, 62.4852, 0.83 ) }
    dend_11 { pt3dadd( -42.2892, -173.059, 62.6802, 0.28 ) }
    dend_11 { pt3dadd( -42.8044, -175.082, 62.8598, 0.83 ) }
    dend_11 { pt3dadd( -43.1459, -176.717, 63.0289, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -34.7713, -104.143, 51.7757, 0.55 ) }
    dend_10 { pt3dadd( -40.0866, -107.442, 52.6919, 0.55 ) }
    dend_10 { pt3dadd( -42.3561, -108.854, 53.1916, 0.55 ) }
    dend_10 { pt3dadd( -47.1332, -111.862, 54.4154, 0.55 ) }
    dend_10 { pt3dadd( -49.17, -113.149, 55.011, 0.55 ) }
    dend_10 { pt3dadd( -51.1536, -114.394, 55.682, 0.28 ) }
    dend_10 { pt3dadd( -52.04, -114.95, 55.9818, 0.55 ) }
    dend_10 { pt3dadd( -54.0794, -116.225, 56.9209, 0.28 ) }
    dend_10 { pt3dadd( -55.3899, -117.059, 57.5718, 0.55 ) }
    dend_10 { pt3dadd( -56.8602, -118.049, 58.5013, 0.28 ) }
    dend_10 { pt3dadd( -59.1301, -119.495, 59.9736, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_5 nseg = 3
    dend_6 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 7
    dend_9 nseg = 3
    dend_4 nseg = 3
    dend_3 nseg = 3
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_BP_2004171a4c_0_0


