// Cell: bNAC219_L23_LBC_91044b50b3_0_0
/*
{
  "id" : "bNAC219_L23_LBC_91044b50b3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.701302, 11.9739, -1.24376, 2.36127", "-0.606294, 10.7546, -1.0834, 3.83931", "-0.511286, 9.53541, -0.92305, 4.78417", "-0.416278, 8.31617, -0.762698, 6.14661", "-0.32127, 7.09693, -0.602345, 7.73722", "-0.226261, 5.8777, -0.441992, 8.31396", "-0.131253, 4.65846, -0.281639, 8.14547", "-0.0362448, 3.43922, -0.121287, 7.98262", "0.0587634, 2.21999, 0.0390659, 7.82998", "0.153772, 1.00075, 0.199419, 7.57671", "0.24878, -0.218488, 0.359771, 7.56649", "0.343788, -1.43772, 0.520124, 7.52579", "0.438796, -2.65696, 0.680477, 7.17937", "0.533805, -3.8762, 0.840829, 6.69186", "0.628813, -5.09544, 1.00118, 6.36625", "0.723821, -6.31467, 1.16153, 6.05036", "0.818829, -7.53391, 1.32189, 5.80715", "0.913837, -8.75315, 1.48224, 5.61319", "1.00885, -9.97238, 1.64259, 5.41924", "1.10385, -11.1916, 1.80295, 4.79633", "1.19886, -12.4109, 1.9633, 2.79741" ]
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "3.06534, -11.3454, -6.34462, 0.83", "4.23439, -12.6068, -6.29438, 0.83", "4.86238, -13.2555, -6.23181, 0.83", "6.46569, -15.0522, -6.03953, 0.55", "7.61778, -16.4196, -5.90237, 0.55", "8.73326, -17.7292, -5.77467, 0.83", "12.1126, -21.7349, -5.47255, 0.55", "13.8569, -23.8731, -5.42447, 0.55", "15.0784, -25.4413, -5.48745, 0.55", "19.4968, -31.3967, -6.00187, 0.55", "20.3723, -32.5389, -6.14365, 0.55", "22.1721, -34.8406, -6.57718, 0.55", "25.3509, -38.7446, -7.70564, 0.55", "27.2653, -41.0723, -8.5848, 0.55", "29.0008, -43.0865, -9.4824, 0.55", "31.0767, -45.5106, -10.7157, 0.55", "33.749, -48.6443, -12.2942, 0.55", "35.8546, -51.0536, -13.486, 0.55", "38.1929, -53.6713, -14.9155, 0.55", "39.1888, -54.755, -15.5493, 0.55", "40.3231, -56.0453, -16.3918, 0.28", "41.3771, -57.264, -17.2207, 0.55", "43.2462, -59.1722, -18.4816, 0.28", "45.9408, -61.773, -20.1631, 0.28", "46.8464, -62.5159, -20.6846, 0.55", "49.9383, -64.7206, -22.3284, 0.28", "51.4734, -65.7793, -22.9937, 0.28", "54.6215, -68.0173, -23.8702, 0.55", "56.6056, -69.4491, -24.1736, 0.28", "58.0484, -70.4851, -24.3313, 0.28", "59.4315, -71.4865, -24.4516, 0.55", "63.84, -74.7182, -24.6566, 0.28", "69.9815, -79.5135, -24.9095, 0.28", "71.9385, -81.1304, -24.9649, 0.55", "74.7148, -83.5184, -24.9753, 0.83", "81.6467, -90.3152, -28.2636, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "1.93534, -13.6954, -8.45462, 1.11", "1.84621, -14.2225, -8.82519, 1.11", "1.63066, -15.8233, -9.99647, 0.83", "1.32782, -18.0723, -11.6421, 0.83", "0.656365, -23.0588, -15.2908, 0.83", "0.30965, -25.6337, -17.1748, 0.83", "0.074841, -27.3775, -18.4507, 0.83", "-0.285257, -29.7222, -20.2842, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-4.02466, 6.4247, -9.39462, 0.83", "-5.61984, 7.70604, -9.1048, 0.83", "-7.3748, 9.22714, -8.47934, 0.55", "-9.57081, 11.1685, -7.4853, 0.55", "-11.2785, 12.7274, -6.61915, 0.55", "-11.7503, 13.1976, -6.38238, 0.28", "-13.4087, 15.0565, -5.58089, 0.28", "-15.4924, 17.8526, -4.67733, 0.55", "-17.5589, 20.9164, -3.89295, 0.55", "-19.1819, 23.3505, -3.36014, 0.55", "-21.4274, 26.8443, -2.65034, 0.55", "-23.6521, 30.2677, -1.94812, 0.55", "-28.2115, 37.1318, -0.624098, 0.55", "-29.5705, 39.1606, -0.229169, 0.55", "-32.1558, 43.0284, 0.641153, 0.55", "-33.991, 45.7437, 1.41865, 0.55", "-36.0533, 48.7618, 2.53275, 0.55", "-37.2075, 50.3805, 3.24896, 0.55", "-38.9488, 52.8354, 4.52951, 0.55", "-39.6934, 53.978, 5.07518, 0.55", "-41.4342, 57.3161, 6.36582, 0.55", "-42.271, 59.1806, 6.79857, 0.55", "-43.0599, 61.2342, 7.09295, 0.28", "-43.5692, 62.679, 7.20445, 0.55", "-44.4897, 65.3616, 7.07997, 0.55", "-45.1845, 67.5529, 6.84089, 0.55", "-45.7358, 69.4028, 6.3766, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-1.15466, 12.5246, -0.304621, 2.77", "-0.827781, 13.7302, -0.304621, 2.77", "-0.193209, 16.0706, -0.304621, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.62534, 1.3347, -0.954618, 0.83", "8.8098, 2.17083, -1.20457, 0.83", "11.785, 2.94391, -1.75415, 0.55", "15.2602, 3.86927, -2.50627, 0.55", "17.8331, 4.42823, -3.06993, 0.55", "18.9911, 4.62408, -3.3296, 0.83", "23.4569, 5.23216, -4.31084, 0.55", "28.001, 5.81799, -5.35009, 0.55", "32.8319, 6.38386, -6.48646, 0.55", "39.0231, 7.02902, -7.95929, 0.55", "41.226, 7.2033, -8.41995, 0.55", "45.2309, 7.46591, -9.1429, 0.55", "46.9181, 7.54021, -9.38191, 0.55", "47.9744, 7.64065, -9.4701, 0.28", "49.0451, 7.86794, -9.5598, 0.28", "50.8294, 8.6264, -9.70632, 0.55", "52.4385, 9.59, -9.85629, 0.55", "53.7177, 10.5235, -9.98937, 0.55", "55.4503, 11.7837, -10.169, 0.28", "56.0539, 12.241, -10.2195, 0.28", "56.9942, 12.979, -10.267, 0.55", "59.1227, 14.6453, -10.3189, 0.28", "61.3649, 16.3507, -10.3032, 0.28", "62.8236, 17.3841, -10.1495, 0.28", "64.4267, 18.425, -9.85795, 0.28", "66.8752, 19.7828, -9.16615, 0.55", "67.5893, 20.1379, -8.88536, 0.55", "69.191, 20.8962, -8.12857, 0.28", "72.3838, 22.4229, -6.44806, 0.28", "74.8369, 23.6197, -5.15022, 0.55", "78.3639, 25.3847, -3.33276, 0.55", "80.2159, 26.3253, -2.33154, 0.55", "82.2387, 27.3697, -1.23288, 0.55", "83.4862, 28.0205, -0.574265, 0.55", "86.4099, 29.7231, 0.770586, 0.28", "88.2122, 30.9511, 1.46993, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.85466, -13.6854, 5.15538, 2.77", "-0.940917, -14.8189, 5.36006, 2.77", "-1.1137, -17.0893, 5.77004, 1.94", "-1.36363, -20.3737, 6.36312, 1.94", "-1.51753, -22.3961, 6.7283, 1.66", "-1.63841, -23.9846, 7.01514, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.19886, -12.4109, 1.9633, 0.83", "2.36419, -27.3656, 1.9633, 0.83", "3.52951, -42.3202, 1.9633, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-0.285257, -29.7222, -20.2842, 0.55", "-1.22858, -31.0122, -23.0824, 0.55", "-1.53657, -31.4334, -23.9959, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-0.285257, -29.7222, -20.2842, 0.55", "0.70861, -31.3559, -25.3477, 0.55", "1.27744, -32.2646, -27.7223, 0.55", "1.85816, -33.1925, -30.1467, 0.55", "2.42499, -34.0981, -32.5131, 0.55", "2.81364, -34.7189, -34.1355, 0.28", "3.02124, -35.0507, -35.0022, 0.55", "4.04722, -36.4568, -38.1412, 0.28", "5.35911, -39.3606, -44.1066, 0.28", "6.04311, -42.6385, -49.9826, 0.28", "5.66619, -47.1809, -54.979, 0.28" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-0.193209, 16.0706, -0.304621, 1.66", "1.04349, 17.8338, -0.419981, 1.66" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.193209, 16.0706, -0.304621, 0.55", "1.77964, 18.9808, -2.03017, 0.55", "3.34717, 20.9894, -2.86534, 0.55", "6.60647, 24.6483, -4.09276, 0.55", "7.51463, 25.5936, -4.3884, 0.55", "8.77851, 26.8146, -4.75228, 0.55", "10.2558, 28.1436, -5.17488, 0.55", "13.3438, 30.7881, -5.99226, 0.55", "16.4526, 33.1507, -6.54204, 0.55", "18.9008, 34.8531, -6.76795, 0.55", "19.9821, 35.5252, -6.90101, 0.55", "23.21, 37.4337, -7.36365, 0.55", "25.4155, 38.6114, -7.77924, 0.55", "27.6226, 39.7629, -8.29946, 0.55", "29.9651, 40.8751, -8.82119, 0.55", "32.8361, 42.1596, -9.48519, 0.55", "34.9919, 43.1928, -10.071, 0.55", "38.6407, 45.0681, -11.1708, 0.55", "40.3545, 46.0628, -11.741, 0.28", "42.4632, 47.6389, -12.498, 0.28", "43.6803, 48.8233, -12.9078, 0.55", "45.7928, 51.7348, -13.3813, 0.28", "46.5043, 53.1371, -13.4362, 0.28", "47.323, 55.5452, -13.4603, 0.55", "47.8613, 57.7113, -13.5221, 0.55", "48.3641, 60.1518, -13.6266, 0.55", "48.7545, 62.0145, -13.6924, 0.55", "49.3839, 64.4299, -13.7794, 0.28", "50.6409, 68.596, -14.0973, 0.28", "51.2561, 70.3759, -14.3518, 0.55", "51.8313, 72.0012, -14.6686, 0.55", "52.3172, 73.2169, -14.9878, 0.55", "53.2338, 75.4485, -15.622, 0.55", "59.9492, 81.3886, -16.3318, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-1.63841, -23.9846, 7.01514, 1.66", "-2.67304, -24.3357, 7.13288, 1.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.63841, -23.9846, 7.01514, 0.55", "-2.59482, -25.2452, 7.7078, 0.55", "-4.01479, -27.2395, 8.58439, 0.55", "-5.51113, -29.3855, 9.37238, 0.55", "-6.50618, -30.8028, 9.9532, 0.55", "-7.31459, -31.8952, 10.5291, 0.55", "-8.17758, -33.0463, 11.1759, 0.55", "-9.00882, -34.2667, 11.8434, 0.55", "-9.75463, -35.3622, 12.4602, 0.55", "-11.0729, -37.224, 13.5079, 0.55", "-13.3051, -40.2195, 15.3119, 0.55", "-14.2166, -41.4451, 16.1376, 0.55", "-15.4401, -43.1386, 17.3969, 0.55", "-16.026, -43.9152, 18.0118, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "3.52951, -42.3202, 1.9633, 0.28", "4.69484, -57.2749, 1.9633, 0.28", "5.86017, -72.2296, 1.9633, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-1.53657, -31.4334, -23.9959, 0.55", "-1.77661, -34.9823, -28.8549, 0.55", "-1.80872, -36.3945, -30.6383, 0.55", "-1.50281, -40.2458, -35.3509, 0.55", "-1.17637, -42.5058, -37.9382, 0.55", "-0.858925, -44.7034, -40.4541, 0.28", "-0.562563, -46.755, -42.803, 0.28", "-0.365578, -47.6172, -43.7758, 0.55", "1.24353, -52.8941, -49.6484, 0.28", "1.8289, -54.4875, -51.1049, 0.55", "3.43965, -63.0779, -58.1185, 0.55", "7.22902, -70.0315, -66.0473, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-1.53657, -31.4334, -23.9959, 0.55", "-2.39215, -30.0792, -29.2019, 0.55", "-3.4842, -28.3507, -35.8466, 0.55", "-4.5503, -26.6633, -42.3334, 0.28", "-5.07635, -25.8307, -45.5342, 0.55", "-7.54606, -24.0127, -55.1097, 0.55", "-11.5591, -21.9253, -64.0893, 0.55", "-16.1787, -19.3481, -72.6398, 0.55", "-19.6219, -17.1911, -81.8369, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "1.04349, 17.8338, -0.419981, 1.66", "0.867678, 21.6151, -0.548768, 1.66", "0.723855, 24.7085, -0.654123, 1.66", "0.607653, 27.2078, -0.739245, 1.66" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "1.04349, 17.8338, -0.419981, 1.11", "0.787087, 18.274, 1.5386, 1.11", "0.725006, 18.3805, 2.01282, 1.11", "0.352952, 19.0193, 4.85483, 0.83", "0.149522, 19.3685, 6.40877, 0.83", "-0.561283, 20.5888, 11.8384, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-2.67304, -24.3357, 7.13288, 1.66", "-2.76242, -24.8599, 7.13861, 1.66" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-2.67304, -24.3357, 7.13288, 0.55", "-3.19633, -27.7794, 9.56447, 0.55", "-3.49344, -30.7398, 11.8052, 0.55", "-3.58379, -31.7322, 12.5848, 0.55", "-3.87799, -34.7017, 14.9834, 0.55", "-4.00755, -37.2298, 17.0752, 0.55", "-4.08706, -40.1537, 19.4478, 0.55", "-4.13708, -41.7493, 20.9065, 0.55", "-4.29253, -43.8964, 22.9114, 0.55", "-4.55727, -46.1462, 25.0001, 0.55", "-4.85967, -48.59, 27.2615, 0.55", "-5.07005, -49.8726, 28.4807, 0.55", "-5.58056, -52.5658, 31.235, 0.55", "-5.93461, -54.7458, 33.456, 0.55", "-6.07434, -55.8598, 34.6343, 0.55", "-6.25746, -57.2398, 36.2026, 0.55", "-6.64845, -59.2572, 38.6002, 0.55", "-7.15489, -61.6354, 41.618, 0.55", "-7.78366, -64.5517, 45.363, 0.55", "-8.41368, -67.1015, 48.8397, 0.55", "-8.84939, -68.7122, 51.1024, 0.55", "-9.63208, -71.1566, 54.5928, 0.55", "-10.4798, -73.3135, 57.7533, 0.55", "-11.5424, -75.3792, 60.9466, 0.55", "-12.7848, -77.2826, 64.2399, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-16.026, -43.9152, 18.0118, 0.55", "-21.5877, -44.4932, 20.441, 0.55", "-24.0257, -44.6994, 21.3798, 0.55", "-27.4563, -45.0643, 22.5715, 0.55", "-31.3798, -45.5734, 23.8404, 0.55", "-34.7018, -46.003, 24.8282, 0.55", "-40.1719, -46.8049, 26.3704, 0.55", "-45.5141, -47.6468, 27.7769, 0.55", "-49.5368, -48.3407, 29.0021, 0.55", "-52.705, -48.8988, 29.9746, 0.55", "-57.641, -49.8484, 31.4604, 0.55", "-60.4598, -50.4051, 32.3726, 0.28", "-64.504, -51.4824, 33.7693, 0.55", "-69.2025, -52.6861, 35.6949, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-16.026, -43.9152, 18.0118, 0.55", "-15.7836, -45.1119, 20.0085, 0.55", "-15.1642, -47.9192, 24.3609, 0.55", "-14.918, -49.4303, 26.7066, 0.55", "-14.6832, -51.1316, 29.3601, 0.55", "-14.4346, -52.7755, 31.9772, 0.55", "-14.101, -54.9802, 35.4874, 0.55", "-13.8367, -57.3706, 39.2923, 0.55", "-13.5986, -59.8982, 43.0312, 0.55", "-13.3808, -61.7338, 45.7515, 0.55", "-13.2219, -63.7584, 48.9903, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "0.607653, 27.2078, -0.739245, 1.11", "-0.604795, 29.2612, -1.14916, 1.11", "-1.4767, 30.7379, -1.44394, 1.11", "-2.41818, 32.3325, -1.76225, 0.83", "-3.00821, 33.3317, -1.96173, 0.83", "-4.13351, 35.2376, -2.34218, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "0.607653, 27.2078, -0.739245, 0.55", "1.87849, 29.1424, -2.97413, 0.55", "2.49459, 30.0402, -3.83984, 0.55", "5.0581, 33.527, -6.77709, 0.55", "6.47628, 35.4776, -8.19157, 0.55", "7.87828, 37.3583, -9.40866, 0.55", "8.72991, 38.4651, -10.0704, 0.55", "10.1805, 40.1462, -10.801, 0.55", "11.4722, 41.4809, -11.2377, 0.55", "12.879, 42.8191, -11.6273, 0.55", "14.2351, 44.1063, -12.0757, 0.55", "15.078, 44.9296, -12.3894, 0.55", "18.4131, 48.1828, -13.8411, 0.55", "20.2984, 49.9736, -14.745, 0.55", "22.7897, 52.2759, -16.0015, 0.55", "24.1416, 53.4388, -16.7008, 0.55", "25.2671, 54.345, -17.2397, 0.55", "27.2059, 55.84, -18.2953, 0.83", "29.4623, 57.5889, -19.7308, 0.55", "30.9851, 58.8371, -20.7168, 0.55", "31.8745, 59.5368, -21.2319, 0.55", "33.8701, 61.0136, -22.3983, 0.55", "37.6105, 63.6146, -24.5405, 0.55", "39.9497, 65.3652, -25.8606, 0.55", "41.1449, 66.3655, -26.5636, 0.83", "42.4234, 67.5104, -27.3083, 0.55", "43.4765, 68.4502, -27.7815, 0.55", "44.4259, 69.2003, -27.9916, 0.55", "46.2698, 70.3983, -27.9729, 0.55", "47.601, 71.1918, -27.8736, 0.55", "48.2237, 71.5852, -27.8119, 0.55", "52.278, 74.6954, -27.1045, 0.55", "54.6823, 76.8697, -26.5359, 0.55", "55.6153, 77.7633, -26.292, 0.55", "56.4349, 78.6327, -26.0083, 0.55", "57.425, 79.896, -25.6498, 0.55", "59.5804, 83.2906, -24.9114, 0.55", "60.0788, 84.2378, -24.7219, 0.55", "61.0284, 86.0757, -24.4264, 0.55", "62.4887, 88.869, -23.9363, 0.55", "63.7709, 91.127, -23.5419, 0.55", "64.8869, 92.7844, -23.2317, 0.55", "66.9522, 95.3764, -22.8195, 0.55", "67.9929, 96.5532, -22.6574, 0.55", "69.0955, 97.7542, -22.5176, 0.28", "69.8641, 98.5308, -22.4097, 0.83", "72.3356, 101.004, -21.9221, 0.55", "74.7216, 103.516, -21.5441, 0.55", "75.8983, 104.78, -21.4218, 0.28", "76.659, 105.573, -21.336, 0.55", "78.7159, 107.613, -21.1079, 0.28", "79.9432, 108.904, -20.9519, 0.28", "81.1141, 110.479, -20.7724, 0.28", "86.6186, 117.411, -20.5798, 0.28" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-0.561283, 20.5888, 11.8384, 0.83", "-1.95196, 22.3669, 11.5722, 0.83", "-2.82235, 23.9605, 11.6685, 0.83", "-4.45422, 27.4038, 12.4042, 0.55", "-5.2155, 29.4898, 13.3464, 0.55", "-5.49654, 30.5502, 14.0282, 0.55", "-6.17456, 33.595, 16.5833, 0.55", "-6.50881, 35.9021, 19.2279, 0.55", "-6.70224, 38.0949, 22.1473, 0.55", "-6.84004, 41.7247, 27.5344, 0.55", "-6.83875, 44.4552, 31.8496, 0.55", "-6.8143, 46.7993, 35.8733, 0.55", "-6.80047, 48.8286, 39.8114, 0.55", "-6.7834, 49.5954, 41.5072, 0.55", "-6.63723, 50.764, 44.4044, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-0.561283, 20.5888, 11.8384, 0.55", "-0.213669, 21.4407, 13.1891, 0.55", "0.769928, 23.5732, 16.2357, 0.55", "1.91801, 26.2994, 19.8468, 0.55", "2.91176, 28.8211, 23.0772, 0.55", "3.56645, 30.4867, 25.085, 0.55", "4.04837, 31.6301, 26.4422, 0.55", "5.24056, 34.2318, 29.3971, 0.55", "6.19567, 36.1311, 31.4024, 0.55", "7.6902, 38.8269, 34.2257, 0.55", "8.47329, 40.1096, 35.6362, 0.55", "9.74125, 42.0882, 37.8539, 0.55", "11.2838, 44.3909, 40.5483, 0.55", "13.3166, 47.2438, 44.1002, 0.55", "15.3177, 49.7232, 47.2969, 0.55", "17.216, 51.9799, 50.3096, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-2.76242, -24.8599, 7.13861, 1.11", "-4.43312, -29.6371, 4.00044, 1.11", "-6.01927, -34.1725, 1.02108, 1.11", "-6.96402, -36.874, -0.753507, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-2.76242, -24.8599, 7.13861, 0.55", "-1.00119, -26.7964, 5.80183, 0.55", "0.0213031, -27.9472, 4.825, 0.55", "0.927236, -29.098, 3.92178, 0.55", "1.31384, -29.5488, 3.5848, 0.55", "2.75104, -31.2421, 2.3499, 0.55", "3.87197, -32.5675, 1.50997, 0.55", "5.67752, -34.7234, 0.427179, 0.55", "7.16753, -36.5927, -0.404787, 0.55", "8.98303, -38.8171, -1.21602, 0.55", "10.3517, -40.3967, -1.68701, 0.55", "14.1291, -44.5281, -2.27083, 0.55", "15.2782, -45.7771, -2.28418, 0.55", "15.8982, -46.4322, -2.20953, 0.55", "17.9875, -48.5792, -1.81477, 0.55", "18.9164, -49.5656, -1.52549, 0.55", "21.9856, -52.5285, -0.311403, 0.55", "22.9026, -53.3905, 0.0869461, 0.55", "23.8912, -54.2796, 0.445104, 0.55", "25.0023, -55.2622, 0.80761, 0.55", "27.7906, -57.7033, 1.64767, 0.55", "30.3957, -59.9801, 2.3536, 0.55", "31.7813, -61.1447, 2.57724, 0.55", "34.1021, -63.0684, 2.84314, 0.55", "34.6235, -63.5084, 2.87274, 0.55", "36.8323, -65.4236, 2.80857, 0.55", "38.0097, -66.5265, 2.54071, 0.83", "39.6167, -68.2352, 2.0918, 0.28", "40.526, -69.2126, 1.85051, 0.55", "41.4595, -70.3046, 1.33893, 0.28", "42.6748, -71.7539, 0.449494, 0.83", "44.0784, -73.5064, -0.757125, 0.28", "45.8234, -75.6766, -2.28281, 0.28", "46.4523, -76.4812, -2.82526, 0.55", "50.1072, -81.2128, -6.4448, 0.28", "50.5328, -81.7112, -6.92441, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-13.2219, -63.7584, 48.9903, 0.55", "-13.7693, -65.1396, 50.4622, 0.55", "-14.4436, -66.5471, 52.031, 0.55", "-15.405, -68.5539, 54.2677, 0.55", "-16.2601, -70.3388, 56.2572, 0.55", "-17.1251, -72.1444, 58.2697, 0.55", "-17.7316, -73.4106, 59.681, 0.28", "-18.086, -74.0771, 60.4984, 0.28" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-13.2219, -63.7584, 48.9903, 0.55", "-12.8903, -64.8422, 50.9908, 0.55", "-12.3378, -66.6482, 54.3244, 0.55", "-11.9344, -67.9666, 56.758, 0.55", "-11.5605, -69.1886, 59.0135, 0.55", "-10.9911, -71.0499, 62.4491, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-4.13351, 35.2376, -2.34218, 0.55", "-5.46914, 35.9167, -1.91971, 0.55", "-11.139, 39.0015, -0.482622, 0.55", "-13.356, 40.2241, 0.021189, 0.55", "-15.9439, 41.6456, 0.350423, 0.55", "-18.7444, 43.0735, 0.598357, 0.55", "-21.2892, 44.3085, 0.815256, 0.55", "-22.4255, 44.8412, 0.865985, 0.55", "-24.425, 45.8079, 0.846247, 0.55", "-28.3577, 47.7331, 0.836051, 0.55", "-31.9241, 49.5389, 1.07797, 0.55", "-35.4014, 51.331, 1.39754, 0.55", "-37.088, 52.3364, 1.65383, 0.55", "-38.2053, 53.1982, 1.84685, 0.55", "-39.8602, 54.9666, 2.1782, 0.55", "-41.6044, 57.4792, 2.63663, 0.55", "-43.7623, 61.7351, 3.0638, 0.55", "-45.2389, 65.3713, 3.27454, 0.55", "-46.817, 70.122, 3.65741, 0.55", "-47.6928, 73.1831, 3.99596, 0.28", "-47.8838, 74.0303, 4.10884, 0.28", "-48.1614, 75.3979, 4.30468, 0.55", "-48.3999, 77.2276, 4.80396, 0.55", "-48.6944, 80.1029, 5.65829, 0.55", "-48.7704, 81.5281, 6.31052, 0.28", "-48.9288, 83.1309, 7.06872, 0.55", "-49.2762, 85.3851, 8.08239, 0.28", "-49.8828, 88.0804, 9.19255, 0.55", "-50.4503, 90.3796, 10.0743, 0.55", "-51.1881, 92.8142, 10.8514, 0.28", "-52.151, 95.862, 11.8359, 0.28", "-52.4633, 96.6775, 12.0999, 0.28", "-53.2711, 98.5135, 12.506, 0.55", "-57.3829, 105.155, 14.2025, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-4.13351, 35.2376, -2.34218, 0.55", "-4.13112, 37.5994, -3.89792, 0.55", "-4.1801, 38.8334, -4.64657, 0.55", "-4.45941, 41.5639, -6.20217, 0.55", "-4.98883, 45.465, -8.22845, 0.55", "-5.46039, 49.7575, -10.2609, 0.55", "-5.75435, 52.0918, -11.2943, 0.55", "-6.21404, 54.5933, -12.3317, 0.55", "-6.63309, 56.386, -13.0072, 0.55", "-7.12814, 58.4853, -13.7709, 0.55", "-7.81204, 61.4816, -14.7272, 0.55", "-8.56867, 64.5089, -15.6616, 0.55", "-9.10711, 66.5368, -16.2926, 0.55", "-9.7637, 69.1686, -17.1024, 0.55", "-11.162, 75.9674, -18.8232, 0.55", "-11.5979, 78.8318, -19.4101, 0.55", "-11.8912, 81.2866, -19.8292, 0.55", "-12.1502, 84.5973, -20.2669, 0.55", "-12.2051, 85.757, -20.3805, 0.55", "-12.2407, 93.9091, -20.5852, 0.55", "-12.1935, 98.537, -20.5015, 0.55", "-12.0376, 102.633, -20.4513, 0.55", "-11.8482, 105.406, -20.4696, 0.55", "-11.5111, 108.641, -20.4123, 0.55", "-10.9655, 112.994, -20.2436, 0.28", "-10.54, 116.081, -20.0535, 0.28", "-10.1263, 119.105, -19.775, 0.55", "-8.86228, 127.054, -18.7487, 0.55", "-8.15594, 131.332, -18.1691, 0.28", "-7.80541, 133.639, -17.8565, 0.55", "-7.45248, 136.116, -17.5589, 0.55", "-7.15874, 138.369, -17.2874, 0.55", "-6.83047, 141.303, -17.0492, 0.55", "-6.33247, 144.838, -16.8236, 0.55", "-5.95463, 147.411, -16.8406, 0.28", "-5.33159, 151.256, -16.8201, 0.55", "-4.73233, 154.759, -16.7861, 0.28", "-4.1724, 157.896, -16.7714, 0.55", "-3.19621, 163.229, -16.7881, 0.55", "-2.53302, 166.902, -16.7567, 0.55", "-0.828187, 176.488, -16.5123, 0.28", "-0.255739, 179.726, -16.3381, 0.55", "1.86033, 191.118, -17.6808, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-6.63723, 50.764, 44.4044, 0.55", "-7.36996, 51.0929, 49.9889, 0.55", "-7.62313, 51.2065, 51.9185, 0.55", "-8.27404, 51.4987, 56.8795, 0.55", "-8.87692, 51.7692, 61.4744, 0.55", "-9.23627, 51.9305, 64.2132, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-6.63723, 50.764, 44.4044, 0.55", "-7.13528, 52.0406, 44.5727, 0.55", "-7.74627, 53.7025, 44.831, 0.55", "-9.55994, 58.9172, 45.7939, 0.55", "-11.6708, 64.9728, 47.2026, 0.55", "-12.9895, 68.7225, 48.1493, 0.55", "-15.3349, 75.1986, 49.8463, 0.55", "-17.2705, 80.3919, 51.4086, 0.55", "-18.6126, 83.6848, 52.6125, 0.55", "-20.5765, 88.0488, 54.5912, 0.55", "-21.5345, 89.8415, 55.5497, 0.55", "-22.577, 91.4797, 56.6359, 0.55", "-25.1977, 94.7496, 59.2179, 0.55", "-27.5083, 97.0197, 61.175, 0.55", "-30.1056, 99.0662, 63.2479, 0.55", "-33.1056, 101.228, 65.5836, 0.55", "-36.2612, 103.346, 68.037, 0.55", "-41.2517, 106.453, 71.8273, 0.28", "-44.9955, 108.532, 74.438, 0.28", "-48.4126, 110.363, 76.7185, 0.28" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-6.96402, -36.874, -0.753507, 1.11", "-6.8119, -39.1872, -1.30283, 1.11", "-6.63577, -41.8655, -1.93886, 1.11", "-6.42966, -44.9996, -2.68312, 1.11", "-6.26109, -47.5629, -3.29184, 1.11" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-6.96402, -36.874, -0.753507, 0.55", "-9.83142, -38.8263, -1.10559, 0.55", "-12.7301, -41.1045, -1.44619, 0.55", "-15.2869, -43.3399, -2.19702, 0.55", "-17.7326, -45.61, -3.0012, 0.55", "-20.468, -48.1046, -3.75424, 0.55", "-23.2759, -50.6833, -4.47365, 0.55", "-27.0349, -54.4898, -5.4097, 0.55", "-31.1371, -59.0902, -6.51393, 0.55", "-32.9175, -61.0376, -6.98671, 0.55", "-36.6594, -64.9874, -8.03608, 0.55", "-38.0861, -66.3822, -8.43655, 0.55", "-39.6084, -67.7258, -8.81401, 0.55", "-43.3097, -70.8199, -9.67476, 0.55", "-49.4084, -75.6907, -11.0931, 0.55", "-52.0179, -77.6903, -11.9183, 0.55", "-54.5319, -79.5934, -12.8512, 0.55", "-56.2817, -80.8194, -13.4812, 0.55", "-58.0026, -81.9039, -14.095, 0.28", "-60.2154, -83.1236, -14.8431, 0.83", "-61.1923, -83.6008, -15.3936, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-6.26109, -47.5629, -3.29184, 1.11", "-6.39019, -50.7087, -3.92417, 1.11", "-6.65797, -57.2343, -5.23585, 0.83", "-6.85227, -61.9688, -6.18753, 0.83", "-7.01656, -65.9724, -6.99227, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-6.26109, -47.5629, -3.29184, 0.55", "-8.33077, -50.839, -2.37295, 0.55", "-9.45827, -52.9216, -1.89191, 0.55", "-11.1147, -56.4895, -1.22376, 0.55", "-12.835, -60.4594, -0.609973, 0.55", "-14.3367, -63.9226, 0.0453303, 0.55", "-15.2252, -65.9718, 0.433077, 0.55", "-16.0405, -68.0262, 0.681919, 0.55", "-16.9032, -70.5228, 0.999988, 0.55", "-17.2057, -71.5779, 1.1334, 0.55", "-17.9832, -76.2154, 1.46753, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-61.1923, -83.6008, -15.3936, 0.55", "-62.1154, -84.5919, -18.4701, 0.55", "-62.5966, -85.1654, -19.981, 0.55", "-64.514, -87.6269, -27.3533, 0.55", "-65.3871, -88.6495, -30.6575, 0.28", "-65.8297, -89.1679, -32.3325, 0.28", "-66.4457, -89.8893, -34.6635, 0.55", "-67.0068, -90.7527, -37.3466, 0.55", "-68.5429, -93.2734, -45.1789, 0.28", "-68.9481, -93.7554, -46.7937, 0.83", "-69.7165, -98.8487, -57.8045, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-61.1923, -83.6008, -15.3936, 0.28", "-62.1618, -84.2821, -17.9201, 0.28", "-62.5677, -84.5352, -18.9933, 0.55", "-66.7335, -87.1314, -30.0066, 0.28", "-66.9888, -87.2906, -30.6816, 0.55", "-68.1438, -88.0104, -33.7351, 0.28", "-68.6056, -88.2982, -34.9559, 0.55", "-71.5155, -90.1058, -43.9283, 0.28", "-73.9446, -93.558, -54.8787, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-7.01656, -65.9724, -6.99227, 0.83", "-7.31397, -67.3021, -7.22302, 0.83", "-7.63268, -68.727, -7.47031, 0.83", "-8.18268, -71.1861, -7.89704, 0.83", "-8.50183, -72.613, -8.14467, 0.83", "-8.94246, -74.583, -8.48655, 0.83", "-9.25369, -75.9745, -8.72803, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-7.01656, -65.9724, -6.99227, 0.55", "-6.44485, -67.39, -6.53011, 0.55", "-5.82205, -68.9788, -6.14608, 0.55", "-4.97743, -71.9072, -5.3129, 0.55", "-3.90151, -75.3111, -4.25873, 0.55", "-3.47874, -76.7094, -3.8309, 0.55", "-2.92972, -78.4536, -3.29096, 0.55", "-1.9496, -81.3986, -2.37343, 0.55", "-0.352968, -85.7987, -1.06986, 0.55", "1.6667, -90.6381, 0.180143, 0.55", "2.24379, -91.8948, 0.430769, 0.55", "2.9843, -93.3406, 0.701722, 0.55", "5.06505, -97.2059, 1.33593, 0.55", "7.5634, -101.538, 1.94114, 0.55", "9.39091, -104.343, 2.1973, 0.28", "10.0882, -105.449, 2.28308, 0.28", "10.9882, -106.846, 2.426, 0.28", "11.8511, -108.138, 2.61239, 0.28", "13.3314, -110.337, 3.09085, 0.55", "14.6433, -112.173, 3.68253, 0.55", "15.9442, -114.018, 4.37733, 0.55", "17.8058, -116.69, 5.39257, 0.55", "19.9843, -120.021, 6.76997, 0.55", "21.2191, -121.885, 7.57304, 0.28", "22.5825, -124.05, 8.52057, 0.28", "23.0952, -124.888, 8.90152, 0.28", "24.1316, -126.519, 9.7162, 0.55", "25.5471, -129.399, 11.1448, 0.28", "28.4435, -138.369, 11.5668, 0.28" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-17.9832, -76.2154, 1.46753, 0.55", "-19.115, -78.3612, 2.26559, 0.55", "-20.9233, -81.7896, 3.54075, 0.55", "-22.446, -84.6766, 4.61445, 0.28", "-24.3616, -88.3083, 5.96523, 0.55", "-24.9969, -89.5129, 6.41322, 0.28" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-17.9832, -76.2154, 1.46753, 0.55", "-19.6554, -79.1888, 2.78444, 0.55", "-20.5039, -80.4283, 3.56891, 0.55", "-22.2707, -82.7297, 5.35204, 0.55", "-23.4515, -84.163, 6.70531, 0.55", "-24.5883, -85.5101, 8.04844, 0.55", "-26.7988, -88.2745, 10.7866, 0.55", "-28.6306, -90.4514, 12.9382, 0.55", "-29.8428, -91.8536, 14.5782, 0.55", "-31.4797, -93.7101, 17.0656, 0.28", "-32.2048, -94.477, 18.1378, 0.55", "-33.206, -95.448, 19.5276, 0.28", "-34.4761, -96.7501, 21.2267, 0.55", "-37.1636, -99.4897, 24.5879, 0.28", "-37.8181, -100.107, 25.3187, 0.55", "-39.3178, -101.252, 26.7104, 0.28", "-40.5368, -101.914, 27.8381, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-9.25369, -75.9745, -8.72803, 0.83", "-9.71869, -78.6261, -9.189, 0.83", "-10.221, -81.4908, -9.68702, 0.83", "-10.6766, -84.0888, -10.1387, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-9.25369, -75.9745, -8.72803, 0.55", "-10.8149, -76.8179, -9.6033, 0.55", "-12.6021, -77.6223, -10.7333, 0.55", "-15.2891, -78.8489, -12.3832, 0.55", "-17.5353, -79.8861, -13.6944, 1.38", "-18.2792, -80.2166, -14.1053, 1.38", "-21.2459, -81.5144, -15.7749, 0.55", "-22.9303, -82.2613, -16.9558, 0.55", "-24.6239, -83.0819, -18.4464, 0.55", "-25.2442, -83.4102, -19.0224, 0.55", "-25.8765, -83.7548, -19.599, 0.55", "-28.4116, -85.3051, -21.8433, 0.55", "-31.0726, -87.2643, -24.1613, 0.55", "-33.6919, -89.4398, -26.4953, 0.55", "-35.7917, -91.2171, -28.2556, 0.55", "-37.5102, -92.866, -29.6293, 0.28", "-38.8714, -94.255, -30.7892, 0.55", "-40.6065, -96.0829, -32.2088, 0.55", "-43.5306, -99.2072, -34.4629, 0.55", "-45.9583, -101.912, -36.3672, 0.55", "-48.3735, -104.71, -38.4831, 0.55", "-52.6665, -109.76, -42.6164, 0.55", "-53.6635, -110.853, -43.6407, 0.55", "-59.5046, -114.703, -49.5281, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-10.6766, -84.0888, -10.1387, 0.83", "-11.8148, -88.7035, -7.46263, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-10.6766, -84.0888, -10.1387, 0.55", "-12.1524, -86.8868, -12.8491, 0.55", "-12.5448, -87.5657, -13.419, 0.28", "-14.9051, -91.813, -17.3147, 0.28", "-15.7248, -93.4613, -18.945, 0.28", "-16.0691, -94.2242, -19.6925, 0.28", "-16.738, -96.093, -21.5651, 0.28", "-17.3469, -98.1534, -23.5088, 0.55", "-18.2902, -102.347, -27.2964, 0.55", "-18.7043, -104.936, -29.6423, 0.28", "-18.8277, -106.145, -30.7823, 0.55", "-19.0038, -110.032, -34.5374, 0.28", "-18.9764, -111.229, -35.7692, 0.55", "-18.7385, -113.173, -37.6728, 0.55", "-22.0426, -120.575, -43.2137, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-11.8148, -88.7035, -7.46263, 0.83", "-11.9527, -93.4528, -9.75685, 0.83", "-12.0783, -95.391, -10.5487, 0.83", "-12.6921, -99.7083, -12.1411, 0.55", "-13.3024, -102.636, -13.0176, 0.55", "-13.6773, -104.238, -13.4117, 0.55", "-14.4534, -107.556, -14.0922, 0.55", "-15.2014, -110.342, -14.2954, 0.55", "-16.1841, -113.523, -14.3315, 0.55", "-17.0431, -116.204, -14.2618, 0.55", "-17.4793, -117.751, -14.148, 0.55", "-17.783, -119.102, -14.065, 0.55", "-18.0215, -120.693, -13.9849, 0.55", "-18.2593, -122.91, -13.9416, 0.55", "-18.3056, -125.701, -14.0865, 0.55", "-18.3626, -128.197, -14.4277, 0.55", "-18.5111, -130.11, -14.6486, 0.55", "-18.609, -131.344, -14.7391, 0.55", "-18.8004, -133.296, -14.8116, 0.55", "-19.0815, -136.196, -14.798, 0.55", "-19.3193, -139.787, -14.8086, 0.55", "-19.4657, -143.03, -14.8961, 0.55", "-19.4835, -146.366, -14.9997, 0.55", "-19.4488, -149.695, -15.2739, 0.55", "-19.3622, -151.908, -15.5531, 0.55", "-19.1461, -155.714, -16.1219, 0.55", "-18.8591, -159.27, -16.9034, 0.55", "-18.5335, -162.447, -17.8844, 0.55", "-18.0143, -167.63, -19.6876, 0.55", "-17.7972, -170.158, -20.5259, 0.55", "-17.6672, -172.815, -21.3371, 0.55", "-17.6129, -175.537, -22.036, 0.55", "-17.5468, -179.483, -23.0972, 0.55", "-17.6619, -181.939, -23.6083, 0.55", "-17.9523, -186.415, -24.2905, 0.55", "-18.0917, -188.416, -24.535, 0.55", "-18.2519, -190.754, -24.764, 0.55", "-18.4528, -195.635, -25.2277, 0.55", "-18.5577, -203.21, -26.1221, 0.55", "-18.4442, -207.069, -26.7595, 0.55", "-18.3153, -209.182, -27.2077, 0.55", "-18.2177, -211.074, -27.638, 0.55", "-17.9434, -215.333, -28.5939, 0.55", "-17.7429, -217.626, -29.0403, 0.55", "-17.5333, -219.528, -29.468, 0.55", "-17.2842, -222.358, -30.0381, 0.55", "-17.1107, -225.635, -30.5898, 0.55", "-17.017, -228.144, -31.0224, 0.55", "-16.9973, -231.751, -31.5962, 0.55", "-16.9884, -232.364, -31.6962, 0.55", "-16.7628, -237.781, -32.6556, 0.55", "-16.3787, -243.797, -33.759, 0.55", "-16.1398, -247.769, -34.3601, 0.55", "-16.0173, -249.981, -34.691, 0.28", "-15.9397, -251.076, -34.8359, 0.28", "-15.8272, -252.468, -35.0125, 0.55", "-15.6072, -255.533, -35.4228, 0.28", "-15.2323, -259.479, -36.0781, 0.28", "-15.0029, -262.904, -36.6251, 0.28", "-14.9483, -263.716, -36.7634, 0.55", "-14.798, -267.015, -37.4975, 0.28", "-14.7514, -270.972, -38.4963, 0.28", "-14.8155, -273.736, -39.1213, 0.28", "-15.074, -278.913, -40.1236, 0.28", "-15.4129, -281.875, -40.4754, 0.55", "-16.2833, -287.619, -40.9073, 0.28", "-17.097, -291.847, -41.0272, 0.28", "-17.9595, -295.961, -41.0161, 0.55", "-18.4672, -298.189, -40.9863, 0.28", "-20.2041, -305.443, -40.7773, 0.28", "-20.8386, -308.151, -40.7736, 0.55", "-21.8604, -312.764, -40.6938, 0.28", "-22.2262, -314.692, -40.7127, 0.83", "-22.9976, -319.331, -40.9271, 0.28", "-23.1804, -320.735, -40.9913, 0.55", "-23.6179, -326.949, -41.2214, 0.28", "-23.8261, -330.51, -41.3602, 0.55", "-23.9419, -333.677, -41.4813, 0.28", "-23.9685, -334.817, -41.5218, 0.55", "-23.938, -339.324, -41.6235, 0.28", "-23.9073, -340.504, -41.6142, 0.83", "-25.1935, -350.271, -43.363, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-11.8148, -88.7035, -7.46263, 0.55", "-11.7104, -90.602, -7.38333, 0.55", "-11.6152, -92.5857, -7.11777, 0.55", "-11.6359, -94.499, -6.82009, 0.55", "-11.7086, -97.0067, -6.40986, 0.55", "-11.738, -99.2965, -5.87465, 0.55", "-11.7402, -103.182, -4.8174, 0.55", "-11.7383, -104.844, -4.1449, 0.55", "-11.6434, -106.669, -3.23765, 0.55", "-11.593, -107.3, -2.8656, 0.55", "-11.3475, -110.085, -0.973718, 0.55", "-11.1391, -111.759, 0.256899, 0.55", "-10.8522, -114.315, 2.1938, 0.55", "-10.6804, -115.923, 3.44141, 0.55", "-10.4388, -118.599, 5.5953, 0.55", "-10.3924, -120.838, 7.45378, 0.55", "-10.4568, -122.125, 8.59234, 0.55", "-10.6687, -124.055, 10.4368, 0.55", "-10.9679, -126.092, 12.3736, 0.55", "-11.2846, -127.96, 14.1537, 0.55", "-11.6474, -129.935, 15.9822, 0.55", "-12.1206, -132.728, 18.4281, 0.55", "-12.2928, -133.884, 19.3823, 0.28", "-12.4183, -135.213, 20.3026, 0.55", "-12.477, -136.805, 20.9414, 0.28", "-12.4452, -137.524, 21.0666, 0.55", "-12.3685, -138.159, 21.0308, 0.28", "-12.2405, -138.986, 20.8208, 0.83", "-11.6042, -142.394, 19.8206, 0.28", "-11.4951, -143.102, 19.6363, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_42", "dend_41", "dend_28", "dend_27", "dend_0", "dend_44", "dend_43", "dend_30", "dend_29", "dend_6", "dend_1", "dend_46", "dend_45", "dend_36", "dend_31", "dend_8", "dend_7", "dend_5", "dend_2", "dend_38", "dend_37", "dend_33", "dend_32", "dend_10", "dend_9", "dend_4", "dend_3", "dend_40", "dend_39", "dend_35", "dend_34", "dend_14", "dend_11", "dend_18", "dend_15", "dend_13", "dend_12", "dend_20", "dend_19", "dend_17", "dend_16", "dend_22", "dend_21", "dend_24", "dend_23", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_47", "dend_42", "dend_41", "dend_28", "dend_27", "dend_0", "dend_44", "dend_43", "dend_30", "dend_29", "dend_6", "dend_1", "dend_46", "dend_45", "dend_36", "dend_31", "dend_8", "dend_7", "dend_5", "dend_2", "dend_38", "dend_37", "dend_33", "dend_32", "dend_10", "dend_9", "dend_4", "dend_3", "dend_40", "dend_39", "dend_35", "dend_34", "dend_14", "dend_11", "dend_18", "dend_15", "dend_13", "dend_12", "dend_20", "dend_19", "dend_17", "dend_16", "dend_22", "dend_21", "dend_24", "dend_23", "dend_26", "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_LBC_91044b50b3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_36, id: dend_36, parent: dend_30
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_42, dend_41, dend_28, dend_27, dend_0, dend_44, dend_43, dend_30, dend_29, dend_6, dend_1, dend_46, dend_45, dend_36, dend_31, dend_8, dend_7, dend_5, dend_2, dend_38, dend_37, dend_33, dend_32, dend_10, dend_9, dend_4, dend_3, dend_40, dend_39, dend_35, dend_34, dend_14, dend_11, dend_18, dend_15, dend_13, dend_12, dend_20, dend_19, dend_17, dend_16, dend_22, dend_21, dend_24, dend_23, dend_26, dend_25]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_42, dend_41, dend_28, dend_27, dend_0, dend_44, dend_43, dend_30, dend_29, dend_6, dend_1, dend_46, dend_45, dend_36, dend_31, dend_8, dend_7, dend_5, dend_2, dend_38, dend_37, dend_33, dend_32, dend_10, dend_9, dend_4, dend_3, dend_40, dend_39, dend_35, dend_34, dend_14, dend_11, dend_18, dend_15, dend_13, dend_12, dend_20, dend_19, dend_17, dend_16, dend_22, dend_21, dend_24, dend_23, dend_26, dend_25]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_30
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_47(0), soma_0(0.4999995275182907)
    connect dend_42(0), soma_0(0.4999995275182907)
    connect dend_41(0), soma_0(0.4999995275182907)
    connect dend_28(0), soma_0(0.4999995275182907)
    connect dend_27(0), soma_0(0.4999995275182907)
    connect dend_0(0), soma_0(0.4999995275182907)
    connect axon_0(0), soma_0(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_36(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.701302, 11.9739, -1.24376, 2.36127 ) }
    soma_0 { pt3dadd( -0.606294, 10.7546, -1.0834, 3.83931 ) }
    soma_0 { pt3dadd( -0.511286, 9.53541, -0.92305, 4.78417 ) }
    soma_0 { pt3dadd( -0.416278, 8.31617, -0.762698, 6.14661 ) }
    soma_0 { pt3dadd( -0.32127, 7.09693, -0.602345, 7.73722 ) }
    soma_0 { pt3dadd( -0.226261, 5.8777, -0.441992, 8.31396 ) }
    soma_0 { pt3dadd( -0.131253, 4.65846, -0.281639, 8.14547 ) }
    soma_0 { pt3dadd( -0.0362448, 3.43922, -0.121287, 7.98262 ) }
    soma_0 { pt3dadd( 0.0587634, 2.21999, 0.0390659, 7.82998 ) }
    soma_0 { pt3dadd( 0.153772, 1.00075, 0.199419, 7.57671 ) }
    soma_0 { pt3dadd( 0.24878, -0.218488, 0.359771, 7.56649 ) }
    soma_0 { pt3dadd( 0.343788, -1.43772, 0.520124, 7.52579 ) }
    soma_0 { pt3dadd( 0.438796, -2.65696, 0.680477, 7.17937 ) }
    soma_0 { pt3dadd( 0.533805, -3.8762, 0.840829, 6.69186 ) }
    soma_0 { pt3dadd( 0.628813, -5.09544, 1.00118, 6.36625 ) }
    soma_0 { pt3dadd( 0.723821, -6.31467, 1.16153, 6.05036 ) }
    soma_0 { pt3dadd( 0.818829, -7.53391, 1.32189, 5.80715 ) }
    soma_0 { pt3dadd( 0.913837, -8.75315, 1.48224, 5.61319 ) }
    soma_0 { pt3dadd( 1.00885, -9.97238, 1.64259, 5.41924 ) }
    soma_0 { pt3dadd( 1.10385, -11.1916, 1.80295, 4.79633 ) }
    soma_0 { pt3dadd( 1.19886, -12.4109, 1.9633, 2.79741 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 3.06534, -11.3454, -6.34462, 0.83 ) }
    dend_47 { pt3dadd( 4.23439, -12.6068, -6.29438, 0.83 ) }
    dend_47 { pt3dadd( 4.86238, -13.2555, -6.23181, 0.83 ) }
    dend_47 { pt3dadd( 6.46569, -15.0522, -6.03953, 0.55 ) }
    dend_47 { pt3dadd( 7.61778, -16.4196, -5.90237, 0.55 ) }
    dend_47 { pt3dadd( 8.73326, -17.7292, -5.77467, 0.83 ) }
    dend_47 { pt3dadd( 12.1126, -21.7349, -5.47255, 0.55 ) }
    dend_47 { pt3dadd( 13.8569, -23.8731, -5.42447, 0.55 ) }
    dend_47 { pt3dadd( 15.0784, -25.4413, -5.48745, 0.55 ) }
    dend_47 { pt3dadd( 19.4968, -31.3967, -6.00187, 0.55 ) }
    dend_47 { pt3dadd( 20.3723, -32.5389, -6.14365, 0.55 ) }
    dend_47 { pt3dadd( 22.1721, -34.8406, -6.57718, 0.55 ) }
    dend_47 { pt3dadd( 25.3509, -38.7446, -7.70564, 0.55 ) }
    dend_47 { pt3dadd( 27.2653, -41.0723, -8.5848, 0.55 ) }
    dend_47 { pt3dadd( 29.0008, -43.0865, -9.4824, 0.55 ) }
    dend_47 { pt3dadd( 31.0767, -45.5106, -10.7157, 0.55 ) }
    dend_47 { pt3dadd( 33.749, -48.6443, -12.2942, 0.55 ) }
    dend_47 { pt3dadd( 35.8546, -51.0536, -13.486, 0.55 ) }
    dend_47 { pt3dadd( 38.1929, -53.6713, -14.9155, 0.55 ) }
    dend_47 { pt3dadd( 39.1888, -54.755, -15.5493, 0.55 ) }
    dend_47 { pt3dadd( 40.3231, -56.0453, -16.3918, 0.28 ) }
    dend_47 { pt3dadd( 41.3771, -57.264, -17.2207, 0.55 ) }
    dend_47 { pt3dadd( 43.2462, -59.1722, -18.4816, 0.28 ) }
    dend_47 { pt3dadd( 45.9408, -61.773, -20.1631, 0.28 ) }
    dend_47 { pt3dadd( 46.8464, -62.5159, -20.6846, 0.55 ) }
    dend_47 { pt3dadd( 49.9383, -64.7206, -22.3284, 0.28 ) }
    dend_47 { pt3dadd( 51.4734, -65.7793, -22.9937, 0.28 ) }
    dend_47 { pt3dadd( 54.6215, -68.0173, -23.8702, 0.55 ) }
    dend_47 { pt3dadd( 56.6056, -69.4491, -24.1736, 0.28 ) }
    dend_47 { pt3dadd( 58.0484, -70.4851, -24.3313, 0.28 ) }
    dend_47 { pt3dadd( 59.4315, -71.4865, -24.4516, 0.55 ) }
    dend_47 { pt3dadd( 63.84, -74.7182, -24.6566, 0.28 ) }
    dend_47 { pt3dadd( 69.9815, -79.5135, -24.9095, 0.28 ) }
    dend_47 { pt3dadd( 71.9385, -81.1304, -24.9649, 0.55 ) }
    dend_47 { pt3dadd( 74.7148, -83.5184, -24.9753, 0.83 ) }
    dend_47 { pt3dadd( 81.6467, -90.3152, -28.2636, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 57/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 1.93534, -13.6954, -8.45462, 1.11 ) }
    dend_42 { pt3dadd( 1.84621, -14.2225, -8.82519, 1.11 ) }
    dend_42 { pt3dadd( 1.63066, -15.8233, -9.99647, 0.83 ) }
    dend_42 { pt3dadd( 1.32782, -18.0723, -11.6421, 0.83 ) }
    dend_42 { pt3dadd( 0.656365, -23.0588, -15.2908, 0.83 ) }
    dend_42 { pt3dadd( 0.30965, -25.6337, -17.1748, 0.83 ) }
    dend_42 { pt3dadd( 0.074841, -27.3775, -18.4507, 0.83 ) }
    dend_42 { pt3dadd( -0.285257, -29.7222, -20.2842, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 65/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -4.02466, 6.4247, -9.39462, 0.83 ) }
    dend_41 { pt3dadd( -5.61984, 7.70604, -9.1048, 0.83 ) }
    dend_41 { pt3dadd( -7.3748, 9.22714, -8.47934, 0.55 ) }
    dend_41 { pt3dadd( -9.57081, 11.1685, -7.4853, 0.55 ) }
    dend_41 { pt3dadd( -11.2785, 12.7274, -6.61915, 0.55 ) }
    dend_41 { pt3dadd( -11.7503, 13.1976, -6.38238, 0.28 ) }
    dend_41 { pt3dadd( -13.4087, 15.0565, -5.58089, 0.28 ) }
    dend_41 { pt3dadd( -15.4924, 17.8526, -4.67733, 0.55 ) }
    dend_41 { pt3dadd( -17.5589, 20.9164, -3.89295, 0.55 ) }
    dend_41 { pt3dadd( -19.1819, 23.3505, -3.36014, 0.55 ) }
    dend_41 { pt3dadd( -21.4274, 26.8443, -2.65034, 0.55 ) }
    dend_41 { pt3dadd( -23.6521, 30.2677, -1.94812, 0.55 ) }
    dend_41 { pt3dadd( -28.2115, 37.1318, -0.624098, 0.55 ) }
    dend_41 { pt3dadd( -29.5705, 39.1606, -0.229169, 0.55 ) }
    dend_41 { pt3dadd( -32.1558, 43.0284, 0.641153, 0.55 ) }
    dend_41 { pt3dadd( -33.991, 45.7437, 1.41865, 0.55 ) }
    dend_41 { pt3dadd( -36.0533, 48.7618, 2.53275, 0.55 ) }
    dend_41 { pt3dadd( -37.2075, 50.3805, 3.24896, 0.55 ) }
    dend_41 { pt3dadd( -38.9488, 52.8354, 4.52951, 0.55 ) }
    dend_41 { pt3dadd( -39.6934, 53.978, 5.07518, 0.55 ) }
    dend_41 { pt3dadd( -41.4342, 57.3161, 6.36582, 0.55 ) }
    dend_41 { pt3dadd( -42.271, 59.1806, 6.79857, 0.55 ) }
    dend_41 { pt3dadd( -43.0599, 61.2342, 7.09295, 0.28 ) }
    dend_41 { pt3dadd( -43.5692, 62.679, 7.20445, 0.55 ) }
    dend_41 { pt3dadd( -44.4897, 65.3616, 7.07997, 0.55 ) }
    dend_41 { pt3dadd( -45.1845, 67.5529, 6.84089, 0.55 ) }
    dend_41 { pt3dadd( -45.7358, 69.4028, 6.3766, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 92/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -1.15466, 12.5246, -0.304621, 2.77 ) }
    dend_28 { pt3dadd( -0.827781, 13.7302, -0.304621, 2.77 ) }
    dend_28 { pt3dadd( -0.193209, 16.0706, -0.304621, 1.94 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 95/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.62534, 1.3347, -0.954618, 0.83 ) }
    dend_27 { pt3dadd( 8.8098, 2.17083, -1.20457, 0.83 ) }
    dend_27 { pt3dadd( 11.785, 2.94391, -1.75415, 0.55 ) }
    dend_27 { pt3dadd( 15.2602, 3.86927, -2.50627, 0.55 ) }
    dend_27 { pt3dadd( 17.8331, 4.42823, -3.06993, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_27 { pt3dadd( 18.9911, 4.62408, -3.3296, 0.83 ) }
    dend_27 { pt3dadd( 23.4569, 5.23216, -4.31084, 0.55 ) }
    dend_27 { pt3dadd( 28.001, 5.81799, -5.35009, 0.55 ) }
    dend_27 { pt3dadd( 32.8319, 6.38386, -6.48646, 0.55 ) }
    dend_27 { pt3dadd( 39.0231, 7.02902, -7.95929, 0.55 ) }
    dend_27 { pt3dadd( 41.226, 7.2033, -8.41995, 0.55 ) }
    dend_27 { pt3dadd( 45.2309, 7.46591, -9.1429, 0.55 ) }
    dend_27 { pt3dadd( 46.9181, 7.54021, -9.38191, 0.55 ) }
    dend_27 { pt3dadd( 47.9744, 7.64065, -9.4701, 0.28 ) }
    dend_27 { pt3dadd( 49.0451, 7.86794, -9.5598, 0.28 ) }
    dend_27 { pt3dadd( 50.8294, 8.6264, -9.70632, 0.55 ) }
    dend_27 { pt3dadd( 52.4385, 9.59, -9.85629, 0.55 ) }
    dend_27 { pt3dadd( 53.7177, 10.5235, -9.98937, 0.55 ) }
    dend_27 { pt3dadd( 55.4503, 11.7837, -10.169, 0.28 ) }
    dend_27 { pt3dadd( 56.0539, 12.241, -10.2195, 0.28 ) }
    dend_27 { pt3dadd( 56.9942, 12.979, -10.267, 0.55 ) }
    dend_27 { pt3dadd( 59.1227, 14.6453, -10.3189, 0.28 ) }
    dend_27 { pt3dadd( 61.3649, 16.3507, -10.3032, 0.28 ) }
    dend_27 { pt3dadd( 62.8236, 17.3841, -10.1495, 0.28 ) }
    dend_27 { pt3dadd( 64.4267, 18.425, -9.85795, 0.28 ) }
    dend_27 { pt3dadd( 66.8752, 19.7828, -9.16615, 0.55 ) }
    dend_27 { pt3dadd( 67.5893, 20.1379, -8.88536, 0.55 ) }
    dend_27 { pt3dadd( 69.191, 20.8962, -8.12857, 0.28 ) }
    dend_27 { pt3dadd( 72.3838, 22.4229, -6.44806, 0.28 ) }
    dend_27 { pt3dadd( 74.8369, 23.6197, -5.15022, 0.55 ) }
    dend_27 { pt3dadd( 78.3639, 25.3847, -3.33276, 0.55 ) }
    dend_27 { pt3dadd( 80.2159, 26.3253, -2.33154, 0.55 ) }
    dend_27 { pt3dadd( 82.2387, 27.3697, -1.23288, 0.55 ) }
    dend_27 { pt3dadd( 83.4862, 28.0205, -0.574265, 0.55 ) }
    dend_27 { pt3dadd( 86.4099, 29.7231, 0.770586, 0.28 ) }
    dend_27 { pt3dadd( 88.2122, 30.9511, 1.46993, 0.28 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 31/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.85466, -13.6854, 5.15538, 2.77 ) }
    dend_0 { pt3dadd( -0.940917, -14.8189, 5.36006, 2.77 ) }
    dend_0 { pt3dadd( -1.1137, -17.0893, 5.77004, 1.94 ) }
    dend_0 { pt3dadd( -1.36363, -20.3737, 6.36312, 1.94 ) }
    dend_0 { pt3dadd( -1.51753, -22.3961, 6.7283, 1.66 ) }
    dend_0 { pt3dadd( -1.63841, -23.9846, 7.01514, 1.66 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 37/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.19886, -12.4109, 1.9633, 0.83 ) }
    axon_0 { pt3dadd( 2.36419, -27.3656, 1.9633, 0.83 ) }
    axon_0 { pt3dadd( 3.52951, -42.3202, 1.9633, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 40/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -0.285257, -29.7222, -20.2842, 0.55 ) }
    dend_44 { pt3dadd( -1.22858, -31.0122, -23.0824, 0.55 ) }
    dend_44 { pt3dadd( -1.53657, -31.4334, -23.9959, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 43/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -0.285257, -29.7222, -20.2842, 0.55 ) }
    dend_43 { pt3dadd( 0.70861, -31.3559, -25.3477, 0.55 ) }
    dend_43 { pt3dadd( 1.27744, -32.2646, -27.7223, 0.55 ) }
    dend_43 { pt3dadd( 1.85816, -33.1925, -30.1467, 0.55 ) }
    dend_43 { pt3dadd( 2.42499, -34.0981, -32.5131, 0.55 ) }
    dend_43 { pt3dadd( 2.81364, -34.7189, -34.1355, 0.28 ) }
    dend_43 { pt3dadd( 3.02124, -35.0507, -35.0022, 0.55 ) }
    dend_43 { pt3dadd( 4.04722, -36.4568, -38.1412, 0.28 ) }
    dend_43 { pt3dadd( 5.35911, -39.3606, -44.1066, 0.28 ) }
    dend_43 { pt3dadd( 6.04311, -42.6385, -49.9826, 0.28 ) }
    dend_43 { pt3dadd( 5.66619, -47.1809, -54.979, 0.28 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 54/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -0.193209, 16.0706, -0.304621, 1.66 ) }
    dend_30 { pt3dadd( 1.04349, 17.8338, -0.419981, 1.66 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 56/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.193209, 16.0706, -0.304621, 0.55 ) }
    dend_29 { pt3dadd( 1.77964, 18.9808, -2.03017, 0.55 ) }
    dend_29 { pt3dadd( 3.34717, 20.9894, -2.86534, 0.55 ) }
    dend_29 { pt3dadd( 6.60647, 24.6483, -4.09276, 0.55 ) }
    dend_29 { pt3dadd( 7.51463, 25.5936, -4.3884, 0.55 ) }
    dend_29 { pt3dadd( 8.77851, 26.8146, -4.75228, 0.55 ) }
    dend_29 { pt3dadd( 10.2558, 28.1436, -5.17488, 0.55 ) }
    dend_29 { pt3dadd( 13.3438, 30.7881, -5.99226, 0.55 ) }
    dend_29 { pt3dadd( 16.4526, 33.1507, -6.54204, 0.55 ) }
    dend_29 { pt3dadd( 18.9008, 34.8531, -6.76795, 0.55 ) }
    dend_29 { pt3dadd( 19.9821, 35.5252, -6.90101, 0.55 ) }
    dend_29 { pt3dadd( 23.21, 37.4337, -7.36365, 0.55 ) }
    dend_29 { pt3dadd( 25.4155, 38.6114, -7.77924, 0.55 ) }
    dend_29 { pt3dadd( 27.6226, 39.7629, -8.29946, 0.55 ) }
    dend_29 { pt3dadd( 29.9651, 40.8751, -8.82119, 0.55 ) }
    dend_29 { pt3dadd( 32.8361, 42.1596, -9.48519, 0.55 ) }
    dend_29 { pt3dadd( 34.9919, 43.1928, -10.071, 0.55 ) }
    dend_29 { pt3dadd( 38.6407, 45.0681, -11.1708, 0.55 ) }
    dend_29 { pt3dadd( 40.3545, 46.0628, -11.741, 0.28 ) }
    dend_29 { pt3dadd( 42.4632, 47.6389, -12.498, 0.28 ) }
    dend_29 { pt3dadd( 43.6803, 48.8233, -12.9078, 0.55 ) }
    dend_29 { pt3dadd( 45.7928, 51.7348, -13.3813, 0.28 ) }
    dend_29 { pt3dadd( 46.5043, 53.1371, -13.4362, 0.28 ) }
    dend_29 { pt3dadd( 47.323, 55.5452, -13.4603, 0.55 ) }
    dend_29 { pt3dadd( 47.8613, 57.7113, -13.5221, 0.55 ) }
    dend_29 { pt3dadd( 48.3641, 60.1518, -13.6266, 0.55 ) }
    dend_29 { pt3dadd( 48.7545, 62.0145, -13.6924, 0.55 ) }
    dend_29 { pt3dadd( 49.3839, 64.4299, -13.7794, 0.28 ) }
    dend_29 { pt3dadd( 50.6409, 68.596, -14.0973, 0.28 ) }
    dend_29 { pt3dadd( 51.2561, 70.3759, -14.3518, 0.55 ) }
    dend_29 { pt3dadd( 51.8313, 72.0012, -14.6686, 0.55 ) }
    dend_29 { pt3dadd( 52.3172, 73.2169, -14.9878, 0.55 ) }
    dend_29 { pt3dadd( 53.2338, 75.4485, -15.622, 0.55 ) }
    dend_29 { pt3dadd( 59.9492, 81.3886, -16.3318, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 90/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -1.63841, -23.9846, 7.01514, 1.66 ) }
    dend_6 { pt3dadd( -2.67304, -24.3357, 7.13288, 1.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 92/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.63841, -23.9846, 7.01514, 0.55 ) }
    dend_1 { pt3dadd( -2.59482, -25.2452, 7.7078, 0.55 ) }
    dend_1 { pt3dadd( -4.01479, -27.2395, 8.58439, 0.55 ) }
    dend_1 { pt3dadd( -5.51113, -29.3855, 9.37238, 0.55 ) }
    dend_1 { pt3dadd( -6.50618, -30.8028, 9.9532, 0.55 ) }
    dend_1 { pt3dadd( -7.31459, -31.8952, 10.5291, 0.55 ) }
    dend_1 { pt3dadd( -8.17758, -33.0463, 11.1759, 0.55 ) }
    dend_1 { pt3dadd( -9.00882, -34.2667, 11.8434, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( -9.75463, -35.3622, 12.4602, 0.55 ) }
    dend_1 { pt3dadd( -11.0729, -37.224, 13.5079, 0.55 ) }
    dend_1 { pt3dadd( -13.3051, -40.2195, 15.3119, 0.55 ) }
    dend_1 { pt3dadd( -14.2166, -41.4451, 16.1376, 0.55 ) }
    dend_1 { pt3dadd( -15.4401, -43.1386, 17.3969, 0.55 ) }
    dend_1 { pt3dadd( -16.026, -43.9152, 18.0118, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 6/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 3.52951, -42.3202, 1.9633, 0.28 ) }
    axon_1 { pt3dadd( 4.69484, -57.2749, 1.9633, 0.28 ) }
    axon_1 { pt3dadd( 5.86017, -72.2296, 1.9633, 0.28 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 9/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -1.53657, -31.4334, -23.9959, 0.55 ) }
    dend_46 { pt3dadd( -1.77661, -34.9823, -28.8549, 0.55 ) }
    dend_46 { pt3dadd( -1.80872, -36.3945, -30.6383, 0.55 ) }
    dend_46 { pt3dadd( -1.50281, -40.2458, -35.3509, 0.55 ) }
    dend_46 { pt3dadd( -1.17637, -42.5058, -37.9382, 0.55 ) }
    dend_46 { pt3dadd( -0.858925, -44.7034, -40.4541, 0.28 ) }
    dend_46 { pt3dadd( -0.562563, -46.755, -42.803, 0.28 ) }
    dend_46 { pt3dadd( -0.365578, -47.6172, -43.7758, 0.55 ) }
    dend_46 { pt3dadd( 1.24353, -52.8941, -49.6484, 0.28 ) }
    dend_46 { pt3dadd( 1.8289, -54.4875, -51.1049, 0.55 ) }
    dend_46 { pt3dadd( 3.43965, -63.0779, -58.1185, 0.55 ) }
    dend_46 { pt3dadd( 7.22902, -70.0315, -66.0473, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 21/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -1.53657, -31.4334, -23.9959, 0.55 ) }
    dend_45 { pt3dadd( -2.39215, -30.0792, -29.2019, 0.55 ) }
    dend_45 { pt3dadd( -3.4842, -28.3507, -35.8466, 0.55 ) }
    dend_45 { pt3dadd( -4.5503, -26.6633, -42.3334, 0.28 ) }
    dend_45 { pt3dadd( -5.07635, -25.8307, -45.5342, 0.55 ) }
    dend_45 { pt3dadd( -7.54606, -24.0127, -55.1097, 0.55 ) }
    dend_45 { pt3dadd( -11.5591, -21.9253, -64.0893, 0.55 ) }
    dend_45 { pt3dadd( -16.1787, -19.3481, -72.6398, 0.55 ) }
    dend_45 { pt3dadd( -19.6219, -17.1911, -81.8369, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_30 (entry count 30/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 1.04349, 17.8338, -0.419981, 1.66 ) }
    dend_36 { pt3dadd( 0.867678, 21.6151, -0.548768, 1.66 ) }
    dend_36 { pt3dadd( 0.723855, 24.7085, -0.654123, 1.66 ) }
    dend_36 { pt3dadd( 0.607653, 27.2078, -0.739245, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 34/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 1.04349, 17.8338, -0.419981, 1.11 ) }
    dend_31 { pt3dadd( 0.787087, 18.274, 1.5386, 1.11 ) }
    dend_31 { pt3dadd( 0.725006, 18.3805, 2.01282, 1.11 ) }
    dend_31 { pt3dadd( 0.352952, 19.0193, 4.85483, 0.83 ) }
    dend_31 { pt3dadd( 0.149522, 19.3685, 6.40877, 0.83 ) }
    dend_31 { pt3dadd( -0.561283, 20.5888, 11.8384, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -2.67304, -24.3357, 7.13288, 1.66 ) }
    dend_8 { pt3dadd( -2.76242, -24.8599, 7.13861, 1.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 42/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -2.67304, -24.3357, 7.13288, 0.55 ) }
    dend_7 { pt3dadd( -3.19633, -27.7794, 9.56447, 0.55 ) }
    dend_7 { pt3dadd( -3.49344, -30.7398, 11.8052, 0.55 ) }
    dend_7 { pt3dadd( -3.58379, -31.7322, 12.5848, 0.55 ) }
    dend_7 { pt3dadd( -3.87799, -34.7017, 14.9834, 0.55 ) }
    dend_7 { pt3dadd( -4.00755, -37.2298, 17.0752, 0.55 ) }
    dend_7 { pt3dadd( -4.08706, -40.1537, 19.4478, 0.55 ) }
    dend_7 { pt3dadd( -4.13708, -41.7493, 20.9065, 0.55 ) }
    dend_7 { pt3dadd( -4.29253, -43.8964, 22.9114, 0.55 ) }
    dend_7 { pt3dadd( -4.55727, -46.1462, 25.0001, 0.55 ) }
    dend_7 { pt3dadd( -4.85967, -48.59, 27.2615, 0.55 ) }
    dend_7 { pt3dadd( -5.07005, -49.8726, 28.4807, 0.55 ) }
    dend_7 { pt3dadd( -5.58056, -52.5658, 31.235, 0.55 ) }
    dend_7 { pt3dadd( -5.93461, -54.7458, 33.456, 0.55 ) }
    dend_7 { pt3dadd( -6.07434, -55.8598, 34.6343, 0.55 ) }
    dend_7 { pt3dadd( -6.25746, -57.2398, 36.2026, 0.55 ) }
    dend_7 { pt3dadd( -6.64845, -59.2572, 38.6002, 0.55 ) }
    dend_7 { pt3dadd( -7.15489, -61.6354, 41.618, 0.55 ) }
    dend_7 { pt3dadd( -7.78366, -64.5517, 45.363, 0.55 ) }
    dend_7 { pt3dadd( -8.41368, -67.1015, 48.8397, 0.55 ) }
    dend_7 { pt3dadd( -8.84939, -68.7122, 51.1024, 0.55 ) }
    dend_7 { pt3dadd( -9.63208, -71.1566, 54.5928, 0.55 ) }
    dend_7 { pt3dadd( -10.4798, -73.3135, 57.7533, 0.55 ) }
    dend_7 { pt3dadd( -11.5424, -75.3792, 60.9466, 0.55 ) }
    dend_7 { pt3dadd( -12.7848, -77.2826, 64.2399, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 67/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -16.026, -43.9152, 18.0118, 0.55 ) }
    dend_5 { pt3dadd( -21.5877, -44.4932, 20.441, 0.55 ) }
    dend_5 { pt3dadd( -24.0257, -44.6994, 21.3798, 0.55 ) }
    dend_5 { pt3dadd( -27.4563, -45.0643, 22.5715, 0.55 ) }
    dend_5 { pt3dadd( -31.3798, -45.5734, 23.8404, 0.55 ) }
    dend_5 { pt3dadd( -34.7018, -46.003, 24.8282, 0.55 ) }
    dend_5 { pt3dadd( -40.1719, -46.8049, 26.3704, 0.55 ) }
    dend_5 { pt3dadd( -45.5141, -47.6468, 27.7769, 0.55 ) }
    dend_5 { pt3dadd( -49.5368, -48.3407, 29.0021, 0.55 ) }
    dend_5 { pt3dadd( -52.705, -48.8988, 29.9746, 0.55 ) }
    dend_5 { pt3dadd( -57.641, -49.8484, 31.4604, 0.55 ) }
    dend_5 { pt3dadd( -60.4598, -50.4051, 32.3726, 0.28 ) }
    dend_5 { pt3dadd( -64.504, -51.4824, 33.7693, 0.55 ) }
    dend_5 { pt3dadd( -69.2025, -52.6861, 35.6949, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 81/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -16.026, -43.9152, 18.0118, 0.55 ) }
    dend_2 { pt3dadd( -15.7836, -45.1119, 20.0085, 0.55 ) }
    dend_2 { pt3dadd( -15.1642, -47.9192, 24.3609, 0.55 ) }
    dend_2 { pt3dadd( -14.918, -49.4303, 26.7066, 0.55 ) }
    dend_2 { pt3dadd( -14.6832, -51.1316, 29.3601, 0.55 ) }
    dend_2 { pt3dadd( -14.4346, -52.7755, 31.9772, 0.55 ) }
    dend_2 { pt3dadd( -14.101, -54.9802, 35.4874, 0.55 ) }
    dend_2 { pt3dadd( -13.8367, -57.3706, 39.2923, 0.55 ) }
    dend_2 { pt3dadd( -13.5986, -59.8982, 43.0312, 0.55 ) }
    dend_2 { pt3dadd( -13.3808, -61.7338, 45.7515, 0.55 ) }
    dend_2 { pt3dadd( -13.2219, -63.7584, 48.9903, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 92/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 0.607653, 27.2078, -0.739245, 1.11 ) }
    dend_38 { pt3dadd( -0.604795, 29.2612, -1.14916, 1.11 ) }
    dend_38 { pt3dadd( -1.4767, 30.7379, -1.44394, 1.11 ) }
    dend_38 { pt3dadd( -2.41818, 32.3325, -1.76225, 0.83 ) }
    dend_38 { pt3dadd( -3.00821, 33.3317, -1.96173, 0.83 ) }
    dend_38 { pt3dadd( -4.13351, 35.2376, -2.34218, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 98/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 0.607653, 27.2078, -0.739245, 0.55 ) }
    dend_37 { pt3dadd( 1.87849, 29.1424, -2.97413, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_37 { pt3dadd( 2.49459, 30.0402, -3.83984, 0.55 ) }
    dend_37 { pt3dadd( 5.0581, 33.527, -6.77709, 0.55 ) }
    dend_37 { pt3dadd( 6.47628, 35.4776, -8.19157, 0.55 ) }
    dend_37 { pt3dadd( 7.87828, 37.3583, -9.40866, 0.55 ) }
    dend_37 { pt3dadd( 8.72991, 38.4651, -10.0704, 0.55 ) }
    dend_37 { pt3dadd( 10.1805, 40.1462, -10.801, 0.55 ) }
    dend_37 { pt3dadd( 11.4722, 41.4809, -11.2377, 0.55 ) }
    dend_37 { pt3dadd( 12.879, 42.8191, -11.6273, 0.55 ) }
    dend_37 { pt3dadd( 14.2351, 44.1063, -12.0757, 0.55 ) }
    dend_37 { pt3dadd( 15.078, 44.9296, -12.3894, 0.55 ) }
    dend_37 { pt3dadd( 18.4131, 48.1828, -13.8411, 0.55 ) }
    dend_37 { pt3dadd( 20.2984, 49.9736, -14.745, 0.55 ) }
    dend_37 { pt3dadd( 22.7897, 52.2759, -16.0015, 0.55 ) }
    dend_37 { pt3dadd( 24.1416, 53.4388, -16.7008, 0.55 ) }
    dend_37 { pt3dadd( 25.2671, 54.345, -17.2397, 0.55 ) }
    dend_37 { pt3dadd( 27.2059, 55.84, -18.2953, 0.83 ) }
    dend_37 { pt3dadd( 29.4623, 57.5889, -19.7308, 0.55 ) }
    dend_37 { pt3dadd( 30.9851, 58.8371, -20.7168, 0.55 ) }
    dend_37 { pt3dadd( 31.8745, 59.5368, -21.2319, 0.55 ) }
    dend_37 { pt3dadd( 33.8701, 61.0136, -22.3983, 0.55 ) }
    dend_37 { pt3dadd( 37.6105, 63.6146, -24.5405, 0.55 ) }
    dend_37 { pt3dadd( 39.9497, 65.3652, -25.8606, 0.55 ) }
    dend_37 { pt3dadd( 41.1449, 66.3655, -26.5636, 0.83 ) }
    dend_37 { pt3dadd( 42.4234, 67.5104, -27.3083, 0.55 ) }
    dend_37 { pt3dadd( 43.4765, 68.4502, -27.7815, 0.55 ) }
    dend_37 { pt3dadd( 44.4259, 69.2003, -27.9916, 0.55 ) }
    dend_37 { pt3dadd( 46.2698, 70.3983, -27.9729, 0.55 ) }
    dend_37 { pt3dadd( 47.601, 71.1918, -27.8736, 0.55 ) }
    dend_37 { pt3dadd( 48.2237, 71.5852, -27.8119, 0.55 ) }
    dend_37 { pt3dadd( 52.278, 74.6954, -27.1045, 0.55 ) }
    dend_37 { pt3dadd( 54.6823, 76.8697, -26.5359, 0.55 ) }
    dend_37 { pt3dadd( 55.6153, 77.7633, -26.292, 0.55 ) }
    dend_37 { pt3dadd( 56.4349, 78.6327, -26.0083, 0.55 ) }
    dend_37 { pt3dadd( 57.425, 79.896, -25.6498, 0.55 ) }
    dend_37 { pt3dadd( 59.5804, 83.2906, -24.9114, 0.55 ) }
    dend_37 { pt3dadd( 60.0788, 84.2378, -24.7219, 0.55 ) }
    dend_37 { pt3dadd( 61.0284, 86.0757, -24.4264, 0.55 ) }
    dend_37 { pt3dadd( 62.4887, 88.869, -23.9363, 0.55 ) }
    dend_37 { pt3dadd( 63.7709, 91.127, -23.5419, 0.55 ) }
    dend_37 { pt3dadd( 64.8869, 92.7844, -23.2317, 0.55 ) }
    dend_37 { pt3dadd( 66.9522, 95.3764, -22.8195, 0.55 ) }
    dend_37 { pt3dadd( 67.9929, 96.5532, -22.6574, 0.55 ) }
    dend_37 { pt3dadd( 69.0955, 97.7542, -22.5176, 0.28 ) }
    dend_37 { pt3dadd( 69.8641, 98.5308, -22.4097, 0.83 ) }
    dend_37 { pt3dadd( 72.3356, 101.004, -21.9221, 0.55 ) }
    dend_37 { pt3dadd( 74.7216, 103.516, -21.5441, 0.55 ) }
    dend_37 { pt3dadd( 75.8983, 104.78, -21.4218, 0.28 ) }
    dend_37 { pt3dadd( 76.659, 105.573, -21.336, 0.55 ) }
    dend_37 { pt3dadd( 78.7159, 107.613, -21.1079, 0.28 ) }
    dend_37 { pt3dadd( 79.9432, 108.904, -20.9519, 0.28 ) }
    dend_37 { pt3dadd( 81.1141, 110.479, -20.7724, 0.28 ) }
    dend_37 { pt3dadd( 86.6186, 117.411, -20.5798, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 52/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -0.561283, 20.5888, 11.8384, 0.83 ) }
    dend_33 { pt3dadd( -1.95196, 22.3669, 11.5722, 0.83 ) }
    dend_33 { pt3dadd( -2.82235, 23.9605, 11.6685, 0.83 ) }
    dend_33 { pt3dadd( -4.45422, 27.4038, 12.4042, 0.55 ) }
    dend_33 { pt3dadd( -5.2155, 29.4898, 13.3464, 0.55 ) }
    dend_33 { pt3dadd( -5.49654, 30.5502, 14.0282, 0.55 ) }
    dend_33 { pt3dadd( -6.17456, 33.595, 16.5833, 0.55 ) }
    dend_33 { pt3dadd( -6.50881, 35.9021, 19.2279, 0.55 ) }
    dend_33 { pt3dadd( -6.70224, 38.0949, 22.1473, 0.55 ) }
    dend_33 { pt3dadd( -6.84004, 41.7247, 27.5344, 0.55 ) }
    dend_33 { pt3dadd( -6.83875, 44.4552, 31.8496, 0.55 ) }
    dend_33 { pt3dadd( -6.8143, 46.7993, 35.8733, 0.55 ) }
    dend_33 { pt3dadd( -6.80047, 48.8286, 39.8114, 0.55 ) }
    dend_33 { pt3dadd( -6.7834, 49.5954, 41.5072, 0.55 ) }
    dend_33 { pt3dadd( -6.63723, 50.764, 44.4044, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 67/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -0.561283, 20.5888, 11.8384, 0.55 ) }
    dend_32 { pt3dadd( -0.213669, 21.4407, 13.1891, 0.55 ) }
    dend_32 { pt3dadd( 0.769928, 23.5732, 16.2357, 0.55 ) }
    dend_32 { pt3dadd( 1.91801, 26.2994, 19.8468, 0.55 ) }
    dend_32 { pt3dadd( 2.91176, 28.8211, 23.0772, 0.55 ) }
    dend_32 { pt3dadd( 3.56645, 30.4867, 25.085, 0.55 ) }
    dend_32 { pt3dadd( 4.04837, 31.6301, 26.4422, 0.55 ) }
    dend_32 { pt3dadd( 5.24056, 34.2318, 29.3971, 0.55 ) }
    dend_32 { pt3dadd( 6.19567, 36.1311, 31.4024, 0.55 ) }
    dend_32 { pt3dadd( 7.6902, 38.8269, 34.2257, 0.55 ) }
    dend_32 { pt3dadd( 8.47329, 40.1096, 35.6362, 0.55 ) }
    dend_32 { pt3dadd( 9.74125, 42.0882, 37.8539, 0.55 ) }
    dend_32 { pt3dadd( 11.2838, 44.3909, 40.5483, 0.55 ) }
    dend_32 { pt3dadd( 13.3166, 47.2438, 44.1002, 0.55 ) }
    dend_32 { pt3dadd( 15.3177, 49.7232, 47.2969, 0.55 ) }
    dend_32 { pt3dadd( 17.216, 51.9799, 50.3096, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 83/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -2.76242, -24.8599, 7.13861, 1.11 ) }
    dend_10 { pt3dadd( -4.43312, -29.6371, 4.00044, 1.11 ) }
    dend_10 { pt3dadd( -6.01927, -34.1725, 1.02108, 1.11 ) }
    dend_10 { pt3dadd( -6.96402, -36.874, -0.753507, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 87/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -2.76242, -24.8599, 7.13861, 0.55 ) }
    dend_9 { pt3dadd( -1.00119, -26.7964, 5.80183, 0.55 ) }
    dend_9 { pt3dadd( 0.0213031, -27.9472, 4.825, 0.55 ) }
    dend_9 { pt3dadd( 0.927236, -29.098, 3.92178, 0.55 ) }
    dend_9 { pt3dadd( 1.31384, -29.5488, 3.5848, 0.55 ) }
    dend_9 { pt3dadd( 2.75104, -31.2421, 2.3499, 0.55 ) }
    dend_9 { pt3dadd( 3.87197, -32.5675, 1.50997, 0.55 ) }
    dend_9 { pt3dadd( 5.67752, -34.7234, 0.427179, 0.55 ) }
    dend_9 { pt3dadd( 7.16753, -36.5927, -0.404787, 0.55 ) }
    dend_9 { pt3dadd( 8.98303, -38.8171, -1.21602, 0.55 ) }
    dend_9 { pt3dadd( 10.3517, -40.3967, -1.68701, 0.55 ) }
    dend_9 { pt3dadd( 14.1291, -44.5281, -2.27083, 0.55 ) }
    dend_9 { pt3dadd( 15.2782, -45.7771, -2.28418, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_9 { pt3dadd( 15.8982, -46.4322, -2.20953, 0.55 ) }
    dend_9 { pt3dadd( 17.9875, -48.5792, -1.81477, 0.55 ) }
    dend_9 { pt3dadd( 18.9164, -49.5656, -1.52549, 0.55 ) }
    dend_9 { pt3dadd( 21.9856, -52.5285, -0.311403, 0.55 ) }
    dend_9 { pt3dadd( 22.9026, -53.3905, 0.0869461, 0.55 ) }
    dend_9 { pt3dadd( 23.8912, -54.2796, 0.445104, 0.55 ) }
    dend_9 { pt3dadd( 25.0023, -55.2622, 0.80761, 0.55 ) }
    dend_9 { pt3dadd( 27.7906, -57.7033, 1.64767, 0.55 ) }
    dend_9 { pt3dadd( 30.3957, -59.9801, 2.3536, 0.55 ) }
    dend_9 { pt3dadd( 31.7813, -61.1447, 2.57724, 0.55 ) }
    dend_9 { pt3dadd( 34.1021, -63.0684, 2.84314, 0.55 ) }
    dend_9 { pt3dadd( 34.6235, -63.5084, 2.87274, 0.55 ) }
    dend_9 { pt3dadd( 36.8323, -65.4236, 2.80857, 0.55 ) }
    dend_9 { pt3dadd( 38.0097, -66.5265, 2.54071, 0.83 ) }
    dend_9 { pt3dadd( 39.6167, -68.2352, 2.0918, 0.28 ) }
    dend_9 { pt3dadd( 40.526, -69.2126, 1.85051, 0.55 ) }
    dend_9 { pt3dadd( 41.4595, -70.3046, 1.33893, 0.28 ) }
    dend_9 { pt3dadd( 42.6748, -71.7539, 0.449494, 0.83 ) }
    dend_9 { pt3dadd( 44.0784, -73.5064, -0.757125, 0.28 ) }
    dend_9 { pt3dadd( 45.8234, -75.6766, -2.28281, 0.28 ) }
    dend_9 { pt3dadd( 46.4523, -76.4812, -2.82526, 0.55 ) }
    dend_9 { pt3dadd( 50.1072, -81.2128, -6.4448, 0.28 ) }
    dend_9 { pt3dadd( 50.5328, -81.7112, -6.92441, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 23/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -13.2219, -63.7584, 48.9903, 0.55 ) }
    dend_4 { pt3dadd( -13.7693, -65.1396, 50.4622, 0.55 ) }
    dend_4 { pt3dadd( -14.4436, -66.5471, 52.031, 0.55 ) }
    dend_4 { pt3dadd( -15.405, -68.5539, 54.2677, 0.55 ) }
    dend_4 { pt3dadd( -16.2601, -70.3388, 56.2572, 0.55 ) }
    dend_4 { pt3dadd( -17.1251, -72.1444, 58.2697, 0.55 ) }
    dend_4 { pt3dadd( -17.7316, -73.4106, 59.681, 0.28 ) }
    dend_4 { pt3dadd( -18.086, -74.0771, 60.4984, 0.28 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -13.2219, -63.7584, 48.9903, 0.55 ) }
    dend_3 { pt3dadd( -12.8903, -64.8422, 50.9908, 0.55 ) }
    dend_3 { pt3dadd( -12.3378, -66.6482, 54.3244, 0.55 ) }
    dend_3 { pt3dadd( -11.9344, -67.9666, 56.758, 0.55 ) }
    dend_3 { pt3dadd( -11.5605, -69.1886, 59.0135, 0.55 ) }
    dend_3 { pt3dadd( -10.9911, -71.0499, 62.4491, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 37/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -4.13351, 35.2376, -2.34218, 0.55 ) }
    dend_40 { pt3dadd( -5.46914, 35.9167, -1.91971, 0.55 ) }
    dend_40 { pt3dadd( -11.139, 39.0015, -0.482622, 0.55 ) }
    dend_40 { pt3dadd( -13.356, 40.2241, 0.021189, 0.55 ) }
    dend_40 { pt3dadd( -15.9439, 41.6456, 0.350423, 0.55 ) }
    dend_40 { pt3dadd( -18.7444, 43.0735, 0.598357, 0.55 ) }
    dend_40 { pt3dadd( -21.2892, 44.3085, 0.815256, 0.55 ) }
    dend_40 { pt3dadd( -22.4255, 44.8412, 0.865985, 0.55 ) }
    dend_40 { pt3dadd( -24.425, 45.8079, 0.846247, 0.55 ) }
    dend_40 { pt3dadd( -28.3577, 47.7331, 0.836051, 0.55 ) }
    dend_40 { pt3dadd( -31.9241, 49.5389, 1.07797, 0.55 ) }
    dend_40 { pt3dadd( -35.4014, 51.331, 1.39754, 0.55 ) }
    dend_40 { pt3dadd( -37.088, 52.3364, 1.65383, 0.55 ) }
    dend_40 { pt3dadd( -38.2053, 53.1982, 1.84685, 0.55 ) }
    dend_40 { pt3dadd( -39.8602, 54.9666, 2.1782, 0.55 ) }
    dend_40 { pt3dadd( -41.6044, 57.4792, 2.63663, 0.55 ) }
    dend_40 { pt3dadd( -43.7623, 61.7351, 3.0638, 0.55 ) }
    dend_40 { pt3dadd( -45.2389, 65.3713, 3.27454, 0.55 ) }
    dend_40 { pt3dadd( -46.817, 70.122, 3.65741, 0.55 ) }
    dend_40 { pt3dadd( -47.6928, 73.1831, 3.99596, 0.28 ) }
    dend_40 { pt3dadd( -47.8838, 74.0303, 4.10884, 0.28 ) }
    dend_40 { pt3dadd( -48.1614, 75.3979, 4.30468, 0.55 ) }
    dend_40 { pt3dadd( -48.3999, 77.2276, 4.80396, 0.55 ) }
    dend_40 { pt3dadd( -48.6944, 80.1029, 5.65829, 0.55 ) }
    dend_40 { pt3dadd( -48.7704, 81.5281, 6.31052, 0.28 ) }
    dend_40 { pt3dadd( -48.9288, 83.1309, 7.06872, 0.55 ) }
    dend_40 { pt3dadd( -49.2762, 85.3851, 8.08239, 0.28 ) }
    dend_40 { pt3dadd( -49.8828, 88.0804, 9.19255, 0.55 ) }
    dend_40 { pt3dadd( -50.4503, 90.3796, 10.0743, 0.55 ) }
    dend_40 { pt3dadd( -51.1881, 92.8142, 10.8514, 0.28 ) }
    dend_40 { pt3dadd( -52.151, 95.862, 11.8359, 0.28 ) }
    dend_40 { pt3dadd( -52.4633, 96.6775, 12.0999, 0.28 ) }
    dend_40 { pt3dadd( -53.2711, 98.5135, 12.506, 0.55 ) }
    dend_40 { pt3dadd( -57.3829, 105.155, 14.2025, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 71/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -4.13351, 35.2376, -2.34218, 0.55 ) }
    dend_39 { pt3dadd( -4.13112, 37.5994, -3.89792, 0.55 ) }
    dend_39 { pt3dadd( -4.1801, 38.8334, -4.64657, 0.55 ) }
    dend_39 { pt3dadd( -4.45941, 41.5639, -6.20217, 0.55 ) }
    dend_39 { pt3dadd( -4.98883, 45.465, -8.22845, 0.55 ) }
    dend_39 { pt3dadd( -5.46039, 49.7575, -10.2609, 0.55 ) }
    dend_39 { pt3dadd( -5.75435, 52.0918, -11.2943, 0.55 ) }
    dend_39 { pt3dadd( -6.21404, 54.5933, -12.3317, 0.55 ) }
    dend_39 { pt3dadd( -6.63309, 56.386, -13.0072, 0.55 ) }
    dend_39 { pt3dadd( -7.12814, 58.4853, -13.7709, 0.55 ) }
    dend_39 { pt3dadd( -7.81204, 61.4816, -14.7272, 0.55 ) }
    dend_39 { pt3dadd( -8.56867, 64.5089, -15.6616, 0.55 ) }
    dend_39 { pt3dadd( -9.10711, 66.5368, -16.2926, 0.55 ) }
    dend_39 { pt3dadd( -9.7637, 69.1686, -17.1024, 0.55 ) }
    dend_39 { pt3dadd( -11.162, 75.9674, -18.8232, 0.55 ) }
    dend_39 { pt3dadd( -11.5979, 78.8318, -19.4101, 0.55 ) }
    dend_39 { pt3dadd( -11.8912, 81.2866, -19.8292, 0.55 ) }
    dend_39 { pt3dadd( -12.1502, 84.5973, -20.2669, 0.55 ) }
    dend_39 { pt3dadd( -12.2051, 85.757, -20.3805, 0.55 ) }
    dend_39 { pt3dadd( -12.2407, 93.9091, -20.5852, 0.55 ) }
    dend_39 { pt3dadd( -12.1935, 98.537, -20.5015, 0.55 ) }
    dend_39 { pt3dadd( -12.0376, 102.633, -20.4513, 0.55 ) }
    dend_39 { pt3dadd( -11.8482, 105.406, -20.4696, 0.55 ) }
    dend_39 { pt3dadd( -11.5111, 108.641, -20.4123, 0.55 ) }
    dend_39 { pt3dadd( -10.9655, 112.994, -20.2436, 0.28 ) }
    dend_39 { pt3dadd( -10.54, 116.081, -20.0535, 0.28 ) }
    dend_39 { pt3dadd( -10.1263, 119.105, -19.775, 0.55 ) }
    dend_39 { pt3dadd( -8.86228, 127.054, -18.7487, 0.55 ) }
    dend_39 { pt3dadd( -8.15594, 131.332, -18.1691, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_39 { pt3dadd( -7.80541, 133.639, -17.8565, 0.55 ) }
    dend_39 { pt3dadd( -7.45248, 136.116, -17.5589, 0.55 ) }
    dend_39 { pt3dadd( -7.15874, 138.369, -17.2874, 0.55 ) }
    dend_39 { pt3dadd( -6.83047, 141.303, -17.0492, 0.55 ) }
    dend_39 { pt3dadd( -6.33247, 144.838, -16.8236, 0.55 ) }
    dend_39 { pt3dadd( -5.95463, 147.411, -16.8406, 0.28 ) }
    dend_39 { pt3dadd( -5.33159, 151.256, -16.8201, 0.55 ) }
    dend_39 { pt3dadd( -4.73233, 154.759, -16.7861, 0.28 ) }
    dend_39 { pt3dadd( -4.1724, 157.896, -16.7714, 0.55 ) }
    dend_39 { pt3dadd( -3.19621, 163.229, -16.7881, 0.55 ) }
    dend_39 { pt3dadd( -2.53302, 166.902, -16.7567, 0.55 ) }
    dend_39 { pt3dadd( -0.828187, 176.488, -16.5123, 0.28 ) }
    dend_39 { pt3dadd( -0.255739, 179.726, -16.3381, 0.55 ) }
    dend_39 { pt3dadd( 1.86033, 191.118, -17.6808, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 14/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -6.63723, 50.764, 44.4044, 0.55 ) }
    dend_35 { pt3dadd( -7.36996, 51.0929, 49.9889, 0.55 ) }
    dend_35 { pt3dadd( -7.62313, 51.2065, 51.9185, 0.55 ) }
    dend_35 { pt3dadd( -8.27404, 51.4987, 56.8795, 0.55 ) }
    dend_35 { pt3dadd( -8.87692, 51.7692, 61.4744, 0.55 ) }
    dend_35 { pt3dadd( -9.23627, 51.9305, 64.2132, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 20/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -6.63723, 50.764, 44.4044, 0.55 ) }
    dend_34 { pt3dadd( -7.13528, 52.0406, 44.5727, 0.55 ) }
    dend_34 { pt3dadd( -7.74627, 53.7025, 44.831, 0.55 ) }
    dend_34 { pt3dadd( -9.55994, 58.9172, 45.7939, 0.55 ) }
    dend_34 { pt3dadd( -11.6708, 64.9728, 47.2026, 0.55 ) }
    dend_34 { pt3dadd( -12.9895, 68.7225, 48.1493, 0.55 ) }
    dend_34 { pt3dadd( -15.3349, 75.1986, 49.8463, 0.55 ) }
    dend_34 { pt3dadd( -17.2705, 80.3919, 51.4086, 0.55 ) }
    dend_34 { pt3dadd( -18.6126, 83.6848, 52.6125, 0.55 ) }
    dend_34 { pt3dadd( -20.5765, 88.0488, 54.5912, 0.55 ) }
    dend_34 { pt3dadd( -21.5345, 89.8415, 55.5497, 0.55 ) }
    dend_34 { pt3dadd( -22.577, 91.4797, 56.6359, 0.55 ) }
    dend_34 { pt3dadd( -25.1977, 94.7496, 59.2179, 0.55 ) }
    dend_34 { pt3dadd( -27.5083, 97.0197, 61.175, 0.55 ) }
    dend_34 { pt3dadd( -30.1056, 99.0662, 63.2479, 0.55 ) }
    dend_34 { pt3dadd( -33.1056, 101.228, 65.5836, 0.55 ) }
    dend_34 { pt3dadd( -36.2612, 103.346, 68.037, 0.55 ) }
    dend_34 { pt3dadd( -41.2517, 106.453, 71.8273, 0.28 ) }
    dend_34 { pt3dadd( -44.9955, 108.532, 74.438, 0.28 ) }
    dend_34 { pt3dadd( -48.4126, 110.363, 76.7185, 0.28 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 40/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -6.96402, -36.874, -0.753507, 1.11 ) }
    dend_14 { pt3dadd( -6.8119, -39.1872, -1.30283, 1.11 ) }
    dend_14 { pt3dadd( -6.63577, -41.8655, -1.93886, 1.11 ) }
    dend_14 { pt3dadd( -6.42966, -44.9996, -2.68312, 1.11 ) }
    dend_14 { pt3dadd( -6.26109, -47.5629, -3.29184, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 45/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -6.96402, -36.874, -0.753507, 0.55 ) }
    dend_11 { pt3dadd( -9.83142, -38.8263, -1.10559, 0.55 ) }
    dend_11 { pt3dadd( -12.7301, -41.1045, -1.44619, 0.55 ) }
    dend_11 { pt3dadd( -15.2869, -43.3399, -2.19702, 0.55 ) }
    dend_11 { pt3dadd( -17.7326, -45.61, -3.0012, 0.55 ) }
    dend_11 { pt3dadd( -20.468, -48.1046, -3.75424, 0.55 ) }
    dend_11 { pt3dadd( -23.2759, -50.6833, -4.47365, 0.55 ) }
    dend_11 { pt3dadd( -27.0349, -54.4898, -5.4097, 0.55 ) }
    dend_11 { pt3dadd( -31.1371, -59.0902, -6.51393, 0.55 ) }
    dend_11 { pt3dadd( -32.9175, -61.0376, -6.98671, 0.55 ) }
    dend_11 { pt3dadd( -36.6594, -64.9874, -8.03608, 0.55 ) }
    dend_11 { pt3dadd( -38.0861, -66.3822, -8.43655, 0.55 ) }
    dend_11 { pt3dadd( -39.6084, -67.7258, -8.81401, 0.55 ) }
    dend_11 { pt3dadd( -43.3097, -70.8199, -9.67476, 0.55 ) }
    dend_11 { pt3dadd( -49.4084, -75.6907, -11.0931, 0.55 ) }
    dend_11 { pt3dadd( -52.0179, -77.6903, -11.9183, 0.55 ) }
    dend_11 { pt3dadd( -54.5319, -79.5934, -12.8512, 0.55 ) }
    dend_11 { pt3dadd( -56.2817, -80.8194, -13.4812, 0.55 ) }
    dend_11 { pt3dadd( -58.0026, -81.9039, -14.095, 0.28 ) }
    dend_11 { pt3dadd( -60.2154, -83.1236, -14.8431, 0.83 ) }
    dend_11 { pt3dadd( -61.1923, -83.6008, -15.3936, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 66/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -6.26109, -47.5629, -3.29184, 1.11 ) }
    dend_18 { pt3dadd( -6.39019, -50.7087, -3.92417, 1.11 ) }
    dend_18 { pt3dadd( -6.65797, -57.2343, -5.23585, 0.83 ) }
    dend_18 { pt3dadd( -6.85227, -61.9688, -6.18753, 0.83 ) }
    dend_18 { pt3dadd( -7.01656, -65.9724, -6.99227, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 71/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -6.26109, -47.5629, -3.29184, 0.55 ) }
    dend_15 { pt3dadd( -8.33077, -50.839, -2.37295, 0.55 ) }
    dend_15 { pt3dadd( -9.45827, -52.9216, -1.89191, 0.55 ) }
    dend_15 { pt3dadd( -11.1147, -56.4895, -1.22376, 0.55 ) }
    dend_15 { pt3dadd( -12.835, -60.4594, -0.609973, 0.55 ) }
    dend_15 { pt3dadd( -14.3367, -63.9226, 0.0453303, 0.55 ) }
    dend_15 { pt3dadd( -15.2252, -65.9718, 0.433077, 0.55 ) }
    dend_15 { pt3dadd( -16.0405, -68.0262, 0.681919, 0.55 ) }
    dend_15 { pt3dadd( -16.9032, -70.5228, 0.999988, 0.55 ) }
    dend_15 { pt3dadd( -17.2057, -71.5779, 1.1334, 0.55 ) }
    dend_15 { pt3dadd( -17.9832, -76.2154, 1.46753, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 82/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -61.1923, -83.6008, -15.3936, 0.55 ) }
    dend_13 { pt3dadd( -62.1154, -84.5919, -18.4701, 0.55 ) }
    dend_13 { pt3dadd( -62.5966, -85.1654, -19.981, 0.55 ) }
    dend_13 { pt3dadd( -64.514, -87.6269, -27.3533, 0.55 ) }
    dend_13 { pt3dadd( -65.3871, -88.6495, -30.6575, 0.28 ) }
    dend_13 { pt3dadd( -65.8297, -89.1679, -32.3325, 0.28 ) }
    dend_13 { pt3dadd( -66.4457, -89.8893, -34.6635, 0.55 ) }
    dend_13 { pt3dadd( -67.0068, -90.7527, -37.3466, 0.55 ) }
    dend_13 { pt3dadd( -68.5429, -93.2734, -45.1789, 0.28 ) }
    dend_13 { pt3dadd( -68.9481, -93.7554, -46.7937, 0.83 ) }
    dend_13 { pt3dadd( -69.7165, -98.8487, -57.8045, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 93/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -61.1923, -83.6008, -15.3936, 0.28 ) }
    dend_12 { pt3dadd( -62.1618, -84.2821, -17.9201, 0.28 ) }
    dend_12 { pt3dadd( -62.5677, -84.5352, -18.9933, 0.55 ) }
    dend_12 { pt3dadd( -66.7335, -87.1314, -30.0066, 0.28 ) }
    dend_12 { pt3dadd( -66.9888, -87.2906, -30.6816, 0.55 ) }
    dend_12 { pt3dadd( -68.1438, -88.0104, -33.7351, 0.28 ) }
    dend_12 { pt3dadd( -68.6056, -88.2982, -34.9559, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_12 { pt3dadd( -71.5155, -90.1058, -43.9283, 0.28 ) }
    dend_12 { pt3dadd( -73.9446, -93.558, -54.8787, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -7.01656, -65.9724, -6.99227, 0.83 ) }
    dend_20 { pt3dadd( -7.31397, -67.3021, -7.22302, 0.83 ) }
    dend_20 { pt3dadd( -7.63268, -68.727, -7.47031, 0.83 ) }
    dend_20 { pt3dadd( -8.18268, -71.1861, -7.89704, 0.83 ) }
    dend_20 { pt3dadd( -8.50183, -72.613, -8.14467, 0.83 ) }
    dend_20 { pt3dadd( -8.94246, -74.583, -8.48655, 0.83 ) }
    dend_20 { pt3dadd( -9.25369, -75.9745, -8.72803, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 9/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -7.01656, -65.9724, -6.99227, 0.55 ) }
    dend_19 { pt3dadd( -6.44485, -67.39, -6.53011, 0.55 ) }
    dend_19 { pt3dadd( -5.82205, -68.9788, -6.14608, 0.55 ) }
    dend_19 { pt3dadd( -4.97743, -71.9072, -5.3129, 0.55 ) }
    dend_19 { pt3dadd( -3.90151, -75.3111, -4.25873, 0.55 ) }
    dend_19 { pt3dadd( -3.47874, -76.7094, -3.8309, 0.55 ) }
    dend_19 { pt3dadd( -2.92972, -78.4536, -3.29096, 0.55 ) }
    dend_19 { pt3dadd( -1.9496, -81.3986, -2.37343, 0.55 ) }
    dend_19 { pt3dadd( -0.352968, -85.7987, -1.06986, 0.55 ) }
    dend_19 { pt3dadd( 1.6667, -90.6381, 0.180143, 0.55 ) }
    dend_19 { pt3dadd( 2.24379, -91.8948, 0.430769, 0.55 ) }
    dend_19 { pt3dadd( 2.9843, -93.3406, 0.701722, 0.55 ) }
    dend_19 { pt3dadd( 5.06505, -97.2059, 1.33593, 0.55 ) }
    dend_19 { pt3dadd( 7.5634, -101.538, 1.94114, 0.55 ) }
    dend_19 { pt3dadd( 9.39091, -104.343, 2.1973, 0.28 ) }
    dend_19 { pt3dadd( 10.0882, -105.449, 2.28308, 0.28 ) }
    dend_19 { pt3dadd( 10.9882, -106.846, 2.426, 0.28 ) }
    dend_19 { pt3dadd( 11.8511, -108.138, 2.61239, 0.28 ) }
    dend_19 { pt3dadd( 13.3314, -110.337, 3.09085, 0.55 ) }
    dend_19 { pt3dadd( 14.6433, -112.173, 3.68253, 0.55 ) }
    dend_19 { pt3dadd( 15.9442, -114.018, 4.37733, 0.55 ) }
    dend_19 { pt3dadd( 17.8058, -116.69, 5.39257, 0.55 ) }
    dend_19 { pt3dadd( 19.9843, -120.021, 6.76997, 0.55 ) }
    dend_19 { pt3dadd( 21.2191, -121.885, 7.57304, 0.28 ) }
    dend_19 { pt3dadd( 22.5825, -124.05, 8.52057, 0.28 ) }
    dend_19 { pt3dadd( 23.0952, -124.888, 8.90152, 0.28 ) }
    dend_19 { pt3dadd( 24.1316, -126.519, 9.7162, 0.55 ) }
    dend_19 { pt3dadd( 25.5471, -129.399, 11.1448, 0.28 ) }
    dend_19 { pt3dadd( 28.4435, -138.369, 11.5668, 0.28 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 38/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -17.9832, -76.2154, 1.46753, 0.55 ) }
    dend_17 { pt3dadd( -19.115, -78.3612, 2.26559, 0.55 ) }
    dend_17 { pt3dadd( -20.9233, -81.7896, 3.54075, 0.55 ) }
    dend_17 { pt3dadd( -22.446, -84.6766, 4.61445, 0.28 ) }
    dend_17 { pt3dadd( -24.3616, -88.3083, 5.96523, 0.55 ) }
    dend_17 { pt3dadd( -24.9969, -89.5129, 6.41322, 0.28 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 44/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -17.9832, -76.2154, 1.46753, 0.55 ) }
    dend_16 { pt3dadd( -19.6554, -79.1888, 2.78444, 0.55 ) }
    dend_16 { pt3dadd( -20.5039, -80.4283, 3.56891, 0.55 ) }
    dend_16 { pt3dadd( -22.2707, -82.7297, 5.35204, 0.55 ) }
    dend_16 { pt3dadd( -23.4515, -84.163, 6.70531, 0.55 ) }
    dend_16 { pt3dadd( -24.5883, -85.5101, 8.04844, 0.55 ) }
    dend_16 { pt3dadd( -26.7988, -88.2745, 10.7866, 0.55 ) }
    dend_16 { pt3dadd( -28.6306, -90.4514, 12.9382, 0.55 ) }
    dend_16 { pt3dadd( -29.8428, -91.8536, 14.5782, 0.55 ) }
    dend_16 { pt3dadd( -31.4797, -93.7101, 17.0656, 0.28 ) }
    dend_16 { pt3dadd( -32.2048, -94.477, 18.1378, 0.55 ) }
    dend_16 { pt3dadd( -33.206, -95.448, 19.5276, 0.28 ) }
    dend_16 { pt3dadd( -34.4761, -96.7501, 21.2267, 0.55 ) }
    dend_16 { pt3dadd( -37.1636, -99.4897, 24.5879, 0.28 ) }
    dend_16 { pt3dadd( -37.8181, -100.107, 25.3187, 0.55 ) }
    dend_16 { pt3dadd( -39.3178, -101.252, 26.7104, 0.28 ) }
    dend_16 { pt3dadd( -40.5368, -101.914, 27.8381, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 61/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -9.25369, -75.9745, -8.72803, 0.83 ) }
    dend_22 { pt3dadd( -9.71869, -78.6261, -9.189, 0.83 ) }
    dend_22 { pt3dadd( -10.221, -81.4908, -9.68702, 0.83 ) }
    dend_22 { pt3dadd( -10.6766, -84.0888, -10.1387, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -9.25369, -75.9745, -8.72803, 0.55 ) }
    dend_21 { pt3dadd( -10.8149, -76.8179, -9.6033, 0.55 ) }
    dend_21 { pt3dadd( -12.6021, -77.6223, -10.7333, 0.55 ) }
    dend_21 { pt3dadd( -15.2891, -78.8489, -12.3832, 0.55 ) }
    dend_21 { pt3dadd( -17.5353, -79.8861, -13.6944, 1.38 ) }
    dend_21 { pt3dadd( -18.2792, -80.2166, -14.1053, 1.38 ) }
    dend_21 { pt3dadd( -21.2459, -81.5144, -15.7749, 0.55 ) }
    dend_21 { pt3dadd( -22.9303, -82.2613, -16.9558, 0.55 ) }
    dend_21 { pt3dadd( -24.6239, -83.0819, -18.4464, 0.55 ) }
    dend_21 { pt3dadd( -25.2442, -83.4102, -19.0224, 0.55 ) }
    dend_21 { pt3dadd( -25.8765, -83.7548, -19.599, 0.55 ) }
    dend_21 { pt3dadd( -28.4116, -85.3051, -21.8433, 0.55 ) }
    dend_21 { pt3dadd( -31.0726, -87.2643, -24.1613, 0.55 ) }
    dend_21 { pt3dadd( -33.6919, -89.4398, -26.4953, 0.55 ) }
    dend_21 { pt3dadd( -35.7917, -91.2171, -28.2556, 0.55 ) }
    dend_21 { pt3dadd( -37.5102, -92.866, -29.6293, 0.28 ) }
    dend_21 { pt3dadd( -38.8714, -94.255, -30.7892, 0.55 ) }
    dend_21 { pt3dadd( -40.6065, -96.0829, -32.2088, 0.55 ) }
    dend_21 { pt3dadd( -43.5306, -99.2072, -34.4629, 0.55 ) }
    dend_21 { pt3dadd( -45.9583, -101.912, -36.3672, 0.55 ) }
    dend_21 { pt3dadd( -48.3735, -104.71, -38.4831, 0.55 ) }
    dend_21 { pt3dadd( -52.6665, -109.76, -42.6164, 0.55 ) }
    dend_21 { pt3dadd( -53.6635, -110.853, -43.6407, 0.55 ) }
    dend_21 { pt3dadd( -59.5046, -114.703, -49.5281, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 89/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -10.6766, -84.0888, -10.1387, 0.83 ) }
    dend_24 { pt3dadd( -11.8148, -88.7035, -7.46263, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 91/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -10.6766, -84.0888, -10.1387, 0.55 ) }
    dend_23 { pt3dadd( -12.1524, -86.8868, -12.8491, 0.55 ) }
    dend_23 { pt3dadd( -12.5448, -87.5657, -13.419, 0.28 ) }
    dend_23 { pt3dadd( -14.9051, -91.813, -17.3147, 0.28 ) }
    dend_23 { pt3dadd( -15.7248, -93.4613, -18.945, 0.28 ) }
    dend_23 { pt3dadd( -16.0691, -94.2242, -19.6925, 0.28 ) }
    dend_23 { pt3dadd( -16.738, -96.093, -21.5651, 0.28 ) }
    dend_23 { pt3dadd( -17.3469, -98.1534, -23.5088, 0.55 ) }
    dend_23 { pt3dadd( -18.2902, -102.347, -27.2964, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_23 { pt3dadd( -18.7043, -104.936, -29.6423, 0.28 ) }
    dend_23 { pt3dadd( -18.8277, -106.145, -30.7823, 0.55 ) }
    dend_23 { pt3dadd( -19.0038, -110.032, -34.5374, 0.28 ) }
    dend_23 { pt3dadd( -18.9764, -111.229, -35.7692, 0.55 ) }
    dend_23 { pt3dadd( -18.7385, -113.173, -37.6728, 0.55 ) }
    dend_23 { pt3dadd( -22.0426, -120.575, -43.2137, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 6/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -11.8148, -88.7035, -7.46263, 0.83 ) }
    dend_26 { pt3dadd( -11.9527, -93.4528, -9.75685, 0.83 ) }
    dend_26 { pt3dadd( -12.0783, -95.391, -10.5487, 0.83 ) }
    dend_26 { pt3dadd( -12.6921, -99.7083, -12.1411, 0.55 ) }
    dend_26 { pt3dadd( -13.3024, -102.636, -13.0176, 0.55 ) }
    dend_26 { pt3dadd( -13.6773, -104.238, -13.4117, 0.55 ) }
    dend_26 { pt3dadd( -14.4534, -107.556, -14.0922, 0.55 ) }
    dend_26 { pt3dadd( -15.2014, -110.342, -14.2954, 0.55 ) }
    dend_26 { pt3dadd( -16.1841, -113.523, -14.3315, 0.55 ) }
    dend_26 { pt3dadd( -17.0431, -116.204, -14.2618, 0.55 ) }
    dend_26 { pt3dadd( -17.4793, -117.751, -14.148, 0.55 ) }
    dend_26 { pt3dadd( -17.783, -119.102, -14.065, 0.55 ) }
    dend_26 { pt3dadd( -18.0215, -120.693, -13.9849, 0.55 ) }
    dend_26 { pt3dadd( -18.2593, -122.91, -13.9416, 0.55 ) }
    dend_26 { pt3dadd( -18.3056, -125.701, -14.0865, 0.55 ) }
    dend_26 { pt3dadd( -18.3626, -128.197, -14.4277, 0.55 ) }
    dend_26 { pt3dadd( -18.5111, -130.11, -14.6486, 0.55 ) }
    dend_26 { pt3dadd( -18.609, -131.344, -14.7391, 0.55 ) }
    dend_26 { pt3dadd( -18.8004, -133.296, -14.8116, 0.55 ) }
    dend_26 { pt3dadd( -19.0815, -136.196, -14.798, 0.55 ) }
    dend_26 { pt3dadd( -19.3193, -139.787, -14.8086, 0.55 ) }
    dend_26 { pt3dadd( -19.4657, -143.03, -14.8961, 0.55 ) }
    dend_26 { pt3dadd( -19.4835, -146.366, -14.9997, 0.55 ) }
    dend_26 { pt3dadd( -19.4488, -149.695, -15.2739, 0.55 ) }
    dend_26 { pt3dadd( -19.3622, -151.908, -15.5531, 0.55 ) }
    dend_26 { pt3dadd( -19.1461, -155.714, -16.1219, 0.55 ) }
    dend_26 { pt3dadd( -18.8591, -159.27, -16.9034, 0.55 ) }
    dend_26 { pt3dadd( -18.5335, -162.447, -17.8844, 0.55 ) }
    dend_26 { pt3dadd( -18.0143, -167.63, -19.6876, 0.55 ) }
    dend_26 { pt3dadd( -17.7972, -170.158, -20.5259, 0.55 ) }
    dend_26 { pt3dadd( -17.6672, -172.815, -21.3371, 0.55 ) }
    dend_26 { pt3dadd( -17.6129, -175.537, -22.036, 0.55 ) }
    dend_26 { pt3dadd( -17.5468, -179.483, -23.0972, 0.55 ) }
    dend_26 { pt3dadd( -17.6619, -181.939, -23.6083, 0.55 ) }
    dend_26 { pt3dadd( -17.9523, -186.415, -24.2905, 0.55 ) }
    dend_26 { pt3dadd( -18.0917, -188.416, -24.535, 0.55 ) }
    dend_26 { pt3dadd( -18.2519, -190.754, -24.764, 0.55 ) }
    dend_26 { pt3dadd( -18.4528, -195.635, -25.2277, 0.55 ) }
    dend_26 { pt3dadd( -18.5577, -203.21, -26.1221, 0.55 ) }
    dend_26 { pt3dadd( -18.4442, -207.069, -26.7595, 0.55 ) }
    dend_26 { pt3dadd( -18.3153, -209.182, -27.2077, 0.55 ) }
    dend_26 { pt3dadd( -18.2177, -211.074, -27.638, 0.55 ) }
    dend_26 { pt3dadd( -17.9434, -215.333, -28.5939, 0.55 ) }
    dend_26 { pt3dadd( -17.7429, -217.626, -29.0403, 0.55 ) }
    dend_26 { pt3dadd( -17.5333, -219.528, -29.468, 0.55 ) }
    dend_26 { pt3dadd( -17.2842, -222.358, -30.0381, 0.55 ) }
    dend_26 { pt3dadd( -17.1107, -225.635, -30.5898, 0.55 ) }
    dend_26 { pt3dadd( -17.017, -228.144, -31.0224, 0.55 ) }
    dend_26 { pt3dadd( -16.9973, -231.751, -31.5962, 0.55 ) }
    dend_26 { pt3dadd( -16.9884, -232.364, -31.6962, 0.55 ) }
    dend_26 { pt3dadd( -16.7628, -237.781, -32.6556, 0.55 ) }
    dend_26 { pt3dadd( -16.3787, -243.797, -33.759, 0.55 ) }
    dend_26 { pt3dadd( -16.1398, -247.769, -34.3601, 0.55 ) }
    dend_26 { pt3dadd( -16.0173, -249.981, -34.691, 0.28 ) }
    dend_26 { pt3dadd( -15.9397, -251.076, -34.8359, 0.28 ) }
    dend_26 { pt3dadd( -15.8272, -252.468, -35.0125, 0.55 ) }
    dend_26 { pt3dadd( -15.6072, -255.533, -35.4228, 0.28 ) }
    dend_26 { pt3dadd( -15.2323, -259.479, -36.0781, 0.28 ) }
    dend_26 { pt3dadd( -15.0029, -262.904, -36.6251, 0.28 ) }
    dend_26 { pt3dadd( -14.9483, -263.716, -36.7634, 0.55 ) }
    dend_26 { pt3dadd( -14.798, -267.015, -37.4975, 0.28 ) }
    dend_26 { pt3dadd( -14.7514, -270.972, -38.4963, 0.28 ) }
    dend_26 { pt3dadd( -14.8155, -273.736, -39.1213, 0.28 ) }
    dend_26 { pt3dadd( -15.074, -278.913, -40.1236, 0.28 ) }
    dend_26 { pt3dadd( -15.4129, -281.875, -40.4754, 0.55 ) }
    dend_26 { pt3dadd( -16.2833, -287.619, -40.9073, 0.28 ) }
    dend_26 { pt3dadd( -17.097, -291.847, -41.0272, 0.28 ) }
    dend_26 { pt3dadd( -17.9595, -295.961, -41.0161, 0.55 ) }
    dend_26 { pt3dadd( -18.4672, -298.189, -40.9863, 0.28 ) }
    dend_26 { pt3dadd( -20.2041, -305.443, -40.7773, 0.28 ) }
    dend_26 { pt3dadd( -20.8386, -308.151, -40.7736, 0.55 ) }
    dend_26 { pt3dadd( -21.8604, -312.764, -40.6938, 0.28 ) }
    dend_26 { pt3dadd( -22.2262, -314.692, -40.7127, 0.83 ) }
    dend_26 { pt3dadd( -22.9976, -319.331, -40.9271, 0.28 ) }
    dend_26 { pt3dadd( -23.1804, -320.735, -40.9913, 0.55 ) }
    dend_26 { pt3dadd( -23.6179, -326.949, -41.2214, 0.28 ) }
    dend_26 { pt3dadd( -23.8261, -330.51, -41.3602, 0.55 ) }
    dend_26 { pt3dadd( -23.9419, -333.677, -41.4813, 0.28 ) }
    dend_26 { pt3dadd( -23.9685, -334.817, -41.5218, 0.55 ) }
    dend_26 { pt3dadd( -23.938, -339.324, -41.6235, 0.28 ) }
    dend_26 { pt3dadd( -23.9073, -340.504, -41.6142, 0.83 ) }
    dend_26 { pt3dadd( -25.1935, -350.271, -43.363, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 88/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -11.8148, -88.7035, -7.46263, 0.55 ) }
    dend_25 { pt3dadd( -11.7104, -90.602, -7.38333, 0.55 ) }
    dend_25 { pt3dadd( -11.6152, -92.5857, -7.11777, 0.55 ) }
    dend_25 { pt3dadd( -11.6359, -94.499, -6.82009, 0.55 ) }
    dend_25 { pt3dadd( -11.7086, -97.0067, -6.40986, 0.55 ) }
    dend_25 { pt3dadd( -11.738, -99.2965, -5.87465, 0.55 ) }
    dend_25 { pt3dadd( -11.7402, -103.182, -4.8174, 0.55 ) }
    dend_25 { pt3dadd( -11.7383, -104.844, -4.1449, 0.55 ) }
    dend_25 { pt3dadd( -11.6434, -106.669, -3.23765, 0.55 ) }
    dend_25 { pt3dadd( -11.593, -107.3, -2.8656, 0.55 ) }
    dend_25 { pt3dadd( -11.3475, -110.085, -0.973718, 0.55 ) }
    dend_25 { pt3dadd( -11.1391, -111.759, 0.256899, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_25 { pt3dadd( -10.8522, -114.315, 2.1938, 0.55 ) }
    dend_25 { pt3dadd( -10.6804, -115.923, 3.44141, 0.55 ) }
    dend_25 { pt3dadd( -10.4388, -118.599, 5.5953, 0.55 ) }
    dend_25 { pt3dadd( -10.3924, -120.838, 7.45378, 0.55 ) }
    dend_25 { pt3dadd( -10.4568, -122.125, 8.59234, 0.55 ) }
    dend_25 { pt3dadd( -10.6687, -124.055, 10.4368, 0.55 ) }
    dend_25 { pt3dadd( -10.9679, -126.092, 12.3736, 0.55 ) }
    dend_25 { pt3dadd( -11.2846, -127.96, 14.1537, 0.55 ) }
    dend_25 { pt3dadd( -11.6474, -129.935, 15.9822, 0.55 ) }
    dend_25 { pt3dadd( -12.1206, -132.728, 18.4281, 0.55 ) }
    dend_25 { pt3dadd( -12.2928, -133.884, 19.3823, 0.28 ) }
    dend_25 { pt3dadd( -12.4183, -135.213, 20.3026, 0.55 ) }
    dend_25 { pt3dadd( -12.477, -136.805, 20.9414, 0.28 ) }
    dend_25 { pt3dadd( -12.4452, -137.524, 21.0666, 0.55 ) }
    dend_25 { pt3dadd( -12.3685, -138.159, 21.0308, 0.28 ) }
    dend_25 { pt3dadd( -12.2405, -138.986, 20.8208, 0.83 ) }
    dend_25 { pt3dadd( -11.6042, -142.394, 19.8206, 0.28 ) }
    dend_25 { pt3dadd( -11.4951, -143.102, 19.6363, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_42, dend_41, dend_28, dend_27, dend_0, dend_44, dend_43, dend_30, dend_29, dend_6, dend_1, dend_46, dend_45, dend_36, dend_31, dend_8, dend_7, dend_5, dend_2, dend_38, dend_37, dend_33, dend_32, dend_10, dend_9, dend_4, dend_3, dend_40, dend_39, dend_35, dend_34, dend_14, dend_11, dend_18, dend_15, dend_13, dend_12, dend_20, dend_19, dend_17, dend_16, dend_22, dend_21, dend_24, dend_23, dend_26, dend_25]}
    ModelViewParmSubset_2 = new SectionList()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_42, dend_41, dend_28, dend_27, dend_0, dend_44, dend_43, dend_30, dend_29, dend_6, dend_1, dend_46, dend_45, dend_36, dend_31, dend_8, dend_7, dend_5, dend_2, dend_38, dend_37, dend_33, dend_32, dend_10, dend_9, dend_4, dend_3, dend_40, dend_39, dend_35, dend_34, dend_14, dend_11, dend_18, dend_15, dend_13, dend_12, dend_20, dend_19, dend_17, dend_16, dend_22, dend_21, dend_24, dend_23, dend_26, dend_25]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_47 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_41 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_27 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_29 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_46 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_7 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_37 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_33 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_32 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_9 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_39 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_11 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_12 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_19 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_16 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_21 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_23 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_26 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_25 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_28 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_30 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_6 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_8 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_36 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_31 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_42 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_44 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_38 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_10 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_18 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_43 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_20 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_22 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_24 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_17 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_35 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_4 OneSecGrp_SectionRef_30.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_47 nseg = 5
    dend_41 nseg = 3
    dend_27 nseg = 5
    dend_29 nseg = 5
    dend_46 nseg = 3
    dend_45 nseg = 3
    dend_7 nseg = 3
    dend_5 nseg = 3
    dend_37 nseg = 7
    dend_33 nseg = 3
    dend_32 nseg = 3
    dend_9 nseg = 5
    dend_40 nseg = 5
    dend_39 nseg = 9
    dend_34 nseg = 5
    dend_11 nseg = 3
    dend_13 nseg = 3
    dend_12 nseg = 3
    dend_19 nseg = 5
    dend_16 nseg = 3
    dend_21 nseg = 3
    dend_23 nseg = 3
    dend_26 nseg = 13
    dend_25 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_LBC_91044b50b3_0_0


