// Cell: bSTUT213_L5_MC_162814b80d_0_0
/*
{
  "id" : "bSTUT213_L5_MC_162814b80d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.86113, -10.7946, 0.0, 2.37441", "-3.53574, -9.7661, 0.0, 3.83095", "-3.21036, -8.73761, 0.0, 5.40983", "-2.88497, -7.70912, 0.0, 6.39389", "-2.55958, -6.68063, 0.0, 7.30844", "-2.23419, -5.65214, 0.0, 8.17022", "-1.9088, -4.62365, 0.0, 8.75708", "-1.58342, -3.59516, 0.0, 9.10253", "-1.25803, -2.56666, 0.0, 9.32898", "-0.932639, -1.53817, 0.0, 9.3748", "-0.607251, -0.509681, 0.0, 9.4737", "-0.281863, 0.518811, 0.0, 9.59879", "0.0435249, 1.5473, 0.0, 9.45099", "0.368913, 2.57579, 0.0, 9.22636", "0.694301, 3.60429, 0.0, 8.83076", "1.01969, 4.63278, 0.0, 8.40838", "1.34508, 5.66127, 0.0, 7.58426", "1.67047, 6.68976, 0.0, 6.67025", "1.99585, 7.71825, 0.0, 5.65904", "2.32124, 8.74674, 0.0, 4.34677", "2.64663, 9.77524, 0.0, 2.64907" ]
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "1.12808, 8.78425, 3.58, 3.64", "0.529099, 10.0904, 3.97911, 3.64", "-0.819392, 13.0309, 4.87765, 2.5", "-2.11023, 15.8456, 5.73777, 2.5", "-2.8121, 17.3761, 6.20544, 3.18", "-3.78066, 19.4881, 6.85082, 3.64" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999418279446
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.89191, -10.6358, 1.45, 3.18", "-2.88337, -11.489, 1.45178, 3.18", "-2.85154, -14.6704, 1.45841, 2.27", "-2.83326, -16.4963, 1.46221, 2.73", "-2.81027, -18.7943, 1.467, 2.73", "-2.78742, -21.0779, 1.47176, 3.64" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999418279446
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.64663, 9.77524, 0.0, 0.530153", "7.1712, 24.0766, 0.0, 0.530153", "11.6958, 38.3779, 0.0, 0.530153" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.78066, 19.4881, 6.85082, 2.5", "-6.16913, 19.9771, 7.35186, 2.5", "-8.41643, 20.4372, 7.82329, 2.73" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-3.78066, 19.4881, 6.85082, 0.68", "-5.44834, 21.8243, 5.90154, 0.68", "-6.31881, 23.2122, 5.36591, 0.91", "-7.45839, 25.352, 4.60432, 0.68", "-8.31838, 27.2691, 3.96391, 1.14", "-9.29977, 29.667, 3.21024, 0.68", "-9.96573, 31.3711, 2.70562, 1.36", "-10.5969, 33.271, 2.18993, 0.68", "-10.9836, 34.8782, 1.79631, 0.68", "-11.31, 37.1612, 1.23222, 2.05", "-11.4076, 38.3484, 0.90673, 2.05", "-11.5056, 39.5334, 0.57312, 2.05", "-11.7371, 41.2029, 0.10113, 0.91", "-11.9762, 42.2684, -0.218196, 1.14", "-12.5301, 44.2707, -0.856645, 0.45", "-12.8829, 45.6833, -1.28992, 0.91", "-13.2731, 47.2545, -1.78091, 0.91", "-13.6745, 48.7531, -2.23751, 0.91", "-14.0128, 49.7804, -2.51476, 0.45", "-14.7764, 51.7056, -3.00685, 0.45", "-15.4698, 53.3689, -3.3519, 1.14" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-2.78742, -21.0779, 1.47176, 0.23", "-3.16999, -23.9689, 3.08037, 0.23", "-3.38309, -25.2928, 3.9198, 0.23", "-3.52197, -26.1017, 4.43232, 0.91", "-3.91686, -28.1304, 5.69385, 2.05", "-4.54584, -30.6581, 7.24606, 1.14", "-5.25041, -33.1778, 8.74363, 1.14", "-5.72219, -34.8314, 9.69955, 1.14", "-6.09853, -36.1335, 10.335, 1.14", "-6.72482, -38.1223, 11.1193, 1.14", "-7.54212, -40.5989, 11.886, 1.14", "-8.20021, -42.7328, 12.3845, 0.68", "-8.90587, -45.2681, 12.8346, 0.68", "-9.52011, -47.8134, 13.2384, 0.68", "-10.0277, -50.2788, 13.607, 1.14", "-10.6565, -53.8152, 14.0766, 0.91", "-10.9299, -55.7168, 14.3072, 0.91", "-11.2212, -57.8765, 14.5891, 0.91", "-11.5107, -60.123, 14.9699, 0.91", "-11.6646, -61.5531, 15.295, 0.91" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-2.78742, -21.0779, 1.47176, 3.64", "-1.58743, -22.6079, 1.47176, 3.64" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "11.6958, 38.3779, 0.0, 0.167161", "16.2203, 52.6793, 0.0, 0.167161", "20.7449, 66.9806, 0.0, 0.167161" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-8.41643, 20.4372, 7.82329, 1.36", "-11.0944, 21.1711, 8.41375, 1.36", "-13.451, 21.721, 8.85627, 2.27", "-16.8044, 22.3711, 9.39989, 1.36", "-18.903, 22.6563, 9.69562, 1.36", "-21.0076, 22.8627, 9.96241, 1.36", "-22.8076, 22.9933, 10.1842, 1.36", "-24.3861, 23.0695, 10.3053, 1.36", "-25.9773, 23.066, 10.3816, 1.36", "-27.9843, 22.9972, 10.4301, 1.36", "-28.6647, 22.9828, 10.4433, 1.36", "-30.658, 23.0065, 10.5052, 1.36", "-32.8011, 23.1249, 10.6024, 1.14", "-34.4131, 23.266, 10.6792, 1.14", "-37.1869, 23.6136, 10.8145, 1.14", "-38.6398, 23.8589, 10.8833, 1.14", "-40.1831, 24.1255, 10.9468, 1.14", "-42.0846, 24.4353, 10.9923, 1.14" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-8.41643, 20.4372, 7.82329, 1.36", "-10.3617, 22.9667, 7.67702, 1.36", "-12.6626, 25.9586, 7.50401, 1.59", "-14.2943, 28.0804, 7.38131, 0.91", "-14.6702, 28.5692, 7.35305, 0.91", "-16.3157, 30.709, 7.22932, 1.82" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-15.4698, 53.3689, -3.3519, 0.23", "-14.5513, 55.8524, -1.91927, 0.23", "-14.1696, 56.8448, -1.39533, 0.23", "-13.6322, 57.9772, -0.835366, 0.23", "-12.7887, 59.4587, -0.0906259, 0.68", "-11.4597, 61.5057, 1.0561, 0.23", "-10.6603, 62.6753, 1.75496, 0.23", "-10.1808, 63.3027, 2.15995, 0.23", "-8.60325, 65.2149, 3.57108, 0.45", "-7.67107, 66.2084, 4.31604, 0.23", "-6.64492, 67.0456, 5.08128, 0.23", "-6.11897, 67.3374, 5.39986, 0.23", "-4.88754, 67.7787, 6.11274, 0.23", "-7.34552, 66.7465, 7.18176, 0.45" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-15.4698, 53.3689, -3.3519, 0.91", "-15.8195, 55.3238, -3.62235, 0.91", "-16.1831, 57.3561, -3.90351, 1.59" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-11.6646, -61.5531, 15.295, 0.23", "-12.3281, -63.5317, 15.2187, 0.23", "-13.0664, -65.7335, 15.1338, 1.14", "-13.6325, -67.422, 15.0687, 0.45", "-14.2573, -69.2851, 14.9969, 1.59" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-11.6646, -61.5531, 15.295, 0.23", "-14.1088, -62.4927, 16.5607, 0.23", "-15.9171, -63.3865, 17.5322, 0.68", "-16.7108, -63.8595, 18.0089, 0.23", "-17.5448, -64.4105, 18.5726, 0.91", "-18.4992, -65.1761, 19.3256, 0.23", "-19.0536, -65.7585, 19.8449, 0.91", "-19.7819, -67.1495, 20.9628, 0.23", "-19.9287, -68.0531, 21.7403, 0.23", "-19.9031, -68.7305, 22.3364, 0.91", "-19.6632, -69.9374, 23.414, 0.23", "-19.0935, -71.418, 24.7853, 1.14", "-18.1433, -73.1428, 26.4553, 1.14", "-16.4737, -75.2377, 28.5788, 0.23", "-15.6463, -76.0614, 29.3988, 0.23", "-14.9134, -76.6347, 29.9487, 0.23", "-13.3084, -77.5917, 30.8771, 1.14", "-12.5156, -77.965, 31.2376, 1.14", "-10.1383, -78.8787, 32.1065, 0.23", "-8.99117, -79.2328, 32.4561, 0.91", "-6.6566, -79.8072, 33.2295, 0.23", "-5.22437, -80.1184, 33.7127, 0.23", "-3.89804, -80.4073, 34.1842, 0.23", "-2.30685, -80.7585, 34.749, 1.14", "0.203366, -81.3596, 35.6097, 0.23", "2.11137, -81.8545, 36.2306, 0.23", "3.46378, -82.231, 36.6549, 0.23", "5.93587, -82.9912, 37.4173, 0.23", "7.16776, -83.448, 37.7981, 1.14", "8.48043, -84.0619, 38.1968, 0.23", "10.1878, -85.0794, 38.7234, 0.68", "11.9799, -86.254, 39.1516, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-1.58743, -22.6079, 1.47176, 1.14", "-0.845255, -24.9838, 0.834474, 1.14", "-0.0623255, -27.4901, 0.162197, 1.14", "0.589139, -29.5756, -0.397195, 1.59", "1.36291, -32.0526, -1.0616, 2.05", "1.95573, -33.9503, -1.57064, 2.27", "2.63632, -36.129, -2.15504, 2.73" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-1.58743, -22.6079, 1.47176, 0.68", "1.22207, -23.4428, 2.47723, 0.68", "2.5769, -23.7098, 2.83587, 1.59", "5.06319, -23.9679, 3.29227, 1.14", "7.95754, -24.0898, 3.75274, 0.91", "9.32379, -24.1094, 3.95017, 1.14", "11.2977, -24.098, 4.21317, 0.68", "12.7811, -23.98, 4.32237, 1.59", "16.0124, -23.5936, 4.4617, 0.68", "17.5197, -23.3733, 4.48459, 1.14", "18.2517, -23.2842, 4.50188, 0.45", "19.161, -23.2069, 4.5542, 1.14", "20.6399, -23.1378, 4.69329, 0.45", "22.2444, -23.0933, 4.81901, 0.68", "23.5755, -23.0518, 4.83302, 1.36", "25.4125, -22.9524, 4.77934, 0.68", "26.5466, -22.8826, 4.72179, 1.14", "27.703, -22.8484, 4.64429, 1.14", "30.3613, -22.8437, 4.43119, 0.68", "32.7509, -22.8344, 4.27519, 0.91", "34.6593, -22.8197, 4.17179, 0.45", "36.0971, -22.8115, 4.15016, 0.91", "38.5869, -22.8383, 4.21038, 0.91", "40.2777, -22.8813, 4.32071, 0.23", "42.5342, -23.0045, 4.59585, 0.91", "43.6556, -23.0793, 4.7728, 0.91", "45.3635, -23.2085, 5.06884, 0.45", "47.1286, -23.2732, 5.4124, 0.68", "48.4904, -23.2718, 5.6957, 0.68", "50.7941, -23.3925, 6.14221, 1.36" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-42.0846, 24.4353, 10.9923, 1.14", "-43.8895, 24.9289, 11.8906, 1.14", "-46.4031, 25.6757, 12.9858, 0.68", "-48.8309, 26.4401, 13.9706, 0.45", "-50.5882, 26.9461, 14.7339, 0.68", "-51.9309, 27.2721, 15.3437, 0.68", "-53.2231, 27.5298, 15.9572, 0.68", "-54.4642, 27.7691, 16.5377, 0.91", "-56.7608, 28.213, 17.6003, 0.68", "-58.3313, 28.3968, 18.5533, 0.68", "-59.4569, 28.3888, 19.3755, 0.68", "-60.161, 28.2967, 19.984, 0.68", "-60.8016, 28.1201, 20.6232, 0.68", "-61.524, 27.7623, 21.6437, 0.68", "-61.819, 27.1687, 22.6586, 0.68" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-42.0846, 24.4353, 10.9923, 1.14", "-44.9542, 24.4024, 10.9554, 1.14", "-47.8012, 24.338, 10.8161, 0.68", "-49.4056, 24.27, 10.7005, 1.14", "-52.3077, 24.0611, 10.4617, 0.45", "-54.9859, 23.7804, 10.2147, 0.68", "-57.0618, 23.5193, 10.047, 1.14", "-58.9639, 23.238, 9.91516, 1.59", "-60.5638, 22.9294, 9.80669, 0.68", "-62.4108, 22.4694, 9.721, 0.68", "-64.2611, 21.9117, 9.65296, 0.68", "-65.6617, 21.4312, 9.67833, 0.68", "-67.0068, 20.9439, 9.77241, 0.68", "-68.6992, 20.3138, 9.99339, 0.68", "-70.0296, 19.8369, 10.2313, 0.68" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-16.3157, 30.709, 7.22932, 0.45", "-17.4075, 31.3651, 6.50345, 0.45", "-19.1197, 32.741, 5.37399, 0.91", "-19.984, 33.5234, 4.83345, 0.23", "-21.4881, 34.9044, 3.93522, 0.91", "-23.0513, 36.2892, 3.07649, 0.23", "-24.6083, 37.6385, 2.28709, 0.23", "-25.8385, 38.7412, 1.74238, 0.23", "-27.2835, 40.0941, 1.24345, 0.23", "-27.7896, 40.5512, 1.10983, 0.23", "-29.4505, 41.9409, 0.829543, 0.91", "-31.2314, 43.2773, 0.639418, 0.23", "-32.5438, 44.2057, 0.550804, 1.14", "-35.051, 45.9052, 0.436964, 0.23", "-36.5325, 46.9623, 0.396284, 0.23", "-38.011, 48.0705, 0.368061, 0.68", "-39.0293, 48.8805, 0.360788, 0.68", "-40.0621, 49.7233, 0.371593, 0.68", "-41.178, 50.7017, 0.420495, 0.68", "-42.5121, 51.924, 0.520653, 0.23", "-42.8971, 52.2888, 0.557545, 1.14", "-44.3199, 53.6064, 0.700808, 1.14", "-45.8299, 54.9423, 0.910163, 0.23", "-46.8673, 55.8455, 0.996151, 0.23", "-47.7138, 56.5445, 1.00639, 0.23", "-49.2502, 57.7396, 0.885794, 0.91", "-50.8368, 58.9392, 0.589158, 0.91", "-52.4286, 60.1368, 0.068441, 0.68", "-54.3456, 61.7151, -0.833536, 0.23", "-55.5468, 62.9205, -1.57437, 0.91", "-56.3496, 64.0179, -2.25055, 0.23", "-56.8383, 64.9904, -2.80506, 0.23", "-57.279, 66.2857, -3.47212, 0.23", "-57.6746, 67.7832, -4.14807, 0.91", "-58.1667, 70.4978, -5.12927, 0.23", "-58.512, 73.1552, -5.90714, 0.23", "-58.7379, 75.1025, -6.29901, 0.68", "-58.8426, 76.054, -6.4174, 0.23", "-59.0167, 77.6482, -6.51457, 0.23", "-59.1496, 79.0571, -6.53211, 0.23", "-59.2361, 80.1885, -6.47759, 0.23", "-59.3081, 82.2101, -6.22415, 0.68", "-59.3335, 84.1901, -5.93724, 0.23", "-59.3308, 85.2773, -5.76648, 0.23", "-59.238, 86.9325, -5.48928, 0.68", "-65.1174, 94.6466, -7.92342, 0.68", "-71.8768, 101.67, -10.1572, 0.68", "-79.3834, 107.537, -13.1947, 0.68", "-86.5735, 113.502, -16.761, 0.68" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-16.3157, 30.709, 7.22932, 0.68", "-18.5348, 31.4603, 7.10802, 0.68", "-19.6422, 31.8116, 6.94835, 1.14", "-21.3426, 32.4366, 6.57199, 0.23", "-23.8778, 33.5681, 5.87529, 0.45", "-26.0366, 34.7018, 5.23985, 0.45", "-27.4654, 35.5287, 4.81429, 1.14", "-29.1632, 36.6911, 4.22853, 0.23", "-31.2752, 38.2972, 3.49787, 0.45", "-33.5907, 40.2134, 2.63856, 1.14", "-35.11, 41.5579, 2.04976, 0.68", "-36.1276, 42.5437, 1.70064, 0.68", "-37.2654, 43.7547, 1.38301, 1.36", "-37.747, 44.3382, 1.29002, 1.82" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-16.1831, 57.3561, -3.90351, 0.68", "-15.6021, 60.1515, -4.73631, 0.68", "-15.3201, 61.7555, -5.24038, 0.68", "-15.0044, 63.7836, -5.84124, 0.68", "-14.8042, 65.0695, -6.22223, 0.68", "-14.5533, 66.6808, -6.69959, 0.23", "-14.3173, 68.1965, -7.14865, 1.14", "-14.0292, 69.3004, -7.60731, 1.14", "-13.7893, 70.1359, -7.99164, 1.14" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-16.1831, 57.3561, -3.90351, 0.23", "-16.4772, 57.0028, -4.8758, 0.23", "-16.6401, 56.7105, -6.06046, 0.45", "-16.6665, 56.5696, -7.55861, 0.45", "-16.5569, 56.6654, -8.85942, 0.45", "-16.1002, 57.2054, -11.0572, 0.45", "-15.7956, 57.5655, -12.5229, 0.23", "-15.4027, 58.2659, -14.2338, 0.23", "-14.976, 59.0471, -15.3393, 0.23", "-14.4081, 59.9187, -16.1617, 0.23", "-13.8363, 60.6543, -16.6854, 0.23", "-11.433, 64.7554, -25.4834, 0.23", "-9.41263, 69.5809, -34.0059, 0.23", "-8.42848, 72.7974, -43.4232, 0.23", "-6.96032, 75.2865, -52.9965, 0.23", "-7.16504, 77.9812, -62.6245, 0.23", "-8.40032, 81.5844, -71.8706, 0.23", "-9.96984, 84.3087, -81.3634, 0.23", "-11.5445, 85.9447, -91.1022, 0.23" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-14.2573, -69.2851, 14.9969, 0.45", "-14.6938, -70.683, 15.3139, 0.45", "-15.4593, -73.6256, 15.7361, 0.23", "-15.8313, -75.094, 15.8409, 0.68", "-16.1815, -76.4816, 15.8903, 0.68", "-16.8361, -79.0352, 15.9324, 0.23", "-17.3425, -81.0241, 15.9421, 0.23", "-17.7819, -82.8163, 15.8538, 0.91", "-18.3243, -84.8877, 15.6427, 0.23", "-18.8471, -86.3859, 15.5534, 0.91", "-19.3293, -87.6201, 15.5015, 0.23", "-19.9309, -88.9978, 15.4951, 0.91", "-20.9508, -91.0688, 15.5213, 0.23", "-21.5655, -92.2044, 15.5734, 0.23", "-23.4382, -95.3762, 15.9214, 1.14" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-14.2573, -69.2851, 14.9969, 0.45", "-13.9767, -71.9452, 15.0647, 0.45", "-13.899, -73.3867, 15.0949, 0.45", "-13.8419, -75.0756, 15.1257, 0.45", "-13.7624, -77.3789, 15.1625, 0.91", "-13.6885, -79.3916, 15.1917, 0.91", "-13.6354, -81.1116, 15.2359, 0.23", "-13.6605, -82.9384, 15.3407, 0.23", "-13.6855, -83.7886, 15.4088, 0.23", "-13.7519, -85.2181, 15.5592, 0.91", "-13.788, -85.7902, 15.6387, 0.91", "-13.958, -88.4726, 16.0584, 0.23", "-14.0607, -90.8534, 16.4335, 0.68", "-14.0569, -91.4584, 16.5248, 0.23", "-13.9914, -93.0295, 16.7364, 1.14", "-13.8499, -95.3631, 17.0056, 0.23", "-13.7109, -96.8542, 17.1647, 0.91", "-13.4275, -99.1231, 17.3634, 0.23", "-13.1989, -100.791, 17.4032, 0.68", "-12.8914, -102.78, 17.3801, 0.23", "-12.5922, -104.33, 17.31, 1.36", "-12.1641, -106.435, 17.1021, 0.45", "-11.8056, -108.158, 16.8639, 1.14", "-11.235, -110.822, 16.3457, 0.23", "-10.9235, -112.197, 15.994, 0.23", "-10.608, -113.379, 15.6018, 0.23", "-10.3548, -114.348, 15.2441, 0.23", "-9.93055, -116.225, 14.5106, 0.23", "-9.68364, -117.588, 14.0452, 1.14", "-9.55323, -118.898, 13.6829, 1.14", "-9.51601, -121.312, 13.0727, 0.23", "-9.60447, -123.441, 12.5725, 0.23", "-9.65438, -124.153, 12.4466, 0.91", "-9.81171, -126.141, 12.1719, 0.23", "-9.92799, -127.904, 12.0072, 0.23", "-9.991, -129.392, 11.9196, 0.91", "-10.0246, -131.026, 11.8684, 0.91", "-10.04, -133.875, 11.8012, 0.23", "-10.0636, -135.718, 11.7732, 0.68", "-10.1124, -138.056, 11.7195, 0.23", "-10.1489, -139.216, 11.7028, 0.68", "-10.2764, -141.515, 11.6678, 0.23", "-10.4351, -143.56, 11.6368, 0.45", "-10.5278, -144.531, 11.5902, 0.23", "-10.9347, -147.783, 11.4395, 1.14", "-11.305, -150.528, 11.358, 0.23", "-11.4062, -151.494, 11.3454, 0.91", "-11.4237, -152.357, 11.3401, 0.91", "-11.3436, -154.791, 11.3164, 0.23", "-11.2109, -156.822, 11.2726, 0.23", "-11.0625, -158.518, 11.2069, 0.23", "-10.8589, -160.232, 11.092, 0.68", "-10.3828, -163.644, 10.8288, 0.23", "-10.1556, -165.052, 10.7104, 0.23", "-9.67086, -167.663, 10.4616, 0.45", "-9.18895, -169.971, 10.1525, 0.23", "-8.89227, -171.427, 9.92791, 0.23", "-8.5859, -173.101, 9.67436, 0.45", "-8.34528, -174.571, 9.47435, 0.45", "-7.72578, -177.956, 9.06018, 0.45", "-7.45281, -179.558, 8.87963, 0.91", "-7.23232, -181.037, 8.72495, 0.23", "-7.11975, -182.185, 8.60167, 0.68", "-7.03483, -184.174, 8.39708, 0.23", "-7.03326, -186.193, 8.21135, 0.23", "-7.04626, -187.879, 8.08962, 0.23", "-7.01981, -189.299, 8.01054, 0.23", "-6.92241, -191.808, 7.84202, 0.23", "-6.87433, -193.733, 7.6809, 0.68", "-6.86286, -194.87, 7.52499, 0.68", "-6.86669, -196.683, 7.2287, 0.68", "-6.85422, -198.497, 6.9173, 0.68", "-6.82951, -200.826, 6.51532, 0.68", "-6.69048, -204.856, 5.83496, 0.23", "-6.39237, -209.092, 5.12982, 0.23", "-6.18438, -211.171, 4.79453, 0.45", "-5.63677, -214.804, 4.24721, 0.45", "-5.27239, -216.467, 4.03015, 0.45", "-4.67912, -218.3, 3.87911, 0.45", "-3.76607, -220.247, 3.85831, 0.45", "-3.16296, -221.328, 3.92967, 0.68", "-1.88361, -223.544, 4.11767, 0.23", "-1.03153, -225.024, 4.26585, 0.45", "-0.178784, -226.673, 4.45216, 0.45", "0.767736, -228.833, 4.64509, 0.45", "1.65306, -231.253, 4.7713, 0.91", "2.18324, -232.948, 4.7866, 0.23", "2.57583, -234.482, 4.73974, 0.68", "3.07584, -236.764, 4.64013, 0.23", "3.51752, -239.302, 4.4871, 0.68", "3.74984, -241.117, 4.40257, 0.68", "4.0317, -243.165, 4.37786, 0.91", "4.33307, -244.988, 4.46057, 0.91", "4.77683, -247.698, 4.74757, 0.23", "4.99797, -249.149, 5.02391, 0.68", "5.22371, -250.762, 5.49876, 0.23", "5.5243, -252.622, 6.25057, 0.68", "5.93891, -254.385, 7.16665, 0.23", "6.31487, -255.696, 7.98229, 0.91", "6.67503, -256.957, 8.81298, 0.23", "6.82085, -257.554, 9.20654, 0.68", "7.14702, -259.073, 10.1486, 0.45", "7.54392, -260.737, 11.1094, 0.45", "8.51591, -263.598, 12.7676, 1.14", "9.18478, -265.046, 13.591, 0.23", "9.62201, -265.823, 13.992, 0.91", "10.9327, -267.901, 14.9794, 0.23", "12.0266, -269.601, 15.7066, 0.68", "13.2891, -271.388, 16.4321, 0.23", "14.3048, -272.509, 16.8758, 0.91", "16.0951, -274.215, 17.5998, 0.23", "16.7435, -274.78, 17.8489, 0.68" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "11.9799, -86.254, 39.1516, 0.68", "10.9776, -87.7871, 40.2955, 0.68", "10.0294, -89.3538, 41.3932, 0.23", "9.4688, -90.2562, 42.0215, 0.68", "8.52303, -91.879, 43.0799, 0.23", "7.90063, -93.0347, 43.8648, 0.68", "7.17956, -94.421, 44.8401, 0.23", "6.76543, -95.227, 45.3954, 0.91", "6.22719, -96.2457, 46.0877, 0.23", "5.64226, -97.3138, 46.8379, 0.91", "4.45679, -99.3907, 48.4072, 0.23", "3.6503, -100.789, 49.5497, 0.23", "3.10318, -101.726, 50.369, 0.91", "2.54582, -102.596, 51.1498, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "11.9799, -86.254, 39.1516, 0.23", "13.1882, -85.7431, 39.7829, 0.23", "14.7814, -84.9321, 41.0599, 0.91", "16.0258, -84.2171, 42.4654, 0.23", "17.5829, -83.3877, 44.5375, 0.91", "19.1954, -82.6149, 46.9323, 0.23", "19.7579, -82.3938, 47.831, 0.68", "21.0096, -81.9763, 50.4449, 0.23", "21.8218, -81.7636, 52.926, 0.23", "22.308, -81.7292, 55.0618, 0.23", "22.524, -81.8004, 56.261, 0.23", "22.8567, -82.0928, 57.7428, 0.23", "23.1198, -82.4496, 58.6722, 0.23", "23.8503, -83.5988, 60.477, 0.23", "24.2238, -84.2011, 61.164, 0.23", "24.9343, -85.286, 62.1632, 0.23", "26.2732, -87.2614, 63.7188, 0.23", "27.1732, -88.5428, 64.6026, 0.91", "28.1501, -90.0661, 65.4746, 0.23", "28.7661, -91.2276, 66.0051, 0.91", "29.811, -94.0049, 67.1505, 0.23", "30.015, -94.7974, 67.4796, 0.23", "30.1176, -95.4651, 67.7359, 0.23", "30.3465, -97.7373, 68.5415, 0.91", "30.4469, -100.671, 69.44, 0.23", "30.3442, -102.878, 70.102, 0.23", "30.1742, -104.226, 70.4702, 0.23", "30.0147, -105.361, 70.8086, 0.68" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "2.63632, -36.129, -2.15504, 1.14", "2.34426, -38.7431, -1.96124, 1.14", "2.09183, -41.3781, -1.87118, 1.14", "1.9041, -44.0743, -1.86471, 0.91", "1.78348, -45.8351, -1.93711, 1.36", "1.67432, -47.6533, -2.13211, 1.36", "1.59343, -49.3609, -2.40629, 0.91", "1.58641, -51.1492, -2.82518, 0.91", "1.63584, -52.576, -3.20084, 1.59", "1.82787, -55.1892, -3.8565, 1.59", "2.08028, -58.044, -4.43572, 0.68", "2.3166, -60.776, -4.7905, 0.91", "2.5643, -63.6467, -4.97521, 1.59", "2.76434, -65.9594, -5.02182, 1.59", "2.9709, -68.1006, -5.01937, 1.59", "3.45053, -71.8141, -4.97861, 1.36", "4.15017, -75.9467, -4.94549, 1.36", "4.97068, -79.9132, -5.01813, 1.14", "5.52965, -82.2045, -5.13092, 1.14", "6.22176, -84.7415, -5.33278, 1.14", "6.95708, -87.2858, -5.61158, 1.14", "8.01812, -90.9328, -6.11384, 0.68", "8.49158, -92.6725, -6.3863, 0.68", "9.2088, -95.5949, -6.82331, 1.14", "9.86217, -98.7182, -7.19597, 0.91", "10.415, -101.903, -7.43243, 0.91", "10.7325, -103.934, -7.51821, 1.14", "10.9487, -105.619, -7.57459, 1.14", "11.1662, -107.302, -7.62838, 1.14", "11.727, -111.04, -7.78586, 1.14", "12.5414, -114.795, -7.89639, 1.59", "13.4633, -117.867, -7.89853, 1.59" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "2.63632, -36.129, -2.15504, 0.45", "3.10971, -37.88, -2.83839, 0.45", "3.49845, -39.1863, -3.28785, 0.45", "4.12202, -40.7375, -3.69222, 0.45", "4.38491, -41.2446, -3.7853, 0.45", "4.66411, -41.7303, -3.88355, 0.45", "4.96521, -42.2495, -4.02188, 0.45", "5.42058, -43.0846, -4.25235, 0.45", "6.43433, -45.0679, -4.8292, 0.91", "7.55487, -47.3641, -5.56376, 0.23", "8.28142, -49.0323, -6.18938, 1.14", "8.89847, -50.7129, -6.86831, 0.23", "9.19531, -51.5318, -7.22014, 0.23", "9.74769, -52.8965, -7.85823, 0.23", "10.0674, -53.5891, -8.24008, 0.23", "10.5823, -54.4818, -8.77549, 0.23", "11.2304, -55.3778, -9.27171, 0.23", "13.0359, -57.3814, -10.3195, 0.23", "14.0561, -58.3757, -10.8518, 0.91", "15.3161, -59.4657, -11.4429, 0.68", "16.1332, -60.1164, -11.7956, 0.91" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "50.7941, -23.3925, 6.14221, 0.23", "50.7772, -24.0042, 6.17698, 0.23", "50.6059, -26.5754, 6.30937, 0.45", "50.5158, -27.8645, 6.40324, 0.68", "50.4025, -29.5618, 6.53932, 0.23", "50.3671, -30.4471, 6.62891, 0.68", "50.3002, -32.5786, 6.86115, 0.23", "50.3076, -33.1434, 6.92847, 0.45", "50.4524, -34.9446, 7.13003, 1.36", "50.7207, -36.3551, 7.24257, 1.36", "51.321, -38.3755, 7.30934, 0.23", "51.7471, -39.5331, 7.3164, 0.68", "52.4408, -41.1612, 7.28773, 0.23", "52.9083, -42.244, 7.24203, 0.23", "53.6852, -44.0368, 7.10886, 0.68", "54.7237, -46.4444, 6.97612, 0.23", "55.3036, -47.8285, 6.9214, 0.23", "55.5647, -48.5148, 6.92571, 0.45", "55.9249, -49.6282, 6.98635, 0.23", "56.1212, -50.2068, 7.04596, 0.91", "56.7534, -51.7209, 7.25297, 0.23", "57.1159, -52.3464, 7.35431, 0.68", "58.1466, -53.7018, 7.55632, 0.23", "59.0518, -54.6699, 7.68904, 0.91", "60.4001, -55.8822, 7.8508, 0.23", "61.2784, -56.5033, 7.90414, 0.68", "62.1084, -56.9524, 7.90842, 0.23", "62.7344, -57.2195, 7.9089, 0.91", "63.7737, -57.5729, 7.89029, 0.23", "64.8832, -57.9483, 7.83202, 0.45", "66.9194, -58.6873, 7.75271, 0.23", "68.7717, -59.4707, 7.76129, 0.68", "69.6387, -59.8761, 7.78916, 0.23", "71.8994, -60.9718, 7.90681, 0.23", "73.1393, -61.6265, 7.99373, 1.14", "74.9651, -62.7063, 8.15524, 0.23", "76.283, -63.7078, 8.3582, 0.23", "77.6895, -65.1079, 8.70354, 1.14", "78.1456, -65.6827, 8.85648, 0.23", "79.0642, -67.0931, 9.25621, 0.68", "79.3687, -67.6005, 9.40661, 0.68", "80.3986, -69.4951, 9.89758, 0.23", "81.2719, -71.1628, 10.3167, 0.45", "81.9479, -72.5382, 10.6858, 0.23", "82.3107, -73.3258, 10.894, 0.45", "82.9091, -74.6402, 11.2325, 0.23", "83.2043, -75.2792, 11.4258, 0.68", "84.3798, -77.9451, 12.3262, 0.23", "84.5634, -78.444, 12.5285, 0.68", "84.9015, -79.8711, 13.1903, 0.23", "85.0072, -80.6397, 13.5686, 0.68", "85.2538, -83.3371, 14.9225, 0.23", "85.3837, -84.4797, 15.5456, 0.45", "85.7059, -86.1937, 16.5165, 0.23", "86.1766, -87.5059, 17.2876, 0.23", "86.4468, -87.9866, 17.5689, 0.23", "87.7395, -89.7053, 18.5024, 0.68", "89.3782, -91.443, 19.3063, 0.23", "90.6961, -92.595, 19.8062, 0.68", "92.6684, -94.0932, 20.4049, 0.23", "93.9892, -94.9577, 20.766, 0.68", "95.3634, -95.7253, 21.1042, 0.23", "96.3298, -96.1882, 21.3104, 0.68", "97.4983, -96.6545, 21.4978, 0.23", "97.9973, -96.8284, 21.5684, 0.45", "99.3998, -97.271, 21.6624, 0.23", "100.281, -97.5022, 21.744, 0.91" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "50.7941, -23.3925, 6.14221, 0.91", "52.5946, -23.5446, 5.77539, 0.91", "54.6053, -23.6133, 5.38074, 0.68", "56.8975, -23.6903, 4.88799, 0.68", "59.4916, -23.7211, 4.26498, 0.68", "61.4321, -23.7366, 3.74578, 0.91", "63.763, -23.8098, 3.09556, 0.91", "65.3074, -23.9085, 2.61482, 0.91", "68.1186, -24.143, 1.7104, 0.68", "69.3824, -24.2422, 1.35205, 0.91", "70.8742, -24.3428, 0.992602, 0.23", "72.4161, -24.4829, 0.644749, 0.23", "73.6631, -24.5741, 0.410982, 0.91", "75.3232, -24.6243, 0.182593, 0.91", "77.3141, -24.6061, 0.059033, 0.91", "79.8528, -24.4724, -0.0378364, 0.23", "81.6647, -24.3192, -0.114117, 0.68", "83.4661, -24.1033, -0.235248, 0.68", "85.3606, -23.8144, -0.436227, 0.23", "87.7104, -23.4371, -0.714681, 0.68", "89.6279, -23.1497, -0.990145, 0.68", "92.0347, -22.8551, -1.35331, 0.45", "93.4949, -22.6681, -1.57327, 0.23", "96.4377, -22.2474, -2.11883, 0.91", "98.373, -21.9002, -2.57383, 1.14" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-61.819, 27.1687, 22.6586, 0.45", "-63.3965, 26.7182, 23.1364, 0.45", "-64.6808, 26.5237, 23.538, 0.45", "-66.1806, 26.4415, 23.9819, 0.45", "-67.6535, 26.4496, 24.3169, 0.45", "-68.7064, 26.4279, 24.5602, 0.45", "-70.1788, 26.4251, 24.9404, 0.45", "-71.5088, 26.4915, 25.2983, 0.45", "-72.7323, 26.5777, 25.6209, 0.91", "-75.1064, 26.8615, 26.1988, 0.23", "-76.968, 27.1465, 26.6823, 0.91", "-78.5706, 27.3991, 27.1096, 0.23", "-80.3409, 27.6494, 27.5704, 0.68", "-82.6056, 27.9281, 28.1549, 0.23", "-84.1188, 28.0836, 28.577, 0.91", "-85.6689, 28.2248, 29.0741, 0.23", "-87.6025, 28.4017, 29.7062, 0.91", "-88.7933, 28.4562, 30.1329, 0.23", "-90.3795, 28.4739, 30.7649, 1.82", "-92.0289, 28.4717, 31.5454, 0.45", "-93.9914, 28.4233, 32.5106, 0.23", "-94.9088, 28.4132, 32.9808, 0.23", "-95.4961, 28.4534, 33.3138, 0.23", "-97.0753, 28.676, 34.1873, 0.23", "-98.8596, 29.0338, 35.0997, 0.23", "-100.273, 29.3861, 35.7477, 1.14", "-101.888, 29.7677, 36.3743, 0.23", "-104.382, 30.2375, 37.1764, 0.68", "-106.097, 30.4971, 37.6662, 0.23", "-107.31, 30.6373, 37.9606, 0.91", "-108.827, 30.7429, 38.2525, 0.23", "-110.859, 30.8958, 38.6244, 0.91", "-113.55, 31.0918, 39.0473, 0.23", "-114.87, 31.1411, 39.2577, 0.23", "-117.702, 31.1621, 39.7656, 0.91", "-118.371, 31.153, 39.8933, 0.91", "-120.671, 31.1674, 40.3465, 0.23", "-121.906, 31.2105, 40.6475, 0.91", "-123.608, 31.2228, 41.1612, 0.45", "-124.307, 31.1835, 41.3944, 0.23", "-124.944, 31.123, 41.6208, 0.23", "-126.179, 30.9848, 42.1012, 0.23", "-127.759, 30.734, 42.7573, 1.14", "-129.745, 30.5028, 43.6103, 0.23", "-131.478, 30.3833, 44.3331, 1.14", "-133.635, 30.2301, 45.2276, 0.23", "-135.422, 30.0547, 45.9819, 0.68", "-136.909, 29.9191, 46.5896, 0.68", "-138.393, 29.911, 47.1626, 0.23", "-139.664, 30.041, 47.641, 0.23", "-141.333, 30.2886, 48.2536, 0.91", "-142.585, 30.5107, 48.7309, 0.23", "-144.146, 30.822, 49.3247, 1.14", "-145.758, 31.1871, 49.9548, 0.23", "-147.046, 31.4676, 50.4888, 0.23", "-147.999, 31.7213, 50.9012, 1.36", "-151.008, 32.6509, 52.2008, 0.23", "-153.822, 33.4438, 53.4105, 1.82" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-61.819, 27.1687, 22.6586, 0.23", "-63.0566, 27.5243, 22.7701, 0.23", "-64.536, 28.0675, 22.934, 1.14", "-66.0054, 28.6875, 23.2185, 0.23", "-68.2643, 29.6614, 23.7455, 0.68", "-69.3363, 30.0505, 24.0441, 0.68", "-70.697, 30.4546, 24.4525, 0.68", "-71.831, 30.7239, 24.8332, 1.36", "-73.5279, 31.0352, 25.4918, 0.45", "-74.8032, 31.1947, 26.0234, 0.68", "-76.7714, 31.2735, 26.8357, 0.23", "-77.8426, 31.2, 27.2117, 0.23", "-80.1722, 30.8784, 27.8758, 1.14", "-81.8153, 30.5462, 28.3547, 0.23", "-83.3435, 30.2362, 28.7702, 0.23", "-84.244, 30.0982, 29.0487, 1.14", "-85.7572, 29.9761, 29.5878, 0.23", "-86.5792, 29.9298, 29.9401, 0.68", "-88.8751, 29.8695, 31.1263, 0.23", "-90.097, 29.9585, 31.8485, 0.23", "-91.7967, 30.2896, 33.0263, 1.14", "-92.7297, 30.5871, 33.7737, 0.23", "-93.514, 31.0001, 34.526, 0.91", "-94.6398, 31.9228, 35.8345, 0.23", "-95.1625, 32.5838, 36.5482, 1.14", "-95.8311, 33.777, 37.7156, 0.45", "-96.4502, 35.0326, 38.8605, 0.23", "-97.1717, 36.3966, 40.1321, 2.05", "-97.9311, 37.7522, 41.4071, 0.23", "-98.5273, 38.683, 42.3174, 0.91", "-99.6406, 39.9629, 43.6624, 0.23", "-100.73, 40.7185, 44.6934, 0.23", "-102.009, 41.2505, 45.6885, 0.91", "-103.384, 41.5341, 46.6055, 0.23", "-104.286, 41.6092, 47.1246, 0.23", "-105.703, 41.681, 47.8668, 1.14", "-107.355, 41.8325, 48.677, 0.23", "-108.19, 42.004, 49.0899, 0.91", "-109.637, 42.3838, 49.725, 0.23", "-110.7, 42.6714, 50.1562, 0.23", "-111.777, 43.0405, 50.6213, 1.14", "-113.356, 43.6695, 51.3591, 0.23", "-114.319, 44.1353, 51.7964, 0.23", "-115.644, 44.8261, 52.4224, 1.14", "-117.236, 45.7265, 53.1657, 0.23", "-119.442, 47.0361, 54.1845, 0.23", "-120.384, 47.6266, 54.5988, 0.23", "-121.995, 48.7278, 55.233, 1.14", "-123.385, 49.7935, 55.7475, 0.23", "-124.375, 50.6254, 56.1014, 0.68", "-125.349, 51.4792, 56.3828, 1.36", "-126.448, 52.3932, 56.614, 1.36", "-127.611, 53.2487, 56.8322, 0.23", "-128.424, 53.7374, 56.9914, 0.23", "-129.255, 54.1053, 57.1397, 0.23", "-131.46, 54.7436, 57.6125, 0.91", "-132.549, 54.9231, 57.8625, 0.23", "-133.856, 55.0103, 58.2328, 0.23", "-134.716, 54.9853, 58.5433, 0.23", "-136.418, 54.8687, 59.2086, 1.14", "-138.318, 54.7953, 60.05, 0.23", "-139.161, 54.78, 60.4838, 1.36", "-141.523, 54.8125, 61.8409, 0.23", "-143.88, 54.8521, 63.3134, 0.91", "-145.112, 54.8475, 64.1253, 0.23", "-146.945, 54.758, 65.5091, 1.36", "-148.079, 54.6656, 66.4695, 0.23", "-149.357, 54.588, 67.7853, 0.23", "-149.836, 54.556, 68.4401, 0.23", "-150.164, 54.4938, 69.2362, 1.14", "-150.31, 54.2392, 70.7373, 0.23", "-149.957, 53.832, 72.9631, 0.91", "-149.41, 53.8502, 74.6765, 0.23", "-149.155, 53.9608, 75.5472, 0.23", "-148.887, 54.3352, 77.1922, 0.23", "-148.918, 54.8505, 78.5747, 0.23", "-149.217, 55.4174, 79.5676, 0.23", "-149.746, 56.2317, 80.6447, 0.23", "-150.324, 57.2267, 81.6528, 0.23", "-150.833, 57.9513, 82.3032, 0.68", "-151.38, 58.7425, 82.9288, 0.23", "-152.021, 59.5774, 83.548, 0.91", "-153.227, 61.0749, 84.6061, 0.23", "-153.967, 61.9482, 85.2006, 1.14", "-156.143, 64.4203, 86.8701, 0.23", "-157.216, 65.5506, 87.6914, 0.91", "-158.047, 66.2811, 88.2862, 0.23", "-159.174, 67.0818, 89.0379, 1.14", "-160.512, 67.9353, 89.8467, 0.23", "-162.298, 69.0112, 90.9009, 1.14", "-163.792, 69.8451, 91.7914, 0.23", "-165.771, 70.7574, 92.9255, 0.68", "-167.285, 71.3944, 93.8574, 0.68" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-70.0296, 19.8369, 10.2313, 0.68", "-71.043, 20.3598, 10.388, 0.68", "-72.609, 21.1678, 10.6301, 0.68" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-70.0296, 19.8369, 10.2313, 0.23", "-70.0953, 19.2258, 10.6536, 0.23", "-70.3074, 17.6511, 11.5965, 0.23", "-70.4689, 16.1047, 12.4515, 0.68", "-70.5157, 14.5941, 13.2899, 0.23", "-70.4711, 12.84, 14.2269, 0.23", "-70.3868, 11.7106, 14.821, 0.23", "-70.2539, 10.4056, 15.4486, 0.68", "-70.0556, 8.62524, 16.2334, 0.23", "-69.8266, 7.09755, 16.8706, 0.23", "-69.6256, 6.03265, 17.3066, 0.91", "-69.2752, 4.50655, 17.9336, 0.23", "-69.0994, 3.69947, 18.2745, 0.68", "-68.7135, 2.03104, 18.9995, 0.91", "-68.4898, 0.322746, 19.6664, 1.14" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-37.747, 44.3382, 1.29002, 0.23", "-38.5327, 46.6021, 0.914121, 0.23", "-38.7213, 47.3068, 0.784143, 0.23", "-38.8968, 48.1358, 0.619899, 0.23", "-39.1425, 49.192, 0.447442, 0.23", "-39.6115, 51.1546, 0.176445, 0.68", "-40.0536, 52.8682, -0.0233173, 0.23", "-40.7729, 55.0936, -0.256328, 0.23", "-41.8116, 57.8257, -0.504547, 0.68", "-42.477, 59.5204, -0.603297, 0.23", "-43.0974, 61.1195, -0.666792, 0.23", "-43.9525, 63.3444, -0.695696, 0.45", "-44.4273, 64.4986, -0.700555, 0.45", "-45.147, 66.0313, -0.702657, 0.23", "-46.1873, 68.2065, -0.72986, 0.68", "-46.8655, 69.9312, -0.834256, 0.23", "-47.2125, 71.0321, -0.95327, 0.23", "-47.4057, 72.181, -1.12366, 1.14", "-47.4469, 73.3426, -1.33883, 0.23", "-47.3991, 74.1896, -1.49785, 0.68", "-47.2041, 76.1622, -1.86996, 0.23", "-46.9549, 77.4943, -2.05757, 0.23", "-46.4435, 79.4871, -2.28101, 0.45", "-46.2467, 80.2907, -2.34387, 0.45", "-45.8711, 81.8919, -2.3808, 0.23", "-45.5315, 83.3015, -2.35952, 0.23", "-45.0031, 85.5457, -2.23841, 0.23", "-44.7811, 86.6106, -2.14528, 0.68", "-44.4302, 88.9997, -1.91532, 0.68", "-44.2517, 91.1705, -1.70316, 0.23", "-44.1309, 92.8536, -1.56551, 0.68", "-44.0738, 94.788, -1.40553, 0.23", "-44.1144, 97.0172, -1.23404, 0.23", "-44.1285, 98.3481, -1.17179, 0.23", "-44.1098, 99.6791, -1.10101, 0.68", "-44.1973, 102.181, -0.93682, 0.23", "-44.2856, 103.336, -0.841229, 0.23", "-44.5457, 105.363, -0.651091, 0.45", "-44.7939, 106.869, -0.505337, 0.23", "-45.1832, 108.51, -0.331876, 0.91", "-45.9614, 111.007, -0.0522607, 0.68", "-46.4419, 112.129, 0.0739908, 0.68", "-47.4806, 114.387, 0.303146, 0.91", "-48.0832, 115.57, 0.405604, 0.23", "-48.7166, 116.733, 0.484946, 0.68", "-49.3193, 117.8, 0.504082, 0.68", "-50.2584, 119.398, 0.553519, 1.14", "-51.3716, 121.391, 0.699047, 0.23", "-52.0852, 122.788, 0.876098, 0.23", "-52.549, 123.77, 1.04122, 0.91", "-53.0147, 124.739, 1.22992, 0.91", "-53.9438, 126.529, 1.64689, 0.23", "-54.549, 127.675, 1.98521, 0.23", "-55.1533, 128.739, 2.39625, 0.23", "-55.66, 129.78, 2.87155, 0.91" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-37.747, 44.3382, 1.29002, 1.36", "-39.0851, 45.5878, 1.61866, 1.36", "-41.5808, 48.3159, 2.19239, 0.68", "-43.0895, 50.0109, 2.50486, 0.68", "-44.1851, 51.2962, 2.68514, 0.68", "-45.5559, 52.9745, 2.87153, 0.68", "-46.614, 54.3402, 2.992, 0.68", "-47.7166, 56.0083, 3.0636, 0.68", "-48.8376, 57.838, 3.09359, 0.91", "-49.6417, 59.205, 3.10565, 0.45", "-50.2183, 60.2316, 3.09331, 0.91", "-51.0355, 61.7471, 3.01668, 0.23", "-52.0338, 63.5879, 2.77696, 0.68", "-52.8588, 65.1607, 2.47502, 0.68", "-53.2493, 65.9089, 2.30245, 0.91", "-54.4655, 68.0258, 1.79968, 0.23", "-55.2684, 69.39, 1.42593, 1.14", "-56.4452, 71.3439, 0.791915, 0.23", "-57.3473, 72.8471, 0.215371, 0.68", "-58.3673, 74.5748, -0.535671, 0.23", "-59.1575, 75.7848, -1.03788, 0.68" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-13.7893, 70.1359, -7.99164, 0.23", "-12.5134, 71.5293, -8.65222, 0.23", "-11.927, 72.4502, -8.91561, 0.68", "-11.0139, 74.2023, -9.2506, 0.68", "-10.6388, 75.0834, -9.36674, 0.68", "-10.3405, 75.9111, -9.44883, 0.91", "-9.91049, 77.7122, -9.51693, 0.23", "-9.82389, 79.7624, -9.39947, 0.23", "-9.85121, 80.8433, -9.2797, 0.23", "-10.0022, 82.2671, -9.04862, 0.68", "-10.1314, 83.1038, -8.88924, 0.23", "-10.6656, 85.6002, -8.31357, 0.91", "-11.2236, 87.3575, -7.79053, 0.23", "-10.6538, 97.3139, -8.53004, 0.23", "-7.63572, 106.838, -8.10664, 0.23", "-5.808, 116.414, -5.87939, 0.23", "-3.13466, 126.037, -5.36244, 0.23", "-1.16347, 135.592, -3.17006, 0.23" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-13.7893, 70.1359, -7.99164, 0.23", "-14.6715, 71.5152, -7.52341, 0.23", "-15.3621, 72.7058, -7.12805, 0.23", "-15.7756, 73.4848, -6.99965, 0.45", "-16.3544, 74.7186, -7.02051, 0.45", "-16.8712, 76.0504, -7.15656, 0.45", "-17.3696, 77.5936, -7.38503, 0.23", "-17.6518, 78.627, -7.62668, 0.23", "-18.1886, 81.0518, -8.27828, 0.68", "-18.5479, 83.0733, -8.8423, 0.23", "-18.7038, 84.2688, -9.17249, 0.23", "-18.8502, 85.6608, -9.52967, 0.23", "-18.9944, 86.7704, -9.78423, 0.68", "-19.3115, 88.2132, -10.035, 0.23", "-19.8051, 89.7647, -10.1438, 0.23", "-20.3414, 91.1119, -10.161, 0.23", "-20.7233, 91.8748, -10.147, 0.23", "-21.1888, 92.6288, -10.111, 0.45", "-22.4591, 94.5342, -9.99944, 0.45", "-23.6301, 96.1512, -9.87907, 0.23", "-24.8148, 97.6121, -9.73794, 0.23", "-25.6739, 98.5631, -9.6201, 0.23", "-26.6253, 99.5784, -9.4601, 0.68" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-11.5445, 85.9447, -91.1022, 0.68", "-11.3303, 88.9807, -100.628, 0.68", "-11.7368, 91.6884, -110.246, 0.68", "-13.4352, 94.7888, -119.6, 0.68", "-14.9924, 97.2085, -129.177, 0.68", "-17.5838, 100.633, -138.208, 0.68", "-20.7565, 104.739, -146.756, 0.68", "-22.7501, 108.951, -155.604, 0.68", "-26.9355, 112.422, -163.997, 0.68", "-29.7152, 115.103, -173.221, 0.68" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-11.5445, 85.9447, -91.1022, 0.23", "-10.5933, 89.1664, -100.521, 0.68", "-10.3321, 93.399, -109.577, 0.68", "-10.6504, 98.2031, -118.342, 0.68" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-23.4382, -95.3762, 15.9214, 0.23", "-24.0331, -97.5028, 15.9698, 0.23", "-24.3575, -98.3355, 15.9859, 0.68", "-25.2563, -100.138, 16.0161, 0.23", "-25.7658, -100.872, 16.0593, 0.68", "-26.391, -101.746, 16.1263, 0.68", "-27.0131, -102.621, 16.199, 0.23", "-27.612, -103.347, 16.2632, 0.68", "-28.2368, -104.075, 16.336, 0.68", "-29.8822, -105.868, 16.5234, 0.23", "-30.9989, -107.165, 16.6536, 0.68", "-31.5776, -107.94, 16.6923, 0.23", "-32.815, -109.689, 16.7674, 0.23", "-34.0015, -111.489, 16.822, 0.68", "-34.9446, -113.032, 16.8333, 0.68", "-35.3811, -113.808, 16.8007, 0.68", "-36.6829, -115.76, 16.6983, 1.14" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-23.4382, -95.3762, 15.9214, 0.23", "-26.4623, -94.8776, 16.4379, 0.23", "-27.8561, -94.6797, 16.6058, 0.91", "-29.6566, -94.4889, 16.6711, 0.23", "-31.8698, -94.3669, 16.6201, 0.23", "-33.0396, -94.3794, 16.5388, 0.91", "-34.5063, -94.486, 16.3975, 0.23", "-36.3329, -94.8494, 16.0892, 1.82", "-39.0852, -95.7188, 15.4912, 0.68", "-40.8692, -96.4855, 15.0233, 1.14", "-42.4389, -97.3095, 14.5829, 0.23", "-43.6274, -98.0167, 14.2516, 0.68", "-45.1647, -99.1189, 13.8424, 0.23", "-46.2131, -100.152, 13.6002, 0.23", "-46.9599, -101.173, 13.4697, 1.14", "-47.2965, -101.761, 13.4058, 1.14", "-47.9003, -102.875, 13.2908, 0.23", "-48.4949, -104.05, 13.1333, 0.91", "-49.9942, -107.131, 12.6325, 0.23", "-50.6063, -108.415, 12.4077, 0.68", "-51.6066, -110.329, 12.0273, 0.23", "-52.5425, -111.844, 11.6619, 1.14", "-54.1272, -113.947, 11.0631, 0.23", "-54.8231, -114.623, 10.8246, 0.23", "-55.7603, -115.274, 10.5498, 0.91", "-57.0673, -116.011, 10.2043, 0.91", "-59.1932, -117.014, 9.71469, 0.45", "-60.3437, -117.497, 9.46896, 0.91", "-62.4989, -118.258, 9.07987, 0.23", "-64.2275, -118.867, 8.82657, 0.45", "-65.2207, -119.218, 8.73216, 0.23", "-65.8633, -119.437, 8.73325, 0.23", "-67.185, -119.848, 8.872, 0.68", "-67.8982, -120.038, 8.98283, 0.23", "-69.5039, -120.44, 9.3186, 0.91", "-71.3752, -120.887, 9.73588, 0.23", "-73.2456, -121.481, 10.1323, 0.68", "-75.5678, -122.362, 10.5289, 0.23", "-77.3852, -123.19, 10.7643, 0.23", "-78.6772, -123.865, 10.8761, 0.23", "-80.2527, -124.827, 10.9288, 0.45", "-83.8612, -127.464, 10.8507, 0.23", "-84.9438, -128.384, 10.7778, 0.68", "-86.3433, -129.777, 10.6654, 0.23", "-86.8323, -130.326, 10.6113, 0.23", "-87.5228, -131.165, 10.5032, 0.23", "-88.4422, -132.32, 10.3515, 0.23", "-89.7105, -133.854, 10.1506, 0.45", "-91.1244, -135.527, 9.98005, 0.23", "-92.7918, -137.506, 9.74, 0.68", "-93.4278, -138.287, 9.63389, 0.23" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "30.0147, -105.361, 70.8086, 0.23", "29.7182, -106.813, 72.4684, 0.23", "29.7653, -107.628, 73.2609, 0.68", "30.0664, -108.831, 74.052, 0.23", "30.4453, -109.825, 74.6185, 0.23", "30.8011, -110.701, 75.0461, 0.23", "31.1467, -111.637, 75.4613, 0.23", "31.8025, -113.192, 76.0798, 0.68", "33.1766, -116.24, 77.2224, 0.23", "34.1105, -118.296, 77.9068, 0.23", "34.8971, -120.058, 78.4278, 0.91", "35.9227, -122.618, 79.1263, 0.23" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "30.0147, -105.361, 70.8086, 0.23", "30.4762, -106.797, 70.9977, 0.23", "30.9942, -108.41, 71.2098, 0.23", "31.3718, -109.585, 71.3644, 0.23", "31.5745, -110.215, 71.4473, 0.91", "32.0976, -111.844, 71.6616, 0.23", "32.8067, -114.051, 71.9519, 0.91" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "13.4633, -117.867, -7.89853, 1.14", "13.5429, -119.714, -7.88521, 1.14", "13.5744, -121.298, -7.86812, 1.59", "13.5647, -125.385, -7.76478, 0.91", "13.5255, -128.531, -7.78296, 0.91", "13.5525, -132.901, -7.93126, 0.91", "13.6091, -134.912, -8.03266, 0.91", "13.682, -137.106, -8.16995, 0.45", "13.7421, -138.356, -8.27082, 0.91", "14.0441, -141.437, -8.58837, 0.68", "14.4194, -144.008, -8.9427, 0.68", "14.6024, -145.074, -9.08963, 0.91", "14.919, -147.086, -9.34352, 0.45", "15.0999, -148.303, -9.49779, 0.45", "15.3879, -150.279, -9.75135, 0.68", "15.9009, -154.045, -10.1369, 0.91", "16.1891, -156.345, -10.382, 0.91", "16.4438, -158.547, -10.6212, 0.91", "16.626, -159.96, -10.7648, 0.91", "16.9208, -161.971, -10.9504, 0.91", "17.3028, -164.262, -11.139, 0.91", "17.7244, -166.514, -11.2837, 0.91", "18.4187, -170.337, -11.4387, 0.91", "18.7147, -172.038, -11.4586, 0.91", "18.9262, -173.601, -11.4629, 1.36", "19.0185, -174.561, -11.4695, 0.68", "19.2419, -176.944, -11.5792, 0.68", "19.4519, -178.979, -11.7412, 0.68", "19.6945, -180.962, -11.9835, 0.68", "19.9438, -182.975, -12.2194, 1.14", "20.3246, -185.794, -12.5528, 0.45", "20.725, -188.63, -12.8896, 0.68", "20.8844, -189.747, -13.0346, 0.68", "21.0727, -191.014, -13.2003, 0.68", "21.5271, -194.175, -13.5871, 0.68", "21.8454, -196.309, -13.7847, 0.23", "21.9752, -197.467, -13.8742, 0.23", "22.0635, -199.369, -13.9146, 0.45", "23.401, -209.279, -13.8809, 0.45" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "13.4633, -117.867, -7.89853, 0.45", "16.0005, -118.244, -7.15481, 0.45", "17.7024, -118.609, -6.62702, 0.45", "19.5243, -119.142, -6.02463, 0.23", "21.1591, -119.707, -5.46956, 0.23", "22.1796, -120.076, -5.13124, 0.23", "22.9653, -120.343, -4.87698, 0.23", "24.1731, -120.75, -4.47765, 0.23", "25.3969, -121.066, -4.06597, 0.23", "26.0836, -121.245, -3.83423, 0.23", "27.1245, -121.498, -3.48625, 0.23", "28.274, -121.688, -3.15212, 0.23", "29.6834, -121.773, -2.75589, 0.23", "32.1725, -121.701, -2.06961, 0.23", "41.2652, -122.638, 1.98544, 0.23", "49.442, -121.94, 7.69971, 0.23", "58.1149, -120.746, 12.5325, 0.23", "66.4677, -120.489, 18.0247, 0.23", "75.0839, -120.423, 23.0999, 0.23", "83.5892, -120.12, 28.3504, 0.23", "92.225, -118.014, 32.9317, 0.23", "99.8622, -115.226, 38.754, 0.23", "108.12, -112.031, 43.4029, 0.23", "116.825, -109.321, 47.5111, 0.23", "126.26, -107.592, 50.3365, 0.23" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "16.1332, -60.1164, -11.7956, 0.23", "14.1265, -60.1874, -12.2136, 0.23", "12.5158, -60.0165, -12.5038, 0.23", "10.1904, -59.4892, -12.9094, 0.23", "8.81116, -59.0274, -13.1681, 0.23", "8.03125, -58.6932, -13.3292, 0.23", "7.26398, -58.2916, -13.5214, 0.23", "5.6854, -57.218, -13.9401, 0.23", "4.31266, -56.0596, -14.3262, 0.23", "3.49571, -55.1994, -14.5745, 0.23", "2.90973, -54.5351, -14.7887, 0.23", "1.88323, -53.4132, -15.2045, 0.68", "-7.23761, -49.5619, -16.6109, 0.68", "-15.9439, -44.6601, -16.1942, 0.68", "-24.192, -39.0603, -15.4133, 0.68" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "16.1332, -60.1164, -11.7956, 0.91", "16.8542, -61.0376, -11.8788, 0.91", "17.2647, -61.6454, -11.947, 0.91", "18.4887, -63.677, -12.1837, 1.14", "18.8482, -64.2995, -12.2559, 0.23", "19.424, -65.2282, -12.3628, 0.68", "20.5754, -67.0854, -12.5767, 0.23", "21.0424, -67.9265, -12.6808, 0.23", "21.4403, -68.6741, -12.7852, 0.23", "21.7707, -69.3157, -12.8952, 0.23", "22.3612, -70.5559, -13.1138, 0.23", "26.0635, -79.8367, -12.7143, 0.23", "30.8662, -88.5959, -13.1735, 0.23", "36.5448, -96.6072, -15.0635, 0.23", "42.9625, -104.175, -16.3004, 0.23", "48.4779, -112.049, -19.0554, 0.23", "53.4676, -120.658, -20.0439, 0.23" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "98.373, -21.9002, -2.57383, 1.14", "99.7944, -22.5491, -2.83734, 1.14", "100.847, -23.0373, -3.0051, 0.23", "101.851, -23.5486, -3.14777, 0.68", "103.469, -24.5344, -3.35905, 0.23", "104.414, -25.248, -3.47335, 0.23", "105.368, -26.0379, -3.57983, 0.91", "106.554, -27.1212, -3.69061, 0.23", "107.39, -28.0135, -3.78316, 0.23", "108.481, -29.3328, -3.90994, 0.23", "109.621, -30.9701, -4.05836, 0.23", "110.02, -31.5872, -4.11994, 0.23", "110.927, -32.9757, -4.285, 0.23", "112.31, -34.9377, -4.5879, 0.23", "113.236, -36.0943, -4.78174, 0.23", "114.229, -37.1285, -4.91954, 0.91", "115.535, -38.3504, -5.02309, 0.23", "116.53, -39.275, -5.08201, 0.23", "117.831, -40.4215, -5.10554, 0.23", "118.968, -41.2619, -5.07933, 0.23", "120.99, -42.5511, -4.97702, 0.23", "122.373, -43.3134, -4.8486, 0.23", "130.143, -49.587, -4.33817, 0.23" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "98.373, -21.9002, -2.57383, 0.23", "100.547, -20.7873, -2.21161, 0.23", "102.368, -19.9448, -1.79243, 0.23", "103.385, -19.5255, -1.5418, 0.45", "104.448, -19.0998, -1.24973, 0.23", "106.315, -18.3173, -0.673697, 0.68", "107.371, -17.8567, -0.29641, 0.23", "109.191, -17.1448, 0.54438, 0.23", "110.499, -16.6325, 1.27865, 0.23", "111.663, -16.1391, 2.0064, 0.68", "112.756, -15.6291, 2.75791, 1.14", "114.665, -14.6949, 4.09239, 0.23", "116.296, -13.7743, 5.22864, 0.23", "117.092, -13.2268, 5.71927, 0.23", "118.186, -12.404, 6.34494, 0.23", "118.943, -11.8391, 6.67512, 0.23", "120.012, -11.0484, 7.00963, 0.68", "121.891, -9.59179, 7.46213, 0.23", "123.133, -8.6068, 7.70006, 1.14", "124.229, -7.85455, 7.88455, 0.23", "126.151, -6.55928, 8.21537, 0.23", "127.349, -5.70606, 8.41614, 0.23", "128.372, -4.93972, 8.60026, 0.23", "130.255, -3.59287, 8.97198, 0.91", "132.344, -2.19076, 9.46292, 0.23", "134.147, -1.06646, 9.92201, 0.23", "135.906, 0.0288895, 10.4098, 0.23", "137.692, 1.07164, 10.9529, 0.91", "140.336, 2.41883, 11.8236, 0.23", "142.452, 3.31773, 12.678, 0.23", "143.407, 3.61973, 13.1291, 0.23", "145.046, 3.8424, 13.9291, 0.23", "146.551, 3.85527, 14.7235, 0.23", "147.992, 3.7669, 15.5321, 0.68", "149.645, 3.5856, 16.4595, 0.23", "151.085, 3.45545, 17.2309, 0.91", "152.685, 3.41602, 18.0607, 0.23", "154.64, 3.46803, 18.9964, 1.14", "156.171, 3.69962, 19.6312, 0.23", "157.208, 3.99049, 19.997, 0.23", "158.613, 4.52677, 20.4723, 0.68", "160.029, 5.18235, 20.9949, 0.23", "160.941, 5.61534, 21.3465, 0.68", "162.369, 6.26363, 21.9083, 1.14", "163.65, 6.79622, 22.3962, 0.23", "165.225, 7.38696, 23.034, 1.36", "166.19, 7.67964, 23.4333, 1.36", "168.236, 8.27846, 24.2755, 0.23", "169.551, 8.63072, 24.8359, 0.68", "170.568, 8.88981, 25.2754, 0.23", "171.557, 9.10739, 25.6947, 0.91", "173.608, 9.52491, 26.4091, 1.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-153.822, 33.4438, 53.4105, 0.45", "-155.708, 33.0269, 54.3062, 0.45", "-158.041, 32.4617, 55.4862, 0.45", "-159.58, 32.078, 56.2615, 0.45", "-160.391, 31.8747, 56.7197, 0.91", "-162.027, 31.4807, 57.7562, 0.23", "-163.244, 31.2371, 58.5541, 0.68", "-165.178, 30.9796, 59.9841, 0.23", "-165.698, 30.984, 60.4227, 0.91", "-167.287, 31.4042, 61.9381, 0.23", "-168.146, 31.9202, 62.8454, 0.23", "-168.939, 32.7181, 63.7738, 0.23", "-169.66, 33.7063, 64.6709, 0.68", "-170.638, 35.4422, 65.9177, 0.23", "-171.734, 37.662, 67.4084, 0.23", "-172.127, 38.6023, 67.957, 0.23", "-172.376, 39.3458, 68.372, 0.23", "-172.661, 40.3981, 68.9891, 0.23", "-172.966, 41.8239, 69.8016, 1.14", "-173.201, 43.6269, 70.7315, 0.23", "-173.178, 44.7247, 71.2718, 0.23", "-173.095, 45.972, 71.9108, 0.68", "-173.045, 47.2567, 72.6569, 0.23", "-172.963, 48.3033, 73.2938, 0.91", "-172.86, 49.2273, 73.8827, 0.23", "-172.816, 50.2998, 74.638, 0.23", "-172.905, 51.3361, 75.506, 1.14", "-173.506, 53.205, 77.2599, 0.23", "-173.766, 53.698, 77.7515, 0.23", "-174.432, 54.4847, 78.6474, 0.68", "-175.649, 55.548, 79.9125, 0.23", "-176.235, 56.0037, 80.4286, 1.14", "-178.149, 57.4223, 81.8972, 0.23", "-178.94, 57.9802, 82.4166, 0.68", "-181.159, 59.4949, 83.6888, 0.23", "-182.133, 60.1396, 84.1685, 0.68", "-183.383, 60.9618, 84.7181, 0.23", "-184.169, 61.4229, 85.0692, 0.23", "-184.928, 61.8247, 85.3809, 0.23", "-186.481, 62.5768, 85.9612, 0.68", "-187.101, 62.8383, 86.1154, 0.23", "-188.269, 63.2147, 86.419, 1.14", "-190.602, 63.5688, 86.9795, 0.23" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-153.822, 33.4438, 53.4105, 0.23", "-154.935, 35.5238, 53.8004, 0.23", "-156.012, 37.5157, 54.2307, 0.23", "-156.76, 38.8946, 54.532, 1.14", "-157.335, 40.0637, 54.776, 0.23", "-158.338, 42.3123, 55.2169, 1.14", "-158.992, 43.9463, 55.5328, 0.23", "-159.334, 45.0273, 55.7659, 0.23", "-159.647, 46.4505, 56.0736, 1.14", "-159.875, 48.2547, 56.4251, 0.23", "-159.944, 49.3937, 56.6352, 0.23", "-159.964, 50.8927, 56.9115, 1.14", "-159.955, 52.7467, 57.217, 0.23", "-159.903, 53.8737, 57.4273, 0.23", "-159.842, 54.7083, 57.5936, 0.23", "-159.725, 56.1641, 57.8738, 1.14", "-159.546, 57.8151, 58.1527, 0.23", "-159.397, 59.3954, 58.4032, 0.23", "-159.317, 60.3387, 58.5449, 1.14", "-159.191, 61.4573, 58.768, 0.23", "-158.907, 62.9716, 59.1043, 0.68", "-158.594, 64.4831, 59.4972, 0.23", "-158.341, 65.7881, 59.8623, 1.14", "-158.183, 66.706, 60.1483, 0.23", "-157.865, 68.3453, 60.741, 0.23", "-157.401, 70.2944, 61.5077, 1.36", "-156.983, 71.826, 62.1572, 0.23", "-156.7, 72.8055, 62.5717, 0.23", "-156.165, 74.6897, 63.3307, 1.14", "-155.852, 75.7141, 63.756, 0.23", "-155.452, 77.0461, 64.2728, 1.14", "-154.883, 78.9956, 65.0627, 0.23", "-154.607, 79.7709, 65.366, 1.14", "-153.908, 81.653, 66.0765, 0.23", "-153.35, 83.0826, 66.6111, 1.14", "-152.752, 84.6074, 67.1247, 0.23", "-152.101, 86.2083, 67.7083, 0.68", "-151.58, 87.516, 68.1781, 0.23", "-151.071, 88.9175, 68.7283, 0.91", "-150.788, 89.9228, 69.1241, 0.23", "-150.475, 91.5465, 69.748, 1.14", "-150.214, 93.4542, 70.5368, 0.23", "-150.214, 94.2365, 70.8775, 0.91", "-150.407, 95.7815, 71.6383, 0.23", "-150.643, 97.0517, 72.293, 0.68", "-150.769, 97.6958, 72.6112, 0.23", "-150.956, 98.6051, 73.0992, 1.36", "-151.34, 100.376, 74.0782, 0.23", "-151.682, 101.848, 74.9234, 0.91", "-152.05, 102.951, 75.5601, 0.23", "-152.516, 103.93, 76.1708, 1.14", "-153.401, 105.455, 77.1142, 0.23", "-154.128, 106.608, 77.7931, 0.23", "-154.707, 107.421, 78.2504, 0.23", "-156.299, 109.173, 79.2321, 0.91", "-157.647, 110.442, 80.0198, 0.23", "-158.237, 111.002, 80.3878, 1.14", "-159.514, 112.181, 81.148, 0.23", "-160.158, 112.754, 81.5669, 0.23", "-161.46, 113.899, 82.4778, 1.14", "-162.729, 114.864, 83.4126, 0.23", "-164.534, 115.92, 84.668, 0.23", "-166.718, 116.89, 86.2439, 1.14", "-167.868, 117.271, 87.0891, 1.14", "-169.097, 117.636, 88.0707, 1.14", "-171.316, 118.199, 89.8152, 0.23", "-172.934, 118.497, 90.9759, 0.91", "-174.685, 118.748, 92.1754, 0.68", "-175.335, 118.832, 92.7379, 0.68", "-176.872, 118.976, 94.1895, 0.68" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-167.285, 71.3944, 93.8574, 0.23", "-168.534, 71.4565, 94.4446, 0.23", "-169.338, 71.4971, 94.9199, 0.91", "-171.32, 71.4594, 96.2883, 0.23", "-172.803, 71.4312, 97.3124, 0.91", "-174.235, 71.404, 98.3009, 1.36", "-176.212, 71.3664, 99.6661, 0.23", "-177.587, 71.298, 100.762, 0.68", "-178.808, 71.1969, 101.879, 0.68" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-167.285, 71.3944, 93.8574, 0.68", "-168.485, 71.8881, 95.1549, 0.68", "-170.332, 72.3859, 97.048, 0.23", "-171.735, 72.6522, 98.4069, 0.68", "-172.9, 72.7732, 99.3755, 0.68", "-174.181, 72.8165, 100.345, 0.91", "-175.683, 72.8053, 101.342, 0.23", "-176.956, 72.6989, 102.046, 0.23", "-178.244, 72.5362, 102.572, 0.23", "-180.642, 72.309, 103.276, 0.91", "-182.501, 72.1637, 103.743, 0.23", "-184.734, 72.0502, 104.251, 0.23", "-186.609, 71.9674, 104.586, 0.23", "-188.889, 71.8742, 104.899, 0.23", "-191.413, 71.8083, 105.15, 0.45" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-72.609, 21.1678, 10.6301, 0.23", "-74.3586, 21.9523, 10.9138, 0.23", "-76.0538, 22.7766, 11.2481, 0.68", "-78.4626, 23.9669, 11.8247, 0.23", "-81.0821, 25.2625, 12.5672, 0.68", "-82.113, 25.7937, 12.88, 0.23", "-83.3296, 26.4285, 13.2533, 0.91", "-84.4682, 27.0207, 13.6516, 0.91", "-85.868, 27.8005, 14.2327, 0.91", "-87.3503, 28.6834, 14.8987, 0.91", "-88.3407, 29.2723, 15.303, 0.68", "-89.3916, 29.8922, 15.7043, 0.68", "-89.8251, 30.1422, 15.8757, 0.68" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-72.609, 21.1678, 10.6301, 0.23", "-73.3585, 19.8956, 10.2161, 0.23", "-74.3903, 18.3857, 9.76009, 0.68", "-75.7483, 16.4119, 9.1964, 0.23", "-76.3429, 15.5517, 8.9444, 0.23", "-76.9801, 14.6539, 8.66246, 0.23", "-77.6709, 13.7746, 8.37386, 0.91", "-79.2562, 11.9666, 7.73095, 0.45", "-80.6026, 10.5939, 7.17745, 0.45", "-81.8474, 9.45928, 6.66705, 1.59", "-83.1091, 8.30826, 6.13759, 0.45", "-84.4541, 7.07856, 5.57776, 0.91", "-85.1944, 6.46197, 5.26161, 0.23", "-86.2092, 5.74064, 4.78701, 0.23", "-87.5271, 5.03994, 4.22088, 1.14" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-68.4898, 0.322746, 19.6664, 0.23", "-68.1461, -1.6579, 19.5141, 0.23", "-67.9309, -2.77235, 19.4364, 0.23", "-67.5218, -4.5029, 19.3293, 0.23", "-67.1767, -5.61129, 19.3081, 0.23", "-66.5283, -7.25349, 19.3154, 0.68", "-65.7157, -9.01438, 19.3697, 0.23", "-65.4551, -9.5202, 19.3968, 0.23", "-64.3897, -11.3449, 19.5436, 0.91", "-63.0649, -13.2687, 19.7883, 0.23", "-62.054, -14.5057, 19.9885, 0.68", "-61.3227, -15.2342, 20.1465, 0.23" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-68.4898, 0.322746, 19.6664, 0.23", "-69.2451, -1.28147, 20.0226, 0.23", "-69.6055, -2.07786, 20.2163, 0.45", "-70.425, -4.0667, 20.674, 0.23", "-71.3495, -6.43537, 21.1897, 0.68", "-72.2347, -8.64551, 21.6755, 0.23", "-72.7364, -9.84995, 21.9318, 0.68", "-73.7075, -12.1886, 22.4846, 0.23", "-74.3945, -13.7372, 22.8683, 0.23", "-74.8426, -14.5504, 23.0924, 0.91", "-76.1574, -16.5114, 23.6995, 0.23", "-77.3611, -17.9581, 24.2791, 0.68", "-78.4389, -19.0241, 24.7722, 0.23", "-79.2338, -19.6508, 25.1155, 0.91", "-81.7019, -21.3303, 26.2349, 0.23", "-82.8102, -22.0026, 26.739, 1.14", "-84.6953, -23.092, 27.5814, 0.23", "-85.434, -23.5244, 27.9022, 0.23", "-86.5294, -24.1813, 28.3122, 1.14", "-88.0961, -25.1326, 28.8373, 0.23", "-89.0375, -25.6854, 29.1207, 0.91", "-90.3932, -26.4125, 29.4795, 0.23", "-91.3754, -26.8576, 29.6783, 0.68", "-93.2664, -27.5538, 30.0091, 0.23", "-94.7691, -28.0079, 30.2146, 0.68", "-96.3918, -28.4684, 30.4857, 0.23", "-97.7806, -28.8724, 30.7785, 0.91", "-99.882, -29.5279, 31.4027, 0.23", "-101.161, -30.0198, 31.9032, 1.14", "-102.292, -30.6983, 32.5842, 0.23", "-103.862, -32.3956, 34.1078, 0.23", "-104.362, -33.424, 34.9155, 0.91", "-104.601, -35.0596, 36.236, 0.91", "-104.601, -35.9231, 36.886, 0.91", "-104.517, -37.5891, 38.0632, 0.23", "-104.424, -38.7967, 38.8679, 0.23", "-104.398, -39.4267, 39.2348, 0.68", "-104.43, -41.5816, 40.4421, 0.23", "-104.675, -43.1485, 41.2382, 0.68", "-104.954, -44.0687, 41.6695, 0.23", "-105.313, -44.8781, 42.0355, 0.68", "-106.49, -47.0258, 42.9948, 0.23", "-107.37, -48.2851, 43.5464, 1.14", "-108.431, -49.5047, 44.0508, 0.23", "-109.995, -51.0652, 44.746, 0.91", "-111.22, -52.0961, 45.2191, 0.23", "-112.477, -53.0062, 45.6405, 0.68", "-114.612, -54.4003, 46.2281, 0.23", "-115.356, -54.8889, 46.3899, 0.68", "-116.254, -55.5159, 46.5164, 0.23", "-117.181, -56.2321, 46.5515, 0.23", "-118.232, -57.1826, 46.4335, 0.91", "-119.808, -58.8998, 46.0216, 0.23", "-120.603, -59.9561, 45.6446, 0.68", "-122.032, -61.9876, 44.7522, 0.23", "-122.72, -62.9311, 44.2806, 0.23", "-123.304, -63.6551, 43.8634, 0.91", "-124.076, -64.4569, 43.3278, 0.23", "-125.124, -65.4424, 42.5989, 1.14", "-126.804, -66.8636, 41.5548, 0.23", "-128.338, -67.9489, 40.7052, 0.68", "-130.121, -68.9997, 39.8368, 0.23", "-130.911, -69.3965, 39.4946, 0.91" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-55.66, 129.78, 2.87155, 0.23", "-53.9281, 130.904, 3.91877, 0.23", "-53.2911, 131.318, 4.30397, 0.23", "-52.259, 131.988, 4.92805, 0.23", "-50.9945, 132.809, 5.6926, 0.23", "-50.3194, 133.247, 6.10085, 0.91" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-55.66, 129.78, 2.87155, 0.91", "-56.9367, 130.848, 3.30739, 0.91", "-58.3843, 132.059, 3.80156, 0.91", "-59.2587, 132.79, 4.10005, 0.91", "-60.4026, 133.747, 4.49055, 0.91", "-61.6067, 134.754, 4.9016, 1.36", "-63.1785, 136.068, 5.43818, 0.23" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-59.1575, 75.7848, -1.03788, 0.91", "-60.4127, 76.2019, -0.676474, 0.91", "-61.7045, 76.6585, -0.312051, 0.91", "-63.8765, 77.3946, 0.263831, 0.23", "-65.7811, 77.9548, 0.713972, 0.23", "-67.0775, 78.2436, 0.97523, 0.91", "-68.3772, 78.4749, 1.20868, 0.23", "-69.3044, 78.5928, 1.36482, 0.68", "-70.4295, 78.6576, 1.52113, 0.23", "-72.2489, 78.7066, 1.69345, 0.91", "-74.5279, 78.6745, 1.7748, 0.23", "-75.2083, 78.6638, 1.75991, 0.91", "-76.4077, 78.6681, 1.69743, 0.23", "-78.2964, 78.73, 1.55191, 0.23", "-80.0626, 78.8449, 1.37529, 1.14", "-82.1316, 79.0368, 1.12284, 0.23", "-83.4725, 79.1777, 0.93719, 0.23", "-85.0612, 79.3198, 0.71813, 0.68", "-86.0102, 79.4105, 0.590499, 0.23", "-86.8981, 79.5254, 0.463876, 0.68", "-87.9971, 79.7216, 0.315906, 0.23", "-89.1037, 80.0015, 0.197105, 0.91", "-91.1242, 80.6227, -0.0673903, 0.23", "-92.6209, 81.1462, -0.326018, 0.23", "-94.1718, 81.709, -0.586794, 0.23", "-95.1919, 82.0392, -0.744938, 0.68", "-96.8044, 82.4654, -1.03723, 0.91", "-99.0907, 82.9887, -1.47783, 0.23", "-100.185, 83.2076, -1.69827, 0.23", "-102.07, 83.5595, -2.1284, 1.14", "-104.065, 83.8734, -2.58763, 0.23", "-106.16, 84.1583, -3.10104, 0.23", "-107.908, 84.347, -3.57324, 0.23", "-109.348, 84.5053, -3.96528, 0.68", "-111.65, 84.8424, -4.69684, 0.23", "-113.129, 85.1358, -5.27149, 0.23", "-114.091, 85.3812, -5.66958, 0.23", "-115.271, 85.6566, -6.10017, 0.23", "-124.981, 87.8898, -6.95853, 0.23" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-59.1575, 75.7848, -1.03788, 0.23", "-59.4664, 77.5234, -0.62832, 0.23", "-59.7449, 79.2325, -0.303797, 0.23", "-59.9881, 81.25, 0.0057897, 0.23", "-60.1938, 82.7253, 0.199362, 0.23", "-60.5277, 84.8835, 0.400815, 0.68", "-60.968, 87.7112, 0.514784, 0.23", "-61.205, 89.1333, 0.476332, 0.91", "-61.5929, 91.2821, 0.20892, 0.23", "-61.9481, 93.0418, -0.134906, 0.23", "-62.2213, 94.1682, -0.442329, 0.68", "-62.7243, 96.0964, -1.09267, 0.23", "-62.9534, 97.2514, -1.57379, 0.68", "-63.134, 99.0618, -2.42094, 1.14", "-63.1737, 100.41, -3.07428, 0.23", "-63.0837, 101.662, -3.64273, 0.23", "-62.9121, 102.986, -4.15271, 0.23", "-62.6263, 104.579, -4.67296, 0.23", "-62.2397, 106.537, -5.22078, 0.23", "-62.0595, 107.656, -5.4639, 0.23", "-61.9486, 108.612, -5.61606, 0.68", "-61.8532, 110.11, -5.7205, 0.23", "-61.8033, 111.601, -5.73164, 0.23", "-61.746, 113.327, -5.6079, 0.91", "-61.6523, 115.039, -5.35628, 0.23", "-61.5455, 116.48, -5.09751, 0.68", "-61.4151, 118.327, -4.70757, 0.23", "-61.3253, 119.516, -4.41342, 0.68", "-61.1792, 121.365, -3.91319, 0.23", "-61.0826, 122.492, -3.6004, 1.14", "-60.9311, 124.722, -3.03209, 0.23", "-60.869, 126.175, -2.68425, 0.23", "-60.8633, 127.145, -2.47294, 0.91", "-60.8878, 128.277, -2.23542, 0.23", "-60.9674, 129.695, -1.99205, 0.91", "-61.1224, 131.688, -1.74943, 0.23" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-26.6253, 99.5784, -9.4601, 0.23", "-26.5141, 101.251, -9.27972, 0.23", "-26.5791, 103.245, -9.09192, 0.23", "-26.757, 104.331, -8.98471, 0.23", "-27.1018, 105.863, -8.84004, 0.23", "-27.4303, 107.035, -8.69352, 0.23", "-27.9671, 108.66, -8.46726, 0.23", "-28.7536, 110.404, -8.21055, 0.23", "-30.3335, 113.35, -7.68385, 0.23", "-31.2035, 114.813, -7.37906, 2.05", "-32.3048, 116.525, -6.97726, 0.23", "-32.9998, 117.532, -6.71879, 0.23", "-33.912, 118.765, -6.3274, 0.23", "-35.1857, 120.403, -5.71895, 0.23", "-35.9865, 121.265, -5.31573, 0.23", "-36.6694, 121.861, -4.9604, 1.14", "-37.3559, 122.351, -4.6333, 1.14", "-39.0772, 123.41, -3.85981, 0.23", "-39.8029, 123.815, -3.53706, 0.23", "-41.3616, 124.458, -2.9158, 0.23", "-42.5983, 124.876, -2.44739, 0.23", "-44.3606, 125.4, -1.78397, 0.23", "-45.6937, 125.771, -1.29803, 0.91" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-26.6253, 99.5784, -9.4601, 0.23", "-27.5458, 100.707, -9.25949, 0.23", "-28.5407, 101.954, -9.04855, 0.91", "-29.6663, 103.365, -8.80991, 0.23", "-30.3527, 104.225, -8.66438, 0.23", "-31.5888, 105.774, -8.4023, 0.23", "-33.481, 108.145, -8.00113, 0.23", "-34.0874, 109.048, -7.8508, 1.59" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-29.7152, 115.103, -173.221, 0.68", "-30.1116, 112.941, -182.976, 0.68" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-29.7152, 115.103, -173.221, 0.23", "-32.5932, 121.932, -179.935, 0.68" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-10.6504, 98.2031, -118.342, 0.68", "-14.3708, 99.8908, -127.47, 0.68", "-19.5131, 103.065, -135.437, 0.68", "-24.7331, 108.085, -142.333, 0.68", "-29.1479, 113.464, -149.514, 0.68", "-34.5455, 117.837, -156.708, 0.68", "-38.6397, 120.778, -165.344, 0.68", "-42.9883, 124.931, -173.334, 0.68", "-48.4988, 129.191, -180.51, 0.68" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-10.6504, 98.2031, -118.342, 0.23", "-8.46872, 103.139, -126.761, 0.68" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "23.401, -209.279, -13.8809, 0.68", "24.3604, -219.174, -14.9672, 0.68" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "23.401, -209.279, -13.8809, 0.23", "24.6601, -219.199, -13.8483, 0.68" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "126.26, -107.592, 50.3365, 0.68", "134.359, -106.939, 56.1664, 0.68", "142.199, -104.098, 61.6859, 0.68", "149.899, -103.154, 67.9956, 0.68", "158.991, -104.112, 72.0469, 0.68", "168.377, -106.373, 74.6542, 0.68", "178.198, -107.069, 76.404, 0.68" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "126.26, -107.592, 50.3365, 0.23", "135.595, -106.673, 53.804, 0.68", "144.413, -107.475, 58.4499, 0.68", "153.301, -108.398, 62.9394, 0.68", "162.195, -108.303, 67.5107, 0.68", "171.7, -107.11, 70.38, 0.68", "181.615, -107.635, 71.5652, 0.68", "191.476, -106.894, 73.0546, 0.68" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "173.608, 9.52491, 26.4091, 0.68", "174.492, 10.9254, 26.8029, 0.68", "175.393, 12.8774, 26.7829, 0.23", "175.792, 14.1279, 26.4227, 0.91", "176.236, 16.0797, 25.6001, 0.23", "176.437, 17.3288, 24.9816, 0.68", "176.759, 18.9976, 24.0299, 0.23", "177.123, 20.8367, 22.5948, 0.68", "177.38, 21.9682, 21.5546, 0.45", "177.543, 22.5583, 20.9602, 0.91", "178.026, 23.5442, 19.7999, 0.23", "178.876, 24.6484, 18.4758, 0.45", "180.012, 25.8349, 17.0829, 0.23", "180.426, 26.2546, 16.6608, 0.45", "181.199, 27.1143, 15.959, 0.91", "182.363, 28.6837, 14.9314, 0.23", "183.19, 29.882, 14.2301, 0.23", "183.642, 30.7937, 13.836, 1.14", "184.328, 32.83, 13.2526, 0.23", "184.718, 34.6757, 12.9557, 0.23", "184.753, 36.0955, 13.0284, 0.91" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "173.608, 9.52491, 26.4091, 0.23", "175.223, 8.78425, 27.5994, 0.23", "176.333, 8.2753, 28.4173, 0.23", "177.286, 7.83805, 29.1199, 0.68", "178.942, 7.07862, 30.3404, 0.23", "179.884, 6.64635, 31.035, 0.91" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-89.8251, 30.1422, 15.8757, 0.23", "-90.8017, 30.7016, 15.5418, 0.23", "-91.6456, 31.2586, 15.273, 0.23", "-93.8321, 32.709, 14.6013, 0.91", "-95.2622, 33.6183, 14.1454, 0.23", "-97.1888, 34.7652, 13.497, 0.68", "-98.9234, 35.7668, 12.87, 0.23", "-100.387, 36.6041, 12.3031, 0.91", "-100.888, 36.898, 12.1048, 0.91", "-102.304, 37.7166, 11.6217, 0.23", "-103.435, 38.3537, 11.2348, 0.68", "-104.579, 38.8674, 10.8454, 0.23", "-105.902, 39.3771, 10.4316, 0.68", "-107.541, 40.095, 9.9268, 0.23", "-108.649, 40.6231, 9.58281, 0.68", "-109.785, 41.1394, 9.23279, 0.23", "-111.703, 41.9109, 8.65175, 0.23", "-113.191, 42.4412, 8.22319, 0.91", "-115.697, 43.2775, 7.50586, 0.23", "-116.346, 43.4593, 7.33404, 0.23", "-118.65, 44.0259, 6.84459, 0.68", "-119.962, 44.3408, 6.66788, 0.23", "-121.093, 44.6707, 6.59829, 0.68", "-122.143, 44.9898, 6.61515, 0.23", "-123.445, 45.3953, 6.7593, 0.91", "-125.056, 46.0056, 7.0316, 0.23", "-127.26, 47.0672, 7.51393, 1.36", "-128.829, 47.9607, 7.87219, 0.23", "-129.634, 48.4658, 8.06063, 0.68", "-131.096, 49.4634, 8.40203, 0.23", "-132.261, 50.3067, 8.68614, 0.23", "-133.187, 50.9488, 8.90372, 1.14", "-134.16, 51.5369, 9.13075, 1.14", "-135.458, 52.2243, 9.39531, 0.23", "-137.356, 53.1983, 9.64989, 0.91", "-139.322, 54.1261, 9.81396, 0.23", "-140.332, 54.4914, 9.87258, 0.68", "-141.365, 54.8071, 9.90332, 0.23", "-142.917, 55.2524, 9.90694, 0.91", "-144.817, 55.8232, 9.85111, 0.23", "-146.116, 56.2559, 9.78603, 0.23", "-147.624, 56.8006, 9.68164, 0.91", "-149.986, 57.7595, 9.60464, 0.23", "-151.138, 58.2621, 9.57568, 0.23", "-152.414, 58.889, 9.55852, 0.23", "-153.5, 59.5047, 9.56188, 0.68", "-154.484, 60.1433, 9.55901, 0.23", "-156.122, 61.307, 9.49874, 0.91", "-158.307, 62.8512, 9.37955, 0.23", "-159.242, 63.4943, 9.33578, 0.23", "-160.454, 64.3194, 9.28953, 0.68", "-161.504, 65.0204, 9.26671, 0.68", "-162.728, 65.8472, 9.25714, 0.68", "-163.714, 66.462, 9.26308, 1.14", "-165.045, 67.2278, 9.28764, 0.45", "-166.647, 68.1048, 9.20586, 1.14", "-167.467, 68.5345, 9.12265, 0.23", "-168.25, 68.9446, 8.98162, 0.23", "-169.258, 69.4788, 8.75781, 0.91", "-171.043, 70.4768, 8.1795, 0.23", "-172.85, 71.5695, 7.42388, 0.23", "-173.755, 72.1306, 7.00109, 0.23", "-176.274, 73.7647, 5.7774, 0.23", "-177.791, 74.7739, 5.01742, 0.91", "-179.132, 75.6891, 4.35512, 0.23", "-180.488, 76.6888, 3.6864, 0.23", "-181.136, 77.1933, 3.3522, 0.68", "-182.207, 78.0044, 2.78336, 0.23", "-182.989, 78.5073, 2.38373, 0.23", "-184.4, 79.2066, 1.75411, 0.68", "-185.79, 79.6742, 1.20681, 0.23", "-186.607, 79.8342, 0.897693, 0.23", "-188.534, 80.0876, 0.189665, 0.68", "-189.706, 80.1771, -0.201634, 0.23", "-191.256, 80.2876, -0.621433, 0.68", "-192.718, 80.4039, -0.906873, 0.23", "-194.091, 80.5535, -1.07376, 0.23", "-195.492, 80.7759, -1.17123, 0.45", "-196.644, 80.9959, -1.22118, 0.23", "-198.41, 81.3567, -1.25234, 0.91", "-200.439, 81.8004, -1.23672, 0.23", "-202.524, 82.324, -1.14538, 0.23", "-203.87, 82.668, -1.08117, 0.91", "-205.029, 82.9464, -1.02303, 0.23" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-89.8251, 30.1422, 15.8757, 0.23", "-91.5555, 31.0578, 16.5291, 0.23", "-92.9457, 31.7053, 17.0528, 0.23", "-93.9346, 32.1488, 17.4103, 0.23", "-95.8761, 32.9603, 18.1323, 0.23", "-98.1531, 33.8971, 18.9759, 1.14", "-99.6341, 34.5096, 19.5094, 0.23", "-101.633, 35.2426, 20.1848, 0.91", "-103.262, 35.7708, 20.7261, 0.45", "-104.204, 36.0728, 21.0399, 0.45", "-105.183, 36.3957, 21.3773, 0.45", "-106.31, 36.7689, 21.789, 0.45", "-107.809, 37.3087, 22.389, 0.91", "-109.41, 37.8167, 23.0866, 0.91", "-111.068, 38.2863, 23.8363, 0.23", "-112.071, 38.5959, 24.3378, 0.68", "-113.76, 39.1275, 25.2621, 0.23", "-114.951, 39.5276, 25.9622, 0.23", "-116.353, 40.0173, 26.803, 0.91", "-116.962, 40.2161, 27.1731, 0.91", "-119.155, 40.7655, 28.3831, 0.23", "-119.931, 40.9423, 28.7735, 0.91", "-121.791, 41.2999, 29.5107, 0.23", "-122.493, 41.3894, 29.7007, 0.23", "-123.939, 41.4761, 30.0127, 1.14", "-125.058, 41.4179, 30.1943, 1.14", "-126.69, 41.1743, 30.3691, 0.23", "-128.543, 40.7757, 30.5597, 0.23", "-131.493, 39.9737, 30.8212, 0.91", "-133.737, 39.2798, 31.0172, 0.23", "-135.585, 38.6533, 31.192, 0.23", "-136.892, 38.1815, 31.3231, 1.14", "-139.375, 37.2572, 31.6359, 0.23", "-141.55, 36.484, 31.994, 0.23", "-142.553, 36.1625, 32.2174, 0.23", "-143.813, 35.8271, 32.5092, 0.23", "-145.049, 35.6054, 32.8367, 0.23", "-146.563, 35.3492, 33.3708, 0.23", "-147.653, 35.1863, 33.8197, 0.91", "-148.584, 35.1077, 34.2581, 0.23", "-150.311, 35.0243, 35.0585, 0.91", "-152.804, 34.9068, 36.1277, 0.23", "-155.711, 34.7769, 37.2955, 0.23", "-156.4, 34.7669, 37.5232, 0.23", "-158.665, 34.7914, 38.1568, 0.68", "-160.89, 34.8519, 38.6615, 0.23", "-162.69, 34.8878, 38.9808, 0.23", "-164.114, 34.8851, 39.1703, 0.91", "-167.057, 34.8426, 39.431, 0.23", "-168.887, 34.7389, 39.5995, 0.91", "-170.28, 34.6217, 39.7221, 0.23", "-172.553, 34.4524, 39.947, 0.68", "-173.978, 34.3849, 40.0933, 0.23", "-175.109, 34.3718, 40.202, 0.91", "-176.765, 34.4445, 40.4133, 0.23", "-178.511, 34.6008, 40.7353, 0.23", "-179.601, 34.7599, 40.9783, 1.14", "-181.144, 35.0553, 41.3713, 0.23", "-183.419, 35.6018, 42.0046, 1.14", "-185.014, 36.0269, 42.5563, 0.23", "-187.202, 36.5733, 43.5291, 0.23", "-188.275, 36.7932, 44.0894, 0.91", "-190.41, 37.1731, 45.3144, 0.23", "-192.278, 37.4055, 46.4096, 0.91", "-194.438, 37.578, 47.7077, 0.23", "-196.483, 37.6597, 48.8613, 0.68", "-197.419, 37.639, 49.3777, 0.23", "-198.245, 37.5237, 49.8304, 0.23", "-200.261, 37.0141, 50.7963, 0.91", "-202.547, 36.2035, 51.8122, 0.23", "-203.135, 35.9629, 52.0555, 0.23", "-204.554, 35.3274, 52.6202, 0.23", "-205.977, 34.6033, 53.2739, 0.91", "-208.495, 33.074, 54.5531, 0.23", "-209.651, 32.1752, 55.2444, 0.68", "-210.552, 31.3624, 55.8297, 0.23", "-211.141, 30.8469, 56.2471, 0.91", "-212.288, 29.935, 57.073, 0.23", "-212.91, 29.481, 57.5303, 0.91", "-214.138, 28.7081, 58.4659, 0.91", "-215.429, 28.1292, 59.3279, 0.23", "-217.038, 27.6152, 60.3126, 0.68", "-218.001, 27.3911, 60.8551, 0.23", "-219.309, 27.1939, 61.5572, 0.91", "-220.986, 27.0576, 62.4918, 0.23", "-222.421, 26.9957, 63.3442, 0.23", "-223.593, 26.9459, 64.0925, 0.23", "-225.173, 26.8579, 65.234, 0.91", "-226.652, 26.7723, 66.3656, 0.23", "-227.487, 26.714, 67.0303, 0.68", "-228.987, 26.5896, 68.2495, 0.23", "-229.997, 26.4689, 69.1693, 0.68", "-231.849, 26.2182, 71.1226, 0.23" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-87.5271, 5.03994, 4.22088, 0.23", "-87.9081, 3.01533, 3.52285, 0.23", "-88.0821, 2.35434, 3.22875, 0.68", "-88.5696, 0.909924, 2.5629, 0.23", "-88.8854, -0.0660326, 2.07081, 0.23", "-89.1986, -1.31213, 1.42458, 0.23", "-89.5021, -2.6755, 0.649401, 0.68", "-89.7069, -3.52108, 0.0608841, 0.23", "-89.8178, -4.50429, -0.693169, 0.68", "-89.8082, -5.28996, -1.32745, 0.68", "-89.7342, -6.29432, -2.1247, 0.68", "-89.711, -8.01007, -3.43078, 1.14", "-89.7451, -9.36916, -4.37704, 0.23", "-89.727, -10.5909, -5.16365, 0.23", "-89.7071, -11.2249, -5.55116, 0.23", "-89.7381, -11.8638, -5.90187, 0.23", "-90.0128, -13.7319, -6.86507, 0.23", "-90.2099, -14.7419, -7.3604, 0.23", "-90.5311, -15.9853, -7.99073, 0.68", "-90.8537, -17.3093, -8.75096, 0.23", "-91.0645, -18.2404, -9.36679, 0.23", "-91.4089, -19.4945, -10.3067, 0.23", "-91.7324, -20.4476, -11.0989, 0.68", "-91.9157, -20.8695, -11.4822, 0.68", "-92.4479, -22.0934, -12.6219, 0.23", "-92.6208, -22.7887, -13.352, 0.23", "-92.5766, -23.4096, -14.0299, 0.23", "-92.4478, -23.9019, -14.5489, 0.23", "-92.2284, -24.5366, -15.1602, 0.23", "-91.9139, -25.4727, -16.003, 0.23", "-91.546, -26.7041, -17.0957, 0.23", "-91.1969, -28.1043, -18.3015, 0.23", "-91.0522, -29.1808, -19.1771, 0.68", "-91.078, -30.3627, -20.0273, 0.23", "-91.1865, -31.2161, -20.5573, 0.23", "-91.3948, -32.2474, -21.1522, 0.23", "-91.5029, -32.8529, -21.4662, 0.23", "-91.5655, -33.8286, -21.932, 0.23", "-91.5743, -34.9237, -22.3645, 0.23", "-91.5546, -35.9419, -22.7152, 0.23", "-91.4558, -37.4348, -23.215, 0.68", "-91.2503, -39.194, -23.7964, 0.23", "-91.1138, -40.1466, -24.121, 0.23", "-90.8013, -42.3115, -24.8961, 0.23", "-90.7022, -43.4512, -25.305, 0.23", "-89.7219, -52.0877, -30.2498, 0.23", "-86.4436, -60.7138, -34.1023, 0.23", "-82.8039, -68.6812, -38.9266, 0.23", "-77.9799, -74.8337, -45.1616, 0.23", "-72.8839, -81.5911, -50.4877, 0.23", "-67.6759, -88.2321, -55.852, 0.23", "-63.7031, -96.1675, -60.4613, 0.23", "-58.8894, -104.466, -63.2814, 0.23", "-54.6326, -113.255, -65.4357, 0.23", "-50.2228, -122.218, -65.9074, 0.23", "-46.2258, -131.336, -64.9688, 0.23", "-44.2149, -141.041, -63.6377, 0.23" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-87.5271, 5.03994, 4.22088, 0.23", "-89.6315, 4.4575, 4.00147, 0.23", "-90.7055, 4.14023, 3.84525, 0.23", "-92.4191, 3.52684, 3.56835, 0.23", "-93.5139, 3.02968, 3.37043, 0.23", "-94.9568, 2.27734, 3.10545, 0.23", "-95.8453, 1.76456, 2.92298, 0.23", "-96.7484, 1.15347, 2.66712, 0.45", "-97.9429, 0.166686, 2.25501, 0.91", "-99.2452, -1.06028, 1.73541, 0.23", "-100.251, -2.05167, 1.32641, 0.23", "-101.627, -3.37659, 0.749122, 0.23", "-102.276, -3.97554, 0.478837, 0.23", "-103.458, -4.98522, -0.0176866, 0.91", "-104.367, -5.69774, -0.411089, 0.23", "-105.296, -6.3249, -0.790488, 0.45", "-106.97, -7.22625, -1.43131, 0.23", "-107.933, -7.61497, -1.78213, 0.68", "-109.463, -7.98182, -2.33863, 0.23", "-110.568, -8.09506, -2.74427, 0.68", "-112.517, -8.15301, -3.47758, 0.23", "-114.625, -7.99317, -4.27579, 0.23", "-115.894, -7.76418, -4.72189, 1.14", "-117.886, -7.30656, -5.37304, 0.23", "-118.955, -7.05571, -5.6733, 0.91", "-120.119, -6.87835, -5.90955, 0.23", "-121.444, -6.8355, -6.03983, 0.23", "-122.799, -6.96621, -6.07525, 0.68", "-123.851, -7.16196, -6.08076, 0.23", "-125.422, -7.55423, -6.09503, 1.14", "-127.254, -8.08713, -6.21222, 0.23", "-128.557, -8.56292, -6.38395, 0.23", "-129.593, -9.05313, -6.61239, 0.23", "-130.872, -9.74295, -7.09401, 0.23", "-132.211, -10.4767, -7.79203, 0.23", "-133.23, -11.0724, -8.4972, 0.23", "-134.177, -11.6661, -9.2842, 0.23", "-134.945, -12.1478, -9.90672, 0.23", "-136.101, -12.7036, -10.7076, 0.23", "-137.178, -13.0461, -11.2968, 0.23", "-137.916, -13.207, -11.6061, 0.23", "-138.969, -13.3643, -11.938, 0.23", "-141.233, -13.6587, -12.4696, 0.91", "-143.206, -13.9809, -12.821, 0.23", "-144.981, -14.4156, -13.0426, 0.23", "-146.27, -14.9356, -13.1579, 0.23", "-147.524, -15.4792, -13.2353, 0.68", "-149.079, -16.2593, -13.2736, 0.23", "-150.399, -17.1771, -13.2229, 0.23", "-151.64, -18.3796, -13.1013, 0.23", "-153.348, -20.6197, -12.8797, 0.23", "-162.514, -23.8659, -15.2151, 0.23" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-63.1785, 136.068, 5.43818, 0.23", "-64.2538, 137.866, 5.34503, 0.23", "-65.7407, 140.353, 5.21622, 0.91", "-67.2428, 142.864, 5.0861, 0.23", "-68.0002, 144.131, 5.02049, 0.23", "-68.5836, 145.106, 4.96995, 1.14" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-63.1785, 136.068, 5.43818, 0.23", "-63.3794, 137.424, 5.97549, 0.23", "-63.4173, 138.233, 6.32784, 0.23", "-63.4108, 139.405, 6.88419, 0.45", "-63.441, 141.191, 7.80458, 1.14", "-63.6088, 143.337, 8.9772, 0.23", "-63.7335, 144.168, 9.45051, 0.91", "-64.1333, 145.917, 10.5697, 0.23", "-64.4983, 146.845, 11.2358, 0.91", "-65.1728, 147.815, 12.0796, 0.23", "-66.2141, 148.603, 12.9879, 0.23", "-67.3505, 149.092, 13.7001, 0.68", "-68.6925, 149.532, 14.448, 0.45", "-70.1204, 149.87, 15.1238, 0.91", "-71.8888, 150.194, 15.8905, 0.23", "-73.6232, 150.465, 16.6315, 0.23", "-74.031, 150.513, 16.8088, 0.91" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-124.981, 87.8898, -6.95853, 0.68", "-134.751, 89.7148, -8.06324, 0.68", "-144.422, 92.2346, -8.42036, 0.68", "-154.355, 93.3781, -8.32873, 0.68", "-164.283, 93.9508, -7.27137, 0.68", "-173.914, 96.0779, -5.62339, 0.68", "-183.692, 98.1705, -5.77179, 0.68", "-193.039, 101.254, -7.53924, 0.68", "-202.415, 104.48, -8.83809, 0.68" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-124.981, 87.8898, -6.95853, 0.23", "-134.801, 89.6663, -7.60687, 0.68" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-61.1224, 131.688, -1.74943, 0.23", "-61.6193, 133.353, -1.84892, 0.23", "-61.9512, 134.465, -1.91536, 0.68", "-62.1975, 135.291, -1.96469, 0.23", "-62.3718, 135.875, -1.99957, 0.68", "-62.797, 137.3, -2.0847, 0.23" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-61.1224, 131.688, -1.74943, 0.23", "-62.2323, 132.95, -0.832477, 0.23", "-63.1843, 134.032, -0.0459834, 0.23", "-64.1871, 135.173, 0.782539, 0.91", "-65.7462, 136.946, 2.07059, 0.23" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-34.0874, 109.048, -7.8508, 0.23", "-31.5609, 109.48, -7.8508, 0.23", "-30.4412, 109.671, -7.8508, 0.68", "-27.4739, 110.178, -7.8508, 0.23", "-17.9434, 113.157, -7.30875, 0.23", "-8.78217, 116.947, -8.61728, 0.23", "0.780536, 119.855, -8.92542, 0.23", "10.479, 121.425, -10.7896, 0.23", "20.3605, 121.614, -12.3131, 0.23", "30.1128, 122.222, -14.4396, 0.23", "39.8791, 122.895, -16.4811, 0.23", "49.492, 124.692, -18.57, 0.23", "59.4066, 125.949, -18.9125, 0.23", "69.0034, 128.436, -17.6024, 0.23", "77.8134, 132.9, -16.033, 0.23", "85.7158, 138.162, -12.8928, 0.23", "93.6736, 142.806, -9.00589, 0.23", "100.012, 148.651, -3.94015, 0.23", "107.374, 153.238, 1.03508, 0.23", "114.901, 157.396, 6.14094, 0.23", "120.85, 161.52, 13.0398, 0.23", "127.113, 164.466, 20.2576, 0.23", "133.454, 166.642, 27.6779, 0.23", "138.852, 169.892, 35.4424, 0.23", "143.342, 174.823, 42.8944, 0.23", "148.785, 179.407, 49.9202, 0.23", "154.511, 183.005, 57.2864, 0.23" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-34.0874, 109.048, -7.8508, 0.23", "-34.0255, 110.263, -8.06348, 0.23", "-33.9564, 111.701, -8.46196, 0.45", "-33.8666, 113.372, -8.98983, 0.23", "-33.6733, 115.068, -9.53584, 0.23", "-33.4776, 115.957, -9.89471, 0.23", "-33.2608, 116.765, -10.2649, 0.91", "-32.6761, 118.413, -11.2165, 0.23", "-32.2239, 119.57, -12.0758, 0.23", "-31.8406, 120.618, -13.0413, 0.68", "-31.1236, 122.324, -14.737, 0.23", "-30.8112, 122.914, -15.3321, 0.23", "-30.5254, 123.484, -15.9357, 0.23", "-30.0986, 124.095, -16.6514, 0.23", "-29.5198, 125.057, -17.9818, 0.23", "-29.5192, 125.523, -18.478, 0.23", "-29.8416, 127.224, -19.6095, 0.23", "-29.0264, 135.88, -24.5498, 0.23", "-28.3503, 144.434, -29.6845, 0.23" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_31", "dend_0", "dend_49", "dend_32", "dend_20", "dend_1", "dend_65", "dend_50", "dend_48", "dend_33", "dend_26", "dend_21", "dend_9", "dend_2", "dend_77", "dend_66", "dend_64", "dend_51", "dend_41", "dend_34", "dend_28", "dend_27", "dend_25", "dend_22", "dend_13", "dend_10", "dend_8", "dend_3", "dend_81", "dend_78", "dend_70", "dend_67", "dend_59", "dend_52", "dend_47", "dend_42", "dend_38", "dend_35", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_12", "dend_11", "dend_7", "dend_4", "dend_83", "dend_82", "dend_80", "dend_79", "dend_74", "dend_71", "dend_69", "dend_68", "dend_63", "dend_60", "dend_56", "dend_53", "dend_46", "dend_43", "dend_40", "dend_39", "dend_37", "dend_36", "dend_19", "dend_18", "dend_16", "dend_15", "dend_6", "dend_5", "dend_76", "dend_75", "dend_73", "dend_72", "dend_62", "dend_61", "dend_58", "dend_57", "dend_55", "dend_54", "dend_45", "dend_44" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_31", "dend_0", "dend_49", "dend_32", "dend_20", "dend_1", "dend_65", "dend_50", "dend_48", "dend_33", "dend_26", "dend_21", "dend_9", "dend_2", "dend_77", "dend_66", "dend_64", "dend_51", "dend_41", "dend_34", "dend_28", "dend_27", "dend_25", "dend_22", "dend_13", "dend_10", "dend_8", "dend_3", "dend_81", "dend_78", "dend_70", "dend_67", "dend_59", "dend_52", "dend_47", "dend_42", "dend_38", "dend_35", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_12", "dend_11", "dend_7", "dend_4", "dend_83", "dend_82", "dend_80", "dend_79", "dend_74", "dend_71", "dend_69", "dend_68", "dend_63", "dend_60", "dend_56", "dend_53", "dend_46", "dend_43", "dend_40", "dend_39", "dend_37", "dend_36", "dend_19", "dend_18", "dend_16", "dend_15", "dend_6", "dend_5", "dend_76", "dend_75", "dend_73", "dend_72", "dend_62", "dend_61", "dend_58", "dend_57", "dend_55", "dend_54", "dend_45", "dend_44" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_40", "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_49", "dend_49", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_1", "axon_1", "axon_1", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_70", "dend_70", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_19", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L5_MC_162814b80d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_49, id: dend_49, parent: dend_31
create dend_49
public dend_49
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_20, id: dend_20, parent: dend_0
create dend_20
public dend_20
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_65, id: dend_65, parent: dend_49
create dend_65
public dend_65
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_48, id: dend_48, parent: dend_32
create dend_48
public dend_48
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_77, id: dend_77, parent: dend_65
create dend_77
public dend_77
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_50
create dend_64
public dend_64
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_81, id: dend_81, parent: dend_77
create dend_81
public dend_81
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_70, id: dend_70, parent: dend_66
create dend_70
public dend_70
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_59, id: dend_59, parent: dend_51
create dend_59
public dend_59
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_41
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_63, id: dend_63, parent: dend_59
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_31, dend_0, dend_49, dend_32, dend_20, dend_1, dend_65, dend_50, dend_48, dend_33, dend_26, dend_21, dend_9, dend_2, dend_77, dend_66, dend_64, dend_51, dend_41, dend_34, dend_28, dend_27, dend_25, dend_22, dend_13, dend_10, dend_8, dend_3, dend_81, dend_78, dend_70, dend_67, dend_59, dend_52, dend_47, dend_42, dend_38, dend_35, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_12, dend_11, dend_7, dend_4, dend_83, dend_82, dend_80, dend_79, dend_74, dend_71, dend_69, dend_68, dend_63, dend_60, dend_56, dend_53, dend_46, dend_43, dend_40, dend_39, dend_37, dend_36, dend_19, dend_18, dend_16, dend_15, dend_6, dend_5, dend_76, dend_75, dend_73, dend_72, dend_62, dend_61, dend_58, dend_57, dend_55, dend_54, dend_45, dend_44]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_31, dend_0, dend_49, dend_32, dend_20, dend_1, dend_65, dend_50, dend_48, dend_33, dend_26, dend_21, dend_9, dend_2, dend_77, dend_66, dend_64, dend_51, dend_41, dend_34, dend_28, dend_27, dend_25, dend_22, dend_13, dend_10, dend_8, dend_3, dend_81, dend_78, dend_70, dend_67, dend_59, dend_52, dend_47, dend_42, dend_38, dend_35, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_12, dend_11, dend_7, dend_4, dend_83, dend_82, dend_80, dend_79, dend_74, dend_71, dend_69, dend_68, dend_63, dend_60, dend_56, dend_53, dend_46, dend_43, dend_40, dend_39, dend_37, dend_36, dend_19, dend_18, dend_16, dend_15, dend_6, dend_5, dend_76, dend_75, dend_73, dend_72, dend_62, dend_61, dend_58, dend_57, dend_55, dend_54, dend_45, dend_44]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_40, dend_39]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_49, dend_49, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_1, axon_1, axon_1, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_19, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_31(0), soma_0(0.4999999418279446)
    connect dend_0(0), soma_0(0.4999999418279446)
    connect axon_0(0), soma_0(1.0)
    connect dend_49(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_20(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_65(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_48(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_77(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_81(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_70(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_59(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_47(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_63(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.86113, -10.7946, 0.0, 2.37441 ) }
    soma_0 { pt3dadd( -3.53574, -9.7661, 0.0, 3.83095 ) }
    soma_0 { pt3dadd( -3.21036, -8.73761, 0.0, 5.40983 ) }
    soma_0 { pt3dadd( -2.88497, -7.70912, 0.0, 6.39389 ) }
    soma_0 { pt3dadd( -2.55958, -6.68063, 0.0, 7.30844 ) }
    soma_0 { pt3dadd( -2.23419, -5.65214, 0.0, 8.17022 ) }
    soma_0 { pt3dadd( -1.9088, -4.62365, 0.0, 8.75708 ) }
    soma_0 { pt3dadd( -1.58342, -3.59516, 0.0, 9.10253 ) }
    soma_0 { pt3dadd( -1.25803, -2.56666, 0.0, 9.32898 ) }
    soma_0 { pt3dadd( -0.932639, -1.53817, 0.0, 9.3748 ) }
    soma_0 { pt3dadd( -0.607251, -0.509681, 0.0, 9.4737 ) }
    soma_0 { pt3dadd( -0.281863, 0.518811, 0.0, 9.59879 ) }
    soma_0 { pt3dadd( 0.0435249, 1.5473, 0.0, 9.45099 ) }
    soma_0 { pt3dadd( 0.368913, 2.57579, 0.0, 9.22636 ) }
    soma_0 { pt3dadd( 0.694301, 3.60429, 0.0, 8.83076 ) }
    soma_0 { pt3dadd( 1.01969, 4.63278, 0.0, 8.40838 ) }
    soma_0 { pt3dadd( 1.34508, 5.66127, 0.0, 7.58426 ) }
    soma_0 { pt3dadd( 1.67047, 6.68976, 0.0, 6.67025 ) }
    soma_0 { pt3dadd( 1.99585, 7.71825, 0.0, 5.65904 ) }
    soma_0 { pt3dadd( 2.32124, 8.74674, 0.0, 4.34677 ) }
    soma_0 { pt3dadd( 2.64663, 9.77524, 0.0, 2.64907 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 1.12808, 8.78425, 3.58, 3.64 ) }
    dend_31 { pt3dadd( 0.529099, 10.0904, 3.97911, 3.64 ) }
    dend_31 { pt3dadd( -0.819392, 13.0309, 4.87765, 2.5 ) }
    dend_31 { pt3dadd( -2.11023, 15.8456, 5.73777, 2.5 ) }
    dend_31 { pt3dadd( -2.8121, 17.3761, 6.20544, 3.18 ) }
    dend_31 { pt3dadd( -3.78066, 19.4881, 6.85082, 3.64 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.89191, -10.6358, 1.45, 3.18 ) }
    dend_0 { pt3dadd( -2.88337, -11.489, 1.45178, 3.18 ) }
    dend_0 { pt3dadd( -2.85154, -14.6704, 1.45841, 2.27 ) }
    dend_0 { pt3dadd( -2.83326, -16.4963, 1.46221, 2.73 ) }
    dend_0 { pt3dadd( -2.81027, -18.7943, 1.467, 2.73 ) }
    dend_0 { pt3dadd( -2.78742, -21.0779, 1.47176, 3.64 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 33/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.64663, 9.77524, 0.0, 0.530153 ) }
    axon_0 { pt3dadd( 7.1712, 24.0766, 0.0, 0.530153 ) }
    axon_0 { pt3dadd( 11.6958, 38.3779, 0.0, 0.530153 ) }
    // Section: dend_49, id: dend_49, parent: dend_31 (entry count 36/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.78066, 19.4881, 6.85082, 2.5 ) }
    dend_49 { pt3dadd( -6.16913, 19.9771, 7.35186, 2.5 ) }
    dend_49 { pt3dadd( -8.41643, 20.4372, 7.82329, 2.73 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 39/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -3.78066, 19.4881, 6.85082, 0.68 ) }
    dend_32 { pt3dadd( -5.44834, 21.8243, 5.90154, 0.68 ) }
    dend_32 { pt3dadd( -6.31881, 23.2122, 5.36591, 0.91 ) }
    dend_32 { pt3dadd( -7.45839, 25.352, 4.60432, 0.68 ) }
    dend_32 { pt3dadd( -8.31838, 27.2691, 3.96391, 1.14 ) }
    dend_32 { pt3dadd( -9.29977, 29.667, 3.21024, 0.68 ) }
    dend_32 { pt3dadd( -9.96573, 31.3711, 2.70562, 1.36 ) }
    dend_32 { pt3dadd( -10.5969, 33.271, 2.18993, 0.68 ) }
    dend_32 { pt3dadd( -10.9836, 34.8782, 1.79631, 0.68 ) }
    dend_32 { pt3dadd( -11.31, 37.1612, 1.23222, 2.05 ) }
    dend_32 { pt3dadd( -11.4076, 38.3484, 0.90673, 2.05 ) }
    dend_32 { pt3dadd( -11.5056, 39.5334, 0.57312, 2.05 ) }
    dend_32 { pt3dadd( -11.7371, 41.2029, 0.10113, 0.91 ) }
    dend_32 { pt3dadd( -11.9762, 42.2684, -0.218196, 1.14 ) }
    dend_32 { pt3dadd( -12.5301, 44.2707, -0.856645, 0.45 ) }
    dend_32 { pt3dadd( -12.8829, 45.6833, -1.28992, 0.91 ) }
    dend_32 { pt3dadd( -13.2731, 47.2545, -1.78091, 0.91 ) }
    dend_32 { pt3dadd( -13.6745, 48.7531, -2.23751, 0.91 ) }
    dend_32 { pt3dadd( -14.0128, 49.7804, -2.51476, 0.45 ) }
    dend_32 { pt3dadd( -14.7764, 51.7056, -3.00685, 0.45 ) }
    dend_32 { pt3dadd( -15.4698, 53.3689, -3.3519, 1.14 ) }
    // Section: dend_20, id: dend_20, parent: dend_0 (entry count 60/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -2.78742, -21.0779, 1.47176, 0.23 ) }
    dend_20 { pt3dadd( -3.16999, -23.9689, 3.08037, 0.23 ) }
    dend_20 { pt3dadd( -3.38309, -25.2928, 3.9198, 0.23 ) }
    dend_20 { pt3dadd( -3.52197, -26.1017, 4.43232, 0.91 ) }
    dend_20 { pt3dadd( -3.91686, -28.1304, 5.69385, 2.05 ) }
    dend_20 { pt3dadd( -4.54584, -30.6581, 7.24606, 1.14 ) }
    dend_20 { pt3dadd( -5.25041, -33.1778, 8.74363, 1.14 ) }
    dend_20 { pt3dadd( -5.72219, -34.8314, 9.69955, 1.14 ) }
    dend_20 { pt3dadd( -6.09853, -36.1335, 10.335, 1.14 ) }
    dend_20 { pt3dadd( -6.72482, -38.1223, 11.1193, 1.14 ) }
    dend_20 { pt3dadd( -7.54212, -40.5989, 11.886, 1.14 ) }
    dend_20 { pt3dadd( -8.20021, -42.7328, 12.3845, 0.68 ) }
    dend_20 { pt3dadd( -8.90587, -45.2681, 12.8346, 0.68 ) }
    dend_20 { pt3dadd( -9.52011, -47.8134, 13.2384, 0.68 ) }
    dend_20 { pt3dadd( -10.0277, -50.2788, 13.607, 1.14 ) }
    dend_20 { pt3dadd( -10.6565, -53.8152, 14.0766, 0.91 ) }
    dend_20 { pt3dadd( -10.9299, -55.7168, 14.3072, 0.91 ) }
    dend_20 { pt3dadd( -11.2212, -57.8765, 14.5891, 0.91 ) }
    dend_20 { pt3dadd( -11.5107, -60.123, 14.9699, 0.91 ) }
    dend_20 { pt3dadd( -11.6646, -61.5531, 15.295, 0.91 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 80/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -2.78742, -21.0779, 1.47176, 3.64 ) }
    dend_1 { pt3dadd( -1.58743, -22.6079, 1.47176, 3.64 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 82/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 11.6958, 38.3779, 0.0, 0.167161 ) }
    axon_1 { pt3dadd( 16.2203, 52.6793, 0.0, 0.167161 ) }
    axon_1 { pt3dadd( 20.7449, 66.9806, 0.0, 0.167161 ) }
    // Section: dend_65, id: dend_65, parent: dend_49 (entry count 85/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -8.41643, 20.4372, 7.82329, 1.36 ) }
    dend_65 { pt3dadd( -11.0944, 21.1711, 8.41375, 1.36 ) }
    dend_65 { pt3dadd( -13.451, 21.721, 8.85627, 2.27 ) }
    dend_65 { pt3dadd( -16.8044, 22.3711, 9.39989, 1.36 ) }
    dend_65 { pt3dadd( -18.903, 22.6563, 9.69562, 1.36 ) }
    dend_65 { pt3dadd( -21.0076, 22.8627, 9.96241, 1.36 ) }
    dend_65 { pt3dadd( -22.8076, 22.9933, 10.1842, 1.36 ) }
    dend_65 { pt3dadd( -24.3861, 23.0695, 10.3053, 1.36 ) }
    dend_65 { pt3dadd( -25.9773, 23.066, 10.3816, 1.36 ) }
    dend_65 { pt3dadd( -27.9843, 22.9972, 10.4301, 1.36 ) }
    dend_65 { pt3dadd( -28.6647, 22.9828, 10.4433, 1.36 ) }
    dend_65 { pt3dadd( -30.658, 23.0065, 10.5052, 1.36 ) }
    dend_65 { pt3dadd( -32.8011, 23.1249, 10.6024, 1.14 ) }
    dend_65 { pt3dadd( -34.4131, 23.266, 10.6792, 1.14 ) }
    dend_65 { pt3dadd( -37.1869, 23.6136, 10.8145, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_65 { pt3dadd( -38.6398, 23.8589, 10.8833, 1.14 ) }
    dend_65 { pt3dadd( -40.1831, 24.1255, 10.9468, 1.14 ) }
    dend_65 { pt3dadd( -42.0846, 24.4353, 10.9923, 1.14 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 3/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -8.41643, 20.4372, 7.82329, 1.36 ) }
    dend_50 { pt3dadd( -10.3617, 22.9667, 7.67702, 1.36 ) }
    dend_50 { pt3dadd( -12.6626, 25.9586, 7.50401, 1.59 ) }
    dend_50 { pt3dadd( -14.2943, 28.0804, 7.38131, 0.91 ) }
    dend_50 { pt3dadd( -14.6702, 28.5692, 7.35305, 0.91 ) }
    dend_50 { pt3dadd( -16.3157, 30.709, 7.22932, 1.82 ) }
    // Section: dend_48, id: dend_48, parent: dend_32 (entry count 9/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -15.4698, 53.3689, -3.3519, 0.23 ) }
    dend_48 { pt3dadd( -14.5513, 55.8524, -1.91927, 0.23 ) }
    dend_48 { pt3dadd( -14.1696, 56.8448, -1.39533, 0.23 ) }
    dend_48 { pt3dadd( -13.6322, 57.9772, -0.835366, 0.23 ) }
    dend_48 { pt3dadd( -12.7887, 59.4587, -0.0906259, 0.68 ) }
    dend_48 { pt3dadd( -11.4597, 61.5057, 1.0561, 0.23 ) }
    dend_48 { pt3dadd( -10.6603, 62.6753, 1.75496, 0.23 ) }
    dend_48 { pt3dadd( -10.1808, 63.3027, 2.15995, 0.23 ) }
    dend_48 { pt3dadd( -8.60325, 65.2149, 3.57108, 0.45 ) }
    dend_48 { pt3dadd( -7.67107, 66.2084, 4.31604, 0.23 ) }
    dend_48 { pt3dadd( -6.64492, 67.0456, 5.08128, 0.23 ) }
    dend_48 { pt3dadd( -6.11897, 67.3374, 5.39986, 0.23 ) }
    dend_48 { pt3dadd( -4.88754, 67.7787, 6.11274, 0.23 ) }
    dend_48 { pt3dadd( -7.34552, 66.7465, 7.18176, 0.45 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 23/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -15.4698, 53.3689, -3.3519, 0.91 ) }
    dend_33 { pt3dadd( -15.8195, 55.3238, -3.62235, 0.91 ) }
    dend_33 { pt3dadd( -16.1831, 57.3561, -3.90351, 1.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 26/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -11.6646, -61.5531, 15.295, 0.23 ) }
    dend_26 { pt3dadd( -12.3281, -63.5317, 15.2187, 0.23 ) }
    dend_26 { pt3dadd( -13.0664, -65.7335, 15.1338, 1.14 ) }
    dend_26 { pt3dadd( -13.6325, -67.422, 15.0687, 0.45 ) }
    dend_26 { pt3dadd( -14.2573, -69.2851, 14.9969, 1.59 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 31/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -11.6646, -61.5531, 15.295, 0.23 ) }
    dend_21 { pt3dadd( -14.1088, -62.4927, 16.5607, 0.23 ) }
    dend_21 { pt3dadd( -15.9171, -63.3865, 17.5322, 0.68 ) }
    dend_21 { pt3dadd( -16.7108, -63.8595, 18.0089, 0.23 ) }
    dend_21 { pt3dadd( -17.5448, -64.4105, 18.5726, 0.91 ) }
    dend_21 { pt3dadd( -18.4992, -65.1761, 19.3256, 0.23 ) }
    dend_21 { pt3dadd( -19.0536, -65.7585, 19.8449, 0.91 ) }
    dend_21 { pt3dadd( -19.7819, -67.1495, 20.9628, 0.23 ) }
    dend_21 { pt3dadd( -19.9287, -68.0531, 21.7403, 0.23 ) }
    dend_21 { pt3dadd( -19.9031, -68.7305, 22.3364, 0.91 ) }
    dend_21 { pt3dadd( -19.6632, -69.9374, 23.414, 0.23 ) }
    dend_21 { pt3dadd( -19.0935, -71.418, 24.7853, 1.14 ) }
    dend_21 { pt3dadd( -18.1433, -73.1428, 26.4553, 1.14 ) }
    dend_21 { pt3dadd( -16.4737, -75.2377, 28.5788, 0.23 ) }
    dend_21 { pt3dadd( -15.6463, -76.0614, 29.3988, 0.23 ) }
    dend_21 { pt3dadd( -14.9134, -76.6347, 29.9487, 0.23 ) }
    dend_21 { pt3dadd( -13.3084, -77.5917, 30.8771, 1.14 ) }
    dend_21 { pt3dadd( -12.5156, -77.965, 31.2376, 1.14 ) }
    dend_21 { pt3dadd( -10.1383, -78.8787, 32.1065, 0.23 ) }
    dend_21 { pt3dadd( -8.99117, -79.2328, 32.4561, 0.91 ) }
    dend_21 { pt3dadd( -6.6566, -79.8072, 33.2295, 0.23 ) }
    dend_21 { pt3dadd( -5.22437, -80.1184, 33.7127, 0.23 ) }
    dend_21 { pt3dadd( -3.89804, -80.4073, 34.1842, 0.23 ) }
    dend_21 { pt3dadd( -2.30685, -80.7585, 34.749, 1.14 ) }
    dend_21 { pt3dadd( 0.203366, -81.3596, 35.6097, 0.23 ) }
    dend_21 { pt3dadd( 2.11137, -81.8545, 36.2306, 0.23 ) }
    dend_21 { pt3dadd( 3.46378, -82.231, 36.6549, 0.23 ) }
    dend_21 { pt3dadd( 5.93587, -82.9912, 37.4173, 0.23 ) }
    dend_21 { pt3dadd( 7.16776, -83.448, 37.7981, 1.14 ) }
    dend_21 { pt3dadd( 8.48043, -84.0619, 38.1968, 0.23 ) }
    dend_21 { pt3dadd( 10.1878, -85.0794, 38.7234, 0.68 ) }
    dend_21 { pt3dadd( 11.9799, -86.254, 39.1516, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 63/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -1.58743, -22.6079, 1.47176, 1.14 ) }
    dend_9 { pt3dadd( -0.845255, -24.9838, 0.834474, 1.14 ) }
    dend_9 { pt3dadd( -0.0623255, -27.4901, 0.162197, 1.14 ) }
    dend_9 { pt3dadd( 0.589139, -29.5756, -0.397195, 1.59 ) }
    dend_9 { pt3dadd( 1.36291, -32.0526, -1.0616, 2.05 ) }
    dend_9 { pt3dadd( 1.95573, -33.9503, -1.57064, 2.27 ) }
    dend_9 { pt3dadd( 2.63632, -36.129, -2.15504, 2.73 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 70/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -1.58743, -22.6079, 1.47176, 0.68 ) }
    dend_2 { pt3dadd( 1.22207, -23.4428, 2.47723, 0.68 ) }
    dend_2 { pt3dadd( 2.5769, -23.7098, 2.83587, 1.59 ) }
    dend_2 { pt3dadd( 5.06319, -23.9679, 3.29227, 1.14 ) }
    dend_2 { pt3dadd( 7.95754, -24.0898, 3.75274, 0.91 ) }
    dend_2 { pt3dadd( 9.32379, -24.1094, 3.95017, 1.14 ) }
    dend_2 { pt3dadd( 11.2977, -24.098, 4.21317, 0.68 ) }
    dend_2 { pt3dadd( 12.7811, -23.98, 4.32237, 1.59 ) }
    dend_2 { pt3dadd( 16.0124, -23.5936, 4.4617, 0.68 ) }
    dend_2 { pt3dadd( 17.5197, -23.3733, 4.48459, 1.14 ) }
    dend_2 { pt3dadd( 18.2517, -23.2842, 4.50188, 0.45 ) }
    dend_2 { pt3dadd( 19.161, -23.2069, 4.5542, 1.14 ) }
    dend_2 { pt3dadd( 20.6399, -23.1378, 4.69329, 0.45 ) }
    dend_2 { pt3dadd( 22.2444, -23.0933, 4.81901, 0.68 ) }
    dend_2 { pt3dadd( 23.5755, -23.0518, 4.83302, 1.36 ) }
    dend_2 { pt3dadd( 25.4125, -22.9524, 4.77934, 0.68 ) }
    dend_2 { pt3dadd( 26.5466, -22.8826, 4.72179, 1.14 ) }
    dend_2 { pt3dadd( 27.703, -22.8484, 4.64429, 1.14 ) }
    dend_2 { pt3dadd( 30.3613, -22.8437, 4.43119, 0.68 ) }
    dend_2 { pt3dadd( 32.7509, -22.8344, 4.27519, 0.91 ) }
    dend_2 { pt3dadd( 34.6593, -22.8197, 4.17179, 0.45 ) }
    dend_2 { pt3dadd( 36.0971, -22.8115, 4.15016, 0.91 ) }
    dend_2 { pt3dadd( 38.5869, -22.8383, 4.21038, 0.91 ) }
    dend_2 { pt3dadd( 40.2777, -22.8813, 4.32071, 0.23 ) }
    dend_2 { pt3dadd( 42.5342, -23.0045, 4.59585, 0.91 ) }
    dend_2 { pt3dadd( 43.6556, -23.0793, 4.7728, 0.91 ) }
    dend_2 { pt3dadd( 45.3635, -23.2085, 5.06884, 0.45 ) }
    dend_2 { pt3dadd( 47.1286, -23.2732, 5.4124, 0.68 ) }
    dend_2 { pt3dadd( 48.4904, -23.2718, 5.6957, 0.68 ) }
    dend_2 { pt3dadd( 50.7941, -23.3925, 6.14221, 1.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_77, id: dend_77, parent: dend_65 (entry count 0/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -42.0846, 24.4353, 10.9923, 1.14 ) }
    dend_77 { pt3dadd( -43.8895, 24.9289, 11.8906, 1.14 ) }
    dend_77 { pt3dadd( -46.4031, 25.6757, 12.9858, 0.68 ) }
    dend_77 { pt3dadd( -48.8309, 26.4401, 13.9706, 0.45 ) }
    dend_77 { pt3dadd( -50.5882, 26.9461, 14.7339, 0.68 ) }
    dend_77 { pt3dadd( -51.9309, 27.2721, 15.3437, 0.68 ) }
    dend_77 { pt3dadd( -53.2231, 27.5298, 15.9572, 0.68 ) }
    dend_77 { pt3dadd( -54.4642, 27.7691, 16.5377, 0.91 ) }
    dend_77 { pt3dadd( -56.7608, 28.213, 17.6003, 0.68 ) }
    dend_77 { pt3dadd( -58.3313, 28.3968, 18.5533, 0.68 ) }
    dend_77 { pt3dadd( -59.4569, 28.3888, 19.3755, 0.68 ) }
    dend_77 { pt3dadd( -60.161, 28.2967, 19.984, 0.68 ) }
    dend_77 { pt3dadd( -60.8016, 28.1201, 20.6232, 0.68 ) }
    dend_77 { pt3dadd( -61.524, 27.7623, 21.6437, 0.68 ) }
    dend_77 { pt3dadd( -61.819, 27.1687, 22.6586, 0.68 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 15/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -42.0846, 24.4353, 10.9923, 1.14 ) }
    dend_66 { pt3dadd( -44.9542, 24.4024, 10.9554, 1.14 ) }
    dend_66 { pt3dadd( -47.8012, 24.338, 10.8161, 0.68 ) }
    dend_66 { pt3dadd( -49.4056, 24.27, 10.7005, 1.14 ) }
    dend_66 { pt3dadd( -52.3077, 24.0611, 10.4617, 0.45 ) }
    dend_66 { pt3dadd( -54.9859, 23.7804, 10.2147, 0.68 ) }
    dend_66 { pt3dadd( -57.0618, 23.5193, 10.047, 1.14 ) }
    dend_66 { pt3dadd( -58.9639, 23.238, 9.91516, 1.59 ) }
    dend_66 { pt3dadd( -60.5638, 22.9294, 9.80669, 0.68 ) }
    dend_66 { pt3dadd( -62.4108, 22.4694, 9.721, 0.68 ) }
    dend_66 { pt3dadd( -64.2611, 21.9117, 9.65296, 0.68 ) }
    dend_66 { pt3dadd( -65.6617, 21.4312, 9.67833, 0.68 ) }
    dend_66 { pt3dadd( -67.0068, 20.9439, 9.77241, 0.68 ) }
    dend_66 { pt3dadd( -68.6992, 20.3138, 9.99339, 0.68 ) }
    dend_66 { pt3dadd( -70.0296, 19.8369, 10.2313, 0.68 ) }
    // Section: dend_64, id: dend_64, parent: dend_50 (entry count 30/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -16.3157, 30.709, 7.22932, 0.45 ) }
    dend_64 { pt3dadd( -17.4075, 31.3651, 6.50345, 0.45 ) }
    dend_64 { pt3dadd( -19.1197, 32.741, 5.37399, 0.91 ) }
    dend_64 { pt3dadd( -19.984, 33.5234, 4.83345, 0.23 ) }
    dend_64 { pt3dadd( -21.4881, 34.9044, 3.93522, 0.91 ) }
    dend_64 { pt3dadd( -23.0513, 36.2892, 3.07649, 0.23 ) }
    dend_64 { pt3dadd( -24.6083, 37.6385, 2.28709, 0.23 ) }
    dend_64 { pt3dadd( -25.8385, 38.7412, 1.74238, 0.23 ) }
    dend_64 { pt3dadd( -27.2835, 40.0941, 1.24345, 0.23 ) }
    dend_64 { pt3dadd( -27.7896, 40.5512, 1.10983, 0.23 ) }
    dend_64 { pt3dadd( -29.4505, 41.9409, 0.829543, 0.91 ) }
    dend_64 { pt3dadd( -31.2314, 43.2773, 0.639418, 0.23 ) }
    dend_64 { pt3dadd( -32.5438, 44.2057, 0.550804, 1.14 ) }
    dend_64 { pt3dadd( -35.051, 45.9052, 0.436964, 0.23 ) }
    dend_64 { pt3dadd( -36.5325, 46.9623, 0.396284, 0.23 ) }
    dend_64 { pt3dadd( -38.011, 48.0705, 0.368061, 0.68 ) }
    dend_64 { pt3dadd( -39.0293, 48.8805, 0.360788, 0.68 ) }
    dend_64 { pt3dadd( -40.0621, 49.7233, 0.371593, 0.68 ) }
    dend_64 { pt3dadd( -41.178, 50.7017, 0.420495, 0.68 ) }
    dend_64 { pt3dadd( -42.5121, 51.924, 0.520653, 0.23 ) }
    dend_64 { pt3dadd( -42.8971, 52.2888, 0.557545, 1.14 ) }
    dend_64 { pt3dadd( -44.3199, 53.6064, 0.700808, 1.14 ) }
    dend_64 { pt3dadd( -45.8299, 54.9423, 0.910163, 0.23 ) }
    dend_64 { pt3dadd( -46.8673, 55.8455, 0.996151, 0.23 ) }
    dend_64 { pt3dadd( -47.7138, 56.5445, 1.00639, 0.23 ) }
    dend_64 { pt3dadd( -49.2502, 57.7396, 0.885794, 0.91 ) }
    dend_64 { pt3dadd( -50.8368, 58.9392, 0.589158, 0.91 ) }
    dend_64 { pt3dadd( -52.4286, 60.1368, 0.068441, 0.68 ) }
    dend_64 { pt3dadd( -54.3456, 61.7151, -0.833536, 0.23 ) }
    dend_64 { pt3dadd( -55.5468, 62.9205, -1.57437, 0.91 ) }
    dend_64 { pt3dadd( -56.3496, 64.0179, -2.25055, 0.23 ) }
    dend_64 { pt3dadd( -56.8383, 64.9904, -2.80506, 0.23 ) }
    dend_64 { pt3dadd( -57.279, 66.2857, -3.47212, 0.23 ) }
    dend_64 { pt3dadd( -57.6746, 67.7832, -4.14807, 0.91 ) }
    dend_64 { pt3dadd( -58.1667, 70.4978, -5.12927, 0.23 ) }
    dend_64 { pt3dadd( -58.512, 73.1552, -5.90714, 0.23 ) }
    dend_64 { pt3dadd( -58.7379, 75.1025, -6.29901, 0.68 ) }
    dend_64 { pt3dadd( -58.8426, 76.054, -6.4174, 0.23 ) }
    dend_64 { pt3dadd( -59.0167, 77.6482, -6.51457, 0.23 ) }
    dend_64 { pt3dadd( -59.1496, 79.0571, -6.53211, 0.23 ) }
    dend_64 { pt3dadd( -59.2361, 80.1885, -6.47759, 0.23 ) }
    dend_64 { pt3dadd( -59.3081, 82.2101, -6.22415, 0.68 ) }
    dend_64 { pt3dadd( -59.3335, 84.1901, -5.93724, 0.23 ) }
    dend_64 { pt3dadd( -59.3308, 85.2773, -5.76648, 0.23 ) }
    dend_64 { pt3dadd( -59.238, 86.9325, -5.48928, 0.68 ) }
    dend_64 { pt3dadd( -65.1174, 94.6466, -7.92342, 0.68 ) }
    dend_64 { pt3dadd( -71.8768, 101.67, -10.1572, 0.68 ) }
    dend_64 { pt3dadd( -79.3834, 107.537, -13.1947, 0.68 ) }
    dend_64 { pt3dadd( -86.5735, 113.502, -16.761, 0.68 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 79/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -16.3157, 30.709, 7.22932, 0.68 ) }
    dend_51 { pt3dadd( -18.5348, 31.4603, 7.10802, 0.68 ) }
    dend_51 { pt3dadd( -19.6422, 31.8116, 6.94835, 1.14 ) }
    dend_51 { pt3dadd( -21.3426, 32.4366, 6.57199, 0.23 ) }
    dend_51 { pt3dadd( -23.8778, 33.5681, 5.87529, 0.45 ) }
    dend_51 { pt3dadd( -26.0366, 34.7018, 5.23985, 0.45 ) }
    dend_51 { pt3dadd( -27.4654, 35.5287, 4.81429, 1.14 ) }
    dend_51 { pt3dadd( -29.1632, 36.6911, 4.22853, 0.23 ) }
    dend_51 { pt3dadd( -31.2752, 38.2972, 3.49787, 0.45 ) }
    dend_51 { pt3dadd( -33.5907, 40.2134, 2.63856, 1.14 ) }
    dend_51 { pt3dadd( -35.11, 41.5579, 2.04976, 0.68 ) }
    dend_51 { pt3dadd( -36.1276, 42.5437, 1.70064, 0.68 ) }
    dend_51 { pt3dadd( -37.2654, 43.7547, 1.38301, 1.36 ) }
    dend_51 { pt3dadd( -37.747, 44.3382, 1.29002, 1.82 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 93/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -16.1831, 57.3561, -3.90351, 0.68 ) }
    dend_41 { pt3dadd( -15.6021, 60.1515, -4.73631, 0.68 ) }
    dend_41 { pt3dadd( -15.3201, 61.7555, -5.24038, 0.68 ) }
    dend_41 { pt3dadd( -15.0044, 63.7836, -5.84124, 0.68 ) }
    dend_41 { pt3dadd( -14.8042, 65.0695, -6.22223, 0.68 ) }
    dend_41 { pt3dadd( -14.5533, 66.6808, -6.69959, 0.23 ) }
    dend_41 { pt3dadd( -14.3173, 68.1965, -7.14865, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( -14.0292, 69.3004, -7.60731, 1.14 ) }
    dend_41 { pt3dadd( -13.7893, 70.1359, -7.99164, 1.14 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 2/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -16.1831, 57.3561, -3.90351, 0.23 ) }
    dend_34 { pt3dadd( -16.4772, 57.0028, -4.8758, 0.23 ) }
    dend_34 { pt3dadd( -16.6401, 56.7105, -6.06046, 0.45 ) }
    dend_34 { pt3dadd( -16.6665, 56.5696, -7.55861, 0.45 ) }
    dend_34 { pt3dadd( -16.5569, 56.6654, -8.85942, 0.45 ) }
    dend_34 { pt3dadd( -16.1002, 57.2054, -11.0572, 0.45 ) }
    dend_34 { pt3dadd( -15.7956, 57.5655, -12.5229, 0.23 ) }
    dend_34 { pt3dadd( -15.4027, 58.2659, -14.2338, 0.23 ) }
    dend_34 { pt3dadd( -14.976, 59.0471, -15.3393, 0.23 ) }
    dend_34 { pt3dadd( -14.4081, 59.9187, -16.1617, 0.23 ) }
    dend_34 { pt3dadd( -13.8363, 60.6543, -16.6854, 0.23 ) }
    dend_34 { pt3dadd( -11.433, 64.7554, -25.4834, 0.23 ) }
    dend_34 { pt3dadd( -9.41263, 69.5809, -34.0059, 0.23 ) }
    dend_34 { pt3dadd( -8.42848, 72.7974, -43.4232, 0.23 ) }
    dend_34 { pt3dadd( -6.96032, 75.2865, -52.9965, 0.23 ) }
    dend_34 { pt3dadd( -7.16504, 77.9812, -62.6245, 0.23 ) }
    dend_34 { pt3dadd( -8.40032, 81.5844, -71.8706, 0.23 ) }
    dend_34 { pt3dadd( -9.96984, 84.3087, -81.3634, 0.23 ) }
    dend_34 { pt3dadd( -11.5445, 85.9447, -91.1022, 0.23 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 21/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -14.2573, -69.2851, 14.9969, 0.45 ) }
    dend_28 { pt3dadd( -14.6938, -70.683, 15.3139, 0.45 ) }
    dend_28 { pt3dadd( -15.4593, -73.6256, 15.7361, 0.23 ) }
    dend_28 { pt3dadd( -15.8313, -75.094, 15.8409, 0.68 ) }
    dend_28 { pt3dadd( -16.1815, -76.4816, 15.8903, 0.68 ) }
    dend_28 { pt3dadd( -16.8361, -79.0352, 15.9324, 0.23 ) }
    dend_28 { pt3dadd( -17.3425, -81.0241, 15.9421, 0.23 ) }
    dend_28 { pt3dadd( -17.7819, -82.8163, 15.8538, 0.91 ) }
    dend_28 { pt3dadd( -18.3243, -84.8877, 15.6427, 0.23 ) }
    dend_28 { pt3dadd( -18.8471, -86.3859, 15.5534, 0.91 ) }
    dend_28 { pt3dadd( -19.3293, -87.6201, 15.5015, 0.23 ) }
    dend_28 { pt3dadd( -19.9309, -88.9978, 15.4951, 0.91 ) }
    dend_28 { pt3dadd( -20.9508, -91.0688, 15.5213, 0.23 ) }
    dend_28 { pt3dadd( -21.5655, -92.2044, 15.5734, 0.23 ) }
    dend_28 { pt3dadd( -23.4382, -95.3762, 15.9214, 1.14 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 36/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -14.2573, -69.2851, 14.9969, 0.45 ) }
    dend_27 { pt3dadd( -13.9767, -71.9452, 15.0647, 0.45 ) }
    dend_27 { pt3dadd( -13.899, -73.3867, 15.0949, 0.45 ) }
    dend_27 { pt3dadd( -13.8419, -75.0756, 15.1257, 0.45 ) }
    dend_27 { pt3dadd( -13.7624, -77.3789, 15.1625, 0.91 ) }
    dend_27 { pt3dadd( -13.6885, -79.3916, 15.1917, 0.91 ) }
    dend_27 { pt3dadd( -13.6354, -81.1116, 15.2359, 0.23 ) }
    dend_27 { pt3dadd( -13.6605, -82.9384, 15.3407, 0.23 ) }
    dend_27 { pt3dadd( -13.6855, -83.7886, 15.4088, 0.23 ) }
    dend_27 { pt3dadd( -13.7519, -85.2181, 15.5592, 0.91 ) }
    dend_27 { pt3dadd( -13.788, -85.7902, 15.6387, 0.91 ) }
    dend_27 { pt3dadd( -13.958, -88.4726, 16.0584, 0.23 ) }
    dend_27 { pt3dadd( -14.0607, -90.8534, 16.4335, 0.68 ) }
    dend_27 { pt3dadd( -14.0569, -91.4584, 16.5248, 0.23 ) }
    dend_27 { pt3dadd( -13.9914, -93.0295, 16.7364, 1.14 ) }
    dend_27 { pt3dadd( -13.8499, -95.3631, 17.0056, 0.23 ) }
    dend_27 { pt3dadd( -13.7109, -96.8542, 17.1647, 0.91 ) }
    dend_27 { pt3dadd( -13.4275, -99.1231, 17.3634, 0.23 ) }
    dend_27 { pt3dadd( -13.1989, -100.791, 17.4032, 0.68 ) }
    dend_27 { pt3dadd( -12.8914, -102.78, 17.3801, 0.23 ) }
    dend_27 { pt3dadd( -12.5922, -104.33, 17.31, 1.36 ) }
    dend_27 { pt3dadd( -12.1641, -106.435, 17.1021, 0.45 ) }
    dend_27 { pt3dadd( -11.8056, -108.158, 16.8639, 1.14 ) }
    dend_27 { pt3dadd( -11.235, -110.822, 16.3457, 0.23 ) }
    dend_27 { pt3dadd( -10.9235, -112.197, 15.994, 0.23 ) }
    dend_27 { pt3dadd( -10.608, -113.379, 15.6018, 0.23 ) }
    dend_27 { pt3dadd( -10.3548, -114.348, 15.2441, 0.23 ) }
    dend_27 { pt3dadd( -9.93055, -116.225, 14.5106, 0.23 ) }
    dend_27 { pt3dadd( -9.68364, -117.588, 14.0452, 1.14 ) }
    dend_27 { pt3dadd( -9.55323, -118.898, 13.6829, 1.14 ) }
    dend_27 { pt3dadd( -9.51601, -121.312, 13.0727, 0.23 ) }
    dend_27 { pt3dadd( -9.60447, -123.441, 12.5725, 0.23 ) }
    dend_27 { pt3dadd( -9.65438, -124.153, 12.4466, 0.91 ) }
    dend_27 { pt3dadd( -9.81171, -126.141, 12.1719, 0.23 ) }
    dend_27 { pt3dadd( -9.92799, -127.904, 12.0072, 0.23 ) }
    dend_27 { pt3dadd( -9.991, -129.392, 11.9196, 0.91 ) }
    dend_27 { pt3dadd( -10.0246, -131.026, 11.8684, 0.91 ) }
    dend_27 { pt3dadd( -10.04, -133.875, 11.8012, 0.23 ) }
    dend_27 { pt3dadd( -10.0636, -135.718, 11.7732, 0.68 ) }
    dend_27 { pt3dadd( -10.1124, -138.056, 11.7195, 0.23 ) }
    dend_27 { pt3dadd( -10.1489, -139.216, 11.7028, 0.68 ) }
    dend_27 { pt3dadd( -10.2764, -141.515, 11.6678, 0.23 ) }
    dend_27 { pt3dadd( -10.4351, -143.56, 11.6368, 0.45 ) }
    dend_27 { pt3dadd( -10.5278, -144.531, 11.5902, 0.23 ) }
    dend_27 { pt3dadd( -10.9347, -147.783, 11.4395, 1.14 ) }
    dend_27 { pt3dadd( -11.305, -150.528, 11.358, 0.23 ) }
    dend_27 { pt3dadd( -11.4062, -151.494, 11.3454, 0.91 ) }
    dend_27 { pt3dadd( -11.4237, -152.357, 11.3401, 0.91 ) }
    dend_27 { pt3dadd( -11.3436, -154.791, 11.3164, 0.23 ) }
    dend_27 { pt3dadd( -11.2109, -156.822, 11.2726, 0.23 ) }
    dend_27 { pt3dadd( -11.0625, -158.518, 11.2069, 0.23 ) }
    dend_27 { pt3dadd( -10.8589, -160.232, 11.092, 0.68 ) }
    dend_27 { pt3dadd( -10.3828, -163.644, 10.8288, 0.23 ) }
    dend_27 { pt3dadd( -10.1556, -165.052, 10.7104, 0.23 ) }
    dend_27 { pt3dadd( -9.67086, -167.663, 10.4616, 0.45 ) }
    dend_27 { pt3dadd( -9.18895, -169.971, 10.1525, 0.23 ) }
    dend_27 { pt3dadd( -8.89227, -171.427, 9.92791, 0.23 ) }
    dend_27 { pt3dadd( -8.5859, -173.101, 9.67436, 0.45 ) }
    dend_27 { pt3dadd( -8.34528, -174.571, 9.47435, 0.45 ) }
    dend_27 { pt3dadd( -7.72578, -177.956, 9.06018, 0.45 ) }
    dend_27 { pt3dadd( -7.45281, -179.558, 8.87963, 0.91 ) }
    dend_27 { pt3dadd( -7.23232, -181.037, 8.72495, 0.23 ) }
    dend_27 { pt3dadd( -7.11975, -182.185, 8.60167, 0.68 ) }
    dend_27 { pt3dadd( -7.03483, -184.174, 8.39708, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_27 { pt3dadd( -7.03326, -186.193, 8.21135, 0.23 ) }
    dend_27 { pt3dadd( -7.04626, -187.879, 8.08962, 0.23 ) }
    dend_27 { pt3dadd( -7.01981, -189.299, 8.01054, 0.23 ) }
    dend_27 { pt3dadd( -6.92241, -191.808, 7.84202, 0.23 ) }
    dend_27 { pt3dadd( -6.87433, -193.733, 7.6809, 0.68 ) }
    dend_27 { pt3dadd( -6.86286, -194.87, 7.52499, 0.68 ) }
    dend_27 { pt3dadd( -6.86669, -196.683, 7.2287, 0.68 ) }
    dend_27 { pt3dadd( -6.85422, -198.497, 6.9173, 0.68 ) }
    dend_27 { pt3dadd( -6.82951, -200.826, 6.51532, 0.68 ) }
    dend_27 { pt3dadd( -6.69048, -204.856, 5.83496, 0.23 ) }
    dend_27 { pt3dadd( -6.39237, -209.092, 5.12982, 0.23 ) }
    dend_27 { pt3dadd( -6.18438, -211.171, 4.79453, 0.45 ) }
    dend_27 { pt3dadd( -5.63677, -214.804, 4.24721, 0.45 ) }
    dend_27 { pt3dadd( -5.27239, -216.467, 4.03015, 0.45 ) }
    dend_27 { pt3dadd( -4.67912, -218.3, 3.87911, 0.45 ) }
    dend_27 { pt3dadd( -3.76607, -220.247, 3.85831, 0.45 ) }
    dend_27 { pt3dadd( -3.16296, -221.328, 3.92967, 0.68 ) }
    dend_27 { pt3dadd( -1.88361, -223.544, 4.11767, 0.23 ) }
    dend_27 { pt3dadd( -1.03153, -225.024, 4.26585, 0.45 ) }
    dend_27 { pt3dadd( -0.178784, -226.673, 4.45216, 0.45 ) }
    dend_27 { pt3dadd( 0.767736, -228.833, 4.64509, 0.45 ) }
    dend_27 { pt3dadd( 1.65306, -231.253, 4.7713, 0.91 ) }
    dend_27 { pt3dadd( 2.18324, -232.948, 4.7866, 0.23 ) }
    dend_27 { pt3dadd( 2.57583, -234.482, 4.73974, 0.68 ) }
    dend_27 { pt3dadd( 3.07584, -236.764, 4.64013, 0.23 ) }
    dend_27 { pt3dadd( 3.51752, -239.302, 4.4871, 0.68 ) }
    dend_27 { pt3dadd( 3.74984, -241.117, 4.40257, 0.68 ) }
    dend_27 { pt3dadd( 4.0317, -243.165, 4.37786, 0.91 ) }
    dend_27 { pt3dadd( 4.33307, -244.988, 4.46057, 0.91 ) }
    dend_27 { pt3dadd( 4.77683, -247.698, 4.74757, 0.23 ) }
    dend_27 { pt3dadd( 4.99797, -249.149, 5.02391, 0.68 ) }
    dend_27 { pt3dadd( 5.22371, -250.762, 5.49876, 0.23 ) }
    dend_27 { pt3dadd( 5.5243, -252.622, 6.25057, 0.68 ) }
    dend_27 { pt3dadd( 5.93891, -254.385, 7.16665, 0.23 ) }
    dend_27 { pt3dadd( 6.31487, -255.696, 7.98229, 0.91 ) }
    dend_27 { pt3dadd( 6.67503, -256.957, 8.81298, 0.23 ) }
    dend_27 { pt3dadd( 6.82085, -257.554, 9.20654, 0.68 ) }
    dend_27 { pt3dadd( 7.14702, -259.073, 10.1486, 0.45 ) }
    dend_27 { pt3dadd( 7.54392, -260.737, 11.1094, 0.45 ) }
    dend_27 { pt3dadd( 8.51591, -263.598, 12.7676, 1.14 ) }
    dend_27 { pt3dadd( 9.18478, -265.046, 13.591, 0.23 ) }
    dend_27 { pt3dadd( 9.62201, -265.823, 13.992, 0.91 ) }
    dend_27 { pt3dadd( 10.9327, -267.901, 14.9794, 0.23 ) }
    dend_27 { pt3dadd( 12.0266, -269.601, 15.7066, 0.68 ) }
    dend_27 { pt3dadd( 13.2891, -271.388, 16.4321, 0.23 ) }
    dend_27 { pt3dadd( 14.3048, -272.509, 16.8758, 0.91 ) }
    dend_27 { pt3dadd( 16.0951, -274.215, 17.5998, 0.23 ) }
    dend_27 { pt3dadd( 16.7435, -274.78, 17.8489, 0.68 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 48/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 11.9799, -86.254, 39.1516, 0.68 ) }
    dend_25 { pt3dadd( 10.9776, -87.7871, 40.2955, 0.68 ) }
    dend_25 { pt3dadd( 10.0294, -89.3538, 41.3932, 0.23 ) }
    dend_25 { pt3dadd( 9.4688, -90.2562, 42.0215, 0.68 ) }
    dend_25 { pt3dadd( 8.52303, -91.879, 43.0799, 0.23 ) }
    dend_25 { pt3dadd( 7.90063, -93.0347, 43.8648, 0.68 ) }
    dend_25 { pt3dadd( 7.17956, -94.421, 44.8401, 0.23 ) }
    dend_25 { pt3dadd( 6.76543, -95.227, 45.3954, 0.91 ) }
    dend_25 { pt3dadd( 6.22719, -96.2457, 46.0877, 0.23 ) }
    dend_25 { pt3dadd( 5.64226, -97.3138, 46.8379, 0.91 ) }
    dend_25 { pt3dadd( 4.45679, -99.3907, 48.4072, 0.23 ) }
    dend_25 { pt3dadd( 3.6503, -100.789, 49.5497, 0.23 ) }
    dend_25 { pt3dadd( 3.10318, -101.726, 50.369, 0.91 ) }
    dend_25 { pt3dadd( 2.54582, -102.596, 51.1498, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 62/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 11.9799, -86.254, 39.1516, 0.23 ) }
    dend_22 { pt3dadd( 13.1882, -85.7431, 39.7829, 0.23 ) }
    dend_22 { pt3dadd( 14.7814, -84.9321, 41.0599, 0.91 ) }
    dend_22 { pt3dadd( 16.0258, -84.2171, 42.4654, 0.23 ) }
    dend_22 { pt3dadd( 17.5829, -83.3877, 44.5375, 0.91 ) }
    dend_22 { pt3dadd( 19.1954, -82.6149, 46.9323, 0.23 ) }
    dend_22 { pt3dadd( 19.7579, -82.3938, 47.831, 0.68 ) }
    dend_22 { pt3dadd( 21.0096, -81.9763, 50.4449, 0.23 ) }
    dend_22 { pt3dadd( 21.8218, -81.7636, 52.926, 0.23 ) }
    dend_22 { pt3dadd( 22.308, -81.7292, 55.0618, 0.23 ) }
    dend_22 { pt3dadd( 22.524, -81.8004, 56.261, 0.23 ) }
    dend_22 { pt3dadd( 22.8567, -82.0928, 57.7428, 0.23 ) }
    dend_22 { pt3dadd( 23.1198, -82.4496, 58.6722, 0.23 ) }
    dend_22 { pt3dadd( 23.8503, -83.5988, 60.477, 0.23 ) }
    dend_22 { pt3dadd( 24.2238, -84.2011, 61.164, 0.23 ) }
    dend_22 { pt3dadd( 24.9343, -85.286, 62.1632, 0.23 ) }
    dend_22 { pt3dadd( 26.2732, -87.2614, 63.7188, 0.23 ) }
    dend_22 { pt3dadd( 27.1732, -88.5428, 64.6026, 0.91 ) }
    dend_22 { pt3dadd( 28.1501, -90.0661, 65.4746, 0.23 ) }
    dend_22 { pt3dadd( 28.7661, -91.2276, 66.0051, 0.91 ) }
    dend_22 { pt3dadd( 29.811, -94.0049, 67.1505, 0.23 ) }
    dend_22 { pt3dadd( 30.015, -94.7974, 67.4796, 0.23 ) }
    dend_22 { pt3dadd( 30.1176, -95.4651, 67.7359, 0.23 ) }
    dend_22 { pt3dadd( 30.3465, -97.7373, 68.5415, 0.91 ) }
    dend_22 { pt3dadd( 30.4469, -100.671, 69.44, 0.23 ) }
    dend_22 { pt3dadd( 30.3442, -102.878, 70.102, 0.23 ) }
    dend_22 { pt3dadd( 30.1742, -104.226, 70.4702, 0.23 ) }
    dend_22 { pt3dadd( 30.0147, -105.361, 70.8086, 0.68 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 90/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 2.63632, -36.129, -2.15504, 1.14 ) }
    dend_13 { pt3dadd( 2.34426, -38.7431, -1.96124, 1.14 ) }
    dend_13 { pt3dadd( 2.09183, -41.3781, -1.87118, 1.14 ) }
    dend_13 { pt3dadd( 1.9041, -44.0743, -1.86471, 0.91 ) }
    dend_13 { pt3dadd( 1.78348, -45.8351, -1.93711, 1.36 ) }
    dend_13 { pt3dadd( 1.67432, -47.6533, -2.13211, 1.36 ) }
    dend_13 { pt3dadd( 1.59343, -49.3609, -2.40629, 0.91 ) }
    dend_13 { pt3dadd( 1.58641, -51.1492, -2.82518, 0.91 ) }
    dend_13 { pt3dadd( 1.63584, -52.576, -3.20084, 1.59 ) }
    dend_13 { pt3dadd( 1.82787, -55.1892, -3.8565, 1.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_13 { pt3dadd( 2.08028, -58.044, -4.43572, 0.68 ) }
    dend_13 { pt3dadd( 2.3166, -60.776, -4.7905, 0.91 ) }
    dend_13 { pt3dadd( 2.5643, -63.6467, -4.97521, 1.59 ) }
    dend_13 { pt3dadd( 2.76434, -65.9594, -5.02182, 1.59 ) }
    dend_13 { pt3dadd( 2.9709, -68.1006, -5.01937, 1.59 ) }
    dend_13 { pt3dadd( 3.45053, -71.8141, -4.97861, 1.36 ) }
    dend_13 { pt3dadd( 4.15017, -75.9467, -4.94549, 1.36 ) }
    dend_13 { pt3dadd( 4.97068, -79.9132, -5.01813, 1.14 ) }
    dend_13 { pt3dadd( 5.52965, -82.2045, -5.13092, 1.14 ) }
    dend_13 { pt3dadd( 6.22176, -84.7415, -5.33278, 1.14 ) }
    dend_13 { pt3dadd( 6.95708, -87.2858, -5.61158, 1.14 ) }
    dend_13 { pt3dadd( 8.01812, -90.9328, -6.11384, 0.68 ) }
    dend_13 { pt3dadd( 8.49158, -92.6725, -6.3863, 0.68 ) }
    dend_13 { pt3dadd( 9.2088, -95.5949, -6.82331, 1.14 ) }
    dend_13 { pt3dadd( 9.86217, -98.7182, -7.19597, 0.91 ) }
    dend_13 { pt3dadd( 10.415, -101.903, -7.43243, 0.91 ) }
    dend_13 { pt3dadd( 10.7325, -103.934, -7.51821, 1.14 ) }
    dend_13 { pt3dadd( 10.9487, -105.619, -7.57459, 1.14 ) }
    dend_13 { pt3dadd( 11.1662, -107.302, -7.62838, 1.14 ) }
    dend_13 { pt3dadd( 11.727, -111.04, -7.78586, 1.14 ) }
    dend_13 { pt3dadd( 12.5414, -114.795, -7.89639, 1.59 ) }
    dend_13 { pt3dadd( 13.4633, -117.867, -7.89853, 1.59 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 22/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 2.63632, -36.129, -2.15504, 0.45 ) }
    dend_10 { pt3dadd( 3.10971, -37.88, -2.83839, 0.45 ) }
    dend_10 { pt3dadd( 3.49845, -39.1863, -3.28785, 0.45 ) }
    dend_10 { pt3dadd( 4.12202, -40.7375, -3.69222, 0.45 ) }
    dend_10 { pt3dadd( 4.38491, -41.2446, -3.7853, 0.45 ) }
    dend_10 { pt3dadd( 4.66411, -41.7303, -3.88355, 0.45 ) }
    dend_10 { pt3dadd( 4.96521, -42.2495, -4.02188, 0.45 ) }
    dend_10 { pt3dadd( 5.42058, -43.0846, -4.25235, 0.45 ) }
    dend_10 { pt3dadd( 6.43433, -45.0679, -4.8292, 0.91 ) }
    dend_10 { pt3dadd( 7.55487, -47.3641, -5.56376, 0.23 ) }
    dend_10 { pt3dadd( 8.28142, -49.0323, -6.18938, 1.14 ) }
    dend_10 { pt3dadd( 8.89847, -50.7129, -6.86831, 0.23 ) }
    dend_10 { pt3dadd( 9.19531, -51.5318, -7.22014, 0.23 ) }
    dend_10 { pt3dadd( 9.74769, -52.8965, -7.85823, 0.23 ) }
    dend_10 { pt3dadd( 10.0674, -53.5891, -8.24008, 0.23 ) }
    dend_10 { pt3dadd( 10.5823, -54.4818, -8.77549, 0.23 ) }
    dend_10 { pt3dadd( 11.2304, -55.3778, -9.27171, 0.23 ) }
    dend_10 { pt3dadd( 13.0359, -57.3814, -10.3195, 0.23 ) }
    dend_10 { pt3dadd( 14.0561, -58.3757, -10.8518, 0.91 ) }
    dend_10 { pt3dadd( 15.3161, -59.4657, -11.4429, 0.68 ) }
    dend_10 { pt3dadd( 16.1332, -60.1164, -11.7956, 0.91 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 43/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 50.7941, -23.3925, 6.14221, 0.23 ) }
    dend_8 { pt3dadd( 50.7772, -24.0042, 6.17698, 0.23 ) }
    dend_8 { pt3dadd( 50.6059, -26.5754, 6.30937, 0.45 ) }
    dend_8 { pt3dadd( 50.5158, -27.8645, 6.40324, 0.68 ) }
    dend_8 { pt3dadd( 50.4025, -29.5618, 6.53932, 0.23 ) }
    dend_8 { pt3dadd( 50.3671, -30.4471, 6.62891, 0.68 ) }
    dend_8 { pt3dadd( 50.3002, -32.5786, 6.86115, 0.23 ) }
    dend_8 { pt3dadd( 50.3076, -33.1434, 6.92847, 0.45 ) }
    dend_8 { pt3dadd( 50.4524, -34.9446, 7.13003, 1.36 ) }
    dend_8 { pt3dadd( 50.7207, -36.3551, 7.24257, 1.36 ) }
    dend_8 { pt3dadd( 51.321, -38.3755, 7.30934, 0.23 ) }
    dend_8 { pt3dadd( 51.7471, -39.5331, 7.3164, 0.68 ) }
    dend_8 { pt3dadd( 52.4408, -41.1612, 7.28773, 0.23 ) }
    dend_8 { pt3dadd( 52.9083, -42.244, 7.24203, 0.23 ) }
    dend_8 { pt3dadd( 53.6852, -44.0368, 7.10886, 0.68 ) }
    dend_8 { pt3dadd( 54.7237, -46.4444, 6.97612, 0.23 ) }
    dend_8 { pt3dadd( 55.3036, -47.8285, 6.9214, 0.23 ) }
    dend_8 { pt3dadd( 55.5647, -48.5148, 6.92571, 0.45 ) }
    dend_8 { pt3dadd( 55.9249, -49.6282, 6.98635, 0.23 ) }
    dend_8 { pt3dadd( 56.1212, -50.2068, 7.04596, 0.91 ) }
    dend_8 { pt3dadd( 56.7534, -51.7209, 7.25297, 0.23 ) }
    dend_8 { pt3dadd( 57.1159, -52.3464, 7.35431, 0.68 ) }
    dend_8 { pt3dadd( 58.1466, -53.7018, 7.55632, 0.23 ) }
    dend_8 { pt3dadd( 59.0518, -54.6699, 7.68904, 0.91 ) }
    dend_8 { pt3dadd( 60.4001, -55.8822, 7.8508, 0.23 ) }
    dend_8 { pt3dadd( 61.2784, -56.5033, 7.90414, 0.68 ) }
    dend_8 { pt3dadd( 62.1084, -56.9524, 7.90842, 0.23 ) }
    dend_8 { pt3dadd( 62.7344, -57.2195, 7.9089, 0.91 ) }
    dend_8 { pt3dadd( 63.7737, -57.5729, 7.89029, 0.23 ) }
    dend_8 { pt3dadd( 64.8832, -57.9483, 7.83202, 0.45 ) }
    dend_8 { pt3dadd( 66.9194, -58.6873, 7.75271, 0.23 ) }
    dend_8 { pt3dadd( 68.7717, -59.4707, 7.76129, 0.68 ) }
    dend_8 { pt3dadd( 69.6387, -59.8761, 7.78916, 0.23 ) }
    dend_8 { pt3dadd( 71.8994, -60.9718, 7.90681, 0.23 ) }
    dend_8 { pt3dadd( 73.1393, -61.6265, 7.99373, 1.14 ) }
    dend_8 { pt3dadd( 74.9651, -62.7063, 8.15524, 0.23 ) }
    dend_8 { pt3dadd( 76.283, -63.7078, 8.3582, 0.23 ) }
    dend_8 { pt3dadd( 77.6895, -65.1079, 8.70354, 1.14 ) }
    dend_8 { pt3dadd( 78.1456, -65.6827, 8.85648, 0.23 ) }
    dend_8 { pt3dadd( 79.0642, -67.0931, 9.25621, 0.68 ) }
    dend_8 { pt3dadd( 79.3687, -67.6005, 9.40661, 0.68 ) }
    dend_8 { pt3dadd( 80.3986, -69.4951, 9.89758, 0.23 ) }
    dend_8 { pt3dadd( 81.2719, -71.1628, 10.3167, 0.45 ) }
    dend_8 { pt3dadd( 81.9479, -72.5382, 10.6858, 0.23 ) }
    dend_8 { pt3dadd( 82.3107, -73.3258, 10.894, 0.45 ) }
    dend_8 { pt3dadd( 82.9091, -74.6402, 11.2325, 0.23 ) }
    dend_8 { pt3dadd( 83.2043, -75.2792, 11.4258, 0.68 ) }
    dend_8 { pt3dadd( 84.3798, -77.9451, 12.3262, 0.23 ) }
    dend_8 { pt3dadd( 84.5634, -78.444, 12.5285, 0.68 ) }
    dend_8 { pt3dadd( 84.9015, -79.8711, 13.1903, 0.23 ) }
    dend_8 { pt3dadd( 85.0072, -80.6397, 13.5686, 0.68 ) }
    dend_8 { pt3dadd( 85.2538, -83.3371, 14.9225, 0.23 ) }
    dend_8 { pt3dadd( 85.3837, -84.4797, 15.5456, 0.45 ) }
    dend_8 { pt3dadd( 85.7059, -86.1937, 16.5165, 0.23 ) }
    dend_8 { pt3dadd( 86.1766, -87.5059, 17.2876, 0.23 ) }
    dend_8 { pt3dadd( 86.4468, -87.9866, 17.5689, 0.23 ) }
    dend_8 { pt3dadd( 87.7395, -89.7053, 18.5024, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_8 { pt3dadd( 89.3782, -91.443, 19.3063, 0.23 ) }
    dend_8 { pt3dadd( 90.6961, -92.595, 19.8062, 0.68 ) }
    dend_8 { pt3dadd( 92.6684, -94.0932, 20.4049, 0.23 ) }
    dend_8 { pt3dadd( 93.9892, -94.9577, 20.766, 0.68 ) }
    dend_8 { pt3dadd( 95.3634, -95.7253, 21.1042, 0.23 ) }
    dend_8 { pt3dadd( 96.3298, -96.1882, 21.3104, 0.68 ) }
    dend_8 { pt3dadd( 97.4983, -96.6545, 21.4978, 0.23 ) }
    dend_8 { pt3dadd( 97.9973, -96.8284, 21.5684, 0.45 ) }
    dend_8 { pt3dadd( 99.3998, -97.271, 21.6624, 0.23 ) }
    dend_8 { pt3dadd( 100.281, -97.5022, 21.744, 0.91 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 10/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 50.7941, -23.3925, 6.14221, 0.91 ) }
    dend_3 { pt3dadd( 52.5946, -23.5446, 5.77539, 0.91 ) }
    dend_3 { pt3dadd( 54.6053, -23.6133, 5.38074, 0.68 ) }
    dend_3 { pt3dadd( 56.8975, -23.6903, 4.88799, 0.68 ) }
    dend_3 { pt3dadd( 59.4916, -23.7211, 4.26498, 0.68 ) }
    dend_3 { pt3dadd( 61.4321, -23.7366, 3.74578, 0.91 ) }
    dend_3 { pt3dadd( 63.763, -23.8098, 3.09556, 0.91 ) }
    dend_3 { pt3dadd( 65.3074, -23.9085, 2.61482, 0.91 ) }
    dend_3 { pt3dadd( 68.1186, -24.143, 1.7104, 0.68 ) }
    dend_3 { pt3dadd( 69.3824, -24.2422, 1.35205, 0.91 ) }
    dend_3 { pt3dadd( 70.8742, -24.3428, 0.992602, 0.23 ) }
    dend_3 { pt3dadd( 72.4161, -24.4829, 0.644749, 0.23 ) }
    dend_3 { pt3dadd( 73.6631, -24.5741, 0.410982, 0.91 ) }
    dend_3 { pt3dadd( 75.3232, -24.6243, 0.182593, 0.91 ) }
    dend_3 { pt3dadd( 77.3141, -24.6061, 0.059033, 0.91 ) }
    dend_3 { pt3dadd( 79.8528, -24.4724, -0.0378364, 0.23 ) }
    dend_3 { pt3dadd( 81.6647, -24.3192, -0.114117, 0.68 ) }
    dend_3 { pt3dadd( 83.4661, -24.1033, -0.235248, 0.68 ) }
    dend_3 { pt3dadd( 85.3606, -23.8144, -0.436227, 0.23 ) }
    dend_3 { pt3dadd( 87.7104, -23.4371, -0.714681, 0.68 ) }
    dend_3 { pt3dadd( 89.6279, -23.1497, -0.990145, 0.68 ) }
    dend_3 { pt3dadd( 92.0347, -22.8551, -1.35331, 0.45 ) }
    dend_3 { pt3dadd( 93.4949, -22.6681, -1.57327, 0.23 ) }
    dend_3 { pt3dadd( 96.4377, -22.2474, -2.11883, 0.91 ) }
    dend_3 { pt3dadd( 98.373, -21.9002, -2.57383, 1.14 ) }
    // Section: dend_81, id: dend_81, parent: dend_77 (entry count 35/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -61.819, 27.1687, 22.6586, 0.45 ) }
    dend_81 { pt3dadd( -63.3965, 26.7182, 23.1364, 0.45 ) }
    dend_81 { pt3dadd( -64.6808, 26.5237, 23.538, 0.45 ) }
    dend_81 { pt3dadd( -66.1806, 26.4415, 23.9819, 0.45 ) }
    dend_81 { pt3dadd( -67.6535, 26.4496, 24.3169, 0.45 ) }
    dend_81 { pt3dadd( -68.7064, 26.4279, 24.5602, 0.45 ) }
    dend_81 { pt3dadd( -70.1788, 26.4251, 24.9404, 0.45 ) }
    dend_81 { pt3dadd( -71.5088, 26.4915, 25.2983, 0.45 ) }
    dend_81 { pt3dadd( -72.7323, 26.5777, 25.6209, 0.91 ) }
    dend_81 { pt3dadd( -75.1064, 26.8615, 26.1988, 0.23 ) }
    dend_81 { pt3dadd( -76.968, 27.1465, 26.6823, 0.91 ) }
    dend_81 { pt3dadd( -78.5706, 27.3991, 27.1096, 0.23 ) }
    dend_81 { pt3dadd( -80.3409, 27.6494, 27.5704, 0.68 ) }
    dend_81 { pt3dadd( -82.6056, 27.9281, 28.1549, 0.23 ) }
    dend_81 { pt3dadd( -84.1188, 28.0836, 28.577, 0.91 ) }
    dend_81 { pt3dadd( -85.6689, 28.2248, 29.0741, 0.23 ) }
    dend_81 { pt3dadd( -87.6025, 28.4017, 29.7062, 0.91 ) }
    dend_81 { pt3dadd( -88.7933, 28.4562, 30.1329, 0.23 ) }
    dend_81 { pt3dadd( -90.3795, 28.4739, 30.7649, 1.82 ) }
    dend_81 { pt3dadd( -92.0289, 28.4717, 31.5454, 0.45 ) }
    dend_81 { pt3dadd( -93.9914, 28.4233, 32.5106, 0.23 ) }
    dend_81 { pt3dadd( -94.9088, 28.4132, 32.9808, 0.23 ) }
    dend_81 { pt3dadd( -95.4961, 28.4534, 33.3138, 0.23 ) }
    dend_81 { pt3dadd( -97.0753, 28.676, 34.1873, 0.23 ) }
    dend_81 { pt3dadd( -98.8596, 29.0338, 35.0997, 0.23 ) }
    dend_81 { pt3dadd( -100.273, 29.3861, 35.7477, 1.14 ) }
    dend_81 { pt3dadd( -101.888, 29.7677, 36.3743, 0.23 ) }
    dend_81 { pt3dadd( -104.382, 30.2375, 37.1764, 0.68 ) }
    dend_81 { pt3dadd( -106.097, 30.4971, 37.6662, 0.23 ) }
    dend_81 { pt3dadd( -107.31, 30.6373, 37.9606, 0.91 ) }
    dend_81 { pt3dadd( -108.827, 30.7429, 38.2525, 0.23 ) }
    dend_81 { pt3dadd( -110.859, 30.8958, 38.6244, 0.91 ) }
    dend_81 { pt3dadd( -113.55, 31.0918, 39.0473, 0.23 ) }
    dend_81 { pt3dadd( -114.87, 31.1411, 39.2577, 0.23 ) }
    dend_81 { pt3dadd( -117.702, 31.1621, 39.7656, 0.91 ) }
    dend_81 { pt3dadd( -118.371, 31.153, 39.8933, 0.91 ) }
    dend_81 { pt3dadd( -120.671, 31.1674, 40.3465, 0.23 ) }
    dend_81 { pt3dadd( -121.906, 31.2105, 40.6475, 0.91 ) }
    dend_81 { pt3dadd( -123.608, 31.2228, 41.1612, 0.45 ) }
    dend_81 { pt3dadd( -124.307, 31.1835, 41.3944, 0.23 ) }
    dend_81 { pt3dadd( -124.944, 31.123, 41.6208, 0.23 ) }
    dend_81 { pt3dadd( -126.179, 30.9848, 42.1012, 0.23 ) }
    dend_81 { pt3dadd( -127.759, 30.734, 42.7573, 1.14 ) }
    dend_81 { pt3dadd( -129.745, 30.5028, 43.6103, 0.23 ) }
    dend_81 { pt3dadd( -131.478, 30.3833, 44.3331, 1.14 ) }
    dend_81 { pt3dadd( -133.635, 30.2301, 45.2276, 0.23 ) }
    dend_81 { pt3dadd( -135.422, 30.0547, 45.9819, 0.68 ) }
    dend_81 { pt3dadd( -136.909, 29.9191, 46.5896, 0.68 ) }
    dend_81 { pt3dadd( -138.393, 29.911, 47.1626, 0.23 ) }
    dend_81 { pt3dadd( -139.664, 30.041, 47.641, 0.23 ) }
    dend_81 { pt3dadd( -141.333, 30.2886, 48.2536, 0.91 ) }
    dend_81 { pt3dadd( -142.585, 30.5107, 48.7309, 0.23 ) }
    dend_81 { pt3dadd( -144.146, 30.822, 49.3247, 1.14 ) }
    dend_81 { pt3dadd( -145.758, 31.1871, 49.9548, 0.23 ) }
    dend_81 { pt3dadd( -147.046, 31.4676, 50.4888, 0.23 ) }
    dend_81 { pt3dadd( -147.999, 31.7213, 50.9012, 1.36 ) }
    dend_81 { pt3dadd( -151.008, 32.6509, 52.2008, 0.23 ) }
    dend_81 { pt3dadd( -153.822, 33.4438, 53.4105, 1.82 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 93/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -61.819, 27.1687, 22.6586, 0.23 ) }
    dend_78 { pt3dadd( -63.0566, 27.5243, 22.7701, 0.23 ) }
    dend_78 { pt3dadd( -64.536, 28.0675, 22.934, 1.14 ) }
    dend_78 { pt3dadd( -66.0054, 28.6875, 23.2185, 0.23 ) }
    dend_78 { pt3dadd( -68.2643, 29.6614, 23.7455, 0.68 ) }
    dend_78 { pt3dadd( -69.3363, 30.0505, 24.0441, 0.68 ) }
    dend_78 { pt3dadd( -70.697, 30.4546, 24.4525, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_78 { pt3dadd( -71.831, 30.7239, 24.8332, 1.36 ) }
    dend_78 { pt3dadd( -73.5279, 31.0352, 25.4918, 0.45 ) }
    dend_78 { pt3dadd( -74.8032, 31.1947, 26.0234, 0.68 ) }
    dend_78 { pt3dadd( -76.7714, 31.2735, 26.8357, 0.23 ) }
    dend_78 { pt3dadd( -77.8426, 31.2, 27.2117, 0.23 ) }
    dend_78 { pt3dadd( -80.1722, 30.8784, 27.8758, 1.14 ) }
    dend_78 { pt3dadd( -81.8153, 30.5462, 28.3547, 0.23 ) }
    dend_78 { pt3dadd( -83.3435, 30.2362, 28.7702, 0.23 ) }
    dend_78 { pt3dadd( -84.244, 30.0982, 29.0487, 1.14 ) }
    dend_78 { pt3dadd( -85.7572, 29.9761, 29.5878, 0.23 ) }
    dend_78 { pt3dadd( -86.5792, 29.9298, 29.9401, 0.68 ) }
    dend_78 { pt3dadd( -88.8751, 29.8695, 31.1263, 0.23 ) }
    dend_78 { pt3dadd( -90.097, 29.9585, 31.8485, 0.23 ) }
    dend_78 { pt3dadd( -91.7967, 30.2896, 33.0263, 1.14 ) }
    dend_78 { pt3dadd( -92.7297, 30.5871, 33.7737, 0.23 ) }
    dend_78 { pt3dadd( -93.514, 31.0001, 34.526, 0.91 ) }
    dend_78 { pt3dadd( -94.6398, 31.9228, 35.8345, 0.23 ) }
    dend_78 { pt3dadd( -95.1625, 32.5838, 36.5482, 1.14 ) }
    dend_78 { pt3dadd( -95.8311, 33.777, 37.7156, 0.45 ) }
    dend_78 { pt3dadd( -96.4502, 35.0326, 38.8605, 0.23 ) }
    dend_78 { pt3dadd( -97.1717, 36.3966, 40.1321, 2.05 ) }
    dend_78 { pt3dadd( -97.9311, 37.7522, 41.4071, 0.23 ) }
    dend_78 { pt3dadd( -98.5273, 38.683, 42.3174, 0.91 ) }
    dend_78 { pt3dadd( -99.6406, 39.9629, 43.6624, 0.23 ) }
    dend_78 { pt3dadd( -100.73, 40.7185, 44.6934, 0.23 ) }
    dend_78 { pt3dadd( -102.009, 41.2505, 45.6885, 0.91 ) }
    dend_78 { pt3dadd( -103.384, 41.5341, 46.6055, 0.23 ) }
    dend_78 { pt3dadd( -104.286, 41.6092, 47.1246, 0.23 ) }
    dend_78 { pt3dadd( -105.703, 41.681, 47.8668, 1.14 ) }
    dend_78 { pt3dadd( -107.355, 41.8325, 48.677, 0.23 ) }
    dend_78 { pt3dadd( -108.19, 42.004, 49.0899, 0.91 ) }
    dend_78 { pt3dadd( -109.637, 42.3838, 49.725, 0.23 ) }
    dend_78 { pt3dadd( -110.7, 42.6714, 50.1562, 0.23 ) }
    dend_78 { pt3dadd( -111.777, 43.0405, 50.6213, 1.14 ) }
    dend_78 { pt3dadd( -113.356, 43.6695, 51.3591, 0.23 ) }
    dend_78 { pt3dadd( -114.319, 44.1353, 51.7964, 0.23 ) }
    dend_78 { pt3dadd( -115.644, 44.8261, 52.4224, 1.14 ) }
    dend_78 { pt3dadd( -117.236, 45.7265, 53.1657, 0.23 ) }
    dend_78 { pt3dadd( -119.442, 47.0361, 54.1845, 0.23 ) }
    dend_78 { pt3dadd( -120.384, 47.6266, 54.5988, 0.23 ) }
    dend_78 { pt3dadd( -121.995, 48.7278, 55.233, 1.14 ) }
    dend_78 { pt3dadd( -123.385, 49.7935, 55.7475, 0.23 ) }
    dend_78 { pt3dadd( -124.375, 50.6254, 56.1014, 0.68 ) }
    dend_78 { pt3dadd( -125.349, 51.4792, 56.3828, 1.36 ) }
    dend_78 { pt3dadd( -126.448, 52.3932, 56.614, 1.36 ) }
    dend_78 { pt3dadd( -127.611, 53.2487, 56.8322, 0.23 ) }
    dend_78 { pt3dadd( -128.424, 53.7374, 56.9914, 0.23 ) }
    dend_78 { pt3dadd( -129.255, 54.1053, 57.1397, 0.23 ) }
    dend_78 { pt3dadd( -131.46, 54.7436, 57.6125, 0.91 ) }
    dend_78 { pt3dadd( -132.549, 54.9231, 57.8625, 0.23 ) }
    dend_78 { pt3dadd( -133.856, 55.0103, 58.2328, 0.23 ) }
    dend_78 { pt3dadd( -134.716, 54.9853, 58.5433, 0.23 ) }
    dend_78 { pt3dadd( -136.418, 54.8687, 59.2086, 1.14 ) }
    dend_78 { pt3dadd( -138.318, 54.7953, 60.05, 0.23 ) }
    dend_78 { pt3dadd( -139.161, 54.78, 60.4838, 1.36 ) }
    dend_78 { pt3dadd( -141.523, 54.8125, 61.8409, 0.23 ) }
    dend_78 { pt3dadd( -143.88, 54.8521, 63.3134, 0.91 ) }
    dend_78 { pt3dadd( -145.112, 54.8475, 64.1253, 0.23 ) }
    dend_78 { pt3dadd( -146.945, 54.758, 65.5091, 1.36 ) }
    dend_78 { pt3dadd( -148.079, 54.6656, 66.4695, 0.23 ) }
    dend_78 { pt3dadd( -149.357, 54.588, 67.7853, 0.23 ) }
    dend_78 { pt3dadd( -149.836, 54.556, 68.4401, 0.23 ) }
    dend_78 { pt3dadd( -150.164, 54.4938, 69.2362, 1.14 ) }
    dend_78 { pt3dadd( -150.31, 54.2392, 70.7373, 0.23 ) }
    dend_78 { pt3dadd( -149.957, 53.832, 72.9631, 0.91 ) }
    dend_78 { pt3dadd( -149.41, 53.8502, 74.6765, 0.23 ) }
    dend_78 { pt3dadd( -149.155, 53.9608, 75.5472, 0.23 ) }
    dend_78 { pt3dadd( -148.887, 54.3352, 77.1922, 0.23 ) }
    dend_78 { pt3dadd( -148.918, 54.8505, 78.5747, 0.23 ) }
    dend_78 { pt3dadd( -149.217, 55.4174, 79.5676, 0.23 ) }
    dend_78 { pt3dadd( -149.746, 56.2317, 80.6447, 0.23 ) }
    dend_78 { pt3dadd( -150.324, 57.2267, 81.6528, 0.23 ) }
    dend_78 { pt3dadd( -150.833, 57.9513, 82.3032, 0.68 ) }
    dend_78 { pt3dadd( -151.38, 58.7425, 82.9288, 0.23 ) }
    dend_78 { pt3dadd( -152.021, 59.5774, 83.548, 0.91 ) }
    dend_78 { pt3dadd( -153.227, 61.0749, 84.6061, 0.23 ) }
    dend_78 { pt3dadd( -153.967, 61.9482, 85.2006, 1.14 ) }
    dend_78 { pt3dadd( -156.143, 64.4203, 86.8701, 0.23 ) }
    dend_78 { pt3dadd( -157.216, 65.5506, 87.6914, 0.91 ) }
    dend_78 { pt3dadd( -158.047, 66.2811, 88.2862, 0.23 ) }
    dend_78 { pt3dadd( -159.174, 67.0818, 89.0379, 1.14 ) }
    dend_78 { pt3dadd( -160.512, 67.9353, 89.8467, 0.23 ) }
    dend_78 { pt3dadd( -162.298, 69.0112, 90.9009, 1.14 ) }
    dend_78 { pt3dadd( -163.792, 69.8451, 91.7914, 0.23 ) }
    dend_78 { pt3dadd( -165.771, 70.7574, 92.9255, 0.68 ) }
    dend_78 { pt3dadd( -167.285, 71.3944, 93.8574, 0.68 ) }
    // Section: dend_70, id: dend_70, parent: dend_66 (entry count 86/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -70.0296, 19.8369, 10.2313, 0.68 ) }
    dend_70 { pt3dadd( -71.043, 20.3598, 10.388, 0.68 ) }
    dend_70 { pt3dadd( -72.609, 21.1678, 10.6301, 0.68 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 89/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -70.0296, 19.8369, 10.2313, 0.23 ) }
    dend_67 { pt3dadd( -70.0953, 19.2258, 10.6536, 0.23 ) }
    dend_67 { pt3dadd( -70.3074, 17.6511, 11.5965, 0.23 ) }
    dend_67 { pt3dadd( -70.4689, 16.1047, 12.4515, 0.68 ) }
    dend_67 { pt3dadd( -70.5157, 14.5941, 13.2899, 0.23 ) }
    dend_67 { pt3dadd( -70.4711, 12.84, 14.2269, 0.23 ) }
    dend_67 { pt3dadd( -70.3868, 11.7106, 14.821, 0.23 ) }
    dend_67 { pt3dadd( -70.2539, 10.4056, 15.4486, 0.68 ) }
    dend_67 { pt3dadd( -70.0556, 8.62524, 16.2334, 0.23 ) }
    dend_67 { pt3dadd( -69.8266, 7.09755, 16.8706, 0.23 ) }
    dend_67 { pt3dadd( -69.6256, 6.03265, 17.3066, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_67 { pt3dadd( -69.2752, 4.50655, 17.9336, 0.23 ) }
    dend_67 { pt3dadd( -69.0994, 3.69947, 18.2745, 0.68 ) }
    dend_67 { pt3dadd( -68.7135, 2.03104, 18.9995, 0.91 ) }
    dend_67 { pt3dadd( -68.4898, 0.322746, 19.6664, 1.14 ) }
    // Section: dend_59, id: dend_59, parent: dend_51 (entry count 4/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -37.747, 44.3382, 1.29002, 0.23 ) }
    dend_59 { pt3dadd( -38.5327, 46.6021, 0.914121, 0.23 ) }
    dend_59 { pt3dadd( -38.7213, 47.3068, 0.784143, 0.23 ) }
    dend_59 { pt3dadd( -38.8968, 48.1358, 0.619899, 0.23 ) }
    dend_59 { pt3dadd( -39.1425, 49.192, 0.447442, 0.23 ) }
    dend_59 { pt3dadd( -39.6115, 51.1546, 0.176445, 0.68 ) }
    dend_59 { pt3dadd( -40.0536, 52.8682, -0.0233173, 0.23 ) }
    dend_59 { pt3dadd( -40.7729, 55.0936, -0.256328, 0.23 ) }
    dend_59 { pt3dadd( -41.8116, 57.8257, -0.504547, 0.68 ) }
    dend_59 { pt3dadd( -42.477, 59.5204, -0.603297, 0.23 ) }
    dend_59 { pt3dadd( -43.0974, 61.1195, -0.666792, 0.23 ) }
    dend_59 { pt3dadd( -43.9525, 63.3444, -0.695696, 0.45 ) }
    dend_59 { pt3dadd( -44.4273, 64.4986, -0.700555, 0.45 ) }
    dend_59 { pt3dadd( -45.147, 66.0313, -0.702657, 0.23 ) }
    dend_59 { pt3dadd( -46.1873, 68.2065, -0.72986, 0.68 ) }
    dend_59 { pt3dadd( -46.8655, 69.9312, -0.834256, 0.23 ) }
    dend_59 { pt3dadd( -47.2125, 71.0321, -0.95327, 0.23 ) }
    dend_59 { pt3dadd( -47.4057, 72.181, -1.12366, 1.14 ) }
    dend_59 { pt3dadd( -47.4469, 73.3426, -1.33883, 0.23 ) }
    dend_59 { pt3dadd( -47.3991, 74.1896, -1.49785, 0.68 ) }
    dend_59 { pt3dadd( -47.2041, 76.1622, -1.86996, 0.23 ) }
    dend_59 { pt3dadd( -46.9549, 77.4943, -2.05757, 0.23 ) }
    dend_59 { pt3dadd( -46.4435, 79.4871, -2.28101, 0.45 ) }
    dend_59 { pt3dadd( -46.2467, 80.2907, -2.34387, 0.45 ) }
    dend_59 { pt3dadd( -45.8711, 81.8919, -2.3808, 0.23 ) }
    dend_59 { pt3dadd( -45.5315, 83.3015, -2.35952, 0.23 ) }
    dend_59 { pt3dadd( -45.0031, 85.5457, -2.23841, 0.23 ) }
    dend_59 { pt3dadd( -44.7811, 86.6106, -2.14528, 0.68 ) }
    dend_59 { pt3dadd( -44.4302, 88.9997, -1.91532, 0.68 ) }
    dend_59 { pt3dadd( -44.2517, 91.1705, -1.70316, 0.23 ) }
    dend_59 { pt3dadd( -44.1309, 92.8536, -1.56551, 0.68 ) }
    dend_59 { pt3dadd( -44.0738, 94.788, -1.40553, 0.23 ) }
    dend_59 { pt3dadd( -44.1144, 97.0172, -1.23404, 0.23 ) }
    dend_59 { pt3dadd( -44.1285, 98.3481, -1.17179, 0.23 ) }
    dend_59 { pt3dadd( -44.1098, 99.6791, -1.10101, 0.68 ) }
    dend_59 { pt3dadd( -44.1973, 102.181, -0.93682, 0.23 ) }
    dend_59 { pt3dadd( -44.2856, 103.336, -0.841229, 0.23 ) }
    dend_59 { pt3dadd( -44.5457, 105.363, -0.651091, 0.45 ) }
    dend_59 { pt3dadd( -44.7939, 106.869, -0.505337, 0.23 ) }
    dend_59 { pt3dadd( -45.1832, 108.51, -0.331876, 0.91 ) }
    dend_59 { pt3dadd( -45.9614, 111.007, -0.0522607, 0.68 ) }
    dend_59 { pt3dadd( -46.4419, 112.129, 0.0739908, 0.68 ) }
    dend_59 { pt3dadd( -47.4806, 114.387, 0.303146, 0.91 ) }
    dend_59 { pt3dadd( -48.0832, 115.57, 0.405604, 0.23 ) }
    dend_59 { pt3dadd( -48.7166, 116.733, 0.484946, 0.68 ) }
    dend_59 { pt3dadd( -49.3193, 117.8, 0.504082, 0.68 ) }
    dend_59 { pt3dadd( -50.2584, 119.398, 0.553519, 1.14 ) }
    dend_59 { pt3dadd( -51.3716, 121.391, 0.699047, 0.23 ) }
    dend_59 { pt3dadd( -52.0852, 122.788, 0.876098, 0.23 ) }
    dend_59 { pt3dadd( -52.549, 123.77, 1.04122, 0.91 ) }
    dend_59 { pt3dadd( -53.0147, 124.739, 1.22992, 0.91 ) }
    dend_59 { pt3dadd( -53.9438, 126.529, 1.64689, 0.23 ) }
    dend_59 { pt3dadd( -54.549, 127.675, 1.98521, 0.23 ) }
    dend_59 { pt3dadd( -55.1533, 128.739, 2.39625, 0.23 ) }
    dend_59 { pt3dadd( -55.66, 129.78, 2.87155, 0.91 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 59/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -37.747, 44.3382, 1.29002, 1.36 ) }
    dend_52 { pt3dadd( -39.0851, 45.5878, 1.61866, 1.36 ) }
    dend_52 { pt3dadd( -41.5808, 48.3159, 2.19239, 0.68 ) }
    dend_52 { pt3dadd( -43.0895, 50.0109, 2.50486, 0.68 ) }
    dend_52 { pt3dadd( -44.1851, 51.2962, 2.68514, 0.68 ) }
    dend_52 { pt3dadd( -45.5559, 52.9745, 2.87153, 0.68 ) }
    dend_52 { pt3dadd( -46.614, 54.3402, 2.992, 0.68 ) }
    dend_52 { pt3dadd( -47.7166, 56.0083, 3.0636, 0.68 ) }
    dend_52 { pt3dadd( -48.8376, 57.838, 3.09359, 0.91 ) }
    dend_52 { pt3dadd( -49.6417, 59.205, 3.10565, 0.45 ) }
    dend_52 { pt3dadd( -50.2183, 60.2316, 3.09331, 0.91 ) }
    dend_52 { pt3dadd( -51.0355, 61.7471, 3.01668, 0.23 ) }
    dend_52 { pt3dadd( -52.0338, 63.5879, 2.77696, 0.68 ) }
    dend_52 { pt3dadd( -52.8588, 65.1607, 2.47502, 0.68 ) }
    dend_52 { pt3dadd( -53.2493, 65.9089, 2.30245, 0.91 ) }
    dend_52 { pt3dadd( -54.4655, 68.0258, 1.79968, 0.23 ) }
    dend_52 { pt3dadd( -55.2684, 69.39, 1.42593, 1.14 ) }
    dend_52 { pt3dadd( -56.4452, 71.3439, 0.791915, 0.23 ) }
    dend_52 { pt3dadd( -57.3473, 72.8471, 0.215371, 0.68 ) }
    dend_52 { pt3dadd( -58.3673, 74.5748, -0.535671, 0.23 ) }
    dend_52 { pt3dadd( -59.1575, 75.7848, -1.03788, 0.68 ) }
    // Section: dend_47, id: dend_47, parent: dend_41 (entry count 80/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -13.7893, 70.1359, -7.99164, 0.23 ) }
    dend_47 { pt3dadd( -12.5134, 71.5293, -8.65222, 0.23 ) }
    dend_47 { pt3dadd( -11.927, 72.4502, -8.91561, 0.68 ) }
    dend_47 { pt3dadd( -11.0139, 74.2023, -9.2506, 0.68 ) }
    dend_47 { pt3dadd( -10.6388, 75.0834, -9.36674, 0.68 ) }
    dend_47 { pt3dadd( -10.3405, 75.9111, -9.44883, 0.91 ) }
    dend_47 { pt3dadd( -9.91049, 77.7122, -9.51693, 0.23 ) }
    dend_47 { pt3dadd( -9.82389, 79.7624, -9.39947, 0.23 ) }
    dend_47 { pt3dadd( -9.85121, 80.8433, -9.2797, 0.23 ) }
    dend_47 { pt3dadd( -10.0022, 82.2671, -9.04862, 0.68 ) }
    dend_47 { pt3dadd( -10.1314, 83.1038, -8.88924, 0.23 ) }
    dend_47 { pt3dadd( -10.6656, 85.6002, -8.31357, 0.91 ) }
    dend_47 { pt3dadd( -11.2236, 87.3575, -7.79053, 0.23 ) }
    dend_47 { pt3dadd( -10.6538, 97.3139, -8.53004, 0.23 ) }
    dend_47 { pt3dadd( -7.63572, 106.838, -8.10664, 0.23 ) }
    dend_47 { pt3dadd( -5.808, 116.414, -5.87939, 0.23 ) }
    dend_47 { pt3dadd( -3.13466, 126.037, -5.36244, 0.23 ) }
    dend_47 { pt3dadd( -1.16347, 135.592, -3.17006, 0.23 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 98/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -13.7893, 70.1359, -7.99164, 0.23 ) }
    dend_42 { pt3dadd( -14.6715, 71.5152, -7.52341, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_42 { pt3dadd( -15.3621, 72.7058, -7.12805, 0.23 ) }
    dend_42 { pt3dadd( -15.7756, 73.4848, -6.99965, 0.45 ) }
    dend_42 { pt3dadd( -16.3544, 74.7186, -7.02051, 0.45 ) }
    dend_42 { pt3dadd( -16.8712, 76.0504, -7.15656, 0.45 ) }
    dend_42 { pt3dadd( -17.3696, 77.5936, -7.38503, 0.23 ) }
    dend_42 { pt3dadd( -17.6518, 78.627, -7.62668, 0.23 ) }
    dend_42 { pt3dadd( -18.1886, 81.0518, -8.27828, 0.68 ) }
    dend_42 { pt3dadd( -18.5479, 83.0733, -8.8423, 0.23 ) }
    dend_42 { pt3dadd( -18.7038, 84.2688, -9.17249, 0.23 ) }
    dend_42 { pt3dadd( -18.8502, 85.6608, -9.52967, 0.23 ) }
    dend_42 { pt3dadd( -18.9944, 86.7704, -9.78423, 0.68 ) }
    dend_42 { pt3dadd( -19.3115, 88.2132, -10.035, 0.23 ) }
    dend_42 { pt3dadd( -19.8051, 89.7647, -10.1438, 0.23 ) }
    dend_42 { pt3dadd( -20.3414, 91.1119, -10.161, 0.23 ) }
    dend_42 { pt3dadd( -20.7233, 91.8748, -10.147, 0.23 ) }
    dend_42 { pt3dadd( -21.1888, 92.6288, -10.111, 0.45 ) }
    dend_42 { pt3dadd( -22.4591, 94.5342, -9.99944, 0.45 ) }
    dend_42 { pt3dadd( -23.6301, 96.1512, -9.87907, 0.23 ) }
    dend_42 { pt3dadd( -24.8148, 97.6121, -9.73794, 0.23 ) }
    dend_42 { pt3dadd( -25.6739, 98.5631, -9.6201, 0.23 ) }
    dend_42 { pt3dadd( -26.6253, 99.5784, -9.4601, 0.68 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -11.5445, 85.9447, -91.1022, 0.68 ) }
    dend_38 { pt3dadd( -11.3303, 88.9807, -100.628, 0.68 ) }
    dend_38 { pt3dadd( -11.7368, 91.6884, -110.246, 0.68 ) }
    dend_38 { pt3dadd( -13.4352, 94.7888, -119.6, 0.68 ) }
    dend_38 { pt3dadd( -14.9924, 97.2085, -129.177, 0.68 ) }
    dend_38 { pt3dadd( -17.5838, 100.633, -138.208, 0.68 ) }
    dend_38 { pt3dadd( -20.7565, 104.739, -146.756, 0.68 ) }
    dend_38 { pt3dadd( -22.7501, 108.951, -155.604, 0.68 ) }
    dend_38 { pt3dadd( -26.9355, 112.422, -163.997, 0.68 ) }
    dend_38 { pt3dadd( -29.7152, 115.103, -173.221, 0.68 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 31/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -11.5445, 85.9447, -91.1022, 0.23 ) }
    dend_35 { pt3dadd( -10.5933, 89.1664, -100.521, 0.68 ) }
    dend_35 { pt3dadd( -10.3321, 93.399, -109.577, 0.68 ) }
    dend_35 { pt3dadd( -10.6504, 98.2031, -118.342, 0.68 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 35/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -23.4382, -95.3762, 15.9214, 0.23 ) }
    dend_30 { pt3dadd( -24.0331, -97.5028, 15.9698, 0.23 ) }
    dend_30 { pt3dadd( -24.3575, -98.3355, 15.9859, 0.68 ) }
    dend_30 { pt3dadd( -25.2563, -100.138, 16.0161, 0.23 ) }
    dend_30 { pt3dadd( -25.7658, -100.872, 16.0593, 0.68 ) }
    dend_30 { pt3dadd( -26.391, -101.746, 16.1263, 0.68 ) }
    dend_30 { pt3dadd( -27.0131, -102.621, 16.199, 0.23 ) }
    dend_30 { pt3dadd( -27.612, -103.347, 16.2632, 0.68 ) }
    dend_30 { pt3dadd( -28.2368, -104.075, 16.336, 0.68 ) }
    dend_30 { pt3dadd( -29.8822, -105.868, 16.5234, 0.23 ) }
    dend_30 { pt3dadd( -30.9989, -107.165, 16.6536, 0.68 ) }
    dend_30 { pt3dadd( -31.5776, -107.94, 16.6923, 0.23 ) }
    dend_30 { pt3dadd( -32.815, -109.689, 16.7674, 0.23 ) }
    dend_30 { pt3dadd( -34.0015, -111.489, 16.822, 0.68 ) }
    dend_30 { pt3dadd( -34.9446, -113.032, 16.8333, 0.68 ) }
    dend_30 { pt3dadd( -35.3811, -113.808, 16.8007, 0.68 ) }
    dend_30 { pt3dadd( -36.6829, -115.76, 16.6983, 1.14 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 52/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -23.4382, -95.3762, 15.9214, 0.23 ) }
    dend_29 { pt3dadd( -26.4623, -94.8776, 16.4379, 0.23 ) }
    dend_29 { pt3dadd( -27.8561, -94.6797, 16.6058, 0.91 ) }
    dend_29 { pt3dadd( -29.6566, -94.4889, 16.6711, 0.23 ) }
    dend_29 { pt3dadd( -31.8698, -94.3669, 16.6201, 0.23 ) }
    dend_29 { pt3dadd( -33.0396, -94.3794, 16.5388, 0.91 ) }
    dend_29 { pt3dadd( -34.5063, -94.486, 16.3975, 0.23 ) }
    dend_29 { pt3dadd( -36.3329, -94.8494, 16.0892, 1.82 ) }
    dend_29 { pt3dadd( -39.0852, -95.7188, 15.4912, 0.68 ) }
    dend_29 { pt3dadd( -40.8692, -96.4855, 15.0233, 1.14 ) }
    dend_29 { pt3dadd( -42.4389, -97.3095, 14.5829, 0.23 ) }
    dend_29 { pt3dadd( -43.6274, -98.0167, 14.2516, 0.68 ) }
    dend_29 { pt3dadd( -45.1647, -99.1189, 13.8424, 0.23 ) }
    dend_29 { pt3dadd( -46.2131, -100.152, 13.6002, 0.23 ) }
    dend_29 { pt3dadd( -46.9599, -101.173, 13.4697, 1.14 ) }
    dend_29 { pt3dadd( -47.2965, -101.761, 13.4058, 1.14 ) }
    dend_29 { pt3dadd( -47.9003, -102.875, 13.2908, 0.23 ) }
    dend_29 { pt3dadd( -48.4949, -104.05, 13.1333, 0.91 ) }
    dend_29 { pt3dadd( -49.9942, -107.131, 12.6325, 0.23 ) }
    dend_29 { pt3dadd( -50.6063, -108.415, 12.4077, 0.68 ) }
    dend_29 { pt3dadd( -51.6066, -110.329, 12.0273, 0.23 ) }
    dend_29 { pt3dadd( -52.5425, -111.844, 11.6619, 1.14 ) }
    dend_29 { pt3dadd( -54.1272, -113.947, 11.0631, 0.23 ) }
    dend_29 { pt3dadd( -54.8231, -114.623, 10.8246, 0.23 ) }
    dend_29 { pt3dadd( -55.7603, -115.274, 10.5498, 0.91 ) }
    dend_29 { pt3dadd( -57.0673, -116.011, 10.2043, 0.91 ) }
    dend_29 { pt3dadd( -59.1932, -117.014, 9.71469, 0.45 ) }
    dend_29 { pt3dadd( -60.3437, -117.497, 9.46896, 0.91 ) }
    dend_29 { pt3dadd( -62.4989, -118.258, 9.07987, 0.23 ) }
    dend_29 { pt3dadd( -64.2275, -118.867, 8.82657, 0.45 ) }
    dend_29 { pt3dadd( -65.2207, -119.218, 8.73216, 0.23 ) }
    dend_29 { pt3dadd( -65.8633, -119.437, 8.73325, 0.23 ) }
    dend_29 { pt3dadd( -67.185, -119.848, 8.872, 0.68 ) }
    dend_29 { pt3dadd( -67.8982, -120.038, 8.98283, 0.23 ) }
    dend_29 { pt3dadd( -69.5039, -120.44, 9.3186, 0.91 ) }
    dend_29 { pt3dadd( -71.3752, -120.887, 9.73588, 0.23 ) }
    dend_29 { pt3dadd( -73.2456, -121.481, 10.1323, 0.68 ) }
    dend_29 { pt3dadd( -75.5678, -122.362, 10.5289, 0.23 ) }
    dend_29 { pt3dadd( -77.3852, -123.19, 10.7643, 0.23 ) }
    dend_29 { pt3dadd( -78.6772, -123.865, 10.8761, 0.23 ) }
    dend_29 { pt3dadd( -80.2527, -124.827, 10.9288, 0.45 ) }
    dend_29 { pt3dadd( -83.8612, -127.464, 10.8507, 0.23 ) }
    dend_29 { pt3dadd( -84.9438, -128.384, 10.7778, 0.68 ) }
    dend_29 { pt3dadd( -86.3433, -129.777, 10.6654, 0.23 ) }
    dend_29 { pt3dadd( -86.8323, -130.326, 10.6113, 0.23 ) }
    dend_29 { pt3dadd( -87.5228, -131.165, 10.5032, 0.23 ) }
    dend_29 { pt3dadd( -88.4422, -132.32, 10.3515, 0.23 ) }
    dend_29 { pt3dadd( -89.7105, -133.854, 10.1506, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_29 { pt3dadd( -91.1244, -135.527, 9.98005, 0.23 ) }
    dend_29 { pt3dadd( -92.7918, -137.506, 9.74, 0.68 ) }
    dend_29 { pt3dadd( -93.4278, -138.287, 9.63389, 0.23 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 3/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 30.0147, -105.361, 70.8086, 0.23 ) }
    dend_24 { pt3dadd( 29.7182, -106.813, 72.4684, 0.23 ) }
    dend_24 { pt3dadd( 29.7653, -107.628, 73.2609, 0.68 ) }
    dend_24 { pt3dadd( 30.0664, -108.831, 74.052, 0.23 ) }
    dend_24 { pt3dadd( 30.4453, -109.825, 74.6185, 0.23 ) }
    dend_24 { pt3dadd( 30.8011, -110.701, 75.0461, 0.23 ) }
    dend_24 { pt3dadd( 31.1467, -111.637, 75.4613, 0.23 ) }
    dend_24 { pt3dadd( 31.8025, -113.192, 76.0798, 0.68 ) }
    dend_24 { pt3dadd( 33.1766, -116.24, 77.2224, 0.23 ) }
    dend_24 { pt3dadd( 34.1105, -118.296, 77.9068, 0.23 ) }
    dend_24 { pt3dadd( 34.8971, -120.058, 78.4278, 0.91 ) }
    dend_24 { pt3dadd( 35.9227, -122.618, 79.1263, 0.23 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 15/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 30.0147, -105.361, 70.8086, 0.23 ) }
    dend_23 { pt3dadd( 30.4762, -106.797, 70.9977, 0.23 ) }
    dend_23 { pt3dadd( 30.9942, -108.41, 71.2098, 0.23 ) }
    dend_23 { pt3dadd( 31.3718, -109.585, 71.3644, 0.23 ) }
    dend_23 { pt3dadd( 31.5745, -110.215, 71.4473, 0.91 ) }
    dend_23 { pt3dadd( 32.0976, -111.844, 71.6616, 0.23 ) }
    dend_23 { pt3dadd( 32.8067, -114.051, 71.9519, 0.91 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 22/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 13.4633, -117.867, -7.89853, 1.14 ) }
    dend_17 { pt3dadd( 13.5429, -119.714, -7.88521, 1.14 ) }
    dend_17 { pt3dadd( 13.5744, -121.298, -7.86812, 1.59 ) }
    dend_17 { pt3dadd( 13.5647, -125.385, -7.76478, 0.91 ) }
    dend_17 { pt3dadd( 13.5255, -128.531, -7.78296, 0.91 ) }
    dend_17 { pt3dadd( 13.5525, -132.901, -7.93126, 0.91 ) }
    dend_17 { pt3dadd( 13.6091, -134.912, -8.03266, 0.91 ) }
    dend_17 { pt3dadd( 13.682, -137.106, -8.16995, 0.45 ) }
    dend_17 { pt3dadd( 13.7421, -138.356, -8.27082, 0.91 ) }
    dend_17 { pt3dadd( 14.0441, -141.437, -8.58837, 0.68 ) }
    dend_17 { pt3dadd( 14.4194, -144.008, -8.9427, 0.68 ) }
    dend_17 { pt3dadd( 14.6024, -145.074, -9.08963, 0.91 ) }
    dend_17 { pt3dadd( 14.919, -147.086, -9.34352, 0.45 ) }
    dend_17 { pt3dadd( 15.0999, -148.303, -9.49779, 0.45 ) }
    dend_17 { pt3dadd( 15.3879, -150.279, -9.75135, 0.68 ) }
    dend_17 { pt3dadd( 15.9009, -154.045, -10.1369, 0.91 ) }
    dend_17 { pt3dadd( 16.1891, -156.345, -10.382, 0.91 ) }
    dend_17 { pt3dadd( 16.4438, -158.547, -10.6212, 0.91 ) }
    dend_17 { pt3dadd( 16.626, -159.96, -10.7648, 0.91 ) }
    dend_17 { pt3dadd( 16.9208, -161.971, -10.9504, 0.91 ) }
    dend_17 { pt3dadd( 17.3028, -164.262, -11.139, 0.91 ) }
    dend_17 { pt3dadd( 17.7244, -166.514, -11.2837, 0.91 ) }
    dend_17 { pt3dadd( 18.4187, -170.337, -11.4387, 0.91 ) }
    dend_17 { pt3dadd( 18.7147, -172.038, -11.4586, 0.91 ) }
    dend_17 { pt3dadd( 18.9262, -173.601, -11.4629, 1.36 ) }
    dend_17 { pt3dadd( 19.0185, -174.561, -11.4695, 0.68 ) }
    dend_17 { pt3dadd( 19.2419, -176.944, -11.5792, 0.68 ) }
    dend_17 { pt3dadd( 19.4519, -178.979, -11.7412, 0.68 ) }
    dend_17 { pt3dadd( 19.6945, -180.962, -11.9835, 0.68 ) }
    dend_17 { pt3dadd( 19.9438, -182.975, -12.2194, 1.14 ) }
    dend_17 { pt3dadd( 20.3246, -185.794, -12.5528, 0.45 ) }
    dend_17 { pt3dadd( 20.725, -188.63, -12.8896, 0.68 ) }
    dend_17 { pt3dadd( 20.8844, -189.747, -13.0346, 0.68 ) }
    dend_17 { pt3dadd( 21.0727, -191.014, -13.2003, 0.68 ) }
    dend_17 { pt3dadd( 21.5271, -194.175, -13.5871, 0.68 ) }
    dend_17 { pt3dadd( 21.8454, -196.309, -13.7847, 0.23 ) }
    dend_17 { pt3dadd( 21.9752, -197.467, -13.8742, 0.23 ) }
    dend_17 { pt3dadd( 22.0635, -199.369, -13.9146, 0.45 ) }
    dend_17 { pt3dadd( 23.401, -209.279, -13.8809, 0.45 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 61/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 13.4633, -117.867, -7.89853, 0.45 ) }
    dend_14 { pt3dadd( 16.0005, -118.244, -7.15481, 0.45 ) }
    dend_14 { pt3dadd( 17.7024, -118.609, -6.62702, 0.45 ) }
    dend_14 { pt3dadd( 19.5243, -119.142, -6.02463, 0.23 ) }
    dend_14 { pt3dadd( 21.1591, -119.707, -5.46956, 0.23 ) }
    dend_14 { pt3dadd( 22.1796, -120.076, -5.13124, 0.23 ) }
    dend_14 { pt3dadd( 22.9653, -120.343, -4.87698, 0.23 ) }
    dend_14 { pt3dadd( 24.1731, -120.75, -4.47765, 0.23 ) }
    dend_14 { pt3dadd( 25.3969, -121.066, -4.06597, 0.23 ) }
    dend_14 { pt3dadd( 26.0836, -121.245, -3.83423, 0.23 ) }
    dend_14 { pt3dadd( 27.1245, -121.498, -3.48625, 0.23 ) }
    dend_14 { pt3dadd( 28.274, -121.688, -3.15212, 0.23 ) }
    dend_14 { pt3dadd( 29.6834, -121.773, -2.75589, 0.23 ) }
    dend_14 { pt3dadd( 32.1725, -121.701, -2.06961, 0.23 ) }
    dend_14 { pt3dadd( 41.2652, -122.638, 1.98544, 0.23 ) }
    dend_14 { pt3dadd( 49.442, -121.94, 7.69971, 0.23 ) }
    dend_14 { pt3dadd( 58.1149, -120.746, 12.5325, 0.23 ) }
    dend_14 { pt3dadd( 66.4677, -120.489, 18.0247, 0.23 ) }
    dend_14 { pt3dadd( 75.0839, -120.423, 23.0999, 0.23 ) }
    dend_14 { pt3dadd( 83.5892, -120.12, 28.3504, 0.23 ) }
    dend_14 { pt3dadd( 92.225, -118.014, 32.9317, 0.23 ) }
    dend_14 { pt3dadd( 99.8622, -115.226, 38.754, 0.23 ) }
    dend_14 { pt3dadd( 108.12, -112.031, 43.4029, 0.23 ) }
    dend_14 { pt3dadd( 116.825, -109.321, 47.5111, 0.23 ) }
    dend_14 { pt3dadd( 126.26, -107.592, 50.3365, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 86/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 16.1332, -60.1164, -11.7956, 0.23 ) }
    dend_12 { pt3dadd( 14.1265, -60.1874, -12.2136, 0.23 ) }
    dend_12 { pt3dadd( 12.5158, -60.0165, -12.5038, 0.23 ) }
    dend_12 { pt3dadd( 10.1904, -59.4892, -12.9094, 0.23 ) }
    dend_12 { pt3dadd( 8.81116, -59.0274, -13.1681, 0.23 ) }
    dend_12 { pt3dadd( 8.03125, -58.6932, -13.3292, 0.23 ) }
    dend_12 { pt3dadd( 7.26398, -58.2916, -13.5214, 0.23 ) }
    dend_12 { pt3dadd( 5.6854, -57.218, -13.9401, 0.23 ) }
    dend_12 { pt3dadd( 4.31266, -56.0596, -14.3262, 0.23 ) }
    dend_12 { pt3dadd( 3.49571, -55.1994, -14.5745, 0.23 ) }
    dend_12 { pt3dadd( 2.90973, -54.5351, -14.7887, 0.23 ) }
    dend_12 { pt3dadd( 1.88323, -53.4132, -15.2045, 0.68 ) }
    dend_12 { pt3dadd( -7.23761, -49.5619, -16.6109, 0.68 ) }
    dend_12 { pt3dadd( -15.9439, -44.6601, -16.1942, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( -24.192, -39.0603, -15.4133, 0.68 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 1/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 16.1332, -60.1164, -11.7956, 0.91 ) }
    dend_11 { pt3dadd( 16.8542, -61.0376, -11.8788, 0.91 ) }
    dend_11 { pt3dadd( 17.2647, -61.6454, -11.947, 0.91 ) }
    dend_11 { pt3dadd( 18.4887, -63.677, -12.1837, 1.14 ) }
    dend_11 { pt3dadd( 18.8482, -64.2995, -12.2559, 0.23 ) }
    dend_11 { pt3dadd( 19.424, -65.2282, -12.3628, 0.68 ) }
    dend_11 { pt3dadd( 20.5754, -67.0854, -12.5767, 0.23 ) }
    dend_11 { pt3dadd( 21.0424, -67.9265, -12.6808, 0.23 ) }
    dend_11 { pt3dadd( 21.4403, -68.6741, -12.7852, 0.23 ) }
    dend_11 { pt3dadd( 21.7707, -69.3157, -12.8952, 0.23 ) }
    dend_11 { pt3dadd( 22.3612, -70.5559, -13.1138, 0.23 ) }
    dend_11 { pt3dadd( 26.0635, -79.8367, -12.7143, 0.23 ) }
    dend_11 { pt3dadd( 30.8662, -88.5959, -13.1735, 0.23 ) }
    dend_11 { pt3dadd( 36.5448, -96.6072, -15.0635, 0.23 ) }
    dend_11 { pt3dadd( 42.9625, -104.175, -16.3004, 0.23 ) }
    dend_11 { pt3dadd( 48.4779, -112.049, -19.0554, 0.23 ) }
    dend_11 { pt3dadd( 53.4676, -120.658, -20.0439, 0.23 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 18/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 98.373, -21.9002, -2.57383, 1.14 ) }
    dend_7 { pt3dadd( 99.7944, -22.5491, -2.83734, 1.14 ) }
    dend_7 { pt3dadd( 100.847, -23.0373, -3.0051, 0.23 ) }
    dend_7 { pt3dadd( 101.851, -23.5486, -3.14777, 0.68 ) }
    dend_7 { pt3dadd( 103.469, -24.5344, -3.35905, 0.23 ) }
    dend_7 { pt3dadd( 104.414, -25.248, -3.47335, 0.23 ) }
    dend_7 { pt3dadd( 105.368, -26.0379, -3.57983, 0.91 ) }
    dend_7 { pt3dadd( 106.554, -27.1212, -3.69061, 0.23 ) }
    dend_7 { pt3dadd( 107.39, -28.0135, -3.78316, 0.23 ) }
    dend_7 { pt3dadd( 108.481, -29.3328, -3.90994, 0.23 ) }
    dend_7 { pt3dadd( 109.621, -30.9701, -4.05836, 0.23 ) }
    dend_7 { pt3dadd( 110.02, -31.5872, -4.11994, 0.23 ) }
    dend_7 { pt3dadd( 110.927, -32.9757, -4.285, 0.23 ) }
    dend_7 { pt3dadd( 112.31, -34.9377, -4.5879, 0.23 ) }
    dend_7 { pt3dadd( 113.236, -36.0943, -4.78174, 0.23 ) }
    dend_7 { pt3dadd( 114.229, -37.1285, -4.91954, 0.91 ) }
    dend_7 { pt3dadd( 115.535, -38.3504, -5.02309, 0.23 ) }
    dend_7 { pt3dadd( 116.53, -39.275, -5.08201, 0.23 ) }
    dend_7 { pt3dadd( 117.831, -40.4215, -5.10554, 0.23 ) }
    dend_7 { pt3dadd( 118.968, -41.2619, -5.07933, 0.23 ) }
    dend_7 { pt3dadd( 120.99, -42.5511, -4.97702, 0.23 ) }
    dend_7 { pt3dadd( 122.373, -43.3134, -4.8486, 0.23 ) }
    dend_7 { pt3dadd( 130.143, -49.587, -4.33817, 0.23 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 41/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 98.373, -21.9002, -2.57383, 0.23 ) }
    dend_4 { pt3dadd( 100.547, -20.7873, -2.21161, 0.23 ) }
    dend_4 { pt3dadd( 102.368, -19.9448, -1.79243, 0.23 ) }
    dend_4 { pt3dadd( 103.385, -19.5255, -1.5418, 0.45 ) }
    dend_4 { pt3dadd( 104.448, -19.0998, -1.24973, 0.23 ) }
    dend_4 { pt3dadd( 106.315, -18.3173, -0.673697, 0.68 ) }
    dend_4 { pt3dadd( 107.371, -17.8567, -0.29641, 0.23 ) }
    dend_4 { pt3dadd( 109.191, -17.1448, 0.54438, 0.23 ) }
    dend_4 { pt3dadd( 110.499, -16.6325, 1.27865, 0.23 ) }
    dend_4 { pt3dadd( 111.663, -16.1391, 2.0064, 0.68 ) }
    dend_4 { pt3dadd( 112.756, -15.6291, 2.75791, 1.14 ) }
    dend_4 { pt3dadd( 114.665, -14.6949, 4.09239, 0.23 ) }
    dend_4 { pt3dadd( 116.296, -13.7743, 5.22864, 0.23 ) }
    dend_4 { pt3dadd( 117.092, -13.2268, 5.71927, 0.23 ) }
    dend_4 { pt3dadd( 118.186, -12.404, 6.34494, 0.23 ) }
    dend_4 { pt3dadd( 118.943, -11.8391, 6.67512, 0.23 ) }
    dend_4 { pt3dadd( 120.012, -11.0484, 7.00963, 0.68 ) }
    dend_4 { pt3dadd( 121.891, -9.59179, 7.46213, 0.23 ) }
    dend_4 { pt3dadd( 123.133, -8.6068, 7.70006, 1.14 ) }
    dend_4 { pt3dadd( 124.229, -7.85455, 7.88455, 0.23 ) }
    dend_4 { pt3dadd( 126.151, -6.55928, 8.21537, 0.23 ) }
    dend_4 { pt3dadd( 127.349, -5.70606, 8.41614, 0.23 ) }
    dend_4 { pt3dadd( 128.372, -4.93972, 8.60026, 0.23 ) }
    dend_4 { pt3dadd( 130.255, -3.59287, 8.97198, 0.91 ) }
    dend_4 { pt3dadd( 132.344, -2.19076, 9.46292, 0.23 ) }
    dend_4 { pt3dadd( 134.147, -1.06646, 9.92201, 0.23 ) }
    dend_4 { pt3dadd( 135.906, 0.0288895, 10.4098, 0.23 ) }
    dend_4 { pt3dadd( 137.692, 1.07164, 10.9529, 0.91 ) }
    dend_4 { pt3dadd( 140.336, 2.41883, 11.8236, 0.23 ) }
    dend_4 { pt3dadd( 142.452, 3.31773, 12.678, 0.23 ) }
    dend_4 { pt3dadd( 143.407, 3.61973, 13.1291, 0.23 ) }
    dend_4 { pt3dadd( 145.046, 3.8424, 13.9291, 0.23 ) }
    dend_4 { pt3dadd( 146.551, 3.85527, 14.7235, 0.23 ) }
    dend_4 { pt3dadd( 147.992, 3.7669, 15.5321, 0.68 ) }
    dend_4 { pt3dadd( 149.645, 3.5856, 16.4595, 0.23 ) }
    dend_4 { pt3dadd( 151.085, 3.45545, 17.2309, 0.91 ) }
    dend_4 { pt3dadd( 152.685, 3.41602, 18.0607, 0.23 ) }
    dend_4 { pt3dadd( 154.64, 3.46803, 18.9964, 1.14 ) }
    dend_4 { pt3dadd( 156.171, 3.69962, 19.6312, 0.23 ) }
    dend_4 { pt3dadd( 157.208, 3.99049, 19.997, 0.23 ) }
    dend_4 { pt3dadd( 158.613, 4.52677, 20.4723, 0.68 ) }
    dend_4 { pt3dadd( 160.029, 5.18235, 20.9949, 0.23 ) }
    dend_4 { pt3dadd( 160.941, 5.61534, 21.3465, 0.68 ) }
    dend_4 { pt3dadd( 162.369, 6.26363, 21.9083, 1.14 ) }
    dend_4 { pt3dadd( 163.65, 6.79622, 22.3962, 0.23 ) }
    dend_4 { pt3dadd( 165.225, 7.38696, 23.034, 1.36 ) }
    dend_4 { pt3dadd( 166.19, 7.67964, 23.4333, 1.36 ) }
    dend_4 { pt3dadd( 168.236, 8.27846, 24.2755, 0.23 ) }
    dend_4 { pt3dadd( 169.551, 8.63072, 24.8359, 0.68 ) }
    dend_4 { pt3dadd( 170.568, 8.88981, 25.2754, 0.23 ) }
    dend_4 { pt3dadd( 171.557, 9.10739, 25.6947, 0.91 ) }
    dend_4 { pt3dadd( 173.608, 9.52491, 26.4091, 1.59 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 93/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -153.822, 33.4438, 53.4105, 0.45 ) }
    dend_83 { pt3dadd( -155.708, 33.0269, 54.3062, 0.45 ) }
    dend_83 { pt3dadd( -158.041, 32.4617, 55.4862, 0.45 ) }
    dend_83 { pt3dadd( -159.58, 32.078, 56.2615, 0.45 ) }
    dend_83 { pt3dadd( -160.391, 31.8747, 56.7197, 0.91 ) }
    dend_83 { pt3dadd( -162.027, 31.4807, 57.7562, 0.23 ) }
    dend_83 { pt3dadd( -163.244, 31.2371, 58.5541, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_83 { pt3dadd( -165.178, 30.9796, 59.9841, 0.23 ) }
    dend_83 { pt3dadd( -165.698, 30.984, 60.4227, 0.91 ) }
    dend_83 { pt3dadd( -167.287, 31.4042, 61.9381, 0.23 ) }
    dend_83 { pt3dadd( -168.146, 31.9202, 62.8454, 0.23 ) }
    dend_83 { pt3dadd( -168.939, 32.7181, 63.7738, 0.23 ) }
    dend_83 { pt3dadd( -169.66, 33.7063, 64.6709, 0.68 ) }
    dend_83 { pt3dadd( -170.638, 35.4422, 65.9177, 0.23 ) }
    dend_83 { pt3dadd( -171.734, 37.662, 67.4084, 0.23 ) }
    dend_83 { pt3dadd( -172.127, 38.6023, 67.957, 0.23 ) }
    dend_83 { pt3dadd( -172.376, 39.3458, 68.372, 0.23 ) }
    dend_83 { pt3dadd( -172.661, 40.3981, 68.9891, 0.23 ) }
    dend_83 { pt3dadd( -172.966, 41.8239, 69.8016, 1.14 ) }
    dend_83 { pt3dadd( -173.201, 43.6269, 70.7315, 0.23 ) }
    dend_83 { pt3dadd( -173.178, 44.7247, 71.2718, 0.23 ) }
    dend_83 { pt3dadd( -173.095, 45.972, 71.9108, 0.68 ) }
    dend_83 { pt3dadd( -173.045, 47.2567, 72.6569, 0.23 ) }
    dend_83 { pt3dadd( -172.963, 48.3033, 73.2938, 0.91 ) }
    dend_83 { pt3dadd( -172.86, 49.2273, 73.8827, 0.23 ) }
    dend_83 { pt3dadd( -172.816, 50.2998, 74.638, 0.23 ) }
    dend_83 { pt3dadd( -172.905, 51.3361, 75.506, 1.14 ) }
    dend_83 { pt3dadd( -173.506, 53.205, 77.2599, 0.23 ) }
    dend_83 { pt3dadd( -173.766, 53.698, 77.7515, 0.23 ) }
    dend_83 { pt3dadd( -174.432, 54.4847, 78.6474, 0.68 ) }
    dend_83 { pt3dadd( -175.649, 55.548, 79.9125, 0.23 ) }
    dend_83 { pt3dadd( -176.235, 56.0037, 80.4286, 1.14 ) }
    dend_83 { pt3dadd( -178.149, 57.4223, 81.8972, 0.23 ) }
    dend_83 { pt3dadd( -178.94, 57.9802, 82.4166, 0.68 ) }
    dend_83 { pt3dadd( -181.159, 59.4949, 83.6888, 0.23 ) }
    dend_83 { pt3dadd( -182.133, 60.1396, 84.1685, 0.68 ) }
    dend_83 { pt3dadd( -183.383, 60.9618, 84.7181, 0.23 ) }
    dend_83 { pt3dadd( -184.169, 61.4229, 85.0692, 0.23 ) }
    dend_83 { pt3dadd( -184.928, 61.8247, 85.3809, 0.23 ) }
    dend_83 { pt3dadd( -186.481, 62.5768, 85.9612, 0.68 ) }
    dend_83 { pt3dadd( -187.101, 62.8383, 86.1154, 0.23 ) }
    dend_83 { pt3dadd( -188.269, 63.2147, 86.419, 1.14 ) }
    dend_83 { pt3dadd( -190.602, 63.5688, 86.9795, 0.23 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 36/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -153.822, 33.4438, 53.4105, 0.23 ) }
    dend_82 { pt3dadd( -154.935, 35.5238, 53.8004, 0.23 ) }
    dend_82 { pt3dadd( -156.012, 37.5157, 54.2307, 0.23 ) }
    dend_82 { pt3dadd( -156.76, 38.8946, 54.532, 1.14 ) }
    dend_82 { pt3dadd( -157.335, 40.0637, 54.776, 0.23 ) }
    dend_82 { pt3dadd( -158.338, 42.3123, 55.2169, 1.14 ) }
    dend_82 { pt3dadd( -158.992, 43.9463, 55.5328, 0.23 ) }
    dend_82 { pt3dadd( -159.334, 45.0273, 55.7659, 0.23 ) }
    dend_82 { pt3dadd( -159.647, 46.4505, 56.0736, 1.14 ) }
    dend_82 { pt3dadd( -159.875, 48.2547, 56.4251, 0.23 ) }
    dend_82 { pt3dadd( -159.944, 49.3937, 56.6352, 0.23 ) }
    dend_82 { pt3dadd( -159.964, 50.8927, 56.9115, 1.14 ) }
    dend_82 { pt3dadd( -159.955, 52.7467, 57.217, 0.23 ) }
    dend_82 { pt3dadd( -159.903, 53.8737, 57.4273, 0.23 ) }
    dend_82 { pt3dadd( -159.842, 54.7083, 57.5936, 0.23 ) }
    dend_82 { pt3dadd( -159.725, 56.1641, 57.8738, 1.14 ) }
    dend_82 { pt3dadd( -159.546, 57.8151, 58.1527, 0.23 ) }
    dend_82 { pt3dadd( -159.397, 59.3954, 58.4032, 0.23 ) }
    dend_82 { pt3dadd( -159.317, 60.3387, 58.5449, 1.14 ) }
    dend_82 { pt3dadd( -159.191, 61.4573, 58.768, 0.23 ) }
    dend_82 { pt3dadd( -158.907, 62.9716, 59.1043, 0.68 ) }
    dend_82 { pt3dadd( -158.594, 64.4831, 59.4972, 0.23 ) }
    dend_82 { pt3dadd( -158.341, 65.7881, 59.8623, 1.14 ) }
    dend_82 { pt3dadd( -158.183, 66.706, 60.1483, 0.23 ) }
    dend_82 { pt3dadd( -157.865, 68.3453, 60.741, 0.23 ) }
    dend_82 { pt3dadd( -157.401, 70.2944, 61.5077, 1.36 ) }
    dend_82 { pt3dadd( -156.983, 71.826, 62.1572, 0.23 ) }
    dend_82 { pt3dadd( -156.7, 72.8055, 62.5717, 0.23 ) }
    dend_82 { pt3dadd( -156.165, 74.6897, 63.3307, 1.14 ) }
    dend_82 { pt3dadd( -155.852, 75.7141, 63.756, 0.23 ) }
    dend_82 { pt3dadd( -155.452, 77.0461, 64.2728, 1.14 ) }
    dend_82 { pt3dadd( -154.883, 78.9956, 65.0627, 0.23 ) }
    dend_82 { pt3dadd( -154.607, 79.7709, 65.366, 1.14 ) }
    dend_82 { pt3dadd( -153.908, 81.653, 66.0765, 0.23 ) }
    dend_82 { pt3dadd( -153.35, 83.0826, 66.6111, 1.14 ) }
    dend_82 { pt3dadd( -152.752, 84.6074, 67.1247, 0.23 ) }
    dend_82 { pt3dadd( -152.101, 86.2083, 67.7083, 0.68 ) }
    dend_82 { pt3dadd( -151.58, 87.516, 68.1781, 0.23 ) }
    dend_82 { pt3dadd( -151.071, 88.9175, 68.7283, 0.91 ) }
    dend_82 { pt3dadd( -150.788, 89.9228, 69.1241, 0.23 ) }
    dend_82 { pt3dadd( -150.475, 91.5465, 69.748, 1.14 ) }
    dend_82 { pt3dadd( -150.214, 93.4542, 70.5368, 0.23 ) }
    dend_82 { pt3dadd( -150.214, 94.2365, 70.8775, 0.91 ) }
    dend_82 { pt3dadd( -150.407, 95.7815, 71.6383, 0.23 ) }
    dend_82 { pt3dadd( -150.643, 97.0517, 72.293, 0.68 ) }
    dend_82 { pt3dadd( -150.769, 97.6958, 72.6112, 0.23 ) }
    dend_82 { pt3dadd( -150.956, 98.6051, 73.0992, 1.36 ) }
    dend_82 { pt3dadd( -151.34, 100.376, 74.0782, 0.23 ) }
    dend_82 { pt3dadd( -151.682, 101.848, 74.9234, 0.91 ) }
    dend_82 { pt3dadd( -152.05, 102.951, 75.5601, 0.23 ) }
    dend_82 { pt3dadd( -152.516, 103.93, 76.1708, 1.14 ) }
    dend_82 { pt3dadd( -153.401, 105.455, 77.1142, 0.23 ) }
    dend_82 { pt3dadd( -154.128, 106.608, 77.7931, 0.23 ) }
    dend_82 { pt3dadd( -154.707, 107.421, 78.2504, 0.23 ) }
    dend_82 { pt3dadd( -156.299, 109.173, 79.2321, 0.91 ) }
    dend_82 { pt3dadd( -157.647, 110.442, 80.0198, 0.23 ) }
    dend_82 { pt3dadd( -158.237, 111.002, 80.3878, 1.14 ) }
    dend_82 { pt3dadd( -159.514, 112.181, 81.148, 0.23 ) }
    dend_82 { pt3dadd( -160.158, 112.754, 81.5669, 0.23 ) }
    dend_82 { pt3dadd( -161.46, 113.899, 82.4778, 1.14 ) }
    dend_82 { pt3dadd( -162.729, 114.864, 83.4126, 0.23 ) }
    dend_82 { pt3dadd( -164.534, 115.92, 84.668, 0.23 ) }
    dend_82 { pt3dadd( -166.718, 116.89, 86.2439, 1.14 ) }
    dend_82 { pt3dadd( -167.868, 117.271, 87.0891, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_82 { pt3dadd( -169.097, 117.636, 88.0707, 1.14 ) }
    dend_82 { pt3dadd( -171.316, 118.199, 89.8152, 0.23 ) }
    dend_82 { pt3dadd( -172.934, 118.497, 90.9759, 0.91 ) }
    dend_82 { pt3dadd( -174.685, 118.748, 92.1754, 0.68 ) }
    dend_82 { pt3dadd( -175.335, 118.832, 92.7379, 0.68 ) }
    dend_82 { pt3dadd( -176.872, 118.976, 94.1895, 0.68 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 6/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -167.285, 71.3944, 93.8574, 0.23 ) }
    dend_80 { pt3dadd( -168.534, 71.4565, 94.4446, 0.23 ) }
    dend_80 { pt3dadd( -169.338, 71.4971, 94.9199, 0.91 ) }
    dend_80 { pt3dadd( -171.32, 71.4594, 96.2883, 0.23 ) }
    dend_80 { pt3dadd( -172.803, 71.4312, 97.3124, 0.91 ) }
    dend_80 { pt3dadd( -174.235, 71.404, 98.3009, 1.36 ) }
    dend_80 { pt3dadd( -176.212, 71.3664, 99.6661, 0.23 ) }
    dend_80 { pt3dadd( -177.587, 71.298, 100.762, 0.68 ) }
    dend_80 { pt3dadd( -178.808, 71.1969, 101.879, 0.68 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 15/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -167.285, 71.3944, 93.8574, 0.68 ) }
    dend_79 { pt3dadd( -168.485, 71.8881, 95.1549, 0.68 ) }
    dend_79 { pt3dadd( -170.332, 72.3859, 97.048, 0.23 ) }
    dend_79 { pt3dadd( -171.735, 72.6522, 98.4069, 0.68 ) }
    dend_79 { pt3dadd( -172.9, 72.7732, 99.3755, 0.68 ) }
    dend_79 { pt3dadd( -174.181, 72.8165, 100.345, 0.91 ) }
    dend_79 { pt3dadd( -175.683, 72.8053, 101.342, 0.23 ) }
    dend_79 { pt3dadd( -176.956, 72.6989, 102.046, 0.23 ) }
    dend_79 { pt3dadd( -178.244, 72.5362, 102.572, 0.23 ) }
    dend_79 { pt3dadd( -180.642, 72.309, 103.276, 0.91 ) }
    dend_79 { pt3dadd( -182.501, 72.1637, 103.743, 0.23 ) }
    dend_79 { pt3dadd( -184.734, 72.0502, 104.251, 0.23 ) }
    dend_79 { pt3dadd( -186.609, 71.9674, 104.586, 0.23 ) }
    dend_79 { pt3dadd( -188.889, 71.8742, 104.899, 0.23 ) }
    dend_79 { pt3dadd( -191.413, 71.8083, 105.15, 0.45 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 30/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -72.609, 21.1678, 10.6301, 0.23 ) }
    dend_74 { pt3dadd( -74.3586, 21.9523, 10.9138, 0.23 ) }
    dend_74 { pt3dadd( -76.0538, 22.7766, 11.2481, 0.68 ) }
    dend_74 { pt3dadd( -78.4626, 23.9669, 11.8247, 0.23 ) }
    dend_74 { pt3dadd( -81.0821, 25.2625, 12.5672, 0.68 ) }
    dend_74 { pt3dadd( -82.113, 25.7937, 12.88, 0.23 ) }
    dend_74 { pt3dadd( -83.3296, 26.4285, 13.2533, 0.91 ) }
    dend_74 { pt3dadd( -84.4682, 27.0207, 13.6516, 0.91 ) }
    dend_74 { pt3dadd( -85.868, 27.8005, 14.2327, 0.91 ) }
    dend_74 { pt3dadd( -87.3503, 28.6834, 14.8987, 0.91 ) }
    dend_74 { pt3dadd( -88.3407, 29.2723, 15.303, 0.68 ) }
    dend_74 { pt3dadd( -89.3916, 29.8922, 15.7043, 0.68 ) }
    dend_74 { pt3dadd( -89.8251, 30.1422, 15.8757, 0.68 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 43/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -72.609, 21.1678, 10.6301, 0.23 ) }
    dend_71 { pt3dadd( -73.3585, 19.8956, 10.2161, 0.23 ) }
    dend_71 { pt3dadd( -74.3903, 18.3857, 9.76009, 0.68 ) }
    dend_71 { pt3dadd( -75.7483, 16.4119, 9.1964, 0.23 ) }
    dend_71 { pt3dadd( -76.3429, 15.5517, 8.9444, 0.23 ) }
    dend_71 { pt3dadd( -76.9801, 14.6539, 8.66246, 0.23 ) }
    dend_71 { pt3dadd( -77.6709, 13.7746, 8.37386, 0.91 ) }
    dend_71 { pt3dadd( -79.2562, 11.9666, 7.73095, 0.45 ) }
    dend_71 { pt3dadd( -80.6026, 10.5939, 7.17745, 0.45 ) }
    dend_71 { pt3dadd( -81.8474, 9.45928, 6.66705, 1.59 ) }
    dend_71 { pt3dadd( -83.1091, 8.30826, 6.13759, 0.45 ) }
    dend_71 { pt3dadd( -84.4541, 7.07856, 5.57776, 0.91 ) }
    dend_71 { pt3dadd( -85.1944, 6.46197, 5.26161, 0.23 ) }
    dend_71 { pt3dadd( -86.2092, 5.74064, 4.78701, 0.23 ) }
    dend_71 { pt3dadd( -87.5271, 5.03994, 4.22088, 1.14 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 58/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -68.4898, 0.322746, 19.6664, 0.23 ) }
    dend_69 { pt3dadd( -68.1461, -1.6579, 19.5141, 0.23 ) }
    dend_69 { pt3dadd( -67.9309, -2.77235, 19.4364, 0.23 ) }
    dend_69 { pt3dadd( -67.5218, -4.5029, 19.3293, 0.23 ) }
    dend_69 { pt3dadd( -67.1767, -5.61129, 19.3081, 0.23 ) }
    dend_69 { pt3dadd( -66.5283, -7.25349, 19.3154, 0.68 ) }
    dend_69 { pt3dadd( -65.7157, -9.01438, 19.3697, 0.23 ) }
    dend_69 { pt3dadd( -65.4551, -9.5202, 19.3968, 0.23 ) }
    dend_69 { pt3dadd( -64.3897, -11.3449, 19.5436, 0.91 ) }
    dend_69 { pt3dadd( -63.0649, -13.2687, 19.7883, 0.23 ) }
    dend_69 { pt3dadd( -62.054, -14.5057, 19.9885, 0.68 ) }
    dend_69 { pt3dadd( -61.3227, -15.2342, 20.1465, 0.23 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 70/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -68.4898, 0.322746, 19.6664, 0.23 ) }
    dend_68 { pt3dadd( -69.2451, -1.28147, 20.0226, 0.23 ) }
    dend_68 { pt3dadd( -69.6055, -2.07786, 20.2163, 0.45 ) }
    dend_68 { pt3dadd( -70.425, -4.0667, 20.674, 0.23 ) }
    dend_68 { pt3dadd( -71.3495, -6.43537, 21.1897, 0.68 ) }
    dend_68 { pt3dadd( -72.2347, -8.64551, 21.6755, 0.23 ) }
    dend_68 { pt3dadd( -72.7364, -9.84995, 21.9318, 0.68 ) }
    dend_68 { pt3dadd( -73.7075, -12.1886, 22.4846, 0.23 ) }
    dend_68 { pt3dadd( -74.3945, -13.7372, 22.8683, 0.23 ) }
    dend_68 { pt3dadd( -74.8426, -14.5504, 23.0924, 0.91 ) }
    dend_68 { pt3dadd( -76.1574, -16.5114, 23.6995, 0.23 ) }
    dend_68 { pt3dadd( -77.3611, -17.9581, 24.2791, 0.68 ) }
    dend_68 { pt3dadd( -78.4389, -19.0241, 24.7722, 0.23 ) }
    dend_68 { pt3dadd( -79.2338, -19.6508, 25.1155, 0.91 ) }
    dend_68 { pt3dadd( -81.7019, -21.3303, 26.2349, 0.23 ) }
    dend_68 { pt3dadd( -82.8102, -22.0026, 26.739, 1.14 ) }
    dend_68 { pt3dadd( -84.6953, -23.092, 27.5814, 0.23 ) }
    dend_68 { pt3dadd( -85.434, -23.5244, 27.9022, 0.23 ) }
    dend_68 { pt3dadd( -86.5294, -24.1813, 28.3122, 1.14 ) }
    dend_68 { pt3dadd( -88.0961, -25.1326, 28.8373, 0.23 ) }
    dend_68 { pt3dadd( -89.0375, -25.6854, 29.1207, 0.91 ) }
    dend_68 { pt3dadd( -90.3932, -26.4125, 29.4795, 0.23 ) }
    dend_68 { pt3dadd( -91.3754, -26.8576, 29.6783, 0.68 ) }
    dend_68 { pt3dadd( -93.2664, -27.5538, 30.0091, 0.23 ) }
    dend_68 { pt3dadd( -94.7691, -28.0079, 30.2146, 0.68 ) }
    dend_68 { pt3dadd( -96.3918, -28.4684, 30.4857, 0.23 ) }
    dend_68 { pt3dadd( -97.7806, -28.8724, 30.7785, 0.91 ) }
    dend_68 { pt3dadd( -99.882, -29.5279, 31.4027, 0.23 ) }
    dend_68 { pt3dadd( -101.161, -30.0198, 31.9032, 1.14 ) }
    dend_68 { pt3dadd( -102.292, -30.6983, 32.5842, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_68 { pt3dadd( -103.862, -32.3956, 34.1078, 0.23 ) }
    dend_68 { pt3dadd( -104.362, -33.424, 34.9155, 0.91 ) }
    dend_68 { pt3dadd( -104.601, -35.0596, 36.236, 0.91 ) }
    dend_68 { pt3dadd( -104.601, -35.9231, 36.886, 0.91 ) }
    dend_68 { pt3dadd( -104.517, -37.5891, 38.0632, 0.23 ) }
    dend_68 { pt3dadd( -104.424, -38.7967, 38.8679, 0.23 ) }
    dend_68 { pt3dadd( -104.398, -39.4267, 39.2348, 0.68 ) }
    dend_68 { pt3dadd( -104.43, -41.5816, 40.4421, 0.23 ) }
    dend_68 { pt3dadd( -104.675, -43.1485, 41.2382, 0.68 ) }
    dend_68 { pt3dadd( -104.954, -44.0687, 41.6695, 0.23 ) }
    dend_68 { pt3dadd( -105.313, -44.8781, 42.0355, 0.68 ) }
    dend_68 { pt3dadd( -106.49, -47.0258, 42.9948, 0.23 ) }
    dend_68 { pt3dadd( -107.37, -48.2851, 43.5464, 1.14 ) }
    dend_68 { pt3dadd( -108.431, -49.5047, 44.0508, 0.23 ) }
    dend_68 { pt3dadd( -109.995, -51.0652, 44.746, 0.91 ) }
    dend_68 { pt3dadd( -111.22, -52.0961, 45.2191, 0.23 ) }
    dend_68 { pt3dadd( -112.477, -53.0062, 45.6405, 0.68 ) }
    dend_68 { pt3dadd( -114.612, -54.4003, 46.2281, 0.23 ) }
    dend_68 { pt3dadd( -115.356, -54.8889, 46.3899, 0.68 ) }
    dend_68 { pt3dadd( -116.254, -55.5159, 46.5164, 0.23 ) }
    dend_68 { pt3dadd( -117.181, -56.2321, 46.5515, 0.23 ) }
    dend_68 { pt3dadd( -118.232, -57.1826, 46.4335, 0.91 ) }
    dend_68 { pt3dadd( -119.808, -58.8998, 46.0216, 0.23 ) }
    dend_68 { pt3dadd( -120.603, -59.9561, 45.6446, 0.68 ) }
    dend_68 { pt3dadd( -122.032, -61.9876, 44.7522, 0.23 ) }
    dend_68 { pt3dadd( -122.72, -62.9311, 44.2806, 0.23 ) }
    dend_68 { pt3dadd( -123.304, -63.6551, 43.8634, 0.91 ) }
    dend_68 { pt3dadd( -124.076, -64.4569, 43.3278, 0.23 ) }
    dend_68 { pt3dadd( -125.124, -65.4424, 42.5989, 1.14 ) }
    dend_68 { pt3dadd( -126.804, -66.8636, 41.5548, 0.23 ) }
    dend_68 { pt3dadd( -128.338, -67.9489, 40.7052, 0.68 ) }
    dend_68 { pt3dadd( -130.121, -68.9997, 39.8368, 0.23 ) }
    dend_68 { pt3dadd( -130.911, -69.3965, 39.4946, 0.91 ) }
    // Section: dend_63, id: dend_63, parent: dend_59 (entry count 33/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -55.66, 129.78, 2.87155, 0.23 ) }
    dend_63 { pt3dadd( -53.9281, 130.904, 3.91877, 0.23 ) }
    dend_63 { pt3dadd( -53.2911, 131.318, 4.30397, 0.23 ) }
    dend_63 { pt3dadd( -52.259, 131.988, 4.92805, 0.23 ) }
    dend_63 { pt3dadd( -50.9945, 132.809, 5.6926, 0.23 ) }
    dend_63 { pt3dadd( -50.3194, 133.247, 6.10085, 0.91 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 39/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -55.66, 129.78, 2.87155, 0.91 ) }
    dend_60 { pt3dadd( -56.9367, 130.848, 3.30739, 0.91 ) }
    dend_60 { pt3dadd( -58.3843, 132.059, 3.80156, 0.91 ) }
    dend_60 { pt3dadd( -59.2587, 132.79, 4.10005, 0.91 ) }
    dend_60 { pt3dadd( -60.4026, 133.747, 4.49055, 0.91 ) }
    dend_60 { pt3dadd( -61.6067, 134.754, 4.9016, 1.36 ) }
    dend_60 { pt3dadd( -63.1785, 136.068, 5.43818, 0.23 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 46/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -59.1575, 75.7848, -1.03788, 0.91 ) }
    dend_56 { pt3dadd( -60.4127, 76.2019, -0.676474, 0.91 ) }
    dend_56 { pt3dadd( -61.7045, 76.6585, -0.312051, 0.91 ) }
    dend_56 { pt3dadd( -63.8765, 77.3946, 0.263831, 0.23 ) }
    dend_56 { pt3dadd( -65.7811, 77.9548, 0.713972, 0.23 ) }
    dend_56 { pt3dadd( -67.0775, 78.2436, 0.97523, 0.91 ) }
    dend_56 { pt3dadd( -68.3772, 78.4749, 1.20868, 0.23 ) }
    dend_56 { pt3dadd( -69.3044, 78.5928, 1.36482, 0.68 ) }
    dend_56 { pt3dadd( -70.4295, 78.6576, 1.52113, 0.23 ) }
    dend_56 { pt3dadd( -72.2489, 78.7066, 1.69345, 0.91 ) }
    dend_56 { pt3dadd( -74.5279, 78.6745, 1.7748, 0.23 ) }
    dend_56 { pt3dadd( -75.2083, 78.6638, 1.75991, 0.91 ) }
    dend_56 { pt3dadd( -76.4077, 78.6681, 1.69743, 0.23 ) }
    dend_56 { pt3dadd( -78.2964, 78.73, 1.55191, 0.23 ) }
    dend_56 { pt3dadd( -80.0626, 78.8449, 1.37529, 1.14 ) }
    dend_56 { pt3dadd( -82.1316, 79.0368, 1.12284, 0.23 ) }
    dend_56 { pt3dadd( -83.4725, 79.1777, 0.93719, 0.23 ) }
    dend_56 { pt3dadd( -85.0612, 79.3198, 0.71813, 0.68 ) }
    dend_56 { pt3dadd( -86.0102, 79.4105, 0.590499, 0.23 ) }
    dend_56 { pt3dadd( -86.8981, 79.5254, 0.463876, 0.68 ) }
    dend_56 { pt3dadd( -87.9971, 79.7216, 0.315906, 0.23 ) }
    dend_56 { pt3dadd( -89.1037, 80.0015, 0.197105, 0.91 ) }
    dend_56 { pt3dadd( -91.1242, 80.6227, -0.0673903, 0.23 ) }
    dend_56 { pt3dadd( -92.6209, 81.1462, -0.326018, 0.23 ) }
    dend_56 { pt3dadd( -94.1718, 81.709, -0.586794, 0.23 ) }
    dend_56 { pt3dadd( -95.1919, 82.0392, -0.744938, 0.68 ) }
    dend_56 { pt3dadd( -96.8044, 82.4654, -1.03723, 0.91 ) }
    dend_56 { pt3dadd( -99.0907, 82.9887, -1.47783, 0.23 ) }
    dend_56 { pt3dadd( -100.185, 83.2076, -1.69827, 0.23 ) }
    dend_56 { pt3dadd( -102.07, 83.5595, -2.1284, 1.14 ) }
    dend_56 { pt3dadd( -104.065, 83.8734, -2.58763, 0.23 ) }
    dend_56 { pt3dadd( -106.16, 84.1583, -3.10104, 0.23 ) }
    dend_56 { pt3dadd( -107.908, 84.347, -3.57324, 0.23 ) }
    dend_56 { pt3dadd( -109.348, 84.5053, -3.96528, 0.68 ) }
    dend_56 { pt3dadd( -111.65, 84.8424, -4.69684, 0.23 ) }
    dend_56 { pt3dadd( -113.129, 85.1358, -5.27149, 0.23 ) }
    dend_56 { pt3dadd( -114.091, 85.3812, -5.66958, 0.23 ) }
    dend_56 { pt3dadd( -115.271, 85.6566, -6.10017, 0.23 ) }
    dend_56 { pt3dadd( -124.981, 87.8898, -6.95853, 0.23 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 85/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -59.1575, 75.7848, -1.03788, 0.23 ) }
    dend_53 { pt3dadd( -59.4664, 77.5234, -0.62832, 0.23 ) }
    dend_53 { pt3dadd( -59.7449, 79.2325, -0.303797, 0.23 ) }
    dend_53 { pt3dadd( -59.9881, 81.25, 0.0057897, 0.23 ) }
    dend_53 { pt3dadd( -60.1938, 82.7253, 0.199362, 0.23 ) }
    dend_53 { pt3dadd( -60.5277, 84.8835, 0.400815, 0.68 ) }
    dend_53 { pt3dadd( -60.968, 87.7112, 0.514784, 0.23 ) }
    dend_53 { pt3dadd( -61.205, 89.1333, 0.476332, 0.91 ) }
    dend_53 { pt3dadd( -61.5929, 91.2821, 0.20892, 0.23 ) }
    dend_53 { pt3dadd( -61.9481, 93.0418, -0.134906, 0.23 ) }
    dend_53 { pt3dadd( -62.2213, 94.1682, -0.442329, 0.68 ) }
    dend_53 { pt3dadd( -62.7243, 96.0964, -1.09267, 0.23 ) }
    dend_53 { pt3dadd( -62.9534, 97.2514, -1.57379, 0.68 ) }
    dend_53 { pt3dadd( -63.134, 99.0618, -2.42094, 1.14 ) }
    dend_53 { pt3dadd( -63.1737, 100.41, -3.07428, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_53 { pt3dadd( -63.0837, 101.662, -3.64273, 0.23 ) }
    dend_53 { pt3dadd( -62.9121, 102.986, -4.15271, 0.23 ) }
    dend_53 { pt3dadd( -62.6263, 104.579, -4.67296, 0.23 ) }
    dend_53 { pt3dadd( -62.2397, 106.537, -5.22078, 0.23 ) }
    dend_53 { pt3dadd( -62.0595, 107.656, -5.4639, 0.23 ) }
    dend_53 { pt3dadd( -61.9486, 108.612, -5.61606, 0.68 ) }
    dend_53 { pt3dadd( -61.8532, 110.11, -5.7205, 0.23 ) }
    dend_53 { pt3dadd( -61.8033, 111.601, -5.73164, 0.23 ) }
    dend_53 { pt3dadd( -61.746, 113.327, -5.6079, 0.91 ) }
    dend_53 { pt3dadd( -61.6523, 115.039, -5.35628, 0.23 ) }
    dend_53 { pt3dadd( -61.5455, 116.48, -5.09751, 0.68 ) }
    dend_53 { pt3dadd( -61.4151, 118.327, -4.70757, 0.23 ) }
    dend_53 { pt3dadd( -61.3253, 119.516, -4.41342, 0.68 ) }
    dend_53 { pt3dadd( -61.1792, 121.365, -3.91319, 0.23 ) }
    dend_53 { pt3dadd( -61.0826, 122.492, -3.6004, 1.14 ) }
    dend_53 { pt3dadd( -60.9311, 124.722, -3.03209, 0.23 ) }
    dend_53 { pt3dadd( -60.869, 126.175, -2.68425, 0.23 ) }
    dend_53 { pt3dadd( -60.8633, 127.145, -2.47294, 0.91 ) }
    dend_53 { pt3dadd( -60.8878, 128.277, -2.23542, 0.23 ) }
    dend_53 { pt3dadd( -60.9674, 129.695, -1.99205, 0.91 ) }
    dend_53 { pt3dadd( -61.1224, 131.688, -1.74943, 0.23 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 21/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -26.6253, 99.5784, -9.4601, 0.23 ) }
    dend_46 { pt3dadd( -26.5141, 101.251, -9.27972, 0.23 ) }
    dend_46 { pt3dadd( -26.5791, 103.245, -9.09192, 0.23 ) }
    dend_46 { pt3dadd( -26.757, 104.331, -8.98471, 0.23 ) }
    dend_46 { pt3dadd( -27.1018, 105.863, -8.84004, 0.23 ) }
    dend_46 { pt3dadd( -27.4303, 107.035, -8.69352, 0.23 ) }
    dend_46 { pt3dadd( -27.9671, 108.66, -8.46726, 0.23 ) }
    dend_46 { pt3dadd( -28.7536, 110.404, -8.21055, 0.23 ) }
    dend_46 { pt3dadd( -30.3335, 113.35, -7.68385, 0.23 ) }
    dend_46 { pt3dadd( -31.2035, 114.813, -7.37906, 2.05 ) }
    dend_46 { pt3dadd( -32.3048, 116.525, -6.97726, 0.23 ) }
    dend_46 { pt3dadd( -32.9998, 117.532, -6.71879, 0.23 ) }
    dend_46 { pt3dadd( -33.912, 118.765, -6.3274, 0.23 ) }
    dend_46 { pt3dadd( -35.1857, 120.403, -5.71895, 0.23 ) }
    dend_46 { pt3dadd( -35.9865, 121.265, -5.31573, 0.23 ) }
    dend_46 { pt3dadd( -36.6694, 121.861, -4.9604, 1.14 ) }
    dend_46 { pt3dadd( -37.3559, 122.351, -4.6333, 1.14 ) }
    dend_46 { pt3dadd( -39.0772, 123.41, -3.85981, 0.23 ) }
    dend_46 { pt3dadd( -39.8029, 123.815, -3.53706, 0.23 ) }
    dend_46 { pt3dadd( -41.3616, 124.458, -2.9158, 0.23 ) }
    dend_46 { pt3dadd( -42.5983, 124.876, -2.44739, 0.23 ) }
    dend_46 { pt3dadd( -44.3606, 125.4, -1.78397, 0.23 ) }
    dend_46 { pt3dadd( -45.6937, 125.771, -1.29803, 0.91 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 44/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -26.6253, 99.5784, -9.4601, 0.23 ) }
    dend_43 { pt3dadd( -27.5458, 100.707, -9.25949, 0.23 ) }
    dend_43 { pt3dadd( -28.5407, 101.954, -9.04855, 0.91 ) }
    dend_43 { pt3dadd( -29.6663, 103.365, -8.80991, 0.23 ) }
    dend_43 { pt3dadd( -30.3527, 104.225, -8.66438, 0.23 ) }
    dend_43 { pt3dadd( -31.5888, 105.774, -8.4023, 0.23 ) }
    dend_43 { pt3dadd( -33.481, 108.145, -8.00113, 0.23 ) }
    dend_43 { pt3dadd( -34.0874, 109.048, -7.8508, 1.59 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 52/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -29.7152, 115.103, -173.221, 0.68 ) }
    dend_40 { pt3dadd( -30.1116, 112.941, -182.976, 0.68 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 54/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -29.7152, 115.103, -173.221, 0.23 ) }
    dend_39 { pt3dadd( -32.5932, 121.932, -179.935, 0.68 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 56/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -10.6504, 98.2031, -118.342, 0.68 ) }
    dend_37 { pt3dadd( -14.3708, 99.8908, -127.47, 0.68 ) }
    dend_37 { pt3dadd( -19.5131, 103.065, -135.437, 0.68 ) }
    dend_37 { pt3dadd( -24.7331, 108.085, -142.333, 0.68 ) }
    dend_37 { pt3dadd( -29.1479, 113.464, -149.514, 0.68 ) }
    dend_37 { pt3dadd( -34.5455, 117.837, -156.708, 0.68 ) }
    dend_37 { pt3dadd( -38.6397, 120.778, -165.344, 0.68 ) }
    dend_37 { pt3dadd( -42.9883, 124.931, -173.334, 0.68 ) }
    dend_37 { pt3dadd( -48.4988, 129.191, -180.51, 0.68 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 65/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -10.6504, 98.2031, -118.342, 0.23 ) }
    dend_36 { pt3dadd( -8.46872, 103.139, -126.761, 0.68 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 67/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 23.401, -209.279, -13.8809, 0.68 ) }
    dend_19 { pt3dadd( 24.3604, -219.174, -14.9672, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 69/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 23.401, -209.279, -13.8809, 0.23 ) }
    dend_18 { pt3dadd( 24.6601, -219.199, -13.8483, 0.68 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 71/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 126.26, -107.592, 50.3365, 0.68 ) }
    dend_16 { pt3dadd( 134.359, -106.939, 56.1664, 0.68 ) }
    dend_16 { pt3dadd( 142.199, -104.098, 61.6859, 0.68 ) }
    dend_16 { pt3dadd( 149.899, -103.154, 67.9956, 0.68 ) }
    dend_16 { pt3dadd( 158.991, -104.112, 72.0469, 0.68 ) }
    dend_16 { pt3dadd( 168.377, -106.373, 74.6542, 0.68 ) }
    dend_16 { pt3dadd( 178.198, -107.069, 76.404, 0.68 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 78/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 126.26, -107.592, 50.3365, 0.23 ) }
    dend_15 { pt3dadd( 135.595, -106.673, 53.804, 0.68 ) }
    dend_15 { pt3dadd( 144.413, -107.475, 58.4499, 0.68 ) }
    dend_15 { pt3dadd( 153.301, -108.398, 62.9394, 0.68 ) }
    dend_15 { pt3dadd( 162.195, -108.303, 67.5107, 0.68 ) }
    dend_15 { pt3dadd( 171.7, -107.11, 70.38, 0.68 ) }
    dend_15 { pt3dadd( 181.615, -107.635, 71.5652, 0.68 ) }
    dend_15 { pt3dadd( 191.476, -106.894, 73.0546, 0.68 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 86/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 173.608, 9.52491, 26.4091, 0.68 ) }
    dend_6 { pt3dadd( 174.492, 10.9254, 26.8029, 0.68 ) }
    dend_6 { pt3dadd( 175.393, 12.8774, 26.7829, 0.23 ) }
    dend_6 { pt3dadd( 175.792, 14.1279, 26.4227, 0.91 ) }
    dend_6 { pt3dadd( 176.236, 16.0797, 25.6001, 0.23 ) }
    dend_6 { pt3dadd( 176.437, 17.3288, 24.9816, 0.68 ) }
    dend_6 { pt3dadd( 176.759, 18.9976, 24.0299, 0.23 ) }
    dend_6 { pt3dadd( 177.123, 20.8367, 22.5948, 0.68 ) }
    dend_6 { pt3dadd( 177.38, 21.9682, 21.5546, 0.45 ) }
    dend_6 { pt3dadd( 177.543, 22.5583, 20.9602, 0.91 ) }
    dend_6 { pt3dadd( 178.026, 23.5442, 19.7999, 0.23 ) }
    dend_6 { pt3dadd( 178.876, 24.6484, 18.4758, 0.45 ) }
    dend_6 { pt3dadd( 180.012, 25.8349, 17.0829, 0.23 ) }
    dend_6 { pt3dadd( 180.426, 26.2546, 16.6608, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_6 { pt3dadd( 181.199, 27.1143, 15.959, 0.91 ) }
    dend_6 { pt3dadd( 182.363, 28.6837, 14.9314, 0.23 ) }
    dend_6 { pt3dadd( 183.19, 29.882, 14.2301, 0.23 ) }
    dend_6 { pt3dadd( 183.642, 30.7937, 13.836, 1.14 ) }
    dend_6 { pt3dadd( 184.328, 32.83, 13.2526, 0.23 ) }
    dend_6 { pt3dadd( 184.718, 34.6757, 12.9557, 0.23 ) }
    dend_6 { pt3dadd( 184.753, 36.0955, 13.0284, 0.91 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 7/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 173.608, 9.52491, 26.4091, 0.23 ) }
    dend_5 { pt3dadd( 175.223, 8.78425, 27.5994, 0.23 ) }
    dend_5 { pt3dadd( 176.333, 8.2753, 28.4173, 0.23 ) }
    dend_5 { pt3dadd( 177.286, 7.83805, 29.1199, 0.68 ) }
    dend_5 { pt3dadd( 178.942, 7.07862, 30.3404, 0.23 ) }
    dend_5 { pt3dadd( 179.884, 6.64635, 31.035, 0.91 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 13/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -89.8251, 30.1422, 15.8757, 0.23 ) }
    dend_76 { pt3dadd( -90.8017, 30.7016, 15.5418, 0.23 ) }
    dend_76 { pt3dadd( -91.6456, 31.2586, 15.273, 0.23 ) }
    dend_76 { pt3dadd( -93.8321, 32.709, 14.6013, 0.91 ) }
    dend_76 { pt3dadd( -95.2622, 33.6183, 14.1454, 0.23 ) }
    dend_76 { pt3dadd( -97.1888, 34.7652, 13.497, 0.68 ) }
    dend_76 { pt3dadd( -98.9234, 35.7668, 12.87, 0.23 ) }
    dend_76 { pt3dadd( -100.387, 36.6041, 12.3031, 0.91 ) }
    dend_76 { pt3dadd( -100.888, 36.898, 12.1048, 0.91 ) }
    dend_76 { pt3dadd( -102.304, 37.7166, 11.6217, 0.23 ) }
    dend_76 { pt3dadd( -103.435, 38.3537, 11.2348, 0.68 ) }
    dend_76 { pt3dadd( -104.579, 38.8674, 10.8454, 0.23 ) }
    dend_76 { pt3dadd( -105.902, 39.3771, 10.4316, 0.68 ) }
    dend_76 { pt3dadd( -107.541, 40.095, 9.9268, 0.23 ) }
    dend_76 { pt3dadd( -108.649, 40.6231, 9.58281, 0.68 ) }
    dend_76 { pt3dadd( -109.785, 41.1394, 9.23279, 0.23 ) }
    dend_76 { pt3dadd( -111.703, 41.9109, 8.65175, 0.23 ) }
    dend_76 { pt3dadd( -113.191, 42.4412, 8.22319, 0.91 ) }
    dend_76 { pt3dadd( -115.697, 43.2775, 7.50586, 0.23 ) }
    dend_76 { pt3dadd( -116.346, 43.4593, 7.33404, 0.23 ) }
    dend_76 { pt3dadd( -118.65, 44.0259, 6.84459, 0.68 ) }
    dend_76 { pt3dadd( -119.962, 44.3408, 6.66788, 0.23 ) }
    dend_76 { pt3dadd( -121.093, 44.6707, 6.59829, 0.68 ) }
    dend_76 { pt3dadd( -122.143, 44.9898, 6.61515, 0.23 ) }
    dend_76 { pt3dadd( -123.445, 45.3953, 6.7593, 0.91 ) }
    dend_76 { pt3dadd( -125.056, 46.0056, 7.0316, 0.23 ) }
    dend_76 { pt3dadd( -127.26, 47.0672, 7.51393, 1.36 ) }
    dend_76 { pt3dadd( -128.829, 47.9607, 7.87219, 0.23 ) }
    dend_76 { pt3dadd( -129.634, 48.4658, 8.06063, 0.68 ) }
    dend_76 { pt3dadd( -131.096, 49.4634, 8.40203, 0.23 ) }
    dend_76 { pt3dadd( -132.261, 50.3067, 8.68614, 0.23 ) }
    dend_76 { pt3dadd( -133.187, 50.9488, 8.90372, 1.14 ) }
    dend_76 { pt3dadd( -134.16, 51.5369, 9.13075, 1.14 ) }
    dend_76 { pt3dadd( -135.458, 52.2243, 9.39531, 0.23 ) }
    dend_76 { pt3dadd( -137.356, 53.1983, 9.64989, 0.91 ) }
    dend_76 { pt3dadd( -139.322, 54.1261, 9.81396, 0.23 ) }
    dend_76 { pt3dadd( -140.332, 54.4914, 9.87258, 0.68 ) }
    dend_76 { pt3dadd( -141.365, 54.8071, 9.90332, 0.23 ) }
    dend_76 { pt3dadd( -142.917, 55.2524, 9.90694, 0.91 ) }
    dend_76 { pt3dadd( -144.817, 55.8232, 9.85111, 0.23 ) }
    dend_76 { pt3dadd( -146.116, 56.2559, 9.78603, 0.23 ) }
    dend_76 { pt3dadd( -147.624, 56.8006, 9.68164, 0.91 ) }
    dend_76 { pt3dadd( -149.986, 57.7595, 9.60464, 0.23 ) }
    dend_76 { pt3dadd( -151.138, 58.2621, 9.57568, 0.23 ) }
    dend_76 { pt3dadd( -152.414, 58.889, 9.55852, 0.23 ) }
    dend_76 { pt3dadd( -153.5, 59.5047, 9.56188, 0.68 ) }
    dend_76 { pt3dadd( -154.484, 60.1433, 9.55901, 0.23 ) }
    dend_76 { pt3dadd( -156.122, 61.307, 9.49874, 0.91 ) }
    dend_76 { pt3dadd( -158.307, 62.8512, 9.37955, 0.23 ) }
    dend_76 { pt3dadd( -159.242, 63.4943, 9.33578, 0.23 ) }
    dend_76 { pt3dadd( -160.454, 64.3194, 9.28953, 0.68 ) }
    dend_76 { pt3dadd( -161.504, 65.0204, 9.26671, 0.68 ) }
    dend_76 { pt3dadd( -162.728, 65.8472, 9.25714, 0.68 ) }
    dend_76 { pt3dadd( -163.714, 66.462, 9.26308, 1.14 ) }
    dend_76 { pt3dadd( -165.045, 67.2278, 9.28764, 0.45 ) }
    dend_76 { pt3dadd( -166.647, 68.1048, 9.20586, 1.14 ) }
    dend_76 { pt3dadd( -167.467, 68.5345, 9.12265, 0.23 ) }
    dend_76 { pt3dadd( -168.25, 68.9446, 8.98162, 0.23 ) }
    dend_76 { pt3dadd( -169.258, 69.4788, 8.75781, 0.91 ) }
    dend_76 { pt3dadd( -171.043, 70.4768, 8.1795, 0.23 ) }
    dend_76 { pt3dadd( -172.85, 71.5695, 7.42388, 0.23 ) }
    dend_76 { pt3dadd( -173.755, 72.1306, 7.00109, 0.23 ) }
    dend_76 { pt3dadd( -176.274, 73.7647, 5.7774, 0.23 ) }
    dend_76 { pt3dadd( -177.791, 74.7739, 5.01742, 0.91 ) }
    dend_76 { pt3dadd( -179.132, 75.6891, 4.35512, 0.23 ) }
    dend_76 { pt3dadd( -180.488, 76.6888, 3.6864, 0.23 ) }
    dend_76 { pt3dadd( -181.136, 77.1933, 3.3522, 0.68 ) }
    dend_76 { pt3dadd( -182.207, 78.0044, 2.78336, 0.23 ) }
    dend_76 { pt3dadd( -182.989, 78.5073, 2.38373, 0.23 ) }
    dend_76 { pt3dadd( -184.4, 79.2066, 1.75411, 0.68 ) }
    dend_76 { pt3dadd( -185.79, 79.6742, 1.20681, 0.23 ) }
    dend_76 { pt3dadd( -186.607, 79.8342, 0.897693, 0.23 ) }
    dend_76 { pt3dadd( -188.534, 80.0876, 0.189665, 0.68 ) }
    dend_76 { pt3dadd( -189.706, 80.1771, -0.201634, 0.23 ) }
    dend_76 { pt3dadd( -191.256, 80.2876, -0.621433, 0.68 ) }
    dend_76 { pt3dadd( -192.718, 80.4039, -0.906873, 0.23 ) }
    dend_76 { pt3dadd( -194.091, 80.5535, -1.07376, 0.23 ) }
    dend_76 { pt3dadd( -195.492, 80.7759, -1.17123, 0.45 ) }
    dend_76 { pt3dadd( -196.644, 80.9959, -1.22118, 0.23 ) }
    dend_76 { pt3dadd( -198.41, 81.3567, -1.25234, 0.91 ) }
    dend_76 { pt3dadd( -200.439, 81.8004, -1.23672, 0.23 ) }
    dend_76 { pt3dadd( -202.524, 82.324, -1.14538, 0.23 ) }
    dend_76 { pt3dadd( -203.87, 82.668, -1.08117, 0.91 ) }
    dend_76 { pt3dadd( -205.029, 82.9464, -1.02303, 0.23 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 97/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -89.8251, 30.1422, 15.8757, 0.23 ) }
    dend_75 { pt3dadd( -91.5555, 31.0578, 16.5291, 0.23 ) }
    dend_75 { pt3dadd( -92.9457, 31.7053, 17.0528, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_75 { pt3dadd( -93.9346, 32.1488, 17.4103, 0.23 ) }
    dend_75 { pt3dadd( -95.8761, 32.9603, 18.1323, 0.23 ) }
    dend_75 { pt3dadd( -98.1531, 33.8971, 18.9759, 1.14 ) }
    dend_75 { pt3dadd( -99.6341, 34.5096, 19.5094, 0.23 ) }
    dend_75 { pt3dadd( -101.633, 35.2426, 20.1848, 0.91 ) }
    dend_75 { pt3dadd( -103.262, 35.7708, 20.7261, 0.45 ) }
    dend_75 { pt3dadd( -104.204, 36.0728, 21.0399, 0.45 ) }
    dend_75 { pt3dadd( -105.183, 36.3957, 21.3773, 0.45 ) }
    dend_75 { pt3dadd( -106.31, 36.7689, 21.789, 0.45 ) }
    dend_75 { pt3dadd( -107.809, 37.3087, 22.389, 0.91 ) }
    dend_75 { pt3dadd( -109.41, 37.8167, 23.0866, 0.91 ) }
    dend_75 { pt3dadd( -111.068, 38.2863, 23.8363, 0.23 ) }
    dend_75 { pt3dadd( -112.071, 38.5959, 24.3378, 0.68 ) }
    dend_75 { pt3dadd( -113.76, 39.1275, 25.2621, 0.23 ) }
    dend_75 { pt3dadd( -114.951, 39.5276, 25.9622, 0.23 ) }
    dend_75 { pt3dadd( -116.353, 40.0173, 26.803, 0.91 ) }
    dend_75 { pt3dadd( -116.962, 40.2161, 27.1731, 0.91 ) }
    dend_75 { pt3dadd( -119.155, 40.7655, 28.3831, 0.23 ) }
    dend_75 { pt3dadd( -119.931, 40.9423, 28.7735, 0.91 ) }
    dend_75 { pt3dadd( -121.791, 41.2999, 29.5107, 0.23 ) }
    dend_75 { pt3dadd( -122.493, 41.3894, 29.7007, 0.23 ) }
    dend_75 { pt3dadd( -123.939, 41.4761, 30.0127, 1.14 ) }
    dend_75 { pt3dadd( -125.058, 41.4179, 30.1943, 1.14 ) }
    dend_75 { pt3dadd( -126.69, 41.1743, 30.3691, 0.23 ) }
    dend_75 { pt3dadd( -128.543, 40.7757, 30.5597, 0.23 ) }
    dend_75 { pt3dadd( -131.493, 39.9737, 30.8212, 0.91 ) }
    dend_75 { pt3dadd( -133.737, 39.2798, 31.0172, 0.23 ) }
    dend_75 { pt3dadd( -135.585, 38.6533, 31.192, 0.23 ) }
    dend_75 { pt3dadd( -136.892, 38.1815, 31.3231, 1.14 ) }
    dend_75 { pt3dadd( -139.375, 37.2572, 31.6359, 0.23 ) }
    dend_75 { pt3dadd( -141.55, 36.484, 31.994, 0.23 ) }
    dend_75 { pt3dadd( -142.553, 36.1625, 32.2174, 0.23 ) }
    dend_75 { pt3dadd( -143.813, 35.8271, 32.5092, 0.23 ) }
    dend_75 { pt3dadd( -145.049, 35.6054, 32.8367, 0.23 ) }
    dend_75 { pt3dadd( -146.563, 35.3492, 33.3708, 0.23 ) }
    dend_75 { pt3dadd( -147.653, 35.1863, 33.8197, 0.91 ) }
    dend_75 { pt3dadd( -148.584, 35.1077, 34.2581, 0.23 ) }
    dend_75 { pt3dadd( -150.311, 35.0243, 35.0585, 0.91 ) }
    dend_75 { pt3dadd( -152.804, 34.9068, 36.1277, 0.23 ) }
    dend_75 { pt3dadd( -155.711, 34.7769, 37.2955, 0.23 ) }
    dend_75 { pt3dadd( -156.4, 34.7669, 37.5232, 0.23 ) }
    dend_75 { pt3dadd( -158.665, 34.7914, 38.1568, 0.68 ) }
    dend_75 { pt3dadd( -160.89, 34.8519, 38.6615, 0.23 ) }
    dend_75 { pt3dadd( -162.69, 34.8878, 38.9808, 0.23 ) }
    dend_75 { pt3dadd( -164.114, 34.8851, 39.1703, 0.91 ) }
    dend_75 { pt3dadd( -167.057, 34.8426, 39.431, 0.23 ) }
    dend_75 { pt3dadd( -168.887, 34.7389, 39.5995, 0.91 ) }
    dend_75 { pt3dadd( -170.28, 34.6217, 39.7221, 0.23 ) }
    dend_75 { pt3dadd( -172.553, 34.4524, 39.947, 0.68 ) }
    dend_75 { pt3dadd( -173.978, 34.3849, 40.0933, 0.23 ) }
    dend_75 { pt3dadd( -175.109, 34.3718, 40.202, 0.91 ) }
    dend_75 { pt3dadd( -176.765, 34.4445, 40.4133, 0.23 ) }
    dend_75 { pt3dadd( -178.511, 34.6008, 40.7353, 0.23 ) }
    dend_75 { pt3dadd( -179.601, 34.7599, 40.9783, 1.14 ) }
    dend_75 { pt3dadd( -181.144, 35.0553, 41.3713, 0.23 ) }
    dend_75 { pt3dadd( -183.419, 35.6018, 42.0046, 1.14 ) }
    dend_75 { pt3dadd( -185.014, 36.0269, 42.5563, 0.23 ) }
    dend_75 { pt3dadd( -187.202, 36.5733, 43.5291, 0.23 ) }
    dend_75 { pt3dadd( -188.275, 36.7932, 44.0894, 0.91 ) }
    dend_75 { pt3dadd( -190.41, 37.1731, 45.3144, 0.23 ) }
    dend_75 { pt3dadd( -192.278, 37.4055, 46.4096, 0.91 ) }
    dend_75 { pt3dadd( -194.438, 37.578, 47.7077, 0.23 ) }
    dend_75 { pt3dadd( -196.483, 37.6597, 48.8613, 0.68 ) }
    dend_75 { pt3dadd( -197.419, 37.639, 49.3777, 0.23 ) }
    dend_75 { pt3dadd( -198.245, 37.5237, 49.8304, 0.23 ) }
    dend_75 { pt3dadd( -200.261, 37.0141, 50.7963, 0.91 ) }
    dend_75 { pt3dadd( -202.547, 36.2035, 51.8122, 0.23 ) }
    dend_75 { pt3dadd( -203.135, 35.9629, 52.0555, 0.23 ) }
    dend_75 { pt3dadd( -204.554, 35.3274, 52.6202, 0.23 ) }
    dend_75 { pt3dadd( -205.977, 34.6033, 53.2739, 0.91 ) }
    dend_75 { pt3dadd( -208.495, 33.074, 54.5531, 0.23 ) }
    dend_75 { pt3dadd( -209.651, 32.1752, 55.2444, 0.68 ) }
    dend_75 { pt3dadd( -210.552, 31.3624, 55.8297, 0.23 ) }
    dend_75 { pt3dadd( -211.141, 30.8469, 56.2471, 0.91 ) }
    dend_75 { pt3dadd( -212.288, 29.935, 57.073, 0.23 ) }
    dend_75 { pt3dadd( -212.91, 29.481, 57.5303, 0.91 ) }
    dend_75 { pt3dadd( -214.138, 28.7081, 58.4659, 0.91 ) }
    dend_75 { pt3dadd( -215.429, 28.1292, 59.3279, 0.23 ) }
    dend_75 { pt3dadd( -217.038, 27.6152, 60.3126, 0.68 ) }
    dend_75 { pt3dadd( -218.001, 27.3911, 60.8551, 0.23 ) }
    dend_75 { pt3dadd( -219.309, 27.1939, 61.5572, 0.91 ) }
    dend_75 { pt3dadd( -220.986, 27.0576, 62.4918, 0.23 ) }
    dend_75 { pt3dadd( -222.421, 26.9957, 63.3442, 0.23 ) }
    dend_75 { pt3dadd( -223.593, 26.9459, 64.0925, 0.23 ) }
    dend_75 { pt3dadd( -225.173, 26.8579, 65.234, 0.91 ) }
    dend_75 { pt3dadd( -226.652, 26.7723, 66.3656, 0.23 ) }
    dend_75 { pt3dadd( -227.487, 26.714, 67.0303, 0.68 ) }
    dend_75 { pt3dadd( -228.987, 26.5896, 68.2495, 0.23 ) }
    dend_75 { pt3dadd( -229.997, 26.4689, 69.1693, 0.68 ) }
    dend_75 { pt3dadd( -231.849, 26.2182, 71.1226, 0.23 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 90/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -87.5271, 5.03994, 4.22088, 0.23 ) }
    dend_73 { pt3dadd( -87.9081, 3.01533, 3.52285, 0.23 ) }
    dend_73 { pt3dadd( -88.0821, 2.35434, 3.22875, 0.68 ) }
    dend_73 { pt3dadd( -88.5696, 0.909924, 2.5629, 0.23 ) }
    dend_73 { pt3dadd( -88.8854, -0.0660326, 2.07081, 0.23 ) }
    dend_73 { pt3dadd( -89.1986, -1.31213, 1.42458, 0.23 ) }
    dend_73 { pt3dadd( -89.5021, -2.6755, 0.649401, 0.68 ) }
    dend_73 { pt3dadd( -89.7069, -3.52108, 0.0608841, 0.23 ) }
    dend_73 { pt3dadd( -89.8178, -4.50429, -0.693169, 0.68 ) }
    dend_73 { pt3dadd( -89.8082, -5.28996, -1.32745, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_73 { pt3dadd( -89.7342, -6.29432, -2.1247, 0.68 ) }
    dend_73 { pt3dadd( -89.711, -8.01007, -3.43078, 1.14 ) }
    dend_73 { pt3dadd( -89.7451, -9.36916, -4.37704, 0.23 ) }
    dend_73 { pt3dadd( -89.727, -10.5909, -5.16365, 0.23 ) }
    dend_73 { pt3dadd( -89.7071, -11.2249, -5.55116, 0.23 ) }
    dend_73 { pt3dadd( -89.7381, -11.8638, -5.90187, 0.23 ) }
    dend_73 { pt3dadd( -90.0128, -13.7319, -6.86507, 0.23 ) }
    dend_73 { pt3dadd( -90.2099, -14.7419, -7.3604, 0.23 ) }
    dend_73 { pt3dadd( -90.5311, -15.9853, -7.99073, 0.68 ) }
    dend_73 { pt3dadd( -90.8537, -17.3093, -8.75096, 0.23 ) }
    dend_73 { pt3dadd( -91.0645, -18.2404, -9.36679, 0.23 ) }
    dend_73 { pt3dadd( -91.4089, -19.4945, -10.3067, 0.23 ) }
    dend_73 { pt3dadd( -91.7324, -20.4476, -11.0989, 0.68 ) }
    dend_73 { pt3dadd( -91.9157, -20.8695, -11.4822, 0.68 ) }
    dend_73 { pt3dadd( -92.4479, -22.0934, -12.6219, 0.23 ) }
    dend_73 { pt3dadd( -92.6208, -22.7887, -13.352, 0.23 ) }
    dend_73 { pt3dadd( -92.5766, -23.4096, -14.0299, 0.23 ) }
    dend_73 { pt3dadd( -92.4478, -23.9019, -14.5489, 0.23 ) }
    dend_73 { pt3dadd( -92.2284, -24.5366, -15.1602, 0.23 ) }
    dend_73 { pt3dadd( -91.9139, -25.4727, -16.003, 0.23 ) }
    dend_73 { pt3dadd( -91.546, -26.7041, -17.0957, 0.23 ) }
    dend_73 { pt3dadd( -91.1969, -28.1043, -18.3015, 0.23 ) }
    dend_73 { pt3dadd( -91.0522, -29.1808, -19.1771, 0.68 ) }
    dend_73 { pt3dadd( -91.078, -30.3627, -20.0273, 0.23 ) }
    dend_73 { pt3dadd( -91.1865, -31.2161, -20.5573, 0.23 ) }
    dend_73 { pt3dadd( -91.3948, -32.2474, -21.1522, 0.23 ) }
    dend_73 { pt3dadd( -91.5029, -32.8529, -21.4662, 0.23 ) }
    dend_73 { pt3dadd( -91.5655, -33.8286, -21.932, 0.23 ) }
    dend_73 { pt3dadd( -91.5743, -34.9237, -22.3645, 0.23 ) }
    dend_73 { pt3dadd( -91.5546, -35.9419, -22.7152, 0.23 ) }
    dend_73 { pt3dadd( -91.4558, -37.4348, -23.215, 0.68 ) }
    dend_73 { pt3dadd( -91.2503, -39.194, -23.7964, 0.23 ) }
    dend_73 { pt3dadd( -91.1138, -40.1466, -24.121, 0.23 ) }
    dend_73 { pt3dadd( -90.8013, -42.3115, -24.8961, 0.23 ) }
    dend_73 { pt3dadd( -90.7022, -43.4512, -25.305, 0.23 ) }
    dend_73 { pt3dadd( -89.7219, -52.0877, -30.2498, 0.23 ) }
    dend_73 { pt3dadd( -86.4436, -60.7138, -34.1023, 0.23 ) }
    dend_73 { pt3dadd( -82.8039, -68.6812, -38.9266, 0.23 ) }
    dend_73 { pt3dadd( -77.9799, -74.8337, -45.1616, 0.23 ) }
    dend_73 { pt3dadd( -72.8839, -81.5911, -50.4877, 0.23 ) }
    dend_73 { pt3dadd( -67.6759, -88.2321, -55.852, 0.23 ) }
    dend_73 { pt3dadd( -63.7031, -96.1675, -60.4613, 0.23 ) }
    dend_73 { pt3dadd( -58.8894, -104.466, -63.2814, 0.23 ) }
    dend_73 { pt3dadd( -54.6326, -113.255, -65.4357, 0.23 ) }
    dend_73 { pt3dadd( -50.2228, -122.218, -65.9074, 0.23 ) }
    dend_73 { pt3dadd( -46.2258, -131.336, -64.9688, 0.23 ) }
    dend_73 { pt3dadd( -44.2149, -141.041, -63.6377, 0.23 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 47/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -87.5271, 5.03994, 4.22088, 0.23 ) }
    dend_72 { pt3dadd( -89.6315, 4.4575, 4.00147, 0.23 ) }
    dend_72 { pt3dadd( -90.7055, 4.14023, 3.84525, 0.23 ) }
    dend_72 { pt3dadd( -92.4191, 3.52684, 3.56835, 0.23 ) }
    dend_72 { pt3dadd( -93.5139, 3.02968, 3.37043, 0.23 ) }
    dend_72 { pt3dadd( -94.9568, 2.27734, 3.10545, 0.23 ) }
    dend_72 { pt3dadd( -95.8453, 1.76456, 2.92298, 0.23 ) }
    dend_72 { pt3dadd( -96.7484, 1.15347, 2.66712, 0.45 ) }
    dend_72 { pt3dadd( -97.9429, 0.166686, 2.25501, 0.91 ) }
    dend_72 { pt3dadd( -99.2452, -1.06028, 1.73541, 0.23 ) }
    dend_72 { pt3dadd( -100.251, -2.05167, 1.32641, 0.23 ) }
    dend_72 { pt3dadd( -101.627, -3.37659, 0.749122, 0.23 ) }
    dend_72 { pt3dadd( -102.276, -3.97554, 0.478837, 0.23 ) }
    dend_72 { pt3dadd( -103.458, -4.98522, -0.0176866, 0.91 ) }
    dend_72 { pt3dadd( -104.367, -5.69774, -0.411089, 0.23 ) }
    dend_72 { pt3dadd( -105.296, -6.3249, -0.790488, 0.45 ) }
    dend_72 { pt3dadd( -106.97, -7.22625, -1.43131, 0.23 ) }
    dend_72 { pt3dadd( -107.933, -7.61497, -1.78213, 0.68 ) }
    dend_72 { pt3dadd( -109.463, -7.98182, -2.33863, 0.23 ) }
    dend_72 { pt3dadd( -110.568, -8.09506, -2.74427, 0.68 ) }
    dend_72 { pt3dadd( -112.517, -8.15301, -3.47758, 0.23 ) }
    dend_72 { pt3dadd( -114.625, -7.99317, -4.27579, 0.23 ) }
    dend_72 { pt3dadd( -115.894, -7.76418, -4.72189, 1.14 ) }
    dend_72 { pt3dadd( -117.886, -7.30656, -5.37304, 0.23 ) }
    dend_72 { pt3dadd( -118.955, -7.05571, -5.6733, 0.91 ) }
    dend_72 { pt3dadd( -120.119, -6.87835, -5.90955, 0.23 ) }
    dend_72 { pt3dadd( -121.444, -6.8355, -6.03983, 0.23 ) }
    dend_72 { pt3dadd( -122.799, -6.96621, -6.07525, 0.68 ) }
    dend_72 { pt3dadd( -123.851, -7.16196, -6.08076, 0.23 ) }
    dend_72 { pt3dadd( -125.422, -7.55423, -6.09503, 1.14 ) }
    dend_72 { pt3dadd( -127.254, -8.08713, -6.21222, 0.23 ) }
    dend_72 { pt3dadd( -128.557, -8.56292, -6.38395, 0.23 ) }
    dend_72 { pt3dadd( -129.593, -9.05313, -6.61239, 0.23 ) }
    dend_72 { pt3dadd( -130.872, -9.74295, -7.09401, 0.23 ) }
    dend_72 { pt3dadd( -132.211, -10.4767, -7.79203, 0.23 ) }
    dend_72 { pt3dadd( -133.23, -11.0724, -8.4972, 0.23 ) }
    dend_72 { pt3dadd( -134.177, -11.6661, -9.2842, 0.23 ) }
    dend_72 { pt3dadd( -134.945, -12.1478, -9.90672, 0.23 ) }
    dend_72 { pt3dadd( -136.101, -12.7036, -10.7076, 0.23 ) }
    dend_72 { pt3dadd( -137.178, -13.0461, -11.2968, 0.23 ) }
    dend_72 { pt3dadd( -137.916, -13.207, -11.6061, 0.23 ) }
    dend_72 { pt3dadd( -138.969, -13.3643, -11.938, 0.23 ) }
    dend_72 { pt3dadd( -141.233, -13.6587, -12.4696, 0.91 ) }
    dend_72 { pt3dadd( -143.206, -13.9809, -12.821, 0.23 ) }
    dend_72 { pt3dadd( -144.981, -14.4156, -13.0426, 0.23 ) }
    dend_72 { pt3dadd( -146.27, -14.9356, -13.1579, 0.23 ) }
    dend_72 { pt3dadd( -147.524, -15.4792, -13.2353, 0.68 ) }
    dend_72 { pt3dadd( -149.079, -16.2593, -13.2736, 0.23 ) }
    dend_72 { pt3dadd( -150.399, -17.1771, -13.2229, 0.23 ) }
    dend_72 { pt3dadd( -151.64, -18.3796, -13.1013, 0.23 ) }
    dend_72 { pt3dadd( -153.348, -20.6197, -12.8797, 0.23 ) }
    dend_72 { pt3dadd( -162.514, -23.8659, -15.2151, 0.23 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 99/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -63.1785, 136.068, 5.43818, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_62 { pt3dadd( -64.2538, 137.866, 5.34503, 0.23 ) }
    dend_62 { pt3dadd( -65.7407, 140.353, 5.21622, 0.91 ) }
    dend_62 { pt3dadd( -67.2428, 142.864, 5.0861, 0.23 ) }
    dend_62 { pt3dadd( -68.0002, 144.131, 5.02049, 0.23 ) }
    dend_62 { pt3dadd( -68.5836, 145.106, 4.96995, 1.14 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 5/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -63.1785, 136.068, 5.43818, 0.23 ) }
    dend_61 { pt3dadd( -63.3794, 137.424, 5.97549, 0.23 ) }
    dend_61 { pt3dadd( -63.4173, 138.233, 6.32784, 0.23 ) }
    dend_61 { pt3dadd( -63.4108, 139.405, 6.88419, 0.45 ) }
    dend_61 { pt3dadd( -63.441, 141.191, 7.80458, 1.14 ) }
    dend_61 { pt3dadd( -63.6088, 143.337, 8.9772, 0.23 ) }
    dend_61 { pt3dadd( -63.7335, 144.168, 9.45051, 0.91 ) }
    dend_61 { pt3dadd( -64.1333, 145.917, 10.5697, 0.23 ) }
    dend_61 { pt3dadd( -64.4983, 146.845, 11.2358, 0.91 ) }
    dend_61 { pt3dadd( -65.1728, 147.815, 12.0796, 0.23 ) }
    dend_61 { pt3dadd( -66.2141, 148.603, 12.9879, 0.23 ) }
    dend_61 { pt3dadd( -67.3505, 149.092, 13.7001, 0.68 ) }
    dend_61 { pt3dadd( -68.6925, 149.532, 14.448, 0.45 ) }
    dend_61 { pt3dadd( -70.1204, 149.87, 15.1238, 0.91 ) }
    dend_61 { pt3dadd( -71.8888, 150.194, 15.8905, 0.23 ) }
    dend_61 { pt3dadd( -73.6232, 150.465, 16.6315, 0.23 ) }
    dend_61 { pt3dadd( -74.031, 150.513, 16.8088, 0.91 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 22/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -124.981, 87.8898, -6.95853, 0.68 ) }
    dend_58 { pt3dadd( -134.751, 89.7148, -8.06324, 0.68 ) }
    dend_58 { pt3dadd( -144.422, 92.2346, -8.42036, 0.68 ) }
    dend_58 { pt3dadd( -154.355, 93.3781, -8.32873, 0.68 ) }
    dend_58 { pt3dadd( -164.283, 93.9508, -7.27137, 0.68 ) }
    dend_58 { pt3dadd( -173.914, 96.0779, -5.62339, 0.68 ) }
    dend_58 { pt3dadd( -183.692, 98.1705, -5.77179, 0.68 ) }
    dend_58 { pt3dadd( -193.039, 101.254, -7.53924, 0.68 ) }
    dend_58 { pt3dadd( -202.415, 104.48, -8.83809, 0.68 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 31/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -124.981, 87.8898, -6.95853, 0.23 ) }
    dend_57 { pt3dadd( -134.801, 89.6663, -7.60687, 0.68 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 33/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -61.1224, 131.688, -1.74943, 0.23 ) }
    dend_55 { pt3dadd( -61.6193, 133.353, -1.84892, 0.23 ) }
    dend_55 { pt3dadd( -61.9512, 134.465, -1.91536, 0.68 ) }
    dend_55 { pt3dadd( -62.1975, 135.291, -1.96469, 0.23 ) }
    dend_55 { pt3dadd( -62.3718, 135.875, -1.99957, 0.68 ) }
    dend_55 { pt3dadd( -62.797, 137.3, -2.0847, 0.23 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 39/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -61.1224, 131.688, -1.74943, 0.23 ) }
    dend_54 { pt3dadd( -62.2323, 132.95, -0.832477, 0.23 ) }
    dend_54 { pt3dadd( -63.1843, 134.032, -0.0459834, 0.23 ) }
    dend_54 { pt3dadd( -64.1871, 135.173, 0.782539, 0.91 ) }
    dend_54 { pt3dadd( -65.7462, 136.946, 2.07059, 0.23 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 44/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -34.0874, 109.048, -7.8508, 0.23 ) }
    dend_45 { pt3dadd( -31.5609, 109.48, -7.8508, 0.23 ) }
    dend_45 { pt3dadd( -30.4412, 109.671, -7.8508, 0.68 ) }
    dend_45 { pt3dadd( -27.4739, 110.178, -7.8508, 0.23 ) }
    dend_45 { pt3dadd( -17.9434, 113.157, -7.30875, 0.23 ) }
    dend_45 { pt3dadd( -8.78217, 116.947, -8.61728, 0.23 ) }
    dend_45 { pt3dadd( 0.780536, 119.855, -8.92542, 0.23 ) }
    dend_45 { pt3dadd( 10.479, 121.425, -10.7896, 0.23 ) }
    dend_45 { pt3dadd( 20.3605, 121.614, -12.3131, 0.23 ) }
    dend_45 { pt3dadd( 30.1128, 122.222, -14.4396, 0.23 ) }
    dend_45 { pt3dadd( 39.8791, 122.895, -16.4811, 0.23 ) }
    dend_45 { pt3dadd( 49.492, 124.692, -18.57, 0.23 ) }
    dend_45 { pt3dadd( 59.4066, 125.949, -18.9125, 0.23 ) }
    dend_45 { pt3dadd( 69.0034, 128.436, -17.6024, 0.23 ) }
    dend_45 { pt3dadd( 77.8134, 132.9, -16.033, 0.23 ) }
    dend_45 { pt3dadd( 85.7158, 138.162, -12.8928, 0.23 ) }
    dend_45 { pt3dadd( 93.6736, 142.806, -9.00589, 0.23 ) }
    dend_45 { pt3dadd( 100.012, 148.651, -3.94015, 0.23 ) }
    dend_45 { pt3dadd( 107.374, 153.238, 1.03508, 0.23 ) }
    dend_45 { pt3dadd( 114.901, 157.396, 6.14094, 0.23 ) }
    dend_45 { pt3dadd( 120.85, 161.52, 13.0398, 0.23 ) }
    dend_45 { pt3dadd( 127.113, 164.466, 20.2576, 0.23 ) }
    dend_45 { pt3dadd( 133.454, 166.642, 27.6779, 0.23 ) }
    dend_45 { pt3dadd( 138.852, 169.892, 35.4424, 0.23 ) }
    dend_45 { pt3dadd( 143.342, 174.823, 42.8944, 0.23 ) }
    dend_45 { pt3dadd( 148.785, 179.407, 49.9202, 0.23 ) }
    dend_45 { pt3dadd( 154.511, 183.005, 57.2864, 0.23 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 71/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -34.0874, 109.048, -7.8508, 0.23 ) }
    dend_44 { pt3dadd( -34.0255, 110.263, -8.06348, 0.23 ) }
    dend_44 { pt3dadd( -33.9564, 111.701, -8.46196, 0.45 ) }
    dend_44 { pt3dadd( -33.8666, 113.372, -8.98983, 0.23 ) }
    dend_44 { pt3dadd( -33.6733, 115.068, -9.53584, 0.23 ) }
    dend_44 { pt3dadd( -33.4776, 115.957, -9.89471, 0.23 ) }
    dend_44 { pt3dadd( -33.2608, 116.765, -10.2649, 0.91 ) }
    dend_44 { pt3dadd( -32.6761, 118.413, -11.2165, 0.23 ) }
    dend_44 { pt3dadd( -32.2239, 119.57, -12.0758, 0.23 ) }
    dend_44 { pt3dadd( -31.8406, 120.618, -13.0413, 0.68 ) }
    dend_44 { pt3dadd( -31.1236, 122.324, -14.737, 0.23 ) }
    dend_44 { pt3dadd( -30.8112, 122.914, -15.3321, 0.23 ) }
    dend_44 { pt3dadd( -30.5254, 123.484, -15.9357, 0.23 ) }
    dend_44 { pt3dadd( -30.0986, 124.095, -16.6514, 0.23 ) }
    dend_44 { pt3dadd( -29.5198, 125.057, -17.9818, 0.23 ) }
    dend_44 { pt3dadd( -29.5192, 125.523, -18.478, 0.23 ) }
    dend_44 { pt3dadd( -29.8416, 127.224, -19.6095, 0.23 ) }
    dend_44 { pt3dadd( -29.0264, 135.88, -24.5498, 0.23 ) }
    dend_44 { pt3dadd( -28.3503, 144.434, -29.6845, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_31, dend_0, dend_49, dend_32, dend_20, dend_1, dend_65, dend_50, dend_48, dend_33, dend_26, dend_21, dend_9, dend_2, dend_77, dend_66, dend_64, dend_51, dend_41, dend_34, dend_28, dend_27, dend_25, dend_22, dend_13, dend_10, dend_8, dend_3, dend_81, dend_78, dend_70, dend_67, dend_59, dend_52, dend_47, dend_42, dend_38, dend_35, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_12, dend_11, dend_7, dend_4, dend_83, dend_82, dend_80, dend_79, dend_74, dend_71, dend_69, dend_68, dend_63, dend_60, dend_56, dend_53, dend_46, dend_43, dend_40, dend_39, dend_37, dend_36, dend_19, dend_18, dend_16, dend_15, dend_6, dend_5, dend_76, dend_75, dend_73, dend_72, dend_62, dend_61, dend_58, dend_57, dend_55, dend_54, dend_45, dend_44]}
    ModelViewParmSubset_2 = new SectionList()
    dend_31 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_31, dend_0, dend_49, dend_32, dend_20, dend_1, dend_65, dend_50, dend_48, dend_33, dend_26, dend_21, dend_9, dend_2, dend_77, dend_66, dend_64, dend_51, dend_41, dend_34, dend_28, dend_27, dend_25, dend_22, dend_13, dend_10, dend_8, dend_3, dend_81, dend_78, dend_70, dend_67, dend_59, dend_52, dend_47, dend_42, dend_38, dend_35, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_12, dend_11, dend_7, dend_4, dend_83, dend_82, dend_80, dend_79, dend_74, dend_71, dend_69, dend_68, dend_63, dend_60, dend_56, dend_53, dend_46, dend_43, dend_40, dend_39, dend_37, dend_36, dend_19, dend_18, dend_16, dend_15, dend_6, dend_5, dend_76, dend_75, dend_73, dend_72, dend_62, dend_61, dend_58, dend_57, dend_55, dend_54, dend_45, dend_44]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_40, dend_39]}
    ModelViewParmSubset_5 = new SectionList()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_20 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_21 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_64 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_34 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_27 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_13 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_8 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_81 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_78 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_59 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_47 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_38 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_29 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_17 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_14 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_12 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_11 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_7 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_4 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_83 OneSecGrp_SectionRef_52.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_82 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_68 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_56 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_53 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_37 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_16 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_76 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_75 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_73 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_72 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_58 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_45 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_44 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_31 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_49 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_9 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_50 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_65 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_51 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_10 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_26 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_41 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_48 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_77 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_66 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_70 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_28 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_52 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_42 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_67 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_74 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_71 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_43 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_30 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_69 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_25 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_46 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_63 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_60 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_55 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_54 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_62 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_23 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_57 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_35 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_61 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_24 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_36 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_5 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_18 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_19 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_6 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_80 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_79 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_49, dend_49, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_1, axon_1, axon_1, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_19, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_70 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_70 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_20 nseg = 3
    dend_21 nseg = 3
    dend_2 nseg = 3
    dend_64 nseg = 5
    dend_34 nseg = 5
    dend_27 nseg = 11
    dend_22 nseg = 3
    dend_13 nseg = 5
    dend_8 nseg = 5
    dend_3 nseg = 3
    dend_81 nseg = 5
    dend_78 nseg = 7
    dend_59 nseg = 5
    dend_47 nseg = 3
    dend_38 nseg = 5
    dend_29 nseg = 5
    dend_17 nseg = 5
    dend_14 nseg = 7
    dend_12 nseg = 3
    dend_11 nseg = 3
    dend_7 nseg = 3
    dend_4 nseg = 5
    dend_83 nseg = 3
    dend_82 nseg = 5
    dend_68 nseg = 5
    dend_56 nseg = 3
    dend_53 nseg = 3
    dend_37 nseg = 5
    dend_16 nseg = 3
    dend_15 nseg = 3
    dend_76 nseg = 7
    dend_75 nseg = 9
    dend_73 nseg = 9
    dend_72 nseg = 5
    dend_58 nseg = 5
    dend_45 nseg = 11
    dend_44 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L5_MC_162814b80d_0_0


