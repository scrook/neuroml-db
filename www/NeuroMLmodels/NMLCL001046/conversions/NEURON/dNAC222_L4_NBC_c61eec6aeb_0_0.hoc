// Cell: dNAC222_L4_NBC_c61eec6aeb_0_0
/*
{
  "id" : "dNAC222_L4_NBC_c61eec6aeb_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.49578, 9.66883, 0.467618, 3.07883", "-1.35379, 8.66156, 0.417811, 3.68571", "-1.21179, 7.65428, 0.368005, 4.49861", "-1.0698, 6.64701, 0.318198, 5.02547", "-0.927807, 5.63974, 0.268391, 5.55232", "-0.785813, 4.63247, 0.218585, 6.08002", "-0.643819, 3.6252, 0.168778, 6.65441", "-0.501826, 2.61792, 0.118971, 7.239", "-0.359832, 1.61065, 0.0691646, 7.82473", "-0.217838, 0.603378, 0.0193579, 8.41046", "-0.0758445, -0.403894, -0.0304487, 8.6567", "0.0661492, -1.41117, -0.0802554, 8.65482", "0.208143, -2.41844, -0.130062, 8.55954", "0.350137, -3.42571, -0.179869, 8.46266", "0.49213, -4.43298, -0.229676, 8.09049", "0.634124, -5.44025, -0.279482, 7.48075", "0.776118, -6.44753, -0.329289, 6.87101", "0.918112, -7.4548, -0.379096, 6.23286", "1.06011, -8.46207, -0.428902, 5.0468", "1.2021, -9.46934, -0.478709, 3.42243", "1.34409, -10.4766, -0.528516, 2.06215" ]
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.94076, -11.1276, 1.79231, 1.94", "2.20224, -12.4257, 1.79231, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000041566367777
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "4.13076, -4.13764, 8.98231, 0.55", "5.54801, -1.92157, 8.88737, 0.55", "6.97471, 0.616466, 8.77637, 0.83", "8.98216, 4.29888, 8.41366, 0.83", "11.3959, 8.45321, 7.96191, 0.55", "12.411, 10.1126, 7.84677, 0.83", "14.4708, 13.4478, 7.70681, 0.28", "15.6904, 15.5372, 7.72944, 0.83", "17.837, 19.2256, 7.99237, 0.55", "19.7313, 22.4114, 8.67925, 0.55", "21.2441, 24.8722, 9.69664, 0.83", "21.9112, 26.024, 10.3714, 0.83", "23.2252, 28.6214, 12.2311, 0.55", "23.5909, 29.6069, 12.9926, 0.83", "24.3214, 32.5802, 15.2995, 0.28", "24.5673, 34.383, 16.5686, 0.83", "24.8594, 38.5717, 19.1045, 0.28", "24.8957, 40.9919, 20.4154, 0.55", "24.6423, 44.7934, 22.2273, 0.28", "24.3508, 46.8542, 23.1572, 0.83", "23.8313, 48.9338, 24.0105, 0.55", "22.9418, 51.4631, 25.0646, 0.55", "22.3518, 52.9611, 25.2508, 1.11", "21.2443, 56.0306, 24.8021, 0.55", "21.0247, 56.7579, 24.5557, 0.55", "19.9461, 61.0647, 23.0885, 0.83", "18.9983, 66.4596, 21.0028, 0.28", "17.3709, 81.5542, 14.9863, 0.83", "17.3041, 83.5064, 14.2102, 0.28", "17.3586, 86.0306, 13.0325, 0.55", "17.7502, 91.3892, 10.2609, 0.28", "18.2126, 94.1094, 8.41819, 0.83", "18.6638, 95.6999, 7.0496, 0.28", "18.9137, 96.9719, 7.8625, 0.83", "22.1044, 109.603, 7.39655, 0.83", "24.7408, 122.3, 6.07536, 0.83", "26.4444, 134.913, 3.25767, 0.83", "29.7419, 147.458, 1.94395, 0.83", "31.349, 160.326, 0.61732, 0.83", "34.4153, 172.736, -1.93037, 0.83", "37.8415, 184.674, -5.88968, 0.83", "40.0748, 196.454, -11.0105, 0.83", "43.9177, 207.462, -16.8406, 0.83", "48.2035, 219.1, -20.8543, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000041566367777,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.13924, 10.2624, 3.27231, 2.49", "-1.13924, 12.5764, 3.27231, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000041566367777
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.34409, -10.4766, -0.528516, 0.83", "3.43791, -25.3297, -0.528516, 0.83", "5.53174, -40.1829, -0.528516, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "2.20224, -12.4257, 1.79231, 0.28", "2.94893, -15.0494, 3.82401, 0.28", "3.2773, -16.2033, 4.71748, 0.55", "4.39349, -20.1254, 7.75456, 0.28", "5.4544, -23.8533, 10.6412, 0.28", "6.10966, -26.1557, 12.4242, 0.28", "7.72897, -34.0543, 17.5025, 0.28", "9.21096, -40.6099, 24.2572, 0.28" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "2.20224, -12.4257, 1.79231, 1.66", "2.46102, -14.1446, -0.239533, 1.66", "2.79487, -16.3622, -2.86077, 1.94" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.13924, 12.5764, 3.27231, 0.83", "0.667546, 17.4978, 2.4567, 0.83", "1.78415, 20.3982, 1.52032, 0.55", "2.91289, 23.2739, 0.349976, 0.83", "4.75701, 27.8783, -1.71108, 0.83", "5.68358, 30.195, -2.72172, 1.11", "8.08752, 36.2058, -5.34377, 1.11", "10.5429, 42.3052, -8.29652, 0.55", "12.881, 47.9482, -11.2542, 1.11", "15.2972, 53.6264, -14.3334, 1.11", "17.0348, 57.7364, -16.4919, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.13924, 12.5764, 3.27231, 1.11", "-4.24888, 18.6596, 6.39138, 1.11", "-5.73094, 21.5588, 7.87794, 2.22" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.53174, -40.1829, -0.528516, 0.28", "7.62556, -55.036, -0.528516, 0.28", "9.71939, -69.8892, -0.528516, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "9.21096, -40.6099, 24.2572, 0.28", "9.29866, -49.0051, 31.7111, 0.28", "7.62069, -58.058, 38.1356, 0.28", "4.26708, -67.6199, 42.97, 0.28", "1.90078, -77.0506, 48.5833, 0.28", "-2.7752, -85.1301, 54.8206, 0.28", "-6.7008, -93.7644, 60.8278, 0.28", "-9.54971, -102.007, 67.8973, 0.28", "-11.5443, -111.415, 73.69, 0.28", "-12.9235, -120.537, 80.0883, 0.28", "-15.673, -129.537, 86.2117, 0.28", "-17.7542, -138.63, 92.4602, 0.28", "-19.1284, -148.643, 97.3491, 0.28", "-22.0668, -158.964, 100.649, 0.28", "-23.5951, -169.785, 103.223, 0.28", "-25.245, -180.738, 105.055, 0.28", "-28.4324, -190.882, 108.657, 0.28", "-31.3725, -200.106, 114.341, 0.28", "-35.2833, -209.992, 117.952, 0.28", "-41.1262, -219.202, 120.61, 0.28", "-45.8348, -229.076, 123.138, 0.28", "-51.1838, -237.988, 127.381, 0.28", "-57.1468, -246.298, 132.012, 0.28", "-64.4861, -252.087, 138.23, 0.28", "-72.041, -257.096, 144.854, 0.28", "-80.1629, -260.839, 151.642, 0.28", "-86.2854, -266.189, 159.383, 0.28", "-93.722, -272.021, 165.444, 0.28", "-102.757, -276.404, 170.465, 0.28", "-112.164, -278.315, 176.287, 0.28" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "9.21096, -40.6099, 24.2572, 0.28", "13.0638, -49.8164, 31.0979, 0.28", "17.9378, -58.6013, 37.8411, 0.28", "21.9318, -67.6199, 44.8492, 0.28", "26.5212, -77.0009, 50.9595, 0.28", "30.5662, -85.3194, 58.7595, 0.28", "36.0265, -93.3307, 65.9987, 0.28", "40.3908, -101.009, 74.2685, 0.28", "44.4862, -109.584, 81.7579, 0.28", "46.916, -119.585, 88.1198, 0.28", "51.2272, -128.516, 95.0522, 0.28", "56.6072, -137.809, 100.63, 0.28", "62.9284, -145.514, 107.491, 0.28", "69.3291, -152.486, 115.03, 0.28", "76.7793, -159.68, 121.284, 0.28", "83.4508, -165.928, 129.212, 0.28", "91.0848, -173.23, 135.113, 0.28", "98.3591, -181.171, 140.628, 0.28", "106.227, -188.984, 145.473, 0.28", "112.675, -197.264, 151.495, 0.28", "118.051, -206.691, 156.845, 0.28", "123.374, -216.615, 161.269, 0.28", "130.372, -226.147, 163.834, 0.28", "137.837, -234.811, 167.784, 0.28", "145.426, -243.721, 170.852, 0.28", "154.028, -251.941, 173.056, 0.28", "162.529, -260.549, 172.87, 0.28", "172.175, -267.835, 173.392, 0.28", "181.911, -274.863, 174.883, 0.28" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "2.79487, -16.3622, -2.86077, 0.55", "3.43121, -17.7856, -4.50178, 0.55", "4.14949, -19.2595, -6.17278, 0.55", "5.42535, -21.4086, -8.95529, 0.28", "6.02922, -22.3476, -10.2248, 0.83", "7.73971, -24.7838, -13.5873, 0.55", "9.0729, -26.5422, -16.0648, 0.55", "9.70806, -27.2406, -17.1991, 0.55", "12.0094, -29.3586, -20.9161, 0.28", "12.2896, -29.5764, -21.312, 0.28", "12.9717, -30.0624, -22.2, 0.28", "13.6384, -30.5486, -22.9099, 0.83", "15.65, -32.0489, -24.7524, 0.83", "17.2888, -33.3282, -26.0998, 0.55", "18.3933, -34.3045, -26.9246, 0.83", "20.3471, -36.1587, -28.3737, 0.55", "22.3799, -38.2434, -29.9476, 0.83", "24.1388, -40.0671, -31.2243, 0.55", "24.7203, -40.6778, -31.6084, 0.55", "26.3867, -42.3195, -32.7003, 0.83", "27.3173, -43.2108, -33.4521, 0.83", "29.1594, -44.9598, -35.1925, 0.55", "29.983, -45.6949, -36.0959, 0.55", "30.8053, -46.405, -36.9962, 0.28", "31.9572, -47.3313, -38.343, 0.83", "34.5845, -49.2516, -41.7019, 0.55", "36.4141, -50.5044, -44.1489, 0.28", "37.6097, -51.2691, -45.8012, 0.55", "38.1965, -51.6248, -46.5959, 0.28", "40.0569, -52.6416, -48.979, 0.83", "43.1418, -54.1444, -52.4072, 0.28", "44.218, -54.5876, -53.451, 0.55", "47.0506, -55.6575, -55.9271, 0.28", "48.6073, -56.2978, -57.1862, 0.55", "51.2784, -57.4284, -59.2024, 0.55", "53.3777, -58.3898, -60.74, 0.83", "57.6262, -60.4897, -63.824, 0.28", "58.7204, -61.0672, -64.6599, 0.55", "61.8102, -62.7773, -67.3534, 0.28", "62.7373, -63.3146, -68.2793, 0.83", "65.1258, -64.6907, -70.9966, 0.28", "66.0133, -65.1647, -72.0982, 0.55", "66.3439, -65.2952, -72.4775, 0.55", "69.9783, -66.2806, -76.4658, 0.28", "70.5749, -66.3822, -77.0466, 0.55", "72.9396, -66.6678, -79.0325, 0.28", "74.6745, -66.8122, -80.2408, 0.83", "78.8718, -67.2204, -82.9145, 0.28", "79.9151, -67.3563, -83.4623, 0.55", "81.5406, -67.6534, -84.0768, 0.28", "82.9839, -68.0091, -84.5596, 0.83", "83.4639, -68.1731, -84.7042, 0.83", "86.2808, -69.3055, -85.613, 0.28", "87.5766, -69.8957, -86.0208, 0.55", "88.2337, -70.1899, -86.2443, 0.28", "89.87, -70.9123, -86.8186, 0.83", "92.9448, -72.2435, -87.7656, 0.55", "94.0076, -72.6537, -88.0379, 0.83", "95.7354, -73.2223, -88.3014, 0.28", "96.4361, -73.4271, -88.4086, 0.55", "97.2458, -73.6373, -88.5159, 0.28", "98.5928, -73.9895, -88.7853, 0.55", "99.29, -74.1966, -88.9269, 0.28", "100.604, -74.6435, -89.3798, 0.55", "102.611, -75.3571, -90.2252, 0.28", "103.318, -75.6339, -90.6112, 0.55", "106.141, -76.8334, -92.3213, 0.28", "107.543, -77.4788, -93.2292, 0.83", "109.752, -78.5957, -94.693, 0.28", "110.1, -78.7877, -94.9315, 0.55", "112.814, -80.4036, -96.772, 0.28", "113.9, -81.1202, -97.5024, 0.28", "114.256, -81.3888, -97.7622, 0.55", "114.925, -81.9999, -98.2865, 0.28", "115.542, -82.6747, -98.7822, 0.55", "116.788, -84.2277, -99.8211, 0.28", "117.926, -85.807, -100.749, 0.55", "119.672, -88.2919, -102.156, 0.28", "120.828, -89.931, -103.175, 0.83", "122.041, -91.6142, -104.278, 0.28", "122.708, -92.5451, -104.787, 0.55", "123.101, -93.0947, -105.065, 0.28", "123.771, -93.9513, -105.491, 0.83", "126.625, -97.167, -106.905, 0.28", "127.339, -97.756, -107.475, 0.55", "129.465, -99.142, -109.875, 0.28", "130.906, -99.9945, -111.965, 0.55", "131.689, -100.449, -113.332, 0.28", "132.068, -100.659, -114.06, 0.55", "135.928, -102.727, -121.79, 0.55", "137.584, -103.584, -125.252, 0.28", "138.633, -104.132, -127.558, 0.83", "141.136, -105.608, -132.987, 0.28", "141.315, -105.731, -133.355, 0.55", "142.113, -106.339, -134.733, 0.28", "143.729, -107.62, -136.649, 0.55", "144.934, -108.525, -137.67, 0.28", "146.02, -109.308, -138.46, 0.55", "148.471, -111.043, -140.012, 0.28", "149.638, -111.91, -140.733, 0.55", "152.647, -114.193, -142.763, 0.28", "154.42, -115.604, -143.905, 0.55", "156.993, -117.582, -145.539, 0.28", "157.759, -118.188, -146.011, 0.55", "159.413, -119.471, -147.023, 0.28", "162.055, -121.484, -148.747, 0.28", "162.658, -121.954, -149.09, 0.28", "163.534, -122.666, -149.637, 0.55", "165.046, -123.997, -150.576, 0.28", "166.901, -125.64, -151.848, 0.55", "169.96, -128.292, -154.098, 0.28", "170.973, -129.242, -154.798, 0.55", "171.954, -130.219, -155.589, 0.28", "172.908, -131.27, -156.533, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "2.79487, -16.3622, -2.86077, 1.66", "2.69381, -18.9726, -4.31563, 1.66", "2.55166, -22.6445, -6.36212, 1.94" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "17.0348, 57.7364, -16.4919, 0.55", "15.9152, 59.7973, -16.3377, 0.55", "15.1513, 61.0383, -16.203, 0.55", "14.1663, 62.552, -16.0314, 0.28", "13.5191, 63.5697, -16.0339, 0.55", "12.7916, 64.7556, -16.1141, 0.28", "11.8996, 66.278, -16.2595, 0.55", "11.1496, 67.6245, -16.4428, 0.28", "10.6733, 68.5941, -16.5012, 0.83", "9.63704, 71.2554, -16.741, 0.28", "9.31882, 72.1904, -16.7519, 0.83", "8.91555, 73.3952, -16.723, 0.55", "8.53896, 74.5334, -16.625, 0.83", "7.3028, 77.9774, -16.0943, 0.55", "6.36016, 80.3684, -15.5146, 0.83", "5.05819, 83.5349, -14.5303, 0.55", "4.47889, 84.8953, -14.0909, 0.55", "3.43918, 87.183, -13.2542, 0.83", "1.90029, 90.388, -12.0303, 0.55", "1.18012, 91.8238, -11.4215, 0.83", "0.385675, 93.4431, -10.6353, 0.28", "0.189974, 93.8859, -10.4028, 0.55", "-1.10819, 97.1665, -8.68636, 0.28", "-1.65198, 98.7428, -7.91756, 0.55", "-2.37137, 101.206, -6.89812, 0.28", "-2.76033, 102.752, -6.34218, 0.55", "-3.61702, 106.502, -5.19691, 0.28", "-4.01918, 108.676, -4.66446, 0.55", "-4.30728, 110.812, -4.29925, 0.28", "-4.54283, 113.009, -4.00244, 0.28", "-4.60496, 113.769, -3.97175, 0.55", "-4.72986, 115.379, -3.99095, 0.55", "-4.76489, 116.046, -4.10077, 0.55", "-6.59838, 124.451, -2.79556, 0.55", "-7.64702, 133.068, -2.17553, 0.55", "-9.53791, 141.452, -3.52732, 0.55", "-10.2519, 149.77, -5.98419, 0.55", "-10.1437, 157.988, -8.84541, 0.55", "-9.19872, 166.079, -11.9023, 0.55", "-9.56346, 173.678, -16.1271, 0.55", "-9.14057, 181.01, -20.7932, 0.55", "-10.3061, 187.424, -26.5578, 0.55", "-10.4953, 193.268, -33.0024, 0.55", "-10.5024, 199.37, -39.2048, 0.55", "-11.085, 205.915, -44.9106, 0.55", "-11.4095, 212.76, -50.2746, 0.55", "-12.0721, 219.161, -56.1304, 0.55", "-13.413, 225.363, -62.0857, 0.55", "-15.1578, 231.518, -67.9838, 0.55", "-15.9958, 238.262, -73.419, 0.55", "-18.8314, 244.576, -78.6924, 0.55", "-20.3912, 250.566, -84.8092, 0.55", "-21.9323, 256.135, -91.3142, 0.55", "-22.701, 261.074, -98.438, 0.55", "-23.6023, 265.124, -106.087, 0.55", "-24.4938, 268.242, -114.161, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "17.0348, 57.7364, -16.4919, 0.83", "18.6849, 60.4589, -16.4299, 0.83", "19.8148, 62.2391, -16.3407, 0.55", "20.5625, 63.2906, -16.2552, 0.55", "21.2627, 64.2611, -16.1626, 0.55", "22.2358, 65.6033, -16.0195, 0.55", "23.6943, 67.6043, -15.7543, 0.83", "24.6107, 68.8216, -15.5292, 0.83", "25.9069, 70.4296, -15.2042, 0.83", "27.1766, 71.9651, -14.8523, 0.83", "29.0364, 74.1314, -14.3963, 0.55", "30.752, 76.0995, -14.0636, 0.83", "32.4519, 77.9905, -13.7918, 0.83", "33.2051, 78.8552, -13.6933, 0.83", "35.1527, 81.0834, -13.474, 0.83", "37.3331, 83.5561, -13.2651, 0.83", "39.0293, 85.467, -13.1373, 0.55", "40.7154, 87.4041, -13.038, 0.55", "42.1574, 89.1853, -12.9183, 0.83", "43.2829, 90.7356, -12.8532, 0.55", "44.104, 91.9974, -12.8656, 0.55", "45.0237, 93.6633, -12.9335, 0.83", "46.142, 95.9913, -13.2101, 0.83", "46.8386, 97.7269, -13.5804, 0.83", "47.7137, 100.329, -14.3862, 0.55", "48.2576, 102.152, -15.1793, 0.83", "48.5675, 103.146, -15.8101, 0.83", "48.9275, 104.296, -16.7106, 0.83", "49.2738, 105.259, -17.5912, 0.83", "49.7944, 106.34, -18.7639, 0.55", "50.7018, 107.937, -20.5467, 0.83", "52.4284, 110.683, -23.6298, 0.28", "53.1149, 111.742, -24.7893, 0.83", "54.0864, 113.24, -26.3663, 0.83", "56.1121, 116.41, -29.5537, 0.55", "56.8213, 117.589, -30.5828, 0.83", "58.2083, 120.301, -32.3736, 0.28", "58.8394, 121.73, -33.0586, 0.28", "59.1832, 122.673, -33.4009, 0.55", "59.4013, 123.586, -33.63, 0.28", "59.6365, 125.686, -33.9447, 0.83", "59.7757, 128.564, -34.5098, 0.28", "59.7881, 129.995, -34.8089, 0.28", "59.8241, 131.044, -35.1218, 0.83", "60.0142, 133.82, -36.1413, 0.28", "60.1666, 135.379, -36.8298, 0.83", "60.5486, 138.004, -38.2107, 0.55", "60.7254, 138.801, -38.7102, 0.28", "61.3147, 140.691, -39.9136, 0.55", "61.8742, 141.975, -40.7585, 0.55", "62.3816, 142.771, -41.2789, 0.28", "62.9232, 143.396, -41.6386, 0.55", "64.5047, 144.904, -42.2511, 0.55", "65.4047, 145.682, -42.4472, 0.28", "66.3175, 146.441, -42.5114, 0.55", "67.4571, 147.421, -42.4296, 0.55", "69.8002, 149.616, -41.9439, 0.28", "70.7272, 150.57, -41.6352, 0.83", "72.3839, 152.464, -40.9083, 0.55", "73.3688, 153.71, -40.4162, 0.55", "75.1439, 156.294, -39.4145, 0.28", "76.4361, 158.499, -38.6033, 0.83", "77.4411, 160.801, -37.669, 0.55", "78.1328, 162.88, -36.7388, 0.55", "78.4654, 164.288, -36.1181, 1.11", "78.7325, 165.893, -35.4703, 1.11", "78.8301, 166.894, -35.1217, 1.11", "78.9038, 171.915, -33.5883, 0.28", "78.8423, 173.092, -33.2837, 0.28", "78.6924, 174.98, -32.8723, 0.55", "78.5164, 176.697, -32.6496, 0.28", "78.449, 177.329, -32.6195, 0.83", "78.3127, 178.691, -32.7174, 0.28", "78.2325, 179.73, -32.9157, 0.55", "78.1148, 180.826, -33.0233, 0.28", "77.6523, 184.036, -33.0815, 0.28", "77.4082, 185.523, -33.0584, 0.55", "77.0308, 187.594, -32.9873, 0.28", "76.7936, 188.866, -32.9183, 0.83", "75.9342, 193.195, -32.6062, 0.28", "75.6773, 194.404, -32.4841, 0.83", "75.372, 195.84, -32.2701, 0.28", "75.1437, 196.704, -32.1048, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-5.73094, 21.5588, 7.87794, 1.11", "-4.29853, 25.0422, 9.48907, 1.11", "-3.1584, 27.8147, 10.7714, 0.83", "-1.82997, 31.0452, 12.2656, 0.83", "0.590378, 36.931, 14.988, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.73094, 21.5588, 7.87794, 0.83", "-6.62037, 25.3529, 7.04845, 0.83", "-7.24269, 28.0075, 6.46807, 1.11", "-7.76226, 30.2238, 5.98352, 1.11", "-7.94834, 31.0176, 5.80998, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "2.55166, -22.6445, -6.36212, 0.83", "2.0006, -21.3304, -8.23835, 0.83", "1.09739, -19.4011, -10.9327, 0.83", "-1.54761, -14.5012, -18.3594, 1.11", "-3.11177, -11.6036, -22.7512, 1.11", "-5.10755, -7.90643, -28.355, 1.11", "-6.09533, -6.07656, -31.1285, 0.55", "-6.66511, -5.03826, -32.8101, 0.55", "-8.31431, -2.62869, -37.1706, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "2.55166, -22.6445, -6.36212, 1.11", "1.36618, -27.1398, -9.4433, 1.11", "0.603974, -30.0301, -11.4244, 1.11", "-0.413284, -33.8875, -14.0683, 1.11", "-1.84511, -39.317, -17.7898, 1.11", "-3.60898, -46.0056, -22.3743, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "75.1437, 196.704, -32.1048, 0.28", "73.0609, 196.385, -32.3454, 0.28", "71.1861, 196.096, -32.562, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "75.1437, 196.704, -32.1048, 0.55", "73.3509, 200.019, -30.8155, 0.55", "71.6659, 203.26, -29.6445, 0.55", "69.9519, 206.549, -28.6103, 0.28", "69.3271, 207.751, -28.1863, 0.55", "67.5993, 211.411, -26.884, 0.28", "67.1727, 212.437, -26.5277, 0.55", "66.5421, 214.307, -25.9227, 0.28", "66.087, 216.092, -25.3548, 0.55", "65.5297, 219.204, -24.5447, 0.28", "65.4493, 221.633, -24.4624, 0.28", "65.7508, 223.251, -24.9965, 0.55", "66.58, 225.568, -26.3476, 0.28", "66.58, 225.568, -26.3476, 0.55", "67.8172, 228.109, -28.0182, 0.28", "71.5986, 236.326, -33.3113, 0.28", "72.5623, 238.51, -34.6224, 0.55", "74.0717, 242.185, -36.5845, 0.28", "74.6689, 243.939, -37.3032, 0.55", "75.9802, 249.225, -38.8009, 0.28", "76.2625, 251.256, -39.1356, 0.55", "76.3636, 252.885, -39.2358, 0.28", "76.4277, 254.812, -39.3482, 0.55", "76.3742, 260.219, -39.6202, 0.28", "76.3137, 262.516, -39.8358, 0.55", "76.1822, 267.686, -40.6393, 0.28", "76.1139, 270.315, -41.0884, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "0.590378, 36.931, 14.988, 0.83", "1.71944, 38.9515, 15.7443, 0.83", "2.98949, 41.6097, 16.6294, 0.83", "3.85085, 43.7391, 17.5143, 0.55", "4.91227, 46.6549, 19.0868, 0.83", "5.73107, 48.7292, 20.287, 0.83", "6.35857, 50.29, 21.2012, 0.83", "7.57639, 53.4726, 23.11, 0.83", "9.02667, 57.5075, 25.4952, 0.83", "10.2194, 61.2443, 27.6193, 0.83", "11.11, 64.0854, 29.3155, 0.55", "11.9353, 66.5792, 30.8532, 0.83", "12.5511, 68.3676, 31.9797, 0.83", "13.306, 70.4501, 33.1835, 0.83", "14.4649, 73.639, 34.3563, 0.83", "18.6771, 81.7178, 37.4297, 0.83", "22.6706, 89.6112, 41.1985, 0.83", "25.8136, 97.9778, 44.745, 0.83", "29.0961, 105.889, 49.115, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "0.590378, 36.931, 14.988, 0.83", "-1.48857, 40.5181, 19.6077, 0.83", "-2.35273, 42.1863, 21.5763, 0.83", "-3.951, 45.2718, 25.2174, 0.83", "-4.74286, 46.8005, 27.0214, 0.83", "-6.76098, 50.6965, 31.6189, 1.11", "-8.15237, 53.3826, 34.7887, 0.83", "-9.10903, 55.2624, 36.9516, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-7.94834, 31.0176, 5.80998, 0.55", "-8.70826, 32.4239, 6.9348, 0.55", "-9.48935, 33.9496, 8.1641, 0.28", "-10.0579, 35.2036, 9.22835, 0.55", "-11.161, 37.3223, 11.5106, 0.83", "-12.5606, 39.7138, 14.1773, 0.83", "-13.0258, 40.3229, 14.9947, 0.55", "-14.2484, 41.6531, 17.038, 0.83", "-16.3474, 43.7271, 20.2152, 0.83", "-20.1475, 47.104, 25.3334, 0.83", "-21.4794, 48.1518, 26.9176, 0.83", "-26.8467, 51.9, 32.3773, 0.83", "-28.5563, 52.9941, 33.8891, 0.83", "-31.3801, 54.6875, 35.9978, 0.83", "-33.024, 55.6195, 36.9101, 0.83", "-34.5637, 56.6128, 37.4557, 0.83", "-36.195, 57.7547, 37.9286, 0.55", "-37.5277, 58.8462, 38.1224, 0.55", "-39.2918, 60.2888, 38.5531, 0.83", "-40.7562, 61.4493, 38.9826, 0.55", "-43.0952, 63.4318, 39.7558, 0.83", "-45.8045, 65.9737, 40.7804, 0.55", "-46.9091, 67.0624, 41.265, 0.55", "-49.5923, 69.5905, 42.5808, 1.11", "-56.2093, 75.0865, 47.2516, 1.11", "-62.2291, 80.1661, 53.0625, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-7.94834, 31.0176, 5.80998, 0.55", "-7.12753, 34.0807, 5.64724, 0.55", "-6.99283, 34.5826, 5.63428, 0.83", "-6.71348, 35.7331, 5.70466, 0.28", "-6.4629, 36.9052, 5.83185, 1.11", "-5.97692, 39.171, 6.10387, 1.11", "-5.50725, 41.4288, 6.38359, 0.83", "-5.17034, 43.0502, 6.6487, 1.11", "-4.6245, 45.4354, 7.04787, 0.55", "-4.04033, 47.9117, 7.47476, 0.83", "-3.41629, 50.5053, 7.89872, 0.28", "-3.10185, 51.8733, 8.09966, 1.11", "-2.38275, 55.2375, 8.5649, 1.11", "-2.04746, 56.8252, 8.74123, 0.28", "-1.61194, 58.8733, 8.93517, 0.83", "-0.96325, 62.1608, 9.26092, 0.55", "-0.507437, 64.7713, 9.5172, 0.55", "-0.218132, 66.6086, 9.68682, 0.55", "-0.0764423, 67.5309, 9.74674, 1.11", "0.40263, 70.3208, 9.89297, 1.11", "0.93129, 73.1168, 9.98119, 0.83", "1.40915, 75.454, 10.0013, 0.83", "1.76988, 77.0656, 9.99167, 0.28", "2.39182, 79.7354, 9.9179, 0.83", "3.01566, 82.3299, 9.79092, 0.83", "3.70144, 85.0442, 9.55707, 0.83", "4.14696, 86.6005, 9.39361, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-8.31431, -2.62869, -37.1706, 0.55", "-8.54322, -1.51091, -39.4102, 0.55", "-8.61198, -1.105, -40.1425, 1.11", "-9.26975, 2.77794, -47.1469, 0.83", "-9.8573, 6.24638, -53.4036, 0.55", "-9.98825, 7.01939, -54.798, 0.55", "-10.4253, 9.59939, -59.4521, 0.83", "-10.5165, 10.8265, -61.6433, 1.11" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-8.31431, -2.62869, -37.1706, 0.55", "-8.87232, -4.07225, -40.1105, 0.55", "-9.21073, -4.49236, -41.1116, 0.55", "-9.73804, -4.82059, -42.4971, 1.11", "-10.3445, -5.09659, -43.9007, 0.55", "-12.1577, -5.72718, -48.6519, 0.55", "-13.4331, -6.06748, -51.9298, 0.55", "-14.5213, -6.15955, -54.7599, 0.83", "-17.0666, -6.10342, -61.3328, 0.28", "-17.6833, -6.02175, -63.0382, 0.83", "-20.4501, -5.47946, -71.1378, 0.55", "-20.8605, -5.39057, -72.3476, 0.83", "-22.4888, -5.00505, -77.302, 0.28", "-22.7505, -4.94105, -78.0756, 0.55", "-25.04, -4.25328, -84.3813, 0.28", "-25.3458, -4.12148, -85.2261, 0.28", "-25.8778, -3.86494, -86.519, 0.55", "-26.3108, -3.60583, -87.6732, 0.83", "-28.684, -1.99, -93.7246, 0.28", "-28.9909, -1.73347, -94.5715, 0.83", "-30.9026, 0.159541, -100.095, 0.28", "-31.2664, 0.577731, -101.258, 0.83", "-33.4708, 3.44001, -108.763, 0.28", "-33.9108, 4.04206, -110.371, 0.83", "-35.5617, 6.28177, -116.738, 0.28", "-35.9105, 6.74007, -118.137, 0.55", "-36.3431, 7.27198, -119.918, 0.28", "-36.5105, 7.49373, -120.684, 0.83", "-37.377, 8.43488, -124.439, 0.28", "-37.5754, 8.64012, -125.566, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-3.60898, -46.0056, -22.3743, 0.55", "-5.63899, -44.9916, -25.0897, 0.55", "-6.04762, -44.8374, -25.7192, 0.55", "-10.174, -43.5766, -31.9791, 0.83", "-11.7803, -43.2296, -34.5964, 0.28", "-12.7359, -43.0859, -36.1287, 0.55", "-15.5288, -42.8401, -40.86, 1.11", "-19.7805, -42.6472, -48.5229, 0.55", "-20.5816, -42.6514, -50.0621, 1.11", "-23.0798, -42.9109, -54.849, 0.55", "-24.1951, -43.0673, -56.9668, 0.55", "-27.64, -43.6746, -63.2167, 0.28", "-28.3281, -43.8373, -64.3765, 0.55", "-32.8795, -44.5543, -70.4449, 0.28", "-34.4822, -44.7372, -72.1474, 1.11", "-36.9586, -45.0063, -73.672, 0.55", "-41.6159, -45.7789, -75.9953, 1.11", "-44.1066, -46.2146, -76.9015, 0.55", "-46.6667, -46.7338, -78.4191, 0.55", "-49.5944, -47.3641, -80.3731, 0.55", "-51.4046, -47.6286, -81.9116, 1.11", "-55.8673, -47.9781, -86.1706, 0.55", "-58.2246, -47.7786, -88.5653, 0.83", "-63.6727, -46.5648, -94.0873, 0.28", "-65.5486, -45.9784, -95.9629, 0.55", "-69.8132, -44.2345, -99.9059, 0.28", "-71.157, -43.5894, -100.955, 0.83", "-77.314, -40.2658, -104.531, 0.28", "-79.1583, -39.2616, -105.075, 0.83", "-81.78, -38.0642, -104.505, 0.28", "-83.3044, -37.7907, -103.169, 0.55", "-86.9584, -37.7025, -98.6744, 0.28", "-87.152, -37.7128, -98.392, 0.83", "-92.6475, -38.2271, -89.2087, 0.28", "-93.2493, -38.2369, -88.1357, 0.83", "-95.9757, -37.9202, -83.0398, 0.28", "-96.634, -37.6962, -81.7829, 0.83", "-99.5587, -35.9333, -76.3381, 0.28", "-100.378, -35.2328, -74.9942, 0.83", "-102.092, -33.2671, -72.712, 0.28", "-103.123, -31.9632, -71.3646, 0.83", "-105.864, -28.2799, -68.0588, 0.28", "-106.4, -27.5705, -67.4666, 0.83", "-108.869, -24.4176, -65.1536, 0.28", "-110.141, -23.0541, -64.1452, 0.55", "-113.788, -19.6473, -61.6904, 0.28", "-114.619, -18.9178, -61.1779, 0.55", "-116.615, -17.2475, -60.1816, 0.28", "-117.374, -16.6076, -59.7775, 0.55", "-122.004, -12.8325, -57.1317, 0.28", "-122.369, -12.5344, -56.9741, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-3.60898, -46.0056, -22.3743, 0.83", "-3.35666, -49.6745, -22.9259, 0.83", "-3.22484, -52.6792, -23.3711, 0.55", "-3.20539, -53.8288, -23.5282, 0.55", "-3.24005, -55.6643, -23.8255, 1.11", "-3.30061, -57.1327, -24.0305, 0.55", "-3.38504, -58.7469, -24.2256, 1.11", "-3.58313, -60.9443, -24.5372, 0.55", "-3.7481, -62.3928, -24.676, 1.11", "-4.10727, -65.1018, -24.9131, 1.11", "-4.44128, -67.4408, -25.0609, 0.55", "-4.76531, -69.7411, -25.1365, 1.11", "-5.03568, -71.8816, -25.2082, 0.83", "-5.27437, -74.2643, -25.3206, 0.28", "-5.50178, -77.0254, -25.569, 1.11", "-5.64881, -79.2135, -25.8554, 0.83", "-5.78144, -81.7783, -26.3388, 0.83", "-5.86012, -84.1838, -26.8672, 0.83", "-5.87609, -86.4127, -27.4438, 0.83", "-5.85212, -88.7348, -28.1785, 0.28", "-5.81029, -90.3606, -28.7792, 0.83", "-5.74227, -91.6682, -29.3086, 0.28", "-5.65718, -92.9535, -29.8197, 1.11", "-5.52298, -94.7643, -30.4083, 0.28", "-5.40519, -96.3461, -30.8106, 1.11", "-5.27603, -98.3027, -31.37, 0.28", "-5.21317, -99.281, -31.6995, 1.11", "-5.13895, -100.547, -32.1483, 1.11", "-4.98124, -103.143, -33.152, 0.55", "-4.81574, -105.288, -34.0015, 1.11", "-4.38596, -109.095, -35.6642, 0.83", "-4.11254, -110.651, -36.3903, 0.28", "-3.83425, -111.732, -36.8817, 0.55", "-3.1841, -113.661, -37.6685, 0.28", "-2.70903, -114.866, -38.0588, 0.83", "-1.80654, -117.012, -38.5317, 0.55", "-0.881603, -119.094, -38.658, 1.38", "0.973947, -123.29, -38.2731, 0.28", "1.64775, -124.88, -37.9267, 0.83", "2.26588, -126.415, -37.3303, 0.28", "2.78117, -127.781, -36.5881, 0.83", "3.49925, -129.786, -35.1927, 0.83", "4.53397, -132.71, -32.8345, 0.28", "4.90725, -133.764, -31.9076, 0.55", "5.46082, -135.311, -30.6046, 0.28", "6.18296, -137.313, -28.9814, 0.83", "6.80287, -139.016, -27.6851, 0.28", "7.09389, -139.893, -27.1285, 0.55", "7.62184, -141.667, -26.2587, 0.28", "7.79517, -142.294, -26.017, 0.83", "8.1042, -143.589, -25.7515, 0.28", "8.32418, -144.598, -25.6986, 0.83", "8.54536, -145.527, -25.7435, 0.83", "9.07363, -147.537, -25.9638, 0.83", "9.83124, -150.337, -26.4302, 0.28", "10.4314, -152.69, -27.0115, 0.28", "10.868, -154.346, -27.4337, 0.83", "11.2522, -155.723, -27.8126, 0.55", "11.5775, -156.822, -28.1037, 1.11", "12.7992, -160.721, -29.0269, 0.55", "13.7997, -163.848, -29.798, 1.11", "14.6503, -166.356, -30.3355, 0.28", "15.1425, -167.654, -30.6751, 0.55", "15.8692, -169.199, -31.13, 0.28", "16.4364, -170.16, -31.387, 0.55", "18.0052, -172.324, -31.8866, 0.28", "19.3165, -174.171, -32.1159, 0.83", "20.8228, -176.421, -32.3435, 0.28", "22.4981, -179.035, -32.5081, 0.83", "24.1535, -181.632, -32.7274, 0.55", "25.0178, -183.053, -32.8365, 0.83", "27.5929, -187.466, -33.0319, 0.55", "28.577, -189.173, -33.1743, 0.83", "29.8288, -191.419, -33.4582, 0.55", "30.9092, -193.395, -33.8441, 0.83", "32.409, -195.999, -34.555, 0.55", "33.3237, -197.432, -35.0157, 0.55", "35.0155, -199.617, -35.7349, 1.11", "36.4738, -201.27, -36.1736, 0.28", "37.1732, -202.018, -36.3428, 0.55", "38.449, -203.303, -36.5318, 0.28", "39.8681, -204.553, -36.6595, 1.11", "43.2091, -207.298, -36.6368, 0.28", "44.1837, -208.059, -36.4734, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "29.0961, 105.889, 49.115, 0.55", "32.811, 115.292, 52.3082, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "29.0961, 105.889, 49.115, 0.55", "31.0841, 110.926, 52.4159, 0.55", "33.6699, 116.142, 54.9331, 0.55", "35.1041, 121.866, 57.2558, 0.55", "36.7569, 127.37, 59.9361, 0.55", "37.3542, 133.348, 61.9681, 0.55", "37.9, 139.297, 64.0994, 0.55", "38.0904, 144.891, 67.0792, 0.55", "39.062, 150.454, 69.968, 0.55", "41.8185, 155.553, 72.5389, 0.55", "45.2544, 160.413, 74.7315, 0.55", "49.1143, 165.053, 76.6766, 0.55", "52.6198, 169.59, 79.3873, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-9.10903, 55.2624, 36.9516, 0.83", "-8.44822, 53.1861, 37.2368, 0.83", "-7.58949, 50.5131, 37.8717, 0.83", "-7.06774, 48.7202, 38.3516, 0.83", "-5.89326, 44.7498, 39.2025, 0.83", "-4.79303, 40.9211, 39.8848, 0.83", "-3.37757, 35.9954, 40.7625, 0.55", "-2.89001, 34.1164, 41.0414, 0.55", "-2.50027, 32.5434, 41.3055, 0.55", "-1.57063, 28.9091, 42.0764, 0.28", "-1.19146, 27.5124, 42.5458, 0.83", "2.42803, 17.112, 43.0798, 0.83", "5.87101, 7.02354, 45.8949, 0.83", "9.89187, -2.30614, 50.178, 0.83", "13.166, -11.7493, 54.8323, 0.83", "17.8438, -19.371, 61.2808, 0.83", "22.7647, -24.8164, 69.5081, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-9.10903, 55.2624, 36.9516, 1.11", "-10.3746, 57.2425, 37.9069, 1.11", "-11.3095, 58.7051, 38.6125, 1.11", "-12.8394, 61.0987, 39.7674, 0.83", "-14.4687, 63.6479, 40.9973, 1.11", "-16.4284, 66.7138, 42.4765, 0.83", "-17.1966, 67.9158, 43.0564, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-62.2291, 80.1661, 53.0625, 0.55", "-67.3704, 84.4657, 56.8982, 0.55", "-73.713, 87.2933, 60.2759, 0.55", "-79.6251, 90.5898, 63.9924, 0.55", "-86.4526, 93.4214, 66.2285, 0.55", "-93.4049, 95.5416, 68.8366, 0.55", "-99.9579, 98.2599, 71.8864, 0.55", "-107.102, 99.9158, 74.3031, 0.55", "-113.881, 102.964, 76.3983, 0.55", "-119.975, 106.944, 78.9774, 0.55", "-125.65, 110.049, 83.1957, 0.55", "-130.487, 113.078, 88.3966, 0.55", "-134.287, 116.688, 94.0685, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-62.2291, 80.1661, 53.0625, 0.55", "-68.6508, 86.3463, 59.71, 0.55", "-75.7684, 90.7097, 67.0532, 0.55", "-82.2627, 95.4436, 74.7367, 0.55", "-88.7189, 100.384, 82.3214, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "4.14696, 86.6005, 9.39361, 0.55", "4.65453, 89.6963, 9.51827, 0.55", "4.88447, 91.0568, 9.52589, 0.28", "5.21237, 92.7165, 9.50934, 0.83", "5.68515, 95.0402, 9.47585, 0.28", "5.95069, 96.3823, 9.46884, 0.83", "6.91444, 101.307, 9.51305, 0.28", "7.29886, 103.298, 9.49844, 0.83", "8.0753, 107.103, 9.44423, 0.28", "8.5938, 109.406, 9.41856, 0.83", "9.05154, 111.391, 9.37719, 0.28", "9.43152, 113.045, 9.38556, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "4.14696, 86.6005, 9.39361, 0.55", "6.08206, 89.3307, 5.93072, 0.55", "7.31131, 90.9429, 3.90957, 0.55", "8.46768, 92.3275, 2.21146, 0.83", "10.8288, 95.0787, -1.02149, 0.55", "13.2297, 97.8187, -4.00496, 0.83", "15.4448, 100.396, -6.56901, 0.83", "16.5306, 101.654, -7.6099, 0.83", "19.8099, 105.224, -10.0589, 0.55", "20.6233, 106.175, -10.5254, 0.55", "22.1267, 107.956, -11.1925, 0.83", "23.7863, 109.937, -11.7777, 0.55", "26.1127, 112.766, -12.6802, 0.83", "27.7863, 114.922, -13.4629, 0.83", "29.6776, 117.275, -14.5134, 0.83", "35.2588, 123.845, -18.2137, 0.28", "35.7684, 124.401, -18.6471, 0.55", "38.4426, 127.197, -21.2979, 0.28", "39.4886, 128.298, -22.5352, 1.11", "42.2114, 131.23, -26.1207, 0.55", "43.2184, 132.331, -27.535, 0.83", "46.6802, 136.508, -32.8059, 0.28", "47.4171, 137.366, -33.8855, 0.83", "50.6677, 141.322, -38.6829, 0.28", "51.2161, 142.033, -39.4895, 0.55", "52.391, 143.745, -41.1893, 0.28", "52.8111, 144.37, -41.7327, 0.83", "56.4666, 149.644, -45.6526, 0.28", "57.8407, 151.568, -47.0657, 0.28", "58.6904, 152.723, -47.9046, 0.55", "60.1012, 154.635, -49.3136, 0.28", "61.2032, 156.137, -50.4662, 0.55", "63.4554, 159.141, -52.9271, 0.28", "65.3358, 161.475, -54.6322, 1.38", "68.2397, 164.594, -56.7942, 0.28", "68.9, 165.139, -57.1524, 0.83", "71.3346, 166.904, -58.1776, 0.28", "75.4934, 169.568, -59.5096, 0.55", "80.5862, 172.538, -60.7041, 0.55", "83.8795, 174.34, -61.3288, 1.66", "95.2113, 180.432, -63.0014, 0.55", "96.382, 181.068, -63.1828, 1.11", "99.4043, 182.736, -63.6709, 0.28", "100.631, 183.454, -63.8756, 0.55", "105.879, 186.695, -65.0686, 0.28", "107.285, 187.592, -65.3624, 1.11", "111.534, 190.062, -66.2794, 0.55", "113.795, 191.187, -66.7394, 0.83", "116.487, 192.288, -67.1972, 0.55", "122.25, 194.144, -67.8055, 0.28", "124.403, 194.542, -67.9166, 0.83", "132.126, 195.318, -68.047, 0.28", "134.893, 195.342, -67.954, 1.11", "136.857, 195.227, -67.8816, 0.28", "138.813, 194.982, -67.88, 0.55", "143.168, 194.083, -67.7738, 0.28", "144.411, 193.738, -67.7301, 0.83", "146.777, 192.741, -67.4689, 0.28", "147.764, 192.213, -67.4461, 0.55", "148.972, 191.41, -67.5253, 0.28", "149.512, 190.984, -67.6561, 0.55", "150.886, 189.749, -68.0648, 0.28", "151.575, 189.103, -68.3106, 0.83", "155.708, 185.033, -69.9097, 0.28", "158.175, 182.533, -70.9174, 0.83", "162.488, 177.952, -72.6517, 0.28", "163.394, 177.036, -73.0643, 0.55", "165.031, 175.396, -73.8241, 0.28", "166.391, 173.84, -74.3733, 0.83", "168.739, 170.79, -75.1985, 0.28", "169.931, 169.215, -75.4872, 0.55", "175.278, 161.829, -76.1825, 0.28", "176.715, 159.883, -76.4284, 0.83", "181.527, 152.854, -77.2155, 0.28", "184.772, 148.269, -77.9119, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-10.5165, 10.8265, -61.6433, 0.83", "-10.8409, 10.7499, -62.9782, 0.83", "-12.071, 10.2747, -68.0212, 0.28", "-12.3279, 10.1621, -69.0098, 0.55", "-13.4887, 9.71159, -73.1559, 0.28", "-13.8765, 9.57035, -74.4684, 0.83", "-15.8388, 8.87558, -81.3225, 0.28", "-16.0769, 8.76719, -82.1756, 0.28", "-16.272, 8.66069, -82.9282, 0.55", "-17.1102, 8.2182, -86.3588, 0.28", "-17.4168, 8.04486, -87.6871, 0.83", "-18.5207, 7.41886, -93.5248, 0.28", "-18.7734, 7.27847, -94.887, 0.55", "-20.193, 6.41783, -103.218, 0.28", "-20.3178, 6.33168, -104.024, 0.83", "-21.2652, 5.52702, -110.858, 0.28", "-22.41, 4.50596, -119.7, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-10.5165, 10.8265, -61.6433, 0.55", "-14.1282, 14.5062, -61.6974, 0.55", "-15.1889, 15.4775, -61.6727, 0.83", "-16.8894, 16.9478, -61.5955, 0.28", "-17.5468, 17.5272, -61.6399, 0.55", "-19.5217, 19.2872, -61.8833, 0.28", "-20.4059, 20.1187, -62.1495, 0.55", "-22.1966, 21.8177, -62.9249, 0.28", "-23.029, 22.6419, -63.3385, 0.83", "-25.4477, 25.179, -64.6262, 0.28", "-26.7246, 26.6038, -65.3695, 0.83", "-30.2592, 30.9193, -67.8296, 0.28", "-31.3483, 32.3297, -68.6, 0.83", "-32.2865, 33.6413, -69.2529, 0.28", "-33.0036, 34.7173, -69.7193, 0.83", "-33.5861, 35.6421, -69.9993, 0.28", "-34.5002, 37.3389, -70.6277, 0.55", "-35.2592, 38.9282, -71.2091, 0.28", "-35.6952, 39.8208, -71.6762, 0.83", "-37.0829, 42.4282, -73.0997, 0.28", "-37.8619, 43.7163, -73.7866, 0.83", "-40.3714, 47.5246, -75.7481, 0.28", "-41.0455, 48.4597, -76.2124, 0.55", "-43.308, 51.4247, -77.6655, 0.28", "-44.7604, 53.2123, -78.4837, 1.11", "-46.2471, 54.9015, -79.1329, 0.28", "-47.1307, 55.8757, -79.4457, 0.55", "-49.7005, 58.6181, -80.0015, 0.28", "-51.0692, 60.1169, -80.3044, 1.11", "-52.4365, 61.655, -80.5564, 1.11", "-53.772, 63.2235, -80.8554, 0.28", "-54.5862, 64.2182, -81.0212, 0.55", "-56.3868, 66.4192, -81.2463, 0.28", "-57.3363, 67.5998, -81.2603, 0.55", "-58.3455, 68.9954, -81.374, 0.28", "-58.8326, 69.7667, -81.4618, 0.55", "-59.3186, 70.7275, -81.6607, 0.28", "-59.7194, 71.6526, -81.9362, 1.11", "-60.1504, 72.8127, -82.3049, 1.11", "-61.4756, 76.6526, -83.5114, 0.28", "-61.7105, 77.423, -83.8415, 0.55", "-62.3747, 79.6845, -84.9431, 0.28", "-62.6993, 80.8143, -85.5108, 0.55", "-63.2423, 82.7543, -86.4984, 0.28", "-63.559, 83.8409, -87.0641, 1.11", "-64.7946, 87.7711, -89.0121, 0.28", "-64.973, 88.3137, -89.3084, 0.83", "-65.6688, 90.3487, -90.4243, 0.28", "-66.0829, 91.5302, -91.0778, 0.83", "-66.5473, 92.8628, -91.8394, 0.28", "-66.7585, 93.4062, -92.117, 0.55", "-67.5316, 95.2033, -92.8345, 0.28", "-68.0576, 96.3681, -93.4334, 0.55", "-68.8902, 98.0375, -94.4532, 0.28", "-69.1498, 98.5304, -94.7752, 0.55", "-69.6914, 99.5502, -95.4643, 0.28", "-69.9331, 99.9821, -95.7639, 0.55", "-71.3788, 102.531, -97.4379, 0.28", "-71.7524, 103.172, -97.8458, 0.55", "-72.4719, 104.349, -98.5531, 0.55", "-74.2304, 107.081, -100.101, 0.28", "-74.6449, 107.763, -100.545, 0.55", "-75.169, 108.652, -101.149, 0.28", "-75.6348, 109.513, -101.861, 0.55", "-76.6286, 111.516, -103.91, 0.28", "-76.8838, 112.045, -104.503, 0.83", "-78.3373, 115.439, -108.747, 0.28", "-78.4977, 115.89, -109.341, 0.83", "-79.3907, 118.841, -113.345, 0.28", "-79.6983, 120.104, -115.022, 0.83", "-79.8733, 121.096, -116.262, 0.28", "-80.0907, 122.962, -118.438, 0.55", "-80.2299, 125.204, -120.656, 0.28", "-80.2371, 125.882, -121.264, 0.83", "-80.1454, 127.634, -122.526, 0.28", "-80.0792, 128.181, -122.951, 0.55", "-79.7468, 130.068, -124.518, 0.28", "-79.5993, 130.624, -124.99, 0.55", "-79.0374, 132.413, -126.496, 0.28", "-78.8567, 132.939, -126.975, 0.55", "-77.9397, 135.213, -129.008, 0.28", "-77.735, 135.685, -129.398, 0.83", "-76.2057, 138.831, -131.608, 0.28", "-75.5202, 140.068, -132.363, 0.55", "-74.5567, 141.48, -132.933, 0.55", "-73.3017, 142.971, -133.193, 0.28", "-72.2715, 143.963, -133.058, 0.55", "-70.9813, 144.98, -132.712, 0.28", "-69.9406, 145.68, -132.3, 0.55", "-67.7423, 146.947, -131.32, 0.28", "-65.8874, 147.915, -130.403, 0.55", "-64.579, 148.519, -129.722, 0.28", "-63.59, 148.919, -129.199, 0.55", "-62.8158, 149.197, -128.802, 0.55", "-61.0944, 149.812, -127.979, 0.28", "-60.2965, 150.113, -127.653, 0.55", "-57.6266, 151.204, -126.643, 0.28", "-55.9292, 152.005, -126.045, 0.55", "-54.6504, 152.701, -125.682, 0.28", "-53.7604, 153.251, -125.469, 0.55", "-52.9499, 153.859, -125.318, 0.28", "-52.1435, 154.589, -125.164, 0.55", "-50.8612, 156.061, -124.926, 0.28", "-49.6983, 157.568, -124.592, 0.55", "-49.0974, 158.438, -124.388, 0.28", "-48.6013, 159.187, -124.208, 0.55", "-47.8017, 160.488, -123.912, 0.28", "-47.3532, 161.29, -123.748, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "22.7647, -24.8164, 69.5081, 0.55", "26.7802, -31.2434, 72.1274, 0.55", "30.1668, -38.2106, 74.1959, 0.55", "34.5197, -44.1846, 77.303, 0.55", "38.6463, -49.9431, 81.0582, 0.55", "44.3892, -54.4086, 84.4301, 0.55", "49.306, -59.1093, 88.6751, 0.55", "54.5827, -63.3032, 93.0177, 0.55", "59.9106, -66.8981, 97.8115, 0.55", "65.9815, -70.1805, 101.893, 0.55", "72.9384, -72.6123, 105.052, 0.55", "79.4253, -74.979, 109.128, 0.55", "85.4519, -78.4065, 113.155, 0.55", "91.2248, -82.6839, 116.715, 0.55", "96.9545, -86.0715, 121.185, 0.55", "102.708, -89.9142, 125.239, 0.55", "108.836, -94.2476, 128.06, 0.55", "114.882, -98.8937, 130.538, 0.55", "120.269, -104.512, 132.462, 0.55", "125.249, -110.368, 134.741, 0.55", "129.242, -116.596, 137.834, 0.55", "132.859, -123.113, 140.791, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "22.7647, -24.8164, 69.5081, 0.55", "23.4503, -33.7714, 73.676, 0.55", "24.597, -42.6156, 77.9771, 0.55", "25.5668, -51.2864, 82.6581, 0.55", "25.9539, -60.7786, 85.4478, 0.55", "25.4426, -70.2668, 88.2313, 0.55", "26.2227, -79.6653, 91.2467, 0.55", "25.4443, -89.0315, 94.3618, 0.55", "24.1154, -97.9299, 98.4954, 0.55", "20.84, -106.411, 102.417, 0.55", "16.5269, -114.465, 106.232, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-17.1966, 67.9158, 43.0564, 0.55", "-18.5873, 68.7319, 44.5643, 0.55", "-19.8155, 69.2692, 45.9882, 0.55", "-20.8142, 69.5284, 47.0279, 0.55", "-22.6881, 69.7167, 48.6944, 0.55", "-25.1724, 69.6239, 50.5942, 0.28", "-25.9479, 69.525, 51.0999, 0.28", "-27.7544, 69.0817, 52.1177, 0.55", "-30.1497, 68.1144, 53.2761, 0.28", "-31.6235, 67.2922, 53.871, 0.55", "-32.8041, 66.4472, 54.1209, 0.28", "-33.9668, 65.553, 54.105, 0.55", "-41.426, 64.1386, 61.5443, 0.55", "-47.814, 61.9573, 69.7552, 0.55", "-55.0042, 61.4499, 77.5672, 0.55", "-62.8822, 61.3614, 84.7026, 0.55", "-71.6456, 60.8591, 90.6971, 0.55", "-80.8493, 60.4945, 96.002, 0.55", "-90.0056, 58.4046, 100.98, 0.55", "-98.3529, 58.4037, 107.561, 0.55", "-107.18, 59.3817, 113.401, 0.55", "-116.769, 60.4884, 117.852, 0.55", "-126.984, 62.2365, 120.212, 0.55", "-137.36, 64.5343, 120.413, 0.55", "-147.778, 66.293, 119.243, 0.55", "-157.925, 69.3823, 118.55, 0.55", "-167.455, 73.4083, 116.113, 0.55", "-176.86, 76.6372, 112.358, 0.55", "-186.889, 79.455, 110.243, 0.55", "-196.768, 80.7692, 106.545, 0.55", "-206.892, 81.6009, 103.418, 0.55", "-217.23, 81.1096, 100.994, 0.55", "-227.665, 82.263, 99.3346, 0.55", "-238.117, 81.6885, 97.4864, 0.55", "-248.522, 80.6347, 95.5867, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-17.1966, 67.9158, 43.0564, 0.83", "-18.3779, 70.7986, 43.2345, 0.83", "-19.231, 72.7837, 43.7068, 0.83", "-20.0216, 74.5909, 44.1994, 0.83", "-21.0765, 77.2561, 44.2109, 0.83", "-21.9784, 79.8634, 43.6848, 1.11", "-23.1534, 83.4827, 42.6751, 0.83", "-24.3776, 87.3431, 41.3017, 1.11", "-25.2622, 90.3524, 39.9229, 0.83", "-28.0069, 100.762, 33.6783, 1.11", "-28.5879, 103.551, 31.354, 1.11", "-28.8375, 105.209, 29.4544, 0.55", "-30.6743, 114.848, 27.1956, 0.55", "-30.793, 124.493, 24.3072, 0.55", "-31.7488, 134.046, 21.2718, 0.55", "-33.5811, 143.857, 19.9423, 0.55", "-34.5259, 153.555, 17.4087, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-22.41, 4.50596, -119.7, 0.55", "-22.579, 4.71333, -120.543, 0.55", "-22.8689, 4.96212, -121.735, 1.11", "-25.3937, 6.35572, -130.212, 0.28", "-25.4798, 6.38124, -130.456, 0.55", "-26.3207, 6.49727, -132.493, 0.28", "-26.8749, 6.47662, -133.629, 0.55", "-27.6013, 6.30485, -134.842, 0.28", "-28.5572, 5.75684, -135.936, 0.55", "-29.6489, 4.83033, -136.605, 0.28", "-30.6924, 3.80379, -137.356, 0.55", "-31.8271, 2.52521, -138.229, 0.28", "-32.5209, 1.71101, -138.809, 0.55", "-34.3318, -0.496742, -140.583, 0.28", "-34.9847, -1.34037, -141.36, 0.55", "-36.0041, -2.70055, -142.83, 0.28", "-36.5825, -3.52752, -143.874, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-22.41, 4.50596, -119.7, 0.28", "-21.2324, 4.31054, -123.119, 0.28", "-20.8844, 4.18369, -124.189, 1.11", "-18.254, 2.7205, -132.484, 0.28", "-17.9366, 2.48145, -133.555, 0.55", "-17.1962, 1.74556, -136.156, 0.28", "-16.947, 1.42102, -137.014, 0.55", "-16.5329, 0.369275, -138.703, 0.28", "-16.3561, -0.423842, -139.534, 0.55", "-16.1112, -2.9601, -140.853, 0.28", "-16.0013, -4.45513, -141.488, 0.55", "-15.851, -7.16561, -142.486, 0.28", "-15.7589, -9.19172, -143.288, 0.83", "-15.6868, -10.9979, -144.023, 0.28", "-15.6414, -12.5708, -144.678, 0.55", "-15.6108, -14.7682, -145.533, 0.28", "-15.6329, -15.8162, -146.026, 0.55", "-15.8044, -17.7943, -147.197, 0.28", "-15.8996, -18.6376, -147.86, 0.55", "-16.0573, -19.3783, -148.609, 0.28", "-16.2027, -19.8608, -149.29, 0.55", "-16.5082, -20.683, -150.744, 0.28", "-16.7997, -21.245, -151.951, 0.83", "-17.5218, -22.2838, -154.495, 0.28", "-17.81, -22.6848, -155.596, 0.55", "-18.334, -23.5791, -158.112, 0.28", "-18.4254, -23.795, -158.668, 0.55", "-18.5523, -24.3843, -160.18, 0.28", "-18.5835, -24.7684, -161.222, 0.83", "-18.6322, -25.9097, -164.353, 0.28", "-18.6015, -26.6876, -166.465, 0.28", "-18.527, -27.4322, -168.422, 0.55", "-18.2663, -29.0599, -172.841, 0.28", "-17.9943, -30.0751, -175.579, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "16.5269, -114.465, 106.232, 0.55", "11.0838, -123.885, 110.635, 0.55", "6.35642, -134.197, 113.646, 0.55", "2.00263, -144.257, 117.84, 0.55", "-1.49814, -153.921, 123.506, 0.55", "-4.43974, -163.857, 129.015, 0.55", "-8.42271, -172.69, 135.638, 0.55", "-13.9847, -180.934, 141.87, 0.55", "-18.7649, -189.109, 148.803, 0.55", "-23.9839, -196.374, 156.4, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "16.5269, -114.465, 106.232, 0.55", "19.5607, -124.364, 110.399, 0.55", "22.3104, -134.641, 113.77, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-34.5259, 153.555, 17.4087, 0.55", "-39.5665, 158.697, 10.8015, 0.55", "-44.329, 161.848, 2.87051, 0.55", "-48.7995, 163.221, -5.71059, 0.55", "-52.5193, 166.56, -14.1087, 0.55", "-56.7863, 169.712, -22.3164, 0.55", "-60.989, 173.475, -30.2966, 0.55", "-65.9738, 179.004, -36.628, 0.55", "-71.4322, 184.986, -42.0985, 0.55", "-76.7609, 190.342, -48.2967, 0.55", "-80.8894, 195.439, -55.5417, 0.55", "-84.2712, 200.848, -62.9442, 0.55", "-87.9597, 207.284, -69.3078, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-34.5259, 153.555, 17.4087, 0.55", "-33.1224, 163.23, 18.2133, 0.55", "-30.1679, 172.538, 19.131, 0.55", "-28.5248, 182.188, 18.5026, 0.55", "-25.5914, 191.499, 17.5598, 0.55", "-23.0915, 200.945, 18.4267, 0.55", "-20.0649, 210.025, 20.5722, 0.55", "-17.4349, 219.421, 21.58, 0.55", "-13.8076, 228.525, 21.1585, 0.55", "-9.22895, 237.051, 19.5631, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_30", "dend_29", "dend_0", "dend_44", "dend_31", "dend_24", "dend_1", "dend_46", "dend_45", "dend_43", "dend_32", "dend_28", "dend_25", "dend_9", "dend_2", "dend_36", "dend_33", "dend_27", "dend_26", "dend_21", "dend_10", "dend_6", "dend_3", "dend_38", "dend_37", "dend_35", "dend_34", "dend_23", "dend_22", "dend_16", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4", "dend_40", "dend_39", "dend_20", "dend_17", "dend_15", "dend_12", "dend_42", "dend_41", "dend_19", "dend_18", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_30", "dend_29", "dend_0", "dend_44", "dend_31", "dend_24", "dend_1", "dend_46", "dend_45", "dend_43", "dend_32", "dend_28", "dend_25", "dend_9", "dend_2", "dend_36", "dend_33", "dend_27", "dend_26", "dend_21", "dend_10", "dend_6", "dend_3", "dend_38", "dend_37", "dend_35", "dend_34", "dend_23", "dend_22", "dend_16", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4", "dend_40", "dend_39", "dend_20", "dend_17", "dend_15", "dend_12", "dend_42", "dend_41", "dend_19", "dend_18", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "axon_0", "axon_0", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_31", "dend_31", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_1", "dend_1", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L4_NBC_c61eec6aeb_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_44, id: dend_44, parent: dend_30
create dend_44
public dend_44
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: dend_0
create dend_24
public dend_24
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_31
create dend_43
public dend_43
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_9
create dend_21
public dend_21
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_29, dend_0, dend_44, dend_31, dend_24, dend_1, dend_46, dend_45, dend_43, dend_32, dend_28, dend_25, dend_9, dend_2, dend_36, dend_33, dend_27, dend_26, dend_21, dend_10, dend_6, dend_3, dend_38, dend_37, dend_35, dend_34, dend_23, dend_22, dend_16, dend_11, dend_8, dend_7, dend_5, dend_4, dend_40, dend_39, dend_20, dend_17, dend_15, dend_12, dend_42, dend_41, dend_19, dend_18, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_30, dend_29, dend_0, dend_44, dend_31, dend_24, dend_1, dend_46, dend_45, dend_43, dend_32, dend_28, dend_25, dend_9, dend_2, dend_36, dend_33, dend_27, dend_26, dend_21, dend_10, dend_6, dend_3, dend_38, dend_37, dend_35, dend_34, dend_23, dend_22, dend_16, dend_11, dend_8, dend_7, dend_5, dend_4, dend_40, dend_39, dend_20, dend_17, dend_15, dend_12, dend_42, dend_41, dend_19, dend_18, dend_14, dend_13]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_48
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, axon_0, axon_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_30(0), soma_0(0.45000041566367777)
    connect dend_29(0), soma_0(0.45000041566367777)
    connect dend_0(0), soma_0(0.45000041566367777)
    connect axon_0(0), soma_0(1.0)
    connect dend_44(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_24(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.49578, 9.66883, 0.467618, 3.07883 ) }
    soma_0 { pt3dadd( -1.35379, 8.66156, 0.417811, 3.68571 ) }
    soma_0 { pt3dadd( -1.21179, 7.65428, 0.368005, 4.49861 ) }
    soma_0 { pt3dadd( -1.0698, 6.64701, 0.318198, 5.02547 ) }
    soma_0 { pt3dadd( -0.927807, 5.63974, 0.268391, 5.55232 ) }
    soma_0 { pt3dadd( -0.785813, 4.63247, 0.218585, 6.08002 ) }
    soma_0 { pt3dadd( -0.643819, 3.6252, 0.168778, 6.65441 ) }
    soma_0 { pt3dadd( -0.501826, 2.61792, 0.118971, 7.239 ) }
    soma_0 { pt3dadd( -0.359832, 1.61065, 0.0691646, 7.82473 ) }
    soma_0 { pt3dadd( -0.217838, 0.603378, 0.0193579, 8.41046 ) }
    soma_0 { pt3dadd( -0.0758445, -0.403894, -0.0304487, 8.6567 ) }
    soma_0 { pt3dadd( 0.0661492, -1.41117, -0.0802554, 8.65482 ) }
    soma_0 { pt3dadd( 0.208143, -2.41844, -0.130062, 8.55954 ) }
    soma_0 { pt3dadd( 0.350137, -3.42571, -0.179869, 8.46266 ) }
    soma_0 { pt3dadd( 0.49213, -4.43298, -0.229676, 8.09049 ) }
    soma_0 { pt3dadd( 0.634124, -5.44025, -0.279482, 7.48075 ) }
    soma_0 { pt3dadd( 0.776118, -6.44753, -0.329289, 6.87101 ) }
    soma_0 { pt3dadd( 0.918112, -7.4548, -0.379096, 6.23286 ) }
    soma_0 { pt3dadd( 1.06011, -8.46207, -0.428902, 5.0468 ) }
    soma_0 { pt3dadd( 1.2021, -9.46934, -0.478709, 3.42243 ) }
    soma_0 { pt3dadd( 1.34409, -10.4766, -0.528516, 2.06215 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.94076, -11.1276, 1.79231, 1.94 ) }
    dend_30 { pt3dadd( 2.20224, -12.4257, 1.79231, 1.94 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 23/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 4.13076, -4.13764, 8.98231, 0.55 ) }
    dend_29 { pt3dadd( 5.54801, -1.92157, 8.88737, 0.55 ) }
    dend_29 { pt3dadd( 6.97471, 0.616466, 8.77637, 0.83 ) }
    dend_29 { pt3dadd( 8.98216, 4.29888, 8.41366, 0.83 ) }
    dend_29 { pt3dadd( 11.3959, 8.45321, 7.96191, 0.55 ) }
    dend_29 { pt3dadd( 12.411, 10.1126, 7.84677, 0.83 ) }
    dend_29 { pt3dadd( 14.4708, 13.4478, 7.70681, 0.28 ) }
    dend_29 { pt3dadd( 15.6904, 15.5372, 7.72944, 0.83 ) }
    dend_29 { pt3dadd( 17.837, 19.2256, 7.99237, 0.55 ) }
    dend_29 { pt3dadd( 19.7313, 22.4114, 8.67925, 0.55 ) }
    dend_29 { pt3dadd( 21.2441, 24.8722, 9.69664, 0.83 ) }
    dend_29 { pt3dadd( 21.9112, 26.024, 10.3714, 0.83 ) }
    dend_29 { pt3dadd( 23.2252, 28.6214, 12.2311, 0.55 ) }
    dend_29 { pt3dadd( 23.5909, 29.6069, 12.9926, 0.83 ) }
    dend_29 { pt3dadd( 24.3214, 32.5802, 15.2995, 0.28 ) }
    dend_29 { pt3dadd( 24.5673, 34.383, 16.5686, 0.83 ) }
    dend_29 { pt3dadd( 24.8594, 38.5717, 19.1045, 0.28 ) }
    dend_29 { pt3dadd( 24.8957, 40.9919, 20.4154, 0.55 ) }
    dend_29 { pt3dadd( 24.6423, 44.7934, 22.2273, 0.28 ) }
    dend_29 { pt3dadd( 24.3508, 46.8542, 23.1572, 0.83 ) }
    dend_29 { pt3dadd( 23.8313, 48.9338, 24.0105, 0.55 ) }
    dend_29 { pt3dadd( 22.9418, 51.4631, 25.0646, 0.55 ) }
    dend_29 { pt3dadd( 22.3518, 52.9611, 25.2508, 1.11 ) }
    dend_29 { pt3dadd( 21.2443, 56.0306, 24.8021, 0.55 ) }
    dend_29 { pt3dadd( 21.0247, 56.7579, 24.5557, 0.55 ) }
    dend_29 { pt3dadd( 19.9461, 61.0647, 23.0885, 0.83 ) }
    dend_29 { pt3dadd( 18.9983, 66.4596, 21.0028, 0.28 ) }
    dend_29 { pt3dadd( 17.3709, 81.5542, 14.9863, 0.83 ) }
    dend_29 { pt3dadd( 17.3041, 83.5064, 14.2102, 0.28 ) }
    dend_29 { pt3dadd( 17.3586, 86.0306, 13.0325, 0.55 ) }
    dend_29 { pt3dadd( 17.7502, 91.3892, 10.2609, 0.28 ) }
    dend_29 { pt3dadd( 18.2126, 94.1094, 8.41819, 0.83 ) }
    dend_29 { pt3dadd( 18.6638, 95.6999, 7.0496, 0.28 ) }
    dend_29 { pt3dadd( 18.9137, 96.9719, 7.8625, 0.83 ) }
    dend_29 { pt3dadd( 22.1044, 109.603, 7.39655, 0.83 ) }
    dend_29 { pt3dadd( 24.7408, 122.3, 6.07536, 0.83 ) }
    dend_29 { pt3dadd( 26.4444, 134.913, 3.25767, 0.83 ) }
    dend_29 { pt3dadd( 29.7419, 147.458, 1.94395, 0.83 ) }
    dend_29 { pt3dadd( 31.349, 160.326, 0.61732, 0.83 ) }
    dend_29 { pt3dadd( 34.4153, 172.736, -1.93037, 0.83 ) }
    dend_29 { pt3dadd( 37.8415, 184.674, -5.88968, 0.83 ) }
    dend_29 { pt3dadd( 40.0748, 196.454, -11.0105, 0.83 ) }
    dend_29 { pt3dadd( 43.9177, 207.462, -16.8406, 0.83 ) }
    dend_29 { pt3dadd( 48.2035, 219.1, -20.8543, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 67/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.13924, 10.2624, 3.27231, 2.49 ) }
    dend_0 { pt3dadd( -1.13924, 12.5764, 3.27231, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 69/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.34409, -10.4766, -0.528516, 0.83 ) }
    axon_0 { pt3dadd( 3.43791, -25.3297, -0.528516, 0.83 ) }
    axon_0 { pt3dadd( 5.53174, -40.1829, -0.528516, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_30 (entry count 72/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 2.20224, -12.4257, 1.79231, 0.28 ) }
    dend_44 { pt3dadd( 2.94893, -15.0494, 3.82401, 0.28 ) }
    dend_44 { pt3dadd( 3.2773, -16.2033, 4.71748, 0.55 ) }
    dend_44 { pt3dadd( 4.39349, -20.1254, 7.75456, 0.28 ) }
    dend_44 { pt3dadd( 5.4544, -23.8533, 10.6412, 0.28 ) }
    dend_44 { pt3dadd( 6.10966, -26.1557, 12.4242, 0.28 ) }
    dend_44 { pt3dadd( 7.72897, -34.0543, 17.5025, 0.28 ) }
    dend_44 { pt3dadd( 9.21096, -40.6099, 24.2572, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 80/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 2.20224, -12.4257, 1.79231, 1.66 ) }
    dend_31 { pt3dadd( 2.46102, -14.1446, -0.239533, 1.66 ) }
    dend_31 { pt3dadd( 2.79487, -16.3622, -2.86077, 1.94 ) }
    // Section: dend_24, id: dend_24, parent: dend_0 (entry count 83/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.13924, 12.5764, 3.27231, 0.83 ) }
    dend_24 { pt3dadd( 0.667546, 17.4978, 2.4567, 0.83 ) }
    dend_24 { pt3dadd( 1.78415, 20.3982, 1.52032, 0.55 ) }
    dend_24 { pt3dadd( 2.91289, 23.2739, 0.349976, 0.83 ) }
    dend_24 { pt3dadd( 4.75701, 27.8783, -1.71108, 0.83 ) }
    dend_24 { pt3dadd( 5.68358, 30.195, -2.72172, 1.11 ) }
    dend_24 { pt3dadd( 8.08752, 36.2058, -5.34377, 1.11 ) }
    dend_24 { pt3dadd( 10.5429, 42.3052, -8.29652, 0.55 ) }
    dend_24 { pt3dadd( 12.881, 47.9482, -11.2542, 1.11 ) }
    dend_24 { pt3dadd( 15.2972, 53.6264, -14.3334, 1.11 ) }
    dend_24 { pt3dadd( 17.0348, 57.7364, -16.4919, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 94/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.13924, 12.5764, 3.27231, 1.11 ) }
    dend_1 { pt3dadd( -4.24888, 18.6596, 6.39138, 1.11 ) }
    dend_1 { pt3dadd( -5.73094, 21.5588, 7.87794, 2.22 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 97/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.53174, -40.1829, -0.528516, 0.28 ) }
    axon_1 { pt3dadd( 7.62556, -55.036, -0.528516, 0.28 ) }
    axon_1 { pt3dadd( 9.71939, -69.8892, -0.528516, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 0/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 9.21096, -40.6099, 24.2572, 0.28 ) }
    dend_46 { pt3dadd( 9.29866, -49.0051, 31.7111, 0.28 ) }
    dend_46 { pt3dadd( 7.62069, -58.058, 38.1356, 0.28 ) }
    dend_46 { pt3dadd( 4.26708, -67.6199, 42.97, 0.28 ) }
    dend_46 { pt3dadd( 1.90078, -77.0506, 48.5833, 0.28 ) }
    dend_46 { pt3dadd( -2.7752, -85.1301, 54.8206, 0.28 ) }
    dend_46 { pt3dadd( -6.7008, -93.7644, 60.8278, 0.28 ) }
    dend_46 { pt3dadd( -9.54971, -102.007, 67.8973, 0.28 ) }
    dend_46 { pt3dadd( -11.5443, -111.415, 73.69, 0.28 ) }
    dend_46 { pt3dadd( -12.9235, -120.537, 80.0883, 0.28 ) }
    dend_46 { pt3dadd( -15.673, -129.537, 86.2117, 0.28 ) }
    dend_46 { pt3dadd( -17.7542, -138.63, 92.4602, 0.28 ) }
    dend_46 { pt3dadd( -19.1284, -148.643, 97.3491, 0.28 ) }
    dend_46 { pt3dadd( -22.0668, -158.964, 100.649, 0.28 ) }
    dend_46 { pt3dadd( -23.5951, -169.785, 103.223, 0.28 ) }
    dend_46 { pt3dadd( -25.245, -180.738, 105.055, 0.28 ) }
    dend_46 { pt3dadd( -28.4324, -190.882, 108.657, 0.28 ) }
    dend_46 { pt3dadd( -31.3725, -200.106, 114.341, 0.28 ) }
    dend_46 { pt3dadd( -35.2833, -209.992, 117.952, 0.28 ) }
    dend_46 { pt3dadd( -41.1262, -219.202, 120.61, 0.28 ) }
    dend_46 { pt3dadd( -45.8348, -229.076, 123.138, 0.28 ) }
    dend_46 { pt3dadd( -51.1838, -237.988, 127.381, 0.28 ) }
    dend_46 { pt3dadd( -57.1468, -246.298, 132.012, 0.28 ) }
    dend_46 { pt3dadd( -64.4861, -252.087, 138.23, 0.28 ) }
    dend_46 { pt3dadd( -72.041, -257.096, 144.854, 0.28 ) }
    dend_46 { pt3dadd( -80.1629, -260.839, 151.642, 0.28 ) }
    dend_46 { pt3dadd( -86.2854, -266.189, 159.383, 0.28 ) }
    dend_46 { pt3dadd( -93.722, -272.021, 165.444, 0.28 ) }
    dend_46 { pt3dadd( -102.757, -276.404, 170.465, 0.28 ) }
    dend_46 { pt3dadd( -112.164, -278.315, 176.287, 0.28 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 30/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 9.21096, -40.6099, 24.2572, 0.28 ) }
    dend_45 { pt3dadd( 13.0638, -49.8164, 31.0979, 0.28 ) }
    dend_45 { pt3dadd( 17.9378, -58.6013, 37.8411, 0.28 ) }
    dend_45 { pt3dadd( 21.9318, -67.6199, 44.8492, 0.28 ) }
    dend_45 { pt3dadd( 26.5212, -77.0009, 50.9595, 0.28 ) }
    dend_45 { pt3dadd( 30.5662, -85.3194, 58.7595, 0.28 ) }
    dend_45 { pt3dadd( 36.0265, -93.3307, 65.9987, 0.28 ) }
    dend_45 { pt3dadd( 40.3908, -101.009, 74.2685, 0.28 ) }
    dend_45 { pt3dadd( 44.4862, -109.584, 81.7579, 0.28 ) }
    dend_45 { pt3dadd( 46.916, -119.585, 88.1198, 0.28 ) }
    dend_45 { pt3dadd( 51.2272, -128.516, 95.0522, 0.28 ) }
    dend_45 { pt3dadd( 56.6072, -137.809, 100.63, 0.28 ) }
    dend_45 { pt3dadd( 62.9284, -145.514, 107.491, 0.28 ) }
    dend_45 { pt3dadd( 69.3291, -152.486, 115.03, 0.28 ) }
    dend_45 { pt3dadd( 76.7793, -159.68, 121.284, 0.28 ) }
    dend_45 { pt3dadd( 83.4508, -165.928, 129.212, 0.28 ) }
    dend_45 { pt3dadd( 91.0848, -173.23, 135.113, 0.28 ) }
    dend_45 { pt3dadd( 98.3591, -181.171, 140.628, 0.28 ) }
    dend_45 { pt3dadd( 106.227, -188.984, 145.473, 0.28 ) }
    dend_45 { pt3dadd( 112.675, -197.264, 151.495, 0.28 ) }
    dend_45 { pt3dadd( 118.051, -206.691, 156.845, 0.28 ) }
    dend_45 { pt3dadd( 123.374, -216.615, 161.269, 0.28 ) }
    dend_45 { pt3dadd( 130.372, -226.147, 163.834, 0.28 ) }
    dend_45 { pt3dadd( 137.837, -234.811, 167.784, 0.28 ) }
    dend_45 { pt3dadd( 145.426, -243.721, 170.852, 0.28 ) }
    dend_45 { pt3dadd( 154.028, -251.941, 173.056, 0.28 ) }
    dend_45 { pt3dadd( 162.529, -260.549, 172.87, 0.28 ) }
    dend_45 { pt3dadd( 172.175, -267.835, 173.392, 0.28 ) }
    dend_45 { pt3dadd( 181.911, -274.863, 174.883, 0.28 ) }
    // Section: dend_43, id: dend_43, parent: dend_31 (entry count 59/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 2.79487, -16.3622, -2.86077, 0.55 ) }
    dend_43 { pt3dadd( 3.43121, -17.7856, -4.50178, 0.55 ) }
    dend_43 { pt3dadd( 4.14949, -19.2595, -6.17278, 0.55 ) }
    dend_43 { pt3dadd( 5.42535, -21.4086, -8.95529, 0.28 ) }
    dend_43 { pt3dadd( 6.02922, -22.3476, -10.2248, 0.83 ) }
    dend_43 { pt3dadd( 7.73971, -24.7838, -13.5873, 0.55 ) }
    dend_43 { pt3dadd( 9.0729, -26.5422, -16.0648, 0.55 ) }
    dend_43 { pt3dadd( 9.70806, -27.2406, -17.1991, 0.55 ) }
    dend_43 { pt3dadd( 12.0094, -29.3586, -20.9161, 0.28 ) }
    dend_43 { pt3dadd( 12.2896, -29.5764, -21.312, 0.28 ) }
    dend_43 { pt3dadd( 12.9717, -30.0624, -22.2, 0.28 ) }
    dend_43 { pt3dadd( 13.6384, -30.5486, -22.9099, 0.83 ) }
    dend_43 { pt3dadd( 15.65, -32.0489, -24.7524, 0.83 ) }
    dend_43 { pt3dadd( 17.2888, -33.3282, -26.0998, 0.55 ) }
    dend_43 { pt3dadd( 18.3933, -34.3045, -26.9246, 0.83 ) }
    dend_43 { pt3dadd( 20.3471, -36.1587, -28.3737, 0.55 ) }
    dend_43 { pt3dadd( 22.3799, -38.2434, -29.9476, 0.83 ) }
    dend_43 { pt3dadd( 24.1388, -40.0671, -31.2243, 0.55 ) }
    dend_43 { pt3dadd( 24.7203, -40.6778, -31.6084, 0.55 ) }
    dend_43 { pt3dadd( 26.3867, -42.3195, -32.7003, 0.83 ) }
    dend_43 { pt3dadd( 27.3173, -43.2108, -33.4521, 0.83 ) }
    dend_43 { pt3dadd( 29.1594, -44.9598, -35.1925, 0.55 ) }
    dend_43 { pt3dadd( 29.983, -45.6949, -36.0959, 0.55 ) }
    dend_43 { pt3dadd( 30.8053, -46.405, -36.9962, 0.28 ) }
    dend_43 { pt3dadd( 31.9572, -47.3313, -38.343, 0.83 ) }
    dend_43 { pt3dadd( 34.5845, -49.2516, -41.7019, 0.55 ) }
    dend_43 { pt3dadd( 36.4141, -50.5044, -44.1489, 0.28 ) }
    dend_43 { pt3dadd( 37.6097, -51.2691, -45.8012, 0.55 ) }
    dend_43 { pt3dadd( 38.1965, -51.6248, -46.5959, 0.28 ) }
    dend_43 { pt3dadd( 40.0569, -52.6416, -48.979, 0.83 ) }
    dend_43 { pt3dadd( 43.1418, -54.1444, -52.4072, 0.28 ) }
    dend_43 { pt3dadd( 44.218, -54.5876, -53.451, 0.55 ) }
    dend_43 { pt3dadd( 47.0506, -55.6575, -55.9271, 0.28 ) }
    dend_43 { pt3dadd( 48.6073, -56.2978, -57.1862, 0.55 ) }
    dend_43 { pt3dadd( 51.2784, -57.4284, -59.2024, 0.55 ) }
    dend_43 { pt3dadd( 53.3777, -58.3898, -60.74, 0.83 ) }
    dend_43 { pt3dadd( 57.6262, -60.4897, -63.824, 0.28 ) }
    dend_43 { pt3dadd( 58.7204, -61.0672, -64.6599, 0.55 ) }
    dend_43 { pt3dadd( 61.8102, -62.7773, -67.3534, 0.28 ) }
    dend_43 { pt3dadd( 62.7373, -63.3146, -68.2793, 0.83 ) }
    dend_43 { pt3dadd( 65.1258, -64.6907, -70.9966, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_43 { pt3dadd( 66.0133, -65.1647, -72.0982, 0.55 ) }
    dend_43 { pt3dadd( 66.3439, -65.2952, -72.4775, 0.55 ) }
    dend_43 { pt3dadd( 69.9783, -66.2806, -76.4658, 0.28 ) }
    dend_43 { pt3dadd( 70.5749, -66.3822, -77.0466, 0.55 ) }
    dend_43 { pt3dadd( 72.9396, -66.6678, -79.0325, 0.28 ) }
    dend_43 { pt3dadd( 74.6745, -66.8122, -80.2408, 0.83 ) }
    dend_43 { pt3dadd( 78.8718, -67.2204, -82.9145, 0.28 ) }
    dend_43 { pt3dadd( 79.9151, -67.3563, -83.4623, 0.55 ) }
    dend_43 { pt3dadd( 81.5406, -67.6534, -84.0768, 0.28 ) }
    dend_43 { pt3dadd( 82.9839, -68.0091, -84.5596, 0.83 ) }
    dend_43 { pt3dadd( 83.4639, -68.1731, -84.7042, 0.83 ) }
    dend_43 { pt3dadd( 86.2808, -69.3055, -85.613, 0.28 ) }
    dend_43 { pt3dadd( 87.5766, -69.8957, -86.0208, 0.55 ) }
    dend_43 { pt3dadd( 88.2337, -70.1899, -86.2443, 0.28 ) }
    dend_43 { pt3dadd( 89.87, -70.9123, -86.8186, 0.83 ) }
    dend_43 { pt3dadd( 92.9448, -72.2435, -87.7656, 0.55 ) }
    dend_43 { pt3dadd( 94.0076, -72.6537, -88.0379, 0.83 ) }
    dend_43 { pt3dadd( 95.7354, -73.2223, -88.3014, 0.28 ) }
    dend_43 { pt3dadd( 96.4361, -73.4271, -88.4086, 0.55 ) }
    dend_43 { pt3dadd( 97.2458, -73.6373, -88.5159, 0.28 ) }
    dend_43 { pt3dadd( 98.5928, -73.9895, -88.7853, 0.55 ) }
    dend_43 { pt3dadd( 99.29, -74.1966, -88.9269, 0.28 ) }
    dend_43 { pt3dadd( 100.604, -74.6435, -89.3798, 0.55 ) }
    dend_43 { pt3dadd( 102.611, -75.3571, -90.2252, 0.28 ) }
    dend_43 { pt3dadd( 103.318, -75.6339, -90.6112, 0.55 ) }
    dend_43 { pt3dadd( 106.141, -76.8334, -92.3213, 0.28 ) }
    dend_43 { pt3dadd( 107.543, -77.4788, -93.2292, 0.83 ) }
    dend_43 { pt3dadd( 109.752, -78.5957, -94.693, 0.28 ) }
    dend_43 { pt3dadd( 110.1, -78.7877, -94.9315, 0.55 ) }
    dend_43 { pt3dadd( 112.814, -80.4036, -96.772, 0.28 ) }
    dend_43 { pt3dadd( 113.9, -81.1202, -97.5024, 0.28 ) }
    dend_43 { pt3dadd( 114.256, -81.3888, -97.7622, 0.55 ) }
    dend_43 { pt3dadd( 114.925, -81.9999, -98.2865, 0.28 ) }
    dend_43 { pt3dadd( 115.542, -82.6747, -98.7822, 0.55 ) }
    dend_43 { pt3dadd( 116.788, -84.2277, -99.8211, 0.28 ) }
    dend_43 { pt3dadd( 117.926, -85.807, -100.749, 0.55 ) }
    dend_43 { pt3dadd( 119.672, -88.2919, -102.156, 0.28 ) }
    dend_43 { pt3dadd( 120.828, -89.931, -103.175, 0.83 ) }
    dend_43 { pt3dadd( 122.041, -91.6142, -104.278, 0.28 ) }
    dend_43 { pt3dadd( 122.708, -92.5451, -104.787, 0.55 ) }
    dend_43 { pt3dadd( 123.101, -93.0947, -105.065, 0.28 ) }
    dend_43 { pt3dadd( 123.771, -93.9513, -105.491, 0.83 ) }
    dend_43 { pt3dadd( 126.625, -97.167, -106.905, 0.28 ) }
    dend_43 { pt3dadd( 127.339, -97.756, -107.475, 0.55 ) }
    dend_43 { pt3dadd( 129.465, -99.142, -109.875, 0.28 ) }
    dend_43 { pt3dadd( 130.906, -99.9945, -111.965, 0.55 ) }
    dend_43 { pt3dadd( 131.689, -100.449, -113.332, 0.28 ) }
    dend_43 { pt3dadd( 132.068, -100.659, -114.06, 0.55 ) }
    dend_43 { pt3dadd( 135.928, -102.727, -121.79, 0.55 ) }
    dend_43 { pt3dadd( 137.584, -103.584, -125.252, 0.28 ) }
    dend_43 { pt3dadd( 138.633, -104.132, -127.558, 0.83 ) }
    dend_43 { pt3dadd( 141.136, -105.608, -132.987, 0.28 ) }
    dend_43 { pt3dadd( 141.315, -105.731, -133.355, 0.55 ) }
    dend_43 { pt3dadd( 142.113, -106.339, -134.733, 0.28 ) }
    dend_43 { pt3dadd( 143.729, -107.62, -136.649, 0.55 ) }
    dend_43 { pt3dadd( 144.934, -108.525, -137.67, 0.28 ) }
    dend_43 { pt3dadd( 146.02, -109.308, -138.46, 0.55 ) }
    dend_43 { pt3dadd( 148.471, -111.043, -140.012, 0.28 ) }
    dend_43 { pt3dadd( 149.638, -111.91, -140.733, 0.55 ) }
    dend_43 { pt3dadd( 152.647, -114.193, -142.763, 0.28 ) }
    dend_43 { pt3dadd( 154.42, -115.604, -143.905, 0.55 ) }
    dend_43 { pt3dadd( 156.993, -117.582, -145.539, 0.28 ) }
    dend_43 { pt3dadd( 157.759, -118.188, -146.011, 0.55 ) }
    dend_43 { pt3dadd( 159.413, -119.471, -147.023, 0.28 ) }
    dend_43 { pt3dadd( 162.055, -121.484, -148.747, 0.28 ) }
    dend_43 { pt3dadd( 162.658, -121.954, -149.09, 0.28 ) }
    dend_43 { pt3dadd( 163.534, -122.666, -149.637, 0.55 ) }
    dend_43 { pt3dadd( 165.046, -123.997, -150.576, 0.28 ) }
    dend_43 { pt3dadd( 166.901, -125.64, -151.848, 0.55 ) }
    dend_43 { pt3dadd( 169.96, -128.292, -154.098, 0.28 ) }
    dend_43 { pt3dadd( 170.973, -129.242, -154.798, 0.55 ) }
    dend_43 { pt3dadd( 171.954, -130.219, -155.589, 0.28 ) }
    dend_43 { pt3dadd( 172.908, -131.27, -156.533, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 73/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 2.79487, -16.3622, -2.86077, 1.66 ) }
    dend_32 { pt3dadd( 2.69381, -18.9726, -4.31563, 1.66 ) }
    dend_32 { pt3dadd( 2.55166, -22.6445, -6.36212, 1.94 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 76/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 17.0348, 57.7364, -16.4919, 0.55 ) }
    dend_28 { pt3dadd( 15.9152, 59.7973, -16.3377, 0.55 ) }
    dend_28 { pt3dadd( 15.1513, 61.0383, -16.203, 0.55 ) }
    dend_28 { pt3dadd( 14.1663, 62.552, -16.0314, 0.28 ) }
    dend_28 { pt3dadd( 13.5191, 63.5697, -16.0339, 0.55 ) }
    dend_28 { pt3dadd( 12.7916, 64.7556, -16.1141, 0.28 ) }
    dend_28 { pt3dadd( 11.8996, 66.278, -16.2595, 0.55 ) }
    dend_28 { pt3dadd( 11.1496, 67.6245, -16.4428, 0.28 ) }
    dend_28 { pt3dadd( 10.6733, 68.5941, -16.5012, 0.83 ) }
    dend_28 { pt3dadd( 9.63704, 71.2554, -16.741, 0.28 ) }
    dend_28 { pt3dadd( 9.31882, 72.1904, -16.7519, 0.83 ) }
    dend_28 { pt3dadd( 8.91555, 73.3952, -16.723, 0.55 ) }
    dend_28 { pt3dadd( 8.53896, 74.5334, -16.625, 0.83 ) }
    dend_28 { pt3dadd( 7.3028, 77.9774, -16.0943, 0.55 ) }
    dend_28 { pt3dadd( 6.36016, 80.3684, -15.5146, 0.83 ) }
    dend_28 { pt3dadd( 5.05819, 83.5349, -14.5303, 0.55 ) }
    dend_28 { pt3dadd( 4.47889, 84.8953, -14.0909, 0.55 ) }
    dend_28 { pt3dadd( 3.43918, 87.183, -13.2542, 0.83 ) }
    dend_28 { pt3dadd( 1.90029, 90.388, -12.0303, 0.55 ) }
    dend_28 { pt3dadd( 1.18012, 91.8238, -11.4215, 0.83 ) }
    dend_28 { pt3dadd( 0.385675, 93.4431, -10.6353, 0.28 ) }
    dend_28 { pt3dadd( 0.189974, 93.8859, -10.4028, 0.55 ) }
    dend_28 { pt3dadd( -1.10819, 97.1665, -8.68636, 0.28 ) }
    dend_28 { pt3dadd( -1.65198, 98.7428, -7.91756, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_28 { pt3dadd( -2.37137, 101.206, -6.89812, 0.28 ) }
    dend_28 { pt3dadd( -2.76033, 102.752, -6.34218, 0.55 ) }
    dend_28 { pt3dadd( -3.61702, 106.502, -5.19691, 0.28 ) }
    dend_28 { pt3dadd( -4.01918, 108.676, -4.66446, 0.55 ) }
    dend_28 { pt3dadd( -4.30728, 110.812, -4.29925, 0.28 ) }
    dend_28 { pt3dadd( -4.54283, 113.009, -4.00244, 0.28 ) }
    dend_28 { pt3dadd( -4.60496, 113.769, -3.97175, 0.55 ) }
    dend_28 { pt3dadd( -4.72986, 115.379, -3.99095, 0.55 ) }
    dend_28 { pt3dadd( -4.76489, 116.046, -4.10077, 0.55 ) }
    dend_28 { pt3dadd( -6.59838, 124.451, -2.79556, 0.55 ) }
    dend_28 { pt3dadd( -7.64702, 133.068, -2.17553, 0.55 ) }
    dend_28 { pt3dadd( -9.53791, 141.452, -3.52732, 0.55 ) }
    dend_28 { pt3dadd( -10.2519, 149.77, -5.98419, 0.55 ) }
    dend_28 { pt3dadd( -10.1437, 157.988, -8.84541, 0.55 ) }
    dend_28 { pt3dadd( -9.19872, 166.079, -11.9023, 0.55 ) }
    dend_28 { pt3dadd( -9.56346, 173.678, -16.1271, 0.55 ) }
    dend_28 { pt3dadd( -9.14057, 181.01, -20.7932, 0.55 ) }
    dend_28 { pt3dadd( -10.3061, 187.424, -26.5578, 0.55 ) }
    dend_28 { pt3dadd( -10.4953, 193.268, -33.0024, 0.55 ) }
    dend_28 { pt3dadd( -10.5024, 199.37, -39.2048, 0.55 ) }
    dend_28 { pt3dadd( -11.085, 205.915, -44.9106, 0.55 ) }
    dend_28 { pt3dadd( -11.4095, 212.76, -50.2746, 0.55 ) }
    dend_28 { pt3dadd( -12.0721, 219.161, -56.1304, 0.55 ) }
    dend_28 { pt3dadd( -13.413, 225.363, -62.0857, 0.55 ) }
    dend_28 { pt3dadd( -15.1578, 231.518, -67.9838, 0.55 ) }
    dend_28 { pt3dadd( -15.9958, 238.262, -73.419, 0.55 ) }
    dend_28 { pt3dadd( -18.8314, 244.576, -78.6924, 0.55 ) }
    dend_28 { pt3dadd( -20.3912, 250.566, -84.8092, 0.55 ) }
    dend_28 { pt3dadd( -21.9323, 256.135, -91.3142, 0.55 ) }
    dend_28 { pt3dadd( -22.701, 261.074, -98.438, 0.55 ) }
    dend_28 { pt3dadd( -23.6023, 265.124, -106.087, 0.55 ) }
    dend_28 { pt3dadd( -24.4938, 268.242, -114.161, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 32/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 17.0348, 57.7364, -16.4919, 0.83 ) }
    dend_25 { pt3dadd( 18.6849, 60.4589, -16.4299, 0.83 ) }
    dend_25 { pt3dadd( 19.8148, 62.2391, -16.3407, 0.55 ) }
    dend_25 { pt3dadd( 20.5625, 63.2906, -16.2552, 0.55 ) }
    dend_25 { pt3dadd( 21.2627, 64.2611, -16.1626, 0.55 ) }
    dend_25 { pt3dadd( 22.2358, 65.6033, -16.0195, 0.55 ) }
    dend_25 { pt3dadd( 23.6943, 67.6043, -15.7543, 0.83 ) }
    dend_25 { pt3dadd( 24.6107, 68.8216, -15.5292, 0.83 ) }
    dend_25 { pt3dadd( 25.9069, 70.4296, -15.2042, 0.83 ) }
    dend_25 { pt3dadd( 27.1766, 71.9651, -14.8523, 0.83 ) }
    dend_25 { pt3dadd( 29.0364, 74.1314, -14.3963, 0.55 ) }
    dend_25 { pt3dadd( 30.752, 76.0995, -14.0636, 0.83 ) }
    dend_25 { pt3dadd( 32.4519, 77.9905, -13.7918, 0.83 ) }
    dend_25 { pt3dadd( 33.2051, 78.8552, -13.6933, 0.83 ) }
    dend_25 { pt3dadd( 35.1527, 81.0834, -13.474, 0.83 ) }
    dend_25 { pt3dadd( 37.3331, 83.5561, -13.2651, 0.83 ) }
    dend_25 { pt3dadd( 39.0293, 85.467, -13.1373, 0.55 ) }
    dend_25 { pt3dadd( 40.7154, 87.4041, -13.038, 0.55 ) }
    dend_25 { pt3dadd( 42.1574, 89.1853, -12.9183, 0.83 ) }
    dend_25 { pt3dadd( 43.2829, 90.7356, -12.8532, 0.55 ) }
    dend_25 { pt3dadd( 44.104, 91.9974, -12.8656, 0.55 ) }
    dend_25 { pt3dadd( 45.0237, 93.6633, -12.9335, 0.83 ) }
    dend_25 { pt3dadd( 46.142, 95.9913, -13.2101, 0.83 ) }
    dend_25 { pt3dadd( 46.8386, 97.7269, -13.5804, 0.83 ) }
    dend_25 { pt3dadd( 47.7137, 100.329, -14.3862, 0.55 ) }
    dend_25 { pt3dadd( 48.2576, 102.152, -15.1793, 0.83 ) }
    dend_25 { pt3dadd( 48.5675, 103.146, -15.8101, 0.83 ) }
    dend_25 { pt3dadd( 48.9275, 104.296, -16.7106, 0.83 ) }
    dend_25 { pt3dadd( 49.2738, 105.259, -17.5912, 0.83 ) }
    dend_25 { pt3dadd( 49.7944, 106.34, -18.7639, 0.55 ) }
    dend_25 { pt3dadd( 50.7018, 107.937, -20.5467, 0.83 ) }
    dend_25 { pt3dadd( 52.4284, 110.683, -23.6298, 0.28 ) }
    dend_25 { pt3dadd( 53.1149, 111.742, -24.7893, 0.83 ) }
    dend_25 { pt3dadd( 54.0864, 113.24, -26.3663, 0.83 ) }
    dend_25 { pt3dadd( 56.1121, 116.41, -29.5537, 0.55 ) }
    dend_25 { pt3dadd( 56.8213, 117.589, -30.5828, 0.83 ) }
    dend_25 { pt3dadd( 58.2083, 120.301, -32.3736, 0.28 ) }
    dend_25 { pt3dadd( 58.8394, 121.73, -33.0586, 0.28 ) }
    dend_25 { pt3dadd( 59.1832, 122.673, -33.4009, 0.55 ) }
    dend_25 { pt3dadd( 59.4013, 123.586, -33.63, 0.28 ) }
    dend_25 { pt3dadd( 59.6365, 125.686, -33.9447, 0.83 ) }
    dend_25 { pt3dadd( 59.7757, 128.564, -34.5098, 0.28 ) }
    dend_25 { pt3dadd( 59.7881, 129.995, -34.8089, 0.28 ) }
    dend_25 { pt3dadd( 59.8241, 131.044, -35.1218, 0.83 ) }
    dend_25 { pt3dadd( 60.0142, 133.82, -36.1413, 0.28 ) }
    dend_25 { pt3dadd( 60.1666, 135.379, -36.8298, 0.83 ) }
    dend_25 { pt3dadd( 60.5486, 138.004, -38.2107, 0.55 ) }
    dend_25 { pt3dadd( 60.7254, 138.801, -38.7102, 0.28 ) }
    dend_25 { pt3dadd( 61.3147, 140.691, -39.9136, 0.55 ) }
    dend_25 { pt3dadd( 61.8742, 141.975, -40.7585, 0.55 ) }
    dend_25 { pt3dadd( 62.3816, 142.771, -41.2789, 0.28 ) }
    dend_25 { pt3dadd( 62.9232, 143.396, -41.6386, 0.55 ) }
    dend_25 { pt3dadd( 64.5047, 144.904, -42.2511, 0.55 ) }
    dend_25 { pt3dadd( 65.4047, 145.682, -42.4472, 0.28 ) }
    dend_25 { pt3dadd( 66.3175, 146.441, -42.5114, 0.55 ) }
    dend_25 { pt3dadd( 67.4571, 147.421, -42.4296, 0.55 ) }
    dend_25 { pt3dadd( 69.8002, 149.616, -41.9439, 0.28 ) }
    dend_25 { pt3dadd( 70.7272, 150.57, -41.6352, 0.83 ) }
    dend_25 { pt3dadd( 72.3839, 152.464, -40.9083, 0.55 ) }
    dend_25 { pt3dadd( 73.3688, 153.71, -40.4162, 0.55 ) }
    dend_25 { pt3dadd( 75.1439, 156.294, -39.4145, 0.28 ) }
    dend_25 { pt3dadd( 76.4361, 158.499, -38.6033, 0.83 ) }
    dend_25 { pt3dadd( 77.4411, 160.801, -37.669, 0.55 ) }
    dend_25 { pt3dadd( 78.1328, 162.88, -36.7388, 0.55 ) }
    dend_25 { pt3dadd( 78.4654, 164.288, -36.1181, 1.11 ) }
    dend_25 { pt3dadd( 78.7325, 165.893, -35.4703, 1.11 ) }
    dend_25 { pt3dadd( 78.8301, 166.894, -35.1217, 1.11 ) }
    dend_25 { pt3dadd( 78.9038, 171.915, -33.5883, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_25 { pt3dadd( 78.8423, 173.092, -33.2837, 0.28 ) }
    dend_25 { pt3dadd( 78.6924, 174.98, -32.8723, 0.55 ) }
    dend_25 { pt3dadd( 78.5164, 176.697, -32.6496, 0.28 ) }
    dend_25 { pt3dadd( 78.449, 177.329, -32.6195, 0.83 ) }
    dend_25 { pt3dadd( 78.3127, 178.691, -32.7174, 0.28 ) }
    dend_25 { pt3dadd( 78.2325, 179.73, -32.9157, 0.55 ) }
    dend_25 { pt3dadd( 78.1148, 180.826, -33.0233, 0.28 ) }
    dend_25 { pt3dadd( 77.6523, 184.036, -33.0815, 0.28 ) }
    dend_25 { pt3dadd( 77.4082, 185.523, -33.0584, 0.55 ) }
    dend_25 { pt3dadd( 77.0308, 187.594, -32.9873, 0.28 ) }
    dend_25 { pt3dadd( 76.7936, 188.866, -32.9183, 0.83 ) }
    dend_25 { pt3dadd( 75.9342, 193.195, -32.6062, 0.28 ) }
    dend_25 { pt3dadd( 75.6773, 194.404, -32.4841, 0.83 ) }
    dend_25 { pt3dadd( 75.372, 195.84, -32.2701, 0.28 ) }
    dend_25 { pt3dadd( 75.1437, 196.704, -32.1048, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 15/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -5.73094, 21.5588, 7.87794, 1.11 ) }
    dend_9 { pt3dadd( -4.29853, 25.0422, 9.48907, 1.11 ) }
    dend_9 { pt3dadd( -3.1584, 27.8147, 10.7714, 0.83 ) }
    dend_9 { pt3dadd( -1.82997, 31.0452, 12.2656, 0.83 ) }
    dend_9 { pt3dadd( 0.590378, 36.931, 14.988, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 20/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.73094, 21.5588, 7.87794, 0.83 ) }
    dend_2 { pt3dadd( -6.62037, 25.3529, 7.04845, 0.83 ) }
    dend_2 { pt3dadd( -7.24269, 28.0075, 6.46807, 1.11 ) }
    dend_2 { pt3dadd( -7.76226, 30.2238, 5.98352, 1.11 ) }
    dend_2 { pt3dadd( -7.94834, 31.0176, 5.80998, 1.11 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 25/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 2.55166, -22.6445, -6.36212, 0.83 ) }
    dend_36 { pt3dadd( 2.0006, -21.3304, -8.23835, 0.83 ) }
    dend_36 { pt3dadd( 1.09739, -19.4011, -10.9327, 0.83 ) }
    dend_36 { pt3dadd( -1.54761, -14.5012, -18.3594, 1.11 ) }
    dend_36 { pt3dadd( -3.11177, -11.6036, -22.7512, 1.11 ) }
    dend_36 { pt3dadd( -5.10755, -7.90643, -28.355, 1.11 ) }
    dend_36 { pt3dadd( -6.09533, -6.07656, -31.1285, 0.55 ) }
    dend_36 { pt3dadd( -6.66511, -5.03826, -32.8101, 0.55 ) }
    dend_36 { pt3dadd( -8.31431, -2.62869, -37.1706, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 34/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 2.55166, -22.6445, -6.36212, 1.11 ) }
    dend_33 { pt3dadd( 1.36618, -27.1398, -9.4433, 1.11 ) }
    dend_33 { pt3dadd( 0.603974, -30.0301, -11.4244, 1.11 ) }
    dend_33 { pt3dadd( -0.413284, -33.8875, -14.0683, 1.11 ) }
    dend_33 { pt3dadd( -1.84511, -39.317, -17.7898, 1.11 ) }
    dend_33 { pt3dadd( -3.60898, -46.0056, -22.3743, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 75.1437, 196.704, -32.1048, 0.28 ) }
    dend_27 { pt3dadd( 73.0609, 196.385, -32.3454, 0.28 ) }
    dend_27 { pt3dadd( 71.1861, 196.096, -32.562, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 43/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 75.1437, 196.704, -32.1048, 0.55 ) }
    dend_26 { pt3dadd( 73.3509, 200.019, -30.8155, 0.55 ) }
    dend_26 { pt3dadd( 71.6659, 203.26, -29.6445, 0.55 ) }
    dend_26 { pt3dadd( 69.9519, 206.549, -28.6103, 0.28 ) }
    dend_26 { pt3dadd( 69.3271, 207.751, -28.1863, 0.55 ) }
    dend_26 { pt3dadd( 67.5993, 211.411, -26.884, 0.28 ) }
    dend_26 { pt3dadd( 67.1727, 212.437, -26.5277, 0.55 ) }
    dend_26 { pt3dadd( 66.5421, 214.307, -25.9227, 0.28 ) }
    dend_26 { pt3dadd( 66.087, 216.092, -25.3548, 0.55 ) }
    dend_26 { pt3dadd( 65.5297, 219.204, -24.5447, 0.28 ) }
    dend_26 { pt3dadd( 65.4493, 221.633, -24.4624, 0.28 ) }
    dend_26 { pt3dadd( 65.7508, 223.251, -24.9965, 0.55 ) }
    dend_26 { pt3dadd( 66.58, 225.568, -26.3476, 0.28 ) }
    dend_26 { pt3dadd( 66.58, 225.568, -26.3476, 0.55 ) }
    dend_26 { pt3dadd( 67.8172, 228.109, -28.0182, 0.28 ) }
    dend_26 { pt3dadd( 71.5986, 236.326, -33.3113, 0.28 ) }
    dend_26 { pt3dadd( 72.5623, 238.51, -34.6224, 0.55 ) }
    dend_26 { pt3dadd( 74.0717, 242.185, -36.5845, 0.28 ) }
    dend_26 { pt3dadd( 74.6689, 243.939, -37.3032, 0.55 ) }
    dend_26 { pt3dadd( 75.9802, 249.225, -38.8009, 0.28 ) }
    dend_26 { pt3dadd( 76.2625, 251.256, -39.1356, 0.55 ) }
    dend_26 { pt3dadd( 76.3636, 252.885, -39.2358, 0.28 ) }
    dend_26 { pt3dadd( 76.4277, 254.812, -39.3482, 0.55 ) }
    dend_26 { pt3dadd( 76.3742, 260.219, -39.6202, 0.28 ) }
    dend_26 { pt3dadd( 76.3137, 262.516, -39.8358, 0.55 ) }
    dend_26 { pt3dadd( 76.1822, 267.686, -40.6393, 0.28 ) }
    dend_26 { pt3dadd( 76.1139, 270.315, -41.0884, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_9 (entry count 70/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 0.590378, 36.931, 14.988, 0.83 ) }
    dend_21 { pt3dadd( 1.71944, 38.9515, 15.7443, 0.83 ) }
    dend_21 { pt3dadd( 2.98949, 41.6097, 16.6294, 0.83 ) }
    dend_21 { pt3dadd( 3.85085, 43.7391, 17.5143, 0.55 ) }
    dend_21 { pt3dadd( 4.91227, 46.6549, 19.0868, 0.83 ) }
    dend_21 { pt3dadd( 5.73107, 48.7292, 20.287, 0.83 ) }
    dend_21 { pt3dadd( 6.35857, 50.29, 21.2012, 0.83 ) }
    dend_21 { pt3dadd( 7.57639, 53.4726, 23.11, 0.83 ) }
    dend_21 { pt3dadd( 9.02667, 57.5075, 25.4952, 0.83 ) }
    dend_21 { pt3dadd( 10.2194, 61.2443, 27.6193, 0.83 ) }
    dend_21 { pt3dadd( 11.11, 64.0854, 29.3155, 0.55 ) }
    dend_21 { pt3dadd( 11.9353, 66.5792, 30.8532, 0.83 ) }
    dend_21 { pt3dadd( 12.5511, 68.3676, 31.9797, 0.83 ) }
    dend_21 { pt3dadd( 13.306, 70.4501, 33.1835, 0.83 ) }
    dend_21 { pt3dadd( 14.4649, 73.639, 34.3563, 0.83 ) }
    dend_21 { pt3dadd( 18.6771, 81.7178, 37.4297, 0.83 ) }
    dend_21 { pt3dadd( 22.6706, 89.6112, 41.1985, 0.83 ) }
    dend_21 { pt3dadd( 25.8136, 97.9778, 44.745, 0.83 ) }
    dend_21 { pt3dadd( 29.0961, 105.889, 49.115, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 89/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 0.590378, 36.931, 14.988, 0.83 ) }
    dend_10 { pt3dadd( -1.48857, 40.5181, 19.6077, 0.83 ) }
    dend_10 { pt3dadd( -2.35273, 42.1863, 21.5763, 0.83 ) }
    dend_10 { pt3dadd( -3.951, 45.2718, 25.2174, 0.83 ) }
    dend_10 { pt3dadd( -4.74286, 46.8005, 27.0214, 0.83 ) }
    dend_10 { pt3dadd( -6.76098, 50.6965, 31.6189, 1.11 ) }
    dend_10 { pt3dadd( -8.15237, 53.3826, 34.7887, 0.83 ) }
    dend_10 { pt3dadd( -9.10903, 55.2624, 36.9516, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 97/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -7.94834, 31.0176, 5.80998, 0.55 ) }
    dend_6 { pt3dadd( -8.70826, 32.4239, 6.9348, 0.55 ) }
    dend_6 { pt3dadd( -9.48935, 33.9496, 8.1641, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_6 { pt3dadd( -10.0579, 35.2036, 9.22835, 0.55 ) }
    dend_6 { pt3dadd( -11.161, 37.3223, 11.5106, 0.83 ) }
    dend_6 { pt3dadd( -12.5606, 39.7138, 14.1773, 0.83 ) }
    dend_6 { pt3dadd( -13.0258, 40.3229, 14.9947, 0.55 ) }
    dend_6 { pt3dadd( -14.2484, 41.6531, 17.038, 0.83 ) }
    dend_6 { pt3dadd( -16.3474, 43.7271, 20.2152, 0.83 ) }
    dend_6 { pt3dadd( -20.1475, 47.104, 25.3334, 0.83 ) }
    dend_6 { pt3dadd( -21.4794, 48.1518, 26.9176, 0.83 ) }
    dend_6 { pt3dadd( -26.8467, 51.9, 32.3773, 0.83 ) }
    dend_6 { pt3dadd( -28.5563, 52.9941, 33.8891, 0.83 ) }
    dend_6 { pt3dadd( -31.3801, 54.6875, 35.9978, 0.83 ) }
    dend_6 { pt3dadd( -33.024, 55.6195, 36.9101, 0.83 ) }
    dend_6 { pt3dadd( -34.5637, 56.6128, 37.4557, 0.83 ) }
    dend_6 { pt3dadd( -36.195, 57.7547, 37.9286, 0.55 ) }
    dend_6 { pt3dadd( -37.5277, 58.8462, 38.1224, 0.55 ) }
    dend_6 { pt3dadd( -39.2918, 60.2888, 38.5531, 0.83 ) }
    dend_6 { pt3dadd( -40.7562, 61.4493, 38.9826, 0.55 ) }
    dend_6 { pt3dadd( -43.0952, 63.4318, 39.7558, 0.83 ) }
    dend_6 { pt3dadd( -45.8045, 65.9737, 40.7804, 0.55 ) }
    dend_6 { pt3dadd( -46.9091, 67.0624, 41.265, 0.55 ) }
    dend_6 { pt3dadd( -49.5923, 69.5905, 42.5808, 1.11 ) }
    dend_6 { pt3dadd( -56.2093, 75.0865, 47.2516, 1.11 ) }
    dend_6 { pt3dadd( -62.2291, 80.1661, 53.0625, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 23/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -7.94834, 31.0176, 5.80998, 0.55 ) }
    dend_3 { pt3dadd( -7.12753, 34.0807, 5.64724, 0.55 ) }
    dend_3 { pt3dadd( -6.99283, 34.5826, 5.63428, 0.83 ) }
    dend_3 { pt3dadd( -6.71348, 35.7331, 5.70466, 0.28 ) }
    dend_3 { pt3dadd( -6.4629, 36.9052, 5.83185, 1.11 ) }
    dend_3 { pt3dadd( -5.97692, 39.171, 6.10387, 1.11 ) }
    dend_3 { pt3dadd( -5.50725, 41.4288, 6.38359, 0.83 ) }
    dend_3 { pt3dadd( -5.17034, 43.0502, 6.6487, 1.11 ) }
    dend_3 { pt3dadd( -4.6245, 45.4354, 7.04787, 0.55 ) }
    dend_3 { pt3dadd( -4.04033, 47.9117, 7.47476, 0.83 ) }
    dend_3 { pt3dadd( -3.41629, 50.5053, 7.89872, 0.28 ) }
    dend_3 { pt3dadd( -3.10185, 51.8733, 8.09966, 1.11 ) }
    dend_3 { pt3dadd( -2.38275, 55.2375, 8.5649, 1.11 ) }
    dend_3 { pt3dadd( -2.04746, 56.8252, 8.74123, 0.28 ) }
    dend_3 { pt3dadd( -1.61194, 58.8733, 8.93517, 0.83 ) }
    dend_3 { pt3dadd( -0.96325, 62.1608, 9.26092, 0.55 ) }
    dend_3 { pt3dadd( -0.507437, 64.7713, 9.5172, 0.55 ) }
    dend_3 { pt3dadd( -0.218132, 66.6086, 9.68682, 0.55 ) }
    dend_3 { pt3dadd( -0.0764423, 67.5309, 9.74674, 1.11 ) }
    dend_3 { pt3dadd( 0.40263, 70.3208, 9.89297, 1.11 ) }
    dend_3 { pt3dadd( 0.93129, 73.1168, 9.98119, 0.83 ) }
    dend_3 { pt3dadd( 1.40915, 75.454, 10.0013, 0.83 ) }
    dend_3 { pt3dadd( 1.76988, 77.0656, 9.99167, 0.28 ) }
    dend_3 { pt3dadd( 2.39182, 79.7354, 9.9179, 0.83 ) }
    dend_3 { pt3dadd( 3.01566, 82.3299, 9.79092, 0.83 ) }
    dend_3 { pt3dadd( 3.70144, 85.0442, 9.55707, 0.83 ) }
    dend_3 { pt3dadd( 4.14696, 86.6005, 9.39361, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 50/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -8.31431, -2.62869, -37.1706, 0.55 ) }
    dend_38 { pt3dadd( -8.54322, -1.51091, -39.4102, 0.55 ) }
    dend_38 { pt3dadd( -8.61198, -1.105, -40.1425, 1.11 ) }
    dend_38 { pt3dadd( -9.26975, 2.77794, -47.1469, 0.83 ) }
    dend_38 { pt3dadd( -9.8573, 6.24638, -53.4036, 0.55 ) }
    dend_38 { pt3dadd( -9.98825, 7.01939, -54.798, 0.55 ) }
    dend_38 { pt3dadd( -10.4253, 9.59939, -59.4521, 0.83 ) }
    dend_38 { pt3dadd( -10.5165, 10.8265, -61.6433, 1.11 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 58/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -8.31431, -2.62869, -37.1706, 0.55 ) }
    dend_37 { pt3dadd( -8.87232, -4.07225, -40.1105, 0.55 ) }
    dend_37 { pt3dadd( -9.21073, -4.49236, -41.1116, 0.55 ) }
    dend_37 { pt3dadd( -9.73804, -4.82059, -42.4971, 1.11 ) }
    dend_37 { pt3dadd( -10.3445, -5.09659, -43.9007, 0.55 ) }
    dend_37 { pt3dadd( -12.1577, -5.72718, -48.6519, 0.55 ) }
    dend_37 { pt3dadd( -13.4331, -6.06748, -51.9298, 0.55 ) }
    dend_37 { pt3dadd( -14.5213, -6.15955, -54.7599, 0.83 ) }
    dend_37 { pt3dadd( -17.0666, -6.10342, -61.3328, 0.28 ) }
    dend_37 { pt3dadd( -17.6833, -6.02175, -63.0382, 0.83 ) }
    dend_37 { pt3dadd( -20.4501, -5.47946, -71.1378, 0.55 ) }
    dend_37 { pt3dadd( -20.8605, -5.39057, -72.3476, 0.83 ) }
    dend_37 { pt3dadd( -22.4888, -5.00505, -77.302, 0.28 ) }
    dend_37 { pt3dadd( -22.7505, -4.94105, -78.0756, 0.55 ) }
    dend_37 { pt3dadd( -25.04, -4.25328, -84.3813, 0.28 ) }
    dend_37 { pt3dadd( -25.3458, -4.12148, -85.2261, 0.28 ) }
    dend_37 { pt3dadd( -25.8778, -3.86494, -86.519, 0.55 ) }
    dend_37 { pt3dadd( -26.3108, -3.60583, -87.6732, 0.83 ) }
    dend_37 { pt3dadd( -28.684, -1.99, -93.7246, 0.28 ) }
    dend_37 { pt3dadd( -28.9909, -1.73347, -94.5715, 0.83 ) }
    dend_37 { pt3dadd( -30.9026, 0.159541, -100.095, 0.28 ) }
    dend_37 { pt3dadd( -31.2664, 0.577731, -101.258, 0.83 ) }
    dend_37 { pt3dadd( -33.4708, 3.44001, -108.763, 0.28 ) }
    dend_37 { pt3dadd( -33.9108, 4.04206, -110.371, 0.83 ) }
    dend_37 { pt3dadd( -35.5617, 6.28177, -116.738, 0.28 ) }
    dend_37 { pt3dadd( -35.9105, 6.74007, -118.137, 0.55 ) }
    dend_37 { pt3dadd( -36.3431, 7.27198, -119.918, 0.28 ) }
    dend_37 { pt3dadd( -36.5105, 7.49373, -120.684, 0.83 ) }
    dend_37 { pt3dadd( -37.377, 8.43488, -124.439, 0.28 ) }
    dend_37 { pt3dadd( -37.5754, 8.64012, -125.566, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 88/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -3.60898, -46.0056, -22.3743, 0.55 ) }
    dend_35 { pt3dadd( -5.63899, -44.9916, -25.0897, 0.55 ) }
    dend_35 { pt3dadd( -6.04762, -44.8374, -25.7192, 0.55 ) }
    dend_35 { pt3dadd( -10.174, -43.5766, -31.9791, 0.83 ) }
    dend_35 { pt3dadd( -11.7803, -43.2296, -34.5964, 0.28 ) }
    dend_35 { pt3dadd( -12.7359, -43.0859, -36.1287, 0.55 ) }
    dend_35 { pt3dadd( -15.5288, -42.8401, -40.86, 1.11 ) }
    dend_35 { pt3dadd( -19.7805, -42.6472, -48.5229, 0.55 ) }
    dend_35 { pt3dadd( -20.5816, -42.6514, -50.0621, 1.11 ) }
    dend_35 { pt3dadd( -23.0798, -42.9109, -54.849, 0.55 ) }
    dend_35 { pt3dadd( -24.1951, -43.0673, -56.9668, 0.55 ) }
    dend_35 { pt3dadd( -27.64, -43.6746, -63.2167, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_35 { pt3dadd( -28.3281, -43.8373, -64.3765, 0.55 ) }
    dend_35 { pt3dadd( -32.8795, -44.5543, -70.4449, 0.28 ) }
    dend_35 { pt3dadd( -34.4822, -44.7372, -72.1474, 1.11 ) }
    dend_35 { pt3dadd( -36.9586, -45.0063, -73.672, 0.55 ) }
    dend_35 { pt3dadd( -41.6159, -45.7789, -75.9953, 1.11 ) }
    dend_35 { pt3dadd( -44.1066, -46.2146, -76.9015, 0.55 ) }
    dend_35 { pt3dadd( -46.6667, -46.7338, -78.4191, 0.55 ) }
    dend_35 { pt3dadd( -49.5944, -47.3641, -80.3731, 0.55 ) }
    dend_35 { pt3dadd( -51.4046, -47.6286, -81.9116, 1.11 ) }
    dend_35 { pt3dadd( -55.8673, -47.9781, -86.1706, 0.55 ) }
    dend_35 { pt3dadd( -58.2246, -47.7786, -88.5653, 0.83 ) }
    dend_35 { pt3dadd( -63.6727, -46.5648, -94.0873, 0.28 ) }
    dend_35 { pt3dadd( -65.5486, -45.9784, -95.9629, 0.55 ) }
    dend_35 { pt3dadd( -69.8132, -44.2345, -99.9059, 0.28 ) }
    dend_35 { pt3dadd( -71.157, -43.5894, -100.955, 0.83 ) }
    dend_35 { pt3dadd( -77.314, -40.2658, -104.531, 0.28 ) }
    dend_35 { pt3dadd( -79.1583, -39.2616, -105.075, 0.83 ) }
    dend_35 { pt3dadd( -81.78, -38.0642, -104.505, 0.28 ) }
    dend_35 { pt3dadd( -83.3044, -37.7907, -103.169, 0.55 ) }
    dend_35 { pt3dadd( -86.9584, -37.7025, -98.6744, 0.28 ) }
    dend_35 { pt3dadd( -87.152, -37.7128, -98.392, 0.83 ) }
    dend_35 { pt3dadd( -92.6475, -38.2271, -89.2087, 0.28 ) }
    dend_35 { pt3dadd( -93.2493, -38.2369, -88.1357, 0.83 ) }
    dend_35 { pt3dadd( -95.9757, -37.9202, -83.0398, 0.28 ) }
    dend_35 { pt3dadd( -96.634, -37.6962, -81.7829, 0.83 ) }
    dend_35 { pt3dadd( -99.5587, -35.9333, -76.3381, 0.28 ) }
    dend_35 { pt3dadd( -100.378, -35.2328, -74.9942, 0.83 ) }
    dend_35 { pt3dadd( -102.092, -33.2671, -72.712, 0.28 ) }
    dend_35 { pt3dadd( -103.123, -31.9632, -71.3646, 0.83 ) }
    dend_35 { pt3dadd( -105.864, -28.2799, -68.0588, 0.28 ) }
    dend_35 { pt3dadd( -106.4, -27.5705, -67.4666, 0.83 ) }
    dend_35 { pt3dadd( -108.869, -24.4176, -65.1536, 0.28 ) }
    dend_35 { pt3dadd( -110.141, -23.0541, -64.1452, 0.55 ) }
    dend_35 { pt3dadd( -113.788, -19.6473, -61.6904, 0.28 ) }
    dend_35 { pt3dadd( -114.619, -18.9178, -61.1779, 0.55 ) }
    dend_35 { pt3dadd( -116.615, -17.2475, -60.1816, 0.28 ) }
    dend_35 { pt3dadd( -117.374, -16.6076, -59.7775, 0.55 ) }
    dend_35 { pt3dadd( -122.004, -12.8325, -57.1317, 0.28 ) }
    dend_35 { pt3dadd( -122.369, -12.5344, -56.9741, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 39/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -3.60898, -46.0056, -22.3743, 0.83 ) }
    dend_34 { pt3dadd( -3.35666, -49.6745, -22.9259, 0.83 ) }
    dend_34 { pt3dadd( -3.22484, -52.6792, -23.3711, 0.55 ) }
    dend_34 { pt3dadd( -3.20539, -53.8288, -23.5282, 0.55 ) }
    dend_34 { pt3dadd( -3.24005, -55.6643, -23.8255, 1.11 ) }
    dend_34 { pt3dadd( -3.30061, -57.1327, -24.0305, 0.55 ) }
    dend_34 { pt3dadd( -3.38504, -58.7469, -24.2256, 1.11 ) }
    dend_34 { pt3dadd( -3.58313, -60.9443, -24.5372, 0.55 ) }
    dend_34 { pt3dadd( -3.7481, -62.3928, -24.676, 1.11 ) }
    dend_34 { pt3dadd( -4.10727, -65.1018, -24.9131, 1.11 ) }
    dend_34 { pt3dadd( -4.44128, -67.4408, -25.0609, 0.55 ) }
    dend_34 { pt3dadd( -4.76531, -69.7411, -25.1365, 1.11 ) }
    dend_34 { pt3dadd( -5.03568, -71.8816, -25.2082, 0.83 ) }
    dend_34 { pt3dadd( -5.27437, -74.2643, -25.3206, 0.28 ) }
    dend_34 { pt3dadd( -5.50178, -77.0254, -25.569, 1.11 ) }
    dend_34 { pt3dadd( -5.64881, -79.2135, -25.8554, 0.83 ) }
    dend_34 { pt3dadd( -5.78144, -81.7783, -26.3388, 0.83 ) }
    dend_34 { pt3dadd( -5.86012, -84.1838, -26.8672, 0.83 ) }
    dend_34 { pt3dadd( -5.87609, -86.4127, -27.4438, 0.83 ) }
    dend_34 { pt3dadd( -5.85212, -88.7348, -28.1785, 0.28 ) }
    dend_34 { pt3dadd( -5.81029, -90.3606, -28.7792, 0.83 ) }
    dend_34 { pt3dadd( -5.74227, -91.6682, -29.3086, 0.28 ) }
    dend_34 { pt3dadd( -5.65718, -92.9535, -29.8197, 1.11 ) }
    dend_34 { pt3dadd( -5.52298, -94.7643, -30.4083, 0.28 ) }
    dend_34 { pt3dadd( -5.40519, -96.3461, -30.8106, 1.11 ) }
    dend_34 { pt3dadd( -5.27603, -98.3027, -31.37, 0.28 ) }
    dend_34 { pt3dadd( -5.21317, -99.281, -31.6995, 1.11 ) }
    dend_34 { pt3dadd( -5.13895, -100.547, -32.1483, 1.11 ) }
    dend_34 { pt3dadd( -4.98124, -103.143, -33.152, 0.55 ) }
    dend_34 { pt3dadd( -4.81574, -105.288, -34.0015, 1.11 ) }
    dend_34 { pt3dadd( -4.38596, -109.095, -35.6642, 0.83 ) }
    dend_34 { pt3dadd( -4.11254, -110.651, -36.3903, 0.28 ) }
    dend_34 { pt3dadd( -3.83425, -111.732, -36.8817, 0.55 ) }
    dend_34 { pt3dadd( -3.1841, -113.661, -37.6685, 0.28 ) }
    dend_34 { pt3dadd( -2.70903, -114.866, -38.0588, 0.83 ) }
    dend_34 { pt3dadd( -1.80654, -117.012, -38.5317, 0.55 ) }
    dend_34 { pt3dadd( -0.881603, -119.094, -38.658, 1.38 ) }
    dend_34 { pt3dadd( 0.973947, -123.29, -38.2731, 0.28 ) }
    dend_34 { pt3dadd( 1.64775, -124.88, -37.9267, 0.83 ) }
    dend_34 { pt3dadd( 2.26588, -126.415, -37.3303, 0.28 ) }
    dend_34 { pt3dadd( 2.78117, -127.781, -36.5881, 0.83 ) }
    dend_34 { pt3dadd( 3.49925, -129.786, -35.1927, 0.83 ) }
    dend_34 { pt3dadd( 4.53397, -132.71, -32.8345, 0.28 ) }
    dend_34 { pt3dadd( 4.90725, -133.764, -31.9076, 0.55 ) }
    dend_34 { pt3dadd( 5.46082, -135.311, -30.6046, 0.28 ) }
    dend_34 { pt3dadd( 6.18296, -137.313, -28.9814, 0.83 ) }
    dend_34 { pt3dadd( 6.80287, -139.016, -27.6851, 0.28 ) }
    dend_34 { pt3dadd( 7.09389, -139.893, -27.1285, 0.55 ) }
    dend_34 { pt3dadd( 7.62184, -141.667, -26.2587, 0.28 ) }
    dend_34 { pt3dadd( 7.79517, -142.294, -26.017, 0.83 ) }
    dend_34 { pt3dadd( 8.1042, -143.589, -25.7515, 0.28 ) }
    dend_34 { pt3dadd( 8.32418, -144.598, -25.6986, 0.83 ) }
    dend_34 { pt3dadd( 8.54536, -145.527, -25.7435, 0.83 ) }
    dend_34 { pt3dadd( 9.07363, -147.537, -25.9638, 0.83 ) }
    dend_34 { pt3dadd( 9.83124, -150.337, -26.4302, 0.28 ) }
    dend_34 { pt3dadd( 10.4314, -152.69, -27.0115, 0.28 ) }
    dend_34 { pt3dadd( 10.868, -154.346, -27.4337, 0.83 ) }
    dend_34 { pt3dadd( 11.2522, -155.723, -27.8126, 0.55 ) }
    dend_34 { pt3dadd( 11.5775, -156.822, -28.1037, 1.11 ) }
    dend_34 { pt3dadd( 12.7992, -160.721, -29.0269, 0.55 ) }
    dend_34 { pt3dadd( 13.7997, -163.848, -29.798, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_34 { pt3dadd( 14.6503, -166.356, -30.3355, 0.28 ) }
    dend_34 { pt3dadd( 15.1425, -167.654, -30.6751, 0.55 ) }
    dend_34 { pt3dadd( 15.8692, -169.199, -31.13, 0.28 ) }
    dend_34 { pt3dadd( 16.4364, -170.16, -31.387, 0.55 ) }
    dend_34 { pt3dadd( 18.0052, -172.324, -31.8866, 0.28 ) }
    dend_34 { pt3dadd( 19.3165, -174.171, -32.1159, 0.83 ) }
    dend_34 { pt3dadd( 20.8228, -176.421, -32.3435, 0.28 ) }
    dend_34 { pt3dadd( 22.4981, -179.035, -32.5081, 0.83 ) }
    dend_34 { pt3dadd( 24.1535, -181.632, -32.7274, 0.55 ) }
    dend_34 { pt3dadd( 25.0178, -183.053, -32.8365, 0.83 ) }
    dend_34 { pt3dadd( 27.5929, -187.466, -33.0319, 0.55 ) }
    dend_34 { pt3dadd( 28.577, -189.173, -33.1743, 0.83 ) }
    dend_34 { pt3dadd( 29.8288, -191.419, -33.4582, 0.55 ) }
    dend_34 { pt3dadd( 30.9092, -193.395, -33.8441, 0.83 ) }
    dend_34 { pt3dadd( 32.409, -195.999, -34.555, 0.55 ) }
    dend_34 { pt3dadd( 33.3237, -197.432, -35.0157, 0.55 ) }
    dend_34 { pt3dadd( 35.0155, -199.617, -35.7349, 1.11 ) }
    dend_34 { pt3dadd( 36.4738, -201.27, -36.1736, 0.28 ) }
    dend_34 { pt3dadd( 37.1732, -202.018, -36.3428, 0.55 ) }
    dend_34 { pt3dadd( 38.449, -203.303, -36.5318, 0.28 ) }
    dend_34 { pt3dadd( 39.8681, -204.553, -36.6595, 1.11 ) }
    dend_34 { pt3dadd( 43.2091, -207.298, -36.6368, 0.28 ) }
    dend_34 { pt3dadd( 44.1837, -208.059, -36.4734, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 23/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 29.0961, 105.889, 49.115, 0.55 ) }
    dend_23 { pt3dadd( 32.811, 115.292, 52.3082, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 25/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 29.0961, 105.889, 49.115, 0.55 ) }
    dend_22 { pt3dadd( 31.0841, 110.926, 52.4159, 0.55 ) }
    dend_22 { pt3dadd( 33.6699, 116.142, 54.9331, 0.55 ) }
    dend_22 { pt3dadd( 35.1041, 121.866, 57.2558, 0.55 ) }
    dend_22 { pt3dadd( 36.7569, 127.37, 59.9361, 0.55 ) }
    dend_22 { pt3dadd( 37.3542, 133.348, 61.9681, 0.55 ) }
    dend_22 { pt3dadd( 37.9, 139.297, 64.0994, 0.55 ) }
    dend_22 { pt3dadd( 38.0904, 144.891, 67.0792, 0.55 ) }
    dend_22 { pt3dadd( 39.062, 150.454, 69.968, 0.55 ) }
    dend_22 { pt3dadd( 41.8185, 155.553, 72.5389, 0.55 ) }
    dend_22 { pt3dadd( 45.2544, 160.413, 74.7315, 0.55 ) }
    dend_22 { pt3dadd( 49.1143, 165.053, 76.6766, 0.55 ) }
    dend_22 { pt3dadd( 52.6198, 169.59, 79.3873, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 38/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -9.10903, 55.2624, 36.9516, 0.83 ) }
    dend_16 { pt3dadd( -8.44822, 53.1861, 37.2368, 0.83 ) }
    dend_16 { pt3dadd( -7.58949, 50.5131, 37.8717, 0.83 ) }
    dend_16 { pt3dadd( -7.06774, 48.7202, 38.3516, 0.83 ) }
    dend_16 { pt3dadd( -5.89326, 44.7498, 39.2025, 0.83 ) }
    dend_16 { pt3dadd( -4.79303, 40.9211, 39.8848, 0.83 ) }
    dend_16 { pt3dadd( -3.37757, 35.9954, 40.7625, 0.55 ) }
    dend_16 { pt3dadd( -2.89001, 34.1164, 41.0414, 0.55 ) }
    dend_16 { pt3dadd( -2.50027, 32.5434, 41.3055, 0.55 ) }
    dend_16 { pt3dadd( -1.57063, 28.9091, 42.0764, 0.28 ) }
    dend_16 { pt3dadd( -1.19146, 27.5124, 42.5458, 0.83 ) }
    dend_16 { pt3dadd( 2.42803, 17.112, 43.0798, 0.83 ) }
    dend_16 { pt3dadd( 5.87101, 7.02354, 45.8949, 0.83 ) }
    dend_16 { pt3dadd( 9.89187, -2.30614, 50.178, 0.83 ) }
    dend_16 { pt3dadd( 13.166, -11.7493, 54.8323, 0.83 ) }
    dend_16 { pt3dadd( 17.8438, -19.371, 61.2808, 0.83 ) }
    dend_16 { pt3dadd( 22.7647, -24.8164, 69.5081, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 55/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -9.10903, 55.2624, 36.9516, 1.11 ) }
    dend_11 { pt3dadd( -10.3746, 57.2425, 37.9069, 1.11 ) }
    dend_11 { pt3dadd( -11.3095, 58.7051, 38.6125, 1.11 ) }
    dend_11 { pt3dadd( -12.8394, 61.0987, 39.7674, 0.83 ) }
    dend_11 { pt3dadd( -14.4687, 63.6479, 40.9973, 1.11 ) }
    dend_11 { pt3dadd( -16.4284, 66.7138, 42.4765, 0.83 ) }
    dend_11 { pt3dadd( -17.1966, 67.9158, 43.0564, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 62/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -62.2291, 80.1661, 53.0625, 0.55 ) }
    dend_8 { pt3dadd( -67.3704, 84.4657, 56.8982, 0.55 ) }
    dend_8 { pt3dadd( -73.713, 87.2933, 60.2759, 0.55 ) }
    dend_8 { pt3dadd( -79.6251, 90.5898, 63.9924, 0.55 ) }
    dend_8 { pt3dadd( -86.4526, 93.4214, 66.2285, 0.55 ) }
    dend_8 { pt3dadd( -93.4049, 95.5416, 68.8366, 0.55 ) }
    dend_8 { pt3dadd( -99.9579, 98.2599, 71.8864, 0.55 ) }
    dend_8 { pt3dadd( -107.102, 99.9158, 74.3031, 0.55 ) }
    dend_8 { pt3dadd( -113.881, 102.964, 76.3983, 0.55 ) }
    dend_8 { pt3dadd( -119.975, 106.944, 78.9774, 0.55 ) }
    dend_8 { pt3dadd( -125.65, 110.049, 83.1957, 0.55 ) }
    dend_8 { pt3dadd( -130.487, 113.078, 88.3966, 0.55 ) }
    dend_8 { pt3dadd( -134.287, 116.688, 94.0685, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 75/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -62.2291, 80.1661, 53.0625, 0.55 ) }
    dend_7 { pt3dadd( -68.6508, 86.3463, 59.71, 0.55 ) }
    dend_7 { pt3dadd( -75.7684, 90.7097, 67.0532, 0.55 ) }
    dend_7 { pt3dadd( -82.2627, 95.4436, 74.7367, 0.55 ) }
    dend_7 { pt3dadd( -88.7189, 100.384, 82.3214, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 80/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 4.14696, 86.6005, 9.39361, 0.55 ) }
    dend_5 { pt3dadd( 4.65453, 89.6963, 9.51827, 0.55 ) }
    dend_5 { pt3dadd( 4.88447, 91.0568, 9.52589, 0.28 ) }
    dend_5 { pt3dadd( 5.21237, 92.7165, 9.50934, 0.83 ) }
    dend_5 { pt3dadd( 5.68515, 95.0402, 9.47585, 0.28 ) }
    dend_5 { pt3dadd( 5.95069, 96.3823, 9.46884, 0.83 ) }
    dend_5 { pt3dadd( 6.91444, 101.307, 9.51305, 0.28 ) }
    dend_5 { pt3dadd( 7.29886, 103.298, 9.49844, 0.83 ) }
    dend_5 { pt3dadd( 8.0753, 107.103, 9.44423, 0.28 ) }
    dend_5 { pt3dadd( 8.5938, 109.406, 9.41856, 0.83 ) }
    dend_5 { pt3dadd( 9.05154, 111.391, 9.37719, 0.28 ) }
    dend_5 { pt3dadd( 9.43152, 113.045, 9.38556, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 92/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 4.14696, 86.6005, 9.39361, 0.55 ) }
    dend_4 { pt3dadd( 6.08206, 89.3307, 5.93072, 0.55 ) }
    dend_4 { pt3dadd( 7.31131, 90.9429, 3.90957, 0.55 ) }
    dend_4 { pt3dadd( 8.46768, 92.3275, 2.21146, 0.83 ) }
    dend_4 { pt3dadd( 10.8288, 95.0787, -1.02149, 0.55 ) }
    dend_4 { pt3dadd( 13.2297, 97.8187, -4.00496, 0.83 ) }
    dend_4 { pt3dadd( 15.4448, 100.396, -6.56901, 0.83 ) }
    dend_4 { pt3dadd( 16.5306, 101.654, -7.6099, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_4 { pt3dadd( 19.8099, 105.224, -10.0589, 0.55 ) }
    dend_4 { pt3dadd( 20.6233, 106.175, -10.5254, 0.55 ) }
    dend_4 { pt3dadd( 22.1267, 107.956, -11.1925, 0.83 ) }
    dend_4 { pt3dadd( 23.7863, 109.937, -11.7777, 0.55 ) }
    dend_4 { pt3dadd( 26.1127, 112.766, -12.6802, 0.83 ) }
    dend_4 { pt3dadd( 27.7863, 114.922, -13.4629, 0.83 ) }
    dend_4 { pt3dadd( 29.6776, 117.275, -14.5134, 0.83 ) }
    dend_4 { pt3dadd( 35.2588, 123.845, -18.2137, 0.28 ) }
    dend_4 { pt3dadd( 35.7684, 124.401, -18.6471, 0.55 ) }
    dend_4 { pt3dadd( 38.4426, 127.197, -21.2979, 0.28 ) }
    dend_4 { pt3dadd( 39.4886, 128.298, -22.5352, 1.11 ) }
    dend_4 { pt3dadd( 42.2114, 131.23, -26.1207, 0.55 ) }
    dend_4 { pt3dadd( 43.2184, 132.331, -27.535, 0.83 ) }
    dend_4 { pt3dadd( 46.6802, 136.508, -32.8059, 0.28 ) }
    dend_4 { pt3dadd( 47.4171, 137.366, -33.8855, 0.83 ) }
    dend_4 { pt3dadd( 50.6677, 141.322, -38.6829, 0.28 ) }
    dend_4 { pt3dadd( 51.2161, 142.033, -39.4895, 0.55 ) }
    dend_4 { pt3dadd( 52.391, 143.745, -41.1893, 0.28 ) }
    dend_4 { pt3dadd( 52.8111, 144.37, -41.7327, 0.83 ) }
    dend_4 { pt3dadd( 56.4666, 149.644, -45.6526, 0.28 ) }
    dend_4 { pt3dadd( 57.8407, 151.568, -47.0657, 0.28 ) }
    dend_4 { pt3dadd( 58.6904, 152.723, -47.9046, 0.55 ) }
    dend_4 { pt3dadd( 60.1012, 154.635, -49.3136, 0.28 ) }
    dend_4 { pt3dadd( 61.2032, 156.137, -50.4662, 0.55 ) }
    dend_4 { pt3dadd( 63.4554, 159.141, -52.9271, 0.28 ) }
    dend_4 { pt3dadd( 65.3358, 161.475, -54.6322, 1.38 ) }
    dend_4 { pt3dadd( 68.2397, 164.594, -56.7942, 0.28 ) }
    dend_4 { pt3dadd( 68.9, 165.139, -57.1524, 0.83 ) }
    dend_4 { pt3dadd( 71.3346, 166.904, -58.1776, 0.28 ) }
    dend_4 { pt3dadd( 75.4934, 169.568, -59.5096, 0.55 ) }
    dend_4 { pt3dadd( 80.5862, 172.538, -60.7041, 0.55 ) }
    dend_4 { pt3dadd( 83.8795, 174.34, -61.3288, 1.66 ) }
    dend_4 { pt3dadd( 95.2113, 180.432, -63.0014, 0.55 ) }
    dend_4 { pt3dadd( 96.382, 181.068, -63.1828, 1.11 ) }
    dend_4 { pt3dadd( 99.4043, 182.736, -63.6709, 0.28 ) }
    dend_4 { pt3dadd( 100.631, 183.454, -63.8756, 0.55 ) }
    dend_4 { pt3dadd( 105.879, 186.695, -65.0686, 0.28 ) }
    dend_4 { pt3dadd( 107.285, 187.592, -65.3624, 1.11 ) }
    dend_4 { pt3dadd( 111.534, 190.062, -66.2794, 0.55 ) }
    dend_4 { pt3dadd( 113.795, 191.187, -66.7394, 0.83 ) }
    dend_4 { pt3dadd( 116.487, 192.288, -67.1972, 0.55 ) }
    dend_4 { pt3dadd( 122.25, 194.144, -67.8055, 0.28 ) }
    dend_4 { pt3dadd( 124.403, 194.542, -67.9166, 0.83 ) }
    dend_4 { pt3dadd( 132.126, 195.318, -68.047, 0.28 ) }
    dend_4 { pt3dadd( 134.893, 195.342, -67.954, 1.11 ) }
    dend_4 { pt3dadd( 136.857, 195.227, -67.8816, 0.28 ) }
    dend_4 { pt3dadd( 138.813, 194.982, -67.88, 0.55 ) }
    dend_4 { pt3dadd( 143.168, 194.083, -67.7738, 0.28 ) }
    dend_4 { pt3dadd( 144.411, 193.738, -67.7301, 0.83 ) }
    dend_4 { pt3dadd( 146.777, 192.741, -67.4689, 0.28 ) }
    dend_4 { pt3dadd( 147.764, 192.213, -67.4461, 0.55 ) }
    dend_4 { pt3dadd( 148.972, 191.41, -67.5253, 0.28 ) }
    dend_4 { pt3dadd( 149.512, 190.984, -67.6561, 0.55 ) }
    dend_4 { pt3dadd( 150.886, 189.749, -68.0648, 0.28 ) }
    dend_4 { pt3dadd( 151.575, 189.103, -68.3106, 0.83 ) }
    dend_4 { pt3dadd( 155.708, 185.033, -69.9097, 0.28 ) }
    dend_4 { pt3dadd( 158.175, 182.533, -70.9174, 0.83 ) }
    dend_4 { pt3dadd( 162.488, 177.952, -72.6517, 0.28 ) }
    dend_4 { pt3dadd( 163.394, 177.036, -73.0643, 0.55 ) }
    dend_4 { pt3dadd( 165.031, 175.396, -73.8241, 0.28 ) }
    dend_4 { pt3dadd( 166.391, 173.84, -74.3733, 0.83 ) }
    dend_4 { pt3dadd( 168.739, 170.79, -75.1985, 0.28 ) }
    dend_4 { pt3dadd( 169.931, 169.215, -75.4872, 0.55 ) }
    dend_4 { pt3dadd( 175.278, 161.829, -76.1825, 0.28 ) }
    dend_4 { pt3dadd( 176.715, 159.883, -76.4284, 0.83 ) }
    dend_4 { pt3dadd( 181.527, 152.854, -77.2155, 0.28 ) }
    dend_4 { pt3dadd( 184.772, 148.269, -77.9119, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 67/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -10.5165, 10.8265, -61.6433, 0.83 ) }
    dend_40 { pt3dadd( -10.8409, 10.7499, -62.9782, 0.83 ) }
    dend_40 { pt3dadd( -12.071, 10.2747, -68.0212, 0.28 ) }
    dend_40 { pt3dadd( -12.3279, 10.1621, -69.0098, 0.55 ) }
    dend_40 { pt3dadd( -13.4887, 9.71159, -73.1559, 0.28 ) }
    dend_40 { pt3dadd( -13.8765, 9.57035, -74.4684, 0.83 ) }
    dend_40 { pt3dadd( -15.8388, 8.87558, -81.3225, 0.28 ) }
    dend_40 { pt3dadd( -16.0769, 8.76719, -82.1756, 0.28 ) }
    dend_40 { pt3dadd( -16.272, 8.66069, -82.9282, 0.55 ) }
    dend_40 { pt3dadd( -17.1102, 8.2182, -86.3588, 0.28 ) }
    dend_40 { pt3dadd( -17.4168, 8.04486, -87.6871, 0.83 ) }
    dend_40 { pt3dadd( -18.5207, 7.41886, -93.5248, 0.28 ) }
    dend_40 { pt3dadd( -18.7734, 7.27847, -94.887, 0.55 ) }
    dend_40 { pt3dadd( -20.193, 6.41783, -103.218, 0.28 ) }
    dend_40 { pt3dadd( -20.3178, 6.33168, -104.024, 0.83 ) }
    dend_40 { pt3dadd( -21.2652, 5.52702, -110.858, 0.28 ) }
    dend_40 { pt3dadd( -22.41, 4.50596, -119.7, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 84/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -10.5165, 10.8265, -61.6433, 0.55 ) }
    dend_39 { pt3dadd( -14.1282, 14.5062, -61.6974, 0.55 ) }
    dend_39 { pt3dadd( -15.1889, 15.4775, -61.6727, 0.83 ) }
    dend_39 { pt3dadd( -16.8894, 16.9478, -61.5955, 0.28 ) }
    dend_39 { pt3dadd( -17.5468, 17.5272, -61.6399, 0.55 ) }
    dend_39 { pt3dadd( -19.5217, 19.2872, -61.8833, 0.28 ) }
    dend_39 { pt3dadd( -20.4059, 20.1187, -62.1495, 0.55 ) }
    dend_39 { pt3dadd( -22.1966, 21.8177, -62.9249, 0.28 ) }
    dend_39 { pt3dadd( -23.029, 22.6419, -63.3385, 0.83 ) }
    dend_39 { pt3dadd( -25.4477, 25.179, -64.6262, 0.28 ) }
    dend_39 { pt3dadd( -26.7246, 26.6038, -65.3695, 0.83 ) }
    dend_39 { pt3dadd( -30.2592, 30.9193, -67.8296, 0.28 ) }
    dend_39 { pt3dadd( -31.3483, 32.3297, -68.6, 0.83 ) }
    dend_39 { pt3dadd( -32.2865, 33.6413, -69.2529, 0.28 ) }
    dend_39 { pt3dadd( -33.0036, 34.7173, -69.7193, 0.83 ) }
    dend_39 { pt3dadd( -33.5861, 35.6421, -69.9993, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_39 { pt3dadd( -34.5002, 37.3389, -70.6277, 0.55 ) }
    dend_39 { pt3dadd( -35.2592, 38.9282, -71.2091, 0.28 ) }
    dend_39 { pt3dadd( -35.6952, 39.8208, -71.6762, 0.83 ) }
    dend_39 { pt3dadd( -37.0829, 42.4282, -73.0997, 0.28 ) }
    dend_39 { pt3dadd( -37.8619, 43.7163, -73.7866, 0.83 ) }
    dend_39 { pt3dadd( -40.3714, 47.5246, -75.7481, 0.28 ) }
    dend_39 { pt3dadd( -41.0455, 48.4597, -76.2124, 0.55 ) }
    dend_39 { pt3dadd( -43.308, 51.4247, -77.6655, 0.28 ) }
    dend_39 { pt3dadd( -44.7604, 53.2123, -78.4837, 1.11 ) }
    dend_39 { pt3dadd( -46.2471, 54.9015, -79.1329, 0.28 ) }
    dend_39 { pt3dadd( -47.1307, 55.8757, -79.4457, 0.55 ) }
    dend_39 { pt3dadd( -49.7005, 58.6181, -80.0015, 0.28 ) }
    dend_39 { pt3dadd( -51.0692, 60.1169, -80.3044, 1.11 ) }
    dend_39 { pt3dadd( -52.4365, 61.655, -80.5564, 1.11 ) }
    dend_39 { pt3dadd( -53.772, 63.2235, -80.8554, 0.28 ) }
    dend_39 { pt3dadd( -54.5862, 64.2182, -81.0212, 0.55 ) }
    dend_39 { pt3dadd( -56.3868, 66.4192, -81.2463, 0.28 ) }
    dend_39 { pt3dadd( -57.3363, 67.5998, -81.2603, 0.55 ) }
    dend_39 { pt3dadd( -58.3455, 68.9954, -81.374, 0.28 ) }
    dend_39 { pt3dadd( -58.8326, 69.7667, -81.4618, 0.55 ) }
    dend_39 { pt3dadd( -59.3186, 70.7275, -81.6607, 0.28 ) }
    dend_39 { pt3dadd( -59.7194, 71.6526, -81.9362, 1.11 ) }
    dend_39 { pt3dadd( -60.1504, 72.8127, -82.3049, 1.11 ) }
    dend_39 { pt3dadd( -61.4756, 76.6526, -83.5114, 0.28 ) }
    dend_39 { pt3dadd( -61.7105, 77.423, -83.8415, 0.55 ) }
    dend_39 { pt3dadd( -62.3747, 79.6845, -84.9431, 0.28 ) }
    dend_39 { pt3dadd( -62.6993, 80.8143, -85.5108, 0.55 ) }
    dend_39 { pt3dadd( -63.2423, 82.7543, -86.4984, 0.28 ) }
    dend_39 { pt3dadd( -63.559, 83.8409, -87.0641, 1.11 ) }
    dend_39 { pt3dadd( -64.7946, 87.7711, -89.0121, 0.28 ) }
    dend_39 { pt3dadd( -64.973, 88.3137, -89.3084, 0.83 ) }
    dend_39 { pt3dadd( -65.6688, 90.3487, -90.4243, 0.28 ) }
    dend_39 { pt3dadd( -66.0829, 91.5302, -91.0778, 0.83 ) }
    dend_39 { pt3dadd( -66.5473, 92.8628, -91.8394, 0.28 ) }
    dend_39 { pt3dadd( -66.7585, 93.4062, -92.117, 0.55 ) }
    dend_39 { pt3dadd( -67.5316, 95.2033, -92.8345, 0.28 ) }
    dend_39 { pt3dadd( -68.0576, 96.3681, -93.4334, 0.55 ) }
    dend_39 { pt3dadd( -68.8902, 98.0375, -94.4532, 0.28 ) }
    dend_39 { pt3dadd( -69.1498, 98.5304, -94.7752, 0.55 ) }
    dend_39 { pt3dadd( -69.6914, 99.5502, -95.4643, 0.28 ) }
    dend_39 { pt3dadd( -69.9331, 99.9821, -95.7639, 0.55 ) }
    dend_39 { pt3dadd( -71.3788, 102.531, -97.4379, 0.28 ) }
    dend_39 { pt3dadd( -71.7524, 103.172, -97.8458, 0.55 ) }
    dend_39 { pt3dadd( -72.4719, 104.349, -98.5531, 0.55 ) }
    dend_39 { pt3dadd( -74.2304, 107.081, -100.101, 0.28 ) }
    dend_39 { pt3dadd( -74.6449, 107.763, -100.545, 0.55 ) }
    dend_39 { pt3dadd( -75.169, 108.652, -101.149, 0.28 ) }
    dend_39 { pt3dadd( -75.6348, 109.513, -101.861, 0.55 ) }
    dend_39 { pt3dadd( -76.6286, 111.516, -103.91, 0.28 ) }
    dend_39 { pt3dadd( -76.8838, 112.045, -104.503, 0.83 ) }
    dend_39 { pt3dadd( -78.3373, 115.439, -108.747, 0.28 ) }
    dend_39 { pt3dadd( -78.4977, 115.89, -109.341, 0.83 ) }
    dend_39 { pt3dadd( -79.3907, 118.841, -113.345, 0.28 ) }
    dend_39 { pt3dadd( -79.6983, 120.104, -115.022, 0.83 ) }
    dend_39 { pt3dadd( -79.8733, 121.096, -116.262, 0.28 ) }
    dend_39 { pt3dadd( -80.0907, 122.962, -118.438, 0.55 ) }
    dend_39 { pt3dadd( -80.2299, 125.204, -120.656, 0.28 ) }
    dend_39 { pt3dadd( -80.2371, 125.882, -121.264, 0.83 ) }
    dend_39 { pt3dadd( -80.1454, 127.634, -122.526, 0.28 ) }
    dend_39 { pt3dadd( -80.0792, 128.181, -122.951, 0.55 ) }
    dend_39 { pt3dadd( -79.7468, 130.068, -124.518, 0.28 ) }
    dend_39 { pt3dadd( -79.5993, 130.624, -124.99, 0.55 ) }
    dend_39 { pt3dadd( -79.0374, 132.413, -126.496, 0.28 ) }
    dend_39 { pt3dadd( -78.8567, 132.939, -126.975, 0.55 ) }
    dend_39 { pt3dadd( -77.9397, 135.213, -129.008, 0.28 ) }
    dend_39 { pt3dadd( -77.735, 135.685, -129.398, 0.83 ) }
    dend_39 { pt3dadd( -76.2057, 138.831, -131.608, 0.28 ) }
    dend_39 { pt3dadd( -75.5202, 140.068, -132.363, 0.55 ) }
    dend_39 { pt3dadd( -74.5567, 141.48, -132.933, 0.55 ) }
    dend_39 { pt3dadd( -73.3017, 142.971, -133.193, 0.28 ) }
    dend_39 { pt3dadd( -72.2715, 143.963, -133.058, 0.55 ) }
    dend_39 { pt3dadd( -70.9813, 144.98, -132.712, 0.28 ) }
    dend_39 { pt3dadd( -69.9406, 145.68, -132.3, 0.55 ) }
    dend_39 { pt3dadd( -67.7423, 146.947, -131.32, 0.28 ) }
    dend_39 { pt3dadd( -65.8874, 147.915, -130.403, 0.55 ) }
    dend_39 { pt3dadd( -64.579, 148.519, -129.722, 0.28 ) }
    dend_39 { pt3dadd( -63.59, 148.919, -129.199, 0.55 ) }
    dend_39 { pt3dadd( -62.8158, 149.197, -128.802, 0.55 ) }
    dend_39 { pt3dadd( -61.0944, 149.812, -127.979, 0.28 ) }
    dend_39 { pt3dadd( -60.2965, 150.113, -127.653, 0.55 ) }
    dend_39 { pt3dadd( -57.6266, 151.204, -126.643, 0.28 ) }
    dend_39 { pt3dadd( -55.9292, 152.005, -126.045, 0.55 ) }
    dend_39 { pt3dadd( -54.6504, 152.701, -125.682, 0.28 ) }
    dend_39 { pt3dadd( -53.7604, 153.251, -125.469, 0.55 ) }
    dend_39 { pt3dadd( -52.9499, 153.859, -125.318, 0.28 ) }
    dend_39 { pt3dadd( -52.1435, 154.589, -125.164, 0.55 ) }
    dend_39 { pt3dadd( -50.8612, 156.061, -124.926, 0.28 ) }
    dend_39 { pt3dadd( -49.6983, 157.568, -124.592, 0.55 ) }
    dend_39 { pt3dadd( -49.0974, 158.438, -124.388, 0.28 ) }
    dend_39 { pt3dadd( -48.6013, 159.187, -124.208, 0.55 ) }
    dend_39 { pt3dadd( -47.8017, 160.488, -123.912, 0.28 ) }
    dend_39 { pt3dadd( -47.3532, 161.29, -123.748, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 92/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 22.7647, -24.8164, 69.5081, 0.55 ) }
    dend_20 { pt3dadd( 26.7802, -31.2434, 72.1274, 0.55 ) }
    dend_20 { pt3dadd( 30.1668, -38.2106, 74.1959, 0.55 ) }
    dend_20 { pt3dadd( 34.5197, -44.1846, 77.303, 0.55 ) }
    dend_20 { pt3dadd( 38.6463, -49.9431, 81.0582, 0.55 ) }
    dend_20 { pt3dadd( 44.3892, -54.4086, 84.4301, 0.55 ) }
    dend_20 { pt3dadd( 49.306, -59.1093, 88.6751, 0.55 ) }
    dend_20 { pt3dadd( 54.5827, -63.3032, 93.0177, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( 59.9106, -66.8981, 97.8115, 0.55 ) }
    dend_20 { pt3dadd( 65.9815, -70.1805, 101.893, 0.55 ) }
    dend_20 { pt3dadd( 72.9384, -72.6123, 105.052, 0.55 ) }
    dend_20 { pt3dadd( 79.4253, -74.979, 109.128, 0.55 ) }
    dend_20 { pt3dadd( 85.4519, -78.4065, 113.155, 0.55 ) }
    dend_20 { pt3dadd( 91.2248, -82.6839, 116.715, 0.55 ) }
    dend_20 { pt3dadd( 96.9545, -86.0715, 121.185, 0.55 ) }
    dend_20 { pt3dadd( 102.708, -89.9142, 125.239, 0.55 ) }
    dend_20 { pt3dadd( 108.836, -94.2476, 128.06, 0.55 ) }
    dend_20 { pt3dadd( 114.882, -98.8937, 130.538, 0.55 ) }
    dend_20 { pt3dadd( 120.269, -104.512, 132.462, 0.55 ) }
    dend_20 { pt3dadd( 125.249, -110.368, 134.741, 0.55 ) }
    dend_20 { pt3dadd( 129.242, -116.596, 137.834, 0.55 ) }
    dend_20 { pt3dadd( 132.859, -123.113, 140.791, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 14/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 22.7647, -24.8164, 69.5081, 0.55 ) }
    dend_17 { pt3dadd( 23.4503, -33.7714, 73.676, 0.55 ) }
    dend_17 { pt3dadd( 24.597, -42.6156, 77.9771, 0.55 ) }
    dend_17 { pt3dadd( 25.5668, -51.2864, 82.6581, 0.55 ) }
    dend_17 { pt3dadd( 25.9539, -60.7786, 85.4478, 0.55 ) }
    dend_17 { pt3dadd( 25.4426, -70.2668, 88.2313, 0.55 ) }
    dend_17 { pt3dadd( 26.2227, -79.6653, 91.2467, 0.55 ) }
    dend_17 { pt3dadd( 25.4443, -89.0315, 94.3618, 0.55 ) }
    dend_17 { pt3dadd( 24.1154, -97.9299, 98.4954, 0.55 ) }
    dend_17 { pt3dadd( 20.84, -106.411, 102.417, 0.55 ) }
    dend_17 { pt3dadd( 16.5269, -114.465, 106.232, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 25/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -17.1966, 67.9158, 43.0564, 0.55 ) }
    dend_15 { pt3dadd( -18.5873, 68.7319, 44.5643, 0.55 ) }
    dend_15 { pt3dadd( -19.8155, 69.2692, 45.9882, 0.55 ) }
    dend_15 { pt3dadd( -20.8142, 69.5284, 47.0279, 0.55 ) }
    dend_15 { pt3dadd( -22.6881, 69.7167, 48.6944, 0.55 ) }
    dend_15 { pt3dadd( -25.1724, 69.6239, 50.5942, 0.28 ) }
    dend_15 { pt3dadd( -25.9479, 69.525, 51.0999, 0.28 ) }
    dend_15 { pt3dadd( -27.7544, 69.0817, 52.1177, 0.55 ) }
    dend_15 { pt3dadd( -30.1497, 68.1144, 53.2761, 0.28 ) }
    dend_15 { pt3dadd( -31.6235, 67.2922, 53.871, 0.55 ) }
    dend_15 { pt3dadd( -32.8041, 66.4472, 54.1209, 0.28 ) }
    dend_15 { pt3dadd( -33.9668, 65.553, 54.105, 0.55 ) }
    dend_15 { pt3dadd( -41.426, 64.1386, 61.5443, 0.55 ) }
    dend_15 { pt3dadd( -47.814, 61.9573, 69.7552, 0.55 ) }
    dend_15 { pt3dadd( -55.0042, 61.4499, 77.5672, 0.55 ) }
    dend_15 { pt3dadd( -62.8822, 61.3614, 84.7026, 0.55 ) }
    dend_15 { pt3dadd( -71.6456, 60.8591, 90.6971, 0.55 ) }
    dend_15 { pt3dadd( -80.8493, 60.4945, 96.002, 0.55 ) }
    dend_15 { pt3dadd( -90.0056, 58.4046, 100.98, 0.55 ) }
    dend_15 { pt3dadd( -98.3529, 58.4037, 107.561, 0.55 ) }
    dend_15 { pt3dadd( -107.18, 59.3817, 113.401, 0.55 ) }
    dend_15 { pt3dadd( -116.769, 60.4884, 117.852, 0.55 ) }
    dend_15 { pt3dadd( -126.984, 62.2365, 120.212, 0.55 ) }
    dend_15 { pt3dadd( -137.36, 64.5343, 120.413, 0.55 ) }
    dend_15 { pt3dadd( -147.778, 66.293, 119.243, 0.55 ) }
    dend_15 { pt3dadd( -157.925, 69.3823, 118.55, 0.55 ) }
    dend_15 { pt3dadd( -167.455, 73.4083, 116.113, 0.55 ) }
    dend_15 { pt3dadd( -176.86, 76.6372, 112.358, 0.55 ) }
    dend_15 { pt3dadd( -186.889, 79.455, 110.243, 0.55 ) }
    dend_15 { pt3dadd( -196.768, 80.7692, 106.545, 0.55 ) }
    dend_15 { pt3dadd( -206.892, 81.6009, 103.418, 0.55 ) }
    dend_15 { pt3dadd( -217.23, 81.1096, 100.994, 0.55 ) }
    dend_15 { pt3dadd( -227.665, 82.263, 99.3346, 0.55 ) }
    dend_15 { pt3dadd( -238.117, 81.6885, 97.4864, 0.55 ) }
    dend_15 { pt3dadd( -248.522, 80.6347, 95.5867, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 60/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -17.1966, 67.9158, 43.0564, 0.83 ) }
    dend_12 { pt3dadd( -18.3779, 70.7986, 43.2345, 0.83 ) }
    dend_12 { pt3dadd( -19.231, 72.7837, 43.7068, 0.83 ) }
    dend_12 { pt3dadd( -20.0216, 74.5909, 44.1994, 0.83 ) }
    dend_12 { pt3dadd( -21.0765, 77.2561, 44.2109, 0.83 ) }
    dend_12 { pt3dadd( -21.9784, 79.8634, 43.6848, 1.11 ) }
    dend_12 { pt3dadd( -23.1534, 83.4827, 42.6751, 0.83 ) }
    dend_12 { pt3dadd( -24.3776, 87.3431, 41.3017, 1.11 ) }
    dend_12 { pt3dadd( -25.2622, 90.3524, 39.9229, 0.83 ) }
    dend_12 { pt3dadd( -28.0069, 100.762, 33.6783, 1.11 ) }
    dend_12 { pt3dadd( -28.5879, 103.551, 31.354, 1.11 ) }
    dend_12 { pt3dadd( -28.8375, 105.209, 29.4544, 0.55 ) }
    dend_12 { pt3dadd( -30.6743, 114.848, 27.1956, 0.55 ) }
    dend_12 { pt3dadd( -30.793, 124.493, 24.3072, 0.55 ) }
    dend_12 { pt3dadd( -31.7488, 134.046, 21.2718, 0.55 ) }
    dend_12 { pt3dadd( -33.5811, 143.857, 19.9423, 0.55 ) }
    dend_12 { pt3dadd( -34.5259, 153.555, 17.4087, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 77/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -22.41, 4.50596, -119.7, 0.55 ) }
    dend_42 { pt3dadd( -22.579, 4.71333, -120.543, 0.55 ) }
    dend_42 { pt3dadd( -22.8689, 4.96212, -121.735, 1.11 ) }
    dend_42 { pt3dadd( -25.3937, 6.35572, -130.212, 0.28 ) }
    dend_42 { pt3dadd( -25.4798, 6.38124, -130.456, 0.55 ) }
    dend_42 { pt3dadd( -26.3207, 6.49727, -132.493, 0.28 ) }
    dend_42 { pt3dadd( -26.8749, 6.47662, -133.629, 0.55 ) }
    dend_42 { pt3dadd( -27.6013, 6.30485, -134.842, 0.28 ) }
    dend_42 { pt3dadd( -28.5572, 5.75684, -135.936, 0.55 ) }
    dend_42 { pt3dadd( -29.6489, 4.83033, -136.605, 0.28 ) }
    dend_42 { pt3dadd( -30.6924, 3.80379, -137.356, 0.55 ) }
    dend_42 { pt3dadd( -31.8271, 2.52521, -138.229, 0.28 ) }
    dend_42 { pt3dadd( -32.5209, 1.71101, -138.809, 0.55 ) }
    dend_42 { pt3dadd( -34.3318, -0.496742, -140.583, 0.28 ) }
    dend_42 { pt3dadd( -34.9847, -1.34037, -141.36, 0.55 ) }
    dend_42 { pt3dadd( -36.0041, -2.70055, -142.83, 0.28 ) }
    dend_42 { pt3dadd( -36.5825, -3.52752, -143.874, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 94/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -22.41, 4.50596, -119.7, 0.28 ) }
    dend_41 { pt3dadd( -21.2324, 4.31054, -123.119, 0.28 ) }
    dend_41 { pt3dadd( -20.8844, 4.18369, -124.189, 1.11 ) }
    dend_41 { pt3dadd( -18.254, 2.7205, -132.484, 0.28 ) }
    dend_41 { pt3dadd( -17.9366, 2.48145, -133.555, 0.55 ) }
    dend_41 { pt3dadd( -17.1962, 1.74556, -136.156, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( -16.947, 1.42102, -137.014, 0.55 ) }
    dend_41 { pt3dadd( -16.5329, 0.369275, -138.703, 0.28 ) }
    dend_41 { pt3dadd( -16.3561, -0.423842, -139.534, 0.55 ) }
    dend_41 { pt3dadd( -16.1112, -2.9601, -140.853, 0.28 ) }
    dend_41 { pt3dadd( -16.0013, -4.45513, -141.488, 0.55 ) }
    dend_41 { pt3dadd( -15.851, -7.16561, -142.486, 0.28 ) }
    dend_41 { pt3dadd( -15.7589, -9.19172, -143.288, 0.83 ) }
    dend_41 { pt3dadd( -15.6868, -10.9979, -144.023, 0.28 ) }
    dend_41 { pt3dadd( -15.6414, -12.5708, -144.678, 0.55 ) }
    dend_41 { pt3dadd( -15.6108, -14.7682, -145.533, 0.28 ) }
    dend_41 { pt3dadd( -15.6329, -15.8162, -146.026, 0.55 ) }
    dend_41 { pt3dadd( -15.8044, -17.7943, -147.197, 0.28 ) }
    dend_41 { pt3dadd( -15.8996, -18.6376, -147.86, 0.55 ) }
    dend_41 { pt3dadd( -16.0573, -19.3783, -148.609, 0.28 ) }
    dend_41 { pt3dadd( -16.2027, -19.8608, -149.29, 0.55 ) }
    dend_41 { pt3dadd( -16.5082, -20.683, -150.744, 0.28 ) }
    dend_41 { pt3dadd( -16.7997, -21.245, -151.951, 0.83 ) }
    dend_41 { pt3dadd( -17.5218, -22.2838, -154.495, 0.28 ) }
    dend_41 { pt3dadd( -17.81, -22.6848, -155.596, 0.55 ) }
    dend_41 { pt3dadd( -18.334, -23.5791, -158.112, 0.28 ) }
    dend_41 { pt3dadd( -18.4254, -23.795, -158.668, 0.55 ) }
    dend_41 { pt3dadd( -18.5523, -24.3843, -160.18, 0.28 ) }
    dend_41 { pt3dadd( -18.5835, -24.7684, -161.222, 0.83 ) }
    dend_41 { pt3dadd( -18.6322, -25.9097, -164.353, 0.28 ) }
    dend_41 { pt3dadd( -18.6015, -26.6876, -166.465, 0.28 ) }
    dend_41 { pt3dadd( -18.527, -27.4322, -168.422, 0.55 ) }
    dend_41 { pt3dadd( -18.2663, -29.0599, -172.841, 0.28 ) }
    dend_41 { pt3dadd( -17.9943, -30.0751, -175.579, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 28/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 16.5269, -114.465, 106.232, 0.55 ) }
    dend_19 { pt3dadd( 11.0838, -123.885, 110.635, 0.55 ) }
    dend_19 { pt3dadd( 6.35642, -134.197, 113.646, 0.55 ) }
    dend_19 { pt3dadd( 2.00263, -144.257, 117.84, 0.55 ) }
    dend_19 { pt3dadd( -1.49814, -153.921, 123.506, 0.55 ) }
    dend_19 { pt3dadd( -4.43974, -163.857, 129.015, 0.55 ) }
    dend_19 { pt3dadd( -8.42271, -172.69, 135.638, 0.55 ) }
    dend_19 { pt3dadd( -13.9847, -180.934, 141.87, 0.55 ) }
    dend_19 { pt3dadd( -18.7649, -189.109, 148.803, 0.55 ) }
    dend_19 { pt3dadd( -23.9839, -196.374, 156.4, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 38/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 16.5269, -114.465, 106.232, 0.55 ) }
    dend_18 { pt3dadd( 19.5607, -124.364, 110.399, 0.55 ) }
    dend_18 { pt3dadd( 22.3104, -134.641, 113.77, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -34.5259, 153.555, 17.4087, 0.55 ) }
    dend_14 { pt3dadd( -39.5665, 158.697, 10.8015, 0.55 ) }
    dend_14 { pt3dadd( -44.329, 161.848, 2.87051, 0.55 ) }
    dend_14 { pt3dadd( -48.7995, 163.221, -5.71059, 0.55 ) }
    dend_14 { pt3dadd( -52.5193, 166.56, -14.1087, 0.55 ) }
    dend_14 { pt3dadd( -56.7863, 169.712, -22.3164, 0.55 ) }
    dend_14 { pt3dadd( -60.989, 173.475, -30.2966, 0.55 ) }
    dend_14 { pt3dadd( -65.9738, 179.004, -36.628, 0.55 ) }
    dend_14 { pt3dadd( -71.4322, 184.986, -42.0985, 0.55 ) }
    dend_14 { pt3dadd( -76.7609, 190.342, -48.2967, 0.55 ) }
    dend_14 { pt3dadd( -80.8894, 195.439, -55.5417, 0.55 ) }
    dend_14 { pt3dadd( -84.2712, 200.848, -62.9442, 0.55 ) }
    dend_14 { pt3dadd( -87.9597, 207.284, -69.3078, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 54/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -34.5259, 153.555, 17.4087, 0.55 ) }
    dend_13 { pt3dadd( -33.1224, 163.23, 18.2133, 0.55 ) }
    dend_13 { pt3dadd( -30.1679, 172.538, 19.131, 0.55 ) }
    dend_13 { pt3dadd( -28.5248, 182.188, 18.5026, 0.55 ) }
    dend_13 { pt3dadd( -25.5914, 191.499, 17.5598, 0.55 ) }
    dend_13 { pt3dadd( -23.0915, 200.945, 18.4267, 0.55 ) }
    dend_13 { pt3dadd( -20.0649, 210.025, 20.5722, 0.55 ) }
    dend_13 { pt3dadd( -17.4349, 219.421, 21.58, 0.55 ) }
    dend_13 { pt3dadd( -13.8076, 228.525, 21.1585, 0.55 ) }
    dend_13 { pt3dadd( -9.22895, 237.051, 19.5631, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_29, dend_0, dend_44, dend_31, dend_24, dend_1, dend_46, dend_45, dend_43, dend_32, dend_28, dend_25, dend_9, dend_2, dend_36, dend_33, dend_27, dend_26, dend_21, dend_10, dend_6, dend_3, dend_38, dend_37, dend_35, dend_34, dend_23, dend_22, dend_16, dend_11, dend_8, dend_7, dend_5, dend_4, dend_40, dend_39, dend_20, dend_17, dend_15, dend_12, dend_42, dend_41, dend_19, dend_18, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_30, dend_29, dend_0, dend_44, dend_31, dend_24, dend_1, dend_46, dend_45, dend_43, dend_32, dend_28, dend_25, dend_9, dend_2, dend_36, dend_33, dend_27, dend_26, dend_21, dend_10, dend_6, dend_3, dend_38, dend_37, dend_35, dend_34, dend_23, dend_22, dend_16, dend_11, dend_8, dend_7, dend_5, dend_4, dend_40, dend_39, dend_20, dend_17, dend_15, dend_12, dend_42, dend_41, dend_19, dend_18, dend_14, dend_13]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_29 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_24 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_46 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_45 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_43 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_28 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_25 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_26 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_21 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_6 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_3 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_37 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_35 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_34 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_22 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_16 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_8 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_7 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_4 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_40 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_39 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_20 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_15 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_19 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_14 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_13 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_30 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_31 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_1 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_32 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_2 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_9 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_44 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_33 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_36 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_11 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_38 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_5 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_23 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_42 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_27 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_18 OneSecGrp_SectionRef_48.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, axon_0, axon_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 13
    dend_24 nseg = 3
    dend_46 nseg = 17
    dend_45 nseg = 17
    dend_43 nseg = 13
    dend_28 nseg = 13
    dend_25 nseg = 9
    dend_26 nseg = 5
    dend_21 nseg = 5
    dend_6 nseg = 5
    dend_3 nseg = 3
    dend_37 nseg = 5
    dend_35 nseg = 9
    dend_34 nseg = 9
    dend_22 nseg = 3
    dend_16 nseg = 5
    dend_8 nseg = 5
    dend_7 nseg = 3
    dend_4 nseg = 13
    dend_40 nseg = 3
    dend_39 nseg = 11
    dend_20 nseg = 9
    dend_17 nseg = 5
    dend_15 nseg = 13
    dend_12 nseg = 5
    dend_41 nseg = 3
    dend_19 nseg = 5
    dend_14 nseg = 5
    dend_13 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L4_NBC_c61eec6aeb_0_0


