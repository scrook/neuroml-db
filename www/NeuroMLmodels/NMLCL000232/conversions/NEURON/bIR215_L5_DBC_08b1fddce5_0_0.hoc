// Cell: bIR215_L5_DBC_08b1fddce5_0_0
/*
{
  "id" : "bIR215_L5_DBC_08b1fddce5_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.46438, -10.9587, 0.660551, 2.48146", "-1.32683, -9.87667, 0.597834, 3.97794", "-1.18928, -8.79467, 0.535117, 5.03907", "-1.05173, -7.71267, 0.4724, 6.13889", "-0.914177, -6.63067, 0.409682, 7.21767", "-0.776625, -5.54866, 0.346965, 8.03623", "-0.639073, -4.46666, 0.284248, 8.69756", "-0.501522, -3.38466, 0.221531, 9.05897", "-0.36397, -2.30266, 0.158814, 9.32273", "-0.226418, -1.22066, 0.0960968, 9.64559", "-0.0888665, -0.138661, 0.0333797, 9.88524", "0.0486852, 0.943339, -0.0293375, 9.94228", "0.186237, 2.02534, -0.0920546, 10.0768", "0.323789, 3.10734, -0.154772, 10.303", "0.46134, 4.18934, -0.217489, 10.477", "0.598892, 5.27134, -0.280206, 10.0133", "0.736444, 6.35334, -0.342923, 9.03357", "0.873996, 7.43534, -0.40564, 7.79644", "1.01155, 8.51734, -0.468357, 6.40893", "1.1491, 9.59934, -0.531074, 4.35077", "1.28665, 10.6813, -0.593792, 2.55388" ]
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "2.53825, -1.11031, -8.8572, 1.11", "2.59532, -2.21886, -8.98441, 1.11", "2.69279, -4.29014, -9.27899, 1.11", "2.75394, -5.45979, -9.48316, 1.03", "2.83278, -7.00132, -9.76594, 1.03", "2.90107, -8.88738, -10.3069, 1.03", "2.90235, -10.4148, -10.8694, 1.18", "2.85627, -11.8907, -11.5278, 1.18", "2.76059, -13.3846, -12.3372, 1.4", "2.64247, -14.2468, -13.0006, 1.55", "2.09444, -17.0451, -15.6795, 1.25", "1.76314, -18.4696, -17.4284, 1.25", "1.62189, -19.0791, -18.3491, 1.47", "1.39303, -20.4481, -20.6394, 1.69", "1.15645, -23.1891, -25.3804, 1.69", "1.1567, -23.2256, -25.443, 1.69", "1.39919, -25.5932, -29.2485, 1.33", "1.66717, -27.1922, -31.5926, 1.11", "1.94145, -28.6914, -33.4966, 1.25", "2.20159, -30.1546, -34.8895, 1.4", "2.313, -31.1547, -35.5189, 1.4", "2.31385, -32.4246, -36.1832, 1.33", "2.06897, -34.1389, -36.8047, 1.18", "1.69788, -35.4354, -37.2707, 1.18", "1.08287, -36.9787, -37.9357, 1.33", "0.255161, -38.9428, -38.9108, 1.03", "-0.31349, -40.4173, -39.6803, 1.25", "-0.607902, -41.3419, -40.169, 1.62", "-1.13771, -43.4752, -41.2791, 1.62", "-1.39841, -45.0059, -42.0161, 1.03", "-1.61348, -47.5477, -43.0661, 1.03", "-1.63792, -49.4766, -43.7158, 1.18", "-1.56318, -51.2832, -44.23, 1.18", "-1.51376, -51.9125, -44.3889, 1.55", "-1.41411, -52.9762, -44.5984, 1.55", "-1.29488, -54.4313, -44.8917, 1.69", "-1.20924, -55.9363, -45.2975, 1.84", "-1.16287, -57.3072, -45.7946, 1.47", "-1.12026, -59.182, -46.5639, 1.18", "-1.11981, -60.7947, -47.2938, 1.18", "-1.15536, -62.6346, -48.2025, 1.18", "-1.15925, -64.6804, -49.1303, 1.33", "-1.07366, -66.3802, -49.7313, 1.03", "-0.948381, -67.6821, -50.1625, 1.03", "-0.765774, -69.0457, -50.5547, 1.03", "-0.522522, -70.7605, -51.0138, 1.33", "-0.09805, -74.2724, -51.947, 1.33", "0.17886, -77.3576, -52.859, 1.33", "0.316494, -79.5549, -53.6059, 1.18", "0.387162, -80.8074, -54.0926, 1.4", "0.540305, -83.1056, -55.1753, 1.4", "0.706022, -85.5096, -56.5236, 1.33", "0.859069, -87.6309, -57.9749, 1.18", "0.867054, -87.7103, -58.0338, 1.18", "1.06344, -89.1195, -59.0711, 1.47", "1.44431, -91.1389, -60.5999, 1.84", "1.76866, -92.3683, -61.5046, 1.62", "2.2616, -93.8465, -62.5506, 1.55", "2.86697, -95.5712, -63.7634, 1.33", "3.33724, -97.065, -64.8471, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.511751, -10.6128, 0.0228061, 3.68", "-0.487533, -10.7064, 0.0228061, 3.68", "-0.290504, -11.4676, 0.0228061, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.07825, 11.2482, 0.142806, 2.43", "1.41861, 11.9951, 0.142806, 2.43", "2.06064, 13.3864, 0.142806, 2.14", "2.50827, 14.3877, 0.147266, 1.92", "2.67559, 14.7732, 0.150011, 1.92", "2.92105, 15.3237, 0.154677, 1.92", "3.08646, 15.6832, 0.157873, 1.92", "3.34802, 16.2219, 0.163363, 1.92", "3.5594, 16.6438, 0.167782, 1.99", "3.87715, 17.2769, 0.173632, 1.99", "4.34458, 18.2592, 0.18116, 1.99", "4.72845, 19.0764, 0.186291, 1.99", "5.13398, 19.9802, 0.190441, 1.99", "5.57861, 21.0534, 0.17407, 2.21", "5.95389, 22.0861, 0.140784, 2.21", "6.19051, 22.8607, 0.0942602, 1.99", "6.27177, 23.1982, 0.060563, 1.99", "6.41737, 23.9529, -0.035326, 1.99", "6.55767, 24.9211, -0.173406, 2.06", "6.68657, 26.1322, -0.376647, 1.92", "6.78325, 27.3029, -0.60732, 1.92", "6.8799, 28.6104, -0.912409, 1.99", "6.92312, 29.2964, -1.09821, 2.14", "6.99217, 30.4449, -1.42473, 2.14", "7.07235, 31.8602, -1.84149, 1.99", "7.10963, 32.7223, -2.12217, 2.06", "7.12513, 33.7532, -2.47733, 2.43", "7.12663, 34.5533, -2.78445, 2.65" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.28665, 10.6813, -0.593792, 0.551279", "3.17833, 25.5615, -0.593792, 0.551279", "5.07001, 40.4418, -0.593792, 0.551279" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "3.33724, -97.065, -64.8471, 0.52", "2.4757, -98.2055, -66.2203, 0.52", "1.91106, -99.1659, -67.2773, 0.52", "1.62534, -99.9385, -68.0676, 0.52", "1.39746, -101.124, -69.2287, 0.52", "1.36131, -101.724, -69.8075, 1.11", "1.3639, -102.457, -70.4746, 1.4", "1.47827, -103.037, -70.9337, 1.69", "1.82719, -104.143, -71.7268, 1.62", "2.18667, -105.054, -72.3468, 1.4", "2.70987, -106.275, -73.1246, 0.88", "3.03859, -107.046, -73.6115, 0.66", "3.48978, -108.157, -74.2605, 0.66", "3.75092, -108.826, -74.65, 0.88", "4.04033, -109.618, -75.0737, 1.11", "4.30031, -110.283, -75.3922, 1.18", "4.5824, -110.925, -75.6691, 1.18", "4.82586, -111.415, -75.9077, 1.18" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "3.33724, -97.065, -64.8471, 0.66", "2.84717, -98.2612, -64.3779, 0.66", "2.36708, -99.1118, -63.9643, 0.52", "2.3263, -99.1728, -63.9353, 0.52", "1.55301, -100.218, -63.4333, 0.74", "0.798446, -101.222, -62.995, 0.88", "0.225878, -101.977, -62.651, 0.74", "-0.579062, -102.982, -62.1224, 0.37", "-1.15123, -103.725, -61.6927, 1.18", "-1.73307, -104.593, -61.1715, 1.4", "-2.31302, -105.59, -60.5556, 0.96", "-2.77824, -106.659, -59.7615, 0.74", "-3.09625, -107.742, -58.8092, 0.29", "-3.2695, -108.76, -57.8497, 0.74", "-3.32216, -109.443, -57.1764, 0.96", "-3.32279, -109.492, -57.1309, 0.96", "-3.31222, -111.414, -55.5049, 0.59", "-3.33392, -112.289, -54.9422, 1.11", "-3.39273, -113.007, -54.5879, 1.25", "-3.52639, -113.733, -54.3426, 1.18", "-3.88699, -115.015, -54.0047, 0.81", "-4.27447, -116.122, -53.7916, 0.59", "-4.77565, -117.3, -53.6758, 0.44", "-4.81553, -117.383, -53.6677, 0.44", "-5.30917, -118.256, -53.5484, 0.29", "-6.16283, -119.554, -53.3334, 0.29", "-6.7199, -120.346, -53.1863, 0.81", "-7.1401, -120.977, -53.0702, 1.33", "-7.55374, -121.692, -52.9946, 1.33", "-8.12281, -122.916, -53.0237, 0.96", "-8.41559, -123.787, -53.1514, 0.81", "-8.63104, -124.737, -53.3911, 0.81", "-8.81299, -125.904, -53.7579, 0.74", "-8.97093, -127.47, -54.309, 0.44", "-9.05267, -128.878, -54.8835, 0.66", "-9.0805, -129.788, -55.3045, 0.74", "-9.12119, -130.611, -55.6938, 1.03", "-9.21771, -131.57, -56.1396, 1.25", "-9.387, -132.574, -56.5609, 1.11", "-9.66795, -133.8, -57.0007, 0.59", "-9.9271, -134.797, -57.3199, 0.59", "-10.2134, -135.846, -57.6696, 0.66", "-10.4236, -136.606, -57.9192, 0.66", "-10.7265, -137.771, -58.2653, 0.52", "-10.9778, -138.854, -58.5772, 0.52", "-11.1562, -139.809, -58.8222, 0.59", "-11.3204, -141.042, -59.1623, 1.25", "-11.3616, -141.518, -59.3042, 1.4", "-11.4041, -142.379, -59.5713, 1.4", "-11.4565, -143.637, -59.909, 0.88", "-11.4973, -144.442, -60.0826, 0.52", "-11.6265, -145.837, -60.3252, 0.52", "-11.7788, -146.709, -60.3502, 0.52", "-11.802, -146.799, -60.3394, 0.52", "-12.2245, -148.138, -59.9402, 0.52", "-12.2471, -148.208, -59.911, 0.52", "-12.4257, -148.783, -59.6389, 0.96", "-12.8494, -150.329, -58.8513, 1.33", "-13.1138, -151.503, -58.3086, 0.66", "-13.3341, -152.648, -57.8607, 0.59", "-13.5151, -153.762, -57.5225, 0.74", "-13.5299, -153.851, -57.5002, 0.74", "-13.6922, -154.794, -57.3318, 0.74", "-13.8493, -155.546, -57.2699, 1.03", "-14.0364, -156.156, -57.2361, 1.25", "-14.3422, -156.931, -57.2239, 1.18", "-14.6786, -157.641, -57.2245, 0.59", "-15.0629, -158.359, -57.2394, 0.29", "-15.4188, -158.955, -57.2663, 0.29", "-15.7041, -159.41, -57.2917, 0.81", "-15.9511, -159.803, -57.317, 1.11", "-16.3095, -160.421, -57.3604, 1.11", "-16.6814, -161.214, -57.4106, 0.59", "-16.7063, -161.302, -57.4148, 0.59", "-16.7764, -162.089, -57.4377, 0.44", "-16.7677, -162.169, -57.4384, 0.44", "-16.5379, -162.976, -57.4296, 0.44", "-16.2534, -163.654, -57.4264, 0.81", "-15.9096, -164.353, -57.4261, 1.11", "-15.6892, -164.792, -57.4443, 1.11", "-15.3847, -165.408, -57.5013, 0.88", "-15.1334, -165.977, -57.5752, 0.66", "-14.8432, -166.729, -57.6968, 0.66", "-14.5943, -167.505, -57.8342, 0.44", "-14.3809, -168.345, -57.9838, 0.29", "-14.2123, -169.299, -58.1456, 0.88", "-14.1421, -170.027, -58.2525, 0.88", "-14.1332, -170.615, -58.3221, 0.88", "-14.1777, -171.445, -58.391, 0.74", "-14.2635, -172.28, -58.4382, 0.37", "-14.3655, -173.059, -58.4535, 0.29", "-14.524, -174.198, -58.457, 0.29", "-14.6497, -175.129, -58.4596, 0.81", "-14.7502, -175.989, -58.4615, 1.03", "-14.7569, -176.083, -58.4614, 1.03", "-14.7617, -176.826, -58.4581, 1.18", "-14.7335, -177.661, -58.4534, 1.33", "-14.6887, -178.389, -58.4496, 1.33", "-14.6, -179.499, -58.4522, 0.59", "-14.5125, -180.596, -58.462, 0.44", "-14.443, -181.574, -58.4758, 0.44", "-14.3844, -182.469, -58.4896, 0.81", "-14.3279, -183.474, -58.5059, 1.11", "-14.3015, -184.398, -58.5228, 1.11", "-14.324, -184.977, -58.5369, 1.25", "-14.4498, -185.894, -58.5661, 1.11", "-14.6997, -187.028, -58.6325, 0.66", "-14.923, -187.833, -58.6966, 0.37", "-15.1937, -188.602, -58.7731, 0.29", "-15.5923, -189.706, -58.8894, 0.37", "-15.8143, -190.492, -59.01, 0.52", "-15.9459, -191.333, -59.139, 0.88", "-15.9625, -191.907, -59.2212, 1.03", "-15.9398, -192.158, -59.2533, 1.03", "-15.77, -193.455, -59.3199, 0.74", "-15.5642, -194.928, -59.3174, 0.59", "-15.4253, -196.089, -59.2836, 0.59", "-15.3678, -196.707, -59.2219, 1.4", "-15.3126, -197.409, -59.1252, 1.77", "-15.208, -199.343, -58.7489, 0.81", "-15.1904, -200.33, -58.4974, 0.81", "-15.2099, -201.685, -58.0327, 0.81", "-15.2158, -203.008, -57.5314, 1.11", "-15.1992, -203.662, -57.2596, 1.11", "-15.1329, -204.696, -56.8071, 0.88", "-15.1231, -204.818, -56.7508, 0.88", "-15.0946, -205.843, -56.2609, 0.59", "-15.1603, -206.902, -55.7851, 0.59", "-15.2441, -207.736, -55.4565, 0.52", "-15.3383, -208.449, -55.1901, 0.52", "-15.5731, -210.131, -54.6444, 0.74", "-15.6891, -210.906, -54.4155, 1.33", "-15.8657, -211.915, -54.1648, 1.69" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-0.290504, -11.4676, 0.0228061, 2.73", "0.0239675, -13.9438, -0.0234584, 2.73", "0.316255, -16.4759, -0.0672333, 2.14", "0.517353, -18.4704, -0.0981978, 2.14", "0.721257, -20.7535, -0.130469, 2.28", "0.89417, -22.9351, -0.184533, 2.14", "1.1107, -25.7641, -0.271822, 1.92", "1.2343, -27.8427, -0.368337, 2.06", "1.35444, -30.7327, -0.535686, 1.84", "1.38635, -33.4278, -0.747758, 1.84", "1.36282, -35.4602, -0.941238, 1.84", "1.26287, -38.0197, -1.24029, 1.92", "1.06276, -40.4774, -1.61305, 1.92", "0.781533, -42.5025, -1.98577, 1.92", "0.342943, -44.5354, -2.39395, 1.84", "-0.260804, -46.7092, -2.84876, 1.84", "-0.708603, -48.0171, -3.13195, 1.77", "-1.77434, -50.7403, -3.75333, 1.69", "-2.9941, -53.5855, -4.40753, 1.69", "-4.06724, -55.9035, -4.96291, 1.84", "-4.1092, -55.9849, -4.98138, 1.84", "-4.74302, -57.0485, -5.23244, 2.06" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-0.290504, -11.4676, 0.0228061, 0.96", "-0.37879, -12.7755, -0.656412, 0.96", "-0.528288, -14.088, -1.21546, 1.25", "-0.787589, -15.6361, -1.76322, 0.96", "-1.00987, -16.6434, -2.01444, 1.25", "-1.20345, -17.355, -2.1499, 1.47", "-1.47895, -18.274, -2.29663, 1.11", "-1.89117, -19.4533, -2.3891, 0.96", "-2.37021, -20.5782, -2.39609, 1.11", "-3.08816, -22.0, -2.35835, 1.11", "-3.61226, -22.9209, -2.34933, 1.11", "-3.65677, -22.9917, -2.34997, 1.11", "-4.27144, -23.846, -2.38497, 0.96", "-4.30047, -23.8816, -2.3892, 0.96", "-4.89395, -24.4966, -2.53516, 1.03", "-5.3312, -24.9192, -2.69372, 1.25", "-5.37342, -24.9631, -2.70994, 1.25", "-5.96393, -25.6083, -2.94513, 0.88", "-6.52209, -26.2632, -3.18046, 0.88", "-7.22567, -27.1533, -3.51515, 1.11", "-7.77355, -27.9166, -3.80008, 1.11", "-8.28973, -28.6935, -4.08892, 1.25", "-8.33756, -28.7771, -4.11725, 1.25", "-8.77412, -29.7228, -4.41975, 0.96", "-9.15622, -30.712, -4.70719, 0.96", "-9.43416, -31.5404, -4.92996, 1.03", "-9.45365, -31.5997, -4.94493, 1.03", "-9.79857, -32.6304, -5.18961, 1.03", "-10.0694, -33.4354, -5.35902, 1.03", "-10.3103, -34.1532, -5.47114, 1.25", "-10.5641, -34.9108, -5.54893, 1.62", "-10.9659, -36.0472, -5.63256, 1.25", "-11.2781, -36.8821, -5.67294, 1.18", "-11.5358, -37.4845, -5.66627, 1.18", "-11.8819, -38.217, -5.6087, 1.33", "-12.3266, -39.0535, -5.50756, 1.33", "-12.7429, -39.7829, -5.41334, 1.03", "-12.7684, -39.8242, -5.40781, 1.03", "-13.2388, -40.59, -5.36165, 0.81", "-13.5849, -41.1806, -5.40091, 0.66", "-13.9187, -41.7843, -5.54963, 0.81", "-14.3059, -42.5401, -5.88059, 1.03", "-14.4968, -42.9553, -6.1158, 1.33", "-14.7013, -43.5162, -6.47628, 1.62", "-14.883, -44.1802, -6.92804, 1.55", "-15.0442, -44.9264, -7.40861, 1.18", "-15.2121, -45.8182, -7.92066, 0.96", "-15.221, -45.868, -7.9456, 0.96", "-15.4161, -47.0248, -8.44623, 0.88", "-15.5867, -48.0219, -8.79293, 0.88", "-15.722, -48.8948, -9.02163, 1.18", "-15.8406, -49.7752, -9.20542, 1.4", "-15.9772, -50.7557, -9.39004, 1.4", "-16.0939, -51.4345, -9.53281, 1.18", "-16.2723, -52.2122, -9.71046, 0.96", "-16.4805, -52.911, -9.90948, 1.11", "-16.8237, -53.7841, -10.259, 0.88", "-17.1243, -54.4535, -10.567, 0.74", "-17.4912, -55.1165, -10.9202, 0.96", "-17.7802, -55.5472, -11.1976, 1.25", "-18.224, -56.0761, -11.6186, 1.33", "-18.8209, -56.6181, -12.1477, 1.4" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "7.12663, 34.5533, -2.78445, 1.4", "6.4068, 36.7953, -3.50938, 1.4", "5.99287, 38.362, -3.90017, 1.4", "5.44426, 40.6491, -4.15564, 1.25", "5.36296, 41.0101, -4.13817, 1.25", "5.12696, 42.1062, -3.9918, 1.03", "4.84977, 43.4268, -3.76542, 1.03", "4.63547, 44.7044, -3.4165, 1.18", "4.28651, 46.7123, -2.5664, 1.33", "3.95836, 48.544, -1.54363, 1.33", "3.73872, 49.8306, -0.777168, 1.47", "3.60121, 50.7803, -0.204525, 1.47", "3.4648, 52.097, 0.537846, 1.47", "3.29686, 54.9501, 1.95298, 1.4", "3.27709, 56.7449, 2.69592, 1.4", "3.3121, 57.9308, 3.09835, 1.4", "3.42269, 59.5719, 3.573, 1.62", "3.60483, 61.4768, 4.00375, 1.18", "3.80503, 63.0293, 4.21509, 1.18", "3.82494, 63.1539, 4.21858, 1.18", "4.12148, 65.2183, 4.21687, 1.18", "4.3174, 66.8747, 4.21743, 1.47", "4.36718, 67.3943, 4.21773, 1.47", "4.52183, 69.1557, 4.22039, 1.4", "4.68558, 71.021, 4.22666, 1.33", "4.87546, 73.2578, 4.23719, 1.33", "5.03498, 75.3613, 4.25212, 1.62", "5.11934, 76.892, 4.26363, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.12663, 34.5533, -2.78445, 1.18", "8.59561, 34.9187, -2.23692, 1.18", "9.93499, 35.1912, -1.49047, 0.96", "10.6649, 35.3246, -1.06179, 1.25", "10.7477, 35.3441, -1.00565, 1.25", "11.9473, 35.6781, -0.185393, 1.25", "13.0631, 36.0597, 0.566624, 1.25", "15.0788, 36.7977, 1.91904, 1.18", "16.014, 37.1963, 2.53226, 0.81", "17.304, 37.8495, 3.39011, 0.96", "18.2989, 38.4743, 4.00166, 0.96", "19.0917, 39.1491, 4.40839, 0.96", "19.1468, 39.2044, 4.42513, 0.96", "20.0708, 40.165, 4.47295, 0.96", "20.1336, 40.2324, 4.47041, 0.96", "20.9723, 41.1139, 4.356, 1.18", "22.0611, 42.2515, 4.19905, 1.4", "22.9659, 43.1528, 4.0758, 1.33", "23.0694, 43.2527, 4.06852, 1.33", "24.0818, 44.1643, 4.07778, 1.18", "24.2549, 44.3009, 4.10843, 1.18", "25.0131, 44.83, 4.35946, 1.18", "25.2126, 44.9535, 4.47033, 1.18", "26.2078, 45.5401, 5.18212, 0.96", "27.1576, 46.1039, 5.94602, 0.96", "28.4496, 46.9422, 7.14014, 1.03", "28.5448, 47.0146, 7.23017, 1.03", "29.9544, 48.3118, 8.56172, 1.03", "30.0432, 48.3985, 8.64755, 1.03", "30.5432, 48.9557, 9.14528, 1.03", "31.2012, 49.8305, 9.81392, 1.18", "32.033, 51.1596, 10.492, 1.4", "32.7138, 52.3098, 10.9318, 1.62" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.07001, 40.4418, -0.593792, 0.15", "6.9617, 55.322, -0.593792, 0.15", "8.85338, 70.2023, -0.593792, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "4.82586, -111.415, -75.9077, 0.52", "4.04954, -111.934, -76.6094, 0.52", "3.06059, -112.639, -77.4246, 0.52", "2.68244, -112.964, -77.7661, 0.96", "1.90172, -113.814, -78.6141, 1.33", "1.49842, -114.367, -79.1251, 0.81", "1.03836, -115.201, -79.8236, 0.52", "1.02553, -115.252, -79.8569, 0.52", "1.10078, -116.472, -80.6034, 0.88", "1.36357, -117.391, -81.1696, 1.25", "1.60699, -117.9, -81.4936, 1.47", "2.0256, -118.587, -81.9689, 1.47", "2.57895, -119.357, -82.5188, 0.88", "3.42655, -120.473, -83.3407, 0.88", "3.87031, -121.032, -83.7974, 0.37", "4.33274, -121.681, -84.3682, 0.66", "4.36353, -121.735, -84.4219, 0.66", "4.49723, -122.1, -84.7929, 0.96", "4.64914, -123.081, -85.7251, 1.11", "4.56825, -124.481, -86.8639, 0.44", "4.43929, -125.233, -87.4104, 0.44", "4.19597, -126.355, -88.1948, 0.52", "4.05696, -126.973, -88.6282, 0.74", "3.86853, -127.658, -89.0793, 0.74", "3.59229, -128.515, -89.6365, 1.03", "3.17886, -129.95, -90.5957, 0.88", "2.86903, -131.34, -91.5756, 1.18", "2.68841, -132.685, -92.6182, 0.96", "2.66373, -133.784, -93.6689, 0.59", "2.72592, -135.002, -95.0219, 0.29", "2.82073, -135.9, -96.1324, 0.88", "2.84929, -136.164, -96.4846, 1.47", "2.96116, -137.259, -97.9731, 1.33", "3.07824, -138.891, -100.169, 0.52", "3.0852, -139.326, -100.723, 0.29", "3.03701, -139.704, -101.113, 0.96", "2.76388, -140.756, -102.036, 1.77", "2.64365, -141.2, -102.404, 1.77", "2.35426, -142.183, -103.115, 1.11", "2.17582, -142.992, -103.773, 0.37", "2.14647, -143.548, -104.419, 0.29", "2.20269, -144.367, -105.57, 0.74", "2.4449, -145.55, -107.409, 1.33", "2.45552, -145.586, -107.469, 1.33", "2.89869, -146.676, -109.564, 1.55", "3.5229, -148.051, -112.384, 0.96", "3.53697, -148.084, -112.452, 0.96", "3.67434, -148.507, -113.241, 1.18", "3.68155, -148.54, -113.292, 1.18", "3.8249, -149.887, -115.009, 0.44", "3.73987, -150.602, -115.645, 0.37", "3.61757, -151.205, -116.247, 0.52", "3.53396, -151.677, -116.82, 0.81", "3.44806, -152.24, -117.538, 1.33", "3.41284, -152.625, -118.035, 0.96", "3.41085, -153.853, -119.618, 1.25", "3.67837, -156.425, -122.969, 0.52", "3.91472, -157.635, -124.591, 0.44", "4.09455, -158.241, -125.414, 0.59", "4.49824, -159.257, -126.793, 0.59", "5.00443, -160.237, -128.07, 0.74", "5.34108, -160.753, -128.664, 1.18", "5.37534, -160.802, -128.704, 1.18", "5.76334, -161.286, -129.069, 1.47", "5.80496, -161.333, -129.104, 1.47", "6.75729, -162.455, -129.76, 1.18", "6.798, -162.512, -129.788, 1.18", "7.16142, -163.175, -130.059, 1.18", "7.5949, -164.301, -130.529, 0.52", "7.75006, -165.04, -130.845, 0.29", "7.84084, -165.881, -131.233, 0.29", "7.86505, -166.456, -131.514, 0.88", "7.86642, -167.24, -131.944, 1.11", "7.805, -168.734, -132.821, 0.81", "7.7648, -169.684, -133.479, 0.37", "7.76878, -170.688, -134.482, 0.29", "7.78227, -171.148, -135.076, 0.96", "7.7831, -171.191, -135.148, 0.96", "7.76829, -171.559, -135.89, 1.18", "7.63465, -172.33, -137.62, 1.11", "7.18613, -173.644, -140.749, 0.44", "6.97365, -174.041, -141.723, 0.74", "6.51688, -174.719, -143.296, 0.59", "6.21223, -175.117, -144.132, 0.81", "5.70448, -175.682, -145.157, 0.44", "5.33332, -176.095, -145.641, 0.59", "5.2924, -176.149, -145.672, 0.59", "4.82788, -176.974, -146.002, 0.52", "4.53188, -177.644, -146.21, 1.03", "4.25456, -178.446, -146.46, 1.4", "3.88936, -179.68, -146.814, 1.33", "3.66493, -180.543, -147.12, 1.11", "3.52471, -181.4, -147.554, 0.59", "3.52137, -181.464, -147.594, 0.59", "3.56956, -182.043, -148.055, 0.44", "3.77798, -182.966, -148.97, 0.44", "4.12031, -183.987, -150.155, 0.74", "4.68226, -185.433, -151.969, 0.74", "4.82195, -185.779, -152.404, 1.25", "5.227, -186.848, -153.76, 1.55", "5.63261, -187.995, -155.241, 1.77", "6.03752, -189.386, -157.082, 0.74", "6.15158, -190.124, -158.001, 0.52", "6.1458, -190.623, -158.577, 0.52", "6.00939, -191.676, -159.762, 0.96", "5.88388, -192.119, -160.21, 1.18", "5.39712, -193.187, -161.233, 0.52", "5.07292, -193.701, -161.725, 0.52", "4.8382, -194.005, -162.037, 0.66", "4.80006, -194.047, -162.082, 0.66", "4.46675, -194.351, -162.414, 0.44", "3.58326, -195.041, -163.184, 0.29", "3.52881, -195.073, -163.218, 0.29", "3.10323, -195.274, -163.459, 0.52", "2.66531, -195.462, -163.662, 0.81", "2.13018, -195.709, -163.839, 0.96", "1.59781, -195.968, -163.948, 1.11", "0.85725, -196.372, -164.004, 0.29", "0.762903, -196.429, -164.007, 0.29", "-0.0592134, -196.937, -164.001, 0.29", "-0.813134, -197.39, -163.975, 0.88", "-1.08597, -197.55, -163.958, 1.03", "-1.70604, -197.875, -163.92, 1.18", "-2.64783, -198.279, -163.898, 0.29", "-3.7646, -198.659, -163.926, 0.29", "-4.22358, -198.778, -163.976, 0.59", "-4.29157, -198.794, -163.99, 0.59", "-5.07363, -198.981, -164.228, 0.59", "-5.83348, -199.211, -164.536, 1.11", "-6.47169, -199.472, -164.859, 1.4", "-7.24133, -199.874, -165.303, 0.96", "-8.01419, -200.379, -165.776, 0.59", "-8.90598, -201.078, -166.331, 0.37", "-9.57995, -201.716, -166.749, 0.37", "-9.9931, -202.141, -166.968, 0.74", "-10.0413, -202.194, -166.99, 0.74", "-10.5257, -202.777, -167.136, 0.74", "-10.9073, -203.254, -167.219, 1.03", "-11.3519, -203.817, -167.278, 1.33", "-12.0252, -204.577, -167.335, 1.47", "-12.7811, -205.364, -167.395, 0.37", "-13.7075, -206.303, -167.471, 1.18" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "4.82586, -111.415, -75.9077, 0.52", "5.64634, -112.114, -74.8376, 0.52", "6.58859, -113.015, -73.7326, 0.44", "7.06279, -113.535, -73.2424, 0.88", "7.09985, -113.582, -73.2078, 0.88", "7.40812, -114.011, -72.9432, 1.03", "7.732, -114.509, -72.6857, 0.81", "8.08579, -115.2, -72.5083, 0.29", "8.42519, -115.983, -72.4038, 0.22", "8.66214, -116.585, -72.3387, 0.52", "8.77769, -116.91, -72.3024, 0.74", "9.03711, -117.761, -72.206, 0.29", "9.22536, -118.511, -72.1141, 0.29", "9.37617, -119.26, -72.0237, 0.74", "9.44522, -119.689, -71.9655, 1.03", "9.52233, -120.221, -71.89, 0.96", "9.5894, -120.785, -71.8097, 0.59", "9.68843, -121.583, -71.6728, 0.22", "9.77034, -122.071, -71.5744, 0.37", "9.80173, -122.193, -71.5484, 0.37", "9.99109, -122.686, -71.4577, 0.37", "10.0225, -122.745, -71.4499, 0.37", "10.5719, -123.599, -71.473, 0.29", "10.9804, -124.171, -71.5595, 0.88", "11.2386, -124.531, -71.6372, 1.18", "11.7325, -125.25, -71.8197, 0.29", "12.1879, -125.934, -72.0206, 0.29", "12.8617, -126.993, -72.2987, 0.52", "13.1481, -127.474, -72.4116, 0.81", "13.5978, -128.259, -72.5459, 0.22", "13.7991, -128.631, -72.5843, 0.59", "13.8397, -128.712, -72.5883, 0.59", "14.4302, -130.003, -72.6013, 0.44", "14.8263, -130.916, -72.5777, 0.66", "15.0862, -131.535, -72.5734, 0.59", "15.2998, -132.055, -72.5966, 0.44", "15.6408, -132.908, -72.6793, 0.96", "15.9168, -133.555, -72.8207, 1.33", "16.2382, -134.2, -73.0817, 0.59", "16.2761, -134.261, -73.1138, 0.59", "16.6707, -134.768, -73.4612, 0.59", "16.7027, -134.806, -73.4938, 0.59", "17.3388, -135.629, -74.2946, 0.29", "17.6035, -136.033, -74.7099, 0.44", "17.8141, -136.419, -75.0632, 0.44", "18.0941, -137.007, -75.5465, 0.44", "18.3998, -137.778, -76.0906, 1.33", "18.746, -138.713, -76.6784, 1.11", "19.0396, -139.591, -77.156, 0.52", "19.3298, -140.39, -77.5874, 0.29", "19.351, -140.447, -77.6169, 0.29", "19.5695, -140.937, -77.828, 0.29", "19.9995, -141.558, -78.0452, 0.29", "20.3031, -141.84, -78.1037, 0.96", "20.7121, -142.051, -78.1338, 1.25" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-15.8657, -211.915, -54.1648, 0.29", "-17.5142, -212.572, -53.1926, 0.29", "-18.5259, -213.118, -52.492, 0.29", "-18.8332, -213.296, -52.2777, 0.74", "-18.9114, -213.342, -52.2243, 0.74", "-19.4175, -213.637, -51.9024, 0.74", "-20.5419, -214.203, -51.3575, 0.29", "-21.4252, -214.639, -51.1058, 0.29", "-21.8589, -214.811, -51.0412, 0.74", "-22.2373, -214.924, -51.0307, 1.11", "-22.8739, -215.106, -51.0444, 1.11", "-24.5374, -215.57, -51.1715, 0.29", "-25.0805, -215.745, -51.2207, 0.37", "-25.8515, -216.072, -51.1965, 0.37", "-26.7146, -216.543, -51.051, 0.66", "-27.5842, -217.133, -50.8017, 0.52", "-28.0943, -217.53, -50.6045, 0.96", "-29.0101, -218.302, -50.1815, 1.33", "-30.3521, -219.389, -49.6026, 0.59", "-30.9562, -219.867, -49.3161, 0.37", "-31.4401, -220.237, -49.0791, 0.22", "-32.2949, -220.866, -48.6836, 0.22", "-33.025, -221.409, -48.3627, 0.66", "-33.9526, -222.154, -48.006, 0.66", "-35.3457, -223.429, -47.5329, 0.52", "-35.5404, -223.631, -47.464, 0.29", "-36.0586, -224.238, -47.304, 0.74", "-36.2784, -224.527, -47.2126, 0.74", "-37.2632, -225.912, -46.7598, 0.37", "-38.0728, -227.129, -46.3923, 0.44", "-38.4757, -227.73, -46.2529, 0.59", "-39.1824, -228.764, -46.0203, 0.52", "-40.7132, -230.864, -45.555, 0.37", "-41.4246, -231.75, -45.3614, 0.37", "-42.2753, -232.692, -45.168, 0.29", "-43.3607, -233.781, -44.953, 0.59", "-43.5807, -233.997, -44.9189, 0.88", "-44.2927, -234.646, -44.8583, 0.66", "-45.1462, -235.364, -44.9118, 0.15", "-46.1294, -236.046, -44.9539, 0.15", "-46.2097, -236.088, -44.9567, 0.15", "-47.168, -236.506, -45.0511, 0.59", "-47.8102, -236.799, -45.1686, 0.88", "-47.8801, -236.835, -45.187, 0.88", "-48.3957, -237.148, -45.3586, 0.88", "-49.1739, -237.716, -45.6704, 0.88", "-50.3337, -238.783, -46.2094, 0.29", "-50.9008, -239.404, -46.4989, 0.29", "-51.3633, -240.024, -46.7509, 0.66", "-51.7265, -240.571, -46.9391, 0.81", "-52.2008, -241.424, -47.1763, 0.66", "-52.7646, -242.585, -47.424, 0.29", "-53.04, -243.197, -47.5191, 0.81", "-53.247, -243.644, -47.5804, 0.81", "-53.7989, -244.678, -47.6994, 0.22", "-54.2232, -245.359, -47.7119, 0.22", "-54.4986, -245.766, -47.6757, 0.81", "-54.7524, -246.095, -47.6194, 0.96", "-55.6244, -247.065, -47.2692, 0.22", "-56.2057, -247.553, -46.8396, 0.22", "-57.038, -248.063, -45.9684, 0.74", "-57.3274, -248.21, -45.6263, 1.18", "-57.8333, -248.441, -44.9903, 0.74", "-59.0238, -248.918, -43.4558, 0.59", "-60.6472, -249.509, -41.3593, 0.44", "-61.9571, -250.047, -39.7206, 0.37", "-62.0236, -250.078, -39.6457, 0.37", "-62.3855, -250.28, -39.2688, 0.66", "-62.7136, -250.557, -38.9037, 0.74", "-63.5092, -251.467, -38.0083, 0.29", "-64.0497, -252.213, -37.3864, 0.29", "-64.5987, -252.955, -36.7216, 0.29", "-64.7358, -253.146, -36.5376, 0.74", "-66.0255, -255.086, -34.466, 0.66", "-66.5478, -255.968, -33.3994, 0.22", "-66.6758, -256.212, -33.0239, 0.22", "-66.9478, -256.676, -32.0194, 0.44" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-15.8657, -211.915, -54.1648, 0.37", "-15.5009, -213.925, -55.6775, 0.37", "-15.3063, -215.034, -56.424, 0.37", "-15.2962, -215.102, -56.4627, 0.37", "-15.2104, -215.819, -56.8328, 0.81", "-15.0965, -216.896, -57.3389, 0.88", "-15.0533, -217.345, -57.5339, 0.88", "-14.9743, -218.264, -57.8588, 0.52", "-14.9155, -219.312, -58.2136, 0.52", "-14.9107, -220.277, -58.5764, 0.52", "-14.953, -220.81, -58.7914, 0.96", "-15.0255, -221.276, -58.9795, 0.96", "-15.2982, -222.531, -59.5236, 0.37", "-15.5161, -223.274, -59.8607, 0.29", "-15.7966, -224.002, -60.2189, 0.59", "-16.1231, -224.672, -60.5499, 0.96", "-16.3966, -225.156, -60.778, 1.18", "-16.4361, -225.219, -60.8041, 1.18", "-16.6867, -225.603, -60.9583, 1.18", "-17.0906, -226.307, -61.2526, 1.03", "-17.4941, -227.144, -61.5816, 0.59", "-17.7255, -227.709, -61.7686, 0.52", "-17.9081, -228.181, -61.8919, 0.66", "-18.3908, -229.381, -62.1196, 0.29", "-18.7437, -230.214, -62.2011, 0.44", "-18.9106, -230.596, -62.1933, 0.52", "-19.4757, -231.809, -62.0666, 0.66", "-19.827, -232.496, -61.9583, 0.37", "-20.2525, -233.255, -61.8087, 0.88", "-20.5217, -233.686, -61.7113, 1.18", "-21.0752, -234.527, -61.5443, 0.96", "-21.4529, -235.126, -61.4537, 0.66", "-21.7022, -235.575, -61.3947, 1.03", "-22.0857, -236.432, -61.264, 0.52", "-22.4472, -237.52, -61.0773, 0.52", "-22.6118, -238.266, -60.9504, 1.11", "-22.6903, -239.01, -60.8226, 1.11", "-22.722, -240.199, -60.631, 0.74", "-22.7081, -240.872, -60.5314, 0.44", "-22.6572, -241.897, -60.3926, 0.59", "-22.593, -243.294, -60.2393, 0.59", "-22.5889, -244.625, -60.1394, 0.59", "-22.6351, -245.751, -60.0834, 0.52", "-22.7066, -246.469, -60.0721, 1.18", "-22.7749, -246.929, -60.0676, 1.33", "-23.0349, -248.162, -60.0684, 1.18", "-23.2992, -249.141, -60.0671, 0.88", "-23.5404, -249.922, -60.0653, 0.52", "-23.7984, -250.798, -60.0637, 0.66", "-23.8183, -250.889, -60.0599, 0.66", "-23.9018, -251.658, -60.005, 0.81", "-23.9551, -252.542, -59.9288, 0.44", "-23.9681, -253.505, -59.8319, 0.44", "-23.9402, -254.686, -59.696, 0.44", "-23.8269, -256.192, -59.4926, 0.37", "-23.7209, -257.177, -59.3423, 0.29" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-4.74302, -57.0485, -5.23244, 1.03", "-6.11118, -57.4976, -4.76865, 1.03", "-7.01556, -57.9616, -4.30768, 1.03", "-8.10048, -58.7002, -3.67797, 0.96", "-8.8126, -59.3134, -3.25188, 0.96", "-8.90511, -59.4017, -3.19584, 0.96", "-10.7177, -61.3687, -2.11043, 0.81", "-11.3614, -62.2821, -1.68804, 1.11", "-11.9853, -63.2769, -1.26612, 1.11", "-12.7841, -64.6043, -0.729609, 1.03", "-12.8245, -64.6675, -0.70456, 1.03", "-13.6972, -65.9102, -0.177562, 1.03", "-14.3427, -66.769, 0.158543, 1.25", "-14.8836, -67.4776, 0.49599, 1.4", "-15.2497, -67.9491, 0.759266, 1.4", "-15.9308, -68.8823, 1.3533, 1.25", "-16.6084, -69.9893, 2.03987, 1.11", "-16.9513, -70.6898, 2.44872, 1.11", "-17.2924, -71.6232, 2.92943, 1.03", "-17.3327, -71.7615, 2.9866, 1.03", "-17.6148, -72.78, 3.27097, 0.81", "-17.9257, -73.8946, 3.44783, 0.96", "-18.2667, -75.1104, 3.54424, 0.96", "-18.6427, -76.4903, 3.61052, 0.81", "-18.8843, -77.5044, 3.60548, 0.74", "-19.2194, -79.0235, 3.53849, 0.81", "-19.377, -79.8515, 3.46555, 1.11", "-19.5491, -81.0417, 3.33508, 1.11", "-19.6341, -81.9434, 3.22143, 1.11", "-19.7319, -83.6935, 2.9909, 0.88", "-19.7491, -84.5734, 2.90546, 1.11", "-19.743, -85.6064, 2.81645, 1.11", "-19.7345, -86.406, 2.73614, 1.33", "-19.738, -87.2355, 2.65274, 0.96", "-19.7607, -88.2279, 2.55825, 1.11", "-19.7794, -89.44, 2.4499, 1.11", "-19.7752, -90.4506, 2.33768, 1.4", "-19.7745, -91.3373, 2.21954, 1.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-4.74302, -57.0485, -5.23244, 1.47", "-4.73616, -59.023, -5.25383, 1.47", "-4.73194, -60.2399, -5.26701, 1.47", "-4.72273, -62.8908, -5.29573, 1.47", "-4.71659, -64.6588, -5.31488, 1.62", "-4.70908, -66.8226, -5.33831, 1.92", "-4.70181, -68.9158, -5.36098, 1.92" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-18.8209, -56.6181, -12.1477, 0.88", "-19.9399, -56.7018, -12.2904, 0.88", "-20.2695, -56.7479, -12.3562, 1.11", "-20.6386, -56.8229, -12.4689, 0.88", "-21.0967, -56.9275, -12.6263, 0.81", "-21.6253, -57.0835, -12.8333, 0.74", "-22.1231, -57.2737, -13.0402, 0.96", "-22.5949, -57.5236, -13.2901, 0.96", "-23.2277, -57.9408, -13.633, 0.81", "-23.2566, -57.9645, -13.6485, 0.81", "-23.7607, -58.4547, -13.9142, 0.74", "-24.1898, -58.9261, -14.1351, 0.74", "-24.3438, -59.0998, -14.2065, 1.03", "-24.6405, -59.4217, -14.3328, 1.11", "-25.1513, -59.9283, -14.5249, 1.11", "-25.1911, -59.964, -14.5405, 1.11", "-25.7926, -60.4293, -14.7765, 0.88", "-26.5027, -60.9338, -15.0649, 0.88", "-26.817, -61.143, -15.1957, 1.25", "-27.212, -61.3845, -15.365, 1.25", "-27.7557, -61.6935, -15.6047, 1.4", "-28.1573, -61.9205, -15.7804, 1.62" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-18.8209, -56.6181, -12.1477, 0.74", "-18.4294, -57.2271, -13.4594, 0.74", "-17.9364, -58.0303, -15.2143, 0.44", "-17.9024, -58.088, -15.3328, 0.44", "-17.5475, -58.6902, -16.4353, 0.44", "-16.8933, -59.7871, -18.3128, 1.03", "-15.6501, -62.0373, -21.9141, 1.03", "-15.2817, -62.7753, -23.0779, 1.33", "-14.8306, -63.8392, -24.6761, 1.11", "-14.5664, -64.5978, -25.8664, 0.59", "-14.2577, -65.7404, -27.7032, 0.44", "-14.0257, -67.2699, -30.018, 0.44", "-13.9567, -68.2865, -31.5525, 0.88", "-13.9772, -68.7558, -32.3261, 1.25", "-14.2632, -70.5865, -35.4356, 1.25", "-14.2752, -70.6337, -35.5189, 1.25", "-14.3417, -70.855, -35.8744, 1.25", "-14.3549, -70.9078, -35.9421, 1.25", "-14.5663, -72.7491, -37.4505, 0.74", "-14.6167, -73.8706, -38.161, 0.74", "-14.6189, -73.9593, -38.2033, 0.74", "-14.6328, -74.7571, -38.6517, 0.74", "-14.6554, -75.8703, -39.4637, 0.81", "-14.7091, -76.8049, -40.2395, 0.81", "-14.9346, -78.6773, -42.0418, 0.44", "-14.9483, -78.7424, -42.1118, 0.44", "-15.2514, -79.8755, -43.4026, 0.74", "-15.7095, -81.3846, -45.2455, 0.88", "-15.9179, -82.0978, -46.115, 1.03", "-16.23, -83.2521, -47.4387, 1.03", "-16.3866, -84.0017, -48.1515, 1.18", "-16.3961, -84.069, -48.2071, 1.18", "-16.4316, -85.6564, -49.1931, 0.52", "-16.2266, -86.8171, -49.6955, 0.44", "-15.9767, -87.423, -49.9364, 0.81", "-15.6942, -87.9216, -50.12, 0.88", "-15.5881, -88.0963, -50.1944, 0.88", "-15.1175, -88.9207, -50.5593, 0.74", "-14.6058, -89.9387, -51.0168, 0.44", "-14.1891, -90.9983, -51.5223, 0.59", "-13.7787, -92.4635, -52.1837, 0.52", "-13.5444, -93.6311, -52.7052, 0.88", "-13.4312, -94.4332, -53.0496, 1.18", "-13.3401, -95.5901, -53.5638, 0.52", "-13.3402, -96.3548, -53.9, 0.44", "-13.4081, -97.4865, -54.355, 0.44", "-13.5137, -98.4908, -54.7294, 0.74", "-13.5911, -99.0574, -54.9352, 0.74", "-13.8756, -100.869, -55.6264, 0.59", "-14.1143, -102.196, -56.125, 0.66", "-14.2505, -102.947, -56.4273, 1.18", "-14.4484, -104.098, -56.8907, 1.33", "-14.5993, -105.231, -57.3063, 1.11", "-14.6047, -105.324, -57.3412, 1.11", "-14.5812, -106.382, -57.7067, 0.96", "-14.4567, -107.763, -58.1885, 0.66", "-14.3359, -108.815, -58.595, 0.37", "-14.2539, -109.833, -59.0149, 0.29", "-14.2003, -111.62, -59.8359, 1.03", "-14.2095, -112.508, -60.2671, 1.33", "-14.2309, -113.221, -60.6229, 1.47", "-14.3138, -115.055, -61.4737, 0.37", "-14.3525, -116.17, -62.0068, 0.37", "-14.4177, -117.719, -62.7062, 0.29", "-14.4343, -118.301, -62.9322, 0.44", "-14.4465, -119.185, -63.2336, 0.59", "-14.445, -120.581, -63.6427, 0.59", "-14.3995, -122.354, -64.0967, 0.74", "-14.3271, -123.662, -64.4055, 0.59", "-14.2782, -124.842, -64.6521, 0.44", "-14.2219, -126.429, -64.9944, 0.44", "-14.2117, -126.531, -65.0467, 0.44", "-14.018, -127.532, -65.8245, 0.96", "-13.8476, -128.106, -66.3748, 1.4", "-13.8224, -128.174, -66.4448, 1.4", "-13.5614, -128.808, -67.1121, 1.18", "-11.9531, -132.76, -71.2261, 0.59", "-11.6327, -133.594, -72.0622, 0.88", "-11.3584, -134.379, -72.8202, 1.03", "-11.0949, -135.249, -73.6265, 0.52", "-10.8677, -136.265, -74.4538, 0.37", "-10.7434, -137.308, -75.124, 0.37", "-10.7414, -137.389, -75.1481, 0.37", "-10.7344, -137.754, -75.2518, 1.03", "-10.7129, -138.536, -75.4429, 1.03", "-10.6102, -139.741, -75.7234, 0.44", "-10.3445, -141.019, -76.1008, 0.37", "-9.9312, -142.264, -76.5215, 0.88", "-9.64388, -142.994, -76.8356, 1.25", "-9.4199, -143.536, -77.1026, 1.25", "-8.99004, -144.567, -77.6908, 0.81", "-8.25872, -146.478, -78.8652, 0.29", "-8.10334, -146.983, -79.173, 0.29", "-7.83446, -148.166, -79.9159, 0.37", "-7.65095, -149.252, -80.6246, 0.37", "-7.51882, -150.365, -81.3229, 0.66", "-7.46199, -151.298, -81.8422, 1.25", "-7.40757, -152.271, -82.2832, 1.4", "-7.24474, -154.008, -82.9882, 0.81", "-7.0037, -155.59, -83.5457, 0.59", "-6.82262, -156.467, -83.8263, 0.29", "-6.54424, -157.598, -84.1438, 0.29", "-6.16873, -158.896, -84.7108, 0.29", "-6.02689, -159.34, -84.978, 1.03", "-5.99986, -159.417, -85.0331, 1.03", "-5.74338, -160.112, -85.5822, 1.4", "-5.38862, -161.118, -86.4345, 1.4", "-4.35915, -164.147, -89.0633, 0.52", "-3.99795, -165.384, -90.0946, 0.74", "-3.96669, -165.514, -90.1944, 0.74", "-3.76364, -166.5, -90.8931, 0.52", "-3.6087, -167.506, -91.5298, 0.52", "-3.54394, -168.361, -91.9345, 0.74", "-3.51872, -169.563, -92.3438, 0.66", "-3.45459, -171.5, -93.2386, 0.59", "-3.4479, -171.571, -93.2825, 0.59", "-3.32583, -172.4, -93.8745, 0.52", "-3.15341, -173.292, -94.5357, 1.18", "-2.81945, -174.799, -95.6506, 1.62", "-2.21282, -177.054, -97.3574, 1.18", "-1.75942, -178.574, -98.4514, 0.52", "-1.4029, -179.728, -99.2279, 0.37", "-1.05676, -180.823, -99.893, 0.74", "-0.911313, -181.341, -100.161, 1.11", "-0.633662, -182.925, -100.736, 0.88", "-0.629326, -183.846, -100.953, 0.81", "-0.835918, -185.027, -101.213, 0.44", "-1.13909, -185.931, -101.435, 0.59", "-1.57901, -186.882, -101.733, 0.59", "-2.16913, -187.963, -102.105, 0.37", "-2.94344, -189.265, -102.544, 0.29", "-3.45463, -190.124, -102.86, 0.81", "-3.88018, -190.905, -103.173, 1.11", "-4.59003, -192.362, -103.767, 1.4", "-4.89817, -193.072, -104.046, 1.33", "-5.33784, -194.239, -104.454, 0.81", "-5.71967, -195.37, -104.769, 0.52", "-6.2019, -196.878, -105.084, 0.44", "-6.53868, -198.013, -105.26, 0.37", "-6.88778, -199.335, -105.324, 0.37", "-7.16791, -200.585, -105.318, 0.66", "-7.39463, -201.905, -105.242, 0.96", "-7.50608, -202.927, -105.129, 1.03", "-7.55534, -203.952, -104.966, 1.25", "-7.44871, -205.832, -104.649, 0.81", "-7.34304, -206.641, -104.519, 0.52", "-7.16507, -207.76, -104.395, 0.52", "-7.04227, -208.588, -104.349, 0.29", "-6.93294, -209.799, -104.349, 0.29", "-6.9086, -211.456, -104.501, 0.29", "-7.03596, -212.508, -104.711, 0.81", "-7.3125, -213.586, -104.977, 1.11", "-7.65283, -214.461, -105.232, 1.11", "-8.09063, -215.325, -105.51, 0.74", "-8.65421, -216.205, -105.825, 0.37", "-9.49357, -217.378, -106.306, 0.29", "-9.74941, -217.781, -106.467, 0.74", "-9.79809, -217.88, -106.502, 0.74", "-10.0101, -218.543, -106.771, 0.96", "-10.0426, -218.709, -106.839, 0.96", "-10.2366, -220.216, -107.416, 0.29", "-10.373, -221.187, -107.782, 0.29", "-10.4999, -221.865, -108.021, 0.81", "-10.8637, -223.293, -108.489, 1.03", "-11.1584, -224.138, -108.742, 0.81", "-11.6605, -225.223, -109.059, 0.29", "-12.3381, -226.338, -109.369, 0.29", "-12.7666, -226.906, -109.533, 0.44", "-13.3159, -227.574, -109.718, 0.44", "-14.0303, -228.334, -109.9, 0.66", "-14.8638, -229.104, -110.118, 0.96", "-15.3106, -229.457, -110.243, 1.4", "-16.5463, -230.345, -110.631, 1.69" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "5.11934, 76.892, 4.26363, 1.11", "4.77986, 78.5323, 4.38875, 1.11", "4.66803, 79.0068, 4.4173, 0.96", "4.49125, 79.6212, 4.44442, 0.96", "4.27451, 80.3072, 4.46935, 0.96", "3.99274, 81.1081, 4.49499, 0.96", "3.53762, 82.3185, 4.53081, 0.96", "3.50767, 82.3793, 4.53014, 0.96", "3.00225, 83.3103, 4.52127, 1.11", "2.95072, 83.3979, 4.52087, 1.11", "2.5087, 84.1082, 4.52083, 1.11", "2.466, 84.1721, 4.52138, 1.11", "1.98644, 84.872, 4.53175, 1.33", "1.55024, 85.5206, 4.5398, 1.18", "1.10146, 86.2498, 4.54567, 0.96", "1.06496, 86.3199, 4.54573, 0.96", "0.795333, 86.9208, 4.54523, 0.88", "0.495323, 87.7223, 4.54119, 0.88", "0.477583, 87.7874, 4.5406, 0.88", "0.285162, 88.8233, 4.52651, 0.88", "0.16879, 89.8421, 4.50779, 1.11", "0.162915, 89.9397, 4.50591, 1.11", "0.158059, 90.7886, 4.48829, 1.11", "0.181214, 91.5102, 4.47541, 1.33", "0.207572, 91.9596, 4.46892, 1.33", "0.299917, 92.7675, 4.4282, 1.18", "0.423, 93.5594, 4.36395, 1.18", "0.44253, 93.6517, 4.3494, 1.18", "0.651848, 94.4258, 4.17812, 1.11", "0.90045, 95.1989, 3.96921, 1.11", "1.18833, 95.9691, 3.73027, 1.03", "1.4605, 96.666, 3.49241, 0.88", "1.84865, 97.7391, 3.10754, 0.88", "1.88463, 97.8666, 3.06308, 0.88", "2.07033, 98.7672, 2.8185, 0.88", "2.07718, 98.8343, 2.80757, 0.88", "2.04358, 99.566, 2.7913, 0.88", "1.88259, 100.522, 2.86233, 0.88", "1.69213, 101.205, 2.96414, 0.88", "1.3237, 102.253, 3.11908, 0.96", "1.23129, 102.452, 3.14754, 0.96", "0.931634, 103.032, 3.21956, 1.47", "0.637418, 103.577, 3.28764, 1.62", "0.226186, 104.297, 3.38933, 1.11", "-0.182814, 105.011, 3.47788, 1.11", "-0.697616, 105.912, 3.56026, 1.11", "-1.1078, 106.694, 3.64083, 0.96", "-1.45824, 107.435, 3.72678, 0.96", "-1.866, 108.325, 3.8343, 0.96", "-1.89499, 108.399, 3.84245, 0.96", "-2.07497, 108.939, 3.87625, 0.96", "-2.3453, 109.914, 3.83488, 1.18", "-2.36857, 110.007, 3.82285, 1.18", "-2.65907, 111.186, 3.602, 1.18", "-2.95032, 112.399, 3.33562, 1.03", "-3.16332, 113.265, 3.14467, 0.88", "-3.45679, 114.438, 2.87718, 1.03", "-3.66253, 115.25, 2.69246, 1.03", "-3.77003, 115.709, 2.60134, 1.03", "-3.79076, 115.831, 2.58238, 1.03", "-3.90691, 116.598, 2.51328, 1.03", "-3.92733, 116.743, 2.51075, 1.03", "-4.03795, 117.431, 2.57369, 1.03", "-4.24674, 118.605, 2.71817, 1.18", "-4.43975, 119.643, 2.8897, 1.18", "-4.56346, 120.277, 3.01394, 1.18", "-4.70305, 120.964, 3.169, 1.18", "-5.00605, 122.395, 3.50845, 1.18", "-5.21972, 123.404, 3.78059, 1.18", "-5.43194, 124.436, 4.0772, 1.18", "-5.44513, 124.503, 4.09519, 1.18", "-5.56053, 125.105, 4.22682, 1.18", "-5.76964, 126.203, 4.39585, 1.47", "-5.90289, 126.957, 4.45907, 1.47", "-6.03787, 127.705, 4.50286, 1.33", "-6.23014, 128.83, 4.5382, 1.03", "-6.50005, 130.379, 4.57436, 0.96", "-6.72353, 131.65, 4.59204, 0.96", "-6.88753, 132.554, 4.57769, 0.96", "-7.03091, 133.315, 4.54135, 1.11", "-7.11151, 133.761, 4.51502, 1.11", "-7.25745, 134.672, 4.44603, 1.25", "-7.31003, 135.083, 4.40985, 1.25", "-7.44843, 136.118, 4.29837, 1.03", "-7.47538, 136.274, 4.28018, 1.03", "-7.56168, 136.747, 4.24219, 1.03", "-7.65354, 137.22, 4.22338, 1.03", "-7.7478, 137.785, 4.25338, 1.03", "-7.8926, 138.712, 4.37713, 1.03", "-7.98323, 139.399, 4.51851, 1.03", "-8.06002, 140.036, 4.70927, 1.03", "-8.07399, 140.161, 4.75582, 1.03", "-8.1743, 141.137, 5.1666, 1.03", "-8.18074, 141.198, 5.19507, 1.03", "-8.31683, 142.27, 5.69498, 1.03", "-8.4829, 143.379, 6.16298, 1.03", "-8.499, 143.474, 6.19527, 1.03", "-8.59658, 144.223, 6.39202, 1.03", "-8.60195, 144.292, 6.40687, 1.03", "-8.60926, 145.541, 6.64164, 1.03", "-8.60023, 145.685, 6.66305, 1.03", "-8.5216, 146.545, 6.75007, 1.25", "-8.40545, 147.805, 6.87004, 1.25", "-8.30074, 148.865, 6.96728, 1.25", "-8.2345, 149.828, 7.0482, 0.88", "-8.20979, 150.779, 7.10029, 0.74", "-8.24537, 151.575, 7.10555, 1.18", "-8.39303, 152.826, 7.05482, 1.4", "-8.42352, 152.97, 7.04206, 1.4", "-8.70721, 153.968, 6.90906, 1.4", "-9.07913, 155.044, 6.75421, 1.18", "-9.4435, 156.024, 6.60403, 1.03", "-9.46747, 156.087, 6.59352, 1.03", "-9.82472, 156.993, 6.42846, 1.03", "-10.0066, 157.464, 6.34553, 0.88", "-10.4859, 158.785, 6.13767, 1.11", "-10.5094, 158.851, 6.13226, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.11934, 76.892, 4.26363, 0.52", "4.80282, 77.8884, 3.40535, 0.52", "4.47174, 78.6168, 2.73584, 0.74", "4.12099, 79.1323, 2.17412, 0.74", "3.97663, 79.3074, 1.96482, 0.74", "3.71432, 79.5862, 1.49214, 0.74", "3.31042, 79.9755, 0.594369, 0.44", "3.08825, 80.1473, 0.0514846, 0.81", "2.70785, 80.4339, -0.967892, 0.81", "2.68942, 80.4503, -1.02844, 0.81", "2.07336, 81.1372, -3.24558, 1.03", "1.68949, 81.7126, -4.84227, 0.81", "1.58942, 81.9191, -5.31734, 0.81", "1.37104, 82.4342, -6.29594, 0.88", "1.0875, 83.0905, -7.34339, 0.81", "0.806966, 83.5853, -8.08554, 0.81", "0.312324, 84.2267, -8.97021, 0.59", "0.00601556, 84.499, -9.43492, 0.59", "-0.537278, 84.7628, -10.2521, 0.88", "-1.09087, 84.8905, -11.7836, 0.88", "-1.43094, 84.8906, -13.23, 0.88", "-1.56725, 84.8605, -14.0293, 1.25", "-1.77962, 84.7706, -15.5735, 1.25", "-1.99748, 84.654, -17.4747, 1.11", "-2.53468, 84.3709, -23.76, 1.03", "-2.63922, 84.33, -25.5713, 0.66", "-2.64, 84.3322, -25.6441, 0.66", "-2.59934, 84.4592, -27.07, 0.52", "-2.5576, 84.5678, -27.7149, 0.52", "-2.45237, 84.8453, -28.6743, 0.52", "-2.43397, 84.8839, -28.7372, 0.52", "-1.74312, 85.925, -30.2492, 1.25", "-1.59028, 86.1582, -30.5949, 1.69", "-1.55896, 86.2029, -30.6615, 1.69", "-1.40742, 86.4441, -31.0315, 1.69", "-0.924237, 87.5627, -32.833, 0.88", "-0.733211, 88.7212, -34.5644, 0.59", "-0.775364, 89.1456, -35.177, 0.81", "-0.782762, 89.1924, -35.2491, 0.81", "-0.839125, 89.6145, -35.9494, 1.11", "-0.942233, 90.494, -37.4185, 1.11", "-0.995521, 90.9869, -38.2007, 0.96", "-1.01058, 91.9338, -39.7088, 0.88", "-0.95479, 93.1157, -41.4646, 0.81", "-0.812864, 94.1719, -42.9829, 0.52", "-0.707714, 94.4882, -43.4803, 0.52", "-0.494351, 94.8906, -44.1088, 0.59", "-0.434768, 94.9715, -44.2307, 0.59", "0.0526294, 95.5264, -44.9838, 0.59", "0.916923, 96.4419, -46.1648, 0.81", "2.20242, 97.6548, -47.8027, 1.4", "2.66253, 98.0197, -48.3813, 1.62", "3.35232, 98.4575, -49.2003, 1.84", "3.39815, 98.4819, -49.252, 1.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "32.7138, 52.3098, 10.9318, 1.18", "32.1045, 53.9501, 12.0402, 1.18", "31.8769, 54.9783, 12.572, 0.96", "31.8742, 55.0595, 12.6017, 0.96", "32.0396, 56.1774, 12.9099, 0.74", "32.0607, 56.2579, 12.927, 0.74", "32.2842, 56.8724, 13.0347, 0.88", "32.7198, 57.7041, 13.1395, 0.88", "33.2128, 58.5447, 13.2787, 0.59", "33.6671, 59.3066, 13.5234, 0.52", "34.0191, 59.8794, 13.8003, 0.81", "34.4805, 60.6448, 14.2109, 0.52", "35.1895, 61.8541, 14.9886, 0.88", "35.2863, 62.0418, 15.1369, 0.88", "35.7343, 63.0754, 16.1555, 1.33", "35.7842, 63.2353, 16.3493, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "32.7138, 52.3098, 10.9318, 1.11", "34.8222, 51.5362, 8.59286, 1.11", "35.5585, 51.3268, 7.93706, 1.03", "36.4183, 51.0967, 7.26461, 0.88", "38.0301, 50.6727, 6.22335, 0.59", "38.9466, 50.4029, 5.67382, 0.81", "39.769, 50.1404, 5.1867, 0.81", "40.4833, 49.9204, 4.82794, 1.03", "40.786, 49.8558, 4.65461, 1.03", "41.8223, 49.6989, 3.91969, 1.03", "43.3191, 49.4108, 2.66791, 0.66", "44.4486, 49.1172, 1.56103, 0.81", "45.4866, 48.7439, 0.403536, 0.59", "46.4219, 48.3076, -0.777512, 0.96", "47.683, 47.5777, -2.51647, 0.59", "48.5198, 46.9786, -3.78667, 0.59", "49.3086, 46.3185, -4.96569, 0.96", "50.0262, 45.663, -5.92762, 0.81", "50.7538, 44.9758, -6.72808, 0.81", "51.2178, 44.5727, -7.10323, 0.96", "52.3011, 43.8663, -7.73172, 0.37", "53.3311, 43.4599, -8.20531, 0.37", "54.5882, 43.1986, -8.67523, 0.44", "55.4312, 43.1394, -8.96657, 0.81", "56.4184, 43.142, -9.29707, 1.03", "57.8752, 43.1505, -9.80633, 0.52", "58.3955, 43.1142, -10.0144, 0.44", "58.4627, 43.0986, -10.0513, 0.44", "59.8007, 42.4598, -10.908, 0.44", "60.2597, 42.1516, -11.2184, 0.88", "61.0589, 41.485, -11.7212, 1.03", "62.123, 40.5199, -12.2455, 1.03", "63.0908, 39.6616, -12.6347, 0.96", "64.1166, 38.8575, -12.9286, 0.52", "64.1789, 38.8133, -12.939, 0.52", "64.9549, 38.3879, -12.9894, 0.59", "66.0081, 37.9945, -12.9245, 0.59", "66.7786, 37.7986, -12.7858, 0.29", "67.9172, 37.5804, -12.5157, 0.29", "67.99, 37.5672, -12.4985, 0.29", "68.8926, 37.3559, -12.2944, 0.66", "69.6203, 37.1446, -12.1384, 0.81", "70.5231, 36.7642, -11.9489, 0.88", "70.6528, 36.6864, -11.9128, 0.88", "71.3596, 36.1524, -11.6913, 1.03", "71.9275, 35.6986, -11.5188, 1.03", "71.9857, 35.6502, -11.503, 1.03", "72.7281, 35.0208, -11.3044, 0.81", "73.952, 34.0091, -10.9954, 0.37", "74.621, 33.4959, -10.8471, 0.66", "75.1847, 33.0877, -10.741, 0.66", "75.9952, 32.5334, -10.6545, 0.52", "76.666, 32.1099, -10.6533, 0.52", "77.636, 31.5214, -10.7439, 0.96", "78.3546, 31.0612, -10.8835, 1.25", "79.2341, 30.4667, -11.0831, 1.03", "80.1795, 29.7884, -11.3242, 0.81", "81.1891, 29.0757, -11.6011, 0.66", "81.7069, 28.7411, -11.7377, 0.74", "82.3113, 28.3806, -11.8799, 0.74", "83.2115, 27.8868, -12.0287, 0.37", "83.2698, 27.8583, -12.0326, 0.37", "84.0765, 27.5023, -12.0097, 0.29", "85.2392, 27.0611, -12.0452, 0.66", "86.0815, 26.7651, -12.1315, 1.03", "86.9674, 26.4517, -12.2662, 0.74", "88.0063, 26.055, -12.4684, 0.74", "88.65, 25.7685, -12.6112, 0.96", "90.1838, 24.953, -12.9938, 1.18", "90.7734, 24.6121, -13.1555, 0.96", "91.5319, 24.1569, -13.3615, 0.44", "91.6049, 24.1124, -13.3809, 0.44", "92.5126, 23.5361, -13.6318, 0.66", "93.1098, 23.1556, -13.8122, 0.81", "93.3993, 22.9753, -13.9231, 0.81", "94.0855, 22.5797, -14.2469, 0.66", "94.3253, 22.4528, -14.3647, 0.66", "95.2151, 22.0093, -14.7511, 0.66", "96.2384, 21.5373, -15.1455, 0.44", "97.8108, 20.7995, -15.6684, 0.37", "98.6327, 20.3817, -15.9102, 0.88", "99.8063, 19.7416, -16.1543, 0.88", "100.753, 19.2237, -16.2591, 1.03", "101.506, 18.8189, -16.2584, 1.03", "102.218, 18.4663, -16.1894, 0.74", "103.096, 18.0725, -16.0423, 0.52", "104.213, 17.6121, -15.8634, 0.52", "105.161, 17.2248, -15.727, 0.29", "105.243, 17.1903, -15.7218, 0.29", "105.989, 16.8178, -15.706, 0.29", "106.629, 16.422, -15.7444, 0.59", "106.723, 16.3513, -15.7576, 0.59", "107.405, 15.6772, -15.961, 0.88", "108.03, 14.8865, -16.1993, 0.74", "108.593, 14.0275, -16.5175, 0.44", "109.003, 13.2785, -16.8323, 0.29", "109.203, 12.8518, -17.0303, 0.59", "109.454, 12.188, -17.3593, 0.44", "109.611, 11.6166, -17.6685, 0.44", "109.786, 10.5103, -18.2578, 0.81", "109.789, 10.4405, -18.2945, 0.81", "109.759, 9.7653, -18.5943, 1.03", "109.692, 8.94297, -18.9092, 0.88", "109.686, 8.86843, -18.933, 0.88", "109.637, 7.80554, -19.2117, 0.59", "109.636, 7.04469, -19.3571, 0.59", "109.686, 6.1876, -19.4963, 0.88", "109.712, 5.95071, -19.529, 0.88", "109.927, 4.78696, -19.6447, 0.37", "110.106, 4.0895, -19.7029, 0.74", "110.323, 3.42132, -19.7467, 0.96", "110.639, 2.49751, -19.8426, 0.96", "110.664, 2.42394, -19.8519, 0.96", "110.949, 1.63596, -19.9941, 1.25", "111.397, 0.578751, -20.2223, 0.44", "111.728, -0.0600972, -20.4179, 0.37", "112.288, -0.983654, -20.7592, 0.96", "112.823, -1.75522, -21.0716, 0.96", "113.677, -2.8278, -21.5597, 0.74", "114.397, -3.62494, -21.9918, 0.74", "115.334, -4.54831, -22.5393, 0.29", "115.814, -5.00044, -22.7857, 0.52", "116.549, -5.70818, -23.1123, 0.88", "117.171, -6.33372, -23.3601, 1.03", "118.21, -7.4835, -23.7067, 0.29", "118.633, -8.01653, -23.7788, 0.88", "119.395, -9.04521, -23.6667, 0.81", "119.828, -9.61685, -23.4451, 0.96", "120.31, -10.2108, -23.0298, 0.59", "120.357, -10.266, -22.9765, 0.59", "121.315, -11.3109, -21.7496, 0.52", "121.862, -11.8972, -21.0759, 0.52", "122.501, -12.5887, -20.3841, 0.88", "122.544, -12.6386, -20.3438, 0.88", "122.777, -12.9395, -20.1441, 1.03", "123.265, -13.6644, -19.7725, 1.03", "123.707, -14.4896, -19.4697, 0.44", "124.108, -15.4353, -19.1657, 0.44", "124.451, -16.3495, -18.8952, 0.44", "124.805, -17.2806, -18.6036, 0.52", "125.073, -17.9572, -18.3854, 0.44", "125.491, -18.9482, -18.0642, 0.44", "125.791, -19.6201, -17.8605, 0.81", "126.133, -20.3351, -17.6835, 0.81", "126.588, -21.1894, -17.4948, 0.37", "127.067, -22.0339, -17.3515, 0.81", "127.39, -22.5706, -17.2684, 0.88", "127.638, -22.9725, -17.2172, 0.88", "128.053, -23.6658, -17.1192, 0.66", "128.67, -24.7284, -16.9609, 0.44", "129.214, -25.6194, -16.8274, 0.29", "129.677, -26.2867, -16.7645, 0.59", "130.144, -26.9055, -16.7417, 0.74", "130.247, -27.0375, -16.7446, 0.74", "130.734, -27.6642, -16.8352, 0.59", "131.432, -28.6065, -17.1134, 0.44", "132.15, -29.6448, -17.4917, 0.44", "132.472, -30.1733, -17.7017, 0.44", "132.864, -30.9088, -17.9957, 0.74", "133.335, -31.913, -18.3921, 0.74", "133.772, -32.9895, -18.8076, 0.29", "133.939, -33.4483, -18.9828, 0.96", "134.126, -33.9557, -19.1568, 0.96", "134.428, -34.6741, -19.3986, 0.81", "134.463, -34.7443, -19.4188, 0.81", "134.779, -35.2913, -19.5168, 0.96", "135.291, -36.0792, -19.6471, 0.52", "135.67, -36.6262, -19.7436, 0.52", "135.707, -36.6805, -19.7529, 0.52", "136.185, -37.4382, -19.9144, 0.44", "136.71, -38.3407, -20.1305, 0.59", "137.441, -39.6814, -20.4606, 0.29", "137.695, -40.1654, -20.5792, 0.96", "138.099, -40.9702, -20.7818, 1.33", "138.758, -42.3354, -21.1183, 0.29", "139.341, -43.5614, -21.4069, 0.29", "139.67, -44.2574, -21.5577, 0.88", "139.703, -44.3308, -21.5682, 0.88", "140.06, -45.1659, -21.6266, 0.88", "140.572, -46.4678, -21.6059, 0.29", "140.93, -47.4604, -21.4926, 0.29", "141.028, -47.776, -21.4332, 0.66", "141.326, -48.9125, -21.1847, 0.66", "141.528, -49.7474, -20.9829, 0.66", "141.704, -50.5097, -20.7831, 0.96", "141.851, -51.2268, -20.6038, 0.74", "142.004, -52.0386, -20.3998, 0.52", "142.194, -53.0579, -20.1242, 0.44", "142.248, -53.3076, -20.0587, 0.44", "142.51, -54.3515, -19.8183, 0.37", "142.862, -55.5936, -19.5645, 0.37", "143.254, -56.9137, -19.3276, 0.74", "143.639, -57.9951, -19.2177, 0.29", "144.121, -59.0311, -19.1719, 0.29", "144.721, -60.0925, -19.2272, 0.74", "145.028, -60.5044, -19.3004, 1.03", "145.08, -60.5593, -19.3182, 1.03", "146.236, -61.5887, -19.7834, 0.22", "147.203, -62.3932, -20.2117, 0.22", "147.792, -62.8721, -20.4677, 0.81", "148.416, -63.4028, -20.7139, 0.81", "148.47, -63.4532, -20.7355, 0.81", "149.292, -64.327, -21.0361, 0.29", "149.83, -65.0577, -21.2857, 0.44", "149.89, -65.1453, -21.3277, 0.44", "150.252, -65.6482, -21.6079, 0.44", "150.297, -65.7109, -21.6554, 0.44", "150.784, -66.4426, -22.2596, 0.52", "151.495, -67.6359, -23.3811, 0.52", "151.936, -68.365, -24.1794, 0.66", "152.241, -68.8158, -24.7648, 0.59", "152.967, -69.8167, -26.249, 0.37", "153.295, -70.2576, -26.9144, 0.29", "153.966, -71.147, -28.2824, 0.74", "154.75, -72.2194, -29.8285, 0.81", "155.719, -73.6142, -31.7656, 0.29", "156.056, -74.1142, -32.4908, 0.66", "156.483, -74.7302, -33.3852, 0.29", "156.957, -75.4123, -34.3674, 0.59", "157.246, -75.8469, -34.9678, 0.74", "157.899, -76.9271, -36.3777, 1.33", "158.939, -78.7125, -38.6569, 0.29", "159.141, -79.0393, -39.0785, 0.59", "159.288, -79.2597, -39.3632, 0.59", "160.079, -80.3168, -40.6155, 0.52", "160.485, -80.7969, -41.1246, 0.74", "160.823, -81.1543, -41.4139, 0.74", "161.557, -81.8518, -41.825, 0.37", "162.668, -82.846, -42.4202, 0.37", "163.49, -83.5418, -42.7909, 0.37", "163.924, -83.8975, -42.9452, 0.66", "164.343, -84.2361, -43.099, 0.88", "164.682, -84.5133, -43.2328, 0.88", "166.101, -85.6958, -43.8136, 0.29", "167.281, -86.7327, -44.3308, 0.22", "167.511, -86.9504, -44.4382, 0.66", "168.325, -87.7745, -44.8398, 0.22", "168.628, -88.1152, -45.0174, 0.52", "169.146, -88.7837, -45.3613, 0.29", "169.391, -89.1744, -45.5418, 0.74", "169.611, -89.6094, -45.7519, 0.74", "170.009, -90.5099, -46.2056, 0.22", "170.436, -91.6035, -46.7548, 0.37", "170.62, -92.0901, -47.034, 0.37", "170.804, -92.6265, -47.3604, 0.59", "170.969, -93.0904, -47.6385, 0.59", "171.238, -93.8865, -48.1115, 0.22", "171.364, -94.2432, -48.3124, 0.52", "171.87, -95.475, -48.9737, 0.29", "172.147, -96.0731, -49.3345, 1.11", "172.458, -96.6912, -49.746, 1.18" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "-13.7075, -206.303, -167.471, 0.29", "-13.9458, -207.579, -167.705, 0.29", "-14.1347, -208.369, -167.852, 0.29", "-14.4627, -209.299, -167.936, 0.22", "-14.7512, -209.852, -167.913, 0.74", "-15.0159, -210.256, -167.827, 0.88", "-15.0528, -210.31, -167.811, 0.88", "-15.3213, -210.62, -167.677, 0.88", "-16.1301, -211.431, -167.221, 0.29", "-16.8383, -212.089, -166.74, 0.29", "-17.5392, -212.733, -166.191, 0.88", "-17.9623, -213.114, -165.836, 0.88" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "-13.7075, -206.303, -167.471, 0.59", "-14.9992, -207.779, -170.932, 0.59", "-15.3388, -208.179, -171.824, 0.37", "-15.7909, -208.659, -172.862, 0.37", "-16.4023, -209.308, -174.184, 0.96", "-16.978, -209.948, -175.41, 1.33", "-18.1342, -211.329, -177.904, 0.59", "-18.3914, -211.724, -178.488, 0.29", "-18.7477, -212.334, -179.405, 0.29", "-18.9408, -212.747, -180.081, 0.88", "-19.0432, -213.003, -180.534, 0.88", "-19.2231, -213.532, -181.511, 0.66", "-19.395, -214.195, -182.754, 0.88", "-19.6001, -215.221, -184.67, 1.4", "-19.9591, -217.199, -188.404, 0.59", "-20.1833, -218.08, -190.125, 0.59", "-20.2786, -218.421, -190.812, 0.52", "-20.3375, -218.647, -191.274, 1.03", "-20.4271, -218.969, -191.921, 0.88", "-20.8097, -220.143, -194.215, 0.22", "-21.1489, -220.89, -195.591, 0.59", "-21.641, -221.679, -197.187, 0.74", "-22.1627, -222.383, -198.74, 0.44", "-22.4928, -222.789, -199.639, 0.74", "-23.1042, -223.572, -201.247, 1.11", "-23.4211, -224.013, -202.017, 0.96", "-24.5728, -225.662, -204.497, 0.74", "-24.6002, -225.697, -204.543, 0.74", "-25.091, -226.308, -205.274, 0.74", "-25.7751, -227.245, -206.29, 0.74", "-26.4469, -228.267, -207.218, 0.37", "-26.7861, -228.844, -207.707, 1.03", "-27.1067, -229.473, -208.144, 1.18", "-27.9979, -231.231, -209.388, 0.29", "-28.3004, -231.818, -209.81, 0.59", "-28.5438, -232.293, -210.119, 0.59", "-28.8651, -233.032, -210.508, 0.44", "-29.0924, -233.635, -210.768, 0.29", "-29.1171, -233.703, -210.791, 0.29", "-29.3188, -234.243, -210.921, 0.59", "-29.5137, -234.813, -211.244, 0.59", "-29.6324, -235.326, -211.718, 0.44", "-29.6847, -235.832, -212.358, 0.29", "-29.7161, -236.398, -213.257, 0.88", "-29.7242, -236.998, -214.38, 1.11", "-29.7144, -238.326, -217.183, 0.74", "-29.7115, -239.073, -218.809, 0.59", "-29.722, -239.914, -220.659, 0.29", "-29.777, -240.831, -222.647, 0.74", "-29.9368, -242.083, -225.241, 1.03", "-30.2327, -243.375, -227.667, 0.52", "-30.4221, -243.898, -228.448, 0.44", "-30.598, -244.273, -228.891, 0.88", "-31.0056, -245.01, -229.507, 1.11", "-31.2825, -245.458, -229.717, 1.11", "-31.8587, -246.295, -229.874, 0.59", "-32.4834, -247.2, -229.927, 0.44", "-32.8343, -247.738, -229.98, 0.66", "-33.4233, -248.766, -230.109, 0.59", "-33.8227, -249.569, -230.454, 0.37", "-34.1571, -250.262, -230.928, 0.44", "-34.5561, -251.093, -231.672, 0.66", "-34.8537, -251.723, -232.337, 0.81", "-35.1242, -252.312, -233.026, 0.88", "-36.5534, -255.205, -236.695, 0.52", "-36.8053, -255.631, -237.279, 0.29", "-36.9731, -255.861, -237.621, 0.59", "-37.206, -256.105, -237.985, 0.59", "-37.859, -256.625, -238.661, 0.37", "-38.6117, -257.073, -239.087, 0.37", "-39.4738, -257.474, -239.153, 0.37", "-39.5476, -257.508, -239.159, 0.37", "-40.6699, -257.967, -239.225, 0.22", "-41.1266, -258.116, -239.236, 0.37", "-41.5656, -258.209, -239.214, 0.37", "-42.6077, -258.36, -239.171, 0.29" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "20.7121, -142.051, -78.1338, 0.29", "21.2587, -142.212, -78.4928, 0.29", "21.5033, -142.309, -78.6533, 0.37", "21.5439, -142.328, -78.6775, 0.37", "22.0352, -142.64, -78.973, 0.22", "22.0775, -142.668, -78.9983, 0.22", "22.3502, -142.862, -79.1576, 0.52", "22.3845, -142.893, -79.1772, 0.52", "22.6752, -143.16, -79.3134, 0.52", "23.1977, -143.626, -79.5167, 0.22", "23.2349, -143.657, -79.5287, 0.22", "23.403, -143.802, -79.5831, 0.37", "23.7025, -144.06, -79.679, 0.22", "24.3115, -144.581, -79.8629, 0.96", "24.35, -144.615, -79.8727, 0.96" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "20.7121, -142.051, -78.1338, 0.37", "21.1278, -143.166, -79.3434, 0.37", "21.3864, -143.994, -80.1494, 0.66", "21.5067, -144.415, -80.5223, 0.88", "21.6327, -144.887, -80.9004, 1.18", "22.01, -146.4, -81.9971, 0.44", "22.1134, -146.814, -82.271, 0.29", "22.2549, -147.484, -82.6171, 0.88", "22.3401, -147.877, -82.7798, 1.11", "22.4677, -148.376, -82.9522, 0.66", "22.6736, -149.019, -83.1108, 0.37", "22.9431, -149.586, -83.1735, 0.52", "23.0085, -149.69, -83.1846, 0.52", "23.4859, -150.291, -83.2705, 0.59", "23.8225, -150.658, -83.3324, 0.66", "23.9047, -150.734, -83.3416, 0.66", "24.3934, -151.171, -83.3711, 0.37", "24.9793, -151.661, -83.2907, 0.37", "25.4388, -152.029, -83.1853, 0.37", "25.9325, -152.411, -83.0511, 0.96", "26.7065, -152.974, -82.835, 1.25", "27.4084, -153.454, -82.6636, 0.96", "29.1755, -154.584, -82.2074, 0.52", "29.9169, -155.037, -82.0125, 0.59", "30.3668, -155.302, -81.8977, 0.74", "30.9334, -155.628, -81.7702, 0.74", "31.821, -156.145, -81.64, 0.29", "32.599, -156.597, -81.5799, 0.66", "32.6483, -156.632, -81.5838, 0.66", "33.0339, -156.963, -81.6167, 0.29", "33.3904, -157.341, -81.6509, 0.74", "33.7174, -157.773, -81.6946, 0.88", "33.7524, -157.823, -81.7005, 0.88", "34.1515, -158.385, -81.7991, 0.37", "34.6021, -158.974, -81.9063, 0.59", "34.8778, -159.31, -81.9704, 0.88", "35.371, -159.876, -82.0857, 0.29", "35.7734, -160.304, -82.1629, 0.22", "35.9643, -160.498, -82.1946, 0.81", "36.2913, -160.811, -82.2417, 1.18", "36.3374, -160.852, -82.2483, 1.18", "36.8678, -161.315, -82.316, 1.03", "37.5989, -161.968, -82.3272, 0.29", "38.2355, -162.603, -82.275, 0.22", "38.2937, -162.668, -82.2612, 0.22", "38.7094, -163.175, -82.1193, 0.29", "39.0569, -163.612, -81.9894, 1.18", "39.7943, -164.502, -81.697, 0.74", "40.1799, -164.955, -81.5482, 0.52", "40.7087, -165.519, -81.3351, 0.29", "41.1709, -165.975, -81.1284, 0.52", "41.6763, -166.424, -80.8837, 0.96", "42.3978, -167.002, -80.5761, 1.18", "43.1274, -167.524, -80.2808, 1.03", "44.137, -168.215, -79.8605, 0.74", "45.1989, -168.966, -79.4038, 0.66", "45.8154, -169.449, -79.1214, 1.03", "46.6108, -170.151, -78.7541, 0.88", "47.45, -170.991, -78.4061, 0.74", "48.0339, -171.647, -78.217, 0.74", "48.5243, -172.282, -78.1269, 0.74", "49.062, -173.066, -78.098, 0.52", "49.4747, -173.708, -78.11, 0.52", "49.8962, -174.386, -78.1476, 0.44", "50.2915, -175.033, -78.2232, 0.74", "50.5951, -175.503, -78.2903, 0.96", "50.8808, -175.925, -78.3564, 0.96", "51.4777, -176.787, -78.4998, 0.37", "51.9961, -177.501, -78.6345, 0.37", "52.0269, -177.542, -78.643, 0.37", "52.4695, -178.051, -78.7805, 0.66", "52.8089, -178.425, -78.8918, 0.88", "53.2573, -178.894, -79.0526, 0.59", "53.6937, -179.325, -79.2366, 0.22", "53.7398, -179.362, -79.2563, 0.22", "54.3166, -179.766, -79.5037, 0.22" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-23.7209, -257.177, -59.3423, 0.52", "-21.7687, -257.18, -60.0152, 0.52", "-20.8019, -257.268, -60.398, 0.52", "-19.785, -257.45, -60.949, 0.66", "-18.7569, -257.702, -61.6172, 0.59", "-17.5148, -258.081, -62.484, 0.29", "-17.1512, -258.224, -62.7831, 0.59", "-16.7523, -258.435, -63.2371, 0.59", "-15.6828, -259.105, -64.6115, 0.29", "-15.1082, -259.522, -65.4035, 0.88", "-14.8711, -259.707, -65.7627, 0.88", "-13.7101, -260.499, -67.8405, 0.29", "-13.0012, -260.882, -69.27, 0.59", "-12.7231, -260.977, -69.9477, 0.44", "-12.6978, -260.981, -70.0203, 0.44", "-12.1769, -260.961, -71.698, 0.44", "-11.3248, -260.732, -74.674, 0.29", "-11.1567, -260.642, -75.2903, 0.29", "-10.3612, -260.146, -77.9155, 0.29", "-10.3384, -260.13, -77.9989, 0.29", "-10.3165, -260.116, -78.0739, 0.44", "-10.2711, -260.088, -78.2206, 0.44", "-9.92565, -259.882, -79.3328, 0.29", "-9.63503, -259.699, -80.2665, 0.81", "-7.33017, -258.221, -87.6487, 0.29", "-6.83993, -257.898, -89.2352, 0.22", "-6.33372, -257.577, -90.9214, 0.44", "-5.41296, -257.034, -94.2353, 0.29", "-5.24543, -256.94, -94.8902, 0.88", "-5.13359, -256.903, -95.3553, 0.88", "-5.11348, -256.901, -95.4296, 0.88", "-4.18946, -256.887, -99.1636, 0.29", "-3.36812, -256.854, -102.876, 0.52", "-3.35287, -256.852, -102.951, 0.52", "-2.38808, -256.758, -107.854, 0.22", "-2.16903, -256.72, -108.997, 0.37", "-1.75618, -256.618, -111.203, 0.96", "-1.23732, -256.386, -114.097, 0.22", "-1.15159, -256.325, -114.576, 0.59" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-23.7209, -257.177, -59.3423, 0.81", "-23.7449, -257.85, -59.5247, 0.81", "-23.7465, -258.479, -59.6862, 1.03", "-23.7206, -259.41, -59.916, 0.96", "-23.6675, -260.242, -60.1159, 0.74", "-23.5737, -260.976, -60.2189, 0.29", "-23.4995, -261.432, -60.2506, 0.29", "-23.4265, -261.771, -60.245, 0.52", "-23.3571, -262.078, -60.2036, 0.52", "-23.2677, -262.476, -60.1076, 0.52", "-22.9801, -263.852, -59.7396, 0.29", "-22.8597, -264.469, -59.5889, 0.52", "-22.7805, -264.842, -59.5011, 0.81", "-22.5985, -265.552, -59.3336, 0.88", "-22.4087, -266.11, -59.2239, 1.18", "-22.1207, -266.822, -59.1123, 1.4", "-21.6337, -267.838, -59.0232, 0.52", "-21.1206, -268.736, -58.974, 0.52", "-20.4578, -269.769, -58.9639, 0.52", "-19.7493, -270.804, -58.998, 0.74", "-19.7072, -270.865, -59.0015, 0.74", "-19.2487, -271.603, -59.0782, 0.29", "-18.8126, -272.46, -59.2048, 0.29", "-18.4301, -273.417, -59.3981, 0.66", "-18.2694, -273.952, -59.5219, 0.88", "-18.111, -274.689, -59.6833, 0.88", "-17.9048, -275.825, -59.9697, 0.29", "-17.8268, -276.301, -60.1077, 0.88", "-17.8181, -276.372, -60.1356, 0.88", "-17.7589, -276.856, -60.3677, 1.03", "-17.7479, -276.932, -60.4075, 1.03", "-17.5611, -278.072, -60.9903, 0.74", "-17.3671, -278.891, -61.3953, 0.88", "-17.0578, -279.99, -61.9229, 1.18", "-16.892, -280.529, -62.1622, 1.18", "-16.6817, -281.154, -62.4129, 0.66", "-16.3744, -281.99, -62.7046, 0.29", "-16.0365, -282.819, -62.9353, 0.29", "-15.7977, -283.385, -63.0626, 0.59", "-15.4841, -284.094, -63.1784, 0.74", "-15.1757, -284.807, -63.2828, 0.74", "-14.9914, -285.242, -63.2952, 0.74", "-14.8191, -285.702, -63.2613, 0.88", "-14.5555, -286.457, -63.153, 0.81", "-14.2111, -287.375, -62.9812, 0.81", "-13.8452, -288.268, -62.7784, 0.59", "-13.1296, -289.866, -62.3782, 0.37", "-12.7843, -290.564, -62.1929, 0.52", "-12.4692, -291.122, -62.0478, 0.44", "-12.1476, -291.6, -61.9393, 0.52", "-12.051, -291.726, -61.9201, 0.52", "-11.684, -292.169, -61.9426, 0.37", "-11.5896, -292.293, -61.9762, 0.37", "-11.2508, -292.832, -62.11, 0.81", "-11.0885, -293.263, -62.2104, 0.96", "-11.0765, -293.326, -62.2287, 0.96", "-11.0548, -293.715, -62.3495, 0.81", "-11.0899, -294.515, -62.6411, 0.52", "-11.1328, -295.053, -62.8447, 0.52", "-11.2163, -295.996, -63.2081, 0.29", "-11.2909, -296.965, -63.5752, 0.74", "-11.3342, -297.634, -63.8235, 0.88", "-11.3572, -298.602, -64.1322, 0.52", "-11.3368, -299.58, -64.379, 0.52", "-11.2866, -300.296, -64.4943, 0.74", "-11.1987, -300.983, -64.5431, 0.44", "-11.172, -301.142, -64.5427, 0.44", "-10.9636, -302.4, -64.4755, 0.44", "-10.8623, -303.154, -64.3788, 0.22", "-10.8242, -303.88, -64.2591, 0.22", "-10.853, -304.418, -64.1923, 0.74", "-10.863, -304.492, -64.1877, 0.74", "-10.9816, -305.097, -64.1905, 0.96", "-11.0013, -305.171, -64.1973, 0.96", "-11.164, -305.875, -64.2815, 0.96", "-11.3411, -307.077, -64.506, 0.44", "-11.38, -307.708, -64.5879, 0.52", "-11.3801, -307.783, -64.5947, 0.52", "-11.3666, -308.408, -64.6477, 0.81", "-11.3276, -309.271, -64.7365, 0.74", "-11.2388, -310.506, -64.8713, 0.37", "-11.1356, -312.076, -65.0139, 0.37", "-11.1056, -312.661, -65.0396, 1.18", "-11.0634, -313.735, -65.0552, 0.96", "-11.0317, -314.891, -65.0436, 0.52", "-11.0157, -316.212, -64.9994, 0.52", "-11.0009, -317.696, -64.9085, 0.74", "-10.9607, -319.249, -64.8336, 0.81", "-10.9558, -319.334, -64.8258, 0.81", "-10.8872, -320.02, -64.7022, 1.03", "-10.8768, -320.104, -64.681, 1.03", "-10.7521, -320.882, -64.4669, 0.52", "-10.6116, -321.624, -64.2816, 0.37", "-10.47, -322.339, -64.151, 0.88", "-10.3198, -323.11, -64.0205, 0.96", "-10.1947, -323.707, -63.9251, 0.74", "-10.0357, -324.408, -63.8346, 0.22", "-9.84427, -325.112, -63.7573, 0.22", "-9.62088, -325.698, -63.7172, 0.74", "-9.41019, -326.095, -63.7107, 1.03", "-9.09662, -326.552, -63.7297, 1.03", "-8.61521, -327.091, -63.7408, 0.59", "-7.87612, -327.803, -63.7458, 0.37", "-7.11659, -328.495, -63.7401, 0.22", "-6.56434, -329.023, -63.7294, 0.81", "-6.14016, -329.462, -63.724, 0.81", "-5.43479, -330.295, -63.7268, 0.29", "-5.10356, -330.727, -63.737, 0.59", "-4.79227, -331.188, -63.7715, 0.74", "-4.36996, -331.923, -63.8405, 0.74", "-4.02507, -332.604, -63.9344, 0.52", "-3.5117, -333.71, -64.225, 0.22", "-3.27404, -334.286, -64.4338, 0.22", "-3.11453, -334.696, -64.5957, 0.74", "-2.92411, -335.244, -64.825, 0.74", "-2.51475, -336.557, -65.3999, 0.22", "-2.16281, -337.975, -66.0103, 0.81", "-2.04819, -338.57, -66.2468, 0.81", "-1.88079, -339.604, -66.6041, 0.22", "-1.75439, -340.456, -66.8448, 0.22", "-1.70259, -340.826, -66.9291, 0.81", "-1.62868, -341.378, -67.0182, 1.03", "-1.43816, -342.673, -67.1387, 0.29", "-1.36621, -343.144, -67.1842, 0.29", "-1.20767, -344.224, -67.2887, 0.29", "-1.07425, -345.153, -67.3599, 0.15", "-1.02646, -345.528, -67.3867, 0.52", "-0.984495, -345.842, -67.4097, 0.66" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-19.7745, -91.3373, 2.21954, 0.96", "-19.6472, -92.4357, 1.72262, 0.96", "-19.5345, -93.5967, 1.23284, 0.96", "-19.4354, -94.896, 0.736381, 0.96", "-19.3568, -96.2417, 0.268013, 0.81", "-19.3145, -97.5917, -0.208388, 0.66", "-19.3025, -98.7332, -0.598976, 0.66", "-19.3057, -98.8629, -0.638424, 0.66", "-19.3417, -99.7129, -0.890447, 0.88", "-19.3571, -100.274, -1.05569, 1.03", "-19.2851, -101.712, -1.54524, 0.74", "-19.1562, -102.579, -1.88352, 0.74", "-18.9283, -103.5, -2.28729, 0.74", "-18.5597, -104.643, -2.81425, 0.96", "-18.2849, -105.317, -3.13699, 1.03", "-17.8863, -106.22, -3.53851, 1.03", "-17.3971, -107.359, -3.9599, 0.88", "-17.1235, -108.124, -4.19117, 0.88", "-17.0771, -108.367, -4.23565, 0.88", "-17.0965, -108.98, -4.20227, 0.59", "-17.4444, -110.174, -3.91641, 0.52", "-17.9166, -111.071, -3.56438, 0.74", "-18.3343, -111.653, -3.21508, 0.66", "-18.9249, -112.358, -2.70947, 0.52", "-19.8536, -113.391, -1.86608, 0.52", "-20.319, -113.891, -1.42668, 0.74", "-20.9195, -114.539, -0.859929, 1.03", "-21.6772, -115.417, -0.168624, 1.03", "-22.2018, -116.07, 0.278209, 1.03", "-22.9266, -117.066, 0.842588, 0.74", "-23.3935, -117.761, 1.13089, 0.66", "-23.8635, -118.561, 1.42549, 0.52", "-24.2279, -119.313, 1.67323, 0.52", "-24.2524, -119.373, 1.68957, 0.52", "-24.4653, -120.013, 1.88167, 0.66", "-24.6315, -120.652, 2.07977, 0.81", "-24.8381, -121.539, 2.39787, 0.52", "-25.1083, -122.63, 2.75256, 0.52", "-25.1797, -122.851, 2.79278, 0.81", "-25.4938, -123.558, 2.81344, 0.81", "-25.8499, -124.128, 2.74036, 0.96", "-26.4747, -124.845, 2.51189, 1.03", "-27.4238, -125.62, 2.146, 1.18", "-28.623, -126.415, 1.70029, 0.81", "-29.2136, -126.757, 1.48198, 0.88", "-29.9545, -127.129, 1.22832, 1.18", "-30.7271, -127.501, 0.99975, 1.55", "-31.8159, -128.061, 0.782535, 0.66", "-32.2918, -128.36, 0.75673, 0.66", "-32.6964, -128.703, 0.799418, 0.52", "-33.3656, -129.444, 0.94265, 0.52", "-33.8525, -130.157, 1.10294, 0.37", "-34.334, -131.13, 1.38638, 0.37", "-34.6003, -131.854, 1.60781, 0.74", "-34.8653, -132.704, 1.89804, 1.25", "-34.8812, -132.754, 1.91711, 1.25", "-35.1359, -133.486, 2.20249, 1.18", "-35.5681, -134.535, 2.62375, 1.03", "-35.8832, -135.165, 2.86522, 0.66", "-36.2927, -135.893, 3.1248, 0.37", "-36.8598, -136.814, 3.40751, 0.37", "-37.2707, -137.437, 3.57327, 0.44", "-37.3148, -137.496, 3.58662, 0.44", "-37.9005, -138.204, 3.69901, 0.37", "-38.3395, -138.724, 3.76933, 0.59", "-38.6109, -139.055, 3.80314, 0.59", "-39.0729, -139.672, 3.84201, 0.44", "-39.449, -140.201, 3.86608, 0.66", "-39.866, -140.805, 3.89295, 0.88", "-40.3238, -141.497, 3.92159, 0.88", "-40.97, -142.469, 3.94676, 0.66", "-41.4737, -143.243, 3.94558, 0.96", "-41.8491, -143.8, 3.9356, 1.18", "-42.6616, -144.9, 3.93157, 0.88", "-42.9988, -145.29, 3.94128, 0.96", "-43.8092, -146.031, 4.00101, 0.59", "-43.8556, -146.06, 4.0072, 0.59", "-44.7704, -146.429, 4.20501, 0.59", "-45.5637, -146.634, 4.41265, 0.52", "-46.1331, -146.738, 4.58258, 0.52", "-46.705, -146.853, 4.80837, 0.74", "-47.2922, -146.993, 5.087, 0.96", "-47.8635, -147.158, 5.36866, 0.81", "-48.8655, -147.526, 5.87229, 0.96", "-49.5168, -147.821, 6.18816, 0.96", "-50.5008, -148.323, 6.66774, 0.44", "-51.0998, -148.665, 6.95279, 0.44", "-51.7531, -149.069, 7.24006, 0.66", "-52.3147, -149.409, 7.44841, 0.59", "-52.9863, -149.812, 7.66765, 0.59", "-53.05, -149.849, 7.68426, 0.59", "-53.5947, -150.159, 7.77242, 0.88", "-54.5807, -150.792, 7.90608, 0.96", "-55.3117, -151.326, 7.98714, 0.37", "-55.4151, -151.419, 8.00368, 0.37", "-56.0528, -152.153, 8.14897, 0.37", "-56.5096, -152.815, 8.29027, 0.29", "-56.8945, -153.54, 8.45174, 0.29", "-57.1516, -154.115, 8.58703, 0.52", "-57.6908, -155.339, 8.88921, 1.03", "-57.9772, -155.937, 9.04062, 1.25", "-58.2275, -156.405, 9.1557, 1.25", "-58.7609, -157.195, 9.35959, 0.88", "-59.3365, -157.859, 9.52808, 0.74", "-59.9886, -158.469, 9.65298, 0.74", "-60.537, -158.9, 9.7109, 0.96", "-61.3109, -159.455, 9.77635, 0.66", "-61.9771, -159.916, 9.7872, 0.74", "-62.377, -160.198, 9.77789, 1.03", "-62.9415, -160.635, 9.74538, 1.4", "-62.9852, -160.673, 9.74178, 1.4", "-63.3929, -161.133, 9.70136, 1.4", "-64.1076, -162.228, 9.63349, 0.52", "-64.4526, -162.912, 9.58886, 0.81", "-64.6795, -163.405, 9.56571, 0.88", "-64.8983, -163.915, 9.55578, 0.52", "-65.2355, -164.67, 9.55127, 0.44", "-65.5288, -165.316, 9.55971, 0.44", "-65.8129, -165.853, 9.60047, 0.44", "-66.1673, -166.36, 9.63453, 0.66", "-66.2606, -166.456, 9.65572, 0.66", "-66.6561, -166.744, 9.78268, 0.88", "-66.7344, -166.787, 9.81263, 0.88", "-67.2364, -167.057, 10.0305, 0.96", "-67.5236, -167.235, 10.1639, 0.66", "-68.2285, -167.726, 10.4927, 0.52", "-68.7105, -168.088, 10.7082, 0.44", "-69.0671, -168.383, 10.8558, 0.74", "-69.5229, -168.794, 11.0249, 0.81", "-70.0946, -169.403, 11.2084, 0.52", "-70.1429, -169.462, 11.2172, 0.52", "-70.4604, -169.885, 11.227, 0.81", "-70.926, -170.577, 11.2082, 0.96", "-71.1836, -171.002, 11.1801, 1.11", "-71.5657, -171.638, 11.1356, 0.81", "-72.0876, -172.455, 11.0531, 0.66", "-72.1203, -172.5, 11.047, 0.66", "-72.6565, -173.128, 10.976, 0.52", "-73.2103, -173.594, 10.9608, 0.37", "-73.6636, -173.839, 11.0386, 0.29", "-74.3986, -174.096, 11.2892, 0.66", "-74.819, -174.22, 11.4822, 0.74", "-75.6437, -174.522, 11.9451, 0.29", "-76.0188, -174.692, 12.1824, 0.66", "-76.5258, -174.995, 12.522, 0.88", "-77.0132, -175.359, 12.847, 0.88", "-77.288, -175.594, 13.0263, 0.88", "-78.0987, -176.325, 13.4939, 0.58", "-78.636, -176.822, 13.7429, 0.81", "-79.1233, -177.277, 13.9404, 1.11", "-79.5683, -177.695, 14.0903, 0.74", "-80.0722, -178.162, 14.2593, 0.88", "-80.5768, -178.582, 14.4196, 0.81", "-81.0804, -178.944, 14.5644, 0.74", "-81.8935, -179.476, 14.8072, 0.44", "-82.6492, -179.944, 15.0374, 0.74", "-83.2569, -180.293, 15.2304, 0.88", "-84.0577, -180.671, 15.5656, 0.52", "-84.5027, -180.856, 15.8044, 0.59", "-85.3081, -181.173, 16.3155, 0.59", "-85.3502, -181.19, 16.3454, 0.59", "-85.7603, -181.419, 16.6581, 0.66", "-86.9122, -182.336, 17.485, 0.59", "-87.4334, -182.891, 17.8403, 0.59", "-87.775, -183.324, 18.0284, 0.81", "-88.285, -184.04, 18.2493, 0.52", "-88.8383, -184.849, 18.4044, 0.66", "-89.4702, -185.82, 18.4772, 0.44", "-89.8477, -186.446, 18.4556, 1.11", "-90.5747, -187.647, 18.3752, 0.59", "-90.6087, -187.703, 18.3726, 0.59", "-91.0169, -188.355, 18.3603, 0.44", "-91.213, -188.638, 18.3691, 0.44", "-91.8434, -189.442, 18.4991, 0.44", "-92.2738, -189.893, 18.6415, 0.37", "-92.7542, -190.287, 18.8608, 0.29", "-93.1563, -190.576, 19.1003, 0.66", "-93.5449, -190.805, 19.3726, 1.03", "-94.0263, -191.042, 19.7236, 1.03", "-94.3865, -191.188, 19.9859, 0.81", "-95.0108, -191.458, 20.4236, 0.52", "-95.7034, -191.849, 20.8726, 0.66", "-96.0888, -192.15, 21.1099, 0.29", "-96.2804, -192.336, 21.2187, 0.59", "-96.6349, -192.696, 21.3838, 0.81", "-97.0576, -193.097, 21.5503, 0.81", "-97.6167, -193.537, 21.723, 0.52", "-98.3321, -194.01, 21.8795, 0.74", "-98.3816, -194.038, 21.8904, 0.74", "-99.1317, -194.416, 22.055, 0.44", "-99.6646, -194.675, 22.1642, 0.74", "-100.248, -194.96, 22.2775, 1.11", "-101.108, -195.408, 22.4378, 0.59", "-101.618, -195.725, 22.5291, 0.66", "-102.127, -196.123, 22.6161, 0.81", "-102.71, -196.718, 22.7107, 0.52", "-103.079, -197.162, 22.7685, 0.66", "-103.405, -197.578, 22.8202, 0.66", "-103.74, -197.975, 22.8497, 0.44", "-103.785, -198.023, 22.8514, 0.44", "-104.51, -198.612, 22.861, 0.37", "-104.634, -198.677, 22.8624, 0.37", "-105.49, -198.878, 22.879, 0.37", "-106.285, -198.898, 22.8554, 0.29", "-106.764, -198.859, 22.829, 0.37", "-107.269, -198.8, 22.8157, 0.44", "-107.968, -198.66, 22.7894, 0.37", "-108.924, -198.429, 22.7541, 0.29", "-109.981, -198.089, 22.7225, 0.22", "-110.196, -198.011, 22.7279, 0.44", "-111.185, -197.628, 22.7073, 0.52" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-19.7745, -91.3373, 2.21954, 0.74", "-20.3509, -91.8883, 2.4408, 0.74", "-21.0543, -92.565, 2.7103, 0.44", "-21.7484, -93.2205, 2.97386, 0.59", "-22.6236, -94.0141, 3.25899, 0.37", "-23.2941, -94.6292, 3.47623, 0.59", "-23.5837, -94.8919, 3.56931, 0.88", "-23.65, -94.9496, 3.58774, 0.88", "-23.9359, -95.1892, 3.6528, 1.11", "-24.5876, -95.6402, 3.77298, 0.88", "-25.3959, -96.0576, 3.90037, 0.37", "-25.9018, -96.2557, 3.96632, 0.66", "-26.695, -96.5058, 4.03066, 0.81", "-27.4311, -96.7284, 4.07562, 0.74", "-28.4567, -97.0204, 4.12554, 0.88", "-29.1795, -97.219, 4.16119, 0.74", "-30.2933, -97.5413, 4.16636, 0.52", "-31.6169, -97.9999, 4.16045, 0.52", "-32.4068, -98.3412, 4.19586, 0.74", "-32.4755, -98.3797, 4.20769, 0.74", "-33.0325, -98.8558, 4.73764, 0.88", "-33.6362, -99.532, 5.83433, 1.03", "-33.9654, -99.9451, 6.61712, 1.18", "-34.4097, -100.517, 7.85801, 0.96", "-34.9945, -101.263, 9.64561, 1.18", "-36.6923, -103.318, 14.8841, 0.66", "-36.9209, -103.611, 15.6704, 0.66", "-37.1571, -103.926, 16.5135, 0.81", "-37.3934, -104.235, 17.2855, 0.81", "-37.4251, -104.277, 17.3744, 0.81", "-37.8108, -104.869, 18.3441, 0.88", "-38.4311, -105.922, 19.9424, 0.88", "-38.7315, -106.579, 21.0544, 0.74", "-38.8463, -106.88, 21.5921, 0.96", "-39.3092, -108.224, 23.9657, 0.44", "-39.6931, -109.41, 26.0402, 1.25", "-40.186, -111.075, 28.8897, 0.59", "-40.5144, -112.061, 30.5249, 0.96", "-40.5317, -112.11, 30.6009, 0.96", "-40.7974, -112.777, 31.513, 0.59", "-41.1329, -113.469, 32.2637, 0.52", "-41.849, -114.801, 33.4056, 0.81", "-42.7774, -116.542, 34.5894, 0.44", "-43.2572, -117.441, 35.1442, 0.59", "-43.6653, -118.266, 35.6744, 0.74", "-44.0577, -119.164, 36.3308, 0.44", "-44.4633, -120.212, 37.1513, 0.44", "-44.8843, -121.406, 38.0911, 0.29", "-45.1924, -122.492, 38.9645, 0.44", "-45.4935, -123.872, 40.1932, 0.81", "-45.7308, -125.451, 41.764, 1.03", "-45.734, -125.505, 41.8237, 1.03", "-50.4613, -134.407, 49.6147, 1.03", "-55.8722, -143.094, 57.1793, 1.03", "-60.7033, -153.252, 63.3446, 1.03", "-67.1926, -162.666, 69.0431, 1.03" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-4.70181, -68.9158, -5.36098, 1.4", "-4.22184, -69.4308, -5.37751, 1.4", "-3.4347, -70.2309, -5.49308, 1.11", "-2.4763, -71.2482, -5.79587, 0.96", "-1.73889, -72.0824, -6.16029, 0.96", "-1.1536, -72.8031, -6.56496, 1.11", "-0.502652, -73.6478, -7.07069, 1.25", "0.318066, -74.7697, -7.81393, 1.18", "1.2041, -76.0979, -8.70735, 1.18", "1.84196, -77.2123, -9.42233, 1.03", "2.53178, -78.697, -10.2795, 0.88", "2.7919, -79.4216, -10.6252, 0.96", "3.16517, -80.7629, -11.1299, 1.11", "3.45313, -82.1859, -11.5216, 1.11", "3.58253, -83.1807, -11.689, 0.96", "3.66514, -84.5053, -11.8209, 1.11", "3.64019, -86.3377, -11.9541, 1.18", "3.5699, -87.2402, -12.0388, 1.18", "3.44026, -88.2526, -12.1565, 1.18", "3.14234, -90.179, -12.416, 0.96", "2.92946, -91.4646, -12.6101, 1.03", "2.59092, -93.4402, -12.9598, 1.03", "2.33065, -94.8655, -13.2545, 1.33", "2.1497, -95.91, -13.4972, 1.55", "2.02627, -96.7677, -13.7265, 1.33", "1.8704, -98.1344, -14.1312, 1.03", "1.7887, -99.28, -14.4658, 1.33", "1.75419, -100.296, -14.753, 1.33", "1.70143, -102.218, -15.26, 1.25", "1.62274, -104.291, -15.825, 1.03", "1.55562, -105.467, -16.1569, 0.96", "1.42394, -106.947, -16.5919, 0.96", "1.30546, -107.857, -16.8654, 0.96", "1.10344, -109.202, -17.2945, 0.96", "0.838906, -110.456, -17.7212, 1.11", "0.649058, -111.063, -17.9385, 1.25", "0.20562, -112.113, -18.3794, 1.4", "-0.163513, -112.737, -18.708, 1.4" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-4.70181, -68.9158, -5.36098, 1.11", "-6.05739, -71.8212, -2.93231, 1.11", "-6.25818, -72.4982, -2.54773, 1.11", "-6.51937, -73.5989, -2.02289, 1.03", "-6.80311, -75.2927, -1.36887, 1.11", "-6.8117, -75.3716, -1.345, 1.11", "-6.93817, -76.797, -0.991507, 1.11", "-6.96008, -78.4176, -0.773881, 1.11", "-6.961, -78.5025, -0.762941, 1.11", "-6.98021, -79.9597, -0.592695, 1.11", "-7.00554, -81.7683, -0.426483, 1.03", "-7.03404, -82.9351, -0.340118, 1.33", "-7.1178, -84.3234, -0.263501, 1.18", "-7.35675, -86.072, -0.215633, 0.88", "-7.37236, -86.1562, -0.215134, 0.88", "-7.87558, -88.054, -0.227473, 0.88", "-8.37817, -89.5423, -0.261524, 0.88", "-8.90636, -90.8361, -0.318473, 1.11", "-9.70697, -92.5689, -0.347171, 0.88", "-9.74061, -92.6345, -0.344628, 0.88", "-10.3565, -93.8496, -0.231799, 0.88", "-10.4701, -94.071, -0.195665, 0.88", "-10.9036, -95.1102, 0.0420146, 0.96", "-11.5438, -97.2285, 0.610956, 0.81", "-11.6854, -97.8655, 0.786829, 1.18", "-11.8836, -98.9276, 1.06255, 0.96", "-11.9072, -99.0898, 1.09949, 0.96", "-12.0779, -100.622, 1.40799, 0.74", "-12.1427, -101.695, 1.5172, 0.96", "-12.1684, -102.611, 1.49767, 1.03", "-12.1669, -102.778, 1.47496, 1.03", "-12.1277, -103.866, 1.2407, 1.33", "-12.0515, -104.972, 0.925887, 1.55", "-11.8897, -106.654, 0.346593, 1.25", "-11.6865, -107.914, -0.116991, 1.4", "-11.3377, -109.681, -0.761398, 1.55", "-11.0681, -110.946, -1.21669, 1.11", "-10.6917, -112.547, -1.79676, 0.74", "-10.6729, -112.634, -1.82592, 0.74", "-10.4675, -113.744, -2.16057, 0.74", "-10.354, -114.536, -2.32105, 0.96", "-10.3439, -114.646, -2.32961, 0.96", "-10.2725, -116.137, -2.37281, 1.11", "-10.1792, -117.383, -2.34211, 1.11", "-10.0009, -119.059, -2.39147, 1.25", "-9.68572, -121.604, -2.55082, 0.96", "-9.39872, -123.393, -2.72866, 0.96", "-9.15455, -124.687, -2.88707, 1.11", "-8.58697, -127.283, -3.24988, 1.11", "-7.97933, -129.748, -3.67213, 1.25", "-7.79262, -130.481, -3.81818, 1.55", "-7.43279, -131.966, -4.22919, 1.47", "-7.41797, -132.045, -4.24742, 1.47", "-7.32929, -132.977, -4.38843, 0.88", "-7.39717, -134.226, -4.37862, 0.59", "-7.56962, -135.5, -4.14807, 0.74", "-7.73115, -136.401, -3.92826, 1.03", "-8.08839, -138.165, -3.44879, 1.03", "-8.25101, -138.937, -3.23802, 1.25", "-8.62931, -140.706, -2.74632, 1.25", "-8.91611, -142.054, -2.36546, 0.74", "-9.14315, -143.169, -2.10989, 0.74", "-9.33079, -144.316, -2.00072, 0.96", "-9.33796, -144.39, -2.00655, 0.96", "-9.3828, -145.702, -2.24309, 1.18", "-9.37971, -145.795, -2.2678, 1.18", "-9.23576, -147.465, -2.73274, 1.33", "-9.00421, -149.461, -3.23961, 1.03", "-8.81353, -151.095, -3.59755, 0.88", "-8.7519, -151.711, -3.71517, 1.33", "-8.66179, -152.965, -3.91791, 1.33", "-8.62231, -154.371, -4.09067, 1.55", "-8.69058, -155.757, -4.17589, 1.33", "-8.88823, -157.014, -4.20676, 1.11", "-9.24085, -158.352, -4.2351, 0.66", "-9.70697, -159.66, -4.27335, 0.66", "-10.2681, -160.91, -4.31884, 0.74", "-10.9421, -162.222, -4.36897, 0.59", "-11.3977, -163.1, -4.38772, 0.88", "-11.7973, -163.991, -4.38817, 0.96", "-12.0606, -164.866, -4.36269, 0.88", "-12.0688, -164.947, -4.35044, 0.88", "-12.0002, -166.121, -4.07592, 0.74", "-11.848, -167.241, -3.77827, 1.25", "-11.6786, -168.459, -3.43207, 1.25", "-11.5463, -169.813, -3.04862, 1.03", "-11.506, -172.085, -2.44102, 0.74", "-11.5929, -173.372, -2.1231, 0.59", "-11.7357, -174.128, -1.96304, 0.81", "-12.0891, -175.186, -1.80745, 0.88", "-12.6236, -176.41, -1.70963, 1.03", "-13.0793, -177.446, -1.69484, 1.11", "-13.171, -177.68, -1.72096, 1.11", "-13.5353, -178.84, -1.95454, 0.96", "-13.8592, -180.16, -2.29581, 1.11", "-14.0863, -181.488, -2.69445, 0.96", "-14.3101, -183.432, -3.32266, 1.18", "-14.5342, -185.516, -3.92887, 1.03", "-14.7684, -187.655, -4.50727, 0.96", "-14.7813, -187.802, -4.54302, 0.96", "-14.8763, -189.357, -4.83538, 0.96", "-14.9291, -190.494, -4.92011, 1.4", "-14.9864, -192.712, -4.78577, 1.11", "-14.9862, -192.821, -4.76581, 1.11", "-14.9561, -194.111, -4.46368, 1.25", "-14.8942, -195.79, -4.07365, 1.11", "-14.7799, -197.636, -3.66788, 0.88", "-14.6864, -198.648, -3.47766, 1.18", "-14.4576, -200.257, -3.25119, 1.25", "-14.3155, -201.357, -3.11296, 1.4", "-14.306, -201.451, -3.10407, 1.4", "-14.2064, -203.077, -2.98412, 1.03", "-14.2075, -203.331, -2.97463, 1.03", "-14.3214, -204.715, -2.92537, 0.74", "-14.545, -205.902, -2.83393, 0.74", "-14.8315, -206.825, -2.74011, 0.96", "-15.3893, -208.189, -2.58384, 0.88", "-16.0227, -209.415, -2.42901, 0.88", "-16.6293, -210.46, -2.29405, 0.88", "-17.5334, -211.828, -2.11034, 1.11", "-18.1766, -212.782, -1.98378, 1.25", "-18.7654, -213.693, -1.87714, 1.4", "-18.9293, -213.968, -1.86459, 1.4", "-19.3055, -214.75, -1.86577, 1.4", "-19.3884, -214.986, -1.90372, 1.4", "-19.6965, -216.388, -2.35476, 1.25", "-19.8434, -217.452, -2.76574, 1.18", "-19.8913, -218.403, -3.19509, 0.96", "-19.8949, -219.753, -3.85533, 0.96", "-19.8043, -222.032, -5.12948, 0.81", "-19.6487, -223.945, -6.33061, 0.81", "-19.5687, -224.799, -6.92209, 1.03", "-19.4129, -226.82, -8.33697, 1.03", "-19.4073, -226.918, -8.40313, 1.03", "-19.3539, -228.609, -9.47621, 1.55", "-19.3643, -230.63, -10.5581, 0.88", "-19.4293, -232.54, -11.4818, 0.81", "-19.5175, -234.024, -12.1802, 0.81", "-19.6106, -235.115, -12.6608, 0.96", "-19.7127, -236.257, -13.1253, 0.96", "-19.8206, -237.418, -13.5244, 0.74", "-19.9904, -239.322, -14.1171, 1.25", "-20.0842, -241.154, -14.6629, 0.81", "-20.0872, -241.233, -14.6856, 0.81", "-20.1731, -242.553, -14.9546, 0.81", "-20.2849, -243.586, -15.0859, 1.18", "-20.3067, -243.744, -15.0904, 1.18", "-20.4859, -244.855, -15.0185, 1.18", "-20.7787, -246.792, -14.7944, 0.81", "-21.0561, -248.691, -14.5765, 0.81", "-21.2033, -249.721, -14.4547, 1.11", "-21.4471, -251.447, -14.2811, 1.11", "-21.4714, -251.627, -14.26, 1.11", "-21.6797, -253.127, -13.9566, 0.96", "-21.7687, -253.859, -13.7638, 1.25", "-21.7782, -253.938, -13.7416, 1.25", "-21.9539, -255.315, -13.3111, 1.25", "-22.2975, -257.521, -12.5944, 1.03", "-22.7508, -260.165, -11.7304, 0.81", "-22.9032, -261.08, -11.439, 1.11", "-23.1307, -262.665, -10.9843, 0.96", "-23.164, -262.924, -10.9225, 0.96", "-23.3156, -264.277, -10.6666, 0.81", "-23.3259, -264.387, -10.6587, 0.81", "-23.4904, -266.277, -10.6874, 0.96", "-23.588, -267.493, -10.7066, 1.18", "-23.6793, -268.798, -10.7265, 1.03", "-23.6866, -268.883, -10.7279, 1.03", "-23.8487, -270.381, -10.7571, 0.74", "-24.1116, -272.403, -10.8283, 0.74", "-24.2629, -273.507, -10.9206, 0.81", "-24.2765, -273.617, -10.9331, 0.81", "-24.3679, -274.685, -11.0786, 0.81", "-24.4339, -276.283, -11.3138, 0.81", "-24.3834, -278.152, -11.6381, 1.03", "-24.276, -279.748, -11.9449, 1.03", "-24.2712, -279.829, -11.9609, 1.03", "-24.2466, -280.927, -12.1753, 1.25", "-24.2476, -281.963, -12.3773, 0.96", "-24.3236, -283.345, -12.6133, 0.81", "-24.4301, -284.228, -12.7424, 1.11", "-24.6199, -285.548, -12.8993, 1.33", "-24.8162, -286.833, -13.065, 1.33", "-24.8295, -286.925, -13.0791, 1.33", "-25.0383, -288.682, -13.3568, 0.74", "-25.15, -290.522, -13.6739, 0.96", "-25.1041, -292.057, -13.9503, 0.96", "-25.0878, -292.208, -13.9718, 0.96", "-24.8317, -293.77, -14.1342, 0.96", "-24.5941, -295.172, -14.1679, 0.81", "-24.3589, -296.679, -14.0877, 0.66", "-24.2007, -298.153, -13.9093, 0.66", "-24.1343, -299.559, -13.6866, 1.33", "-24.1608, -300.733, -13.4404, 1.33", "-24.3677, -302.848, -12.8931, 1.11", "-24.564, -304.36, -12.4673, 1.18", "-24.6883, -305.206, -12.225, 1.4", "-24.8476, -306.514, -11.8975, 1.11", "-24.9221, -308.05, -11.6014, 0.59", "-24.8792, -309.048, -11.4581, 0.52", "-24.6928, -310.415, -11.3326, 0.88", "-24.4112, -311.765, -11.2634, 1.18", "-24.0785, -313.232, -11.2473, 1.03", "-23.6379, -315.087, -11.3047, 0.96", "-23.2251, -316.927, -11.4792, 0.81", "-23.0215, -318.012, -11.6236, 1.11", "-22.8663, -319.275, -11.8434, 1.69", "-22.771, -320.687, -12.148, 1.18", "-22.7732, -320.78, -12.1663, 1.18", "-22.9274, -322.247, -12.3776, 0.59", "-22.9405, -322.329, -12.373, 0.59", "-23.1521, -323.565, -12.0535, 1.03", "-23.1749, -323.704, -11.9979, 1.03", "-23.3712, -325.509, -11.1514, 1.25", "-23.4281, -326.282, -10.7741, 1.25", "-23.5247, -328.126, -9.86806, 0.96", "-23.5829, -329.178, -9.40597, 0.66", "-23.6376, -330.115, -9.05505, 0.66", "-23.6928, -330.931, -8.82965, 0.37", "-23.7645, -332.046, -8.74013, 0.52", "-23.8939, -333.346, -8.81267, 0.81", "-24.0626, -334.377, -9.00148, 1.11", "-24.2661, -335.401, -9.28306, 1.4", "-24.5285, -336.669, -9.68858, 1.4", "-25.0174, -338.878, -10.4749, 0.81", "-25.2657, -340.127, -10.9566, 0.66", "-25.4337, -341.324, -11.4312, 0.52", "-25.5169, -342.96, -12.045, 0.37", "-25.4981, -343.869, -12.3659, 0.88", "-25.494, -343.948, -12.3894, 0.88", "-25.4772, -344.787, -12.5475, 1.25", "-25.5033, -345.763, -12.7018, 1.25", "-25.6126, -346.87, -12.8452, 0.88", "-25.9898, -348.74, -13.0398, 0.66", "-26.4905, -350.483, -13.2321, 0.66", "-27.0755, -352.128, -13.4421, 0.88", "-27.5484, -353.305, -13.6503, 0.88", "-27.9574, -354.28, -13.8876, 1.11", "-28.3096, -355.167, -14.1342, 1.18", "-28.5571, -355.862, -14.3052, 1.18", "-29.1722, -357.948, -14.7936, 0.88", "-29.5742, -359.731, -15.172, 1.25", "-29.8985, -361.695, -15.5221, 0.74", "-30.0993, -363.308, -15.7518, 0.59", "-30.2725, -365.157, -15.9436, 1.03", "-30.3588, -366.273, -15.9863, 0.74", "-30.449, -367.548, -15.9053, 0.59", "-30.4793, -367.807, -15.8662, 0.59", "-30.7278, -369.117, -15.6056, 0.74", "-30.7522, -369.199, -15.5988, 0.74", "-31.1528, -370.394, -15.6872, 0.59", "-31.1841, -370.484, -15.7003, 0.59", "-31.6734, -372.063, -15.9908, 0.74", "-32.0981, -373.66, -16.3165, 0.59", "-32.507, -375.739, -16.7794, 0.59", "-32.7892, -377.626, -17.2389, 0.59", "-32.9001, -378.965, -17.5952, 0.59", "-32.935, -380.144, -17.9232, 0.81", "-32.9238, -380.395, -17.9966, 0.81", "-32.7911, -381.391, -18.2821, 0.81", "-32.7781, -381.46, -18.2935, 0.81", "-32.6469, -382.667, -18.3619, 0.81", "-32.6479, -382.741, -18.3575, 0.81", "-32.7595, -384.004, -18.2119, 0.66", "-32.7663, -384.077, -18.2019, 0.66", "-32.9133, -385.538, -17.9808, 0.66", "-33.0208, -387.328, -17.6968, 0.44", "-33.0979, -389.71, -17.2981, 0.66", "-33.0411, -391.769, -16.8905, 0.96", "-32.894, -393.515, -16.4942, 0.96", "-32.8764, -393.643, -16.463, 0.96", "-32.5096, -395.332, -16.0118, 0.81", "-32.4629, -395.49, -15.9693, 0.81", "-31.8531, -397.227, -15.5809, 0.74", "-31.8249, -397.305, -15.5624, 0.74", "-31.5959, -398.122, -15.3909, 0.96", "-31.5582, -398.288, -15.3731, 0.96", "-31.3505, -399.698, -15.2939, 0.96", "-31.2443, -400.702, -15.2936, 0.96", "-31.2414, -400.787, -15.3019, 0.96", "-31.1986, -402.066, -15.4365, 0.52", "-31.1504, -403.475, -15.6063, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-28.1573, -61.9205, -15.7804, 0.74", "-29.0087, -61.8149, -15.3749, 0.74", "-29.0858, -61.8175, -15.3205, 0.74", "-30.15, -61.9916, -14.402, 0.52", "-30.706, -62.1125, -13.9143, 0.44", "-31.6326, -62.3223, -13.1436, 0.44", "-32.5273, -62.5245, -12.4541, 0.96", "-34.1721, -62.988, -11.2465, 0.74", "-35.1682, -63.3006, -10.5935, 0.74", "-35.6583, -63.4839, -10.3228, 0.74", "-36.3615, -63.7365, -10.001, 0.59", "-36.9771, -63.9209, -9.77746, 0.52", "-37.8508, -64.1328, -9.54038, 0.52", "-38.44, -64.2514, -9.43421, 0.88", "-39.4223, -64.4082, -9.26969, 0.59", "-40.9229, -64.5822, -8.93044, 0.96", "-42.6037, -64.7293, -8.4635, 1.33", "-43.247, -64.7744, -8.25518, 1.33", "-44.2864, -64.8451, -7.89569, 0.44", "-44.901, -64.8704, -7.68568, 0.44", "-46.2309, -64.8866, -7.28697, 0.44", "-46.2979, -64.8873, -7.27222, 0.44", "-47.36, -64.866, -7.12656, 0.81", "-48.0987, -64.8441, -6.96141, 0.96" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-28.1573, -61.9205, -15.7804, 0.59", "-28.9526, -62.7267, -16.1614, 0.59", "-29.376, -63.1854, -16.3346, 0.52", "-29.6279, -63.4591, -16.4404, 0.88", "-30.1056, -63.9377, -16.6773, 0.88", "-30.4423, -64.2456, -16.9211, 0.88", "-30.7472, -64.4939, -17.1838, 1.03", "-31.1888, -64.7586, -17.5979, 0.59", "-31.5687, -64.8937, -18.0366, 0.44", "-32.0718, -64.9367, -18.6791, 0.74", "-32.9215, -64.7762, -19.8678, 0.44", "-33.1377, -64.6829, -20.1676, 0.44", "-33.3851, -64.5438, -20.4951, 0.44", "-33.6745, -64.363, -20.8416, 0.74", "-33.8757, -64.2466, -21.0398, 0.96", "-33.9115, -64.2325, -21.0642, 0.96", "-34.302, -64.1478, -21.2356, 0.88", "-35.1355, -64.0101, -21.5995, 0.44", "-35.3906, -63.9653, -21.7089, 0.44", "-35.4302, -63.9548, -21.7317, 0.44", "-35.7147, -63.8481, -21.9155, 0.44", "-36.1317, -63.6438, -22.2131, 0.44", "-36.4041, -63.473, -22.4129, 0.81", "-36.6509, -63.2795, -22.6086, 1.33", "-37.4554, -62.6035, -23.2822, 1.33", "-37.7906, -62.3308, -23.5554, 1.25", "-38.1786, -62.0311, -23.8627, 0.96", "-38.5962, -61.7382, -24.1956, 0.88", "-39.0803, -61.4244, -24.5618, 0.74", "-39.4609, -61.1971, -24.8238, 0.74", "-39.9909, -60.8982, -25.159, 0.66", "-40.2777, -60.7374, -25.3571, 0.52", "-40.7465, -60.47, -25.683, 0.29", "-41.0478, -60.2762, -25.9394, 0.37", "-41.0811, -60.2516, -25.9714, 0.37", "-41.5633, -59.7772, -26.5383, 0.88", "-41.704, -59.5814, -26.7731, 1.25", "-41.8865, -59.2942, -27.1556, 1.18", "-42.2371, -58.7736, -27.8946, 0.66", "-42.2556, -58.7496, -27.931, 0.66", "-42.5091, -58.4687, -28.3558, 0.74", "-43.0704, -57.9609, -29.1484, 0.88", "-43.4952, -57.6231, -29.7051, 0.52", "-43.8343, -57.4185, -30.0733, 0.88", "-44.2288, -57.2718, -30.3965, 1.03", "-44.6659, -57.1618, -30.7102, 1.33", "-45.0717, -57.1043, -30.9519, 0.88", "-45.1129, -57.0994, -30.9735, 0.88", "-45.6408, -57.0337, -31.2716, 0.59", "-46.3048, -56.9426, -31.7189, 0.52", "-46.3785, -56.9299, -31.7752, 0.52", "-46.603, -56.8725, -31.96, 0.81", "-47.3228, -56.5741, -32.6661, 0.29", "-47.3517, -56.5605, -32.6986, 0.29", "-47.5887, -56.4306, -33.0546, 0.29", "-47.6789, -56.3803, -33.2107, 0.88", "-47.7795, -56.3395, -33.4135, 1.18", "-48.245, -56.2194, -34.4279, 0.37", "-48.5317, -56.1957, -35.0457, 0.74", "-48.9234, -56.2295, -35.8986, 1.03", "-48.9428, -56.2341, -35.9394, 1.03", "-49.3785, -56.3821, -36.7885, 0.44", "-49.4987, -56.4272, -36.9964, 1.18", "-49.7257, -56.5071, -37.3088, 1.47", "-50.309, -56.6602, -38.23, 0.81", "-50.5539, -56.7099, -38.6311, 0.52", "-50.8998, -56.7684, -39.2098, 0.37", "-51.1059, -56.7977, -39.5511, 0.37", "-51.3691, -56.8371, -39.9937, 1.18", "-52.7106, -57.0643, -42.32, 0.81", "-52.7566, -57.0729, -42.3992, 0.81", "-53.0125, -57.1323, -42.8438, 0.81", "-53.1962, -57.1766, -43.1358, 0.88", "-53.3903, -57.235, -43.4319, 0.81", "-53.847, -57.409, -44.0296, 0.29", "-53.9595, -57.453, -44.1272, 0.29", "-54.1479, -57.5457, -44.3279, 0.29", "-54.4849, -57.7536, -44.7363, 1.18", "-55.1911, -58.3157, -45.633, 0.59", "-55.4115, -58.537, -45.9034, 1.33", "-55.4388, -58.5695, -45.9347, 1.33", "-55.9645, -59.2491, -46.495, 0.74", "-56.2274, -59.6185, -46.7608, 0.66", "-56.5296, -60.0655, -47.0792, 0.37", "-56.8409, -60.5155, -47.3768, 0.88", "-57.1637, -60.9791, -47.6969, 1.03", "-57.4301, -61.364, -47.9802, 0.88", "-57.4519, -61.3971, -48.0047, 0.88", "-57.9607, -62.2827, -48.6918, 0.74", "-58.1921, -62.7229, -49.1095, 0.44", "-58.3153, -62.9568, -49.3647, 1.47", "-58.5745, -63.4123, -49.9354, 1.03", "-58.7371, -63.6448, -50.2752, 0.74", "-58.8994, -63.806, -50.5507, 0.74", "-59.5763, -64.2258, -51.4981, 0.52", "-59.9141, -64.3618, -51.9591, 0.66", "-60.2269, -64.4716, -52.4032, 0.37", "-60.4492, -64.5621, -52.7948, 0.29", "-60.6469, -64.6515, -53.1921, 0.29", "-60.8702, -64.7661, -53.6896, 0.74", "-61.1689, -64.9557, -54.4194, 0.96", "-61.5516, -65.2145, -55.4436, 0.96", "-62.0905, -65.5578, -56.9845, 0.88", "-62.1035, -65.5642, -57.0203, 0.88", "-62.3474, -65.644, -57.6551, 0.88", "-62.4684, -65.6622, -57.9329, 1.03", "-62.6829, -65.6755, -58.3451, 1.03", "-63.0544, -65.7073, -58.9377, 0.74", "-63.4831, -65.7996, -59.5618, 0.37", "-63.5068, -65.8096, -59.601, 0.37", "-63.9428, -66.0722, -60.3933, 0.37", "-64.3155, -66.3599, -61.1492, 0.37", "-64.6513, -66.6588, -61.8538, 0.88", "-64.9798, -66.948, -62.5039, 1.18", "-65.4622, -67.3435, -63.5419, 0.59", "-65.4813, -67.3552, -63.5831, 0.59", "-65.9258, -67.4945, -64.4932, 0.44", "-66.055, -67.4958, -64.7944, 0.37", "-66.2752, -67.439, -65.3665, 0.37", "-66.7768, -67.2132, -66.6758, 1.03", "-67.0363, -67.0675, -67.3238, 1.03", "-67.2638, -66.9518, -67.8503, 1.25", "-67.8283, -66.73, -69.1703, 1.18", "-67.8451, -66.7283, -69.2124, 1.18", "-68.1032, -66.7787, -69.8221, 0.59", "-68.2672, -66.8519, -70.1633, 0.74", "-68.4506, -66.9683, -70.5307, 0.74", "-69.0591, -67.4315, -71.756, 0.88", "-69.5844, -67.9015, -73.1277, 0.52", "-69.7142, -68.0342, -73.5331, 1.18", "-69.9136, -68.276, -74.311, 1.55", "-70.0083, -68.4005, -74.7249, 1.25", "-70.3426, -68.8579, -76.214, 0.74", "-70.9744, -69.757, -79.0131, 0.74", "-71.0473, -69.8685, -79.3605, 1.4", "-71.3811, -70.3996, -81.0915, 0.74", "-71.3992, -70.426, -81.1847, 0.74", "-71.5149, -70.5696, -81.7543, 0.59", "-71.5272, -70.5799, -81.7984, 0.59", "-72.1174, -70.877, -83.1201, 0.59", "-72.1531, -70.8919, -83.187, 0.59", "-72.5188, -71.0105, -83.7963, 0.66", "-72.7336, -71.0748, -84.1584, 0.88", "-73.5009, -71.2693, -85.4529, 0.44", "-73.6053, -71.2965, -85.6086, 1.03", "-74.2195, -71.4676, -86.2859, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-16.5463, -230.345, -110.631, 0.29", "-17.4123, -230.687, -111.073, 0.29", "-17.949, -230.877, -111.335, 0.29", "-18.7111, -231.128, -111.771, 0.22", "-19.0448, -231.255, -111.969, 0.81", "-19.3717, -231.392, -112.163, 0.81", "-19.6436, -231.517, -112.35, 0.81", "-20.0919, -231.744, -112.705, 0.52", "-20.9455, -232.229, -113.471, 0.22", "-21.5062, -232.586, -114.004, 0.22", "-21.7648, -232.768, -114.262, 0.81", "-22.4974, -233.32, -115.01, 0.96", "-22.6704, -233.465, -115.214, 1.11", "-23.2099, -233.996, -115.996, 0.22", "-23.4687, -234.267, -116.399, 0.22", "-23.6115, -234.417, -116.631, 0.74", "-23.7687, -234.593, -116.895, 0.96", "-24.3228, -235.268, -117.897, 0.59", "-24.8239, -235.91, -118.88, 0.29", "-25.1503, -236.352, -119.638, 0.22", "-25.2347, -236.463, -119.845, 0.37", "-25.6273, -236.952, -120.812, 0.22", "-25.9502, -237.346, -121.617, 0.81", "-26.0933, -237.517, -121.959, 1.03", "-26.5536, -238.141, -123.266, 0.37", "-26.7038, -238.363, -123.747, 0.52", "-27.0542, -238.887, -124.881, 0.29", "-27.2019, -239.094, -125.314, 0.66", "-27.3298, -239.271, -125.661, 0.81", "-27.8554, -240.101, -127.258, 0.29", "-27.9829, -240.331, -127.665, 0.44", "-27.9973, -240.364, -127.723, 0.44", "-28.1254, -240.677, -128.257, 0.59", "-28.2532, -241.127, -128.99, 1.03", "-28.3648, -242.013, -130.372, 1.03", "-28.3584, -242.804, -131.542, 0.29", "-28.2978, -243.54, -132.616, 0.88", "-28.2725, -243.804, -133.004, 1.25", "-28.128, -245.52, -135.537, 0.29", "-28.0486, -246.587, -137.113, 0.37", "-28.0187, -247.372, -138.234, 0.81", "-28.0108, -248.088, -139.266, 0.44", "-28.0362, -248.527, -139.891, 0.37", "-28.1197, -249.147, -140.753, 0.37", "-28.3626, -249.941, -141.771, 0.37", "-28.6265, -250.547, -142.5, 0.37", "-28.8571, -251.047, -143.061, 1.11", "-29.0119, -251.375, -143.418, 1.25", "-29.3939, -252.136, -144.297, 0.81", "-29.7789, -252.802, -145.078, 0.52", "-29.9989, -253.088, -145.404, 0.52", "-30.0299, -253.126, -145.451, 0.52", "-30.4248, -253.595, -146.027, 0.52", "-31.1125, -254.38, -147.061, 0.44", "-31.4423, -254.74, -147.539, 0.44", "-31.9685, -255.359, -148.425, 0.74", "-32.6086, -256.177, -149.618, 0.74", "-32.63, -256.206, -149.66, 0.74", "-33.1208, -256.971, -150.706, 0.37", "-33.3025, -257.264, -151.111, 0.81", "-33.8989, -258.162, -152.507, 0.29", "-34.1062, -258.436, -152.989, 0.29", "-34.3304, -258.701, -153.413, 0.88", "-34.4214, -258.812, -153.584, 1.25" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-16.5463, -230.345, -110.631, 0.59", "-16.2773, -232.603, -111.172, 0.59", "-16.1882, -233.541, -111.362, 0.59", "-16.1621, -233.802, -111.407, 0.81", "-16.0917, -234.41, -111.49, 0.81", "-15.9751, -235.29, -111.591, 0.15", "-15.8499, -236.098, -111.661, 0.15", "-15.8407, -236.156, -111.655, 0.15", "-15.7724, -236.496, -111.617, 0.59", "-15.6623, -237.001, -111.562, 0.88", "-15.635, -237.13, -111.55, 0.88", "-15.5678, -237.581, -111.518, 0.88", "-15.5012, -238.528, -111.454, 0.52", "-15.5139, -239.301, -111.412, 0.44", "-15.5548, -239.732, -111.395, 0.74", "-15.641, -240.275, -111.378, 0.44", "-15.8107, -241.021, -111.33, 0.29", "-15.9708, -241.528, -111.289, 0.88", "-16.1255, -241.995, -111.235, 0.96", "-16.3386, -242.722, -111.125, 0.81", "-16.5299, -243.564, -110.979, 0.29", "-16.6528, -244.453, -110.827, 0.44", "-16.6861, -245.088, -110.708, 0.22", "-16.6443, -246.107, -110.515, 0.22", "-16.5464, -246.729, -110.384, 0.59", "-16.362, -247.433, -110.188, 0.81", "-16.1505, -248.048, -109.991, 0.81", "-15.9733, -248.519, -109.839, 0.88", "-15.6915, -249.401, -109.549, 0.37", "-15.5477, -250.287, -109.292, 0.59", "-15.5135, -251.158, -109.091, 0.96", "-15.5472, -251.775, -108.977, 0.59", "-15.6548, -252.518, -108.879, 0.29", "-15.8644, -253.548, -108.867, 0.29", "-16.148, -254.666, -108.96, 0.74", "-16.319, -255.316, -109.061, 0.96", "-16.3422, -255.413, -109.078, 0.96", "-16.4565, -255.94, -109.159, 0.96", "-16.6503, -256.912, -109.288, 0.44", "-16.7742, -257.584, -109.359, 0.29", "-17.0021, -258.484, -109.406, 0.59", "-17.2618, -259.212, -109.406, 1.03", "-17.3596, -259.433, -109.4, 1.11", "-17.5744, -259.864, -109.373, 0.96", "-17.8508, -260.376, -109.322, 0.96", "-18.2855, -261.139, -109.246, 0.37", "-18.7182, -261.888, -109.183, 0.22", "-18.9765, -262.372, -109.154, 0.44", "-19.3818, -263.2, -109.1, 0.44", "-19.6175, -263.793, -109.052, 0.66", "-19.7894, -264.408, -108.993, 0.88", "-19.9224, -265.064, -108.941, 0.29", "-20.0759, -265.794, -108.818, 0.29", "-20.0927, -265.874, -108.799, 0.29", "-20.2553, -266.567, -108.605, 0.29", "-20.479, -267.448, -108.354, 0.29", "-20.7438, -268.443, -108.073, 0.29", "-21.1524, -269.688, -107.673, 0.59", "-21.2847, -269.999, -107.572, 0.74", "-21.6775, -270.801, -107.325, 0.29", "-22.0124, -271.424, -107.154, 0.29", "-22.0403, -271.483, -107.14, 0.29", "-22.2678, -272.244, -107.007, 0.81", "-22.3471, -272.725, -106.97, 1.25", "-22.3983, -273.258, -106.958, 0.88", "-22.4065, -274.157, -106.964, 0.52", "-22.3578, -275.262, -106.951, 0.29", "-22.3159, -275.818, -106.942, 0.66", "-22.2135, -276.551, -106.927, 0.74", "-21.959, -277.769, -106.851, 0.22", "-21.7758, -278.479, -106.781, 0.22", "-21.5637, -279.191, -106.652, 0.88", "-21.5447, -279.261, -106.634, 0.88", "-21.3847, -279.889, -106.419, 0.81", "-21.2183, -280.56, -106.17, 0.74", "-21.2068, -280.622, -106.147, 0.74", "-21.1447, -281.529, -105.904, 0.29", "-21.1522, -282.418, -105.737, 0.74", "-21.1824, -282.721, -105.695, 0.81", "-21.3575, -283.58, -105.645, 0.22", "-21.4849, -284.003, -105.654, 0.66", "-21.6322, -284.432, -105.691, 0.74", "-21.6537, -284.486, -105.7, 0.74", "-21.9273, -285.1, -105.835, 0.74", "-22.286, -285.806, -106.016, 0.22", "-22.6019, -286.371, -106.245, 0.22", "-22.6262, -286.415, -106.267, 0.22", "-22.774, -286.74, -106.447, 0.66", "-22.7926, -286.804, -106.481, 0.66", "-22.8434, -287.156, -106.662, 0.66", "-22.9426, -288.145, -107.126, 0.52", "-22.9457, -288.194, -107.157, 0.52", "-23.0052, -288.855, -107.587, 0.22", "-23.074, -289.392, -107.936, 1.03", "-23.1129, -289.721, -108.155, 1.11", "-23.1854, -290.326, -108.543, 0.88", "-23.4616, -292.269, -109.696, 0.22", "-23.5296, -292.737, -109.964, 0.88", "-23.6081, -293.24, -110.253, 0.59", "-23.7186, -293.992, -110.664, 0.52", "-23.7989, -294.676, -110.988, 0.81", "-23.806, -295.182, -111.238, 0.81", "-23.7167, -296.261, -111.858, 0.29", "-23.7089, -296.307, -111.889, 0.29", "-23.6026, -296.7, -112.194, 0.96", "-23.4638, -297.086, -112.534, 1.25", "-22.6902, -298.825, -114.207, 0.52", "-22.1084, -299.966, -115.362, 0.44", "-21.9281, -300.279, -115.678, 0.66", "-21.3621, -301.206, -116.592, 0.52", "-20.7046, -302.208, -117.536, 0.29", "-20.5384, -302.449, -117.745, 0.59", "-20.4691, -302.553, -117.813, 0.59", "-19.7769, -303.559, -118.342, 0.22", "-19.7379, -303.617, -118.37, 0.22", "-19.4718, -304.03, -118.488, 0.59", "-19.39, -304.156, -118.502, 0.59", "-19.2766, -304.328, -118.522, 0.59", "-19.2398, -304.383, -118.528, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-10.5094, 158.851, 6.13226, 0.29", "-11.7874, 159.631, 5.6609, 0.29", "-12.6705, 160.157, 5.41332, 0.29", "-13.8937, 160.875, 5.12909, 0.66", "-14.9604, 161.501, 4.85616, 0.29", "-15.495, 161.816, 4.71529, 0.37", "-16.5994, 162.476, 4.42631, 0.37", "-17.7414, 163.194, 4.17562, 0.59", "-18.314, 163.559, 4.04828, 0.81", "-19.2881, 164.183, 3.84837, 0.37", "-19.5964, 164.406, 3.80137, 0.88", "-20.0404, 164.763, 3.72364, 1.03", "-20.5969, 165.275, 3.61896, 0.81", "-21.033, 165.722, 3.54477, 0.37", "-21.0852, 165.787, 3.53966, 0.37", "-21.5869, 166.565, 3.53706, 0.37", "-21.6378, 166.659, 3.5355, 0.37", "-21.9906, 167.436, 3.61862, 0.37", "-22.0168, 167.506, 3.63323, 0.37", "-22.3907, 168.549, 3.94058, 0.22", "-22.5953, 169.126, 4.1333, 0.74", "-22.6179, 169.194, 4.15776, 0.74", "-23.1353, 170.785, 4.71673, 0.29", "-23.2329, 171.107, 4.83719, 0.66", "-23.3695, 171.546, 5.00555, 0.66", "-23.6234, 172.323, 5.30832, 0.37", "-23.7966, 172.882, 5.50401, 0.29", "-23.9593, 173.448, 5.65499, 0.29", "-24.17, 174.288, 5.79234, 0.96", "-24.188, 174.358, 5.80405, 0.96", "-24.2875, 174.818, 5.87611, 0.66", "-24.423, 175.52, 5.98088, 0.29", "-24.5694, 176.215, 6.06623, 0.29", "-24.5863, 176.286, 6.07071, 0.29", "-24.7627, 176.995, 6.07044, 1.11", "-24.885, 177.673, 6.05326, 1.47", "-24.9072, 177.859, 6.04533, 1.47", "-24.9894, 178.806, 5.99312, 0.66", "-25.0399, 179.545, 5.95315, 0.37", "-25.1, 180.474, 5.90574, 0.37", "-25.1876, 181.919, 5.7454, 0.29", "-25.2969, 183.447, 5.51354, 0.29", "-25.3073, 183.604, 5.48828, 0.29", "-25.3517, 184.584, 5.3136, 0.96", "-25.3739, 185.113, 5.21105, 1.18", "-25.4816, 186.836, 4.78258, 0.37", "-25.5641, 187.403, 4.58378, 0.37", "-31.1632, 196.122, 3.79727, 0.37", "-34.9907, 205.628, 1.72515, 0.37" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-10.5094, 158.851, 6.13226, 1.03", "-10.5596, 159.218, 6.23613, 1.03", "-10.7083, 160.098, 6.45606, 1.4", "-10.8878, 161.205, 6.6872, 1.4", "-10.8981, 161.274, 6.69983, 1.4", "-11.0293, 162.28, 6.85614, 1.25", "-11.136, 163.344, 7.01893, 0.81", "-11.1405, 163.414, 7.03216, 0.81", "-11.1705, 164.203, 7.19195, 0.96", "-11.1734, 164.482, 7.24234, 0.96", "-11.1711, 165.267, 7.39227, 1.18", "-11.1435, 166.166, 7.58178, 0.96", "-11.1249, 167.436, 7.80016, 1.18", "-11.1266, 167.54, 7.81432, 1.18", "-11.1637, 168.391, 7.87842, 1.18", "-11.2166, 169.359, 7.85856, 0.96", "-11.2224, 169.446, 7.8483, 0.96", "-11.2899, 170.617, 7.62286, 1.47", "-11.2924, 170.686, 7.60592, 1.47", "-11.2804, 171.765, 7.35849, 1.18", "-11.1979, 172.879, 7.10965, 0.81", "-11.1785, 173.003, 7.0873, 0.81", "-11.0299, 173.777, 7.06509, 0.74", "-11.0171, 173.838, 7.07538, 0.74", "-10.9523, 174.366, 7.22295, 0.74", "-10.9533, 174.432, 7.24813, 0.74", "-11.0387, 174.979, 7.46268, 0.81", "-11.3497, 176.174, 7.89118, 1.18", "-11.5116, 176.653, 8.05005, 1.4", "-11.8295, 177.515, 8.31361, 0.96", "-12.1536, 178.347, 8.54833, 0.96", "-12.4457, 179.088, 8.72956, 0.96", "-12.8114, 180.014, 8.89373, 0.96", "-12.8347, 180.078, 8.90596, 0.96", "-12.9869, 180.563, 9.0345, 0.96", "-13.0829, 180.924, 9.1489, 1.18", "-13.1206, 181.095, 9.21185, 1.18", "-13.2676, 181.807, 9.47845, 1.18", "-13.5585, 183.246, 9.98129, 0.96", "-13.8007, 184.425, 10.3946, 0.66", "-13.9208, 184.99, 10.5938, 0.66", "-14.0902, 185.744, 10.8394, 0.88", "-14.2602, 186.511, 11.0666, 0.88", "-14.4184, 187.239, 11.2581, 1.03", "-14.5856, 188.03, 11.4106, 1.03", "-14.5975, 188.089, 11.4228, 1.03", "-14.7371, 188.765, 11.5466, 1.11", "-14.8905, 189.48, 11.6506, 1.11", "-14.9137, 189.582, 11.6637, 1.11", "-15.1667, 190.63, 11.7677, 0.96", "-15.3463, 191.361, 11.8562, 0.96", "-15.5728, 192.353, 11.9994, 1.4", "-15.7201, 193.05, 12.1123, 1.03", "-15.8802, 193.918, 12.2487, 1.25", "-16.0225, 194.986, 12.4067, 0.88", "-16.0846, 195.986, 12.5431, 0.88", "-16.0838, 196.853, 12.6638, 0.88", "-16.0679, 197.053, 12.6904, 0.88", "-15.98, 197.774, 12.769, 0.88", "-15.8671, 198.76, 12.8409, 0.81", "-15.7813, 199.671, 12.8687, 0.81", "-15.78, 199.734, 12.8676, 0.81", "-15.8124, 200.339, 12.8919, 0.96", "-15.9509, 201.379, 12.9775, 0.96", "-16.168, 202.492, 13.1039, 1.03", "-16.1805, 202.546, 13.1112, 1.03", "-16.5378, 203.898, 13.3091, 1.03", "-16.8335, 205.019, 13.469, 1.03", "-17.1079, 206.138, 13.6216, 1.03", "-17.1908, 206.559, 13.6753, 1.03", "-17.2603, 207.087, 13.7307, 1.03", "-17.3352, 207.937, 13.7968, 0.88", "-17.3621, 208.975, 13.8316, 0.88", "-17.3466, 209.868, 13.809, 1.11", "-17.3213, 210.234, 13.7827, 1.11", "-17.2487, 211.212, 13.6741, 1.11", "-17.2368, 211.344, 13.6547, 1.11", "-17.1662, 212.025, 13.5324, 0.96", "-17.1621, 212.077, 13.5215, 0.96", "-17.1193, 213.159, 13.2828, 0.88", "-17.1184, 213.98, 13.1046, 0.66", "-17.1213, 214.105, 13.0797, 0.66", "-17.1312, 214.871, 12.9484, 0.66", "-17.1307, 214.941, 12.939, 0.66", "-17.0826, 215.752, 12.8707, 0.96", "-17.0677, 215.877, 12.8678, 0.96", "-16.9209, 216.677, 12.843, 0.96", "-16.8894, 216.825, 12.8377, 0.96", "-16.7966, 217.25, 12.8233, 0.96", "-16.6254, 218.063, 12.8407, 0.96", "-16.5036, 218.652, 12.877, 1.18", "-16.3813, 219.345, 12.9364, 0.74", "-16.2825, 220.168, 13.0206, 0.74", "-16.2511, 220.798, 13.0899, 1.18", "-16.3095, 221.775, 13.2015, 0.66", "-16.4395, 222.506, 13.2843, 0.66", "-16.6735, 223.381, 13.3761, 0.66", "-16.9676, 224.237, 13.4605, 1.18", "-17.2118, 224.853, 13.4972, 1.18", "-17.7267, 226.053, 13.5138, 0.96", "-18.0841, 226.872, 13.5158, 0.96", "-18.3336, 227.468, 13.5329, 0.66", "-18.3521, 227.517, 13.5354, 0.66", "-18.6723, 228.488, 13.605, 0.59", "-18.8496, 229.109, 13.6608, 1.03", "-19.1409, 230.252, 13.8483, 0.81", "-19.2955, 230.862, 13.9821, 1.03", "-19.3282, 230.981, 14.0119, 1.03", "-19.5509, 231.727, 14.2045, 1.03", "-19.635, 231.978, 14.2735, 1.03", "-19.9984, 232.987, 14.5252, 0.96", "-20.3165, 233.896, 14.6991, 0.96", "-20.524, 234.593, 14.8132, 0.96", "-20.6985, 235.3, 14.9097, 1.11", "-20.7913, 235.816, 14.961, 1.33", "-20.8004, 235.886, 14.9649, 1.33", "-20.8514, 236.835, 14.9508, 0.88", "-20.8394, 237.567, 14.9376, 1.11", "-20.8253, 237.7, 14.9398, 1.11", "-20.707, 238.284, 14.9701, 1.11", "-20.6895, 238.343, 14.9748, 1.11", "-20.4663, 238.938, 15.089, 0.88", "-20.4427, 238.993, 15.1037, 0.81", "-20.1851, 239.597, 15.2729, 1.03", "-20.0051, 240.038, 15.4034, 1.03", "-19.7388, 240.771, 15.6186, 0.81", "-19.4064, 241.881, 15.9281, 0.74", "-19.2213, 242.689, 16.1358, 0.74", "-19.082, 243.508, 16.3482, 0.88", "-19.0268, 243.967, 16.4616, 0.88", "-18.9859, 244.65, 16.6353, 0.88", "-18.9791, 245.1, 16.7429, 0.88", "-18.9639, 245.719, 16.8584, 0.88", "-18.8992, 246.605, 17.0118, 0.88", "-18.8336, 247.059, 17.0986, 0.88", "-18.8094, 247.189, 17.1219, 0.88", "-18.6295, 247.986, 17.2621, 0.88", "-18.4359, 248.822, 17.3929, 0.88", "-18.2189, 249.737, 17.5151, 0.44", "-18.0469, 250.574, 17.6293, 0.81", "-17.9548, 251.204, 17.7294, 1.25", "-17.8746, 251.996, 17.8677, 0.96", "-17.8371, 253.024, 18.0595, 1.33", "-17.844, 253.341, 18.1202, 1.47", "-17.9344, 254.671, 18.3547, 1.11", "-18.0206, 255.471, 18.4707, 0.96", "-18.0282, 255.532, 18.479, 0.96", "-18.1097, 256.238, 18.5511, 0.96", "-18.1148, 256.294, 18.5543, 0.96", "-18.1565, 257.196, 18.5733, 0.96", "-18.1552, 257.322, 18.5674, 0.96", "-18.0969, 258.496, 18.4857, 0.96", "-17.9928, 259.834, 18.325, 0.96", "-17.8705, 261.035, 18.137, 0.96", "-17.7852, 261.758, 18.0325, 0.96", "-17.6947, 262.404, 17.9412, 0.96", "-17.558, 263.281, 17.8261, 1.11", "-17.3321, 264.587, 17.6694, 1.11", "-17.3222, 264.642, 17.6674, 1.11", "-17.1028, 265.809, 17.7766, 1.11", "-17.0926, 265.869, 17.7891, 1.11", "-16.9699, 266.623, 18.021, 1.11", "-16.8701, 267.243, 18.2461, 1.18", "-16.7155, 268.299, 18.6752, 0.88", "-16.6093, 269.041, 18.9469, 0.66", "-16.6023, 269.101, 18.965, 0.66", "-16.5863, 269.668, 19.1164, 0.81", "-16.6158, 270.396, 19.2786, 0.81", "-16.6205, 270.459, 19.2887, 0.81", "-16.6842, 271.143, 19.3453, 0.66", "-16.747, 271.862, 19.378, 1.18", "-16.8388, 273.003, 19.4172, 1.03", "-16.8915, 273.724, 19.4327, 0.88", "-16.9437, 274.639, 19.4213, 0.74", "-16.9827, 275.684, 19.3775, 1.25", "-16.9967, 276.239, 19.3354, 1.03", "-16.9959, 276.371, 19.3228, 1.03", "-16.9667, 277.285, 19.1996, 1.03", "-16.9472, 278.025, 19.1483, 1.03", "-16.9426, 278.089, 19.1506, 1.03", "-16.8268, 279.032, 19.2849, 1.25", "-16.8155, 279.091, 19.3002, 1.25", "-16.5796, 280.059, 19.6177, 1.4", "-16.1482, 281.547, 20.2105, 0.74", "-15.873, 282.454, 20.6006, 0.59", "-15.8482, 282.533, 20.6346, 0.59", "-15.4842, 283.594, 21.0817, 0.59", "-15.288, 284.193, 21.2976, 0.81", "-15.2711, 284.25, 21.3136, 0.81", "-15.1142, 284.949, 21.3945, 0.81", "-15.0868, 285.136, 21.4035, 0.81", "-15.0035, 285.914, 21.4126, 1.03", "-14.9428, 286.691, 21.3901, 1.25", "-14.8802, 287.285, 21.405, 1.25", "-14.8731, 287.338, 21.4083, 1.25", "-14.7551, 288.097, 21.5246, 0.96", "-14.5713, 289.2, 21.7588, 0.74", "-14.4932, 289.694, 21.9156, 0.74", "-14.3244, 290.799, 22.34, 0.88", "-14.2523, 291.348, 22.5684, 0.74", "-14.1239, 292.5, 23.0563, 0.74", "-14.078, 293.078, 23.304, 0.74", "-14.0341, 294.223, 23.7809, 0.96", "-14.0341, 294.905, 24.0342, 1.03", "-14.068, 295.586, 24.2376, 1.03", "-14.1091, 296.266, 24.4006, 1.18", "-14.1428, 297.008, 24.5044, 0.59", "-14.1516, 297.448, 24.5426, 0.37", "-14.1455, 297.802, 24.5461, 0.81", "-14.1285, 298.171, 24.5385, 0.81", "-14.096, 298.861, 24.5076, 0.81", "-14.0931, 299.502, 24.4669, 0.81", "-14.1332, 300.036, 24.4262, 0.88", "-14.2138, 300.463, 24.3929, 0.81", "-14.4214, 301.151, 24.3406, 0.74", "-14.6867, 301.826, 24.2924, 0.74", "-15.0224, 302.514, 24.2486, 0.96", "-15.3904, 303.2, 24.215, 0.44", "-15.7535, 303.85, 24.1935, 0.44", "-16.0938, 304.469, 24.1865, 0.96", "-16.1275, 304.532, 24.1876, 0.96", "-16.3482, 304.997, 24.1959, 0.96", "-16.5921, 305.592, 24.2057, 0.96", "-16.6514, 305.769, 24.2158, 0.96", "-16.8465, 306.312, 24.2685, 0.81", "-16.9112, 306.492, 24.3043, 0.81", "-17.2077, 307.284, 24.5098, 0.81", "-17.228, 307.339, 24.5262, 0.81", "-17.488, 308.064, 24.7633, 0.96", "-17.7603, 308.898, 25.0346, 0.81", "-18.0795, 309.985, 25.3928, 0.81", "-18.0935, 310.042, 25.4106, 0.81", "-18.2176, 310.795, 25.6106, 0.81", "-18.2233, 310.856, 25.6219, 0.81", "-18.2294, 311.581, 25.6249, 0.59", "-18.2255, 311.674, 25.6193, 0.59", "-18.2055, 312.187, 25.5396, 0.59", "-18.1731, 312.914, 25.4125, 0.59", "-18.1273, 313.768, 25.2313, 0.81", "-18.0481, 315.0, 24.936, 0.81" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "3.39815, 98.4819, -49.252, 0.52", "5.1842, 99.8953, -51.5541, 0.52", "5.22791, 99.9376, -51.6125, 0.52", "6.05894, 100.974, -52.7456, 0.44", "6.10665, 101.05, -52.8142, 0.44", "6.53654, 101.717, -53.439, 0.88", "6.99077, 102.327, -54.0349, 1.11", "7.03646, 102.393, -54.0911, 1.11", "7.67417, 103.144, -54.7786, 1.03", "8.70968, 104.142, -55.7696, 0.37", "10.0988, 105.166, -57.0499, 0.44", "10.8881, 105.616, -57.7411, 0.44", "11.015, 105.684, -57.8519, 0.44", "11.667, 106.084, -58.5146, 0.44", "11.7353, 106.145, -58.6077, 0.44", "12.4599, 107.146, -59.9421, 0.96", "12.6243, 107.548, -60.3712, 1.33", "12.9181, 108.504, -61.2778, 1.18", "13.3028, 109.962, -62.5491, 0.81", "13.6615, 111.558, -63.7748, 0.37", "13.6826, 111.65, -63.8388, 0.37", "13.895, 112.58, -64.3809, 0.66", "14.0728, 113.187, -64.7265, 0.88", "14.1416, 113.387, -64.8245, 0.88", "14.4878, 114.3, -65.2461, 0.88", "14.9182, 115.443, -65.7872, 0.74", "15.2457, 116.449, -66.2754, 0.59", "15.6364, 117.87, -66.9719, 1.03", "15.8583, 118.979, -67.495, 0.29", "16.0536, 120.28, -68.0518, 0.81", "16.1183, 120.959, -68.306, 0.88", "16.1542, 121.76, -68.5437, 0.96", "16.172, 122.559, -68.7739, 0.66", "16.189, 123.985, -69.1263, 0.22", "16.2311, 125.31, -69.4409, 1.62", "16.2822, 126.224, -69.6315, 1.99", "16.3372, 127.041, -69.7842, 1.77", "16.4391, 128.744, -70.0536, 1.25", "16.4979, 130.012, -70.1966, 0.81", "16.5344, 130.986, -70.26, 0.66", "16.5536, 132.027, -70.2896, 0.81", "16.5745, 133.263, -70.2742, 0.29", "16.5903, 134.73, -70.1868, 0.29", "16.5931, 135.493, -70.0794, 0.44", "16.595, 135.593, -70.0643, 0.44", "16.6212, 136.744, -69.9092, 0.59", "16.6509, 137.518, -69.8278, 1.11", "16.6918, 138.376, -69.7703, 1.11", "16.7502, 139.476, -69.7172, 0.88", "16.8304, 141.066, -69.6668, 0.52", "16.9192, 142.845, -69.6214, 0.52", "17.0074, 144.483, -69.5899, 0.66", "17.0937, 145.837, -69.5778, 0.29", "17.2029, 147.14, -69.5872, 0.81", "17.2153, 147.243, -69.5907, 0.81", "17.3402, 147.92, -69.6358, 1.03", "17.4047, 148.154, -69.6628, 1.03", "17.6593, 148.941, -69.7917, 1.03", "17.9649, 149.809, -69.9611, 0.96", "18.2063, 150.58, -70.1274, 0.66", "18.4358, 151.599, -70.3446, 0.52", "18.5032, 152.315, -70.4896, 0.44", "18.5019, 153.669, -70.7499, 0.44", "18.4741, 153.883, -70.7854, 0.44", "18.2773, 154.69, -70.886, 0.37", "17.9362, 155.695, -70.9625, 0.37", "17.441, 156.981, -70.9884, 1.03", "17.407, 157.075, -70.9889, 1.03", "17.1585, 157.893, -70.9882, 1.18", "16.963, 158.715, -70.9872, 0.59", "16.8103, 159.669, -70.9859, 0.37", "16.7288, 160.717, -70.9902, 0.29", "16.7129, 162.116, -70.9592, 0.22", "16.7164, 162.783, -70.9327, 0.44", "16.7224, 163.006, -70.9218, 0.44", "16.7516, 163.928, -70.7843, 0.44", "16.7557, 164.025, -70.7563, 0.44", "16.8131, 165.377, -70.2441, 0.74", "16.8484, 166.443, -69.7857, 1.33", "16.8961, 167.76, -69.1856, 1.4", "16.9772, 169.812, -68.2395, 0.52", "17.0257, 171.142, -67.6398, 0.59", "17.0544, 172.133, -67.2277, 0.74", "17.0751, 172.815, -66.983, 0.74", "17.0777, 172.928, -66.9507, 0.74", "17.0815, 173.745, -66.7992, 0.44", "17.0582, 174.9, -66.7509, 0.52", "17.0509, 175.662, -66.7561, 0.66", "17.0571, 176.349, -66.7383, 0.44", "17.0782, 177.299, -66.6916, 0.22", "17.1023, 178.627, -66.6045, 0.66", "17.1011, 179.286, -66.569, 0.88", "17.0824, 180.211, -66.5287, 0.29", "17.0347, 181.329, -66.486, 0.22", "16.9884, 182.076, -66.4648, 0.37", "16.9257, 182.843, -66.4799, 0.52", "16.8108, 184.007, -66.5956, 0.29", "16.756, 184.616, -66.6736, 0.59", "16.7459, 184.849, -66.7003, 0.59", "16.7751, 185.483, -66.7605, 0.59", "16.7875, 185.583, -66.7656, 0.59", "16.9454, 186.509, -66.7773, 0.59", "17.2118, 187.873, -66.7046, 0.44", "17.424, 188.994, -66.6187, 0.59", "17.588, 189.925, -66.5381, 1.03", "17.728, 190.859, -66.4511, 1.03", "17.8292, 191.8, -66.3637, 0.81", "17.889, 192.796, -66.2755, 0.59", "17.8914, 193.855, -66.2027, 0.37", "17.8217, 195.359, -66.1419, 0.37", "17.7401, 196.596, -66.1046, 0.37", "17.6639, 197.594, -66.0878, 0.44", "17.5799, 198.642, -66.0881, 0.44", "17.5261, 199.63, -66.089, 0.29", "17.4889, 200.906, -66.0675, 0.29", "17.51, 201.89, -66.0338, 0.81", "17.5865, 202.832, -65.9563, 1.11", "17.7068, 203.779, -65.8433, 0.81", "17.9154, 205.166, -65.6395, 0.52", "17.9319, 205.264, -65.6228, 0.52", "18.1058, 206.499, -65.3963, 0.52", "18.2261, 207.847, -65.1513, 0.29", "18.2666, 208.779, -64.9898, 0.59", "18.2352, 209.718, -64.8554, 0.81", "18.2106, 209.918, -64.8355, 0.81", "18.0929, 210.802, -64.7686, 0.81", "17.997, 211.654, -64.7313, 0.66", "17.9874, 211.769, -64.7308, 0.66", "17.9226, 212.829, -64.7256, 0.44", "17.8533, 214.098, -64.7202, 0.37", "17.7982, 215.277, -64.7175, 0.37", "17.7396, 216.553, -64.7171, 0.52", "17.6795, 217.587, -64.7195, 0.37", "17.6042, 218.413, -64.725, 0.37", "17.51, 219.28, -64.7363, 0.81", "17.4005, 220.09, -64.7535, 0.88", "17.278, 220.795, -64.7682, 0.59", "17.1992, 221.216, -64.777, 0.44", "17.017, 222.485, -64.8039, 0.37", "16.8892, 223.991, -64.8363, 0.37", "16.887, 224.736, -64.8769, 0.66", "16.8942, 224.851, -64.8861, 0.66", "17.0693, 225.971, -64.9984, 0.74", "17.1809, 226.538, -65.0621, 0.88", "17.5113, 227.815, -65.2337, 0.59", "17.8926, 229.073, -65.435, 0.29", "17.9299, 229.181, -65.4541, 0.29", "18.567, 230.851, -65.7755, 1.18" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "3.39815, 98.4819, -49.252, 0.59", "3.35837, 99.0262, -49.1768, 0.59", "3.32183, 99.4169, -49.1161, 0.29", "3.28722, 99.7424, -49.067, 0.29", "3.2369, 100.171, -49.0061, 0.29", "3.10564, 101.152, -48.8749, 0.29", "3.01353, 101.785, -48.7971, 0.74", "2.93997, 102.198, -48.7577, 0.74", "2.85724, 102.623, -48.7302, 0.52", "2.80592, 102.88, -48.7234, 0.44", "2.74205, 103.198, -48.7235, 0.29", "2.67033, 103.574, -48.7385, 0.29", "2.58648, 104.071, -48.77, 0.66", "2.53749, 104.396, -48.7825, 0.96", "2.50333, 104.699, -48.7816, 0.66", "2.49419, 104.81, -48.7775, 0.66", "2.47457, 105.15, -48.7561, 0.44", "2.4476, 105.498, -48.7292, 0.29", "2.41297, 105.84, -48.7007, 0.22", "2.31273, 106.394, -48.6298, 0.29", "2.30099, 106.439, -48.6236, 0.29", "2.16947, 106.854, -48.5634, 0.37", "2.00061, 107.301, -48.5063, 0.66", "1.86917, 107.609, -48.472, 0.96", "1.57035, 108.31, -48.4039, 0.81", "1.39538, 108.757, -48.363, 0.59", "1.37984, 108.806, -48.359, 0.59", "1.25275, 109.342, -48.3217, 0.59", "1.19966, 109.683, -48.3034, 0.66", "1.14259, 110.411, -48.273, 0.22", "1.14862, 110.778, -48.2653, 0.22", "1.18042, 111.236, -48.2434, 0.74", "1.21349, 111.624, -48.221, 0.81", "1.21817, 111.677, -48.2177, 0.81", "1.24147, 112.101, -48.1955, 0.88", "1.24851, 112.442, -48.1777, 0.81", "1.25031, 112.855, -48.1615, 0.29", "1.21446, 113.56, -48.1521, 0.29", "1.12686, 114.56, -48.1586, 0.74", "1.06614, 115.041, -48.1722, 1.11", "0.994205, 115.462, -48.1958, 0.88", "0.845359, 116.149, -48.245, 0.22", "0.666859, 116.862, -48.305, 0.22", "0.64898, 116.933, -48.3133, 0.22", "0.608985, 117.112, -48.3472, 0.22", "0.532112, 117.522, -48.4396, 0.74", "0.485633, 117.779, -48.5039, 1.11", "0.403727, 118.268, -48.6539, 1.25", "0.320456, 118.826, -48.8356, 0.74", "0.211132, 119.578, -49.1034, 0.22", "0.143597, 120.029, -49.27, 0.37", "0.0480958, 120.629, -49.4938, 0.37", "-0.0990446, 121.485, -49.8015, 0.52", "-0.162396, 121.833, -49.918, 0.88", "-0.30698, 122.566, -50.133, 1.03", "-0.396788, 123.029, -50.2513, 0.66", "-0.493312, 123.55, -50.3708, 0.29", "-0.59636, 124.132, -50.4848, 0.22", "-0.688649, 124.626, -50.5572, 0.22", "-0.777155, 125.099, -50.6183, 0.44", "-0.833383, 125.415, -50.6495, 0.59", "-0.899774, 125.873, -50.6933, 0.37", "-0.950556, 126.324, -50.7331, 0.29", "-0.989698, 126.86, -50.7735, 0.44", "-0.993613, 127.37, -50.8165, 0.29", "-0.935438, 127.939, -50.8908, 0.66", "-0.890591, 128.288, -50.9525, 1.03", "-0.857898, 128.508, -50.9989, 1.25", "-0.801358, 128.944, -51.1054, 0.44", "-0.742259, 129.604, -51.2894, 0.52", "-0.712029, 130.373, -51.5286, 0.29", "-0.716235, 131.282, -51.8233, 0.29", "-0.717465, 131.349, -51.8433, 0.29", "-0.726201, 131.761, -51.9666, 0.29", "-0.716631, 132.339, -52.1149, 0.81", "-0.713715, 132.391, -52.1238, 0.81", "-0.665576, 132.735, -52.1672, 0.88", "-0.534484, 133.247, -52.2584, 0.88", "-0.417645, 133.692, -52.3547, 0.44", "-0.264157, 134.286, -52.5006, 0.22", "-0.12569, 134.859, -52.6923, 0.22", "0.026105, 135.576, -52.9782, 0.81", "0.118788, 136.146, -53.2379, 0.88", "0.155484, 136.541, -53.4273, 0.96", "0.169996, 136.876, -53.5876, 0.96", "0.167593, 137.696, -54.0016, 0.44", "0.167539, 137.742, -54.0234, 0.44", "0.164918, 138.196, -54.189, 0.44", "0.162814, 138.835, -54.3823, 0.66", "0.163036, 138.941, -54.4123, 0.66", "0.1692, 139.237, -54.5117, 0.88", "0.183252, 139.743, -54.6887, 0.52", "0.212836, 140.197, -54.8684, 0.37", "0.29255, 141.222, -55.3366, 1.11", "0.306254, 141.463, -55.4604, 1.25", "0.319415, 142.412, -55.9731, 0.22", "0.316871, 142.457, -55.9992, 0.22", "0.268736, 142.77, -56.2189, 0.22", "0.176286, 143.142, -56.5035, 0.22", "0.086539, 143.379, -56.6762, 0.74", "-0.00910809, 143.6, -56.8358, 1.03", "-0.171776, 143.936, -57.0587, 0.81", "-0.43935, 144.521, -57.4445, 0.52", "-0.521344, 144.726, -57.6026, 0.37", "-0.644051, 145.126, -57.938, 0.29", "-0.73429, 145.542, -58.2814, 0.59", "-0.764786, 145.802, -58.479, 0.96", "-0.774343, 146.065, -58.6581, 1.11", "-0.786801, 146.888, -59.1274, 0.37", "-0.787241, 146.933, -59.1516, 0.37", "-0.814895, 147.432, -59.3828, 0.29", "-0.888185, 147.943, -59.5576, 0.29", "-0.901383, 147.991, -59.5704, 0.29", "-1.10129, 148.479, -59.6664, 0.37", "-1.21705, 148.724, -59.6946, 0.59", "-1.45883, 149.22, -59.7483, 0.74", "-1.66604, 149.623, -59.7915, 0.52", "-1.97505, 150.24, -59.8527, 0.22", "-2.16935, 150.678, -59.8908, 0.22", "-2.30323, 151.035, -59.9357, 0.22", "-2.47307, 151.56, -60.0245, 0.74", "-2.59744, 152.019, -60.1194, 0.88", "-2.69695, 152.435, -60.2209, 0.74", "-2.80872, 152.951, -60.3555, 0.66", "-3.0051, 153.811, -60.5981, 0.29", "-3.15282, 154.384, -60.7725, 0.29", "-3.23035, 154.684, -60.8674, 0.44", "-3.25654, 154.788, -60.8995, 0.44", "-3.32889, 155.09, -60.9824, 0.44", "-3.39237, 155.384, -61.0441, 0.29", "-3.44282, 155.685, -61.0766, 0.74", "-3.48135, 156.119, -61.1028, 0.96", "-3.48916, 156.343, -61.111, 0.88", "-3.49097, 156.886, -61.124, 0.29", "-3.48319, 157.259, -61.1293, 0.44", "-3.46738, 157.738, -61.1329, 0.29", "-3.46395, 158.434, -61.1422, 0.37", "-3.46369, 158.729, -61.1453, 0.59", "-3.4546, 159.163, -61.1471, 0.74", "-3.44997, 159.434, -61.1486, 0.52", "-3.44691, 159.772, -61.1441, 0.37", "-3.45718, 160.57, -61.1059, 0.52", "-3.47431, 161.225, -61.0565, 0.44", "-3.50122, 162.186, -60.9657, 0.88", "-3.50848, 162.571, -60.9233, 1.25", "-3.51801, 162.958, -60.8796, 1.03", "-3.53521, 163.566, -60.8076, 0.29", "-3.5581, 164.092, -60.7471, 0.44", "-3.61792, 164.683, -60.7098, 0.37", "-3.69968, 165.247, -60.7058, 0.74", "-3.79281, 165.831, -60.7348, 0.74", "-3.80237, 165.881, -60.7408, 0.74", "-3.92794, 166.45, -60.8353, 0.74", "-4.08594, 167.072, -60.9493, 0.22", "-4.16932, 167.394, -61.0085, 0.52", "-4.26234, 167.755, -61.0714, 0.96", "-4.4017, 168.32, -61.1605, 0.22", "-4.50647, 168.783, -61.222, 0.66", "-4.58955, 169.208, -61.2638, 1.03", "-4.69883, 169.803, -61.2769, 0.81", "-4.82429, 170.449, -61.2674, 0.52", "-4.90147, 170.814, -61.2609, 0.44", "-5.07912, 171.567, -61.2517, 0.37", "-5.25436, 172.227, -61.2506, 0.88", "-5.45302, 172.948, -61.2543, 1.25", "-5.56592, 173.371, -61.2585, 0.88", "-5.70246, 173.945, -61.2675, 0.44", "-5.84291, 174.571, -61.2884, 0.59", "-5.9191, 174.944, -61.3086, 0.81", "-5.99156, 175.359, -61.3409, 0.59", "-6.06258, 175.885, -61.3918, 0.37", "-6.15352, 176.748, -61.4453, 0.52", "-6.21173, 177.301, -61.4618, 0.37", "-6.24425, 177.555, -61.4704, 0.74", "-6.31472, 177.928, -61.4897, 0.88", "-6.3695, 178.128, -61.514, 0.88", "-6.47356, 178.482, -61.6079, 1.11", "-6.55847, 178.843, -61.7356, 1.03", "-6.62178, 179.187, -61.8715, 0.37", "-6.68047, 179.602, -62.0416, 0.37", "-6.72706, 180.234, -62.3096, 0.66", "-6.76066, 181.21, -62.7104, 0.29", "-6.76748, 181.86, -62.9629, 0.52", "-6.76733, 181.903, -62.9786, 0.52", "-6.76441, 182.268, -63.0953, 0.66", "-6.7678, 182.909, -63.2606, 0.37", "-6.79646, 183.635, -63.3982, 0.66", "-6.84155, 184.167, -63.4715, 0.59", "-6.88999, 184.547, -63.5096, 0.74", "-6.96722, 185.052, -63.5392, 0.37", "-7.10047, 185.734, -63.5027, 0.59", "-7.1236, 185.835, -63.4876, 0.59", "-7.21699, 186.231, -63.4121, 0.37", "-7.4023, 187.017, -63.2445, 0.29", "-7.55802, 187.693, -63.1089, 0.52", "-7.80473, 188.774, -62.902, 0.22", "-7.93776, 189.446, -62.7867, 0.52", "-8.00672, 189.801, -62.7418, 0.81", "-8.09219, 190.212, -62.7175, 0.52", "-8.24306, 190.937, -62.742, 0.74", "-8.25498, 190.987, -62.7486, 0.74", "-8.44538, 191.632, -62.9074, 1.33", "-8.62304, 192.124, -63.0364, 0.88", "-8.85786, 192.67, -63.1831, 0.66", "-9.12099, 193.185, -63.3184, 0.52", "-9.45375, 193.777, -63.4763, 0.52", "-9.73775, 194.254, -63.6102, 0.52", "-10.0794, 194.775, -63.7701, 0.29", "-10.3113, 195.142, -63.8797, 0.52", "-10.5336, 195.484, -63.9803, 0.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "35.7842, 63.2353, 16.3493, 0.59", "38.6704, 63.3203, 13.6214, 0.59", "40.1776, 63.4281, 12.3702, 0.74", "40.2418, 63.4344, 12.3215, 0.74", "40.9021, 63.5288, 11.8673, 0.74", "41.9985, 63.6908, 11.2184, 0.96", "42.0696, 63.698, 11.1807, 0.96", "42.8766, 63.7552, 10.9854, 0.96", "42.9552, 63.7577, 10.9671, 0.96", "44.4749, 63.8111, 10.5552, 0.52", "45.4674, 63.8519, 10.2463, 0.52", "46.8061, 63.9164, 9.81034, 0.81", "47.5373, 63.9654, 9.57913, 0.88", "48.8126, 64.0263, 9.14779, 0.52", "49.1955, 64.0508, 9.02743, 0.74", "49.3446, 64.0621, 8.9663, 0.74", "49.8893, 64.1323, 8.67839, 0.29", "50.5674, 64.264, 8.27681, 0.59", "51.7522, 64.5199, 7.3985, 0.74", "52.412, 64.6757, 6.87238, 0.59", "53.9829, 65.063, 5.52354, 1.03", "54.0796, 65.0901, 5.43921, 1.03", "54.3896, 65.1879, 5.1586, 0.74", "55.65, 65.6847, 3.9917, 0.44", "56.1238, 65.9235, 3.57316, 0.59", "57.0126, 66.3801, 2.85753, 0.66", "57.5722, 66.6719, 2.51799, 0.74", "57.6362, 66.7032, 2.48227, 0.74", "57.8774, 66.8187, 2.36297, 0.74", "57.9362, 66.8479, 2.34078, 0.74", "59.2194, 67.5207, 1.68726, 0.29", "59.5735, 67.7584, 1.40867, 0.66", "59.6715, 67.8397, 1.2946, 0.66", "59.9067, 68.0185, 0.978652, 0.88", "59.9493, 68.0494, 0.904281, 0.88", "60.7182, 68.6451, -0.658655, 0.29", "61.3295, 69.1525, -2.07858, 0.29", "62.0255, 69.7427, -3.83087, 1.11", "62.6578, 70.2876, -5.52185, 0.96", "63.7849, 71.3374, -8.74929, 0.66", "63.9883, 71.5468, -9.37498, 0.66", "64.0472, 71.6202, -9.5788, 0.66", "64.3352, 72.0359, -10.6016, 0.59", "64.3815, 72.1212, -10.7634, 0.59", "64.7245, 73.0031, -11.892, 0.52", "64.7442, 73.0474, -11.9297, 0.52", "65.0046, 73.5355, -12.319, 0.96", "65.3489, 74.1196, -12.7366, 1.11", "66.1291, 75.3496, -13.4752, 0.29", "66.1698, 75.4011, -13.5078, 0.29", "66.5381, 75.7113, -13.7528, 0.52", "66.5894, 75.7451, -13.7867, 0.52", "66.7887, 75.854, -13.916, 0.74", "66.8473, 75.8866, -13.9594, 0.74", "67.7466, 76.5154, -14.6463, 0.74", "68.4683, 77.1667, -15.2577, 0.59", "68.5144, 77.217, -15.3009, 0.59", "68.9081, 77.7031, -15.6605, 0.29", "69.4954, 78.5452, -16.1892, 0.29", "69.9314, 79.2629, -16.5982, 0.88", "70.1412, 79.6968, -16.7915, 1.11", "70.1688, 79.7585, -16.8164, 1.11", "70.4717, 80.3709, -17.0562, 0.88", "70.6188, 80.6028, -17.1606, 0.52", "71.3056, 81.4549, -17.5506, 0.37", "71.9661, 82.1443, -17.9077, 0.22", "72.0219, 82.1979, -17.9366, 0.22", "72.3763, 82.5504, -18.1189, 0.74", "73.147, 83.3741, -18.5958, 0.88", "73.5268, 83.7799, -18.8265, 0.22", "73.9109, 84.1366, -19.053, 0.29", "73.9688, 84.1812, -19.0864, 0.29", "74.4518, 84.48, -19.4347, 0.29", "75.4569, 84.9328, -20.302, 0.88", "75.8365, 85.0649, -20.6363, 1.18", "77.0114, 85.3911, -21.6927, 0.29", "77.5388, 85.5184, -22.1664, 0.88", "79.3281, 85.9584, -23.7459, 1.33", "80.7963, 86.3049, -25.0002, 0.52", "81.2961, 86.4325, -25.4134, 1.25", "81.3481, 86.4498, -25.4563, 1.25", "82.5136, 86.9831, -26.4194, 0.29", "83.0702, 87.3024, -26.8604, 0.29", "83.5543, 87.6701, -27.1572, 0.59", "83.814, 87.8962, -27.3072, 0.96", "84.3459, 88.3548, -27.6175, 0.96", "85.2193, 89.0303, -28.0966, 0.59", "85.2809, 89.0724, -28.1261, 0.59", "85.7665, 89.3836, -28.3466, 0.29", "86.4505, 89.8424, -28.637, 0.44", "86.8633, 90.1318, -28.7979, 0.66", "87.4704, 90.6096, -29.0434, 0.29", "87.8581, 90.9344, -29.1779, 0.22", "88.3677, 91.3718, -29.3631, 0.66", "88.64, 91.6046, -29.4608, 0.74", "88.9202, 91.8561, -29.558, 0.59", "89.9114, 92.686, -29.878, 0.22", "90.3648, 92.9666, -30.0111, 0.44", "90.4386, 92.9944, -30.0307, 0.44", "90.8608, 93.0876, -30.1225, 0.59", "90.9277, 93.0985, -30.1374, 0.59", "91.5758, 93.1765, -30.2749, 0.59", "92.6188, 93.2933, -30.4681, 0.22", "93.1853, 93.4005, -30.5844, 0.59", "93.5593, 93.4928, -30.6606, 0.66", "94.2743, 93.7219, -30.8599, 0.66", "94.3383, 93.7476, -30.8798, 0.66", "95.1834, 94.1678, -31.1853, 0.22", "95.7784, 94.5116, -31.4032, 0.66", "96.043, 94.6724, -31.5046, 0.96", "97.424, 95.5407, -32.0323, 0.22", "97.9082, 95.8441, -32.2513, 0.22", "98.6446, 96.291, -32.717, 0.59", "99.0056, 96.5035, -33.0219, 0.96", "99.1801, 96.5985, -33.1876, 1.18", "99.2271, 96.6219, -33.2336, 1.18", "100.469, 97.1318, -34.353, 0.44", "101.509, 97.464, -35.2003, 0.37", "102.305, 97.6717, -35.7847, 0.29", "102.793, 97.7885, -36.1014, 0.44", "103.154, 97.8808, -36.3197, 0.44", "104.179, 98.1687, -36.8281, 0.22", "104.935, 98.361, -37.0688, 0.81", "105.076, 98.393, -37.1025, 0.81", "105.535, 98.4684, -37.1993, 0.96", "107.291, 98.7002, -37.568, 0.37", "108.304, 98.8483, -37.7879, 0.37", "109.282, 99.0224, -38.072, 0.29", "109.338, 99.0305, -38.0915, 0.29", "110.054, 99.1136, -38.3586, 0.29", "110.607, 99.1691, -38.5619, 0.74", "111.302, 99.2409, -38.7447, 1.03", "112.561, 99.4019, -39.0534, 0.88", "114.236, 99.692, -39.271, 0.29", "114.807, 99.7848, -39.2728, 0.44", "115.6, 99.8921, -39.183, 0.29", "116.84, 99.9956, -38.8851, 1.33", "117.272, 100.004, -38.7177, 1.69", "118.653, 99.9936, -37.9903, 0.29", "119.234, 99.9876, -37.6277, 0.29", "119.59, 99.9666, -37.4141, 0.66", "119.645, 99.9606, -37.3852, 0.66", "120.068, 99.8972, -37.2238, 0.66", "120.822, 99.7492, -37.0037, 0.22", "121.294, 99.6052, -36.9093, 0.44", "121.368, 99.5798, -36.891, 0.44", "121.914, 99.3774, -36.7382, 0.44", "121.969, 99.3567, -36.7307, 0.44", "122.698, 99.1081, -36.6929, 0.29", "123.509, 98.8329, -36.7401, 0.29", "124.114, 98.6295, -36.8196, 0.74", "124.448, 98.52, -36.8751, 0.96", "126.215, 97.9742, -37.2658, 0.37", "126.61, 97.868, -37.3747, 1.03", "127.6, 97.6717, -37.7511, 1.03", "128.049, 97.6096, -37.9733, 0.88" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "35.7842, 63.2353, 16.3493, 0.88", "36.5089, 64.7414, 18.7252, 0.88", "36.9385, 65.5336, 19.7435, 0.66", "37.1765, 66.0273, 20.2648, 0.66", "37.1982, 66.0783, 20.3096, 0.66", "37.4364, 66.7329, 20.7734, 0.66", "37.4569, 66.7937, 20.8102, 0.66", "37.7058, 67.6473, 21.1237, 0.74", "37.997, 69.0645, 21.6195, 0.44", "38.0951, 69.7115, 21.8617, 0.37", "38.215, 70.6398, 22.2278, 0.37", "38.264, 71.0761, 22.4037, 0.59", "38.3819, 72.1143, 22.8153, 0.59", "38.4781, 72.8643, 23.1038, 0.59", "38.5536, 73.2004, 23.217, 0.88", "38.5761, 73.2727, 23.2477, 0.88", "38.802, 73.9225, 23.6314, 1.18", "38.8433, 74.0446, 23.7212, 1.18", "38.9544, 74.4103, 24.0236, 0.88", "39.1782, 75.198, 24.7015, 0.44", "39.4563, 76.1084, 25.4749, 0.74", "39.8307, 77.2836, 26.4875, 1.33", "40.1779, 78.349, 27.393, 0.96", "40.5401, 79.4495, 28.2957, 0.52", "40.7608, 80.1408, 28.8252, 0.44", "41.036, 81.0726, 29.5163, 0.37", "41.263, 82.0385, 30.2019, 0.37", "41.3702, 82.6904, 30.6674, 0.37", "41.3811, 82.8664, 30.797, 0.37", "41.3506, 83.4579, 31.2748, 0.59", "41.1104, 84.7769, 32.4188, 0.88", "40.8079, 85.7749, 33.3186, 0.88", "40.5102, 86.5565, 34.0057, 0.52", "40.3065, 87.0292, 34.4302, 0.52", "40.2887, 87.0736, 34.4672, 0.52", "40.1684, 87.4842, 34.7362, 0.52", "40.1689, 87.5551, 34.7528, 0.52", "40.2823, 88.0318, 34.7754, 0.74", "40.3177, 88.1354, 34.7738, 0.74", "40.5785, 88.7702, 34.7692, 0.37", "40.9918, 89.7107, 34.764, 0.44", "41.3782, 90.483, 34.7205, 0.44", "41.7122, 91.1102, 34.6609, 0.74", "41.7838, 91.2349, 34.645, 0.74", "42.2336, 92.0267, 34.5083, 0.74", "42.2689, 92.0885, 34.4953, 0.74", "42.778, 93.0162, 34.2825, 0.66", "42.8111, 93.0814, 34.2679, 0.66", "43.0925, 93.6564, 34.1618, 0.74", "43.5709, 94.7028, 34.0063, 0.29", "43.8324, 95.3482, 33.9664, 0.44", "44.1066, 96.1101, 33.9779, 0.22", "44.2775, 96.6914, 34.0363, 0.66", "44.3894, 97.1378, 34.0941, 0.66", "44.4037, 97.2205, 34.1077, 0.66", "44.5584, 98.2669, 34.3494, 0.44", "44.5734, 98.339, 34.3641, 0.44", "44.6781, 98.6963, 34.4256, 0.52", "44.7536, 98.9126, 34.4469, 0.52", "44.9129, 99.3335, 34.4556, 0.52", "45.2578, 100.265, 34.422, 0.29", "45.5498, 101.163, 34.3537, 0.29", "45.5637, 101.224, 34.3496, 0.29", "45.6688, 101.911, 34.3078, 0.44", "45.684, 102.15, 34.2941, 0.44", "45.6506, 102.899, 34.2924, 0.44", "45.5415, 103.6, 34.3177, 0.59", "45.4321, 104.22, 34.4062, 0.74", "45.4224, 104.301, 34.4233, 0.74", "45.4083, 104.896, 34.5889, 0.74", "45.4806, 105.773, 35.0019, 0.52", "45.4917, 105.834, 35.0387, 0.52", "45.6567, 106.526, 35.4716, 0.44", "45.7433, 106.916, 35.7304, 0.29", "45.8513, 107.551, 36.1325, 0.29", "45.9788, 108.922, 37.0626, 0.29", "46.0042, 109.434, 37.3957, 0.37", "46.0323, 110.141, 37.8373, 0.44", "46.0521, 111.176, 38.4552, 0.96", "46.0766, 111.817, 38.8332, 1.25", "46.2452, 113.396, 39.7956, 0.52", "46.3786, 114.046, 40.1672, 0.52", "46.5453, 114.574, 40.4934, 0.66", "46.5739, 114.637, 40.5364, 0.66", "46.9125, 115.218, 40.91, 0.44", "47.4581, 116.054, 41.4189, 0.29", "47.6279, 116.347, 41.5557, 0.52", "47.8644, 116.858, 41.7935, 0.52", "48.13, 117.521, 42.0951, 0.44", "48.3407, 118.03, 42.3118, 0.29", "48.5158, 118.456, 42.5227, 0.52", "48.9215, 119.316, 42.9635, 0.88", "49.1373, 119.725, 43.1877, 0.52", "49.645, 120.562, 43.6803, 0.44", "50.0702, 121.179, 44.0523, 0.59", "50.8581, 122.175, 44.7434, 0.29", "51.4443, 122.836, 45.2626, 0.29", "53.4853, 131.893, 49.5226, 0.29", "55.229, 141.802, 51.728, 0.29" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-111.185, -197.628, 22.7073, 0.29", "-111.402, -198.989, 23.0362, 0.29", "-111.476, -199.452, 23.1483, 0.74", "-111.614, -200.319, 23.358, 0.29", "-111.744, -201.135, 23.5551, 0.29", "-111.921, -202.243, 23.8231, 0.37", "-114.123, -213.654, 25.1081, 0.37" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-111.185, -197.628, 22.7073, 0.37", "-111.77, -197.839, 23.8567, 0.37", "-112.108, -197.949, 24.4313, 0.37", "-112.733, -198.119, 25.4918, 0.44", "-113.182, -198.237, 26.2167, 0.37", "-114.087, -198.506, 27.6157, 0.88", "-114.394, -198.623, 28.1315, 1.11", "-114.77, -198.785, 28.7573, 0.81", "-115.625, -199.27, 30.3134, 0.29", "-115.906, -199.437, 30.7992, 0.29", "-116.153, -199.587, 31.2406, 0.74", "-117.013, -200.068, 32.6485, 0.44", "-117.278, -200.207, 33.0893, 0.44", "-117.881, -200.452, 34.0151, 0.29", "-118.506, -200.733, 35.0779, 0.29", "-118.869, -200.912, 35.9261, 0.59", "-119.102, -201.02, 36.5457, 0.66", "-119.44, -201.156, 37.4737, 0.44", "-119.731, -201.281, 38.3941, 0.37", "-120.383, -201.604, 40.7603, 0.66", "-120.979, -201.956, 43.1207, 0.81", "-121.121, -202.026, 43.635, 0.88", "-121.239, -202.086, 44.1002, 0.88", "-121.259, -202.096, 44.1795, 0.88", "-121.635, -202.243, 45.5078, 0.52", "-121.954, -202.246, 46.0994, 0.52", "-123.154, -202.266, 47.7696, 1.69" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-0.163513, -112.737, -18.708, 0.74", "-0.184779, -113.888, -19.1963, 0.74", "-0.120807, -114.825, -19.5609, 0.74", "0.0206523, -116.113, -20.0131, 0.88", "0.129484, -116.903, -20.2694, 0.88", "0.307896, -118.197, -20.6897, 0.81", "0.549933, -119.953, -21.2598, 0.88", "0.770928, -121.03, -21.5629, 0.88", "0.972053, -121.783, -21.763, 1.33", "1.21818, -122.579, -21.94, 1.18" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-0.163513, -112.737, -18.708, 0.59", "-0.0901061, -113.581, -18.8575, 0.59", "0.0354774, -114.684, -19.2143, 0.52", "0.206299, -115.794, -19.6067, 0.44", "0.371044, -116.754, -19.9566, 0.44", "0.627499, -118.056, -20.3975, 0.59", "0.971099, -119.613, -20.9207, 0.74", "1.26861, -120.782, -21.3437, 0.59", "1.51311, -121.628, -21.6588, 0.59", "1.53499, -121.696, -21.6817, 0.59", "1.98258, -123.006, -22.0347, 0.59", "2.47398, -124.408, -22.238, 0.74", "2.76674, -125.206, -22.2847, 0.74", "3.25553, -126.498, -22.3108, 0.66", "3.71818, -127.685, -22.3085, 0.59", "3.78178, -127.833, -22.2956, 0.59", "4.35147, -128.925, -22.0554, 0.59", "4.59124, -129.306, -21.9093, 0.81", "4.63626, -129.372, -21.8792, 0.81", "5.06964, -130.004, -21.5931, 0.81", "5.88623, -131.207, -21.1577, 0.66", "6.47252, -132.153, -20.9011, 0.66", "6.95894, -133.078, -20.6839, 0.66", "7.42476, -134.116, -20.4219, 0.81", "7.74419, -134.94, -20.2146, 0.96", "8.14511, -136.167, -19.9246, 0.52", "8.41925, -137.13, -19.7217, 0.52", "8.73838, -138.39, -19.4117, 0.81", "9.00047, -139.399, -19.1272, 0.81", "9.24082, -140.323, -18.8455, 0.81", "9.25954, -140.404, -18.8209, 0.81", "9.5231, -141.646, -18.4794, 0.81", "9.55372, -141.791, -18.449, 0.81", "9.82284, -143.255, -18.2291, 0.81", "9.9746, -144.364, -18.0917, 0.81", "10.0734, -145.407, -17.9589, 0.66", "10.0781, -145.494, -17.9445, 0.66", "10.096, -146.597, -17.7288, 0.37", "10.121, -147.906, -17.4505, 0.66", "10.131, -148.508, -17.3108, 0.96", "10.1667, -149.695, -16.9734, 0.74", "10.2182, -151.124, -16.518, 0.96", "10.2537, -152.217, -16.1811, 0.81", "10.2952, -153.509, -15.8016, 0.74", "10.2971, -153.572, -15.7882, 0.74", "10.3496, -154.93, -15.6091, 0.74", "10.3567, -155.007, -15.6062, 0.74", "10.6331, -156.337, -15.7857, 0.44", "10.8248, -157.023, -15.9377, 0.44", "11.2794, -158.417, -16.3411, 1.4", "11.6348, -159.306, -16.6658, 1.18", "12.1655, -160.395, -17.171, 1.03", "13.1896, -162.172, -18.0627, 0.66", "13.6359, -162.833, -18.3969, 0.66", "13.7448, -162.981, -18.4684, 0.66", "14.7753, -164.316, -19.0465, 0.81", "15.5543, -165.299, -19.5057, 0.96", "16.5935, -166.572, -20.1244, 0.74", "17.4112, -167.528, -20.5496, 0.74", "18.0473, -168.254, -20.8562, 0.96", "18.5214, -168.807, -21.0502, 1.25" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-31.1504, -403.475, -15.6063, 0.29", "-30.2826, -403.485, -15.1493, 0.29", "-29.7565, -403.491, -14.8723, 0.29", "-28.7293, -403.503, -14.3313, 0.22", "-28.2263, -403.509, -14.0664, 0.29" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-31.1504, -403.475, -15.6063, 0.59", "-31.3269, -404.467, -15.7646, 0.59", "-31.341, -404.531, -15.7759, 0.59", "-31.6051, -405.548, -15.9618, 0.52", "-31.8854, -406.574, -16.1485, 0.66", "-32.1342, -407.545, -16.3038, 0.66", "-32.3824, -408.551, -16.4528, 0.81", "-32.4389, -408.754, -16.4812, 0.81", "-32.7101, -409.771, -16.5525, 0.81", "-32.7427, -409.906, -16.5512, 0.81", "-32.9591, -411.086, -16.3535, 0.81", "-32.9672, -411.158, -16.3413, 0.81", "-32.9904, -412.235, -16.2892, 0.59", "-32.965, -413.314, -16.3352, 0.37", "-32.886, -413.977, -16.4613, 0.74", "-32.5851, -415.298, -17.0368, 0.81", "-32.1336, -416.687, -17.8525, 0.52", "-31.4394, -418.355, -18.9729, 0.52", "-31.4194, -418.398, -19.0049, 0.52", "-30.6985, -419.62, -20.1279, 0.96", "-29.6255, -421.076, -21.6788, 1.69", "-29.1227, -421.624, -22.3374, 0.37", "-28.3305, -422.319, -23.2554, 0.37", "-27.9319, -422.624, -23.6687, 0.66", "-25.9839, -424.027, -25.5521, 1.25", "-24.5722, -424.96, -26.8152, 0.44", "-23.6662, -425.531, -27.5634, 0.81", "-21.9162, -426.623, -28.9645, 0.37", "-21.2196, -427.05, -29.4759, 0.29", "-20.2287, -427.646, -30.0907, 0.29", "-19.7776, -427.942, -30.2943, 0.96", "-19.3035, -428.256, -30.4593, 0.96", "-18.3087, -428.973, -30.7399, 0.44", "-17.9347, -429.22, -30.8566, 0.81", "-17.4001, -429.528, -31.0508, 1.03", "-17.3395, -429.563, -31.0723, 1.03", "-15.7399, -430.542, -31.6083, 0.37", "-14.6728, -431.241, -31.9566, 1.4", "-12.7775, -432.637, -32.7328, 0.37", "-12.2471, -433.077, -32.9804, 0.66", "-11.5005, -433.765, -33.3339, 0.29", "-10.9005, -434.376, -33.577, 0.96", "-10.649, -434.668, -33.653, 0.96", "-8.89316, -436.996, -34.0129, 0.37", "-8.68687, -437.329, -34.0245, 0.59", "-8.10299, -438.245, -34.0646, 0.29", "-7.43779, -439.166, -34.1461, 0.96", "-7.3984, -439.216, -34.1508, 0.96", "-7.08198, -439.64, -34.0871, 1.33", "-7.05801, -439.687, -34.0479, 1.33", "-6.90906, -440.008, -33.7642, 1.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-48.0987, -64.8441, -6.96141, 0.29", "-48.0322, -65.8687, -6.25202, 0.29", "-47.9848, -66.5987, -5.74655, 0.37", "-47.9411, -67.2726, -5.27995, 0.37", "-47.8784, -68.2379, -4.61163, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-48.0987, -64.8441, -6.96141, 0.37", "-48.6826, -65.1948, -6.89232, 0.37", "-49.0936, -65.3891, -6.79553, 0.37", "-49.5662, -65.5613, -6.66785, 0.81", "-49.8943, -65.6467, -6.52687, 1.25", "-50.1436, -65.6977, -6.39833, 1.25", "-51.2058, -65.9166, -5.83987, 0.44", "-51.2794, -65.9277, -5.7981, 0.44", "-51.5277, -65.9573, -5.65616, 0.74", "-52.5064, -66.0832, -5.12342, 0.52", "-53.0172, -66.1805, -4.87188, 0.59", "-53.3912, -66.3021, -4.74926, 0.44", "-53.6855, -66.4566, -4.72886, 0.29", "-53.9951, -66.6607, -4.74829, 0.29", "-54.3746, -66.981, -4.82873, 1.11", "-54.6047, -67.2222, -4.916, 1.33", "-55.1385, -67.9185, -5.15465, 0.74", "-55.3985, -68.3324, -5.27104, 0.74", "-55.5355, -68.5999, -5.32896, 1.11", "-55.6903, -68.934, -5.37458, 0.88", "-55.8678, -69.345, -5.40001, 0.66", "-56.0667, -69.8319, -5.40038, 0.37", "-56.1807, -70.1592, -5.37399, 0.37", "-56.3389, -70.6689, -5.32773, 0.37", "-56.4898, -71.2354, -5.27348, 0.37", "-56.5892, -71.6575, -5.23355, 0.29", "-56.6677, -72.0616, -5.18267, 0.59", "-56.7396, -72.4718, -5.10978, 0.81", "-56.7434, -72.5052, -5.10321, 0.81", "-56.7674, -72.9602, -4.99325, 0.74", "-56.7669, -73.2488, -4.91944, 1.11", "-56.7547, -73.8839, -4.7426, 0.59", "-56.7524, -74.1734, -4.65707, 1.03", "-56.7657, -74.7344, -4.47646, 0.52", "-56.7892, -75.2012, -4.3223, 0.74", "-56.8147, -75.53, -4.21566, 0.66", "-56.8716, -76.1267, -4.02857, 0.44", "-56.9481, -76.6537, -3.87135, 0.44", "-57.0739, -77.2, -3.71504, 0.44", "-57.1489, -77.4179, -3.65669, 0.81", "-57.3163, -77.807, -3.56735, 1.18", "-57.3939, -77.9523, -3.53579, 1.33", "-57.7541, -78.5359, -3.40457, 0.44", "-58.0522, -78.9915, -3.30716, 0.59", "-58.2939, -79.3207, -3.19813, 0.81", "-58.4219, -79.471, -3.13224, 0.81", "-58.7586, -79.7912, -2.93729, 0.37", "-59.1391, -80.0941, -2.72104, 0.74", "-59.2964, -80.1973, -2.63365, 0.96", "-60.1814, -80.717, -2.12431, 0.59", "-60.5681, -80.9199, -1.9035, 0.81", "-61.3419, -81.2799, -1.46689, 0.52", "-61.8129, -81.4635, -1.21249, 0.52", "-62.226, -81.6, -1.01315, 0.74", "-65.4538, -85.6491, 1.12346, 0.74", "-68.7706, -89.9016, 2.687, 0.74" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-74.2195, -71.4676, -86.2859, 0.52", "-73.7845, -72.5445, -87.081, 0.52", "-73.2596, -73.794, -87.974, 0.88", "-72.9839, -74.3802, -88.3682, 0.88", "-72.4753, -75.3508, -89.0156, 0.37", "-72.2437, -75.7748, -89.2849, 0.29", "-72.0358, -76.1706, -89.5219, 0.88", "-71.9923, -76.2525, -89.5666, 0.88", "-71.6649, -76.9217, -89.8391, 0.88", "-71.2693, -77.8235, -90.1532, 0.29", "-71.023, -78.4635, -90.3166, 0.29", "-70.8294, -79.0627, -90.4526, 0.22", "-70.6478, -79.7586, -90.5919, 0.22", "-70.5842, -80.1002, -90.6523, 0.81", "-70.5152, -80.7294, -90.7451, 1.25", "-70.4342, -81.7727, -90.862, 0.37", "-70.3738, -82.7502, -90.9719, 0.22", "-70.3423, -83.3482, -91.0395, 0.66", "-70.3233, -83.913, -91.1041, 0.81", "-70.3111, -85.05, -91.2366, 0.22", "-70.3233, -85.6059, -91.3027, 0.88", "-70.3419, -85.9147, -91.3408, 1.03", "-70.3614, -86.3791, -91.4007, 1.03", "-70.3635, -86.8655, -91.4624, 0.74", "-70.3574, -86.944, -91.472, 0.74" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-74.2195, -71.4676, -86.2859, 0.22", "-76.1022, -71.5716, -88.9468, 0.22", "-76.8647, -71.6732, -89.9335, 0.22", "-77.7007, -71.8227, -90.8961, 0.81", "-78.1592, -71.9241, -91.3603, 1.11", "-78.7337, -72.0724, -91.8669, 1.03", "-80.3691, -72.5179, -93.1645, 0.22", "-80.6798, -72.6278, -93.3454, 0.66", "-81.3746, -72.9023, -93.7403, 0.96", "-82.1812, -73.1758, -94.1346, 0.29", "-83.1068, -73.4127, -94.5751, 0.29", "-83.4613, -73.4727, -94.7268, 0.96", "-84.1751, -73.5363, -95.0294, 1.18", "-84.2423, -73.5368, -95.0646, 1.18", "-85.1073, -73.4866, -95.574, 0.88", "-85.2366, -73.4769, -95.6529, 0.88", "-85.7786, -73.4597, -95.9742, 0.66", "-87.0759, -73.5511, -96.8004, 0.29", "-87.3213, -73.5818, -96.9543, 0.29", "-88.3383, -73.7592, -97.5929, 0.29", "-88.8599, -73.838, -98.0094, 0.59", "-89.2743, -73.8748, -98.3765, 0.59", "-90.4925, -73.9269, -99.5687, 0.29", "-90.8256, -73.9238, -99.9002, 1.03", "-91.3026, -73.8685, -100.475, 1.33", "-92.6825, -73.4732, -102.559, 0.29", "-92.9276, -73.3673, -102.953, 0.29", "-92.9723, -73.3429, -103.03, 0.29", "-93.3538, -73.15, -103.756, 0.59", "-94.2516, -72.8095, -105.547, 0.81", "-94.8519, -72.7093, -106.874, 0.52", "-95.1524, -72.7532, -107.579, 1.11", "-95.6804, -72.9557, -108.955, 1.4", "-96.4427, -73.3134, -111.044, 0.29", "-96.6135, -73.4228, -111.552, 0.88", "-97.309, -74.0816, -113.642, 0.52", "-97.8273, -74.7592, -115.327, 0.81", "-98.0012, -75.0611, -115.983, 0.88" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-18.0481, 315.0, 24.936, 0.37", "-17.4776, 314.98, 24.5601, 0.37", "-16.3806, 314.859, 23.8344, 0.66", "-16.3078, 314.845, 23.7883, 0.66", "-15.7777, 314.745, 23.4552, 0.29", "-15.6923, 314.73, 23.4023, 0.29", "-14.2761, 314.532, 22.4399, 0.29", "-14.2054, 314.525, 22.3909, 0.29", "-13.8678, 314.531, 22.1688, 0.66", "-13.4726, 314.556, 21.8917, 0.52", "-13.4018, 314.566, 21.8374, 0.52", "-12.0975, 314.888, 20.8465, 0.22", "-11.4535, 315.214, 20.3891, 0.22", "-11.1067, 315.407, 20.1332, 0.29", "-0.311329, 318.479, 14.9642, 0.29", "10.003, 323.88, 10.6051, 0.29", "18.8412, 330.215, 4.49495, 0.29" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-18.0481, 315.0, 24.936, 0.29", "-17.7498, 316.613, 24.9441, 0.29", "-17.678, 317.158, 24.9355, 0.29", "-17.6743, 317.23, 24.9377, 0.29", "-17.6743, 318.067, 24.9847, 0.29", "-17.6767, 318.129, 24.9891, 0.29", "-17.7747, 319.255, 25.1271, 0.29", "-17.7894, 319.314, 25.1372, 0.29", "-17.9438, 320.013, 25.3086, 0.52", "-17.9665, 320.153, 25.3462, 0.52", "-17.9914, 320.446, 25.42, 0.52", "-18.013, 321.157, 25.5772, 0.22", "-17.9975, 321.851, 25.692, 0.22", "-17.9633, 322.544, 25.7874, 0.44", "-17.913, 323.074, 25.8332, 0.44", "-17.8293, 323.826, 25.8835, 0.22", "-17.8193, 323.9, 25.8854, 0.22", "-17.6473, 324.947, 25.8157, 0.22", "-17.9738, 335.212, 25.6744, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "18.567, 230.851, -65.7755, 0.66", "18.6417, 231.717, -65.7896, 0.66", "18.751, 232.538, -65.8033, 0.29", "18.7654, 232.625, -65.8048, 0.29", "18.9245, 233.472, -65.8196, 0.29", "19.1697, 234.938, -65.8461, 0.29", "19.2524, 235.575, -65.8582, 0.52", "19.2742, 235.786, -65.862, 0.52", "19.3031, 236.092, -65.8689, 0.52", "19.3451, 236.655, -65.8817, 0.37", "19.3683, 237.435, -65.8996, 0.37", "19.2399, 238.617, -65.9271, 0.88", "19.2124, 238.778, -65.9286, 0.88", "19.0905, 239.426, -65.9279, 1.03", "18.9809, 240.05, -65.9218, 1.18", "18.8848, 240.731, -65.9102, 0.66", "18.8047, 241.578, -65.8896, 0.52", "18.7853, 241.987, -65.8776, 0.59", "18.8015, 242.432, -65.8684, 0.44", "18.9593, 243.629, -65.8547, 0.29", "19.0545, 244.086, -65.8552, 0.37", "19.0765, 244.174, -65.8607, 0.37", "19.197, 244.688, -65.9162, 0.22", "19.3727, 245.712, -66.0113, 0.59", "19.439, 246.25, -66.0518, 0.88", "19.5116, 247.157, -66.1011, 0.52", "19.5639, 248.303, -66.1419, 0.29", "19.5751, 249.15, -66.1551, 0.29", "19.5384, 250.285, -66.1488, 0.59", "19.5313, 250.375, -66.1412, 0.59", "19.4758, 250.99, -66.0455, 0.29", "19.465, 251.12, -66.015, 0.29", "19.4843, 252.08, -65.7432, 0.52", "19.5201, 252.521, -65.6487, 0.66", "19.6168, 253.585, -65.4969, 0.52", "19.6249, 253.675, -65.486, 0.52", "19.6769, 254.314, -65.4264, 0.29", "19.7809, 255.859, -65.4114, 0.29", "19.8366, 256.982, -65.5002, 0.66", "19.8464, 257.388, -65.5374, 0.88", "19.8466, 257.475, -65.547, 0.88", "19.8062, 258.296, -65.6097, 0.52", "19.6822, 259.367, -65.657, 0.52", "19.5511, 260.268, -65.6686, 0.29", "19.4174, 261.449, -65.6551, 0.29", "19.3419, 262.365, -65.6205, 1.03", "19.2882, 263.342, -65.5653, 0.74", "19.2784, 264.443, -65.4365, 0.29", "19.3316, 265.982, -65.1858, 0.44", "19.395, 266.776, -65.0421, 0.37", "19.5054, 267.711, -64.8724, 0.37", "19.6704, 268.707, -64.6537, 0.96", "19.9796, 270.034, -64.3173, 0.37", "20.228, 270.911, -64.065, 0.37", "20.4739, 271.674, -63.8206, 0.59", "20.6223, 272.088, -63.6945, 0.88", "20.7163, 272.336, -63.6268, 0.88", "21.0264, 273.121, -63.4435, 0.59", "21.0532, 273.189, -63.4322, 0.52", "21.7484, 274.89, -63.1776, 0.15", "22.0646, 275.669, -63.0909, 0.59", "22.0978, 275.75, -63.083, 0.59", "22.3832, 276.349, -63.0387, 0.59", "22.4242, 276.425, -63.0354, 0.59", "22.7805, 277.042, -63.0252, 0.88", "23.2894, 277.915, -63.0437, 1.18", "23.5106, 278.311, -63.0521, 1.18", "24.282, 279.838, -63.0621, 0.15", "24.7838, 280.994, -63.0569, 0.15", "25.0099, 281.645, -63.0493, 0.52", "25.2208, 282.428, -63.0349, 0.66", "25.306, 282.892, -63.0246, 0.74", "25.4041, 283.845, -63.0015, 0.29", "25.4492, 284.756, -62.9789, 0.37", "25.5527, 285.925, -62.8919, 0.29", "25.5672, 286.024, -62.8806, 0.29", "25.9196, 287.304, -62.6876, 0.52", "25.9524, 287.384, -62.6735, 0.52", "26.5305, 288.419, -62.4644, 0.81", "27.2349, 289.454, -62.2255, 0.37", "27.2861, 289.521, -62.2073, 0.37", "28.0076, 290.571, -61.946, 0.29", "28.3124, 291.067, -61.8328, 0.37", "28.3464, 291.133, -61.821, 0.37", "28.6722, 291.865, -61.7342, 0.37", "29.1705, 293.043, -61.5493, 0.29", "29.7519, 294.336, -61.2633, 0.37", "29.9694, 294.815, -61.1419, 0.88", "30.2366, 295.339, -61.003, 0.96", "30.9818, 296.541, -60.6204, 0.52", "32.0378, 297.956, -60.1059, 0.66", "32.4815, 298.463, -59.8888, 0.66", "33.1071, 299.076, -59.584, 0.29", "33.8441, 299.749, -59.2216, 0.44", "34.7115, 300.514, -58.7843, 1.11", "35.4028, 301.127, -58.4287, 1.11", "36.461, 302.095, -57.9177, 1.11", "36.9147, 302.51, -57.6663, 1.55", "37.6813, 303.171, -57.1981, 1.55", "37.7817, 303.249, -57.1302, 1.55", "38.3937, 303.68, -56.6569, 1.55", "38.4437, 303.711, -56.6158, 1.55", "39.2392, 304.147, -55.9431, 2.06", "39.2976, 304.178, -55.8904, 2.06", "40.9007, 304.937, -54.4064, 0.52", "41.8631, 305.36, -53.5167, 0.74" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "18.567, 230.851, -65.7755, 0.74", "18.7727, 229.716, -65.5654, 0.74", "18.7809, 229.654, -65.5552, 0.74", "18.8615, 228.878, -65.4406, 0.37", "18.9424, 227.754, -65.2868, 0.22", "18.9581, 227.216, -65.2199, 0.37", "18.9626, 226.553, -65.1477, 0.15", "18.9237, 225.535, -65.0659, 0.15", "18.9034, 225.082, -65.0297, 0.44", "18.8707, 224.59, -64.9906, 0.44", "18.7714, 223.639, -64.9242, 0.22", "18.6354, 222.538, -64.8815, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "128.049, 97.6096, -37.9733, 0.22", "129.073, 98.0112, -39.1464, 0.22", "129.434, 98.1531, -39.5611, 0.74", "129.626, 98.2285, -39.7812, 0.74", "131.134, 98.8206, -41.5108, 0.29", "131.505, 98.966, -41.9356, 0.44" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "128.049, 97.6096, -37.9733, 0.22", "129.051, 97.0012, -38.1432, 0.22", "129.791, 96.62, -38.3184, 0.66", "130.285, 96.3869, -38.4425, 0.66", "130.869, 96.1487, -38.5834, 0.52", "132.047, 95.8155, -38.8808, 0.22", "132.622, 95.7319, -39.0188, 0.22", "133.463, 95.8061, -39.1851, 0.59", "133.885, 95.8998, -39.2472, 0.74", "134.478, 96.0675, -39.2939, 0.74", "135.655, 96.465, -39.2988, 0.29", "136.634, 96.8551, -39.2217, 0.29", "137.829, 97.3603, -39.0904, 0.59", "138.374, 97.6014, -39.0033, 0.52", "139.443, 98.0735, -38.8123, 0.22", "140.026, 98.3021, -38.6858, 0.29", "140.811, 98.5231, -38.4531, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "55.229, 141.802, 51.728, 0.29", "57.7167, 152.452, 56.3372, 0.29", "59.5216, 163.989, 58.9076, 0.29", "60.9871, 175.486, 61.8171, 0.29", "60.9018, 186.835, 65.4984, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "55.229, 141.802, 51.728, 0.44", "57.3581, 150.53, 55.7408, 0.29", "59.8392, 159.24, 59.5984, 0.29", "63.8148, 167.838, 62.3486, 0.29", "66.9348, 177.236, 63.2615, 0.29", "71.3891, 186.096, 62.6862, 0.29", "75.2924, 195.241, 62.3794, 0.29", "78.0319, 204.827, 62.1592, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-114.123, -213.654, 25.1081, 0.29", "-114.793, -219.843, 27.6684, 0.29" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-114.123, -213.654, 25.1081, 0.44", "-119.534, -221.6, 24.1425, 0.29", "-123.612, -229.963, 21.4756, 0.29" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-123.154, -202.266, 47.7696, 0.66", "-123.247, -201.132, 48.5858, 0.66", "-123.251, -200.433, 49.0062, 0.29", "-123.242, -199.637, 49.4041, 0.29", "-123.243, -199.571, 49.4304, 0.29", "-123.294, -198.318, 49.859, 0.52", "-123.308, -198.072, 49.9332, 0.74", "-123.361, -197.102, 50.1169, 0.37", "-123.411, -196.267, 50.244, 0.37", "-123.487, -195.443, 50.3424, 0.29", "-123.53, -194.937, 50.3797, 0.59", "-123.567, -194.377, 50.3856, 0.59", "-123.56, -193.728, 50.3834, 0.59", "-123.464, -192.868, 50.3668, 0.52", "-123.325, -192.233, 50.3465, 0.96", "-123.093, -191.48, 50.3203, 0.37", "-122.919, -191.013, 50.2943, 0.29", "-122.542, -190.136, 50.2294, 0.29", "-122.226, -189.424, 50.1736, 0.29", "-122.022, -188.96, 50.1379, 0.52", "-122.0, -188.895, 50.1337, 0.52", "-121.9, -188.508, 50.1137, 0.52", "-121.769, -187.746, 50.0915, 0.37", "-121.656, -186.87, 50.075, 0.37", "-121.649, -186.799, 50.0747, 0.37", "-121.565, -185.391, 50.0818, 0.37", "-121.529, -184.126, 50.1041, 0.37", "-121.526, -182.552, 50.1481, 0.37", "-121.528, -182.423, 50.1527, 0.37", "-121.512, -181.202, 50.1771, 0.37", "-121.51, -181.141, 50.1777, 0.37", "-121.459, -180.359, 50.1777, 0.88", "-121.444, -180.201, 50.1744, 0.88", "-121.286, -179.23, 50.1242, 0.29", "-121.026, -178.013, 50.0418, 0.29", "-120.818, -177.24, 49.9753, 0.44", "-120.654, -176.666, 49.9254, 0.44", "-120.46, -175.99, 49.8496, 0.29", "-120.437, -175.902, 49.839, 0.29", "-120.143, -174.936, 49.6971, 0.66", "-120.056, -174.7, 49.6688, 0.66", "-119.888, -174.29, 49.6254, 0.59", "-119.457, -173.259, 49.5447, 0.37", "-119.43, -173.194, 49.5441, 0.37", "-118.791, -171.736, 49.6224, 0.37", "-118.431, -170.892, 49.7371, 0.37", "-118.176, -170.322, 49.8387, 0.37", "-118.07, -170.102, 49.8944, 0.88", "-117.723, -169.432, 50.1647, 0.74", "-117.697, -169.374, 50.1929, 0.74", "-117.648, -168.928, 50.5355, 0.52" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-123.154, -202.266, 47.7696, 0.52", "-123.831, -202.865, 47.9579, 0.52", "-124.481, -203.374, 48.1464, 0.29", "-125.111, -203.838, 48.3335, 0.29", "-126.094, -204.523, 48.635, 0.44", "-126.922, -205.095, 48.8923, 0.37", "-127.285, -205.346, 49.0059, 0.66", "-127.612, -205.543, 49.1134, 0.88", "-128.044, -205.754, 49.2274, 0.88", "-128.7, -206.026, 49.3586, 0.44", "-129.522, -206.352, 49.4718, 0.44", "-129.581, -206.375, 49.4776, 0.44", "-130.308, -206.634, 49.5327, 0.44", "-131.502, -207.028, 49.6128, 0.29", "-132.249, -207.249, 49.6651, 0.29", "-133.165, -207.48, 49.7937, 0.29", "-133.234, -207.494, 49.8093, 0.74", "-133.292, -207.506, 49.8274, 0.74", "-133.892, -207.657, 50.019, 0.74", "-134.414, -207.835, 50.1977, 0.74", "-135.508, -208.267, 50.5124, 0.29", "-136.112, -208.547, 50.624, 0.29", "-136.964, -208.98, 50.7162, 0.29", "-138.08, -209.598, 50.7574, 0.29", "-138.602, -209.917, 50.7748, 0.59", "-138.853, -210.07, 50.7849, 0.59", "-139.598, -210.493, 50.8284, 0.37", "-139.713, -210.544, 50.8728, 0.37", "-140.25, -210.679, 51.3085, 0.37", "-141.081, -210.787, 52.1359, 0.29", "-141.546, -210.856, 52.7533, 0.29", "-141.877, -210.916, 53.2867, 0.59", "-142.476, -211.099, 54.4498, 0.59", "-142.784, -211.241, 55.1279, 0.59", "-142.985, -211.408, 55.6979, 0.59", "-143.484, -212.086, 57.3159, 0.44", "-143.498, -212.11, 57.3606, 0.44", "-143.693, -212.525, 58.0078, 0.44", "-143.708, -212.554, 58.049, 0.44", "-144.059, -213.148, 58.8633, 0.59", "-144.335, -213.499, 59.339, 0.59", "-144.824, -213.92, 59.8909, 0.29", "-144.861, -213.948, 59.9309, 0.29", "-145.787, -214.493, 60.7853, 0.44", "-146.223, -214.718, 61.1112, 0.96", "-146.687, -214.927, 61.3899, 1.33", "-147.303, -215.201, 61.7273, 0.88", "-148.342, -215.688, 62.2227, 0.44", "-149.182, -216.09, 62.5577, 0.44", "-150.122, -216.53, 62.8509, 0.52", "-150.806, -216.818, 63.0554, 0.52", "-150.863, -216.839, 63.0718, 0.52", "-151.761, -217.101, 63.3131, 0.37", "-152.427, -217.247, 63.4772, 0.37", "-153.11, -217.343, 63.6952, 0.37", "-154.029, -217.393, 64.0734, 0.52", "-154.322, -217.391, 64.2025, 0.96", "-154.648, -217.375, 64.3398, 0.96", "-155.083, -217.332, 64.512, 0.96", "-155.67, -217.29, 64.7265, 0.81", "-156.681, -217.3, 65.0608, 0.37", "-156.731, -217.306, 65.0756, 0.37", "-157.587, -217.454, 65.3133, 0.37", "-158.086, -217.566, 65.4437, 0.59", "-158.454, -217.655, 65.5362, 0.66", "-159.029, -217.79, 65.6773, 0.52", "-159.765, -217.925, 65.8187, 0.29", "-159.835, -217.933, 65.833, 0.29", "-160.517, -217.979, 65.9861, 0.29", "-161.183, -218.029, 66.1664, 0.44", "-161.626, -218.076, 66.2994, 0.44", "-162.515, -218.198, 66.5899, 0.44", "-163.397, -218.363, 66.8998, 0.37", "-163.791, -218.454, 67.0723, 0.37", "-164.859, -218.734, 67.7245, 0.37", "-165.316, -218.867, 68.0957, 0.37", "-165.746, -219.0, 68.5436, 0.37", "-166.094, -219.092, 69.0039, 0.37", "-166.623, -219.18, 69.8348, 0.37", "-167.182, -219.201, 70.7903, 0.37", "-167.354, -219.196, 71.1138, 0.81", "-167.486, -219.215, 71.3482, 1.11", "-167.766, -219.315, 71.8055, 1.11", "-167.797, -219.33, 71.8449, 1.11", "-168.325, -219.639, 72.3936, 0.59", "-169.132, -220.168, 73.1863, 0.44", "-169.653, -220.515, 73.7353, 0.66", "-169.688, -220.537, 73.7718, 0.66", "-170.064, -220.753, 74.1343, 0.66", "-170.699, -221.044, 74.6836, 0.44", "-170.774, -221.076, 74.7496, 0.44", "-171.391, -221.344, 75.2752, 0.37", "-172.035, -221.653, 75.8301, 0.37", "-172.636, -221.967, 76.3349, 0.88", "-173.054, -222.203, 76.6714, 1.18", "-174.297, -222.891, 77.6466, 0.37", "-174.854, -223.186, 78.0953, 0.29", "-175.205, -223.362, 78.3868, 0.81", "-175.256, -223.385, 78.4328, 0.81", "-175.465, -223.483, 78.647, 0.81", "-176.324, -223.874, 79.5499, 0.37", "-176.65, -224.006, 79.8888, 0.74", "-176.995, -224.158, 80.2636, 0.74", "-177.625, -224.433, 80.9403, 0.81", "-178.483, -224.827, 81.8503, 0.29", "-178.775, -224.971, 82.1588, 0.29", "-178.809, -224.99, 82.1931, 0.29", "-179.217, -225.221, 82.5645, 0.74", "-179.535, -225.394, 82.8505, 0.81", "-180.347, -225.756, 83.5531, 0.37", "-180.393, -225.772, 83.5933, 0.37", "-180.879, -225.941, 84.0367, 0.29", "-181.259, -226.071, 84.3958, 0.29", "-181.82, -226.261, 84.9792, 0.52", "-182.286, -226.431, 85.4981, 0.88", "-182.453, -226.478, 85.6939, 1.03" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "1.21818, -122.579, -21.94, 0.96", "0.971667, -124.314, -21.4644, 0.96", "0.849048, -125.388, -21.1611, 0.96", "0.773051, -126.32, -20.9003, 1.03", "0.752621, -126.878, -20.7497, 1.25", "0.74331, -127.582, -20.5629, 1.11", "0.755502, -128.602, -20.2708, 0.74", "0.830051, -129.424, -20.0629, 0.96", "0.919438, -130.016, -19.893, 0.74", "1.10502, -130.925, -19.63, 0.59", "1.11717, -130.972, -19.6183, 0.59", "1.41977, -132.062, -19.4137, 0.59", "1.69327, -133.028, -19.3437, 0.59", "1.70477, -133.071, -19.3457, 0.59", "1.88688, -133.96, -19.4161, 0.88", "2.01945, -134.836, -19.5115, 0.88", "2.0831, -135.365, -19.5801, 0.88", "2.14902, -136.22, -19.689, 0.66", "2.17816, -137.109, -19.7214, 0.52", "2.18919, -137.983, -19.6708, 1.11", "2.18309, -138.394, -19.6062, 1.11", "2.16706, -139.036, -19.4673, 0.88", "2.16502, -139.892, -19.2632, 0.81", "2.18341, -140.667, -19.0833, 0.88", "2.23482, -141.242, -18.9953, 1.03", "2.36485, -142.138, -18.934, 0.74", "2.48684, -142.806, -18.9187, 0.59", "2.6663, -143.579, -18.9311, 0.52", "2.83783, -144.176, -18.9806, 0.74", "3.18487, -145.226, -19.1123, 0.66", "3.44191, -145.959, -19.2158, 0.74", "3.66634, -146.595, -19.2972, 0.81", "3.85654, -147.192, -19.3432, 1.11", "4.04057, -147.842, -19.3581, 0.88", "4.0537, -147.89, -19.361, 0.88", "4.26044, -148.631, -19.4788, 0.59", "4.48228, -149.381, -19.6739, 0.59", "4.71369, -150.145, -19.9163, 0.81", "5.00318, -151.077, -20.2315, 1.03", "5.58476, -152.764, -20.8352, 1.03", "6.04764, -153.993, -21.2808, 0.81", "6.47079, -155.003, -21.6583, 0.59", "6.49017, -155.048, -21.6749, 0.59", "6.80296, -155.787, -21.9284, 0.74", "7.13941, -156.633, -22.1385, 0.66", "7.45239, -157.483, -22.234, 0.66", "7.75057, -158.338, -22.2908, 0.66", "7.98257, -159.085, -22.3362, 0.96", "8.12569, -159.701, -22.3859, 1.18", "8.22527, -160.469, -22.4859, 1.03", "8.22653, -161.141, -22.6183, 0.88", "8.14901, -161.92, -22.8359, 0.66", "8.06289, -162.402, -22.9929, 0.74", "7.86741, -163.331, -23.3191, 0.74", "7.70243, -164.047, -23.5642, 0.81", "7.46935, -165.03, -23.871, 0.81", "7.29261, -165.901, -24.094, 1.03", "7.2055, -166.52, -24.205, 1.11", "7.1699, -167.194, -24.2851, 0.81", "7.19838, -168.256, -24.3429, 0.66", "7.27656, -169.096, -24.3236, 0.81", "7.38475, -169.692, -24.2744, 0.81", "7.54749, -170.298, -24.2074, 0.81", "7.68891, -170.698, -24.1549, 1.03", "7.7095, -170.744, -24.1479, 1.03", "8.03244, -171.32, -24.0458, 0.74", "8.44456, -171.946, -23.965, 0.44", "8.59096, -172.154, -23.9497, 0.74", "8.6215, -172.195, -23.9506, 0.74", "8.8627, -172.535, -23.9765, 0.74", "8.89398, -172.582, -23.9808, 0.74", "9.46509, -173.546, -24.0433, 0.59", "9.62212, -173.845, -24.0559, 0.88", "9.92341, -174.509, -24.0741, 0.88", "10.257, -175.382, -24.0809, 0.66", "10.4473, -176.002, -24.0744, 0.74", "10.6517, -176.824, -24.0794, 0.88", "10.7591, -177.402, -24.1183, 0.44", "10.8428, -177.927, -24.2097, 0.44", "10.9181, -178.529, -24.3663, 0.52", "10.9804, -179.017, -24.5505, 0.81", "11.1064, -179.874, -24.9313, 1.03", "11.288, -180.834, -25.3876, 0.88", "11.5051, -181.739, -25.8012, 0.59", "11.6499, -182.232, -26.0124, 0.74", "11.9605, -183.116, -26.3154, 0.52", "12.1562, -183.6, -26.4188, 0.52", "12.4437, -184.239, -26.4347, 0.81", "12.6809, -184.709, -26.371, 1.03", "12.8495, -185.007, -26.2969, 1.03", "13.3372, -185.819, -26.0497, 0.52", "13.5242, -186.136, -25.9509, 0.66", "13.8255, -186.671, -25.8116, 0.66", "13.8519, -186.722, -25.8013, 0.66", "14.0941, -187.214, -25.724, 0.81", "14.3975, -187.866, -25.6533, 0.59", "14.7653, -188.682, -25.606, 0.37", "14.9615, -189.11, -25.5814, 0.88", "15.222, -189.616, -25.5589, 1.18", "15.2477, -189.659, -25.5567, 1.18", "15.5243, -190.043, -25.5814, 1.11", "15.8525, -190.441, -25.6744, 0.96", "15.8847, -190.478, -25.6871, 0.96", "16.4854, -191.19, -25.9856, 0.59", "16.8307, -191.634, -26.1811, 0.81", "17.5976, -192.782, -26.6568, 0.59", "17.9126, -193.355, -26.8744, 0.88", "18.0824, -193.761, -27.0106, 0.88", "18.2228, -194.223, -27.1363, 0.81", "18.3335, -194.865, -27.2629, 0.59", "18.391, -195.543, -27.3426, 0.66", "18.4124, -196.33, -27.3641, 1.03", "18.428, -196.826, -27.3693, 1.33", "18.445, -197.249, -27.3812, 1.18", "18.4805, -197.818, -27.4282, 0.81", "18.5774, -198.547, -27.5656, 0.59", "18.7484, -199.238, -27.739, 0.74", "18.8952, -199.66, -27.8376, 0.96", "18.9116, -199.698, -27.8449, 0.96", "19.2766, -200.459, -27.9495, 0.96", "19.9238, -201.656, -28.0623, 0.74", "20.4431, -202.511, -28.1079, 0.74", "20.9343, -203.274, -28.1159, 0.88", "21.3423, -203.955, -28.0409, 0.88", "21.7236, -204.66, -27.8776, 0.59", "21.9311, -205.181, -27.6522, 0.59", "22.0226, -205.655, -27.3643, 0.59", "22.0225, -205.69, -27.3413, 0.59", "21.7818, -207.181, -26.416, 0.52", "21.5873, -207.821, -26.0442, 0.52", "21.1085, -209.061, -25.483, 1.18", "20.7987, -209.802, -25.2428, 1.18", "20.5516, -210.459, -25.1428, 0.52", "20.2986, -211.439, -25.204, 0.52", "20.1973, -212.224, -25.4056, 0.66", "20.1612, -213.498, -25.8576, 0.66", "20.2318, -214.221, -26.1942, 0.66", "20.4732, -215.477, -26.8228, 0.66", "20.8715, -216.802, -27.5032, 0.74", "21.0649, -217.268, -27.74, 1.03", "21.2795, -217.691, -27.9441, 1.03", "21.7649, -218.533, -28.3059, 0.66", "22.125, -219.112, -28.547, 0.37", "22.4556, -219.641, -28.718, 0.74", "22.7374, -220.104, -28.8308, 1.03", "22.7637, -220.144, -28.8402, 1.03", "22.8939, -220.317, -28.8634, 1.25", "22.9324, -220.359, -28.8568, 1.25", "23.1904, -220.62, -28.7822, 1.25", "23.2218, -220.656, -28.7704, 1.25", "23.4563, -220.966, -28.6732, 1.25", "23.6686, -221.301, -28.579, 1.25", "24.1304, -222.184, -28.3228, 0.59", "24.4741, -222.878, -28.1106, 0.59", "24.8374, -223.656, -27.8655, 0.66", "25.1178, -224.249, -27.6688, 0.66", "25.4848, -224.993, -27.4046, 0.59", "25.7944, -225.592, -27.1758, 0.44", "26.1055, -226.087, -26.9522, 0.29", "26.1331, -226.116, -26.9345, 0.29", "26.6184, -226.403, -26.6484, 0.59", "27.0957, -226.624, -26.3853, 0.74", "27.1354, -226.642, -26.3609, 0.74", "27.712, -226.916, -25.9879, 0.74", "27.746, -226.936, -25.9604, 0.74", "28.5132, -227.412, -25.2014, 0.59", "28.88, -227.656, -24.7807, 0.81", "29.4317, -228.077, -24.0662, 0.66", "29.4619, -228.1, -24.0262, 0.66", "29.9927, -228.501, -23.2744, 1.03", "30.3735, -228.756, -22.6732, 1.47", "30.5447, -228.872, -22.3281, 1.55", "30.8772, -229.112, -21.5409, 0.29", "31.0993, -229.287, -20.9599, 0.59", "31.4183, -229.555, -20.1038, 0.81", "31.785, -229.886, -19.0692, 1.18", "32.2437, -230.342, -17.7499, 0.44", "32.5435, -230.663, -16.8594, 0.59", "32.5589, -230.68, -16.8153, 0.59", "32.7454, -230.935, -16.3272, 0.81", "32.7605, -230.958, -16.2966, 0.81", "33.021, -231.356, -15.912, 0.37", "33.3426, -231.805, -15.5455, 0.88", "33.5802, -232.168, -15.285, 1.33", "33.8058, -232.563, -15.0323, 1.47", "34.2747, -233.444, -14.5595, 0.88", "34.2968, -233.486, -14.5402, 0.88", "34.5126, -233.883, -14.3877, 1.03", "34.8835, -234.541, -14.207, 0.44", "35.2778, -235.224, -14.0714, 0.44", "35.627, -235.822, -14.005, 0.66", "35.6531, -235.865, -14.0039, 0.66", "35.9037, -236.255, -13.9825, 0.44", "36.1868, -236.676, -13.9491, 0.81", "36.3676, -236.925, -13.9154, 0.96", "36.6406, -237.298, -13.8438, 1.11", "36.9729, -237.783, -13.7212, 0.29", "37.2441, -238.194, -13.6208, 0.22", "37.2706, -238.236, -13.611, 0.22", "37.6087, -238.75, -13.4857, 1.47", "37.6371, -238.79, -13.4753, 1.47" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "1.21818, -122.579, -21.94, 0.44", "1.74067, -124.143, -23.0532, 0.44", "2.31578, -125.702, -24.1462, 0.59", "3.94833, -129.781, -26.888, 0.59", "4.73914, -131.668, -28.0934, 0.81", "5.78622, -134.061, -29.5652, 0.81", "6.78153, -136.3, -30.8867, 0.88", "7.35733, -137.586, -31.5929, 1.03", "8.2761, -139.491, -32.5471, 0.52", "8.71469, -140.352, -32.8765, 0.88", "9.41513, -141.723, -33.3774, 0.88", "9.74354, -142.482, -33.6401, 0.88", "9.7659, -142.579, -33.6812, 0.88", "9.7825, -143.896, -34.5328, 0.44", "9.71259, -144.791, -35.2847, 0.74", "9.70434, -145.833, -36.2136, 0.74", "9.83136, -147.143, -37.3994, 0.96", "10.2449, -148.955, -39.0271, 0.96", "10.8959, -150.81, -40.5669, 0.96", "11.7044, -152.643, -42.0153, 0.96", "12.7579, -154.751, -43.4822, 0.88", "13.8479, -156.78, -44.6989, 0.88", "14.8191, -158.591, -45.6161, 0.59", "15.7883, -160.433, -46.4391, 0.59", "16.4831, -161.869, -47.0341, 0.96", "17.0944, -163.329, -47.6148, 1.25", "17.581, -164.759, -48.1842, 1.33", "18.1857, -166.834, -48.9648, 0.96", "18.6194, -168.427, -49.5432, 0.81", "19.1305, -170.167, -50.1831, 0.88", "19.4641, -170.985, -50.4204, 1.11", "19.5047, -171.054, -50.4396, 1.11", "20.3049, -172.068, -50.6475, 1.11", "21.0102, -172.781, -50.6821, 1.25", "21.1795, -172.928, -50.688, 1.25", "22.4176, -173.912, -50.8492, 1.33", "23.7299, -174.972, -51.2229, 1.03", "24.4885, -175.64, -51.584, 0.59", "25.0654, -176.197, -51.9906, 0.81", "26.4264, -177.72, -53.4001, 0.81", "27.2941, -178.918, -54.6929, 1.11", "27.9859, -180.189, -56.1856, 0.88", "28.6246, -181.707, -57.9669, 0.59", "28.9694, -182.605, -59.0226, 0.81", "29.5718, -184.143, -60.8492, 0.96", "30.0995, -185.443, -62.2928, 0.81", "30.8455, -187.196, -64.0052, 0.37", "31.6081, -188.817, -65.3599, 1.03", "32.7929, -191.136, -66.9276, 0.96", "34.0917, -193.482, -68.2278, 1.18", "35.1278, -195.202, -69.0405, 1.18", "36.2748, -196.995, -69.7971, 1.18", "37.3982, -198.687, -70.4535, 0.81", "38.6411, -200.56, -71.0914, 0.66", "39.3155, -201.605, -71.3875, 0.96", "40.6138, -203.616, -71.8632, 1.25", "40.6722, -203.703, -71.8854, 1.25", "41.7821, -205.253, -72.2222, 1.11", "42.5847, -206.461, -72.3904, 0.81", "43.0646, -207.276, -72.4574, 1.25", "43.5617, -208.301, -72.4626, 1.25", "43.9199, -209.348, -72.3935, 0.66", "44.1743, -210.429, -72.4196, 0.59", "44.2771, -211.806, -72.5934, 0.59", "44.2531, -212.473, -72.7637, 0.88", "44.2445, -212.573, -72.7974, 0.88", "44.167, -213.848, -73.3048, 0.88", "44.2401, -216.134, -74.2379, 0.59", "44.4254, -217.149, -74.6493, 0.44", "44.4788, -217.331, -74.7134, 0.44", "44.8137, -218.258, -74.999, 0.74", "45.3679, -219.709, -75.3686, 0.96", "45.8677, -220.926, -75.6784, 0.96", "46.593, -222.775, -76.0733, 0.59", "46.9477, -223.752, -76.3012, 0.88", "46.9796, -223.85, -76.3252, 0.88", "47.2883, -224.894, -76.5704, 0.96", "47.9175, -227.313, -77.1804, 0.59", "48.2693, -228.687, -77.547, 1.03", "48.5667, -229.756, -77.8088, 1.18", "49.118, -231.536, -78.2351, 0.88", "49.5849, -233.062, -78.5834, 0.74", "50.0662, -234.708, -78.9372, 0.66", "50.5828, -236.8, -79.3361, 0.52", "50.8336, -238.08, -79.6064, 0.81", "51.0022, -239.41, -79.9323, 0.37", "51.0166, -240.535, -80.2676, 0.37", "50.9557, -241.335, -80.5413, 0.88", "50.8337, -242.088, -80.8349, 1.18", "50.6025, -242.975, -81.2404, 1.33", "50.2117, -244.491, -81.9973, 0.88", "49.8756, -246.16, -82.8718, 0.74", "49.8589, -246.253, -82.9225, 0.74", "49.5151, -248.473, -84.1501, 0.52", "49.3194, -249.883, -84.9445, 0.66", "49.0015, -252.439, -86.382, 0.59", "48.8648, -253.894, -87.1392, 0.88" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "18.5214, -168.807, -21.0502, 0.37", "19.4494, -169.03, -20.6489, 0.37", "20.4648, -169.352, -20.2109, 0.59", "21.0856, -169.556, -19.9595, 0.59", "22.2037, -169.9, -19.5412, 0.59", "22.3539, -169.945, -19.4877, 0.59", "23.1667, -170.172, -19.2388, 0.22", "23.5929, -170.256, -19.1851, 0.44", "24.2905, -170.339, -19.2453, 0.44", "24.824, -170.382, -19.3751, 0.81", "24.9135, -170.381, -19.4056, 0.81", "25.5482, -170.292, -19.6876, 0.96", "26.9398, -169.964, -20.4897, 0.52", "27.3959, -169.839, -20.7742, 0.52", "27.4585, -169.821, -20.8143, 0.52", "28.2336, -169.587, -21.3132, 0.44", "29.6585, -169.132, -22.19, 0.74", "30.9852, -168.686, -23.03, 0.29", "31.5588, -168.475, -23.3841, 0.29", "31.9499, -168.347, -23.6245, 0.59", "32.0052, -168.333, -23.6586, 0.59", "32.4197, -168.284, -23.9406, 1.18", "33.7356, -168.265, -24.773, 1.11", "34.4643, -168.314, -25.2487, 0.37", "35.4816, -168.428, -25.9214, 0.29", "36.663, -168.592, -26.6668, 1.11", "38.2439, -168.823, -27.5969, 0.66", "39.2569, -168.987, -28.1568, 0.44", "40.5649, -169.207, -28.8644, 1.18", "41.0615, -169.288, -29.1474, 1.62", "41.7996, -169.377, -29.5628, 1.18", "42.6634, -169.434, -30.0038, 0.74", "42.7242, -169.436, -30.0316, 0.74", "44.3035, -169.424, -30.9031, 0.59", "44.3612, -169.421, -30.9367, 0.59" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "18.5214, -168.807, -21.0502, 0.59", "18.5283, -169.938, -20.6872, 0.59", "18.5501, -170.5, -20.3415, 0.66", "18.5739, -170.777, -20.0973, 1.03", "18.579, -170.881, -19.9968, 1.03", "18.5696, -171.08, -19.7418, 1.03", "18.5182, -171.596, -18.9889, 0.74", "18.3757, -172.319, -17.6892, 1.03", "18.3053, -172.73, -16.7149, 1.11", "18.2795, -172.902, -16.2916, 0.74", "18.1369, -173.662, -14.4999, 0.74", "18.1305, -173.691, -14.4324, 0.74", "18.0544, -174.02, -13.7224, 0.66", "17.7967, -175.537, -11.0997, 0.66", "17.7514, -176.005, -10.4545, 0.52", "17.7451, -176.617, -9.79559, 0.74", "17.7471, -176.653, -9.7688, 0.74", "17.7918, -177.167, -9.46165, 0.88", "17.9485, -178.493, -8.88343, 0.52", "18.0232, -179.141, -8.72691, 0.52", "18.1191, -179.818, -8.56142, 0.52", "18.228, -180.473, -8.41609, 0.44", "18.3025, -180.982, -8.3159, 0.37", "18.4244, -181.876, -8.13975, 0.37", "18.5302, -182.589, -8.01867, 0.59", "18.6008, -183.007, -7.93271, 0.88", "18.6096, -183.051, -7.9199, 0.88", "18.6965, -183.411, -7.78837, 0.96", "18.9475, -184.369, -7.28985, 0.44", "19.0964, -184.875, -6.97288, 0.59", "19.1065, -184.906, -6.94933, 0.59", "19.3732, -185.641, -6.37646, 0.81", "19.4598, -185.896, -6.1805, 0.96", "19.8043, -186.988, -5.3741, 0.52", "19.8735, -187.247, -5.19776, 0.74", "20.0712, -188.143, -4.64311, 0.52", "20.1894, -188.728, -4.35408, 0.74", "20.2845, -189.266, -4.13523, 0.44", "20.3497, -189.733, -3.93393, 0.29", "20.3814, -190.029, -3.79014, 0.37", "20.4155, -190.46, -3.49285, 0.59", "20.4649, -190.971, -3.06636, 0.59", "20.5944, -191.785, -2.29714, 0.81", "20.8247, -192.622, -1.42514, 0.44", "21.1444, -193.391, -0.536915, 0.88", "21.6083, -194.194, 0.483267, 0.74", "21.8616, -194.477, 0.888154, 0.29", "22.3459, -194.812, 1.4263, 0.37", "22.9776, -194.93, 1.64833, 0.37", "23.5255, -194.899, 1.64455, 0.66", "23.5689, -194.892, 1.63812, 0.66", "24.2461, -194.742, 1.45679, 0.29", "24.2935, -194.731, 1.44456, 0.29", "25.0428, -194.51, 1.29254, 0.15", "25.7473, -194.266, 1.10787, 0.15", "27.2815, -198.713, 5.23525, 0.15", "28.243, -203.24, 9.4555, 0.15", "29.967, -208.256, 12.8505, 0.15", "32.8562, -212.136, 16.7632, 0.15" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-6.90906, -440.008, -33.7642, 1.18", "-6.36058, -441.518, -33.0694, 1.18", "-5.78396, -443.026, -32.3165, 0.96", "-5.52336, -443.659, -31.9986, 1.47", "-5.19514, -444.417, -31.6301, 1.84", "-4.78238, -445.338, -31.1893, 1.33", "-4.19777, -446.613, -30.6138, 0.74", "-4.16204, -446.685, -30.5872, 0.74", "-3.67718, -447.613, -30.2603, 0.81", "-3.26743, -448.361, -30.025, 0.44", "-3.22632, -448.433, -30.01, 0.44", "-2.55526, -449.654, -29.8845, 0.29", "-1.9273, -450.756, -29.8668, 0.44", "-1.53353, -451.444, -29.872, 0.81", "-1.14077, -452.093, -29.852, 0.81", "-0.311195, -453.318, -29.7221, 0.37", "-0.256752, -453.394, -29.7047, 0.37", "0.336203, -454.209, -29.4322, 0.81", "0.910971, -455.052, -29.094, 1.11", "1.63488, -456.266, -28.5739, 1.11", "2.42865, -457.874, -27.8831, 0.29", "2.91017, -459.145, -27.3528, 0.29", "3.15475, -460.083, -26.9871, 0.66", "3.30545, -461.279, -26.575, 0.88", "3.3273, -462.308, -26.2704, 1.03", "3.23616, -463.176, -26.0836, 1.03", "2.9964, -464.197, -25.9017, 0.74", "2.55006, -465.624, -25.667, 0.22", "2.22197, -466.534, -25.4833, 0.74", "2.18741, -466.618, -25.4608, 0.74", "1.84634, -467.429, -25.2083, 0.74", "1.81306, -467.503, -25.1854, 0.74", "1.39112, -468.458, -24.921, 0.29", "1.1381, -469.151, -24.7722, 0.29", "0.879399, -470.058, -24.5986, 1.03", "0.69479, -470.998, -24.4946, 1.4", "0.5561, -472.058, -24.4506, 0.52", "0.473478, -472.735, -24.4732, 0.29", "0.34336, -473.846, -24.6926, 0.37", "0.268087, -474.538, -24.9629, 0.66", "0.196137, -475.613, -25.6226, 0.37", "0.204542, -476.101, -26.0563, 0.96", "0.243922, -476.578, -26.5389, 0.96", "0.366255, -477.768, -27.8515, 0.37", "0.529651, -478.881, -29.1583, 0.74", "0.780472, -480.088, -30.5981, 1.25", "1.43749, -482.275, -33.2139, 0.29", "1.70383, -483.011, -34.1119, 0.29", "1.72803, -483.067, -34.1802, 0.29", "2.13915, -483.861, -35.1125, 0.88", "2.36447, -484.233, -35.5285, 1.18", "3.15022, -485.323, -36.6389, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-6.90906, -440.008, -33.7642, 0.44", "-6.27319, -440.827, -33.3985, 0.44", "-5.51932, -441.847, -32.9356, 0.44", "-5.47794, -441.909, -32.908, 0.44", "-5.19565, -442.353, -32.7131, 0.29", "-4.84847, -442.886, -32.4697, 0.81", "-4.44501, -443.472, -32.1866, 1.11", "-4.4157, -443.52, -32.1622, 1.11", "-3.996, -444.219, -31.8257, 0.44", "-3.96379, -444.274, -31.8011, 0.44", "-3.5652, -444.977, -31.5165, 0.37", "-3.29779, -445.495, -31.3238, 0.37", "-2.88245, -446.393, -31.022, 0.29", "-2.64047, -446.912, -30.8575, 0.74", "-2.49503, -447.214, -30.7646, 0.81", "-2.42762, -447.345, -30.73, 0.81", "-2.02326, -448.087, -30.5569, 0.44", "-1.64294, -448.733, -30.4133, 0.29", "-1.19061, -449.408, -30.2541, 0.52", "-0.920443, -449.773, -30.1612, 0.52", "-0.189924, -450.711, -29.9434, 0.29", "0.350899, -451.383, -29.8269, 0.59", "0.395211, -451.438, -29.8239, 0.59", "0.659575, -451.807, -29.8295, 0.59", "0.697582, -451.864, -29.8329, 0.59", "1.39513, -452.978, -29.9426, 0.81", "1.76396, -453.612, -30.0308, 1.03", "2.28402, -454.531, -30.2139, 0.59", "2.84027, -455.537, -30.4345, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-68.7706, -89.9016, 2.687, 0.37", "-76.0788, -97.7631, 5.64771, 0.37", "-84.9719, -104.245, 6.40578, 0.37", "-94.6291, -109.348, 5.62154, 0.37", "-103.867, -115.209, 6.76975, 0.37", "-113.235, -120.759, 8.23355, 0.37", "-121.618, -127.885, 9.47351, 0.37", "-129.167, -135.764, 11.662, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-68.7706, -89.9016, 2.687, 0.29", "-75.2942, -97.7105, 5.71138, 0.37", "-80.7046, -106.424, 8.68773, 0.37", "-85.6859, -115.654, 10.8863, 0.37", "-91.3938, -124.094, 14.0235, 0.37", "-97.6692, -132.622, 15.2434, 0.37", "-104.174, -140.623, 17.8122, 0.37", "-110.994, -147.629, 21.8167, 0.37", "-117.998, -154.377, 25.9025, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "60.9018, 186.835, 65.4984, 0.29", "61.9993, 195.526, 68.3399, 0.29", "63.0176, 203.671, 72.4012, 0.29", "63.3226, 212.055, 76.1266, 0.29", "64.2169, 220.145, 80.3146, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "60.9018, 186.835, 65.4984, 0.44", "62.1967, 197.646, 68.814, 0.29", "62.2287, 208.651, 71.8103, 0.29", "62.1518, 219.051, 76.3513, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-123.612, -229.963, 21.4756, 0.29", "-128.646, -237.088, 19.7518, 0.29", "-134.206, -243.351, 16.9608, 0.29", "-139.353, -249.421, 13.1832, 0.29", "-145.296, -255.657, 11.2391, 0.29", "-151.151, -262.009, 9.36775, 0.29" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-123.612, -229.963, 21.4756, 0.44", "-127.547, -240.057, 19.8345, 0.29", "-130.822, -250.426, 18.303, 0.29", "-133.228, -261.194, 17.9279, 0.29", "-136.413, -271.754, 17.8433, 0.29", "-139.901, -282.21, 18.4059, 0.29" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-117.648, -168.928, 50.5355, 0.22", "-116.602, -167.969, 51.0633, 0.22", "-116.122, -167.548, 51.2861, 0.52", "-115.766, -167.267, 51.4211, 0.74", "-114.616, -166.453, 51.7915, 0.37", "-113.31, -165.576, 52.1446, 0.37", "-112.827, -165.252, 52.2751, 0.37", "-112.618, -165.127, 52.3178, 0.37", "-111.607, -164.572, 52.5193, 0.37", "-111.131, -164.338, 52.594, 0.88", "-110.408, -164.042, 52.5928, 0.88", "-101.069, -159.057, 56.5026, 0.88", "-92.3352, -152.247, 59.0639, 0.88" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-117.648, -168.928, 50.5355, 0.44", "-117.773, -167.378, 50.3087, 0.44", "-117.834, -165.879, 50.102, 0.37", "-117.834, -165.809, 50.0955, 0.37", "-117.848, -164.589, 50.0259, 0.37", "-117.853, -164.465, 50.0257, 0.37", "-117.953, -162.97, 50.0703, 0.37", "-117.959, -162.89, 50.0797, 0.37", "-118.08, -161.902, 50.2415, 0.29", "-118.264, -160.855, 50.4221, 0.29", "-118.49, -159.898, 50.6003, 0.29", "-118.558, -159.67, 50.6425, 0.66", "-118.624, -159.502, 50.6679, 0.66", "-118.857, -158.934, 50.7111, 0.66", "-119.257, -158.034, 50.7012, 0.29", "-119.442, -157.656, 50.6775, 0.44", "-119.517, -157.518, 50.6647, 0.44", "-119.921, -156.858, 50.6147, 0.37", "-120.395, -156.137, 50.5755, 0.37", "-120.44, -156.073, 50.5735, 0.37", "-121.292, -154.907, 50.5699, 0.29", "-121.798, -154.206, 50.5794, 0.44", "-121.942, -153.998, 50.5908, 0.44", "-122.395, -153.324, 50.6602, 0.44", "-122.827, -152.655, 50.7396, 0.29", "-122.915, -152.51, 50.7583, 0.29", "-123.148, -152.085, 50.8191, 0.44", "-123.4, -151.612, 50.8897, 0.44", "-123.44, -151.531, 50.9012, 0.44", "-123.705, -150.961, 50.972, 0.44", "-123.945, -150.338, 51.0536, 0.44", "-123.967, -150.26, 51.062, 0.44", "-124.119, -149.545, 51.1192, 0.37", "-124.185, -149.196, 51.138, 0.37", "-124.335, -148.294, 51.1555, 0.44", "-124.445, -147.494, 51.1533, 0.44", "-124.556, -146.628, 51.0698, 0.44", "-124.707, -145.424, 50.8851, 0.44", "-124.863, -144.319, 50.6709, 0.74", "-125.098, -142.854, 50.3325, 0.81", "-125.207, -142.256, 50.1673, 0.74", "-125.637, -140.179, 49.483, 0.29", "-125.652, -140.115, 49.4594, 0.29", "-125.753, -139.651, 49.2754, 0.29", "-125.783, -139.492, 49.2169, 0.29", "-125.847, -139.093, 49.1151, 0.44", "-125.857, -139.016, 49.1011, 0.44", "-125.906, -138.457, 49.0429, 0.44", "-125.96, -137.55, 48.9363, 0.88", "-125.996, -136.275, 48.7712, 0.52", "-126.015, -135.282, 48.641, 0.52", "-126.029, -134.481, 48.5219, 0.44", "-126.057, -133.603, 48.3835, 0.29", "-126.087, -132.946, 48.2735, 0.59", "-126.105, -132.692, 48.23, 0.59", "-126.173, -132.053, 48.1236, 0.59", "-126.244, -131.417, 48.0195, 0.29", "-126.343, -130.546, 47.8968, 0.29", "-126.351, -130.455, 47.8844, 0.29", "-126.407, -129.797, 47.786, 0.59", "-126.414, -129.694, 47.7701, 0.59", "-126.465, -128.957, 47.6665, 0.66", "-126.516, -128.14, 47.5635, 0.66", "-126.56, -127.273, 47.4526, 0.29", "-126.615, -126.06, 47.299, 0.29", "-126.618, -125.969, 47.2876, 0.29", "-126.629, -124.423, 47.1465, 0.29", "-126.629, -124.247, 47.1367, 0.29", "-126.636, -123.251, 47.1145, 0.52", "-126.64, -123.077, 47.1168, 0.52", "-126.679, -122.038, 47.1671, 0.81", "-126.751, -121.051, 47.2204, 0.52", "-126.835, -120.244, 47.2716, 0.52", "-126.936, -119.5, 47.3056, 0.74", "-127.079, -118.618, 47.3193, 0.88", "-127.125, -118.29, 47.3007, 0.88", "-127.195, -117.253, 47.1188, 0.88", "-127.192, -117.175, 47.097, 0.88", "-127.125, -116.633, 46.9155, 0.66", "-126.962, -115.802, 46.6616, 0.44", "-126.665, -114.557, 46.3706, 0.37", "-126.37, -113.322, 46.1616, 0.29", "-126.16, -112.48, 46.0568, 0.29", "-126.143, -112.401, 46.0508, 0.29", "-125.876, -110.953, 46.0191, 0.29", "-125.61, -109.128, 46.0651, 0.29", "-125.524, -108.055, 46.1407, 0.37", "-125.52, -107.883, 46.1544, 0.37", "-125.53, -106.981, 46.1986, 0.37", "-125.538, -106.087, 46.2312, 0.37", "-125.539, -105.925, 46.2333, 0.37", "-125.578, -104.693, 46.2742, 0.52", "-125.644, -103.438, 46.3379, 0.44", "-125.733, -102.117, 46.4201, 1.11", "-125.84, -100.349, 46.5386, 0.29", "-125.844, -100.257, 46.5481, 0.29", "-125.874, -98.8923, 46.7098, 0.29", "-125.869, -98.118, 46.8069, 0.29", "-125.867, -98.0509, 46.8151, 0.29", "-125.817, -96.6723, 46.9555, 0.37", "-125.73, -94.6244, 47.1047, 0.37", "-125.635, -93.1728, 47.1893, 0.37", "-125.521, -92.0126, 47.2404, 0.81", "-125.439, -91.2479, 47.2653, 1.03", "-125.311, -89.9591, 47.2855, 0.29", "-125.238, -89.0856, 47.2767, 0.29", "-125.202, -88.4978, 47.2389, 0.44", "-125.2, -88.4192, 47.2343, 0.44", "-125.207, -87.9964, 47.2126, 0.44", "-125.268, -86.9398, 47.2053, 0.29", "-125.282, -86.7811, 47.2102, 0.29", "-125.43, -85.4557, 47.2847, 0.29", "-125.441, -85.3758, 47.2903, 0.29", "-125.678, -83.9323, 47.406, 0.29", "-125.823, -83.0876, 47.4769, 0.66", "-125.921, -82.4777, 47.5271, 0.74", "-125.94, -82.3197, 47.5371, 0.74", "-126.025, -80.844, 47.5929, 0.29", "-126.026, -80.6925, 47.5937, 0.29", "-126.005, -79.778, 47.553, 0.29", "-125.984, -79.1409, 47.5025, 0.74", "-125.922, -78.1317, 47.4108, 0.22", "-125.788, -76.6785, 47.2638, 0.22", "-125.583, -75.358, 47.1125, 1.03", "-125.34, -74.0292, 46.9526, 0.29", "-125.289, -73.7798, 46.9218, 0.29", "-124.995, -72.4326, 46.7526, 0.29", "-124.936, -72.1861, 46.7214, 0.29", "-124.376, -70.0837, 46.4521, 0.29", "-124.32, -69.8739, 46.4277, 0.29", "-123.938, -68.4091, 46.2328, 0.29", "-123.918, -68.3208, 46.219, 0.29", "-123.723, -67.1771, 46.0125, 0.44", "-123.713, -67.0985, 45.9965, 0.44", "-123.651, -66.1453, 45.7799, 0.44", "-123.595, -65.1574, 45.5459, 0.74", "-123.593, -65.079, 45.5264, 0.74", "-123.588, -64.6172, 45.4155, 1.03", "-123.603, -63.7621, 45.2322, 0.59", "-123.647, -62.8519, 45.1671, 0.29", "-123.659, -62.68, 45.1791, 0.29", "-123.722, -62.0801, 45.2963, 0.29", "-123.732, -61.9919, 45.3178, 0.29", "-123.867, -61.0596, 45.5805, 0.88", "-124.077, -59.703, 45.9582, 0.88", "-124.101, -59.5507, 45.9961, 0.88", "-124.192, -58.9125, 46.1343, 0.66", "-124.247, -58.2785, 46.2809, 0.29", "-124.275, -57.6193, 46.4325, 0.29", "-124.282, -56.3486, 46.7055, 0.29", "-124.263, -55.7072, 46.821, 0.44", "-124.258, -55.6179, 46.8401, 0.44", "-124.146, -54.2969, 47.2464, 0.37", "-124.087, -53.4028, 47.5616, 0.29", "-124.085, -53.3269, 47.5885, 0.29", "-124.095, -52.7121, 47.8027, 0.74", "-124.102, -52.6485, 47.8213, 0.74", "-124.362, -51.0152, 48.2212, 0.29", "-124.684, -49.5304, 48.4849, 0.29", "-124.966, -48.2863, 48.7031, 0.22", "-125.024, -48.0465, 48.7456, 0.22", "-125.434, -46.4064, 49.0146, 0.29", "-125.456, -46.3186, 49.0273, 0.29", "-125.82, -44.9018, 49.1786, 0.29", "-126.115, -43.6989, 49.3485, 0.29", "-126.395, -42.4624, 49.5675, 0.74" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-182.453, -226.478, 85.6939, 0.37", "-182.591, -226.997, 85.4746, 0.37", "-182.953, -228.086, 85.0497, 0.37", "-183.269, -229.005, 84.7325, 0.29", "-183.467, -229.55, 84.5365, 0.44", "-183.663, -230.092, 84.3485, 0.44", "-184.046, -231.161, 83.9971, 0.29", "-184.199, -231.552, 83.879, 0.37", "-184.436, -232.103, 83.7466, 0.37", "-184.936, -233.214, 83.4354, 0.37", "-185.168, -233.732, 83.2752, 0.37", "-185.323, -234.101, 83.1549, 0.66", "-185.344, -234.151, 83.1395, 0.66", "-185.501, -234.482, 83.0297, 0.74", "-185.955, -235.306, 82.738, 0.37", "-186.258, -235.785, 82.5864, 0.37", "-186.296, -235.835, 82.5657, 0.37", "-186.587, -236.192, 82.3936, 0.37", "-188.739, -243.89, 81.0102, 0.37", "-189.777, -251.961, 80.4877, 0.37" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-182.453, -226.478, 85.6939, 0.29", "-183.2, -226.341, 86.3271, 0.29", "-183.847, -226.265, 86.9999, 0.52", "-184.764, -226.236, 87.9557, 0.44", "-185.09, -226.272, 88.2809, 0.29", "-185.72, -226.401, 88.8589, 0.29", "-186.23, -226.522, 89.3456, 0.44", "-187.436, -226.868, 90.5694, 0.29", "-187.945, -227.011, 91.0647, 0.29", "-188.686, -227.238, 91.7725, 0.29", "-189.375, -227.457, 92.4848, 0.29", "-190.091, -227.674, 93.2601, 0.29", "-190.125, -227.685, 93.2978, 0.29", "-190.755, -227.821, 93.9446, 0.44", "-191.641, -227.9, 94.9658, 0.44", "-191.724, -227.893, 95.0721, 0.44", "-192.172, -227.842, 95.6875, 0.66", "-192.681, -227.857, 96.2534, 0.66", "-198.549, -228.507, 102.646, 0.66", "-202.821, -229.002, 110.211, 0.66" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "37.6371, -238.79, -13.4753, 0.52", "36.643, -239.669, -13.145, 0.52", "35.8724, -240.39, -12.9059, 0.29", "35.061, -241.226, -12.6788, 0.22", "34.6511, -241.672, -12.5466, 0.52", "34.2856, -242.079, -12.4188, 0.74", "33.8237, -242.603, -12.2524, 0.81", "33.3924, -243.092, -12.1004, 0.66", "32.778, -243.801, -11.9083, 0.29", "32.1012, -244.705, -11.6657, 0.29", "32.0595, -244.765, -11.6499, 0.29", "31.9308, -244.957, -11.6006, 0.66", "31.5592, -245.509, -11.4569, 0.81", "31.0888, -246.187, -11.2831, 0.22", "30.6789, -246.776, -11.1505, 0.22", "30.4879, -247.073, -11.1168, 0.52", "30.2559, -247.448, -11.0764, 0.52" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "37.6371, -238.79, -13.4753, 1.18", "38.0298, -239.609, -13.1729, 1.18", "38.1763, -239.991, -13.0382, 1.4", "38.366, -240.721, -12.753, 0.37", "38.4118, -241.393, -12.4511, 0.44", "38.3583, -241.958, -12.1963, 0.66", "38.1559, -242.759, -11.8056, 0.66", "37.9913, -243.168, -11.6083, 0.66", "37.557, -244.095, -11.1707, 0.59", "36.9498, -245.294, -10.6169, 0.37", "36.5889, -246.003, -10.2924, 1.55", "36.0158, -247.279, -9.72977, 0.37", "35.7373, -248.089, -9.4091, 0.44", "35.5664, -248.907, -9.11697, 0.44", "35.5465, -249.374, -8.98595, 0.88", "35.5913, -249.809, -8.89186, 1.03", "35.716, -250.663, -8.74148, 0.37", "35.819, -251.329, -8.6705, 0.37", "35.857, -251.662, -8.63615, 0.88", "35.8958, -252.112, -8.59101, 0.96", "35.9309, -252.858, -8.52272, 0.96", "35.9649, -253.781, -8.44038, 0.29", "35.9995, -254.719, -8.28819, 0.29", "36.0141, -255.055, -8.2113, 0.66", "36.0264, -255.438, -8.08119, 0.88", "36.0278, -255.495, -8.05673, 0.88", "36.0376, -255.957, -7.81673, 0.74", "36.0024, -257.108, -7.16216, 0.29", "35.9489, -257.717, -6.82115, 0.29", "35.9148, -258.535, -6.39731, 1.11", "35.9368, -258.939, -6.20155, 1.11", "35.9454, -258.995, -6.17708, 1.11", "36.0626, -259.473, -5.99808, 1.11", "36.4342, -260.578, -5.5962, 0.29", "36.7805, -261.509, -5.2473, 0.29", "37.0809, -262.324, -4.94507, 0.29", "37.2366, -262.779, -4.76943, 0.81", "37.3976, -263.333, -4.53388, 0.96", "37.6543, -264.394, -3.94648, 0.96", "37.7592, -265.018, -3.54568, 0.37", "37.8104, -265.636, -3.11884, 0.88", "37.821, -266.136, -2.7696, 0.88", "37.8085, -267.131, -2.09099, 0.59", "37.7626, -268.48, -1.24065, 0.44", "37.7465, -269.02, -0.952683, 0.59", "37.728, -269.459, -0.754315, 0.59", "37.6948, -270.16, -0.51832, 0.88", "37.6821, -270.797, -0.377372, 0.29", "37.6849, -271.543, -0.287235, 0.29", "37.7, -272.318, -0.208869, 0.37", "37.7273, -273.162, -0.0857353, 0.96", "37.7494, -273.772, 0.0234942, 1.33", "37.7796, -274.781, 0.279831, 0.37", "37.7797, -275.503, 0.503362, 0.52", "37.7446, -276.434, 0.831387, 0.44", "37.7158, -276.924, 1.01819, 0.29", "37.6882, -277.452, 1.22978, 0.88", "37.626, -278.39, 1.59896, 0.74", "37.5898, -279.003, 1.86422, 0.29", "37.598, -279.576, 2.11499, 0.59", "37.6249, -280.196, 2.37547, 0.74", "37.6445, -280.697, 2.61183, 0.88", "37.6453, -280.758, 2.64161, 0.88", "37.5883, -282.01, 3.21565, 0.52", "37.5076, -282.502, 3.44268, 0.52", "37.2759, -283.231, 3.79355, 0.52", "36.9851, -283.984, 4.14418, 0.96", "36.8186, -284.372, 4.34936, 1.33", "36.5894, -284.925, 4.66744, 0.59", "36.3077, -285.629, 5.07073, 0.37", "35.9655, -286.639, 5.66983, 0.44", "35.8174, -287.241, 6.00755, 0.66", "35.6447, -288.36, 6.55712, 0.96", "35.5423, -289.499, 7.08524, 0.44", "35.5194, -290.085, 7.33345, 1.03", "35.5413, -290.785, 7.59086, 1.18", "35.6142, -291.753, 7.84202, 0.29", "35.7021, -292.68, 7.97544, 0.29", "35.7184, -292.819, 7.97807, 0.88", "35.752, -293.152, 7.96216, 1.25", "35.7951, -293.839, 7.94356, 0.66", "35.8064, -294.59, 7.93972, 0.59", "35.7812, -295.631, 7.95912, 0.52", "35.7395, -296.248, 7.97513, 0.52", "35.6622, -297.132, 8.00858, 0.52", "35.5717, -297.964, 8.0766, 0.37", "35.4747, -298.734, 8.12689, 0.29", "35.4421, -299.039, 8.14162, 0.74", "35.4293, -299.221, 8.1454, 0.74", "35.4167, -299.726, 8.12853, 0.74", "35.4387, -300.543, 8.05491, 0.81", "35.4969, -301.801, 7.848, 0.81", "35.565, -302.619, 7.6985, 0.81", "35.6686, -303.527, 7.534, 0.81", "35.6763, -303.586, 7.52377, 0.81", "35.7961, -304.383, 7.39171, 0.59", "35.9672, -305.378, 7.23874, 0.44", "36.0855, -306.015, 7.19284, 0.44", "36.2368, -306.745, 7.16822, 0.29", "36.3608, -307.362, 7.17453, 0.74", "36.4199, -307.732, 7.18639, 0.96", "36.425, -307.792, 7.19276, 0.96", "36.4196, -308.419, 7.29247, 0.52", "36.3191, -309.335, 7.48244, 0.52", "36.1787, -310.189, 7.70019, 0.52", "36.0855, -310.754, 7.86076, 0.59", "35.9541, -311.726, 8.15579, 0.74", "35.9048, -312.261, 8.32586, 0.52", "35.8532, -313.244, 8.63071, 0.37", "35.8528, -313.304, 8.64822, 0.37", "35.9385, -314.204, 8.88375, 0.44", "36.07, -314.851, 9.01884, 0.37", "36.2058, -315.304, 9.07131, 0.74", "36.4264, -315.995, 9.11994, 0.29", "36.4405, -316.044, 9.12003, 0.29", "36.5207, -316.371, 9.11799, 0.44", "36.5287, -316.421, 9.11688, 0.44", "36.566, -316.872, 9.10095, 0.44", "36.6102, -317.759, 9.08402, 0.22", "36.6453, -318.384, 9.10773, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "48.8648, -253.894, -87.1392, 0.29", "49.2525, -253.27, -88.4788, 0.29", "49.2897, -253.189, -88.648, 0.29", "49.4251, -252.781, -89.4276, 0.29", "49.6785, -251.714, -91.2452, 0.29", "49.7926, -251.297, -91.9008, 0.59", "50.1355, -250.022, -93.692, 0.59", "50.3476, -249.223, -94.6424, 0.37", "50.4885, -248.748, -95.1358, 0.66", "50.6661, -248.215, -95.6478, 0.88", "51.3511, -246.279, -97.3773, 0.22", "51.6424, -245.531, -98.0146, 0.44", "51.9093, -244.862, -98.5296, 0.59", "52.4702, -243.732, -99.4224, 0.29", "53.0136, -242.762, -100.239, 0.74", "53.7012, -241.649, -101.245, 1.03" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "48.8648, -253.894, -87.1392, 0.52", "49.5191, -255.344, -88.854, 0.52", "49.5279, -255.385, -88.896, 0.52", "49.5644, -255.775, -89.2432, 0.52", "49.6179, -257.152, -90.326, 1.33", "49.6234, -257.687, -90.7191, 1.77", "49.619, -258.485, -91.2337, 0.66", "49.5282, -259.483, -91.7485, 0.66", "49.461, -260.835, -92.4056, 0.66", "49.4865, -261.584, -92.743, 0.88", "49.5112, -261.783, -92.8161, 0.88", "49.7594, -263.026, -93.223, 0.88", "49.7721, -263.074, -93.238, 0.88", "50.2515, -264.605, -93.6364, 0.66", "50.7144, -265.804, -93.9309, 0.44", "51.0385, -266.531, -94.1294, 0.96", "51.5405, -267.565, -94.4339, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-117.998, -154.377, 25.9025, 0.29", "-123.125, -157.384, 32.4545, 0.29", "-128.684, -159.907, 38.824, 0.29", "-134.336, -162.755, 44.988, 0.29", "-140.203, -167.797, 49.4507, 0.29", "-145.66, -172.605, 54.6269, 0.29", "-151.011, -177.18, 60.0983, 0.29", "-156.541, -181.397, 65.647, 0.29", "-161.771, -186.126, 71.121, 0.29", "-166.689, -191.229, 76.5845, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-117.998, -154.377, 25.9025, 0.44", "-121.58, -161.341, 24.2223, 0.29", "-125.566, -167.662, 21.515, 0.29", "-129.253, -174.319, 19.1321, 0.29", "-131.748, -181.535, 16.7202, 0.29", "-132.994, -188.976, 14.0244, 0.29", "-133.384, -196.35, 10.957, 0.29", "-133.742, -203.207, 6.96274, 0.29", "-134.804, -209.647, 2.48794, 0.29", "-135.481, -217.04, -0.494312, 0.29", "-136.908, -224.794, -2.16181, 0.29", "-139.376, -232.471, -2.73235, 0.29", "-143.544, -239.349, -2.79904, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "64.2169, 220.145, 80.3146, 0.29", "64.6729, 228.081, 83.3092, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "64.2169, 220.145, 80.3146, 0.44", "65.8079, 230.856, 85.9357, 0.29", "68.064, 241.099, 92.0889, 0.29", "69.777, 251.383, 98.3572, 0.29", "71.9161, 260.767, 105.682, 0.29", "71.8169, 270.672, 112.701, 0.29", "71.8793, 279.722, 120.698, 0.29", "69.9068, 289.586, 127.5, 0.29", "67.5004, 298.822, 134.934, 0.29", "64.5201, 306.151, 143.926, 0.29", "62.9862, 314.045, 152.841, 0.29", "64.2427, 321.393, 162.204, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-126.395, -42.4624, 49.5675, 0.22", "-127.497, -42.5319, 49.7474, 0.22", "-129.32, -42.6468, 50.0449, 0.22", "-130.118, -42.697, 50.1751, 0.52", "-130.608, -42.7279, 50.255, 0.74", "-141.037, -41.4351, 52.7495, 0.74", "-151.258, -40.6301, 56.1243, 0.74", "-160.83, -38.1506, 60.5144, 0.74", "-169.873, -36.9655, 66.291, 0.74", "-178.32, -33.7367, 72.2559, 0.74", "-185.258, -30.4094, 79.8767, 0.74", "-190.422, -26.2981, 88.4847, 0.74", "-195.254, -21.2759, 96.8388, 0.74", "-200.536, -15.5307, 104.469, 0.74", "-205.015, -10.6902, 113.111, 0.74" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-126.395, -42.4624, 49.5675, 0.44", "-126.422, -41.8271, 49.535, 0.44", "-126.448, -41.3665, 49.5048, 0.66", "-126.455, -41.2817, 49.4983, 0.66", "-126.479, -41.0256, 49.4772, 0.59", "-126.527, -40.4391, 49.4239, 0.29", "-126.583, -39.5006, 49.329, 0.29", "-126.589, -39.4017, 49.3218, 0.29", "-126.625, -38.708, 49.2922, 0.52", "-126.627, -38.6553, 49.291, 0.52", "-126.652, -37.9377, 49.2859, 0.52", "-126.662, -37.0626, 49.2896, 1.03", "-126.636, -35.9875, 49.3109, 0.29", "-126.634, -35.9411, 49.3123, 0.29", "-126.573, -35.312, 49.3452, 0.29", "-126.505, -34.8706, 49.3671, 0.52", "-126.409, -34.4222, 49.3893, 0.52", "-126.28, -33.9372, 49.3998, 0.96", "-126.269, -33.9007, 49.3991, 0.96", "-125.943, -32.8035, 49.3748, 0.29", "-125.677, -31.8911, 49.353, 0.29", "-125.664, -31.8402, 49.3515, 0.29", "-125.509, -31.0011, 49.3166, 0.29", "-125.483, -30.7209, 49.2977, 0.59", "-125.483, -30.5816, 49.2861, 0.59", "-125.532, -30.2114, 49.2466, 0.52", "-125.612, -29.822, 49.2096, 0.66", "-125.701, -29.4115, 49.1712, 0.66", "-125.852, -28.7772, 49.1134, 0.29", "-125.872, -28.68, 49.1099, 0.29", "-125.942, -28.2574, 49.1121, 0.29", "-125.981, -27.923, 49.1527, 0.52", "-125.984, -27.879, 49.1614, 0.52", "-125.997, -27.2448, 49.3137, 0.37", "-125.981, -26.4812, 49.5214, 0.59", "-125.959, -26.1051, 49.6219, 0.96", "-125.87, -25.0556, 49.9031, 0.37", "-125.862, -24.9934, 49.921, 0.37", "-125.74, -24.2782, 50.1277, 0.37", "-125.731, -24.235, 50.1401, 0.37", "-125.611, -23.7351, 50.2587, 0.37", "-125.585, -23.5955, 50.2789, 0.37", "-125.493, -22.5989, 50.3044, 0.59", "-125.485, -22.4147, 50.3048, 0.88", "-125.485, -22.3681, 50.3032, 0.88", "-125.482, -21.9908, 50.2798, 0.88", "-125.469, -20.6281, 50.1517, 0.29", "-125.441, -19.4516, 49.9693, 0.29", "-125.436, -19.2853, 49.9348, 0.29", "-125.385, -17.9297, 49.6794, 0.29", "-125.382, -17.7405, 49.6474, 0.29", "-125.382, -16.8393, 49.5095, 0.37", "-125.417, -15.7212, 49.367, 0.37", "-125.454, -15.1685, 49.3393, 0.37", "-125.541, -14.3144, 49.3562, 0.29", "-125.674, -13.4711, 49.4258, 0.29", "-125.693, -13.3749, 49.4393, 0.29", "-125.809, -12.9415, 49.5549, 0.29", "-126.145, -11.9227, 49.9916, 1.18", "-126.21, -11.7237, 50.0831, 1.47" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "51.5405, -267.565, -94.4339, 0.88", "51.4611, -268.361, -95.0508, 0.88", "51.3904, -268.935, -95.4514, 1.47", "51.3235, -269.508, -95.8009, 1.69", "51.1975, -270.702, -96.4242, 0.59", "51.1948, -270.743, -96.444, 0.59", "51.1616, -271.494, -96.7799, 0.29", "51.1497, -272.095, -97.0054, 0.44", "51.1918, -272.63, -97.2083, 0.66", "51.3223, -273.223, -97.4651, 1.11", "51.4909, -273.809, -97.7187, 1.47", "51.5814, -274.106, -97.8592, 1.47", "51.5959, -274.153, -97.8832, 1.47", "51.9471, -275.529, -98.5967, 1.11", "52.1342, -276.758, -99.23, 0.59", "52.1725, -277.388, -99.5167, 0.81", "52.1671, -277.97, -99.7364, 1.11", "52.1383, -278.571, -99.9126, 1.25", "52.0558, -279.457, -100.102, 0.66", "51.8929, -280.467, -100.224, 0.52", "51.7169, -281.432, -100.295, 1.03", "51.6433, -281.908, -100.335, 1.25", "51.5232, -282.916, -100.425, 0.66", "51.5005, -283.219, -100.462, 0.44", "51.4962, -283.616, -100.518, 0.96", "51.5102, -283.966, -100.575, 1.25", "51.5608, -284.866, -100.754, 1.11", "51.6117, -285.578, -100.917, 0.96", "51.6564, -286.352, -101.08, 0.66", "51.6763, -287.164, -101.23, 0.59", "51.6762, -287.219, -101.239, 0.59", "51.6347, -287.837, -101.327, 0.59", "51.471, -288.646, -101.443, 0.52", "51.1909, -289.406, -101.588, 0.81", "50.8848, -289.942, -101.725, 1.03", "50.8359, -290.007, -101.748, 1.03", "50.4493, -290.47, -101.936, 1.03", "49.8694, -291.049, -102.219, 0.52", "49.513, -291.35, -102.392, 1.11", "49.1289, -291.661, -102.632, 1.33", "49.0897, -291.689, -102.656, 1.33" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "51.5405, -267.565, -94.4339, 0.52", "51.3909, -268.043, -93.6852, 0.52", "51.0628, -268.905, -92.2929, 0.29", "50.8733, -269.43, -91.4794, 0.59", "50.7366, -269.745, -90.9836, 0.96", "50.309, -270.709, -89.4701, 0.22", "50.0282, -271.362, -88.437, 0.59", "50.0131, -271.396, -88.3812, 0.59", "49.8497, -271.876, -87.6359, 0.52", "49.5766, -272.657, -86.5508, 0.37", "49.4645, -273.03, -86.1051, 0.81", "49.4049, -273.362, -85.7724, 0.96", "49.2976, -274.246, -84.9656, 0.37", "49.3206, -275.078, -84.2801, 0.37", "49.4789, -275.906, -83.6891, 0.44", "49.6545, -276.403, -83.3867, 0.44", "49.9015, -277.078, -82.9837, 0.22", "50.0877, -277.544, -82.6929, 0.44", "50.8341, -279.186, -81.5815, 0.37", "51.1425, -279.805, -81.1278, 0.52", "51.4952, -280.47, -80.6083, 0.59", "51.8624, -281.182, -79.9867, 0.81", "52.1921, -281.89, -79.3079, 0.29", "52.426, -282.481, -78.6604, 0.52", "52.5087, -282.774, -78.2851, 0.81", "52.617, -283.04, -77.8933, 1.11", "52.6749, -283.142, -77.7251, 1.11", "52.8148, -283.328, -77.3944, 0.96", "53.0217, -283.606, -76.7414, 0.59", "53.2127, -283.94, -75.5704, 0.29", "53.2601, -284.094, -74.9755, 0.52", "53.2741, -284.212, -74.504, 0.66", "53.2734, -284.23, -74.4418, 0.66", "53.1774, -284.724, -72.8765, 0.52", "53.0591, -285.136, -71.6874, 0.74", "52.9266, -285.561, -70.5191, 0.22", "52.9005, -285.693, -70.2079, 0.74", "52.8617, -285.968, -69.6545, 0.81", "52.817, -286.672, -68.476, 0.22", "52.831, -286.94, -68.1368, 0.66", "52.852, -287.222, -67.8311, 0.74", "52.8726, -287.969, -67.1085, 0.22", "52.8489, -288.668, -66.4919, 0.66", "52.8329, -288.928, -66.2827, 0.81", "52.7906, -289.444, -65.9304, 0.52", "52.7862, -289.491, -65.8994, 0.52", "52.7311, -290.241, -65.4419, 0.22", "52.6947, -291.276, -64.875, 0.74", "52.7598, -291.829, -64.599, 0.81", "52.7834, -291.946, -64.5409, 0.81", "52.9564, -292.495, -64.2649, 0.59", "53.2241, -293.014, -64.0228, 0.29", "53.5935, -293.568, -63.8005, 1.03", "54.2257, -294.469, -63.5296, 1.03", "54.3442, -294.649, -63.4896, 1.25", "54.7502, -295.384, -63.3793, 0.66", "55.3503, -296.69, -63.2564, 0.52", "55.6514, -297.543, -63.2029, 0.37", "55.8297, -298.239, -63.1904, 0.29", "55.9096, -298.929, -63.2059, 0.29", "55.9445, -300.127, -63.2646, 0.29", "55.9398, -300.542, -63.2963, 0.81", "55.9184, -301.115, -63.3357, 1.03", "55.9196, -301.185, -63.3368, 1.03", "56.0006, -302.162, -63.2915, 0.59", "56.082, -303.088, -63.1762, 0.44", "56.1489, -304.129, -63.0109, 0.88", "56.161, -304.424, -62.9574, 1.25", "56.1534, -304.942, -62.8315, 1.55", "56.1147, -305.597, -62.6234, 0.29", "55.8662, -306.601, -62.1326, 0.29", "55.5395, -307.428, -61.6379, 0.29", "55.5151, -307.48, -61.6057, 0.29", "55.1243, -308.282, -61.115, 1.47", "54.7838, -308.978, -60.7037, 1.77", "53.9008, -310.799, -59.6302, 0.37", "53.5976, -311.423, -59.2596, 0.22", "53.1835, -312.243, -58.7606, 0.29", "52.9956, -312.627, -58.545, 0.52", "52.7611, -313.154, -58.3031, 0.66", "52.736, -313.215, -58.282, 0.66" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-205.015, -10.6902, 113.111, 0.37", "-212.806, -7.47823, 118.86, 0.37", "-221.191, -5.65953, 124.332, 0.37", "-228.294, -2.86061, 131.075, 0.37", "-235.703, -1.58109, 137.917, 0.37", "-244.046, -2.68482, 143.628, 0.37", "-251.556, -3.25596, 150.459, 0.37", "-258.299, -4.68459, 157.956, 0.37", "-262.839, -6.8529, 166.845, 0.37", "-266.539, -11.6866, 175.181, 0.37", "-269.989, -18.2511, 182.491, 0.37", "-272.453, -24.7448, 190.261, 0.37", "-274.873, -31.2005, 198.075, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-205.015, -10.6902, 113.111, 0.29", "-214.635, -6.66011, 120.269, 0.37", "-224.802, -2.72698, 126.693, 0.37", "-235.421, -0.103494, 132.993, 0.37", "-244.289, 5.04056, 140.457, 0.37", "-252.12, 9.93858, 149.12, 0.37", "-260.334, 13.1926, 158.136, 0.37", "-270.299, 17.1349, 164.859, 0.37", "-281.476, 21.5841, 168.879, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-126.21, -11.7237, 50.0831, 0.59", "-125.076, -11.1062, 50.6676, 0.59", "-125.025, -11.0794, 50.6947, 0.59", "-124.022, -10.4467, 51.2131, 0.29", "-123.504, -10.0493, 51.447, 0.29", "-123.456, -10.0093, 51.4672, 0.29", "-122.438, -9.05036, 51.8258, 0.29", "-122.407, -9.01426, 51.8332, 0.29", "-121.58, -7.96234, 51.9662, 0.29", "-120.663, -6.76636, 52.0053, 0.29", "-120.588, -6.66957, 52.0035, 0.29", "-119.771, -5.67048, 51.9525, 0.74", "-119.066, -4.85899, 51.9093, 0.29", "-118.859, -4.64825, 51.9182, 0.29", "-117.793, -3.66653, 51.9889, 0.29", "-117.277, -3.23836, 52.0461, 0.29", "-116.417, -2.58445, 52.1822, 0.29", "-115.328, -1.87975, 52.4572, 0.29", "-114.379, -1.33422, 52.7567, 0.88", "-109.844, 5.08465, 54.3716, 0.88", "-106.246, 11.6959, 57.2011, 0.88", "-102.401, 18.4513, 59.2969, 0.88", "-97.985, 24.9389, 60.9927, 0.88", "-93.3371, 31.0672, 63.2051, 0.88", "-89.24, 37.6707, 65.2613, 0.88", "-84.6481, 43.8097, 67.5626, 0.88", "-79.2548, 49.132, 69.9664, 0.88" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-126.21, -11.7237, 50.0831, 0.59", "-126.72, -10.4852, 50.3356, 0.59", "-127.129, -9.3754, 50.592, 0.59", "-127.479, -8.27917, 50.8921, 0.37", "-127.891, -6.87404, 51.2929, 0.29", "-128.211, -5.54323, 51.7215, 0.29", "-128.23, -5.44993, 51.7532, 0.29", "-128.422, -4.27029, 52.1946, 0.29", "-128.575, -3.23318, 52.6107, 0.66", "-128.66, -2.57382, 52.8517, 0.81", "-128.863, -1.09103, 53.2712, 0.29", "-128.878, -0.994561, 53.2965, 0.29", "-129.091, 0.302554, 53.5534, 0.29", "-129.107, 0.389885, 53.5637, 0.29", "-129.353, 1.79918, 53.6043, 0.52", "-129.547, 2.77012, 53.574, 0.74", "-129.573, 2.86774, 53.5652, 0.74", "-129.824, 3.76248, 53.5329, 0.74", "-129.848, 3.84839, 53.5328, 0.74", "-130.258, 5.08054, 53.5676, 0.29", "-130.73, 6.35611, 53.6403, 0.29", "-131.413, 8.06562, 53.7602, 0.29", "-131.981, 9.54252, 53.8442, 0.29", "-132.037, 9.71178, 53.8534, 0.29", "-132.368, 11.1254, 53.8916, 0.29", "-132.384, 11.2136, 53.8925, 0.29", "-132.485, 12.6565, 53.8582, 0.29", "-132.501, 14.8412, 53.7456, 0.29", "-132.48, 17.7106, 53.5148, 0.29", "-132.432, 20.3324, 53.29, 0.29", "-132.43, 20.5082, 53.278, 0.29", "-132.431, 23.1246, 53.1347, 0.29", "-132.433, 23.3127, 53.1263, 0.29", "-132.572, 26.3531, 53.0242, 0.29", "-132.581, 26.4542, 53.0213, 0.29", "-132.965, 29.1637, 53.0072, 0.29", "-132.986, 29.263, 53.008, 0.29", "-133.589, 31.2744, 53.0137, 0.29", "-133.759, 31.7891, 53.0012, 0.74", "-133.793, 31.8844, 52.9974, 0.74", "-134.034, 32.5204, 52.9472, 0.59", "-134.746, 34.0842, 52.6508, 0.29", "-135.242, 35.0139, 52.4622, 0.88", "-135.662, 35.5588, 52.3315, 0.96" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "49.0897, -291.689, -102.656, 0.52", "48.5044, -292.58, -102.597, 0.52", "48.0627, -293.296, -102.554, 0.37", "47.6561, -293.992, -102.483, 0.29", "47.3331, -294.522, -102.42, 0.66", "47.047, -294.982, -102.364, 0.66", "47.0068, -295.045, -102.356, 0.66", "46.7419, -295.478, -102.303, 0.59", "46.2591, -296.233, -102.225, 0.29", "45.7668, -297.025, -102.152, 0.29", "45.5725, -297.359, -102.126, 0.66", "45.2766, -297.911, -102.089, 0.96", "45.0634, -298.378, -102.06, 1.18", "44.6734, -299.36, -102.013, 0.29", "44.4532, -300.008, -101.997, 0.29", "44.3315, -300.394, -101.984, 0.52", "44.2801, -300.525, -101.964, 0.52", "44.0324, -301.005, -101.827, 0.22", "43.7593, -301.391, -101.665, 0.44", "43.4719, -301.705, -101.463, 0.66", "43.0724, -302.088, -101.197, 0.66", "42.0889, -302.982, -100.587, 0.29", "41.8074, -303.245, -100.421, 0.96", "41.5241, -303.532, -100.257, 1.25", "40.6341, -304.594, -99.7142, 0.52", "40.1369, -305.303, -99.4134, 0.52", "39.7625, -305.916, -99.209, 0.29", "39.4484, -306.462, -99.092, 0.37", "39.1075, -307.032, -98.9964, 0.44", "38.8393, -307.408, -98.9599, 0.44", "38.3788, -307.942, -98.9708, 0.22", "38.0829, -308.205, -98.9845, 0.37", "37.5452, -308.581, -98.9733, 0.59", "36.804, -309.015, -98.9278, 1.18", "36.0868, -309.397, -98.8309, 0.74", "36.0224, -309.43, -98.8183, 0.74", "34.9867, -309.982, -98.5462, 0.37", "34.007, -310.571, -98.2134, 0.29", "33.7693, -310.72, -98.0991, 0.59", "33.1957, -311.045, -97.719, 0.74", "33.1318, -311.075, -97.6641, 0.74", "32.8021, -311.202, -97.2956, 0.74", "32.7694, -311.209, -97.2546, 0.74", "32.147, -311.289, -96.4721, 0.29", "31.42, -311.344, -95.5535, 0.59", "30.8048, -311.364, -94.7651, 0.96", "29.7396, -311.382, -93.3738, 0.59", "29.3037, -311.379, -92.7879, 0.29", "29.2656, -311.379, -92.7361, 0.29", "28.5745, -311.414, -91.7582, 0.88", "27.9668, -311.442, -90.8482, 1.03" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "49.0897, -291.689, -102.656, 0.52", "49.849, -293.393, -103.845, 0.52", "49.8821, -293.484, -103.902, 0.52", "50.302, -294.843, -104.725, 0.66", "51.0499, -297.814, -106.415, 0.44", "51.5195, -300.014, -107.674, 0.37", "51.7126, -301.214, -108.344, 0.66", "51.809, -302.554, -109.045, 0.88", "51.8397, -304.057, -109.837, 0.88", "51.7899, -305.391, -110.53, 0.88", "51.6959, -307.216, -111.434, 0.59", "51.6898, -308.896, -112.255, 0.37", "51.807, -310.67, -113.138, 0.37", "52.1019, -312.602, -114.09, 0.74", "52.2809, -313.44, -114.474, 1.11", "53.0949, -316.406, -115.868, 0.74", "53.527, -317.816, -116.532, 0.44", "53.5563, -317.914, -116.579, 0.44", "54.1205, -320.002, -117.559, 1.03", "54.3308, -321.11, -118.033, 1.33", "54.5226, -323.558, -119.029, 0.66", "54.4154, -325.742, -119.808, 0.66", "54.1829, -327.891, -120.54, 0.88", "54.1688, -328.003, -120.572, 0.88", "53.9253, -329.687, -120.968, 1.11", "53.5566, -332.218, -121.458, 1.03", "53.2587, -334.114, -121.699, 0.52", "53.2451, -334.229, -121.721, 0.52", "53.0801, -336.161, -122.258, 0.88", "52.9912, -337.396, -122.677, 0.96", "52.9608, -338.485, -123.182, 0.96", "52.9684, -339.588, -123.874, 0.66", "52.9177, -342.64, -126.142, 0.44", "52.8825, -343.748, -127.016, 0.96", "52.8246, -344.745, -127.879, 1.25", "52.7059, -346.78, -129.701, 1.11", "52.6469, -348.539, -131.389, 0.74", "52.621, -349.448, -132.326, 0.74" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-135.662, 35.5588, 52.3315, 0.29", "-136.763, 35.9487, 52.2921, 0.29", "-136.83, 35.9687, 52.2899, 0.29", "-137.639, 36.2649, 52.1599, 0.29", "-137.702, 36.2897, 52.1468, 0.29", "-138.423, 36.6158, 52.0103, 0.66", "-138.97, 36.8858, 51.916, 0.81", "-139.017, 36.9098, 51.9083, 0.81", "-140.444, 37.6482, 51.7813, 0.29", "-140.575, 37.7172, 51.7761, 0.29", "-141.616, 38.2894, 51.7951, 0.29", "-142.814, 38.9839, 51.8875, 0.29", "-142.867, 39.0149, 51.8954, 0.29", "-143.962, 39.6324, 52.1407, 0.44", "-144.013, 39.6614, 52.1586, 0.44", "-144.422, 39.9073, 52.3094, 0.44", "-144.47, 39.9382, 52.3286, 0.44", "-145.307, 40.5634, 52.6861, 0.29", "-145.404, 40.6469, 52.7197, 0.29", "-146.027, 41.2619, 52.8783, 0.29", "-146.333, 41.5761, 52.9568, 0.59", "-146.423, 41.6723, 52.9801, 0.59", "-146.693, 41.9569, 53.0477, 0.59", "-147.358, 42.6474, 53.2068, 0.37", "-147.457, 42.7439, 53.2293, 0.37", "-147.983, 43.2768, 53.3067, 0.37", "-148.026, 43.3222, 53.3111, 0.37", "-148.617, 43.932, 53.3487, 0.37", "-148.711, 44.027, 53.3515, 0.37", "-149.342, 44.6023, 53.3723, 0.37", "-150.194, 45.3027, 53.4042, 0.22", "-150.307, 45.382, 53.4109, 0.22", "-150.947, 45.7701, 53.4668, 0.22", "-151.002, 45.7974, 53.4739, 0.22", "-151.753, 45.9767, 53.695, 0.81", "-152.015, 45.9976, 53.7977, 0.81", "-152.749, 45.9872, 54.0995, 0.22", "-152.807, 45.9823, 54.1205, 0.22", "-153.448, 45.8798, 54.3619, 0.22", "-155.243, 45.5519, 54.9887, 0.22", "-155.365, 45.5285, 55.0287, 0.22", "-156.234, 45.363, 55.3054, 0.22", "-157.064, 45.2048, 55.5584, 0.22", "-158.326, 44.9902, 55.9244, 0.22", "-159.227, 44.8652, 56.1679, 0.22", "-159.294, 44.8624, 56.1833, 0.22", "-160.292, 44.9707, 56.4365, 0.52", "-160.577, 45.0802, 56.5247, 0.81", "-160.681, 45.1514, 56.5597, 0.81", "-160.915, 45.3739, 56.6294, 0.81", "-160.963, 45.4255, 56.637, 0.81", "-161.682, 46.2047, 56.66, 0.37", "-162.075, 46.6554, 56.6326, 0.59", "-162.115, 46.7025, 56.6276, 0.59", "-162.615, 47.3071, 56.5592, 0.44", "-163.435, 48.3456, 56.3056, 0.29", "-163.513, 48.4478, 56.2716, 0.29", "-163.95, 49.0203, 55.9463, 0.29", "-163.979, 49.0578, 55.9206, 0.29", "-164.417, 49.6105, 55.5087, 0.29", "-165.127, 50.5467, 54.6135, 0.29", "-165.15, 50.5768, 54.5805, 0.29", "-166.014, 51.5434, 53.3598, 0.29", "-166.039, 51.5684, 53.3244, 0.29", "-166.315, 51.8104, 52.978, 0.66", "-167.634, 52.819, 51.4475, 0.37", "-167.722, 52.8775, 51.3604, 0.37", "-168.236, 53.1743, 50.9187, 0.29", "-168.773, 53.4347, 50.5764, 0.15", "-169.11, 53.5839, 50.395, 0.74", "-169.272, 53.6418, 50.3364, 0.74", "-170.384, 53.9471, 50.1419, 0.37", "-170.91, 54.114, 50.0619, 0.29", "-171.614, 54.3741, 50.0056, 0.29", "-171.695, 54.4052, 50.0046, 0.29", "-172.717, 54.793, 50.0801, 0.29", "-172.837, 54.8412, 50.1004, 0.29", "-173.502, 55.1235, 50.2814, 0.29", "-174.144, 55.4131, 50.4586, 0.29", "-174.199, 55.4374, 50.4697, 0.29", "-175.057, 55.8186, 50.5909, 0.29", "-175.878, 56.1889, 50.6248, 0.29", "-176.038, 56.2571, 50.6207, 0.29", "-176.774, 56.608, 50.5214, 0.29", "-177.578, 57.0658, 50.3647, 0.52", "-177.977, 57.3333, 50.2815, 0.66", "-178.877, 58.0308, 50.0771, 0.29", "-179.865, 58.8694, 49.8484, 1.11", "-180.854, 59.7582, 49.5701, 0.29", "-181.378, 60.2596, 49.4035, 0.29", "-181.826, 60.7009, 49.266, 0.74", "-181.922, 60.7968, 49.2337, 0.74", "-182.191, 61.07, 49.1376, 0.74", "-183.578, 62.4065, 48.5717, 0.29", "-183.645, 62.4628, 48.5457, 0.29", "-184.164, 62.8763, 48.3356, 0.29", "-184.202, 62.9073, 48.3204, 0.29", "-184.852, 63.4492, 48.0755, 0.59", "-186.069, 64.5312, 47.6866, 0.29", "-186.119, 64.5809, 47.6786, 0.29", "-186.467, 64.9839, 47.6457, 0.29", "-186.643, 65.2513, 47.65, 0.59", "-186.678, 65.3136, 47.6558, 0.59", "-186.932, 65.857, 47.7418, 0.59", "-187.167, 66.4238, 47.8597, 0.29", "-187.39, 66.8849, 47.9446, 0.29", "-188.132, 68.2191, 48.1597, 0.29", "-188.163, 68.2641, 48.1663, 0.29", "-188.613, 68.8481, 48.247, 0.29", "-188.83, 69.0839, 48.2762, 0.29", "-189.466, 69.6414, 48.337, 0.52", "-189.758, 69.8455, 48.3645, 0.59", "-190.642, 70.3436, 48.4651, 0.22", "-190.88, 70.4829, 48.4831, 0.22", "-191.359, 70.8026, 48.5174, 0.22", "-191.801, 71.1563, 48.5521, 0.81", "-192.098, 71.4268, 48.5738, 1.03", "-192.576, 71.8764, 48.5983, 0.52", "-193.452, 72.7024, 48.6229, 0.29", "-194.462, 73.6319, 48.6391, 0.22", "-195.423, 74.5655, 48.6521, 0.22", "-195.536, 74.6825, 48.6542, 0.22", "-196.005, 75.1824, 48.6654, 0.74", "-196.261, 75.4486, 48.6755, 0.74", "-196.586, 75.7438, 48.7183, 0.74", "-203.456, 80.5435, 47.5045, 0.74" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-135.662, 35.5588, 52.3315, 0.29", "-135.473, 36.5873, 52.4505, 0.29", "-135.112, 38.3986, 52.5912, 0.29", "-135.097, 38.4748, 52.5963, 0.29", "-134.764, 40.1818, 52.7062, 0.29", "-134.75, 40.2675, 52.7119, 0.29", "-134.378, 42.8175, 52.8961, 0.52", "-134.219, 44.252, 53.013, 0.52", "-134.146, 45.2891, 53.0959, 0.52", "-134.137, 45.5824, 53.1157, 0.52", "-134.168, 46.8412, 53.2899, 0.52", "-134.255, 47.7926, 53.496, 0.81", "-134.296, 47.9688, 53.5563, 0.81", "-134.527, 48.6951, 53.8886, 0.66", "-134.803, 49.3874, 54.2371, 0.37", "-135.713, 51.4644, 55.3415, 0.37", "-135.748, 51.5376, 55.378, 0.37", "-136.114, 52.2731, 55.7051, 0.52", "-136.167, 52.3807, 55.7418, 0.52", "-136.833, 53.7428, 56.0957, 0.44", "-136.908, 53.9011, 56.1234, 0.44", "-137.463, 55.0387, 56.1845, 0.44", "-137.621, 55.3871, 56.2048, 0.44", "-138.323, 57.1596, 56.3283, 0.44", "-138.353, 57.2432, 56.3351, 0.44", "-138.625, 58.108, 56.4198, 0.52", "-138.674, 58.2917, 56.4348, 0.52", "-138.934, 59.4265, 56.5269, 0.37", "-139.184, 60.7487, 56.6167, 0.74", "-139.199, 60.8368, 56.6229, 0.74", "-139.299, 61.448, 56.6674, 0.74", "-139.742, 64.3376, 56.9717, 0.52", "-139.754, 64.4256, 56.9831, 0.52", "-140.075, 66.803, 57.356, 0.52", "-140.442, 69.6142, 57.8625, 0.52", "-140.457, 69.7273, 57.8852, 0.52", "-140.683, 71.5407, 58.2932, 0.88", "-140.731, 71.9309, 58.395, 0.88", "-140.986, 74.1199, 58.9645, 0.52", "-141.137, 75.512, 59.3249, 0.52", "-141.159, 75.7691, 59.4005, 0.52", "-141.279, 77.0576, 59.7431, 0.52", "-141.323, 77.4168, 59.8232, 0.52", "-141.467, 78.3088, 60.016, 0.59", "-141.659, 79.3421, 60.2279, 0.37", "-141.986, 81.0032, 60.5571, 0.44", "-142.338, 82.8054, 60.897, 0.22", "-142.659, 84.4275, 61.1879, 0.22", "-142.792, 85.1162, 61.3198, 0.37", "-143.103, 86.7175, 61.6347, 0.22", "-143.133, 86.879, 61.6665, 0.22", "-143.362, 88.2243, 61.9941, 0.22", "-143.373, 88.3081, 62.0234, 0.22", "-143.496, 89.667, 62.5374, 0.22", "-143.501, 89.7395, 62.565, 0.22", "-143.63, 91.5137, 63.249, 0.22", "-143.756, 93.5098, 63.9974, 0.66", "-143.803, 94.275, 64.2746, 0.96", "-143.882, 95.6831, 64.7984, 0.22", "-143.952, 96.8937, 65.2472, 0.22", "-143.958, 96.9883, 65.2835, 0.22", "-144.002, 97.6893, 65.5608, 0.59", "-144.067, 98.3015, 65.7529, 0.88", "-144.265, 99.7486, 66.1588, 0.44", "-144.405, 100.619, 66.3713, 0.29", "-144.448, 100.888, 66.4252, 0.29", "-144.54, 101.524, 66.5272, 0.29", "-144.707, 103.137, 66.6371, 0.74", "-144.759, 103.915, 66.6288, 0.29", "-144.8, 104.721, 66.5735, 0.44", "-144.824, 105.371, 66.5307, 0.59", "-144.828, 105.461, 66.527, 0.59", "-144.885, 107.405, 66.4989, 0.22", "-144.896, 107.692, 66.5079, 0.22", "-144.979, 109.311, 66.6751, 0.22", "-144.983, 109.396, 66.69, 0.22", "-145.01, 110.354, 66.9196, 0.44", "-145.011, 110.451, 66.9496, 0.44", "-145.008, 110.953, 67.1579, 0.44", "-144.928, 112.577, 67.8944, 0.29", "-144.855, 113.167, 68.2064, 0.44", "-144.831, 113.332, 68.2984, 0.44", "-144.689, 114.079, 68.7625, 0.44" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "52.621, -349.448, -132.326, 0.29", "51.9963, -349.469, -132.767, 0.29", "51.2473, -349.635, -133.331, 0.29", "51.1108, -349.676, -133.436, 0.59", "50.6242, -349.837, -133.812, 0.66", "50.535, -349.866, -133.895, 0.66", "50.0884, -350.008, -134.338, 0.66", "49.3195, -350.302, -135.141, 0.22", "49.0052, -350.435, -135.475, 0.66", "48.6395, -350.592, -135.87, 0.66", "47.6749, -351.005, -136.94, 0.22", "47.1208, -351.234, -137.565, 0.22", "46.36, -351.534, -138.448, 0.22", "45.8345, -351.71, -139.064, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "52.621, -349.448, -132.326, 0.29", "52.7933, -350.999, -132.661, 0.29", "52.9654, -351.952, -132.88, 0.29", "53.033, -352.422, -132.995, 0.74", "53.092, -352.837, -133.118, 0.88", "53.106, -352.938, -133.151, 0.88", "53.1781, -353.656, -133.387, 0.88", "53.2894, -354.91, -133.725, 0.22", "53.3434, -355.623, -133.93, 0.22", "53.4091, -356.443, -134.191, 0.88", "53.4167, -356.51, -134.211, 0.88", "53.5371, -357.371, -134.432, 0.74", "53.7481, -358.442, -134.629, 0.37", "53.7697, -358.509, -134.631, 0.37", "54.3835, -359.955, -134.408, 0.29", "54.7114, -360.628, -134.214, 0.59", "54.8107, -360.812, -134.149, 0.59", "55.3083, -361.634, -133.796, 0.88", "55.973, -362.774, -133.102, 0.74", "56.6996, -364.054, -132.162, 0.29", "57.0655, -364.706, -131.618, 0.74", "57.0917, -364.754, -131.576, 0.74", "57.2951, -365.147, -131.223, 0.74", "58.1243, -366.85, -129.482, 0.44", "58.3489, -367.391, -128.844, 0.44" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-144.689, 114.079, 68.7625, 0.29", "-143.921, 113.621, 68.8258, 0.29", "-143.833, 113.565, 68.8278, 0.29", "-143.562, 113.393, 68.8277, 0.29", "-143.518, 113.365, 68.8277, 0.29", "-142.892, 112.966, 68.8275, 0.29", "-142.62, 112.793, 68.8274, 0.81", "-142.309, 112.609, 68.7874, 1.03", "-142.266, 112.581, 68.7813, 1.03", "-136.732, 108.209, 67.5298, 1.03" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-144.689, 114.079, 68.7625, 0.44", "-144.732, 115.54, 69.6956, 0.44", "-144.76, 117.176, 70.7343, 0.37", "-144.806, 120.106, 72.7333, 0.29", "-144.893, 122.69, 74.5468, 0.29", "-144.923, 123.846, 75.3735, 0.74", "-144.934, 124.409, 75.7811, 0.74", "-144.923, 125.134, 76.3048, 0.44", "-144.823, 126.766, 77.5457, 0.37", "-144.636, 128.442, 78.8755, 0.29", "-144.419, 130.112, 80.2161, 0.29", "-144.394, 130.276, 80.3548, 0.29", "-144.029, 132.518, 82.2831, 0.29", "-143.952, 132.943, 82.6499, 0.29", "-143.68, 134.337, 83.8218, 0.29", "-143.666, 134.406, 83.8831, 0.29", "-143.56, 135.724, 85.0573, 0.29", "-143.628, 136.47, 85.6505, 0.44", "-143.667, 136.63, 85.7652, 0.44", "-143.841, 137.221, 86.1505, 0.29", "-143.875, 137.323, 86.2113, 0.29", "-144.369, 138.971, 87.0494, 0.29", "-145.171, 141.861, 88.3255, 0.29", "-145.258, 142.198, 88.4719, 0.29", "-145.503, 143.236, 88.9212, 0.74", "-145.69, 144.097, 89.2982, 0.88", "-146.051, 145.82, 90.0542, 0.52", "-146.367, 147.379, 90.7408, 0.37", "-146.833, 149.521, 91.7152, 0.29", "-146.911, 149.855, 91.8739, 0.29", "-147.575, 152.545, 93.2137, 0.29", "-147.633, 152.767, 93.3317, 0.29", "-148.145, 154.549, 94.3787, 0.29", "-148.363, 155.22, 94.809, 0.52", "-148.559, 155.73, 95.1753, 0.66", "-148.624, 155.881, 95.2944, 0.66", "-148.895, 156.395, 95.7779, 0.66", "-148.945, 156.485, 95.8609, 0.66", "-149.471, 157.421, 96.6386, 0.29", "-149.642, 157.718, 96.8695, 0.22", "-149.976, 158.274, 97.2989, 0.52", "-150.152, 158.588, 97.5391, 0.52", "-150.573, 159.378, 98.1344, 0.29", "-151.083, 160.459, 98.9127, 0.29", "-151.787, 162.126, 100.142, 0.29", "-151.828, 162.226, 100.22, 0.29", "-152.452, 163.89, 101.567, 0.29", "-152.505, 164.04, 101.693, 0.29", "-153.07, 165.817, 103.208, 0.29", "-153.487, 167.31, 104.457, 0.29", "-153.534, 167.538, 104.622, 0.29", "-153.666, 168.343, 105.14, 0.29", "-153.675, 168.412, 105.179, 0.29", "-153.775, 169.53, 105.747, 0.88", "-153.793, 169.875, 105.901, 0.88", "-153.844, 171.53, 106.591, 0.22", "-153.858, 173.171, 107.235, 0.22", "-153.857, 173.424, 107.331, 0.22", "-153.84, 175.238, 108.017, 0.22", "-153.839, 175.316, 108.046, 0.22", "-153.787, 177.814, 108.828, 0.52", "-153.756, 179.654, 109.328, 0.29", "-153.743, 180.496, 109.509, 0.37", "-153.741, 180.667, 109.541, 0.37", "-153.733, 181.623, 109.698, 0.37", "-153.686, 184.61, 110.036, 0.22", "-153.66, 186.411, 110.203, 0.22", "-153.658, 186.505, 110.215, 0.22", "-153.629, 187.444, 110.347, 0.52", "-153.587, 188.755, 110.565, 0.66", "-153.457, 191.42, 110.975, 0.15", "-153.318, 193.591, 111.355, 0.15", "-153.229, 194.706, 111.488, 0.29", "-153.222, 194.8, 111.497, 0.29", "-153.175, 195.484, 111.545, 0.29", "-153.056, 197.611, 111.664, 0.44", "-153.017, 198.207, 111.648, 0.44", "-152.976, 199.718, 111.549, 0.22", "-152.975, 200.528, 111.516, 0.52", "-152.977, 200.622, 111.515, 0.52", "-153.004, 201.3, 111.539, 0.88", "-153.293, 205.18, 111.967, 0.29", "-153.572, 208.388, 112.402, 0.29", "-153.658, 209.485, 112.618, 0.29", "-153.662, 209.577, 112.643, 0.29", "-153.685, 211.345, 113.25, 0.29", "-153.62, 212.836, 113.933, 0.29", "-153.612, 212.902, 113.975, 0.29", "-153.155, 214.825, 115.287, 0.29", "-152.75, 216.241, 116.284, 0.59", "-152.527, 216.938, 116.782, 0.59", "-152.149, 218.151, 117.642, 0.22", "-151.753, 219.532, 118.605, 0.22", "-151.711, 219.705, 118.723, 0.22", "-151.265, 221.87, 120.168, 0.22", "-151.236, 222.039, 120.279, 0.22", "-150.749, 225.503, 122.514, 0.22", "-150.741, 225.595, 122.571, 0.22", "-150.647, 227.704, 123.863, 0.22", "-150.649, 227.953, 124.011, 0.22", "-150.674, 228.316, 124.22, 0.59", "-150.755, 229.069, 124.642, 0.59", "-151.007, 231.016, 125.551, 0.29", "-151.128, 231.921, 125.921, 0.59", "-151.332, 233.356, 126.443, 0.52", "-151.491, 234.609, 126.879, 0.74", "-151.61, 235.701, 127.238, 0.74", "-151.771, 237.89, 127.932, 0.22", "-151.797, 238.821, 128.211, 0.44", "-151.798, 239.646, 128.465, 0.74", "-151.793, 240.117, 128.627, 1.03", "-151.792, 240.192, 128.654, 1.03", "-151.794, 241.183, 129.075, 1.03", "-151.799, 241.265, 129.124, 1.03", "-151.856, 242.596, 129.913, 0.37", "-151.916, 243.922, 130.685, 0.29", "-151.338, 254.905, 137.891, 0.29", "-152.707, 265.33, 145.738, 0.29", "-154.013, 275.32, 154.132, 0.29", "-155.408, 284.128, 163.702, 0.29", "-156.163, 291.868, 174.181, 0.29", "-158.887, 298.038, 185.239, 0.29" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-136.732, 108.209, 67.5298, 0.22", "-127.801, 101.342, 66.1558, 0.22", "-118.909, 94.3066, 65.9839, 0.22", "-109.331, 88.3291, 65.785, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-136.732, 108.209, 67.5298, 0.22", "-129.205, 102.127, 66.2891, 0.22", "-121.698, 96.0014, 65.1339, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_92", "dend_25", "dend_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_92", "dend_25", "dend_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_91", "dend_88", "dend_88", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_80", "dend_80", "dend_80", "dend_79", "dend_79" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L5_DBC_08b1fddce5_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_92, id: dend_92, parent: soma_0
create dend_92
public dend_92
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_98, id: dend_98, parent: dend_92
create dend_98
public dend_98
// Section: dend_93, id: dend_93, parent: dend_92
create dend_93
public dend_93
// Section: dend_41, id: dend_41, parent: dend_25
create dend_41
public dend_41
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_102, id: dend_102, parent: dend_98
create dend_102
public dend_102
// Section: dend_99, id: dend_99, parent: dend_98
create dend_99
public dend_99
// Section: dend_97, id: dend_97, parent: dend_93
create dend_97
public dend_97
// Section: dend_94, id: dend_94, parent: dend_93
create dend_94
public dend_94
// Section: dend_65, id: dend_65, parent: dend_41
create dend_65
public dend_65
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_104, id: dend_104, parent: dend_102
create dend_104
public dend_104
// Section: dend_103, id: dend_103, parent: dend_102
create dend_103
public dend_103
// Section: dend_101, id: dend_101, parent: dend_99
create dend_101
public dend_101
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_96, id: dend_96, parent: dend_94
create dend_96
public dend_96
// Section: dend_95, id: dend_95, parent: dend_94
create dend_95
public dend_95
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_87, id: dend_87, parent: dend_67
create dend_87
public dend_87
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_91, id: dend_91, parent: dend_87
create dend_91
public dend_91
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_72, id: dend_72, parent: dend_68
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_62, id: dend_62, parent: dend_52
create dend_62
public dend_62
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_90, id: dend_90, parent: dend_88
create dend_90
public dend_90
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_86, id: dend_86, parent: dend_72
create dend_86
public dend_86
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_53
create dend_61
public dend_61
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_83, id: dend_83, parent: dend_73
create dend_83
public dend_83
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_82, id: dend_82, parent: dend_74
create dend_82
public dend_82
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_81, id: dend_81, parent: dend_75
create dend_81
public dend_81
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_107
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_91, dend_88, dend_88, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_80, dend_80, dend_80, dend_79, dend_79]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_92(0), soma_0(0.45000180399916434)
    connect dend_25(0), soma_0(0.45000180399916434)
    connect dend_0(0), soma_0(0.45000180399916434)
    connect axon_0(0), soma_0(1.0)
    connect dend_98(0), dend_92(1.0)
    connect dend_93(0), dend_92(1.0)
    connect dend_41(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_102(0), dend_98(1.0)
    connect dend_99(0), dend_98(1.0)
    connect dend_97(0), dend_93(1.0)
    connect dend_94(0), dend_93(1.0)
    connect dend_65(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_104(0), dend_102(1.0)
    connect dend_103(0), dend_102(1.0)
    connect dend_101(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_96(0), dend_94(1.0)
    connect dend_95(0), dend_94(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_87(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_91(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_72(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_62(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_90(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_86(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_83(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_82(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_81(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.46438, -10.9587, 0.660551, 2.48146 ) }
    soma_0 { pt3dadd( -1.32683, -9.87667, 0.597834, 3.97794 ) }
    soma_0 { pt3dadd( -1.18928, -8.79467, 0.535117, 5.03907 ) }
    soma_0 { pt3dadd( -1.05173, -7.71267, 0.4724, 6.13889 ) }
    soma_0 { pt3dadd( -0.914177, -6.63067, 0.409682, 7.21767 ) }
    soma_0 { pt3dadd( -0.776625, -5.54866, 0.346965, 8.03623 ) }
    soma_0 { pt3dadd( -0.639073, -4.46666, 0.284248, 8.69756 ) }
    soma_0 { pt3dadd( -0.501522, -3.38466, 0.221531, 9.05897 ) }
    soma_0 { pt3dadd( -0.36397, -2.30266, 0.158814, 9.32273 ) }
    soma_0 { pt3dadd( -0.226418, -1.22066, 0.0960968, 9.64559 ) }
    soma_0 { pt3dadd( -0.0888665, -0.138661, 0.0333797, 9.88524 ) }
    soma_0 { pt3dadd( 0.0486852, 0.943339, -0.0293375, 9.94228 ) }
    soma_0 { pt3dadd( 0.186237, 2.02534, -0.0920546, 10.0768 ) }
    soma_0 { pt3dadd( 0.323789, 3.10734, -0.154772, 10.303 ) }
    soma_0 { pt3dadd( 0.46134, 4.18934, -0.217489, 10.477 ) }
    soma_0 { pt3dadd( 0.598892, 5.27134, -0.280206, 10.0133 ) }
    soma_0 { pt3dadd( 0.736444, 6.35334, -0.342923, 9.03357 ) }
    soma_0 { pt3dadd( 0.873996, 7.43534, -0.40564, 7.79644 ) }
    soma_0 { pt3dadd( 1.01155, 8.51734, -0.468357, 6.40893 ) }
    soma_0 { pt3dadd( 1.1491, 9.59934, -0.531074, 4.35077 ) }
    soma_0 { pt3dadd( 1.28665, 10.6813, -0.593792, 2.55388 ) }
    // Section: dend_92, id: dend_92, parent: soma_0 (entry count 21/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 2.53825, -1.11031, -8.8572, 1.11 ) }
    dend_92 { pt3dadd( 2.59532, -2.21886, -8.98441, 1.11 ) }
    dend_92 { pt3dadd( 2.69279, -4.29014, -9.27899, 1.11 ) }
    dend_92 { pt3dadd( 2.75394, -5.45979, -9.48316, 1.03 ) }
    dend_92 { pt3dadd( 2.83278, -7.00132, -9.76594, 1.03 ) }
    dend_92 { pt3dadd( 2.90107, -8.88738, -10.3069, 1.03 ) }
    dend_92 { pt3dadd( 2.90235, -10.4148, -10.8694, 1.18 ) }
    dend_92 { pt3dadd( 2.85627, -11.8907, -11.5278, 1.18 ) }
    dend_92 { pt3dadd( 2.76059, -13.3846, -12.3372, 1.4 ) }
    dend_92 { pt3dadd( 2.64247, -14.2468, -13.0006, 1.55 ) }
    dend_92 { pt3dadd( 2.09444, -17.0451, -15.6795, 1.25 ) }
    dend_92 { pt3dadd( 1.76314, -18.4696, -17.4284, 1.25 ) }
    dend_92 { pt3dadd( 1.62189, -19.0791, -18.3491, 1.47 ) }
    dend_92 { pt3dadd( 1.39303, -20.4481, -20.6394, 1.69 ) }
    dend_92 { pt3dadd( 1.15645, -23.1891, -25.3804, 1.69 ) }
    dend_92 { pt3dadd( 1.1567, -23.2256, -25.443, 1.69 ) }
    dend_92 { pt3dadd( 1.39919, -25.5932, -29.2485, 1.33 ) }
    dend_92 { pt3dadd( 1.66717, -27.1922, -31.5926, 1.11 ) }
    dend_92 { pt3dadd( 1.94145, -28.6914, -33.4966, 1.25 ) }
    dend_92 { pt3dadd( 2.20159, -30.1546, -34.8895, 1.4 ) }
    dend_92 { pt3dadd( 2.313, -31.1547, -35.5189, 1.4 ) }
    dend_92 { pt3dadd( 2.31385, -32.4246, -36.1832, 1.33 ) }
    dend_92 { pt3dadd( 2.06897, -34.1389, -36.8047, 1.18 ) }
    dend_92 { pt3dadd( 1.69788, -35.4354, -37.2707, 1.18 ) }
    dend_92 { pt3dadd( 1.08287, -36.9787, -37.9357, 1.33 ) }
    dend_92 { pt3dadd( 0.255161, -38.9428, -38.9108, 1.03 ) }
    dend_92 { pt3dadd( -0.31349, -40.4173, -39.6803, 1.25 ) }
    dend_92 { pt3dadd( -0.607902, -41.3419, -40.169, 1.62 ) }
    dend_92 { pt3dadd( -1.13771, -43.4752, -41.2791, 1.62 ) }
    dend_92 { pt3dadd( -1.39841, -45.0059, -42.0161, 1.03 ) }
    dend_92 { pt3dadd( -1.61348, -47.5477, -43.0661, 1.03 ) }
    dend_92 { pt3dadd( -1.63792, -49.4766, -43.7158, 1.18 ) }
    dend_92 { pt3dadd( -1.56318, -51.2832, -44.23, 1.18 ) }
    dend_92 { pt3dadd( -1.51376, -51.9125, -44.3889, 1.55 ) }
    dend_92 { pt3dadd( -1.41411, -52.9762, -44.5984, 1.55 ) }
    dend_92 { pt3dadd( -1.29488, -54.4313, -44.8917, 1.69 ) }
    dend_92 { pt3dadd( -1.20924, -55.9363, -45.2975, 1.84 ) }
    dend_92 { pt3dadd( -1.16287, -57.3072, -45.7946, 1.47 ) }
    dend_92 { pt3dadd( -1.12026, -59.182, -46.5639, 1.18 ) }
    dend_92 { pt3dadd( -1.11981, -60.7947, -47.2938, 1.18 ) }
    dend_92 { pt3dadd( -1.15536, -62.6346, -48.2025, 1.18 ) }
    dend_92 { pt3dadd( -1.15925, -64.6804, -49.1303, 1.33 ) }
    dend_92 { pt3dadd( -1.07366, -66.3802, -49.7313, 1.03 ) }
    dend_92 { pt3dadd( -0.948381, -67.6821, -50.1625, 1.03 ) }
    dend_92 { pt3dadd( -0.765774, -69.0457, -50.5547, 1.03 ) }
    dend_92 { pt3dadd( -0.522522, -70.7605, -51.0138, 1.33 ) }
    dend_92 { pt3dadd( -0.09805, -74.2724, -51.947, 1.33 ) }
    dend_92 { pt3dadd( 0.17886, -77.3576, -52.859, 1.33 ) }
    dend_92 { pt3dadd( 0.316494, -79.5549, -53.6059, 1.18 ) }
    dend_92 { pt3dadd( 0.387162, -80.8074, -54.0926, 1.4 ) }
    dend_92 { pt3dadd( 0.540305, -83.1056, -55.1753, 1.4 ) }
    dend_92 { pt3dadd( 0.706022, -85.5096, -56.5236, 1.33 ) }
    dend_92 { pt3dadd( 0.859069, -87.6309, -57.9749, 1.18 ) }
    dend_92 { pt3dadd( 0.867054, -87.7103, -58.0338, 1.18 ) }
    dend_92 { pt3dadd( 1.06344, -89.1195, -59.0711, 1.47 ) }
    dend_92 { pt3dadd( 1.44431, -91.1389, -60.5999, 1.84 ) }
    dend_92 { pt3dadd( 1.76866, -92.3683, -61.5046, 1.62 ) }
    dend_92 { pt3dadd( 2.2616, -93.8465, -62.5506, 1.55 ) }
    dend_92 { pt3dadd( 2.86697, -95.5712, -63.7634, 1.33 ) }
    dend_92 { pt3dadd( 3.33724, -97.065, -64.8471, 1.62 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 81/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.511751, -10.6128, 0.0228061, 3.68 ) }
    dend_25 { pt3dadd( -0.487533, -10.7064, 0.0228061, 3.68 ) }
    dend_25 { pt3dadd( -0.290504, -11.4676, 0.0228061, 3.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 84/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.07825, 11.2482, 0.142806, 2.43 ) }
    dend_0 { pt3dadd( 1.41861, 11.9951, 0.142806, 2.43 ) }
    dend_0 { pt3dadd( 2.06064, 13.3864, 0.142806, 2.14 ) }
    dend_0 { pt3dadd( 2.50827, 14.3877, 0.147266, 1.92 ) }
    dend_0 { pt3dadd( 2.67559, 14.7732, 0.150011, 1.92 ) }
    dend_0 { pt3dadd( 2.92105, 15.3237, 0.154677, 1.92 ) }
    dend_0 { pt3dadd( 3.08646, 15.6832, 0.157873, 1.92 ) }
    dend_0 { pt3dadd( 3.34802, 16.2219, 0.163363, 1.92 ) }
    dend_0 { pt3dadd( 3.5594, 16.6438, 0.167782, 1.99 ) }
    dend_0 { pt3dadd( 3.87715, 17.2769, 0.173632, 1.99 ) }
    dend_0 { pt3dadd( 4.34458, 18.2592, 0.18116, 1.99 ) }
    dend_0 { pt3dadd( 4.72845, 19.0764, 0.186291, 1.99 ) }
    dend_0 { pt3dadd( 5.13398, 19.9802, 0.190441, 1.99 ) }
    dend_0 { pt3dadd( 5.57861, 21.0534, 0.17407, 2.21 ) }
    dend_0 { pt3dadd( 5.95389, 22.0861, 0.140784, 2.21 ) }
    dend_0 { pt3dadd( 6.19051, 22.8607, 0.0942602, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 6.27177, 23.1982, 0.060563, 1.99 ) }
    dend_0 { pt3dadd( 6.41737, 23.9529, -0.035326, 1.99 ) }
    dend_0 { pt3dadd( 6.55767, 24.9211, -0.173406, 2.06 ) }
    dend_0 { pt3dadd( 6.68657, 26.1322, -0.376647, 1.92 ) }
    dend_0 { pt3dadd( 6.78325, 27.3029, -0.60732, 1.92 ) }
    dend_0 { pt3dadd( 6.8799, 28.6104, -0.912409, 1.99 ) }
    dend_0 { pt3dadd( 6.92312, 29.2964, -1.09821, 2.14 ) }
    dend_0 { pt3dadd( 6.99217, 30.4449, -1.42473, 2.14 ) }
    dend_0 { pt3dadd( 7.07235, 31.8602, -1.84149, 1.99 ) }
    dend_0 { pt3dadd( 7.10963, 32.7223, -2.12217, 2.06 ) }
    dend_0 { pt3dadd( 7.12513, 33.7532, -2.47733, 2.43 ) }
    dend_0 { pt3dadd( 7.12663, 34.5533, -2.78445, 2.65 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 12/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.28665, 10.6813, -0.593792, 0.551279 ) }
    axon_0 { pt3dadd( 3.17833, 25.5615, -0.593792, 0.551279 ) }
    axon_0 { pt3dadd( 5.07001, 40.4418, -0.593792, 0.551279 ) }
    // Section: dend_98, id: dend_98, parent: dend_92 (entry count 15/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 3.33724, -97.065, -64.8471, 0.52 ) }
    dend_98 { pt3dadd( 2.4757, -98.2055, -66.2203, 0.52 ) }
    dend_98 { pt3dadd( 1.91106, -99.1659, -67.2773, 0.52 ) }
    dend_98 { pt3dadd( 1.62534, -99.9385, -68.0676, 0.52 ) }
    dend_98 { pt3dadd( 1.39746, -101.124, -69.2287, 0.52 ) }
    dend_98 { pt3dadd( 1.36131, -101.724, -69.8075, 1.11 ) }
    dend_98 { pt3dadd( 1.3639, -102.457, -70.4746, 1.4 ) }
    dend_98 { pt3dadd( 1.47827, -103.037, -70.9337, 1.69 ) }
    dend_98 { pt3dadd( 1.82719, -104.143, -71.7268, 1.62 ) }
    dend_98 { pt3dadd( 2.18667, -105.054, -72.3468, 1.4 ) }
    dend_98 { pt3dadd( 2.70987, -106.275, -73.1246, 0.88 ) }
    dend_98 { pt3dadd( 3.03859, -107.046, -73.6115, 0.66 ) }
    dend_98 { pt3dadd( 3.48978, -108.157, -74.2605, 0.66 ) }
    dend_98 { pt3dadd( 3.75092, -108.826, -74.65, 0.88 ) }
    dend_98 { pt3dadd( 4.04033, -109.618, -75.0737, 1.11 ) }
    dend_98 { pt3dadd( 4.30031, -110.283, -75.3922, 1.18 ) }
    dend_98 { pt3dadd( 4.5824, -110.925, -75.6691, 1.18 ) }
    dend_98 { pt3dadd( 4.82586, -111.415, -75.9077, 1.18 ) }
    // Section: dend_93, id: dend_93, parent: dend_92 (entry count 33/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 3.33724, -97.065, -64.8471, 0.66 ) }
    dend_93 { pt3dadd( 2.84717, -98.2612, -64.3779, 0.66 ) }
    dend_93 { pt3dadd( 2.36708, -99.1118, -63.9643, 0.52 ) }
    dend_93 { pt3dadd( 2.3263, -99.1728, -63.9353, 0.52 ) }
    dend_93 { pt3dadd( 1.55301, -100.218, -63.4333, 0.74 ) }
    dend_93 { pt3dadd( 0.798446, -101.222, -62.995, 0.88 ) }
    dend_93 { pt3dadd( 0.225878, -101.977, -62.651, 0.74 ) }
    dend_93 { pt3dadd( -0.579062, -102.982, -62.1224, 0.37 ) }
    dend_93 { pt3dadd( -1.15123, -103.725, -61.6927, 1.18 ) }
    dend_93 { pt3dadd( -1.73307, -104.593, -61.1715, 1.4 ) }
    dend_93 { pt3dadd( -2.31302, -105.59, -60.5556, 0.96 ) }
    dend_93 { pt3dadd( -2.77824, -106.659, -59.7615, 0.74 ) }
    dend_93 { pt3dadd( -3.09625, -107.742, -58.8092, 0.29 ) }
    dend_93 { pt3dadd( -3.2695, -108.76, -57.8497, 0.74 ) }
    dend_93 { pt3dadd( -3.32216, -109.443, -57.1764, 0.96 ) }
    dend_93 { pt3dadd( -3.32279, -109.492, -57.1309, 0.96 ) }
    dend_93 { pt3dadd( -3.31222, -111.414, -55.5049, 0.59 ) }
    dend_93 { pt3dadd( -3.33392, -112.289, -54.9422, 1.11 ) }
    dend_93 { pt3dadd( -3.39273, -113.007, -54.5879, 1.25 ) }
    dend_93 { pt3dadd( -3.52639, -113.733, -54.3426, 1.18 ) }
    dend_93 { pt3dadd( -3.88699, -115.015, -54.0047, 0.81 ) }
    dend_93 { pt3dadd( -4.27447, -116.122, -53.7916, 0.59 ) }
    dend_93 { pt3dadd( -4.77565, -117.3, -53.6758, 0.44 ) }
    dend_93 { pt3dadd( -4.81553, -117.383, -53.6677, 0.44 ) }
    dend_93 { pt3dadd( -5.30917, -118.256, -53.5484, 0.29 ) }
    dend_93 { pt3dadd( -6.16283, -119.554, -53.3334, 0.29 ) }
    dend_93 { pt3dadd( -6.7199, -120.346, -53.1863, 0.81 ) }
    dend_93 { pt3dadd( -7.1401, -120.977, -53.0702, 1.33 ) }
    dend_93 { pt3dadd( -7.55374, -121.692, -52.9946, 1.33 ) }
    dend_93 { pt3dadd( -8.12281, -122.916, -53.0237, 0.96 ) }
    dend_93 { pt3dadd( -8.41559, -123.787, -53.1514, 0.81 ) }
    dend_93 { pt3dadd( -8.63104, -124.737, -53.3911, 0.81 ) }
    dend_93 { pt3dadd( -8.81299, -125.904, -53.7579, 0.74 ) }
    dend_93 { pt3dadd( -8.97093, -127.47, -54.309, 0.44 ) }
    dend_93 { pt3dadd( -9.05267, -128.878, -54.8835, 0.66 ) }
    dend_93 { pt3dadd( -9.0805, -129.788, -55.3045, 0.74 ) }
    dend_93 { pt3dadd( -9.12119, -130.611, -55.6938, 1.03 ) }
    dend_93 { pt3dadd( -9.21771, -131.57, -56.1396, 1.25 ) }
    dend_93 { pt3dadd( -9.387, -132.574, -56.5609, 1.11 ) }
    dend_93 { pt3dadd( -9.66795, -133.8, -57.0007, 0.59 ) }
    dend_93 { pt3dadd( -9.9271, -134.797, -57.3199, 0.59 ) }
    dend_93 { pt3dadd( -10.2134, -135.846, -57.6696, 0.66 ) }
    dend_93 { pt3dadd( -10.4236, -136.606, -57.9192, 0.66 ) }
    dend_93 { pt3dadd( -10.7265, -137.771, -58.2653, 0.52 ) }
    dend_93 { pt3dadd( -10.9778, -138.854, -58.5772, 0.52 ) }
    dend_93 { pt3dadd( -11.1562, -139.809, -58.8222, 0.59 ) }
    dend_93 { pt3dadd( -11.3204, -141.042, -59.1623, 1.25 ) }
    dend_93 { pt3dadd( -11.3616, -141.518, -59.3042, 1.4 ) }
    dend_93 { pt3dadd( -11.4041, -142.379, -59.5713, 1.4 ) }
    dend_93 { pt3dadd( -11.4565, -143.637, -59.909, 0.88 ) }
    dend_93 { pt3dadd( -11.4973, -144.442, -60.0826, 0.52 ) }
    dend_93 { pt3dadd( -11.6265, -145.837, -60.3252, 0.52 ) }
    dend_93 { pt3dadd( -11.7788, -146.709, -60.3502, 0.52 ) }
    dend_93 { pt3dadd( -11.802, -146.799, -60.3394, 0.52 ) }
    dend_93 { pt3dadd( -12.2245, -148.138, -59.9402, 0.52 ) }
    dend_93 { pt3dadd( -12.2471, -148.208, -59.911, 0.52 ) }
    dend_93 { pt3dadd( -12.4257, -148.783, -59.6389, 0.96 ) }
    dend_93 { pt3dadd( -12.8494, -150.329, -58.8513, 1.33 ) }
    dend_93 { pt3dadd( -13.1138, -151.503, -58.3086, 0.66 ) }
    dend_93 { pt3dadd( -13.3341, -152.648, -57.8607, 0.59 ) }
    dend_93 { pt3dadd( -13.5151, -153.762, -57.5225, 0.74 ) }
    dend_93 { pt3dadd( -13.5299, -153.851, -57.5002, 0.74 ) }
    dend_93 { pt3dadd( -13.6922, -154.794, -57.3318, 0.74 ) }
    dend_93 { pt3dadd( -13.8493, -155.546, -57.2699, 1.03 ) }
    dend_93 { pt3dadd( -14.0364, -156.156, -57.2361, 1.25 ) }
    dend_93 { pt3dadd( -14.3422, -156.931, -57.2239, 1.18 ) }
    dend_93 { pt3dadd( -14.6786, -157.641, -57.2245, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_93 { pt3dadd( -15.0629, -158.359, -57.2394, 0.29 ) }
    dend_93 { pt3dadd( -15.4188, -158.955, -57.2663, 0.29 ) }
    dend_93 { pt3dadd( -15.7041, -159.41, -57.2917, 0.81 ) }
    dend_93 { pt3dadd( -15.9511, -159.803, -57.317, 1.11 ) }
    dend_93 { pt3dadd( -16.3095, -160.421, -57.3604, 1.11 ) }
    dend_93 { pt3dadd( -16.6814, -161.214, -57.4106, 0.59 ) }
    dend_93 { pt3dadd( -16.7063, -161.302, -57.4148, 0.59 ) }
    dend_93 { pt3dadd( -16.7764, -162.089, -57.4377, 0.44 ) }
    dend_93 { pt3dadd( -16.7677, -162.169, -57.4384, 0.44 ) }
    dend_93 { pt3dadd( -16.5379, -162.976, -57.4296, 0.44 ) }
    dend_93 { pt3dadd( -16.2534, -163.654, -57.4264, 0.81 ) }
    dend_93 { pt3dadd( -15.9096, -164.353, -57.4261, 1.11 ) }
    dend_93 { pt3dadd( -15.6892, -164.792, -57.4443, 1.11 ) }
    dend_93 { pt3dadd( -15.3847, -165.408, -57.5013, 0.88 ) }
    dend_93 { pt3dadd( -15.1334, -165.977, -57.5752, 0.66 ) }
    dend_93 { pt3dadd( -14.8432, -166.729, -57.6968, 0.66 ) }
    dend_93 { pt3dadd( -14.5943, -167.505, -57.8342, 0.44 ) }
    dend_93 { pt3dadd( -14.3809, -168.345, -57.9838, 0.29 ) }
    dend_93 { pt3dadd( -14.2123, -169.299, -58.1456, 0.88 ) }
    dend_93 { pt3dadd( -14.1421, -170.027, -58.2525, 0.88 ) }
    dend_93 { pt3dadd( -14.1332, -170.615, -58.3221, 0.88 ) }
    dend_93 { pt3dadd( -14.1777, -171.445, -58.391, 0.74 ) }
    dend_93 { pt3dadd( -14.2635, -172.28, -58.4382, 0.37 ) }
    dend_93 { pt3dadd( -14.3655, -173.059, -58.4535, 0.29 ) }
    dend_93 { pt3dadd( -14.524, -174.198, -58.457, 0.29 ) }
    dend_93 { pt3dadd( -14.6497, -175.129, -58.4596, 0.81 ) }
    dend_93 { pt3dadd( -14.7502, -175.989, -58.4615, 1.03 ) }
    dend_93 { pt3dadd( -14.7569, -176.083, -58.4614, 1.03 ) }
    dend_93 { pt3dadd( -14.7617, -176.826, -58.4581, 1.18 ) }
    dend_93 { pt3dadd( -14.7335, -177.661, -58.4534, 1.33 ) }
    dend_93 { pt3dadd( -14.6887, -178.389, -58.4496, 1.33 ) }
    dend_93 { pt3dadd( -14.6, -179.499, -58.4522, 0.59 ) }
    dend_93 { pt3dadd( -14.5125, -180.596, -58.462, 0.44 ) }
    dend_93 { pt3dadd( -14.443, -181.574, -58.4758, 0.44 ) }
    dend_93 { pt3dadd( -14.3844, -182.469, -58.4896, 0.81 ) }
    dend_93 { pt3dadd( -14.3279, -183.474, -58.5059, 1.11 ) }
    dend_93 { pt3dadd( -14.3015, -184.398, -58.5228, 1.11 ) }
    dend_93 { pt3dadd( -14.324, -184.977, -58.5369, 1.25 ) }
    dend_93 { pt3dadd( -14.4498, -185.894, -58.5661, 1.11 ) }
    dend_93 { pt3dadd( -14.6997, -187.028, -58.6325, 0.66 ) }
    dend_93 { pt3dadd( -14.923, -187.833, -58.6966, 0.37 ) }
    dend_93 { pt3dadd( -15.1937, -188.602, -58.7731, 0.29 ) }
    dend_93 { pt3dadd( -15.5923, -189.706, -58.8894, 0.37 ) }
    dend_93 { pt3dadd( -15.8143, -190.492, -59.01, 0.52 ) }
    dend_93 { pt3dadd( -15.9459, -191.333, -59.139, 0.88 ) }
    dend_93 { pt3dadd( -15.9625, -191.907, -59.2212, 1.03 ) }
    dend_93 { pt3dadd( -15.9398, -192.158, -59.2533, 1.03 ) }
    dend_93 { pt3dadd( -15.77, -193.455, -59.3199, 0.74 ) }
    dend_93 { pt3dadd( -15.5642, -194.928, -59.3174, 0.59 ) }
    dend_93 { pt3dadd( -15.4253, -196.089, -59.2836, 0.59 ) }
    dend_93 { pt3dadd( -15.3678, -196.707, -59.2219, 1.4 ) }
    dend_93 { pt3dadd( -15.3126, -197.409, -59.1252, 1.77 ) }
    dend_93 { pt3dadd( -15.208, -199.343, -58.7489, 0.81 ) }
    dend_93 { pt3dadd( -15.1904, -200.33, -58.4974, 0.81 ) }
    dend_93 { pt3dadd( -15.2099, -201.685, -58.0327, 0.81 ) }
    dend_93 { pt3dadd( -15.2158, -203.008, -57.5314, 1.11 ) }
    dend_93 { pt3dadd( -15.1992, -203.662, -57.2596, 1.11 ) }
    dend_93 { pt3dadd( -15.1329, -204.696, -56.8071, 0.88 ) }
    dend_93 { pt3dadd( -15.1231, -204.818, -56.7508, 0.88 ) }
    dend_93 { pt3dadd( -15.0946, -205.843, -56.2609, 0.59 ) }
    dend_93 { pt3dadd( -15.1603, -206.902, -55.7851, 0.59 ) }
    dend_93 { pt3dadd( -15.2441, -207.736, -55.4565, 0.52 ) }
    dend_93 { pt3dadd( -15.3383, -208.449, -55.1901, 0.52 ) }
    dend_93 { pt3dadd( -15.5731, -210.131, -54.6444, 0.74 ) }
    dend_93 { pt3dadd( -15.6891, -210.906, -54.4155, 1.33 ) }
    dend_93 { pt3dadd( -15.8657, -211.915, -54.1648, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_25 (entry count 66/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -0.290504, -11.4676, 0.0228061, 2.73 ) }
    dend_41 { pt3dadd( 0.0239675, -13.9438, -0.0234584, 2.73 ) }
    dend_41 { pt3dadd( 0.316255, -16.4759, -0.0672333, 2.14 ) }
    dend_41 { pt3dadd( 0.517353, -18.4704, -0.0981978, 2.14 ) }
    dend_41 { pt3dadd( 0.721257, -20.7535, -0.130469, 2.28 ) }
    dend_41 { pt3dadd( 0.89417, -22.9351, -0.184533, 2.14 ) }
    dend_41 { pt3dadd( 1.1107, -25.7641, -0.271822, 1.92 ) }
    dend_41 { pt3dadd( 1.2343, -27.8427, -0.368337, 2.06 ) }
    dend_41 { pt3dadd( 1.35444, -30.7327, -0.535686, 1.84 ) }
    dend_41 { pt3dadd( 1.38635, -33.4278, -0.747758, 1.84 ) }
    dend_41 { pt3dadd( 1.36282, -35.4602, -0.941238, 1.84 ) }
    dend_41 { pt3dadd( 1.26287, -38.0197, -1.24029, 1.92 ) }
    dend_41 { pt3dadd( 1.06276, -40.4774, -1.61305, 1.92 ) }
    dend_41 { pt3dadd( 0.781533, -42.5025, -1.98577, 1.92 ) }
    dend_41 { pt3dadd( 0.342943, -44.5354, -2.39395, 1.84 ) }
    dend_41 { pt3dadd( -0.260804, -46.7092, -2.84876, 1.84 ) }
    dend_41 { pt3dadd( -0.708603, -48.0171, -3.13195, 1.77 ) }
    dend_41 { pt3dadd( -1.77434, -50.7403, -3.75333, 1.69 ) }
    dend_41 { pt3dadd( -2.9941, -53.5855, -4.40753, 1.69 ) }
    dend_41 { pt3dadd( -4.06724, -55.9035, -4.96291, 1.84 ) }
    dend_41 { pt3dadd( -4.1092, -55.9849, -4.98138, 1.84 ) }
    dend_41 { pt3dadd( -4.74302, -57.0485, -5.23244, 2.06 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 88/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -0.290504, -11.4676, 0.0228061, 0.96 ) }
    dend_26 { pt3dadd( -0.37879, -12.7755, -0.656412, 0.96 ) }
    dend_26 { pt3dadd( -0.528288, -14.088, -1.21546, 1.25 ) }
    dend_26 { pt3dadd( -0.787589, -15.6361, -1.76322, 0.96 ) }
    dend_26 { pt3dadd( -1.00987, -16.6434, -2.01444, 1.25 ) }
    dend_26 { pt3dadd( -1.20345, -17.355, -2.1499, 1.47 ) }
    dend_26 { pt3dadd( -1.47895, -18.274, -2.29663, 1.11 ) }
    dend_26 { pt3dadd( -1.89117, -19.4533, -2.3891, 0.96 ) }
    dend_26 { pt3dadd( -2.37021, -20.5782, -2.39609, 1.11 ) }
    dend_26 { pt3dadd( -3.08816, -22.0, -2.35835, 1.11 ) }
    dend_26 { pt3dadd( -3.61226, -22.9209, -2.34933, 1.11 ) }
    dend_26 { pt3dadd( -3.65677, -22.9917, -2.34997, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_26 { pt3dadd( -4.27144, -23.846, -2.38497, 0.96 ) }
    dend_26 { pt3dadd( -4.30047, -23.8816, -2.3892, 0.96 ) }
    dend_26 { pt3dadd( -4.89395, -24.4966, -2.53516, 1.03 ) }
    dend_26 { pt3dadd( -5.3312, -24.9192, -2.69372, 1.25 ) }
    dend_26 { pt3dadd( -5.37342, -24.9631, -2.70994, 1.25 ) }
    dend_26 { pt3dadd( -5.96393, -25.6083, -2.94513, 0.88 ) }
    dend_26 { pt3dadd( -6.52209, -26.2632, -3.18046, 0.88 ) }
    dend_26 { pt3dadd( -7.22567, -27.1533, -3.51515, 1.11 ) }
    dend_26 { pt3dadd( -7.77355, -27.9166, -3.80008, 1.11 ) }
    dend_26 { pt3dadd( -8.28973, -28.6935, -4.08892, 1.25 ) }
    dend_26 { pt3dadd( -8.33756, -28.7771, -4.11725, 1.25 ) }
    dend_26 { pt3dadd( -8.77412, -29.7228, -4.41975, 0.96 ) }
    dend_26 { pt3dadd( -9.15622, -30.712, -4.70719, 0.96 ) }
    dend_26 { pt3dadd( -9.43416, -31.5404, -4.92996, 1.03 ) }
    dend_26 { pt3dadd( -9.45365, -31.5997, -4.94493, 1.03 ) }
    dend_26 { pt3dadd( -9.79857, -32.6304, -5.18961, 1.03 ) }
    dend_26 { pt3dadd( -10.0694, -33.4354, -5.35902, 1.03 ) }
    dend_26 { pt3dadd( -10.3103, -34.1532, -5.47114, 1.25 ) }
    dend_26 { pt3dadd( -10.5641, -34.9108, -5.54893, 1.62 ) }
    dend_26 { pt3dadd( -10.9659, -36.0472, -5.63256, 1.25 ) }
    dend_26 { pt3dadd( -11.2781, -36.8821, -5.67294, 1.18 ) }
    dend_26 { pt3dadd( -11.5358, -37.4845, -5.66627, 1.18 ) }
    dend_26 { pt3dadd( -11.8819, -38.217, -5.6087, 1.33 ) }
    dend_26 { pt3dadd( -12.3266, -39.0535, -5.50756, 1.33 ) }
    dend_26 { pt3dadd( -12.7429, -39.7829, -5.41334, 1.03 ) }
    dend_26 { pt3dadd( -12.7684, -39.8242, -5.40781, 1.03 ) }
    dend_26 { pt3dadd( -13.2388, -40.59, -5.36165, 0.81 ) }
    dend_26 { pt3dadd( -13.5849, -41.1806, -5.40091, 0.66 ) }
    dend_26 { pt3dadd( -13.9187, -41.7843, -5.54963, 0.81 ) }
    dend_26 { pt3dadd( -14.3059, -42.5401, -5.88059, 1.03 ) }
    dend_26 { pt3dadd( -14.4968, -42.9553, -6.1158, 1.33 ) }
    dend_26 { pt3dadd( -14.7013, -43.5162, -6.47628, 1.62 ) }
    dend_26 { pt3dadd( -14.883, -44.1802, -6.92804, 1.55 ) }
    dend_26 { pt3dadd( -15.0442, -44.9264, -7.40861, 1.18 ) }
    dend_26 { pt3dadd( -15.2121, -45.8182, -7.92066, 0.96 ) }
    dend_26 { pt3dadd( -15.221, -45.868, -7.9456, 0.96 ) }
    dend_26 { pt3dadd( -15.4161, -47.0248, -8.44623, 0.88 ) }
    dend_26 { pt3dadd( -15.5867, -48.0219, -8.79293, 0.88 ) }
    dend_26 { pt3dadd( -15.722, -48.8948, -9.02163, 1.18 ) }
    dend_26 { pt3dadd( -15.8406, -49.7752, -9.20542, 1.4 ) }
    dend_26 { pt3dadd( -15.9772, -50.7557, -9.39004, 1.4 ) }
    dend_26 { pt3dadd( -16.0939, -51.4345, -9.53281, 1.18 ) }
    dend_26 { pt3dadd( -16.2723, -52.2122, -9.71046, 0.96 ) }
    dend_26 { pt3dadd( -16.4805, -52.911, -9.90948, 1.11 ) }
    dend_26 { pt3dadd( -16.8237, -53.7841, -10.259, 0.88 ) }
    dend_26 { pt3dadd( -17.1243, -54.4535, -10.567, 0.74 ) }
    dend_26 { pt3dadd( -17.4912, -55.1165, -10.9202, 0.96 ) }
    dend_26 { pt3dadd( -17.7802, -55.5472, -11.1976, 1.25 ) }
    dend_26 { pt3dadd( -18.224, -56.0761, -11.6186, 1.33 ) }
    dend_26 { pt3dadd( -18.8209, -56.6181, -12.1477, 1.4 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 50/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 7.12663, 34.5533, -2.78445, 1.4 ) }
    dend_14 { pt3dadd( 6.4068, 36.7953, -3.50938, 1.4 ) }
    dend_14 { pt3dadd( 5.99287, 38.362, -3.90017, 1.4 ) }
    dend_14 { pt3dadd( 5.44426, 40.6491, -4.15564, 1.25 ) }
    dend_14 { pt3dadd( 5.36296, 41.0101, -4.13817, 1.25 ) }
    dend_14 { pt3dadd( 5.12696, 42.1062, -3.9918, 1.03 ) }
    dend_14 { pt3dadd( 4.84977, 43.4268, -3.76542, 1.03 ) }
    dend_14 { pt3dadd( 4.63547, 44.7044, -3.4165, 1.18 ) }
    dend_14 { pt3dadd( 4.28651, 46.7123, -2.5664, 1.33 ) }
    dend_14 { pt3dadd( 3.95836, 48.544, -1.54363, 1.33 ) }
    dend_14 { pt3dadd( 3.73872, 49.8306, -0.777168, 1.47 ) }
    dend_14 { pt3dadd( 3.60121, 50.7803, -0.204525, 1.47 ) }
    dend_14 { pt3dadd( 3.4648, 52.097, 0.537846, 1.47 ) }
    dend_14 { pt3dadd( 3.29686, 54.9501, 1.95298, 1.4 ) }
    dend_14 { pt3dadd( 3.27709, 56.7449, 2.69592, 1.4 ) }
    dend_14 { pt3dadd( 3.3121, 57.9308, 3.09835, 1.4 ) }
    dend_14 { pt3dadd( 3.42269, 59.5719, 3.573, 1.62 ) }
    dend_14 { pt3dadd( 3.60483, 61.4768, 4.00375, 1.18 ) }
    dend_14 { pt3dadd( 3.80503, 63.0293, 4.21509, 1.18 ) }
    dend_14 { pt3dadd( 3.82494, 63.1539, 4.21858, 1.18 ) }
    dend_14 { pt3dadd( 4.12148, 65.2183, 4.21687, 1.18 ) }
    dend_14 { pt3dadd( 4.3174, 66.8747, 4.21743, 1.47 ) }
    dend_14 { pt3dadd( 4.36718, 67.3943, 4.21773, 1.47 ) }
    dend_14 { pt3dadd( 4.52183, 69.1557, 4.22039, 1.4 ) }
    dend_14 { pt3dadd( 4.68558, 71.021, 4.22666, 1.33 ) }
    dend_14 { pt3dadd( 4.87546, 73.2578, 4.23719, 1.33 ) }
    dend_14 { pt3dadd( 5.03498, 75.3613, 4.25212, 1.62 ) }
    dend_14 { pt3dadd( 5.11934, 76.892, 4.26363, 1.92 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 78/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.12663, 34.5533, -2.78445, 1.18 ) }
    dend_1 { pt3dadd( 8.59561, 34.9187, -2.23692, 1.18 ) }
    dend_1 { pt3dadd( 9.93499, 35.1912, -1.49047, 0.96 ) }
    dend_1 { pt3dadd( 10.6649, 35.3246, -1.06179, 1.25 ) }
    dend_1 { pt3dadd( 10.7477, 35.3441, -1.00565, 1.25 ) }
    dend_1 { pt3dadd( 11.9473, 35.6781, -0.185393, 1.25 ) }
    dend_1 { pt3dadd( 13.0631, 36.0597, 0.566624, 1.25 ) }
    dend_1 { pt3dadd( 15.0788, 36.7977, 1.91904, 1.18 ) }
    dend_1 { pt3dadd( 16.014, 37.1963, 2.53226, 0.81 ) }
    dend_1 { pt3dadd( 17.304, 37.8495, 3.39011, 0.96 ) }
    dend_1 { pt3dadd( 18.2989, 38.4743, 4.00166, 0.96 ) }
    dend_1 { pt3dadd( 19.0917, 39.1491, 4.40839, 0.96 ) }
    dend_1 { pt3dadd( 19.1468, 39.2044, 4.42513, 0.96 ) }
    dend_1 { pt3dadd( 20.0708, 40.165, 4.47295, 0.96 ) }
    dend_1 { pt3dadd( 20.1336, 40.2324, 4.47041, 0.96 ) }
    dend_1 { pt3dadd( 20.9723, 41.1139, 4.356, 1.18 ) }
    dend_1 { pt3dadd( 22.0611, 42.2515, 4.19905, 1.4 ) }
    dend_1 { pt3dadd( 22.9659, 43.1528, 4.0758, 1.33 ) }
    dend_1 { pt3dadd( 23.0694, 43.2527, 4.06852, 1.33 ) }
    dend_1 { pt3dadd( 24.0818, 44.1643, 4.07778, 1.18 ) }
    dend_1 { pt3dadd( 24.2549, 44.3009, 4.10843, 1.18 ) }
    dend_1 { pt3dadd( 25.0131, 44.83, 4.35946, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 25.2126, 44.9535, 4.47033, 1.18 ) }
    dend_1 { pt3dadd( 26.2078, 45.5401, 5.18212, 0.96 ) }
    dend_1 { pt3dadd( 27.1576, 46.1039, 5.94602, 0.96 ) }
    dend_1 { pt3dadd( 28.4496, 46.9422, 7.14014, 1.03 ) }
    dend_1 { pt3dadd( 28.5448, 47.0146, 7.23017, 1.03 ) }
    dend_1 { pt3dadd( 29.9544, 48.3118, 8.56172, 1.03 ) }
    dend_1 { pt3dadd( 30.0432, 48.3985, 8.64755, 1.03 ) }
    dend_1 { pt3dadd( 30.5432, 48.9557, 9.14528, 1.03 ) }
    dend_1 { pt3dadd( 31.2012, 49.8305, 9.81392, 1.18 ) }
    dend_1 { pt3dadd( 32.033, 51.1596, 10.492, 1.4 ) }
    dend_1 { pt3dadd( 32.7138, 52.3098, 10.9318, 1.62 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.07001, 40.4418, -0.593792, 0.15 ) }
    axon_1 { pt3dadd( 6.9617, 55.322, -0.593792, 0.15 ) }
    axon_1 { pt3dadd( 8.85338, 70.2023, -0.593792, 0.15 ) }
    // Section: dend_102, id: dend_102, parent: dend_98 (entry count 14/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 4.82586, -111.415, -75.9077, 0.52 ) }
    dend_102 { pt3dadd( 4.04954, -111.934, -76.6094, 0.52 ) }
    dend_102 { pt3dadd( 3.06059, -112.639, -77.4246, 0.52 ) }
    dend_102 { pt3dadd( 2.68244, -112.964, -77.7661, 0.96 ) }
    dend_102 { pt3dadd( 1.90172, -113.814, -78.6141, 1.33 ) }
    dend_102 { pt3dadd( 1.49842, -114.367, -79.1251, 0.81 ) }
    dend_102 { pt3dadd( 1.03836, -115.201, -79.8236, 0.52 ) }
    dend_102 { pt3dadd( 1.02553, -115.252, -79.8569, 0.52 ) }
    dend_102 { pt3dadd( 1.10078, -116.472, -80.6034, 0.88 ) }
    dend_102 { pt3dadd( 1.36357, -117.391, -81.1696, 1.25 ) }
    dend_102 { pt3dadd( 1.60699, -117.9, -81.4936, 1.47 ) }
    dend_102 { pt3dadd( 2.0256, -118.587, -81.9689, 1.47 ) }
    dend_102 { pt3dadd( 2.57895, -119.357, -82.5188, 0.88 ) }
    dend_102 { pt3dadd( 3.42655, -120.473, -83.3407, 0.88 ) }
    dend_102 { pt3dadd( 3.87031, -121.032, -83.7974, 0.37 ) }
    dend_102 { pt3dadd( 4.33274, -121.681, -84.3682, 0.66 ) }
    dend_102 { pt3dadd( 4.36353, -121.735, -84.4219, 0.66 ) }
    dend_102 { pt3dadd( 4.49723, -122.1, -84.7929, 0.96 ) }
    dend_102 { pt3dadd( 4.64914, -123.081, -85.7251, 1.11 ) }
    dend_102 { pt3dadd( 4.56825, -124.481, -86.8639, 0.44 ) }
    dend_102 { pt3dadd( 4.43929, -125.233, -87.4104, 0.44 ) }
    dend_102 { pt3dadd( 4.19597, -126.355, -88.1948, 0.52 ) }
    dend_102 { pt3dadd( 4.05696, -126.973, -88.6282, 0.74 ) }
    dend_102 { pt3dadd( 3.86853, -127.658, -89.0793, 0.74 ) }
    dend_102 { pt3dadd( 3.59229, -128.515, -89.6365, 1.03 ) }
    dend_102 { pt3dadd( 3.17886, -129.95, -90.5957, 0.88 ) }
    dend_102 { pt3dadd( 2.86903, -131.34, -91.5756, 1.18 ) }
    dend_102 { pt3dadd( 2.68841, -132.685, -92.6182, 0.96 ) }
    dend_102 { pt3dadd( 2.66373, -133.784, -93.6689, 0.59 ) }
    dend_102 { pt3dadd( 2.72592, -135.002, -95.0219, 0.29 ) }
    dend_102 { pt3dadd( 2.82073, -135.9, -96.1324, 0.88 ) }
    dend_102 { pt3dadd( 2.84929, -136.164, -96.4846, 1.47 ) }
    dend_102 { pt3dadd( 2.96116, -137.259, -97.9731, 1.33 ) }
    dend_102 { pt3dadd( 3.07824, -138.891, -100.169, 0.52 ) }
    dend_102 { pt3dadd( 3.0852, -139.326, -100.723, 0.29 ) }
    dend_102 { pt3dadd( 3.03701, -139.704, -101.113, 0.96 ) }
    dend_102 { pt3dadd( 2.76388, -140.756, -102.036, 1.77 ) }
    dend_102 { pt3dadd( 2.64365, -141.2, -102.404, 1.77 ) }
    dend_102 { pt3dadd( 2.35426, -142.183, -103.115, 1.11 ) }
    dend_102 { pt3dadd( 2.17582, -142.992, -103.773, 0.37 ) }
    dend_102 { pt3dadd( 2.14647, -143.548, -104.419, 0.29 ) }
    dend_102 { pt3dadd( 2.20269, -144.367, -105.57, 0.74 ) }
    dend_102 { pt3dadd( 2.4449, -145.55, -107.409, 1.33 ) }
    dend_102 { pt3dadd( 2.45552, -145.586, -107.469, 1.33 ) }
    dend_102 { pt3dadd( 2.89869, -146.676, -109.564, 1.55 ) }
    dend_102 { pt3dadd( 3.5229, -148.051, -112.384, 0.96 ) }
    dend_102 { pt3dadd( 3.53697, -148.084, -112.452, 0.96 ) }
    dend_102 { pt3dadd( 3.67434, -148.507, -113.241, 1.18 ) }
    dend_102 { pt3dadd( 3.68155, -148.54, -113.292, 1.18 ) }
    dend_102 { pt3dadd( 3.8249, -149.887, -115.009, 0.44 ) }
    dend_102 { pt3dadd( 3.73987, -150.602, -115.645, 0.37 ) }
    dend_102 { pt3dadd( 3.61757, -151.205, -116.247, 0.52 ) }
    dend_102 { pt3dadd( 3.53396, -151.677, -116.82, 0.81 ) }
    dend_102 { pt3dadd( 3.44806, -152.24, -117.538, 1.33 ) }
    dend_102 { pt3dadd( 3.41284, -152.625, -118.035, 0.96 ) }
    dend_102 { pt3dadd( 3.41085, -153.853, -119.618, 1.25 ) }
    dend_102 { pt3dadd( 3.67837, -156.425, -122.969, 0.52 ) }
    dend_102 { pt3dadd( 3.91472, -157.635, -124.591, 0.44 ) }
    dend_102 { pt3dadd( 4.09455, -158.241, -125.414, 0.59 ) }
    dend_102 { pt3dadd( 4.49824, -159.257, -126.793, 0.59 ) }
    dend_102 { pt3dadd( 5.00443, -160.237, -128.07, 0.74 ) }
    dend_102 { pt3dadd( 5.34108, -160.753, -128.664, 1.18 ) }
    dend_102 { pt3dadd( 5.37534, -160.802, -128.704, 1.18 ) }
    dend_102 { pt3dadd( 5.76334, -161.286, -129.069, 1.47 ) }
    dend_102 { pt3dadd( 5.80496, -161.333, -129.104, 1.47 ) }
    dend_102 { pt3dadd( 6.75729, -162.455, -129.76, 1.18 ) }
    dend_102 { pt3dadd( 6.798, -162.512, -129.788, 1.18 ) }
    dend_102 { pt3dadd( 7.16142, -163.175, -130.059, 1.18 ) }
    dend_102 { pt3dadd( 7.5949, -164.301, -130.529, 0.52 ) }
    dend_102 { pt3dadd( 7.75006, -165.04, -130.845, 0.29 ) }
    dend_102 { pt3dadd( 7.84084, -165.881, -131.233, 0.29 ) }
    dend_102 { pt3dadd( 7.86505, -166.456, -131.514, 0.88 ) }
    dend_102 { pt3dadd( 7.86642, -167.24, -131.944, 1.11 ) }
    dend_102 { pt3dadd( 7.805, -168.734, -132.821, 0.81 ) }
    dend_102 { pt3dadd( 7.7648, -169.684, -133.479, 0.37 ) }
    dend_102 { pt3dadd( 7.76878, -170.688, -134.482, 0.29 ) }
    dend_102 { pt3dadd( 7.78227, -171.148, -135.076, 0.96 ) }
    dend_102 { pt3dadd( 7.7831, -171.191, -135.148, 0.96 ) }
    dend_102 { pt3dadd( 7.76829, -171.559, -135.89, 1.18 ) }
    dend_102 { pt3dadd( 7.63465, -172.33, -137.62, 1.11 ) }
    dend_102 { pt3dadd( 7.18613, -173.644, -140.749, 0.44 ) }
    dend_102 { pt3dadd( 6.97365, -174.041, -141.723, 0.74 ) }
    dend_102 { pt3dadd( 6.51688, -174.719, -143.296, 0.59 ) }
    dend_102 { pt3dadd( 6.21223, -175.117, -144.132, 0.81 ) }
    dend_102 { pt3dadd( 5.70448, -175.682, -145.157, 0.44 ) }
    dend_102 { pt3dadd( 5.33332, -176.095, -145.641, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_102 { pt3dadd( 5.2924, -176.149, -145.672, 0.59 ) }
    dend_102 { pt3dadd( 4.82788, -176.974, -146.002, 0.52 ) }
    dend_102 { pt3dadd( 4.53188, -177.644, -146.21, 1.03 ) }
    dend_102 { pt3dadd( 4.25456, -178.446, -146.46, 1.4 ) }
    dend_102 { pt3dadd( 3.88936, -179.68, -146.814, 1.33 ) }
    dend_102 { pt3dadd( 3.66493, -180.543, -147.12, 1.11 ) }
    dend_102 { pt3dadd( 3.52471, -181.4, -147.554, 0.59 ) }
    dend_102 { pt3dadd( 3.52137, -181.464, -147.594, 0.59 ) }
    dend_102 { pt3dadd( 3.56956, -182.043, -148.055, 0.44 ) }
    dend_102 { pt3dadd( 3.77798, -182.966, -148.97, 0.44 ) }
    dend_102 { pt3dadd( 4.12031, -183.987, -150.155, 0.74 ) }
    dend_102 { pt3dadd( 4.68226, -185.433, -151.969, 0.74 ) }
    dend_102 { pt3dadd( 4.82195, -185.779, -152.404, 1.25 ) }
    dend_102 { pt3dadd( 5.227, -186.848, -153.76, 1.55 ) }
    dend_102 { pt3dadd( 5.63261, -187.995, -155.241, 1.77 ) }
    dend_102 { pt3dadd( 6.03752, -189.386, -157.082, 0.74 ) }
    dend_102 { pt3dadd( 6.15158, -190.124, -158.001, 0.52 ) }
    dend_102 { pt3dadd( 6.1458, -190.623, -158.577, 0.52 ) }
    dend_102 { pt3dadd( 6.00939, -191.676, -159.762, 0.96 ) }
    dend_102 { pt3dadd( 5.88388, -192.119, -160.21, 1.18 ) }
    dend_102 { pt3dadd( 5.39712, -193.187, -161.233, 0.52 ) }
    dend_102 { pt3dadd( 5.07292, -193.701, -161.725, 0.52 ) }
    dend_102 { pt3dadd( 4.8382, -194.005, -162.037, 0.66 ) }
    dend_102 { pt3dadd( 4.80006, -194.047, -162.082, 0.66 ) }
    dend_102 { pt3dadd( 4.46675, -194.351, -162.414, 0.44 ) }
    dend_102 { pt3dadd( 3.58326, -195.041, -163.184, 0.29 ) }
    dend_102 { pt3dadd( 3.52881, -195.073, -163.218, 0.29 ) }
    dend_102 { pt3dadd( 3.10323, -195.274, -163.459, 0.52 ) }
    dend_102 { pt3dadd( 2.66531, -195.462, -163.662, 0.81 ) }
    dend_102 { pt3dadd( 2.13018, -195.709, -163.839, 0.96 ) }
    dend_102 { pt3dadd( 1.59781, -195.968, -163.948, 1.11 ) }
    dend_102 { pt3dadd( 0.85725, -196.372, -164.004, 0.29 ) }
    dend_102 { pt3dadd( 0.762903, -196.429, -164.007, 0.29 ) }
    dend_102 { pt3dadd( -0.0592134, -196.937, -164.001, 0.29 ) }
    dend_102 { pt3dadd( -0.813134, -197.39, -163.975, 0.88 ) }
    dend_102 { pt3dadd( -1.08597, -197.55, -163.958, 1.03 ) }
    dend_102 { pt3dadd( -1.70604, -197.875, -163.92, 1.18 ) }
    dend_102 { pt3dadd( -2.64783, -198.279, -163.898, 0.29 ) }
    dend_102 { pt3dadd( -3.7646, -198.659, -163.926, 0.29 ) }
    dend_102 { pt3dadd( -4.22358, -198.778, -163.976, 0.59 ) }
    dend_102 { pt3dadd( -4.29157, -198.794, -163.99, 0.59 ) }
    dend_102 { pt3dadd( -5.07363, -198.981, -164.228, 0.59 ) }
    dend_102 { pt3dadd( -5.83348, -199.211, -164.536, 1.11 ) }
    dend_102 { pt3dadd( -6.47169, -199.472, -164.859, 1.4 ) }
    dend_102 { pt3dadd( -7.24133, -199.874, -165.303, 0.96 ) }
    dend_102 { pt3dadd( -8.01419, -200.379, -165.776, 0.59 ) }
    dend_102 { pt3dadd( -8.90598, -201.078, -166.331, 0.37 ) }
    dend_102 { pt3dadd( -9.57995, -201.716, -166.749, 0.37 ) }
    dend_102 { pt3dadd( -9.9931, -202.141, -166.968, 0.74 ) }
    dend_102 { pt3dadd( -10.0413, -202.194, -166.99, 0.74 ) }
    dend_102 { pt3dadd( -10.5257, -202.777, -167.136, 0.74 ) }
    dend_102 { pt3dadd( -10.9073, -203.254, -167.219, 1.03 ) }
    dend_102 { pt3dadd( -11.3519, -203.817, -167.278, 1.33 ) }
    dend_102 { pt3dadd( -12.0252, -204.577, -167.335, 1.47 ) }
    dend_102 { pt3dadd( -12.7811, -205.364, -167.395, 0.37 ) }
    dend_102 { pt3dadd( -13.7075, -206.303, -167.471, 1.18 ) }
    // Section: dend_99, id: dend_99, parent: dend_98 (entry count 56/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 4.82586, -111.415, -75.9077, 0.52 ) }
    dend_99 { pt3dadd( 5.64634, -112.114, -74.8376, 0.52 ) }
    dend_99 { pt3dadd( 6.58859, -113.015, -73.7326, 0.44 ) }
    dend_99 { pt3dadd( 7.06279, -113.535, -73.2424, 0.88 ) }
    dend_99 { pt3dadd( 7.09985, -113.582, -73.2078, 0.88 ) }
    dend_99 { pt3dadd( 7.40812, -114.011, -72.9432, 1.03 ) }
    dend_99 { pt3dadd( 7.732, -114.509, -72.6857, 0.81 ) }
    dend_99 { pt3dadd( 8.08579, -115.2, -72.5083, 0.29 ) }
    dend_99 { pt3dadd( 8.42519, -115.983, -72.4038, 0.22 ) }
    dend_99 { pt3dadd( 8.66214, -116.585, -72.3387, 0.52 ) }
    dend_99 { pt3dadd( 8.77769, -116.91, -72.3024, 0.74 ) }
    dend_99 { pt3dadd( 9.03711, -117.761, -72.206, 0.29 ) }
    dend_99 { pt3dadd( 9.22536, -118.511, -72.1141, 0.29 ) }
    dend_99 { pt3dadd( 9.37617, -119.26, -72.0237, 0.74 ) }
    dend_99 { pt3dadd( 9.44522, -119.689, -71.9655, 1.03 ) }
    dend_99 { pt3dadd( 9.52233, -120.221, -71.89, 0.96 ) }
    dend_99 { pt3dadd( 9.5894, -120.785, -71.8097, 0.59 ) }
    dend_99 { pt3dadd( 9.68843, -121.583, -71.6728, 0.22 ) }
    dend_99 { pt3dadd( 9.77034, -122.071, -71.5744, 0.37 ) }
    dend_99 { pt3dadd( 9.80173, -122.193, -71.5484, 0.37 ) }
    dend_99 { pt3dadd( 9.99109, -122.686, -71.4577, 0.37 ) }
    dend_99 { pt3dadd( 10.0225, -122.745, -71.4499, 0.37 ) }
    dend_99 { pt3dadd( 10.5719, -123.599, -71.473, 0.29 ) }
    dend_99 { pt3dadd( 10.9804, -124.171, -71.5595, 0.88 ) }
    dend_99 { pt3dadd( 11.2386, -124.531, -71.6372, 1.18 ) }
    dend_99 { pt3dadd( 11.7325, -125.25, -71.8197, 0.29 ) }
    dend_99 { pt3dadd( 12.1879, -125.934, -72.0206, 0.29 ) }
    dend_99 { pt3dadd( 12.8617, -126.993, -72.2987, 0.52 ) }
    dend_99 { pt3dadd( 13.1481, -127.474, -72.4116, 0.81 ) }
    dend_99 { pt3dadd( 13.5978, -128.259, -72.5459, 0.22 ) }
    dend_99 { pt3dadd( 13.7991, -128.631, -72.5843, 0.59 ) }
    dend_99 { pt3dadd( 13.8397, -128.712, -72.5883, 0.59 ) }
    dend_99 { pt3dadd( 14.4302, -130.003, -72.6013, 0.44 ) }
    dend_99 { pt3dadd( 14.8263, -130.916, -72.5777, 0.66 ) }
    dend_99 { pt3dadd( 15.0862, -131.535, -72.5734, 0.59 ) }
    dend_99 { pt3dadd( 15.2998, -132.055, -72.5966, 0.44 ) }
    dend_99 { pt3dadd( 15.6408, -132.908, -72.6793, 0.96 ) }
    dend_99 { pt3dadd( 15.9168, -133.555, -72.8207, 1.33 ) }
    dend_99 { pt3dadd( 16.2382, -134.2, -73.0817, 0.59 ) }
    dend_99 { pt3dadd( 16.2761, -134.261, -73.1138, 0.59 ) }
    dend_99 { pt3dadd( 16.6707, -134.768, -73.4612, 0.59 ) }
    dend_99 { pt3dadd( 16.7027, -134.806, -73.4938, 0.59 ) }
    dend_99 { pt3dadd( 17.3388, -135.629, -74.2946, 0.29 ) }
    dend_99 { pt3dadd( 17.6035, -136.033, -74.7099, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_99 { pt3dadd( 17.8141, -136.419, -75.0632, 0.44 ) }
    dend_99 { pt3dadd( 18.0941, -137.007, -75.5465, 0.44 ) }
    dend_99 { pt3dadd( 18.3998, -137.778, -76.0906, 1.33 ) }
    dend_99 { pt3dadd( 18.746, -138.713, -76.6784, 1.11 ) }
    dend_99 { pt3dadd( 19.0396, -139.591, -77.156, 0.52 ) }
    dend_99 { pt3dadd( 19.3298, -140.39, -77.5874, 0.29 ) }
    dend_99 { pt3dadd( 19.351, -140.447, -77.6169, 0.29 ) }
    dend_99 { pt3dadd( 19.5695, -140.937, -77.828, 0.29 ) }
    dend_99 { pt3dadd( 19.9995, -141.558, -78.0452, 0.29 ) }
    dend_99 { pt3dadd( 20.3031, -141.84, -78.1037, 0.96 ) }
    dend_99 { pt3dadd( 20.7121, -142.051, -78.1338, 1.25 ) }
    // Section: dend_97, id: dend_97, parent: dend_93 (entry count 11/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -15.8657, -211.915, -54.1648, 0.29 ) }
    dend_97 { pt3dadd( -17.5142, -212.572, -53.1926, 0.29 ) }
    dend_97 { pt3dadd( -18.5259, -213.118, -52.492, 0.29 ) }
    dend_97 { pt3dadd( -18.8332, -213.296, -52.2777, 0.74 ) }
    dend_97 { pt3dadd( -18.9114, -213.342, -52.2243, 0.74 ) }
    dend_97 { pt3dadd( -19.4175, -213.637, -51.9024, 0.74 ) }
    dend_97 { pt3dadd( -20.5419, -214.203, -51.3575, 0.29 ) }
    dend_97 { pt3dadd( -21.4252, -214.639, -51.1058, 0.29 ) }
    dend_97 { pt3dadd( -21.8589, -214.811, -51.0412, 0.74 ) }
    dend_97 { pt3dadd( -22.2373, -214.924, -51.0307, 1.11 ) }
    dend_97 { pt3dadd( -22.8739, -215.106, -51.0444, 1.11 ) }
    dend_97 { pt3dadd( -24.5374, -215.57, -51.1715, 0.29 ) }
    dend_97 { pt3dadd( -25.0805, -215.745, -51.2207, 0.37 ) }
    dend_97 { pt3dadd( -25.8515, -216.072, -51.1965, 0.37 ) }
    dend_97 { pt3dadd( -26.7146, -216.543, -51.051, 0.66 ) }
    dend_97 { pt3dadd( -27.5842, -217.133, -50.8017, 0.52 ) }
    dend_97 { pt3dadd( -28.0943, -217.53, -50.6045, 0.96 ) }
    dend_97 { pt3dadd( -29.0101, -218.302, -50.1815, 1.33 ) }
    dend_97 { pt3dadd( -30.3521, -219.389, -49.6026, 0.59 ) }
    dend_97 { pt3dadd( -30.9562, -219.867, -49.3161, 0.37 ) }
    dend_97 { pt3dadd( -31.4401, -220.237, -49.0791, 0.22 ) }
    dend_97 { pt3dadd( -32.2949, -220.866, -48.6836, 0.22 ) }
    dend_97 { pt3dadd( -33.025, -221.409, -48.3627, 0.66 ) }
    dend_97 { pt3dadd( -33.9526, -222.154, -48.006, 0.66 ) }
    dend_97 { pt3dadd( -35.3457, -223.429, -47.5329, 0.52 ) }
    dend_97 { pt3dadd( -35.5404, -223.631, -47.464, 0.29 ) }
    dend_97 { pt3dadd( -36.0586, -224.238, -47.304, 0.74 ) }
    dend_97 { pt3dadd( -36.2784, -224.527, -47.2126, 0.74 ) }
    dend_97 { pt3dadd( -37.2632, -225.912, -46.7598, 0.37 ) }
    dend_97 { pt3dadd( -38.0728, -227.129, -46.3923, 0.44 ) }
    dend_97 { pt3dadd( -38.4757, -227.73, -46.2529, 0.59 ) }
    dend_97 { pt3dadd( -39.1824, -228.764, -46.0203, 0.52 ) }
    dend_97 { pt3dadd( -40.7132, -230.864, -45.555, 0.37 ) }
    dend_97 { pt3dadd( -41.4246, -231.75, -45.3614, 0.37 ) }
    dend_97 { pt3dadd( -42.2753, -232.692, -45.168, 0.29 ) }
    dend_97 { pt3dadd( -43.3607, -233.781, -44.953, 0.59 ) }
    dend_97 { pt3dadd( -43.5807, -233.997, -44.9189, 0.88 ) }
    dend_97 { pt3dadd( -44.2927, -234.646, -44.8583, 0.66 ) }
    dend_97 { pt3dadd( -45.1462, -235.364, -44.9118, 0.15 ) }
    dend_97 { pt3dadd( -46.1294, -236.046, -44.9539, 0.15 ) }
    dend_97 { pt3dadd( -46.2097, -236.088, -44.9567, 0.15 ) }
    dend_97 { pt3dadd( -47.168, -236.506, -45.0511, 0.59 ) }
    dend_97 { pt3dadd( -47.8102, -236.799, -45.1686, 0.88 ) }
    dend_97 { pt3dadd( -47.8801, -236.835, -45.187, 0.88 ) }
    dend_97 { pt3dadd( -48.3957, -237.148, -45.3586, 0.88 ) }
    dend_97 { pt3dadd( -49.1739, -237.716, -45.6704, 0.88 ) }
    dend_97 { pt3dadd( -50.3337, -238.783, -46.2094, 0.29 ) }
    dend_97 { pt3dadd( -50.9008, -239.404, -46.4989, 0.29 ) }
    dend_97 { pt3dadd( -51.3633, -240.024, -46.7509, 0.66 ) }
    dend_97 { pt3dadd( -51.7265, -240.571, -46.9391, 0.81 ) }
    dend_97 { pt3dadd( -52.2008, -241.424, -47.1763, 0.66 ) }
    dend_97 { pt3dadd( -52.7646, -242.585, -47.424, 0.29 ) }
    dend_97 { pt3dadd( -53.04, -243.197, -47.5191, 0.81 ) }
    dend_97 { pt3dadd( -53.247, -243.644, -47.5804, 0.81 ) }
    dend_97 { pt3dadd( -53.7989, -244.678, -47.6994, 0.22 ) }
    dend_97 { pt3dadd( -54.2232, -245.359, -47.7119, 0.22 ) }
    dend_97 { pt3dadd( -54.4986, -245.766, -47.6757, 0.81 ) }
    dend_97 { pt3dadd( -54.7524, -246.095, -47.6194, 0.96 ) }
    dend_97 { pt3dadd( -55.6244, -247.065, -47.2692, 0.22 ) }
    dend_97 { pt3dadd( -56.2057, -247.553, -46.8396, 0.22 ) }
    dend_97 { pt3dadd( -57.038, -248.063, -45.9684, 0.74 ) }
    dend_97 { pt3dadd( -57.3274, -248.21, -45.6263, 1.18 ) }
    dend_97 { pt3dadd( -57.8333, -248.441, -44.9903, 0.74 ) }
    dend_97 { pt3dadd( -59.0238, -248.918, -43.4558, 0.59 ) }
    dend_97 { pt3dadd( -60.6472, -249.509, -41.3593, 0.44 ) }
    dend_97 { pt3dadd( -61.9571, -250.047, -39.7206, 0.37 ) }
    dend_97 { pt3dadd( -62.0236, -250.078, -39.6457, 0.37 ) }
    dend_97 { pt3dadd( -62.3855, -250.28, -39.2688, 0.66 ) }
    dend_97 { pt3dadd( -62.7136, -250.557, -38.9037, 0.74 ) }
    dend_97 { pt3dadd( -63.5092, -251.467, -38.0083, 0.29 ) }
    dend_97 { pt3dadd( -64.0497, -252.213, -37.3864, 0.29 ) }
    dend_97 { pt3dadd( -64.5987, -252.955, -36.7216, 0.29 ) }
    dend_97 { pt3dadd( -64.7358, -253.146, -36.5376, 0.74 ) }
    dend_97 { pt3dadd( -66.0255, -255.086, -34.466, 0.66 ) }
    dend_97 { pt3dadd( -66.5478, -255.968, -33.3994, 0.22 ) }
    dend_97 { pt3dadd( -66.6758, -256.212, -33.0239, 0.22 ) }
    dend_97 { pt3dadd( -66.9478, -256.676, -32.0194, 0.44 ) }
    // Section: dend_94, id: dend_94, parent: dend_93 (entry count 88/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -15.8657, -211.915, -54.1648, 0.37 ) }
    dend_94 { pt3dadd( -15.5009, -213.925, -55.6775, 0.37 ) }
    dend_94 { pt3dadd( -15.3063, -215.034, -56.424, 0.37 ) }
    dend_94 { pt3dadd( -15.2962, -215.102, -56.4627, 0.37 ) }
    dend_94 { pt3dadd( -15.2104, -215.819, -56.8328, 0.81 ) }
    dend_94 { pt3dadd( -15.0965, -216.896, -57.3389, 0.88 ) }
    dend_94 { pt3dadd( -15.0533, -217.345, -57.5339, 0.88 ) }
    dend_94 { pt3dadd( -14.9743, -218.264, -57.8588, 0.52 ) }
    dend_94 { pt3dadd( -14.9155, -219.312, -58.2136, 0.52 ) }
    dend_94 { pt3dadd( -14.9107, -220.277, -58.5764, 0.52 ) }
    dend_94 { pt3dadd( -14.953, -220.81, -58.7914, 0.96 ) }
    dend_94 { pt3dadd( -15.0255, -221.276, -58.9795, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_94 { pt3dadd( -15.2982, -222.531, -59.5236, 0.37 ) }
    dend_94 { pt3dadd( -15.5161, -223.274, -59.8607, 0.29 ) }
    dend_94 { pt3dadd( -15.7966, -224.002, -60.2189, 0.59 ) }
    dend_94 { pt3dadd( -16.1231, -224.672, -60.5499, 0.96 ) }
    dend_94 { pt3dadd( -16.3966, -225.156, -60.778, 1.18 ) }
    dend_94 { pt3dadd( -16.4361, -225.219, -60.8041, 1.18 ) }
    dend_94 { pt3dadd( -16.6867, -225.603, -60.9583, 1.18 ) }
    dend_94 { pt3dadd( -17.0906, -226.307, -61.2526, 1.03 ) }
    dend_94 { pt3dadd( -17.4941, -227.144, -61.5816, 0.59 ) }
    dend_94 { pt3dadd( -17.7255, -227.709, -61.7686, 0.52 ) }
    dend_94 { pt3dadd( -17.9081, -228.181, -61.8919, 0.66 ) }
    dend_94 { pt3dadd( -18.3908, -229.381, -62.1196, 0.29 ) }
    dend_94 { pt3dadd( -18.7437, -230.214, -62.2011, 0.44 ) }
    dend_94 { pt3dadd( -18.9106, -230.596, -62.1933, 0.52 ) }
    dend_94 { pt3dadd( -19.4757, -231.809, -62.0666, 0.66 ) }
    dend_94 { pt3dadd( -19.827, -232.496, -61.9583, 0.37 ) }
    dend_94 { pt3dadd( -20.2525, -233.255, -61.8087, 0.88 ) }
    dend_94 { pt3dadd( -20.5217, -233.686, -61.7113, 1.18 ) }
    dend_94 { pt3dadd( -21.0752, -234.527, -61.5443, 0.96 ) }
    dend_94 { pt3dadd( -21.4529, -235.126, -61.4537, 0.66 ) }
    dend_94 { pt3dadd( -21.7022, -235.575, -61.3947, 1.03 ) }
    dend_94 { pt3dadd( -22.0857, -236.432, -61.264, 0.52 ) }
    dend_94 { pt3dadd( -22.4472, -237.52, -61.0773, 0.52 ) }
    dend_94 { pt3dadd( -22.6118, -238.266, -60.9504, 1.11 ) }
    dend_94 { pt3dadd( -22.6903, -239.01, -60.8226, 1.11 ) }
    dend_94 { pt3dadd( -22.722, -240.199, -60.631, 0.74 ) }
    dend_94 { pt3dadd( -22.7081, -240.872, -60.5314, 0.44 ) }
    dend_94 { pt3dadd( -22.6572, -241.897, -60.3926, 0.59 ) }
    dend_94 { pt3dadd( -22.593, -243.294, -60.2393, 0.59 ) }
    dend_94 { pt3dadd( -22.5889, -244.625, -60.1394, 0.59 ) }
    dend_94 { pt3dadd( -22.6351, -245.751, -60.0834, 0.52 ) }
    dend_94 { pt3dadd( -22.7066, -246.469, -60.0721, 1.18 ) }
    dend_94 { pt3dadd( -22.7749, -246.929, -60.0676, 1.33 ) }
    dend_94 { pt3dadd( -23.0349, -248.162, -60.0684, 1.18 ) }
    dend_94 { pt3dadd( -23.2992, -249.141, -60.0671, 0.88 ) }
    dend_94 { pt3dadd( -23.5404, -249.922, -60.0653, 0.52 ) }
    dend_94 { pt3dadd( -23.7984, -250.798, -60.0637, 0.66 ) }
    dend_94 { pt3dadd( -23.8183, -250.889, -60.0599, 0.66 ) }
    dend_94 { pt3dadd( -23.9018, -251.658, -60.005, 0.81 ) }
    dend_94 { pt3dadd( -23.9551, -252.542, -59.9288, 0.44 ) }
    dend_94 { pt3dadd( -23.9681, -253.505, -59.8319, 0.44 ) }
    dend_94 { pt3dadd( -23.9402, -254.686, -59.696, 0.44 ) }
    dend_94 { pt3dadd( -23.8269, -256.192, -59.4926, 0.37 ) }
    dend_94 { pt3dadd( -23.7209, -257.177, -59.3423, 0.29 ) }
    // Section: dend_65, id: dend_65, parent: dend_41 (entry count 44/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -4.74302, -57.0485, -5.23244, 1.03 ) }
    dend_65 { pt3dadd( -6.11118, -57.4976, -4.76865, 1.03 ) }
    dend_65 { pt3dadd( -7.01556, -57.9616, -4.30768, 1.03 ) }
    dend_65 { pt3dadd( -8.10048, -58.7002, -3.67797, 0.96 ) }
    dend_65 { pt3dadd( -8.8126, -59.3134, -3.25188, 0.96 ) }
    dend_65 { pt3dadd( -8.90511, -59.4017, -3.19584, 0.96 ) }
    dend_65 { pt3dadd( -10.7177, -61.3687, -2.11043, 0.81 ) }
    dend_65 { pt3dadd( -11.3614, -62.2821, -1.68804, 1.11 ) }
    dend_65 { pt3dadd( -11.9853, -63.2769, -1.26612, 1.11 ) }
    dend_65 { pt3dadd( -12.7841, -64.6043, -0.729609, 1.03 ) }
    dend_65 { pt3dadd( -12.8245, -64.6675, -0.70456, 1.03 ) }
    dend_65 { pt3dadd( -13.6972, -65.9102, -0.177562, 1.03 ) }
    dend_65 { pt3dadd( -14.3427, -66.769, 0.158543, 1.25 ) }
    dend_65 { pt3dadd( -14.8836, -67.4776, 0.49599, 1.4 ) }
    dend_65 { pt3dadd( -15.2497, -67.9491, 0.759266, 1.4 ) }
    dend_65 { pt3dadd( -15.9308, -68.8823, 1.3533, 1.25 ) }
    dend_65 { pt3dadd( -16.6084, -69.9893, 2.03987, 1.11 ) }
    dend_65 { pt3dadd( -16.9513, -70.6898, 2.44872, 1.11 ) }
    dend_65 { pt3dadd( -17.2924, -71.6232, 2.92943, 1.03 ) }
    dend_65 { pt3dadd( -17.3327, -71.7615, 2.9866, 1.03 ) }
    dend_65 { pt3dadd( -17.6148, -72.78, 3.27097, 0.81 ) }
    dend_65 { pt3dadd( -17.9257, -73.8946, 3.44783, 0.96 ) }
    dend_65 { pt3dadd( -18.2667, -75.1104, 3.54424, 0.96 ) }
    dend_65 { pt3dadd( -18.6427, -76.4903, 3.61052, 0.81 ) }
    dend_65 { pt3dadd( -18.8843, -77.5044, 3.60548, 0.74 ) }
    dend_65 { pt3dadd( -19.2194, -79.0235, 3.53849, 0.81 ) }
    dend_65 { pt3dadd( -19.377, -79.8515, 3.46555, 1.11 ) }
    dend_65 { pt3dadd( -19.5491, -81.0417, 3.33508, 1.11 ) }
    dend_65 { pt3dadd( -19.6341, -81.9434, 3.22143, 1.11 ) }
    dend_65 { pt3dadd( -19.7319, -83.6935, 2.9909, 0.88 ) }
    dend_65 { pt3dadd( -19.7491, -84.5734, 2.90546, 1.11 ) }
    dend_65 { pt3dadd( -19.743, -85.6064, 2.81645, 1.11 ) }
    dend_65 { pt3dadd( -19.7345, -86.406, 2.73614, 1.33 ) }
    dend_65 { pt3dadd( -19.738, -87.2355, 2.65274, 0.96 ) }
    dend_65 { pt3dadd( -19.7607, -88.2279, 2.55825, 1.11 ) }
    dend_65 { pt3dadd( -19.7794, -89.44, 2.4499, 1.11 ) }
    dend_65 { pt3dadd( -19.7752, -90.4506, 2.33768, 1.4 ) }
    dend_65 { pt3dadd( -19.7745, -91.3373, 2.21954, 1.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 82/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -4.74302, -57.0485, -5.23244, 1.47 ) }
    dend_42 { pt3dadd( -4.73616, -59.023, -5.25383, 1.47 ) }
    dend_42 { pt3dadd( -4.73194, -60.2399, -5.26701, 1.47 ) }
    dend_42 { pt3dadd( -4.72273, -62.8908, -5.29573, 1.47 ) }
    dend_42 { pt3dadd( -4.71659, -64.6588, -5.31488, 1.62 ) }
    dend_42 { pt3dadd( -4.70908, -66.8226, -5.33831, 1.92 ) }
    dend_42 { pt3dadd( -4.70181, -68.9158, -5.36098, 1.92 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -18.8209, -56.6181, -12.1477, 0.88 ) }
    dend_30 { pt3dadd( -19.9399, -56.7018, -12.2904, 0.88 ) }
    dend_30 { pt3dadd( -20.2695, -56.7479, -12.3562, 1.11 ) }
    dend_30 { pt3dadd( -20.6386, -56.8229, -12.4689, 0.88 ) }
    dend_30 { pt3dadd( -21.0967, -56.9275, -12.6263, 0.81 ) }
    dend_30 { pt3dadd( -21.6253, -57.0835, -12.8333, 0.74 ) }
    dend_30 { pt3dadd( -22.1231, -57.2737, -13.0402, 0.96 ) }
    dend_30 { pt3dadd( -22.5949, -57.5236, -13.2901, 0.96 ) }
    dend_30 { pt3dadd( -23.2277, -57.9408, -13.633, 0.81 ) }
    dend_30 { pt3dadd( -23.2566, -57.9645, -13.6485, 0.81 ) }
    dend_30 { pt3dadd( -23.7607, -58.4547, -13.9142, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( -24.1898, -58.9261, -14.1351, 0.74 ) }
    dend_30 { pt3dadd( -24.3438, -59.0998, -14.2065, 1.03 ) }
    dend_30 { pt3dadd( -24.6405, -59.4217, -14.3328, 1.11 ) }
    dend_30 { pt3dadd( -25.1513, -59.9283, -14.5249, 1.11 ) }
    dend_30 { pt3dadd( -25.1911, -59.964, -14.5405, 1.11 ) }
    dend_30 { pt3dadd( -25.7926, -60.4293, -14.7765, 0.88 ) }
    dend_30 { pt3dadd( -26.5027, -60.9338, -15.0649, 0.88 ) }
    dend_30 { pt3dadd( -26.817, -61.143, -15.1957, 1.25 ) }
    dend_30 { pt3dadd( -27.212, -61.3845, -15.365, 1.25 ) }
    dend_30 { pt3dadd( -27.7557, -61.6935, -15.6047, 1.4 ) }
    dend_30 { pt3dadd( -28.1573, -61.9205, -15.7804, 1.62 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 11/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -18.8209, -56.6181, -12.1477, 0.74 ) }
    dend_27 { pt3dadd( -18.4294, -57.2271, -13.4594, 0.74 ) }
    dend_27 { pt3dadd( -17.9364, -58.0303, -15.2143, 0.44 ) }
    dend_27 { pt3dadd( -17.9024, -58.088, -15.3328, 0.44 ) }
    dend_27 { pt3dadd( -17.5475, -58.6902, -16.4353, 0.44 ) }
    dend_27 { pt3dadd( -16.8933, -59.7871, -18.3128, 1.03 ) }
    dend_27 { pt3dadd( -15.6501, -62.0373, -21.9141, 1.03 ) }
    dend_27 { pt3dadd( -15.2817, -62.7753, -23.0779, 1.33 ) }
    dend_27 { pt3dadd( -14.8306, -63.8392, -24.6761, 1.11 ) }
    dend_27 { pt3dadd( -14.5664, -64.5978, -25.8664, 0.59 ) }
    dend_27 { pt3dadd( -14.2577, -65.7404, -27.7032, 0.44 ) }
    dend_27 { pt3dadd( -14.0257, -67.2699, -30.018, 0.44 ) }
    dend_27 { pt3dadd( -13.9567, -68.2865, -31.5525, 0.88 ) }
    dend_27 { pt3dadd( -13.9772, -68.7558, -32.3261, 1.25 ) }
    dend_27 { pt3dadd( -14.2632, -70.5865, -35.4356, 1.25 ) }
    dend_27 { pt3dadd( -14.2752, -70.6337, -35.5189, 1.25 ) }
    dend_27 { pt3dadd( -14.3417, -70.855, -35.8744, 1.25 ) }
    dend_27 { pt3dadd( -14.3549, -70.9078, -35.9421, 1.25 ) }
    dend_27 { pt3dadd( -14.5663, -72.7491, -37.4505, 0.74 ) }
    dend_27 { pt3dadd( -14.6167, -73.8706, -38.161, 0.74 ) }
    dend_27 { pt3dadd( -14.6189, -73.9593, -38.2033, 0.74 ) }
    dend_27 { pt3dadd( -14.6328, -74.7571, -38.6517, 0.74 ) }
    dend_27 { pt3dadd( -14.6554, -75.8703, -39.4637, 0.81 ) }
    dend_27 { pt3dadd( -14.7091, -76.8049, -40.2395, 0.81 ) }
    dend_27 { pt3dadd( -14.9346, -78.6773, -42.0418, 0.44 ) }
    dend_27 { pt3dadd( -14.9483, -78.7424, -42.1118, 0.44 ) }
    dend_27 { pt3dadd( -15.2514, -79.8755, -43.4026, 0.74 ) }
    dend_27 { pt3dadd( -15.7095, -81.3846, -45.2455, 0.88 ) }
    dend_27 { pt3dadd( -15.9179, -82.0978, -46.115, 1.03 ) }
    dend_27 { pt3dadd( -16.23, -83.2521, -47.4387, 1.03 ) }
    dend_27 { pt3dadd( -16.3866, -84.0017, -48.1515, 1.18 ) }
    dend_27 { pt3dadd( -16.3961, -84.069, -48.2071, 1.18 ) }
    dend_27 { pt3dadd( -16.4316, -85.6564, -49.1931, 0.52 ) }
    dend_27 { pt3dadd( -16.2266, -86.8171, -49.6955, 0.44 ) }
    dend_27 { pt3dadd( -15.9767, -87.423, -49.9364, 0.81 ) }
    dend_27 { pt3dadd( -15.6942, -87.9216, -50.12, 0.88 ) }
    dend_27 { pt3dadd( -15.5881, -88.0963, -50.1944, 0.88 ) }
    dend_27 { pt3dadd( -15.1175, -88.9207, -50.5593, 0.74 ) }
    dend_27 { pt3dadd( -14.6058, -89.9387, -51.0168, 0.44 ) }
    dend_27 { pt3dadd( -14.1891, -90.9983, -51.5223, 0.59 ) }
    dend_27 { pt3dadd( -13.7787, -92.4635, -52.1837, 0.52 ) }
    dend_27 { pt3dadd( -13.5444, -93.6311, -52.7052, 0.88 ) }
    dend_27 { pt3dadd( -13.4312, -94.4332, -53.0496, 1.18 ) }
    dend_27 { pt3dadd( -13.3401, -95.5901, -53.5638, 0.52 ) }
    dend_27 { pt3dadd( -13.3402, -96.3548, -53.9, 0.44 ) }
    dend_27 { pt3dadd( -13.4081, -97.4865, -54.355, 0.44 ) }
    dend_27 { pt3dadd( -13.5137, -98.4908, -54.7294, 0.74 ) }
    dend_27 { pt3dadd( -13.5911, -99.0574, -54.9352, 0.74 ) }
    dend_27 { pt3dadd( -13.8756, -100.869, -55.6264, 0.59 ) }
    dend_27 { pt3dadd( -14.1143, -102.196, -56.125, 0.66 ) }
    dend_27 { pt3dadd( -14.2505, -102.947, -56.4273, 1.18 ) }
    dend_27 { pt3dadd( -14.4484, -104.098, -56.8907, 1.33 ) }
    dend_27 { pt3dadd( -14.5993, -105.231, -57.3063, 1.11 ) }
    dend_27 { pt3dadd( -14.6047, -105.324, -57.3412, 1.11 ) }
    dend_27 { pt3dadd( -14.5812, -106.382, -57.7067, 0.96 ) }
    dend_27 { pt3dadd( -14.4567, -107.763, -58.1885, 0.66 ) }
    dend_27 { pt3dadd( -14.3359, -108.815, -58.595, 0.37 ) }
    dend_27 { pt3dadd( -14.2539, -109.833, -59.0149, 0.29 ) }
    dend_27 { pt3dadd( -14.2003, -111.62, -59.8359, 1.03 ) }
    dend_27 { pt3dadd( -14.2095, -112.508, -60.2671, 1.33 ) }
    dend_27 { pt3dadd( -14.2309, -113.221, -60.6229, 1.47 ) }
    dend_27 { pt3dadd( -14.3138, -115.055, -61.4737, 0.37 ) }
    dend_27 { pt3dadd( -14.3525, -116.17, -62.0068, 0.37 ) }
    dend_27 { pt3dadd( -14.4177, -117.719, -62.7062, 0.29 ) }
    dend_27 { pt3dadd( -14.4343, -118.301, -62.9322, 0.44 ) }
    dend_27 { pt3dadd( -14.4465, -119.185, -63.2336, 0.59 ) }
    dend_27 { pt3dadd( -14.445, -120.581, -63.6427, 0.59 ) }
    dend_27 { pt3dadd( -14.3995, -122.354, -64.0967, 0.74 ) }
    dend_27 { pt3dadd( -14.3271, -123.662, -64.4055, 0.59 ) }
    dend_27 { pt3dadd( -14.2782, -124.842, -64.6521, 0.44 ) }
    dend_27 { pt3dadd( -14.2219, -126.429, -64.9944, 0.44 ) }
    dend_27 { pt3dadd( -14.2117, -126.531, -65.0467, 0.44 ) }
    dend_27 { pt3dadd( -14.018, -127.532, -65.8245, 0.96 ) }
    dend_27 { pt3dadd( -13.8476, -128.106, -66.3748, 1.4 ) }
    dend_27 { pt3dadd( -13.8224, -128.174, -66.4448, 1.4 ) }
    dend_27 { pt3dadd( -13.5614, -128.808, -67.1121, 1.18 ) }
    dend_27 { pt3dadd( -11.9531, -132.76, -71.2261, 0.59 ) }
    dend_27 { pt3dadd( -11.6327, -133.594, -72.0622, 0.88 ) }
    dend_27 { pt3dadd( -11.3584, -134.379, -72.8202, 1.03 ) }
    dend_27 { pt3dadd( -11.0949, -135.249, -73.6265, 0.52 ) }
    dend_27 { pt3dadd( -10.8677, -136.265, -74.4538, 0.37 ) }
    dend_27 { pt3dadd( -10.7434, -137.308, -75.124, 0.37 ) }
    dend_27 { pt3dadd( -10.7414, -137.389, -75.1481, 0.37 ) }
    dend_27 { pt3dadd( -10.7344, -137.754, -75.2518, 1.03 ) }
    dend_27 { pt3dadd( -10.7129, -138.536, -75.4429, 1.03 ) }
    dend_27 { pt3dadd( -10.6102, -139.741, -75.7234, 0.44 ) }
    dend_27 { pt3dadd( -10.3445, -141.019, -76.1008, 0.37 ) }
    dend_27 { pt3dadd( -9.9312, -142.264, -76.5215, 0.88 ) }
    dend_27 { pt3dadd( -9.64388, -142.994, -76.8356, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_27 { pt3dadd( -9.4199, -143.536, -77.1026, 1.25 ) }
    dend_27 { pt3dadd( -8.99004, -144.567, -77.6908, 0.81 ) }
    dend_27 { pt3dadd( -8.25872, -146.478, -78.8652, 0.29 ) }
    dend_27 { pt3dadd( -8.10334, -146.983, -79.173, 0.29 ) }
    dend_27 { pt3dadd( -7.83446, -148.166, -79.9159, 0.37 ) }
    dend_27 { pt3dadd( -7.65095, -149.252, -80.6246, 0.37 ) }
    dend_27 { pt3dadd( -7.51882, -150.365, -81.3229, 0.66 ) }
    dend_27 { pt3dadd( -7.46199, -151.298, -81.8422, 1.25 ) }
    dend_27 { pt3dadd( -7.40757, -152.271, -82.2832, 1.4 ) }
    dend_27 { pt3dadd( -7.24474, -154.008, -82.9882, 0.81 ) }
    dend_27 { pt3dadd( -7.0037, -155.59, -83.5457, 0.59 ) }
    dend_27 { pt3dadd( -6.82262, -156.467, -83.8263, 0.29 ) }
    dend_27 { pt3dadd( -6.54424, -157.598, -84.1438, 0.29 ) }
    dend_27 { pt3dadd( -6.16873, -158.896, -84.7108, 0.29 ) }
    dend_27 { pt3dadd( -6.02689, -159.34, -84.978, 1.03 ) }
    dend_27 { pt3dadd( -5.99986, -159.417, -85.0331, 1.03 ) }
    dend_27 { pt3dadd( -5.74338, -160.112, -85.5822, 1.4 ) }
    dend_27 { pt3dadd( -5.38862, -161.118, -86.4345, 1.4 ) }
    dend_27 { pt3dadd( -4.35915, -164.147, -89.0633, 0.52 ) }
    dend_27 { pt3dadd( -3.99795, -165.384, -90.0946, 0.74 ) }
    dend_27 { pt3dadd( -3.96669, -165.514, -90.1944, 0.74 ) }
    dend_27 { pt3dadd( -3.76364, -166.5, -90.8931, 0.52 ) }
    dend_27 { pt3dadd( -3.6087, -167.506, -91.5298, 0.52 ) }
    dend_27 { pt3dadd( -3.54394, -168.361, -91.9345, 0.74 ) }
    dend_27 { pt3dadd( -3.51872, -169.563, -92.3438, 0.66 ) }
    dend_27 { pt3dadd( -3.45459, -171.5, -93.2386, 0.59 ) }
    dend_27 { pt3dadd( -3.4479, -171.571, -93.2825, 0.59 ) }
    dend_27 { pt3dadd( -3.32583, -172.4, -93.8745, 0.52 ) }
    dend_27 { pt3dadd( -3.15341, -173.292, -94.5357, 1.18 ) }
    dend_27 { pt3dadd( -2.81945, -174.799, -95.6506, 1.62 ) }
    dend_27 { pt3dadd( -2.21282, -177.054, -97.3574, 1.18 ) }
    dend_27 { pt3dadd( -1.75942, -178.574, -98.4514, 0.52 ) }
    dend_27 { pt3dadd( -1.4029, -179.728, -99.2279, 0.37 ) }
    dend_27 { pt3dadd( -1.05676, -180.823, -99.893, 0.74 ) }
    dend_27 { pt3dadd( -0.911313, -181.341, -100.161, 1.11 ) }
    dend_27 { pt3dadd( -0.633662, -182.925, -100.736, 0.88 ) }
    dend_27 { pt3dadd( -0.629326, -183.846, -100.953, 0.81 ) }
    dend_27 { pt3dadd( -0.835918, -185.027, -101.213, 0.44 ) }
    dend_27 { pt3dadd( -1.13909, -185.931, -101.435, 0.59 ) }
    dend_27 { pt3dadd( -1.57901, -186.882, -101.733, 0.59 ) }
    dend_27 { pt3dadd( -2.16913, -187.963, -102.105, 0.37 ) }
    dend_27 { pt3dadd( -2.94344, -189.265, -102.544, 0.29 ) }
    dend_27 { pt3dadd( -3.45463, -190.124, -102.86, 0.81 ) }
    dend_27 { pt3dadd( -3.88018, -190.905, -103.173, 1.11 ) }
    dend_27 { pt3dadd( -4.59003, -192.362, -103.767, 1.4 ) }
    dend_27 { pt3dadd( -4.89817, -193.072, -104.046, 1.33 ) }
    dend_27 { pt3dadd( -5.33784, -194.239, -104.454, 0.81 ) }
    dend_27 { pt3dadd( -5.71967, -195.37, -104.769, 0.52 ) }
    dend_27 { pt3dadd( -6.2019, -196.878, -105.084, 0.44 ) }
    dend_27 { pt3dadd( -6.53868, -198.013, -105.26, 0.37 ) }
    dend_27 { pt3dadd( -6.88778, -199.335, -105.324, 0.37 ) }
    dend_27 { pt3dadd( -7.16791, -200.585, -105.318, 0.66 ) }
    dend_27 { pt3dadd( -7.39463, -201.905, -105.242, 0.96 ) }
    dend_27 { pt3dadd( -7.50608, -202.927, -105.129, 1.03 ) }
    dend_27 { pt3dadd( -7.55534, -203.952, -104.966, 1.25 ) }
    dend_27 { pt3dadd( -7.44871, -205.832, -104.649, 0.81 ) }
    dend_27 { pt3dadd( -7.34304, -206.641, -104.519, 0.52 ) }
    dend_27 { pt3dadd( -7.16507, -207.76, -104.395, 0.52 ) }
    dend_27 { pt3dadd( -7.04227, -208.588, -104.349, 0.29 ) }
    dend_27 { pt3dadd( -6.93294, -209.799, -104.349, 0.29 ) }
    dend_27 { pt3dadd( -6.9086, -211.456, -104.501, 0.29 ) }
    dend_27 { pt3dadd( -7.03596, -212.508, -104.711, 0.81 ) }
    dend_27 { pt3dadd( -7.3125, -213.586, -104.977, 1.11 ) }
    dend_27 { pt3dadd( -7.65283, -214.461, -105.232, 1.11 ) }
    dend_27 { pt3dadd( -8.09063, -215.325, -105.51, 0.74 ) }
    dend_27 { pt3dadd( -8.65421, -216.205, -105.825, 0.37 ) }
    dend_27 { pt3dadd( -9.49357, -217.378, -106.306, 0.29 ) }
    dend_27 { pt3dadd( -9.74941, -217.781, -106.467, 0.74 ) }
    dend_27 { pt3dadd( -9.79809, -217.88, -106.502, 0.74 ) }
    dend_27 { pt3dadd( -10.0101, -218.543, -106.771, 0.96 ) }
    dend_27 { pt3dadd( -10.0426, -218.709, -106.839, 0.96 ) }
    dend_27 { pt3dadd( -10.2366, -220.216, -107.416, 0.29 ) }
    dend_27 { pt3dadd( -10.373, -221.187, -107.782, 0.29 ) }
    dend_27 { pt3dadd( -10.4999, -221.865, -108.021, 0.81 ) }
    dend_27 { pt3dadd( -10.8637, -223.293, -108.489, 1.03 ) }
    dend_27 { pt3dadd( -11.1584, -224.138, -108.742, 0.81 ) }
    dend_27 { pt3dadd( -11.6605, -225.223, -109.059, 0.29 ) }
    dend_27 { pt3dadd( -12.3381, -226.338, -109.369, 0.29 ) }
    dend_27 { pt3dadd( -12.7666, -226.906, -109.533, 0.44 ) }
    dend_27 { pt3dadd( -13.3159, -227.574, -109.718, 0.44 ) }
    dend_27 { pt3dadd( -14.0303, -228.334, -109.9, 0.66 ) }
    dend_27 { pt3dadd( -14.8638, -229.104, -110.118, 0.96 ) }
    dend_27 { pt3dadd( -15.3106, -229.457, -110.243, 1.4 ) }
    dend_27 { pt3dadd( -16.5463, -230.345, -110.631, 1.69 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 84/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 5.11934, 76.892, 4.26363, 1.11 ) }
    dend_20 { pt3dadd( 4.77986, 78.5323, 4.38875, 1.11 ) }
    dend_20 { pt3dadd( 4.66803, 79.0068, 4.4173, 0.96 ) }
    dend_20 { pt3dadd( 4.49125, 79.6212, 4.44442, 0.96 ) }
    dend_20 { pt3dadd( 4.27451, 80.3072, 4.46935, 0.96 ) }
    dend_20 { pt3dadd( 3.99274, 81.1081, 4.49499, 0.96 ) }
    dend_20 { pt3dadd( 3.53762, 82.3185, 4.53081, 0.96 ) }
    dend_20 { pt3dadd( 3.50767, 82.3793, 4.53014, 0.96 ) }
    dend_20 { pt3dadd( 3.00225, 83.3103, 4.52127, 1.11 ) }
    dend_20 { pt3dadd( 2.95072, 83.3979, 4.52087, 1.11 ) }
    dend_20 { pt3dadd( 2.5087, 84.1082, 4.52083, 1.11 ) }
    dend_20 { pt3dadd( 2.466, 84.1721, 4.52138, 1.11 ) }
    dend_20 { pt3dadd( 1.98644, 84.872, 4.53175, 1.33 ) }
    dend_20 { pt3dadd( 1.55024, 85.5206, 4.5398, 1.18 ) }
    dend_20 { pt3dadd( 1.10146, 86.2498, 4.54567, 0.96 ) }
    dend_20 { pt3dadd( 1.06496, 86.3199, 4.54573, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( 0.795333, 86.9208, 4.54523, 0.88 ) }
    dend_20 { pt3dadd( 0.495323, 87.7223, 4.54119, 0.88 ) }
    dend_20 { pt3dadd( 0.477583, 87.7874, 4.5406, 0.88 ) }
    dend_20 { pt3dadd( 0.285162, 88.8233, 4.52651, 0.88 ) }
    dend_20 { pt3dadd( 0.16879, 89.8421, 4.50779, 1.11 ) }
    dend_20 { pt3dadd( 0.162915, 89.9397, 4.50591, 1.11 ) }
    dend_20 { pt3dadd( 0.158059, 90.7886, 4.48829, 1.11 ) }
    dend_20 { pt3dadd( 0.181214, 91.5102, 4.47541, 1.33 ) }
    dend_20 { pt3dadd( 0.207572, 91.9596, 4.46892, 1.33 ) }
    dend_20 { pt3dadd( 0.299917, 92.7675, 4.4282, 1.18 ) }
    dend_20 { pt3dadd( 0.423, 93.5594, 4.36395, 1.18 ) }
    dend_20 { pt3dadd( 0.44253, 93.6517, 4.3494, 1.18 ) }
    dend_20 { pt3dadd( 0.651848, 94.4258, 4.17812, 1.11 ) }
    dend_20 { pt3dadd( 0.90045, 95.1989, 3.96921, 1.11 ) }
    dend_20 { pt3dadd( 1.18833, 95.9691, 3.73027, 1.03 ) }
    dend_20 { pt3dadd( 1.4605, 96.666, 3.49241, 0.88 ) }
    dend_20 { pt3dadd( 1.84865, 97.7391, 3.10754, 0.88 ) }
    dend_20 { pt3dadd( 1.88463, 97.8666, 3.06308, 0.88 ) }
    dend_20 { pt3dadd( 2.07033, 98.7672, 2.8185, 0.88 ) }
    dend_20 { pt3dadd( 2.07718, 98.8343, 2.80757, 0.88 ) }
    dend_20 { pt3dadd( 2.04358, 99.566, 2.7913, 0.88 ) }
    dend_20 { pt3dadd( 1.88259, 100.522, 2.86233, 0.88 ) }
    dend_20 { pt3dadd( 1.69213, 101.205, 2.96414, 0.88 ) }
    dend_20 { pt3dadd( 1.3237, 102.253, 3.11908, 0.96 ) }
    dend_20 { pt3dadd( 1.23129, 102.452, 3.14754, 0.96 ) }
    dend_20 { pt3dadd( 0.931634, 103.032, 3.21956, 1.47 ) }
    dend_20 { pt3dadd( 0.637418, 103.577, 3.28764, 1.62 ) }
    dend_20 { pt3dadd( 0.226186, 104.297, 3.38933, 1.11 ) }
    dend_20 { pt3dadd( -0.182814, 105.011, 3.47788, 1.11 ) }
    dend_20 { pt3dadd( -0.697616, 105.912, 3.56026, 1.11 ) }
    dend_20 { pt3dadd( -1.1078, 106.694, 3.64083, 0.96 ) }
    dend_20 { pt3dadd( -1.45824, 107.435, 3.72678, 0.96 ) }
    dend_20 { pt3dadd( -1.866, 108.325, 3.8343, 0.96 ) }
    dend_20 { pt3dadd( -1.89499, 108.399, 3.84245, 0.96 ) }
    dend_20 { pt3dadd( -2.07497, 108.939, 3.87625, 0.96 ) }
    dend_20 { pt3dadd( -2.3453, 109.914, 3.83488, 1.18 ) }
    dend_20 { pt3dadd( -2.36857, 110.007, 3.82285, 1.18 ) }
    dend_20 { pt3dadd( -2.65907, 111.186, 3.602, 1.18 ) }
    dend_20 { pt3dadd( -2.95032, 112.399, 3.33562, 1.03 ) }
    dend_20 { pt3dadd( -3.16332, 113.265, 3.14467, 0.88 ) }
    dend_20 { pt3dadd( -3.45679, 114.438, 2.87718, 1.03 ) }
    dend_20 { pt3dadd( -3.66253, 115.25, 2.69246, 1.03 ) }
    dend_20 { pt3dadd( -3.77003, 115.709, 2.60134, 1.03 ) }
    dend_20 { pt3dadd( -3.79076, 115.831, 2.58238, 1.03 ) }
    dend_20 { pt3dadd( -3.90691, 116.598, 2.51328, 1.03 ) }
    dend_20 { pt3dadd( -3.92733, 116.743, 2.51075, 1.03 ) }
    dend_20 { pt3dadd( -4.03795, 117.431, 2.57369, 1.03 ) }
    dend_20 { pt3dadd( -4.24674, 118.605, 2.71817, 1.18 ) }
    dend_20 { pt3dadd( -4.43975, 119.643, 2.8897, 1.18 ) }
    dend_20 { pt3dadd( -4.56346, 120.277, 3.01394, 1.18 ) }
    dend_20 { pt3dadd( -4.70305, 120.964, 3.169, 1.18 ) }
    dend_20 { pt3dadd( -5.00605, 122.395, 3.50845, 1.18 ) }
    dend_20 { pt3dadd( -5.21972, 123.404, 3.78059, 1.18 ) }
    dend_20 { pt3dadd( -5.43194, 124.436, 4.0772, 1.18 ) }
    dend_20 { pt3dadd( -5.44513, 124.503, 4.09519, 1.18 ) }
    dend_20 { pt3dadd( -5.56053, 125.105, 4.22682, 1.18 ) }
    dend_20 { pt3dadd( -5.76964, 126.203, 4.39585, 1.47 ) }
    dend_20 { pt3dadd( -5.90289, 126.957, 4.45907, 1.47 ) }
    dend_20 { pt3dadd( -6.03787, 127.705, 4.50286, 1.33 ) }
    dend_20 { pt3dadd( -6.23014, 128.83, 4.5382, 1.03 ) }
    dend_20 { pt3dadd( -6.50005, 130.379, 4.57436, 0.96 ) }
    dend_20 { pt3dadd( -6.72353, 131.65, 4.59204, 0.96 ) }
    dend_20 { pt3dadd( -6.88753, 132.554, 4.57769, 0.96 ) }
    dend_20 { pt3dadd( -7.03091, 133.315, 4.54135, 1.11 ) }
    dend_20 { pt3dadd( -7.11151, 133.761, 4.51502, 1.11 ) }
    dend_20 { pt3dadd( -7.25745, 134.672, 4.44603, 1.25 ) }
    dend_20 { pt3dadd( -7.31003, 135.083, 4.40985, 1.25 ) }
    dend_20 { pt3dadd( -7.44843, 136.118, 4.29837, 1.03 ) }
    dend_20 { pt3dadd( -7.47538, 136.274, 4.28018, 1.03 ) }
    dend_20 { pt3dadd( -7.56168, 136.747, 4.24219, 1.03 ) }
    dend_20 { pt3dadd( -7.65354, 137.22, 4.22338, 1.03 ) }
    dend_20 { pt3dadd( -7.7478, 137.785, 4.25338, 1.03 ) }
    dend_20 { pt3dadd( -7.8926, 138.712, 4.37713, 1.03 ) }
    dend_20 { pt3dadd( -7.98323, 139.399, 4.51851, 1.03 ) }
    dend_20 { pt3dadd( -8.06002, 140.036, 4.70927, 1.03 ) }
    dend_20 { pt3dadd( -8.07399, 140.161, 4.75582, 1.03 ) }
    dend_20 { pt3dadd( -8.1743, 141.137, 5.1666, 1.03 ) }
    dend_20 { pt3dadd( -8.18074, 141.198, 5.19507, 1.03 ) }
    dend_20 { pt3dadd( -8.31683, 142.27, 5.69498, 1.03 ) }
    dend_20 { pt3dadd( -8.4829, 143.379, 6.16298, 1.03 ) }
    dend_20 { pt3dadd( -8.499, 143.474, 6.19527, 1.03 ) }
    dend_20 { pt3dadd( -8.59658, 144.223, 6.39202, 1.03 ) }
    dend_20 { pt3dadd( -8.60195, 144.292, 6.40687, 1.03 ) }
    dend_20 { pt3dadd( -8.60926, 145.541, 6.64164, 1.03 ) }
    dend_20 { pt3dadd( -8.60023, 145.685, 6.66305, 1.03 ) }
    dend_20 { pt3dadd( -8.5216, 146.545, 6.75007, 1.25 ) }
    dend_20 { pt3dadd( -8.40545, 147.805, 6.87004, 1.25 ) }
    dend_20 { pt3dadd( -8.30074, 148.865, 6.96728, 1.25 ) }
    dend_20 { pt3dadd( -8.2345, 149.828, 7.0482, 0.88 ) }
    dend_20 { pt3dadd( -8.20979, 150.779, 7.10029, 0.74 ) }
    dend_20 { pt3dadd( -8.24537, 151.575, 7.10555, 1.18 ) }
    dend_20 { pt3dadd( -8.39303, 152.826, 7.05482, 1.4 ) }
    dend_20 { pt3dadd( -8.42352, 152.97, 7.04206, 1.4 ) }
    dend_20 { pt3dadd( -8.70721, 153.968, 6.90906, 1.4 ) }
    dend_20 { pt3dadd( -9.07913, 155.044, 6.75421, 1.18 ) }
    dend_20 { pt3dadd( -9.4435, 156.024, 6.60403, 1.03 ) }
    dend_20 { pt3dadd( -9.46747, 156.087, 6.59352, 1.03 ) }
    dend_20 { pt3dadd( -9.82472, 156.993, 6.42846, 1.03 ) }
    dend_20 { pt3dadd( -10.0066, 157.464, 6.34553, 0.88 ) }
    dend_20 { pt3dadd( -10.4859, 158.785, 6.13767, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_20 { pt3dadd( -10.5094, 158.851, 6.13226, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 1/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.11934, 76.892, 4.26363, 0.52 ) }
    dend_15 { pt3dadd( 4.80282, 77.8884, 3.40535, 0.52 ) }
    dend_15 { pt3dadd( 4.47174, 78.6168, 2.73584, 0.74 ) }
    dend_15 { pt3dadd( 4.12099, 79.1323, 2.17412, 0.74 ) }
    dend_15 { pt3dadd( 3.97663, 79.3074, 1.96482, 0.74 ) }
    dend_15 { pt3dadd( 3.71432, 79.5862, 1.49214, 0.74 ) }
    dend_15 { pt3dadd( 3.31042, 79.9755, 0.594369, 0.44 ) }
    dend_15 { pt3dadd( 3.08825, 80.1473, 0.0514846, 0.81 ) }
    dend_15 { pt3dadd( 2.70785, 80.4339, -0.967892, 0.81 ) }
    dend_15 { pt3dadd( 2.68942, 80.4503, -1.02844, 0.81 ) }
    dend_15 { pt3dadd( 2.07336, 81.1372, -3.24558, 1.03 ) }
    dend_15 { pt3dadd( 1.68949, 81.7126, -4.84227, 0.81 ) }
    dend_15 { pt3dadd( 1.58942, 81.9191, -5.31734, 0.81 ) }
    dend_15 { pt3dadd( 1.37104, 82.4342, -6.29594, 0.88 ) }
    dend_15 { pt3dadd( 1.0875, 83.0905, -7.34339, 0.81 ) }
    dend_15 { pt3dadd( 0.806966, 83.5853, -8.08554, 0.81 ) }
    dend_15 { pt3dadd( 0.312324, 84.2267, -8.97021, 0.59 ) }
    dend_15 { pt3dadd( 0.00601556, 84.499, -9.43492, 0.59 ) }
    dend_15 { pt3dadd( -0.537278, 84.7628, -10.2521, 0.88 ) }
    dend_15 { pt3dadd( -1.09087, 84.8905, -11.7836, 0.88 ) }
    dend_15 { pt3dadd( -1.43094, 84.8906, -13.23, 0.88 ) }
    dend_15 { pt3dadd( -1.56725, 84.8605, -14.0293, 1.25 ) }
    dend_15 { pt3dadd( -1.77962, 84.7706, -15.5735, 1.25 ) }
    dend_15 { pt3dadd( -1.99748, 84.654, -17.4747, 1.11 ) }
    dend_15 { pt3dadd( -2.53468, 84.3709, -23.76, 1.03 ) }
    dend_15 { pt3dadd( -2.63922, 84.33, -25.5713, 0.66 ) }
    dend_15 { pt3dadd( -2.64, 84.3322, -25.6441, 0.66 ) }
    dend_15 { pt3dadd( -2.59934, 84.4592, -27.07, 0.52 ) }
    dend_15 { pt3dadd( -2.5576, 84.5678, -27.7149, 0.52 ) }
    dend_15 { pt3dadd( -2.45237, 84.8453, -28.6743, 0.52 ) }
    dend_15 { pt3dadd( -2.43397, 84.8839, -28.7372, 0.52 ) }
    dend_15 { pt3dadd( -1.74312, 85.925, -30.2492, 1.25 ) }
    dend_15 { pt3dadd( -1.59028, 86.1582, -30.5949, 1.69 ) }
    dend_15 { pt3dadd( -1.55896, 86.2029, -30.6615, 1.69 ) }
    dend_15 { pt3dadd( -1.40742, 86.4441, -31.0315, 1.69 ) }
    dend_15 { pt3dadd( -0.924237, 87.5627, -32.833, 0.88 ) }
    dend_15 { pt3dadd( -0.733211, 88.7212, -34.5644, 0.59 ) }
    dend_15 { pt3dadd( -0.775364, 89.1456, -35.177, 0.81 ) }
    dend_15 { pt3dadd( -0.782762, 89.1924, -35.2491, 0.81 ) }
    dend_15 { pt3dadd( -0.839125, 89.6145, -35.9494, 1.11 ) }
    dend_15 { pt3dadd( -0.942233, 90.494, -37.4185, 1.11 ) }
    dend_15 { pt3dadd( -0.995521, 90.9869, -38.2007, 0.96 ) }
    dend_15 { pt3dadd( -1.01058, 91.9338, -39.7088, 0.88 ) }
    dend_15 { pt3dadd( -0.95479, 93.1157, -41.4646, 0.81 ) }
    dend_15 { pt3dadd( -0.812864, 94.1719, -42.9829, 0.52 ) }
    dend_15 { pt3dadd( -0.707714, 94.4882, -43.4803, 0.52 ) }
    dend_15 { pt3dadd( -0.494351, 94.8906, -44.1088, 0.59 ) }
    dend_15 { pt3dadd( -0.434768, 94.9715, -44.2307, 0.59 ) }
    dend_15 { pt3dadd( 0.0526294, 95.5264, -44.9838, 0.59 ) }
    dend_15 { pt3dadd( 0.916923, 96.4419, -46.1648, 0.81 ) }
    dend_15 { pt3dadd( 2.20242, 97.6548, -47.8027, 1.4 ) }
    dend_15 { pt3dadd( 2.66253, 98.0197, -48.3813, 1.62 ) }
    dend_15 { pt3dadd( 3.35232, 98.4575, -49.2003, 1.84 ) }
    dend_15 { pt3dadd( 3.39815, 98.4819, -49.252, 1.84 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 55/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 32.7138, 52.3098, 10.9318, 1.18 ) }
    dend_3 { pt3dadd( 32.1045, 53.9501, 12.0402, 1.18 ) }
    dend_3 { pt3dadd( 31.8769, 54.9783, 12.572, 0.96 ) }
    dend_3 { pt3dadd( 31.8742, 55.0595, 12.6017, 0.96 ) }
    dend_3 { pt3dadd( 32.0396, 56.1774, 12.9099, 0.74 ) }
    dend_3 { pt3dadd( 32.0607, 56.2579, 12.927, 0.74 ) }
    dend_3 { pt3dadd( 32.2842, 56.8724, 13.0347, 0.88 ) }
    dend_3 { pt3dadd( 32.7198, 57.7041, 13.1395, 0.88 ) }
    dend_3 { pt3dadd( 33.2128, 58.5447, 13.2787, 0.59 ) }
    dend_3 { pt3dadd( 33.6671, 59.3066, 13.5234, 0.52 ) }
    dend_3 { pt3dadd( 34.0191, 59.8794, 13.8003, 0.81 ) }
    dend_3 { pt3dadd( 34.4805, 60.6448, 14.2109, 0.52 ) }
    dend_3 { pt3dadd( 35.1895, 61.8541, 14.9886, 0.88 ) }
    dend_3 { pt3dadd( 35.2863, 62.0418, 15.1369, 0.88 ) }
    dend_3 { pt3dadd( 35.7343, 63.0754, 16.1555, 1.33 ) }
    dend_3 { pt3dadd( 35.7842, 63.2353, 16.3493, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 71/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 32.7138, 52.3098, 10.9318, 1.11 ) }
    dend_2 { pt3dadd( 34.8222, 51.5362, 8.59286, 1.11 ) }
    dend_2 { pt3dadd( 35.5585, 51.3268, 7.93706, 1.03 ) }
    dend_2 { pt3dadd( 36.4183, 51.0967, 7.26461, 0.88 ) }
    dend_2 { pt3dadd( 38.0301, 50.6727, 6.22335, 0.59 ) }
    dend_2 { pt3dadd( 38.9466, 50.4029, 5.67382, 0.81 ) }
    dend_2 { pt3dadd( 39.769, 50.1404, 5.1867, 0.81 ) }
    dend_2 { pt3dadd( 40.4833, 49.9204, 4.82794, 1.03 ) }
    dend_2 { pt3dadd( 40.786, 49.8558, 4.65461, 1.03 ) }
    dend_2 { pt3dadd( 41.8223, 49.6989, 3.91969, 1.03 ) }
    dend_2 { pt3dadd( 43.3191, 49.4108, 2.66791, 0.66 ) }
    dend_2 { pt3dadd( 44.4486, 49.1172, 1.56103, 0.81 ) }
    dend_2 { pt3dadd( 45.4866, 48.7439, 0.403536, 0.59 ) }
    dend_2 { pt3dadd( 46.4219, 48.3076, -0.777512, 0.96 ) }
    dend_2 { pt3dadd( 47.683, 47.5777, -2.51647, 0.59 ) }
    dend_2 { pt3dadd( 48.5198, 46.9786, -3.78667, 0.59 ) }
    dend_2 { pt3dadd( 49.3086, 46.3185, -4.96569, 0.96 ) }
    dend_2 { pt3dadd( 50.0262, 45.663, -5.92762, 0.81 ) }
    dend_2 { pt3dadd( 50.7538, 44.9758, -6.72808, 0.81 ) }
    dend_2 { pt3dadd( 51.2178, 44.5727, -7.10323, 0.96 ) }
    dend_2 { pt3dadd( 52.3011, 43.8663, -7.73172, 0.37 ) }
    dend_2 { pt3dadd( 53.3311, 43.4599, -8.20531, 0.37 ) }
    dend_2 { pt3dadd( 54.5882, 43.1986, -8.67523, 0.44 ) }
    dend_2 { pt3dadd( 55.4312, 43.1394, -8.96657, 0.81 ) }
    dend_2 { pt3dadd( 56.4184, 43.142, -9.29707, 1.03 ) }
    dend_2 { pt3dadd( 57.8752, 43.1505, -9.80633, 0.52 ) }
    dend_2 { pt3dadd( 58.3955, 43.1142, -10.0144, 0.44 ) }
    dend_2 { pt3dadd( 58.4627, 43.0986, -10.0513, 0.44 ) }
    dend_2 { pt3dadd( 59.8007, 42.4598, -10.908, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 60.2597, 42.1516, -11.2184, 0.88 ) }
    dend_2 { pt3dadd( 61.0589, 41.485, -11.7212, 1.03 ) }
    dend_2 { pt3dadd( 62.123, 40.5199, -12.2455, 1.03 ) }
    dend_2 { pt3dadd( 63.0908, 39.6616, -12.6347, 0.96 ) }
    dend_2 { pt3dadd( 64.1166, 38.8575, -12.9286, 0.52 ) }
    dend_2 { pt3dadd( 64.1789, 38.8133, -12.939, 0.52 ) }
    dend_2 { pt3dadd( 64.9549, 38.3879, -12.9894, 0.59 ) }
    dend_2 { pt3dadd( 66.0081, 37.9945, -12.9245, 0.59 ) }
    dend_2 { pt3dadd( 66.7786, 37.7986, -12.7858, 0.29 ) }
    dend_2 { pt3dadd( 67.9172, 37.5804, -12.5157, 0.29 ) }
    dend_2 { pt3dadd( 67.99, 37.5672, -12.4985, 0.29 ) }
    dend_2 { pt3dadd( 68.8926, 37.3559, -12.2944, 0.66 ) }
    dend_2 { pt3dadd( 69.6203, 37.1446, -12.1384, 0.81 ) }
    dend_2 { pt3dadd( 70.5231, 36.7642, -11.9489, 0.88 ) }
    dend_2 { pt3dadd( 70.6528, 36.6864, -11.9128, 0.88 ) }
    dend_2 { pt3dadd( 71.3596, 36.1524, -11.6913, 1.03 ) }
    dend_2 { pt3dadd( 71.9275, 35.6986, -11.5188, 1.03 ) }
    dend_2 { pt3dadd( 71.9857, 35.6502, -11.503, 1.03 ) }
    dend_2 { pt3dadd( 72.7281, 35.0208, -11.3044, 0.81 ) }
    dend_2 { pt3dadd( 73.952, 34.0091, -10.9954, 0.37 ) }
    dend_2 { pt3dadd( 74.621, 33.4959, -10.8471, 0.66 ) }
    dend_2 { pt3dadd( 75.1847, 33.0877, -10.741, 0.66 ) }
    dend_2 { pt3dadd( 75.9952, 32.5334, -10.6545, 0.52 ) }
    dend_2 { pt3dadd( 76.666, 32.1099, -10.6533, 0.52 ) }
    dend_2 { pt3dadd( 77.636, 31.5214, -10.7439, 0.96 ) }
    dend_2 { pt3dadd( 78.3546, 31.0612, -10.8835, 1.25 ) }
    dend_2 { pt3dadd( 79.2341, 30.4667, -11.0831, 1.03 ) }
    dend_2 { pt3dadd( 80.1795, 29.7884, -11.3242, 0.81 ) }
    dend_2 { pt3dadd( 81.1891, 29.0757, -11.6011, 0.66 ) }
    dend_2 { pt3dadd( 81.7069, 28.7411, -11.7377, 0.74 ) }
    dend_2 { pt3dadd( 82.3113, 28.3806, -11.8799, 0.74 ) }
    dend_2 { pt3dadd( 83.2115, 27.8868, -12.0287, 0.37 ) }
    dend_2 { pt3dadd( 83.2698, 27.8583, -12.0326, 0.37 ) }
    dend_2 { pt3dadd( 84.0765, 27.5023, -12.0097, 0.29 ) }
    dend_2 { pt3dadd( 85.2392, 27.0611, -12.0452, 0.66 ) }
    dend_2 { pt3dadd( 86.0815, 26.7651, -12.1315, 1.03 ) }
    dend_2 { pt3dadd( 86.9674, 26.4517, -12.2662, 0.74 ) }
    dend_2 { pt3dadd( 88.0063, 26.055, -12.4684, 0.74 ) }
    dend_2 { pt3dadd( 88.65, 25.7685, -12.6112, 0.96 ) }
    dend_2 { pt3dadd( 90.1838, 24.953, -12.9938, 1.18 ) }
    dend_2 { pt3dadd( 90.7734, 24.6121, -13.1555, 0.96 ) }
    dend_2 { pt3dadd( 91.5319, 24.1569, -13.3615, 0.44 ) }
    dend_2 { pt3dadd( 91.6049, 24.1124, -13.3809, 0.44 ) }
    dend_2 { pt3dadd( 92.5126, 23.5361, -13.6318, 0.66 ) }
    dend_2 { pt3dadd( 93.1098, 23.1556, -13.8122, 0.81 ) }
    dend_2 { pt3dadd( 93.3993, 22.9753, -13.9231, 0.81 ) }
    dend_2 { pt3dadd( 94.0855, 22.5797, -14.2469, 0.66 ) }
    dend_2 { pt3dadd( 94.3253, 22.4528, -14.3647, 0.66 ) }
    dend_2 { pt3dadd( 95.2151, 22.0093, -14.7511, 0.66 ) }
    dend_2 { pt3dadd( 96.2384, 21.5373, -15.1455, 0.44 ) }
    dend_2 { pt3dadd( 97.8108, 20.7995, -15.6684, 0.37 ) }
    dend_2 { pt3dadd( 98.6327, 20.3817, -15.9102, 0.88 ) }
    dend_2 { pt3dadd( 99.8063, 19.7416, -16.1543, 0.88 ) }
    dend_2 { pt3dadd( 100.753, 19.2237, -16.2591, 1.03 ) }
    dend_2 { pt3dadd( 101.506, 18.8189, -16.2584, 1.03 ) }
    dend_2 { pt3dadd( 102.218, 18.4663, -16.1894, 0.74 ) }
    dend_2 { pt3dadd( 103.096, 18.0725, -16.0423, 0.52 ) }
    dend_2 { pt3dadd( 104.213, 17.6121, -15.8634, 0.52 ) }
    dend_2 { pt3dadd( 105.161, 17.2248, -15.727, 0.29 ) }
    dend_2 { pt3dadd( 105.243, 17.1903, -15.7218, 0.29 ) }
    dend_2 { pt3dadd( 105.989, 16.8178, -15.706, 0.29 ) }
    dend_2 { pt3dadd( 106.629, 16.422, -15.7444, 0.59 ) }
    dend_2 { pt3dadd( 106.723, 16.3513, -15.7576, 0.59 ) }
    dend_2 { pt3dadd( 107.405, 15.6772, -15.961, 0.88 ) }
    dend_2 { pt3dadd( 108.03, 14.8865, -16.1993, 0.74 ) }
    dend_2 { pt3dadd( 108.593, 14.0275, -16.5175, 0.44 ) }
    dend_2 { pt3dadd( 109.003, 13.2785, -16.8323, 0.29 ) }
    dend_2 { pt3dadd( 109.203, 12.8518, -17.0303, 0.59 ) }
    dend_2 { pt3dadd( 109.454, 12.188, -17.3593, 0.44 ) }
    dend_2 { pt3dadd( 109.611, 11.6166, -17.6685, 0.44 ) }
    dend_2 { pt3dadd( 109.786, 10.5103, -18.2578, 0.81 ) }
    dend_2 { pt3dadd( 109.789, 10.4405, -18.2945, 0.81 ) }
    dend_2 { pt3dadd( 109.759, 9.7653, -18.5943, 1.03 ) }
    dend_2 { pt3dadd( 109.692, 8.94297, -18.9092, 0.88 ) }
    dend_2 { pt3dadd( 109.686, 8.86843, -18.933, 0.88 ) }
    dend_2 { pt3dadd( 109.637, 7.80554, -19.2117, 0.59 ) }
    dend_2 { pt3dadd( 109.636, 7.04469, -19.3571, 0.59 ) }
    dend_2 { pt3dadd( 109.686, 6.1876, -19.4963, 0.88 ) }
    dend_2 { pt3dadd( 109.712, 5.95071, -19.529, 0.88 ) }
    dend_2 { pt3dadd( 109.927, 4.78696, -19.6447, 0.37 ) }
    dend_2 { pt3dadd( 110.106, 4.0895, -19.7029, 0.74 ) }
    dend_2 { pt3dadd( 110.323, 3.42132, -19.7467, 0.96 ) }
    dend_2 { pt3dadd( 110.639, 2.49751, -19.8426, 0.96 ) }
    dend_2 { pt3dadd( 110.664, 2.42394, -19.8519, 0.96 ) }
    dend_2 { pt3dadd( 110.949, 1.63596, -19.9941, 1.25 ) }
    dend_2 { pt3dadd( 111.397, 0.578751, -20.2223, 0.44 ) }
    dend_2 { pt3dadd( 111.728, -0.0600972, -20.4179, 0.37 ) }
    dend_2 { pt3dadd( 112.288, -0.983654, -20.7592, 0.96 ) }
    dend_2 { pt3dadd( 112.823, -1.75522, -21.0716, 0.96 ) }
    dend_2 { pt3dadd( 113.677, -2.8278, -21.5597, 0.74 ) }
    dend_2 { pt3dadd( 114.397, -3.62494, -21.9918, 0.74 ) }
    dend_2 { pt3dadd( 115.334, -4.54831, -22.5393, 0.29 ) }
    dend_2 { pt3dadd( 115.814, -5.00044, -22.7857, 0.52 ) }
    dend_2 { pt3dadd( 116.549, -5.70818, -23.1123, 0.88 ) }
    dend_2 { pt3dadd( 117.171, -6.33372, -23.3601, 1.03 ) }
    dend_2 { pt3dadd( 118.21, -7.4835, -23.7067, 0.29 ) }
    dend_2 { pt3dadd( 118.633, -8.01653, -23.7788, 0.88 ) }
    dend_2 { pt3dadd( 119.395, -9.04521, -23.6667, 0.81 ) }
    dend_2 { pt3dadd( 119.828, -9.61685, -23.4451, 0.96 ) }
    dend_2 { pt3dadd( 120.31, -10.2108, -23.0298, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_2 { pt3dadd( 120.357, -10.266, -22.9765, 0.59 ) }
    dend_2 { pt3dadd( 121.315, -11.3109, -21.7496, 0.52 ) }
    dend_2 { pt3dadd( 121.862, -11.8972, -21.0759, 0.52 ) }
    dend_2 { pt3dadd( 122.501, -12.5887, -20.3841, 0.88 ) }
    dend_2 { pt3dadd( 122.544, -12.6386, -20.3438, 0.88 ) }
    dend_2 { pt3dadd( 122.777, -12.9395, -20.1441, 1.03 ) }
    dend_2 { pt3dadd( 123.265, -13.6644, -19.7725, 1.03 ) }
    dend_2 { pt3dadd( 123.707, -14.4896, -19.4697, 0.44 ) }
    dend_2 { pt3dadd( 124.108, -15.4353, -19.1657, 0.44 ) }
    dend_2 { pt3dadd( 124.451, -16.3495, -18.8952, 0.44 ) }
    dend_2 { pt3dadd( 124.805, -17.2806, -18.6036, 0.52 ) }
    dend_2 { pt3dadd( 125.073, -17.9572, -18.3854, 0.44 ) }
    dend_2 { pt3dadd( 125.491, -18.9482, -18.0642, 0.44 ) }
    dend_2 { pt3dadd( 125.791, -19.6201, -17.8605, 0.81 ) }
    dend_2 { pt3dadd( 126.133, -20.3351, -17.6835, 0.81 ) }
    dend_2 { pt3dadd( 126.588, -21.1894, -17.4948, 0.37 ) }
    dend_2 { pt3dadd( 127.067, -22.0339, -17.3515, 0.81 ) }
    dend_2 { pt3dadd( 127.39, -22.5706, -17.2684, 0.88 ) }
    dend_2 { pt3dadd( 127.638, -22.9725, -17.2172, 0.88 ) }
    dend_2 { pt3dadd( 128.053, -23.6658, -17.1192, 0.66 ) }
    dend_2 { pt3dadd( 128.67, -24.7284, -16.9609, 0.44 ) }
    dend_2 { pt3dadd( 129.214, -25.6194, -16.8274, 0.29 ) }
    dend_2 { pt3dadd( 129.677, -26.2867, -16.7645, 0.59 ) }
    dend_2 { pt3dadd( 130.144, -26.9055, -16.7417, 0.74 ) }
    dend_2 { pt3dadd( 130.247, -27.0375, -16.7446, 0.74 ) }
    dend_2 { pt3dadd( 130.734, -27.6642, -16.8352, 0.59 ) }
    dend_2 { pt3dadd( 131.432, -28.6065, -17.1134, 0.44 ) }
    dend_2 { pt3dadd( 132.15, -29.6448, -17.4917, 0.44 ) }
    dend_2 { pt3dadd( 132.472, -30.1733, -17.7017, 0.44 ) }
    dend_2 { pt3dadd( 132.864, -30.9088, -17.9957, 0.74 ) }
    dend_2 { pt3dadd( 133.335, -31.913, -18.3921, 0.74 ) }
    dend_2 { pt3dadd( 133.772, -32.9895, -18.8076, 0.29 ) }
    dend_2 { pt3dadd( 133.939, -33.4483, -18.9828, 0.96 ) }
    dend_2 { pt3dadd( 134.126, -33.9557, -19.1568, 0.96 ) }
    dend_2 { pt3dadd( 134.428, -34.6741, -19.3986, 0.81 ) }
    dend_2 { pt3dadd( 134.463, -34.7443, -19.4188, 0.81 ) }
    dend_2 { pt3dadd( 134.779, -35.2913, -19.5168, 0.96 ) }
    dend_2 { pt3dadd( 135.291, -36.0792, -19.6471, 0.52 ) }
    dend_2 { pt3dadd( 135.67, -36.6262, -19.7436, 0.52 ) }
    dend_2 { pt3dadd( 135.707, -36.6805, -19.7529, 0.52 ) }
    dend_2 { pt3dadd( 136.185, -37.4382, -19.9144, 0.44 ) }
    dend_2 { pt3dadd( 136.71, -38.3407, -20.1305, 0.59 ) }
    dend_2 { pt3dadd( 137.441, -39.6814, -20.4606, 0.29 ) }
    dend_2 { pt3dadd( 137.695, -40.1654, -20.5792, 0.96 ) }
    dend_2 { pt3dadd( 138.099, -40.9702, -20.7818, 1.33 ) }
    dend_2 { pt3dadd( 138.758, -42.3354, -21.1183, 0.29 ) }
    dend_2 { pt3dadd( 139.341, -43.5614, -21.4069, 0.29 ) }
    dend_2 { pt3dadd( 139.67, -44.2574, -21.5577, 0.88 ) }
    dend_2 { pt3dadd( 139.703, -44.3308, -21.5682, 0.88 ) }
    dend_2 { pt3dadd( 140.06, -45.1659, -21.6266, 0.88 ) }
    dend_2 { pt3dadd( 140.572, -46.4678, -21.6059, 0.29 ) }
    dend_2 { pt3dadd( 140.93, -47.4604, -21.4926, 0.29 ) }
    dend_2 { pt3dadd( 141.028, -47.776, -21.4332, 0.66 ) }
    dend_2 { pt3dadd( 141.326, -48.9125, -21.1847, 0.66 ) }
    dend_2 { pt3dadd( 141.528, -49.7474, -20.9829, 0.66 ) }
    dend_2 { pt3dadd( 141.704, -50.5097, -20.7831, 0.96 ) }
    dend_2 { pt3dadd( 141.851, -51.2268, -20.6038, 0.74 ) }
    dend_2 { pt3dadd( 142.004, -52.0386, -20.3998, 0.52 ) }
    dend_2 { pt3dadd( 142.194, -53.0579, -20.1242, 0.44 ) }
    dend_2 { pt3dadd( 142.248, -53.3076, -20.0587, 0.44 ) }
    dend_2 { pt3dadd( 142.51, -54.3515, -19.8183, 0.37 ) }
    dend_2 { pt3dadd( 142.862, -55.5936, -19.5645, 0.37 ) }
    dend_2 { pt3dadd( 143.254, -56.9137, -19.3276, 0.74 ) }
    dend_2 { pt3dadd( 143.639, -57.9951, -19.2177, 0.29 ) }
    dend_2 { pt3dadd( 144.121, -59.0311, -19.1719, 0.29 ) }
    dend_2 { pt3dadd( 144.721, -60.0925, -19.2272, 0.74 ) }
    dend_2 { pt3dadd( 145.028, -60.5044, -19.3004, 1.03 ) }
    dend_2 { pt3dadd( 145.08, -60.5593, -19.3182, 1.03 ) }
    dend_2 { pt3dadd( 146.236, -61.5887, -19.7834, 0.22 ) }
    dend_2 { pt3dadd( 147.203, -62.3932, -20.2117, 0.22 ) }
    dend_2 { pt3dadd( 147.792, -62.8721, -20.4677, 0.81 ) }
    dend_2 { pt3dadd( 148.416, -63.4028, -20.7139, 0.81 ) }
    dend_2 { pt3dadd( 148.47, -63.4532, -20.7355, 0.81 ) }
    dend_2 { pt3dadd( 149.292, -64.327, -21.0361, 0.29 ) }
    dend_2 { pt3dadd( 149.83, -65.0577, -21.2857, 0.44 ) }
    dend_2 { pt3dadd( 149.89, -65.1453, -21.3277, 0.44 ) }
    dend_2 { pt3dadd( 150.252, -65.6482, -21.6079, 0.44 ) }
    dend_2 { pt3dadd( 150.297, -65.7109, -21.6554, 0.44 ) }
    dend_2 { pt3dadd( 150.784, -66.4426, -22.2596, 0.52 ) }
    dend_2 { pt3dadd( 151.495, -67.6359, -23.3811, 0.52 ) }
    dend_2 { pt3dadd( 151.936, -68.365, -24.1794, 0.66 ) }
    dend_2 { pt3dadd( 152.241, -68.8158, -24.7648, 0.59 ) }
    dend_2 { pt3dadd( 152.967, -69.8167, -26.249, 0.37 ) }
    dend_2 { pt3dadd( 153.295, -70.2576, -26.9144, 0.29 ) }
    dend_2 { pt3dadd( 153.966, -71.147, -28.2824, 0.74 ) }
    dend_2 { pt3dadd( 154.75, -72.2194, -29.8285, 0.81 ) }
    dend_2 { pt3dadd( 155.719, -73.6142, -31.7656, 0.29 ) }
    dend_2 { pt3dadd( 156.056, -74.1142, -32.4908, 0.66 ) }
    dend_2 { pt3dadd( 156.483, -74.7302, -33.3852, 0.29 ) }
    dend_2 { pt3dadd( 156.957, -75.4123, -34.3674, 0.59 ) }
    dend_2 { pt3dadd( 157.246, -75.8469, -34.9678, 0.74 ) }
    dend_2 { pt3dadd( 157.899, -76.9271, -36.3777, 1.33 ) }
    dend_2 { pt3dadd( 158.939, -78.7125, -38.6569, 0.29 ) }
    dend_2 { pt3dadd( 159.141, -79.0393, -39.0785, 0.59 ) }
    dend_2 { pt3dadd( 159.288, -79.2597, -39.3632, 0.59 ) }
    dend_2 { pt3dadd( 160.079, -80.3168, -40.6155, 0.52 ) }
    dend_2 { pt3dadd( 160.485, -80.7969, -41.1246, 0.74 ) }
    dend_2 { pt3dadd( 160.823, -81.1543, -41.4139, 0.74 ) }
    dend_2 { pt3dadd( 161.557, -81.8518, -41.825, 0.37 ) }
    dend_2 { pt3dadd( 162.668, -82.846, -42.4202, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( 163.49, -83.5418, -42.7909, 0.37 ) }
    dend_2 { pt3dadd( 163.924, -83.8975, -42.9452, 0.66 ) }
    dend_2 { pt3dadd( 164.343, -84.2361, -43.099, 0.88 ) }
    dend_2 { pt3dadd( 164.682, -84.5133, -43.2328, 0.88 ) }
    dend_2 { pt3dadd( 166.101, -85.6958, -43.8136, 0.29 ) }
    dend_2 { pt3dadd( 167.281, -86.7327, -44.3308, 0.22 ) }
    dend_2 { pt3dadd( 167.511, -86.9504, -44.4382, 0.66 ) }
    dend_2 { pt3dadd( 168.325, -87.7745, -44.8398, 0.22 ) }
    dend_2 { pt3dadd( 168.628, -88.1152, -45.0174, 0.52 ) }
    dend_2 { pt3dadd( 169.146, -88.7837, -45.3613, 0.29 ) }
    dend_2 { pt3dadd( 169.391, -89.1744, -45.5418, 0.74 ) }
    dend_2 { pt3dadd( 169.611, -89.6094, -45.7519, 0.74 ) }
    dend_2 { pt3dadd( 170.009, -90.5099, -46.2056, 0.22 ) }
    dend_2 { pt3dadd( 170.436, -91.6035, -46.7548, 0.37 ) }
    dend_2 { pt3dadd( 170.62, -92.0901, -47.034, 0.37 ) }
    dend_2 { pt3dadd( 170.804, -92.6265, -47.3604, 0.59 ) }
    dend_2 { pt3dadd( 170.969, -93.0904, -47.6385, 0.59 ) }
    dend_2 { pt3dadd( 171.238, -93.8865, -48.1115, 0.22 ) }
    dend_2 { pt3dadd( 171.364, -94.2432, -48.3124, 0.52 ) }
    dend_2 { pt3dadd( 171.87, -95.475, -48.9737, 0.29 ) }
    dend_2 { pt3dadd( 172.147, -96.0731, -49.3345, 1.11 ) }
    dend_2 { pt3dadd( 172.458, -96.6912, -49.746, 1.18 ) }
    // Section: dend_104, id: dend_104, parent: dend_102 (entry count 22/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( -13.7075, -206.303, -167.471, 0.29 ) }
    dend_104 { pt3dadd( -13.9458, -207.579, -167.705, 0.29 ) }
    dend_104 { pt3dadd( -14.1347, -208.369, -167.852, 0.29 ) }
    dend_104 { pt3dadd( -14.4627, -209.299, -167.936, 0.22 ) }
    dend_104 { pt3dadd( -14.7512, -209.852, -167.913, 0.74 ) }
    dend_104 { pt3dadd( -15.0159, -210.256, -167.827, 0.88 ) }
    dend_104 { pt3dadd( -15.0528, -210.31, -167.811, 0.88 ) }
    dend_104 { pt3dadd( -15.3213, -210.62, -167.677, 0.88 ) }
    dend_104 { pt3dadd( -16.1301, -211.431, -167.221, 0.29 ) }
    dend_104 { pt3dadd( -16.8383, -212.089, -166.74, 0.29 ) }
    dend_104 { pt3dadd( -17.5392, -212.733, -166.191, 0.88 ) }
    dend_104 { pt3dadd( -17.9623, -213.114, -165.836, 0.88 ) }
    // Section: dend_103, id: dend_103, parent: dend_102 (entry count 34/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( -13.7075, -206.303, -167.471, 0.59 ) }
    dend_103 { pt3dadd( -14.9992, -207.779, -170.932, 0.59 ) }
    dend_103 { pt3dadd( -15.3388, -208.179, -171.824, 0.37 ) }
    dend_103 { pt3dadd( -15.7909, -208.659, -172.862, 0.37 ) }
    dend_103 { pt3dadd( -16.4023, -209.308, -174.184, 0.96 ) }
    dend_103 { pt3dadd( -16.978, -209.948, -175.41, 1.33 ) }
    dend_103 { pt3dadd( -18.1342, -211.329, -177.904, 0.59 ) }
    dend_103 { pt3dadd( -18.3914, -211.724, -178.488, 0.29 ) }
    dend_103 { pt3dadd( -18.7477, -212.334, -179.405, 0.29 ) }
    dend_103 { pt3dadd( -18.9408, -212.747, -180.081, 0.88 ) }
    dend_103 { pt3dadd( -19.0432, -213.003, -180.534, 0.88 ) }
    dend_103 { pt3dadd( -19.2231, -213.532, -181.511, 0.66 ) }
    dend_103 { pt3dadd( -19.395, -214.195, -182.754, 0.88 ) }
    dend_103 { pt3dadd( -19.6001, -215.221, -184.67, 1.4 ) }
    dend_103 { pt3dadd( -19.9591, -217.199, -188.404, 0.59 ) }
    dend_103 { pt3dadd( -20.1833, -218.08, -190.125, 0.59 ) }
    dend_103 { pt3dadd( -20.2786, -218.421, -190.812, 0.52 ) }
    dend_103 { pt3dadd( -20.3375, -218.647, -191.274, 1.03 ) }
    dend_103 { pt3dadd( -20.4271, -218.969, -191.921, 0.88 ) }
    dend_103 { pt3dadd( -20.8097, -220.143, -194.215, 0.22 ) }
    dend_103 { pt3dadd( -21.1489, -220.89, -195.591, 0.59 ) }
    dend_103 { pt3dadd( -21.641, -221.679, -197.187, 0.74 ) }
    dend_103 { pt3dadd( -22.1627, -222.383, -198.74, 0.44 ) }
    dend_103 { pt3dadd( -22.4928, -222.789, -199.639, 0.74 ) }
    dend_103 { pt3dadd( -23.1042, -223.572, -201.247, 1.11 ) }
    dend_103 { pt3dadd( -23.4211, -224.013, -202.017, 0.96 ) }
    dend_103 { pt3dadd( -24.5728, -225.662, -204.497, 0.74 ) }
    dend_103 { pt3dadd( -24.6002, -225.697, -204.543, 0.74 ) }
    dend_103 { pt3dadd( -25.091, -226.308, -205.274, 0.74 ) }
    dend_103 { pt3dadd( -25.7751, -227.245, -206.29, 0.74 ) }
    dend_103 { pt3dadd( -26.4469, -228.267, -207.218, 0.37 ) }
    dend_103 { pt3dadd( -26.7861, -228.844, -207.707, 1.03 ) }
    dend_103 { pt3dadd( -27.1067, -229.473, -208.144, 1.18 ) }
    dend_103 { pt3dadd( -27.9979, -231.231, -209.388, 0.29 ) }
    dend_103 { pt3dadd( -28.3004, -231.818, -209.81, 0.59 ) }
    dend_103 { pt3dadd( -28.5438, -232.293, -210.119, 0.59 ) }
    dend_103 { pt3dadd( -28.8651, -233.032, -210.508, 0.44 ) }
    dend_103 { pt3dadd( -29.0924, -233.635, -210.768, 0.29 ) }
    dend_103 { pt3dadd( -29.1171, -233.703, -210.791, 0.29 ) }
    dend_103 { pt3dadd( -29.3188, -234.243, -210.921, 0.59 ) }
    dend_103 { pt3dadd( -29.5137, -234.813, -211.244, 0.59 ) }
    dend_103 { pt3dadd( -29.6324, -235.326, -211.718, 0.44 ) }
    dend_103 { pt3dadd( -29.6847, -235.832, -212.358, 0.29 ) }
    dend_103 { pt3dadd( -29.7161, -236.398, -213.257, 0.88 ) }
    dend_103 { pt3dadd( -29.7242, -236.998, -214.38, 1.11 ) }
    dend_103 { pt3dadd( -29.7144, -238.326, -217.183, 0.74 ) }
    dend_103 { pt3dadd( -29.7115, -239.073, -218.809, 0.59 ) }
    dend_103 { pt3dadd( -29.722, -239.914, -220.659, 0.29 ) }
    dend_103 { pt3dadd( -29.777, -240.831, -222.647, 0.74 ) }
    dend_103 { pt3dadd( -29.9368, -242.083, -225.241, 1.03 ) }
    dend_103 { pt3dadd( -30.2327, -243.375, -227.667, 0.52 ) }
    dend_103 { pt3dadd( -30.4221, -243.898, -228.448, 0.44 ) }
    dend_103 { pt3dadd( -30.598, -244.273, -228.891, 0.88 ) }
    dend_103 { pt3dadd( -31.0056, -245.01, -229.507, 1.11 ) }
    dend_103 { pt3dadd( -31.2825, -245.458, -229.717, 1.11 ) }
    dend_103 { pt3dadd( -31.8587, -246.295, -229.874, 0.59 ) }
    dend_103 { pt3dadd( -32.4834, -247.2, -229.927, 0.44 ) }
    dend_103 { pt3dadd( -32.8343, -247.738, -229.98, 0.66 ) }
    dend_103 { pt3dadd( -33.4233, -248.766, -230.109, 0.59 ) }
    dend_103 { pt3dadd( -33.8227, -249.569, -230.454, 0.37 ) }
    dend_103 { pt3dadd( -34.1571, -250.262, -230.928, 0.44 ) }
    dend_103 { pt3dadd( -34.5561, -251.093, -231.672, 0.66 ) }
    dend_103 { pt3dadd( -34.8537, -251.723, -232.337, 0.81 ) }
    dend_103 { pt3dadd( -35.1242, -252.312, -233.026, 0.88 ) }
    dend_103 { pt3dadd( -36.5534, -255.205, -236.695, 0.52 ) }
    dend_103 { pt3dadd( -36.8053, -255.631, -237.279, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_103 { pt3dadd( -36.9731, -255.861, -237.621, 0.59 ) }
    dend_103 { pt3dadd( -37.206, -256.105, -237.985, 0.59 ) }
    dend_103 { pt3dadd( -37.859, -256.625, -238.661, 0.37 ) }
    dend_103 { pt3dadd( -38.6117, -257.073, -239.087, 0.37 ) }
    dend_103 { pt3dadd( -39.4738, -257.474, -239.153, 0.37 ) }
    dend_103 { pt3dadd( -39.5476, -257.508, -239.159, 0.37 ) }
    dend_103 { pt3dadd( -40.6699, -257.967, -239.225, 0.22 ) }
    dend_103 { pt3dadd( -41.1266, -258.116, -239.236, 0.37 ) }
    dend_103 { pt3dadd( -41.5656, -258.209, -239.214, 0.37 ) }
    dend_103 { pt3dadd( -42.6077, -258.36, -239.171, 0.29 ) }
    // Section: dend_101, id: dend_101, parent: dend_99 (entry count 10/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 20.7121, -142.051, -78.1338, 0.29 ) }
    dend_101 { pt3dadd( 21.2587, -142.212, -78.4928, 0.29 ) }
    dend_101 { pt3dadd( 21.5033, -142.309, -78.6533, 0.37 ) }
    dend_101 { pt3dadd( 21.5439, -142.328, -78.6775, 0.37 ) }
    dend_101 { pt3dadd( 22.0352, -142.64, -78.973, 0.22 ) }
    dend_101 { pt3dadd( 22.0775, -142.668, -78.9983, 0.22 ) }
    dend_101 { pt3dadd( 22.3502, -142.862, -79.1576, 0.52 ) }
    dend_101 { pt3dadd( 22.3845, -142.893, -79.1772, 0.52 ) }
    dend_101 { pt3dadd( 22.6752, -143.16, -79.3134, 0.52 ) }
    dend_101 { pt3dadd( 23.1977, -143.626, -79.5167, 0.22 ) }
    dend_101 { pt3dadd( 23.2349, -143.657, -79.5287, 0.22 ) }
    dend_101 { pt3dadd( 23.403, -143.802, -79.5831, 0.37 ) }
    dend_101 { pt3dadd( 23.7025, -144.06, -79.679, 0.22 ) }
    dend_101 { pt3dadd( 24.3115, -144.581, -79.8629, 0.96 ) }
    dend_101 { pt3dadd( 24.35, -144.615, -79.8727, 0.96 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 25/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 20.7121, -142.051, -78.1338, 0.37 ) }
    dend_100 { pt3dadd( 21.1278, -143.166, -79.3434, 0.37 ) }
    dend_100 { pt3dadd( 21.3864, -143.994, -80.1494, 0.66 ) }
    dend_100 { pt3dadd( 21.5067, -144.415, -80.5223, 0.88 ) }
    dend_100 { pt3dadd( 21.6327, -144.887, -80.9004, 1.18 ) }
    dend_100 { pt3dadd( 22.01, -146.4, -81.9971, 0.44 ) }
    dend_100 { pt3dadd( 22.1134, -146.814, -82.271, 0.29 ) }
    dend_100 { pt3dadd( 22.2549, -147.484, -82.6171, 0.88 ) }
    dend_100 { pt3dadd( 22.3401, -147.877, -82.7798, 1.11 ) }
    dend_100 { pt3dadd( 22.4677, -148.376, -82.9522, 0.66 ) }
    dend_100 { pt3dadd( 22.6736, -149.019, -83.1108, 0.37 ) }
    dend_100 { pt3dadd( 22.9431, -149.586, -83.1735, 0.52 ) }
    dend_100 { pt3dadd( 23.0085, -149.69, -83.1846, 0.52 ) }
    dend_100 { pt3dadd( 23.4859, -150.291, -83.2705, 0.59 ) }
    dend_100 { pt3dadd( 23.8225, -150.658, -83.3324, 0.66 ) }
    dend_100 { pt3dadd( 23.9047, -150.734, -83.3416, 0.66 ) }
    dend_100 { pt3dadd( 24.3934, -151.171, -83.3711, 0.37 ) }
    dend_100 { pt3dadd( 24.9793, -151.661, -83.2907, 0.37 ) }
    dend_100 { pt3dadd( 25.4388, -152.029, -83.1853, 0.37 ) }
    dend_100 { pt3dadd( 25.9325, -152.411, -83.0511, 0.96 ) }
    dend_100 { pt3dadd( 26.7065, -152.974, -82.835, 1.25 ) }
    dend_100 { pt3dadd( 27.4084, -153.454, -82.6636, 0.96 ) }
    dend_100 { pt3dadd( 29.1755, -154.584, -82.2074, 0.52 ) }
    dend_100 { pt3dadd( 29.9169, -155.037, -82.0125, 0.59 ) }
    dend_100 { pt3dadd( 30.3668, -155.302, -81.8977, 0.74 ) }
    dend_100 { pt3dadd( 30.9334, -155.628, -81.7702, 0.74 ) }
    dend_100 { pt3dadd( 31.821, -156.145, -81.64, 0.29 ) }
    dend_100 { pt3dadd( 32.599, -156.597, -81.5799, 0.66 ) }
    dend_100 { pt3dadd( 32.6483, -156.632, -81.5838, 0.66 ) }
    dend_100 { pt3dadd( 33.0339, -156.963, -81.6167, 0.29 ) }
    dend_100 { pt3dadd( 33.3904, -157.341, -81.6509, 0.74 ) }
    dend_100 { pt3dadd( 33.7174, -157.773, -81.6946, 0.88 ) }
    dend_100 { pt3dadd( 33.7524, -157.823, -81.7005, 0.88 ) }
    dend_100 { pt3dadd( 34.1515, -158.385, -81.7991, 0.37 ) }
    dend_100 { pt3dadd( 34.6021, -158.974, -81.9063, 0.59 ) }
    dend_100 { pt3dadd( 34.8778, -159.31, -81.9704, 0.88 ) }
    dend_100 { pt3dadd( 35.371, -159.876, -82.0857, 0.29 ) }
    dend_100 { pt3dadd( 35.7734, -160.304, -82.1629, 0.22 ) }
    dend_100 { pt3dadd( 35.9643, -160.498, -82.1946, 0.81 ) }
    dend_100 { pt3dadd( 36.2913, -160.811, -82.2417, 1.18 ) }
    dend_100 { pt3dadd( 36.3374, -160.852, -82.2483, 1.18 ) }
    dend_100 { pt3dadd( 36.8678, -161.315, -82.316, 1.03 ) }
    dend_100 { pt3dadd( 37.5989, -161.968, -82.3272, 0.29 ) }
    dend_100 { pt3dadd( 38.2355, -162.603, -82.275, 0.22 ) }
    dend_100 { pt3dadd( 38.2937, -162.668, -82.2612, 0.22 ) }
    dend_100 { pt3dadd( 38.7094, -163.175, -82.1193, 0.29 ) }
    dend_100 { pt3dadd( 39.0569, -163.612, -81.9894, 1.18 ) }
    dend_100 { pt3dadd( 39.7943, -164.502, -81.697, 0.74 ) }
    dend_100 { pt3dadd( 40.1799, -164.955, -81.5482, 0.52 ) }
    dend_100 { pt3dadd( 40.7087, -165.519, -81.3351, 0.29 ) }
    dend_100 { pt3dadd( 41.1709, -165.975, -81.1284, 0.52 ) }
    dend_100 { pt3dadd( 41.6763, -166.424, -80.8837, 0.96 ) }
    dend_100 { pt3dadd( 42.3978, -167.002, -80.5761, 1.18 ) }
    dend_100 { pt3dadd( 43.1274, -167.524, -80.2808, 1.03 ) }
    dend_100 { pt3dadd( 44.137, -168.215, -79.8605, 0.74 ) }
    dend_100 { pt3dadd( 45.1989, -168.966, -79.4038, 0.66 ) }
    dend_100 { pt3dadd( 45.8154, -169.449, -79.1214, 1.03 ) }
    dend_100 { pt3dadd( 46.6108, -170.151, -78.7541, 0.88 ) }
    dend_100 { pt3dadd( 47.45, -170.991, -78.4061, 0.74 ) }
    dend_100 { pt3dadd( 48.0339, -171.647, -78.217, 0.74 ) }
    dend_100 { pt3dadd( 48.5243, -172.282, -78.1269, 0.74 ) }
    dend_100 { pt3dadd( 49.062, -173.066, -78.098, 0.52 ) }
    dend_100 { pt3dadd( 49.4747, -173.708, -78.11, 0.52 ) }
    dend_100 { pt3dadd( 49.8962, -174.386, -78.1476, 0.44 ) }
    dend_100 { pt3dadd( 50.2915, -175.033, -78.2232, 0.74 ) }
    dend_100 { pt3dadd( 50.5951, -175.503, -78.2903, 0.96 ) }
    dend_100 { pt3dadd( 50.8808, -175.925, -78.3564, 0.96 ) }
    dend_100 { pt3dadd( 51.4777, -176.787, -78.4998, 0.37 ) }
    dend_100 { pt3dadd( 51.9961, -177.501, -78.6345, 0.37 ) }
    dend_100 { pt3dadd( 52.0269, -177.542, -78.643, 0.37 ) }
    dend_100 { pt3dadd( 52.4695, -178.051, -78.7805, 0.66 ) }
    dend_100 { pt3dadd( 52.8089, -178.425, -78.8918, 0.88 ) }
    dend_100 { pt3dadd( 53.2573, -178.894, -79.0526, 0.59 ) }
    dend_100 { pt3dadd( 53.6937, -179.325, -79.2366, 0.22 ) }
    dend_100 { pt3dadd( 53.7398, -179.362, -79.2563, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_100 { pt3dadd( 54.3166, -179.766, -79.5037, 0.22 ) }
    // Section: dend_96, id: dend_96, parent: dend_94 (entry count 1/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -23.7209, -257.177, -59.3423, 0.52 ) }
    dend_96 { pt3dadd( -21.7687, -257.18, -60.0152, 0.52 ) }
    dend_96 { pt3dadd( -20.8019, -257.268, -60.398, 0.52 ) }
    dend_96 { pt3dadd( -19.785, -257.45, -60.949, 0.66 ) }
    dend_96 { pt3dadd( -18.7569, -257.702, -61.6172, 0.59 ) }
    dend_96 { pt3dadd( -17.5148, -258.081, -62.484, 0.29 ) }
    dend_96 { pt3dadd( -17.1512, -258.224, -62.7831, 0.59 ) }
    dend_96 { pt3dadd( -16.7523, -258.435, -63.2371, 0.59 ) }
    dend_96 { pt3dadd( -15.6828, -259.105, -64.6115, 0.29 ) }
    dend_96 { pt3dadd( -15.1082, -259.522, -65.4035, 0.88 ) }
    dend_96 { pt3dadd( -14.8711, -259.707, -65.7627, 0.88 ) }
    dend_96 { pt3dadd( -13.7101, -260.499, -67.8405, 0.29 ) }
    dend_96 { pt3dadd( -13.0012, -260.882, -69.27, 0.59 ) }
    dend_96 { pt3dadd( -12.7231, -260.977, -69.9477, 0.44 ) }
    dend_96 { pt3dadd( -12.6978, -260.981, -70.0203, 0.44 ) }
    dend_96 { pt3dadd( -12.1769, -260.961, -71.698, 0.44 ) }
    dend_96 { pt3dadd( -11.3248, -260.732, -74.674, 0.29 ) }
    dend_96 { pt3dadd( -11.1567, -260.642, -75.2903, 0.29 ) }
    dend_96 { pt3dadd( -10.3612, -260.146, -77.9155, 0.29 ) }
    dend_96 { pt3dadd( -10.3384, -260.13, -77.9989, 0.29 ) }
    dend_96 { pt3dadd( -10.3165, -260.116, -78.0739, 0.44 ) }
    dend_96 { pt3dadd( -10.2711, -260.088, -78.2206, 0.44 ) }
    dend_96 { pt3dadd( -9.92565, -259.882, -79.3328, 0.29 ) }
    dend_96 { pt3dadd( -9.63503, -259.699, -80.2665, 0.81 ) }
    dend_96 { pt3dadd( -7.33017, -258.221, -87.6487, 0.29 ) }
    dend_96 { pt3dadd( -6.83993, -257.898, -89.2352, 0.22 ) }
    dend_96 { pt3dadd( -6.33372, -257.577, -90.9214, 0.44 ) }
    dend_96 { pt3dadd( -5.41296, -257.034, -94.2353, 0.29 ) }
    dend_96 { pt3dadd( -5.24543, -256.94, -94.8902, 0.88 ) }
    dend_96 { pt3dadd( -5.13359, -256.903, -95.3553, 0.88 ) }
    dend_96 { pt3dadd( -5.11348, -256.901, -95.4296, 0.88 ) }
    dend_96 { pt3dadd( -4.18946, -256.887, -99.1636, 0.29 ) }
    dend_96 { pt3dadd( -3.36812, -256.854, -102.876, 0.52 ) }
    dend_96 { pt3dadd( -3.35287, -256.852, -102.951, 0.52 ) }
    dend_96 { pt3dadd( -2.38808, -256.758, -107.854, 0.22 ) }
    dend_96 { pt3dadd( -2.16903, -256.72, -108.997, 0.37 ) }
    dend_96 { pt3dadd( -1.75618, -256.618, -111.203, 0.96 ) }
    dend_96 { pt3dadd( -1.23732, -256.386, -114.097, 0.22 ) }
    dend_96 { pt3dadd( -1.15159, -256.325, -114.576, 0.59 ) }
    // Section: dend_95, id: dend_95, parent: dend_94 (entry count 40/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -23.7209, -257.177, -59.3423, 0.81 ) }
    dend_95 { pt3dadd( -23.7449, -257.85, -59.5247, 0.81 ) }
    dend_95 { pt3dadd( -23.7465, -258.479, -59.6862, 1.03 ) }
    dend_95 { pt3dadd( -23.7206, -259.41, -59.916, 0.96 ) }
    dend_95 { pt3dadd( -23.6675, -260.242, -60.1159, 0.74 ) }
    dend_95 { pt3dadd( -23.5737, -260.976, -60.2189, 0.29 ) }
    dend_95 { pt3dadd( -23.4995, -261.432, -60.2506, 0.29 ) }
    dend_95 { pt3dadd( -23.4265, -261.771, -60.245, 0.52 ) }
    dend_95 { pt3dadd( -23.3571, -262.078, -60.2036, 0.52 ) }
    dend_95 { pt3dadd( -23.2677, -262.476, -60.1076, 0.52 ) }
    dend_95 { pt3dadd( -22.9801, -263.852, -59.7396, 0.29 ) }
    dend_95 { pt3dadd( -22.8597, -264.469, -59.5889, 0.52 ) }
    dend_95 { pt3dadd( -22.7805, -264.842, -59.5011, 0.81 ) }
    dend_95 { pt3dadd( -22.5985, -265.552, -59.3336, 0.88 ) }
    dend_95 { pt3dadd( -22.4087, -266.11, -59.2239, 1.18 ) }
    dend_95 { pt3dadd( -22.1207, -266.822, -59.1123, 1.4 ) }
    dend_95 { pt3dadd( -21.6337, -267.838, -59.0232, 0.52 ) }
    dend_95 { pt3dadd( -21.1206, -268.736, -58.974, 0.52 ) }
    dend_95 { pt3dadd( -20.4578, -269.769, -58.9639, 0.52 ) }
    dend_95 { pt3dadd( -19.7493, -270.804, -58.998, 0.74 ) }
    dend_95 { pt3dadd( -19.7072, -270.865, -59.0015, 0.74 ) }
    dend_95 { pt3dadd( -19.2487, -271.603, -59.0782, 0.29 ) }
    dend_95 { pt3dadd( -18.8126, -272.46, -59.2048, 0.29 ) }
    dend_95 { pt3dadd( -18.4301, -273.417, -59.3981, 0.66 ) }
    dend_95 { pt3dadd( -18.2694, -273.952, -59.5219, 0.88 ) }
    dend_95 { pt3dadd( -18.111, -274.689, -59.6833, 0.88 ) }
    dend_95 { pt3dadd( -17.9048, -275.825, -59.9697, 0.29 ) }
    dend_95 { pt3dadd( -17.8268, -276.301, -60.1077, 0.88 ) }
    dend_95 { pt3dadd( -17.8181, -276.372, -60.1356, 0.88 ) }
    dend_95 { pt3dadd( -17.7589, -276.856, -60.3677, 1.03 ) }
    dend_95 { pt3dadd( -17.7479, -276.932, -60.4075, 1.03 ) }
    dend_95 { pt3dadd( -17.5611, -278.072, -60.9903, 0.74 ) }
    dend_95 { pt3dadd( -17.3671, -278.891, -61.3953, 0.88 ) }
    dend_95 { pt3dadd( -17.0578, -279.99, -61.9229, 1.18 ) }
    dend_95 { pt3dadd( -16.892, -280.529, -62.1622, 1.18 ) }
    dend_95 { pt3dadd( -16.6817, -281.154, -62.4129, 0.66 ) }
    dend_95 { pt3dadd( -16.3744, -281.99, -62.7046, 0.29 ) }
    dend_95 { pt3dadd( -16.0365, -282.819, -62.9353, 0.29 ) }
    dend_95 { pt3dadd( -15.7977, -283.385, -63.0626, 0.59 ) }
    dend_95 { pt3dadd( -15.4841, -284.094, -63.1784, 0.74 ) }
    dend_95 { pt3dadd( -15.1757, -284.807, -63.2828, 0.74 ) }
    dend_95 { pt3dadd( -14.9914, -285.242, -63.2952, 0.74 ) }
    dend_95 { pt3dadd( -14.8191, -285.702, -63.2613, 0.88 ) }
    dend_95 { pt3dadd( -14.5555, -286.457, -63.153, 0.81 ) }
    dend_95 { pt3dadd( -14.2111, -287.375, -62.9812, 0.81 ) }
    dend_95 { pt3dadd( -13.8452, -288.268, -62.7784, 0.59 ) }
    dend_95 { pt3dadd( -13.1296, -289.866, -62.3782, 0.37 ) }
    dend_95 { pt3dadd( -12.7843, -290.564, -62.1929, 0.52 ) }
    dend_95 { pt3dadd( -12.4692, -291.122, -62.0478, 0.44 ) }
    dend_95 { pt3dadd( -12.1476, -291.6, -61.9393, 0.52 ) }
    dend_95 { pt3dadd( -12.051, -291.726, -61.9201, 0.52 ) }
    dend_95 { pt3dadd( -11.684, -292.169, -61.9426, 0.37 ) }
    dend_95 { pt3dadd( -11.5896, -292.293, -61.9762, 0.37 ) }
    dend_95 { pt3dadd( -11.2508, -292.832, -62.11, 0.81 ) }
    dend_95 { pt3dadd( -11.0885, -293.263, -62.2104, 0.96 ) }
    dend_95 { pt3dadd( -11.0765, -293.326, -62.2287, 0.96 ) }
    dend_95 { pt3dadd( -11.0548, -293.715, -62.3495, 0.81 ) }
    dend_95 { pt3dadd( -11.0899, -294.515, -62.6411, 0.52 ) }
    dend_95 { pt3dadd( -11.1328, -295.053, -62.8447, 0.52 ) }
    dend_95 { pt3dadd( -11.2163, -295.996, -63.2081, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_95 { pt3dadd( -11.2909, -296.965, -63.5752, 0.74 ) }
    dend_95 { pt3dadd( -11.3342, -297.634, -63.8235, 0.88 ) }
    dend_95 { pt3dadd( -11.3572, -298.602, -64.1322, 0.52 ) }
    dend_95 { pt3dadd( -11.3368, -299.58, -64.379, 0.52 ) }
    dend_95 { pt3dadd( -11.2866, -300.296, -64.4943, 0.74 ) }
    dend_95 { pt3dadd( -11.1987, -300.983, -64.5431, 0.44 ) }
    dend_95 { pt3dadd( -11.172, -301.142, -64.5427, 0.44 ) }
    dend_95 { pt3dadd( -10.9636, -302.4, -64.4755, 0.44 ) }
    dend_95 { pt3dadd( -10.8623, -303.154, -64.3788, 0.22 ) }
    dend_95 { pt3dadd( -10.8242, -303.88, -64.2591, 0.22 ) }
    dend_95 { pt3dadd( -10.853, -304.418, -64.1923, 0.74 ) }
    dend_95 { pt3dadd( -10.863, -304.492, -64.1877, 0.74 ) }
    dend_95 { pt3dadd( -10.9816, -305.097, -64.1905, 0.96 ) }
    dend_95 { pt3dadd( -11.0013, -305.171, -64.1973, 0.96 ) }
    dend_95 { pt3dadd( -11.164, -305.875, -64.2815, 0.96 ) }
    dend_95 { pt3dadd( -11.3411, -307.077, -64.506, 0.44 ) }
    dend_95 { pt3dadd( -11.38, -307.708, -64.5879, 0.52 ) }
    dend_95 { pt3dadd( -11.3801, -307.783, -64.5947, 0.52 ) }
    dend_95 { pt3dadd( -11.3666, -308.408, -64.6477, 0.81 ) }
    dend_95 { pt3dadd( -11.3276, -309.271, -64.7365, 0.74 ) }
    dend_95 { pt3dadd( -11.2388, -310.506, -64.8713, 0.37 ) }
    dend_95 { pt3dadd( -11.1356, -312.076, -65.0139, 0.37 ) }
    dend_95 { pt3dadd( -11.1056, -312.661, -65.0396, 1.18 ) }
    dend_95 { pt3dadd( -11.0634, -313.735, -65.0552, 0.96 ) }
    dend_95 { pt3dadd( -11.0317, -314.891, -65.0436, 0.52 ) }
    dend_95 { pt3dadd( -11.0157, -316.212, -64.9994, 0.52 ) }
    dend_95 { pt3dadd( -11.0009, -317.696, -64.9085, 0.74 ) }
    dend_95 { pt3dadd( -10.9607, -319.249, -64.8336, 0.81 ) }
    dend_95 { pt3dadd( -10.9558, -319.334, -64.8258, 0.81 ) }
    dend_95 { pt3dadd( -10.8872, -320.02, -64.7022, 1.03 ) }
    dend_95 { pt3dadd( -10.8768, -320.104, -64.681, 1.03 ) }
    dend_95 { pt3dadd( -10.7521, -320.882, -64.4669, 0.52 ) }
    dend_95 { pt3dadd( -10.6116, -321.624, -64.2816, 0.37 ) }
    dend_95 { pt3dadd( -10.47, -322.339, -64.151, 0.88 ) }
    dend_95 { pt3dadd( -10.3198, -323.11, -64.0205, 0.96 ) }
    dend_95 { pt3dadd( -10.1947, -323.707, -63.9251, 0.74 ) }
    dend_95 { pt3dadd( -10.0357, -324.408, -63.8346, 0.22 ) }
    dend_95 { pt3dadd( -9.84427, -325.112, -63.7573, 0.22 ) }
    dend_95 { pt3dadd( -9.62088, -325.698, -63.7172, 0.74 ) }
    dend_95 { pt3dadd( -9.41019, -326.095, -63.7107, 1.03 ) }
    dend_95 { pt3dadd( -9.09662, -326.552, -63.7297, 1.03 ) }
    dend_95 { pt3dadd( -8.61521, -327.091, -63.7408, 0.59 ) }
    dend_95 { pt3dadd( -7.87612, -327.803, -63.7458, 0.37 ) }
    dend_95 { pt3dadd( -7.11659, -328.495, -63.7401, 0.22 ) }
    dend_95 { pt3dadd( -6.56434, -329.023, -63.7294, 0.81 ) }
    dend_95 { pt3dadd( -6.14016, -329.462, -63.724, 0.81 ) }
    dend_95 { pt3dadd( -5.43479, -330.295, -63.7268, 0.29 ) }
    dend_95 { pt3dadd( -5.10356, -330.727, -63.737, 0.59 ) }
    dend_95 { pt3dadd( -4.79227, -331.188, -63.7715, 0.74 ) }
    dend_95 { pt3dadd( -4.36996, -331.923, -63.8405, 0.74 ) }
    dend_95 { pt3dadd( -4.02507, -332.604, -63.9344, 0.52 ) }
    dend_95 { pt3dadd( -3.5117, -333.71, -64.225, 0.22 ) }
    dend_95 { pt3dadd( -3.27404, -334.286, -64.4338, 0.22 ) }
    dend_95 { pt3dadd( -3.11453, -334.696, -64.5957, 0.74 ) }
    dend_95 { pt3dadd( -2.92411, -335.244, -64.825, 0.74 ) }
    dend_95 { pt3dadd( -2.51475, -336.557, -65.3999, 0.22 ) }
    dend_95 { pt3dadd( -2.16281, -337.975, -66.0103, 0.81 ) }
    dend_95 { pt3dadd( -2.04819, -338.57, -66.2468, 0.81 ) }
    dend_95 { pt3dadd( -1.88079, -339.604, -66.6041, 0.22 ) }
    dend_95 { pt3dadd( -1.75439, -340.456, -66.8448, 0.22 ) }
    dend_95 { pt3dadd( -1.70259, -340.826, -66.9291, 0.81 ) }
    dend_95 { pt3dadd( -1.62868, -341.378, -67.0182, 1.03 ) }
    dend_95 { pt3dadd( -1.43816, -342.673, -67.1387, 0.29 ) }
    dend_95 { pt3dadd( -1.36621, -343.144, -67.1842, 0.29 ) }
    dend_95 { pt3dadd( -1.20767, -344.224, -67.2887, 0.29 ) }
    dend_95 { pt3dadd( -1.07425, -345.153, -67.3599, 0.15 ) }
    dend_95 { pt3dadd( -1.02646, -345.528, -67.3867, 0.52 ) }
    dend_95 { pt3dadd( -0.984495, -345.842, -67.4097, 0.66 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 68/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -19.7745, -91.3373, 2.21954, 0.96 ) }
    dend_67 { pt3dadd( -19.6472, -92.4357, 1.72262, 0.96 ) }
    dend_67 { pt3dadd( -19.5345, -93.5967, 1.23284, 0.96 ) }
    dend_67 { pt3dadd( -19.4354, -94.896, 0.736381, 0.96 ) }
    dend_67 { pt3dadd( -19.3568, -96.2417, 0.268013, 0.81 ) }
    dend_67 { pt3dadd( -19.3145, -97.5917, -0.208388, 0.66 ) }
    dend_67 { pt3dadd( -19.3025, -98.7332, -0.598976, 0.66 ) }
    dend_67 { pt3dadd( -19.3057, -98.8629, -0.638424, 0.66 ) }
    dend_67 { pt3dadd( -19.3417, -99.7129, -0.890447, 0.88 ) }
    dend_67 { pt3dadd( -19.3571, -100.274, -1.05569, 1.03 ) }
    dend_67 { pt3dadd( -19.2851, -101.712, -1.54524, 0.74 ) }
    dend_67 { pt3dadd( -19.1562, -102.579, -1.88352, 0.74 ) }
    dend_67 { pt3dadd( -18.9283, -103.5, -2.28729, 0.74 ) }
    dend_67 { pt3dadd( -18.5597, -104.643, -2.81425, 0.96 ) }
    dend_67 { pt3dadd( -18.2849, -105.317, -3.13699, 1.03 ) }
    dend_67 { pt3dadd( -17.8863, -106.22, -3.53851, 1.03 ) }
    dend_67 { pt3dadd( -17.3971, -107.359, -3.9599, 0.88 ) }
    dend_67 { pt3dadd( -17.1235, -108.124, -4.19117, 0.88 ) }
    dend_67 { pt3dadd( -17.0771, -108.367, -4.23565, 0.88 ) }
    dend_67 { pt3dadd( -17.0965, -108.98, -4.20227, 0.59 ) }
    dend_67 { pt3dadd( -17.4444, -110.174, -3.91641, 0.52 ) }
    dend_67 { pt3dadd( -17.9166, -111.071, -3.56438, 0.74 ) }
    dend_67 { pt3dadd( -18.3343, -111.653, -3.21508, 0.66 ) }
    dend_67 { pt3dadd( -18.9249, -112.358, -2.70947, 0.52 ) }
    dend_67 { pt3dadd( -19.8536, -113.391, -1.86608, 0.52 ) }
    dend_67 { pt3dadd( -20.319, -113.891, -1.42668, 0.74 ) }
    dend_67 { pt3dadd( -20.9195, -114.539, -0.859929, 1.03 ) }
    dend_67 { pt3dadd( -21.6772, -115.417, -0.168624, 1.03 ) }
    dend_67 { pt3dadd( -22.2018, -116.07, 0.278209, 1.03 ) }
    dend_67 { pt3dadd( -22.9266, -117.066, 0.842588, 0.74 ) }
    dend_67 { pt3dadd( -23.3935, -117.761, 1.13089, 0.66 ) }
    dend_67 { pt3dadd( -23.8635, -118.561, 1.42549, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_67 { pt3dadd( -24.2279, -119.313, 1.67323, 0.52 ) }
    dend_67 { pt3dadd( -24.2524, -119.373, 1.68957, 0.52 ) }
    dend_67 { pt3dadd( -24.4653, -120.013, 1.88167, 0.66 ) }
    dend_67 { pt3dadd( -24.6315, -120.652, 2.07977, 0.81 ) }
    dend_67 { pt3dadd( -24.8381, -121.539, 2.39787, 0.52 ) }
    dend_67 { pt3dadd( -25.1083, -122.63, 2.75256, 0.52 ) }
    dend_67 { pt3dadd( -25.1797, -122.851, 2.79278, 0.81 ) }
    dend_67 { pt3dadd( -25.4938, -123.558, 2.81344, 0.81 ) }
    dend_67 { pt3dadd( -25.8499, -124.128, 2.74036, 0.96 ) }
    dend_67 { pt3dadd( -26.4747, -124.845, 2.51189, 1.03 ) }
    dend_67 { pt3dadd( -27.4238, -125.62, 2.146, 1.18 ) }
    dend_67 { pt3dadd( -28.623, -126.415, 1.70029, 0.81 ) }
    dend_67 { pt3dadd( -29.2136, -126.757, 1.48198, 0.88 ) }
    dend_67 { pt3dadd( -29.9545, -127.129, 1.22832, 1.18 ) }
    dend_67 { pt3dadd( -30.7271, -127.501, 0.99975, 1.55 ) }
    dend_67 { pt3dadd( -31.8159, -128.061, 0.782535, 0.66 ) }
    dend_67 { pt3dadd( -32.2918, -128.36, 0.75673, 0.66 ) }
    dend_67 { pt3dadd( -32.6964, -128.703, 0.799418, 0.52 ) }
    dend_67 { pt3dadd( -33.3656, -129.444, 0.94265, 0.52 ) }
    dend_67 { pt3dadd( -33.8525, -130.157, 1.10294, 0.37 ) }
    dend_67 { pt3dadd( -34.334, -131.13, 1.38638, 0.37 ) }
    dend_67 { pt3dadd( -34.6003, -131.854, 1.60781, 0.74 ) }
    dend_67 { pt3dadd( -34.8653, -132.704, 1.89804, 1.25 ) }
    dend_67 { pt3dadd( -34.8812, -132.754, 1.91711, 1.25 ) }
    dend_67 { pt3dadd( -35.1359, -133.486, 2.20249, 1.18 ) }
    dend_67 { pt3dadd( -35.5681, -134.535, 2.62375, 1.03 ) }
    dend_67 { pt3dadd( -35.8832, -135.165, 2.86522, 0.66 ) }
    dend_67 { pt3dadd( -36.2927, -135.893, 3.1248, 0.37 ) }
    dend_67 { pt3dadd( -36.8598, -136.814, 3.40751, 0.37 ) }
    dend_67 { pt3dadd( -37.2707, -137.437, 3.57327, 0.44 ) }
    dend_67 { pt3dadd( -37.3148, -137.496, 3.58662, 0.44 ) }
    dend_67 { pt3dadd( -37.9005, -138.204, 3.69901, 0.37 ) }
    dend_67 { pt3dadd( -38.3395, -138.724, 3.76933, 0.59 ) }
    dend_67 { pt3dadd( -38.6109, -139.055, 3.80314, 0.59 ) }
    dend_67 { pt3dadd( -39.0729, -139.672, 3.84201, 0.44 ) }
    dend_67 { pt3dadd( -39.449, -140.201, 3.86608, 0.66 ) }
    dend_67 { pt3dadd( -39.866, -140.805, 3.89295, 0.88 ) }
    dend_67 { pt3dadd( -40.3238, -141.497, 3.92159, 0.88 ) }
    dend_67 { pt3dadd( -40.97, -142.469, 3.94676, 0.66 ) }
    dend_67 { pt3dadd( -41.4737, -143.243, 3.94558, 0.96 ) }
    dend_67 { pt3dadd( -41.8491, -143.8, 3.9356, 1.18 ) }
    dend_67 { pt3dadd( -42.6616, -144.9, 3.93157, 0.88 ) }
    dend_67 { pt3dadd( -42.9988, -145.29, 3.94128, 0.96 ) }
    dend_67 { pt3dadd( -43.8092, -146.031, 4.00101, 0.59 ) }
    dend_67 { pt3dadd( -43.8556, -146.06, 4.0072, 0.59 ) }
    dend_67 { pt3dadd( -44.7704, -146.429, 4.20501, 0.59 ) }
    dend_67 { pt3dadd( -45.5637, -146.634, 4.41265, 0.52 ) }
    dend_67 { pt3dadd( -46.1331, -146.738, 4.58258, 0.52 ) }
    dend_67 { pt3dadd( -46.705, -146.853, 4.80837, 0.74 ) }
    dend_67 { pt3dadd( -47.2922, -146.993, 5.087, 0.96 ) }
    dend_67 { pt3dadd( -47.8635, -147.158, 5.36866, 0.81 ) }
    dend_67 { pt3dadd( -48.8655, -147.526, 5.87229, 0.96 ) }
    dend_67 { pt3dadd( -49.5168, -147.821, 6.18816, 0.96 ) }
    dend_67 { pt3dadd( -50.5008, -148.323, 6.66774, 0.44 ) }
    dend_67 { pt3dadd( -51.0998, -148.665, 6.95279, 0.44 ) }
    dend_67 { pt3dadd( -51.7531, -149.069, 7.24006, 0.66 ) }
    dend_67 { pt3dadd( -52.3147, -149.409, 7.44841, 0.59 ) }
    dend_67 { pt3dadd( -52.9863, -149.812, 7.66765, 0.59 ) }
    dend_67 { pt3dadd( -53.05, -149.849, 7.68426, 0.59 ) }
    dend_67 { pt3dadd( -53.5947, -150.159, 7.77242, 0.88 ) }
    dend_67 { pt3dadd( -54.5807, -150.792, 7.90608, 0.96 ) }
    dend_67 { pt3dadd( -55.3117, -151.326, 7.98714, 0.37 ) }
    dend_67 { pt3dadd( -55.4151, -151.419, 8.00368, 0.37 ) }
    dend_67 { pt3dadd( -56.0528, -152.153, 8.14897, 0.37 ) }
    dend_67 { pt3dadd( -56.5096, -152.815, 8.29027, 0.29 ) }
    dend_67 { pt3dadd( -56.8945, -153.54, 8.45174, 0.29 ) }
    dend_67 { pt3dadd( -57.1516, -154.115, 8.58703, 0.52 ) }
    dend_67 { pt3dadd( -57.6908, -155.339, 8.88921, 1.03 ) }
    dend_67 { pt3dadd( -57.9772, -155.937, 9.04062, 1.25 ) }
    dend_67 { pt3dadd( -58.2275, -156.405, 9.1557, 1.25 ) }
    dend_67 { pt3dadd( -58.7609, -157.195, 9.35959, 0.88 ) }
    dend_67 { pt3dadd( -59.3365, -157.859, 9.52808, 0.74 ) }
    dend_67 { pt3dadd( -59.9886, -158.469, 9.65298, 0.74 ) }
    dend_67 { pt3dadd( -60.537, -158.9, 9.7109, 0.96 ) }
    dend_67 { pt3dadd( -61.3109, -159.455, 9.77635, 0.66 ) }
    dend_67 { pt3dadd( -61.9771, -159.916, 9.7872, 0.74 ) }
    dend_67 { pt3dadd( -62.377, -160.198, 9.77789, 1.03 ) }
    dend_67 { pt3dadd( -62.9415, -160.635, 9.74538, 1.4 ) }
    dend_67 { pt3dadd( -62.9852, -160.673, 9.74178, 1.4 ) }
    dend_67 { pt3dadd( -63.3929, -161.133, 9.70136, 1.4 ) }
    dend_67 { pt3dadd( -64.1076, -162.228, 9.63349, 0.52 ) }
    dend_67 { pt3dadd( -64.4526, -162.912, 9.58886, 0.81 ) }
    dend_67 { pt3dadd( -64.6795, -163.405, 9.56571, 0.88 ) }
    dend_67 { pt3dadd( -64.8983, -163.915, 9.55578, 0.52 ) }
    dend_67 { pt3dadd( -65.2355, -164.67, 9.55127, 0.44 ) }
    dend_67 { pt3dadd( -65.5288, -165.316, 9.55971, 0.44 ) }
    dend_67 { pt3dadd( -65.8129, -165.853, 9.60047, 0.44 ) }
    dend_67 { pt3dadd( -66.1673, -166.36, 9.63453, 0.66 ) }
    dend_67 { pt3dadd( -66.2606, -166.456, 9.65572, 0.66 ) }
    dend_67 { pt3dadd( -66.6561, -166.744, 9.78268, 0.88 ) }
    dend_67 { pt3dadd( -66.7344, -166.787, 9.81263, 0.88 ) }
    dend_67 { pt3dadd( -67.2364, -167.057, 10.0305, 0.96 ) }
    dend_67 { pt3dadd( -67.5236, -167.235, 10.1639, 0.66 ) }
    dend_67 { pt3dadd( -68.2285, -167.726, 10.4927, 0.52 ) }
    dend_67 { pt3dadd( -68.7105, -168.088, 10.7082, 0.44 ) }
    dend_67 { pt3dadd( -69.0671, -168.383, 10.8558, 0.74 ) }
    dend_67 { pt3dadd( -69.5229, -168.794, 11.0249, 0.81 ) }
    dend_67 { pt3dadd( -70.0946, -169.403, 11.2084, 0.52 ) }
    dend_67 { pt3dadd( -70.1429, -169.462, 11.2172, 0.52 ) }
    dend_67 { pt3dadd( -70.4604, -169.885, 11.227, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_67 { pt3dadd( -70.926, -170.577, 11.2082, 0.96 ) }
    dend_67 { pt3dadd( -71.1836, -171.002, 11.1801, 1.11 ) }
    dend_67 { pt3dadd( -71.5657, -171.638, 11.1356, 0.81 ) }
    dend_67 { pt3dadd( -72.0876, -172.455, 11.0531, 0.66 ) }
    dend_67 { pt3dadd( -72.1203, -172.5, 11.047, 0.66 ) }
    dend_67 { pt3dadd( -72.6565, -173.128, 10.976, 0.52 ) }
    dend_67 { pt3dadd( -73.2103, -173.594, 10.9608, 0.37 ) }
    dend_67 { pt3dadd( -73.6636, -173.839, 11.0386, 0.29 ) }
    dend_67 { pt3dadd( -74.3986, -174.096, 11.2892, 0.66 ) }
    dend_67 { pt3dadd( -74.819, -174.22, 11.4822, 0.74 ) }
    dend_67 { pt3dadd( -75.6437, -174.522, 11.9451, 0.29 ) }
    dend_67 { pt3dadd( -76.0188, -174.692, 12.1824, 0.66 ) }
    dend_67 { pt3dadd( -76.5258, -174.995, 12.522, 0.88 ) }
    dend_67 { pt3dadd( -77.0132, -175.359, 12.847, 0.88 ) }
    dend_67 { pt3dadd( -77.288, -175.594, 13.0263, 0.88 ) }
    dend_67 { pt3dadd( -78.0987, -176.325, 13.4939, 0.58 ) }
    dend_67 { pt3dadd( -78.636, -176.822, 13.7429, 0.81 ) }
    dend_67 { pt3dadd( -79.1233, -177.277, 13.9404, 1.11 ) }
    dend_67 { pt3dadd( -79.5683, -177.695, 14.0903, 0.74 ) }
    dend_67 { pt3dadd( -80.0722, -178.162, 14.2593, 0.88 ) }
    dend_67 { pt3dadd( -80.5768, -178.582, 14.4196, 0.81 ) }
    dend_67 { pt3dadd( -81.0804, -178.944, 14.5644, 0.74 ) }
    dend_67 { pt3dadd( -81.8935, -179.476, 14.8072, 0.44 ) }
    dend_67 { pt3dadd( -82.6492, -179.944, 15.0374, 0.74 ) }
    dend_67 { pt3dadd( -83.2569, -180.293, 15.2304, 0.88 ) }
    dend_67 { pt3dadd( -84.0577, -180.671, 15.5656, 0.52 ) }
    dend_67 { pt3dadd( -84.5027, -180.856, 15.8044, 0.59 ) }
    dend_67 { pt3dadd( -85.3081, -181.173, 16.3155, 0.59 ) }
    dend_67 { pt3dadd( -85.3502, -181.19, 16.3454, 0.59 ) }
    dend_67 { pt3dadd( -85.7603, -181.419, 16.6581, 0.66 ) }
    dend_67 { pt3dadd( -86.9122, -182.336, 17.485, 0.59 ) }
    dend_67 { pt3dadd( -87.4334, -182.891, 17.8403, 0.59 ) }
    dend_67 { pt3dadd( -87.775, -183.324, 18.0284, 0.81 ) }
    dend_67 { pt3dadd( -88.285, -184.04, 18.2493, 0.52 ) }
    dend_67 { pt3dadd( -88.8383, -184.849, 18.4044, 0.66 ) }
    dend_67 { pt3dadd( -89.4702, -185.82, 18.4772, 0.44 ) }
    dend_67 { pt3dadd( -89.8477, -186.446, 18.4556, 1.11 ) }
    dend_67 { pt3dadd( -90.5747, -187.647, 18.3752, 0.59 ) }
    dend_67 { pt3dadd( -90.6087, -187.703, 18.3726, 0.59 ) }
    dend_67 { pt3dadd( -91.0169, -188.355, 18.3603, 0.44 ) }
    dend_67 { pt3dadd( -91.213, -188.638, 18.3691, 0.44 ) }
    dend_67 { pt3dadd( -91.8434, -189.442, 18.4991, 0.44 ) }
    dend_67 { pt3dadd( -92.2738, -189.893, 18.6415, 0.37 ) }
    dend_67 { pt3dadd( -92.7542, -190.287, 18.8608, 0.29 ) }
    dend_67 { pt3dadd( -93.1563, -190.576, 19.1003, 0.66 ) }
    dend_67 { pt3dadd( -93.5449, -190.805, 19.3726, 1.03 ) }
    dend_67 { pt3dadd( -94.0263, -191.042, 19.7236, 1.03 ) }
    dend_67 { pt3dadd( -94.3865, -191.188, 19.9859, 0.81 ) }
    dend_67 { pt3dadd( -95.0108, -191.458, 20.4236, 0.52 ) }
    dend_67 { pt3dadd( -95.7034, -191.849, 20.8726, 0.66 ) }
    dend_67 { pt3dadd( -96.0888, -192.15, 21.1099, 0.29 ) }
    dend_67 { pt3dadd( -96.2804, -192.336, 21.2187, 0.59 ) }
    dend_67 { pt3dadd( -96.6349, -192.696, 21.3838, 0.81 ) }
    dend_67 { pt3dadd( -97.0576, -193.097, 21.5503, 0.81 ) }
    dend_67 { pt3dadd( -97.6167, -193.537, 21.723, 0.52 ) }
    dend_67 { pt3dadd( -98.3321, -194.01, 21.8795, 0.74 ) }
    dend_67 { pt3dadd( -98.3816, -194.038, 21.8904, 0.74 ) }
    dend_67 { pt3dadd( -99.1317, -194.416, 22.055, 0.44 ) }
    dend_67 { pt3dadd( -99.6646, -194.675, 22.1642, 0.74 ) }
    dend_67 { pt3dadd( -100.248, -194.96, 22.2775, 1.11 ) }
    dend_67 { pt3dadd( -101.108, -195.408, 22.4378, 0.59 ) }
    dend_67 { pt3dadd( -101.618, -195.725, 22.5291, 0.66 ) }
    dend_67 { pt3dadd( -102.127, -196.123, 22.6161, 0.81 ) }
    dend_67 { pt3dadd( -102.71, -196.718, 22.7107, 0.52 ) }
    dend_67 { pt3dadd( -103.079, -197.162, 22.7685, 0.66 ) }
    dend_67 { pt3dadd( -103.405, -197.578, 22.8202, 0.66 ) }
    dend_67 { pt3dadd( -103.74, -197.975, 22.8497, 0.44 ) }
    dend_67 { pt3dadd( -103.785, -198.023, 22.8514, 0.44 ) }
    dend_67 { pt3dadd( -104.51, -198.612, 22.861, 0.37 ) }
    dend_67 { pt3dadd( -104.634, -198.677, 22.8624, 0.37 ) }
    dend_67 { pt3dadd( -105.49, -198.878, 22.879, 0.37 ) }
    dend_67 { pt3dadd( -106.285, -198.898, 22.8554, 0.29 ) }
    dend_67 { pt3dadd( -106.764, -198.859, 22.829, 0.37 ) }
    dend_67 { pt3dadd( -107.269, -198.8, 22.8157, 0.44 ) }
    dend_67 { pt3dadd( -107.968, -198.66, 22.7894, 0.37 ) }
    dend_67 { pt3dadd( -108.924, -198.429, 22.7541, 0.29 ) }
    dend_67 { pt3dadd( -109.981, -198.089, 22.7225, 0.22 ) }
    dend_67 { pt3dadd( -110.196, -198.011, 22.7279, 0.44 ) }
    dend_67 { pt3dadd( -111.185, -197.628, 22.7073, 0.52 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 79/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -19.7745, -91.3373, 2.21954, 0.74 ) }
    dend_66 { pt3dadd( -20.3509, -91.8883, 2.4408, 0.74 ) }
    dend_66 { pt3dadd( -21.0543, -92.565, 2.7103, 0.44 ) }
    dend_66 { pt3dadd( -21.7484, -93.2205, 2.97386, 0.59 ) }
    dend_66 { pt3dadd( -22.6236, -94.0141, 3.25899, 0.37 ) }
    dend_66 { pt3dadd( -23.2941, -94.6292, 3.47623, 0.59 ) }
    dend_66 { pt3dadd( -23.5837, -94.8919, 3.56931, 0.88 ) }
    dend_66 { pt3dadd( -23.65, -94.9496, 3.58774, 0.88 ) }
    dend_66 { pt3dadd( -23.9359, -95.1892, 3.6528, 1.11 ) }
    dend_66 { pt3dadd( -24.5876, -95.6402, 3.77298, 0.88 ) }
    dend_66 { pt3dadd( -25.3959, -96.0576, 3.90037, 0.37 ) }
    dend_66 { pt3dadd( -25.9018, -96.2557, 3.96632, 0.66 ) }
    dend_66 { pt3dadd( -26.695, -96.5058, 4.03066, 0.81 ) }
    dend_66 { pt3dadd( -27.4311, -96.7284, 4.07562, 0.74 ) }
    dend_66 { pt3dadd( -28.4567, -97.0204, 4.12554, 0.88 ) }
    dend_66 { pt3dadd( -29.1795, -97.219, 4.16119, 0.74 ) }
    dend_66 { pt3dadd( -30.2933, -97.5413, 4.16636, 0.52 ) }
    dend_66 { pt3dadd( -31.6169, -97.9999, 4.16045, 0.52 ) }
    dend_66 { pt3dadd( -32.4068, -98.3412, 4.19586, 0.74 ) }
    dend_66 { pt3dadd( -32.4755, -98.3797, 4.20769, 0.74 ) }
    dend_66 { pt3dadd( -33.0325, -98.8558, 4.73764, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_66 { pt3dadd( -33.6362, -99.532, 5.83433, 1.03 ) }
    dend_66 { pt3dadd( -33.9654, -99.9451, 6.61712, 1.18 ) }
    dend_66 { pt3dadd( -34.4097, -100.517, 7.85801, 0.96 ) }
    dend_66 { pt3dadd( -34.9945, -101.263, 9.64561, 1.18 ) }
    dend_66 { pt3dadd( -36.6923, -103.318, 14.8841, 0.66 ) }
    dend_66 { pt3dadd( -36.9209, -103.611, 15.6704, 0.66 ) }
    dend_66 { pt3dadd( -37.1571, -103.926, 16.5135, 0.81 ) }
    dend_66 { pt3dadd( -37.3934, -104.235, 17.2855, 0.81 ) }
    dend_66 { pt3dadd( -37.4251, -104.277, 17.3744, 0.81 ) }
    dend_66 { pt3dadd( -37.8108, -104.869, 18.3441, 0.88 ) }
    dend_66 { pt3dadd( -38.4311, -105.922, 19.9424, 0.88 ) }
    dend_66 { pt3dadd( -38.7315, -106.579, 21.0544, 0.74 ) }
    dend_66 { pt3dadd( -38.8463, -106.88, 21.5921, 0.96 ) }
    dend_66 { pt3dadd( -39.3092, -108.224, 23.9657, 0.44 ) }
    dend_66 { pt3dadd( -39.6931, -109.41, 26.0402, 1.25 ) }
    dend_66 { pt3dadd( -40.186, -111.075, 28.8897, 0.59 ) }
    dend_66 { pt3dadd( -40.5144, -112.061, 30.5249, 0.96 ) }
    dend_66 { pt3dadd( -40.5317, -112.11, 30.6009, 0.96 ) }
    dend_66 { pt3dadd( -40.7974, -112.777, 31.513, 0.59 ) }
    dend_66 { pt3dadd( -41.1329, -113.469, 32.2637, 0.52 ) }
    dend_66 { pt3dadd( -41.849, -114.801, 33.4056, 0.81 ) }
    dend_66 { pt3dadd( -42.7774, -116.542, 34.5894, 0.44 ) }
    dend_66 { pt3dadd( -43.2572, -117.441, 35.1442, 0.59 ) }
    dend_66 { pt3dadd( -43.6653, -118.266, 35.6744, 0.74 ) }
    dend_66 { pt3dadd( -44.0577, -119.164, 36.3308, 0.44 ) }
    dend_66 { pt3dadd( -44.4633, -120.212, 37.1513, 0.44 ) }
    dend_66 { pt3dadd( -44.8843, -121.406, 38.0911, 0.29 ) }
    dend_66 { pt3dadd( -45.1924, -122.492, 38.9645, 0.44 ) }
    dend_66 { pt3dadd( -45.4935, -123.872, 40.1932, 0.81 ) }
    dend_66 { pt3dadd( -45.7308, -125.451, 41.764, 1.03 ) }
    dend_66 { pt3dadd( -45.734, -125.505, 41.8237, 1.03 ) }
    dend_66 { pt3dadd( -50.4613, -134.407, 49.6147, 1.03 ) }
    dend_66 { pt3dadd( -55.8722, -143.094, 57.1793, 1.03 ) }
    dend_66 { pt3dadd( -60.7033, -153.252, 63.3446, 1.03 ) }
    dend_66 { pt3dadd( -67.1926, -162.666, 69.0431, 1.03 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 35/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -4.70181, -68.9158, -5.36098, 1.4 ) }
    dend_48 { pt3dadd( -4.22184, -69.4308, -5.37751, 1.4 ) }
    dend_48 { pt3dadd( -3.4347, -70.2309, -5.49308, 1.11 ) }
    dend_48 { pt3dadd( -2.4763, -71.2482, -5.79587, 0.96 ) }
    dend_48 { pt3dadd( -1.73889, -72.0824, -6.16029, 0.96 ) }
    dend_48 { pt3dadd( -1.1536, -72.8031, -6.56496, 1.11 ) }
    dend_48 { pt3dadd( -0.502652, -73.6478, -7.07069, 1.25 ) }
    dend_48 { pt3dadd( 0.318066, -74.7697, -7.81393, 1.18 ) }
    dend_48 { pt3dadd( 1.2041, -76.0979, -8.70735, 1.18 ) }
    dend_48 { pt3dadd( 1.84196, -77.2123, -9.42233, 1.03 ) }
    dend_48 { pt3dadd( 2.53178, -78.697, -10.2795, 0.88 ) }
    dend_48 { pt3dadd( 2.7919, -79.4216, -10.6252, 0.96 ) }
    dend_48 { pt3dadd( 3.16517, -80.7629, -11.1299, 1.11 ) }
    dend_48 { pt3dadd( 3.45313, -82.1859, -11.5216, 1.11 ) }
    dend_48 { pt3dadd( 3.58253, -83.1807, -11.689, 0.96 ) }
    dend_48 { pt3dadd( 3.66514, -84.5053, -11.8209, 1.11 ) }
    dend_48 { pt3dadd( 3.64019, -86.3377, -11.9541, 1.18 ) }
    dend_48 { pt3dadd( 3.5699, -87.2402, -12.0388, 1.18 ) }
    dend_48 { pt3dadd( 3.44026, -88.2526, -12.1565, 1.18 ) }
    dend_48 { pt3dadd( 3.14234, -90.179, -12.416, 0.96 ) }
    dend_48 { pt3dadd( 2.92946, -91.4646, -12.6101, 1.03 ) }
    dend_48 { pt3dadd( 2.59092, -93.4402, -12.9598, 1.03 ) }
    dend_48 { pt3dadd( 2.33065, -94.8655, -13.2545, 1.33 ) }
    dend_48 { pt3dadd( 2.1497, -95.91, -13.4972, 1.55 ) }
    dend_48 { pt3dadd( 2.02627, -96.7677, -13.7265, 1.33 ) }
    dend_48 { pt3dadd( 1.8704, -98.1344, -14.1312, 1.03 ) }
    dend_48 { pt3dadd( 1.7887, -99.28, -14.4658, 1.33 ) }
    dend_48 { pt3dadd( 1.75419, -100.296, -14.753, 1.33 ) }
    dend_48 { pt3dadd( 1.70143, -102.218, -15.26, 1.25 ) }
    dend_48 { pt3dadd( 1.62274, -104.291, -15.825, 1.03 ) }
    dend_48 { pt3dadd( 1.55562, -105.467, -16.1569, 0.96 ) }
    dend_48 { pt3dadd( 1.42394, -106.947, -16.5919, 0.96 ) }
    dend_48 { pt3dadd( 1.30546, -107.857, -16.8654, 0.96 ) }
    dend_48 { pt3dadd( 1.10344, -109.202, -17.2945, 0.96 ) }
    dend_48 { pt3dadd( 0.838906, -110.456, -17.7212, 1.11 ) }
    dend_48 { pt3dadd( 0.649058, -111.063, -17.9385, 1.25 ) }
    dend_48 { pt3dadd( 0.20562, -112.113, -18.3794, 1.4 ) }
    dend_48 { pt3dadd( -0.163513, -112.737, -18.708, 1.4 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 73/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -4.70181, -68.9158, -5.36098, 1.11 ) }
    dend_43 { pt3dadd( -6.05739, -71.8212, -2.93231, 1.11 ) }
    dend_43 { pt3dadd( -6.25818, -72.4982, -2.54773, 1.11 ) }
    dend_43 { pt3dadd( -6.51937, -73.5989, -2.02289, 1.03 ) }
    dend_43 { pt3dadd( -6.80311, -75.2927, -1.36887, 1.11 ) }
    dend_43 { pt3dadd( -6.8117, -75.3716, -1.345, 1.11 ) }
    dend_43 { pt3dadd( -6.93817, -76.797, -0.991507, 1.11 ) }
    dend_43 { pt3dadd( -6.96008, -78.4176, -0.773881, 1.11 ) }
    dend_43 { pt3dadd( -6.961, -78.5025, -0.762941, 1.11 ) }
    dend_43 { pt3dadd( -6.98021, -79.9597, -0.592695, 1.11 ) }
    dend_43 { pt3dadd( -7.00554, -81.7683, -0.426483, 1.03 ) }
    dend_43 { pt3dadd( -7.03404, -82.9351, -0.340118, 1.33 ) }
    dend_43 { pt3dadd( -7.1178, -84.3234, -0.263501, 1.18 ) }
    dend_43 { pt3dadd( -7.35675, -86.072, -0.215633, 0.88 ) }
    dend_43 { pt3dadd( -7.37236, -86.1562, -0.215134, 0.88 ) }
    dend_43 { pt3dadd( -7.87558, -88.054, -0.227473, 0.88 ) }
    dend_43 { pt3dadd( -8.37817, -89.5423, -0.261524, 0.88 ) }
    dend_43 { pt3dadd( -8.90636, -90.8361, -0.318473, 1.11 ) }
    dend_43 { pt3dadd( -9.70697, -92.5689, -0.347171, 0.88 ) }
    dend_43 { pt3dadd( -9.74061, -92.6345, -0.344628, 0.88 ) }
    dend_43 { pt3dadd( -10.3565, -93.8496, -0.231799, 0.88 ) }
    dend_43 { pt3dadd( -10.4701, -94.071, -0.195665, 0.88 ) }
    dend_43 { pt3dadd( -10.9036, -95.1102, 0.0420146, 0.96 ) }
    dend_43 { pt3dadd( -11.5438, -97.2285, 0.610956, 0.81 ) }
    dend_43 { pt3dadd( -11.6854, -97.8655, 0.786829, 1.18 ) }
    dend_43 { pt3dadd( -11.8836, -98.9276, 1.06255, 0.96 ) }
    dend_43 { pt3dadd( -11.9072, -99.0898, 1.09949, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_43 { pt3dadd( -12.0779, -100.622, 1.40799, 0.74 ) }
    dend_43 { pt3dadd( -12.1427, -101.695, 1.5172, 0.96 ) }
    dend_43 { pt3dadd( -12.1684, -102.611, 1.49767, 1.03 ) }
    dend_43 { pt3dadd( -12.1669, -102.778, 1.47496, 1.03 ) }
    dend_43 { pt3dadd( -12.1277, -103.866, 1.2407, 1.33 ) }
    dend_43 { pt3dadd( -12.0515, -104.972, 0.925887, 1.55 ) }
    dend_43 { pt3dadd( -11.8897, -106.654, 0.346593, 1.25 ) }
    dend_43 { pt3dadd( -11.6865, -107.914, -0.116991, 1.4 ) }
    dend_43 { pt3dadd( -11.3377, -109.681, -0.761398, 1.55 ) }
    dend_43 { pt3dadd( -11.0681, -110.946, -1.21669, 1.11 ) }
    dend_43 { pt3dadd( -10.6917, -112.547, -1.79676, 0.74 ) }
    dend_43 { pt3dadd( -10.6729, -112.634, -1.82592, 0.74 ) }
    dend_43 { pt3dadd( -10.4675, -113.744, -2.16057, 0.74 ) }
    dend_43 { pt3dadd( -10.354, -114.536, -2.32105, 0.96 ) }
    dend_43 { pt3dadd( -10.3439, -114.646, -2.32961, 0.96 ) }
    dend_43 { pt3dadd( -10.2725, -116.137, -2.37281, 1.11 ) }
    dend_43 { pt3dadd( -10.1792, -117.383, -2.34211, 1.11 ) }
    dend_43 { pt3dadd( -10.0009, -119.059, -2.39147, 1.25 ) }
    dend_43 { pt3dadd( -9.68572, -121.604, -2.55082, 0.96 ) }
    dend_43 { pt3dadd( -9.39872, -123.393, -2.72866, 0.96 ) }
    dend_43 { pt3dadd( -9.15455, -124.687, -2.88707, 1.11 ) }
    dend_43 { pt3dadd( -8.58697, -127.283, -3.24988, 1.11 ) }
    dend_43 { pt3dadd( -7.97933, -129.748, -3.67213, 1.25 ) }
    dend_43 { pt3dadd( -7.79262, -130.481, -3.81818, 1.55 ) }
    dend_43 { pt3dadd( -7.43279, -131.966, -4.22919, 1.47 ) }
    dend_43 { pt3dadd( -7.41797, -132.045, -4.24742, 1.47 ) }
    dend_43 { pt3dadd( -7.32929, -132.977, -4.38843, 0.88 ) }
    dend_43 { pt3dadd( -7.39717, -134.226, -4.37862, 0.59 ) }
    dend_43 { pt3dadd( -7.56962, -135.5, -4.14807, 0.74 ) }
    dend_43 { pt3dadd( -7.73115, -136.401, -3.92826, 1.03 ) }
    dend_43 { pt3dadd( -8.08839, -138.165, -3.44879, 1.03 ) }
    dend_43 { pt3dadd( -8.25101, -138.937, -3.23802, 1.25 ) }
    dend_43 { pt3dadd( -8.62931, -140.706, -2.74632, 1.25 ) }
    dend_43 { pt3dadd( -8.91611, -142.054, -2.36546, 0.74 ) }
    dend_43 { pt3dadd( -9.14315, -143.169, -2.10989, 0.74 ) }
    dend_43 { pt3dadd( -9.33079, -144.316, -2.00072, 0.96 ) }
    dend_43 { pt3dadd( -9.33796, -144.39, -2.00655, 0.96 ) }
    dend_43 { pt3dadd( -9.3828, -145.702, -2.24309, 1.18 ) }
    dend_43 { pt3dadd( -9.37971, -145.795, -2.2678, 1.18 ) }
    dend_43 { pt3dadd( -9.23576, -147.465, -2.73274, 1.33 ) }
    dend_43 { pt3dadd( -9.00421, -149.461, -3.23961, 1.03 ) }
    dend_43 { pt3dadd( -8.81353, -151.095, -3.59755, 0.88 ) }
    dend_43 { pt3dadd( -8.7519, -151.711, -3.71517, 1.33 ) }
    dend_43 { pt3dadd( -8.66179, -152.965, -3.91791, 1.33 ) }
    dend_43 { pt3dadd( -8.62231, -154.371, -4.09067, 1.55 ) }
    dend_43 { pt3dadd( -8.69058, -155.757, -4.17589, 1.33 ) }
    dend_43 { pt3dadd( -8.88823, -157.014, -4.20676, 1.11 ) }
    dend_43 { pt3dadd( -9.24085, -158.352, -4.2351, 0.66 ) }
    dend_43 { pt3dadd( -9.70697, -159.66, -4.27335, 0.66 ) }
    dend_43 { pt3dadd( -10.2681, -160.91, -4.31884, 0.74 ) }
    dend_43 { pt3dadd( -10.9421, -162.222, -4.36897, 0.59 ) }
    dend_43 { pt3dadd( -11.3977, -163.1, -4.38772, 0.88 ) }
    dend_43 { pt3dadd( -11.7973, -163.991, -4.38817, 0.96 ) }
    dend_43 { pt3dadd( -12.0606, -164.866, -4.36269, 0.88 ) }
    dend_43 { pt3dadd( -12.0688, -164.947, -4.35044, 0.88 ) }
    dend_43 { pt3dadd( -12.0002, -166.121, -4.07592, 0.74 ) }
    dend_43 { pt3dadd( -11.848, -167.241, -3.77827, 1.25 ) }
    dend_43 { pt3dadd( -11.6786, -168.459, -3.43207, 1.25 ) }
    dend_43 { pt3dadd( -11.5463, -169.813, -3.04862, 1.03 ) }
    dend_43 { pt3dadd( -11.506, -172.085, -2.44102, 0.74 ) }
    dend_43 { pt3dadd( -11.5929, -173.372, -2.1231, 0.59 ) }
    dend_43 { pt3dadd( -11.7357, -174.128, -1.96304, 0.81 ) }
    dend_43 { pt3dadd( -12.0891, -175.186, -1.80745, 0.88 ) }
    dend_43 { pt3dadd( -12.6236, -176.41, -1.70963, 1.03 ) }
    dend_43 { pt3dadd( -13.0793, -177.446, -1.69484, 1.11 ) }
    dend_43 { pt3dadd( -13.171, -177.68, -1.72096, 1.11 ) }
    dend_43 { pt3dadd( -13.5353, -178.84, -1.95454, 0.96 ) }
    dend_43 { pt3dadd( -13.8592, -180.16, -2.29581, 1.11 ) }
    dend_43 { pt3dadd( -14.0863, -181.488, -2.69445, 0.96 ) }
    dend_43 { pt3dadd( -14.3101, -183.432, -3.32266, 1.18 ) }
    dend_43 { pt3dadd( -14.5342, -185.516, -3.92887, 1.03 ) }
    dend_43 { pt3dadd( -14.7684, -187.655, -4.50727, 0.96 ) }
    dend_43 { pt3dadd( -14.7813, -187.802, -4.54302, 0.96 ) }
    dend_43 { pt3dadd( -14.8763, -189.357, -4.83538, 0.96 ) }
    dend_43 { pt3dadd( -14.9291, -190.494, -4.92011, 1.4 ) }
    dend_43 { pt3dadd( -14.9864, -192.712, -4.78577, 1.11 ) }
    dend_43 { pt3dadd( -14.9862, -192.821, -4.76581, 1.11 ) }
    dend_43 { pt3dadd( -14.9561, -194.111, -4.46368, 1.25 ) }
    dend_43 { pt3dadd( -14.8942, -195.79, -4.07365, 1.11 ) }
    dend_43 { pt3dadd( -14.7799, -197.636, -3.66788, 0.88 ) }
    dend_43 { pt3dadd( -14.6864, -198.648, -3.47766, 1.18 ) }
    dend_43 { pt3dadd( -14.4576, -200.257, -3.25119, 1.25 ) }
    dend_43 { pt3dadd( -14.3155, -201.357, -3.11296, 1.4 ) }
    dend_43 { pt3dadd( -14.306, -201.451, -3.10407, 1.4 ) }
    dend_43 { pt3dadd( -14.2064, -203.077, -2.98412, 1.03 ) }
    dend_43 { pt3dadd( -14.2075, -203.331, -2.97463, 1.03 ) }
    dend_43 { pt3dadd( -14.3214, -204.715, -2.92537, 0.74 ) }
    dend_43 { pt3dadd( -14.545, -205.902, -2.83393, 0.74 ) }
    dend_43 { pt3dadd( -14.8315, -206.825, -2.74011, 0.96 ) }
    dend_43 { pt3dadd( -15.3893, -208.189, -2.58384, 0.88 ) }
    dend_43 { pt3dadd( -16.0227, -209.415, -2.42901, 0.88 ) }
    dend_43 { pt3dadd( -16.6293, -210.46, -2.29405, 0.88 ) }
    dend_43 { pt3dadd( -17.5334, -211.828, -2.11034, 1.11 ) }
    dend_43 { pt3dadd( -18.1766, -212.782, -1.98378, 1.25 ) }
    dend_43 { pt3dadd( -18.7654, -213.693, -1.87714, 1.4 ) }
    dend_43 { pt3dadd( -18.9293, -213.968, -1.86459, 1.4 ) }
    dend_43 { pt3dadd( -19.3055, -214.75, -1.86577, 1.4 ) }
    dend_43 { pt3dadd( -19.3884, -214.986, -1.90372, 1.4 ) }
    dend_43 { pt3dadd( -19.6965, -216.388, -2.35476, 1.25 ) }
    dend_43 { pt3dadd( -19.8434, -217.452, -2.76574, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_43 { pt3dadd( -19.8913, -218.403, -3.19509, 0.96 ) }
    dend_43 { pt3dadd( -19.8949, -219.753, -3.85533, 0.96 ) }
    dend_43 { pt3dadd( -19.8043, -222.032, -5.12948, 0.81 ) }
    dend_43 { pt3dadd( -19.6487, -223.945, -6.33061, 0.81 ) }
    dend_43 { pt3dadd( -19.5687, -224.799, -6.92209, 1.03 ) }
    dend_43 { pt3dadd( -19.4129, -226.82, -8.33697, 1.03 ) }
    dend_43 { pt3dadd( -19.4073, -226.918, -8.40313, 1.03 ) }
    dend_43 { pt3dadd( -19.3539, -228.609, -9.47621, 1.55 ) }
    dend_43 { pt3dadd( -19.3643, -230.63, -10.5581, 0.88 ) }
    dend_43 { pt3dadd( -19.4293, -232.54, -11.4818, 0.81 ) }
    dend_43 { pt3dadd( -19.5175, -234.024, -12.1802, 0.81 ) }
    dend_43 { pt3dadd( -19.6106, -235.115, -12.6608, 0.96 ) }
    dend_43 { pt3dadd( -19.7127, -236.257, -13.1253, 0.96 ) }
    dend_43 { pt3dadd( -19.8206, -237.418, -13.5244, 0.74 ) }
    dend_43 { pt3dadd( -19.9904, -239.322, -14.1171, 1.25 ) }
    dend_43 { pt3dadd( -20.0842, -241.154, -14.6629, 0.81 ) }
    dend_43 { pt3dadd( -20.0872, -241.233, -14.6856, 0.81 ) }
    dend_43 { pt3dadd( -20.1731, -242.553, -14.9546, 0.81 ) }
    dend_43 { pt3dadd( -20.2849, -243.586, -15.0859, 1.18 ) }
    dend_43 { pt3dadd( -20.3067, -243.744, -15.0904, 1.18 ) }
    dend_43 { pt3dadd( -20.4859, -244.855, -15.0185, 1.18 ) }
    dend_43 { pt3dadd( -20.7787, -246.792, -14.7944, 0.81 ) }
    dend_43 { pt3dadd( -21.0561, -248.691, -14.5765, 0.81 ) }
    dend_43 { pt3dadd( -21.2033, -249.721, -14.4547, 1.11 ) }
    dend_43 { pt3dadd( -21.4471, -251.447, -14.2811, 1.11 ) }
    dend_43 { pt3dadd( -21.4714, -251.627, -14.26, 1.11 ) }
    dend_43 { pt3dadd( -21.6797, -253.127, -13.9566, 0.96 ) }
    dend_43 { pt3dadd( -21.7687, -253.859, -13.7638, 1.25 ) }
    dend_43 { pt3dadd( -21.7782, -253.938, -13.7416, 1.25 ) }
    dend_43 { pt3dadd( -21.9539, -255.315, -13.3111, 1.25 ) }
    dend_43 { pt3dadd( -22.2975, -257.521, -12.5944, 1.03 ) }
    dend_43 { pt3dadd( -22.7508, -260.165, -11.7304, 0.81 ) }
    dend_43 { pt3dadd( -22.9032, -261.08, -11.439, 1.11 ) }
    dend_43 { pt3dadd( -23.1307, -262.665, -10.9843, 0.96 ) }
    dend_43 { pt3dadd( -23.164, -262.924, -10.9225, 0.96 ) }
    dend_43 { pt3dadd( -23.3156, -264.277, -10.6666, 0.81 ) }
    dend_43 { pt3dadd( -23.3259, -264.387, -10.6587, 0.81 ) }
    dend_43 { pt3dadd( -23.4904, -266.277, -10.6874, 0.96 ) }
    dend_43 { pt3dadd( -23.588, -267.493, -10.7066, 1.18 ) }
    dend_43 { pt3dadd( -23.6793, -268.798, -10.7265, 1.03 ) }
    dend_43 { pt3dadd( -23.6866, -268.883, -10.7279, 1.03 ) }
    dend_43 { pt3dadd( -23.8487, -270.381, -10.7571, 0.74 ) }
    dend_43 { pt3dadd( -24.1116, -272.403, -10.8283, 0.74 ) }
    dend_43 { pt3dadd( -24.2629, -273.507, -10.9206, 0.81 ) }
    dend_43 { pt3dadd( -24.2765, -273.617, -10.9331, 0.81 ) }
    dend_43 { pt3dadd( -24.3679, -274.685, -11.0786, 0.81 ) }
    dend_43 { pt3dadd( -24.4339, -276.283, -11.3138, 0.81 ) }
    dend_43 { pt3dadd( -24.3834, -278.152, -11.6381, 1.03 ) }
    dend_43 { pt3dadd( -24.276, -279.748, -11.9449, 1.03 ) }
    dend_43 { pt3dadd( -24.2712, -279.829, -11.9609, 1.03 ) }
    dend_43 { pt3dadd( -24.2466, -280.927, -12.1753, 1.25 ) }
    dend_43 { pt3dadd( -24.2476, -281.963, -12.3773, 0.96 ) }
    dend_43 { pt3dadd( -24.3236, -283.345, -12.6133, 0.81 ) }
    dend_43 { pt3dadd( -24.4301, -284.228, -12.7424, 1.11 ) }
    dend_43 { pt3dadd( -24.6199, -285.548, -12.8993, 1.33 ) }
    dend_43 { pt3dadd( -24.8162, -286.833, -13.065, 1.33 ) }
    dend_43 { pt3dadd( -24.8295, -286.925, -13.0791, 1.33 ) }
    dend_43 { pt3dadd( -25.0383, -288.682, -13.3568, 0.74 ) }
    dend_43 { pt3dadd( -25.15, -290.522, -13.6739, 0.96 ) }
    dend_43 { pt3dadd( -25.1041, -292.057, -13.9503, 0.96 ) }
    dend_43 { pt3dadd( -25.0878, -292.208, -13.9718, 0.96 ) }
    dend_43 { pt3dadd( -24.8317, -293.77, -14.1342, 0.96 ) }
    dend_43 { pt3dadd( -24.5941, -295.172, -14.1679, 0.81 ) }
    dend_43 { pt3dadd( -24.3589, -296.679, -14.0877, 0.66 ) }
    dend_43 { pt3dadd( -24.2007, -298.153, -13.9093, 0.66 ) }
    dend_43 { pt3dadd( -24.1343, -299.559, -13.6866, 1.33 ) }
    dend_43 { pt3dadd( -24.1608, -300.733, -13.4404, 1.33 ) }
    dend_43 { pt3dadd( -24.3677, -302.848, -12.8931, 1.11 ) }
    dend_43 { pt3dadd( -24.564, -304.36, -12.4673, 1.18 ) }
    dend_43 { pt3dadd( -24.6883, -305.206, -12.225, 1.4 ) }
    dend_43 { pt3dadd( -24.8476, -306.514, -11.8975, 1.11 ) }
    dend_43 { pt3dadd( -24.9221, -308.05, -11.6014, 0.59 ) }
    dend_43 { pt3dadd( -24.8792, -309.048, -11.4581, 0.52 ) }
    dend_43 { pt3dadd( -24.6928, -310.415, -11.3326, 0.88 ) }
    dend_43 { pt3dadd( -24.4112, -311.765, -11.2634, 1.18 ) }
    dend_43 { pt3dadd( -24.0785, -313.232, -11.2473, 1.03 ) }
    dend_43 { pt3dadd( -23.6379, -315.087, -11.3047, 0.96 ) }
    dend_43 { pt3dadd( -23.2251, -316.927, -11.4792, 0.81 ) }
    dend_43 { pt3dadd( -23.0215, -318.012, -11.6236, 1.11 ) }
    dend_43 { pt3dadd( -22.8663, -319.275, -11.8434, 1.69 ) }
    dend_43 { pt3dadd( -22.771, -320.687, -12.148, 1.18 ) }
    dend_43 { pt3dadd( -22.7732, -320.78, -12.1663, 1.18 ) }
    dend_43 { pt3dadd( -22.9274, -322.247, -12.3776, 0.59 ) }
    dend_43 { pt3dadd( -22.9405, -322.329, -12.373, 0.59 ) }
    dend_43 { pt3dadd( -23.1521, -323.565, -12.0535, 1.03 ) }
    dend_43 { pt3dadd( -23.1749, -323.704, -11.9979, 1.03 ) }
    dend_43 { pt3dadd( -23.3712, -325.509, -11.1514, 1.25 ) }
    dend_43 { pt3dadd( -23.4281, -326.282, -10.7741, 1.25 ) }
    dend_43 { pt3dadd( -23.5247, -328.126, -9.86806, 0.96 ) }
    dend_43 { pt3dadd( -23.5829, -329.178, -9.40597, 0.66 ) }
    dend_43 { pt3dadd( -23.6376, -330.115, -9.05505, 0.66 ) }
    dend_43 { pt3dadd( -23.6928, -330.931, -8.82965, 0.37 ) }
    dend_43 { pt3dadd( -23.7645, -332.046, -8.74013, 0.52 ) }
    dend_43 { pt3dadd( -23.8939, -333.346, -8.81267, 0.81 ) }
    dend_43 { pt3dadd( -24.0626, -334.377, -9.00148, 1.11 ) }
    dend_43 { pt3dadd( -24.2661, -335.401, -9.28306, 1.4 ) }
    dend_43 { pt3dadd( -24.5285, -336.669, -9.68858, 1.4 ) }
    dend_43 { pt3dadd( -25.0174, -338.878, -10.4749, 0.81 ) }
    dend_43 { pt3dadd( -25.2657, -340.127, -10.9566, 0.66 ) }
    dend_43 { pt3dadd( -25.4337, -341.324, -11.4312, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_43 { pt3dadd( -25.5169, -342.96, -12.045, 0.37 ) }
    dend_43 { pt3dadd( -25.4981, -343.869, -12.3659, 0.88 ) }
    dend_43 { pt3dadd( -25.494, -343.948, -12.3894, 0.88 ) }
    dend_43 { pt3dadd( -25.4772, -344.787, -12.5475, 1.25 ) }
    dend_43 { pt3dadd( -25.5033, -345.763, -12.7018, 1.25 ) }
    dend_43 { pt3dadd( -25.6126, -346.87, -12.8452, 0.88 ) }
    dend_43 { pt3dadd( -25.9898, -348.74, -13.0398, 0.66 ) }
    dend_43 { pt3dadd( -26.4905, -350.483, -13.2321, 0.66 ) }
    dend_43 { pt3dadd( -27.0755, -352.128, -13.4421, 0.88 ) }
    dend_43 { pt3dadd( -27.5484, -353.305, -13.6503, 0.88 ) }
    dend_43 { pt3dadd( -27.9574, -354.28, -13.8876, 1.11 ) }
    dend_43 { pt3dadd( -28.3096, -355.167, -14.1342, 1.18 ) }
    dend_43 { pt3dadd( -28.5571, -355.862, -14.3052, 1.18 ) }
    dend_43 { pt3dadd( -29.1722, -357.948, -14.7936, 0.88 ) }
    dend_43 { pt3dadd( -29.5742, -359.731, -15.172, 1.25 ) }
    dend_43 { pt3dadd( -29.8985, -361.695, -15.5221, 0.74 ) }
    dend_43 { pt3dadd( -30.0993, -363.308, -15.7518, 0.59 ) }
    dend_43 { pt3dadd( -30.2725, -365.157, -15.9436, 1.03 ) }
    dend_43 { pt3dadd( -30.3588, -366.273, -15.9863, 0.74 ) }
    dend_43 { pt3dadd( -30.449, -367.548, -15.9053, 0.59 ) }
    dend_43 { pt3dadd( -30.4793, -367.807, -15.8662, 0.59 ) }
    dend_43 { pt3dadd( -30.7278, -369.117, -15.6056, 0.74 ) }
    dend_43 { pt3dadd( -30.7522, -369.199, -15.5988, 0.74 ) }
    dend_43 { pt3dadd( -31.1528, -370.394, -15.6872, 0.59 ) }
    dend_43 { pt3dadd( -31.1841, -370.484, -15.7003, 0.59 ) }
    dend_43 { pt3dadd( -31.6734, -372.063, -15.9908, 0.74 ) }
    dend_43 { pt3dadd( -32.0981, -373.66, -16.3165, 0.59 ) }
    dend_43 { pt3dadd( -32.507, -375.739, -16.7794, 0.59 ) }
    dend_43 { pt3dadd( -32.7892, -377.626, -17.2389, 0.59 ) }
    dend_43 { pt3dadd( -32.9001, -378.965, -17.5952, 0.59 ) }
    dend_43 { pt3dadd( -32.935, -380.144, -17.9232, 0.81 ) }
    dend_43 { pt3dadd( -32.9238, -380.395, -17.9966, 0.81 ) }
    dend_43 { pt3dadd( -32.7911, -381.391, -18.2821, 0.81 ) }
    dend_43 { pt3dadd( -32.7781, -381.46, -18.2935, 0.81 ) }
    dend_43 { pt3dadd( -32.6469, -382.667, -18.3619, 0.81 ) }
    dend_43 { pt3dadd( -32.6479, -382.741, -18.3575, 0.81 ) }
    dend_43 { pt3dadd( -32.7595, -384.004, -18.2119, 0.66 ) }
    dend_43 { pt3dadd( -32.7663, -384.077, -18.2019, 0.66 ) }
    dend_43 { pt3dadd( -32.9133, -385.538, -17.9808, 0.66 ) }
    dend_43 { pt3dadd( -33.0208, -387.328, -17.6968, 0.44 ) }
    dend_43 { pt3dadd( -33.0979, -389.71, -17.2981, 0.66 ) }
    dend_43 { pt3dadd( -33.0411, -391.769, -16.8905, 0.96 ) }
    dend_43 { pt3dadd( -32.894, -393.515, -16.4942, 0.96 ) }
    dend_43 { pt3dadd( -32.8764, -393.643, -16.463, 0.96 ) }
    dend_43 { pt3dadd( -32.5096, -395.332, -16.0118, 0.81 ) }
    dend_43 { pt3dadd( -32.4629, -395.49, -15.9693, 0.81 ) }
    dend_43 { pt3dadd( -31.8531, -397.227, -15.5809, 0.74 ) }
    dend_43 { pt3dadd( -31.8249, -397.305, -15.5624, 0.74 ) }
    dend_43 { pt3dadd( -31.5959, -398.122, -15.3909, 0.96 ) }
    dend_43 { pt3dadd( -31.5582, -398.288, -15.3731, 0.96 ) }
    dend_43 { pt3dadd( -31.3505, -399.698, -15.2939, 0.96 ) }
    dend_43 { pt3dadd( -31.2443, -400.702, -15.2936, 0.96 ) }
    dend_43 { pt3dadd( -31.2414, -400.787, -15.3019, 0.96 ) }
    dend_43 { pt3dadd( -31.1986, -402.066, -15.4365, 0.52 ) }
    dend_43 { pt3dadd( -31.1504, -403.475, -15.6063, 0.52 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 55/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -28.1573, -61.9205, -15.7804, 0.74 ) }
    dend_34 { pt3dadd( -29.0087, -61.8149, -15.3749, 0.74 ) }
    dend_34 { pt3dadd( -29.0858, -61.8175, -15.3205, 0.74 ) }
    dend_34 { pt3dadd( -30.15, -61.9916, -14.402, 0.52 ) }
    dend_34 { pt3dadd( -30.706, -62.1125, -13.9143, 0.44 ) }
    dend_34 { pt3dadd( -31.6326, -62.3223, -13.1436, 0.44 ) }
    dend_34 { pt3dadd( -32.5273, -62.5245, -12.4541, 0.96 ) }
    dend_34 { pt3dadd( -34.1721, -62.988, -11.2465, 0.74 ) }
    dend_34 { pt3dadd( -35.1682, -63.3006, -10.5935, 0.74 ) }
    dend_34 { pt3dadd( -35.6583, -63.4839, -10.3228, 0.74 ) }
    dend_34 { pt3dadd( -36.3615, -63.7365, -10.001, 0.59 ) }
    dend_34 { pt3dadd( -36.9771, -63.9209, -9.77746, 0.52 ) }
    dend_34 { pt3dadd( -37.8508, -64.1328, -9.54038, 0.52 ) }
    dend_34 { pt3dadd( -38.44, -64.2514, -9.43421, 0.88 ) }
    dend_34 { pt3dadd( -39.4223, -64.4082, -9.26969, 0.59 ) }
    dend_34 { pt3dadd( -40.9229, -64.5822, -8.93044, 0.96 ) }
    dend_34 { pt3dadd( -42.6037, -64.7293, -8.4635, 1.33 ) }
    dend_34 { pt3dadd( -43.247, -64.7744, -8.25518, 1.33 ) }
    dend_34 { pt3dadd( -44.2864, -64.8451, -7.89569, 0.44 ) }
    dend_34 { pt3dadd( -44.901, -64.8704, -7.68568, 0.44 ) }
    dend_34 { pt3dadd( -46.2309, -64.8866, -7.28697, 0.44 ) }
    dend_34 { pt3dadd( -46.2979, -64.8873, -7.27222, 0.44 ) }
    dend_34 { pt3dadd( -47.36, -64.866, -7.12656, 0.81 ) }
    dend_34 { pt3dadd( -48.0987, -64.8441, -6.96141, 0.96 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 79/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -28.1573, -61.9205, -15.7804, 0.59 ) }
    dend_31 { pt3dadd( -28.9526, -62.7267, -16.1614, 0.59 ) }
    dend_31 { pt3dadd( -29.376, -63.1854, -16.3346, 0.52 ) }
    dend_31 { pt3dadd( -29.6279, -63.4591, -16.4404, 0.88 ) }
    dend_31 { pt3dadd( -30.1056, -63.9377, -16.6773, 0.88 ) }
    dend_31 { pt3dadd( -30.4423, -64.2456, -16.9211, 0.88 ) }
    dend_31 { pt3dadd( -30.7472, -64.4939, -17.1838, 1.03 ) }
    dend_31 { pt3dadd( -31.1888, -64.7586, -17.5979, 0.59 ) }
    dend_31 { pt3dadd( -31.5687, -64.8937, -18.0366, 0.44 ) }
    dend_31 { pt3dadd( -32.0718, -64.9367, -18.6791, 0.74 ) }
    dend_31 { pt3dadd( -32.9215, -64.7762, -19.8678, 0.44 ) }
    dend_31 { pt3dadd( -33.1377, -64.6829, -20.1676, 0.44 ) }
    dend_31 { pt3dadd( -33.3851, -64.5438, -20.4951, 0.44 ) }
    dend_31 { pt3dadd( -33.6745, -64.363, -20.8416, 0.74 ) }
    dend_31 { pt3dadd( -33.8757, -64.2466, -21.0398, 0.96 ) }
    dend_31 { pt3dadd( -33.9115, -64.2325, -21.0642, 0.96 ) }
    dend_31 { pt3dadd( -34.302, -64.1478, -21.2356, 0.88 ) }
    dend_31 { pt3dadd( -35.1355, -64.0101, -21.5995, 0.44 ) }
    dend_31 { pt3dadd( -35.3906, -63.9653, -21.7089, 0.44 ) }
    dend_31 { pt3dadd( -35.4302, -63.9548, -21.7317, 0.44 ) }
    dend_31 { pt3dadd( -35.7147, -63.8481, -21.9155, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_31 { pt3dadd( -36.1317, -63.6438, -22.2131, 0.44 ) }
    dend_31 { pt3dadd( -36.4041, -63.473, -22.4129, 0.81 ) }
    dend_31 { pt3dadd( -36.6509, -63.2795, -22.6086, 1.33 ) }
    dend_31 { pt3dadd( -37.4554, -62.6035, -23.2822, 1.33 ) }
    dend_31 { pt3dadd( -37.7906, -62.3308, -23.5554, 1.25 ) }
    dend_31 { pt3dadd( -38.1786, -62.0311, -23.8627, 0.96 ) }
    dend_31 { pt3dadd( -38.5962, -61.7382, -24.1956, 0.88 ) }
    dend_31 { pt3dadd( -39.0803, -61.4244, -24.5618, 0.74 ) }
    dend_31 { pt3dadd( -39.4609, -61.1971, -24.8238, 0.74 ) }
    dend_31 { pt3dadd( -39.9909, -60.8982, -25.159, 0.66 ) }
    dend_31 { pt3dadd( -40.2777, -60.7374, -25.3571, 0.52 ) }
    dend_31 { pt3dadd( -40.7465, -60.47, -25.683, 0.29 ) }
    dend_31 { pt3dadd( -41.0478, -60.2762, -25.9394, 0.37 ) }
    dend_31 { pt3dadd( -41.0811, -60.2516, -25.9714, 0.37 ) }
    dend_31 { pt3dadd( -41.5633, -59.7772, -26.5383, 0.88 ) }
    dend_31 { pt3dadd( -41.704, -59.5814, -26.7731, 1.25 ) }
    dend_31 { pt3dadd( -41.8865, -59.2942, -27.1556, 1.18 ) }
    dend_31 { pt3dadd( -42.2371, -58.7736, -27.8946, 0.66 ) }
    dend_31 { pt3dadd( -42.2556, -58.7496, -27.931, 0.66 ) }
    dend_31 { pt3dadd( -42.5091, -58.4687, -28.3558, 0.74 ) }
    dend_31 { pt3dadd( -43.0704, -57.9609, -29.1484, 0.88 ) }
    dend_31 { pt3dadd( -43.4952, -57.6231, -29.7051, 0.52 ) }
    dend_31 { pt3dadd( -43.8343, -57.4185, -30.0733, 0.88 ) }
    dend_31 { pt3dadd( -44.2288, -57.2718, -30.3965, 1.03 ) }
    dend_31 { pt3dadd( -44.6659, -57.1618, -30.7102, 1.33 ) }
    dend_31 { pt3dadd( -45.0717, -57.1043, -30.9519, 0.88 ) }
    dend_31 { pt3dadd( -45.1129, -57.0994, -30.9735, 0.88 ) }
    dend_31 { pt3dadd( -45.6408, -57.0337, -31.2716, 0.59 ) }
    dend_31 { pt3dadd( -46.3048, -56.9426, -31.7189, 0.52 ) }
    dend_31 { pt3dadd( -46.3785, -56.9299, -31.7752, 0.52 ) }
    dend_31 { pt3dadd( -46.603, -56.8725, -31.96, 0.81 ) }
    dend_31 { pt3dadd( -47.3228, -56.5741, -32.6661, 0.29 ) }
    dend_31 { pt3dadd( -47.3517, -56.5605, -32.6986, 0.29 ) }
    dend_31 { pt3dadd( -47.5887, -56.4306, -33.0546, 0.29 ) }
    dend_31 { pt3dadd( -47.6789, -56.3803, -33.2107, 0.88 ) }
    dend_31 { pt3dadd( -47.7795, -56.3395, -33.4135, 1.18 ) }
    dend_31 { pt3dadd( -48.245, -56.2194, -34.4279, 0.37 ) }
    dend_31 { pt3dadd( -48.5317, -56.1957, -35.0457, 0.74 ) }
    dend_31 { pt3dadd( -48.9234, -56.2295, -35.8986, 1.03 ) }
    dend_31 { pt3dadd( -48.9428, -56.2341, -35.9394, 1.03 ) }
    dend_31 { pt3dadd( -49.3785, -56.3821, -36.7885, 0.44 ) }
    dend_31 { pt3dadd( -49.4987, -56.4272, -36.9964, 1.18 ) }
    dend_31 { pt3dadd( -49.7257, -56.5071, -37.3088, 1.47 ) }
    dend_31 { pt3dadd( -50.309, -56.6602, -38.23, 0.81 ) }
    dend_31 { pt3dadd( -50.5539, -56.7099, -38.6311, 0.52 ) }
    dend_31 { pt3dadd( -50.8998, -56.7684, -39.2098, 0.37 ) }
    dend_31 { pt3dadd( -51.1059, -56.7977, -39.5511, 0.37 ) }
    dend_31 { pt3dadd( -51.3691, -56.8371, -39.9937, 1.18 ) }
    dend_31 { pt3dadd( -52.7106, -57.0643, -42.32, 0.81 ) }
    dend_31 { pt3dadd( -52.7566, -57.0729, -42.3992, 0.81 ) }
    dend_31 { pt3dadd( -53.0125, -57.1323, -42.8438, 0.81 ) }
    dend_31 { pt3dadd( -53.1962, -57.1766, -43.1358, 0.88 ) }
    dend_31 { pt3dadd( -53.3903, -57.235, -43.4319, 0.81 ) }
    dend_31 { pt3dadd( -53.847, -57.409, -44.0296, 0.29 ) }
    dend_31 { pt3dadd( -53.9595, -57.453, -44.1272, 0.29 ) }
    dend_31 { pt3dadd( -54.1479, -57.5457, -44.3279, 0.29 ) }
    dend_31 { pt3dadd( -54.4849, -57.7536, -44.7363, 1.18 ) }
    dend_31 { pt3dadd( -55.1911, -58.3157, -45.633, 0.59 ) }
    dend_31 { pt3dadd( -55.4115, -58.537, -45.9034, 1.33 ) }
    dend_31 { pt3dadd( -55.4388, -58.5695, -45.9347, 1.33 ) }
    dend_31 { pt3dadd( -55.9645, -59.2491, -46.495, 0.74 ) }
    dend_31 { pt3dadd( -56.2274, -59.6185, -46.7608, 0.66 ) }
    dend_31 { pt3dadd( -56.5296, -60.0655, -47.0792, 0.37 ) }
    dend_31 { pt3dadd( -56.8409, -60.5155, -47.3768, 0.88 ) }
    dend_31 { pt3dadd( -57.1637, -60.9791, -47.6969, 1.03 ) }
    dend_31 { pt3dadd( -57.4301, -61.364, -47.9802, 0.88 ) }
    dend_31 { pt3dadd( -57.4519, -61.3971, -48.0047, 0.88 ) }
    dend_31 { pt3dadd( -57.9607, -62.2827, -48.6918, 0.74 ) }
    dend_31 { pt3dadd( -58.1921, -62.7229, -49.1095, 0.44 ) }
    dend_31 { pt3dadd( -58.3153, -62.9568, -49.3647, 1.47 ) }
    dend_31 { pt3dadd( -58.5745, -63.4123, -49.9354, 1.03 ) }
    dend_31 { pt3dadd( -58.7371, -63.6448, -50.2752, 0.74 ) }
    dend_31 { pt3dadd( -58.8994, -63.806, -50.5507, 0.74 ) }
    dend_31 { pt3dadd( -59.5763, -64.2258, -51.4981, 0.52 ) }
    dend_31 { pt3dadd( -59.9141, -64.3618, -51.9591, 0.66 ) }
    dend_31 { pt3dadd( -60.2269, -64.4716, -52.4032, 0.37 ) }
    dend_31 { pt3dadd( -60.4492, -64.5621, -52.7948, 0.29 ) }
    dend_31 { pt3dadd( -60.6469, -64.6515, -53.1921, 0.29 ) }
    dend_31 { pt3dadd( -60.8702, -64.7661, -53.6896, 0.74 ) }
    dend_31 { pt3dadd( -61.1689, -64.9557, -54.4194, 0.96 ) }
    dend_31 { pt3dadd( -61.5516, -65.2145, -55.4436, 0.96 ) }
    dend_31 { pt3dadd( -62.0905, -65.5578, -56.9845, 0.88 ) }
    dend_31 { pt3dadd( -62.1035, -65.5642, -57.0203, 0.88 ) }
    dend_31 { pt3dadd( -62.3474, -65.644, -57.6551, 0.88 ) }
    dend_31 { pt3dadd( -62.4684, -65.6622, -57.9329, 1.03 ) }
    dend_31 { pt3dadd( -62.6829, -65.6755, -58.3451, 1.03 ) }
    dend_31 { pt3dadd( -63.0544, -65.7073, -58.9377, 0.74 ) }
    dend_31 { pt3dadd( -63.4831, -65.7996, -59.5618, 0.37 ) }
    dend_31 { pt3dadd( -63.5068, -65.8096, -59.601, 0.37 ) }
    dend_31 { pt3dadd( -63.9428, -66.0722, -60.3933, 0.37 ) }
    dend_31 { pt3dadd( -64.3155, -66.3599, -61.1492, 0.37 ) }
    dend_31 { pt3dadd( -64.6513, -66.6588, -61.8538, 0.88 ) }
    dend_31 { pt3dadd( -64.9798, -66.948, -62.5039, 1.18 ) }
    dend_31 { pt3dadd( -65.4622, -67.3435, -63.5419, 0.59 ) }
    dend_31 { pt3dadd( -65.4813, -67.3552, -63.5831, 0.59 ) }
    dend_31 { pt3dadd( -65.9258, -67.4945, -64.4932, 0.44 ) }
    dend_31 { pt3dadd( -66.055, -67.4958, -64.7944, 0.37 ) }
    dend_31 { pt3dadd( -66.2752, -67.439, -65.3665, 0.37 ) }
    dend_31 { pt3dadd( -66.7768, -67.2132, -66.6758, 1.03 ) }
    dend_31 { pt3dadd( -67.0363, -67.0675, -67.3238, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -67.2638, -66.9518, -67.8503, 1.25 ) }
    dend_31 { pt3dadd( -67.8283, -66.73, -69.1703, 1.18 ) }
    dend_31 { pt3dadd( -67.8451, -66.7283, -69.2124, 1.18 ) }
    dend_31 { pt3dadd( -68.1032, -66.7787, -69.8221, 0.59 ) }
    dend_31 { pt3dadd( -68.2672, -66.8519, -70.1633, 0.74 ) }
    dend_31 { pt3dadd( -68.4506, -66.9683, -70.5307, 0.74 ) }
    dend_31 { pt3dadd( -69.0591, -67.4315, -71.756, 0.88 ) }
    dend_31 { pt3dadd( -69.5844, -67.9015, -73.1277, 0.52 ) }
    dend_31 { pt3dadd( -69.7142, -68.0342, -73.5331, 1.18 ) }
    dend_31 { pt3dadd( -69.9136, -68.276, -74.311, 1.55 ) }
    dend_31 { pt3dadd( -70.0083, -68.4005, -74.7249, 1.25 ) }
    dend_31 { pt3dadd( -70.3426, -68.8579, -76.214, 0.74 ) }
    dend_31 { pt3dadd( -70.9744, -69.757, -79.0131, 0.74 ) }
    dend_31 { pt3dadd( -71.0473, -69.8685, -79.3605, 1.4 ) }
    dend_31 { pt3dadd( -71.3811, -70.3996, -81.0915, 0.74 ) }
    dend_31 { pt3dadd( -71.3992, -70.426, -81.1847, 0.74 ) }
    dend_31 { pt3dadd( -71.5149, -70.5696, -81.7543, 0.59 ) }
    dend_31 { pt3dadd( -71.5272, -70.5799, -81.7984, 0.59 ) }
    dend_31 { pt3dadd( -72.1174, -70.877, -83.1201, 0.59 ) }
    dend_31 { pt3dadd( -72.1531, -70.8919, -83.187, 0.59 ) }
    dend_31 { pt3dadd( -72.5188, -71.0105, -83.7963, 0.66 ) }
    dend_31 { pt3dadd( -72.7336, -71.0748, -84.1584, 0.88 ) }
    dend_31 { pt3dadd( -73.5009, -71.2693, -85.4529, 0.44 ) }
    dend_31 { pt3dadd( -73.6053, -71.2965, -85.6086, 1.03 ) }
    dend_31 { pt3dadd( -74.2195, -71.4676, -86.2859, 1.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 25/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -16.5463, -230.345, -110.631, 0.29 ) }
    dend_29 { pt3dadd( -17.4123, -230.687, -111.073, 0.29 ) }
    dend_29 { pt3dadd( -17.949, -230.877, -111.335, 0.29 ) }
    dend_29 { pt3dadd( -18.7111, -231.128, -111.771, 0.22 ) }
    dend_29 { pt3dadd( -19.0448, -231.255, -111.969, 0.81 ) }
    dend_29 { pt3dadd( -19.3717, -231.392, -112.163, 0.81 ) }
    dend_29 { pt3dadd( -19.6436, -231.517, -112.35, 0.81 ) }
    dend_29 { pt3dadd( -20.0919, -231.744, -112.705, 0.52 ) }
    dend_29 { pt3dadd( -20.9455, -232.229, -113.471, 0.22 ) }
    dend_29 { pt3dadd( -21.5062, -232.586, -114.004, 0.22 ) }
    dend_29 { pt3dadd( -21.7648, -232.768, -114.262, 0.81 ) }
    dend_29 { pt3dadd( -22.4974, -233.32, -115.01, 0.96 ) }
    dend_29 { pt3dadd( -22.6704, -233.465, -115.214, 1.11 ) }
    dend_29 { pt3dadd( -23.2099, -233.996, -115.996, 0.22 ) }
    dend_29 { pt3dadd( -23.4687, -234.267, -116.399, 0.22 ) }
    dend_29 { pt3dadd( -23.6115, -234.417, -116.631, 0.74 ) }
    dend_29 { pt3dadd( -23.7687, -234.593, -116.895, 0.96 ) }
    dend_29 { pt3dadd( -24.3228, -235.268, -117.897, 0.59 ) }
    dend_29 { pt3dadd( -24.8239, -235.91, -118.88, 0.29 ) }
    dend_29 { pt3dadd( -25.1503, -236.352, -119.638, 0.22 ) }
    dend_29 { pt3dadd( -25.2347, -236.463, -119.845, 0.37 ) }
    dend_29 { pt3dadd( -25.6273, -236.952, -120.812, 0.22 ) }
    dend_29 { pt3dadd( -25.9502, -237.346, -121.617, 0.81 ) }
    dend_29 { pt3dadd( -26.0933, -237.517, -121.959, 1.03 ) }
    dend_29 { pt3dadd( -26.5536, -238.141, -123.266, 0.37 ) }
    dend_29 { pt3dadd( -26.7038, -238.363, -123.747, 0.52 ) }
    dend_29 { pt3dadd( -27.0542, -238.887, -124.881, 0.29 ) }
    dend_29 { pt3dadd( -27.2019, -239.094, -125.314, 0.66 ) }
    dend_29 { pt3dadd( -27.3298, -239.271, -125.661, 0.81 ) }
    dend_29 { pt3dadd( -27.8554, -240.101, -127.258, 0.29 ) }
    dend_29 { pt3dadd( -27.9829, -240.331, -127.665, 0.44 ) }
    dend_29 { pt3dadd( -27.9973, -240.364, -127.723, 0.44 ) }
    dend_29 { pt3dadd( -28.1254, -240.677, -128.257, 0.59 ) }
    dend_29 { pt3dadd( -28.2532, -241.127, -128.99, 1.03 ) }
    dend_29 { pt3dadd( -28.3648, -242.013, -130.372, 1.03 ) }
    dend_29 { pt3dadd( -28.3584, -242.804, -131.542, 0.29 ) }
    dend_29 { pt3dadd( -28.2978, -243.54, -132.616, 0.88 ) }
    dend_29 { pt3dadd( -28.2725, -243.804, -133.004, 1.25 ) }
    dend_29 { pt3dadd( -28.128, -245.52, -135.537, 0.29 ) }
    dend_29 { pt3dadd( -28.0486, -246.587, -137.113, 0.37 ) }
    dend_29 { pt3dadd( -28.0187, -247.372, -138.234, 0.81 ) }
    dend_29 { pt3dadd( -28.0108, -248.088, -139.266, 0.44 ) }
    dend_29 { pt3dadd( -28.0362, -248.527, -139.891, 0.37 ) }
    dend_29 { pt3dadd( -28.1197, -249.147, -140.753, 0.37 ) }
    dend_29 { pt3dadd( -28.3626, -249.941, -141.771, 0.37 ) }
    dend_29 { pt3dadd( -28.6265, -250.547, -142.5, 0.37 ) }
    dend_29 { pt3dadd( -28.8571, -251.047, -143.061, 1.11 ) }
    dend_29 { pt3dadd( -29.0119, -251.375, -143.418, 1.25 ) }
    dend_29 { pt3dadd( -29.3939, -252.136, -144.297, 0.81 ) }
    dend_29 { pt3dadd( -29.7789, -252.802, -145.078, 0.52 ) }
    dend_29 { pt3dadd( -29.9989, -253.088, -145.404, 0.52 ) }
    dend_29 { pt3dadd( -30.0299, -253.126, -145.451, 0.52 ) }
    dend_29 { pt3dadd( -30.4248, -253.595, -146.027, 0.52 ) }
    dend_29 { pt3dadd( -31.1125, -254.38, -147.061, 0.44 ) }
    dend_29 { pt3dadd( -31.4423, -254.74, -147.539, 0.44 ) }
    dend_29 { pt3dadd( -31.9685, -255.359, -148.425, 0.74 ) }
    dend_29 { pt3dadd( -32.6086, -256.177, -149.618, 0.74 ) }
    dend_29 { pt3dadd( -32.63, -256.206, -149.66, 0.74 ) }
    dend_29 { pt3dadd( -33.1208, -256.971, -150.706, 0.37 ) }
    dend_29 { pt3dadd( -33.3025, -257.264, -151.111, 0.81 ) }
    dend_29 { pt3dadd( -33.8989, -258.162, -152.507, 0.29 ) }
    dend_29 { pt3dadd( -34.1062, -258.436, -152.989, 0.29 ) }
    dend_29 { pt3dadd( -34.3304, -258.701, -153.413, 0.88 ) }
    dend_29 { pt3dadd( -34.4214, -258.812, -153.584, 1.25 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 89/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -16.5463, -230.345, -110.631, 0.59 ) }
    dend_28 { pt3dadd( -16.2773, -232.603, -111.172, 0.59 ) }
    dend_28 { pt3dadd( -16.1882, -233.541, -111.362, 0.59 ) }
    dend_28 { pt3dadd( -16.1621, -233.802, -111.407, 0.81 ) }
    dend_28 { pt3dadd( -16.0917, -234.41, -111.49, 0.81 ) }
    dend_28 { pt3dadd( -15.9751, -235.29, -111.591, 0.15 ) }
    dend_28 { pt3dadd( -15.8499, -236.098, -111.661, 0.15 ) }
    dend_28 { pt3dadd( -15.8407, -236.156, -111.655, 0.15 ) }
    dend_28 { pt3dadd( -15.7724, -236.496, -111.617, 0.59 ) }
    dend_28 { pt3dadd( -15.6623, -237.001, -111.562, 0.88 ) }
    dend_28 { pt3dadd( -15.635, -237.13, -111.55, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_28 { pt3dadd( -15.5678, -237.581, -111.518, 0.88 ) }
    dend_28 { pt3dadd( -15.5012, -238.528, -111.454, 0.52 ) }
    dend_28 { pt3dadd( -15.5139, -239.301, -111.412, 0.44 ) }
    dend_28 { pt3dadd( -15.5548, -239.732, -111.395, 0.74 ) }
    dend_28 { pt3dadd( -15.641, -240.275, -111.378, 0.44 ) }
    dend_28 { pt3dadd( -15.8107, -241.021, -111.33, 0.29 ) }
    dend_28 { pt3dadd( -15.9708, -241.528, -111.289, 0.88 ) }
    dend_28 { pt3dadd( -16.1255, -241.995, -111.235, 0.96 ) }
    dend_28 { pt3dadd( -16.3386, -242.722, -111.125, 0.81 ) }
    dend_28 { pt3dadd( -16.5299, -243.564, -110.979, 0.29 ) }
    dend_28 { pt3dadd( -16.6528, -244.453, -110.827, 0.44 ) }
    dend_28 { pt3dadd( -16.6861, -245.088, -110.708, 0.22 ) }
    dend_28 { pt3dadd( -16.6443, -246.107, -110.515, 0.22 ) }
    dend_28 { pt3dadd( -16.5464, -246.729, -110.384, 0.59 ) }
    dend_28 { pt3dadd( -16.362, -247.433, -110.188, 0.81 ) }
    dend_28 { pt3dadd( -16.1505, -248.048, -109.991, 0.81 ) }
    dend_28 { pt3dadd( -15.9733, -248.519, -109.839, 0.88 ) }
    dend_28 { pt3dadd( -15.6915, -249.401, -109.549, 0.37 ) }
    dend_28 { pt3dadd( -15.5477, -250.287, -109.292, 0.59 ) }
    dend_28 { pt3dadd( -15.5135, -251.158, -109.091, 0.96 ) }
    dend_28 { pt3dadd( -15.5472, -251.775, -108.977, 0.59 ) }
    dend_28 { pt3dadd( -15.6548, -252.518, -108.879, 0.29 ) }
    dend_28 { pt3dadd( -15.8644, -253.548, -108.867, 0.29 ) }
    dend_28 { pt3dadd( -16.148, -254.666, -108.96, 0.74 ) }
    dend_28 { pt3dadd( -16.319, -255.316, -109.061, 0.96 ) }
    dend_28 { pt3dadd( -16.3422, -255.413, -109.078, 0.96 ) }
    dend_28 { pt3dadd( -16.4565, -255.94, -109.159, 0.96 ) }
    dend_28 { pt3dadd( -16.6503, -256.912, -109.288, 0.44 ) }
    dend_28 { pt3dadd( -16.7742, -257.584, -109.359, 0.29 ) }
    dend_28 { pt3dadd( -17.0021, -258.484, -109.406, 0.59 ) }
    dend_28 { pt3dadd( -17.2618, -259.212, -109.406, 1.03 ) }
    dend_28 { pt3dadd( -17.3596, -259.433, -109.4, 1.11 ) }
    dend_28 { pt3dadd( -17.5744, -259.864, -109.373, 0.96 ) }
    dend_28 { pt3dadd( -17.8508, -260.376, -109.322, 0.96 ) }
    dend_28 { pt3dadd( -18.2855, -261.139, -109.246, 0.37 ) }
    dend_28 { pt3dadd( -18.7182, -261.888, -109.183, 0.22 ) }
    dend_28 { pt3dadd( -18.9765, -262.372, -109.154, 0.44 ) }
    dend_28 { pt3dadd( -19.3818, -263.2, -109.1, 0.44 ) }
    dend_28 { pt3dadd( -19.6175, -263.793, -109.052, 0.66 ) }
    dend_28 { pt3dadd( -19.7894, -264.408, -108.993, 0.88 ) }
    dend_28 { pt3dadd( -19.9224, -265.064, -108.941, 0.29 ) }
    dend_28 { pt3dadd( -20.0759, -265.794, -108.818, 0.29 ) }
    dend_28 { pt3dadd( -20.0927, -265.874, -108.799, 0.29 ) }
    dend_28 { pt3dadd( -20.2553, -266.567, -108.605, 0.29 ) }
    dend_28 { pt3dadd( -20.479, -267.448, -108.354, 0.29 ) }
    dend_28 { pt3dadd( -20.7438, -268.443, -108.073, 0.29 ) }
    dend_28 { pt3dadd( -21.1524, -269.688, -107.673, 0.59 ) }
    dend_28 { pt3dadd( -21.2847, -269.999, -107.572, 0.74 ) }
    dend_28 { pt3dadd( -21.6775, -270.801, -107.325, 0.29 ) }
    dend_28 { pt3dadd( -22.0124, -271.424, -107.154, 0.29 ) }
    dend_28 { pt3dadd( -22.0403, -271.483, -107.14, 0.29 ) }
    dend_28 { pt3dadd( -22.2678, -272.244, -107.007, 0.81 ) }
    dend_28 { pt3dadd( -22.3471, -272.725, -106.97, 1.25 ) }
    dend_28 { pt3dadd( -22.3983, -273.258, -106.958, 0.88 ) }
    dend_28 { pt3dadd( -22.4065, -274.157, -106.964, 0.52 ) }
    dend_28 { pt3dadd( -22.3578, -275.262, -106.951, 0.29 ) }
    dend_28 { pt3dadd( -22.3159, -275.818, -106.942, 0.66 ) }
    dend_28 { pt3dadd( -22.2135, -276.551, -106.927, 0.74 ) }
    dend_28 { pt3dadd( -21.959, -277.769, -106.851, 0.22 ) }
    dend_28 { pt3dadd( -21.7758, -278.479, -106.781, 0.22 ) }
    dend_28 { pt3dadd( -21.5637, -279.191, -106.652, 0.88 ) }
    dend_28 { pt3dadd( -21.5447, -279.261, -106.634, 0.88 ) }
    dend_28 { pt3dadd( -21.3847, -279.889, -106.419, 0.81 ) }
    dend_28 { pt3dadd( -21.2183, -280.56, -106.17, 0.74 ) }
    dend_28 { pt3dadd( -21.2068, -280.622, -106.147, 0.74 ) }
    dend_28 { pt3dadd( -21.1447, -281.529, -105.904, 0.29 ) }
    dend_28 { pt3dadd( -21.1522, -282.418, -105.737, 0.74 ) }
    dend_28 { pt3dadd( -21.1824, -282.721, -105.695, 0.81 ) }
    dend_28 { pt3dadd( -21.3575, -283.58, -105.645, 0.22 ) }
    dend_28 { pt3dadd( -21.4849, -284.003, -105.654, 0.66 ) }
    dend_28 { pt3dadd( -21.6322, -284.432, -105.691, 0.74 ) }
    dend_28 { pt3dadd( -21.6537, -284.486, -105.7, 0.74 ) }
    dend_28 { pt3dadd( -21.9273, -285.1, -105.835, 0.74 ) }
    dend_28 { pt3dadd( -22.286, -285.806, -106.016, 0.22 ) }
    dend_28 { pt3dadd( -22.6019, -286.371, -106.245, 0.22 ) }
    dend_28 { pt3dadd( -22.6262, -286.415, -106.267, 0.22 ) }
    dend_28 { pt3dadd( -22.774, -286.74, -106.447, 0.66 ) }
    dend_28 { pt3dadd( -22.7926, -286.804, -106.481, 0.66 ) }
    dend_28 { pt3dadd( -22.8434, -287.156, -106.662, 0.66 ) }
    dend_28 { pt3dadd( -22.9426, -288.145, -107.126, 0.52 ) }
    dend_28 { pt3dadd( -22.9457, -288.194, -107.157, 0.52 ) }
    dend_28 { pt3dadd( -23.0052, -288.855, -107.587, 0.22 ) }
    dend_28 { pt3dadd( -23.074, -289.392, -107.936, 1.03 ) }
    dend_28 { pt3dadd( -23.1129, -289.721, -108.155, 1.11 ) }
    dend_28 { pt3dadd( -23.1854, -290.326, -108.543, 0.88 ) }
    dend_28 { pt3dadd( -23.4616, -292.269, -109.696, 0.22 ) }
    dend_28 { pt3dadd( -23.5296, -292.737, -109.964, 0.88 ) }
    dend_28 { pt3dadd( -23.6081, -293.24, -110.253, 0.59 ) }
    dend_28 { pt3dadd( -23.7186, -293.992, -110.664, 0.52 ) }
    dend_28 { pt3dadd( -23.7989, -294.676, -110.988, 0.81 ) }
    dend_28 { pt3dadd( -23.806, -295.182, -111.238, 0.81 ) }
    dend_28 { pt3dadd( -23.7167, -296.261, -111.858, 0.29 ) }
    dend_28 { pt3dadd( -23.7089, -296.307, -111.889, 0.29 ) }
    dend_28 { pt3dadd( -23.6026, -296.7, -112.194, 0.96 ) }
    dend_28 { pt3dadd( -23.4638, -297.086, -112.534, 1.25 ) }
    dend_28 { pt3dadd( -22.6902, -298.825, -114.207, 0.52 ) }
    dend_28 { pt3dadd( -22.1084, -299.966, -115.362, 0.44 ) }
    dend_28 { pt3dadd( -21.9281, -300.279, -115.678, 0.66 ) }
    dend_28 { pt3dadd( -21.3621, -301.206, -116.592, 0.52 ) }
    dend_28 { pt3dadd( -20.7046, -302.208, -117.536, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_28 { pt3dadd( -20.5384, -302.449, -117.745, 0.59 ) }
    dend_28 { pt3dadd( -20.4691, -302.553, -117.813, 0.59 ) }
    dend_28 { pt3dadd( -19.7769, -303.559, -118.342, 0.22 ) }
    dend_28 { pt3dadd( -19.7379, -303.617, -118.37, 0.22 ) }
    dend_28 { pt3dadd( -19.4718, -304.03, -118.488, 0.59 ) }
    dend_28 { pt3dadd( -19.39, -304.156, -118.502, 0.59 ) }
    dend_28 { pt3dadd( -19.2766, -304.328, -118.522, 0.59 ) }
    dend_28 { pt3dadd( -19.2398, -304.383, -118.528, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 8/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -10.5094, 158.851, 6.13226, 0.29 ) }
    dend_24 { pt3dadd( -11.7874, 159.631, 5.6609, 0.29 ) }
    dend_24 { pt3dadd( -12.6705, 160.157, 5.41332, 0.29 ) }
    dend_24 { pt3dadd( -13.8937, 160.875, 5.12909, 0.66 ) }
    dend_24 { pt3dadd( -14.9604, 161.501, 4.85616, 0.29 ) }
    dend_24 { pt3dadd( -15.495, 161.816, 4.71529, 0.37 ) }
    dend_24 { pt3dadd( -16.5994, 162.476, 4.42631, 0.37 ) }
    dend_24 { pt3dadd( -17.7414, 163.194, 4.17562, 0.59 ) }
    dend_24 { pt3dadd( -18.314, 163.559, 4.04828, 0.81 ) }
    dend_24 { pt3dadd( -19.2881, 164.183, 3.84837, 0.37 ) }
    dend_24 { pt3dadd( -19.5964, 164.406, 3.80137, 0.88 ) }
    dend_24 { pt3dadd( -20.0404, 164.763, 3.72364, 1.03 ) }
    dend_24 { pt3dadd( -20.5969, 165.275, 3.61896, 0.81 ) }
    dend_24 { pt3dadd( -21.033, 165.722, 3.54477, 0.37 ) }
    dend_24 { pt3dadd( -21.0852, 165.787, 3.53966, 0.37 ) }
    dend_24 { pt3dadd( -21.5869, 166.565, 3.53706, 0.37 ) }
    dend_24 { pt3dadd( -21.6378, 166.659, 3.5355, 0.37 ) }
    dend_24 { pt3dadd( -21.9906, 167.436, 3.61862, 0.37 ) }
    dend_24 { pt3dadd( -22.0168, 167.506, 3.63323, 0.37 ) }
    dend_24 { pt3dadd( -22.3907, 168.549, 3.94058, 0.22 ) }
    dend_24 { pt3dadd( -22.5953, 169.126, 4.1333, 0.74 ) }
    dend_24 { pt3dadd( -22.6179, 169.194, 4.15776, 0.74 ) }
    dend_24 { pt3dadd( -23.1353, 170.785, 4.71673, 0.29 ) }
    dend_24 { pt3dadd( -23.2329, 171.107, 4.83719, 0.66 ) }
    dend_24 { pt3dadd( -23.3695, 171.546, 5.00555, 0.66 ) }
    dend_24 { pt3dadd( -23.6234, 172.323, 5.30832, 0.37 ) }
    dend_24 { pt3dadd( -23.7966, 172.882, 5.50401, 0.29 ) }
    dend_24 { pt3dadd( -23.9593, 173.448, 5.65499, 0.29 ) }
    dend_24 { pt3dadd( -24.17, 174.288, 5.79234, 0.96 ) }
    dend_24 { pt3dadd( -24.188, 174.358, 5.80405, 0.96 ) }
    dend_24 { pt3dadd( -24.2875, 174.818, 5.87611, 0.66 ) }
    dend_24 { pt3dadd( -24.423, 175.52, 5.98088, 0.29 ) }
    dend_24 { pt3dadd( -24.5694, 176.215, 6.06623, 0.29 ) }
    dend_24 { pt3dadd( -24.5863, 176.286, 6.07071, 0.29 ) }
    dend_24 { pt3dadd( -24.7627, 176.995, 6.07044, 1.11 ) }
    dend_24 { pt3dadd( -24.885, 177.673, 6.05326, 1.47 ) }
    dend_24 { pt3dadd( -24.9072, 177.859, 6.04533, 1.47 ) }
    dend_24 { pt3dadd( -24.9894, 178.806, 5.99312, 0.66 ) }
    dend_24 { pt3dadd( -25.0399, 179.545, 5.95315, 0.37 ) }
    dend_24 { pt3dadd( -25.1, 180.474, 5.90574, 0.37 ) }
    dend_24 { pt3dadd( -25.1876, 181.919, 5.7454, 0.29 ) }
    dend_24 { pt3dadd( -25.2969, 183.447, 5.51354, 0.29 ) }
    dend_24 { pt3dadd( -25.3073, 183.604, 5.48828, 0.29 ) }
    dend_24 { pt3dadd( -25.3517, 184.584, 5.3136, 0.96 ) }
    dend_24 { pt3dadd( -25.3739, 185.113, 5.21105, 1.18 ) }
    dend_24 { pt3dadd( -25.4816, 186.836, 4.78258, 0.37 ) }
    dend_24 { pt3dadd( -25.5641, 187.403, 4.58378, 0.37 ) }
    dend_24 { pt3dadd( -31.1632, 196.122, 3.79727, 0.37 ) }
    dend_24 { pt3dadd( -34.9907, 205.628, 1.72515, 0.37 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 57/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -10.5094, 158.851, 6.13226, 1.03 ) }
    dend_21 { pt3dadd( -10.5596, 159.218, 6.23613, 1.03 ) }
    dend_21 { pt3dadd( -10.7083, 160.098, 6.45606, 1.4 ) }
    dend_21 { pt3dadd( -10.8878, 161.205, 6.6872, 1.4 ) }
    dend_21 { pt3dadd( -10.8981, 161.274, 6.69983, 1.4 ) }
    dend_21 { pt3dadd( -11.0293, 162.28, 6.85614, 1.25 ) }
    dend_21 { pt3dadd( -11.136, 163.344, 7.01893, 0.81 ) }
    dend_21 { pt3dadd( -11.1405, 163.414, 7.03216, 0.81 ) }
    dend_21 { pt3dadd( -11.1705, 164.203, 7.19195, 0.96 ) }
    dend_21 { pt3dadd( -11.1734, 164.482, 7.24234, 0.96 ) }
    dend_21 { pt3dadd( -11.1711, 165.267, 7.39227, 1.18 ) }
    dend_21 { pt3dadd( -11.1435, 166.166, 7.58178, 0.96 ) }
    dend_21 { pt3dadd( -11.1249, 167.436, 7.80016, 1.18 ) }
    dend_21 { pt3dadd( -11.1266, 167.54, 7.81432, 1.18 ) }
    dend_21 { pt3dadd( -11.1637, 168.391, 7.87842, 1.18 ) }
    dend_21 { pt3dadd( -11.2166, 169.359, 7.85856, 0.96 ) }
    dend_21 { pt3dadd( -11.2224, 169.446, 7.8483, 0.96 ) }
    dend_21 { pt3dadd( -11.2899, 170.617, 7.62286, 1.47 ) }
    dend_21 { pt3dadd( -11.2924, 170.686, 7.60592, 1.47 ) }
    dend_21 { pt3dadd( -11.2804, 171.765, 7.35849, 1.18 ) }
    dend_21 { pt3dadd( -11.1979, 172.879, 7.10965, 0.81 ) }
    dend_21 { pt3dadd( -11.1785, 173.003, 7.0873, 0.81 ) }
    dend_21 { pt3dadd( -11.0299, 173.777, 7.06509, 0.74 ) }
    dend_21 { pt3dadd( -11.0171, 173.838, 7.07538, 0.74 ) }
    dend_21 { pt3dadd( -10.9523, 174.366, 7.22295, 0.74 ) }
    dend_21 { pt3dadd( -10.9533, 174.432, 7.24813, 0.74 ) }
    dend_21 { pt3dadd( -11.0387, 174.979, 7.46268, 0.81 ) }
    dend_21 { pt3dadd( -11.3497, 176.174, 7.89118, 1.18 ) }
    dend_21 { pt3dadd( -11.5116, 176.653, 8.05005, 1.4 ) }
    dend_21 { pt3dadd( -11.8295, 177.515, 8.31361, 0.96 ) }
    dend_21 { pt3dadd( -12.1536, 178.347, 8.54833, 0.96 ) }
    dend_21 { pt3dadd( -12.4457, 179.088, 8.72956, 0.96 ) }
    dend_21 { pt3dadd( -12.8114, 180.014, 8.89373, 0.96 ) }
    dend_21 { pt3dadd( -12.8347, 180.078, 8.90596, 0.96 ) }
    dend_21 { pt3dadd( -12.9869, 180.563, 9.0345, 0.96 ) }
    dend_21 { pt3dadd( -13.0829, 180.924, 9.1489, 1.18 ) }
    dend_21 { pt3dadd( -13.1206, 181.095, 9.21185, 1.18 ) }
    dend_21 { pt3dadd( -13.2676, 181.807, 9.47845, 1.18 ) }
    dend_21 { pt3dadd( -13.5585, 183.246, 9.98129, 0.96 ) }
    dend_21 { pt3dadd( -13.8007, 184.425, 10.3946, 0.66 ) }
    dend_21 { pt3dadd( -13.9208, 184.99, 10.5938, 0.66 ) }
    dend_21 { pt3dadd( -14.0902, 185.744, 10.8394, 0.88 ) }
    dend_21 { pt3dadd( -14.2602, 186.511, 11.0666, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_21 { pt3dadd( -14.4184, 187.239, 11.2581, 1.03 ) }
    dend_21 { pt3dadd( -14.5856, 188.03, 11.4106, 1.03 ) }
    dend_21 { pt3dadd( -14.5975, 188.089, 11.4228, 1.03 ) }
    dend_21 { pt3dadd( -14.7371, 188.765, 11.5466, 1.11 ) }
    dend_21 { pt3dadd( -14.8905, 189.48, 11.6506, 1.11 ) }
    dend_21 { pt3dadd( -14.9137, 189.582, 11.6637, 1.11 ) }
    dend_21 { pt3dadd( -15.1667, 190.63, 11.7677, 0.96 ) }
    dend_21 { pt3dadd( -15.3463, 191.361, 11.8562, 0.96 ) }
    dend_21 { pt3dadd( -15.5728, 192.353, 11.9994, 1.4 ) }
    dend_21 { pt3dadd( -15.7201, 193.05, 12.1123, 1.03 ) }
    dend_21 { pt3dadd( -15.8802, 193.918, 12.2487, 1.25 ) }
    dend_21 { pt3dadd( -16.0225, 194.986, 12.4067, 0.88 ) }
    dend_21 { pt3dadd( -16.0846, 195.986, 12.5431, 0.88 ) }
    dend_21 { pt3dadd( -16.0838, 196.853, 12.6638, 0.88 ) }
    dend_21 { pt3dadd( -16.0679, 197.053, 12.6904, 0.88 ) }
    dend_21 { pt3dadd( -15.98, 197.774, 12.769, 0.88 ) }
    dend_21 { pt3dadd( -15.8671, 198.76, 12.8409, 0.81 ) }
    dend_21 { pt3dadd( -15.7813, 199.671, 12.8687, 0.81 ) }
    dend_21 { pt3dadd( -15.78, 199.734, 12.8676, 0.81 ) }
    dend_21 { pt3dadd( -15.8124, 200.339, 12.8919, 0.96 ) }
    dend_21 { pt3dadd( -15.9509, 201.379, 12.9775, 0.96 ) }
    dend_21 { pt3dadd( -16.168, 202.492, 13.1039, 1.03 ) }
    dend_21 { pt3dadd( -16.1805, 202.546, 13.1112, 1.03 ) }
    dend_21 { pt3dadd( -16.5378, 203.898, 13.3091, 1.03 ) }
    dend_21 { pt3dadd( -16.8335, 205.019, 13.469, 1.03 ) }
    dend_21 { pt3dadd( -17.1079, 206.138, 13.6216, 1.03 ) }
    dend_21 { pt3dadd( -17.1908, 206.559, 13.6753, 1.03 ) }
    dend_21 { pt3dadd( -17.2603, 207.087, 13.7307, 1.03 ) }
    dend_21 { pt3dadd( -17.3352, 207.937, 13.7968, 0.88 ) }
    dend_21 { pt3dadd( -17.3621, 208.975, 13.8316, 0.88 ) }
    dend_21 { pt3dadd( -17.3466, 209.868, 13.809, 1.11 ) }
    dend_21 { pt3dadd( -17.3213, 210.234, 13.7827, 1.11 ) }
    dend_21 { pt3dadd( -17.2487, 211.212, 13.6741, 1.11 ) }
    dend_21 { pt3dadd( -17.2368, 211.344, 13.6547, 1.11 ) }
    dend_21 { pt3dadd( -17.1662, 212.025, 13.5324, 0.96 ) }
    dend_21 { pt3dadd( -17.1621, 212.077, 13.5215, 0.96 ) }
    dend_21 { pt3dadd( -17.1193, 213.159, 13.2828, 0.88 ) }
    dend_21 { pt3dadd( -17.1184, 213.98, 13.1046, 0.66 ) }
    dend_21 { pt3dadd( -17.1213, 214.105, 13.0797, 0.66 ) }
    dend_21 { pt3dadd( -17.1312, 214.871, 12.9484, 0.66 ) }
    dend_21 { pt3dadd( -17.1307, 214.941, 12.939, 0.66 ) }
    dend_21 { pt3dadd( -17.0826, 215.752, 12.8707, 0.96 ) }
    dend_21 { pt3dadd( -17.0677, 215.877, 12.8678, 0.96 ) }
    dend_21 { pt3dadd( -16.9209, 216.677, 12.843, 0.96 ) }
    dend_21 { pt3dadd( -16.8894, 216.825, 12.8377, 0.96 ) }
    dend_21 { pt3dadd( -16.7966, 217.25, 12.8233, 0.96 ) }
    dend_21 { pt3dadd( -16.6254, 218.063, 12.8407, 0.96 ) }
    dend_21 { pt3dadd( -16.5036, 218.652, 12.877, 1.18 ) }
    dend_21 { pt3dadd( -16.3813, 219.345, 12.9364, 0.74 ) }
    dend_21 { pt3dadd( -16.2825, 220.168, 13.0206, 0.74 ) }
    dend_21 { pt3dadd( -16.2511, 220.798, 13.0899, 1.18 ) }
    dend_21 { pt3dadd( -16.3095, 221.775, 13.2015, 0.66 ) }
    dend_21 { pt3dadd( -16.4395, 222.506, 13.2843, 0.66 ) }
    dend_21 { pt3dadd( -16.6735, 223.381, 13.3761, 0.66 ) }
    dend_21 { pt3dadd( -16.9676, 224.237, 13.4605, 1.18 ) }
    dend_21 { pt3dadd( -17.2118, 224.853, 13.4972, 1.18 ) }
    dend_21 { pt3dadd( -17.7267, 226.053, 13.5138, 0.96 ) }
    dend_21 { pt3dadd( -18.0841, 226.872, 13.5158, 0.96 ) }
    dend_21 { pt3dadd( -18.3336, 227.468, 13.5329, 0.66 ) }
    dend_21 { pt3dadd( -18.3521, 227.517, 13.5354, 0.66 ) }
    dend_21 { pt3dadd( -18.6723, 228.488, 13.605, 0.59 ) }
    dend_21 { pt3dadd( -18.8496, 229.109, 13.6608, 1.03 ) }
    dend_21 { pt3dadd( -19.1409, 230.252, 13.8483, 0.81 ) }
    dend_21 { pt3dadd( -19.2955, 230.862, 13.9821, 1.03 ) }
    dend_21 { pt3dadd( -19.3282, 230.981, 14.0119, 1.03 ) }
    dend_21 { pt3dadd( -19.5509, 231.727, 14.2045, 1.03 ) }
    dend_21 { pt3dadd( -19.635, 231.978, 14.2735, 1.03 ) }
    dend_21 { pt3dadd( -19.9984, 232.987, 14.5252, 0.96 ) }
    dend_21 { pt3dadd( -20.3165, 233.896, 14.6991, 0.96 ) }
    dend_21 { pt3dadd( -20.524, 234.593, 14.8132, 0.96 ) }
    dend_21 { pt3dadd( -20.6985, 235.3, 14.9097, 1.11 ) }
    dend_21 { pt3dadd( -20.7913, 235.816, 14.961, 1.33 ) }
    dend_21 { pt3dadd( -20.8004, 235.886, 14.9649, 1.33 ) }
    dend_21 { pt3dadd( -20.8514, 236.835, 14.9508, 0.88 ) }
    dend_21 { pt3dadd( -20.8394, 237.567, 14.9376, 1.11 ) }
    dend_21 { pt3dadd( -20.8253, 237.7, 14.9398, 1.11 ) }
    dend_21 { pt3dadd( -20.707, 238.284, 14.9701, 1.11 ) }
    dend_21 { pt3dadd( -20.6895, 238.343, 14.9748, 1.11 ) }
    dend_21 { pt3dadd( -20.4663, 238.938, 15.089, 0.88 ) }
    dend_21 { pt3dadd( -20.4427, 238.993, 15.1037, 0.81 ) }
    dend_21 { pt3dadd( -20.1851, 239.597, 15.2729, 1.03 ) }
    dend_21 { pt3dadd( -20.0051, 240.038, 15.4034, 1.03 ) }
    dend_21 { pt3dadd( -19.7388, 240.771, 15.6186, 0.81 ) }
    dend_21 { pt3dadd( -19.4064, 241.881, 15.9281, 0.74 ) }
    dend_21 { pt3dadd( -19.2213, 242.689, 16.1358, 0.74 ) }
    dend_21 { pt3dadd( -19.082, 243.508, 16.3482, 0.88 ) }
    dend_21 { pt3dadd( -19.0268, 243.967, 16.4616, 0.88 ) }
    dend_21 { pt3dadd( -18.9859, 244.65, 16.6353, 0.88 ) }
    dend_21 { pt3dadd( -18.9791, 245.1, 16.7429, 0.88 ) }
    dend_21 { pt3dadd( -18.9639, 245.719, 16.8584, 0.88 ) }
    dend_21 { pt3dadd( -18.8992, 246.605, 17.0118, 0.88 ) }
    dend_21 { pt3dadd( -18.8336, 247.059, 17.0986, 0.88 ) }
    dend_21 { pt3dadd( -18.8094, 247.189, 17.1219, 0.88 ) }
    dend_21 { pt3dadd( -18.6295, 247.986, 17.2621, 0.88 ) }
    dend_21 { pt3dadd( -18.4359, 248.822, 17.3929, 0.88 ) }
    dend_21 { pt3dadd( -18.2189, 249.737, 17.5151, 0.44 ) }
    dend_21 { pt3dadd( -18.0469, 250.574, 17.6293, 0.81 ) }
    dend_21 { pt3dadd( -17.9548, 251.204, 17.7294, 1.25 ) }
    dend_21 { pt3dadd( -17.8746, 251.996, 17.8677, 0.96 ) }
    dend_21 { pt3dadd( -17.8371, 253.024, 18.0595, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_21 { pt3dadd( -17.844, 253.341, 18.1202, 1.47 ) }
    dend_21 { pt3dadd( -17.9344, 254.671, 18.3547, 1.11 ) }
    dend_21 { pt3dadd( -18.0206, 255.471, 18.4707, 0.96 ) }
    dend_21 { pt3dadd( -18.0282, 255.532, 18.479, 0.96 ) }
    dend_21 { pt3dadd( -18.1097, 256.238, 18.5511, 0.96 ) }
    dend_21 { pt3dadd( -18.1148, 256.294, 18.5543, 0.96 ) }
    dend_21 { pt3dadd( -18.1565, 257.196, 18.5733, 0.96 ) }
    dend_21 { pt3dadd( -18.1552, 257.322, 18.5674, 0.96 ) }
    dend_21 { pt3dadd( -18.0969, 258.496, 18.4857, 0.96 ) }
    dend_21 { pt3dadd( -17.9928, 259.834, 18.325, 0.96 ) }
    dend_21 { pt3dadd( -17.8705, 261.035, 18.137, 0.96 ) }
    dend_21 { pt3dadd( -17.7852, 261.758, 18.0325, 0.96 ) }
    dend_21 { pt3dadd( -17.6947, 262.404, 17.9412, 0.96 ) }
    dend_21 { pt3dadd( -17.558, 263.281, 17.8261, 1.11 ) }
    dend_21 { pt3dadd( -17.3321, 264.587, 17.6694, 1.11 ) }
    dend_21 { pt3dadd( -17.3222, 264.642, 17.6674, 1.11 ) }
    dend_21 { pt3dadd( -17.1028, 265.809, 17.7766, 1.11 ) }
    dend_21 { pt3dadd( -17.0926, 265.869, 17.7891, 1.11 ) }
    dend_21 { pt3dadd( -16.9699, 266.623, 18.021, 1.11 ) }
    dend_21 { pt3dadd( -16.8701, 267.243, 18.2461, 1.18 ) }
    dend_21 { pt3dadd( -16.7155, 268.299, 18.6752, 0.88 ) }
    dend_21 { pt3dadd( -16.6093, 269.041, 18.9469, 0.66 ) }
    dend_21 { pt3dadd( -16.6023, 269.101, 18.965, 0.66 ) }
    dend_21 { pt3dadd( -16.5863, 269.668, 19.1164, 0.81 ) }
    dend_21 { pt3dadd( -16.6158, 270.396, 19.2786, 0.81 ) }
    dend_21 { pt3dadd( -16.6205, 270.459, 19.2887, 0.81 ) }
    dend_21 { pt3dadd( -16.6842, 271.143, 19.3453, 0.66 ) }
    dend_21 { pt3dadd( -16.747, 271.862, 19.378, 1.18 ) }
    dend_21 { pt3dadd( -16.8388, 273.003, 19.4172, 1.03 ) }
    dend_21 { pt3dadd( -16.8915, 273.724, 19.4327, 0.88 ) }
    dend_21 { pt3dadd( -16.9437, 274.639, 19.4213, 0.74 ) }
    dend_21 { pt3dadd( -16.9827, 275.684, 19.3775, 1.25 ) }
    dend_21 { pt3dadd( -16.9967, 276.239, 19.3354, 1.03 ) }
    dend_21 { pt3dadd( -16.9959, 276.371, 19.3228, 1.03 ) }
    dend_21 { pt3dadd( -16.9667, 277.285, 19.1996, 1.03 ) }
    dend_21 { pt3dadd( -16.9472, 278.025, 19.1483, 1.03 ) }
    dend_21 { pt3dadd( -16.9426, 278.089, 19.1506, 1.03 ) }
    dend_21 { pt3dadd( -16.8268, 279.032, 19.2849, 1.25 ) }
    dend_21 { pt3dadd( -16.8155, 279.091, 19.3002, 1.25 ) }
    dend_21 { pt3dadd( -16.5796, 280.059, 19.6177, 1.4 ) }
    dend_21 { pt3dadd( -16.1482, 281.547, 20.2105, 0.74 ) }
    dend_21 { pt3dadd( -15.873, 282.454, 20.6006, 0.59 ) }
    dend_21 { pt3dadd( -15.8482, 282.533, 20.6346, 0.59 ) }
    dend_21 { pt3dadd( -15.4842, 283.594, 21.0817, 0.59 ) }
    dend_21 { pt3dadd( -15.288, 284.193, 21.2976, 0.81 ) }
    dend_21 { pt3dadd( -15.2711, 284.25, 21.3136, 0.81 ) }
    dend_21 { pt3dadd( -15.1142, 284.949, 21.3945, 0.81 ) }
    dend_21 { pt3dadd( -15.0868, 285.136, 21.4035, 0.81 ) }
    dend_21 { pt3dadd( -15.0035, 285.914, 21.4126, 1.03 ) }
    dend_21 { pt3dadd( -14.9428, 286.691, 21.3901, 1.25 ) }
    dend_21 { pt3dadd( -14.8802, 287.285, 21.405, 1.25 ) }
    dend_21 { pt3dadd( -14.8731, 287.338, 21.4083, 1.25 ) }
    dend_21 { pt3dadd( -14.7551, 288.097, 21.5246, 0.96 ) }
    dend_21 { pt3dadd( -14.5713, 289.2, 21.7588, 0.74 ) }
    dend_21 { pt3dadd( -14.4932, 289.694, 21.9156, 0.74 ) }
    dend_21 { pt3dadd( -14.3244, 290.799, 22.34, 0.88 ) }
    dend_21 { pt3dadd( -14.2523, 291.348, 22.5684, 0.74 ) }
    dend_21 { pt3dadd( -14.1239, 292.5, 23.0563, 0.74 ) }
    dend_21 { pt3dadd( -14.078, 293.078, 23.304, 0.74 ) }
    dend_21 { pt3dadd( -14.0341, 294.223, 23.7809, 0.96 ) }
    dend_21 { pt3dadd( -14.0341, 294.905, 24.0342, 1.03 ) }
    dend_21 { pt3dadd( -14.068, 295.586, 24.2376, 1.03 ) }
    dend_21 { pt3dadd( -14.1091, 296.266, 24.4006, 1.18 ) }
    dend_21 { pt3dadd( -14.1428, 297.008, 24.5044, 0.59 ) }
    dend_21 { pt3dadd( -14.1516, 297.448, 24.5426, 0.37 ) }
    dend_21 { pt3dadd( -14.1455, 297.802, 24.5461, 0.81 ) }
    dend_21 { pt3dadd( -14.1285, 298.171, 24.5385, 0.81 ) }
    dend_21 { pt3dadd( -14.096, 298.861, 24.5076, 0.81 ) }
    dend_21 { pt3dadd( -14.0931, 299.502, 24.4669, 0.81 ) }
    dend_21 { pt3dadd( -14.1332, 300.036, 24.4262, 0.88 ) }
    dend_21 { pt3dadd( -14.2138, 300.463, 24.3929, 0.81 ) }
    dend_21 { pt3dadd( -14.4214, 301.151, 24.3406, 0.74 ) }
    dend_21 { pt3dadd( -14.6867, 301.826, 24.2924, 0.74 ) }
    dend_21 { pt3dadd( -15.0224, 302.514, 24.2486, 0.96 ) }
    dend_21 { pt3dadd( -15.3904, 303.2, 24.215, 0.44 ) }
    dend_21 { pt3dadd( -15.7535, 303.85, 24.1935, 0.44 ) }
    dend_21 { pt3dadd( -16.0938, 304.469, 24.1865, 0.96 ) }
    dend_21 { pt3dadd( -16.1275, 304.532, 24.1876, 0.96 ) }
    dend_21 { pt3dadd( -16.3482, 304.997, 24.1959, 0.96 ) }
    dend_21 { pt3dadd( -16.5921, 305.592, 24.2057, 0.96 ) }
    dend_21 { pt3dadd( -16.6514, 305.769, 24.2158, 0.96 ) }
    dend_21 { pt3dadd( -16.8465, 306.312, 24.2685, 0.81 ) }
    dend_21 { pt3dadd( -16.9112, 306.492, 24.3043, 0.81 ) }
    dend_21 { pt3dadd( -17.2077, 307.284, 24.5098, 0.81 ) }
    dend_21 { pt3dadd( -17.228, 307.339, 24.5262, 0.81 ) }
    dend_21 { pt3dadd( -17.488, 308.064, 24.7633, 0.96 ) }
    dend_21 { pt3dadd( -17.7603, 308.898, 25.0346, 0.81 ) }
    dend_21 { pt3dadd( -18.0795, 309.985, 25.3928, 0.81 ) }
    dend_21 { pt3dadd( -18.0935, 310.042, 25.4106, 0.81 ) }
    dend_21 { pt3dadd( -18.2176, 310.795, 25.6106, 0.81 ) }
    dend_21 { pt3dadd( -18.2233, 310.856, 25.6219, 0.81 ) }
    dend_21 { pt3dadd( -18.2294, 311.581, 25.6249, 0.59 ) }
    dend_21 { pt3dadd( -18.2255, 311.674, 25.6193, 0.59 ) }
    dend_21 { pt3dadd( -18.2055, 312.187, 25.5396, 0.59 ) }
    dend_21 { pt3dadd( -18.1731, 312.914, 25.4125, 0.59 ) }
    dend_21 { pt3dadd( -18.1273, 313.768, 25.2313, 0.81 ) }
    dend_21 { pt3dadd( -18.0481, 315.0, 24.936, 0.81 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 97/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 3.39815, 98.4819, -49.252, 0.52 ) }
    dend_17 { pt3dadd( 5.1842, 99.8953, -51.5541, 0.52 ) }
    dend_17 { pt3dadd( 5.22791, 99.9376, -51.6125, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_17 { pt3dadd( 6.05894, 100.974, -52.7456, 0.44 ) }
    dend_17 { pt3dadd( 6.10665, 101.05, -52.8142, 0.44 ) }
    dend_17 { pt3dadd( 6.53654, 101.717, -53.439, 0.88 ) }
    dend_17 { pt3dadd( 6.99077, 102.327, -54.0349, 1.11 ) }
    dend_17 { pt3dadd( 7.03646, 102.393, -54.0911, 1.11 ) }
    dend_17 { pt3dadd( 7.67417, 103.144, -54.7786, 1.03 ) }
    dend_17 { pt3dadd( 8.70968, 104.142, -55.7696, 0.37 ) }
    dend_17 { pt3dadd( 10.0988, 105.166, -57.0499, 0.44 ) }
    dend_17 { pt3dadd( 10.8881, 105.616, -57.7411, 0.44 ) }
    dend_17 { pt3dadd( 11.015, 105.684, -57.8519, 0.44 ) }
    dend_17 { pt3dadd( 11.667, 106.084, -58.5146, 0.44 ) }
    dend_17 { pt3dadd( 11.7353, 106.145, -58.6077, 0.44 ) }
    dend_17 { pt3dadd( 12.4599, 107.146, -59.9421, 0.96 ) }
    dend_17 { pt3dadd( 12.6243, 107.548, -60.3712, 1.33 ) }
    dend_17 { pt3dadd( 12.9181, 108.504, -61.2778, 1.18 ) }
    dend_17 { pt3dadd( 13.3028, 109.962, -62.5491, 0.81 ) }
    dend_17 { pt3dadd( 13.6615, 111.558, -63.7748, 0.37 ) }
    dend_17 { pt3dadd( 13.6826, 111.65, -63.8388, 0.37 ) }
    dend_17 { pt3dadd( 13.895, 112.58, -64.3809, 0.66 ) }
    dend_17 { pt3dadd( 14.0728, 113.187, -64.7265, 0.88 ) }
    dend_17 { pt3dadd( 14.1416, 113.387, -64.8245, 0.88 ) }
    dend_17 { pt3dadd( 14.4878, 114.3, -65.2461, 0.88 ) }
    dend_17 { pt3dadd( 14.9182, 115.443, -65.7872, 0.74 ) }
    dend_17 { pt3dadd( 15.2457, 116.449, -66.2754, 0.59 ) }
    dend_17 { pt3dadd( 15.6364, 117.87, -66.9719, 1.03 ) }
    dend_17 { pt3dadd( 15.8583, 118.979, -67.495, 0.29 ) }
    dend_17 { pt3dadd( 16.0536, 120.28, -68.0518, 0.81 ) }
    dend_17 { pt3dadd( 16.1183, 120.959, -68.306, 0.88 ) }
    dend_17 { pt3dadd( 16.1542, 121.76, -68.5437, 0.96 ) }
    dend_17 { pt3dadd( 16.172, 122.559, -68.7739, 0.66 ) }
    dend_17 { pt3dadd( 16.189, 123.985, -69.1263, 0.22 ) }
    dend_17 { pt3dadd( 16.2311, 125.31, -69.4409, 1.62 ) }
    dend_17 { pt3dadd( 16.2822, 126.224, -69.6315, 1.99 ) }
    dend_17 { pt3dadd( 16.3372, 127.041, -69.7842, 1.77 ) }
    dend_17 { pt3dadd( 16.4391, 128.744, -70.0536, 1.25 ) }
    dend_17 { pt3dadd( 16.4979, 130.012, -70.1966, 0.81 ) }
    dend_17 { pt3dadd( 16.5344, 130.986, -70.26, 0.66 ) }
    dend_17 { pt3dadd( 16.5536, 132.027, -70.2896, 0.81 ) }
    dend_17 { pt3dadd( 16.5745, 133.263, -70.2742, 0.29 ) }
    dend_17 { pt3dadd( 16.5903, 134.73, -70.1868, 0.29 ) }
    dend_17 { pt3dadd( 16.5931, 135.493, -70.0794, 0.44 ) }
    dend_17 { pt3dadd( 16.595, 135.593, -70.0643, 0.44 ) }
    dend_17 { pt3dadd( 16.6212, 136.744, -69.9092, 0.59 ) }
    dend_17 { pt3dadd( 16.6509, 137.518, -69.8278, 1.11 ) }
    dend_17 { pt3dadd( 16.6918, 138.376, -69.7703, 1.11 ) }
    dend_17 { pt3dadd( 16.7502, 139.476, -69.7172, 0.88 ) }
    dend_17 { pt3dadd( 16.8304, 141.066, -69.6668, 0.52 ) }
    dend_17 { pt3dadd( 16.9192, 142.845, -69.6214, 0.52 ) }
    dend_17 { pt3dadd( 17.0074, 144.483, -69.5899, 0.66 ) }
    dend_17 { pt3dadd( 17.0937, 145.837, -69.5778, 0.29 ) }
    dend_17 { pt3dadd( 17.2029, 147.14, -69.5872, 0.81 ) }
    dend_17 { pt3dadd( 17.2153, 147.243, -69.5907, 0.81 ) }
    dend_17 { pt3dadd( 17.3402, 147.92, -69.6358, 1.03 ) }
    dend_17 { pt3dadd( 17.4047, 148.154, -69.6628, 1.03 ) }
    dend_17 { pt3dadd( 17.6593, 148.941, -69.7917, 1.03 ) }
    dend_17 { pt3dadd( 17.9649, 149.809, -69.9611, 0.96 ) }
    dend_17 { pt3dadd( 18.2063, 150.58, -70.1274, 0.66 ) }
    dend_17 { pt3dadd( 18.4358, 151.599, -70.3446, 0.52 ) }
    dend_17 { pt3dadd( 18.5032, 152.315, -70.4896, 0.44 ) }
    dend_17 { pt3dadd( 18.5019, 153.669, -70.7499, 0.44 ) }
    dend_17 { pt3dadd( 18.4741, 153.883, -70.7854, 0.44 ) }
    dend_17 { pt3dadd( 18.2773, 154.69, -70.886, 0.37 ) }
    dend_17 { pt3dadd( 17.9362, 155.695, -70.9625, 0.37 ) }
    dend_17 { pt3dadd( 17.441, 156.981, -70.9884, 1.03 ) }
    dend_17 { pt3dadd( 17.407, 157.075, -70.9889, 1.03 ) }
    dend_17 { pt3dadd( 17.1585, 157.893, -70.9882, 1.18 ) }
    dend_17 { pt3dadd( 16.963, 158.715, -70.9872, 0.59 ) }
    dend_17 { pt3dadd( 16.8103, 159.669, -70.9859, 0.37 ) }
    dend_17 { pt3dadd( 16.7288, 160.717, -70.9902, 0.29 ) }
    dend_17 { pt3dadd( 16.7129, 162.116, -70.9592, 0.22 ) }
    dend_17 { pt3dadd( 16.7164, 162.783, -70.9327, 0.44 ) }
    dend_17 { pt3dadd( 16.7224, 163.006, -70.9218, 0.44 ) }
    dend_17 { pt3dadd( 16.7516, 163.928, -70.7843, 0.44 ) }
    dend_17 { pt3dadd( 16.7557, 164.025, -70.7563, 0.44 ) }
    dend_17 { pt3dadd( 16.8131, 165.377, -70.2441, 0.74 ) }
    dend_17 { pt3dadd( 16.8484, 166.443, -69.7857, 1.33 ) }
    dend_17 { pt3dadd( 16.8961, 167.76, -69.1856, 1.4 ) }
    dend_17 { pt3dadd( 16.9772, 169.812, -68.2395, 0.52 ) }
    dend_17 { pt3dadd( 17.0257, 171.142, -67.6398, 0.59 ) }
    dend_17 { pt3dadd( 17.0544, 172.133, -67.2277, 0.74 ) }
    dend_17 { pt3dadd( 17.0751, 172.815, -66.983, 0.74 ) }
    dend_17 { pt3dadd( 17.0777, 172.928, -66.9507, 0.74 ) }
    dend_17 { pt3dadd( 17.0815, 173.745, -66.7992, 0.44 ) }
    dend_17 { pt3dadd( 17.0582, 174.9, -66.7509, 0.52 ) }
    dend_17 { pt3dadd( 17.0509, 175.662, -66.7561, 0.66 ) }
    dend_17 { pt3dadd( 17.0571, 176.349, -66.7383, 0.44 ) }
    dend_17 { pt3dadd( 17.0782, 177.299, -66.6916, 0.22 ) }
    dend_17 { pt3dadd( 17.1023, 178.627, -66.6045, 0.66 ) }
    dend_17 { pt3dadd( 17.1011, 179.286, -66.569, 0.88 ) }
    dend_17 { pt3dadd( 17.0824, 180.211, -66.5287, 0.29 ) }
    dend_17 { pt3dadd( 17.0347, 181.329, -66.486, 0.22 ) }
    dend_17 { pt3dadd( 16.9884, 182.076, -66.4648, 0.37 ) }
    dend_17 { pt3dadd( 16.9257, 182.843, -66.4799, 0.52 ) }
    dend_17 { pt3dadd( 16.8108, 184.007, -66.5956, 0.29 ) }
    dend_17 { pt3dadd( 16.756, 184.616, -66.6736, 0.59 ) }
    dend_17 { pt3dadd( 16.7459, 184.849, -66.7003, 0.59 ) }
    dend_17 { pt3dadd( 16.7751, 185.483, -66.7605, 0.59 ) }
    dend_17 { pt3dadd( 16.7875, 185.583, -66.7656, 0.59 ) }
    dend_17 { pt3dadd( 16.9454, 186.509, -66.7773, 0.59 ) }
    dend_17 { pt3dadd( 17.2118, 187.873, -66.7046, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_17 { pt3dadd( 17.424, 188.994, -66.6187, 0.59 ) }
    dend_17 { pt3dadd( 17.588, 189.925, -66.5381, 1.03 ) }
    dend_17 { pt3dadd( 17.728, 190.859, -66.4511, 1.03 ) }
    dend_17 { pt3dadd( 17.8292, 191.8, -66.3637, 0.81 ) }
    dend_17 { pt3dadd( 17.889, 192.796, -66.2755, 0.59 ) }
    dend_17 { pt3dadd( 17.8914, 193.855, -66.2027, 0.37 ) }
    dend_17 { pt3dadd( 17.8217, 195.359, -66.1419, 0.37 ) }
    dend_17 { pt3dadd( 17.7401, 196.596, -66.1046, 0.37 ) }
    dend_17 { pt3dadd( 17.6639, 197.594, -66.0878, 0.44 ) }
    dend_17 { pt3dadd( 17.5799, 198.642, -66.0881, 0.44 ) }
    dend_17 { pt3dadd( 17.5261, 199.63, -66.089, 0.29 ) }
    dend_17 { pt3dadd( 17.4889, 200.906, -66.0675, 0.29 ) }
    dend_17 { pt3dadd( 17.51, 201.89, -66.0338, 0.81 ) }
    dend_17 { pt3dadd( 17.5865, 202.832, -65.9563, 1.11 ) }
    dend_17 { pt3dadd( 17.7068, 203.779, -65.8433, 0.81 ) }
    dend_17 { pt3dadd( 17.9154, 205.166, -65.6395, 0.52 ) }
    dend_17 { pt3dadd( 17.9319, 205.264, -65.6228, 0.52 ) }
    dend_17 { pt3dadd( 18.1058, 206.499, -65.3963, 0.52 ) }
    dend_17 { pt3dadd( 18.2261, 207.847, -65.1513, 0.29 ) }
    dend_17 { pt3dadd( 18.2666, 208.779, -64.9898, 0.59 ) }
    dend_17 { pt3dadd( 18.2352, 209.718, -64.8554, 0.81 ) }
    dend_17 { pt3dadd( 18.2106, 209.918, -64.8355, 0.81 ) }
    dend_17 { pt3dadd( 18.0929, 210.802, -64.7686, 0.81 ) }
    dend_17 { pt3dadd( 17.997, 211.654, -64.7313, 0.66 ) }
    dend_17 { pt3dadd( 17.9874, 211.769, -64.7308, 0.66 ) }
    dend_17 { pt3dadd( 17.9226, 212.829, -64.7256, 0.44 ) }
    dend_17 { pt3dadd( 17.8533, 214.098, -64.7202, 0.37 ) }
    dend_17 { pt3dadd( 17.7982, 215.277, -64.7175, 0.37 ) }
    dend_17 { pt3dadd( 17.7396, 216.553, -64.7171, 0.52 ) }
    dend_17 { pt3dadd( 17.6795, 217.587, -64.7195, 0.37 ) }
    dend_17 { pt3dadd( 17.6042, 218.413, -64.725, 0.37 ) }
    dend_17 { pt3dadd( 17.51, 219.28, -64.7363, 0.81 ) }
    dend_17 { pt3dadd( 17.4005, 220.09, -64.7535, 0.88 ) }
    dend_17 { pt3dadd( 17.278, 220.795, -64.7682, 0.59 ) }
    dend_17 { pt3dadd( 17.1992, 221.216, -64.777, 0.44 ) }
    dend_17 { pt3dadd( 17.017, 222.485, -64.8039, 0.37 ) }
    dend_17 { pt3dadd( 16.8892, 223.991, -64.8363, 0.37 ) }
    dend_17 { pt3dadd( 16.887, 224.736, -64.8769, 0.66 ) }
    dend_17 { pt3dadd( 16.8942, 224.851, -64.8861, 0.66 ) }
    dend_17 { pt3dadd( 17.0693, 225.971, -64.9984, 0.74 ) }
    dend_17 { pt3dadd( 17.1809, 226.538, -65.0621, 0.88 ) }
    dend_17 { pt3dadd( 17.5113, 227.815, -65.2337, 0.59 ) }
    dend_17 { pt3dadd( 17.8926, 229.073, -65.435, 0.29 ) }
    dend_17 { pt3dadd( 17.9299, 229.181, -65.4541, 0.29 ) }
    dend_17 { pt3dadd( 18.567, 230.851, -65.7755, 1.18 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 45/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 3.39815, 98.4819, -49.252, 0.59 ) }
    dend_16 { pt3dadd( 3.35837, 99.0262, -49.1768, 0.59 ) }
    dend_16 { pt3dadd( 3.32183, 99.4169, -49.1161, 0.29 ) }
    dend_16 { pt3dadd( 3.28722, 99.7424, -49.067, 0.29 ) }
    dend_16 { pt3dadd( 3.2369, 100.171, -49.0061, 0.29 ) }
    dend_16 { pt3dadd( 3.10564, 101.152, -48.8749, 0.29 ) }
    dend_16 { pt3dadd( 3.01353, 101.785, -48.7971, 0.74 ) }
    dend_16 { pt3dadd( 2.93997, 102.198, -48.7577, 0.74 ) }
    dend_16 { pt3dadd( 2.85724, 102.623, -48.7302, 0.52 ) }
    dend_16 { pt3dadd( 2.80592, 102.88, -48.7234, 0.44 ) }
    dend_16 { pt3dadd( 2.74205, 103.198, -48.7235, 0.29 ) }
    dend_16 { pt3dadd( 2.67033, 103.574, -48.7385, 0.29 ) }
    dend_16 { pt3dadd( 2.58648, 104.071, -48.77, 0.66 ) }
    dend_16 { pt3dadd( 2.53749, 104.396, -48.7825, 0.96 ) }
    dend_16 { pt3dadd( 2.50333, 104.699, -48.7816, 0.66 ) }
    dend_16 { pt3dadd( 2.49419, 104.81, -48.7775, 0.66 ) }
    dend_16 { pt3dadd( 2.47457, 105.15, -48.7561, 0.44 ) }
    dend_16 { pt3dadd( 2.4476, 105.498, -48.7292, 0.29 ) }
    dend_16 { pt3dadd( 2.41297, 105.84, -48.7007, 0.22 ) }
    dend_16 { pt3dadd( 2.31273, 106.394, -48.6298, 0.29 ) }
    dend_16 { pt3dadd( 2.30099, 106.439, -48.6236, 0.29 ) }
    dend_16 { pt3dadd( 2.16947, 106.854, -48.5634, 0.37 ) }
    dend_16 { pt3dadd( 2.00061, 107.301, -48.5063, 0.66 ) }
    dend_16 { pt3dadd( 1.86917, 107.609, -48.472, 0.96 ) }
    dend_16 { pt3dadd( 1.57035, 108.31, -48.4039, 0.81 ) }
    dend_16 { pt3dadd( 1.39538, 108.757, -48.363, 0.59 ) }
    dend_16 { pt3dadd( 1.37984, 108.806, -48.359, 0.59 ) }
    dend_16 { pt3dadd( 1.25275, 109.342, -48.3217, 0.59 ) }
    dend_16 { pt3dadd( 1.19966, 109.683, -48.3034, 0.66 ) }
    dend_16 { pt3dadd( 1.14259, 110.411, -48.273, 0.22 ) }
    dend_16 { pt3dadd( 1.14862, 110.778, -48.2653, 0.22 ) }
    dend_16 { pt3dadd( 1.18042, 111.236, -48.2434, 0.74 ) }
    dend_16 { pt3dadd( 1.21349, 111.624, -48.221, 0.81 ) }
    dend_16 { pt3dadd( 1.21817, 111.677, -48.2177, 0.81 ) }
    dend_16 { pt3dadd( 1.24147, 112.101, -48.1955, 0.88 ) }
    dend_16 { pt3dadd( 1.24851, 112.442, -48.1777, 0.81 ) }
    dend_16 { pt3dadd( 1.25031, 112.855, -48.1615, 0.29 ) }
    dend_16 { pt3dadd( 1.21446, 113.56, -48.1521, 0.29 ) }
    dend_16 { pt3dadd( 1.12686, 114.56, -48.1586, 0.74 ) }
    dend_16 { pt3dadd( 1.06614, 115.041, -48.1722, 1.11 ) }
    dend_16 { pt3dadd( 0.994205, 115.462, -48.1958, 0.88 ) }
    dend_16 { pt3dadd( 0.845359, 116.149, -48.245, 0.22 ) }
    dend_16 { pt3dadd( 0.666859, 116.862, -48.305, 0.22 ) }
    dend_16 { pt3dadd( 0.64898, 116.933, -48.3133, 0.22 ) }
    dend_16 { pt3dadd( 0.608985, 117.112, -48.3472, 0.22 ) }
    dend_16 { pt3dadd( 0.532112, 117.522, -48.4396, 0.74 ) }
    dend_16 { pt3dadd( 0.485633, 117.779, -48.5039, 1.11 ) }
    dend_16 { pt3dadd( 0.403727, 118.268, -48.6539, 1.25 ) }
    dend_16 { pt3dadd( 0.320456, 118.826, -48.8356, 0.74 ) }
    dend_16 { pt3dadd( 0.211132, 119.578, -49.1034, 0.22 ) }
    dend_16 { pt3dadd( 0.143597, 120.029, -49.27, 0.37 ) }
    dend_16 { pt3dadd( 0.0480958, 120.629, -49.4938, 0.37 ) }
    dend_16 { pt3dadd( -0.0990446, 121.485, -49.8015, 0.52 ) }
    dend_16 { pt3dadd( -0.162396, 121.833, -49.918, 0.88 ) }
    dend_16 { pt3dadd( -0.30698, 122.566, -50.133, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_16 { pt3dadd( -0.396788, 123.029, -50.2513, 0.66 ) }
    dend_16 { pt3dadd( -0.493312, 123.55, -50.3708, 0.29 ) }
    dend_16 { pt3dadd( -0.59636, 124.132, -50.4848, 0.22 ) }
    dend_16 { pt3dadd( -0.688649, 124.626, -50.5572, 0.22 ) }
    dend_16 { pt3dadd( -0.777155, 125.099, -50.6183, 0.44 ) }
    dend_16 { pt3dadd( -0.833383, 125.415, -50.6495, 0.59 ) }
    dend_16 { pt3dadd( -0.899774, 125.873, -50.6933, 0.37 ) }
    dend_16 { pt3dadd( -0.950556, 126.324, -50.7331, 0.29 ) }
    dend_16 { pt3dadd( -0.989698, 126.86, -50.7735, 0.44 ) }
    dend_16 { pt3dadd( -0.993613, 127.37, -50.8165, 0.29 ) }
    dend_16 { pt3dadd( -0.935438, 127.939, -50.8908, 0.66 ) }
    dend_16 { pt3dadd( -0.890591, 128.288, -50.9525, 1.03 ) }
    dend_16 { pt3dadd( -0.857898, 128.508, -50.9989, 1.25 ) }
    dend_16 { pt3dadd( -0.801358, 128.944, -51.1054, 0.44 ) }
    dend_16 { pt3dadd( -0.742259, 129.604, -51.2894, 0.52 ) }
    dend_16 { pt3dadd( -0.712029, 130.373, -51.5286, 0.29 ) }
    dend_16 { pt3dadd( -0.716235, 131.282, -51.8233, 0.29 ) }
    dend_16 { pt3dadd( -0.717465, 131.349, -51.8433, 0.29 ) }
    dend_16 { pt3dadd( -0.726201, 131.761, -51.9666, 0.29 ) }
    dend_16 { pt3dadd( -0.716631, 132.339, -52.1149, 0.81 ) }
    dend_16 { pt3dadd( -0.713715, 132.391, -52.1238, 0.81 ) }
    dend_16 { pt3dadd( -0.665576, 132.735, -52.1672, 0.88 ) }
    dend_16 { pt3dadd( -0.534484, 133.247, -52.2584, 0.88 ) }
    dend_16 { pt3dadd( -0.417645, 133.692, -52.3547, 0.44 ) }
    dend_16 { pt3dadd( -0.264157, 134.286, -52.5006, 0.22 ) }
    dend_16 { pt3dadd( -0.12569, 134.859, -52.6923, 0.22 ) }
    dend_16 { pt3dadd( 0.026105, 135.576, -52.9782, 0.81 ) }
    dend_16 { pt3dadd( 0.118788, 136.146, -53.2379, 0.88 ) }
    dend_16 { pt3dadd( 0.155484, 136.541, -53.4273, 0.96 ) }
    dend_16 { pt3dadd( 0.169996, 136.876, -53.5876, 0.96 ) }
    dend_16 { pt3dadd( 0.167593, 137.696, -54.0016, 0.44 ) }
    dend_16 { pt3dadd( 0.167539, 137.742, -54.0234, 0.44 ) }
    dend_16 { pt3dadd( 0.164918, 138.196, -54.189, 0.44 ) }
    dend_16 { pt3dadd( 0.162814, 138.835, -54.3823, 0.66 ) }
    dend_16 { pt3dadd( 0.163036, 138.941, -54.4123, 0.66 ) }
    dend_16 { pt3dadd( 0.1692, 139.237, -54.5117, 0.88 ) }
    dend_16 { pt3dadd( 0.183252, 139.743, -54.6887, 0.52 ) }
    dend_16 { pt3dadd( 0.212836, 140.197, -54.8684, 0.37 ) }
    dend_16 { pt3dadd( 0.29255, 141.222, -55.3366, 1.11 ) }
    dend_16 { pt3dadd( 0.306254, 141.463, -55.4604, 1.25 ) }
    dend_16 { pt3dadd( 0.319415, 142.412, -55.9731, 0.22 ) }
    dend_16 { pt3dadd( 0.316871, 142.457, -55.9992, 0.22 ) }
    dend_16 { pt3dadd( 0.268736, 142.77, -56.2189, 0.22 ) }
    dend_16 { pt3dadd( 0.176286, 143.142, -56.5035, 0.22 ) }
    dend_16 { pt3dadd( 0.086539, 143.379, -56.6762, 0.74 ) }
    dend_16 { pt3dadd( -0.00910809, 143.6, -56.8358, 1.03 ) }
    dend_16 { pt3dadd( -0.171776, 143.936, -57.0587, 0.81 ) }
    dend_16 { pt3dadd( -0.43935, 144.521, -57.4445, 0.52 ) }
    dend_16 { pt3dadd( -0.521344, 144.726, -57.6026, 0.37 ) }
    dend_16 { pt3dadd( -0.644051, 145.126, -57.938, 0.29 ) }
    dend_16 { pt3dadd( -0.73429, 145.542, -58.2814, 0.59 ) }
    dend_16 { pt3dadd( -0.764786, 145.802, -58.479, 0.96 ) }
    dend_16 { pt3dadd( -0.774343, 146.065, -58.6581, 1.11 ) }
    dend_16 { pt3dadd( -0.786801, 146.888, -59.1274, 0.37 ) }
    dend_16 { pt3dadd( -0.787241, 146.933, -59.1516, 0.37 ) }
    dend_16 { pt3dadd( -0.814895, 147.432, -59.3828, 0.29 ) }
    dend_16 { pt3dadd( -0.888185, 147.943, -59.5576, 0.29 ) }
    dend_16 { pt3dadd( -0.901383, 147.991, -59.5704, 0.29 ) }
    dend_16 { pt3dadd( -1.10129, 148.479, -59.6664, 0.37 ) }
    dend_16 { pt3dadd( -1.21705, 148.724, -59.6946, 0.59 ) }
    dend_16 { pt3dadd( -1.45883, 149.22, -59.7483, 0.74 ) }
    dend_16 { pt3dadd( -1.66604, 149.623, -59.7915, 0.52 ) }
    dend_16 { pt3dadd( -1.97505, 150.24, -59.8527, 0.22 ) }
    dend_16 { pt3dadd( -2.16935, 150.678, -59.8908, 0.22 ) }
    dend_16 { pt3dadd( -2.30323, 151.035, -59.9357, 0.22 ) }
    dend_16 { pt3dadd( -2.47307, 151.56, -60.0245, 0.74 ) }
    dend_16 { pt3dadd( -2.59744, 152.019, -60.1194, 0.88 ) }
    dend_16 { pt3dadd( -2.69695, 152.435, -60.2209, 0.74 ) }
    dend_16 { pt3dadd( -2.80872, 152.951, -60.3555, 0.66 ) }
    dend_16 { pt3dadd( -3.0051, 153.811, -60.5981, 0.29 ) }
    dend_16 { pt3dadd( -3.15282, 154.384, -60.7725, 0.29 ) }
    dend_16 { pt3dadd( -3.23035, 154.684, -60.8674, 0.44 ) }
    dend_16 { pt3dadd( -3.25654, 154.788, -60.8995, 0.44 ) }
    dend_16 { pt3dadd( -3.32889, 155.09, -60.9824, 0.44 ) }
    dend_16 { pt3dadd( -3.39237, 155.384, -61.0441, 0.29 ) }
    dend_16 { pt3dadd( -3.44282, 155.685, -61.0766, 0.74 ) }
    dend_16 { pt3dadd( -3.48135, 156.119, -61.1028, 0.96 ) }
    dend_16 { pt3dadd( -3.48916, 156.343, -61.111, 0.88 ) }
    dend_16 { pt3dadd( -3.49097, 156.886, -61.124, 0.29 ) }
    dend_16 { pt3dadd( -3.48319, 157.259, -61.1293, 0.44 ) }
    dend_16 { pt3dadd( -3.46738, 157.738, -61.1329, 0.29 ) }
    dend_16 { pt3dadd( -3.46395, 158.434, -61.1422, 0.37 ) }
    dend_16 { pt3dadd( -3.46369, 158.729, -61.1453, 0.59 ) }
    dend_16 { pt3dadd( -3.4546, 159.163, -61.1471, 0.74 ) }
    dend_16 { pt3dadd( -3.44997, 159.434, -61.1486, 0.52 ) }
    dend_16 { pt3dadd( -3.44691, 159.772, -61.1441, 0.37 ) }
    dend_16 { pt3dadd( -3.45718, 160.57, -61.1059, 0.52 ) }
    dend_16 { pt3dadd( -3.47431, 161.225, -61.0565, 0.44 ) }
    dend_16 { pt3dadd( -3.50122, 162.186, -60.9657, 0.88 ) }
    dend_16 { pt3dadd( -3.50848, 162.571, -60.9233, 1.25 ) }
    dend_16 { pt3dadd( -3.51801, 162.958, -60.8796, 1.03 ) }
    dend_16 { pt3dadd( -3.53521, 163.566, -60.8076, 0.29 ) }
    dend_16 { pt3dadd( -3.5581, 164.092, -60.7471, 0.44 ) }
    dend_16 { pt3dadd( -3.61792, 164.683, -60.7098, 0.37 ) }
    dend_16 { pt3dadd( -3.69968, 165.247, -60.7058, 0.74 ) }
    dend_16 { pt3dadd( -3.79281, 165.831, -60.7348, 0.74 ) }
    dend_16 { pt3dadd( -3.80237, 165.881, -60.7408, 0.74 ) }
    dend_16 { pt3dadd( -3.92794, 166.45, -60.8353, 0.74 ) }
    dend_16 { pt3dadd( -4.08594, 167.072, -60.9493, 0.22 ) }
    dend_16 { pt3dadd( -4.16932, 167.394, -61.0085, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_16 { pt3dadd( -4.26234, 167.755, -61.0714, 0.96 ) }
    dend_16 { pt3dadd( -4.4017, 168.32, -61.1605, 0.22 ) }
    dend_16 { pt3dadd( -4.50647, 168.783, -61.222, 0.66 ) }
    dend_16 { pt3dadd( -4.58955, 169.208, -61.2638, 1.03 ) }
    dend_16 { pt3dadd( -4.69883, 169.803, -61.2769, 0.81 ) }
    dend_16 { pt3dadd( -4.82429, 170.449, -61.2674, 0.52 ) }
    dend_16 { pt3dadd( -4.90147, 170.814, -61.2609, 0.44 ) }
    dend_16 { pt3dadd( -5.07912, 171.567, -61.2517, 0.37 ) }
    dend_16 { pt3dadd( -5.25436, 172.227, -61.2506, 0.88 ) }
    dend_16 { pt3dadd( -5.45302, 172.948, -61.2543, 1.25 ) }
    dend_16 { pt3dadd( -5.56592, 173.371, -61.2585, 0.88 ) }
    dend_16 { pt3dadd( -5.70246, 173.945, -61.2675, 0.44 ) }
    dend_16 { pt3dadd( -5.84291, 174.571, -61.2884, 0.59 ) }
    dend_16 { pt3dadd( -5.9191, 174.944, -61.3086, 0.81 ) }
    dend_16 { pt3dadd( -5.99156, 175.359, -61.3409, 0.59 ) }
    dend_16 { pt3dadd( -6.06258, 175.885, -61.3918, 0.37 ) }
    dend_16 { pt3dadd( -6.15352, 176.748, -61.4453, 0.52 ) }
    dend_16 { pt3dadd( -6.21173, 177.301, -61.4618, 0.37 ) }
    dend_16 { pt3dadd( -6.24425, 177.555, -61.4704, 0.74 ) }
    dend_16 { pt3dadd( -6.31472, 177.928, -61.4897, 0.88 ) }
    dend_16 { pt3dadd( -6.3695, 178.128, -61.514, 0.88 ) }
    dend_16 { pt3dadd( -6.47356, 178.482, -61.6079, 1.11 ) }
    dend_16 { pt3dadd( -6.55847, 178.843, -61.7356, 1.03 ) }
    dend_16 { pt3dadd( -6.62178, 179.187, -61.8715, 0.37 ) }
    dend_16 { pt3dadd( -6.68047, 179.602, -62.0416, 0.37 ) }
    dend_16 { pt3dadd( -6.72706, 180.234, -62.3096, 0.66 ) }
    dend_16 { pt3dadd( -6.76066, 181.21, -62.7104, 0.29 ) }
    dend_16 { pt3dadd( -6.76748, 181.86, -62.9629, 0.52 ) }
    dend_16 { pt3dadd( -6.76733, 181.903, -62.9786, 0.52 ) }
    dend_16 { pt3dadd( -6.76441, 182.268, -63.0953, 0.66 ) }
    dend_16 { pt3dadd( -6.7678, 182.909, -63.2606, 0.37 ) }
    dend_16 { pt3dadd( -6.79646, 183.635, -63.3982, 0.66 ) }
    dend_16 { pt3dadd( -6.84155, 184.167, -63.4715, 0.59 ) }
    dend_16 { pt3dadd( -6.88999, 184.547, -63.5096, 0.74 ) }
    dend_16 { pt3dadd( -6.96722, 185.052, -63.5392, 0.37 ) }
    dend_16 { pt3dadd( -7.10047, 185.734, -63.5027, 0.59 ) }
    dend_16 { pt3dadd( -7.1236, 185.835, -63.4876, 0.59 ) }
    dend_16 { pt3dadd( -7.21699, 186.231, -63.4121, 0.37 ) }
    dend_16 { pt3dadd( -7.4023, 187.017, -63.2445, 0.29 ) }
    dend_16 { pt3dadd( -7.55802, 187.693, -63.1089, 0.52 ) }
    dend_16 { pt3dadd( -7.80473, 188.774, -62.902, 0.22 ) }
    dend_16 { pt3dadd( -7.93776, 189.446, -62.7867, 0.52 ) }
    dend_16 { pt3dadd( -8.00672, 189.801, -62.7418, 0.81 ) }
    dend_16 { pt3dadd( -8.09219, 190.212, -62.7175, 0.52 ) }
    dend_16 { pt3dadd( -8.24306, 190.937, -62.742, 0.74 ) }
    dend_16 { pt3dadd( -8.25498, 190.987, -62.7486, 0.74 ) }
    dend_16 { pt3dadd( -8.44538, 191.632, -62.9074, 1.33 ) }
    dend_16 { pt3dadd( -8.62304, 192.124, -63.0364, 0.88 ) }
    dend_16 { pt3dadd( -8.85786, 192.67, -63.1831, 0.66 ) }
    dend_16 { pt3dadd( -9.12099, 193.185, -63.3184, 0.52 ) }
    dend_16 { pt3dadd( -9.45375, 193.777, -63.4763, 0.52 ) }
    dend_16 { pt3dadd( -9.73775, 194.254, -63.6102, 0.52 ) }
    dend_16 { pt3dadd( -10.0794, 194.775, -63.7701, 0.29 ) }
    dend_16 { pt3dadd( -10.3113, 195.142, -63.8797, 0.52 ) }
    dend_16 { pt3dadd( -10.5336, 195.484, -63.9803, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 55/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 35.7842, 63.2353, 16.3493, 0.59 ) }
    dend_11 { pt3dadd( 38.6704, 63.3203, 13.6214, 0.59 ) }
    dend_11 { pt3dadd( 40.1776, 63.4281, 12.3702, 0.74 ) }
    dend_11 { pt3dadd( 40.2418, 63.4344, 12.3215, 0.74 ) }
    dend_11 { pt3dadd( 40.9021, 63.5288, 11.8673, 0.74 ) }
    dend_11 { pt3dadd( 41.9985, 63.6908, 11.2184, 0.96 ) }
    dend_11 { pt3dadd( 42.0696, 63.698, 11.1807, 0.96 ) }
    dend_11 { pt3dadd( 42.8766, 63.7552, 10.9854, 0.96 ) }
    dend_11 { pt3dadd( 42.9552, 63.7577, 10.9671, 0.96 ) }
    dend_11 { pt3dadd( 44.4749, 63.8111, 10.5552, 0.52 ) }
    dend_11 { pt3dadd( 45.4674, 63.8519, 10.2463, 0.52 ) }
    dend_11 { pt3dadd( 46.8061, 63.9164, 9.81034, 0.81 ) }
    dend_11 { pt3dadd( 47.5373, 63.9654, 9.57913, 0.88 ) }
    dend_11 { pt3dadd( 48.8126, 64.0263, 9.14779, 0.52 ) }
    dend_11 { pt3dadd( 49.1955, 64.0508, 9.02743, 0.74 ) }
    dend_11 { pt3dadd( 49.3446, 64.0621, 8.9663, 0.74 ) }
    dend_11 { pt3dadd( 49.8893, 64.1323, 8.67839, 0.29 ) }
    dend_11 { pt3dadd( 50.5674, 64.264, 8.27681, 0.59 ) }
    dend_11 { pt3dadd( 51.7522, 64.5199, 7.3985, 0.74 ) }
    dend_11 { pt3dadd( 52.412, 64.6757, 6.87238, 0.59 ) }
    dend_11 { pt3dadd( 53.9829, 65.063, 5.52354, 1.03 ) }
    dend_11 { pt3dadd( 54.0796, 65.0901, 5.43921, 1.03 ) }
    dend_11 { pt3dadd( 54.3896, 65.1879, 5.1586, 0.74 ) }
    dend_11 { pt3dadd( 55.65, 65.6847, 3.9917, 0.44 ) }
    dend_11 { pt3dadd( 56.1238, 65.9235, 3.57316, 0.59 ) }
    dend_11 { pt3dadd( 57.0126, 66.3801, 2.85753, 0.66 ) }
    dend_11 { pt3dadd( 57.5722, 66.6719, 2.51799, 0.74 ) }
    dend_11 { pt3dadd( 57.6362, 66.7032, 2.48227, 0.74 ) }
    dend_11 { pt3dadd( 57.8774, 66.8187, 2.36297, 0.74 ) }
    dend_11 { pt3dadd( 57.9362, 66.8479, 2.34078, 0.74 ) }
    dend_11 { pt3dadd( 59.2194, 67.5207, 1.68726, 0.29 ) }
    dend_11 { pt3dadd( 59.5735, 67.7584, 1.40867, 0.66 ) }
    dend_11 { pt3dadd( 59.6715, 67.8397, 1.2946, 0.66 ) }
    dend_11 { pt3dadd( 59.9067, 68.0185, 0.978652, 0.88 ) }
    dend_11 { pt3dadd( 59.9493, 68.0494, 0.904281, 0.88 ) }
    dend_11 { pt3dadd( 60.7182, 68.6451, -0.658655, 0.29 ) }
    dend_11 { pt3dadd( 61.3295, 69.1525, -2.07858, 0.29 ) }
    dend_11 { pt3dadd( 62.0255, 69.7427, -3.83087, 1.11 ) }
    dend_11 { pt3dadd( 62.6578, 70.2876, -5.52185, 0.96 ) }
    dend_11 { pt3dadd( 63.7849, 71.3374, -8.74929, 0.66 ) }
    dend_11 { pt3dadd( 63.9883, 71.5468, -9.37498, 0.66 ) }
    dend_11 { pt3dadd( 64.0472, 71.6202, -9.5788, 0.66 ) }
    dend_11 { pt3dadd( 64.3352, 72.0359, -10.6016, 0.59 ) }
    dend_11 { pt3dadd( 64.3815, 72.1212, -10.7634, 0.59 ) }
    dend_11 { pt3dadd( 64.7245, 73.0031, -11.892, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_11 { pt3dadd( 64.7442, 73.0474, -11.9297, 0.52 ) }
    dend_11 { pt3dadd( 65.0046, 73.5355, -12.319, 0.96 ) }
    dend_11 { pt3dadd( 65.3489, 74.1196, -12.7366, 1.11 ) }
    dend_11 { pt3dadd( 66.1291, 75.3496, -13.4752, 0.29 ) }
    dend_11 { pt3dadd( 66.1698, 75.4011, -13.5078, 0.29 ) }
    dend_11 { pt3dadd( 66.5381, 75.7113, -13.7528, 0.52 ) }
    dend_11 { pt3dadd( 66.5894, 75.7451, -13.7867, 0.52 ) }
    dend_11 { pt3dadd( 66.7887, 75.854, -13.916, 0.74 ) }
    dend_11 { pt3dadd( 66.8473, 75.8866, -13.9594, 0.74 ) }
    dend_11 { pt3dadd( 67.7466, 76.5154, -14.6463, 0.74 ) }
    dend_11 { pt3dadd( 68.4683, 77.1667, -15.2577, 0.59 ) }
    dend_11 { pt3dadd( 68.5144, 77.217, -15.3009, 0.59 ) }
    dend_11 { pt3dadd( 68.9081, 77.7031, -15.6605, 0.29 ) }
    dend_11 { pt3dadd( 69.4954, 78.5452, -16.1892, 0.29 ) }
    dend_11 { pt3dadd( 69.9314, 79.2629, -16.5982, 0.88 ) }
    dend_11 { pt3dadd( 70.1412, 79.6968, -16.7915, 1.11 ) }
    dend_11 { pt3dadd( 70.1688, 79.7585, -16.8164, 1.11 ) }
    dend_11 { pt3dadd( 70.4717, 80.3709, -17.0562, 0.88 ) }
    dend_11 { pt3dadd( 70.6188, 80.6028, -17.1606, 0.52 ) }
    dend_11 { pt3dadd( 71.3056, 81.4549, -17.5506, 0.37 ) }
    dend_11 { pt3dadd( 71.9661, 82.1443, -17.9077, 0.22 ) }
    dend_11 { pt3dadd( 72.0219, 82.1979, -17.9366, 0.22 ) }
    dend_11 { pt3dadd( 72.3763, 82.5504, -18.1189, 0.74 ) }
    dend_11 { pt3dadd( 73.147, 83.3741, -18.5958, 0.88 ) }
    dend_11 { pt3dadd( 73.5268, 83.7799, -18.8265, 0.22 ) }
    dend_11 { pt3dadd( 73.9109, 84.1366, -19.053, 0.29 ) }
    dend_11 { pt3dadd( 73.9688, 84.1812, -19.0864, 0.29 ) }
    dend_11 { pt3dadd( 74.4518, 84.48, -19.4347, 0.29 ) }
    dend_11 { pt3dadd( 75.4569, 84.9328, -20.302, 0.88 ) }
    dend_11 { pt3dadd( 75.8365, 85.0649, -20.6363, 1.18 ) }
    dend_11 { pt3dadd( 77.0114, 85.3911, -21.6927, 0.29 ) }
    dend_11 { pt3dadd( 77.5388, 85.5184, -22.1664, 0.88 ) }
    dend_11 { pt3dadd( 79.3281, 85.9584, -23.7459, 1.33 ) }
    dend_11 { pt3dadd( 80.7963, 86.3049, -25.0002, 0.52 ) }
    dend_11 { pt3dadd( 81.2961, 86.4325, -25.4134, 1.25 ) }
    dend_11 { pt3dadd( 81.3481, 86.4498, -25.4563, 1.25 ) }
    dend_11 { pt3dadd( 82.5136, 86.9831, -26.4194, 0.29 ) }
    dend_11 { pt3dadd( 83.0702, 87.3024, -26.8604, 0.29 ) }
    dend_11 { pt3dadd( 83.5543, 87.6701, -27.1572, 0.59 ) }
    dend_11 { pt3dadd( 83.814, 87.8962, -27.3072, 0.96 ) }
    dend_11 { pt3dadd( 84.3459, 88.3548, -27.6175, 0.96 ) }
    dend_11 { pt3dadd( 85.2193, 89.0303, -28.0966, 0.59 ) }
    dend_11 { pt3dadd( 85.2809, 89.0724, -28.1261, 0.59 ) }
    dend_11 { pt3dadd( 85.7665, 89.3836, -28.3466, 0.29 ) }
    dend_11 { pt3dadd( 86.4505, 89.8424, -28.637, 0.44 ) }
    dend_11 { pt3dadd( 86.8633, 90.1318, -28.7979, 0.66 ) }
    dend_11 { pt3dadd( 87.4704, 90.6096, -29.0434, 0.29 ) }
    dend_11 { pt3dadd( 87.8581, 90.9344, -29.1779, 0.22 ) }
    dend_11 { pt3dadd( 88.3677, 91.3718, -29.3631, 0.66 ) }
    dend_11 { pt3dadd( 88.64, 91.6046, -29.4608, 0.74 ) }
    dend_11 { pt3dadd( 88.9202, 91.8561, -29.558, 0.59 ) }
    dend_11 { pt3dadd( 89.9114, 92.686, -29.878, 0.22 ) }
    dend_11 { pt3dadd( 90.3648, 92.9666, -30.0111, 0.44 ) }
    dend_11 { pt3dadd( 90.4386, 92.9944, -30.0307, 0.44 ) }
    dend_11 { pt3dadd( 90.8608, 93.0876, -30.1225, 0.59 ) }
    dend_11 { pt3dadd( 90.9277, 93.0985, -30.1374, 0.59 ) }
    dend_11 { pt3dadd( 91.5758, 93.1765, -30.2749, 0.59 ) }
    dend_11 { pt3dadd( 92.6188, 93.2933, -30.4681, 0.22 ) }
    dend_11 { pt3dadd( 93.1853, 93.4005, -30.5844, 0.59 ) }
    dend_11 { pt3dadd( 93.5593, 93.4928, -30.6606, 0.66 ) }
    dend_11 { pt3dadd( 94.2743, 93.7219, -30.8599, 0.66 ) }
    dend_11 { pt3dadd( 94.3383, 93.7476, -30.8798, 0.66 ) }
    dend_11 { pt3dadd( 95.1834, 94.1678, -31.1853, 0.22 ) }
    dend_11 { pt3dadd( 95.7784, 94.5116, -31.4032, 0.66 ) }
    dend_11 { pt3dadd( 96.043, 94.6724, -31.5046, 0.96 ) }
    dend_11 { pt3dadd( 97.424, 95.5407, -32.0323, 0.22 ) }
    dend_11 { pt3dadd( 97.9082, 95.8441, -32.2513, 0.22 ) }
    dend_11 { pt3dadd( 98.6446, 96.291, -32.717, 0.59 ) }
    dend_11 { pt3dadd( 99.0056, 96.5035, -33.0219, 0.96 ) }
    dend_11 { pt3dadd( 99.1801, 96.5985, -33.1876, 1.18 ) }
    dend_11 { pt3dadd( 99.2271, 96.6219, -33.2336, 1.18 ) }
    dend_11 { pt3dadd( 100.469, 97.1318, -34.353, 0.44 ) }
    dend_11 { pt3dadd( 101.509, 97.464, -35.2003, 0.37 ) }
    dend_11 { pt3dadd( 102.305, 97.6717, -35.7847, 0.29 ) }
    dend_11 { pt3dadd( 102.793, 97.7885, -36.1014, 0.44 ) }
    dend_11 { pt3dadd( 103.154, 97.8808, -36.3197, 0.44 ) }
    dend_11 { pt3dadd( 104.179, 98.1687, -36.8281, 0.22 ) }
    dend_11 { pt3dadd( 104.935, 98.361, -37.0688, 0.81 ) }
    dend_11 { pt3dadd( 105.076, 98.393, -37.1025, 0.81 ) }
    dend_11 { pt3dadd( 105.535, 98.4684, -37.1993, 0.96 ) }
    dend_11 { pt3dadd( 107.291, 98.7002, -37.568, 0.37 ) }
    dend_11 { pt3dadd( 108.304, 98.8483, -37.7879, 0.37 ) }
    dend_11 { pt3dadd( 109.282, 99.0224, -38.072, 0.29 ) }
    dend_11 { pt3dadd( 109.338, 99.0305, -38.0915, 0.29 ) }
    dend_11 { pt3dadd( 110.054, 99.1136, -38.3586, 0.29 ) }
    dend_11 { pt3dadd( 110.607, 99.1691, -38.5619, 0.74 ) }
    dend_11 { pt3dadd( 111.302, 99.2409, -38.7447, 1.03 ) }
    dend_11 { pt3dadd( 112.561, 99.4019, -39.0534, 0.88 ) }
    dend_11 { pt3dadd( 114.236, 99.692, -39.271, 0.29 ) }
    dend_11 { pt3dadd( 114.807, 99.7848, -39.2728, 0.44 ) }
    dend_11 { pt3dadd( 115.6, 99.8921, -39.183, 0.29 ) }
    dend_11 { pt3dadd( 116.84, 99.9956, -38.8851, 1.33 ) }
    dend_11 { pt3dadd( 117.272, 100.004, -38.7177, 1.69 ) }
    dend_11 { pt3dadd( 118.653, 99.9936, -37.9903, 0.29 ) }
    dend_11 { pt3dadd( 119.234, 99.9876, -37.6277, 0.29 ) }
    dend_11 { pt3dadd( 119.59, 99.9666, -37.4141, 0.66 ) }
    dend_11 { pt3dadd( 119.645, 99.9606, -37.3852, 0.66 ) }
    dend_11 { pt3dadd( 120.068, 99.8972, -37.2238, 0.66 ) }
    dend_11 { pt3dadd( 120.822, 99.7492, -37.0037, 0.22 ) }
    dend_11 { pt3dadd( 121.294, 99.6052, -36.9093, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_11 { pt3dadd( 121.368, 99.5798, -36.891, 0.44 ) }
    dend_11 { pt3dadd( 121.914, 99.3774, -36.7382, 0.44 ) }
    dend_11 { pt3dadd( 121.969, 99.3567, -36.7307, 0.44 ) }
    dend_11 { pt3dadd( 122.698, 99.1081, -36.6929, 0.29 ) }
    dend_11 { pt3dadd( 123.509, 98.8329, -36.7401, 0.29 ) }
    dend_11 { pt3dadd( 124.114, 98.6295, -36.8196, 0.74 ) }
    dend_11 { pt3dadd( 124.448, 98.52, -36.8751, 0.96 ) }
    dend_11 { pt3dadd( 126.215, 97.9742, -37.2658, 0.37 ) }
    dend_11 { pt3dadd( 126.61, 97.868, -37.3747, 1.03 ) }
    dend_11 { pt3dadd( 127.6, 97.6717, -37.7511, 1.03 ) }
    dend_11 { pt3dadd( 128.049, 97.6096, -37.9733, 0.88 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 11/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 35.7842, 63.2353, 16.3493, 0.88 ) }
    dend_4 { pt3dadd( 36.5089, 64.7414, 18.7252, 0.88 ) }
    dend_4 { pt3dadd( 36.9385, 65.5336, 19.7435, 0.66 ) }
    dend_4 { pt3dadd( 37.1765, 66.0273, 20.2648, 0.66 ) }
    dend_4 { pt3dadd( 37.1982, 66.0783, 20.3096, 0.66 ) }
    dend_4 { pt3dadd( 37.4364, 66.7329, 20.7734, 0.66 ) }
    dend_4 { pt3dadd( 37.4569, 66.7937, 20.8102, 0.66 ) }
    dend_4 { pt3dadd( 37.7058, 67.6473, 21.1237, 0.74 ) }
    dend_4 { pt3dadd( 37.997, 69.0645, 21.6195, 0.44 ) }
    dend_4 { pt3dadd( 38.0951, 69.7115, 21.8617, 0.37 ) }
    dend_4 { pt3dadd( 38.215, 70.6398, 22.2278, 0.37 ) }
    dend_4 { pt3dadd( 38.264, 71.0761, 22.4037, 0.59 ) }
    dend_4 { pt3dadd( 38.3819, 72.1143, 22.8153, 0.59 ) }
    dend_4 { pt3dadd( 38.4781, 72.8643, 23.1038, 0.59 ) }
    dend_4 { pt3dadd( 38.5536, 73.2004, 23.217, 0.88 ) }
    dend_4 { pt3dadd( 38.5761, 73.2727, 23.2477, 0.88 ) }
    dend_4 { pt3dadd( 38.802, 73.9225, 23.6314, 1.18 ) }
    dend_4 { pt3dadd( 38.8433, 74.0446, 23.7212, 1.18 ) }
    dend_4 { pt3dadd( 38.9544, 74.4103, 24.0236, 0.88 ) }
    dend_4 { pt3dadd( 39.1782, 75.198, 24.7015, 0.44 ) }
    dend_4 { pt3dadd( 39.4563, 76.1084, 25.4749, 0.74 ) }
    dend_4 { pt3dadd( 39.8307, 77.2836, 26.4875, 1.33 ) }
    dend_4 { pt3dadd( 40.1779, 78.349, 27.393, 0.96 ) }
    dend_4 { pt3dadd( 40.5401, 79.4495, 28.2957, 0.52 ) }
    dend_4 { pt3dadd( 40.7608, 80.1408, 28.8252, 0.44 ) }
    dend_4 { pt3dadd( 41.036, 81.0726, 29.5163, 0.37 ) }
    dend_4 { pt3dadd( 41.263, 82.0385, 30.2019, 0.37 ) }
    dend_4 { pt3dadd( 41.3702, 82.6904, 30.6674, 0.37 ) }
    dend_4 { pt3dadd( 41.3811, 82.8664, 30.797, 0.37 ) }
    dend_4 { pt3dadd( 41.3506, 83.4579, 31.2748, 0.59 ) }
    dend_4 { pt3dadd( 41.1104, 84.7769, 32.4188, 0.88 ) }
    dend_4 { pt3dadd( 40.8079, 85.7749, 33.3186, 0.88 ) }
    dend_4 { pt3dadd( 40.5102, 86.5565, 34.0057, 0.52 ) }
    dend_4 { pt3dadd( 40.3065, 87.0292, 34.4302, 0.52 ) }
    dend_4 { pt3dadd( 40.2887, 87.0736, 34.4672, 0.52 ) }
    dend_4 { pt3dadd( 40.1684, 87.4842, 34.7362, 0.52 ) }
    dend_4 { pt3dadd( 40.1689, 87.5551, 34.7528, 0.52 ) }
    dend_4 { pt3dadd( 40.2823, 88.0318, 34.7754, 0.74 ) }
    dend_4 { pt3dadd( 40.3177, 88.1354, 34.7738, 0.74 ) }
    dend_4 { pt3dadd( 40.5785, 88.7702, 34.7692, 0.37 ) }
    dend_4 { pt3dadd( 40.9918, 89.7107, 34.764, 0.44 ) }
    dend_4 { pt3dadd( 41.3782, 90.483, 34.7205, 0.44 ) }
    dend_4 { pt3dadd( 41.7122, 91.1102, 34.6609, 0.74 ) }
    dend_4 { pt3dadd( 41.7838, 91.2349, 34.645, 0.74 ) }
    dend_4 { pt3dadd( 42.2336, 92.0267, 34.5083, 0.74 ) }
    dend_4 { pt3dadd( 42.2689, 92.0885, 34.4953, 0.74 ) }
    dend_4 { pt3dadd( 42.778, 93.0162, 34.2825, 0.66 ) }
    dend_4 { pt3dadd( 42.8111, 93.0814, 34.2679, 0.66 ) }
    dend_4 { pt3dadd( 43.0925, 93.6564, 34.1618, 0.74 ) }
    dend_4 { pt3dadd( 43.5709, 94.7028, 34.0063, 0.29 ) }
    dend_4 { pt3dadd( 43.8324, 95.3482, 33.9664, 0.44 ) }
    dend_4 { pt3dadd( 44.1066, 96.1101, 33.9779, 0.22 ) }
    dend_4 { pt3dadd( 44.2775, 96.6914, 34.0363, 0.66 ) }
    dend_4 { pt3dadd( 44.3894, 97.1378, 34.0941, 0.66 ) }
    dend_4 { pt3dadd( 44.4037, 97.2205, 34.1077, 0.66 ) }
    dend_4 { pt3dadd( 44.5584, 98.2669, 34.3494, 0.44 ) }
    dend_4 { pt3dadd( 44.5734, 98.339, 34.3641, 0.44 ) }
    dend_4 { pt3dadd( 44.6781, 98.6963, 34.4256, 0.52 ) }
    dend_4 { pt3dadd( 44.7536, 98.9126, 34.4469, 0.52 ) }
    dend_4 { pt3dadd( 44.9129, 99.3335, 34.4556, 0.52 ) }
    dend_4 { pt3dadd( 45.2578, 100.265, 34.422, 0.29 ) }
    dend_4 { pt3dadd( 45.5498, 101.163, 34.3537, 0.29 ) }
    dend_4 { pt3dadd( 45.5637, 101.224, 34.3496, 0.29 ) }
    dend_4 { pt3dadd( 45.6688, 101.911, 34.3078, 0.44 ) }
    dend_4 { pt3dadd( 45.684, 102.15, 34.2941, 0.44 ) }
    dend_4 { pt3dadd( 45.6506, 102.899, 34.2924, 0.44 ) }
    dend_4 { pt3dadd( 45.5415, 103.6, 34.3177, 0.59 ) }
    dend_4 { pt3dadd( 45.4321, 104.22, 34.4062, 0.74 ) }
    dend_4 { pt3dadd( 45.4224, 104.301, 34.4233, 0.74 ) }
    dend_4 { pt3dadd( 45.4083, 104.896, 34.5889, 0.74 ) }
    dend_4 { pt3dadd( 45.4806, 105.773, 35.0019, 0.52 ) }
    dend_4 { pt3dadd( 45.4917, 105.834, 35.0387, 0.52 ) }
    dend_4 { pt3dadd( 45.6567, 106.526, 35.4716, 0.44 ) }
    dend_4 { pt3dadd( 45.7433, 106.916, 35.7304, 0.29 ) }
    dend_4 { pt3dadd( 45.8513, 107.551, 36.1325, 0.29 ) }
    dend_4 { pt3dadd( 45.9788, 108.922, 37.0626, 0.29 ) }
    dend_4 { pt3dadd( 46.0042, 109.434, 37.3957, 0.37 ) }
    dend_4 { pt3dadd( 46.0323, 110.141, 37.8373, 0.44 ) }
    dend_4 { pt3dadd( 46.0521, 111.176, 38.4552, 0.96 ) }
    dend_4 { pt3dadd( 46.0766, 111.817, 38.8332, 1.25 ) }
    dend_4 { pt3dadd( 46.2452, 113.396, 39.7956, 0.52 ) }
    dend_4 { pt3dadd( 46.3786, 114.046, 40.1672, 0.52 ) }
    dend_4 { pt3dadd( 46.5453, 114.574, 40.4934, 0.66 ) }
    dend_4 { pt3dadd( 46.5739, 114.637, 40.5364, 0.66 ) }
    dend_4 { pt3dadd( 46.9125, 115.218, 40.91, 0.44 ) }
    dend_4 { pt3dadd( 47.4581, 116.054, 41.4189, 0.29 ) }
    dend_4 { pt3dadd( 47.6279, 116.347, 41.5557, 0.52 ) }
    dend_4 { pt3dadd( 47.8644, 116.858, 41.7935, 0.52 ) }
    dend_4 { pt3dadd( 48.13, 117.521, 42.0951, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_4 { pt3dadd( 48.3407, 118.03, 42.3118, 0.29 ) }
    dend_4 { pt3dadd( 48.5158, 118.456, 42.5227, 0.52 ) }
    dend_4 { pt3dadd( 48.9215, 119.316, 42.9635, 0.88 ) }
    dend_4 { pt3dadd( 49.1373, 119.725, 43.1877, 0.52 ) }
    dend_4 { pt3dadd( 49.645, 120.562, 43.6803, 0.44 ) }
    dend_4 { pt3dadd( 50.0702, 121.179, 44.0523, 0.59 ) }
    dend_4 { pt3dadd( 50.8581, 122.175, 44.7434, 0.29 ) }
    dend_4 { pt3dadd( 51.4443, 122.836, 45.2626, 0.29 ) }
    dend_4 { pt3dadd( 53.4853, 131.893, 49.5226, 0.29 ) }
    dend_4 { pt3dadd( 55.229, 141.802, 51.728, 0.29 ) }
    // Section: dend_87, id: dend_87, parent: dend_67 (entry count 10/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -111.185, -197.628, 22.7073, 0.29 ) }
    dend_87 { pt3dadd( -111.402, -198.989, 23.0362, 0.29 ) }
    dend_87 { pt3dadd( -111.476, -199.452, 23.1483, 0.74 ) }
    dend_87 { pt3dadd( -111.614, -200.319, 23.358, 0.29 ) }
    dend_87 { pt3dadd( -111.744, -201.135, 23.5551, 0.29 ) }
    dend_87 { pt3dadd( -111.921, -202.243, 23.8231, 0.37 ) }
    dend_87 { pt3dadd( -114.123, -213.654, 25.1081, 0.37 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 17/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -111.185, -197.628, 22.7073, 0.37 ) }
    dend_68 { pt3dadd( -111.77, -197.839, 23.8567, 0.37 ) }
    dend_68 { pt3dadd( -112.108, -197.949, 24.4313, 0.37 ) }
    dend_68 { pt3dadd( -112.733, -198.119, 25.4918, 0.44 ) }
    dend_68 { pt3dadd( -113.182, -198.237, 26.2167, 0.37 ) }
    dend_68 { pt3dadd( -114.087, -198.506, 27.6157, 0.88 ) }
    dend_68 { pt3dadd( -114.394, -198.623, 28.1315, 1.11 ) }
    dend_68 { pt3dadd( -114.77, -198.785, 28.7573, 0.81 ) }
    dend_68 { pt3dadd( -115.625, -199.27, 30.3134, 0.29 ) }
    dend_68 { pt3dadd( -115.906, -199.437, 30.7992, 0.29 ) }
    dend_68 { pt3dadd( -116.153, -199.587, 31.2406, 0.74 ) }
    dend_68 { pt3dadd( -117.013, -200.068, 32.6485, 0.44 ) }
    dend_68 { pt3dadd( -117.278, -200.207, 33.0893, 0.44 ) }
    dend_68 { pt3dadd( -117.881, -200.452, 34.0151, 0.29 ) }
    dend_68 { pt3dadd( -118.506, -200.733, 35.0779, 0.29 ) }
    dend_68 { pt3dadd( -118.869, -200.912, 35.9261, 0.59 ) }
    dend_68 { pt3dadd( -119.102, -201.02, 36.5457, 0.66 ) }
    dend_68 { pt3dadd( -119.44, -201.156, 37.4737, 0.44 ) }
    dend_68 { pt3dadd( -119.731, -201.281, 38.3941, 0.37 ) }
    dend_68 { pt3dadd( -120.383, -201.604, 40.7603, 0.66 ) }
    dend_68 { pt3dadd( -120.979, -201.956, 43.1207, 0.81 ) }
    dend_68 { pt3dadd( -121.121, -202.026, 43.635, 0.88 ) }
    dend_68 { pt3dadd( -121.239, -202.086, 44.1002, 0.88 ) }
    dend_68 { pt3dadd( -121.259, -202.096, 44.1795, 0.88 ) }
    dend_68 { pt3dadd( -121.635, -202.243, 45.5078, 0.52 ) }
    dend_68 { pt3dadd( -121.954, -202.246, 46.0994, 0.52 ) }
    dend_68 { pt3dadd( -123.154, -202.266, 47.7696, 1.69 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 44/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -0.163513, -112.737, -18.708, 0.74 ) }
    dend_52 { pt3dadd( -0.184779, -113.888, -19.1963, 0.74 ) }
    dend_52 { pt3dadd( -0.120807, -114.825, -19.5609, 0.74 ) }
    dend_52 { pt3dadd( 0.0206523, -116.113, -20.0131, 0.88 ) }
    dend_52 { pt3dadd( 0.129484, -116.903, -20.2694, 0.88 ) }
    dend_52 { pt3dadd( 0.307896, -118.197, -20.6897, 0.81 ) }
    dend_52 { pt3dadd( 0.549933, -119.953, -21.2598, 0.88 ) }
    dend_52 { pt3dadd( 0.770928, -121.03, -21.5629, 0.88 ) }
    dend_52 { pt3dadd( 0.972053, -121.783, -21.763, 1.33 ) }
    dend_52 { pt3dadd( 1.21818, -122.579, -21.94, 1.18 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 54/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -0.163513, -112.737, -18.708, 0.59 ) }
    dend_49 { pt3dadd( -0.0901061, -113.581, -18.8575, 0.59 ) }
    dend_49 { pt3dadd( 0.0354774, -114.684, -19.2143, 0.52 ) }
    dend_49 { pt3dadd( 0.206299, -115.794, -19.6067, 0.44 ) }
    dend_49 { pt3dadd( 0.371044, -116.754, -19.9566, 0.44 ) }
    dend_49 { pt3dadd( 0.627499, -118.056, -20.3975, 0.59 ) }
    dend_49 { pt3dadd( 0.971099, -119.613, -20.9207, 0.74 ) }
    dend_49 { pt3dadd( 1.26861, -120.782, -21.3437, 0.59 ) }
    dend_49 { pt3dadd( 1.51311, -121.628, -21.6588, 0.59 ) }
    dend_49 { pt3dadd( 1.53499, -121.696, -21.6817, 0.59 ) }
    dend_49 { pt3dadd( 1.98258, -123.006, -22.0347, 0.59 ) }
    dend_49 { pt3dadd( 2.47398, -124.408, -22.238, 0.74 ) }
    dend_49 { pt3dadd( 2.76674, -125.206, -22.2847, 0.74 ) }
    dend_49 { pt3dadd( 3.25553, -126.498, -22.3108, 0.66 ) }
    dend_49 { pt3dadd( 3.71818, -127.685, -22.3085, 0.59 ) }
    dend_49 { pt3dadd( 3.78178, -127.833, -22.2956, 0.59 ) }
    dend_49 { pt3dadd( 4.35147, -128.925, -22.0554, 0.59 ) }
    dend_49 { pt3dadd( 4.59124, -129.306, -21.9093, 0.81 ) }
    dend_49 { pt3dadd( 4.63626, -129.372, -21.8792, 0.81 ) }
    dend_49 { pt3dadd( 5.06964, -130.004, -21.5931, 0.81 ) }
    dend_49 { pt3dadd( 5.88623, -131.207, -21.1577, 0.66 ) }
    dend_49 { pt3dadd( 6.47252, -132.153, -20.9011, 0.66 ) }
    dend_49 { pt3dadd( 6.95894, -133.078, -20.6839, 0.66 ) }
    dend_49 { pt3dadd( 7.42476, -134.116, -20.4219, 0.81 ) }
    dend_49 { pt3dadd( 7.74419, -134.94, -20.2146, 0.96 ) }
    dend_49 { pt3dadd( 8.14511, -136.167, -19.9246, 0.52 ) }
    dend_49 { pt3dadd( 8.41925, -137.13, -19.7217, 0.52 ) }
    dend_49 { pt3dadd( 8.73838, -138.39, -19.4117, 0.81 ) }
    dend_49 { pt3dadd( 9.00047, -139.399, -19.1272, 0.81 ) }
    dend_49 { pt3dadd( 9.24082, -140.323, -18.8455, 0.81 ) }
    dend_49 { pt3dadd( 9.25954, -140.404, -18.8209, 0.81 ) }
    dend_49 { pt3dadd( 9.5231, -141.646, -18.4794, 0.81 ) }
    dend_49 { pt3dadd( 9.55372, -141.791, -18.449, 0.81 ) }
    dend_49 { pt3dadd( 9.82284, -143.255, -18.2291, 0.81 ) }
    dend_49 { pt3dadd( 9.9746, -144.364, -18.0917, 0.81 ) }
    dend_49 { pt3dadd( 10.0734, -145.407, -17.9589, 0.66 ) }
    dend_49 { pt3dadd( 10.0781, -145.494, -17.9445, 0.66 ) }
    dend_49 { pt3dadd( 10.096, -146.597, -17.7288, 0.37 ) }
    dend_49 { pt3dadd( 10.121, -147.906, -17.4505, 0.66 ) }
    dend_49 { pt3dadd( 10.131, -148.508, -17.3108, 0.96 ) }
    dend_49 { pt3dadd( 10.1667, -149.695, -16.9734, 0.74 ) }
    dend_49 { pt3dadd( 10.2182, -151.124, -16.518, 0.96 ) }
    dend_49 { pt3dadd( 10.2537, -152.217, -16.1811, 0.81 ) }
    dend_49 { pt3dadd( 10.2952, -153.509, -15.8016, 0.74 ) }
    dend_49 { pt3dadd( 10.2971, -153.572, -15.7882, 0.74 ) }
    dend_49 { pt3dadd( 10.3496, -154.93, -15.6091, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_49 { pt3dadd( 10.3567, -155.007, -15.6062, 0.74 ) }
    dend_49 { pt3dadd( 10.6331, -156.337, -15.7857, 0.44 ) }
    dend_49 { pt3dadd( 10.8248, -157.023, -15.9377, 0.44 ) }
    dend_49 { pt3dadd( 11.2794, -158.417, -16.3411, 1.4 ) }
    dend_49 { pt3dadd( 11.6348, -159.306, -16.6658, 1.18 ) }
    dend_49 { pt3dadd( 12.1655, -160.395, -17.171, 1.03 ) }
    dend_49 { pt3dadd( 13.1896, -162.172, -18.0627, 0.66 ) }
    dend_49 { pt3dadd( 13.6359, -162.833, -18.3969, 0.66 ) }
    dend_49 { pt3dadd( 13.7448, -162.981, -18.4684, 0.66 ) }
    dend_49 { pt3dadd( 14.7753, -164.316, -19.0465, 0.81 ) }
    dend_49 { pt3dadd( 15.5543, -165.299, -19.5057, 0.96 ) }
    dend_49 { pt3dadd( 16.5935, -166.572, -20.1244, 0.74 ) }
    dend_49 { pt3dadd( 17.4112, -167.528, -20.5496, 0.74 ) }
    dend_49 { pt3dadd( 18.0473, -168.254, -20.8562, 0.96 ) }
    dend_49 { pt3dadd( 18.5214, -168.807, -21.0502, 1.25 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 15/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -31.1504, -403.475, -15.6063, 0.29 ) }
    dend_47 { pt3dadd( -30.2826, -403.485, -15.1493, 0.29 ) }
    dend_47 { pt3dadd( -29.7565, -403.491, -14.8723, 0.29 ) }
    dend_47 { pt3dadd( -28.7293, -403.503, -14.3313, 0.22 ) }
    dend_47 { pt3dadd( -28.2263, -403.509, -14.0664, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 20/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -31.1504, -403.475, -15.6063, 0.59 ) }
    dend_44 { pt3dadd( -31.3269, -404.467, -15.7646, 0.59 ) }
    dend_44 { pt3dadd( -31.341, -404.531, -15.7759, 0.59 ) }
    dend_44 { pt3dadd( -31.6051, -405.548, -15.9618, 0.52 ) }
    dend_44 { pt3dadd( -31.8854, -406.574, -16.1485, 0.66 ) }
    dend_44 { pt3dadd( -32.1342, -407.545, -16.3038, 0.66 ) }
    dend_44 { pt3dadd( -32.3824, -408.551, -16.4528, 0.81 ) }
    dend_44 { pt3dadd( -32.4389, -408.754, -16.4812, 0.81 ) }
    dend_44 { pt3dadd( -32.7101, -409.771, -16.5525, 0.81 ) }
    dend_44 { pt3dadd( -32.7427, -409.906, -16.5512, 0.81 ) }
    dend_44 { pt3dadd( -32.9591, -411.086, -16.3535, 0.81 ) }
    dend_44 { pt3dadd( -32.9672, -411.158, -16.3413, 0.81 ) }
    dend_44 { pt3dadd( -32.9904, -412.235, -16.2892, 0.59 ) }
    dend_44 { pt3dadd( -32.965, -413.314, -16.3352, 0.37 ) }
    dend_44 { pt3dadd( -32.886, -413.977, -16.4613, 0.74 ) }
    dend_44 { pt3dadd( -32.5851, -415.298, -17.0368, 0.81 ) }
    dend_44 { pt3dadd( -32.1336, -416.687, -17.8525, 0.52 ) }
    dend_44 { pt3dadd( -31.4394, -418.355, -18.9729, 0.52 ) }
    dend_44 { pt3dadd( -31.4194, -418.398, -19.0049, 0.52 ) }
    dend_44 { pt3dadd( -30.6985, -419.62, -20.1279, 0.96 ) }
    dend_44 { pt3dadd( -29.6255, -421.076, -21.6788, 1.69 ) }
    dend_44 { pt3dadd( -29.1227, -421.624, -22.3374, 0.37 ) }
    dend_44 { pt3dadd( -28.3305, -422.319, -23.2554, 0.37 ) }
    dend_44 { pt3dadd( -27.9319, -422.624, -23.6687, 0.66 ) }
    dend_44 { pt3dadd( -25.9839, -424.027, -25.5521, 1.25 ) }
    dend_44 { pt3dadd( -24.5722, -424.96, -26.8152, 0.44 ) }
    dend_44 { pt3dadd( -23.6662, -425.531, -27.5634, 0.81 ) }
    dend_44 { pt3dadd( -21.9162, -426.623, -28.9645, 0.37 ) }
    dend_44 { pt3dadd( -21.2196, -427.05, -29.4759, 0.29 ) }
    dend_44 { pt3dadd( -20.2287, -427.646, -30.0907, 0.29 ) }
    dend_44 { pt3dadd( -19.7776, -427.942, -30.2943, 0.96 ) }
    dend_44 { pt3dadd( -19.3035, -428.256, -30.4593, 0.96 ) }
    dend_44 { pt3dadd( -18.3087, -428.973, -30.7399, 0.44 ) }
    dend_44 { pt3dadd( -17.9347, -429.22, -30.8566, 0.81 ) }
    dend_44 { pt3dadd( -17.4001, -429.528, -31.0508, 1.03 ) }
    dend_44 { pt3dadd( -17.3395, -429.563, -31.0723, 1.03 ) }
    dend_44 { pt3dadd( -15.7399, -430.542, -31.6083, 0.37 ) }
    dend_44 { pt3dadd( -14.6728, -431.241, -31.9566, 1.4 ) }
    dend_44 { pt3dadd( -12.7775, -432.637, -32.7328, 0.37 ) }
    dend_44 { pt3dadd( -12.2471, -433.077, -32.9804, 0.66 ) }
    dend_44 { pt3dadd( -11.5005, -433.765, -33.3339, 0.29 ) }
    dend_44 { pt3dadd( -10.9005, -434.376, -33.577, 0.96 ) }
    dend_44 { pt3dadd( -10.649, -434.668, -33.653, 0.96 ) }
    dend_44 { pt3dadd( -8.89316, -436.996, -34.0129, 0.37 ) }
    dend_44 { pt3dadd( -8.68687, -437.329, -34.0245, 0.59 ) }
    dend_44 { pt3dadd( -8.10299, -438.245, -34.0646, 0.29 ) }
    dend_44 { pt3dadd( -7.43779, -439.166, -34.1461, 0.96 ) }
    dend_44 { pt3dadd( -7.3984, -439.216, -34.1508, 0.96 ) }
    dend_44 { pt3dadd( -7.08198, -439.64, -34.0871, 1.33 ) }
    dend_44 { pt3dadd( -7.05801, -439.687, -34.0479, 1.33 ) }
    dend_44 { pt3dadd( -6.90906, -440.008, -33.7642, 1.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -48.0987, -64.8441, -6.96141, 0.29 ) }
    dend_40 { pt3dadd( -48.0322, -65.8687, -6.25202, 0.29 ) }
    dend_40 { pt3dadd( -47.9848, -66.5987, -5.74655, 0.37 ) }
    dend_40 { pt3dadd( -47.9411, -67.2726, -5.27995, 0.37 ) }
    dend_40 { pt3dadd( -47.8784, -68.2379, -4.61163, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 76/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -48.0987, -64.8441, -6.96141, 0.37 ) }
    dend_35 { pt3dadd( -48.6826, -65.1948, -6.89232, 0.37 ) }
    dend_35 { pt3dadd( -49.0936, -65.3891, -6.79553, 0.37 ) }
    dend_35 { pt3dadd( -49.5662, -65.5613, -6.66785, 0.81 ) }
    dend_35 { pt3dadd( -49.8943, -65.6467, -6.52687, 1.25 ) }
    dend_35 { pt3dadd( -50.1436, -65.6977, -6.39833, 1.25 ) }
    dend_35 { pt3dadd( -51.2058, -65.9166, -5.83987, 0.44 ) }
    dend_35 { pt3dadd( -51.2794, -65.9277, -5.7981, 0.44 ) }
    dend_35 { pt3dadd( -51.5277, -65.9573, -5.65616, 0.74 ) }
    dend_35 { pt3dadd( -52.5064, -66.0832, -5.12342, 0.52 ) }
    dend_35 { pt3dadd( -53.0172, -66.1805, -4.87188, 0.59 ) }
    dend_35 { pt3dadd( -53.3912, -66.3021, -4.74926, 0.44 ) }
    dend_35 { pt3dadd( -53.6855, -66.4566, -4.72886, 0.29 ) }
    dend_35 { pt3dadd( -53.9951, -66.6607, -4.74829, 0.29 ) }
    dend_35 { pt3dadd( -54.3746, -66.981, -4.82873, 1.11 ) }
    dend_35 { pt3dadd( -54.6047, -67.2222, -4.916, 1.33 ) }
    dend_35 { pt3dadd( -55.1385, -67.9185, -5.15465, 0.74 ) }
    dend_35 { pt3dadd( -55.3985, -68.3324, -5.27104, 0.74 ) }
    dend_35 { pt3dadd( -55.5355, -68.5999, -5.32896, 1.11 ) }
    dend_35 { pt3dadd( -55.6903, -68.934, -5.37458, 0.88 ) }
    dend_35 { pt3dadd( -55.8678, -69.345, -5.40001, 0.66 ) }
    dend_35 { pt3dadd( -56.0667, -69.8319, -5.40038, 0.37 ) }
    dend_35 { pt3dadd( -56.1807, -70.1592, -5.37399, 0.37 ) }
    dend_35 { pt3dadd( -56.3389, -70.6689, -5.32773, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_35 { pt3dadd( -56.4898, -71.2354, -5.27348, 0.37 ) }
    dend_35 { pt3dadd( -56.5892, -71.6575, -5.23355, 0.29 ) }
    dend_35 { pt3dadd( -56.6677, -72.0616, -5.18267, 0.59 ) }
    dend_35 { pt3dadd( -56.7396, -72.4718, -5.10978, 0.81 ) }
    dend_35 { pt3dadd( -56.7434, -72.5052, -5.10321, 0.81 ) }
    dend_35 { pt3dadd( -56.7674, -72.9602, -4.99325, 0.74 ) }
    dend_35 { pt3dadd( -56.7669, -73.2488, -4.91944, 1.11 ) }
    dend_35 { pt3dadd( -56.7547, -73.8839, -4.7426, 0.59 ) }
    dend_35 { pt3dadd( -56.7524, -74.1734, -4.65707, 1.03 ) }
    dend_35 { pt3dadd( -56.7657, -74.7344, -4.47646, 0.52 ) }
    dend_35 { pt3dadd( -56.7892, -75.2012, -4.3223, 0.74 ) }
    dend_35 { pt3dadd( -56.8147, -75.53, -4.21566, 0.66 ) }
    dend_35 { pt3dadd( -56.8716, -76.1267, -4.02857, 0.44 ) }
    dend_35 { pt3dadd( -56.9481, -76.6537, -3.87135, 0.44 ) }
    dend_35 { pt3dadd( -57.0739, -77.2, -3.71504, 0.44 ) }
    dend_35 { pt3dadd( -57.1489, -77.4179, -3.65669, 0.81 ) }
    dend_35 { pt3dadd( -57.3163, -77.807, -3.56735, 1.18 ) }
    dend_35 { pt3dadd( -57.3939, -77.9523, -3.53579, 1.33 ) }
    dend_35 { pt3dadd( -57.7541, -78.5359, -3.40457, 0.44 ) }
    dend_35 { pt3dadd( -58.0522, -78.9915, -3.30716, 0.59 ) }
    dend_35 { pt3dadd( -58.2939, -79.3207, -3.19813, 0.81 ) }
    dend_35 { pt3dadd( -58.4219, -79.471, -3.13224, 0.81 ) }
    dend_35 { pt3dadd( -58.7586, -79.7912, -2.93729, 0.37 ) }
    dend_35 { pt3dadd( -59.1391, -80.0941, -2.72104, 0.74 ) }
    dend_35 { pt3dadd( -59.2964, -80.1973, -2.63365, 0.96 ) }
    dend_35 { pt3dadd( -60.1814, -80.717, -2.12431, 0.59 ) }
    dend_35 { pt3dadd( -60.5681, -80.9199, -1.9035, 0.81 ) }
    dend_35 { pt3dadd( -61.3419, -81.2799, -1.46689, 0.52 ) }
    dend_35 { pt3dadd( -61.8129, -81.4635, -1.21249, 0.52 ) }
    dend_35 { pt3dadd( -62.226, -81.6, -1.01315, 0.74 ) }
    dend_35 { pt3dadd( -65.4538, -85.6491, 1.12346, 0.74 ) }
    dend_35 { pt3dadd( -68.7706, -89.9016, 2.687, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 32/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -74.2195, -71.4676, -86.2859, 0.52 ) }
    dend_33 { pt3dadd( -73.7845, -72.5445, -87.081, 0.52 ) }
    dend_33 { pt3dadd( -73.2596, -73.794, -87.974, 0.88 ) }
    dend_33 { pt3dadd( -72.9839, -74.3802, -88.3682, 0.88 ) }
    dend_33 { pt3dadd( -72.4753, -75.3508, -89.0156, 0.37 ) }
    dend_33 { pt3dadd( -72.2437, -75.7748, -89.2849, 0.29 ) }
    dend_33 { pt3dadd( -72.0358, -76.1706, -89.5219, 0.88 ) }
    dend_33 { pt3dadd( -71.9923, -76.2525, -89.5666, 0.88 ) }
    dend_33 { pt3dadd( -71.6649, -76.9217, -89.8391, 0.88 ) }
    dend_33 { pt3dadd( -71.2693, -77.8235, -90.1532, 0.29 ) }
    dend_33 { pt3dadd( -71.023, -78.4635, -90.3166, 0.29 ) }
    dend_33 { pt3dadd( -70.8294, -79.0627, -90.4526, 0.22 ) }
    dend_33 { pt3dadd( -70.6478, -79.7586, -90.5919, 0.22 ) }
    dend_33 { pt3dadd( -70.5842, -80.1002, -90.6523, 0.81 ) }
    dend_33 { pt3dadd( -70.5152, -80.7294, -90.7451, 1.25 ) }
    dend_33 { pt3dadd( -70.4342, -81.7727, -90.862, 0.37 ) }
    dend_33 { pt3dadd( -70.3738, -82.7502, -90.9719, 0.22 ) }
    dend_33 { pt3dadd( -70.3423, -83.3482, -91.0395, 0.66 ) }
    dend_33 { pt3dadd( -70.3233, -83.913, -91.1041, 0.81 ) }
    dend_33 { pt3dadd( -70.3111, -85.05, -91.2366, 0.22 ) }
    dend_33 { pt3dadd( -70.3233, -85.6059, -91.3027, 0.88 ) }
    dend_33 { pt3dadd( -70.3419, -85.9147, -91.3408, 1.03 ) }
    dend_33 { pt3dadd( -70.3614, -86.3791, -91.4007, 1.03 ) }
    dend_33 { pt3dadd( -70.3635, -86.8655, -91.4624, 0.74 ) }
    dend_33 { pt3dadd( -70.3574, -86.944, -91.472, 0.74 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 57/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -74.2195, -71.4676, -86.2859, 0.22 ) }
    dend_32 { pt3dadd( -76.1022, -71.5716, -88.9468, 0.22 ) }
    dend_32 { pt3dadd( -76.8647, -71.6732, -89.9335, 0.22 ) }
    dend_32 { pt3dadd( -77.7007, -71.8227, -90.8961, 0.81 ) }
    dend_32 { pt3dadd( -78.1592, -71.9241, -91.3603, 1.11 ) }
    dend_32 { pt3dadd( -78.7337, -72.0724, -91.8669, 1.03 ) }
    dend_32 { pt3dadd( -80.3691, -72.5179, -93.1645, 0.22 ) }
    dend_32 { pt3dadd( -80.6798, -72.6278, -93.3454, 0.66 ) }
    dend_32 { pt3dadd( -81.3746, -72.9023, -93.7403, 0.96 ) }
    dend_32 { pt3dadd( -82.1812, -73.1758, -94.1346, 0.29 ) }
    dend_32 { pt3dadd( -83.1068, -73.4127, -94.5751, 0.29 ) }
    dend_32 { pt3dadd( -83.4613, -73.4727, -94.7268, 0.96 ) }
    dend_32 { pt3dadd( -84.1751, -73.5363, -95.0294, 1.18 ) }
    dend_32 { pt3dadd( -84.2423, -73.5368, -95.0646, 1.18 ) }
    dend_32 { pt3dadd( -85.1073, -73.4866, -95.574, 0.88 ) }
    dend_32 { pt3dadd( -85.2366, -73.4769, -95.6529, 0.88 ) }
    dend_32 { pt3dadd( -85.7786, -73.4597, -95.9742, 0.66 ) }
    dend_32 { pt3dadd( -87.0759, -73.5511, -96.8004, 0.29 ) }
    dend_32 { pt3dadd( -87.3213, -73.5818, -96.9543, 0.29 ) }
    dend_32 { pt3dadd( -88.3383, -73.7592, -97.5929, 0.29 ) }
    dend_32 { pt3dadd( -88.8599, -73.838, -98.0094, 0.59 ) }
    dend_32 { pt3dadd( -89.2743, -73.8748, -98.3765, 0.59 ) }
    dend_32 { pt3dadd( -90.4925, -73.9269, -99.5687, 0.29 ) }
    dend_32 { pt3dadd( -90.8256, -73.9238, -99.9002, 1.03 ) }
    dend_32 { pt3dadd( -91.3026, -73.8685, -100.475, 1.33 ) }
    dend_32 { pt3dadd( -92.6825, -73.4732, -102.559, 0.29 ) }
    dend_32 { pt3dadd( -92.9276, -73.3673, -102.953, 0.29 ) }
    dend_32 { pt3dadd( -92.9723, -73.3429, -103.03, 0.29 ) }
    dend_32 { pt3dadd( -93.3538, -73.15, -103.756, 0.59 ) }
    dend_32 { pt3dadd( -94.2516, -72.8095, -105.547, 0.81 ) }
    dend_32 { pt3dadd( -94.8519, -72.7093, -106.874, 0.52 ) }
    dend_32 { pt3dadd( -95.1524, -72.7532, -107.579, 1.11 ) }
    dend_32 { pt3dadd( -95.6804, -72.9557, -108.955, 1.4 ) }
    dend_32 { pt3dadd( -96.4427, -73.3134, -111.044, 0.29 ) }
    dend_32 { pt3dadd( -96.6135, -73.4228, -111.552, 0.88 ) }
    dend_32 { pt3dadd( -97.309, -74.0816, -113.642, 0.52 ) }
    dend_32 { pt3dadd( -97.8273, -74.7592, -115.327, 0.81 ) }
    dend_32 { pt3dadd( -98.0012, -75.0611, -115.983, 0.88 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 95/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -18.0481, 315.0, 24.936, 0.37 ) }
    dend_23 { pt3dadd( -17.4776, 314.98, 24.5601, 0.37 ) }
    dend_23 { pt3dadd( -16.3806, 314.859, 23.8344, 0.66 ) }
    dend_23 { pt3dadd( -16.3078, 314.845, 23.7883, 0.66 ) }
    dend_23 { pt3dadd( -15.7777, 314.745, 23.4552, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_23 { pt3dadd( -15.6923, 314.73, 23.4023, 0.29 ) }
    dend_23 { pt3dadd( -14.2761, 314.532, 22.4399, 0.29 ) }
    dend_23 { pt3dadd( -14.2054, 314.525, 22.3909, 0.29 ) }
    dend_23 { pt3dadd( -13.8678, 314.531, 22.1688, 0.66 ) }
    dend_23 { pt3dadd( -13.4726, 314.556, 21.8917, 0.52 ) }
    dend_23 { pt3dadd( -13.4018, 314.566, 21.8374, 0.52 ) }
    dend_23 { pt3dadd( -12.0975, 314.888, 20.8465, 0.22 ) }
    dend_23 { pt3dadd( -11.4535, 315.214, 20.3891, 0.22 ) }
    dend_23 { pt3dadd( -11.1067, 315.407, 20.1332, 0.29 ) }
    dend_23 { pt3dadd( -0.311329, 318.479, 14.9642, 0.29 ) }
    dend_23 { pt3dadd( 10.003, 323.88, 10.6051, 0.29 ) }
    dend_23 { pt3dadd( 18.8412, 330.215, 4.49495, 0.29 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -18.0481, 315.0, 24.936, 0.29 ) }
    dend_22 { pt3dadd( -17.7498, 316.613, 24.9441, 0.29 ) }
    dend_22 { pt3dadd( -17.678, 317.158, 24.9355, 0.29 ) }
    dend_22 { pt3dadd( -17.6743, 317.23, 24.9377, 0.29 ) }
    dend_22 { pt3dadd( -17.6743, 318.067, 24.9847, 0.29 ) }
    dend_22 { pt3dadd( -17.6767, 318.129, 24.9891, 0.29 ) }
    dend_22 { pt3dadd( -17.7747, 319.255, 25.1271, 0.29 ) }
    dend_22 { pt3dadd( -17.7894, 319.314, 25.1372, 0.29 ) }
    dend_22 { pt3dadd( -17.9438, 320.013, 25.3086, 0.52 ) }
    dend_22 { pt3dadd( -17.9665, 320.153, 25.3462, 0.52 ) }
    dend_22 { pt3dadd( -17.9914, 320.446, 25.42, 0.52 ) }
    dend_22 { pt3dadd( -18.013, 321.157, 25.5772, 0.22 ) }
    dend_22 { pt3dadd( -17.9975, 321.851, 25.692, 0.22 ) }
    dend_22 { pt3dadd( -17.9633, 322.544, 25.7874, 0.44 ) }
    dend_22 { pt3dadd( -17.913, 323.074, 25.8332, 0.44 ) }
    dend_22 { pt3dadd( -17.8293, 323.826, 25.8835, 0.22 ) }
    dend_22 { pt3dadd( -17.8193, 323.9, 25.8854, 0.22 ) }
    dend_22 { pt3dadd( -17.6473, 324.947, 25.8157, 0.22 ) }
    dend_22 { pt3dadd( -17.9738, 335.212, 25.6744, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 31/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 18.567, 230.851, -65.7755, 0.66 ) }
    dend_19 { pt3dadd( 18.6417, 231.717, -65.7896, 0.66 ) }
    dend_19 { pt3dadd( 18.751, 232.538, -65.8033, 0.29 ) }
    dend_19 { pt3dadd( 18.7654, 232.625, -65.8048, 0.29 ) }
    dend_19 { pt3dadd( 18.9245, 233.472, -65.8196, 0.29 ) }
    dend_19 { pt3dadd( 19.1697, 234.938, -65.8461, 0.29 ) }
    dend_19 { pt3dadd( 19.2524, 235.575, -65.8582, 0.52 ) }
    dend_19 { pt3dadd( 19.2742, 235.786, -65.862, 0.52 ) }
    dend_19 { pt3dadd( 19.3031, 236.092, -65.8689, 0.52 ) }
    dend_19 { pt3dadd( 19.3451, 236.655, -65.8817, 0.37 ) }
    dend_19 { pt3dadd( 19.3683, 237.435, -65.8996, 0.37 ) }
    dend_19 { pt3dadd( 19.2399, 238.617, -65.9271, 0.88 ) }
    dend_19 { pt3dadd( 19.2124, 238.778, -65.9286, 0.88 ) }
    dend_19 { pt3dadd( 19.0905, 239.426, -65.9279, 1.03 ) }
    dend_19 { pt3dadd( 18.9809, 240.05, -65.9218, 1.18 ) }
    dend_19 { pt3dadd( 18.8848, 240.731, -65.9102, 0.66 ) }
    dend_19 { pt3dadd( 18.8047, 241.578, -65.8896, 0.52 ) }
    dend_19 { pt3dadd( 18.7853, 241.987, -65.8776, 0.59 ) }
    dend_19 { pt3dadd( 18.8015, 242.432, -65.8684, 0.44 ) }
    dend_19 { pt3dadd( 18.9593, 243.629, -65.8547, 0.29 ) }
    dend_19 { pt3dadd( 19.0545, 244.086, -65.8552, 0.37 ) }
    dend_19 { pt3dadd( 19.0765, 244.174, -65.8607, 0.37 ) }
    dend_19 { pt3dadd( 19.197, 244.688, -65.9162, 0.22 ) }
    dend_19 { pt3dadd( 19.3727, 245.712, -66.0113, 0.59 ) }
    dend_19 { pt3dadd( 19.439, 246.25, -66.0518, 0.88 ) }
    dend_19 { pt3dadd( 19.5116, 247.157, -66.1011, 0.52 ) }
    dend_19 { pt3dadd( 19.5639, 248.303, -66.1419, 0.29 ) }
    dend_19 { pt3dadd( 19.5751, 249.15, -66.1551, 0.29 ) }
    dend_19 { pt3dadd( 19.5384, 250.285, -66.1488, 0.59 ) }
    dend_19 { pt3dadd( 19.5313, 250.375, -66.1412, 0.59 ) }
    dend_19 { pt3dadd( 19.4758, 250.99, -66.0455, 0.29 ) }
    dend_19 { pt3dadd( 19.465, 251.12, -66.015, 0.29 ) }
    dend_19 { pt3dadd( 19.4843, 252.08, -65.7432, 0.52 ) }
    dend_19 { pt3dadd( 19.5201, 252.521, -65.6487, 0.66 ) }
    dend_19 { pt3dadd( 19.6168, 253.585, -65.4969, 0.52 ) }
    dend_19 { pt3dadd( 19.6249, 253.675, -65.486, 0.52 ) }
    dend_19 { pt3dadd( 19.6769, 254.314, -65.4264, 0.29 ) }
    dend_19 { pt3dadd( 19.7809, 255.859, -65.4114, 0.29 ) }
    dend_19 { pt3dadd( 19.8366, 256.982, -65.5002, 0.66 ) }
    dend_19 { pt3dadd( 19.8464, 257.388, -65.5374, 0.88 ) }
    dend_19 { pt3dadd( 19.8466, 257.475, -65.547, 0.88 ) }
    dend_19 { pt3dadd( 19.8062, 258.296, -65.6097, 0.52 ) }
    dend_19 { pt3dadd( 19.6822, 259.367, -65.657, 0.52 ) }
    dend_19 { pt3dadd( 19.5511, 260.268, -65.6686, 0.29 ) }
    dend_19 { pt3dadd( 19.4174, 261.449, -65.6551, 0.29 ) }
    dend_19 { pt3dadd( 19.3419, 262.365, -65.6205, 1.03 ) }
    dend_19 { pt3dadd( 19.2882, 263.342, -65.5653, 0.74 ) }
    dend_19 { pt3dadd( 19.2784, 264.443, -65.4365, 0.29 ) }
    dend_19 { pt3dadd( 19.3316, 265.982, -65.1858, 0.44 ) }
    dend_19 { pt3dadd( 19.395, 266.776, -65.0421, 0.37 ) }
    dend_19 { pt3dadd( 19.5054, 267.711, -64.8724, 0.37 ) }
    dend_19 { pt3dadd( 19.6704, 268.707, -64.6537, 0.96 ) }
    dend_19 { pt3dadd( 19.9796, 270.034, -64.3173, 0.37 ) }
    dend_19 { pt3dadd( 20.228, 270.911, -64.065, 0.37 ) }
    dend_19 { pt3dadd( 20.4739, 271.674, -63.8206, 0.59 ) }
    dend_19 { pt3dadd( 20.6223, 272.088, -63.6945, 0.88 ) }
    dend_19 { pt3dadd( 20.7163, 272.336, -63.6268, 0.88 ) }
    dend_19 { pt3dadd( 21.0264, 273.121, -63.4435, 0.59 ) }
    dend_19 { pt3dadd( 21.0532, 273.189, -63.4322, 0.52 ) }
    dend_19 { pt3dadd( 21.7484, 274.89, -63.1776, 0.15 ) }
    dend_19 { pt3dadd( 22.0646, 275.669, -63.0909, 0.59 ) }
    dend_19 { pt3dadd( 22.0978, 275.75, -63.083, 0.59 ) }
    dend_19 { pt3dadd( 22.3832, 276.349, -63.0387, 0.59 ) }
    dend_19 { pt3dadd( 22.4242, 276.425, -63.0354, 0.59 ) }
    dend_19 { pt3dadd( 22.7805, 277.042, -63.0252, 0.88 ) }
    dend_19 { pt3dadd( 23.2894, 277.915, -63.0437, 1.18 ) }
    dend_19 { pt3dadd( 23.5106, 278.311, -63.0521, 1.18 ) }
    dend_19 { pt3dadd( 24.282, 279.838, -63.0621, 0.15 ) }
    dend_19 { pt3dadd( 24.7838, 280.994, -63.0569, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_19 { pt3dadd( 25.0099, 281.645, -63.0493, 0.52 ) }
    dend_19 { pt3dadd( 25.2208, 282.428, -63.0349, 0.66 ) }
    dend_19 { pt3dadd( 25.306, 282.892, -63.0246, 0.74 ) }
    dend_19 { pt3dadd( 25.4041, 283.845, -63.0015, 0.29 ) }
    dend_19 { pt3dadd( 25.4492, 284.756, -62.9789, 0.37 ) }
    dend_19 { pt3dadd( 25.5527, 285.925, -62.8919, 0.29 ) }
    dend_19 { pt3dadd( 25.5672, 286.024, -62.8806, 0.29 ) }
    dend_19 { pt3dadd( 25.9196, 287.304, -62.6876, 0.52 ) }
    dend_19 { pt3dadd( 25.9524, 287.384, -62.6735, 0.52 ) }
    dend_19 { pt3dadd( 26.5305, 288.419, -62.4644, 0.81 ) }
    dend_19 { pt3dadd( 27.2349, 289.454, -62.2255, 0.37 ) }
    dend_19 { pt3dadd( 27.2861, 289.521, -62.2073, 0.37 ) }
    dend_19 { pt3dadd( 28.0076, 290.571, -61.946, 0.29 ) }
    dend_19 { pt3dadd( 28.3124, 291.067, -61.8328, 0.37 ) }
    dend_19 { pt3dadd( 28.3464, 291.133, -61.821, 0.37 ) }
    dend_19 { pt3dadd( 28.6722, 291.865, -61.7342, 0.37 ) }
    dend_19 { pt3dadd( 29.1705, 293.043, -61.5493, 0.29 ) }
    dend_19 { pt3dadd( 29.7519, 294.336, -61.2633, 0.37 ) }
    dend_19 { pt3dadd( 29.9694, 294.815, -61.1419, 0.88 ) }
    dend_19 { pt3dadd( 30.2366, 295.339, -61.003, 0.96 ) }
    dend_19 { pt3dadd( 30.9818, 296.541, -60.6204, 0.52 ) }
    dend_19 { pt3dadd( 32.0378, 297.956, -60.1059, 0.66 ) }
    dend_19 { pt3dadd( 32.4815, 298.463, -59.8888, 0.66 ) }
    dend_19 { pt3dadd( 33.1071, 299.076, -59.584, 0.29 ) }
    dend_19 { pt3dadd( 33.8441, 299.749, -59.2216, 0.44 ) }
    dend_19 { pt3dadd( 34.7115, 300.514, -58.7843, 1.11 ) }
    dend_19 { pt3dadd( 35.4028, 301.127, -58.4287, 1.11 ) }
    dend_19 { pt3dadd( 36.461, 302.095, -57.9177, 1.11 ) }
    dend_19 { pt3dadd( 36.9147, 302.51, -57.6663, 1.55 ) }
    dend_19 { pt3dadd( 37.6813, 303.171, -57.1981, 1.55 ) }
    dend_19 { pt3dadd( 37.7817, 303.249, -57.1302, 1.55 ) }
    dend_19 { pt3dadd( 38.3937, 303.68, -56.6569, 1.55 ) }
    dend_19 { pt3dadd( 38.4437, 303.711, -56.6158, 1.55 ) }
    dend_19 { pt3dadd( 39.2392, 304.147, -55.9431, 2.06 ) }
    dend_19 { pt3dadd( 39.2976, 304.178, -55.8904, 2.06 ) }
    dend_19 { pt3dadd( 40.9007, 304.937, -54.4064, 0.52 ) }
    dend_19 { pt3dadd( 41.8631, 305.36, -53.5167, 0.74 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 18.567, 230.851, -65.7755, 0.74 ) }
    dend_18 { pt3dadd( 18.7727, 229.716, -65.5654, 0.74 ) }
    dend_18 { pt3dadd( 18.7809, 229.654, -65.5552, 0.74 ) }
    dend_18 { pt3dadd( 18.8615, 228.878, -65.4406, 0.37 ) }
    dend_18 { pt3dadd( 18.9424, 227.754, -65.2868, 0.22 ) }
    dend_18 { pt3dadd( 18.9581, 227.216, -65.2199, 0.37 ) }
    dend_18 { pt3dadd( 18.9626, 226.553, -65.1477, 0.15 ) }
    dend_18 { pt3dadd( 18.9237, 225.535, -65.0659, 0.15 ) }
    dend_18 { pt3dadd( 18.9034, 225.082, -65.0297, 0.44 ) }
    dend_18 { pt3dadd( 18.8707, 224.59, -64.9906, 0.44 ) }
    dend_18 { pt3dadd( 18.7714, 223.639, -64.9242, 0.22 ) }
    dend_18 { pt3dadd( 18.6354, 222.538, -64.8815, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 49/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 128.049, 97.6096, -37.9733, 0.22 ) }
    dend_13 { pt3dadd( 129.073, 98.0112, -39.1464, 0.22 ) }
    dend_13 { pt3dadd( 129.434, 98.1531, -39.5611, 0.74 ) }
    dend_13 { pt3dadd( 129.626, 98.2285, -39.7812, 0.74 ) }
    dend_13 { pt3dadd( 131.134, 98.8206, -41.5108, 0.29 ) }
    dend_13 { pt3dadd( 131.505, 98.966, -41.9356, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 128.049, 97.6096, -37.9733, 0.22 ) }
    dend_12 { pt3dadd( 129.051, 97.0012, -38.1432, 0.22 ) }
    dend_12 { pt3dadd( 129.791, 96.62, -38.3184, 0.66 ) }
    dend_12 { pt3dadd( 130.285, 96.3869, -38.4425, 0.66 ) }
    dend_12 { pt3dadd( 130.869, 96.1487, -38.5834, 0.52 ) }
    dend_12 { pt3dadd( 132.047, 95.8155, -38.8808, 0.22 ) }
    dend_12 { pt3dadd( 132.622, 95.7319, -39.0188, 0.22 ) }
    dend_12 { pt3dadd( 133.463, 95.8061, -39.1851, 0.59 ) }
    dend_12 { pt3dadd( 133.885, 95.8998, -39.2472, 0.74 ) }
    dend_12 { pt3dadd( 134.478, 96.0675, -39.2939, 0.74 ) }
    dend_12 { pt3dadd( 135.655, 96.465, -39.2988, 0.29 ) }
    dend_12 { pt3dadd( 136.634, 96.8551, -39.2217, 0.29 ) }
    dend_12 { pt3dadd( 137.829, 97.3603, -39.0904, 0.59 ) }
    dend_12 { pt3dadd( 138.374, 97.6014, -39.0033, 0.52 ) }
    dend_12 { pt3dadd( 139.443, 98.0735, -38.8123, 0.22 ) }
    dend_12 { pt3dadd( 140.026, 98.3021, -38.6858, 0.29 ) }
    dend_12 { pt3dadd( 140.811, 98.5231, -38.4531, 0.29 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 72/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 55.229, 141.802, 51.728, 0.29 ) }
    dend_6 { pt3dadd( 57.7167, 152.452, 56.3372, 0.29 ) }
    dend_6 { pt3dadd( 59.5216, 163.989, 58.9076, 0.29 ) }
    dend_6 { pt3dadd( 60.9871, 175.486, 61.8171, 0.29 ) }
    dend_6 { pt3dadd( 60.9018, 186.835, 65.4984, 0.29 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 77/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 55.229, 141.802, 51.728, 0.44 ) }
    dend_5 { pt3dadd( 57.3581, 150.53, 55.7408, 0.29 ) }
    dend_5 { pt3dadd( 59.8392, 159.24, 59.5984, 0.29 ) }
    dend_5 { pt3dadd( 63.8148, 167.838, 62.3486, 0.29 ) }
    dend_5 { pt3dadd( 66.9348, 177.236, 63.2615, 0.29 ) }
    dend_5 { pt3dadd( 71.3891, 186.096, 62.6862, 0.29 ) }
    dend_5 { pt3dadd( 75.2924, 195.241, 62.3794, 0.29 ) }
    dend_5 { pt3dadd( 78.0319, 204.827, 62.1592, 0.29 ) }
    // Section: dend_91, id: dend_91, parent: dend_87 (entry count 85/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -114.123, -213.654, 25.1081, 0.29 ) }
    dend_91 { pt3dadd( -114.793, -219.843, 27.6684, 0.29 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 87/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -114.123, -213.654, 25.1081, 0.44 ) }
    dend_88 { pt3dadd( -119.534, -221.6, 24.1425, 0.29 ) }
    dend_88 { pt3dadd( -123.612, -229.963, 21.4756, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_68 (entry count 90/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -123.154, -202.266, 47.7696, 0.66 ) }
    dend_72 { pt3dadd( -123.247, -201.132, 48.5858, 0.66 ) }
    dend_72 { pt3dadd( -123.251, -200.433, 49.0062, 0.29 ) }
    dend_72 { pt3dadd( -123.242, -199.637, 49.4041, 0.29 ) }
    dend_72 { pt3dadd( -123.243, -199.571, 49.4304, 0.29 ) }
    dend_72 { pt3dadd( -123.294, -198.318, 49.859, 0.52 ) }
    dend_72 { pt3dadd( -123.308, -198.072, 49.9332, 0.74 ) }
    dend_72 { pt3dadd( -123.361, -197.102, 50.1169, 0.37 ) }
    dend_72 { pt3dadd( -123.411, -196.267, 50.244, 0.37 ) }
    dend_72 { pt3dadd( -123.487, -195.443, 50.3424, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_72 { pt3dadd( -123.53, -194.937, 50.3797, 0.59 ) }
    dend_72 { pt3dadd( -123.567, -194.377, 50.3856, 0.59 ) }
    dend_72 { pt3dadd( -123.56, -193.728, 50.3834, 0.59 ) }
    dend_72 { pt3dadd( -123.464, -192.868, 50.3668, 0.52 ) }
    dend_72 { pt3dadd( -123.325, -192.233, 50.3465, 0.96 ) }
    dend_72 { pt3dadd( -123.093, -191.48, 50.3203, 0.37 ) }
    dend_72 { pt3dadd( -122.919, -191.013, 50.2943, 0.29 ) }
    dend_72 { pt3dadd( -122.542, -190.136, 50.2294, 0.29 ) }
    dend_72 { pt3dadd( -122.226, -189.424, 50.1736, 0.29 ) }
    dend_72 { pt3dadd( -122.022, -188.96, 50.1379, 0.52 ) }
    dend_72 { pt3dadd( -122.0, -188.895, 50.1337, 0.52 ) }
    dend_72 { pt3dadd( -121.9, -188.508, 50.1137, 0.52 ) }
    dend_72 { pt3dadd( -121.769, -187.746, 50.0915, 0.37 ) }
    dend_72 { pt3dadd( -121.656, -186.87, 50.075, 0.37 ) }
    dend_72 { pt3dadd( -121.649, -186.799, 50.0747, 0.37 ) }
    dend_72 { pt3dadd( -121.565, -185.391, 50.0818, 0.37 ) }
    dend_72 { pt3dadd( -121.529, -184.126, 50.1041, 0.37 ) }
    dend_72 { pt3dadd( -121.526, -182.552, 50.1481, 0.37 ) }
    dend_72 { pt3dadd( -121.528, -182.423, 50.1527, 0.37 ) }
    dend_72 { pt3dadd( -121.512, -181.202, 50.1771, 0.37 ) }
    dend_72 { pt3dadd( -121.51, -181.141, 50.1777, 0.37 ) }
    dend_72 { pt3dadd( -121.459, -180.359, 50.1777, 0.88 ) }
    dend_72 { pt3dadd( -121.444, -180.201, 50.1744, 0.88 ) }
    dend_72 { pt3dadd( -121.286, -179.23, 50.1242, 0.29 ) }
    dend_72 { pt3dadd( -121.026, -178.013, 50.0418, 0.29 ) }
    dend_72 { pt3dadd( -120.818, -177.24, 49.9753, 0.44 ) }
    dend_72 { pt3dadd( -120.654, -176.666, 49.9254, 0.44 ) }
    dend_72 { pt3dadd( -120.46, -175.99, 49.8496, 0.29 ) }
    dend_72 { pt3dadd( -120.437, -175.902, 49.839, 0.29 ) }
    dend_72 { pt3dadd( -120.143, -174.936, 49.6971, 0.66 ) }
    dend_72 { pt3dadd( -120.056, -174.7, 49.6688, 0.66 ) }
    dend_72 { pt3dadd( -119.888, -174.29, 49.6254, 0.59 ) }
    dend_72 { pt3dadd( -119.457, -173.259, 49.5447, 0.37 ) }
    dend_72 { pt3dadd( -119.43, -173.194, 49.5441, 0.37 ) }
    dend_72 { pt3dadd( -118.791, -171.736, 49.6224, 0.37 ) }
    dend_72 { pt3dadd( -118.431, -170.892, 49.7371, 0.37 ) }
    dend_72 { pt3dadd( -118.176, -170.322, 49.8387, 0.37 ) }
    dend_72 { pt3dadd( -118.07, -170.102, 49.8944, 0.88 ) }
    dend_72 { pt3dadd( -117.723, -169.432, 50.1647, 0.74 ) }
    dend_72 { pt3dadd( -117.697, -169.374, 50.1929, 0.74 ) }
    dend_72 { pt3dadd( -117.648, -168.928, 50.5355, 0.52 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 41/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -123.154, -202.266, 47.7696, 0.52 ) }
    dend_69 { pt3dadd( -123.831, -202.865, 47.9579, 0.52 ) }
    dend_69 { pt3dadd( -124.481, -203.374, 48.1464, 0.29 ) }
    dend_69 { pt3dadd( -125.111, -203.838, 48.3335, 0.29 ) }
    dend_69 { pt3dadd( -126.094, -204.523, 48.635, 0.44 ) }
    dend_69 { pt3dadd( -126.922, -205.095, 48.8923, 0.37 ) }
    dend_69 { pt3dadd( -127.285, -205.346, 49.0059, 0.66 ) }
    dend_69 { pt3dadd( -127.612, -205.543, 49.1134, 0.88 ) }
    dend_69 { pt3dadd( -128.044, -205.754, 49.2274, 0.88 ) }
    dend_69 { pt3dadd( -128.7, -206.026, 49.3586, 0.44 ) }
    dend_69 { pt3dadd( -129.522, -206.352, 49.4718, 0.44 ) }
    dend_69 { pt3dadd( -129.581, -206.375, 49.4776, 0.44 ) }
    dend_69 { pt3dadd( -130.308, -206.634, 49.5327, 0.44 ) }
    dend_69 { pt3dadd( -131.502, -207.028, 49.6128, 0.29 ) }
    dend_69 { pt3dadd( -132.249, -207.249, 49.6651, 0.29 ) }
    dend_69 { pt3dadd( -133.165, -207.48, 49.7937, 0.29 ) }
    dend_69 { pt3dadd( -133.234, -207.494, 49.8093, 0.74 ) }
    dend_69 { pt3dadd( -133.292, -207.506, 49.8274, 0.74 ) }
    dend_69 { pt3dadd( -133.892, -207.657, 50.019, 0.74 ) }
    dend_69 { pt3dadd( -134.414, -207.835, 50.1977, 0.74 ) }
    dend_69 { pt3dadd( -135.508, -208.267, 50.5124, 0.29 ) }
    dend_69 { pt3dadd( -136.112, -208.547, 50.624, 0.29 ) }
    dend_69 { pt3dadd( -136.964, -208.98, 50.7162, 0.29 ) }
    dend_69 { pt3dadd( -138.08, -209.598, 50.7574, 0.29 ) }
    dend_69 { pt3dadd( -138.602, -209.917, 50.7748, 0.59 ) }
    dend_69 { pt3dadd( -138.853, -210.07, 50.7849, 0.59 ) }
    dend_69 { pt3dadd( -139.598, -210.493, 50.8284, 0.37 ) }
    dend_69 { pt3dadd( -139.713, -210.544, 50.8728, 0.37 ) }
    dend_69 { pt3dadd( -140.25, -210.679, 51.3085, 0.37 ) }
    dend_69 { pt3dadd( -141.081, -210.787, 52.1359, 0.29 ) }
    dend_69 { pt3dadd( -141.546, -210.856, 52.7533, 0.29 ) }
    dend_69 { pt3dadd( -141.877, -210.916, 53.2867, 0.59 ) }
    dend_69 { pt3dadd( -142.476, -211.099, 54.4498, 0.59 ) }
    dend_69 { pt3dadd( -142.784, -211.241, 55.1279, 0.59 ) }
    dend_69 { pt3dadd( -142.985, -211.408, 55.6979, 0.59 ) }
    dend_69 { pt3dadd( -143.484, -212.086, 57.3159, 0.44 ) }
    dend_69 { pt3dadd( -143.498, -212.11, 57.3606, 0.44 ) }
    dend_69 { pt3dadd( -143.693, -212.525, 58.0078, 0.44 ) }
    dend_69 { pt3dadd( -143.708, -212.554, 58.049, 0.44 ) }
    dend_69 { pt3dadd( -144.059, -213.148, 58.8633, 0.59 ) }
    dend_69 { pt3dadd( -144.335, -213.499, 59.339, 0.59 ) }
    dend_69 { pt3dadd( -144.824, -213.92, 59.8909, 0.29 ) }
    dend_69 { pt3dadd( -144.861, -213.948, 59.9309, 0.29 ) }
    dend_69 { pt3dadd( -145.787, -214.493, 60.7853, 0.44 ) }
    dend_69 { pt3dadd( -146.223, -214.718, 61.1112, 0.96 ) }
    dend_69 { pt3dadd( -146.687, -214.927, 61.3899, 1.33 ) }
    dend_69 { pt3dadd( -147.303, -215.201, 61.7273, 0.88 ) }
    dend_69 { pt3dadd( -148.342, -215.688, 62.2227, 0.44 ) }
    dend_69 { pt3dadd( -149.182, -216.09, 62.5577, 0.44 ) }
    dend_69 { pt3dadd( -150.122, -216.53, 62.8509, 0.52 ) }
    dend_69 { pt3dadd( -150.806, -216.818, 63.0554, 0.52 ) }
    dend_69 { pt3dadd( -150.863, -216.839, 63.0718, 0.52 ) }
    dend_69 { pt3dadd( -151.761, -217.101, 63.3131, 0.37 ) }
    dend_69 { pt3dadd( -152.427, -217.247, 63.4772, 0.37 ) }
    dend_69 { pt3dadd( -153.11, -217.343, 63.6952, 0.37 ) }
    dend_69 { pt3dadd( -154.029, -217.393, 64.0734, 0.52 ) }
    dend_69 { pt3dadd( -154.322, -217.391, 64.2025, 0.96 ) }
    dend_69 { pt3dadd( -154.648, -217.375, 64.3398, 0.96 ) }
    dend_69 { pt3dadd( -155.083, -217.332, 64.512, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_69 { pt3dadd( -155.67, -217.29, 64.7265, 0.81 ) }
    dend_69 { pt3dadd( -156.681, -217.3, 65.0608, 0.37 ) }
    dend_69 { pt3dadd( -156.731, -217.306, 65.0756, 0.37 ) }
    dend_69 { pt3dadd( -157.587, -217.454, 65.3133, 0.37 ) }
    dend_69 { pt3dadd( -158.086, -217.566, 65.4437, 0.59 ) }
    dend_69 { pt3dadd( -158.454, -217.655, 65.5362, 0.66 ) }
    dend_69 { pt3dadd( -159.029, -217.79, 65.6773, 0.52 ) }
    dend_69 { pt3dadd( -159.765, -217.925, 65.8187, 0.29 ) }
    dend_69 { pt3dadd( -159.835, -217.933, 65.833, 0.29 ) }
    dend_69 { pt3dadd( -160.517, -217.979, 65.9861, 0.29 ) }
    dend_69 { pt3dadd( -161.183, -218.029, 66.1664, 0.44 ) }
    dend_69 { pt3dadd( -161.626, -218.076, 66.2994, 0.44 ) }
    dend_69 { pt3dadd( -162.515, -218.198, 66.5899, 0.44 ) }
    dend_69 { pt3dadd( -163.397, -218.363, 66.8998, 0.37 ) }
    dend_69 { pt3dadd( -163.791, -218.454, 67.0723, 0.37 ) }
    dend_69 { pt3dadd( -164.859, -218.734, 67.7245, 0.37 ) }
    dend_69 { pt3dadd( -165.316, -218.867, 68.0957, 0.37 ) }
    dend_69 { pt3dadd( -165.746, -219.0, 68.5436, 0.37 ) }
    dend_69 { pt3dadd( -166.094, -219.092, 69.0039, 0.37 ) }
    dend_69 { pt3dadd( -166.623, -219.18, 69.8348, 0.37 ) }
    dend_69 { pt3dadd( -167.182, -219.201, 70.7903, 0.37 ) }
    dend_69 { pt3dadd( -167.354, -219.196, 71.1138, 0.81 ) }
    dend_69 { pt3dadd( -167.486, -219.215, 71.3482, 1.11 ) }
    dend_69 { pt3dadd( -167.766, -219.315, 71.8055, 1.11 ) }
    dend_69 { pt3dadd( -167.797, -219.33, 71.8449, 1.11 ) }
    dend_69 { pt3dadd( -168.325, -219.639, 72.3936, 0.59 ) }
    dend_69 { pt3dadd( -169.132, -220.168, 73.1863, 0.44 ) }
    dend_69 { pt3dadd( -169.653, -220.515, 73.7353, 0.66 ) }
    dend_69 { pt3dadd( -169.688, -220.537, 73.7718, 0.66 ) }
    dend_69 { pt3dadd( -170.064, -220.753, 74.1343, 0.66 ) }
    dend_69 { pt3dadd( -170.699, -221.044, 74.6836, 0.44 ) }
    dend_69 { pt3dadd( -170.774, -221.076, 74.7496, 0.44 ) }
    dend_69 { pt3dadd( -171.391, -221.344, 75.2752, 0.37 ) }
    dend_69 { pt3dadd( -172.035, -221.653, 75.8301, 0.37 ) }
    dend_69 { pt3dadd( -172.636, -221.967, 76.3349, 0.88 ) }
    dend_69 { pt3dadd( -173.054, -222.203, 76.6714, 1.18 ) }
    dend_69 { pt3dadd( -174.297, -222.891, 77.6466, 0.37 ) }
    dend_69 { pt3dadd( -174.854, -223.186, 78.0953, 0.29 ) }
    dend_69 { pt3dadd( -175.205, -223.362, 78.3868, 0.81 ) }
    dend_69 { pt3dadd( -175.256, -223.385, 78.4328, 0.81 ) }
    dend_69 { pt3dadd( -175.465, -223.483, 78.647, 0.81 ) }
    dend_69 { pt3dadd( -176.324, -223.874, 79.5499, 0.37 ) }
    dend_69 { pt3dadd( -176.65, -224.006, 79.8888, 0.74 ) }
    dend_69 { pt3dadd( -176.995, -224.158, 80.2636, 0.74 ) }
    dend_69 { pt3dadd( -177.625, -224.433, 80.9403, 0.81 ) }
    dend_69 { pt3dadd( -178.483, -224.827, 81.8503, 0.29 ) }
    dend_69 { pt3dadd( -178.775, -224.971, 82.1588, 0.29 ) }
    dend_69 { pt3dadd( -178.809, -224.99, 82.1931, 0.29 ) }
    dend_69 { pt3dadd( -179.217, -225.221, 82.5645, 0.74 ) }
    dend_69 { pt3dadd( -179.535, -225.394, 82.8505, 0.81 ) }
    dend_69 { pt3dadd( -180.347, -225.756, 83.5531, 0.37 ) }
    dend_69 { pt3dadd( -180.393, -225.772, 83.5933, 0.37 ) }
    dend_69 { pt3dadd( -180.879, -225.941, 84.0367, 0.29 ) }
    dend_69 { pt3dadd( -181.259, -226.071, 84.3958, 0.29 ) }
    dend_69 { pt3dadd( -181.82, -226.261, 84.9792, 0.52 ) }
    dend_69 { pt3dadd( -182.286, -226.431, 85.4981, 0.88 ) }
    dend_69 { pt3dadd( -182.453, -226.478, 85.6939, 1.03 ) }
    // Section: dend_62, id: dend_62, parent: dend_52 (entry count 57/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 1.21818, -122.579, -21.94, 0.96 ) }
    dend_62 { pt3dadd( 0.971667, -124.314, -21.4644, 0.96 ) }
    dend_62 { pt3dadd( 0.849048, -125.388, -21.1611, 0.96 ) }
    dend_62 { pt3dadd( 0.773051, -126.32, -20.9003, 1.03 ) }
    dend_62 { pt3dadd( 0.752621, -126.878, -20.7497, 1.25 ) }
    dend_62 { pt3dadd( 0.74331, -127.582, -20.5629, 1.11 ) }
    dend_62 { pt3dadd( 0.755502, -128.602, -20.2708, 0.74 ) }
    dend_62 { pt3dadd( 0.830051, -129.424, -20.0629, 0.96 ) }
    dend_62 { pt3dadd( 0.919438, -130.016, -19.893, 0.74 ) }
    dend_62 { pt3dadd( 1.10502, -130.925, -19.63, 0.59 ) }
    dend_62 { pt3dadd( 1.11717, -130.972, -19.6183, 0.59 ) }
    dend_62 { pt3dadd( 1.41977, -132.062, -19.4137, 0.59 ) }
    dend_62 { pt3dadd( 1.69327, -133.028, -19.3437, 0.59 ) }
    dend_62 { pt3dadd( 1.70477, -133.071, -19.3457, 0.59 ) }
    dend_62 { pt3dadd( 1.88688, -133.96, -19.4161, 0.88 ) }
    dend_62 { pt3dadd( 2.01945, -134.836, -19.5115, 0.88 ) }
    dend_62 { pt3dadd( 2.0831, -135.365, -19.5801, 0.88 ) }
    dend_62 { pt3dadd( 2.14902, -136.22, -19.689, 0.66 ) }
    dend_62 { pt3dadd( 2.17816, -137.109, -19.7214, 0.52 ) }
    dend_62 { pt3dadd( 2.18919, -137.983, -19.6708, 1.11 ) }
    dend_62 { pt3dadd( 2.18309, -138.394, -19.6062, 1.11 ) }
    dend_62 { pt3dadd( 2.16706, -139.036, -19.4673, 0.88 ) }
    dend_62 { pt3dadd( 2.16502, -139.892, -19.2632, 0.81 ) }
    dend_62 { pt3dadd( 2.18341, -140.667, -19.0833, 0.88 ) }
    dend_62 { pt3dadd( 2.23482, -141.242, -18.9953, 1.03 ) }
    dend_62 { pt3dadd( 2.36485, -142.138, -18.934, 0.74 ) }
    dend_62 { pt3dadd( 2.48684, -142.806, -18.9187, 0.59 ) }
    dend_62 { pt3dadd( 2.6663, -143.579, -18.9311, 0.52 ) }
    dend_62 { pt3dadd( 2.83783, -144.176, -18.9806, 0.74 ) }
    dend_62 { pt3dadd( 3.18487, -145.226, -19.1123, 0.66 ) }
    dend_62 { pt3dadd( 3.44191, -145.959, -19.2158, 0.74 ) }
    dend_62 { pt3dadd( 3.66634, -146.595, -19.2972, 0.81 ) }
    dend_62 { pt3dadd( 3.85654, -147.192, -19.3432, 1.11 ) }
    dend_62 { pt3dadd( 4.04057, -147.842, -19.3581, 0.88 ) }
    dend_62 { pt3dadd( 4.0537, -147.89, -19.361, 0.88 ) }
    dend_62 { pt3dadd( 4.26044, -148.631, -19.4788, 0.59 ) }
    dend_62 { pt3dadd( 4.48228, -149.381, -19.6739, 0.59 ) }
    dend_62 { pt3dadd( 4.71369, -150.145, -19.9163, 0.81 ) }
    dend_62 { pt3dadd( 5.00318, -151.077, -20.2315, 1.03 ) }
    dend_62 { pt3dadd( 5.58476, -152.764, -20.8352, 1.03 ) }
    dend_62 { pt3dadd( 6.04764, -153.993, -21.2808, 0.81 ) }
    dend_62 { pt3dadd( 6.47079, -155.003, -21.6583, 0.59 ) }
    dend_62 { pt3dadd( 6.49017, -155.048, -21.6749, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_62 { pt3dadd( 6.80296, -155.787, -21.9284, 0.74 ) }
    dend_62 { pt3dadd( 7.13941, -156.633, -22.1385, 0.66 ) }
    dend_62 { pt3dadd( 7.45239, -157.483, -22.234, 0.66 ) }
    dend_62 { pt3dadd( 7.75057, -158.338, -22.2908, 0.66 ) }
    dend_62 { pt3dadd( 7.98257, -159.085, -22.3362, 0.96 ) }
    dend_62 { pt3dadd( 8.12569, -159.701, -22.3859, 1.18 ) }
    dend_62 { pt3dadd( 8.22527, -160.469, -22.4859, 1.03 ) }
    dend_62 { pt3dadd( 8.22653, -161.141, -22.6183, 0.88 ) }
    dend_62 { pt3dadd( 8.14901, -161.92, -22.8359, 0.66 ) }
    dend_62 { pt3dadd( 8.06289, -162.402, -22.9929, 0.74 ) }
    dend_62 { pt3dadd( 7.86741, -163.331, -23.3191, 0.74 ) }
    dend_62 { pt3dadd( 7.70243, -164.047, -23.5642, 0.81 ) }
    dend_62 { pt3dadd( 7.46935, -165.03, -23.871, 0.81 ) }
    dend_62 { pt3dadd( 7.29261, -165.901, -24.094, 1.03 ) }
    dend_62 { pt3dadd( 7.2055, -166.52, -24.205, 1.11 ) }
    dend_62 { pt3dadd( 7.1699, -167.194, -24.2851, 0.81 ) }
    dend_62 { pt3dadd( 7.19838, -168.256, -24.3429, 0.66 ) }
    dend_62 { pt3dadd( 7.27656, -169.096, -24.3236, 0.81 ) }
    dend_62 { pt3dadd( 7.38475, -169.692, -24.2744, 0.81 ) }
    dend_62 { pt3dadd( 7.54749, -170.298, -24.2074, 0.81 ) }
    dend_62 { pt3dadd( 7.68891, -170.698, -24.1549, 1.03 ) }
    dend_62 { pt3dadd( 7.7095, -170.744, -24.1479, 1.03 ) }
    dend_62 { pt3dadd( 8.03244, -171.32, -24.0458, 0.74 ) }
    dend_62 { pt3dadd( 8.44456, -171.946, -23.965, 0.44 ) }
    dend_62 { pt3dadd( 8.59096, -172.154, -23.9497, 0.74 ) }
    dend_62 { pt3dadd( 8.6215, -172.195, -23.9506, 0.74 ) }
    dend_62 { pt3dadd( 8.8627, -172.535, -23.9765, 0.74 ) }
    dend_62 { pt3dadd( 8.89398, -172.582, -23.9808, 0.74 ) }
    dend_62 { pt3dadd( 9.46509, -173.546, -24.0433, 0.59 ) }
    dend_62 { pt3dadd( 9.62212, -173.845, -24.0559, 0.88 ) }
    dend_62 { pt3dadd( 9.92341, -174.509, -24.0741, 0.88 ) }
    dend_62 { pt3dadd( 10.257, -175.382, -24.0809, 0.66 ) }
    dend_62 { pt3dadd( 10.4473, -176.002, -24.0744, 0.74 ) }
    dend_62 { pt3dadd( 10.6517, -176.824, -24.0794, 0.88 ) }
    dend_62 { pt3dadd( 10.7591, -177.402, -24.1183, 0.44 ) }
    dend_62 { pt3dadd( 10.8428, -177.927, -24.2097, 0.44 ) }
    dend_62 { pt3dadd( 10.9181, -178.529, -24.3663, 0.52 ) }
    dend_62 { pt3dadd( 10.9804, -179.017, -24.5505, 0.81 ) }
    dend_62 { pt3dadd( 11.1064, -179.874, -24.9313, 1.03 ) }
    dend_62 { pt3dadd( 11.288, -180.834, -25.3876, 0.88 ) }
    dend_62 { pt3dadd( 11.5051, -181.739, -25.8012, 0.59 ) }
    dend_62 { pt3dadd( 11.6499, -182.232, -26.0124, 0.74 ) }
    dend_62 { pt3dadd( 11.9605, -183.116, -26.3154, 0.52 ) }
    dend_62 { pt3dadd( 12.1562, -183.6, -26.4188, 0.52 ) }
    dend_62 { pt3dadd( 12.4437, -184.239, -26.4347, 0.81 ) }
    dend_62 { pt3dadd( 12.6809, -184.709, -26.371, 1.03 ) }
    dend_62 { pt3dadd( 12.8495, -185.007, -26.2969, 1.03 ) }
    dend_62 { pt3dadd( 13.3372, -185.819, -26.0497, 0.52 ) }
    dend_62 { pt3dadd( 13.5242, -186.136, -25.9509, 0.66 ) }
    dend_62 { pt3dadd( 13.8255, -186.671, -25.8116, 0.66 ) }
    dend_62 { pt3dadd( 13.8519, -186.722, -25.8013, 0.66 ) }
    dend_62 { pt3dadd( 14.0941, -187.214, -25.724, 0.81 ) }
    dend_62 { pt3dadd( 14.3975, -187.866, -25.6533, 0.59 ) }
    dend_62 { pt3dadd( 14.7653, -188.682, -25.606, 0.37 ) }
    dend_62 { pt3dadd( 14.9615, -189.11, -25.5814, 0.88 ) }
    dend_62 { pt3dadd( 15.222, -189.616, -25.5589, 1.18 ) }
    dend_62 { pt3dadd( 15.2477, -189.659, -25.5567, 1.18 ) }
    dend_62 { pt3dadd( 15.5243, -190.043, -25.5814, 1.11 ) }
    dend_62 { pt3dadd( 15.8525, -190.441, -25.6744, 0.96 ) }
    dend_62 { pt3dadd( 15.8847, -190.478, -25.6871, 0.96 ) }
    dend_62 { pt3dadd( 16.4854, -191.19, -25.9856, 0.59 ) }
    dend_62 { pt3dadd( 16.8307, -191.634, -26.1811, 0.81 ) }
    dend_62 { pt3dadd( 17.5976, -192.782, -26.6568, 0.59 ) }
    dend_62 { pt3dadd( 17.9126, -193.355, -26.8744, 0.88 ) }
    dend_62 { pt3dadd( 18.0824, -193.761, -27.0106, 0.88 ) }
    dend_62 { pt3dadd( 18.2228, -194.223, -27.1363, 0.81 ) }
    dend_62 { pt3dadd( 18.3335, -194.865, -27.2629, 0.59 ) }
    dend_62 { pt3dadd( 18.391, -195.543, -27.3426, 0.66 ) }
    dend_62 { pt3dadd( 18.4124, -196.33, -27.3641, 1.03 ) }
    dend_62 { pt3dadd( 18.428, -196.826, -27.3693, 1.33 ) }
    dend_62 { pt3dadd( 18.445, -197.249, -27.3812, 1.18 ) }
    dend_62 { pt3dadd( 18.4805, -197.818, -27.4282, 0.81 ) }
    dend_62 { pt3dadd( 18.5774, -198.547, -27.5656, 0.59 ) }
    dend_62 { pt3dadd( 18.7484, -199.238, -27.739, 0.74 ) }
    dend_62 { pt3dadd( 18.8952, -199.66, -27.8376, 0.96 ) }
    dend_62 { pt3dadd( 18.9116, -199.698, -27.8449, 0.96 ) }
    dend_62 { pt3dadd( 19.2766, -200.459, -27.9495, 0.96 ) }
    dend_62 { pt3dadd( 19.9238, -201.656, -28.0623, 0.74 ) }
    dend_62 { pt3dadd( 20.4431, -202.511, -28.1079, 0.74 ) }
    dend_62 { pt3dadd( 20.9343, -203.274, -28.1159, 0.88 ) }
    dend_62 { pt3dadd( 21.3423, -203.955, -28.0409, 0.88 ) }
    dend_62 { pt3dadd( 21.7236, -204.66, -27.8776, 0.59 ) }
    dend_62 { pt3dadd( 21.9311, -205.181, -27.6522, 0.59 ) }
    dend_62 { pt3dadd( 22.0226, -205.655, -27.3643, 0.59 ) }
    dend_62 { pt3dadd( 22.0225, -205.69, -27.3413, 0.59 ) }
    dend_62 { pt3dadd( 21.7818, -207.181, -26.416, 0.52 ) }
    dend_62 { pt3dadd( 21.5873, -207.821, -26.0442, 0.52 ) }
    dend_62 { pt3dadd( 21.1085, -209.061, -25.483, 1.18 ) }
    dend_62 { pt3dadd( 20.7987, -209.802, -25.2428, 1.18 ) }
    dend_62 { pt3dadd( 20.5516, -210.459, -25.1428, 0.52 ) }
    dend_62 { pt3dadd( 20.2986, -211.439, -25.204, 0.52 ) }
    dend_62 { pt3dadd( 20.1973, -212.224, -25.4056, 0.66 ) }
    dend_62 { pt3dadd( 20.1612, -213.498, -25.8576, 0.66 ) }
    dend_62 { pt3dadd( 20.2318, -214.221, -26.1942, 0.66 ) }
    dend_62 { pt3dadd( 20.4732, -215.477, -26.8228, 0.66 ) }
    dend_62 { pt3dadd( 20.8715, -216.802, -27.5032, 0.74 ) }
    dend_62 { pt3dadd( 21.0649, -217.268, -27.74, 1.03 ) }
    dend_62 { pt3dadd( 21.2795, -217.691, -27.9441, 1.03 ) }
    dend_62 { pt3dadd( 21.7649, -218.533, -28.3059, 0.66 ) }
    dend_62 { pt3dadd( 22.125, -219.112, -28.547, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_62 { pt3dadd( 22.4556, -219.641, -28.718, 0.74 ) }
    dend_62 { pt3dadd( 22.7374, -220.104, -28.8308, 1.03 ) }
    dend_62 { pt3dadd( 22.7637, -220.144, -28.8402, 1.03 ) }
    dend_62 { pt3dadd( 22.8939, -220.317, -28.8634, 1.25 ) }
    dend_62 { pt3dadd( 22.9324, -220.359, -28.8568, 1.25 ) }
    dend_62 { pt3dadd( 23.1904, -220.62, -28.7822, 1.25 ) }
    dend_62 { pt3dadd( 23.2218, -220.656, -28.7704, 1.25 ) }
    dend_62 { pt3dadd( 23.4563, -220.966, -28.6732, 1.25 ) }
    dend_62 { pt3dadd( 23.6686, -221.301, -28.579, 1.25 ) }
    dend_62 { pt3dadd( 24.1304, -222.184, -28.3228, 0.59 ) }
    dend_62 { pt3dadd( 24.4741, -222.878, -28.1106, 0.59 ) }
    dend_62 { pt3dadd( 24.8374, -223.656, -27.8655, 0.66 ) }
    dend_62 { pt3dadd( 25.1178, -224.249, -27.6688, 0.66 ) }
    dend_62 { pt3dadd( 25.4848, -224.993, -27.4046, 0.59 ) }
    dend_62 { pt3dadd( 25.7944, -225.592, -27.1758, 0.44 ) }
    dend_62 { pt3dadd( 26.1055, -226.087, -26.9522, 0.29 ) }
    dend_62 { pt3dadd( 26.1331, -226.116, -26.9345, 0.29 ) }
    dend_62 { pt3dadd( 26.6184, -226.403, -26.6484, 0.59 ) }
    dend_62 { pt3dadd( 27.0957, -226.624, -26.3853, 0.74 ) }
    dend_62 { pt3dadd( 27.1354, -226.642, -26.3609, 0.74 ) }
    dend_62 { pt3dadd( 27.712, -226.916, -25.9879, 0.74 ) }
    dend_62 { pt3dadd( 27.746, -226.936, -25.9604, 0.74 ) }
    dend_62 { pt3dadd( 28.5132, -227.412, -25.2014, 0.59 ) }
    dend_62 { pt3dadd( 28.88, -227.656, -24.7807, 0.81 ) }
    dend_62 { pt3dadd( 29.4317, -228.077, -24.0662, 0.66 ) }
    dend_62 { pt3dadd( 29.4619, -228.1, -24.0262, 0.66 ) }
    dend_62 { pt3dadd( 29.9927, -228.501, -23.2744, 1.03 ) }
    dend_62 { pt3dadd( 30.3735, -228.756, -22.6732, 1.47 ) }
    dend_62 { pt3dadd( 30.5447, -228.872, -22.3281, 1.55 ) }
    dend_62 { pt3dadd( 30.8772, -229.112, -21.5409, 0.29 ) }
    dend_62 { pt3dadd( 31.0993, -229.287, -20.9599, 0.59 ) }
    dend_62 { pt3dadd( 31.4183, -229.555, -20.1038, 0.81 ) }
    dend_62 { pt3dadd( 31.785, -229.886, -19.0692, 1.18 ) }
    dend_62 { pt3dadd( 32.2437, -230.342, -17.7499, 0.44 ) }
    dend_62 { pt3dadd( 32.5435, -230.663, -16.8594, 0.59 ) }
    dend_62 { pt3dadd( 32.5589, -230.68, -16.8153, 0.59 ) }
    dend_62 { pt3dadd( 32.7454, -230.935, -16.3272, 0.81 ) }
    dend_62 { pt3dadd( 32.7605, -230.958, -16.2966, 0.81 ) }
    dend_62 { pt3dadd( 33.021, -231.356, -15.912, 0.37 ) }
    dend_62 { pt3dadd( 33.3426, -231.805, -15.5455, 0.88 ) }
    dend_62 { pt3dadd( 33.5802, -232.168, -15.285, 1.33 ) }
    dend_62 { pt3dadd( 33.8058, -232.563, -15.0323, 1.47 ) }
    dend_62 { pt3dadd( 34.2747, -233.444, -14.5595, 0.88 ) }
    dend_62 { pt3dadd( 34.2968, -233.486, -14.5402, 0.88 ) }
    dend_62 { pt3dadd( 34.5126, -233.883, -14.3877, 1.03 ) }
    dend_62 { pt3dadd( 34.8835, -234.541, -14.207, 0.44 ) }
    dend_62 { pt3dadd( 35.2778, -235.224, -14.0714, 0.44 ) }
    dend_62 { pt3dadd( 35.627, -235.822, -14.005, 0.66 ) }
    dend_62 { pt3dadd( 35.6531, -235.865, -14.0039, 0.66 ) }
    dend_62 { pt3dadd( 35.9037, -236.255, -13.9825, 0.44 ) }
    dend_62 { pt3dadd( 36.1868, -236.676, -13.9491, 0.81 ) }
    dend_62 { pt3dadd( 36.3676, -236.925, -13.9154, 0.96 ) }
    dend_62 { pt3dadd( 36.6406, -237.298, -13.8438, 1.11 ) }
    dend_62 { pt3dadd( 36.9729, -237.783, -13.7212, 0.29 ) }
    dend_62 { pt3dadd( 37.2441, -238.194, -13.6208, 0.22 ) }
    dend_62 { pt3dadd( 37.2706, -238.236, -13.611, 0.22 ) }
    dend_62 { pt3dadd( 37.6087, -238.75, -13.4857, 1.47 ) }
    dend_62 { pt3dadd( 37.6371, -238.79, -13.4753, 1.47 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 58/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 1.21818, -122.579, -21.94, 0.44 ) }
    dend_53 { pt3dadd( 1.74067, -124.143, -23.0532, 0.44 ) }
    dend_53 { pt3dadd( 2.31578, -125.702, -24.1462, 0.59 ) }
    dend_53 { pt3dadd( 3.94833, -129.781, -26.888, 0.59 ) }
    dend_53 { pt3dadd( 4.73914, -131.668, -28.0934, 0.81 ) }
    dend_53 { pt3dadd( 5.78622, -134.061, -29.5652, 0.81 ) }
    dend_53 { pt3dadd( 6.78153, -136.3, -30.8867, 0.88 ) }
    dend_53 { pt3dadd( 7.35733, -137.586, -31.5929, 1.03 ) }
    dend_53 { pt3dadd( 8.2761, -139.491, -32.5471, 0.52 ) }
    dend_53 { pt3dadd( 8.71469, -140.352, -32.8765, 0.88 ) }
    dend_53 { pt3dadd( 9.41513, -141.723, -33.3774, 0.88 ) }
    dend_53 { pt3dadd( 9.74354, -142.482, -33.6401, 0.88 ) }
    dend_53 { pt3dadd( 9.7659, -142.579, -33.6812, 0.88 ) }
    dend_53 { pt3dadd( 9.7825, -143.896, -34.5328, 0.44 ) }
    dend_53 { pt3dadd( 9.71259, -144.791, -35.2847, 0.74 ) }
    dend_53 { pt3dadd( 9.70434, -145.833, -36.2136, 0.74 ) }
    dend_53 { pt3dadd( 9.83136, -147.143, -37.3994, 0.96 ) }
    dend_53 { pt3dadd( 10.2449, -148.955, -39.0271, 0.96 ) }
    dend_53 { pt3dadd( 10.8959, -150.81, -40.5669, 0.96 ) }
    dend_53 { pt3dadd( 11.7044, -152.643, -42.0153, 0.96 ) }
    dend_53 { pt3dadd( 12.7579, -154.751, -43.4822, 0.88 ) }
    dend_53 { pt3dadd( 13.8479, -156.78, -44.6989, 0.88 ) }
    dend_53 { pt3dadd( 14.8191, -158.591, -45.6161, 0.59 ) }
    dend_53 { pt3dadd( 15.7883, -160.433, -46.4391, 0.59 ) }
    dend_53 { pt3dadd( 16.4831, -161.869, -47.0341, 0.96 ) }
    dend_53 { pt3dadd( 17.0944, -163.329, -47.6148, 1.25 ) }
    dend_53 { pt3dadd( 17.581, -164.759, -48.1842, 1.33 ) }
    dend_53 { pt3dadd( 18.1857, -166.834, -48.9648, 0.96 ) }
    dend_53 { pt3dadd( 18.6194, -168.427, -49.5432, 0.81 ) }
    dend_53 { pt3dadd( 19.1305, -170.167, -50.1831, 0.88 ) }
    dend_53 { pt3dadd( 19.4641, -170.985, -50.4204, 1.11 ) }
    dend_53 { pt3dadd( 19.5047, -171.054, -50.4396, 1.11 ) }
    dend_53 { pt3dadd( 20.3049, -172.068, -50.6475, 1.11 ) }
    dend_53 { pt3dadd( 21.0102, -172.781, -50.6821, 1.25 ) }
    dend_53 { pt3dadd( 21.1795, -172.928, -50.688, 1.25 ) }
    dend_53 { pt3dadd( 22.4176, -173.912, -50.8492, 1.33 ) }
    dend_53 { pt3dadd( 23.7299, -174.972, -51.2229, 1.03 ) }
    dend_53 { pt3dadd( 24.4885, -175.64, -51.584, 0.59 ) }
    dend_53 { pt3dadd( 25.0654, -176.197, -51.9906, 0.81 ) }
    dend_53 { pt3dadd( 26.4264, -177.72, -53.4001, 0.81 ) }
    dend_53 { pt3dadd( 27.2941, -178.918, -54.6929, 1.11 ) }
    dend_53 { pt3dadd( 27.9859, -180.189, -56.1856, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_53 { pt3dadd( 28.6246, -181.707, -57.9669, 0.59 ) }
    dend_53 { pt3dadd( 28.9694, -182.605, -59.0226, 0.81 ) }
    dend_53 { pt3dadd( 29.5718, -184.143, -60.8492, 0.96 ) }
    dend_53 { pt3dadd( 30.0995, -185.443, -62.2928, 0.81 ) }
    dend_53 { pt3dadd( 30.8455, -187.196, -64.0052, 0.37 ) }
    dend_53 { pt3dadd( 31.6081, -188.817, -65.3599, 1.03 ) }
    dend_53 { pt3dadd( 32.7929, -191.136, -66.9276, 0.96 ) }
    dend_53 { pt3dadd( 34.0917, -193.482, -68.2278, 1.18 ) }
    dend_53 { pt3dadd( 35.1278, -195.202, -69.0405, 1.18 ) }
    dend_53 { pt3dadd( 36.2748, -196.995, -69.7971, 1.18 ) }
    dend_53 { pt3dadd( 37.3982, -198.687, -70.4535, 0.81 ) }
    dend_53 { pt3dadd( 38.6411, -200.56, -71.0914, 0.66 ) }
    dend_53 { pt3dadd( 39.3155, -201.605, -71.3875, 0.96 ) }
    dend_53 { pt3dadd( 40.6138, -203.616, -71.8632, 1.25 ) }
    dend_53 { pt3dadd( 40.6722, -203.703, -71.8854, 1.25 ) }
    dend_53 { pt3dadd( 41.7821, -205.253, -72.2222, 1.11 ) }
    dend_53 { pt3dadd( 42.5847, -206.461, -72.3904, 0.81 ) }
    dend_53 { pt3dadd( 43.0646, -207.276, -72.4574, 1.25 ) }
    dend_53 { pt3dadd( 43.5617, -208.301, -72.4626, 1.25 ) }
    dend_53 { pt3dadd( 43.9199, -209.348, -72.3935, 0.66 ) }
    dend_53 { pt3dadd( 44.1743, -210.429, -72.4196, 0.59 ) }
    dend_53 { pt3dadd( 44.2771, -211.806, -72.5934, 0.59 ) }
    dend_53 { pt3dadd( 44.2531, -212.473, -72.7637, 0.88 ) }
    dend_53 { pt3dadd( 44.2445, -212.573, -72.7974, 0.88 ) }
    dend_53 { pt3dadd( 44.167, -213.848, -73.3048, 0.88 ) }
    dend_53 { pt3dadd( 44.2401, -216.134, -74.2379, 0.59 ) }
    dend_53 { pt3dadd( 44.4254, -217.149, -74.6493, 0.44 ) }
    dend_53 { pt3dadd( 44.4788, -217.331, -74.7134, 0.44 ) }
    dend_53 { pt3dadd( 44.8137, -218.258, -74.999, 0.74 ) }
    dend_53 { pt3dadd( 45.3679, -219.709, -75.3686, 0.96 ) }
    dend_53 { pt3dadd( 45.8677, -220.926, -75.6784, 0.96 ) }
    dend_53 { pt3dadd( 46.593, -222.775, -76.0733, 0.59 ) }
    dend_53 { pt3dadd( 46.9477, -223.752, -76.3012, 0.88 ) }
    dend_53 { pt3dadd( 46.9796, -223.85, -76.3252, 0.88 ) }
    dend_53 { pt3dadd( 47.2883, -224.894, -76.5704, 0.96 ) }
    dend_53 { pt3dadd( 47.9175, -227.313, -77.1804, 0.59 ) }
    dend_53 { pt3dadd( 48.2693, -228.687, -77.547, 1.03 ) }
    dend_53 { pt3dadd( 48.5667, -229.756, -77.8088, 1.18 ) }
    dend_53 { pt3dadd( 49.118, -231.536, -78.2351, 0.88 ) }
    dend_53 { pt3dadd( 49.5849, -233.062, -78.5834, 0.74 ) }
    dend_53 { pt3dadd( 50.0662, -234.708, -78.9372, 0.66 ) }
    dend_53 { pt3dadd( 50.5828, -236.8, -79.3361, 0.52 ) }
    dend_53 { pt3dadd( 50.8336, -238.08, -79.6064, 0.81 ) }
    dend_53 { pt3dadd( 51.0022, -239.41, -79.9323, 0.37 ) }
    dend_53 { pt3dadd( 51.0166, -240.535, -80.2676, 0.37 ) }
    dend_53 { pt3dadd( 50.9557, -241.335, -80.5413, 0.88 ) }
    dend_53 { pt3dadd( 50.8337, -242.088, -80.8349, 1.18 ) }
    dend_53 { pt3dadd( 50.6025, -242.975, -81.2404, 1.33 ) }
    dend_53 { pt3dadd( 50.2117, -244.491, -81.9973, 0.88 ) }
    dend_53 { pt3dadd( 49.8756, -246.16, -82.8718, 0.74 ) }
    dend_53 { pt3dadd( 49.8589, -246.253, -82.9225, 0.74 ) }
    dend_53 { pt3dadd( 49.5151, -248.473, -84.1501, 0.52 ) }
    dend_53 { pt3dadd( 49.3194, -249.883, -84.9445, 0.66 ) }
    dend_53 { pt3dadd( 49.0015, -252.439, -86.382, 0.59 ) }
    dend_53 { pt3dadd( 48.8648, -253.894, -87.1392, 0.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 55/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 18.5214, -168.807, -21.0502, 0.37 ) }
    dend_51 { pt3dadd( 19.4494, -169.03, -20.6489, 0.37 ) }
    dend_51 { pt3dadd( 20.4648, -169.352, -20.2109, 0.59 ) }
    dend_51 { pt3dadd( 21.0856, -169.556, -19.9595, 0.59 ) }
    dend_51 { pt3dadd( 22.2037, -169.9, -19.5412, 0.59 ) }
    dend_51 { pt3dadd( 22.3539, -169.945, -19.4877, 0.59 ) }
    dend_51 { pt3dadd( 23.1667, -170.172, -19.2388, 0.22 ) }
    dend_51 { pt3dadd( 23.5929, -170.256, -19.1851, 0.44 ) }
    dend_51 { pt3dadd( 24.2905, -170.339, -19.2453, 0.44 ) }
    dend_51 { pt3dadd( 24.824, -170.382, -19.3751, 0.81 ) }
    dend_51 { pt3dadd( 24.9135, -170.381, -19.4056, 0.81 ) }
    dend_51 { pt3dadd( 25.5482, -170.292, -19.6876, 0.96 ) }
    dend_51 { pt3dadd( 26.9398, -169.964, -20.4897, 0.52 ) }
    dend_51 { pt3dadd( 27.3959, -169.839, -20.7742, 0.52 ) }
    dend_51 { pt3dadd( 27.4585, -169.821, -20.8143, 0.52 ) }
    dend_51 { pt3dadd( 28.2336, -169.587, -21.3132, 0.44 ) }
    dend_51 { pt3dadd( 29.6585, -169.132, -22.19, 0.74 ) }
    dend_51 { pt3dadd( 30.9852, -168.686, -23.03, 0.29 ) }
    dend_51 { pt3dadd( 31.5588, -168.475, -23.3841, 0.29 ) }
    dend_51 { pt3dadd( 31.9499, -168.347, -23.6245, 0.59 ) }
    dend_51 { pt3dadd( 32.0052, -168.333, -23.6586, 0.59 ) }
    dend_51 { pt3dadd( 32.4197, -168.284, -23.9406, 1.18 ) }
    dend_51 { pt3dadd( 33.7356, -168.265, -24.773, 1.11 ) }
    dend_51 { pt3dadd( 34.4643, -168.314, -25.2487, 0.37 ) }
    dend_51 { pt3dadd( 35.4816, -168.428, -25.9214, 0.29 ) }
    dend_51 { pt3dadd( 36.663, -168.592, -26.6668, 1.11 ) }
    dend_51 { pt3dadd( 38.2439, -168.823, -27.5969, 0.66 ) }
    dend_51 { pt3dadd( 39.2569, -168.987, -28.1568, 0.44 ) }
    dend_51 { pt3dadd( 40.5649, -169.207, -28.8644, 1.18 ) }
    dend_51 { pt3dadd( 41.0615, -169.288, -29.1474, 1.62 ) }
    dend_51 { pt3dadd( 41.7996, -169.377, -29.5628, 1.18 ) }
    dend_51 { pt3dadd( 42.6634, -169.434, -30.0038, 0.74 ) }
    dend_51 { pt3dadd( 42.7242, -169.436, -30.0316, 0.74 ) }
    dend_51 { pt3dadd( 44.3035, -169.424, -30.9031, 0.59 ) }
    dend_51 { pt3dadd( 44.3612, -169.421, -30.9367, 0.59 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 90/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 18.5214, -168.807, -21.0502, 0.59 ) }
    dend_50 { pt3dadd( 18.5283, -169.938, -20.6872, 0.59 ) }
    dend_50 { pt3dadd( 18.5501, -170.5, -20.3415, 0.66 ) }
    dend_50 { pt3dadd( 18.5739, -170.777, -20.0973, 1.03 ) }
    dend_50 { pt3dadd( 18.579, -170.881, -19.9968, 1.03 ) }
    dend_50 { pt3dadd( 18.5696, -171.08, -19.7418, 1.03 ) }
    dend_50 { pt3dadd( 18.5182, -171.596, -18.9889, 0.74 ) }
    dend_50 { pt3dadd( 18.3757, -172.319, -17.6892, 1.03 ) }
    dend_50 { pt3dadd( 18.3053, -172.73, -16.7149, 1.11 ) }
    dend_50 { pt3dadd( 18.2795, -172.902, -16.2916, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_50 { pt3dadd( 18.1369, -173.662, -14.4999, 0.74 ) }
    dend_50 { pt3dadd( 18.1305, -173.691, -14.4324, 0.74 ) }
    dend_50 { pt3dadd( 18.0544, -174.02, -13.7224, 0.66 ) }
    dend_50 { pt3dadd( 17.7967, -175.537, -11.0997, 0.66 ) }
    dend_50 { pt3dadd( 17.7514, -176.005, -10.4545, 0.52 ) }
    dend_50 { pt3dadd( 17.7451, -176.617, -9.79559, 0.74 ) }
    dend_50 { pt3dadd( 17.7471, -176.653, -9.7688, 0.74 ) }
    dend_50 { pt3dadd( 17.7918, -177.167, -9.46165, 0.88 ) }
    dend_50 { pt3dadd( 17.9485, -178.493, -8.88343, 0.52 ) }
    dend_50 { pt3dadd( 18.0232, -179.141, -8.72691, 0.52 ) }
    dend_50 { pt3dadd( 18.1191, -179.818, -8.56142, 0.52 ) }
    dend_50 { pt3dadd( 18.228, -180.473, -8.41609, 0.44 ) }
    dend_50 { pt3dadd( 18.3025, -180.982, -8.3159, 0.37 ) }
    dend_50 { pt3dadd( 18.4244, -181.876, -8.13975, 0.37 ) }
    dend_50 { pt3dadd( 18.5302, -182.589, -8.01867, 0.59 ) }
    dend_50 { pt3dadd( 18.6008, -183.007, -7.93271, 0.88 ) }
    dend_50 { pt3dadd( 18.6096, -183.051, -7.9199, 0.88 ) }
    dend_50 { pt3dadd( 18.6965, -183.411, -7.78837, 0.96 ) }
    dend_50 { pt3dadd( 18.9475, -184.369, -7.28985, 0.44 ) }
    dend_50 { pt3dadd( 19.0964, -184.875, -6.97288, 0.59 ) }
    dend_50 { pt3dadd( 19.1065, -184.906, -6.94933, 0.59 ) }
    dend_50 { pt3dadd( 19.3732, -185.641, -6.37646, 0.81 ) }
    dend_50 { pt3dadd( 19.4598, -185.896, -6.1805, 0.96 ) }
    dend_50 { pt3dadd( 19.8043, -186.988, -5.3741, 0.52 ) }
    dend_50 { pt3dadd( 19.8735, -187.247, -5.19776, 0.74 ) }
    dend_50 { pt3dadd( 20.0712, -188.143, -4.64311, 0.52 ) }
    dend_50 { pt3dadd( 20.1894, -188.728, -4.35408, 0.74 ) }
    dend_50 { pt3dadd( 20.2845, -189.266, -4.13523, 0.44 ) }
    dend_50 { pt3dadd( 20.3497, -189.733, -3.93393, 0.29 ) }
    dend_50 { pt3dadd( 20.3814, -190.029, -3.79014, 0.37 ) }
    dend_50 { pt3dadd( 20.4155, -190.46, -3.49285, 0.59 ) }
    dend_50 { pt3dadd( 20.4649, -190.971, -3.06636, 0.59 ) }
    dend_50 { pt3dadd( 20.5944, -191.785, -2.29714, 0.81 ) }
    dend_50 { pt3dadd( 20.8247, -192.622, -1.42514, 0.44 ) }
    dend_50 { pt3dadd( 21.1444, -193.391, -0.536915, 0.88 ) }
    dend_50 { pt3dadd( 21.6083, -194.194, 0.483267, 0.74 ) }
    dend_50 { pt3dadd( 21.8616, -194.477, 0.888154, 0.29 ) }
    dend_50 { pt3dadd( 22.3459, -194.812, 1.4263, 0.37 ) }
    dend_50 { pt3dadd( 22.9776, -194.93, 1.64833, 0.37 ) }
    dend_50 { pt3dadd( 23.5255, -194.899, 1.64455, 0.66 ) }
    dend_50 { pt3dadd( 23.5689, -194.892, 1.63812, 0.66 ) }
    dend_50 { pt3dadd( 24.2461, -194.742, 1.45679, 0.29 ) }
    dend_50 { pt3dadd( 24.2935, -194.731, 1.44456, 0.29 ) }
    dend_50 { pt3dadd( 25.0428, -194.51, 1.29254, 0.15 ) }
    dend_50 { pt3dadd( 25.7473, -194.266, 1.10787, 0.15 ) }
    dend_50 { pt3dadd( 27.2815, -198.713, 5.23525, 0.15 ) }
    dend_50 { pt3dadd( 28.243, -203.24, 9.4555, 0.15 ) }
    dend_50 { pt3dadd( 29.967, -208.256, 12.8505, 0.15 ) }
    dend_50 { pt3dadd( 32.8562, -212.136, 16.7632, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 49/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -6.90906, -440.008, -33.7642, 1.18 ) }
    dend_46 { pt3dadd( -6.36058, -441.518, -33.0694, 1.18 ) }
    dend_46 { pt3dadd( -5.78396, -443.026, -32.3165, 0.96 ) }
    dend_46 { pt3dadd( -5.52336, -443.659, -31.9986, 1.47 ) }
    dend_46 { pt3dadd( -5.19514, -444.417, -31.6301, 1.84 ) }
    dend_46 { pt3dadd( -4.78238, -445.338, -31.1893, 1.33 ) }
    dend_46 { pt3dadd( -4.19777, -446.613, -30.6138, 0.74 ) }
    dend_46 { pt3dadd( -4.16204, -446.685, -30.5872, 0.74 ) }
    dend_46 { pt3dadd( -3.67718, -447.613, -30.2603, 0.81 ) }
    dend_46 { pt3dadd( -3.26743, -448.361, -30.025, 0.44 ) }
    dend_46 { pt3dadd( -3.22632, -448.433, -30.01, 0.44 ) }
    dend_46 { pt3dadd( -2.55526, -449.654, -29.8845, 0.29 ) }
    dend_46 { pt3dadd( -1.9273, -450.756, -29.8668, 0.44 ) }
    dend_46 { pt3dadd( -1.53353, -451.444, -29.872, 0.81 ) }
    dend_46 { pt3dadd( -1.14077, -452.093, -29.852, 0.81 ) }
    dend_46 { pt3dadd( -0.311195, -453.318, -29.7221, 0.37 ) }
    dend_46 { pt3dadd( -0.256752, -453.394, -29.7047, 0.37 ) }
    dend_46 { pt3dadd( 0.336203, -454.209, -29.4322, 0.81 ) }
    dend_46 { pt3dadd( 0.910971, -455.052, -29.094, 1.11 ) }
    dend_46 { pt3dadd( 1.63488, -456.266, -28.5739, 1.11 ) }
    dend_46 { pt3dadd( 2.42865, -457.874, -27.8831, 0.29 ) }
    dend_46 { pt3dadd( 2.91017, -459.145, -27.3528, 0.29 ) }
    dend_46 { pt3dadd( 3.15475, -460.083, -26.9871, 0.66 ) }
    dend_46 { pt3dadd( 3.30545, -461.279, -26.575, 0.88 ) }
    dend_46 { pt3dadd( 3.3273, -462.308, -26.2704, 1.03 ) }
    dend_46 { pt3dadd( 3.23616, -463.176, -26.0836, 1.03 ) }
    dend_46 { pt3dadd( 2.9964, -464.197, -25.9017, 0.74 ) }
    dend_46 { pt3dadd( 2.55006, -465.624, -25.667, 0.22 ) }
    dend_46 { pt3dadd( 2.22197, -466.534, -25.4833, 0.74 ) }
    dend_46 { pt3dadd( 2.18741, -466.618, -25.4608, 0.74 ) }
    dend_46 { pt3dadd( 1.84634, -467.429, -25.2083, 0.74 ) }
    dend_46 { pt3dadd( 1.81306, -467.503, -25.1854, 0.74 ) }
    dend_46 { pt3dadd( 1.39112, -468.458, -24.921, 0.29 ) }
    dend_46 { pt3dadd( 1.1381, -469.151, -24.7722, 0.29 ) }
    dend_46 { pt3dadd( 0.879399, -470.058, -24.5986, 1.03 ) }
    dend_46 { pt3dadd( 0.69479, -470.998, -24.4946, 1.4 ) }
    dend_46 { pt3dadd( 0.5561, -472.058, -24.4506, 0.52 ) }
    dend_46 { pt3dadd( 0.473478, -472.735, -24.4732, 0.29 ) }
    dend_46 { pt3dadd( 0.34336, -473.846, -24.6926, 0.37 ) }
    dend_46 { pt3dadd( 0.268087, -474.538, -24.9629, 0.66 ) }
    dend_46 { pt3dadd( 0.196137, -475.613, -25.6226, 0.37 ) }
    dend_46 { pt3dadd( 0.204542, -476.101, -26.0563, 0.96 ) }
    dend_46 { pt3dadd( 0.243922, -476.578, -26.5389, 0.96 ) }
    dend_46 { pt3dadd( 0.366255, -477.768, -27.8515, 0.37 ) }
    dend_46 { pt3dadd( 0.529651, -478.881, -29.1583, 0.74 ) }
    dend_46 { pt3dadd( 0.780472, -480.088, -30.5981, 1.25 ) }
    dend_46 { pt3dadd( 1.43749, -482.275, -33.2139, 0.29 ) }
    dend_46 { pt3dadd( 1.70383, -483.011, -34.1119, 0.29 ) }
    dend_46 { pt3dadd( 1.72803, -483.067, -34.1802, 0.29 ) }
    dend_46 { pt3dadd( 2.13915, -483.861, -35.1125, 0.88 ) }
    dend_46 { pt3dadd( 2.36447, -484.233, -35.5285, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_46 { pt3dadd( 3.15022, -485.323, -36.6389, 0.52 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 1/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -6.90906, -440.008, -33.7642, 0.44 ) }
    dend_45 { pt3dadd( -6.27319, -440.827, -33.3985, 0.44 ) }
    dend_45 { pt3dadd( -5.51932, -441.847, -32.9356, 0.44 ) }
    dend_45 { pt3dadd( -5.47794, -441.909, -32.908, 0.44 ) }
    dend_45 { pt3dadd( -5.19565, -442.353, -32.7131, 0.29 ) }
    dend_45 { pt3dadd( -4.84847, -442.886, -32.4697, 0.81 ) }
    dend_45 { pt3dadd( -4.44501, -443.472, -32.1866, 1.11 ) }
    dend_45 { pt3dadd( -4.4157, -443.52, -32.1622, 1.11 ) }
    dend_45 { pt3dadd( -3.996, -444.219, -31.8257, 0.44 ) }
    dend_45 { pt3dadd( -3.96379, -444.274, -31.8011, 0.44 ) }
    dend_45 { pt3dadd( -3.5652, -444.977, -31.5165, 0.37 ) }
    dend_45 { pt3dadd( -3.29779, -445.495, -31.3238, 0.37 ) }
    dend_45 { pt3dadd( -2.88245, -446.393, -31.022, 0.29 ) }
    dend_45 { pt3dadd( -2.64047, -446.912, -30.8575, 0.74 ) }
    dend_45 { pt3dadd( -2.49503, -447.214, -30.7646, 0.81 ) }
    dend_45 { pt3dadd( -2.42762, -447.345, -30.73, 0.81 ) }
    dend_45 { pt3dadd( -2.02326, -448.087, -30.5569, 0.44 ) }
    dend_45 { pt3dadd( -1.64294, -448.733, -30.4133, 0.29 ) }
    dend_45 { pt3dadd( -1.19061, -449.408, -30.2541, 0.52 ) }
    dend_45 { pt3dadd( -0.920443, -449.773, -30.1612, 0.52 ) }
    dend_45 { pt3dadd( -0.189924, -450.711, -29.9434, 0.29 ) }
    dend_45 { pt3dadd( 0.350899, -451.383, -29.8269, 0.59 ) }
    dend_45 { pt3dadd( 0.395211, -451.438, -29.8239, 0.59 ) }
    dend_45 { pt3dadd( 0.659575, -451.807, -29.8295, 0.59 ) }
    dend_45 { pt3dadd( 0.697582, -451.864, -29.8329, 0.59 ) }
    dend_45 { pt3dadd( 1.39513, -452.978, -29.9426, 0.81 ) }
    dend_45 { pt3dadd( 1.76396, -453.612, -30.0308, 1.03 ) }
    dend_45 { pt3dadd( 2.28402, -454.531, -30.2139, 0.59 ) }
    dend_45 { pt3dadd( 2.84027, -455.537, -30.4345, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 30/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -68.7706, -89.9016, 2.687, 0.37 ) }
    dend_39 { pt3dadd( -76.0788, -97.7631, 5.64771, 0.37 ) }
    dend_39 { pt3dadd( -84.9719, -104.245, 6.40578, 0.37 ) }
    dend_39 { pt3dadd( -94.6291, -109.348, 5.62154, 0.37 ) }
    dend_39 { pt3dadd( -103.867, -115.209, 6.76975, 0.37 ) }
    dend_39 { pt3dadd( -113.235, -120.759, 8.23355, 0.37 ) }
    dend_39 { pt3dadd( -121.618, -127.885, 9.47351, 0.37 ) }
    dend_39 { pt3dadd( -129.167, -135.764, 11.662, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 38/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -68.7706, -89.9016, 2.687, 0.29 ) }
    dend_36 { pt3dadd( -75.2942, -97.7105, 5.71138, 0.37 ) }
    dend_36 { pt3dadd( -80.7046, -106.424, 8.68773, 0.37 ) }
    dend_36 { pt3dadd( -85.6859, -115.654, 10.8863, 0.37 ) }
    dend_36 { pt3dadd( -91.3938, -124.094, 14.0235, 0.37 ) }
    dend_36 { pt3dadd( -97.6692, -132.622, 15.2434, 0.37 ) }
    dend_36 { pt3dadd( -104.174, -140.623, 17.8122, 0.37 ) }
    dend_36 { pt3dadd( -110.994, -147.629, 21.8167, 0.37 ) }
    dend_36 { pt3dadd( -117.998, -154.377, 25.9025, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 47/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 60.9018, 186.835, 65.4984, 0.29 ) }
    dend_8 { pt3dadd( 61.9993, 195.526, 68.3399, 0.29 ) }
    dend_8 { pt3dadd( 63.0176, 203.671, 72.4012, 0.29 ) }
    dend_8 { pt3dadd( 63.3226, 212.055, 76.1266, 0.29 ) }
    dend_8 { pt3dadd( 64.2169, 220.145, 80.3146, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 52/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 60.9018, 186.835, 65.4984, 0.44 ) }
    dend_7 { pt3dadd( 62.1967, 197.646, 68.814, 0.29 ) }
    dend_7 { pt3dadd( 62.2287, 208.651, 71.8103, 0.29 ) }
    dend_7 { pt3dadd( 62.1518, 219.051, 76.3513, 0.29 ) }
    // Section: dend_90, id: dend_90, parent: dend_88 (entry count 56/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -123.612, -229.963, 21.4756, 0.29 ) }
    dend_90 { pt3dadd( -128.646, -237.088, 19.7518, 0.29 ) }
    dend_90 { pt3dadd( -134.206, -243.351, 16.9608, 0.29 ) }
    dend_90 { pt3dadd( -139.353, -249.421, 13.1832, 0.29 ) }
    dend_90 { pt3dadd( -145.296, -255.657, 11.2391, 0.29 ) }
    dend_90 { pt3dadd( -151.151, -262.009, 9.36775, 0.29 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 62/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -123.612, -229.963, 21.4756, 0.44 ) }
    dend_89 { pt3dadd( -127.547, -240.057, 19.8345, 0.29 ) }
    dend_89 { pt3dadd( -130.822, -250.426, 18.303, 0.29 ) }
    dend_89 { pt3dadd( -133.228, -261.194, 17.9279, 0.29 ) }
    dend_89 { pt3dadd( -136.413, -271.754, 17.8433, 0.29 ) }
    dend_89 { pt3dadd( -139.901, -282.21, 18.4059, 0.29 ) }
    // Section: dend_86, id: dend_86, parent: dend_72 (entry count 68/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -117.648, -168.928, 50.5355, 0.22 ) }
    dend_86 { pt3dadd( -116.602, -167.969, 51.0633, 0.22 ) }
    dend_86 { pt3dadd( -116.122, -167.548, 51.2861, 0.52 ) }
    dend_86 { pt3dadd( -115.766, -167.267, 51.4211, 0.74 ) }
    dend_86 { pt3dadd( -114.616, -166.453, 51.7915, 0.37 ) }
    dend_86 { pt3dadd( -113.31, -165.576, 52.1446, 0.37 ) }
    dend_86 { pt3dadd( -112.827, -165.252, 52.2751, 0.37 ) }
    dend_86 { pt3dadd( -112.618, -165.127, 52.3178, 0.37 ) }
    dend_86 { pt3dadd( -111.607, -164.572, 52.5193, 0.37 ) }
    dend_86 { pt3dadd( -111.131, -164.338, 52.594, 0.88 ) }
    dend_86 { pt3dadd( -110.408, -164.042, 52.5928, 0.88 ) }
    dend_86 { pt3dadd( -101.069, -159.057, 56.5026, 0.88 ) }
    dend_86 { pt3dadd( -92.3352, -152.247, 59.0639, 0.88 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 81/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -117.648, -168.928, 50.5355, 0.44 ) }
    dend_73 { pt3dadd( -117.773, -167.378, 50.3087, 0.44 ) }
    dend_73 { pt3dadd( -117.834, -165.879, 50.102, 0.37 ) }
    dend_73 { pt3dadd( -117.834, -165.809, 50.0955, 0.37 ) }
    dend_73 { pt3dadd( -117.848, -164.589, 50.0259, 0.37 ) }
    dend_73 { pt3dadd( -117.853, -164.465, 50.0257, 0.37 ) }
    dend_73 { pt3dadd( -117.953, -162.97, 50.0703, 0.37 ) }
    dend_73 { pt3dadd( -117.959, -162.89, 50.0797, 0.37 ) }
    dend_73 { pt3dadd( -118.08, -161.902, 50.2415, 0.29 ) }
    dend_73 { pt3dadd( -118.264, -160.855, 50.4221, 0.29 ) }
    dend_73 { pt3dadd( -118.49, -159.898, 50.6003, 0.29 ) }
    dend_73 { pt3dadd( -118.558, -159.67, 50.6425, 0.66 ) }
    dend_73 { pt3dadd( -118.624, -159.502, 50.6679, 0.66 ) }
    dend_73 { pt3dadd( -118.857, -158.934, 50.7111, 0.66 ) }
    dend_73 { pt3dadd( -119.257, -158.034, 50.7012, 0.29 ) }
    dend_73 { pt3dadd( -119.442, -157.656, 50.6775, 0.44 ) }
    dend_73 { pt3dadd( -119.517, -157.518, 50.6647, 0.44 ) }
    dend_73 { pt3dadd( -119.921, -156.858, 50.6147, 0.37 ) }
    dend_73 { pt3dadd( -120.395, -156.137, 50.5755, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_73 { pt3dadd( -120.44, -156.073, 50.5735, 0.37 ) }
    dend_73 { pt3dadd( -121.292, -154.907, 50.5699, 0.29 ) }
    dend_73 { pt3dadd( -121.798, -154.206, 50.5794, 0.44 ) }
    dend_73 { pt3dadd( -121.942, -153.998, 50.5908, 0.44 ) }
    dend_73 { pt3dadd( -122.395, -153.324, 50.6602, 0.44 ) }
    dend_73 { pt3dadd( -122.827, -152.655, 50.7396, 0.29 ) }
    dend_73 { pt3dadd( -122.915, -152.51, 50.7583, 0.29 ) }
    dend_73 { pt3dadd( -123.148, -152.085, 50.8191, 0.44 ) }
    dend_73 { pt3dadd( -123.4, -151.612, 50.8897, 0.44 ) }
    dend_73 { pt3dadd( -123.44, -151.531, 50.9012, 0.44 ) }
    dend_73 { pt3dadd( -123.705, -150.961, 50.972, 0.44 ) }
    dend_73 { pt3dadd( -123.945, -150.338, 51.0536, 0.44 ) }
    dend_73 { pt3dadd( -123.967, -150.26, 51.062, 0.44 ) }
    dend_73 { pt3dadd( -124.119, -149.545, 51.1192, 0.37 ) }
    dend_73 { pt3dadd( -124.185, -149.196, 51.138, 0.37 ) }
    dend_73 { pt3dadd( -124.335, -148.294, 51.1555, 0.44 ) }
    dend_73 { pt3dadd( -124.445, -147.494, 51.1533, 0.44 ) }
    dend_73 { pt3dadd( -124.556, -146.628, 51.0698, 0.44 ) }
    dend_73 { pt3dadd( -124.707, -145.424, 50.8851, 0.44 ) }
    dend_73 { pt3dadd( -124.863, -144.319, 50.6709, 0.74 ) }
    dend_73 { pt3dadd( -125.098, -142.854, 50.3325, 0.81 ) }
    dend_73 { pt3dadd( -125.207, -142.256, 50.1673, 0.74 ) }
    dend_73 { pt3dadd( -125.637, -140.179, 49.483, 0.29 ) }
    dend_73 { pt3dadd( -125.652, -140.115, 49.4594, 0.29 ) }
    dend_73 { pt3dadd( -125.753, -139.651, 49.2754, 0.29 ) }
    dend_73 { pt3dadd( -125.783, -139.492, 49.2169, 0.29 ) }
    dend_73 { pt3dadd( -125.847, -139.093, 49.1151, 0.44 ) }
    dend_73 { pt3dadd( -125.857, -139.016, 49.1011, 0.44 ) }
    dend_73 { pt3dadd( -125.906, -138.457, 49.0429, 0.44 ) }
    dend_73 { pt3dadd( -125.96, -137.55, 48.9363, 0.88 ) }
    dend_73 { pt3dadd( -125.996, -136.275, 48.7712, 0.52 ) }
    dend_73 { pt3dadd( -126.015, -135.282, 48.641, 0.52 ) }
    dend_73 { pt3dadd( -126.029, -134.481, 48.5219, 0.44 ) }
    dend_73 { pt3dadd( -126.057, -133.603, 48.3835, 0.29 ) }
    dend_73 { pt3dadd( -126.087, -132.946, 48.2735, 0.59 ) }
    dend_73 { pt3dadd( -126.105, -132.692, 48.23, 0.59 ) }
    dend_73 { pt3dadd( -126.173, -132.053, 48.1236, 0.59 ) }
    dend_73 { pt3dadd( -126.244, -131.417, 48.0195, 0.29 ) }
    dend_73 { pt3dadd( -126.343, -130.546, 47.8968, 0.29 ) }
    dend_73 { pt3dadd( -126.351, -130.455, 47.8844, 0.29 ) }
    dend_73 { pt3dadd( -126.407, -129.797, 47.786, 0.59 ) }
    dend_73 { pt3dadd( -126.414, -129.694, 47.7701, 0.59 ) }
    dend_73 { pt3dadd( -126.465, -128.957, 47.6665, 0.66 ) }
    dend_73 { pt3dadd( -126.516, -128.14, 47.5635, 0.66 ) }
    dend_73 { pt3dadd( -126.56, -127.273, 47.4526, 0.29 ) }
    dend_73 { pt3dadd( -126.615, -126.06, 47.299, 0.29 ) }
    dend_73 { pt3dadd( -126.618, -125.969, 47.2876, 0.29 ) }
    dend_73 { pt3dadd( -126.629, -124.423, 47.1465, 0.29 ) }
    dend_73 { pt3dadd( -126.629, -124.247, 47.1367, 0.29 ) }
    dend_73 { pt3dadd( -126.636, -123.251, 47.1145, 0.52 ) }
    dend_73 { pt3dadd( -126.64, -123.077, 47.1168, 0.52 ) }
    dend_73 { pt3dadd( -126.679, -122.038, 47.1671, 0.81 ) }
    dend_73 { pt3dadd( -126.751, -121.051, 47.2204, 0.52 ) }
    dend_73 { pt3dadd( -126.835, -120.244, 47.2716, 0.52 ) }
    dend_73 { pt3dadd( -126.936, -119.5, 47.3056, 0.74 ) }
    dend_73 { pt3dadd( -127.079, -118.618, 47.3193, 0.88 ) }
    dend_73 { pt3dadd( -127.125, -118.29, 47.3007, 0.88 ) }
    dend_73 { pt3dadd( -127.195, -117.253, 47.1188, 0.88 ) }
    dend_73 { pt3dadd( -127.192, -117.175, 47.097, 0.88 ) }
    dend_73 { pt3dadd( -127.125, -116.633, 46.9155, 0.66 ) }
    dend_73 { pt3dadd( -126.962, -115.802, 46.6616, 0.44 ) }
    dend_73 { pt3dadd( -126.665, -114.557, 46.3706, 0.37 ) }
    dend_73 { pt3dadd( -126.37, -113.322, 46.1616, 0.29 ) }
    dend_73 { pt3dadd( -126.16, -112.48, 46.0568, 0.29 ) }
    dend_73 { pt3dadd( -126.143, -112.401, 46.0508, 0.29 ) }
    dend_73 { pt3dadd( -125.876, -110.953, 46.0191, 0.29 ) }
    dend_73 { pt3dadd( -125.61, -109.128, 46.0651, 0.29 ) }
    dend_73 { pt3dadd( -125.524, -108.055, 46.1407, 0.37 ) }
    dend_73 { pt3dadd( -125.52, -107.883, 46.1544, 0.37 ) }
    dend_73 { pt3dadd( -125.53, -106.981, 46.1986, 0.37 ) }
    dend_73 { pt3dadd( -125.538, -106.087, 46.2312, 0.37 ) }
    dend_73 { pt3dadd( -125.539, -105.925, 46.2333, 0.37 ) }
    dend_73 { pt3dadd( -125.578, -104.693, 46.2742, 0.52 ) }
    dend_73 { pt3dadd( -125.644, -103.438, 46.3379, 0.44 ) }
    dend_73 { pt3dadd( -125.733, -102.117, 46.4201, 1.11 ) }
    dend_73 { pt3dadd( -125.84, -100.349, 46.5386, 0.29 ) }
    dend_73 { pt3dadd( -125.844, -100.257, 46.5481, 0.29 ) }
    dend_73 { pt3dadd( -125.874, -98.8923, 46.7098, 0.29 ) }
    dend_73 { pt3dadd( -125.869, -98.118, 46.8069, 0.29 ) }
    dend_73 { pt3dadd( -125.867, -98.0509, 46.8151, 0.29 ) }
    dend_73 { pt3dadd( -125.817, -96.6723, 46.9555, 0.37 ) }
    dend_73 { pt3dadd( -125.73, -94.6244, 47.1047, 0.37 ) }
    dend_73 { pt3dadd( -125.635, -93.1728, 47.1893, 0.37 ) }
    dend_73 { pt3dadd( -125.521, -92.0126, 47.2404, 0.81 ) }
    dend_73 { pt3dadd( -125.439, -91.2479, 47.2653, 1.03 ) }
    dend_73 { pt3dadd( -125.311, -89.9591, 47.2855, 0.29 ) }
    dend_73 { pt3dadd( -125.238, -89.0856, 47.2767, 0.29 ) }
    dend_73 { pt3dadd( -125.202, -88.4978, 47.2389, 0.44 ) }
    dend_73 { pt3dadd( -125.2, -88.4192, 47.2343, 0.44 ) }
    dend_73 { pt3dadd( -125.207, -87.9964, 47.2126, 0.44 ) }
    dend_73 { pt3dadd( -125.268, -86.9398, 47.2053, 0.29 ) }
    dend_73 { pt3dadd( -125.282, -86.7811, 47.2102, 0.29 ) }
    dend_73 { pt3dadd( -125.43, -85.4557, 47.2847, 0.29 ) }
    dend_73 { pt3dadd( -125.441, -85.3758, 47.2903, 0.29 ) }
    dend_73 { pt3dadd( -125.678, -83.9323, 47.406, 0.29 ) }
    dend_73 { pt3dadd( -125.823, -83.0876, 47.4769, 0.66 ) }
    dend_73 { pt3dadd( -125.921, -82.4777, 47.5271, 0.74 ) }
    dend_73 { pt3dadd( -125.94, -82.3197, 47.5371, 0.74 ) }
    dend_73 { pt3dadd( -126.025, -80.844, 47.5929, 0.29 ) }
    dend_73 { pt3dadd( -126.026, -80.6925, 47.5937, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_73 { pt3dadd( -126.005, -79.778, 47.553, 0.29 ) }
    dend_73 { pt3dadd( -125.984, -79.1409, 47.5025, 0.74 ) }
    dend_73 { pt3dadd( -125.922, -78.1317, 47.4108, 0.22 ) }
    dend_73 { pt3dadd( -125.788, -76.6785, 47.2638, 0.22 ) }
    dend_73 { pt3dadd( -125.583, -75.358, 47.1125, 1.03 ) }
    dend_73 { pt3dadd( -125.34, -74.0292, 46.9526, 0.29 ) }
    dend_73 { pt3dadd( -125.289, -73.7798, 46.9218, 0.29 ) }
    dend_73 { pt3dadd( -124.995, -72.4326, 46.7526, 0.29 ) }
    dend_73 { pt3dadd( -124.936, -72.1861, 46.7214, 0.29 ) }
    dend_73 { pt3dadd( -124.376, -70.0837, 46.4521, 0.29 ) }
    dend_73 { pt3dadd( -124.32, -69.8739, 46.4277, 0.29 ) }
    dend_73 { pt3dadd( -123.938, -68.4091, 46.2328, 0.29 ) }
    dend_73 { pt3dadd( -123.918, -68.3208, 46.219, 0.29 ) }
    dend_73 { pt3dadd( -123.723, -67.1771, 46.0125, 0.44 ) }
    dend_73 { pt3dadd( -123.713, -67.0985, 45.9965, 0.44 ) }
    dend_73 { pt3dadd( -123.651, -66.1453, 45.7799, 0.44 ) }
    dend_73 { pt3dadd( -123.595, -65.1574, 45.5459, 0.74 ) }
    dend_73 { pt3dadd( -123.593, -65.079, 45.5264, 0.74 ) }
    dend_73 { pt3dadd( -123.588, -64.6172, 45.4155, 1.03 ) }
    dend_73 { pt3dadd( -123.603, -63.7621, 45.2322, 0.59 ) }
    dend_73 { pt3dadd( -123.647, -62.8519, 45.1671, 0.29 ) }
    dend_73 { pt3dadd( -123.659, -62.68, 45.1791, 0.29 ) }
    dend_73 { pt3dadd( -123.722, -62.0801, 45.2963, 0.29 ) }
    dend_73 { pt3dadd( -123.732, -61.9919, 45.3178, 0.29 ) }
    dend_73 { pt3dadd( -123.867, -61.0596, 45.5805, 0.88 ) }
    dend_73 { pt3dadd( -124.077, -59.703, 45.9582, 0.88 ) }
    dend_73 { pt3dadd( -124.101, -59.5507, 45.9961, 0.88 ) }
    dend_73 { pt3dadd( -124.192, -58.9125, 46.1343, 0.66 ) }
    dend_73 { pt3dadd( -124.247, -58.2785, 46.2809, 0.29 ) }
    dend_73 { pt3dadd( -124.275, -57.6193, 46.4325, 0.29 ) }
    dend_73 { pt3dadd( -124.282, -56.3486, 46.7055, 0.29 ) }
    dend_73 { pt3dadd( -124.263, -55.7072, 46.821, 0.44 ) }
    dend_73 { pt3dadd( -124.258, -55.6179, 46.8401, 0.44 ) }
    dend_73 { pt3dadd( -124.146, -54.2969, 47.2464, 0.37 ) }
    dend_73 { pt3dadd( -124.087, -53.4028, 47.5616, 0.29 ) }
    dend_73 { pt3dadd( -124.085, -53.3269, 47.5885, 0.29 ) }
    dend_73 { pt3dadd( -124.095, -52.7121, 47.8027, 0.74 ) }
    dend_73 { pt3dadd( -124.102, -52.6485, 47.8213, 0.74 ) }
    dend_73 { pt3dadd( -124.362, -51.0152, 48.2212, 0.29 ) }
    dend_73 { pt3dadd( -124.684, -49.5304, 48.4849, 0.29 ) }
    dend_73 { pt3dadd( -124.966, -48.2863, 48.7031, 0.22 ) }
    dend_73 { pt3dadd( -125.024, -48.0465, 48.7456, 0.22 ) }
    dend_73 { pt3dadd( -125.434, -46.4064, 49.0146, 0.29 ) }
    dend_73 { pt3dadd( -125.456, -46.3186, 49.0273, 0.29 ) }
    dend_73 { pt3dadd( -125.82, -44.9018, 49.1786, 0.29 ) }
    dend_73 { pt3dadd( -126.115, -43.6989, 49.3485, 0.29 ) }
    dend_73 { pt3dadd( -126.395, -42.4624, 49.5675, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 47/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -182.453, -226.478, 85.6939, 0.37 ) }
    dend_71 { pt3dadd( -182.591, -226.997, 85.4746, 0.37 ) }
    dend_71 { pt3dadd( -182.953, -228.086, 85.0497, 0.37 ) }
    dend_71 { pt3dadd( -183.269, -229.005, 84.7325, 0.29 ) }
    dend_71 { pt3dadd( -183.467, -229.55, 84.5365, 0.44 ) }
    dend_71 { pt3dadd( -183.663, -230.092, 84.3485, 0.44 ) }
    dend_71 { pt3dadd( -184.046, -231.161, 83.9971, 0.29 ) }
    dend_71 { pt3dadd( -184.199, -231.552, 83.879, 0.37 ) }
    dend_71 { pt3dadd( -184.436, -232.103, 83.7466, 0.37 ) }
    dend_71 { pt3dadd( -184.936, -233.214, 83.4354, 0.37 ) }
    dend_71 { pt3dadd( -185.168, -233.732, 83.2752, 0.37 ) }
    dend_71 { pt3dadd( -185.323, -234.101, 83.1549, 0.66 ) }
    dend_71 { pt3dadd( -185.344, -234.151, 83.1395, 0.66 ) }
    dend_71 { pt3dadd( -185.501, -234.482, 83.0297, 0.74 ) }
    dend_71 { pt3dadd( -185.955, -235.306, 82.738, 0.37 ) }
    dend_71 { pt3dadd( -186.258, -235.785, 82.5864, 0.37 ) }
    dend_71 { pt3dadd( -186.296, -235.835, 82.5657, 0.37 ) }
    dend_71 { pt3dadd( -186.587, -236.192, 82.3936, 0.37 ) }
    dend_71 { pt3dadd( -188.739, -243.89, 81.0102, 0.37 ) }
    dend_71 { pt3dadd( -189.777, -251.961, 80.4877, 0.37 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 67/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -182.453, -226.478, 85.6939, 0.29 ) }
    dend_70 { pt3dadd( -183.2, -226.341, 86.3271, 0.29 ) }
    dend_70 { pt3dadd( -183.847, -226.265, 86.9999, 0.52 ) }
    dend_70 { pt3dadd( -184.764, -226.236, 87.9557, 0.44 ) }
    dend_70 { pt3dadd( -185.09, -226.272, 88.2809, 0.29 ) }
    dend_70 { pt3dadd( -185.72, -226.401, 88.8589, 0.29 ) }
    dend_70 { pt3dadd( -186.23, -226.522, 89.3456, 0.44 ) }
    dend_70 { pt3dadd( -187.436, -226.868, 90.5694, 0.29 ) }
    dend_70 { pt3dadd( -187.945, -227.011, 91.0647, 0.29 ) }
    dend_70 { pt3dadd( -188.686, -227.238, 91.7725, 0.29 ) }
    dend_70 { pt3dadd( -189.375, -227.457, 92.4848, 0.29 ) }
    dend_70 { pt3dadd( -190.091, -227.674, 93.2601, 0.29 ) }
    dend_70 { pt3dadd( -190.125, -227.685, 93.2978, 0.29 ) }
    dend_70 { pt3dadd( -190.755, -227.821, 93.9446, 0.44 ) }
    dend_70 { pt3dadd( -191.641, -227.9, 94.9658, 0.44 ) }
    dend_70 { pt3dadd( -191.724, -227.893, 95.0721, 0.44 ) }
    dend_70 { pt3dadd( -192.172, -227.842, 95.6875, 0.66 ) }
    dend_70 { pt3dadd( -192.681, -227.857, 96.2534, 0.66 ) }
    dend_70 { pt3dadd( -198.549, -228.507, 102.646, 0.66 ) }
    dend_70 { pt3dadd( -202.821, -229.002, 110.211, 0.66 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 87/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 37.6371, -238.79, -13.4753, 0.52 ) }
    dend_64 { pt3dadd( 36.643, -239.669, -13.145, 0.52 ) }
    dend_64 { pt3dadd( 35.8724, -240.39, -12.9059, 0.29 ) }
    dend_64 { pt3dadd( 35.061, -241.226, -12.6788, 0.22 ) }
    dend_64 { pt3dadd( 34.6511, -241.672, -12.5466, 0.52 ) }
    dend_64 { pt3dadd( 34.2856, -242.079, -12.4188, 0.74 ) }
    dend_64 { pt3dadd( 33.8237, -242.603, -12.2524, 0.81 ) }
    dend_64 { pt3dadd( 33.3924, -243.092, -12.1004, 0.66 ) }
    dend_64 { pt3dadd( 32.778, -243.801, -11.9083, 0.29 ) }
    dend_64 { pt3dadd( 32.1012, -244.705, -11.6657, 0.29 ) }
    dend_64 { pt3dadd( 32.0595, -244.765, -11.6499, 0.29 ) }
    dend_64 { pt3dadd( 31.9308, -244.957, -11.6006, 0.66 ) }
    dend_64 { pt3dadd( 31.5592, -245.509, -11.4569, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_64 { pt3dadd( 31.0888, -246.187, -11.2831, 0.22 ) }
    dend_64 { pt3dadd( 30.6789, -246.776, -11.1505, 0.22 ) }
    dend_64 { pt3dadd( 30.4879, -247.073, -11.1168, 0.52 ) }
    dend_64 { pt3dadd( 30.2559, -247.448, -11.0764, 0.52 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 4/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 37.6371, -238.79, -13.4753, 1.18 ) }
    dend_63 { pt3dadd( 38.0298, -239.609, -13.1729, 1.18 ) }
    dend_63 { pt3dadd( 38.1763, -239.991, -13.0382, 1.4 ) }
    dend_63 { pt3dadd( 38.366, -240.721, -12.753, 0.37 ) }
    dend_63 { pt3dadd( 38.4118, -241.393, -12.4511, 0.44 ) }
    dend_63 { pt3dadd( 38.3583, -241.958, -12.1963, 0.66 ) }
    dend_63 { pt3dadd( 38.1559, -242.759, -11.8056, 0.66 ) }
    dend_63 { pt3dadd( 37.9913, -243.168, -11.6083, 0.66 ) }
    dend_63 { pt3dadd( 37.557, -244.095, -11.1707, 0.59 ) }
    dend_63 { pt3dadd( 36.9498, -245.294, -10.6169, 0.37 ) }
    dend_63 { pt3dadd( 36.5889, -246.003, -10.2924, 1.55 ) }
    dend_63 { pt3dadd( 36.0158, -247.279, -9.72977, 0.37 ) }
    dend_63 { pt3dadd( 35.7373, -248.089, -9.4091, 0.44 ) }
    dend_63 { pt3dadd( 35.5664, -248.907, -9.11697, 0.44 ) }
    dend_63 { pt3dadd( 35.5465, -249.374, -8.98595, 0.88 ) }
    dend_63 { pt3dadd( 35.5913, -249.809, -8.89186, 1.03 ) }
    dend_63 { pt3dadd( 35.716, -250.663, -8.74148, 0.37 ) }
    dend_63 { pt3dadd( 35.819, -251.329, -8.6705, 0.37 ) }
    dend_63 { pt3dadd( 35.857, -251.662, -8.63615, 0.88 ) }
    dend_63 { pt3dadd( 35.8958, -252.112, -8.59101, 0.96 ) }
    dend_63 { pt3dadd( 35.9309, -252.858, -8.52272, 0.96 ) }
    dend_63 { pt3dadd( 35.9649, -253.781, -8.44038, 0.29 ) }
    dend_63 { pt3dadd( 35.9995, -254.719, -8.28819, 0.29 ) }
    dend_63 { pt3dadd( 36.0141, -255.055, -8.2113, 0.66 ) }
    dend_63 { pt3dadd( 36.0264, -255.438, -8.08119, 0.88 ) }
    dend_63 { pt3dadd( 36.0278, -255.495, -8.05673, 0.88 ) }
    dend_63 { pt3dadd( 36.0376, -255.957, -7.81673, 0.74 ) }
    dend_63 { pt3dadd( 36.0024, -257.108, -7.16216, 0.29 ) }
    dend_63 { pt3dadd( 35.9489, -257.717, -6.82115, 0.29 ) }
    dend_63 { pt3dadd( 35.9148, -258.535, -6.39731, 1.11 ) }
    dend_63 { pt3dadd( 35.9368, -258.939, -6.20155, 1.11 ) }
    dend_63 { pt3dadd( 35.9454, -258.995, -6.17708, 1.11 ) }
    dend_63 { pt3dadd( 36.0626, -259.473, -5.99808, 1.11 ) }
    dend_63 { pt3dadd( 36.4342, -260.578, -5.5962, 0.29 ) }
    dend_63 { pt3dadd( 36.7805, -261.509, -5.2473, 0.29 ) }
    dend_63 { pt3dadd( 37.0809, -262.324, -4.94507, 0.29 ) }
    dend_63 { pt3dadd( 37.2366, -262.779, -4.76943, 0.81 ) }
    dend_63 { pt3dadd( 37.3976, -263.333, -4.53388, 0.96 ) }
    dend_63 { pt3dadd( 37.6543, -264.394, -3.94648, 0.96 ) }
    dend_63 { pt3dadd( 37.7592, -265.018, -3.54568, 0.37 ) }
    dend_63 { pt3dadd( 37.8104, -265.636, -3.11884, 0.88 ) }
    dend_63 { pt3dadd( 37.821, -266.136, -2.7696, 0.88 ) }
    dend_63 { pt3dadd( 37.8085, -267.131, -2.09099, 0.59 ) }
    dend_63 { pt3dadd( 37.7626, -268.48, -1.24065, 0.44 ) }
    dend_63 { pt3dadd( 37.7465, -269.02, -0.952683, 0.59 ) }
    dend_63 { pt3dadd( 37.728, -269.459, -0.754315, 0.59 ) }
    dend_63 { pt3dadd( 37.6948, -270.16, -0.51832, 0.88 ) }
    dend_63 { pt3dadd( 37.6821, -270.797, -0.377372, 0.29 ) }
    dend_63 { pt3dadd( 37.6849, -271.543, -0.287235, 0.29 ) }
    dend_63 { pt3dadd( 37.7, -272.318, -0.208869, 0.37 ) }
    dend_63 { pt3dadd( 37.7273, -273.162, -0.0857353, 0.96 ) }
    dend_63 { pt3dadd( 37.7494, -273.772, 0.0234942, 1.33 ) }
    dend_63 { pt3dadd( 37.7796, -274.781, 0.279831, 0.37 ) }
    dend_63 { pt3dadd( 37.7797, -275.503, 0.503362, 0.52 ) }
    dend_63 { pt3dadd( 37.7446, -276.434, 0.831387, 0.44 ) }
    dend_63 { pt3dadd( 37.7158, -276.924, 1.01819, 0.29 ) }
    dend_63 { pt3dadd( 37.6882, -277.452, 1.22978, 0.88 ) }
    dend_63 { pt3dadd( 37.626, -278.39, 1.59896, 0.74 ) }
    dend_63 { pt3dadd( 37.5898, -279.003, 1.86422, 0.29 ) }
    dend_63 { pt3dadd( 37.598, -279.576, 2.11499, 0.59 ) }
    dend_63 { pt3dadd( 37.6249, -280.196, 2.37547, 0.74 ) }
    dend_63 { pt3dadd( 37.6445, -280.697, 2.61183, 0.88 ) }
    dend_63 { pt3dadd( 37.6453, -280.758, 2.64161, 0.88 ) }
    dend_63 { pt3dadd( 37.5883, -282.01, 3.21565, 0.52 ) }
    dend_63 { pt3dadd( 37.5076, -282.502, 3.44268, 0.52 ) }
    dend_63 { pt3dadd( 37.2759, -283.231, 3.79355, 0.52 ) }
    dend_63 { pt3dadd( 36.9851, -283.984, 4.14418, 0.96 ) }
    dend_63 { pt3dadd( 36.8186, -284.372, 4.34936, 1.33 ) }
    dend_63 { pt3dadd( 36.5894, -284.925, 4.66744, 0.59 ) }
    dend_63 { pt3dadd( 36.3077, -285.629, 5.07073, 0.37 ) }
    dend_63 { pt3dadd( 35.9655, -286.639, 5.66983, 0.44 ) }
    dend_63 { pt3dadd( 35.8174, -287.241, 6.00755, 0.66 ) }
    dend_63 { pt3dadd( 35.6447, -288.36, 6.55712, 0.96 ) }
    dend_63 { pt3dadd( 35.5423, -289.499, 7.08524, 0.44 ) }
    dend_63 { pt3dadd( 35.5194, -290.085, 7.33345, 1.03 ) }
    dend_63 { pt3dadd( 35.5413, -290.785, 7.59086, 1.18 ) }
    dend_63 { pt3dadd( 35.6142, -291.753, 7.84202, 0.29 ) }
    dend_63 { pt3dadd( 35.7021, -292.68, 7.97544, 0.29 ) }
    dend_63 { pt3dadd( 35.7184, -292.819, 7.97807, 0.88 ) }
    dend_63 { pt3dadd( 35.752, -293.152, 7.96216, 1.25 ) }
    dend_63 { pt3dadd( 35.7951, -293.839, 7.94356, 0.66 ) }
    dend_63 { pt3dadd( 35.8064, -294.59, 7.93972, 0.59 ) }
    dend_63 { pt3dadd( 35.7812, -295.631, 7.95912, 0.52 ) }
    dend_63 { pt3dadd( 35.7395, -296.248, 7.97513, 0.52 ) }
    dend_63 { pt3dadd( 35.6622, -297.132, 8.00858, 0.52 ) }
    dend_63 { pt3dadd( 35.5717, -297.964, 8.0766, 0.37 ) }
    dend_63 { pt3dadd( 35.4747, -298.734, 8.12689, 0.29 ) }
    dend_63 { pt3dadd( 35.4421, -299.039, 8.14162, 0.74 ) }
    dend_63 { pt3dadd( 35.4293, -299.221, 8.1454, 0.74 ) }
    dend_63 { pt3dadd( 35.4167, -299.726, 8.12853, 0.74 ) }
    dend_63 { pt3dadd( 35.4387, -300.543, 8.05491, 0.81 ) }
    dend_63 { pt3dadd( 35.4969, -301.801, 7.848, 0.81 ) }
    dend_63 { pt3dadd( 35.565, -302.619, 7.6985, 0.81 ) }
    dend_63 { pt3dadd( 35.6686, -303.527, 7.534, 0.81 ) }
    dend_63 { pt3dadd( 35.6763, -303.586, 7.52377, 0.81 ) }
    dend_63 { pt3dadd( 35.7961, -304.383, 7.39171, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_63 { pt3dadd( 35.9672, -305.378, 7.23874, 0.44 ) }
    dend_63 { pt3dadd( 36.0855, -306.015, 7.19284, 0.44 ) }
    dend_63 { pt3dadd( 36.2368, -306.745, 7.16822, 0.29 ) }
    dend_63 { pt3dadd( 36.3608, -307.362, 7.17453, 0.74 ) }
    dend_63 { pt3dadd( 36.4199, -307.732, 7.18639, 0.96 ) }
    dend_63 { pt3dadd( 36.425, -307.792, 7.19276, 0.96 ) }
    dend_63 { pt3dadd( 36.4196, -308.419, 7.29247, 0.52 ) }
    dend_63 { pt3dadd( 36.3191, -309.335, 7.48244, 0.52 ) }
    dend_63 { pt3dadd( 36.1787, -310.189, 7.70019, 0.52 ) }
    dend_63 { pt3dadd( 36.0855, -310.754, 7.86076, 0.59 ) }
    dend_63 { pt3dadd( 35.9541, -311.726, 8.15579, 0.74 ) }
    dend_63 { pt3dadd( 35.9048, -312.261, 8.32586, 0.52 ) }
    dend_63 { pt3dadd( 35.8532, -313.244, 8.63071, 0.37 ) }
    dend_63 { pt3dadd( 35.8528, -313.304, 8.64822, 0.37 ) }
    dend_63 { pt3dadd( 35.9385, -314.204, 8.88375, 0.44 ) }
    dend_63 { pt3dadd( 36.07, -314.851, 9.01884, 0.37 ) }
    dend_63 { pt3dadd( 36.2058, -315.304, 9.07131, 0.74 ) }
    dend_63 { pt3dadd( 36.4264, -315.995, 9.11994, 0.29 ) }
    dend_63 { pt3dadd( 36.4405, -316.044, 9.12003, 0.29 ) }
    dend_63 { pt3dadd( 36.5207, -316.371, 9.11799, 0.44 ) }
    dend_63 { pt3dadd( 36.5287, -316.421, 9.11688, 0.44 ) }
    dend_63 { pt3dadd( 36.566, -316.872, 9.10095, 0.44 ) }
    dend_63 { pt3dadd( 36.6102, -317.759, 9.08402, 0.22 ) }
    dend_63 { pt3dadd( 36.6453, -318.384, 9.10773, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_53 (entry count 24/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 48.8648, -253.894, -87.1392, 0.29 ) }
    dend_61 { pt3dadd( 49.2525, -253.27, -88.4788, 0.29 ) }
    dend_61 { pt3dadd( 49.2897, -253.189, -88.648, 0.29 ) }
    dend_61 { pt3dadd( 49.4251, -252.781, -89.4276, 0.29 ) }
    dend_61 { pt3dadd( 49.6785, -251.714, -91.2452, 0.29 ) }
    dend_61 { pt3dadd( 49.7926, -251.297, -91.9008, 0.59 ) }
    dend_61 { pt3dadd( 50.1355, -250.022, -93.692, 0.59 ) }
    dend_61 { pt3dadd( 50.3476, -249.223, -94.6424, 0.37 ) }
    dend_61 { pt3dadd( 50.4885, -248.748, -95.1358, 0.66 ) }
    dend_61 { pt3dadd( 50.6661, -248.215, -95.6478, 0.88 ) }
    dend_61 { pt3dadd( 51.3511, -246.279, -97.3773, 0.22 ) }
    dend_61 { pt3dadd( 51.6424, -245.531, -98.0146, 0.44 ) }
    dend_61 { pt3dadd( 51.9093, -244.862, -98.5296, 0.59 ) }
    dend_61 { pt3dadd( 52.4702, -243.732, -99.4224, 0.29 ) }
    dend_61 { pt3dadd( 53.0136, -242.762, -100.239, 0.74 ) }
    dend_61 { pt3dadd( 53.7012, -241.649, -101.245, 1.03 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 40/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 48.8648, -253.894, -87.1392, 0.52 ) }
    dend_54 { pt3dadd( 49.5191, -255.344, -88.854, 0.52 ) }
    dend_54 { pt3dadd( 49.5279, -255.385, -88.896, 0.52 ) }
    dend_54 { pt3dadd( 49.5644, -255.775, -89.2432, 0.52 ) }
    dend_54 { pt3dadd( 49.6179, -257.152, -90.326, 1.33 ) }
    dend_54 { pt3dadd( 49.6234, -257.687, -90.7191, 1.77 ) }
    dend_54 { pt3dadd( 49.619, -258.485, -91.2337, 0.66 ) }
    dend_54 { pt3dadd( 49.5282, -259.483, -91.7485, 0.66 ) }
    dend_54 { pt3dadd( 49.461, -260.835, -92.4056, 0.66 ) }
    dend_54 { pt3dadd( 49.4865, -261.584, -92.743, 0.88 ) }
    dend_54 { pt3dadd( 49.5112, -261.783, -92.8161, 0.88 ) }
    dend_54 { pt3dadd( 49.7594, -263.026, -93.223, 0.88 ) }
    dend_54 { pt3dadd( 49.7721, -263.074, -93.238, 0.88 ) }
    dend_54 { pt3dadd( 50.2515, -264.605, -93.6364, 0.66 ) }
    dend_54 { pt3dadd( 50.7144, -265.804, -93.9309, 0.44 ) }
    dend_54 { pt3dadd( 51.0385, -266.531, -94.1294, 0.96 ) }
    dend_54 { pt3dadd( 51.5405, -267.565, -94.4339, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 57/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -117.998, -154.377, 25.9025, 0.29 ) }
    dend_38 { pt3dadd( -123.125, -157.384, 32.4545, 0.29 ) }
    dend_38 { pt3dadd( -128.684, -159.907, 38.824, 0.29 ) }
    dend_38 { pt3dadd( -134.336, -162.755, 44.988, 0.29 ) }
    dend_38 { pt3dadd( -140.203, -167.797, 49.4507, 0.29 ) }
    dend_38 { pt3dadd( -145.66, -172.605, 54.6269, 0.29 ) }
    dend_38 { pt3dadd( -151.011, -177.18, 60.0983, 0.29 ) }
    dend_38 { pt3dadd( -156.541, -181.397, 65.647, 0.29 ) }
    dend_38 { pt3dadd( -161.771, -186.126, 71.121, 0.29 ) }
    dend_38 { pt3dadd( -166.689, -191.229, 76.5845, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 67/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -117.998, -154.377, 25.9025, 0.44 ) }
    dend_37 { pt3dadd( -121.58, -161.341, 24.2223, 0.29 ) }
    dend_37 { pt3dadd( -125.566, -167.662, 21.515, 0.29 ) }
    dend_37 { pt3dadd( -129.253, -174.319, 19.1321, 0.29 ) }
    dend_37 { pt3dadd( -131.748, -181.535, 16.7202, 0.29 ) }
    dend_37 { pt3dadd( -132.994, -188.976, 14.0244, 0.29 ) }
    dend_37 { pt3dadd( -133.384, -196.35, 10.957, 0.29 ) }
    dend_37 { pt3dadd( -133.742, -203.207, 6.96274, 0.29 ) }
    dend_37 { pt3dadd( -134.804, -209.647, 2.48794, 0.29 ) }
    dend_37 { pt3dadd( -135.481, -217.04, -0.494312, 0.29 ) }
    dend_37 { pt3dadd( -136.908, -224.794, -2.16181, 0.29 ) }
    dend_37 { pt3dadd( -139.376, -232.471, -2.73235, 0.29 ) }
    dend_37 { pt3dadd( -143.544, -239.349, -2.79904, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 80/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 64.2169, 220.145, 80.3146, 0.29 ) }
    dend_10 { pt3dadd( 64.6729, 228.081, 83.3092, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 64.2169, 220.145, 80.3146, 0.44 ) }
    dend_9 { pt3dadd( 65.8079, 230.856, 85.9357, 0.29 ) }
    dend_9 { pt3dadd( 68.064, 241.099, 92.0889, 0.29 ) }
    dend_9 { pt3dadd( 69.777, 251.383, 98.3572, 0.29 ) }
    dend_9 { pt3dadd( 71.9161, 260.767, 105.682, 0.29 ) }
    dend_9 { pt3dadd( 71.8169, 270.672, 112.701, 0.29 ) }
    dend_9 { pt3dadd( 71.8793, 279.722, 120.698, 0.29 ) }
    dend_9 { pt3dadd( 69.9068, 289.586, 127.5, 0.29 ) }
    dend_9 { pt3dadd( 67.5004, 298.822, 134.934, 0.29 ) }
    dend_9 { pt3dadd( 64.5201, 306.151, 143.926, 0.29 ) }
    dend_9 { pt3dadd( 62.9862, 314.045, 152.841, 0.29 ) }
    dend_9 { pt3dadd( 64.2427, 321.393, 162.204, 0.29 ) }
    // Section: dend_83, id: dend_83, parent: dend_73 (entry count 94/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -126.395, -42.4624, 49.5675, 0.22 ) }
    dend_83 { pt3dadd( -127.497, -42.5319, 49.7474, 0.22 ) }
    dend_83 { pt3dadd( -129.32, -42.6468, 50.0449, 0.22 ) }
    dend_83 { pt3dadd( -130.118, -42.697, 50.1751, 0.52 ) }
    dend_83 { pt3dadd( -130.608, -42.7279, 50.255, 0.74 ) }
    dend_83 { pt3dadd( -141.037, -41.4351, 52.7495, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_83 { pt3dadd( -151.258, -40.6301, 56.1243, 0.74 ) }
    dend_83 { pt3dadd( -160.83, -38.1506, 60.5144, 0.74 ) }
    dend_83 { pt3dadd( -169.873, -36.9655, 66.291, 0.74 ) }
    dend_83 { pt3dadd( -178.32, -33.7367, 72.2559, 0.74 ) }
    dend_83 { pt3dadd( -185.258, -30.4094, 79.8767, 0.74 ) }
    dend_83 { pt3dadd( -190.422, -26.2981, 88.4847, 0.74 ) }
    dend_83 { pt3dadd( -195.254, -21.2759, 96.8388, 0.74 ) }
    dend_83 { pt3dadd( -200.536, -15.5307, 104.469, 0.74 ) }
    dend_83 { pt3dadd( -205.015, -10.6902, 113.111, 0.74 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 9/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -126.395, -42.4624, 49.5675, 0.44 ) }
    dend_74 { pt3dadd( -126.422, -41.8271, 49.535, 0.44 ) }
    dend_74 { pt3dadd( -126.448, -41.3665, 49.5048, 0.66 ) }
    dend_74 { pt3dadd( -126.455, -41.2817, 49.4983, 0.66 ) }
    dend_74 { pt3dadd( -126.479, -41.0256, 49.4772, 0.59 ) }
    dend_74 { pt3dadd( -126.527, -40.4391, 49.4239, 0.29 ) }
    dend_74 { pt3dadd( -126.583, -39.5006, 49.329, 0.29 ) }
    dend_74 { pt3dadd( -126.589, -39.4017, 49.3218, 0.29 ) }
    dend_74 { pt3dadd( -126.625, -38.708, 49.2922, 0.52 ) }
    dend_74 { pt3dadd( -126.627, -38.6553, 49.291, 0.52 ) }
    dend_74 { pt3dadd( -126.652, -37.9377, 49.2859, 0.52 ) }
    dend_74 { pt3dadd( -126.662, -37.0626, 49.2896, 1.03 ) }
    dend_74 { pt3dadd( -126.636, -35.9875, 49.3109, 0.29 ) }
    dend_74 { pt3dadd( -126.634, -35.9411, 49.3123, 0.29 ) }
    dend_74 { pt3dadd( -126.573, -35.312, 49.3452, 0.29 ) }
    dend_74 { pt3dadd( -126.505, -34.8706, 49.3671, 0.52 ) }
    dend_74 { pt3dadd( -126.409, -34.4222, 49.3893, 0.52 ) }
    dend_74 { pt3dadd( -126.28, -33.9372, 49.3998, 0.96 ) }
    dend_74 { pt3dadd( -126.269, -33.9007, 49.3991, 0.96 ) }
    dend_74 { pt3dadd( -125.943, -32.8035, 49.3748, 0.29 ) }
    dend_74 { pt3dadd( -125.677, -31.8911, 49.353, 0.29 ) }
    dend_74 { pt3dadd( -125.664, -31.8402, 49.3515, 0.29 ) }
    dend_74 { pt3dadd( -125.509, -31.0011, 49.3166, 0.29 ) }
    dend_74 { pt3dadd( -125.483, -30.7209, 49.2977, 0.59 ) }
    dend_74 { pt3dadd( -125.483, -30.5816, 49.2861, 0.59 ) }
    dend_74 { pt3dadd( -125.532, -30.2114, 49.2466, 0.52 ) }
    dend_74 { pt3dadd( -125.612, -29.822, 49.2096, 0.66 ) }
    dend_74 { pt3dadd( -125.701, -29.4115, 49.1712, 0.66 ) }
    dend_74 { pt3dadd( -125.852, -28.7772, 49.1134, 0.29 ) }
    dend_74 { pt3dadd( -125.872, -28.68, 49.1099, 0.29 ) }
    dend_74 { pt3dadd( -125.942, -28.2574, 49.1121, 0.29 ) }
    dend_74 { pt3dadd( -125.981, -27.923, 49.1527, 0.52 ) }
    dend_74 { pt3dadd( -125.984, -27.879, 49.1614, 0.52 ) }
    dend_74 { pt3dadd( -125.997, -27.2448, 49.3137, 0.37 ) }
    dend_74 { pt3dadd( -125.981, -26.4812, 49.5214, 0.59 ) }
    dend_74 { pt3dadd( -125.959, -26.1051, 49.6219, 0.96 ) }
    dend_74 { pt3dadd( -125.87, -25.0556, 49.9031, 0.37 ) }
    dend_74 { pt3dadd( -125.862, -24.9934, 49.921, 0.37 ) }
    dend_74 { pt3dadd( -125.74, -24.2782, 50.1277, 0.37 ) }
    dend_74 { pt3dadd( -125.731, -24.235, 50.1401, 0.37 ) }
    dend_74 { pt3dadd( -125.611, -23.7351, 50.2587, 0.37 ) }
    dend_74 { pt3dadd( -125.585, -23.5955, 50.2789, 0.37 ) }
    dend_74 { pt3dadd( -125.493, -22.5989, 50.3044, 0.59 ) }
    dend_74 { pt3dadd( -125.485, -22.4147, 50.3048, 0.88 ) }
    dend_74 { pt3dadd( -125.485, -22.3681, 50.3032, 0.88 ) }
    dend_74 { pt3dadd( -125.482, -21.9908, 50.2798, 0.88 ) }
    dend_74 { pt3dadd( -125.469, -20.6281, 50.1517, 0.29 ) }
    dend_74 { pt3dadd( -125.441, -19.4516, 49.9693, 0.29 ) }
    dend_74 { pt3dadd( -125.436, -19.2853, 49.9348, 0.29 ) }
    dend_74 { pt3dadd( -125.385, -17.9297, 49.6794, 0.29 ) }
    dend_74 { pt3dadd( -125.382, -17.7405, 49.6474, 0.29 ) }
    dend_74 { pt3dadd( -125.382, -16.8393, 49.5095, 0.37 ) }
    dend_74 { pt3dadd( -125.417, -15.7212, 49.367, 0.37 ) }
    dend_74 { pt3dadd( -125.454, -15.1685, 49.3393, 0.37 ) }
    dend_74 { pt3dadd( -125.541, -14.3144, 49.3562, 0.29 ) }
    dend_74 { pt3dadd( -125.674, -13.4711, 49.4258, 0.29 ) }
    dend_74 { pt3dadd( -125.693, -13.3749, 49.4393, 0.29 ) }
    dend_74 { pt3dadd( -125.809, -12.9415, 49.5549, 0.29 ) }
    dend_74 { pt3dadd( -126.145, -11.9227, 49.9916, 1.18 ) }
    dend_74 { pt3dadd( -126.21, -11.7237, 50.0831, 1.47 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 69/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 51.5405, -267.565, -94.4339, 0.88 ) }
    dend_56 { pt3dadd( 51.4611, -268.361, -95.0508, 0.88 ) }
    dend_56 { pt3dadd( 51.3904, -268.935, -95.4514, 1.47 ) }
    dend_56 { pt3dadd( 51.3235, -269.508, -95.8009, 1.69 ) }
    dend_56 { pt3dadd( 51.1975, -270.702, -96.4242, 0.59 ) }
    dend_56 { pt3dadd( 51.1948, -270.743, -96.444, 0.59 ) }
    dend_56 { pt3dadd( 51.1616, -271.494, -96.7799, 0.29 ) }
    dend_56 { pt3dadd( 51.1497, -272.095, -97.0054, 0.44 ) }
    dend_56 { pt3dadd( 51.1918, -272.63, -97.2083, 0.66 ) }
    dend_56 { pt3dadd( 51.3223, -273.223, -97.4651, 1.11 ) }
    dend_56 { pt3dadd( 51.4909, -273.809, -97.7187, 1.47 ) }
    dend_56 { pt3dadd( 51.5814, -274.106, -97.8592, 1.47 ) }
    dend_56 { pt3dadd( 51.5959, -274.153, -97.8832, 1.47 ) }
    dend_56 { pt3dadd( 51.9471, -275.529, -98.5967, 1.11 ) }
    dend_56 { pt3dadd( 52.1342, -276.758, -99.23, 0.59 ) }
    dend_56 { pt3dadd( 52.1725, -277.388, -99.5167, 0.81 ) }
    dend_56 { pt3dadd( 52.1671, -277.97, -99.7364, 1.11 ) }
    dend_56 { pt3dadd( 52.1383, -278.571, -99.9126, 1.25 ) }
    dend_56 { pt3dadd( 52.0558, -279.457, -100.102, 0.66 ) }
    dend_56 { pt3dadd( 51.8929, -280.467, -100.224, 0.52 ) }
    dend_56 { pt3dadd( 51.7169, -281.432, -100.295, 1.03 ) }
    dend_56 { pt3dadd( 51.6433, -281.908, -100.335, 1.25 ) }
    dend_56 { pt3dadd( 51.5232, -282.916, -100.425, 0.66 ) }
    dend_56 { pt3dadd( 51.5005, -283.219, -100.462, 0.44 ) }
    dend_56 { pt3dadd( 51.4962, -283.616, -100.518, 0.96 ) }
    dend_56 { pt3dadd( 51.5102, -283.966, -100.575, 1.25 ) }
    dend_56 { pt3dadd( 51.5608, -284.866, -100.754, 1.11 ) }
    dend_56 { pt3dadd( 51.6117, -285.578, -100.917, 0.96 ) }
    dend_56 { pt3dadd( 51.6564, -286.352, -101.08, 0.66 ) }
    dend_56 { pt3dadd( 51.6763, -287.164, -101.23, 0.59 ) }
    dend_56 { pt3dadd( 51.6762, -287.219, -101.239, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_56 { pt3dadd( 51.6347, -287.837, -101.327, 0.59 ) }
    dend_56 { pt3dadd( 51.471, -288.646, -101.443, 0.52 ) }
    dend_56 { pt3dadd( 51.1909, -289.406, -101.588, 0.81 ) }
    dend_56 { pt3dadd( 50.8848, -289.942, -101.725, 1.03 ) }
    dend_56 { pt3dadd( 50.8359, -290.007, -101.748, 1.03 ) }
    dend_56 { pt3dadd( 50.4493, -290.47, -101.936, 1.03 ) }
    dend_56 { pt3dadd( 49.8694, -291.049, -102.219, 0.52 ) }
    dend_56 { pt3dadd( 49.513, -291.35, -102.392, 1.11 ) }
    dend_56 { pt3dadd( 49.1289, -291.661, -102.632, 1.33 ) }
    dend_56 { pt3dadd( 49.0897, -291.689, -102.656, 1.33 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 10/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 51.5405, -267.565, -94.4339, 0.52 ) }
    dend_55 { pt3dadd( 51.3909, -268.043, -93.6852, 0.52 ) }
    dend_55 { pt3dadd( 51.0628, -268.905, -92.2929, 0.29 ) }
    dend_55 { pt3dadd( 50.8733, -269.43, -91.4794, 0.59 ) }
    dend_55 { pt3dadd( 50.7366, -269.745, -90.9836, 0.96 ) }
    dend_55 { pt3dadd( 50.309, -270.709, -89.4701, 0.22 ) }
    dend_55 { pt3dadd( 50.0282, -271.362, -88.437, 0.59 ) }
    dend_55 { pt3dadd( 50.0131, -271.396, -88.3812, 0.59 ) }
    dend_55 { pt3dadd( 49.8497, -271.876, -87.6359, 0.52 ) }
    dend_55 { pt3dadd( 49.5766, -272.657, -86.5508, 0.37 ) }
    dend_55 { pt3dadd( 49.4645, -273.03, -86.1051, 0.81 ) }
    dend_55 { pt3dadd( 49.4049, -273.362, -85.7724, 0.96 ) }
    dend_55 { pt3dadd( 49.2976, -274.246, -84.9656, 0.37 ) }
    dend_55 { pt3dadd( 49.3206, -275.078, -84.2801, 0.37 ) }
    dend_55 { pt3dadd( 49.4789, -275.906, -83.6891, 0.44 ) }
    dend_55 { pt3dadd( 49.6545, -276.403, -83.3867, 0.44 ) }
    dend_55 { pt3dadd( 49.9015, -277.078, -82.9837, 0.22 ) }
    dend_55 { pt3dadd( 50.0877, -277.544, -82.6929, 0.44 ) }
    dend_55 { pt3dadd( 50.8341, -279.186, -81.5815, 0.37 ) }
    dend_55 { pt3dadd( 51.1425, -279.805, -81.1278, 0.52 ) }
    dend_55 { pt3dadd( 51.4952, -280.47, -80.6083, 0.59 ) }
    dend_55 { pt3dadd( 51.8624, -281.182, -79.9867, 0.81 ) }
    dend_55 { pt3dadd( 52.1921, -281.89, -79.3079, 0.29 ) }
    dend_55 { pt3dadd( 52.426, -282.481, -78.6604, 0.52 ) }
    dend_55 { pt3dadd( 52.5087, -282.774, -78.2851, 0.81 ) }
    dend_55 { pt3dadd( 52.617, -283.04, -77.8933, 1.11 ) }
    dend_55 { pt3dadd( 52.6749, -283.142, -77.7251, 1.11 ) }
    dend_55 { pt3dadd( 52.8148, -283.328, -77.3944, 0.96 ) }
    dend_55 { pt3dadd( 53.0217, -283.606, -76.7414, 0.59 ) }
    dend_55 { pt3dadd( 53.2127, -283.94, -75.5704, 0.29 ) }
    dend_55 { pt3dadd( 53.2601, -284.094, -74.9755, 0.52 ) }
    dend_55 { pt3dadd( 53.2741, -284.212, -74.504, 0.66 ) }
    dend_55 { pt3dadd( 53.2734, -284.23, -74.4418, 0.66 ) }
    dend_55 { pt3dadd( 53.1774, -284.724, -72.8765, 0.52 ) }
    dend_55 { pt3dadd( 53.0591, -285.136, -71.6874, 0.74 ) }
    dend_55 { pt3dadd( 52.9266, -285.561, -70.5191, 0.22 ) }
    dend_55 { pt3dadd( 52.9005, -285.693, -70.2079, 0.74 ) }
    dend_55 { pt3dadd( 52.8617, -285.968, -69.6545, 0.81 ) }
    dend_55 { pt3dadd( 52.817, -286.672, -68.476, 0.22 ) }
    dend_55 { pt3dadd( 52.831, -286.94, -68.1368, 0.66 ) }
    dend_55 { pt3dadd( 52.852, -287.222, -67.8311, 0.74 ) }
    dend_55 { pt3dadd( 52.8726, -287.969, -67.1085, 0.22 ) }
    dend_55 { pt3dadd( 52.8489, -288.668, -66.4919, 0.66 ) }
    dend_55 { pt3dadd( 52.8329, -288.928, -66.2827, 0.81 ) }
    dend_55 { pt3dadd( 52.7906, -289.444, -65.9304, 0.52 ) }
    dend_55 { pt3dadd( 52.7862, -289.491, -65.8994, 0.52 ) }
    dend_55 { pt3dadd( 52.7311, -290.241, -65.4419, 0.22 ) }
    dend_55 { pt3dadd( 52.6947, -291.276, -64.875, 0.74 ) }
    dend_55 { pt3dadd( 52.7598, -291.829, -64.599, 0.81 ) }
    dend_55 { pt3dadd( 52.7834, -291.946, -64.5409, 0.81 ) }
    dend_55 { pt3dadd( 52.9564, -292.495, -64.2649, 0.59 ) }
    dend_55 { pt3dadd( 53.2241, -293.014, -64.0228, 0.29 ) }
    dend_55 { pt3dadd( 53.5935, -293.568, -63.8005, 1.03 ) }
    dend_55 { pt3dadd( 54.2257, -294.469, -63.5296, 1.03 ) }
    dend_55 { pt3dadd( 54.3442, -294.649, -63.4896, 1.25 ) }
    dend_55 { pt3dadd( 54.7502, -295.384, -63.3793, 0.66 ) }
    dend_55 { pt3dadd( 55.3503, -296.69, -63.2564, 0.52 ) }
    dend_55 { pt3dadd( 55.6514, -297.543, -63.2029, 0.37 ) }
    dend_55 { pt3dadd( 55.8297, -298.239, -63.1904, 0.29 ) }
    dend_55 { pt3dadd( 55.9096, -298.929, -63.2059, 0.29 ) }
    dend_55 { pt3dadd( 55.9445, -300.127, -63.2646, 0.29 ) }
    dend_55 { pt3dadd( 55.9398, -300.542, -63.2963, 0.81 ) }
    dend_55 { pt3dadd( 55.9184, -301.115, -63.3357, 1.03 ) }
    dend_55 { pt3dadd( 55.9196, -301.185, -63.3368, 1.03 ) }
    dend_55 { pt3dadd( 56.0006, -302.162, -63.2915, 0.59 ) }
    dend_55 { pt3dadd( 56.082, -303.088, -63.1762, 0.44 ) }
    dend_55 { pt3dadd( 56.1489, -304.129, -63.0109, 0.88 ) }
    dend_55 { pt3dadd( 56.161, -304.424, -62.9574, 1.25 ) }
    dend_55 { pt3dadd( 56.1534, -304.942, -62.8315, 1.55 ) }
    dend_55 { pt3dadd( 56.1147, -305.597, -62.6234, 0.29 ) }
    dend_55 { pt3dadd( 55.8662, -306.601, -62.1326, 0.29 ) }
    dend_55 { pt3dadd( 55.5395, -307.428, -61.6379, 0.29 ) }
    dend_55 { pt3dadd( 55.5151, -307.48, -61.6057, 0.29 ) }
    dend_55 { pt3dadd( 55.1243, -308.282, -61.115, 1.47 ) }
    dend_55 { pt3dadd( 54.7838, -308.978, -60.7037, 1.77 ) }
    dend_55 { pt3dadd( 53.9008, -310.799, -59.6302, 0.37 ) }
    dend_55 { pt3dadd( 53.5976, -311.423, -59.2596, 0.22 ) }
    dend_55 { pt3dadd( 53.1835, -312.243, -58.7606, 0.29 ) }
    dend_55 { pt3dadd( 52.9956, -312.627, -58.545, 0.52 ) }
    dend_55 { pt3dadd( 52.7611, -313.154, -58.3031, 0.66 ) }
    dend_55 { pt3dadd( 52.736, -313.215, -58.282, 0.66 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 91/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -205.015, -10.6902, 113.111, 0.37 ) }
    dend_85 { pt3dadd( -212.806, -7.47823, 118.86, 0.37 ) }
    dend_85 { pt3dadd( -221.191, -5.65953, 124.332, 0.37 ) }
    dend_85 { pt3dadd( -228.294, -2.86061, 131.075, 0.37 ) }
    dend_85 { pt3dadd( -235.703, -1.58109, 137.917, 0.37 ) }
    dend_85 { pt3dadd( -244.046, -2.68482, 143.628, 0.37 ) }
    dend_85 { pt3dadd( -251.556, -3.25596, 150.459, 0.37 ) }
    dend_85 { pt3dadd( -258.299, -4.68459, 157.956, 0.37 ) }
    dend_85 { pt3dadd( -262.839, -6.8529, 166.845, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_85 { pt3dadd( -266.539, -11.6866, 175.181, 0.37 ) }
    dend_85 { pt3dadd( -269.989, -18.2511, 182.491, 0.37 ) }
    dend_85 { pt3dadd( -272.453, -24.7448, 190.261, 0.37 ) }
    dend_85 { pt3dadd( -274.873, -31.2005, 198.075, 0.37 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 4/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -205.015, -10.6902, 113.111, 0.29 ) }
    dend_84 { pt3dadd( -214.635, -6.66011, 120.269, 0.37 ) }
    dend_84 { pt3dadd( -224.802, -2.72698, 126.693, 0.37 ) }
    dend_84 { pt3dadd( -235.421, -0.103494, 132.993, 0.37 ) }
    dend_84 { pt3dadd( -244.289, 5.04056, 140.457, 0.37 ) }
    dend_84 { pt3dadd( -252.12, 9.93858, 149.12, 0.37 ) }
    dend_84 { pt3dadd( -260.334, 13.1926, 158.136, 0.37 ) }
    dend_84 { pt3dadd( -270.299, 17.1349, 164.859, 0.37 ) }
    dend_84 { pt3dadd( -281.476, 21.5841, 168.879, 0.37 ) }
    // Section: dend_82, id: dend_82, parent: dend_74 (entry count 13/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -126.21, -11.7237, 50.0831, 0.59 ) }
    dend_82 { pt3dadd( -125.076, -11.1062, 50.6676, 0.59 ) }
    dend_82 { pt3dadd( -125.025, -11.0794, 50.6947, 0.59 ) }
    dend_82 { pt3dadd( -124.022, -10.4467, 51.2131, 0.29 ) }
    dend_82 { pt3dadd( -123.504, -10.0493, 51.447, 0.29 ) }
    dend_82 { pt3dadd( -123.456, -10.0093, 51.4672, 0.29 ) }
    dend_82 { pt3dadd( -122.438, -9.05036, 51.8258, 0.29 ) }
    dend_82 { pt3dadd( -122.407, -9.01426, 51.8332, 0.29 ) }
    dend_82 { pt3dadd( -121.58, -7.96234, 51.9662, 0.29 ) }
    dend_82 { pt3dadd( -120.663, -6.76636, 52.0053, 0.29 ) }
    dend_82 { pt3dadd( -120.588, -6.66957, 52.0035, 0.29 ) }
    dend_82 { pt3dadd( -119.771, -5.67048, 51.9525, 0.74 ) }
    dend_82 { pt3dadd( -119.066, -4.85899, 51.9093, 0.29 ) }
    dend_82 { pt3dadd( -118.859, -4.64825, 51.9182, 0.29 ) }
    dend_82 { pt3dadd( -117.793, -3.66653, 51.9889, 0.29 ) }
    dend_82 { pt3dadd( -117.277, -3.23836, 52.0461, 0.29 ) }
    dend_82 { pt3dadd( -116.417, -2.58445, 52.1822, 0.29 ) }
    dend_82 { pt3dadd( -115.328, -1.87975, 52.4572, 0.29 ) }
    dend_82 { pt3dadd( -114.379, -1.33422, 52.7567, 0.88 ) }
    dend_82 { pt3dadd( -109.844, 5.08465, 54.3716, 0.88 ) }
    dend_82 { pt3dadd( -106.246, 11.6959, 57.2011, 0.88 ) }
    dend_82 { pt3dadd( -102.401, 18.4513, 59.2969, 0.88 ) }
    dend_82 { pt3dadd( -97.985, 24.9389, 60.9927, 0.88 ) }
    dend_82 { pt3dadd( -93.3371, 31.0672, 63.2051, 0.88 ) }
    dend_82 { pt3dadd( -89.24, 37.6707, 65.2613, 0.88 ) }
    dend_82 { pt3dadd( -84.6481, 43.8097, 67.5626, 0.88 ) }
    dend_82 { pt3dadd( -79.2548, 49.132, 69.9664, 0.88 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 40/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -126.21, -11.7237, 50.0831, 0.59 ) }
    dend_75 { pt3dadd( -126.72, -10.4852, 50.3356, 0.59 ) }
    dend_75 { pt3dadd( -127.129, -9.3754, 50.592, 0.59 ) }
    dend_75 { pt3dadd( -127.479, -8.27917, 50.8921, 0.37 ) }
    dend_75 { pt3dadd( -127.891, -6.87404, 51.2929, 0.29 ) }
    dend_75 { pt3dadd( -128.211, -5.54323, 51.7215, 0.29 ) }
    dend_75 { pt3dadd( -128.23, -5.44993, 51.7532, 0.29 ) }
    dend_75 { pt3dadd( -128.422, -4.27029, 52.1946, 0.29 ) }
    dend_75 { pt3dadd( -128.575, -3.23318, 52.6107, 0.66 ) }
    dend_75 { pt3dadd( -128.66, -2.57382, 52.8517, 0.81 ) }
    dend_75 { pt3dadd( -128.863, -1.09103, 53.2712, 0.29 ) }
    dend_75 { pt3dadd( -128.878, -0.994561, 53.2965, 0.29 ) }
    dend_75 { pt3dadd( -129.091, 0.302554, 53.5534, 0.29 ) }
    dend_75 { pt3dadd( -129.107, 0.389885, 53.5637, 0.29 ) }
    dend_75 { pt3dadd( -129.353, 1.79918, 53.6043, 0.52 ) }
    dend_75 { pt3dadd( -129.547, 2.77012, 53.574, 0.74 ) }
    dend_75 { pt3dadd( -129.573, 2.86774, 53.5652, 0.74 ) }
    dend_75 { pt3dadd( -129.824, 3.76248, 53.5329, 0.74 ) }
    dend_75 { pt3dadd( -129.848, 3.84839, 53.5328, 0.74 ) }
    dend_75 { pt3dadd( -130.258, 5.08054, 53.5676, 0.29 ) }
    dend_75 { pt3dadd( -130.73, 6.35611, 53.6403, 0.29 ) }
    dend_75 { pt3dadd( -131.413, 8.06562, 53.7602, 0.29 ) }
    dend_75 { pt3dadd( -131.981, 9.54252, 53.8442, 0.29 ) }
    dend_75 { pt3dadd( -132.037, 9.71178, 53.8534, 0.29 ) }
    dend_75 { pt3dadd( -132.368, 11.1254, 53.8916, 0.29 ) }
    dend_75 { pt3dadd( -132.384, 11.2136, 53.8925, 0.29 ) }
    dend_75 { pt3dadd( -132.485, 12.6565, 53.8582, 0.29 ) }
    dend_75 { pt3dadd( -132.501, 14.8412, 53.7456, 0.29 ) }
    dend_75 { pt3dadd( -132.48, 17.7106, 53.5148, 0.29 ) }
    dend_75 { pt3dadd( -132.432, 20.3324, 53.29, 0.29 ) }
    dend_75 { pt3dadd( -132.43, 20.5082, 53.278, 0.29 ) }
    dend_75 { pt3dadd( -132.431, 23.1246, 53.1347, 0.29 ) }
    dend_75 { pt3dadd( -132.433, 23.3127, 53.1263, 0.29 ) }
    dend_75 { pt3dadd( -132.572, 26.3531, 53.0242, 0.29 ) }
    dend_75 { pt3dadd( -132.581, 26.4542, 53.0213, 0.29 ) }
    dend_75 { pt3dadd( -132.965, 29.1637, 53.0072, 0.29 ) }
    dend_75 { pt3dadd( -132.986, 29.263, 53.008, 0.29 ) }
    dend_75 { pt3dadd( -133.589, 31.2744, 53.0137, 0.29 ) }
    dend_75 { pt3dadd( -133.759, 31.7891, 53.0012, 0.74 ) }
    dend_75 { pt3dadd( -133.793, 31.8844, 52.9974, 0.74 ) }
    dend_75 { pt3dadd( -134.034, 32.5204, 52.9472, 0.59 ) }
    dend_75 { pt3dadd( -134.746, 34.0842, 52.6508, 0.29 ) }
    dend_75 { pt3dadd( -135.242, 35.0139, 52.4622, 0.88 ) }
    dend_75 { pt3dadd( -135.662, 35.5588, 52.3315, 0.96 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 84/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 49.0897, -291.689, -102.656, 0.52 ) }
    dend_60 { pt3dadd( 48.5044, -292.58, -102.597, 0.52 ) }
    dend_60 { pt3dadd( 48.0627, -293.296, -102.554, 0.37 ) }
    dend_60 { pt3dadd( 47.6561, -293.992, -102.483, 0.29 ) }
    dend_60 { pt3dadd( 47.3331, -294.522, -102.42, 0.66 ) }
    dend_60 { pt3dadd( 47.047, -294.982, -102.364, 0.66 ) }
    dend_60 { pt3dadd( 47.0068, -295.045, -102.356, 0.66 ) }
    dend_60 { pt3dadd( 46.7419, -295.478, -102.303, 0.59 ) }
    dend_60 { pt3dadd( 46.2591, -296.233, -102.225, 0.29 ) }
    dend_60 { pt3dadd( 45.7668, -297.025, -102.152, 0.29 ) }
    dend_60 { pt3dadd( 45.5725, -297.359, -102.126, 0.66 ) }
    dend_60 { pt3dadd( 45.2766, -297.911, -102.089, 0.96 ) }
    dend_60 { pt3dadd( 45.0634, -298.378, -102.06, 1.18 ) }
    dend_60 { pt3dadd( 44.6734, -299.36, -102.013, 0.29 ) }
    dend_60 { pt3dadd( 44.4532, -300.008, -101.997, 0.29 ) }
    dend_60 { pt3dadd( 44.3315, -300.394, -101.984, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_60 { pt3dadd( 44.2801, -300.525, -101.964, 0.52 ) }
    dend_60 { pt3dadd( 44.0324, -301.005, -101.827, 0.22 ) }
    dend_60 { pt3dadd( 43.7593, -301.391, -101.665, 0.44 ) }
    dend_60 { pt3dadd( 43.4719, -301.705, -101.463, 0.66 ) }
    dend_60 { pt3dadd( 43.0724, -302.088, -101.197, 0.66 ) }
    dend_60 { pt3dadd( 42.0889, -302.982, -100.587, 0.29 ) }
    dend_60 { pt3dadd( 41.8074, -303.245, -100.421, 0.96 ) }
    dend_60 { pt3dadd( 41.5241, -303.532, -100.257, 1.25 ) }
    dend_60 { pt3dadd( 40.6341, -304.594, -99.7142, 0.52 ) }
    dend_60 { pt3dadd( 40.1369, -305.303, -99.4134, 0.52 ) }
    dend_60 { pt3dadd( 39.7625, -305.916, -99.209, 0.29 ) }
    dend_60 { pt3dadd( 39.4484, -306.462, -99.092, 0.37 ) }
    dend_60 { pt3dadd( 39.1075, -307.032, -98.9964, 0.44 ) }
    dend_60 { pt3dadd( 38.8393, -307.408, -98.9599, 0.44 ) }
    dend_60 { pt3dadd( 38.3788, -307.942, -98.9708, 0.22 ) }
    dend_60 { pt3dadd( 38.0829, -308.205, -98.9845, 0.37 ) }
    dend_60 { pt3dadd( 37.5452, -308.581, -98.9733, 0.59 ) }
    dend_60 { pt3dadd( 36.804, -309.015, -98.9278, 1.18 ) }
    dend_60 { pt3dadd( 36.0868, -309.397, -98.8309, 0.74 ) }
    dend_60 { pt3dadd( 36.0224, -309.43, -98.8183, 0.74 ) }
    dend_60 { pt3dadd( 34.9867, -309.982, -98.5462, 0.37 ) }
    dend_60 { pt3dadd( 34.007, -310.571, -98.2134, 0.29 ) }
    dend_60 { pt3dadd( 33.7693, -310.72, -98.0991, 0.59 ) }
    dend_60 { pt3dadd( 33.1957, -311.045, -97.719, 0.74 ) }
    dend_60 { pt3dadd( 33.1318, -311.075, -97.6641, 0.74 ) }
    dend_60 { pt3dadd( 32.8021, -311.202, -97.2956, 0.74 ) }
    dend_60 { pt3dadd( 32.7694, -311.209, -97.2546, 0.74 ) }
    dend_60 { pt3dadd( 32.147, -311.289, -96.4721, 0.29 ) }
    dend_60 { pt3dadd( 31.42, -311.344, -95.5535, 0.59 ) }
    dend_60 { pt3dadd( 30.8048, -311.364, -94.7651, 0.96 ) }
    dend_60 { pt3dadd( 29.7396, -311.382, -93.3738, 0.59 ) }
    dend_60 { pt3dadd( 29.3037, -311.379, -92.7879, 0.29 ) }
    dend_60 { pt3dadd( 29.2656, -311.379, -92.7361, 0.29 ) }
    dend_60 { pt3dadd( 28.5745, -311.414, -91.7582, 0.88 ) }
    dend_60 { pt3dadd( 27.9668, -311.442, -90.8482, 1.03 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 49.0897, -291.689, -102.656, 0.52 ) }
    dend_57 { pt3dadd( 49.849, -293.393, -103.845, 0.52 ) }
    dend_57 { pt3dadd( 49.8821, -293.484, -103.902, 0.52 ) }
    dend_57 { pt3dadd( 50.302, -294.843, -104.725, 0.66 ) }
    dend_57 { pt3dadd( 51.0499, -297.814, -106.415, 0.44 ) }
    dend_57 { pt3dadd( 51.5195, -300.014, -107.674, 0.37 ) }
    dend_57 { pt3dadd( 51.7126, -301.214, -108.344, 0.66 ) }
    dend_57 { pt3dadd( 51.809, -302.554, -109.045, 0.88 ) }
    dend_57 { pt3dadd( 51.8397, -304.057, -109.837, 0.88 ) }
    dend_57 { pt3dadd( 51.7899, -305.391, -110.53, 0.88 ) }
    dend_57 { pt3dadd( 51.6959, -307.216, -111.434, 0.59 ) }
    dend_57 { pt3dadd( 51.6898, -308.896, -112.255, 0.37 ) }
    dend_57 { pt3dadd( 51.807, -310.67, -113.138, 0.37 ) }
    dend_57 { pt3dadd( 52.1019, -312.602, -114.09, 0.74 ) }
    dend_57 { pt3dadd( 52.2809, -313.44, -114.474, 1.11 ) }
    dend_57 { pt3dadd( 53.0949, -316.406, -115.868, 0.74 ) }
    dend_57 { pt3dadd( 53.527, -317.816, -116.532, 0.44 ) }
    dend_57 { pt3dadd( 53.5563, -317.914, -116.579, 0.44 ) }
    dend_57 { pt3dadd( 54.1205, -320.002, -117.559, 1.03 ) }
    dend_57 { pt3dadd( 54.3308, -321.11, -118.033, 1.33 ) }
    dend_57 { pt3dadd( 54.5226, -323.558, -119.029, 0.66 ) }
    dend_57 { pt3dadd( 54.4154, -325.742, -119.808, 0.66 ) }
    dend_57 { pt3dadd( 54.1829, -327.891, -120.54, 0.88 ) }
    dend_57 { pt3dadd( 54.1688, -328.003, -120.572, 0.88 ) }
    dend_57 { pt3dadd( 53.9253, -329.687, -120.968, 1.11 ) }
    dend_57 { pt3dadd( 53.5566, -332.218, -121.458, 1.03 ) }
    dend_57 { pt3dadd( 53.2587, -334.114, -121.699, 0.52 ) }
    dend_57 { pt3dadd( 53.2451, -334.229, -121.721, 0.52 ) }
    dend_57 { pt3dadd( 53.0801, -336.161, -122.258, 0.88 ) }
    dend_57 { pt3dadd( 52.9912, -337.396, -122.677, 0.96 ) }
    dend_57 { pt3dadd( 52.9608, -338.485, -123.182, 0.96 ) }
    dend_57 { pt3dadd( 52.9684, -339.588, -123.874, 0.66 ) }
    dend_57 { pt3dadd( 52.9177, -342.64, -126.142, 0.44 ) }
    dend_57 { pt3dadd( 52.8825, -343.748, -127.016, 0.96 ) }
    dend_57 { pt3dadd( 52.8246, -344.745, -127.879, 1.25 ) }
    dend_57 { pt3dadd( 52.7059, -346.78, -129.701, 1.11 ) }
    dend_57 { pt3dadd( 52.6469, -348.539, -131.389, 0.74 ) }
    dend_57 { pt3dadd( 52.621, -349.448, -132.326, 0.74 ) }
    // Section: dend_81, id: dend_81, parent: dend_75 (entry count 73/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -135.662, 35.5588, 52.3315, 0.29 ) }
    dend_81 { pt3dadd( -136.763, 35.9487, 52.2921, 0.29 ) }
    dend_81 { pt3dadd( -136.83, 35.9687, 52.2899, 0.29 ) }
    dend_81 { pt3dadd( -137.639, 36.2649, 52.1599, 0.29 ) }
    dend_81 { pt3dadd( -137.702, 36.2897, 52.1468, 0.29 ) }
    dend_81 { pt3dadd( -138.423, 36.6158, 52.0103, 0.66 ) }
    dend_81 { pt3dadd( -138.97, 36.8858, 51.916, 0.81 ) }
    dend_81 { pt3dadd( -139.017, 36.9098, 51.9083, 0.81 ) }
    dend_81 { pt3dadd( -140.444, 37.6482, 51.7813, 0.29 ) }
    dend_81 { pt3dadd( -140.575, 37.7172, 51.7761, 0.29 ) }
    dend_81 { pt3dadd( -141.616, 38.2894, 51.7951, 0.29 ) }
    dend_81 { pt3dadd( -142.814, 38.9839, 51.8875, 0.29 ) }
    dend_81 { pt3dadd( -142.867, 39.0149, 51.8954, 0.29 ) }
    dend_81 { pt3dadd( -143.962, 39.6324, 52.1407, 0.44 ) }
    dend_81 { pt3dadd( -144.013, 39.6614, 52.1586, 0.44 ) }
    dend_81 { pt3dadd( -144.422, 39.9073, 52.3094, 0.44 ) }
    dend_81 { pt3dadd( -144.47, 39.9382, 52.3286, 0.44 ) }
    dend_81 { pt3dadd( -145.307, 40.5634, 52.6861, 0.29 ) }
    dend_81 { pt3dadd( -145.404, 40.6469, 52.7197, 0.29 ) }
    dend_81 { pt3dadd( -146.027, 41.2619, 52.8783, 0.29 ) }
    dend_81 { pt3dadd( -146.333, 41.5761, 52.9568, 0.59 ) }
    dend_81 { pt3dadd( -146.423, 41.6723, 52.9801, 0.59 ) }
    dend_81 { pt3dadd( -146.693, 41.9569, 53.0477, 0.59 ) }
    dend_81 { pt3dadd( -147.358, 42.6474, 53.2068, 0.37 ) }
    dend_81 { pt3dadd( -147.457, 42.7439, 53.2293, 0.37 ) }
    dend_81 { pt3dadd( -147.983, 43.2768, 53.3067, 0.37 ) }
    dend_81 { pt3dadd( -148.026, 43.3222, 53.3111, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_81 { pt3dadd( -148.617, 43.932, 53.3487, 0.37 ) }
    dend_81 { pt3dadd( -148.711, 44.027, 53.3515, 0.37 ) }
    dend_81 { pt3dadd( -149.342, 44.6023, 53.3723, 0.37 ) }
    dend_81 { pt3dadd( -150.194, 45.3027, 53.4042, 0.22 ) }
    dend_81 { pt3dadd( -150.307, 45.382, 53.4109, 0.22 ) }
    dend_81 { pt3dadd( -150.947, 45.7701, 53.4668, 0.22 ) }
    dend_81 { pt3dadd( -151.002, 45.7974, 53.4739, 0.22 ) }
    dend_81 { pt3dadd( -151.753, 45.9767, 53.695, 0.81 ) }
    dend_81 { pt3dadd( -152.015, 45.9976, 53.7977, 0.81 ) }
    dend_81 { pt3dadd( -152.749, 45.9872, 54.0995, 0.22 ) }
    dend_81 { pt3dadd( -152.807, 45.9823, 54.1205, 0.22 ) }
    dend_81 { pt3dadd( -153.448, 45.8798, 54.3619, 0.22 ) }
    dend_81 { pt3dadd( -155.243, 45.5519, 54.9887, 0.22 ) }
    dend_81 { pt3dadd( -155.365, 45.5285, 55.0287, 0.22 ) }
    dend_81 { pt3dadd( -156.234, 45.363, 55.3054, 0.22 ) }
    dend_81 { pt3dadd( -157.064, 45.2048, 55.5584, 0.22 ) }
    dend_81 { pt3dadd( -158.326, 44.9902, 55.9244, 0.22 ) }
    dend_81 { pt3dadd( -159.227, 44.8652, 56.1679, 0.22 ) }
    dend_81 { pt3dadd( -159.294, 44.8624, 56.1833, 0.22 ) }
    dend_81 { pt3dadd( -160.292, 44.9707, 56.4365, 0.52 ) }
    dend_81 { pt3dadd( -160.577, 45.0802, 56.5247, 0.81 ) }
    dend_81 { pt3dadd( -160.681, 45.1514, 56.5597, 0.81 ) }
    dend_81 { pt3dadd( -160.915, 45.3739, 56.6294, 0.81 ) }
    dend_81 { pt3dadd( -160.963, 45.4255, 56.637, 0.81 ) }
    dend_81 { pt3dadd( -161.682, 46.2047, 56.66, 0.37 ) }
    dend_81 { pt3dadd( -162.075, 46.6554, 56.6326, 0.59 ) }
    dend_81 { pt3dadd( -162.115, 46.7025, 56.6276, 0.59 ) }
    dend_81 { pt3dadd( -162.615, 47.3071, 56.5592, 0.44 ) }
    dend_81 { pt3dadd( -163.435, 48.3456, 56.3056, 0.29 ) }
    dend_81 { pt3dadd( -163.513, 48.4478, 56.2716, 0.29 ) }
    dend_81 { pt3dadd( -163.95, 49.0203, 55.9463, 0.29 ) }
    dend_81 { pt3dadd( -163.979, 49.0578, 55.9206, 0.29 ) }
    dend_81 { pt3dadd( -164.417, 49.6105, 55.5087, 0.29 ) }
    dend_81 { pt3dadd( -165.127, 50.5467, 54.6135, 0.29 ) }
    dend_81 { pt3dadd( -165.15, 50.5768, 54.5805, 0.29 ) }
    dend_81 { pt3dadd( -166.014, 51.5434, 53.3598, 0.29 ) }
    dend_81 { pt3dadd( -166.039, 51.5684, 53.3244, 0.29 ) }
    dend_81 { pt3dadd( -166.315, 51.8104, 52.978, 0.66 ) }
    dend_81 { pt3dadd( -167.634, 52.819, 51.4475, 0.37 ) }
    dend_81 { pt3dadd( -167.722, 52.8775, 51.3604, 0.37 ) }
    dend_81 { pt3dadd( -168.236, 53.1743, 50.9187, 0.29 ) }
    dend_81 { pt3dadd( -168.773, 53.4347, 50.5764, 0.15 ) }
    dend_81 { pt3dadd( -169.11, 53.5839, 50.395, 0.74 ) }
    dend_81 { pt3dadd( -169.272, 53.6418, 50.3364, 0.74 ) }
    dend_81 { pt3dadd( -170.384, 53.9471, 50.1419, 0.37 ) }
    dend_81 { pt3dadd( -170.91, 54.114, 50.0619, 0.29 ) }
    dend_81 { pt3dadd( -171.614, 54.3741, 50.0056, 0.29 ) }
    dend_81 { pt3dadd( -171.695, 54.4052, 50.0046, 0.29 ) }
    dend_81 { pt3dadd( -172.717, 54.793, 50.0801, 0.29 ) }
    dend_81 { pt3dadd( -172.837, 54.8412, 50.1004, 0.29 ) }
    dend_81 { pt3dadd( -173.502, 55.1235, 50.2814, 0.29 ) }
    dend_81 { pt3dadd( -174.144, 55.4131, 50.4586, 0.29 ) }
    dend_81 { pt3dadd( -174.199, 55.4374, 50.4697, 0.29 ) }
    dend_81 { pt3dadd( -175.057, 55.8186, 50.5909, 0.29 ) }
    dend_81 { pt3dadd( -175.878, 56.1889, 50.6248, 0.29 ) }
    dend_81 { pt3dadd( -176.038, 56.2571, 50.6207, 0.29 ) }
    dend_81 { pt3dadd( -176.774, 56.608, 50.5214, 0.29 ) }
    dend_81 { pt3dadd( -177.578, 57.0658, 50.3647, 0.52 ) }
    dend_81 { pt3dadd( -177.977, 57.3333, 50.2815, 0.66 ) }
    dend_81 { pt3dadd( -178.877, 58.0308, 50.0771, 0.29 ) }
    dend_81 { pt3dadd( -179.865, 58.8694, 49.8484, 1.11 ) }
    dend_81 { pt3dadd( -180.854, 59.7582, 49.5701, 0.29 ) }
    dend_81 { pt3dadd( -181.378, 60.2596, 49.4035, 0.29 ) }
    dend_81 { pt3dadd( -181.826, 60.7009, 49.266, 0.74 ) }
    dend_81 { pt3dadd( -181.922, 60.7968, 49.2337, 0.74 ) }
    dend_81 { pt3dadd( -182.191, 61.07, 49.1376, 0.74 ) }
    dend_81 { pt3dadd( -183.578, 62.4065, 48.5717, 0.29 ) }
    dend_81 { pt3dadd( -183.645, 62.4628, 48.5457, 0.29 ) }
    dend_81 { pt3dadd( -184.164, 62.8763, 48.3356, 0.29 ) }
    dend_81 { pt3dadd( -184.202, 62.9073, 48.3204, 0.29 ) }
    dend_81 { pt3dadd( -184.852, 63.4492, 48.0755, 0.59 ) }
    dend_81 { pt3dadd( -186.069, 64.5312, 47.6866, 0.29 ) }
    dend_81 { pt3dadd( -186.119, 64.5809, 47.6786, 0.29 ) }
    dend_81 { pt3dadd( -186.467, 64.9839, 47.6457, 0.29 ) }
    dend_81 { pt3dadd( -186.643, 65.2513, 47.65, 0.59 ) }
    dend_81 { pt3dadd( -186.678, 65.3136, 47.6558, 0.59 ) }
    dend_81 { pt3dadd( -186.932, 65.857, 47.7418, 0.59 ) }
    dend_81 { pt3dadd( -187.167, 66.4238, 47.8597, 0.29 ) }
    dend_81 { pt3dadd( -187.39, 66.8849, 47.9446, 0.29 ) }
    dend_81 { pt3dadd( -188.132, 68.2191, 48.1597, 0.29 ) }
    dend_81 { pt3dadd( -188.163, 68.2641, 48.1663, 0.29 ) }
    dend_81 { pt3dadd( -188.613, 68.8481, 48.247, 0.29 ) }
    dend_81 { pt3dadd( -188.83, 69.0839, 48.2762, 0.29 ) }
    dend_81 { pt3dadd( -189.466, 69.6414, 48.337, 0.52 ) }
    dend_81 { pt3dadd( -189.758, 69.8455, 48.3645, 0.59 ) }
    dend_81 { pt3dadd( -190.642, 70.3436, 48.4651, 0.22 ) }
    dend_81 { pt3dadd( -190.88, 70.4829, 48.4831, 0.22 ) }
    dend_81 { pt3dadd( -191.359, 70.8026, 48.5174, 0.22 ) }
    dend_81 { pt3dadd( -191.801, 71.1563, 48.5521, 0.81 ) }
    dend_81 { pt3dadd( -192.098, 71.4268, 48.5738, 1.03 ) }
    dend_81 { pt3dadd( -192.576, 71.8764, 48.5983, 0.52 ) }
    dend_81 { pt3dadd( -193.452, 72.7024, 48.6229, 0.29 ) }
    dend_81 { pt3dadd( -194.462, 73.6319, 48.6391, 0.22 ) }
    dend_81 { pt3dadd( -195.423, 74.5655, 48.6521, 0.22 ) }
    dend_81 { pt3dadd( -195.536, 74.6825, 48.6542, 0.22 ) }
    dend_81 { pt3dadd( -196.005, 75.1824, 48.6654, 0.74 ) }
    dend_81 { pt3dadd( -196.261, 75.4486, 48.6755, 0.74 ) }
    dend_81 { pt3dadd( -196.586, 75.7438, 48.7183, 0.74 ) }
    dend_81 { pt3dadd( -203.456, 80.5435, 47.5045, 0.74 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 99/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -135.662, 35.5588, 52.3315, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_76 { pt3dadd( -135.473, 36.5873, 52.4505, 0.29 ) }
    dend_76 { pt3dadd( -135.112, 38.3986, 52.5912, 0.29 ) }
    dend_76 { pt3dadd( -135.097, 38.4748, 52.5963, 0.29 ) }
    dend_76 { pt3dadd( -134.764, 40.1818, 52.7062, 0.29 ) }
    dend_76 { pt3dadd( -134.75, 40.2675, 52.7119, 0.29 ) }
    dend_76 { pt3dadd( -134.378, 42.8175, 52.8961, 0.52 ) }
    dend_76 { pt3dadd( -134.219, 44.252, 53.013, 0.52 ) }
    dend_76 { pt3dadd( -134.146, 45.2891, 53.0959, 0.52 ) }
    dend_76 { pt3dadd( -134.137, 45.5824, 53.1157, 0.52 ) }
    dend_76 { pt3dadd( -134.168, 46.8412, 53.2899, 0.52 ) }
    dend_76 { pt3dadd( -134.255, 47.7926, 53.496, 0.81 ) }
    dend_76 { pt3dadd( -134.296, 47.9688, 53.5563, 0.81 ) }
    dend_76 { pt3dadd( -134.527, 48.6951, 53.8886, 0.66 ) }
    dend_76 { pt3dadd( -134.803, 49.3874, 54.2371, 0.37 ) }
    dend_76 { pt3dadd( -135.713, 51.4644, 55.3415, 0.37 ) }
    dend_76 { pt3dadd( -135.748, 51.5376, 55.378, 0.37 ) }
    dend_76 { pt3dadd( -136.114, 52.2731, 55.7051, 0.52 ) }
    dend_76 { pt3dadd( -136.167, 52.3807, 55.7418, 0.52 ) }
    dend_76 { pt3dadd( -136.833, 53.7428, 56.0957, 0.44 ) }
    dend_76 { pt3dadd( -136.908, 53.9011, 56.1234, 0.44 ) }
    dend_76 { pt3dadd( -137.463, 55.0387, 56.1845, 0.44 ) }
    dend_76 { pt3dadd( -137.621, 55.3871, 56.2048, 0.44 ) }
    dend_76 { pt3dadd( -138.323, 57.1596, 56.3283, 0.44 ) }
    dend_76 { pt3dadd( -138.353, 57.2432, 56.3351, 0.44 ) }
    dend_76 { pt3dadd( -138.625, 58.108, 56.4198, 0.52 ) }
    dend_76 { pt3dadd( -138.674, 58.2917, 56.4348, 0.52 ) }
    dend_76 { pt3dadd( -138.934, 59.4265, 56.5269, 0.37 ) }
    dend_76 { pt3dadd( -139.184, 60.7487, 56.6167, 0.74 ) }
    dend_76 { pt3dadd( -139.199, 60.8368, 56.6229, 0.74 ) }
    dend_76 { pt3dadd( -139.299, 61.448, 56.6674, 0.74 ) }
    dend_76 { pt3dadd( -139.742, 64.3376, 56.9717, 0.52 ) }
    dend_76 { pt3dadd( -139.754, 64.4256, 56.9831, 0.52 ) }
    dend_76 { pt3dadd( -140.075, 66.803, 57.356, 0.52 ) }
    dend_76 { pt3dadd( -140.442, 69.6142, 57.8625, 0.52 ) }
    dend_76 { pt3dadd( -140.457, 69.7273, 57.8852, 0.52 ) }
    dend_76 { pt3dadd( -140.683, 71.5407, 58.2932, 0.88 ) }
    dend_76 { pt3dadd( -140.731, 71.9309, 58.395, 0.88 ) }
    dend_76 { pt3dadd( -140.986, 74.1199, 58.9645, 0.52 ) }
    dend_76 { pt3dadd( -141.137, 75.512, 59.3249, 0.52 ) }
    dend_76 { pt3dadd( -141.159, 75.7691, 59.4005, 0.52 ) }
    dend_76 { pt3dadd( -141.279, 77.0576, 59.7431, 0.52 ) }
    dend_76 { pt3dadd( -141.323, 77.4168, 59.8232, 0.52 ) }
    dend_76 { pt3dadd( -141.467, 78.3088, 60.016, 0.59 ) }
    dend_76 { pt3dadd( -141.659, 79.3421, 60.2279, 0.37 ) }
    dend_76 { pt3dadd( -141.986, 81.0032, 60.5571, 0.44 ) }
    dend_76 { pt3dadd( -142.338, 82.8054, 60.897, 0.22 ) }
    dend_76 { pt3dadd( -142.659, 84.4275, 61.1879, 0.22 ) }
    dend_76 { pt3dadd( -142.792, 85.1162, 61.3198, 0.37 ) }
    dend_76 { pt3dadd( -143.103, 86.7175, 61.6347, 0.22 ) }
    dend_76 { pt3dadd( -143.133, 86.879, 61.6665, 0.22 ) }
    dend_76 { pt3dadd( -143.362, 88.2243, 61.9941, 0.22 ) }
    dend_76 { pt3dadd( -143.373, 88.3081, 62.0234, 0.22 ) }
    dend_76 { pt3dadd( -143.496, 89.667, 62.5374, 0.22 ) }
    dend_76 { pt3dadd( -143.501, 89.7395, 62.565, 0.22 ) }
    dend_76 { pt3dadd( -143.63, 91.5137, 63.249, 0.22 ) }
    dend_76 { pt3dadd( -143.756, 93.5098, 63.9974, 0.66 ) }
    dend_76 { pt3dadd( -143.803, 94.275, 64.2746, 0.96 ) }
    dend_76 { pt3dadd( -143.882, 95.6831, 64.7984, 0.22 ) }
    dend_76 { pt3dadd( -143.952, 96.8937, 65.2472, 0.22 ) }
    dend_76 { pt3dadd( -143.958, 96.9883, 65.2835, 0.22 ) }
    dend_76 { pt3dadd( -144.002, 97.6893, 65.5608, 0.59 ) }
    dend_76 { pt3dadd( -144.067, 98.3015, 65.7529, 0.88 ) }
    dend_76 { pt3dadd( -144.265, 99.7486, 66.1588, 0.44 ) }
    dend_76 { pt3dadd( -144.405, 100.619, 66.3713, 0.29 ) }
    dend_76 { pt3dadd( -144.448, 100.888, 66.4252, 0.29 ) }
    dend_76 { pt3dadd( -144.54, 101.524, 66.5272, 0.29 ) }
    dend_76 { pt3dadd( -144.707, 103.137, 66.6371, 0.74 ) }
    dend_76 { pt3dadd( -144.759, 103.915, 66.6288, 0.29 ) }
    dend_76 { pt3dadd( -144.8, 104.721, 66.5735, 0.44 ) }
    dend_76 { pt3dadd( -144.824, 105.371, 66.5307, 0.59 ) }
    dend_76 { pt3dadd( -144.828, 105.461, 66.527, 0.59 ) }
    dend_76 { pt3dadd( -144.885, 107.405, 66.4989, 0.22 ) }
    dend_76 { pt3dadd( -144.896, 107.692, 66.5079, 0.22 ) }
    dend_76 { pt3dadd( -144.979, 109.311, 66.6751, 0.22 ) }
    dend_76 { pt3dadd( -144.983, 109.396, 66.69, 0.22 ) }
    dend_76 { pt3dadd( -145.01, 110.354, 66.9196, 0.44 ) }
    dend_76 { pt3dadd( -145.011, 110.451, 66.9496, 0.44 ) }
    dend_76 { pt3dadd( -145.008, 110.953, 67.1579, 0.44 ) }
    dend_76 { pt3dadd( -144.928, 112.577, 67.8944, 0.29 ) }
    dend_76 { pt3dadd( -144.855, 113.167, 68.2064, 0.44 ) }
    dend_76 { pt3dadd( -144.831, 113.332, 68.2984, 0.44 ) }
    dend_76 { pt3dadd( -144.689, 114.079, 68.7625, 0.44 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 82/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 52.621, -349.448, -132.326, 0.29 ) }
    dend_59 { pt3dadd( 51.9963, -349.469, -132.767, 0.29 ) }
    dend_59 { pt3dadd( 51.2473, -349.635, -133.331, 0.29 ) }
    dend_59 { pt3dadd( 51.1108, -349.676, -133.436, 0.59 ) }
    dend_59 { pt3dadd( 50.6242, -349.837, -133.812, 0.66 ) }
    dend_59 { pt3dadd( 50.535, -349.866, -133.895, 0.66 ) }
    dend_59 { pt3dadd( 50.0884, -350.008, -134.338, 0.66 ) }
    dend_59 { pt3dadd( 49.3195, -350.302, -135.141, 0.22 ) }
    dend_59 { pt3dadd( 49.0052, -350.435, -135.475, 0.66 ) }
    dend_59 { pt3dadd( 48.6395, -350.592, -135.87, 0.66 ) }
    dend_59 { pt3dadd( 47.6749, -351.005, -136.94, 0.22 ) }
    dend_59 { pt3dadd( 47.1208, -351.234, -137.565, 0.22 ) }
    dend_59 { pt3dadd( 46.36, -351.534, -138.448, 0.22 ) }
    dend_59 { pt3dadd( 45.8345, -351.71, -139.064, 0.74 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 96/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 52.621, -349.448, -132.326, 0.29 ) }
    dend_58 { pt3dadd( 52.7933, -350.999, -132.661, 0.29 ) }
    dend_58 { pt3dadd( 52.9654, -351.952, -132.88, 0.29 ) }
    dend_58 { pt3dadd( 53.033, -352.422, -132.995, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_57()
}

proc basic_shape_57() {
    dend_58 { pt3dadd( 53.092, -352.837, -133.118, 0.88 ) }
    dend_58 { pt3dadd( 53.106, -352.938, -133.151, 0.88 ) }
    dend_58 { pt3dadd( 53.1781, -353.656, -133.387, 0.88 ) }
    dend_58 { pt3dadd( 53.2894, -354.91, -133.725, 0.22 ) }
    dend_58 { pt3dadd( 53.3434, -355.623, -133.93, 0.22 ) }
    dend_58 { pt3dadd( 53.4091, -356.443, -134.191, 0.88 ) }
    dend_58 { pt3dadd( 53.4167, -356.51, -134.211, 0.88 ) }
    dend_58 { pt3dadd( 53.5371, -357.371, -134.432, 0.74 ) }
    dend_58 { pt3dadd( 53.7481, -358.442, -134.629, 0.37 ) }
    dend_58 { pt3dadd( 53.7697, -358.509, -134.631, 0.37 ) }
    dend_58 { pt3dadd( 54.3835, -359.955, -134.408, 0.29 ) }
    dend_58 { pt3dadd( 54.7114, -360.628, -134.214, 0.59 ) }
    dend_58 { pt3dadd( 54.8107, -360.812, -134.149, 0.59 ) }
    dend_58 { pt3dadd( 55.3083, -361.634, -133.796, 0.88 ) }
    dend_58 { pt3dadd( 55.973, -362.774, -133.102, 0.74 ) }
    dend_58 { pt3dadd( 56.6996, -364.054, -132.162, 0.29 ) }
    dend_58 { pt3dadd( 57.0655, -364.706, -131.618, 0.74 ) }
    dend_58 { pt3dadd( 57.0917, -364.754, -131.576, 0.74 ) }
    dend_58 { pt3dadd( 57.2951, -365.147, -131.223, 0.74 ) }
    dend_58 { pt3dadd( 58.1243, -366.85, -129.482, 0.44 ) }
    dend_58 { pt3dadd( 58.3489, -367.391, -128.844, 0.44 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -144.689, 114.079, 68.7625, 0.29 ) }
    dend_78 { pt3dadd( -143.921, 113.621, 68.8258, 0.29 ) }
    dend_78 { pt3dadd( -143.833, 113.565, 68.8278, 0.29 ) }
    dend_78 { pt3dadd( -143.562, 113.393, 68.8277, 0.29 ) }
    dend_78 { pt3dadd( -143.518, 113.365, 68.8277, 0.29 ) }
    dend_78 { pt3dadd( -142.892, 112.966, 68.8275, 0.29 ) }
    dend_78 { pt3dadd( -142.62, 112.793, 68.8274, 0.81 ) }
    dend_78 { pt3dadd( -142.309, 112.609, 68.7874, 1.03 ) }
    dend_78 { pt3dadd( -142.266, 112.581, 68.7813, 1.03 ) }
    dend_78 { pt3dadd( -136.732, 108.209, 67.5298, 1.03 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 31/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -144.689, 114.079, 68.7625, 0.44 ) }
    dend_77 { pt3dadd( -144.732, 115.54, 69.6956, 0.44 ) }
    dend_77 { pt3dadd( -144.76, 117.176, 70.7343, 0.37 ) }
    dend_77 { pt3dadd( -144.806, 120.106, 72.7333, 0.29 ) }
    dend_77 { pt3dadd( -144.893, 122.69, 74.5468, 0.29 ) }
    dend_77 { pt3dadd( -144.923, 123.846, 75.3735, 0.74 ) }
    dend_77 { pt3dadd( -144.934, 124.409, 75.7811, 0.74 ) }
    dend_77 { pt3dadd( -144.923, 125.134, 76.3048, 0.44 ) }
    dend_77 { pt3dadd( -144.823, 126.766, 77.5457, 0.37 ) }
    dend_77 { pt3dadd( -144.636, 128.442, 78.8755, 0.29 ) }
    dend_77 { pt3dadd( -144.419, 130.112, 80.2161, 0.29 ) }
    dend_77 { pt3dadd( -144.394, 130.276, 80.3548, 0.29 ) }
    dend_77 { pt3dadd( -144.029, 132.518, 82.2831, 0.29 ) }
    dend_77 { pt3dadd( -143.952, 132.943, 82.6499, 0.29 ) }
    dend_77 { pt3dadd( -143.68, 134.337, 83.8218, 0.29 ) }
    dend_77 { pt3dadd( -143.666, 134.406, 83.8831, 0.29 ) }
    dend_77 { pt3dadd( -143.56, 135.724, 85.0573, 0.29 ) }
    dend_77 { pt3dadd( -143.628, 136.47, 85.6505, 0.44 ) }
    dend_77 { pt3dadd( -143.667, 136.63, 85.7652, 0.44 ) }
    dend_77 { pt3dadd( -143.841, 137.221, 86.1505, 0.29 ) }
    dend_77 { pt3dadd( -143.875, 137.323, 86.2113, 0.29 ) }
    dend_77 { pt3dadd( -144.369, 138.971, 87.0494, 0.29 ) }
    dend_77 { pt3dadd( -145.171, 141.861, 88.3255, 0.29 ) }
    dend_77 { pt3dadd( -145.258, 142.198, 88.4719, 0.29 ) }
    dend_77 { pt3dadd( -145.503, 143.236, 88.9212, 0.74 ) }
    dend_77 { pt3dadd( -145.69, 144.097, 89.2982, 0.88 ) }
    dend_77 { pt3dadd( -146.051, 145.82, 90.0542, 0.52 ) }
    dend_77 { pt3dadd( -146.367, 147.379, 90.7408, 0.37 ) }
    dend_77 { pt3dadd( -146.833, 149.521, 91.7152, 0.29 ) }
    dend_77 { pt3dadd( -146.911, 149.855, 91.8739, 0.29 ) }
    dend_77 { pt3dadd( -147.575, 152.545, 93.2137, 0.29 ) }
    dend_77 { pt3dadd( -147.633, 152.767, 93.3317, 0.29 ) }
    dend_77 { pt3dadd( -148.145, 154.549, 94.3787, 0.29 ) }
    dend_77 { pt3dadd( -148.363, 155.22, 94.809, 0.52 ) }
    dend_77 { pt3dadd( -148.559, 155.73, 95.1753, 0.66 ) }
    dend_77 { pt3dadd( -148.624, 155.881, 95.2944, 0.66 ) }
    dend_77 { pt3dadd( -148.895, 156.395, 95.7779, 0.66 ) }
    dend_77 { pt3dadd( -148.945, 156.485, 95.8609, 0.66 ) }
    dend_77 { pt3dadd( -149.471, 157.421, 96.6386, 0.29 ) }
    dend_77 { pt3dadd( -149.642, 157.718, 96.8695, 0.22 ) }
    dend_77 { pt3dadd( -149.976, 158.274, 97.2989, 0.52 ) }
    dend_77 { pt3dadd( -150.152, 158.588, 97.5391, 0.52 ) }
    dend_77 { pt3dadd( -150.573, 159.378, 98.1344, 0.29 ) }
    dend_77 { pt3dadd( -151.083, 160.459, 98.9127, 0.29 ) }
    dend_77 { pt3dadd( -151.787, 162.126, 100.142, 0.29 ) }
    dend_77 { pt3dadd( -151.828, 162.226, 100.22, 0.29 ) }
    dend_77 { pt3dadd( -152.452, 163.89, 101.567, 0.29 ) }
    dend_77 { pt3dadd( -152.505, 164.04, 101.693, 0.29 ) }
    dend_77 { pt3dadd( -153.07, 165.817, 103.208, 0.29 ) }
    dend_77 { pt3dadd( -153.487, 167.31, 104.457, 0.29 ) }
    dend_77 { pt3dadd( -153.534, 167.538, 104.622, 0.29 ) }
    dend_77 { pt3dadd( -153.666, 168.343, 105.14, 0.29 ) }
    dend_77 { pt3dadd( -153.675, 168.412, 105.179, 0.29 ) }
    dend_77 { pt3dadd( -153.775, 169.53, 105.747, 0.88 ) }
    dend_77 { pt3dadd( -153.793, 169.875, 105.901, 0.88 ) }
    dend_77 { pt3dadd( -153.844, 171.53, 106.591, 0.22 ) }
    dend_77 { pt3dadd( -153.858, 173.171, 107.235, 0.22 ) }
    dend_77 { pt3dadd( -153.857, 173.424, 107.331, 0.22 ) }
    dend_77 { pt3dadd( -153.84, 175.238, 108.017, 0.22 ) }
    dend_77 { pt3dadd( -153.839, 175.316, 108.046, 0.22 ) }
    dend_77 { pt3dadd( -153.787, 177.814, 108.828, 0.52 ) }
    dend_77 { pt3dadd( -153.756, 179.654, 109.328, 0.29 ) }
    dend_77 { pt3dadd( -153.743, 180.496, 109.509, 0.37 ) }
    dend_77 { pt3dadd( -153.741, 180.667, 109.541, 0.37 ) }
    dend_77 { pt3dadd( -153.733, 181.623, 109.698, 0.37 ) }
    dend_77 { pt3dadd( -153.686, 184.61, 110.036, 0.22 ) }
    dend_77 { pt3dadd( -153.66, 186.411, 110.203, 0.22 ) }
    dend_77 { pt3dadd( -153.658, 186.505, 110.215, 0.22 ) }
    dend_77 { pt3dadd( -153.629, 187.444, 110.347, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_58()
}

proc basic_shape_58() {
    dend_77 { pt3dadd( -153.587, 188.755, 110.565, 0.66 ) }
    dend_77 { pt3dadd( -153.457, 191.42, 110.975, 0.15 ) }
    dend_77 { pt3dadd( -153.318, 193.591, 111.355, 0.15 ) }
    dend_77 { pt3dadd( -153.229, 194.706, 111.488, 0.29 ) }
    dend_77 { pt3dadd( -153.222, 194.8, 111.497, 0.29 ) }
    dend_77 { pt3dadd( -153.175, 195.484, 111.545, 0.29 ) }
    dend_77 { pt3dadd( -153.056, 197.611, 111.664, 0.44 ) }
    dend_77 { pt3dadd( -153.017, 198.207, 111.648, 0.44 ) }
    dend_77 { pt3dadd( -152.976, 199.718, 111.549, 0.22 ) }
    dend_77 { pt3dadd( -152.975, 200.528, 111.516, 0.52 ) }
    dend_77 { pt3dadd( -152.977, 200.622, 111.515, 0.52 ) }
    dend_77 { pt3dadd( -153.004, 201.3, 111.539, 0.88 ) }
    dend_77 { pt3dadd( -153.293, 205.18, 111.967, 0.29 ) }
    dend_77 { pt3dadd( -153.572, 208.388, 112.402, 0.29 ) }
    dend_77 { pt3dadd( -153.658, 209.485, 112.618, 0.29 ) }
    dend_77 { pt3dadd( -153.662, 209.577, 112.643, 0.29 ) }
    dend_77 { pt3dadd( -153.685, 211.345, 113.25, 0.29 ) }
    dend_77 { pt3dadd( -153.62, 212.836, 113.933, 0.29 ) }
    dend_77 { pt3dadd( -153.612, 212.902, 113.975, 0.29 ) }
    dend_77 { pt3dadd( -153.155, 214.825, 115.287, 0.29 ) }
    dend_77 { pt3dadd( -152.75, 216.241, 116.284, 0.59 ) }
    dend_77 { pt3dadd( -152.527, 216.938, 116.782, 0.59 ) }
    dend_77 { pt3dadd( -152.149, 218.151, 117.642, 0.22 ) }
    dend_77 { pt3dadd( -151.753, 219.532, 118.605, 0.22 ) }
    dend_77 { pt3dadd( -151.711, 219.705, 118.723, 0.22 ) }
    dend_77 { pt3dadd( -151.265, 221.87, 120.168, 0.22 ) }
    dend_77 { pt3dadd( -151.236, 222.039, 120.279, 0.22 ) }
    dend_77 { pt3dadd( -150.749, 225.503, 122.514, 0.22 ) }
    dend_77 { pt3dadd( -150.741, 225.595, 122.571, 0.22 ) }
    dend_77 { pt3dadd( -150.647, 227.704, 123.863, 0.22 ) }
    dend_77 { pt3dadd( -150.649, 227.953, 124.011, 0.22 ) }
    dend_77 { pt3dadd( -150.674, 228.316, 124.22, 0.59 ) }
    dend_77 { pt3dadd( -150.755, 229.069, 124.642, 0.59 ) }
    dend_77 { pt3dadd( -151.007, 231.016, 125.551, 0.29 ) }
    dend_77 { pt3dadd( -151.128, 231.921, 125.921, 0.59 ) }
    dend_77 { pt3dadd( -151.332, 233.356, 126.443, 0.52 ) }
    dend_77 { pt3dadd( -151.491, 234.609, 126.879, 0.74 ) }
    dend_77 { pt3dadd( -151.61, 235.701, 127.238, 0.74 ) }
    dend_77 { pt3dadd( -151.771, 237.89, 127.932, 0.22 ) }
    dend_77 { pt3dadd( -151.797, 238.821, 128.211, 0.44 ) }
    dend_77 { pt3dadd( -151.798, 239.646, 128.465, 0.74 ) }
    dend_77 { pt3dadd( -151.793, 240.117, 128.627, 1.03 ) }
    dend_77 { pt3dadd( -151.792, 240.192, 128.654, 1.03 ) }
    dend_77 { pt3dadd( -151.794, 241.183, 129.075, 1.03 ) }
    dend_77 { pt3dadd( -151.799, 241.265, 129.124, 1.03 ) }
    dend_77 { pt3dadd( -151.856, 242.596, 129.913, 0.37 ) }
    dend_77 { pt3dadd( -151.916, 243.922, 130.685, 0.29 ) }
    dend_77 { pt3dadd( -151.338, 254.905, 137.891, 0.29 ) }
    dend_77 { pt3dadd( -152.707, 265.33, 145.738, 0.29 ) }
    dend_77 { pt3dadd( -154.013, 275.32, 154.132, 0.29 ) }
    dend_77 { pt3dadd( -155.408, 284.128, 163.702, 0.29 ) }
    dend_77 { pt3dadd( -156.163, 291.868, 174.181, 0.29 ) }
    dend_77 { pt3dadd( -158.887, 298.038, 185.239, 0.29 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 53/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -136.732, 108.209, 67.5298, 0.22 ) }
    dend_80 { pt3dadd( -127.801, 101.342, 66.1558, 0.22 ) }
    dend_80 { pt3dadd( -118.909, 94.3066, 65.9839, 0.22 ) }
    dend_80 { pt3dadd( -109.331, 88.3291, 65.785, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 57/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -136.732, 108.209, 67.5298, 0.22 ) }
    dend_79 { pt3dadd( -129.205, 102.127, 66.2891, 0.22 ) }
    dend_79 { pt3dadd( -121.698, 96.0014, 65.1339, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_2 = new SectionList()
    dend_92 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_81 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_92 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_93 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_41 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_14 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_102 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_97 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_94 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_65 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_27 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_15 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_103 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_100 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_96 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_95 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_67 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_66 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_48 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_43 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_29 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_28 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_24 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_21 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_17 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_49 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_32 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_23 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_6 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_5 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_69 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_62 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_53 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_50 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_46 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_39 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_36 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_90 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_89 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_73 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_63 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_38 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_37 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_9 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_83 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_55 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_85 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_84 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_82 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_75 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_57 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_81 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_76 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_77 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_30 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_40 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_52 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_35 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_98 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_99 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_33 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_101 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_51 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_13 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_7 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_8 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_10 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_87 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_64 OneSecGrp_SectionRef_83.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_91 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_68 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_18 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_88 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_104 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_54 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_61 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_72 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_56 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_86 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_60 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_71 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_70 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_59 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_58 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_74 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_45 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_78 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_79 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_80 OneSecGrp_SectionRef_107.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_91, dend_88, dend_88, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_80, dend_80, dend_80, dend_79, dend_79]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_87 all.append()
    dend_87 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_91 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_54 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_58()
}

proc subsets_58() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_59()
}

proc subsets_59() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_60()
}

proc subsets_60() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_61()
}

proc subsets_61() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_92 nseg = 5
    dend_93 nseg = 7
    dend_41 nseg = 3
    dend_26 nseg = 3
    dend_14 nseg = 3
    dend_102 nseg = 7
    dend_97 nseg = 3
    dend_94 nseg = 3
    dend_65 nseg = 3
    dend_27 nseg = 11
    dend_20 nseg = 5
    dend_15 nseg = 3
    dend_2 nseg = 13
    dend_103 nseg = 5
    dend_100 nseg = 3
    dend_96 nseg = 3
    dend_95 nseg = 5
    dend_67 nseg = 9
    dend_66 nseg = 5
    dend_48 nseg = 3
    dend_43 nseg = 17
    dend_31 nseg = 5
    dend_29 nseg = 3
    dend_28 nseg = 5
    dend_24 nseg = 3
    dend_21 nseg = 9
    dend_17 nseg = 7
    dend_16 nseg = 5
    dend_11 nseg = 7
    dend_4 nseg = 5
    dend_49 nseg = 3
    dend_44 nseg = 3
    dend_32 nseg = 3
    dend_23 nseg = 3
    dend_19 nseg = 5
    dend_6 nseg = 3
    dend_5 nseg = 3
    dend_69 nseg = 3
    dend_62 nseg = 7
    dend_53 nseg = 9
    dend_50 nseg = 3
    dend_46 nseg = 3
    dend_39 nseg = 3
    dend_36 nseg = 5
    dend_90 nseg = 3
    dend_89 nseg = 3
    dend_73 nseg = 7
    dend_63 nseg = 5
    dend_38 nseg = 5
    dend_37 nseg = 5
    dend_9 nseg = 7
    dend_83 nseg = 5
    dend_55 nseg = 3
    dend_85 nseg = 7
    dend_84 nseg = 5
    dend_82 nseg = 5
    dend_75 nseg = 3
    dend_57 nseg = 3
    dend_81 nseg = 5
    dend_76 nseg = 5
    dend_77 nseg = 11
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L5_DBC_08b1fddce5_0_0


