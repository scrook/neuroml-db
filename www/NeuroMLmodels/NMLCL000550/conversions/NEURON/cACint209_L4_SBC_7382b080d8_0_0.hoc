// Cell: cACint209_L4_SBC_7382b080d8_0_0
/*
{
  "id" : "cACint209_L4_SBC_7382b080d8_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-5.8534, -3.68898, 0.0, 3.87803", "-5.27984, -3.22888, 0.0, 6.96449", "-4.70627, -2.76878, 0.0, 8.7585", "-4.1327, -2.30868, 0.0, 10.0498", "-3.55914, -1.84858, 0.0, 11.0032", "-2.98557, -1.38848, 0.0, 12.0695", "-2.41201, -0.928385, 0.0, 12.4861", "-1.83844, -0.468287, 0.0, 12.8863", "-1.26487, -0.0081878, 0.0, 13.1702", "-0.691307, 0.451911, 0.0, 13.2491", "-0.117741, 0.91201, 0.0, 13.2672", "0.455825, 1.37211, 0.0, 13.2354", "1.02939, 1.83221, 0.0, 13.09", "1.60296, 2.29231, 0.0, 12.7829", "2.17652, 2.75241, 0.0, 12.3841", "2.75009, 3.2125, 0.0, 11.4175", "3.32366, 3.6726, 0.0, 10.2262", "3.89722, 4.1327, 0.0, 8.70811", "4.47079, 4.5928, 0.0, 6.9837", "5.04435, 5.0529, 0.0, 4.97808", "5.61792, 5.513, 0.0, 2.90913" ]
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-3.59355, 4.62374, 7.71, 0.96", "-3.22963, 7.45552, 9.49311, 0.96", "-3.17888, 8.46957, 10.1076, 0.96", "-3.17446, 10.2462, 11.2786, 0.74", "-3.19285, 11.51, 12.1817, 1.03", "-3.20269, 12.8998, 13.3586, 0.81", "-3.17212, 13.8152, 14.365, 0.59", "-3.10007, 14.6345, 15.6546, 0.59", "-2.98146, 15.0161, 16.7338, 0.59", "-2.87131, 15.1148, 17.4925, 0.59", "-2.53385, 15.0908, 19.4258, 0.59", "-2.05396, 14.7545, 21.6678, 0.88", "-1.62929, 14.394, 23.1926, 1.18", "-1.04257, 13.9622, 24.7466, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-4.04355, -3.84976, 15.73, 0.66", "-4.29118, -4.74611, 16.2114, 0.66", "-4.41372, -5.14731, 16.4376, 0.66", "-4.62983, -5.74201, 16.7679, 0.66", "-5.01179, -6.69942, 17.2917, 0.96", "-5.70034, -8.40029, 18.1967, 0.66", "-5.94085, -9.02937, 18.5327, 0.66", "-6.18672, -9.88293, 18.9977, 0.66", "-6.39356, -10.7901, 19.5042, 0.66", "-6.51247, -11.406, 19.8496, 0.88", "-6.67803, -12.1454, 20.2568, 0.88", "-7.04284, -13.4781, 20.9319, 0.29", "-7.3145, -14.4084, 21.3777, 0.29", "-7.42722, -14.7713, 21.5567, 0.29", "-7.67334, -15.5329, 21.9025, 0.66", "-7.92221, -16.4901, 22.2906, 0.22", "-8.02897, -17.035, 22.466, 0.22", "-8.18645, -18.0671, 22.7556, 1.03", "-8.30167, -18.9583, 22.9949, 1.03", "-8.43718, -20.5396, 23.4293, 0.37", "-8.48318, -22.3202, 23.9085, 0.07", "-8.44231, -23.3507, 24.2008, 0.29", "-8.34417, -24.387, 24.4923, 0.29", "-8.22439, -25.1724, 24.7242, 0.37", "-8.03043, -26.0404, 24.9817, 0.52", "-7.88565, -26.5722, 25.1756, 0.52", "-7.63969, -27.4512, 25.5557, 0.52", "-7.33516, -28.4202, 26.062, 0.52", "-7.10757, -28.9857, 26.3815, 0.66", "-6.54842, -30.1495, 27.0538, 0.22", "-5.95717, -31.1937, 27.6537, 0.88", "-5.42893, -32.0318, 28.1264, 0.88", "-4.78354, -33.0202, 28.6552, 0.22", "-4.35464, -33.6715, 28.9971, 0.22", "-3.54724, -34.8434, 29.5636, 0.29", "-2.96344, -35.6236, 29.9039, 0.29", "-2.33517, -36.4034, 30.2047, 0.22", "-1.44072, -37.5466, 30.5895, 0.59", "-0.729116, -38.498, 30.9108, 0.22", "-0.0896842, -39.3906, 31.2069, 0.22", "0.327705, -39.9868, 31.4451, 0.52", "1.09499, -41.2056, 31.9942, 0.15", "1.62156, -42.116, 32.434, 0.15", "2.18357, -43.1612, 32.966, 0.15", "2.61952, -44.0392, 33.443, 0.22", "3.20296, -45.3159, 34.2013, 0.22", "3.63207, -46.1778, 34.7434, 0.22", "3.8533, -46.5429, 35.0063, 0.22", "4.24407, -47.1118, 35.4429, 0.22", "4.52676, -47.538, 35.7584, 0.44", "4.7823, -47.9137, 36.0613, 0.44", "5.28841, -48.6035, 36.627, 0.44", "5.85988, -49.2775, 37.2523, 0.44", "6.56528, -50.055, 38.0177, 0.15", "7.10141, -50.6448, 38.5829, 0.15", "7.70699, -51.3244, 39.1826, 0.15", "8.46264, -52.261, 39.8683, 0.59", "9.09367, -53.0849, 40.3703, 0.15", "9.67148, -53.8642, 40.7452, 0.15", "10.1666, -54.5877, 41.0407, 0.15", "10.663, -55.4065, 41.3258, 0.74", "11.785, -57.5248, 41.9509, 0.15", "12.4737, -59.009, 42.2847, 0.15", "12.9195, -60.1101, 42.4888, 0.37", "13.5482, -61.7707, 42.7974, 0.15", "14.2637, -63.7582, 43.1926, 0.22", "14.7242, -65.0894, 43.5035, 0.22", "15.4156, -67.0799, 44.0203, 0.07", "15.7074, -67.9475, 44.2606, 0.96", "16.3426, -69.7636, 44.7899, 0.22", "16.6392, -70.6016, 45.0488, 0.37", "17.1033, -71.9506, 45.5192, 0.07", "17.2659, -72.4344, 45.7143, 0.22", "17.6496, -73.5796, 46.2723, 0.07", "17.8837, -74.2897, 46.6153, 0.22", "18.3575, -75.7286, 47.2211, 0.07", "18.6349, -76.5267, 47.5403, 0.66", "19.0398, -77.6388, 47.9424, 0.66", "19.6724, -79.2687, 48.5443, 0.22", "19.8042, -79.5601, 48.6705, 0.22", "20.5125, -80.917, 49.3616, 0.07", "20.8089, -81.4465, 49.6316, 0.29", "21.5226, -82.739, 50.2627, 0.07", "21.8047, -83.2813, 50.5255, 0.22", "22.5411, -84.8095, 51.2191, 0.07", "23.1738, -86.2423, 51.8702, 0.74", "23.9734, -88.26, 52.7763, 0.15", "24.3349, -89.2849, 53.196, 0.29", "24.7927, -90.7077, 53.7504, 0.15", "25.186, -92.0184, 54.2279, 0.37", "25.7002, -93.9154, 54.8474, 0.22", "25.9589, -94.9455, 55.209, 0.74", "26.2373, -96.0658, 55.6776, 0.22", "26.5516, -97.2818, 56.1837, 0.07", "26.7593, -98.0295, 56.4943, 0.07", "26.9454, -98.6267, 56.7722, 0.66", "27.9456, -101.461, 58.1642, 0.15", "28.2012, -102.137, 58.4961, 0.15", "28.6357, -103.313, 59.0797, 0.52", "29.172, -104.837, 59.7864, 0.66", "29.8995, -106.947, 60.7168, 0.15", "30.1459, -107.693, 61.0377, 0.15", "30.5503, -108.92, 61.6342, 0.29", "30.8045, -109.776, 62.0947, 0.29", "31.053, -110.74, 62.6514, 0.07", "31.1627, -111.174, 62.8894, 0.22", "31.535, -112.69, 63.7453, 0.22", "32.0656, -114.783, 64.982, 0.59", "32.6137, -116.701, 66.1623, 0.07", "32.8205, -117.316, 66.5326, 0.66", "33.2551, -118.444, 67.2444, 0.07", "33.8917, -119.899, 68.2075, 0.07", "34.2958, -120.691, 68.7484, 0.22", "34.7068, -121.413, 69.247, 0.07", "35.1865, -122.183, 69.8632, 0.52", "36.1474, -123.715, 71.2296, 0.15", "36.9357, -124.981, 72.443, 0.59", "37.5645, -125.99, 73.4425, 0.07", "37.8757, -126.531, 73.9933, 0.29", "38.5693, -127.751, 75.2539, 0.07", "39.0732, -128.611, 76.167, 0.07", "39.298, -128.976, 76.5717, 0.44", "39.767, -129.706, 77.4263, 0.44", "40.5089, -130.881, 78.831, 0.15", "41.0824, -131.782, 79.9329, 0.15", "41.5687, -132.471, 80.8641, 0.22", "42.3145, -133.479, 82.3317, 0.22", "42.5439, -133.798, 82.8322, 0.15", "42.8423, -134.255, 83.5784, 0.29", "43.3147, -135.078, 84.9641, 0.29", "43.8602, -136.148, 86.6572, 0.52", "44.139, -136.678, 87.4672, 0.07", "44.6043, -137.503, 88.6407, 0.07", "45.0349, -138.259, 89.59, 0.22", "45.4173, -138.923, 90.3363, 0.22", "45.9106, -139.793, 91.1445, 0.22", "46.168, -140.24, 91.4864, 0.22", "46.7849, -141.274, 92.2171, 0.22", "47.5356, -142.551, 93.0391, 0.15", "48.2625, -143.926, 93.8697, 0.15", "48.6481, -144.819, 94.3945, 0.15", "48.9161, -145.599, 94.8541, 0.29", "49.1583, -146.485, 95.385, 0.29", "49.3502, -147.616, 96.1126, 0.07", "49.4173, -148.286, 96.5675, 0.07", "49.4445, -149.251, 97.1606, 0.07", "49.4379, -149.678, 97.4131, 0.22", "49.373, -151.183, 98.285, 0.07", "49.292, -152.829, 99.2696, 0.07", "49.2604, -153.581, 99.765, 0.07", "49.2303, -154.775, 100.616, 0.07", "49.2289, -155.425, 101.132, 0.74", "49.2371, -156.033, 101.66, 0.29", "49.2628, -157.468, 102.996, 0.07", "49.2636, -158.699, 104.168, 0.07", "49.2441, -159.122, 104.568, 0.59", "49.0644, -161.314, 106.739, 0.07", "49.0122, -161.911, 107.341, 0.07", "48.9388, -162.698, 108.124, 0.07", "48.7705, -164.164, 109.488, 0.07", "48.6678, -164.807, 110.048, 0.07", "48.3083, -166.374, 111.359, 0.07" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "5.16645, 6.75525, 4.66, 1.99", "5.16645, 6.75525, 4.66, 1.99", "5.50468, 7.34972, 4.70844, 1.99", "6.15825, 8.47545, 4.83, 1.18", "6.93096, 9.82639, 5.02064, 1.11", "7.616, 11.0545, 5.25073, 1.33", "8.24446, 12.2675, 5.49144, 1.55", "8.91092, 13.663, 5.77921, 1.11", "9.49905, 15.0274, 6.02786, 1.11", "10.0032, 16.2844, 6.18691, 0.74", "10.3356, 17.1816, 6.21552, 0.74", "10.6921, 18.1864, 6.12908, 0.66", "10.9339, 18.8328, 5.98532, 0.66", "11.5192, 20.0976, 5.55397, 0.96", "12.1527, 21.2669, 5.07095, 1.4", "12.7135, 22.2674, 4.64986, 1.62", "13.3507, 23.4321, 4.23605, 1.25", "14.1828, 25.1166, 3.81396, 0.81", "14.7272, 26.4883, 3.62631, 0.81", "15.0148, 27.5633, 3.61, 0.59", "15.2357, 28.8412, 3.68331, 0.59", "15.342, 30.6099, 3.90099, 0.59", "15.2008, 32.166, 4.20567, 0.44", "14.9544, 33.1137, 4.49058, 0.29", "14.7243, 33.68, 4.6831, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "6.61645, -2.51626, -6.09, 2.95", "6.61645, -2.51626, -6.09, 2.95", "7.77575, -3.07059, -6.81316, 1.7", "8.73192, -3.52106, -7.39114, 1.33", "9.88642, -4.09391, -8.10678, 1.33", "10.4633, -4.39679, -8.44497, 1.33", "11.4163, -4.97241, -8.95633, 1.47", "12.3184, -5.60726, -9.41304, 1.33", "13.276, -6.38989, -9.85783, 1.77", "14.3225, -7.38169, -10.2727, 1.99", "15.4757, -8.56416, -10.6912, 1.62", "16.976, -10.1809, -11.1752, 1.4", "18.1456, -11.5547, -11.5023, 1.25", "18.7409, -12.3271, -11.6417, 1.62", "19.2717, -13.1033, -11.7388, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-7.25355, -0.0487531, -0.42, 2.8", "-7.25355, -0.0487531, -0.42, 2.8", "-8.81877, -0.545894, 0.286221, 1.92", "-9.76935, -0.847808, 0.715118, 1.47", "-11.5966, -1.4282, 1.53959, 1.18", "-13.173, -1.9289, 2.25087, 1.18", "-14.7344, -2.4248, 2.95533, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.47645, -6.05475, -0.0300001, 0.74", "1.58643, -7.08656, -0.221217, 0.52", "1.70443, -7.94287, -0.341891, 0.74", "1.80004, -8.56718, -0.412169, 0.96", "1.94766, -9.45335, -0.473543, 1.18", "2.09074, -10.1306, -0.516764, 1.18", "2.30293, -10.96, -0.563337, 0.96", "2.62523, -11.8493, -0.581942, 0.88", "2.95684, -12.5412, -0.582556, 0.52", "3.29384, -13.0668, -0.59667, 0.22", "3.79378, -13.6831, -0.634682, 0.22", "4.05741, -13.9787, -0.675647, 0.44", "4.48017, -14.45, -0.774736, 0.88", "4.92696, -14.9564, -0.90383, 0.29", "5.44156, -15.6347, -1.0709, 0.59", "5.78203, -16.172, -1.19062, 0.22", "6.16652, -16.9221, -1.31369, 0.22", "6.38123, -17.3722, -1.36724, 0.74", "6.57088, -17.7817, -1.39484, 1.25", "7.07272, -18.8524, -1.4353, 0.44", "7.26623, -19.2564, -1.44345, 0.44", "7.5467, -19.8045, -1.44555, 0.74", "8.01424, -20.6602, -1.42816, 0.29", "8.18008, -20.9852, -1.40726, 0.22", "8.31297, -21.2914, -1.37962, 0.29", "8.54731, -22.0198, -1.30546, 0.29", "8.63494, -22.4507, -1.26306, 0.74", "8.7121, -23.1826, -1.19535, 1.25", "8.76314, -24.4813, -1.08104, 0.66", "8.78264, -25.1749, -1.01413, 0.44", "8.80875, -26.0022, -0.921767, 0.29", "8.84578, -26.6197, -0.839456, 0.22", "8.91154, -27.3146, -0.74711, 0.22", "8.97096, -27.8209, -0.680316, 0.44", "9.04302, -28.3094, -0.614561, 0.81", "9.09636, -28.6623, -0.555492, 1.11", "9.19509, -29.4971, -0.387778, 1.11", "9.26071, -30.3647, -0.204799, 0.81", "9.29496, -31.7587, 0.0917452, 0.44", "9.28516, -32.4004, 0.223831, 0.22", "9.27181, -32.8016, 0.295986, 0.22", "9.25084, -33.8291, 0.442511, 0.22", "9.2567, -34.413, 0.50154, 0.37", "9.31244, -35.1011, 0.547458, 0.59", "9.39661, -35.5505, 0.560916, 0.66", "9.5801, -36.2535, 0.56838, 0.22", "9.76459, -36.9171, 0.581898, 0.15", "9.87924, -37.3371, 0.590073, 0.29", "10.0065, -37.9296, 0.612853, 0.59", "10.1116, -38.649, 0.649423, 0.15", "10.1539, -39.0877, 0.674024, 0.15", "10.2136, -40.0702, 0.729699, 0.22", "10.2405, -40.5921, 0.77337, 0.59", "10.2839, -41.2852, 0.83402, 0.59", "10.3473, -41.9984, 0.903525, 0.22", "10.4656, -43.092, 1.00425, 0.22", "10.5146, -43.4709, 1.03893, 0.07", "10.6279, -44.3205, 1.08698, 0.07", "10.6604, -44.6582, 1.09688, 0.22", "10.6905, -45.1585, 1.09482, 0.22", "10.7109, -45.9527, 1.06365, 0.59", "10.707, -46.8372, 1.0031, 0.59", "10.698, -47.7161, 0.909997, 0.81", "10.7057, -48.2201, 0.834865, 0.81", "10.7885, -49.513, 0.631673, 0.15", "10.8757, -50.1979, 0.520693, 0.15", "10.9964, -50.7473, 0.434808, 0.59", "11.245, -51.4487, 0.321458, 0.15", "11.5385, -52.0129, 0.242363, 0.15", "11.7625, -52.3614, 0.204227, 0.15", "12.071, -52.771, 0.187166, 0.66", "12.3286, -53.0904, 0.200472, 0.81", "13.0256, -53.9651, 0.325509, 0.22", "13.5078, -54.6358, 0.497203, 0.29", "13.9161, -55.2696, 0.70498, 0.37", "14.175, -55.6742, 0.867678, 0.81", "14.5803, -56.2837, 1.18407, 1.03", "15.0072, -56.8809, 1.5774, 0.22", "15.408, -57.3942, 1.99994, 0.22", "15.7084, -57.7354, 2.29175, 0.22", "16.0247, -58.0373, 2.55367, 0.74", "16.408, -58.3415, 2.82136, 1.03", "17.0508, -58.749, 3.20269, 0.96", "17.644, -59.0665, 3.47147, 0.22", "18.2341, -59.3798, 3.70452, 0.15", "18.4879, -59.533, 3.80431, 0.22", "18.8689, -59.814, 3.95074, 0.22", "19.224, -60.1437, 4.10184, 0.22", "19.7454, -60.7361, 4.37141, 0.22", "20.21, -61.3075, 4.65207, 0.88", "20.4982, -61.6959, 4.85524, 0.81", "20.7837, -62.1189, 5.07123, 0.52", "21.1628, -62.7624, 5.37188, 0.15", "21.3563, -63.1132, 5.51295, 0.15", "21.6751, -63.6948, 5.72669, 0.44", "22.025, -64.3023, 5.92101, 0.22", "22.21, -64.6163, 6.01129, 0.66", "22.6071, -65.2382, 6.19823, 1.11", "23.2794, -66.2574, 6.49119, 0.22", "23.7097, -66.9489, 6.68835, 0.22", "23.9457, -67.3583, 6.80582, 0.74", "24.2476, -67.9012, 6.97137, 0.66", "24.6595, -68.6796, 7.20718, 0.22", "24.8699, -69.1068, 7.3358, 0.29", "25.0985, -69.6666, 7.48526, 0.52", "25.4923, -70.8395, 7.77083, 0.15", "25.6516, -71.5126, 7.91644, 0.96", "25.7506, -72.2863, 8.05737, 0.07", "25.7639, -72.6729, 8.10862, 0.07", "25.7444, -73.425, 8.19043, 0.22", "25.7007, -74.0178, 8.23596, 0.59", "25.5803, -74.8886, 8.25437, 0.66", "25.4459, -75.6828, 8.23899, 0.22", "25.2401, -76.8046, 8.1905, 0.22", "25.1639, -77.2197, 8.15496, 0.22", "25.0437, -77.8442, 8.07438, 0.81", "24.8718, -78.568, 7.96601, 0.66", "24.663, -79.3043, 7.86888, 0.15", "24.4616, -79.8898, 7.79992, 0.15", "24.114, -80.6519, 7.72364, 0.15", "23.9243, -81.0012, 7.69265, 0.96", "23.3173, -82.011, 7.61265, 0.15", "23.0554, -82.4537, 7.57075, 0.15", "22.8991, -82.7302, 7.53971, 0.66", "22.2042, -84.0142, 7.37485, 0.29", "21.7341, -84.9049, 7.24324, 0.15", "21.4648, -85.4647, 7.12809, 0.22", "21.059, -86.4522, 6.87045, 0.07", "20.9178, -86.8556, 6.76676, 0.88", "20.8119, -87.2344, 6.69241, 0.88", "20.6045, -88.1398, 6.5919, 0.15", "20.4268, -88.9144, 6.55816, 0.22", "20.2103, -89.7081, 6.57813, 0.66", "19.9337, -90.6105, 6.67304, 0.15", "19.6439, -91.5954, 6.85279, 0.07", "19.3837, -92.553, 7.1042, 0.07", "19.3026, -92.8816, 7.21181, 0.22", "19.1076, -93.6463, 7.51802, 0.15", "18.9836, -94.1824, 7.76577, 0.81", "18.7783, -95.2624, 8.36498, 0.15", "18.7097, -95.8265, 8.73349, 0.15", "18.6942, -96.2702, 9.07252, 0.59", "18.6995, -96.9832, 9.66842, 0.07", "18.7259, -97.6086, 10.2308, 0.29", "18.7864, -98.6612, 11.2077, 0.07", "18.8207, -99.18, 11.7184, 0.29", "18.8678, -99.9111, 12.4431, 0.15", "18.8735, -100.202, 12.7291, 0.22", "18.8564, -100.748, 13.2098, 0.07", "18.834, -101.051, 13.4469, 0.22", "18.7688, -101.933, 14.0687, 0.07", "18.7561, -102.247, 14.2771, 0.29", "18.7652, -103.276, 14.9134, 0.07", "18.82, -104.112, 15.4066, 0.96", "18.9164, -105.008, 15.9169, 0.07", "18.9513, -105.278, 16.0701, 0.22", "19.0487, -106.04, 16.502, 0.07", "19.1526, -106.785, 16.9418, 0.07", "19.2196, -107.218, 17.1999, 0.15", "19.3552, -108.029, 17.6895, 0.07", "19.4379, -108.539, 18.0021, 0.81", "19.619, -109.731, 18.7453, 0.07", "19.7568, -110.63, 19.3166, 0.07", "19.8178, -110.989, 19.5511, 0.22", "19.9797, -111.766, 20.0455, 0.44", "20.2013, -112.552, 20.5001, 0.07", "20.4626, -113.311, 20.9157, 0.07", "20.6155, -113.68, 21.1072, 0.29", "20.9471, -114.406, 21.4896, 0.07", "21.1799, -114.874, 21.7382, 0.44", "21.7575, -115.968, 22.3586, 0.15", "21.8736, -116.171, 22.4697, 0.15", "22.1047, -116.54, 22.6818, 0.29", "22.5597, -117.237, 23.1021, 0.07", "22.699, -117.424, 23.2229, 0.44", "23.0601, -117.886, 23.5822, 0.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.763546, 7.07024, -3.9, 0.96", "-0.763546, 7.07024, -3.9, 0.96", "-0.688336, 7.82632, -3.75613, 0.29", "-0.714396, 8.47883, -3.75097, 0.29", "-0.761076, 8.83155, -3.81322, 0.29", "-0.833676, 9.15969, -3.92, 0.29", "-1.03193, 9.84093, -4.23076, 0.88", "-1.24704, 10.4844, -4.60766, 0.88", "-1.47525, 11.1665, -5.05073, 0.29", "-1.68035, 11.8601, -5.47577, 0.66", "-1.82047, 12.4919, -5.80335, 0.66", "-1.94601, 13.414, -6.19683, 0.29", "-1.9796, 14.3374, -6.51871, 0.59", "-1.91693, 15.1966, -6.75145, 0.88", "-1.77771, 16.2027, -6.97276, 0.66", "-1.58466, 17.3068, -7.19132, 0.22", "-1.4849, 17.7654, -7.29373, 0.22", "-1.31847, 18.364, -7.46353, 0.22", "-1.08975, 19.0896, -7.75332, 0.44", "-0.857516, 19.7472, -8.13211, 0.96", "-0.643485, 20.2917, -8.521, 0.96", "-0.336525, 21.0615, -9.12904, 0.22", "-0.0966032, 21.6355, -9.57249, 0.22", "1.43826E-4, 21.8623, -9.73717, 0.37", "0.233936, 22.4068, -10.1279, 0.52", "0.402875, 22.8186, -10.4228, 0.29", "0.614662, 23.4746, -10.8977, 0.22", "0.750642, 24.0552, -11.311, 0.37", "0.857928, 24.6347, -11.6952, 0.37", "0.968647, 25.2104, -12.0645, 0.52", "1.12186, 25.9524, -12.5588, 0.88", "1.27269, 26.6001, -13.0031, 0.88", "1.50946, 27.4571, -13.5825, 0.29", "1.69412, 28.051, -13.9794, 0.29", "1.91273, 28.6691, -14.3798, 0.15", "2.17854, 29.389, -14.8339, 0.22", "2.40208, 29.9876, -15.2112, 0.96", "2.73617, 30.8714, -15.7752, 0.22", "2.8579, 31.234, -16.0013, 0.22", "2.95077, 31.585, -16.204, 0.15", "3.0479, 32.1204, -16.4557, 0.15", "3.08255, 32.4208, -16.5629, 0.15", "3.14355, 33.2991, -16.823, 0.15", "3.18663, 33.9541, -16.9738, 0.66", "3.22598, 34.4179, -17.0621, 0.81", "3.28836, 35.3205, -17.2098, 0.15", "3.31445, 35.9956, -17.3058, 0.22", "3.28783, 36.6004, -17.3909, 0.66", "3.21065, 37.4296, -17.495, 0.81", "3.16185, 37.9108, -17.5574, 0.52", "3.06491, 38.9222, -17.6895, 0.15", "2.97102, 39.552, -17.7681, 0.22", "2.79913, 40.2743, -17.8849, 0.29", "2.03168, 48.7834, -20.7764, 0.29", "0.0231298, 57.4522, -22.3146, 0.29", "-2.38387, 66.0666, -23.5157, 0.29", "-4.54334, 74.7278, -24.8751, 0.29", "-6.84432, 83.4199, -25.7234, 0.29", "-8.2546, 92.01, -28.1058, 0.29", "-8.4064, 101.034, -28.9626, 0.29", "-6.97863, 109.963, -28.4046, 0.29", "-5.03659, 118.781, -29.0347, 0.29", "-1.31674, 126.972, -29.2779, 0.29", "3.17793, 134.715, -28.8592, 0.29", "7.55304, 142.482, -29.8183, 0.29", "12.7478, 149.721, -30.3362, 0.29", "19.2256, 155.723, -30.7212, 0.29", "25.0464, 162.438, -30.7797, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "5.61792, 5.513, 0.0, 0.734524", "17.3185, 14.8989, 0.0, 0.734524", "29.0192, 24.2848, 0.0, 0.734524" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-1.04257, 13.9622, 24.7466, 0.15", "-1.35699, 15.4259, 25.5927, 0.15", "-1.49791, 16.6222, 26.2946, 0.15", "-1.66537, 17.9576, 27.0279, 0.15", "-1.80462, 18.8781, 27.4985, 0.15", "-1.85604, 19.1868, 27.6442, 0.37", "-1.99521, 19.9904, 27.9933, 0.88", "-2.18095, 20.8949, 28.2753, 0.22", "-2.51668, 22.0664, 28.5583, 0.22", "-2.8515, 22.9476, 28.7625, 0.22", "-3.1343, 23.5308, 28.8806, 0.29", "-3.61495, 24.3797, 29.0348, 0.66", "-4.51933, 25.8014, 29.2455, 0.81", "-5.30439, 26.9669, 29.434, 0.22", "-6.02114, 28.0258, 29.6456, 0.22", "-6.46719, 28.663, 29.7891, 0.81", "-7.00831, 29.4232, 29.972, 0.81", "-7.75479, 30.5263, 30.263, 0.22", "-8.40182, 31.6192, 30.5706, 0.44", "-9.00506, 32.8147, 30.9313, 0.81", "-9.30747, 33.5157, 31.1658, 0.81", "-9.77225, 34.6875, 31.5991, 0.37", "-10.1588, 35.7181, 31.9914, 0.37", "-10.4254, 36.4361, 32.2411, 0.37", "-10.854, 37.4955, 32.5659, 0.37", "-11.2258, 38.3619, 32.8157, 0.59", "-11.6827, 39.4288, 33.1142, 0.74", "-12.0956, 40.451, 33.3748, 0.88", "-12.5911, 41.7588, 33.6702, 0.22", "-13.0069, 42.9331, 33.9271, 0.22", "-13.285, 43.7906, 34.0769, 0.22", "-13.6362, 45.0169, 34.303, 0.44", "-14.0862, 46.862, 34.7083, 0.52", "-14.3785, 48.1532, 35.0361, 0.74", "-14.6789, 49.6215, 35.4322, 0.37", "-15.0446, 51.5431, 35.9467, 0.22", "-15.2942, 52.7318, 36.2807, 0.22", "-15.6313, 54.0769, 36.6712, 0.81", "-16.0076, 55.3487, 37.0858, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-1.04257, 13.9622, 24.7466, 0.52", "0.654931, 13.8548, 26.87, 0.52", "2.11265, 14.2805, 28.6881, 0.52", "3.10773, 14.7521, 29.8439, 0.37", "3.8156, 15.2356, 30.5946, 0.22", "4.58702, 15.805, 31.4072, 0.22", "5.66939, 16.6051, 32.499, 0.44", "6.96384, 17.8076, 33.7091, 0.44", "7.56878, 18.4134, 34.2514, 0.44", "8.72796, 19.6496, 35.3005, 0.22", "9.47699, 20.4255, 35.9951, 0.22", "10.0027, 20.9577, 36.4682, 0.22", "10.6973, 21.7109, 37.1462, 0.22", "11.1593, 22.2996, 37.6299, 0.22", "12.0711, 23.5874, 38.695, 0.88", "13.0414, 25.0127, 39.958, 0.15", "13.6297, 25.8722, 40.7155, 0.37", "14.1682, 26.6175, 41.4517, 0.15", "14.7632, 27.3723, 42.3196, 0.29", "15.4928, 28.1885, 43.443, 0.15", "16.2593, 28.9229, 44.6798, 0.15", "16.8141, 29.41, 45.5471, 0.66", "18.0665, 30.4805, 47.4278, 0.29", "18.925, 31.2059, 48.7237, 0.29", "19.3414, 31.5913, 49.3815, 0.29", "19.8684, 32.1897, 50.3309, 0.29", "20.3143, 32.8113, 51.2309, 0.07", "20.7677, 33.5393, 52.2341, 0.59", "21.6938, 35.1491, 54.3287, 0.22", "22.366, 36.3004, 55.889, 0.66", "23.4201, 37.9916, 58.3497, 0.15", "23.907, 38.7084, 59.43, 0.15", "24.2946, 39.2078, 60.2512, 0.15", "24.8482, 39.8212, 61.3701, 0.59", "25.9274, 40.8616, 63.3994, 0.22", "26.7538, 41.4921, 64.8776, 0.81", "27.6476, 42.0102, 66.4014, 0.15", "28.7914, 42.5396, 68.4413, 0.37", "29.5143, 42.7978, 69.7736, 0.37", "30.515, 43.0847, 71.6878, 0.22", "31.2105, 43.2847, 73.0492, 0.22", "31.9844, 43.5254, 74.6097, 0.59", "32.9581, 43.8555, 76.5127, 0.22", "33.7311, 44.1894, 77.8369, 0.74", "35.3306, 45.0047, 80.1854, 0.07", "36.4632, 45.6667, 81.6469, 0.07", "37.1109, 46.1092, 82.3467, 0.07", "37.9686, 46.7086, 83.1055, 0.22", "39.4591, 47.7205, 84.2012, 0.07", "40.3709, 48.3295, 84.7932, 0.22", "42.1373, 49.4669, 85.8029, 0.07", "44.0367, 50.6459, 86.8247, 0.22", "46.2166, 51.9653, 87.9944, 0.07", "46.9032, 52.412, 88.3478, 0.07", "48.1755, 53.3188, 88.9661, 0.07", "48.5299, 53.589, 89.1219, 0.22", "49.737, 54.5853, 89.5758, 0.29", "51.7221, 56.4694, 90.2759, 0.07", "53.3729, 58.243, 90.863, 0.07", "54.6758, 59.7344, 91.4405, 0.15", "55.3573, 60.5801, 91.889, 0.29", "56.211, 61.712, 92.6701, 0.29", "57.2498, 63.1975, 93.9194, 0.07", "58.1253, 64.4929, 95.2784, 0.22", "59.0422, 65.7521, 96.9768, 0.22", "60.5561, 67.7344, 100.016, 0.44", "61.1021, 68.4421, 101.219, 0.44", "61.6447, 69.0972, 102.511, 0.15", "62.4219, 69.9244, 104.437, 0.15", "63.1981, 70.6766, 106.307, 0.15", "63.6062, 71.0026, 107.095, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "14.7243, 33.68, 4.6831, 0.44", "15.2818, 34.8858, 3.58995, 0.44", "15.6953, 35.7627, 2.88284, 0.44", "16.1913, 36.897, 2.09462, 0.44", "16.3921, 37.4197, 1.75124, 0.74", "16.6027, 38.0793, 1.33912, 1.33", "16.9146, 39.3551, 0.584576, 0.66", "16.9752, 39.8433, 0.352416, 0.88", "16.9521, 40.8544, -0.0858027, 0.29", "16.8414, 41.5482, -0.371547, 0.29", "16.6893, 42.2181, -0.635573, 0.44", "16.4379, 43.0942, -0.951605, 0.52", "16.0334, 44.3679, -1.34559, 0.66", "15.8027, 45.1421, -1.57566, 0.22", "15.6563, 45.712, -1.73496, 0.22", "15.4648, 46.5712, -1.99495, 0.29", "15.3313, 47.1786, -2.2262, 0.29", "15.1252, 48.034, -2.62832, 0.66", "14.9342, 48.6917, -2.99968, 0.81", "14.6382, 49.5629, -3.56963, 0.88", "14.089, 50.9548, -4.55611, 0.59", "13.738, 51.7272, -5.15643, 0.37", "13.544, 52.13, -5.50173, 0.22", "13.2251, 52.7367, -6.07515, 0.22", "12.9683, 53.2081, -6.54385, 0.37", "12.6167, 53.8139, -7.17668, 0.37", "12.1875, 54.5403, -7.93969, 0.66", "11.7557, 55.2446, -8.68423, 1.11", "11.2668, 55.9826, -9.53022, 0.29", "10.934, 56.4452, -10.1596, 0.29", "10.8049, 56.6243, -10.4448, 0.29", "10.6292, 56.8999, -10.9083, 0.29", "10.5884, 57.0704, -11.102, 0.29", "10.6288, 57.4499, -11.3285, 0.29", "10.8016, 58.179, -11.6278, 0.29", "11.0718, 59.1823, -11.9928, 0.29", "11.3104, 60.0627, -12.2942, 0.74", "11.633, 61.4094, -12.7305, 1.25", "11.875, 62.7062, -13.129, 0.81", "12.0373, 64.0224, -13.5104, 0.29", "12.1008, 65.0153, -13.7799, 0.29", "12.14, 66.0468, -14.0532, 0.52", "12.1805, 67.3569, -14.3381, 0.66", "12.1864, 68.6064, -14.5476, 0.22", "12.1345, 69.5245, -14.6666, 0.22", "11.992, 70.5541, -14.7603, 0.37", "11.7735, 71.6749, -14.8332, 0.96", "11.3894, 73.3653, -14.9139, 0.22", "11.2346, 74.0794, -14.9372, 0.37", "11.1142, 74.7475, -14.9762, 0.52", "10.937, 75.7601, -15.0997, 0.22", "10.7496, 76.6255, -15.2698, 0.22", "10.6173, 77.126, -15.4279, 0.81", "10.421, 77.952, -15.7832, 0.81", "10.2563, 79.0138, -16.236, 0.22", "10.2056, 79.829, -16.5674, 0.44", "10.1932, 80.2605, -16.736, 0.74", "10.1225, 81.2113, -17.1127, 0.22", "10.0771, 81.6428, -17.2822, 0.22", "9.99345, 82.3681, -17.5382, 0.29", "9.96799, 83.0398, -17.7306, 0.29", "9.99429, 83.7308, -17.8836, 0.22", "10.043, 84.4442, -18.0256, 0.22", "10.0851, 85.3245, -18.2016, 0.59", "10.0908, 86.2677, -18.4063, 0.88", "10.069, 87.5777, -18.755, 0.81", "10.0547, 88.9831, -19.2077, 0.37", "10.0762, 89.6955, -19.4486, 0.22", "10.1352, 90.5194, -19.7317, 0.22", "10.1886, 91.1077, -19.9664, 0.22", "10.2876, 92.0131, -20.4275, 0.22", "10.3377, 92.733, -20.8834, 0.22", "10.3557, 93.3772, -21.3533, 0.44", "10.3534, 94.0617, -21.8366, 0.88", "10.3398, 94.8157, -22.3066, 0.66", "10.2548, 95.8635, -22.8625, 0.22", "10.1502, 96.6906, -23.2189, 0.15", "10.0604, 97.4552, -23.5008, 0.22", "9.933, 98.3504, -23.8411, 0.29", "9.81082, 99.1155, -24.0921, 0.74", "9.7053, 100.077, -24.3015, 0.81", "9.68844, 100.55, -24.351, 0.52", "9.76948, 101.549, -24.4197, 0.66" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "14.7243, 33.68, 4.6831, 0.29", "14.8948, 33.7677, 4.64638, 0.29", "15.6674, 34.2744, 4.43652, 0.29", "16.1556, 34.6928, 4.30377, 0.29", "16.6509, 35.1978, 4.14673, 0.29", "16.8889, 35.4734, 4.08425, 0.29", "17.4723, 36.2402, 3.91573, 0.59", "18.0068, 37.1179, 3.72423, 1.11", "18.5933, 38.3651, 3.47155, 0.74", "19.0467, 39.6367, 3.21579, 0.74", "19.4148, 41.0763, 2.98343, 0.74", "19.6779, 42.6017, 2.81873, 0.52", "19.8239, 44.0847, 2.79278, 0.74", "19.8996, 45.1606, 2.86181, 0.52", "19.9708, 45.9965, 2.99152, 0.88", "20.1681, 47.2892, 3.3265, 0.96", "20.4281, 48.2535, 3.66426, 0.52", "21.0265, 49.6434, 4.28688, 0.44", "21.4708, 50.394, 4.65076, 0.44", "22.3367, 51.6703, 5.1612, 0.66", "22.9299, 52.4448, 5.44699, 0.44", "23.5802, 53.2091, 5.66794, 0.74", "24.2229, 53.9251, 5.82904, 0.88", "24.8397, 54.6489, 5.92742, 1.03", "25.7292, 56.0019, 6.0753, 1.18" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "19.2717, -13.1033, -11.7388, 0.59", "20.5749, -13.7844, -11.4967, 0.59", "21.5946, -13.7186, -11.5512, 0.59", "22.4833, -13.3656, -11.7361, 0.44", "23.2529, -12.97, -11.9758, 0.44", "24.4403, -12.2993, -12.3112, 0.81", "25.4681, -11.7231, -12.5721, 0.81", "26.4364, -11.0999, -12.8107, 1.11", "27.4904, -10.4344, -13.0308, 0.88", "28.327, -9.96493, -13.1653, 1.03", "29.6035, -9.43648, -13.2578, 0.37", "30.0948, -9.30953, -13.2166, 0.37", "30.9083, -9.25283, -13.0075, 0.74", "31.8789, -9.42903, -12.5767, 1.03", "32.9146, -9.86983, -11.891, 1.25", "33.2323, -10.0748, -11.6231, 1.4" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "19.2717, -13.1033, -11.7388, 0.29", "18.8917, -14.205, -11.2323, 0.29", "18.5621, -14.9306, -10.9185, 0.22", "18.3356, -15.2298, -10.7747, 0.22", "17.8789, -15.6625, -10.5164, 0.22", "17.5756, -15.9411, -10.3346, 0.22", "17.3986, -16.1246, -10.2147, 0.22", "16.8855, -16.7227, -9.8268, 0.96", "16.2806, -17.5509, -9.34164, 0.59", "15.8807, -18.2426, -8.93393, 0.22", "15.5765, -18.8946, -8.55959, 0.22", "15.3182, -19.6623, -8.11602, 0.22", "15.1965, -20.3064, -7.74709, 1.03", "15.174, -20.9347, -7.38428, 1.03", "15.2332, -21.9599, -6.82037, 0.15", "15.2589, -22.3419, -6.61503, 0.74", "15.2674, -23.0312, -6.23301, 0.37", "15.2333, -23.6362, -5.89525, 0.44", "15.1342, -24.5455, -5.40443, 0.22", "15.0772, -24.9488, -5.19826, 0.29", "14.9444, -25.8218, -4.77965, 0.22", "14.8428, -26.5909, -4.40735, 0.74", "14.8023, -27.0142, -4.20531, 0.74", "14.7072, -28.1925, -3.62534, 0.37", "14.6476, -29.0789, -3.18098, 0.22", "14.6106, -29.7705, -2.82781, 0.15", "14.5979, -30.4614, -2.47624, 0.74", "14.5952, -31.4474, -1.9733, 0.22", "14.5744, -32.1665, -1.61383, 0.74", "14.531, -32.7545, -1.33892, 0.88", "14.3694, -33.8178, -0.933108, 0.22", "14.1814, -34.6069, -0.704367, 0.22", "14.0316, -35.0691, -0.608845, 0.29", "13.7381, -35.8397, -0.500398, 0.81", "13.5125, -36.4418, -0.447464, 0.44", "13.132, -37.5379, -0.407427, 0.52", "12.8834, -38.3407, -0.421337, 0.22", "12.6132, -39.2703, -0.476688, 0.74", "12.447, -39.9373, -0.534194, 0.15", "12.3281, -40.4944, -0.588373, 0.15", "12.1712, -41.2004, -0.636128, 0.15", "12.0664, -41.6657, -0.629843, 0.81", "11.9275, -42.2104, -0.5914, 0.52", "11.6248, -43.3472, -0.454096, 0.15", "11.4744, -43.8888, -0.370346, 0.37", "11.2193, -44.9042, -0.18429, 0.22", "10.9928, -45.9833, 0.0381161, 0.37", "10.8898, -46.6236, 0.16754, 0.22", "10.8187, -47.407, 0.311752, 0.74", "10.8014, -48.0699, 0.437411, 0.29", "10.8328, -49.3089, 0.659608, 0.07", "10.8702, -49.7703, 0.734941, 0.29", "10.9404, -50.4905, 0.85947, 0.07", "11.0064, -51.2724, 0.994592, 0.22", "11.0726, -52.3338, 1.15885, 0.22", "11.1074, -53.0792, 1.23904, 0.96", "11.1434, -54.3773, 1.28676, 0.22", "11.1637, -55.4158, 1.25643, 0.15", "11.1814, -56.0924, 1.19165, 0.29", "11.2194, -57.1073, 1.02583, 0.66", "11.2936, -58.4883, 0.687411, 0.22", "11.3332, -59.3337, 0.438013, 0.15", "11.3623, -60.2178, 0.152829, 0.15", "11.3624, -60.8818, -0.0586835, 0.74", "11.3347, -61.6239, -0.268711, 0.88", "11.2736, -62.4635, -0.45794, 0.15", "11.2031, -63.0981, -0.562968, 0.22", "11.0789, -63.9202, -0.647979, 0.07", "10.8498, -64.98, -0.721805, 0.22", "10.6184, -65.7975, -0.745112, 0.15", "10.4416, -66.3453, -0.745373, 0.15", "10.2793, -66.8229, -0.735189, 0.15", "10.0975, -67.4242, -0.713212, 0.88", "9.97532, -67.8798, -0.695946, 0.88", "9.65612, -69.1602, -0.648254, 0.07", "9.47813, -69.8116, -0.62344, 0.74", "9.28327, -70.5174, -0.603512, 0.22", "9.01666, -71.544, -0.560526, 0.15", "8.86662, -72.1913, -0.523697, 0.29", "8.7097, -72.9486, -0.46739, 0.81", "8.52308, -73.8667, -0.391234, 0.22", "8.33081, -74.7646, -0.313714, 0.15", "8.20918, -75.2945, -0.271314, 0.15", "8.04358, -75.9434, -0.245825, 0.74", "7.7346, -77.1362, -0.283414, 0.15", "7.60432, -77.6391, -0.334736, 0.15", "7.43086, -78.1917, -0.437474, 0.88", "7.24065, -78.7094, -0.563556, 0.96", "6.87213, -79.6413, -0.822571, 0.22", "6.40311, -80.8386, -1.19636, 0.15", "6.08839, -81.6757, -1.49005, 0.29", "5.67908, -82.8536, -1.91056, 0.15", "5.53242, -83.309, -2.06954, 0.66", "5.31973, -83.9898, -2.30077, 0.74", "4.98195, -85.0185, -2.62862, 0.15", "4.76564, -85.6557, -2.82094, 0.15", "4.58393, -86.255, -3.0042, 0.66", "4.35063, -87.2529, -3.29307, 0.15", "4.30739, -87.4822, -3.35971, 0.15", "4.19906, -88.209, -3.55439, 0.29", "4.0931, -89.0562, -3.76918, 0.15", "3.98515, -89.9584, -3.99584, 0.59", "3.89025, -90.7596, -4.20615, 0.22", "3.8104, -91.4229, -4.382, 0.22", "3.74624, -91.9826, -4.49077, 0.07", "3.67476, -92.7174, -4.58099, 0.07", "3.59126, -93.3711, -4.61498, 0.15", "3.49099, -93.9861, -4.59146, 0.81", "3.38484, -94.5611, -4.52595, 0.22", "3.17305, -95.7046, -4.34341, 0.22", "3.00872, -96.5557, -4.18165, 0.59", "2.87621, -97.1923, -4.0409, 0.59", "2.6418, -98.249, -3.7818, 0.88", "2.39469, -99.2707, -3.50369, 0.07", "2.21705, -99.9491, -3.3147, 0.15", "2.01446, -100.649, -3.12776, 0.59", "1.86767, -101.136, -2.98049, 0.74", "1.55826, -102.13, -2.65878, 0.22", "1.2751, -102.927, -2.37819, 0.22", "0.972577, -103.696, -2.0749, 0.96", "0.41832, -104.956, -1.55031, 0.15", "0.116497, -105.587, -1.28524, 0.15", "-0.207305, -106.184, -1.02613, 0.88", "-0.834746, -107.146, -0.608582, 0.15", "-1.23771, -107.681, -0.373707, 0.15", "-1.63448, -108.146, -0.168477, 0.74", "-2.03927, -108.579, 0.0148848, 0.74", "-2.49721, -109.093, 0.227719, 0.15", "-2.95298, -109.645, 0.448491, 0.29", "-3.24029, -110.026, 0.585838, 0.29", "-3.7654, -110.773, 0.839592, 0.15", "-4.22381, -111.472, 1.07967, 0.74", "-5.02375, -112.749, 1.50556, 0.22", "-5.36399, -113.302, 1.68209, 0.22", "-5.80604, -114.013, 1.91521, 0.44", "-6.05976, -114.4, 2.04136, 0.96", "-6.78366, -115.463, 2.36107, 0.07", "-6.98724, -115.752, 2.42668, 0.07", "-7.32973, -116.211, 2.50436, 0.88", "-7.91478, -116.97, 2.61054, 0.15", "-8.35764, -117.516, 2.65319, 0.52", "-9.00266, -118.263, 2.64286, 0.07", "-9.631, -118.942, 2.5513, 0.07", "-10.1362, -119.461, 2.44382, 0.66", "-10.5653, -119.894, 2.32478, 0.22", "-11.1906, -120.496, 2.12056, 0.22", "-11.8065, -121.058, 1.95668, 0.44", "-12.3258, -121.515, 1.86473, 0.15", "-12.8976, -122.002, 1.81286, 0.15", "-13.4289, -122.459, 1.79486, 0.81", "-14.023, -123.004, 1.83597, 0.22", "-14.8047, -123.804, 1.99493, 0.22", "-15.3991, -124.497, 2.18594, 0.22", "-15.7567, -124.969, 2.34365, 0.15", "-16.0034, -125.336, 2.47456, 0.59", "-16.3314, -125.83, 2.65075, 0.15", "-16.6476, -126.316, 2.80446, 0.15", "-16.937, -126.732, 2.89694, 0.74", "-17.4579, -127.413, 3.02985, 0.22", "-17.7203, -127.733, 3.09051, 0.22", "-18.2223, -128.265, 3.18051, 0.22", "-18.5515, -128.58, 3.23722, 0.22", "-19.0482, -129.04, 3.32313, 0.52", "-19.7363, -129.678, 3.44685, 0.15", "-20.2326, -130.13, 3.53097, 0.15", "-20.7406, -130.566, 3.61583, 0.81", "-21.7535, -131.423, 3.77827, 0.07", "-22.0453, -131.661, 3.81858, 0.52", "-22.8666, -132.31, 3.89681, 0.15", "-23.3213, -132.658, 3.91343, 0.59", "-23.8814, -133.104, 3.91008, 0.15", "-24.4077, -133.535, 3.86592, 0.81", "-24.8315, -133.891, 3.79322, 0.29", "-25.7253, -134.651, 3.60434, 0.07", "-26.1968, -135.076, 3.49003, 0.44", "-26.8226, -135.678, 3.32663, 0.15", "-27.3329, -136.203, 3.2021, 0.52", "-27.7992, -136.685, 3.10026, 0.81", "-28.7565, -137.644, 2.96381, 0.07", "-29.3086, -138.165, 2.94636, 0.07", "-29.6917, -138.506, 2.96968, 0.59", "-30.4292, -139.111, 3.07136, 0.15", "-30.9627, -139.527, 3.18827, 0.74", "-31.9973, -140.32, 3.48501, 0.07", "-32.8305, -140.976, 3.76805, 0.22", "-33.068, -141.163, 3.84783, 0.22", "-33.4317, -141.474, 3.96486, 0.44", "-33.6663, -141.699, 4.02642, 0.44", "-34.2895, -142.413, 4.1723, 0.22", "-34.8238, -143.106, 4.26514, 0.88", "-35.2196, -143.642, 4.31661, 0.66", "-35.7682, -144.36, 4.38208, 0.15", "-36.4409, -145.188, 4.45328, 0.15", "-36.9018, -145.677, 4.49685, 0.59", "-37.4382, -146.134, 4.54236, 0.07", "-37.7104, -146.317, 4.56877, 0.15", "-38.2289, -146.569, 4.6212, 0.07", "-38.6653, -146.731, 4.64497, 0.22", "-39.3865, -146.962, 4.67585, 0.07", "-40.0577, -147.14, 4.71512, 0.07", "-40.3727, -147.22, 4.72021, 0.37", "-41.3701, -147.484, 4.70392, 0.15", "-42.0355, -147.678, 4.66722, 0.59", "-43.1197, -148.011, 4.57843, 0.07", "-44.3066, -148.408, 4.48012, 0.07", "-45.3249, -148.77, 4.40473, 0.07", "-45.7901, -148.939, 4.37255, 0.66", "-46.973, -149.38, 4.27271, 0.07", "-47.6228, -149.645, 4.22602, 0.52", "-48.2976, -149.969, 4.16079, 0.07", "-48.8225, -150.259, 4.09121, 0.22", "-49.6637, -150.728, 3.96907, 0.07", "-50.1872, -151.026, 3.8443, 0.29", "-50.8538, -151.434, 3.61379, 0.07", "-51.3036, -151.75, 3.40923, 0.59", "-52.1548, -152.42, 2.92154, 0.15", "-52.6685, -152.878, 2.56523, 0.66", "-53.127, -153.318, 2.17046, 0.07", "-53.3237, -153.504, 1.97633, 0.07", "-53.662, -153.845, 1.54115, 0.07", "-53.8158, -154.031, 1.29424, 0.22", "-54.0568, -154.386, 0.804081, 0.22", "-54.3789, -154.859, 0.107426, 0.15", "-54.6671, -155.242, -0.513768, 0.81", "-55.1326, -155.81, -1.49546, 0.07", "-55.3499, -156.073, -1.99019, 0.15", "-55.6049, -156.401, -2.65752, 0.29", "-55.9717, -156.968, -3.78313, 0.15", "-56.0996, -157.202, -4.26086, 0.15", "-56.24, -157.464, -4.8461, 0.74", "-56.4685, -157.824, -5.89533, 0.37", "-56.6883, -158.17, -7.13084, 0.81", "-56.8078, -158.388, -8.04893, 0.59", "-56.9002, -158.591, -9.12669, 0.59", "-56.9477, -158.675, -9.67437, 0.59", "-57.1173, -158.809, -11.4781, 0.44", "-57.167, -158.804, -11.9238, 0.44", "-57.2203, -158.776, -12.3968, 0.44", "-57.2779, -158.713, -12.9167, 0.44", "-57.414, -158.546, -14.0322, 0.66", "-57.5967, -158.328, -15.4092, 0.07", "-57.6968, -158.237, -15.9234, 0.15" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-14.7344, -2.4248, 2.95533, 0.37", "-14.9852, -1.55687, 2.2394, 0.37", "-15.0977, -1.18639, 1.9579, 0.37", "-15.3183, -0.678748, 1.57987, 0.44", "-15.484, -0.377258, 1.34814, 0.44", "-15.6297, -0.166088, 1.1674, 0.44", "-15.895, 0.16467, 0.872912, 0.59", "-16.309, 0.660709, 0.444896, 1.03", "-16.8057, 1.19869, 0.0372821, 0.74", "-17.2004, 1.62747, -0.213067, 0.74", "-17.7718, 2.28913, -0.504796, 1.03", "-18.0252, 2.60059, -0.605951, 1.25", "-18.5078, 3.2763, -0.728573, 0.37", "-18.8175, 3.79671, -0.75495, 0.74", "-19.1784, 4.52888, -0.725934, 0.37", "-19.3743, 5.00339, -0.682878, 0.37", "-19.5075, 5.39073, -0.637975, 0.74", "-19.743, 6.23631, -0.544916, 0.66", "-19.9435, 7.04293, -0.446498, 0.52", "-20.0508, 7.52224, -0.38232, 0.52", "-20.2538, 8.60615, -0.229552, 0.66", "-20.3483, 9.35061, -0.132634, 1.25", "-20.4156, 10.6396, -0.00868225, 1.33", "-20.3959, 11.4588, 0.0361947, 1.03", "-20.3234, 12.3046, 0.0320734, 0.66", "-20.2162, 13.2419, -0.0396539, 0.29", "-20.1196, 14.0279, -0.180898, 0.15", "-20.0485, 14.8439, -0.40018, 0.52", "-20.0356, 15.212, -0.52865, 0.52", "-20.0519, 15.6915, -0.703575, 0.74", "-20.1753, 16.7133, -1.02742, 0.37", "-20.304, 17.4438, -1.2117, 0.59", "-20.4924, 18.3073, -1.38164, 0.29", "-20.6046, 18.7238, -1.44767, 0.74", "-20.8844, 19.6001, -1.58702, 1.03", "-21.1787, 20.42, -1.73196, 0.74", "-21.4444, 21.103, -1.89086, 0.22", "-21.6071, 21.5222, -2.00769, 0.22", "-21.8561, 22.1871, -2.22504, 0.22", "-22.0986, 22.9357, -2.49358, 0.22", "-22.2497, 23.5435, -2.73903, 0.29", "-22.3361, 24.1834, -3.01999, 0.59", "-22.3127, 24.786, -3.28129, 1.18", "-22.2656, 25.0438, -3.38928, 1.18", "-22.0958, 25.6853, -3.65303, 0.52", "-21.9602, 26.1746, -3.83924, 0.52", "-21.8228, 26.7445, -4.03989, 0.52", "-21.6839, 27.6444, -4.34046, 0.22", "-21.6744, 27.9236, -4.42582, 0.22", "-21.7328, 28.5724, -4.59174, 0.22", "-21.8484, 29.2456, -4.72118, 0.59", "-21.8988, 29.4904, -4.74514, 0.59", "-22.0933, 30.3732, -4.7647, 1.03", "-22.2631, 31.1269, -4.75457, 1.47", "-22.4759, 32.1523, -4.75127, 0.22", "-22.6521, 32.9809, -4.7726, 0.37", "-22.8587, 33.8546, -4.83041, 0.37", "-23.086, 34.6549, -4.93143, 0.52", "-23.2945, 35.2662, -5.05363, 0.29", "-23.5543, 35.9555, -5.26234, 0.59", "-23.8453, 36.6625, -5.52766, 0.44", "-24.054, 37.1277, -5.72099, 0.29", "-24.3755, 37.8153, -6.02164, 0.52", "-24.5717, 38.261, -6.20214, 0.88", "-24.7715, 38.7848, -6.3765, 1.03", "-25.1254, 39.8793, -6.66076, 1.33", "-25.4013, 40.7907, -6.84071, 0.29", "-25.4807, 41.0177, -6.87527, 0.29", "-25.6364, 41.3947, -6.92362, 0.29", "-25.7956, 41.6916, -6.9696, 0.29", "-26.0856, 42.1315, -7.06753, 0.29", "-26.5646, 42.7494, -7.25642, 0.37", "-27.0936, 43.3831, -7.47195, 0.81", "-27.6164, 44.0, -7.70042, 1.18", "-28.4106, 44.9348, -8.06344, 0.88", "-28.8337, 45.445, -8.27471, 0.59", "-29.2884, 46.0228, -8.52422, 0.37", "-29.4816, 46.2901, -8.66203, 0.29", "-29.7567, 46.6809, -8.87266, 0.29", "-30.0044, 47.018, -9.04089, 0.29", "-30.225, 47.3382, -9.16683, 0.29", "-30.6104, 47.8958, -9.33319, 0.66", "-31.1443, 48.6661, -9.51213, 1.47", "-32.0875, 49.968, -9.80801, 0.52", "-32.6648, 50.73, -9.97272, 0.37", "-33.2978, 51.5426, -10.1372, 0.37", "-33.683, 52.0536, -10.222, 0.88", "-34.1136, 52.6763, -10.2972, 1.47" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-14.7344, -2.4248, 2.95533, 0.81", "-14.8898, -3.42378, 2.45534, 0.81", "-15.0569, -3.8262, 2.26676, 0.81", "-15.911, -5.15132, 1.79887, 0.22", "-16.4117, -5.7616, 1.67095, 0.22", "-17.1032, -6.50043, 1.59566, 0.44", "-17.9386, -7.31526, 1.56799, 0.88", "-19.2209, -8.3707, 1.59923, 0.44", "-20.5002, -9.25061, 1.6566, 0.59", "-21.8133, -9.97563, 1.71272, 0.52", "-23.277, -10.6882, 1.76522, 0.22", "-24.8519, -11.3548, 1.82444, 0.22", "-25.6643, -11.6344, 1.87712, 0.66", "-26.973, -11.9642, 2.01233, 0.96", "-28.4051, -12.2391, 2.19902, 1.11", "-28.8973, -12.3152, 2.2832, 0.96", "-30.3746, -12.4855, 2.63598, 0.22", "-32.3433, -12.7111, 3.25495, 0.66", "-33.3004, -12.8755, 3.60404, 0.15", "-33.8496, -12.9921, 3.84374, 0.15", "-34.9052, -13.2489, 4.36069, 0.52", "-35.8448, -13.4831, 4.80239, 0.22", "-36.9158, -13.802, 5.22107, 0.66", "-37.9817, -14.2035, 5.4793, 1.03" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "29.0192, 24.2848, 0.0, 0.15", "40.7198, 33.6708, 0.0, 0.15", "52.4204, 43.0567, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-16.0076, 55.3487, 37.0858, 0.29", "-16.7756, 56.3998, 37.3765, 0.29", "-17.2695, 57.1557, 37.6238, 0.29", "-17.7818, 58.064, 37.9937, 0.29", "-18.2591, 59.0788, 38.4611, 0.22", "-18.7051, 60.2184, 38.9777, 0.22", "-19.1082, 61.3145, 39.4701, 0.22", "-19.5698, 62.8309, 40.1956, 0.22", "-19.8601, 63.9601, 40.7197, 0.52", "-20.1322, 65.1711, 41.2652, 0.81", "-20.3561, 66.2578, 41.7836, 0.44", "-20.6751, 67.8832, 42.6114, 0.22", "-20.8453, 68.7556, 43.0361, 0.22", "-21.07, 69.7311, 43.4348, 0.29", "-21.3253, 70.7465, 43.8102, 0.29", "-21.6268, 71.7069, 44.1547, 0.29", "-21.8683, 72.3642, 44.3848, 0.66", "-22.3135, 73.4719, 44.7048, 0.66", "-22.6497, 74.2545, 44.8731, 0.37", "-23.1843, 75.5135, 45.0801, 0.15", "-23.8143, 77.0868, 45.2473, 0.15", "-24.1077, 77.8626, 45.3005, 1.11", "-24.7052, 79.5367, 45.3844, 0.59", "-25.3978, 81.6535, 45.4534, 0.22", "-25.6644, 82.5852, 45.4634, 0.37", "-26.0923, 84.3151, 45.4383, 0.22", "-26.3032, 85.364, 45.4137, 0.74", "-26.4567, 86.1601, 45.3866, 0.74", "-26.7359, 87.6547, 45.3512, 0.22", "-26.971, 88.8786, 45.2943, 0.22", "-27.2964, 90.497, 45.1567, 0.22", "-27.6469, 92.0434, 44.9817, 0.29", "-27.9703, 93.3867, 44.8054, 0.29", "-28.4242, 95.2085, 44.5417, 0.44", "-28.8441, 96.8772, 44.277, 0.22", "-29.2494, 98.4894, 44.0035, 0.15", "-29.5523, 99.7524, 43.8079, 0.15", "-29.9253, 101.296, 43.6503, 0.15", "-30.1813, 102.328, 43.5829, 0.52", "-30.4709, 103.378, 43.5503, 0.74", "-30.5549, 103.645, 43.5615, 0.74", "-30.9839, 104.833, 43.6496, 0.22", "-31.6222, 106.361, 43.7657, 0.37", "-32.4739, 108.076, 43.8983, 0.22", "-32.9761, 108.998, 43.9557, 0.22", "-33.5903, 110.077, 44.0003, 0.29", "-34.2178, 111.167, 44.0498, 0.15", "-34.6391, 111.877, 44.0758, 0.74", "-34.9592, 112.434, 44.1081, 0.22", "-35.8052, 114.028, 44.3566, 0.15", "-36.1585, 114.773, 44.5063, 0.15", "-36.6663, 115.914, 44.7742, 0.37", "-37.0137, 116.723, 44.9781, 0.37", "-37.6243, 118.131, 45.3469, 0.15", "-38.3421, 119.617, 45.742, 0.66", "-38.7539, 120.338, 45.9331, 0.15", "-39.2227, 121.053, 46.0896, 0.15", "-40.0147, 122.173, 46.2625, 0.07", "-40.3075, 122.586, 46.3134, 0.15", "-40.8888, 123.419, 46.3848, 0.15", "-41.6128, 124.527, 46.426, 0.37", "-42.6769, 126.35, 46.4715, 0.15", "-43.1139, 127.239, 46.5218, 0.29", "-43.7625, 128.854, 46.6466, 0.07", "-43.9751, 129.525, 46.7094, 0.37", "-44.1614, 130.296, 46.7742, 0.15", "-44.3402, 131.265, 46.837, 0.37", "-44.6595, 133.375, 46.9395, 0.15", "-44.7781, 134.154, 46.9629, 0.29", "-44.8807, 134.888, 46.9652, 0.29", "-45.0778, 136.603, 46.9893, 0.15", "-45.1914, 137.93, 47.0127, 0.15", "-45.2136, 138.559, 47.019, 0.37", "-45.1926, 139.367, 46.9883, 0.37", "-45.1351, 140.566, 46.9204, 0.07", "-45.005, 142.126, 46.8098, 0.29", "-44.8794, 143.102, 46.7372, 0.07", "-44.7209, 144.118, 46.6663, 0.15", "-44.43, 145.85, 46.5581, 0.07", "-44.2834, 146.73, 46.505, 0.22", "-44.1437, 147.511, 46.458, 0.66", "-44.0476, 148.001, 46.4438, 0.66", "-43.5114, 150.347, 46.5199, 0.07", "-43.1205, 151.946, 46.6414, 0.07", "-42.9036, 152.799, 46.7419, 0.66", "-42.4699, 154.567, 46.9759, 0.22", "-42.1587, 156.033, 47.1729, 0.81", "-41.9828, 157.121, 47.3136, 0.59", "-41.8157, 159.607, 47.5964, 0.07", "-41.8338, 160.181, 47.6604, 0.07", "-41.9693, 161.153, 47.7511, 0.22", "-42.2278, 162.187, 47.824, 0.07", "-42.5154, 163.091, 47.8801, 0.22", "-43.2276, 165.02, 48.0241, 0.15", "-43.671, 166.144, 48.131, 0.74", "-44.4457, 168.191, 48.3264, 0.15", "-44.7703, 169.083, 48.4109, 0.29", "-45.4869, 171.124, 48.6029, 0.07", "-45.6503, 171.616, 48.6468, 0.22", "-46.0268, 172.806, 48.7769, 0.22", "-46.3579, 173.907, 48.932, 0.44", "-46.6886, 175.189, 49.2006, 1.03", "-46.932, 176.269, 49.5018, 0.44", "-47.2307, 177.679, 49.9197, 0.44", "-47.6229, 179.637, 50.5613, 0.15", "-47.8347, 180.75, 50.9825, 0.52", "-48.1499, 182.605, 51.8129, 0.15", "-48.304, 183.769, 52.4353, 0.66" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-16.0076, 55.3487, 37.0858, 0.15", "-15.6888, 56.5396, 37.4281, 0.15", "-15.4489, 57.289, 37.7061, 0.15", "-15.071, 58.3633, 38.1367, 0.22", "-14.8821, 58.9423, 38.3251, 0.22", "-14.6209, 59.8867, 38.5828, 0.22", "-14.4638, 60.5274, 38.763, 0.22", "-14.2117, 61.7628, 39.1745, 0.22", "-14.0381, 62.9199, 39.5944, 0.22", "-13.9382, 64.1923, 40.0268, 0.22", "-13.9047, 65.3489, 40.3997, 0.59", "-13.9476, 67.2105, 40.9431, 0.07", "-14.0597, 68.6257, 41.2725, 0.15", "-14.2017, 69.598, 41.4787, 0.15", "-14.5412, 71.4705, 41.9181, 0.29", "-14.8052, 72.7798, 42.2688, 0.07", "-15.0406, 73.8315, 42.5499, 0.59", "-15.4864, 75.3981, 42.9407, 0.07", "-15.9423, 76.7561, 43.2798, 0.22", "-16.3143, 77.8118, 43.5824, 0.22", "-16.5964, 78.6374, 43.8829, 0.37", "-16.9544, 79.7652, 44.3681, 0.29", "-17.3564, 81.1573, 45.0265, 0.29", "-17.6449, 82.2705, 45.6035, 0.22", "-17.8615, 83.3966, 46.1333, 0.59", "-18.0829, 84.9529, 46.8156, 0.37", "-18.1595, 85.8107, 47.1738, 0.37", "-18.1812, 86.4519, 47.4246, 0.44", "-18.1578, 87.2627, 47.7123, 0.44", "-17.9874, 90.0367, 48.6469, 0.15", "-17.8679, 91.5248, 49.1084, 0.15", "-17.7875, 92.1837, 49.2967, 0.15", "-17.6301, 93.0782, 49.5479, 0.29", "-17.3407, 94.2848, 49.8871, 0.15", "-16.9, 95.6531, 50.2763, 0.52", "-16.5983, 96.3996, 50.5044, 0.52", "-15.9809, 97.8405, 50.9586, 0.15", "-15.6179, 98.7818, 51.2684, 0.15", "-15.3388, 99.5916, 51.5423, 0.44", "-14.9165, 100.97, 52.0106, 0.44", "-14.374, 102.983, 52.7069, 0.29", "-14.087, 104.169, 53.1861, 0.44", "-13.5935, 106.223, 54.2136, 0.15", "-13.3119, 107.33, 54.8666, 0.15", "-13.1208, 108.017, 55.3529, 0.37", "-12.6221, 109.595, 56.7147, 0.15", "-12.1507, 110.81, 57.9481, 0.15", "-11.4976, 112.12, 59.547, 0.66", "-11.1469, 112.718, 60.3999, 0.88", "-10.4024, 113.944, 62.2875, 0.15", "-9.89745, 114.947, 63.7785, 0.15", "-9.58524, 115.768, 64.9254, 0.29", "-9.25274, 117.377, 66.895, 0.29", "-9.07929, 118.757, 68.5146, 0.29", "-9.061, 119.153, 68.9659, 0.29", "-9.22413, 121.029, 70.8957, 0.07", "-9.36933, 121.625, 71.4018, 0.15", "-9.97005, 123.038, 72.3791, 0.15" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "9.76948, 101.549, -24.4197, 0.74", "9.8091, 102.048, -24.8893, 0.74", "9.96774, 102.527, -25.332, 0.22", "10.2295, 103.061, -25.8389, 0.22", "10.3865, 103.375, -26.1419, 0.22", "10.6003, 103.82, -26.5785, 0.22", "10.7879, 104.275, -27.0328, 0.59", "10.9542, 104.803, -27.5974, 0.22", "11.0157, 105.278, -28.0772, 0.22", "10.9645, 105.64, -28.381, 0.22", "10.8375, 106.004, -28.6256, 0.59", "10.5786, 106.497, -28.9006, 0.88", "9.90839, 107.531, -29.4902, 0.22", "9.54367, 108.046, -29.7976, 0.22", "9.18773, 108.576, -30.1279, 0.96", "8.79748, 109.258, -30.5905, 0.15", "8.54486, 109.797, -30.9981, 0.15", "8.28983, 110.567, -31.7015, 0.15", "8.176, 111.044, -32.2597, 0.37", "8.08227, 111.481, -32.9078, 0.81", "8.03048, 111.807, -33.4671, 0.81", "8.02828, 112.026, -33.8812, 0.22", "8.13207, 112.369, -34.4805, 0.22", "8.32984, 112.756, -34.9703, 0.22", "8.4763, 113.003, -35.2191, 0.22", "8.64185, 113.295, -35.4876, 0.59", "8.93092, 113.89, -35.9791, 0.37", "9.32893, 114.725, -36.6467, 0.81", "9.61834, 115.381, -37.1626, 0.22", "9.83715, 115.937, -37.6255, 0.22", "10.0007, 116.52, -38.1764, 0.22", "10.0857, 117.088, -38.7699, 1.03", "10.1051, 117.787, -39.5392, 0.22", "10.1134, 118.157, -39.9643, 0.22", "10.1373, 118.519, -40.3983, 0.37", "10.2128, 119.108, -41.0904, 0.15", "10.2982, 119.631, -41.6791, 1.03", "10.416, 120.252, -42.3567, 0.15", "10.5748, 121.138, -43.2281, 0.15", "10.6777, 121.577, -43.6364, 0.22", "10.7732, 121.916, -43.938, 0.22", "10.8831, 122.29, -44.2735, 0.81", "11.0225, 122.763, -44.6977, 1.25", "11.1811, 123.36, -45.2282, 0.15", "11.3217, 124.025, -45.8057, 0.29", "11.4695, 124.606, -46.3015, 0.07", "11.6065, 125.081, -46.7223, 0.22", "10.6342, 130.259, -52.8495, 0.22", "9.94712, 133.707, -60.0217, 0.22", "7.11587, 136.452, -66.9344, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "9.76948, 101.549, -24.4197, 0.15", "10.8465, 101.06, -24.0244, 0.15", "11.2747, 100.86, -23.864, 0.15", "11.7508, 100.692, -23.7744, 0.29", "12.0518, 100.605, -23.7819, 0.29", "13.2293, 100.331, -24.0059, 0.15", "13.8022, 100.219, -24.197, 0.37", "14.0881, 100.185, -24.3653, 0.37", "15.258, 100.158, -25.2709, 0.15", "16.0007, 100.208, -26.0161, 0.15", "16.4702, 100.259, -26.5738, 0.15", "16.9002, 100.288, -27.1797, 0.22", "17.246, 100.31, -27.7194, 0.22", "17.4033, 100.305, -27.9777, 0.22", "17.6731, 100.231, -28.5206, 0.22", "17.9483, 100.085, -29.3109, 0.22", "18.2004, 99.592, -30.1162, 0.44", "25.9494, 99.6241, -36.1443, 0.44", "33.5184, 100.695, -42.3224, 0.44", "41.2288, 101.384, -48.3702, 0.44", "50.2287, 100.19, -52.1092, 0.44" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "25.7292, 56.0019, 6.0753, 0.22", "27.0864, 56.7, 6.7413, 0.22", "27.8703, 57.0915, 7.09522, 0.22", "28.4773, 57.4074, 7.35444, 0.37", "29.2649, 57.8328, 7.67062, 0.96", "30.0884, 58.3101, 7.959, 0.96", "31.3859, 59.1213, 8.36154, 0.59", "32.1322, 59.6148, 8.55067, 0.37", "33.2461, 60.3681, 8.76533, 0.59", "33.8959, 60.83, 8.88632, 0.29", "34.6873, 61.4324, 9.04869, 0.29", "35.3314, 61.9966, 9.21729, 0.29", "36.0316, 62.6914, 9.4649, 0.44", "36.6653, 63.3608, 9.75723, 0.74", "37.5153, 64.2815, 10.2188, 0.81", "38.2301, 65.0812, 10.6421, 0.29", "38.9568, 65.9351, 11.0983, 0.22", "39.4589, 66.5812, 11.3739, 0.22", "39.8496, 67.1485, 11.5402, 0.59", "40.5038, 68.2143, 11.6918, 0.81", "41.1232, 69.3129, 11.7067, 0.22", "41.4478, 69.9012, 11.6874, 0.22", "42.1407, 71.1876, 11.6485, 0.29", "42.5584, 72.0291, 11.639, 0.52", "42.8705, 72.767, 11.6568, 0.74", "43.2557, 73.8769, 11.745, 1.11", "43.6879, 75.1689, 11.9567, 0.52", "43.9857, 76.0411, 12.1924, 0.22", "44.1609, 76.5323, 12.3647, 0.22", "44.5272, 77.3951, 12.6968, 0.29", "44.9072, 78.1722, 12.9893, 0.29", "45.7009, 79.6304, 13.4882, 0.22", "46.2956, 80.6489, 13.7893, 0.81", "46.912, 81.605, 14.0639, 0.66", "47.7549, 82.8241, 14.408, 0.29", "48.4774, 83.84, 14.7381, 0.22", "48.9525, 84.4834, 14.9629, 0.59", "49.2051, 84.8197, 15.0875, 0.59", "50.0617, 85.9988, 15.5202, 0.81", "50.3856, 86.4928, 15.7305, 0.37", "51.063, 87.6746, 16.2653, 0.22", "51.3703, 88.2798, 16.5466, 0.22", "51.6426, 88.8903, 16.7928, 0.22", "51.9259, 89.6307, 17.0524, 0.22", "52.174, 90.4327, 17.268, 0.22", "52.4674, 91.4159, 17.4347, 0.81", "52.9375, 92.9496, 17.5849, 0.81", "53.3827, 94.3247, 17.6824, 0.29", "53.8525, 95.5966, 17.7417, 0.59", "54.5026, 97.1373, 17.7676, 0.22", "55.1723, 98.5966, 17.7309, 0.22", "55.6577, 99.5583, 17.6827, 0.44", "56.2025, 100.531, 17.6058, 0.52", "56.8749, 101.705, 17.503, 0.15", "57.0619, 102.033, 17.4723, 0.15", "57.6842, 103.188, 17.3984, 0.59", "58.0166, 103.896, 17.3824, 0.59", "58.4018, 104.781, 17.3243, 0.22", "58.8605, 105.843, 17.2322, 0.22", "59.1384, 106.448, 17.1875, 0.22", "59.4598, 107.112, 17.1676, 0.44", "59.9835, 108.179, 17.1929, 0.52", "60.3854, 109.001, 17.2512, 0.52", "60.94, 110.091, 17.3736, 0.74", "61.7478, 111.586, 17.5966, 0.22", "62.17, 112.314, 17.7281, 0.22", "62.6276, 113.075, 17.8902, 0.29", "63.1814, 114.018, 18.1119, 0.37", "63.6044, 114.764, 18.296, 0.81", "63.7887, 115.083, 18.3619, 0.81", "64.3834, 116.056, 18.5039, 0.15", "64.9362, 116.964, 18.625, 0.22", "65.4177, 117.716, 18.7605, 0.22", "65.8822, 118.353, 18.9179, 0.29", "66.7337, 119.426, 19.2384, 0.59", "67.3399, 120.181, 19.4952, 0.44", "67.9572, 120.971, 19.7868, 0.66", "68.8087, 122.046, 20.2097, 0.22", "69.7915, 123.273, 20.6974, 0.22", "70.0524, 123.631, 20.831, 0.29", "70.705, 124.686, 21.1966, 0.29", "71.1193, 125.472, 21.4314, 0.29", "71.5152, 126.383, 21.642, 0.88", "71.836, 127.391, 21.8454, 0.74", "72.3575, 129.545, 22.263, 0.22", "72.5825, 130.607, 22.4621, 0.22", "72.7302, 131.343, 22.6025, 0.81", "72.9902, 132.546, 22.8397, 0.74", "73.267, 133.818, 23.088, 0.22", "73.4244, 134.49, 23.2195, 0.22", "73.6168, 135.202, 23.3489, 0.22", "73.9147, 136.091, 23.5185, 0.22", "74.371, 137.204, 23.7438, 0.22", "74.7167, 137.949, 23.8937, 0.37", "75.1936, 138.875, 24.0635, 0.88", "75.3985, 139.239, 24.1306, 0.74", "76.3057, 140.699, 24.4045, 0.15", "77.0161, 141.758, 24.5976, 0.15", "77.6283, 142.623, 24.7821, 0.52", "78.1608, 143.294, 24.9462, 0.22", "78.5306, 143.72, 25.0606, 0.22", "79.1649, 144.384, 25.2755, 0.29", "79.6317, 144.791, 25.4535, 0.29", "80.3541, 145.361, 25.7746, 0.29", "81.1105, 145.909, 26.1297, 0.29", "81.5889, 146.252, 26.3666, 0.59", "82.4035, 146.816, 26.774, 1.11", "83.7186, 147.648, 27.4318, 0.15", "84.0657, 147.843, 27.5964, 0.15", "84.5372, 148.049, 27.7983, 0.15", "85.1253, 148.276, 28.0362, 0.15", "85.5641, 148.428, 28.2311, 0.15", "86.1985, 148.641, 28.5346, 0.15", "87.0467, 148.943, 28.9654, 0.44", "88.5822, 149.545, 29.776, 0.22", "89.13, 149.785, 30.0937, 0.15", "90.4586, 150.472, 30.9052, 0.29", "91.0578, 150.824, 31.2914, 0.29", "91.4827, 151.09, 31.5823, 0.29", "92.1461, 151.532, 32.0493, 0.22", "92.7082, 151.938, 32.4057, 0.22", "93.3601, 152.388, 32.7382, 0.22", "94.0206, 152.82, 32.9272, 0.37", "94.6334, 153.156, 33.0312, 0.37", "95.602, 153.602, 33.12, 0.22", "96.4388, 153.947, 33.1321, 0.59", "97.044, 154.188, 33.0893, 0.96", "98.189, 154.694, 32.9517, 0.22", "99.0608, 155.153, 32.7822, 0.15", "99.6385, 155.5, 32.6445, 0.15", "100.298, 155.955, 32.4883, 0.37", "101.112, 156.575, 32.3273, 0.66", "102.003, 157.331, 32.1981, 0.74", "102.882, 158.164, 32.1296, 0.52", "103.212, 158.507, 32.1281, 0.52", "103.944, 159.305, 32.1984, 0.15", "104.746, 160.194, 32.3244, 0.22", "105.255, 160.76, 32.4536, 0.22", "105.783, 161.327, 32.6363, 0.66", "106.589, 162.183, 33.0204, 0.96", "107.031, 162.643, 33.2537, 0.96" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "25.7292, 56.0019, 6.0753, 0.22", "25.3301, 57.5801, 5.14609, 0.22", "25.1029, 58.4949, 4.66995, 0.22", "24.9081, 59.3051, 4.28972, 0.44", "24.6742, 60.356, 3.85648, 0.37", "24.3999, 61.4636, 3.4359, 0.37", "24.0792, 62.6416, 2.97629, 0.29", "23.8061, 63.4916, 2.67243, 0.29", "23.3338, 64.6955, 2.26566, 0.52", "22.9943, 65.4632, 2.00234, 0.15", "22.6903, 66.155, 1.74937, 0.37", "22.4215, 66.8485, 1.44346, 0.37", "22.1544, 67.6514, 1.06064, 0.22", "21.9477, 68.3577, 0.765702, 0.22", "21.8084, 68.9522, 0.522172, 0.59", "21.6406, 69.8433, 0.130822, 0.22", "21.5062, 70.83, -0.292076, 0.37", "21.36, 71.7841, -0.704186, 0.81", "21.2706, 72.3091, -0.94034, 0.81", "20.9974, 73.5996, -1.50818, 0.52", "20.7423, 74.6642, -2.00241, 0.52", "20.407, 76.0117, -2.65334, 0.22", "20.1405, 77.0615, -3.16262, 0.15", "19.9127, 77.9198, -3.5716, 0.37", "19.753, 78.5245, -3.82929, 0.37", "19.5501, 79.3871, -4.15233, 0.15", "19.4357, 79.9749, -4.34988, 0.15", "19.3258, 80.6435, -4.56168, 0.15", "19.1664, 81.6634, -4.84167, 0.74", "18.9763, 82.6209, -5.08561, 0.22", "18.7057, 83.6842, -5.33196, 0.22", "18.4928, 84.3586, -5.46, 0.22", "18.0636, 85.5694, -5.65096, 0.96", "17.7003, 86.581, -5.77669, 0.96", "17.4895, 87.2022, -5.82129, 0.15", "17.2489, 87.8888, -5.85496, 0.15", "17.0064, 88.5241, -5.87423, 0.15", "16.7173, 89.2863, -5.90361, 0.44", "16.5849, 89.6631, -5.9245, 0.44", "16.0641, 91.2577, -5.98829, 0.22", "15.8026, 92.1309, -5.98304, 0.22", "15.5613, 92.9434, -5.94058, 0.22", "15.3671, 93.4905, -5.86697, 0.59", "15.0881, 94.1483, -5.72873, 0.74", "14.6778, 95.0093, -5.50126, 0.22", "14.3143, 95.7238, -5.26952, 0.22", "13.9931, 96.4078, -5.02827, 0.88", "13.3338, 97.9673, -4.48551, 0.15", "12.9981, 98.8242, -4.21236, 0.15", "12.6176, 99.832, -3.92698, 0.15", "12.2882, 100.677, -3.725, 0.66", "11.8076, 101.764, -3.46097, 0.07", "11.5275, 102.364, -3.30194, 0.15", "11.2117, 102.994, -3.12056, 0.15", "10.9023, 103.498, -2.94785, 0.15", "10.3609, 104.114, -2.68544, 0.22", "9.3915, 104.87, -2.30883, 0.07", "9.10835, 105.04, -2.21819, 0.07", "8.36469, 105.482, -2.00814, 0.07", "7.92952, 105.742, -1.91206, 0.52", "7.39274, 106.077, -1.81926, 0.96", "6.92297, 106.386, -1.75626, 0.96", "6.02437, 107.029, -1.69512, 0.52", "5.04394, 107.731, -1.66513, 0.22", "4.27926, 108.293, -1.68485, 0.29", "3.58096, 108.84, -1.73177, 0.74", "2.88321, 109.415, -1.8227, 0.22", "2.07765, 110.054, -1.96774, 0.15", "1.39437, 110.545, -2.11963, 0.15", "0.506784, 111.129, -2.33775, 0.15", "-0.0452998, 111.484, -2.47478, 0.59", "-0.801976, 111.957, -2.70248, 0.15", "-1.5526, 112.409, -2.9476, 0.15", "-2.07453, 112.718, -3.13829, 0.15", "-2.65099, 113.079, -3.39849, 0.37", "-3.2693, 113.485, -3.71545, 0.22", "-3.89896, 113.931, -4.10804, 0.22", "-4.60202, 114.501, -4.61781, 1.03", "-5.35452, 115.204, -5.22917, 0.22", "-5.94205, 115.778, -5.72219, 0.52", "-6.31089, 116.126, -6.02323, 0.74", "-7.08072, 116.795, -6.57238, 0.22", "-7.50624, 117.148, -6.81488, 0.22", "-8.01237, 117.588, -7.05717, 0.22", "-8.60109, 118.179, -7.28817, 0.22", "-8.86206, 118.499, -7.38635, 0.22", "-9.34441, 119.175, -7.57661, 0.22", "-9.68595, 119.682, -7.71275, 0.74", "-10.0342, 120.202, -7.86802, 0.15", "-10.4909, 120.87, -8.06029, 0.15", "-10.9973, 121.61, -8.27312, 0.15", "-11.347, 122.115, -8.39138, 0.15", "-11.724, 122.666, -8.47648, 0.74", "-12.2013, 123.369, -8.53281, 0.96", "-13.1913, 124.857, -8.5418, 0.15", "-13.4038, 125.2, -8.51797, 0.15", "-13.8745, 126.088, -8.41566, 0.37", "-14.4869, 127.466, -8.17969, 0.15", "-14.7397, 128.105, -8.02401, 0.22", "-14.897, 128.534, -7.89597, 0.22", "-15.1848, 129.42, -7.56393, 0.81", "-15.4055, 130.131, -7.26224, 0.29", "-15.6458, 130.927, -6.88809, 0.07", "-15.9451, 131.813, -6.39856, 0.07", "-16.1578, 132.34, -6.09666, 0.52", "-16.4738, 133.064, -5.69361, 0.15", "-16.7275, 133.597, -5.41678, 0.15", "-16.9097, 133.946, -5.25645, 0.15", "-17.2148, 134.582, -5.06414, 0.59", "-17.5872, 135.459, -4.90034, 0.15", "-17.8146, 135.975, -4.84596, 0.29", "-18.1053, 136.521, -4.8319, 0.15", "-18.596, 137.287, -4.83483, 0.15", "-19.156, 138.067, -4.85251, 0.22", "-19.3959, 138.404, -4.86202, 0.22", "-19.7911, 138.977, -4.87204, 0.22", "-20.2367, 139.618, -4.8686, 0.66", "-20.7099, 140.315, -4.84706, 0.74", "-21.3103, 141.259, -4.79282, 0.15", "-21.7091, 141.943, -4.72349, 0.15", "-22.1325, 142.919, -4.59862, 0.15", "-22.3833, 143.613, -4.50304, 0.22", "-22.5866, 144.333, -4.40666, 0.07", "-22.7617, 145.187, -4.29292, 0.07", "-22.8365, 145.801, -4.20785, 0.15", "-22.9293, 147.266, -3.98163, 0.07", "-26.2676, 157.381, -5.7546, 0.07", "-29.7584, 167.615, -5.38295, 0.07", "-32.3448, 178.146, -5.29432, 0.07" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "33.2323, -10.0748, -11.6231, 0.37", "33.735, -10.9543, -12.5415, 0.37", "34.0815, -11.5478, -13.1978, 0.44", "34.4913, -12.1704, -13.9498, 0.44", "34.9811, -12.794, -14.8048, 0.81", "35.5906, -13.4233, -15.8311, 1.03", "36.1728, -13.893, -16.7726, 1.18", "36.7424, -14.2317, -17.717, 0.44", "37.1624, -14.3446, -18.3154, 0.81", "37.8378, -14.255, -18.9165, 1.11", "38.6802, -13.9268, -19.2453, 1.03", "39.4285, -13.5832, -19.3693, 0.74", "40.4139, -13.1545, -19.4882, 0.15", "41.3989, -12.7764, -19.6294, 0.44", "42.4091, -12.4593, -19.7514, 0.22", "43.2639, -12.2726, -19.8576, 0.59", "44.4078, -12.1206, -20.0457, 0.74", "45.7972, -12.0159, -20.451, 1.25", "46.5978, -11.9641, -20.8548, 1.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "33.2323, -10.0748, -11.6231, 0.29", "34.3331, -10.84, -10.7012, 0.29", "35.4626, -11.6252, -9.75521, 0.29", "36.4954, -12.3431, -8.89024, 0.81", "37.4155, -12.9827, -8.11964, 0.96", "38.211, -13.5357, -7.45339, 0.88", "38.9852, -14.0739, -6.80498, 0.74" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-34.1136, 52.6763, -10.2972, 0.66", "-35.2524, 52.4331, -9.91365, 0.66", "-36.8106, 52.1019, -9.48777, 0.44", "-37.6289, 51.9231, -9.30309, 0.44", "-38.8282, 51.6346, -9.08514, 0.59", "-39.8862, 51.3873, -8.93223, 0.74", "-40.9699, 51.1643, -8.79918, 0.44", "-41.9719, 50.9927, -8.76417, 0.44", "-42.6443, 50.9261, -8.79613, 0.22", "-43.7162, 50.8895, -8.86555, 0.15", "-44.2478, 50.9543, -8.91224, 0.15", "-44.9245, 51.1619, -8.98038, 0.29", "-45.6504, 51.4696, -9.01942, 0.15", "-46.1228, 51.7014, -8.99334, 0.15", "-46.4102, 51.8495, -8.94422, 0.15", "-47.1823, 52.224, -8.76084, 0.88", "-48.2109, 52.6179, -8.48869, 0.74", "-49.5637, 52.991, -8.13889, 0.29", "-50.6312, 53.1864, -7.90673, 0.22", "-51.2759, 53.2437, -7.79863, 0.22", "-51.7355, 53.2515, -7.74566, 0.22", "-52.301, 53.2235, -7.68717, 0.66", "-53.1732, 53.1147, -7.60049, 1.03", "-54.5821, 52.8111, -7.4899, 0.52", "-55.8893, 52.4652, -7.41021, 0.37", "-56.5797, 52.2918, -7.35456, 0.22", "-57.5513, 52.1049, -7.20921, 0.15", "-58.3565, 51.9663, -7.05354, 0.15", "-58.9537, 51.8864, -6.88667, 0.15", "-59.2081, 51.8728, -6.77032, 0.81", "-59.9452, 51.9601, -6.30543, 1.11", "-60.6897, 52.1467, -5.80016, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-34.1136, 52.6763, -10.2972, 0.88", "-34.3156, 53.9192, -9.81885, 0.88", "-34.413, 54.8218, -9.44941, 0.29", "-34.5765, 55.693, -8.93388, 0.29", "-34.7581, 56.2898, -8.5165, 0.29", "-35.056, 57.0024, -7.97334, 0.88", "-35.1883, 57.2553, -7.7837, 0.88", "-35.7504, 58.0966, -7.11161, 0.74", "-36.8417, 59.6251, -5.8151, 0.52", "-37.528, 60.5688, -4.99212, 0.37", "-38.0035, 61.1748, -4.48007, 0.37", "-38.7554, 62.0541, -3.79113, 0.37", "-39.1655, 62.5328, -3.46722, 0.29", "-40.0331, 63.6067, -2.89282, 0.66", "-40.363, 64.1123, -2.70808, 0.22", "-40.7502, 64.7647, -2.49901, 0.22", "-41.2048, 65.5495, -2.2854, 0.44", "-41.608, 66.3229, -2.08187, 0.15", "-42.0014, 67.032, -1.93322, 0.29", "-42.3732, 67.6304, -1.82727, 0.15", "-42.6688, 68.084, -1.73254, 0.15", "-43.2705, 68.9299, -1.52305, 0.96", "-44.5019, 70.471, -1.10547, 0.15", "-45.2501, 71.3412, -0.844181, 0.22", "-46.0077, 72.1817, -0.588694, 0.22", "-46.6193, 72.8426, -0.366701, 0.59", "-47.4564, 73.7143, -0.0396304, 0.37", "-48.5432, 74.7675, 0.412228, 0.74", "-49.8945, 75.975, 0.991737, 0.74", "-51.1958, 77.189, 1.6231, 0.22", "-51.7672, 77.7681, 1.93852, 0.74", "-52.1879, 78.2477, 2.20037, 1.03", "-53.1312, 79.4663, 2.86396, 0.22", "-53.6349, 80.2057, 3.2639, 0.22", "-54.0272, 80.8974, 3.61428, 0.81", "-54.3805, 81.68, 3.9809, 0.81", "-55.0378, 83.3972, 4.67097, 0.15", "-55.3121, 84.1504, 4.91797, 0.37", "-55.653, 85.0607, 5.14538, 0.15", "-56.0741, 86.0995, 5.35777, 0.22", "-56.3221, 86.6702, 5.46412, 0.37", "-56.6151, 87.3018, 5.5854, 0.74", "-57.3148, 88.781, 5.92655, 0.29", "-57.8398, 89.8916, 6.22261, 0.22", "-58.2027, 90.6649, 6.44492, 0.22", "-58.6313, 91.5891, 6.72908, 0.37", "-59.0065, 92.4482, 7.01965, 0.22", "-59.4585, 93.6076, 7.46445, 0.22", "-59.8061, 94.7051, 7.95794, 0.81", "-60.2453, 96.1879, 8.66374, 0.22", "-64.9495, 105.665, 14.0028, 0.22", "-69.5159, 115.207, 19.3543, 0.22", "-76.253, 123.164, 24.8035, 0.22", "-82.6953, 130.206, 31.6074, 0.22", "-89.0746, 138.555, 36.9474, 0.22" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-37.9817, -14.2035, 5.4793, 0.07", "-38.5502, -15.0946, 6.46222, 0.07", "-38.8307, -15.5609, 6.98944, 0.59", "-39.1949, -16.1726, 7.66017, 0.07", "-39.4806, -16.6366, 8.14915, 0.29", "-39.7252, -17.0319, 8.55287, 0.29", "-40.2159, -17.7732, 9.31171, 0.15", "-40.5677, -18.2311, 9.84303, 0.22", "-41.0219, -18.7863, 10.5637, 0.88", "-41.4657, -19.3243, 11.2857, 0.22", "-41.8539, -19.7981, 11.9321, 0.37", "-42.341, -20.3567, 12.663, 0.59", "-42.9714, -21.0121, 13.5147, 0.22", "-43.6009, -21.6178, 14.3075, 0.22", "-43.9861, -21.9787, 14.7598, 0.22", "-44.2787, -22.2668, 15.083, 0.22", "-45.0872, -23.0356, 15.8317, 0.15", "-45.5942, -23.4826, 16.2238, 0.15", "-46.264, -24.0011, 16.6566, 0.59", "-47.2638, -24.6952, 17.269, 0.15", "-47.9512, -25.1228, 17.7117, 0.59", "-48.7832, -25.5856, 18.3042, 0.07", "-49.6617, -26.0485, 18.969, 0.15", "-50.1879, -26.3161, 19.3715, 0.66", "-51.0848, -26.7411, 20.0792, 0.29", "-52.0117, -27.0916, 20.8172, 0.29", "-52.9397, -27.4097, 21.6065, 0.29" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-37.9817, -14.2035, 5.4793, 0.22", "-38.7606, -14.9062, 5.73282, 0.22", "-39.613, -15.7088, 6.00939, 0.22", "-40.2937, -16.4395, 6.23825, 0.22", "-40.7795, -17.0164, 6.43084, 0.15", "-41.2414, -17.5735, 6.64187, 0.15", "-41.6859, -18.1211, 6.85487, 0.59", "-41.9586, -18.4991, 7.00486, 0.66", "-42.4119, -19.1852, 7.26911, 0.29", "-42.8698, -19.94, 7.58398, 0.22", "-43.3695, -20.8571, 7.98019, 0.22", "-43.7721, -21.6656, 8.31979, 0.59", "-44.0826, -22.3405, 8.59927, 0.59", "-44.4294, -23.1692, 8.9312, 0.22", "-44.7152, -23.9283, 9.23253, 0.22", "-44.9237, -24.5689, 9.48163, 0.74", "-45.1059, -25.2328, 9.76858, 0.74", "-45.3517, -26.1166, 10.2305, 0.59", "-45.5338, -26.7284, 10.5915, 0.37", "-45.7807, -27.4907, 11.0485, 0.22", "-46.1031, -28.3128, 11.5595, 0.59", "-46.5086, -29.1699, 12.1108, 0.52", "-46.8627, -29.7758, 12.5131, 0.52", "-47.2461, -30.3383, 12.8848, 0.52", "-47.9607, -31.3299, 13.4871, 0.22", "-48.4362, -32.0168, 13.8321, 0.66", "-48.7597, -32.5141, 14.0238, 0.66", "-49.1537, -33.1218, 14.218, 0.22", "-49.6022, -33.8275, 14.4295, 0.22", "-49.8548, -34.212, 14.5431, 0.22", "-50.4139, -35.0271, 14.8045, 0.74", "-51.0205, -35.8519, 15.0895, 0.22", "-51.8979, -36.9278, 15.4971, 0.15", "-52.5516, -37.5911, 15.7816, 0.81", "-53.772, -38.459, 16.2684, 0.07", "-54.5762, -38.8295, 16.576, 0.22", "-55.3029, -38.9778, 16.8182, 0.59", "-55.8901, -38.9674, 16.9724, 0.81", "-56.9883, -38.7218, 17.1429, 0.22", "-58.5273, -38.1312, 17.2114, 0.15", "-59.4092, -37.6588, 17.1482, 0.81", "-60.6779, -36.8029, 16.8635, 0.22", "-61.5788, -36.0538, 16.4922, 0.66", "-62.2398, -35.3755, 16.089, 0.22", "-62.754, -34.7143, 15.6241, 0.22", "-63.1067, -34.1581, 15.1742, 0.59", "-63.5625, -33.2542, 14.424, 0.15", "-63.9045, -32.3962, 13.7272, 0.15", "-64.0814, -31.9252, 13.3443, 0.66", "-64.3061, -31.3362, 12.8654, 0.66", "-64.6249, -30.5624, 12.2336, 0.15", "-64.954, -29.9182, 11.6881, 0.15", "-65.2642, -29.4797, 11.3392, 0.52", "-65.9371, -28.8229, 10.9129, 0.15", "-66.6718, -28.3964, 10.7414, 0.22", "-67.1004, -28.2434, 10.7352, 0.59", "-67.7999, -28.1021, 10.8354, 0.59", "-69.1356, -27.9674, 11.1493, 0.15", "-70.6258, -27.9384, 11.6145, 0.66", "-72.4656, -28.02, 12.3289, 0.15", "-73.4472, -28.1288, 12.7609, 0.59", "-74.9219, -28.4269, 13.4571, 0.15", "-75.7938, -28.7367, 13.8843, 0.22", "-76.4569, -29.0892, 14.2053, 0.22", "-76.9253, -29.4185, 14.4393, 0.52", "-77.3842, -29.8259, 14.6751, 0.22", "-78.0196, -30.4615, 14.9708, 0.81", "-79.2054, -31.7299, 15.4108, 0.07", "-79.7286, -32.2268, 15.5391, 0.22", "-80.2341, -32.6308, 15.6094, 0.07", "-80.86, -33.0614, 15.6484, 0.66", "-81.7483, -33.6102, 15.6614, 0.07", "-82.0873, -33.796, 15.6477, 0.44", "-83.8307, -34.6346, 15.5185, 0.15", "-84.5476, -34.965, 15.444, 0.37", "-85.6687, -35.4577, 15.284, 0.07", "-86.4518, -35.7809, 15.1587, 0.22", "-87.5566, -36.233, 14.9615, 0.07" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "107.031, 162.643, 33.2537, 0.52", "107.512, 163.505, 33.4162, 0.52", "108.441, 165.018, 33.7672, 0.22", "108.962, 165.847, 34.0202, 0.66", "109.248, 166.293, 34.2057, 0.96", "109.878, 167.259, 34.6586, 0.22", "110.379, 168.059, 35.0387, 0.22", "111.057, 169.128, 35.5591, 0.52", "111.474, 169.748, 35.851, 0.96", "112.485, 171.217, 36.4482, 0.52", "113.426, 172.466, 36.8806, 0.22", "114.077, 173.25, 37.1029, 0.66", "115.148, 174.316, 37.332, 0.15", "115.831, 174.875, 37.4143, 0.15", "116.623, 175.407, 37.4688, 0.44", "117.938, 176.117, 37.5228, 0.15", "118.756, 176.467, 37.5743, 0.74", "121.138, 177.308, 37.8148, 0.15", "121.849, 177.542, 37.9029, 0.59", "123.011, 177.951, 38.054, 0.15", "123.43, 178.108, 38.1009, 0.22", "124.196, 178.433, 38.1736, 0.15", "125.409, 179.001, 38.2123, 0.66", "126.779, 179.728, 38.1516, 0.15", "127.807, 180.342, 38.0652, 0.37", "128.495, 180.765, 37.9481, 0.07", "128.993, 181.065, 37.8222, 0.22", "130.242, 181.792, 37.3615, 0.07", "130.982, 182.163, 37.0069, 0.59", "131.856, 182.524, 36.4584, 0.07", "133.079, 182.922, 35.5153, 0.15", "133.665, 183.073, 35.0091, 0.37", "134.66, 183.239, 34.0602, 0.22", "135.444, 183.331, 33.2242, 0.52", "136.532, 183.412, 31.9751, 0.22", "137.074, 183.44, 31.325, 0.22", "137.424, 183.464, 30.9166, 0.44", "138.317, 183.523, 29.8185, 0.22", "139.077, 183.58, 28.7968, 0.22", "139.823, 183.678, 27.6911, 0.22", "140.188, 183.734, 27.1408, 0.37", "140.478, 183.788, 26.6663, 0.37", "140.961, 183.893, 25.7876, 0.22", "141.226, 183.96, 25.2552, 0.37", "141.462, 184.023, 24.7894, 0.37", "141.753, 184.145, 24.1386, 0.37", "141.931, 184.248, 23.6727, 0.37", "142.198, 184.495, 22.8469, 0.22", "142.615, 185.184, 21.2594, 0.44", "142.775, 185.715, 20.3062, 0.59", "142.922, 186.476, 19.0435, 0.15", "142.957, 187.061, 18.1741, 0.37", "142.905, 187.926, 17.0239, 0.07", "142.692, 188.966, 15.8692, 0.07", "142.577, 189.283, 15.6023, 0.15" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "107.031, 162.643, 33.2537, 0.15", "108.644, 162.158, 34.0329, 0.15", "109.931, 161.708, 34.6548, 0.15", "110.973, 161.3, 35.1594, 0.37", "111.796, 160.942, 35.541, 0.37", "113.288, 160.27, 36.2288, 0.15", "114.949, 159.525, 37.0012, 0.15", "115.613, 159.211, 37.3268, 0.15", "116.357, 158.856, 37.6665, 0.15", "117.282, 158.427, 38.0907, 0.66", "119.018, 157.655, 38.8739, 0.07", "120.156, 157.159, 39.4038, 0.07", "120.667, 156.95, 39.6214, 0.07", "121.333, 156.679, 39.9183, 0.52", "122.092, 156.353, 40.2717, 0.74", "123.261, 155.798, 40.8441, 0.07", "124.447, 155.119, 41.4803, 0.07", "125.264, 154.591, 41.9471, 0.22", "126.078, 154.013, 42.4586, 0.22", "127.461, 152.939, 43.4287, 0.07", "128.506, 152.072, 44.2324, 0.52", "130.007, 150.746, 45.5559, 0.15", "130.574, 150.216, 46.1439, 0.59", "131.479, 149.343, 47.2202, 0.07", "132.237, 148.583, 48.1769, 0.07", "132.661, 148.145, 48.7739, 0.29", "133.21, 147.569, 49.6389, 0.29", "133.996, 146.768, 51.0134, 0.15", "134.576, 146.197, 52.1356, 0.52" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "46.5978, -11.9641, -20.8548, 0.15", "46.7342, -10.7022, -20.8846, 0.15", "46.8836, -9.86063, -20.8444, 0.15", "47.0786, -8.88663, -20.7622, 0.81", "47.2332, -8.09777, -20.6796, 0.22", "47.3932, -7.25365, -20.5803, 0.15", "47.5538, -6.4266, -20.4742, 0.15", "47.7443, -5.3943, -20.3188, 0.15", "47.8812, -4.94932, -20.2377, 0.37", "48.1485, -4.37636, -20.1183, 0.66", "48.5013, -3.87442, -20.0322, 0.22", "48.9972, -3.34708, -19.9813, 0.22", "49.291, -3.08623, -19.9874, 0.22", "50.1537, -2.44623, -20.1275, 0.88", "50.522, -2.20046, -20.2215, 0.88", "51.3374, -1.69689, -20.51, 0.22", "51.9629, -1.30458, -20.7988, 0.22", "52.4842, -0.929498, -21.0973, 0.22", "53.0577, -0.442613, -21.4812, 0.22", "53.5326, 0.0549613, -21.8477, 0.59", "54.1396, 0.870046, -22.3692, 0.88", "54.5554, 1.59756, -22.7893, 0.88", "55.0779, 2.73859, -23.4208, 0.15", "55.2014, 3.06065, -23.586, 0.29", "55.413, 3.71595, -23.8944, 0.81", "55.7146, 4.93335, -24.4271, 0.22", "55.8866, 5.90085, -24.8188, 0.22", "55.9873, 6.634, -25.1057, 0.22", "56.0532, 7.20689, -25.3441, 0.81", "56.1515, 7.79069, -25.6216, 0.59", "56.3491, 8.4347, -26.0256, 0.59", "61.0516, 17.8, -27.0963, 0.59", "64.1266, 27.9277, -27.5416, 0.59" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "46.5978, -11.9641, -20.8548, 0.29", "48.1767, -13.6763, -19.7987, 0.29", "48.9372, -14.3557, -19.3416, 0.22", "49.7311, -14.4711, -19.0805, 0.22", "50.0727, -14.4292, -19.0245, 0.22", "50.6868, -14.3748, -19.0182, 0.44", "51.4658, -14.3908, -19.1174, 0.66", "52.5227, -14.3954, -19.575, 0.22", "52.9789, -14.453, -19.8108, 0.22", "53.5611, -14.6624, -20.1591, 0.52", "54.449, -15.1753, -20.7623, 0.81", "55.1692, -15.6492, -21.2587, 0.59", "56.0321, -16.2238, -21.8859, 0.88", "56.7386, -16.6667, -22.4055, 0.96", "57.7131, -17.1463, -23.1176, 0.66", "59.1904, -17.7138, -24.1818, 0.22", "60.2895, -18.0278, -24.9418, 0.15", "61.2996, -18.2373, -25.5806, 0.15", "62.0651, -18.331, -26.0194, 1.4", "63.4998, -18.3922, -26.717, 0.22", "64.5906, -18.3854, -27.1306, 0.22", "65.1337, -18.3805, -27.2778, 0.22", "66.2223, -18.5092, -27.4844, 0.66", "66.9695, -18.781, -27.5353, 0.66", "67.7641, -19.5036, -27.5314, 0.22", "68.038, -20.2073, -27.5253, 0.22", "68.1667, -20.8316, -27.5865, 0.22", "68.3508, -21.8098, -27.7629, 0.22", "68.5825, -22.8782, -28.027, 0.96", "68.8638, -23.8022, -28.28, 1.25", "69.3727, -24.8764, -28.6052, 0.22", "70.0956, -25.8985, -28.9238, 0.22", "70.6833, -26.5634, -29.1256, 0.29", "71.3054, -27.1558, -29.317, 0.81", "72.1259, -27.8396, -29.5594, 0.88", "73.1546, -28.6091, -29.8269, 1.03", "74.0333, -29.1853, -30.0426, 0.66", "75.1529, -29.8884, -30.2961, 0.22", "76.0416, -30.4122, -30.4877, 0.44", "76.865, -30.868, -30.642, 0.88", "77.7977, -31.3687, -30.7762, 0.96", "78.87, -31.9725, -30.8983, 1.55", "80.0263, -32.6761, -31.029, 0.29", "81.0085, -33.3437, -31.1882, 0.15", "81.6465, -33.9389, -31.359, 0.22", "82.2736, -34.7551, -31.6736, 0.66", "82.9875, -35.9558, -32.2406, 0.22", "83.4971, -36.9788, -32.7826, 0.59", "83.8589, -37.7315, -33.2366, 0.88", "84.4223, -38.8535, -33.952, 0.22", "84.9459, -39.7113, -34.5013, 0.29", "85.4816, -40.392, -34.9064, 0.29", "85.8781, -40.7695, -35.0967, 0.74", "86.7276, -41.37, -35.3095, 1.18", "87.5245, -41.7962, -35.361, 1.25", "88.9964, -42.4085, -35.2865, 0.52", "89.9388, -42.7809, -35.169, 0.22", "91.0273, -43.2325, -34.9974, 0.22", "92.1403, -43.8175, -34.8302, 0.29", "93.2951, -44.6072, -34.6756, 0.22", "93.9754, -45.1946, -34.5996, 1.25", "94.4718, -45.7408, -34.5632, 1.03", "95.0996, -46.5357, -34.5384, 1.18", "96.3796, -48.2923, -34.5011, 0.22", "96.9514, -49.0835, -34.4955, 0.22", "97.1887, -49.3618, -34.4886, 0.22", "97.9833, -50.1169, -34.4113, 0.29", "98.8661, -50.8127, -34.2793, 0.22", "99.7144, -51.3943, -34.1227, 0.81", "100.208, -51.7174, -33.999, 1.11", "101.447, -52.5637, -33.6929, 0.22", "102.034, -52.9883, -33.5578, 0.22", "102.792, -53.5501, -33.4174, 0.88", "103.281, -53.9134, -33.3533, 0.88", "104.44, -54.7271, -33.3268, 0.22", "105.166, -55.2248, -33.4345, 0.22", "105.803, -55.6244, -33.6714, 0.88", "106.875, -56.1503, -34.2584, 1.03", "107.434, -56.3163, -34.666, 0.59", "108.251, -56.4274, -35.3663, 0.22", "109.254, -56.4206, -36.3348, 0.22", "109.732, -56.3864, -36.8245, 0.22", "110.083, -56.3618, -37.1556, 0.22", "110.955, -56.3185, -37.9314, 0.22", "111.315, -56.3273, -38.2328, 0.22", "111.778, -56.3893, -38.5729, 0.81", "112.399, -56.582, -38.982, 1.18", "114.19, -57.3591, -40.1048, 0.15", "114.836, -57.6958, -40.4888, 0.15", "115.657, -58.1383, -40.9437, 1.03", "116.265, -58.4727, -41.2828, 1.33", "117.616, -59.2384, -42.0152, 0.07", "118.178, -59.5575, -42.3092, 0.22", "118.495, -59.7304, -42.4559, 0.22", "119.781, -60.3114, -42.9109, 0.15", "120.516, -60.5628, -43.1088, 0.15", "121.614, -60.8279, -43.3753, 0.15", "131.693, -66.2402, -45.3491, 0.15" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "38.9852, -14.0739, -6.80498, 0.22", "39.7426, -13.611, -6.10314, 0.22", "40.2174, -13.3837, -5.63546, 0.22", "40.7861, -13.1689, -5.06773, 0.22", "41.3665, -12.9977, -4.53115, 0.66", "42.0704, -12.862, -3.94646, 0.66", "42.9081, -12.7654, -3.34, 0.22", "43.488, -12.7844, -2.98152, 0.22", "43.7505, -12.8331, -2.85949, 0.22", "44.6457, -13.1269, -2.59379, 0.44", "45.5822, -13.5369, -2.4103, 0.88", "46.5603, -13.9918, -2.25097, 0.22", "47.2713, -14.2811, -2.13598, 0.22", "48.1961, -14.5832, -1.97951, 0.29", "49.0782, -14.7853, -1.81493, 0.15", "49.7758, -14.8845, -1.64326, 0.52", "51.3433, -14.9527, -1.13725, 0.37", "52.4235, -14.9127, -0.716506, 0.22", "53.2487, -14.8234, -0.353231, 1.03", "54.3174, -14.6118, 0.176554, 0.29", "55.1004, -14.3917, 0.607129, 0.22", "56.0301, -14.074, 1.15243, 0.22", "56.4232, -13.9266, 1.37159, 0.22", "57.1069, -13.6704, 1.73657, 0.22", "57.9544, -13.3729, 2.10058, 0.22", "58.7467, -13.1279, 2.32928, 0.66", "59.7721, -12.8532, 2.56385, 0.22", "61.0086, -12.5671, 2.85726, 0.66", "61.6731, -12.4552, 3.02593, 0.81", "63.0613, -12.3159, 3.36075, 0.22", "63.7308, -12.281, 3.55095, 0.22", "65.0441, -12.2517, 3.962, 0.37", "65.9268, -12.2317, 4.2942, 0.74", "66.6508, -12.2087, 4.6184, 0.74", "67.4663, -12.1635, 4.99354, 0.59", "68.9095, -12.0303, 5.5987, 0.74", "70.0481, -11.9009, 5.94452, 0.07", "71.2907, -11.7545, 6.15953, 0.07", "71.688, -11.7109, 6.19082, 0.59", "72.4191, -11.6516, 6.16609, 0.59", "73.6334, -11.5589, 5.98181, 0.15", "74.4649, -11.5018, 5.721, 0.15", "75.1423, -11.4529, 5.45395, 0.37", "75.9874, -11.4311, 5.10035, 0.81", "77.5183, -11.4218, 4.42645, 0.07", "78.3777, -11.4535, 4.04385, 0.44", "79.4845, -11.5005, 3.55421, 0.22", "80.5258, -11.5276, 3.08314, 0.96", "82.0721, -11.5715, 2.33092, 0.15", "82.8418, -11.6254, 1.93866, 0.15", "83.6054, -11.7046, 1.53204, 0.44", "84.6238, -11.8285, 0.926569, 0.29", "84.9109, -11.848, 0.733733, 0.29", "85.2157, -11.8346, 0.467694, 0.29", "85.7186, -11.7355, -0.0231402, 0.22", "86.2903, -11.6165, -0.495889, 0.22", "87.0354, -11.4779, -0.933796, 0.22", "87.546, -11.4063, -1.14939, 0.22", "87.9837, -11.3673, -1.30718, 0.22", "88.891, -11.3414, -1.56681, 0.07", "90.0292, -11.3805, -1.82481, 0.96", "91.7295, -11.6379, -2.1072, 0.07", "92.0536, -11.7473, -2.14592, 0.07", "92.9167, -12.1923, -2.23872, 0.07", "93.8048, -12.882, -2.3375, 0.07", "94.1715, -13.3056, -2.38773, 0.88", "94.717, -14.1008, -2.47234, 0.37", "95.6006, -15.7346, -2.67249, 0.22", "95.8477, -16.2463, -2.7264, 0.29", "96.3395, -17.435, -2.80651, 0.07", "96.5409, -18.0677, -2.85968, 0.07", "107.029, -18.3577, -3.63249, 0.07", "117.453, -18.2994, -2.1511, 0.07", "127.833, -19.9762, -2.39328, 0.07", "137.656, -23.2265, -4.39578, 0.07", "147.745, -26.1918, -4.92791, 0.07", "158.084, -27.0429, -6.66409, 0.07", "167.905, -25.5405, -10.18, 0.07" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "38.9852, -14.0739, -6.80498, 0.74", "38.8921, -15.429, -6.48221, 0.74", "38.8433, -16.5291, -6.22437, 0.44", "38.8692, -17.4938, -5.97097, 0.22", "38.9307, -18.1189, -5.78425, 0.22", "38.9941, -18.4261, -5.67268, 0.22", "39.2057, -19.1319, -5.39875, 0.22", "39.4436, -19.6246, -5.20611, 0.22", "39.8714, -20.2695, -4.92851, 0.88", "40.1355, -20.5875, -4.77581, 0.81", "40.9545, -21.4347, -4.32548, 0.22", "41.5816, -22.0182, -4.04949, 0.74", "42.0662, -22.4503, -3.90711, 0.81", "42.8306, -23.1854, -3.77827, 0.15", "43.2338, -23.631, -3.77627, 0.15", "43.5287, -23.9979, -3.81283, 0.22", "44.0939, -24.7977, -3.92366, 0.22", "44.7345, -25.783, -3.97763, 0.22", "45.2192, -26.5122, -3.95289, 0.66", "45.7716, -27.278, -3.84878, 0.88", "46.3224, -28.016, -3.68884, 0.74", "46.9199, -28.8162, -3.46107, 0.74", "47.6862, -29.803, -3.0801, 0.22", "48.3324, -30.5452, -2.7439, 0.15", "48.8227, -31.048, -2.52796, 0.15", "49.3286, -31.5267, -2.35162, 0.22", "49.9678, -32.1033, -2.16667, 0.15", "50.2897, -32.3835, -2.09315, 0.15", "50.8692, -32.8786, -1.95349, 0.59", "52.0478, -33.8609, -1.61772, 0.22", "52.658, -34.3218, -1.4324, 0.22", "53.4796, -34.9139, -1.14849, 0.22", "53.9824, -35.2665, -0.968011, 0.37", "54.977, -35.9571, -0.605257, 0.88", "55.5781, -36.3598, -0.381527, 0.74", "56.8985, -37.1788, 0.108836, 0.22", "57.7645, -37.6834, 0.41564, 0.29", "58.4083, -38.0494, 0.634339, 0.59", "59.0462, -38.409, 0.86997, 0.07", "59.446, -38.6548, 1.04193, 0.07", "59.9348, -38.9635, 1.27847, 0.59", "60.8552, -39.5643, 1.70177, 0.15", "61.5047, -40.0076, 1.94325, 0.66", "62.4234, -40.6846, 2.20853, 0.96", "63.7055, -41.7025, 2.46699, 0.29", "64.5555, -42.4284, 2.55907, 0.29", "65.7139, -43.5013, 2.63377, 0.66", "66.7872, -44.578, 2.66854, 0.22", "67.4287, -45.2726, 2.66968, 0.22", "68.1525, -46.1391, 2.64827, 0.37", "68.9184, -47.1734, 2.62265, 0.29", "69.6102, -48.3007, 2.63039, 0.22", "70.3022, -49.7392, 2.72567, 0.74", "70.6686, -50.6953, 2.82047, 0.44", "71.0331, -51.7773, 2.94195, 0.15", "71.321, -52.6861, 3.0364, 0.44", "71.481, -53.1888, 3.09372, 0.44", "71.9426, -54.5956, 3.25268, 0.22", "72.4709, -56.1137, 3.45624, 1.11", "73.3051, -58.3257, 3.79582, 0.15", "73.6003, -59.0459, 3.92794, 0.29", "74.1739, -60.3138, 4.17839, 0.15", "74.443, -60.8823, 4.30396, 0.29", "74.9434, -61.8623, 4.55809, 0.74", "75.3582, -62.6362, 4.83985, 0.22", "75.7914, -63.4449, 5.23929, 0.22", "76.2886, -64.3569, 5.80559, 0.29", "76.6663, -65.0265, 6.31778, 0.22", "77.0679, -65.7223, 6.98874, 0.59", "77.4779, -66.3981, 7.85263, 0.22", "77.9395, -67.0986, 8.97321, 0.74", "78.3475, -67.7002, 10.12, 0.59", "78.7056, -68.222, 11.2527, 0.37", "79.0249, -68.6753, 12.3241, 0.15", "79.4014, -69.1908, 13.5118, 0.22", "79.4893, -69.3043, 13.7758, 0.22", "79.8204, -69.6887, 14.7049, 0.22", "80.2103, -70.1241, 15.7762, 0.59", "80.5089, -70.4354, 16.5707, 1.03", "81.069, -71.0349, 18.0891, 0.22", "81.4577, -71.4639, 19.1401, 0.22", "81.8359, -71.8806, 20.179, 0.22", "82.2591, -72.321, 21.3289, 0.15", "82.5556, -72.6235, 22.0937, 0.44", "83.1296, -73.2316, 23.4477, 0.37", "83.8938, -74.0787, 25.1645, 0.15", "84.3159, -74.5308, 25.9519, 0.29", "84.965, -75.212, 26.9826, 0.81", "85.8766, -76.1295, 28.1835, 0.22", "86.3996, -76.6175, 28.7547, 0.15", "87.0715, -77.1748, 29.3565, 0.15", "87.9138, -77.8132, 30.0003, 0.15", "88.3251, -78.1208, 30.2539, 0.52", "88.8625, -78.5291, 30.5363, 0.52", "90.2937, -79.6388, 31.208, 0.07", "91.0603, -80.2538, 31.5341, 0.22", "92.0455, -81.1023, 31.9113, 0.29", "94.1276, -83.073, 32.7236, 0.07", "94.603, -83.5464, 32.9052, 0.07", "95.0504, -84.0127, 33.0686, 0.37", "95.604, -84.625, 33.2855, 0.37", "96.8716, -86.116, 34.002, 0.07", "97.4796, -86.8916, 34.4976, 0.07", "97.9196, -87.4894, 34.9803, 0.52", "98.137, -87.799, 35.2551, 0.52", "98.9614, -89.053, 36.4046, 0.22", "99.8107, -90.5301, 37.7116, 0.07", "100.344, -91.5752, 38.5923, 0.07", "100.58, -92.0731, 38.9934, 0.29", "101.25, -93.3835, 39.9633, 0.07", "101.814, -94.348, 40.5864, 0.29", "102.978, -96.0809, 41.4467, 0.07", "103.595, -96.8614, 41.7132, 0.22", "104.26, -97.5614, 41.8456, 0.22", "106.003, -99.1566, 41.7789, 0.07", "106.974, -99.9261, 41.4714, 0.07", "107.442, -100.296, 41.2355, 0.07", "108.283, -101.017, 40.6283, 0.15", "109.058, -101.88, 39.8017, 0.07", "109.536, -102.614, 39.0409, 0.22", "109.811, -103.276, 38.3584, 0.22", "110.097, -104.176, 37.3568, 0.07", "110.278, -104.928, 36.4567, 0.44", "110.477, -106.113, 34.9194, 0.15", "110.567, -106.923, 33.8337, 0.52", "110.606, -107.339, 33.2465, 0.52", "110.66, -107.948, 32.3749, 0.52", "110.739, -108.726, 31.2527, 0.15", "110.846, -109.59, 30.0904, 0.15", "110.894, -109.895, 29.7268, 0.29", "111.122, -111.127, 28.3599, 0.15", "111.229, -111.69, 27.7483, 0.37", "111.41, -112.483, 26.9171, 0.22", "111.579, -113.099, 26.2587, 0.07", "111.815, -113.891, 25.4158, 0.22", "112.196, -115.133, 24.0632, 0.07", "112.583, -116.374, 22.7171, 0.07", "112.962, -117.565, 21.4113, 0.07", "113.18, -118.249, 20.6676, 0.22", "113.418, -118.997, 19.8628, 0.07", "113.605, -119.547, 19.2463, 0.15" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-60.6897, 52.1467, -5.80016, 0.22", "-61.7574, 52.853, -5.19816, 0.22", "-62.1633, 53.0582, -5.02647, 0.22", "-62.8739, 53.3878, -4.7965, 0.52", "-63.2955, 53.5813, -4.68036, 0.52", "-64.3647, 54.0962, -4.41901, 0.15", "-65.0847, 54.434, -4.25277, 0.66", "-65.8876, 54.7768, -4.11213, 0.22", "-66.9505, 55.2439, -3.9425, 0.07", "-67.6874, 55.5503, -3.83734, 0.07", "-68.4097, 55.8459, -3.73294, 0.52", "-69.5026, 56.3038, -3.56488, 0.07", "-70.4437, 56.6785, -3.3832, 0.07", "-70.9256, 56.8418, -3.26213, 0.59", "-71.7517, 57.0473, -3.0092, 0.07", "-72.4525, 57.1933, -2.75261, 0.15", "-73.1183, 57.3101, -2.44386, 0.37", "-73.7475, 57.418, -2.04747, 0.59", "-74.3581, 57.4939, -1.51829, 0.22", "-74.7713, 57.5442, -1.08903, 0.22", "-75.3499, 57.6043, -0.439676, 0.22", "-75.7772, 57.5953, 0.0787878, 0.22", "-76.3886, 57.4852, 0.849287, 0.44", "-76.839, 57.3324, 1.39468, 0.44", "-77.3541, 57.1174, 1.91019, 0.22", "-78.1994, 56.7189, 2.60203, 0.07", "-78.8144, 56.4427, 2.99874, 0.07", "-79.3211, 56.2333, 3.25444, 0.07", "-79.7897, 56.1075, 3.41279, 0.07", "-80.6222, 55.9539, 3.62263, 0.07", "-81.188, 55.8785, 3.73723, 0.29", "-82.1763, 55.8234, 3.90236, 0.66", "-82.9137, 55.8117, 4.01913, 0.88", "-84.6897, 55.8258, 4.2943, 0.22", "-85.7715, 55.8456, 4.45536, 0.15", "-86.7185, 55.8786, 4.59317, 0.22", "-87.4623, 55.9359, 4.6588, 0.07", "-88.0111, 55.9974, 4.67479, 0.07", "-88.664, 56.0884, 4.66131, 0.59", "-89.3136, 56.2037, 4.62728, 0.07", "-90.0142, 56.3819, 4.55025, 0.52", "-91.3244, 56.7595, 4.32082, 0.07", "-91.7386, 56.8779, 4.20643, 0.07", "-92.4084, 57.102, 3.94561, 0.22", "-101.738, 57.6107, 7.34759, 0.22", "-110.875, 57.9754, 11.2482, 0.22", "-119.172, 59.8257, 16.4522, 0.22", "-127.162, 60.2823, 22.3555, 0.22", "-135.002, 59.1522, 28.3584, 0.22", "-143.922, 57.7588, 32.5228, 0.22", "-152.079, 54.9754, 37.5153, 0.22", "-159.681, 51.385, 42.8909, 0.22" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-60.6897, 52.1467, -5.80016, 0.15", "-61.4474, 52.1147, -5.81057, 0.15", "-62.0986, 52.0803, -5.81906, 0.15", "-62.7217, 52.0683, -5.84058, 0.15", "-63.1053, 52.0657, -5.85562, 0.15", "-63.8942, 52.0778, -5.89262, 0.15", "-64.4297, 52.0747, -5.92133, 0.15", "-65.0677, 52.0499, -5.96518, 0.81", "-65.844, 51.9811, -6.0205, 0.15", "-66.4876, 51.9196, -6.06416, 0.44", "-67.3664, 51.8456, -6.12057, 0.15", "-68.0532, 51.8019, -6.15989, 0.15", "-68.4681, 51.7702, -6.18504, 0.15", "-68.8453, 51.7346, -6.20726, 0.15", "-69.9166, 51.5972, -6.25334, 0.07", "-70.4159, 51.5403, -6.27604, 0.07", "-70.9193, 51.5051, -6.29134, 0.15", "-78.1134, 50.6497, -5.92942, 0.15" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-52.9397, -27.4097, 21.6065, 0.15", "-52.6108, -28.3777, 22.9229, 0.15", "-52.3376, -29.182, 24.0166, 0.66", "-52.1006, -29.8797, 24.9655, 0.44", "-51.6605, -31.1754, 26.7276, 0.15", "-51.3217, -32.1727, 28.0838, 0.15", "-50.888, -33.4493, 29.8199, 0.07" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-52.9397, -27.4097, 21.6065, 0.29", "-54.3569, -28.1251, 21.4885, 0.29", "-55.1898, -28.5667, 21.4097, 0.15", "-56.0007, -29.0419, 21.3384, 0.22", "-56.9547, -29.601, 21.2545, 0.07", "-57.7194, -30.0492, 21.1873, 0.52", "-58.4592, -30.4827, 21.1223, 0.15", "-59.3744, -31.0092, 21.0171, 0.29", "-60.2502, -31.5402, 20.9019, 0.07" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "64.1266, 27.9277, -27.5416, 0.15", "69.174, 38.0959, -28.1615, 0.15", "73.5592, 48.561, -28.9959, 0.15", "77.2578, 59.2739, -30.0415, 0.15", "79.5279, 70.1726, -32.2376, 0.15", "80.5929, 80.9281, -35.5164, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "64.1266, 27.9277, -27.5416, 0.29", "66.6996, 34.6165, -29.6893, 0.15", "68.9434, 41.0737, -32.6982, 0.15", "70.4466, 47.5524, -36.1081, 0.15", "71.2063, 53.7265, -40.2159, 0.15", "71.5416, 60.7338, -42.9086, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_34", "dend_33", "dend_24", "dend_13", "dend_2", "dend_1", "dend_0", "dend_36", "dend_35", "dend_30", "dend_25", "dend_15", "dend_14", "dend_8", "dend_3", "dend_38", "dend_37", "dend_32", "dend_31", "dend_27", "dend_26", "dend_19", "dend_16", "dend_10", "dend_9", "dend_5", "dend_4", "dend_29", "dend_28", "dend_21", "dend_20", "dend_18", "dend_17", "dend_12", "dend_11", "dend_7", "dend_6", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_34", "dend_33", "dend_24", "dend_13", "dend_2", "dend_1", "dend_0", "dend_36", "dend_35", "dend_30", "dend_25", "dend_15", "dend_14", "dend_8", "dend_3", "dend_38", "dend_37", "dend_32", "dend_31", "dend_27", "dend_26", "dend_19", "dend_16", "dend_10", "dend_9", "dend_5", "dend_4", "dend_29", "dend_28", "dend_21", "dend_20", "dend_18", "dend_17", "dend_12", "dend_11", "dend_7", "dend_6", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_34", "dend_33", "dend_24", "dend_13", "dend_2", "dend_1", "dend_0", "axon_0", "dend_36", "dend_35", "dend_30", "dend_25", "dend_15", "dend_14", "dend_8", "dend_3", "axon_1", "dend_38", "dend_37", "dend_32", "dend_31", "dend_27", "dend_26", "dend_19", "dend_16", "dend_10", "dend_9", "dend_5", "dend_4", "dend_29", "dend_28", "dend_21", "dend_20", "dend_18", "dend_17", "dend_12", "dend_11", "dend_7", "dend_6", "dend_23", "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "axon_1", "axon_1", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_SBC_7382b080d8_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: soma_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: dend_24
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_34, dend_33, dend_24, dend_13, dend_2, dend_1, dend_0, dend_36, dend_35, dend_30, dend_25, dend_15, dend_14, dend_8, dend_3, dend_38, dend_37, dend_32, dend_31, dend_27, dend_26, dend_19, dend_16, dend_10, dend_9, dend_5, dend_4, dend_29, dend_28, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_6, dend_23, dend_22]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_34, dend_33, dend_24, dend_13, dend_2, dend_1, dend_0, dend_36, dend_35, dend_30, dend_25, dend_15, dend_14, dend_8, dend_3, dend_38, dend_37, dend_32, dend_31, dend_27, dend_26, dend_19, dend_16, dend_10, dend_9, dend_5, dend_4, dend_29, dend_28, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_6, dend_23, dend_22]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_34, dend_33, dend_24, dend_13, dend_2, dend_1, dend_0, axon_0, dend_36, dend_35, dend_30, dend_25, dend_15, dend_14, dend_8, dend_3, axon_1, dend_38, dend_37, dend_32, dend_31, dend_27, dend_26, dend_19, dend_16, dend_10, dend_9, dend_5, dend_4, dend_29, dend_28, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_6, dend_23, dend_22]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_32
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_34(0), soma_0(0.49999994695550876)
    connect dend_33(0), soma_0(0.49999994695550876)
    connect dend_24(0), soma_0(0.49999994695550876)
    connect dend_13(0), soma_0(0.49999994695550876)
    connect dend_2(0), soma_0(0.49999994695550876)
    connect dend_1(0), soma_0(0.49999994695550876)
    connect dend_0(0), soma_0(0.49999994695550876)
    connect axon_0(0), soma_0(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_30(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -5.8534, -3.68898, 0.0, 3.87803 ) }
    soma_0 { pt3dadd( -5.27984, -3.22888, 0.0, 6.96449 ) }
    soma_0 { pt3dadd( -4.70627, -2.76878, 0.0, 8.7585 ) }
    soma_0 { pt3dadd( -4.1327, -2.30868, 0.0, 10.0498 ) }
    soma_0 { pt3dadd( -3.55914, -1.84858, 0.0, 11.0032 ) }
    soma_0 { pt3dadd( -2.98557, -1.38848, 0.0, 12.0695 ) }
    soma_0 { pt3dadd( -2.41201, -0.928385, 0.0, 12.4861 ) }
    soma_0 { pt3dadd( -1.83844, -0.468287, 0.0, 12.8863 ) }
    soma_0 { pt3dadd( -1.26487, -0.0081878, 0.0, 13.1702 ) }
    soma_0 { pt3dadd( -0.691307, 0.451911, 0.0, 13.2491 ) }
    soma_0 { pt3dadd( -0.117741, 0.91201, 0.0, 13.2672 ) }
    soma_0 { pt3dadd( 0.455825, 1.37211, 0.0, 13.2354 ) }
    soma_0 { pt3dadd( 1.02939, 1.83221, 0.0, 13.09 ) }
    soma_0 { pt3dadd( 1.60296, 2.29231, 0.0, 12.7829 ) }
    soma_0 { pt3dadd( 2.17652, 2.75241, 0.0, 12.3841 ) }
    soma_0 { pt3dadd( 2.75009, 3.2125, 0.0, 11.4175 ) }
    soma_0 { pt3dadd( 3.32366, 3.6726, 0.0, 10.2262 ) }
    soma_0 { pt3dadd( 3.89722, 4.1327, 0.0, 8.70811 ) }
    soma_0 { pt3dadd( 4.47079, 4.5928, 0.0, 6.9837 ) }
    soma_0 { pt3dadd( 5.04435, 5.0529, 0.0, 4.97808 ) }
    soma_0 { pt3dadd( 5.61792, 5.513, 0.0, 2.90913 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 21/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -3.59355, 4.62374, 7.71, 0.96 ) }
    dend_34 { pt3dadd( -3.22963, 7.45552, 9.49311, 0.96 ) }
    dend_34 { pt3dadd( -3.17888, 8.46957, 10.1076, 0.96 ) }
    dend_34 { pt3dadd( -3.17446, 10.2462, 11.2786, 0.74 ) }
    dend_34 { pt3dadd( -3.19285, 11.51, 12.1817, 1.03 ) }
    dend_34 { pt3dadd( -3.20269, 12.8998, 13.3586, 0.81 ) }
    dend_34 { pt3dadd( -3.17212, 13.8152, 14.365, 0.59 ) }
    dend_34 { pt3dadd( -3.10007, 14.6345, 15.6546, 0.59 ) }
    dend_34 { pt3dadd( -2.98146, 15.0161, 16.7338, 0.59 ) }
    dend_34 { pt3dadd( -2.87131, 15.1148, 17.4925, 0.59 ) }
    dend_34 { pt3dadd( -2.53385, 15.0908, 19.4258, 0.59 ) }
    dend_34 { pt3dadd( -2.05396, 14.7545, 21.6678, 0.88 ) }
    dend_34 { pt3dadd( -1.62929, 14.394, 23.1926, 1.18 ) }
    dend_34 { pt3dadd( -1.04257, 13.9622, 24.7466, 0.66 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 35/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -4.04355, -3.84976, 15.73, 0.66 ) }
    dend_33 { pt3dadd( -4.29118, -4.74611, 16.2114, 0.66 ) }
    dend_33 { pt3dadd( -4.41372, -5.14731, 16.4376, 0.66 ) }
    dend_33 { pt3dadd( -4.62983, -5.74201, 16.7679, 0.66 ) }
    dend_33 { pt3dadd( -5.01179, -6.69942, 17.2917, 0.96 ) }
    dend_33 { pt3dadd( -5.70034, -8.40029, 18.1967, 0.66 ) }
    dend_33 { pt3dadd( -5.94085, -9.02937, 18.5327, 0.66 ) }
    dend_33 { pt3dadd( -6.18672, -9.88293, 18.9977, 0.66 ) }
    dend_33 { pt3dadd( -6.39356, -10.7901, 19.5042, 0.66 ) }
    dend_33 { pt3dadd( -6.51247, -11.406, 19.8496, 0.88 ) }
    dend_33 { pt3dadd( -6.67803, -12.1454, 20.2568, 0.88 ) }
    dend_33 { pt3dadd( -7.04284, -13.4781, 20.9319, 0.29 ) }
    dend_33 { pt3dadd( -7.3145, -14.4084, 21.3777, 0.29 ) }
    dend_33 { pt3dadd( -7.42722, -14.7713, 21.5567, 0.29 ) }
    dend_33 { pt3dadd( -7.67334, -15.5329, 21.9025, 0.66 ) }
    dend_33 { pt3dadd( -7.92221, -16.4901, 22.2906, 0.22 ) }
    dend_33 { pt3dadd( -8.02897, -17.035, 22.466, 0.22 ) }
    dend_33 { pt3dadd( -8.18645, -18.0671, 22.7556, 1.03 ) }
    dend_33 { pt3dadd( -8.30167, -18.9583, 22.9949, 1.03 ) }
    dend_33 { pt3dadd( -8.43718, -20.5396, 23.4293, 0.37 ) }
    dend_33 { pt3dadd( -8.48318, -22.3202, 23.9085, 0.07 ) }
    dend_33 { pt3dadd( -8.44231, -23.3507, 24.2008, 0.29 ) }
    dend_33 { pt3dadd( -8.34417, -24.387, 24.4923, 0.29 ) }
    dend_33 { pt3dadd( -8.22439, -25.1724, 24.7242, 0.37 ) }
    dend_33 { pt3dadd( -8.03043, -26.0404, 24.9817, 0.52 ) }
    dend_33 { pt3dadd( -7.88565, -26.5722, 25.1756, 0.52 ) }
    dend_33 { pt3dadd( -7.63969, -27.4512, 25.5557, 0.52 ) }
    dend_33 { pt3dadd( -7.33516, -28.4202, 26.062, 0.52 ) }
    dend_33 { pt3dadd( -7.10757, -28.9857, 26.3815, 0.66 ) }
    dend_33 { pt3dadd( -6.54842, -30.1495, 27.0538, 0.22 ) }
    dend_33 { pt3dadd( -5.95717, -31.1937, 27.6537, 0.88 ) }
    dend_33 { pt3dadd( -5.42893, -32.0318, 28.1264, 0.88 ) }
    dend_33 { pt3dadd( -4.78354, -33.0202, 28.6552, 0.22 ) }
    dend_33 { pt3dadd( -4.35464, -33.6715, 28.9971, 0.22 ) }
    dend_33 { pt3dadd( -3.54724, -34.8434, 29.5636, 0.29 ) }
    dend_33 { pt3dadd( -2.96344, -35.6236, 29.9039, 0.29 ) }
    dend_33 { pt3dadd( -2.33517, -36.4034, 30.2047, 0.22 ) }
    dend_33 { pt3dadd( -1.44072, -37.5466, 30.5895, 0.59 ) }
    dend_33 { pt3dadd( -0.729116, -38.498, 30.9108, 0.22 ) }
    dend_33 { pt3dadd( -0.0896842, -39.3906, 31.2069, 0.22 ) }
    dend_33 { pt3dadd( 0.327705, -39.9868, 31.4451, 0.52 ) }
    dend_33 { pt3dadd( 1.09499, -41.2056, 31.9942, 0.15 ) }
    dend_33 { pt3dadd( 1.62156, -42.116, 32.434, 0.15 ) }
    dend_33 { pt3dadd( 2.18357, -43.1612, 32.966, 0.15 ) }
    dend_33 { pt3dadd( 2.61952, -44.0392, 33.443, 0.22 ) }
    dend_33 { pt3dadd( 3.20296, -45.3159, 34.2013, 0.22 ) }
    dend_33 { pt3dadd( 3.63207, -46.1778, 34.7434, 0.22 ) }
    dend_33 { pt3dadd( 3.8533, -46.5429, 35.0063, 0.22 ) }
    dend_33 { pt3dadd( 4.24407, -47.1118, 35.4429, 0.22 ) }
    dend_33 { pt3dadd( 4.52676, -47.538, 35.7584, 0.44 ) }
    dend_33 { pt3dadd( 4.7823, -47.9137, 36.0613, 0.44 ) }
    dend_33 { pt3dadd( 5.28841, -48.6035, 36.627, 0.44 ) }
    dend_33 { pt3dadd( 5.85988, -49.2775, 37.2523, 0.44 ) }
    dend_33 { pt3dadd( 6.56528, -50.055, 38.0177, 0.15 ) }
    dend_33 { pt3dadd( 7.10141, -50.6448, 38.5829, 0.15 ) }
    dend_33 { pt3dadd( 7.70699, -51.3244, 39.1826, 0.15 ) }
    dend_33 { pt3dadd( 8.46264, -52.261, 39.8683, 0.59 ) }
    dend_33 { pt3dadd( 9.09367, -53.0849, 40.3703, 0.15 ) }
    dend_33 { pt3dadd( 9.67148, -53.8642, 40.7452, 0.15 ) }
    dend_33 { pt3dadd( 10.1666, -54.5877, 41.0407, 0.15 ) }
    dend_33 { pt3dadd( 10.663, -55.4065, 41.3258, 0.74 ) }
    dend_33 { pt3dadd( 11.785, -57.5248, 41.9509, 0.15 ) }
    dend_33 { pt3dadd( 12.4737, -59.009, 42.2847, 0.15 ) }
    dend_33 { pt3dadd( 12.9195, -60.1101, 42.4888, 0.37 ) }
    dend_33 { pt3dadd( 13.5482, -61.7707, 42.7974, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_33 { pt3dadd( 14.2637, -63.7582, 43.1926, 0.22 ) }
    dend_33 { pt3dadd( 14.7242, -65.0894, 43.5035, 0.22 ) }
    dend_33 { pt3dadd( 15.4156, -67.0799, 44.0203, 0.07 ) }
    dend_33 { pt3dadd( 15.7074, -67.9475, 44.2606, 0.96 ) }
    dend_33 { pt3dadd( 16.3426, -69.7636, 44.7899, 0.22 ) }
    dend_33 { pt3dadd( 16.6392, -70.6016, 45.0488, 0.37 ) }
    dend_33 { pt3dadd( 17.1033, -71.9506, 45.5192, 0.07 ) }
    dend_33 { pt3dadd( 17.2659, -72.4344, 45.7143, 0.22 ) }
    dend_33 { pt3dadd( 17.6496, -73.5796, 46.2723, 0.07 ) }
    dend_33 { pt3dadd( 17.8837, -74.2897, 46.6153, 0.22 ) }
    dend_33 { pt3dadd( 18.3575, -75.7286, 47.2211, 0.07 ) }
    dend_33 { pt3dadd( 18.6349, -76.5267, 47.5403, 0.66 ) }
    dend_33 { pt3dadd( 19.0398, -77.6388, 47.9424, 0.66 ) }
    dend_33 { pt3dadd( 19.6724, -79.2687, 48.5443, 0.22 ) }
    dend_33 { pt3dadd( 19.8042, -79.5601, 48.6705, 0.22 ) }
    dend_33 { pt3dadd( 20.5125, -80.917, 49.3616, 0.07 ) }
    dend_33 { pt3dadd( 20.8089, -81.4465, 49.6316, 0.29 ) }
    dend_33 { pt3dadd( 21.5226, -82.739, 50.2627, 0.07 ) }
    dend_33 { pt3dadd( 21.8047, -83.2813, 50.5255, 0.22 ) }
    dend_33 { pt3dadd( 22.5411, -84.8095, 51.2191, 0.07 ) }
    dend_33 { pt3dadd( 23.1738, -86.2423, 51.8702, 0.74 ) }
    dend_33 { pt3dadd( 23.9734, -88.26, 52.7763, 0.15 ) }
    dend_33 { pt3dadd( 24.3349, -89.2849, 53.196, 0.29 ) }
    dend_33 { pt3dadd( 24.7927, -90.7077, 53.7504, 0.15 ) }
    dend_33 { pt3dadd( 25.186, -92.0184, 54.2279, 0.37 ) }
    dend_33 { pt3dadd( 25.7002, -93.9154, 54.8474, 0.22 ) }
    dend_33 { pt3dadd( 25.9589, -94.9455, 55.209, 0.74 ) }
    dend_33 { pt3dadd( 26.2373, -96.0658, 55.6776, 0.22 ) }
    dend_33 { pt3dadd( 26.5516, -97.2818, 56.1837, 0.07 ) }
    dend_33 { pt3dadd( 26.7593, -98.0295, 56.4943, 0.07 ) }
    dend_33 { pt3dadd( 26.9454, -98.6267, 56.7722, 0.66 ) }
    dend_33 { pt3dadd( 27.9456, -101.461, 58.1642, 0.15 ) }
    dend_33 { pt3dadd( 28.2012, -102.137, 58.4961, 0.15 ) }
    dend_33 { pt3dadd( 28.6357, -103.313, 59.0797, 0.52 ) }
    dend_33 { pt3dadd( 29.172, -104.837, 59.7864, 0.66 ) }
    dend_33 { pt3dadd( 29.8995, -106.947, 60.7168, 0.15 ) }
    dend_33 { pt3dadd( 30.1459, -107.693, 61.0377, 0.15 ) }
    dend_33 { pt3dadd( 30.5503, -108.92, 61.6342, 0.29 ) }
    dend_33 { pt3dadd( 30.8045, -109.776, 62.0947, 0.29 ) }
    dend_33 { pt3dadd( 31.053, -110.74, 62.6514, 0.07 ) }
    dend_33 { pt3dadd( 31.1627, -111.174, 62.8894, 0.22 ) }
    dend_33 { pt3dadd( 31.535, -112.69, 63.7453, 0.22 ) }
    dend_33 { pt3dadd( 32.0656, -114.783, 64.982, 0.59 ) }
    dend_33 { pt3dadd( 32.6137, -116.701, 66.1623, 0.07 ) }
    dend_33 { pt3dadd( 32.8205, -117.316, 66.5326, 0.66 ) }
    dend_33 { pt3dadd( 33.2551, -118.444, 67.2444, 0.07 ) }
    dend_33 { pt3dadd( 33.8917, -119.899, 68.2075, 0.07 ) }
    dend_33 { pt3dadd( 34.2958, -120.691, 68.7484, 0.22 ) }
    dend_33 { pt3dadd( 34.7068, -121.413, 69.247, 0.07 ) }
    dend_33 { pt3dadd( 35.1865, -122.183, 69.8632, 0.52 ) }
    dend_33 { pt3dadd( 36.1474, -123.715, 71.2296, 0.15 ) }
    dend_33 { pt3dadd( 36.9357, -124.981, 72.443, 0.59 ) }
    dend_33 { pt3dadd( 37.5645, -125.99, 73.4425, 0.07 ) }
    dend_33 { pt3dadd( 37.8757, -126.531, 73.9933, 0.29 ) }
    dend_33 { pt3dadd( 38.5693, -127.751, 75.2539, 0.07 ) }
    dend_33 { pt3dadd( 39.0732, -128.611, 76.167, 0.07 ) }
    dend_33 { pt3dadd( 39.298, -128.976, 76.5717, 0.44 ) }
    dend_33 { pt3dadd( 39.767, -129.706, 77.4263, 0.44 ) }
    dend_33 { pt3dadd( 40.5089, -130.881, 78.831, 0.15 ) }
    dend_33 { pt3dadd( 41.0824, -131.782, 79.9329, 0.15 ) }
    dend_33 { pt3dadd( 41.5687, -132.471, 80.8641, 0.22 ) }
    dend_33 { pt3dadd( 42.3145, -133.479, 82.3317, 0.22 ) }
    dend_33 { pt3dadd( 42.5439, -133.798, 82.8322, 0.15 ) }
    dend_33 { pt3dadd( 42.8423, -134.255, 83.5784, 0.29 ) }
    dend_33 { pt3dadd( 43.3147, -135.078, 84.9641, 0.29 ) }
    dend_33 { pt3dadd( 43.8602, -136.148, 86.6572, 0.52 ) }
    dend_33 { pt3dadd( 44.139, -136.678, 87.4672, 0.07 ) }
    dend_33 { pt3dadd( 44.6043, -137.503, 88.6407, 0.07 ) }
    dend_33 { pt3dadd( 45.0349, -138.259, 89.59, 0.22 ) }
    dend_33 { pt3dadd( 45.4173, -138.923, 90.3363, 0.22 ) }
    dend_33 { pt3dadd( 45.9106, -139.793, 91.1445, 0.22 ) }
    dend_33 { pt3dadd( 46.168, -140.24, 91.4864, 0.22 ) }
    dend_33 { pt3dadd( 46.7849, -141.274, 92.2171, 0.22 ) }
    dend_33 { pt3dadd( 47.5356, -142.551, 93.0391, 0.15 ) }
    dend_33 { pt3dadd( 48.2625, -143.926, 93.8697, 0.15 ) }
    dend_33 { pt3dadd( 48.6481, -144.819, 94.3945, 0.15 ) }
    dend_33 { pt3dadd( 48.9161, -145.599, 94.8541, 0.29 ) }
    dend_33 { pt3dadd( 49.1583, -146.485, 95.385, 0.29 ) }
    dend_33 { pt3dadd( 49.3502, -147.616, 96.1126, 0.07 ) }
    dend_33 { pt3dadd( 49.4173, -148.286, 96.5675, 0.07 ) }
    dend_33 { pt3dadd( 49.4445, -149.251, 97.1606, 0.07 ) }
    dend_33 { pt3dadd( 49.4379, -149.678, 97.4131, 0.22 ) }
    dend_33 { pt3dadd( 49.373, -151.183, 98.285, 0.07 ) }
    dend_33 { pt3dadd( 49.292, -152.829, 99.2696, 0.07 ) }
    dend_33 { pt3dadd( 49.2604, -153.581, 99.765, 0.07 ) }
    dend_33 { pt3dadd( 49.2303, -154.775, 100.616, 0.07 ) }
    dend_33 { pt3dadd( 49.2289, -155.425, 101.132, 0.74 ) }
    dend_33 { pt3dadd( 49.2371, -156.033, 101.66, 0.29 ) }
    dend_33 { pt3dadd( 49.2628, -157.468, 102.996, 0.07 ) }
    dend_33 { pt3dadd( 49.2636, -158.699, 104.168, 0.07 ) }
    dend_33 { pt3dadd( 49.2441, -159.122, 104.568, 0.59 ) }
    dend_33 { pt3dadd( 49.0644, -161.314, 106.739, 0.07 ) }
    dend_33 { pt3dadd( 49.0122, -161.911, 107.341, 0.07 ) }
    dend_33 { pt3dadd( 48.9388, -162.698, 108.124, 0.07 ) }
    dend_33 { pt3dadd( 48.7705, -164.164, 109.488, 0.07 ) }
    dend_33 { pt3dadd( 48.6678, -164.807, 110.048, 0.07 ) }
    dend_33 { pt3dadd( 48.3083, -166.374, 111.359, 0.07 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 97/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 5.16645, 6.75525, 4.66, 1.99 ) }
    dend_24 { pt3dadd( 5.16645, 6.75525, 4.66, 1.99 ) }
    dend_24 { pt3dadd( 5.50468, 7.34972, 4.70844, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_24 { pt3dadd( 6.15825, 8.47545, 4.83, 1.18 ) }
    dend_24 { pt3dadd( 6.93096, 9.82639, 5.02064, 1.11 ) }
    dend_24 { pt3dadd( 7.616, 11.0545, 5.25073, 1.33 ) }
    dend_24 { pt3dadd( 8.24446, 12.2675, 5.49144, 1.55 ) }
    dend_24 { pt3dadd( 8.91092, 13.663, 5.77921, 1.11 ) }
    dend_24 { pt3dadd( 9.49905, 15.0274, 6.02786, 1.11 ) }
    dend_24 { pt3dadd( 10.0032, 16.2844, 6.18691, 0.74 ) }
    dend_24 { pt3dadd( 10.3356, 17.1816, 6.21552, 0.74 ) }
    dend_24 { pt3dadd( 10.6921, 18.1864, 6.12908, 0.66 ) }
    dend_24 { pt3dadd( 10.9339, 18.8328, 5.98532, 0.66 ) }
    dend_24 { pt3dadd( 11.5192, 20.0976, 5.55397, 0.96 ) }
    dend_24 { pt3dadd( 12.1527, 21.2669, 5.07095, 1.4 ) }
    dend_24 { pt3dadd( 12.7135, 22.2674, 4.64986, 1.62 ) }
    dend_24 { pt3dadd( 13.3507, 23.4321, 4.23605, 1.25 ) }
    dend_24 { pt3dadd( 14.1828, 25.1166, 3.81396, 0.81 ) }
    dend_24 { pt3dadd( 14.7272, 26.4883, 3.62631, 0.81 ) }
    dend_24 { pt3dadd( 15.0148, 27.5633, 3.61, 0.59 ) }
    dend_24 { pt3dadd( 15.2357, 28.8412, 3.68331, 0.59 ) }
    dend_24 { pt3dadd( 15.342, 30.6099, 3.90099, 0.59 ) }
    dend_24 { pt3dadd( 15.2008, 32.166, 4.20567, 0.44 ) }
    dend_24 { pt3dadd( 14.9544, 33.1137, 4.49058, 0.29 ) }
    dend_24 { pt3dadd( 14.7243, 33.68, 4.6831, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 22/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 6.61645, -2.51626, -6.09, 2.95 ) }
    dend_13 { pt3dadd( 6.61645, -2.51626, -6.09, 2.95 ) }
    dend_13 { pt3dadd( 7.77575, -3.07059, -6.81316, 1.7 ) }
    dend_13 { pt3dadd( 8.73192, -3.52106, -7.39114, 1.33 ) }
    dend_13 { pt3dadd( 9.88642, -4.09391, -8.10678, 1.33 ) }
    dend_13 { pt3dadd( 10.4633, -4.39679, -8.44497, 1.33 ) }
    dend_13 { pt3dadd( 11.4163, -4.97241, -8.95633, 1.47 ) }
    dend_13 { pt3dadd( 12.3184, -5.60726, -9.41304, 1.33 ) }
    dend_13 { pt3dadd( 13.276, -6.38989, -9.85783, 1.77 ) }
    dend_13 { pt3dadd( 14.3225, -7.38169, -10.2727, 1.99 ) }
    dend_13 { pt3dadd( 15.4757, -8.56416, -10.6912, 1.62 ) }
    dend_13 { pt3dadd( 16.976, -10.1809, -11.1752, 1.4 ) }
    dend_13 { pt3dadd( 18.1456, -11.5547, -11.5023, 1.25 ) }
    dend_13 { pt3dadd( 18.7409, -12.3271, -11.6417, 1.62 ) }
    dend_13 { pt3dadd( 19.2717, -13.1033, -11.7388, 2.14 ) }
    // Section: dend_2, id: dend_2, parent: soma_0 (entry count 37/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -7.25355, -0.0487531, -0.42, 2.8 ) }
    dend_2 { pt3dadd( -7.25355, -0.0487531, -0.42, 2.8 ) }
    dend_2 { pt3dadd( -8.81877, -0.545894, 0.286221, 1.92 ) }
    dend_2 { pt3dadd( -9.76935, -0.847808, 0.715118, 1.47 ) }
    dend_2 { pt3dadd( -11.5966, -1.4282, 1.53959, 1.18 ) }
    dend_2 { pt3dadd( -13.173, -1.9289, 2.25087, 1.18 ) }
    dend_2 { pt3dadd( -14.7344, -2.4248, 2.95533, 1.92 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.47645, -6.05475, -0.0300001, 0.74 ) }
    dend_1 { pt3dadd( 1.58643, -7.08656, -0.221217, 0.52 ) }
    dend_1 { pt3dadd( 1.70443, -7.94287, -0.341891, 0.74 ) }
    dend_1 { pt3dadd( 1.80004, -8.56718, -0.412169, 0.96 ) }
    dend_1 { pt3dadd( 1.94766, -9.45335, -0.473543, 1.18 ) }
    dend_1 { pt3dadd( 2.09074, -10.1306, -0.516764, 1.18 ) }
    dend_1 { pt3dadd( 2.30293, -10.96, -0.563337, 0.96 ) }
    dend_1 { pt3dadd( 2.62523, -11.8493, -0.581942, 0.88 ) }
    dend_1 { pt3dadd( 2.95684, -12.5412, -0.582556, 0.52 ) }
    dend_1 { pt3dadd( 3.29384, -13.0668, -0.59667, 0.22 ) }
    dend_1 { pt3dadd( 3.79378, -13.6831, -0.634682, 0.22 ) }
    dend_1 { pt3dadd( 4.05741, -13.9787, -0.675647, 0.44 ) }
    dend_1 { pt3dadd( 4.48017, -14.45, -0.774736, 0.88 ) }
    dend_1 { pt3dadd( 4.92696, -14.9564, -0.90383, 0.29 ) }
    dend_1 { pt3dadd( 5.44156, -15.6347, -1.0709, 0.59 ) }
    dend_1 { pt3dadd( 5.78203, -16.172, -1.19062, 0.22 ) }
    dend_1 { pt3dadd( 6.16652, -16.9221, -1.31369, 0.22 ) }
    dend_1 { pt3dadd( 6.38123, -17.3722, -1.36724, 0.74 ) }
    dend_1 { pt3dadd( 6.57088, -17.7817, -1.39484, 1.25 ) }
    dend_1 { pt3dadd( 7.07272, -18.8524, -1.4353, 0.44 ) }
    dend_1 { pt3dadd( 7.26623, -19.2564, -1.44345, 0.44 ) }
    dend_1 { pt3dadd( 7.5467, -19.8045, -1.44555, 0.74 ) }
    dend_1 { pt3dadd( 8.01424, -20.6602, -1.42816, 0.29 ) }
    dend_1 { pt3dadd( 8.18008, -20.9852, -1.40726, 0.22 ) }
    dend_1 { pt3dadd( 8.31297, -21.2914, -1.37962, 0.29 ) }
    dend_1 { pt3dadd( 8.54731, -22.0198, -1.30546, 0.29 ) }
    dend_1 { pt3dadd( 8.63494, -22.4507, -1.26306, 0.74 ) }
    dend_1 { pt3dadd( 8.7121, -23.1826, -1.19535, 1.25 ) }
    dend_1 { pt3dadd( 8.76314, -24.4813, -1.08104, 0.66 ) }
    dend_1 { pt3dadd( 8.78264, -25.1749, -1.01413, 0.44 ) }
    dend_1 { pt3dadd( 8.80875, -26.0022, -0.921767, 0.29 ) }
    dend_1 { pt3dadd( 8.84578, -26.6197, -0.839456, 0.22 ) }
    dend_1 { pt3dadd( 8.91154, -27.3146, -0.74711, 0.22 ) }
    dend_1 { pt3dadd( 8.97096, -27.8209, -0.680316, 0.44 ) }
    dend_1 { pt3dadd( 9.04302, -28.3094, -0.614561, 0.81 ) }
    dend_1 { pt3dadd( 9.09636, -28.6623, -0.555492, 1.11 ) }
    dend_1 { pt3dadd( 9.19509, -29.4971, -0.387778, 1.11 ) }
    dend_1 { pt3dadd( 9.26071, -30.3647, -0.204799, 0.81 ) }
    dend_1 { pt3dadd( 9.29496, -31.7587, 0.0917452, 0.44 ) }
    dend_1 { pt3dadd( 9.28516, -32.4004, 0.223831, 0.22 ) }
    dend_1 { pt3dadd( 9.27181, -32.8016, 0.295986, 0.22 ) }
    dend_1 { pt3dadd( 9.25084, -33.8291, 0.442511, 0.22 ) }
    dend_1 { pt3dadd( 9.2567, -34.413, 0.50154, 0.37 ) }
    dend_1 { pt3dadd( 9.31244, -35.1011, 0.547458, 0.59 ) }
    dend_1 { pt3dadd( 9.39661, -35.5505, 0.560916, 0.66 ) }
    dend_1 { pt3dadd( 9.5801, -36.2535, 0.56838, 0.22 ) }
    dend_1 { pt3dadd( 9.76459, -36.9171, 0.581898, 0.15 ) }
    dend_1 { pt3dadd( 9.87924, -37.3371, 0.590073, 0.29 ) }
    dend_1 { pt3dadd( 10.0065, -37.9296, 0.612853, 0.59 ) }
    dend_1 { pt3dadd( 10.1116, -38.649, 0.649423, 0.15 ) }
    dend_1 { pt3dadd( 10.1539, -39.0877, 0.674024, 0.15 ) }
    dend_1 { pt3dadd( 10.2136, -40.0702, 0.729699, 0.22 ) }
    dend_1 { pt3dadd( 10.2405, -40.5921, 0.77337, 0.59 ) }
    dend_1 { pt3dadd( 10.2839, -41.2852, 0.83402, 0.59 ) }
    dend_1 { pt3dadd( 10.3473, -41.9984, 0.903525, 0.22 ) }
    dend_1 { pt3dadd( 10.4656, -43.092, 1.00425, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 10.5146, -43.4709, 1.03893, 0.07 ) }
    dend_1 { pt3dadd( 10.6279, -44.3205, 1.08698, 0.07 ) }
    dend_1 { pt3dadd( 10.6604, -44.6582, 1.09688, 0.22 ) }
    dend_1 { pt3dadd( 10.6905, -45.1585, 1.09482, 0.22 ) }
    dend_1 { pt3dadd( 10.7109, -45.9527, 1.06365, 0.59 ) }
    dend_1 { pt3dadd( 10.707, -46.8372, 1.0031, 0.59 ) }
    dend_1 { pt3dadd( 10.698, -47.7161, 0.909997, 0.81 ) }
    dend_1 { pt3dadd( 10.7057, -48.2201, 0.834865, 0.81 ) }
    dend_1 { pt3dadd( 10.7885, -49.513, 0.631673, 0.15 ) }
    dend_1 { pt3dadd( 10.8757, -50.1979, 0.520693, 0.15 ) }
    dend_1 { pt3dadd( 10.9964, -50.7473, 0.434808, 0.59 ) }
    dend_1 { pt3dadd( 11.245, -51.4487, 0.321458, 0.15 ) }
    dend_1 { pt3dadd( 11.5385, -52.0129, 0.242363, 0.15 ) }
    dend_1 { pt3dadd( 11.7625, -52.3614, 0.204227, 0.15 ) }
    dend_1 { pt3dadd( 12.071, -52.771, 0.187166, 0.66 ) }
    dend_1 { pt3dadd( 12.3286, -53.0904, 0.200472, 0.81 ) }
    dend_1 { pt3dadd( 13.0256, -53.9651, 0.325509, 0.22 ) }
    dend_1 { pt3dadd( 13.5078, -54.6358, 0.497203, 0.29 ) }
    dend_1 { pt3dadd( 13.9161, -55.2696, 0.70498, 0.37 ) }
    dend_1 { pt3dadd( 14.175, -55.6742, 0.867678, 0.81 ) }
    dend_1 { pt3dadd( 14.5803, -56.2837, 1.18407, 1.03 ) }
    dend_1 { pt3dadd( 15.0072, -56.8809, 1.5774, 0.22 ) }
    dend_1 { pt3dadd( 15.408, -57.3942, 1.99994, 0.22 ) }
    dend_1 { pt3dadd( 15.7084, -57.7354, 2.29175, 0.22 ) }
    dend_1 { pt3dadd( 16.0247, -58.0373, 2.55367, 0.74 ) }
    dend_1 { pt3dadd( 16.408, -58.3415, 2.82136, 1.03 ) }
    dend_1 { pt3dadd( 17.0508, -58.749, 3.20269, 0.96 ) }
    dend_1 { pt3dadd( 17.644, -59.0665, 3.47147, 0.22 ) }
    dend_1 { pt3dadd( 18.2341, -59.3798, 3.70452, 0.15 ) }
    dend_1 { pt3dadd( 18.4879, -59.533, 3.80431, 0.22 ) }
    dend_1 { pt3dadd( 18.8689, -59.814, 3.95074, 0.22 ) }
    dend_1 { pt3dadd( 19.224, -60.1437, 4.10184, 0.22 ) }
    dend_1 { pt3dadd( 19.7454, -60.7361, 4.37141, 0.22 ) }
    dend_1 { pt3dadd( 20.21, -61.3075, 4.65207, 0.88 ) }
    dend_1 { pt3dadd( 20.4982, -61.6959, 4.85524, 0.81 ) }
    dend_1 { pt3dadd( 20.7837, -62.1189, 5.07123, 0.52 ) }
    dend_1 { pt3dadd( 21.1628, -62.7624, 5.37188, 0.15 ) }
    dend_1 { pt3dadd( 21.3563, -63.1132, 5.51295, 0.15 ) }
    dend_1 { pt3dadd( 21.6751, -63.6948, 5.72669, 0.44 ) }
    dend_1 { pt3dadd( 22.025, -64.3023, 5.92101, 0.22 ) }
    dend_1 { pt3dadd( 22.21, -64.6163, 6.01129, 0.66 ) }
    dend_1 { pt3dadd( 22.6071, -65.2382, 6.19823, 1.11 ) }
    dend_1 { pt3dadd( 23.2794, -66.2574, 6.49119, 0.22 ) }
    dend_1 { pt3dadd( 23.7097, -66.9489, 6.68835, 0.22 ) }
    dend_1 { pt3dadd( 23.9457, -67.3583, 6.80582, 0.74 ) }
    dend_1 { pt3dadd( 24.2476, -67.9012, 6.97137, 0.66 ) }
    dend_1 { pt3dadd( 24.6595, -68.6796, 7.20718, 0.22 ) }
    dend_1 { pt3dadd( 24.8699, -69.1068, 7.3358, 0.29 ) }
    dend_1 { pt3dadd( 25.0985, -69.6666, 7.48526, 0.52 ) }
    dend_1 { pt3dadd( 25.4923, -70.8395, 7.77083, 0.15 ) }
    dend_1 { pt3dadd( 25.6516, -71.5126, 7.91644, 0.96 ) }
    dend_1 { pt3dadd( 25.7506, -72.2863, 8.05737, 0.07 ) }
    dend_1 { pt3dadd( 25.7639, -72.6729, 8.10862, 0.07 ) }
    dend_1 { pt3dadd( 25.7444, -73.425, 8.19043, 0.22 ) }
    dend_1 { pt3dadd( 25.7007, -74.0178, 8.23596, 0.59 ) }
    dend_1 { pt3dadd( 25.5803, -74.8886, 8.25437, 0.66 ) }
    dend_1 { pt3dadd( 25.4459, -75.6828, 8.23899, 0.22 ) }
    dend_1 { pt3dadd( 25.2401, -76.8046, 8.1905, 0.22 ) }
    dend_1 { pt3dadd( 25.1639, -77.2197, 8.15496, 0.22 ) }
    dend_1 { pt3dadd( 25.0437, -77.8442, 8.07438, 0.81 ) }
    dend_1 { pt3dadd( 24.8718, -78.568, 7.96601, 0.66 ) }
    dend_1 { pt3dadd( 24.663, -79.3043, 7.86888, 0.15 ) }
    dend_1 { pt3dadd( 24.4616, -79.8898, 7.79992, 0.15 ) }
    dend_1 { pt3dadd( 24.114, -80.6519, 7.72364, 0.15 ) }
    dend_1 { pt3dadd( 23.9243, -81.0012, 7.69265, 0.96 ) }
    dend_1 { pt3dadd( 23.3173, -82.011, 7.61265, 0.15 ) }
    dend_1 { pt3dadd( 23.0554, -82.4537, 7.57075, 0.15 ) }
    dend_1 { pt3dadd( 22.8991, -82.7302, 7.53971, 0.66 ) }
    dend_1 { pt3dadd( 22.2042, -84.0142, 7.37485, 0.29 ) }
    dend_1 { pt3dadd( 21.7341, -84.9049, 7.24324, 0.15 ) }
    dend_1 { pt3dadd( 21.4648, -85.4647, 7.12809, 0.22 ) }
    dend_1 { pt3dadd( 21.059, -86.4522, 6.87045, 0.07 ) }
    dend_1 { pt3dadd( 20.9178, -86.8556, 6.76676, 0.88 ) }
    dend_1 { pt3dadd( 20.8119, -87.2344, 6.69241, 0.88 ) }
    dend_1 { pt3dadd( 20.6045, -88.1398, 6.5919, 0.15 ) }
    dend_1 { pt3dadd( 20.4268, -88.9144, 6.55816, 0.22 ) }
    dend_1 { pt3dadd( 20.2103, -89.7081, 6.57813, 0.66 ) }
    dend_1 { pt3dadd( 19.9337, -90.6105, 6.67304, 0.15 ) }
    dend_1 { pt3dadd( 19.6439, -91.5954, 6.85279, 0.07 ) }
    dend_1 { pt3dadd( 19.3837, -92.553, 7.1042, 0.07 ) }
    dend_1 { pt3dadd( 19.3026, -92.8816, 7.21181, 0.22 ) }
    dend_1 { pt3dadd( 19.1076, -93.6463, 7.51802, 0.15 ) }
    dend_1 { pt3dadd( 18.9836, -94.1824, 7.76577, 0.81 ) }
    dend_1 { pt3dadd( 18.7783, -95.2624, 8.36498, 0.15 ) }
    dend_1 { pt3dadd( 18.7097, -95.8265, 8.73349, 0.15 ) }
    dend_1 { pt3dadd( 18.6942, -96.2702, 9.07252, 0.59 ) }
    dend_1 { pt3dadd( 18.6995, -96.9832, 9.66842, 0.07 ) }
    dend_1 { pt3dadd( 18.7259, -97.6086, 10.2308, 0.29 ) }
    dend_1 { pt3dadd( 18.7864, -98.6612, 11.2077, 0.07 ) }
    dend_1 { pt3dadd( 18.8207, -99.18, 11.7184, 0.29 ) }
    dend_1 { pt3dadd( 18.8678, -99.9111, 12.4431, 0.15 ) }
    dend_1 { pt3dadd( 18.8735, -100.202, 12.7291, 0.22 ) }
    dend_1 { pt3dadd( 18.8564, -100.748, 13.2098, 0.07 ) }
    dend_1 { pt3dadd( 18.834, -101.051, 13.4469, 0.22 ) }
    dend_1 { pt3dadd( 18.7688, -101.933, 14.0687, 0.07 ) }
    dend_1 { pt3dadd( 18.7561, -102.247, 14.2771, 0.29 ) }
    dend_1 { pt3dadd( 18.7652, -103.276, 14.9134, 0.07 ) }
    dend_1 { pt3dadd( 18.82, -104.112, 15.4066, 0.96 ) }
    dend_1 { pt3dadd( 18.9164, -105.008, 15.9169, 0.07 ) }
    dend_1 { pt3dadd( 18.9513, -105.278, 16.0701, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 19.0487, -106.04, 16.502, 0.07 ) }
    dend_1 { pt3dadd( 19.1526, -106.785, 16.9418, 0.07 ) }
    dend_1 { pt3dadd( 19.2196, -107.218, 17.1999, 0.15 ) }
    dend_1 { pt3dadd( 19.3552, -108.029, 17.6895, 0.07 ) }
    dend_1 { pt3dadd( 19.4379, -108.539, 18.0021, 0.81 ) }
    dend_1 { pt3dadd( 19.619, -109.731, 18.7453, 0.07 ) }
    dend_1 { pt3dadd( 19.7568, -110.63, 19.3166, 0.07 ) }
    dend_1 { pt3dadd( 19.8178, -110.989, 19.5511, 0.22 ) }
    dend_1 { pt3dadd( 19.9797, -111.766, 20.0455, 0.44 ) }
    dend_1 { pt3dadd( 20.2013, -112.552, 20.5001, 0.07 ) }
    dend_1 { pt3dadd( 20.4626, -113.311, 20.9157, 0.07 ) }
    dend_1 { pt3dadd( 20.6155, -113.68, 21.1072, 0.29 ) }
    dend_1 { pt3dadd( 20.9471, -114.406, 21.4896, 0.07 ) }
    dend_1 { pt3dadd( 21.1799, -114.874, 21.7382, 0.44 ) }
    dend_1 { pt3dadd( 21.7575, -115.968, 22.3586, 0.15 ) }
    dend_1 { pt3dadd( 21.8736, -116.171, 22.4697, 0.15 ) }
    dend_1 { pt3dadd( 22.1047, -116.54, 22.6818, 0.29 ) }
    dend_1 { pt3dadd( 22.5597, -117.237, 23.1021, 0.07 ) }
    dend_1 { pt3dadd( 22.699, -117.424, 23.2229, 0.44 ) }
    dend_1 { pt3dadd( 23.0601, -117.886, 23.5822, 0.44 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 20/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.763546, 7.07024, -3.9, 0.96 ) }
    dend_0 { pt3dadd( -0.763546, 7.07024, -3.9, 0.96 ) }
    dend_0 { pt3dadd( -0.688336, 7.82632, -3.75613, 0.29 ) }
    dend_0 { pt3dadd( -0.714396, 8.47883, -3.75097, 0.29 ) }
    dend_0 { pt3dadd( -0.761076, 8.83155, -3.81322, 0.29 ) }
    dend_0 { pt3dadd( -0.833676, 9.15969, -3.92, 0.29 ) }
    dend_0 { pt3dadd( -1.03193, 9.84093, -4.23076, 0.88 ) }
    dend_0 { pt3dadd( -1.24704, 10.4844, -4.60766, 0.88 ) }
    dend_0 { pt3dadd( -1.47525, 11.1665, -5.05073, 0.29 ) }
    dend_0 { pt3dadd( -1.68035, 11.8601, -5.47577, 0.66 ) }
    dend_0 { pt3dadd( -1.82047, 12.4919, -5.80335, 0.66 ) }
    dend_0 { pt3dadd( -1.94601, 13.414, -6.19683, 0.29 ) }
    dend_0 { pt3dadd( -1.9796, 14.3374, -6.51871, 0.59 ) }
    dend_0 { pt3dadd( -1.91693, 15.1966, -6.75145, 0.88 ) }
    dend_0 { pt3dadd( -1.77771, 16.2027, -6.97276, 0.66 ) }
    dend_0 { pt3dadd( -1.58466, 17.3068, -7.19132, 0.22 ) }
    dend_0 { pt3dadd( -1.4849, 17.7654, -7.29373, 0.22 ) }
    dend_0 { pt3dadd( -1.31847, 18.364, -7.46353, 0.22 ) }
    dend_0 { pt3dadd( -1.08975, 19.0896, -7.75332, 0.44 ) }
    dend_0 { pt3dadd( -0.857516, 19.7472, -8.13211, 0.96 ) }
    dend_0 { pt3dadd( -0.643485, 20.2917, -8.521, 0.96 ) }
    dend_0 { pt3dadd( -0.336525, 21.0615, -9.12904, 0.22 ) }
    dend_0 { pt3dadd( -0.0966032, 21.6355, -9.57249, 0.22 ) }
    dend_0 { pt3dadd( 1.43826E-4, 21.8623, -9.73717, 0.37 ) }
    dend_0 { pt3dadd( 0.233936, 22.4068, -10.1279, 0.52 ) }
    dend_0 { pt3dadd( 0.402875, 22.8186, -10.4228, 0.29 ) }
    dend_0 { pt3dadd( 0.614662, 23.4746, -10.8977, 0.22 ) }
    dend_0 { pt3dadd( 0.750642, 24.0552, -11.311, 0.37 ) }
    dend_0 { pt3dadd( 0.857928, 24.6347, -11.6952, 0.37 ) }
    dend_0 { pt3dadd( 0.968647, 25.2104, -12.0645, 0.52 ) }
    dend_0 { pt3dadd( 1.12186, 25.9524, -12.5588, 0.88 ) }
    dend_0 { pt3dadd( 1.27269, 26.6001, -13.0031, 0.88 ) }
    dend_0 { pt3dadd( 1.50946, 27.4571, -13.5825, 0.29 ) }
    dend_0 { pt3dadd( 1.69412, 28.051, -13.9794, 0.29 ) }
    dend_0 { pt3dadd( 1.91273, 28.6691, -14.3798, 0.15 ) }
    dend_0 { pt3dadd( 2.17854, 29.389, -14.8339, 0.22 ) }
    dend_0 { pt3dadd( 2.40208, 29.9876, -15.2112, 0.96 ) }
    dend_0 { pt3dadd( 2.73617, 30.8714, -15.7752, 0.22 ) }
    dend_0 { pt3dadd( 2.8579, 31.234, -16.0013, 0.22 ) }
    dend_0 { pt3dadd( 2.95077, 31.585, -16.204, 0.15 ) }
    dend_0 { pt3dadd( 3.0479, 32.1204, -16.4557, 0.15 ) }
    dend_0 { pt3dadd( 3.08255, 32.4208, -16.5629, 0.15 ) }
    dend_0 { pt3dadd( 3.14355, 33.2991, -16.823, 0.15 ) }
    dend_0 { pt3dadd( 3.18663, 33.9541, -16.9738, 0.66 ) }
    dend_0 { pt3dadd( 3.22598, 34.4179, -17.0621, 0.81 ) }
    dend_0 { pt3dadd( 3.28836, 35.3205, -17.2098, 0.15 ) }
    dend_0 { pt3dadd( 3.31445, 35.9956, -17.3058, 0.22 ) }
    dend_0 { pt3dadd( 3.28783, 36.6004, -17.3909, 0.66 ) }
    dend_0 { pt3dadd( 3.21065, 37.4296, -17.495, 0.81 ) }
    dend_0 { pt3dadd( 3.16185, 37.9108, -17.5574, 0.52 ) }
    dend_0 { pt3dadd( 3.06491, 38.9222, -17.6895, 0.15 ) }
    dend_0 { pt3dadd( 2.97102, 39.552, -17.7681, 0.22 ) }
    dend_0 { pt3dadd( 2.79913, 40.2743, -17.8849, 0.29 ) }
    dend_0 { pt3dadd( 2.03168, 48.7834, -20.7764, 0.29 ) }
    dend_0 { pt3dadd( 0.0231298, 57.4522, -22.3146, 0.29 ) }
    dend_0 { pt3dadd( -2.38387, 66.0666, -23.5157, 0.29 ) }
    dend_0 { pt3dadd( -4.54334, 74.7278, -24.8751, 0.29 ) }
    dend_0 { pt3dadd( -6.84432, 83.4199, -25.7234, 0.29 ) }
    dend_0 { pt3dadd( -8.2546, 92.01, -28.1058, 0.29 ) }
    dend_0 { pt3dadd( -8.4064, 101.034, -28.9626, 0.29 ) }
    dend_0 { pt3dadd( -6.97863, 109.963, -28.4046, 0.29 ) }
    dend_0 { pt3dadd( -5.03659, 118.781, -29.0347, 0.29 ) }
    dend_0 { pt3dadd( -1.31674, 126.972, -29.2779, 0.29 ) }
    dend_0 { pt3dadd( 3.17793, 134.715, -28.8592, 0.29 ) }
    dend_0 { pt3dadd( 7.55304, 142.482, -29.8183, 0.29 ) }
    dend_0 { pt3dadd( 12.7478, 149.721, -30.3362, 0.29 ) }
    dend_0 { pt3dadd( 19.2256, 155.723, -30.7212, 0.29 ) }
    dend_0 { pt3dadd( 25.0464, 162.438, -30.7797, 0.29 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 5.61792, 5.513, 0.0, 0.734524 ) }
    axon_0 { pt3dadd( 17.3185, 14.8989, 0.0, 0.734524 ) }
    axon_0 { pt3dadd( 29.0192, 24.2848, 0.0, 0.734524 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 91/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -1.04257, 13.9622, 24.7466, 0.15 ) }
    dend_36 { pt3dadd( -1.35699, 15.4259, 25.5927, 0.15 ) }
    dend_36 { pt3dadd( -1.49791, 16.6222, 26.2946, 0.15 ) }
    dend_36 { pt3dadd( -1.66537, 17.9576, 27.0279, 0.15 ) }
    dend_36 { pt3dadd( -1.80462, 18.8781, 27.4985, 0.15 ) }
    dend_36 { pt3dadd( -1.85604, 19.1868, 27.6442, 0.37 ) }
    dend_36 { pt3dadd( -1.99521, 19.9904, 27.9933, 0.88 ) }
    dend_36 { pt3dadd( -2.18095, 20.8949, 28.2753, 0.22 ) }
    dend_36 { pt3dadd( -2.51668, 22.0664, 28.5583, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_36 { pt3dadd( -2.8515, 22.9476, 28.7625, 0.22 ) }
    dend_36 { pt3dadd( -3.1343, 23.5308, 28.8806, 0.29 ) }
    dend_36 { pt3dadd( -3.61495, 24.3797, 29.0348, 0.66 ) }
    dend_36 { pt3dadd( -4.51933, 25.8014, 29.2455, 0.81 ) }
    dend_36 { pt3dadd( -5.30439, 26.9669, 29.434, 0.22 ) }
    dend_36 { pt3dadd( -6.02114, 28.0258, 29.6456, 0.22 ) }
    dend_36 { pt3dadd( -6.46719, 28.663, 29.7891, 0.81 ) }
    dend_36 { pt3dadd( -7.00831, 29.4232, 29.972, 0.81 ) }
    dend_36 { pt3dadd( -7.75479, 30.5263, 30.263, 0.22 ) }
    dend_36 { pt3dadd( -8.40182, 31.6192, 30.5706, 0.44 ) }
    dend_36 { pt3dadd( -9.00506, 32.8147, 30.9313, 0.81 ) }
    dend_36 { pt3dadd( -9.30747, 33.5157, 31.1658, 0.81 ) }
    dend_36 { pt3dadd( -9.77225, 34.6875, 31.5991, 0.37 ) }
    dend_36 { pt3dadd( -10.1588, 35.7181, 31.9914, 0.37 ) }
    dend_36 { pt3dadd( -10.4254, 36.4361, 32.2411, 0.37 ) }
    dend_36 { pt3dadd( -10.854, 37.4955, 32.5659, 0.37 ) }
    dend_36 { pt3dadd( -11.2258, 38.3619, 32.8157, 0.59 ) }
    dend_36 { pt3dadd( -11.6827, 39.4288, 33.1142, 0.74 ) }
    dend_36 { pt3dadd( -12.0956, 40.451, 33.3748, 0.88 ) }
    dend_36 { pt3dadd( -12.5911, 41.7588, 33.6702, 0.22 ) }
    dend_36 { pt3dadd( -13.0069, 42.9331, 33.9271, 0.22 ) }
    dend_36 { pt3dadd( -13.285, 43.7906, 34.0769, 0.22 ) }
    dend_36 { pt3dadd( -13.6362, 45.0169, 34.303, 0.44 ) }
    dend_36 { pt3dadd( -14.0862, 46.862, 34.7083, 0.52 ) }
    dend_36 { pt3dadd( -14.3785, 48.1532, 35.0361, 0.74 ) }
    dend_36 { pt3dadd( -14.6789, 49.6215, 35.4322, 0.37 ) }
    dend_36 { pt3dadd( -15.0446, 51.5431, 35.9467, 0.22 ) }
    dend_36 { pt3dadd( -15.2942, 52.7318, 36.2807, 0.22 ) }
    dend_36 { pt3dadd( -15.6313, 54.0769, 36.6712, 0.81 ) }
    dend_36 { pt3dadd( -16.0076, 55.3487, 37.0858, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 30/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -1.04257, 13.9622, 24.7466, 0.52 ) }
    dend_35 { pt3dadd( 0.654931, 13.8548, 26.87, 0.52 ) }
    dend_35 { pt3dadd( 2.11265, 14.2805, 28.6881, 0.52 ) }
    dend_35 { pt3dadd( 3.10773, 14.7521, 29.8439, 0.37 ) }
    dend_35 { pt3dadd( 3.8156, 15.2356, 30.5946, 0.22 ) }
    dend_35 { pt3dadd( 4.58702, 15.805, 31.4072, 0.22 ) }
    dend_35 { pt3dadd( 5.66939, 16.6051, 32.499, 0.44 ) }
    dend_35 { pt3dadd( 6.96384, 17.8076, 33.7091, 0.44 ) }
    dend_35 { pt3dadd( 7.56878, 18.4134, 34.2514, 0.44 ) }
    dend_35 { pt3dadd( 8.72796, 19.6496, 35.3005, 0.22 ) }
    dend_35 { pt3dadd( 9.47699, 20.4255, 35.9951, 0.22 ) }
    dend_35 { pt3dadd( 10.0027, 20.9577, 36.4682, 0.22 ) }
    dend_35 { pt3dadd( 10.6973, 21.7109, 37.1462, 0.22 ) }
    dend_35 { pt3dadd( 11.1593, 22.2996, 37.6299, 0.22 ) }
    dend_35 { pt3dadd( 12.0711, 23.5874, 38.695, 0.88 ) }
    dend_35 { pt3dadd( 13.0414, 25.0127, 39.958, 0.15 ) }
    dend_35 { pt3dadd( 13.6297, 25.8722, 40.7155, 0.37 ) }
    dend_35 { pt3dadd( 14.1682, 26.6175, 41.4517, 0.15 ) }
    dend_35 { pt3dadd( 14.7632, 27.3723, 42.3196, 0.29 ) }
    dend_35 { pt3dadd( 15.4928, 28.1885, 43.443, 0.15 ) }
    dend_35 { pt3dadd( 16.2593, 28.9229, 44.6798, 0.15 ) }
    dend_35 { pt3dadd( 16.8141, 29.41, 45.5471, 0.66 ) }
    dend_35 { pt3dadd( 18.0665, 30.4805, 47.4278, 0.29 ) }
    dend_35 { pt3dadd( 18.925, 31.2059, 48.7237, 0.29 ) }
    dend_35 { pt3dadd( 19.3414, 31.5913, 49.3815, 0.29 ) }
    dend_35 { pt3dadd( 19.8684, 32.1897, 50.3309, 0.29 ) }
    dend_35 { pt3dadd( 20.3143, 32.8113, 51.2309, 0.07 ) }
    dend_35 { pt3dadd( 20.7677, 33.5393, 52.2341, 0.59 ) }
    dend_35 { pt3dadd( 21.6938, 35.1491, 54.3287, 0.22 ) }
    dend_35 { pt3dadd( 22.366, 36.3004, 55.889, 0.66 ) }
    dend_35 { pt3dadd( 23.4201, 37.9916, 58.3497, 0.15 ) }
    dend_35 { pt3dadd( 23.907, 38.7084, 59.43, 0.15 ) }
    dend_35 { pt3dadd( 24.2946, 39.2078, 60.2512, 0.15 ) }
    dend_35 { pt3dadd( 24.8482, 39.8212, 61.3701, 0.59 ) }
    dend_35 { pt3dadd( 25.9274, 40.8616, 63.3994, 0.22 ) }
    dend_35 { pt3dadd( 26.7538, 41.4921, 64.8776, 0.81 ) }
    dend_35 { pt3dadd( 27.6476, 42.0102, 66.4014, 0.15 ) }
    dend_35 { pt3dadd( 28.7914, 42.5396, 68.4413, 0.37 ) }
    dend_35 { pt3dadd( 29.5143, 42.7978, 69.7736, 0.37 ) }
    dend_35 { pt3dadd( 30.515, 43.0847, 71.6878, 0.22 ) }
    dend_35 { pt3dadd( 31.2105, 43.2847, 73.0492, 0.22 ) }
    dend_35 { pt3dadd( 31.9844, 43.5254, 74.6097, 0.59 ) }
    dend_35 { pt3dadd( 32.9581, 43.8555, 76.5127, 0.22 ) }
    dend_35 { pt3dadd( 33.7311, 44.1894, 77.8369, 0.74 ) }
    dend_35 { pt3dadd( 35.3306, 45.0047, 80.1854, 0.07 ) }
    dend_35 { pt3dadd( 36.4632, 45.6667, 81.6469, 0.07 ) }
    dend_35 { pt3dadd( 37.1109, 46.1092, 82.3467, 0.07 ) }
    dend_35 { pt3dadd( 37.9686, 46.7086, 83.1055, 0.22 ) }
    dend_35 { pt3dadd( 39.4591, 47.7205, 84.2012, 0.07 ) }
    dend_35 { pt3dadd( 40.3709, 48.3295, 84.7932, 0.22 ) }
    dend_35 { pt3dadd( 42.1373, 49.4669, 85.8029, 0.07 ) }
    dend_35 { pt3dadd( 44.0367, 50.6459, 86.8247, 0.22 ) }
    dend_35 { pt3dadd( 46.2166, 51.9653, 87.9944, 0.07 ) }
    dend_35 { pt3dadd( 46.9032, 52.412, 88.3478, 0.07 ) }
    dend_35 { pt3dadd( 48.1755, 53.3188, 88.9661, 0.07 ) }
    dend_35 { pt3dadd( 48.5299, 53.589, 89.1219, 0.22 ) }
    dend_35 { pt3dadd( 49.737, 54.5853, 89.5758, 0.29 ) }
    dend_35 { pt3dadd( 51.7221, 56.4694, 90.2759, 0.07 ) }
    dend_35 { pt3dadd( 53.3729, 58.243, 90.863, 0.07 ) }
    dend_35 { pt3dadd( 54.6758, 59.7344, 91.4405, 0.15 ) }
    dend_35 { pt3dadd( 55.3573, 60.5801, 91.889, 0.29 ) }
    dend_35 { pt3dadd( 56.211, 61.712, 92.6701, 0.29 ) }
    dend_35 { pt3dadd( 57.2498, 63.1975, 93.9194, 0.07 ) }
    dend_35 { pt3dadd( 58.1253, 64.4929, 95.2784, 0.22 ) }
    dend_35 { pt3dadd( 59.0422, 65.7521, 96.9768, 0.22 ) }
    dend_35 { pt3dadd( 60.5561, 67.7344, 100.016, 0.44 ) }
    dend_35 { pt3dadd( 61.1021, 68.4421, 101.219, 0.44 ) }
    dend_35 { pt3dadd( 61.6447, 69.0972, 102.511, 0.15 ) }
    dend_35 { pt3dadd( 62.4219, 69.9244, 104.437, 0.15 ) }
    dend_35 { pt3dadd( 63.1981, 70.6766, 106.307, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_35 { pt3dadd( 63.6062, 71.0026, 107.095, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_24 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 14.7243, 33.68, 4.6831, 0.44 ) }
    dend_30 { pt3dadd( 15.2818, 34.8858, 3.58995, 0.44 ) }
    dend_30 { pt3dadd( 15.6953, 35.7627, 2.88284, 0.44 ) }
    dend_30 { pt3dadd( 16.1913, 36.897, 2.09462, 0.44 ) }
    dend_30 { pt3dadd( 16.3921, 37.4197, 1.75124, 0.74 ) }
    dend_30 { pt3dadd( 16.6027, 38.0793, 1.33912, 1.33 ) }
    dend_30 { pt3dadd( 16.9146, 39.3551, 0.584576, 0.66 ) }
    dend_30 { pt3dadd( 16.9752, 39.8433, 0.352416, 0.88 ) }
    dend_30 { pt3dadd( 16.9521, 40.8544, -0.0858027, 0.29 ) }
    dend_30 { pt3dadd( 16.8414, 41.5482, -0.371547, 0.29 ) }
    dend_30 { pt3dadd( 16.6893, 42.2181, -0.635573, 0.44 ) }
    dend_30 { pt3dadd( 16.4379, 43.0942, -0.951605, 0.52 ) }
    dend_30 { pt3dadd( 16.0334, 44.3679, -1.34559, 0.66 ) }
    dend_30 { pt3dadd( 15.8027, 45.1421, -1.57566, 0.22 ) }
    dend_30 { pt3dadd( 15.6563, 45.712, -1.73496, 0.22 ) }
    dend_30 { pt3dadd( 15.4648, 46.5712, -1.99495, 0.29 ) }
    dend_30 { pt3dadd( 15.3313, 47.1786, -2.2262, 0.29 ) }
    dend_30 { pt3dadd( 15.1252, 48.034, -2.62832, 0.66 ) }
    dend_30 { pt3dadd( 14.9342, 48.6917, -2.99968, 0.81 ) }
    dend_30 { pt3dadd( 14.6382, 49.5629, -3.56963, 0.88 ) }
    dend_30 { pt3dadd( 14.089, 50.9548, -4.55611, 0.59 ) }
    dend_30 { pt3dadd( 13.738, 51.7272, -5.15643, 0.37 ) }
    dend_30 { pt3dadd( 13.544, 52.13, -5.50173, 0.22 ) }
    dend_30 { pt3dadd( 13.2251, 52.7367, -6.07515, 0.22 ) }
    dend_30 { pt3dadd( 12.9683, 53.2081, -6.54385, 0.37 ) }
    dend_30 { pt3dadd( 12.6167, 53.8139, -7.17668, 0.37 ) }
    dend_30 { pt3dadd( 12.1875, 54.5403, -7.93969, 0.66 ) }
    dend_30 { pt3dadd( 11.7557, 55.2446, -8.68423, 1.11 ) }
    dend_30 { pt3dadd( 11.2668, 55.9826, -9.53022, 0.29 ) }
    dend_30 { pt3dadd( 10.934, 56.4452, -10.1596, 0.29 ) }
    dend_30 { pt3dadd( 10.8049, 56.6243, -10.4448, 0.29 ) }
    dend_30 { pt3dadd( 10.6292, 56.8999, -10.9083, 0.29 ) }
    dend_30 { pt3dadd( 10.5884, 57.0704, -11.102, 0.29 ) }
    dend_30 { pt3dadd( 10.6288, 57.4499, -11.3285, 0.29 ) }
    dend_30 { pt3dadd( 10.8016, 58.179, -11.6278, 0.29 ) }
    dend_30 { pt3dadd( 11.0718, 59.1823, -11.9928, 0.29 ) }
    dend_30 { pt3dadd( 11.3104, 60.0627, -12.2942, 0.74 ) }
    dend_30 { pt3dadd( 11.633, 61.4094, -12.7305, 1.25 ) }
    dend_30 { pt3dadd( 11.875, 62.7062, -13.129, 0.81 ) }
    dend_30 { pt3dadd( 12.0373, 64.0224, -13.5104, 0.29 ) }
    dend_30 { pt3dadd( 12.1008, 65.0153, -13.7799, 0.29 ) }
    dend_30 { pt3dadd( 12.14, 66.0468, -14.0532, 0.52 ) }
    dend_30 { pt3dadd( 12.1805, 67.3569, -14.3381, 0.66 ) }
    dend_30 { pt3dadd( 12.1864, 68.6064, -14.5476, 0.22 ) }
    dend_30 { pt3dadd( 12.1345, 69.5245, -14.6666, 0.22 ) }
    dend_30 { pt3dadd( 11.992, 70.5541, -14.7603, 0.37 ) }
    dend_30 { pt3dadd( 11.7735, 71.6749, -14.8332, 0.96 ) }
    dend_30 { pt3dadd( 11.3894, 73.3653, -14.9139, 0.22 ) }
    dend_30 { pt3dadd( 11.2346, 74.0794, -14.9372, 0.37 ) }
    dend_30 { pt3dadd( 11.1142, 74.7475, -14.9762, 0.52 ) }
    dend_30 { pt3dadd( 10.937, 75.7601, -15.0997, 0.22 ) }
    dend_30 { pt3dadd( 10.7496, 76.6255, -15.2698, 0.22 ) }
    dend_30 { pt3dadd( 10.6173, 77.126, -15.4279, 0.81 ) }
    dend_30 { pt3dadd( 10.421, 77.952, -15.7832, 0.81 ) }
    dend_30 { pt3dadd( 10.2563, 79.0138, -16.236, 0.22 ) }
    dend_30 { pt3dadd( 10.2056, 79.829, -16.5674, 0.44 ) }
    dend_30 { pt3dadd( 10.1932, 80.2605, -16.736, 0.74 ) }
    dend_30 { pt3dadd( 10.1225, 81.2113, -17.1127, 0.22 ) }
    dend_30 { pt3dadd( 10.0771, 81.6428, -17.2822, 0.22 ) }
    dend_30 { pt3dadd( 9.99345, 82.3681, -17.5382, 0.29 ) }
    dend_30 { pt3dadd( 9.96799, 83.0398, -17.7306, 0.29 ) }
    dend_30 { pt3dadd( 9.99429, 83.7308, -17.8836, 0.22 ) }
    dend_30 { pt3dadd( 10.043, 84.4442, -18.0256, 0.22 ) }
    dend_30 { pt3dadd( 10.0851, 85.3245, -18.2016, 0.59 ) }
    dend_30 { pt3dadd( 10.0908, 86.2677, -18.4063, 0.88 ) }
    dend_30 { pt3dadd( 10.069, 87.5777, -18.755, 0.81 ) }
    dend_30 { pt3dadd( 10.0547, 88.9831, -19.2077, 0.37 ) }
    dend_30 { pt3dadd( 10.0762, 89.6955, -19.4486, 0.22 ) }
    dend_30 { pt3dadd( 10.1352, 90.5194, -19.7317, 0.22 ) }
    dend_30 { pt3dadd( 10.1886, 91.1077, -19.9664, 0.22 ) }
    dend_30 { pt3dadd( 10.2876, 92.0131, -20.4275, 0.22 ) }
    dend_30 { pt3dadd( 10.3377, 92.733, -20.8834, 0.22 ) }
    dend_30 { pt3dadd( 10.3557, 93.3772, -21.3533, 0.44 ) }
    dend_30 { pt3dadd( 10.3534, 94.0617, -21.8366, 0.88 ) }
    dend_30 { pt3dadd( 10.3398, 94.8157, -22.3066, 0.66 ) }
    dend_30 { pt3dadd( 10.2548, 95.8635, -22.8625, 0.22 ) }
    dend_30 { pt3dadd( 10.1502, 96.6906, -23.2189, 0.15 ) }
    dend_30 { pt3dadd( 10.0604, 97.4552, -23.5008, 0.22 ) }
    dend_30 { pt3dadd( 9.933, 98.3504, -23.8411, 0.29 ) }
    dend_30 { pt3dadd( 9.81082, 99.1155, -24.0921, 0.74 ) }
    dend_30 { pt3dadd( 9.7053, 100.077, -24.3015, 0.81 ) }
    dend_30 { pt3dadd( 9.68844, 100.55, -24.351, 0.52 ) }
    dend_30 { pt3dadd( 9.76948, 101.549, -24.4197, 0.66 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 84/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 14.7243, 33.68, 4.6831, 0.29 ) }
    dend_25 { pt3dadd( 14.8948, 33.7677, 4.64638, 0.29 ) }
    dend_25 { pt3dadd( 15.6674, 34.2744, 4.43652, 0.29 ) }
    dend_25 { pt3dadd( 16.1556, 34.6928, 4.30377, 0.29 ) }
    dend_25 { pt3dadd( 16.6509, 35.1978, 4.14673, 0.29 ) }
    dend_25 { pt3dadd( 16.8889, 35.4734, 4.08425, 0.29 ) }
    dend_25 { pt3dadd( 17.4723, 36.2402, 3.91573, 0.59 ) }
    dend_25 { pt3dadd( 18.0068, 37.1179, 3.72423, 1.11 ) }
    dend_25 { pt3dadd( 18.5933, 38.3651, 3.47155, 0.74 ) }
    dend_25 { pt3dadd( 19.0467, 39.6367, 3.21579, 0.74 ) }
    dend_25 { pt3dadd( 19.4148, 41.0763, 2.98343, 0.74 ) }
    dend_25 { pt3dadd( 19.6779, 42.6017, 2.81873, 0.52 ) }
    dend_25 { pt3dadd( 19.8239, 44.0847, 2.79278, 0.74 ) }
    dend_25 { pt3dadd( 19.8996, 45.1606, 2.86181, 0.52 ) }
    dend_25 { pt3dadd( 19.9708, 45.9965, 2.99152, 0.88 ) }
    dend_25 { pt3dadd( 20.1681, 47.2892, 3.3265, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_25 { pt3dadd( 20.4281, 48.2535, 3.66426, 0.52 ) }
    dend_25 { pt3dadd( 21.0265, 49.6434, 4.28688, 0.44 ) }
    dend_25 { pt3dadd( 21.4708, 50.394, 4.65076, 0.44 ) }
    dend_25 { pt3dadd( 22.3367, 51.6703, 5.1612, 0.66 ) }
    dend_25 { pt3dadd( 22.9299, 52.4448, 5.44699, 0.44 ) }
    dend_25 { pt3dadd( 23.5802, 53.2091, 5.66794, 0.74 ) }
    dend_25 { pt3dadd( 24.2229, 53.9251, 5.82904, 0.88 ) }
    dend_25 { pt3dadd( 24.8397, 54.6489, 5.92742, 1.03 ) }
    dend_25 { pt3dadd( 25.7292, 56.0019, 6.0753, 1.18 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 9/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 19.2717, -13.1033, -11.7388, 0.59 ) }
    dend_15 { pt3dadd( 20.5749, -13.7844, -11.4967, 0.59 ) }
    dend_15 { pt3dadd( 21.5946, -13.7186, -11.5512, 0.59 ) }
    dend_15 { pt3dadd( 22.4833, -13.3656, -11.7361, 0.44 ) }
    dend_15 { pt3dadd( 23.2529, -12.97, -11.9758, 0.44 ) }
    dend_15 { pt3dadd( 24.4403, -12.2993, -12.3112, 0.81 ) }
    dend_15 { pt3dadd( 25.4681, -11.7231, -12.5721, 0.81 ) }
    dend_15 { pt3dadd( 26.4364, -11.0999, -12.8107, 1.11 ) }
    dend_15 { pt3dadd( 27.4904, -10.4344, -13.0308, 0.88 ) }
    dend_15 { pt3dadd( 28.327, -9.96493, -13.1653, 1.03 ) }
    dend_15 { pt3dadd( 29.6035, -9.43648, -13.2578, 0.37 ) }
    dend_15 { pt3dadd( 30.0948, -9.30953, -13.2166, 0.37 ) }
    dend_15 { pt3dadd( 30.9083, -9.25283, -13.0075, 0.74 ) }
    dend_15 { pt3dadd( 31.8789, -9.42903, -12.5767, 1.03 ) }
    dend_15 { pt3dadd( 32.9146, -9.86983, -11.891, 1.25 ) }
    dend_15 { pt3dadd( 33.2323, -10.0748, -11.6231, 1.4 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 25/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 19.2717, -13.1033, -11.7388, 0.29 ) }
    dend_14 { pt3dadd( 18.8917, -14.205, -11.2323, 0.29 ) }
    dend_14 { pt3dadd( 18.5621, -14.9306, -10.9185, 0.22 ) }
    dend_14 { pt3dadd( 18.3356, -15.2298, -10.7747, 0.22 ) }
    dend_14 { pt3dadd( 17.8789, -15.6625, -10.5164, 0.22 ) }
    dend_14 { pt3dadd( 17.5756, -15.9411, -10.3346, 0.22 ) }
    dend_14 { pt3dadd( 17.3986, -16.1246, -10.2147, 0.22 ) }
    dend_14 { pt3dadd( 16.8855, -16.7227, -9.8268, 0.96 ) }
    dend_14 { pt3dadd( 16.2806, -17.5509, -9.34164, 0.59 ) }
    dend_14 { pt3dadd( 15.8807, -18.2426, -8.93393, 0.22 ) }
    dend_14 { pt3dadd( 15.5765, -18.8946, -8.55959, 0.22 ) }
    dend_14 { pt3dadd( 15.3182, -19.6623, -8.11602, 0.22 ) }
    dend_14 { pt3dadd( 15.1965, -20.3064, -7.74709, 1.03 ) }
    dend_14 { pt3dadd( 15.174, -20.9347, -7.38428, 1.03 ) }
    dend_14 { pt3dadd( 15.2332, -21.9599, -6.82037, 0.15 ) }
    dend_14 { pt3dadd( 15.2589, -22.3419, -6.61503, 0.74 ) }
    dend_14 { pt3dadd( 15.2674, -23.0312, -6.23301, 0.37 ) }
    dend_14 { pt3dadd( 15.2333, -23.6362, -5.89525, 0.44 ) }
    dend_14 { pt3dadd( 15.1342, -24.5455, -5.40443, 0.22 ) }
    dend_14 { pt3dadd( 15.0772, -24.9488, -5.19826, 0.29 ) }
    dend_14 { pt3dadd( 14.9444, -25.8218, -4.77965, 0.22 ) }
    dend_14 { pt3dadd( 14.8428, -26.5909, -4.40735, 0.74 ) }
    dend_14 { pt3dadd( 14.8023, -27.0142, -4.20531, 0.74 ) }
    dend_14 { pt3dadd( 14.7072, -28.1925, -3.62534, 0.37 ) }
    dend_14 { pt3dadd( 14.6476, -29.0789, -3.18098, 0.22 ) }
    dend_14 { pt3dadd( 14.6106, -29.7705, -2.82781, 0.15 ) }
    dend_14 { pt3dadd( 14.5979, -30.4614, -2.47624, 0.74 ) }
    dend_14 { pt3dadd( 14.5952, -31.4474, -1.9733, 0.22 ) }
    dend_14 { pt3dadd( 14.5744, -32.1665, -1.61383, 0.74 ) }
    dend_14 { pt3dadd( 14.531, -32.7545, -1.33892, 0.88 ) }
    dend_14 { pt3dadd( 14.3694, -33.8178, -0.933108, 0.22 ) }
    dend_14 { pt3dadd( 14.1814, -34.6069, -0.704367, 0.22 ) }
    dend_14 { pt3dadd( 14.0316, -35.0691, -0.608845, 0.29 ) }
    dend_14 { pt3dadd( 13.7381, -35.8397, -0.500398, 0.81 ) }
    dend_14 { pt3dadd( 13.5125, -36.4418, -0.447464, 0.44 ) }
    dend_14 { pt3dadd( 13.132, -37.5379, -0.407427, 0.52 ) }
    dend_14 { pt3dadd( 12.8834, -38.3407, -0.421337, 0.22 ) }
    dend_14 { pt3dadd( 12.6132, -39.2703, -0.476688, 0.74 ) }
    dend_14 { pt3dadd( 12.447, -39.9373, -0.534194, 0.15 ) }
    dend_14 { pt3dadd( 12.3281, -40.4944, -0.588373, 0.15 ) }
    dend_14 { pt3dadd( 12.1712, -41.2004, -0.636128, 0.15 ) }
    dend_14 { pt3dadd( 12.0664, -41.6657, -0.629843, 0.81 ) }
    dend_14 { pt3dadd( 11.9275, -42.2104, -0.5914, 0.52 ) }
    dend_14 { pt3dadd( 11.6248, -43.3472, -0.454096, 0.15 ) }
    dend_14 { pt3dadd( 11.4744, -43.8888, -0.370346, 0.37 ) }
    dend_14 { pt3dadd( 11.2193, -44.9042, -0.18429, 0.22 ) }
    dend_14 { pt3dadd( 10.9928, -45.9833, 0.0381161, 0.37 ) }
    dend_14 { pt3dadd( 10.8898, -46.6236, 0.16754, 0.22 ) }
    dend_14 { pt3dadd( 10.8187, -47.407, 0.311752, 0.74 ) }
    dend_14 { pt3dadd( 10.8014, -48.0699, 0.437411, 0.29 ) }
    dend_14 { pt3dadd( 10.8328, -49.3089, 0.659608, 0.07 ) }
    dend_14 { pt3dadd( 10.8702, -49.7703, 0.734941, 0.29 ) }
    dend_14 { pt3dadd( 10.9404, -50.4905, 0.85947, 0.07 ) }
    dend_14 { pt3dadd( 11.0064, -51.2724, 0.994592, 0.22 ) }
    dend_14 { pt3dadd( 11.0726, -52.3338, 1.15885, 0.22 ) }
    dend_14 { pt3dadd( 11.1074, -53.0792, 1.23904, 0.96 ) }
    dend_14 { pt3dadd( 11.1434, -54.3773, 1.28676, 0.22 ) }
    dend_14 { pt3dadd( 11.1637, -55.4158, 1.25643, 0.15 ) }
    dend_14 { pt3dadd( 11.1814, -56.0924, 1.19165, 0.29 ) }
    dend_14 { pt3dadd( 11.2194, -57.1073, 1.02583, 0.66 ) }
    dend_14 { pt3dadd( 11.2936, -58.4883, 0.687411, 0.22 ) }
    dend_14 { pt3dadd( 11.3332, -59.3337, 0.438013, 0.15 ) }
    dend_14 { pt3dadd( 11.3623, -60.2178, 0.152829, 0.15 ) }
    dend_14 { pt3dadd( 11.3624, -60.8818, -0.0586835, 0.74 ) }
    dend_14 { pt3dadd( 11.3347, -61.6239, -0.268711, 0.88 ) }
    dend_14 { pt3dadd( 11.2736, -62.4635, -0.45794, 0.15 ) }
    dend_14 { pt3dadd( 11.2031, -63.0981, -0.562968, 0.22 ) }
    dend_14 { pt3dadd( 11.0789, -63.9202, -0.647979, 0.07 ) }
    dend_14 { pt3dadd( 10.8498, -64.98, -0.721805, 0.22 ) }
    dend_14 { pt3dadd( 10.6184, -65.7975, -0.745112, 0.15 ) }
    dend_14 { pt3dadd( 10.4416, -66.3453, -0.745373, 0.15 ) }
    dend_14 { pt3dadd( 10.2793, -66.8229, -0.735189, 0.15 ) }
    dend_14 { pt3dadd( 10.0975, -67.4242, -0.713212, 0.88 ) }
    dend_14 { pt3dadd( 9.97532, -67.8798, -0.695946, 0.88 ) }
    dend_14 { pt3dadd( 9.65612, -69.1602, -0.648254, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_14 { pt3dadd( 9.47813, -69.8116, -0.62344, 0.74 ) }
    dend_14 { pt3dadd( 9.28327, -70.5174, -0.603512, 0.22 ) }
    dend_14 { pt3dadd( 9.01666, -71.544, -0.560526, 0.15 ) }
    dend_14 { pt3dadd( 8.86662, -72.1913, -0.523697, 0.29 ) }
    dend_14 { pt3dadd( 8.7097, -72.9486, -0.46739, 0.81 ) }
    dend_14 { pt3dadd( 8.52308, -73.8667, -0.391234, 0.22 ) }
    dend_14 { pt3dadd( 8.33081, -74.7646, -0.313714, 0.15 ) }
    dend_14 { pt3dadd( 8.20918, -75.2945, -0.271314, 0.15 ) }
    dend_14 { pt3dadd( 8.04358, -75.9434, -0.245825, 0.74 ) }
    dend_14 { pt3dadd( 7.7346, -77.1362, -0.283414, 0.15 ) }
    dend_14 { pt3dadd( 7.60432, -77.6391, -0.334736, 0.15 ) }
    dend_14 { pt3dadd( 7.43086, -78.1917, -0.437474, 0.88 ) }
    dend_14 { pt3dadd( 7.24065, -78.7094, -0.563556, 0.96 ) }
    dend_14 { pt3dadd( 6.87213, -79.6413, -0.822571, 0.22 ) }
    dend_14 { pt3dadd( 6.40311, -80.8386, -1.19636, 0.15 ) }
    dend_14 { pt3dadd( 6.08839, -81.6757, -1.49005, 0.29 ) }
    dend_14 { pt3dadd( 5.67908, -82.8536, -1.91056, 0.15 ) }
    dend_14 { pt3dadd( 5.53242, -83.309, -2.06954, 0.66 ) }
    dend_14 { pt3dadd( 5.31973, -83.9898, -2.30077, 0.74 ) }
    dend_14 { pt3dadd( 4.98195, -85.0185, -2.62862, 0.15 ) }
    dend_14 { pt3dadd( 4.76564, -85.6557, -2.82094, 0.15 ) }
    dend_14 { pt3dadd( 4.58393, -86.255, -3.0042, 0.66 ) }
    dend_14 { pt3dadd( 4.35063, -87.2529, -3.29307, 0.15 ) }
    dend_14 { pt3dadd( 4.30739, -87.4822, -3.35971, 0.15 ) }
    dend_14 { pt3dadd( 4.19906, -88.209, -3.55439, 0.29 ) }
    dend_14 { pt3dadd( 4.0931, -89.0562, -3.76918, 0.15 ) }
    dend_14 { pt3dadd( 3.98515, -89.9584, -3.99584, 0.59 ) }
    dend_14 { pt3dadd( 3.89025, -90.7596, -4.20615, 0.22 ) }
    dend_14 { pt3dadd( 3.8104, -91.4229, -4.382, 0.22 ) }
    dend_14 { pt3dadd( 3.74624, -91.9826, -4.49077, 0.07 ) }
    dend_14 { pt3dadd( 3.67476, -92.7174, -4.58099, 0.07 ) }
    dend_14 { pt3dadd( 3.59126, -93.3711, -4.61498, 0.15 ) }
    dend_14 { pt3dadd( 3.49099, -93.9861, -4.59146, 0.81 ) }
    dend_14 { pt3dadd( 3.38484, -94.5611, -4.52595, 0.22 ) }
    dend_14 { pt3dadd( 3.17305, -95.7046, -4.34341, 0.22 ) }
    dend_14 { pt3dadd( 3.00872, -96.5557, -4.18165, 0.59 ) }
    dend_14 { pt3dadd( 2.87621, -97.1923, -4.0409, 0.59 ) }
    dend_14 { pt3dadd( 2.6418, -98.249, -3.7818, 0.88 ) }
    dend_14 { pt3dadd( 2.39469, -99.2707, -3.50369, 0.07 ) }
    dend_14 { pt3dadd( 2.21705, -99.9491, -3.3147, 0.15 ) }
    dend_14 { pt3dadd( 2.01446, -100.649, -3.12776, 0.59 ) }
    dend_14 { pt3dadd( 1.86767, -101.136, -2.98049, 0.74 ) }
    dend_14 { pt3dadd( 1.55826, -102.13, -2.65878, 0.22 ) }
    dend_14 { pt3dadd( 1.2751, -102.927, -2.37819, 0.22 ) }
    dend_14 { pt3dadd( 0.972577, -103.696, -2.0749, 0.96 ) }
    dend_14 { pt3dadd( 0.41832, -104.956, -1.55031, 0.15 ) }
    dend_14 { pt3dadd( 0.116497, -105.587, -1.28524, 0.15 ) }
    dend_14 { pt3dadd( -0.207305, -106.184, -1.02613, 0.88 ) }
    dend_14 { pt3dadd( -0.834746, -107.146, -0.608582, 0.15 ) }
    dend_14 { pt3dadd( -1.23771, -107.681, -0.373707, 0.15 ) }
    dend_14 { pt3dadd( -1.63448, -108.146, -0.168477, 0.74 ) }
    dend_14 { pt3dadd( -2.03927, -108.579, 0.0148848, 0.74 ) }
    dend_14 { pt3dadd( -2.49721, -109.093, 0.227719, 0.15 ) }
    dend_14 { pt3dadd( -2.95298, -109.645, 0.448491, 0.29 ) }
    dend_14 { pt3dadd( -3.24029, -110.026, 0.585838, 0.29 ) }
    dend_14 { pt3dadd( -3.7654, -110.773, 0.839592, 0.15 ) }
    dend_14 { pt3dadd( -4.22381, -111.472, 1.07967, 0.74 ) }
    dend_14 { pt3dadd( -5.02375, -112.749, 1.50556, 0.22 ) }
    dend_14 { pt3dadd( -5.36399, -113.302, 1.68209, 0.22 ) }
    dend_14 { pt3dadd( -5.80604, -114.013, 1.91521, 0.44 ) }
    dend_14 { pt3dadd( -6.05976, -114.4, 2.04136, 0.96 ) }
    dend_14 { pt3dadd( -6.78366, -115.463, 2.36107, 0.07 ) }
    dend_14 { pt3dadd( -6.98724, -115.752, 2.42668, 0.07 ) }
    dend_14 { pt3dadd( -7.32973, -116.211, 2.50436, 0.88 ) }
    dend_14 { pt3dadd( -7.91478, -116.97, 2.61054, 0.15 ) }
    dend_14 { pt3dadd( -8.35764, -117.516, 2.65319, 0.52 ) }
    dend_14 { pt3dadd( -9.00266, -118.263, 2.64286, 0.07 ) }
    dend_14 { pt3dadd( -9.631, -118.942, 2.5513, 0.07 ) }
    dend_14 { pt3dadd( -10.1362, -119.461, 2.44382, 0.66 ) }
    dend_14 { pt3dadd( -10.5653, -119.894, 2.32478, 0.22 ) }
    dend_14 { pt3dadd( -11.1906, -120.496, 2.12056, 0.22 ) }
    dend_14 { pt3dadd( -11.8065, -121.058, 1.95668, 0.44 ) }
    dend_14 { pt3dadd( -12.3258, -121.515, 1.86473, 0.15 ) }
    dend_14 { pt3dadd( -12.8976, -122.002, 1.81286, 0.15 ) }
    dend_14 { pt3dadd( -13.4289, -122.459, 1.79486, 0.81 ) }
    dend_14 { pt3dadd( -14.023, -123.004, 1.83597, 0.22 ) }
    dend_14 { pt3dadd( -14.8047, -123.804, 1.99493, 0.22 ) }
    dend_14 { pt3dadd( -15.3991, -124.497, 2.18594, 0.22 ) }
    dend_14 { pt3dadd( -15.7567, -124.969, 2.34365, 0.15 ) }
    dend_14 { pt3dadd( -16.0034, -125.336, 2.47456, 0.59 ) }
    dend_14 { pt3dadd( -16.3314, -125.83, 2.65075, 0.15 ) }
    dend_14 { pt3dadd( -16.6476, -126.316, 2.80446, 0.15 ) }
    dend_14 { pt3dadd( -16.937, -126.732, 2.89694, 0.74 ) }
    dend_14 { pt3dadd( -17.4579, -127.413, 3.02985, 0.22 ) }
    dend_14 { pt3dadd( -17.7203, -127.733, 3.09051, 0.22 ) }
    dend_14 { pt3dadd( -18.2223, -128.265, 3.18051, 0.22 ) }
    dend_14 { pt3dadd( -18.5515, -128.58, 3.23722, 0.22 ) }
    dend_14 { pt3dadd( -19.0482, -129.04, 3.32313, 0.52 ) }
    dend_14 { pt3dadd( -19.7363, -129.678, 3.44685, 0.15 ) }
    dend_14 { pt3dadd( -20.2326, -130.13, 3.53097, 0.15 ) }
    dend_14 { pt3dadd( -20.7406, -130.566, 3.61583, 0.81 ) }
    dend_14 { pt3dadd( -21.7535, -131.423, 3.77827, 0.07 ) }
    dend_14 { pt3dadd( -22.0453, -131.661, 3.81858, 0.52 ) }
    dend_14 { pt3dadd( -22.8666, -132.31, 3.89681, 0.15 ) }
    dend_14 { pt3dadd( -23.3213, -132.658, 3.91343, 0.59 ) }
    dend_14 { pt3dadd( -23.8814, -133.104, 3.91008, 0.15 ) }
    dend_14 { pt3dadd( -24.4077, -133.535, 3.86592, 0.81 ) }
    dend_14 { pt3dadd( -24.8315, -133.891, 3.79322, 0.29 ) }
    dend_14 { pt3dadd( -25.7253, -134.651, 3.60434, 0.07 ) }
    dend_14 { pt3dadd( -26.1968, -135.076, 3.49003, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -26.8226, -135.678, 3.32663, 0.15 ) }
    dend_14 { pt3dadd( -27.3329, -136.203, 3.2021, 0.52 ) }
    dend_14 { pt3dadd( -27.7992, -136.685, 3.10026, 0.81 ) }
    dend_14 { pt3dadd( -28.7565, -137.644, 2.96381, 0.07 ) }
    dend_14 { pt3dadd( -29.3086, -138.165, 2.94636, 0.07 ) }
    dend_14 { pt3dadd( -29.6917, -138.506, 2.96968, 0.59 ) }
    dend_14 { pt3dadd( -30.4292, -139.111, 3.07136, 0.15 ) }
    dend_14 { pt3dadd( -30.9627, -139.527, 3.18827, 0.74 ) }
    dend_14 { pt3dadd( -31.9973, -140.32, 3.48501, 0.07 ) }
    dend_14 { pt3dadd( -32.8305, -140.976, 3.76805, 0.22 ) }
    dend_14 { pt3dadd( -33.068, -141.163, 3.84783, 0.22 ) }
    dend_14 { pt3dadd( -33.4317, -141.474, 3.96486, 0.44 ) }
    dend_14 { pt3dadd( -33.6663, -141.699, 4.02642, 0.44 ) }
    dend_14 { pt3dadd( -34.2895, -142.413, 4.1723, 0.22 ) }
    dend_14 { pt3dadd( -34.8238, -143.106, 4.26514, 0.88 ) }
    dend_14 { pt3dadd( -35.2196, -143.642, 4.31661, 0.66 ) }
    dend_14 { pt3dadd( -35.7682, -144.36, 4.38208, 0.15 ) }
    dend_14 { pt3dadd( -36.4409, -145.188, 4.45328, 0.15 ) }
    dend_14 { pt3dadd( -36.9018, -145.677, 4.49685, 0.59 ) }
    dend_14 { pt3dadd( -37.4382, -146.134, 4.54236, 0.07 ) }
    dend_14 { pt3dadd( -37.7104, -146.317, 4.56877, 0.15 ) }
    dend_14 { pt3dadd( -38.2289, -146.569, 4.6212, 0.07 ) }
    dend_14 { pt3dadd( -38.6653, -146.731, 4.64497, 0.22 ) }
    dend_14 { pt3dadd( -39.3865, -146.962, 4.67585, 0.07 ) }
    dend_14 { pt3dadd( -40.0577, -147.14, 4.71512, 0.07 ) }
    dend_14 { pt3dadd( -40.3727, -147.22, 4.72021, 0.37 ) }
    dend_14 { pt3dadd( -41.3701, -147.484, 4.70392, 0.15 ) }
    dend_14 { pt3dadd( -42.0355, -147.678, 4.66722, 0.59 ) }
    dend_14 { pt3dadd( -43.1197, -148.011, 4.57843, 0.07 ) }
    dend_14 { pt3dadd( -44.3066, -148.408, 4.48012, 0.07 ) }
    dend_14 { pt3dadd( -45.3249, -148.77, 4.40473, 0.07 ) }
    dend_14 { pt3dadd( -45.7901, -148.939, 4.37255, 0.66 ) }
    dend_14 { pt3dadd( -46.973, -149.38, 4.27271, 0.07 ) }
    dend_14 { pt3dadd( -47.6228, -149.645, 4.22602, 0.52 ) }
    dend_14 { pt3dadd( -48.2976, -149.969, 4.16079, 0.07 ) }
    dend_14 { pt3dadd( -48.8225, -150.259, 4.09121, 0.22 ) }
    dend_14 { pt3dadd( -49.6637, -150.728, 3.96907, 0.07 ) }
    dend_14 { pt3dadd( -50.1872, -151.026, 3.8443, 0.29 ) }
    dend_14 { pt3dadd( -50.8538, -151.434, 3.61379, 0.07 ) }
    dend_14 { pt3dadd( -51.3036, -151.75, 3.40923, 0.59 ) }
    dend_14 { pt3dadd( -52.1548, -152.42, 2.92154, 0.15 ) }
    dend_14 { pt3dadd( -52.6685, -152.878, 2.56523, 0.66 ) }
    dend_14 { pt3dadd( -53.127, -153.318, 2.17046, 0.07 ) }
    dend_14 { pt3dadd( -53.3237, -153.504, 1.97633, 0.07 ) }
    dend_14 { pt3dadd( -53.662, -153.845, 1.54115, 0.07 ) }
    dend_14 { pt3dadd( -53.8158, -154.031, 1.29424, 0.22 ) }
    dend_14 { pt3dadd( -54.0568, -154.386, 0.804081, 0.22 ) }
    dend_14 { pt3dadd( -54.3789, -154.859, 0.107426, 0.15 ) }
    dend_14 { pt3dadd( -54.6671, -155.242, -0.513768, 0.81 ) }
    dend_14 { pt3dadd( -55.1326, -155.81, -1.49546, 0.07 ) }
    dend_14 { pt3dadd( -55.3499, -156.073, -1.99019, 0.15 ) }
    dend_14 { pt3dadd( -55.6049, -156.401, -2.65752, 0.29 ) }
    dend_14 { pt3dadd( -55.9717, -156.968, -3.78313, 0.15 ) }
    dend_14 { pt3dadd( -56.0996, -157.202, -4.26086, 0.15 ) }
    dend_14 { pt3dadd( -56.24, -157.464, -4.8461, 0.74 ) }
    dend_14 { pt3dadd( -56.4685, -157.824, -5.89533, 0.37 ) }
    dend_14 { pt3dadd( -56.6883, -158.17, -7.13084, 0.81 ) }
    dend_14 { pt3dadd( -56.8078, -158.388, -8.04893, 0.59 ) }
    dend_14 { pt3dadd( -56.9002, -158.591, -9.12669, 0.59 ) }
    dend_14 { pt3dadd( -56.9477, -158.675, -9.67437, 0.59 ) }
    dend_14 { pt3dadd( -57.1173, -158.809, -11.4781, 0.44 ) }
    dend_14 { pt3dadd( -57.167, -158.804, -11.9238, 0.44 ) }
    dend_14 { pt3dadd( -57.2203, -158.776, -12.3968, 0.44 ) }
    dend_14 { pt3dadd( -57.2779, -158.713, -12.9167, 0.44 ) }
    dend_14 { pt3dadd( -57.414, -158.546, -14.0322, 0.66 ) }
    dend_14 { pt3dadd( -57.5967, -158.328, -15.4092, 0.07 ) }
    dend_14 { pt3dadd( -57.6968, -158.237, -15.9234, 0.15 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 67/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -14.7344, -2.4248, 2.95533, 0.37 ) }
    dend_8 { pt3dadd( -14.9852, -1.55687, 2.2394, 0.37 ) }
    dend_8 { pt3dadd( -15.0977, -1.18639, 1.9579, 0.37 ) }
    dend_8 { pt3dadd( -15.3183, -0.678748, 1.57987, 0.44 ) }
    dend_8 { pt3dadd( -15.484, -0.377258, 1.34814, 0.44 ) }
    dend_8 { pt3dadd( -15.6297, -0.166088, 1.1674, 0.44 ) }
    dend_8 { pt3dadd( -15.895, 0.16467, 0.872912, 0.59 ) }
    dend_8 { pt3dadd( -16.309, 0.660709, 0.444896, 1.03 ) }
    dend_8 { pt3dadd( -16.8057, 1.19869, 0.0372821, 0.74 ) }
    dend_8 { pt3dadd( -17.2004, 1.62747, -0.213067, 0.74 ) }
    dend_8 { pt3dadd( -17.7718, 2.28913, -0.504796, 1.03 ) }
    dend_8 { pt3dadd( -18.0252, 2.60059, -0.605951, 1.25 ) }
    dend_8 { pt3dadd( -18.5078, 3.2763, -0.728573, 0.37 ) }
    dend_8 { pt3dadd( -18.8175, 3.79671, -0.75495, 0.74 ) }
    dend_8 { pt3dadd( -19.1784, 4.52888, -0.725934, 0.37 ) }
    dend_8 { pt3dadd( -19.3743, 5.00339, -0.682878, 0.37 ) }
    dend_8 { pt3dadd( -19.5075, 5.39073, -0.637975, 0.74 ) }
    dend_8 { pt3dadd( -19.743, 6.23631, -0.544916, 0.66 ) }
    dend_8 { pt3dadd( -19.9435, 7.04293, -0.446498, 0.52 ) }
    dend_8 { pt3dadd( -20.0508, 7.52224, -0.38232, 0.52 ) }
    dend_8 { pt3dadd( -20.2538, 8.60615, -0.229552, 0.66 ) }
    dend_8 { pt3dadd( -20.3483, 9.35061, -0.132634, 1.25 ) }
    dend_8 { pt3dadd( -20.4156, 10.6396, -0.00868225, 1.33 ) }
    dend_8 { pt3dadd( -20.3959, 11.4588, 0.0361947, 1.03 ) }
    dend_8 { pt3dadd( -20.3234, 12.3046, 0.0320734, 0.66 ) }
    dend_8 { pt3dadd( -20.2162, 13.2419, -0.0396539, 0.29 ) }
    dend_8 { pt3dadd( -20.1196, 14.0279, -0.180898, 0.15 ) }
    dend_8 { pt3dadd( -20.0485, 14.8439, -0.40018, 0.52 ) }
    dend_8 { pt3dadd( -20.0356, 15.212, -0.52865, 0.52 ) }
    dend_8 { pt3dadd( -20.0519, 15.6915, -0.703575, 0.74 ) }
    dend_8 { pt3dadd( -20.1753, 16.7133, -1.02742, 0.37 ) }
    dend_8 { pt3dadd( -20.304, 17.4438, -1.2117, 0.59 ) }
    dend_8 { pt3dadd( -20.4924, 18.3073, -1.38164, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_8 { pt3dadd( -20.6046, 18.7238, -1.44767, 0.74 ) }
    dend_8 { pt3dadd( -20.8844, 19.6001, -1.58702, 1.03 ) }
    dend_8 { pt3dadd( -21.1787, 20.42, -1.73196, 0.74 ) }
    dend_8 { pt3dadd( -21.4444, 21.103, -1.89086, 0.22 ) }
    dend_8 { pt3dadd( -21.6071, 21.5222, -2.00769, 0.22 ) }
    dend_8 { pt3dadd( -21.8561, 22.1871, -2.22504, 0.22 ) }
    dend_8 { pt3dadd( -22.0986, 22.9357, -2.49358, 0.22 ) }
    dend_8 { pt3dadd( -22.2497, 23.5435, -2.73903, 0.29 ) }
    dend_8 { pt3dadd( -22.3361, 24.1834, -3.01999, 0.59 ) }
    dend_8 { pt3dadd( -22.3127, 24.786, -3.28129, 1.18 ) }
    dend_8 { pt3dadd( -22.2656, 25.0438, -3.38928, 1.18 ) }
    dend_8 { pt3dadd( -22.0958, 25.6853, -3.65303, 0.52 ) }
    dend_8 { pt3dadd( -21.9602, 26.1746, -3.83924, 0.52 ) }
    dend_8 { pt3dadd( -21.8228, 26.7445, -4.03989, 0.52 ) }
    dend_8 { pt3dadd( -21.6839, 27.6444, -4.34046, 0.22 ) }
    dend_8 { pt3dadd( -21.6744, 27.9236, -4.42582, 0.22 ) }
    dend_8 { pt3dadd( -21.7328, 28.5724, -4.59174, 0.22 ) }
    dend_8 { pt3dadd( -21.8484, 29.2456, -4.72118, 0.59 ) }
    dend_8 { pt3dadd( -21.8988, 29.4904, -4.74514, 0.59 ) }
    dend_8 { pt3dadd( -22.0933, 30.3732, -4.7647, 1.03 ) }
    dend_8 { pt3dadd( -22.2631, 31.1269, -4.75457, 1.47 ) }
    dend_8 { pt3dadd( -22.4759, 32.1523, -4.75127, 0.22 ) }
    dend_8 { pt3dadd( -22.6521, 32.9809, -4.7726, 0.37 ) }
    dend_8 { pt3dadd( -22.8587, 33.8546, -4.83041, 0.37 ) }
    dend_8 { pt3dadd( -23.086, 34.6549, -4.93143, 0.52 ) }
    dend_8 { pt3dadd( -23.2945, 35.2662, -5.05363, 0.29 ) }
    dend_8 { pt3dadd( -23.5543, 35.9555, -5.26234, 0.59 ) }
    dend_8 { pt3dadd( -23.8453, 36.6625, -5.52766, 0.44 ) }
    dend_8 { pt3dadd( -24.054, 37.1277, -5.72099, 0.29 ) }
    dend_8 { pt3dadd( -24.3755, 37.8153, -6.02164, 0.52 ) }
    dend_8 { pt3dadd( -24.5717, 38.261, -6.20214, 0.88 ) }
    dend_8 { pt3dadd( -24.7715, 38.7848, -6.3765, 1.03 ) }
    dend_8 { pt3dadd( -25.1254, 39.8793, -6.66076, 1.33 ) }
    dend_8 { pt3dadd( -25.4013, 40.7907, -6.84071, 0.29 ) }
    dend_8 { pt3dadd( -25.4807, 41.0177, -6.87527, 0.29 ) }
    dend_8 { pt3dadd( -25.6364, 41.3947, -6.92362, 0.29 ) }
    dend_8 { pt3dadd( -25.7956, 41.6916, -6.9696, 0.29 ) }
    dend_8 { pt3dadd( -26.0856, 42.1315, -7.06753, 0.29 ) }
    dend_8 { pt3dadd( -26.5646, 42.7494, -7.25642, 0.37 ) }
    dend_8 { pt3dadd( -27.0936, 43.3831, -7.47195, 0.81 ) }
    dend_8 { pt3dadd( -27.6164, 44.0, -7.70042, 1.18 ) }
    dend_8 { pt3dadd( -28.4106, 44.9348, -8.06344, 0.88 ) }
    dend_8 { pt3dadd( -28.8337, 45.445, -8.27471, 0.59 ) }
    dend_8 { pt3dadd( -29.2884, 46.0228, -8.52422, 0.37 ) }
    dend_8 { pt3dadd( -29.4816, 46.2901, -8.66203, 0.29 ) }
    dend_8 { pt3dadd( -29.7567, 46.6809, -8.87266, 0.29 ) }
    dend_8 { pt3dadd( -30.0044, 47.018, -9.04089, 0.29 ) }
    dend_8 { pt3dadd( -30.225, 47.3382, -9.16683, 0.29 ) }
    dend_8 { pt3dadd( -30.6104, 47.8958, -9.33319, 0.66 ) }
    dend_8 { pt3dadd( -31.1443, 48.6661, -9.51213, 1.47 ) }
    dend_8 { pt3dadd( -32.0875, 49.968, -9.80801, 0.52 ) }
    dend_8 { pt3dadd( -32.6648, 50.73, -9.97272, 0.37 ) }
    dend_8 { pt3dadd( -33.2978, 51.5426, -10.1372, 0.37 ) }
    dend_8 { pt3dadd( -33.683, 52.0536, -10.222, 0.88 ) }
    dend_8 { pt3dadd( -34.1136, 52.6763, -10.2972, 1.47 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 55/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -14.7344, -2.4248, 2.95533, 0.81 ) }
    dend_3 { pt3dadd( -14.8898, -3.42378, 2.45534, 0.81 ) }
    dend_3 { pt3dadd( -15.0569, -3.8262, 2.26676, 0.81 ) }
    dend_3 { pt3dadd( -15.911, -5.15132, 1.79887, 0.22 ) }
    dend_3 { pt3dadd( -16.4117, -5.7616, 1.67095, 0.22 ) }
    dend_3 { pt3dadd( -17.1032, -6.50043, 1.59566, 0.44 ) }
    dend_3 { pt3dadd( -17.9386, -7.31526, 1.56799, 0.88 ) }
    dend_3 { pt3dadd( -19.2209, -8.3707, 1.59923, 0.44 ) }
    dend_3 { pt3dadd( -20.5002, -9.25061, 1.6566, 0.59 ) }
    dend_3 { pt3dadd( -21.8133, -9.97563, 1.71272, 0.52 ) }
    dend_3 { pt3dadd( -23.277, -10.6882, 1.76522, 0.22 ) }
    dend_3 { pt3dadd( -24.8519, -11.3548, 1.82444, 0.22 ) }
    dend_3 { pt3dadd( -25.6643, -11.6344, 1.87712, 0.66 ) }
    dend_3 { pt3dadd( -26.973, -11.9642, 2.01233, 0.96 ) }
    dend_3 { pt3dadd( -28.4051, -12.2391, 2.19902, 1.11 ) }
    dend_3 { pt3dadd( -28.8973, -12.3152, 2.2832, 0.96 ) }
    dend_3 { pt3dadd( -30.3746, -12.4855, 2.63598, 0.22 ) }
    dend_3 { pt3dadd( -32.3433, -12.7111, 3.25495, 0.66 ) }
    dend_3 { pt3dadd( -33.3004, -12.8755, 3.60404, 0.15 ) }
    dend_3 { pt3dadd( -33.8496, -12.9921, 3.84374, 0.15 ) }
    dend_3 { pt3dadd( -34.9052, -13.2489, 4.36069, 0.52 ) }
    dend_3 { pt3dadd( -35.8448, -13.4831, 4.80239, 0.22 ) }
    dend_3 { pt3dadd( -36.9158, -13.802, 5.22107, 0.66 ) }
    dend_3 { pt3dadd( -37.9817, -14.2035, 5.4793, 1.03 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 79/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 29.0192, 24.2848, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 40.7198, 33.6708, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 52.4204, 43.0567, 0.0, 0.15 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 82/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -16.0076, 55.3487, 37.0858, 0.29 ) }
    dend_38 { pt3dadd( -16.7756, 56.3998, 37.3765, 0.29 ) }
    dend_38 { pt3dadd( -17.2695, 57.1557, 37.6238, 0.29 ) }
    dend_38 { pt3dadd( -17.7818, 58.064, 37.9937, 0.29 ) }
    dend_38 { pt3dadd( -18.2591, 59.0788, 38.4611, 0.22 ) }
    dend_38 { pt3dadd( -18.7051, 60.2184, 38.9777, 0.22 ) }
    dend_38 { pt3dadd( -19.1082, 61.3145, 39.4701, 0.22 ) }
    dend_38 { pt3dadd( -19.5698, 62.8309, 40.1956, 0.22 ) }
    dend_38 { pt3dadd( -19.8601, 63.9601, 40.7197, 0.52 ) }
    dend_38 { pt3dadd( -20.1322, 65.1711, 41.2652, 0.81 ) }
    dend_38 { pt3dadd( -20.3561, 66.2578, 41.7836, 0.44 ) }
    dend_38 { pt3dadd( -20.6751, 67.8832, 42.6114, 0.22 ) }
    dend_38 { pt3dadd( -20.8453, 68.7556, 43.0361, 0.22 ) }
    dend_38 { pt3dadd( -21.07, 69.7311, 43.4348, 0.29 ) }
    dend_38 { pt3dadd( -21.3253, 70.7465, 43.8102, 0.29 ) }
    dend_38 { pt3dadd( -21.6268, 71.7069, 44.1547, 0.29 ) }
    dend_38 { pt3dadd( -21.8683, 72.3642, 44.3848, 0.66 ) }
    dend_38 { pt3dadd( -22.3135, 73.4719, 44.7048, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_38 { pt3dadd( -22.6497, 74.2545, 44.8731, 0.37 ) }
    dend_38 { pt3dadd( -23.1843, 75.5135, 45.0801, 0.15 ) }
    dend_38 { pt3dadd( -23.8143, 77.0868, 45.2473, 0.15 ) }
    dend_38 { pt3dadd( -24.1077, 77.8626, 45.3005, 1.11 ) }
    dend_38 { pt3dadd( -24.7052, 79.5367, 45.3844, 0.59 ) }
    dend_38 { pt3dadd( -25.3978, 81.6535, 45.4534, 0.22 ) }
    dend_38 { pt3dadd( -25.6644, 82.5852, 45.4634, 0.37 ) }
    dend_38 { pt3dadd( -26.0923, 84.3151, 45.4383, 0.22 ) }
    dend_38 { pt3dadd( -26.3032, 85.364, 45.4137, 0.74 ) }
    dend_38 { pt3dadd( -26.4567, 86.1601, 45.3866, 0.74 ) }
    dend_38 { pt3dadd( -26.7359, 87.6547, 45.3512, 0.22 ) }
    dend_38 { pt3dadd( -26.971, 88.8786, 45.2943, 0.22 ) }
    dend_38 { pt3dadd( -27.2964, 90.497, 45.1567, 0.22 ) }
    dend_38 { pt3dadd( -27.6469, 92.0434, 44.9817, 0.29 ) }
    dend_38 { pt3dadd( -27.9703, 93.3867, 44.8054, 0.29 ) }
    dend_38 { pt3dadd( -28.4242, 95.2085, 44.5417, 0.44 ) }
    dend_38 { pt3dadd( -28.8441, 96.8772, 44.277, 0.22 ) }
    dend_38 { pt3dadd( -29.2494, 98.4894, 44.0035, 0.15 ) }
    dend_38 { pt3dadd( -29.5523, 99.7524, 43.8079, 0.15 ) }
    dend_38 { pt3dadd( -29.9253, 101.296, 43.6503, 0.15 ) }
    dend_38 { pt3dadd( -30.1813, 102.328, 43.5829, 0.52 ) }
    dend_38 { pt3dadd( -30.4709, 103.378, 43.5503, 0.74 ) }
    dend_38 { pt3dadd( -30.5549, 103.645, 43.5615, 0.74 ) }
    dend_38 { pt3dadd( -30.9839, 104.833, 43.6496, 0.22 ) }
    dend_38 { pt3dadd( -31.6222, 106.361, 43.7657, 0.37 ) }
    dend_38 { pt3dadd( -32.4739, 108.076, 43.8983, 0.22 ) }
    dend_38 { pt3dadd( -32.9761, 108.998, 43.9557, 0.22 ) }
    dend_38 { pt3dadd( -33.5903, 110.077, 44.0003, 0.29 ) }
    dend_38 { pt3dadd( -34.2178, 111.167, 44.0498, 0.15 ) }
    dend_38 { pt3dadd( -34.6391, 111.877, 44.0758, 0.74 ) }
    dend_38 { pt3dadd( -34.9592, 112.434, 44.1081, 0.22 ) }
    dend_38 { pt3dadd( -35.8052, 114.028, 44.3566, 0.15 ) }
    dend_38 { pt3dadd( -36.1585, 114.773, 44.5063, 0.15 ) }
    dend_38 { pt3dadd( -36.6663, 115.914, 44.7742, 0.37 ) }
    dend_38 { pt3dadd( -37.0137, 116.723, 44.9781, 0.37 ) }
    dend_38 { pt3dadd( -37.6243, 118.131, 45.3469, 0.15 ) }
    dend_38 { pt3dadd( -38.3421, 119.617, 45.742, 0.66 ) }
    dend_38 { pt3dadd( -38.7539, 120.338, 45.9331, 0.15 ) }
    dend_38 { pt3dadd( -39.2227, 121.053, 46.0896, 0.15 ) }
    dend_38 { pt3dadd( -40.0147, 122.173, 46.2625, 0.07 ) }
    dend_38 { pt3dadd( -40.3075, 122.586, 46.3134, 0.15 ) }
    dend_38 { pt3dadd( -40.8888, 123.419, 46.3848, 0.15 ) }
    dend_38 { pt3dadd( -41.6128, 124.527, 46.426, 0.37 ) }
    dend_38 { pt3dadd( -42.6769, 126.35, 46.4715, 0.15 ) }
    dend_38 { pt3dadd( -43.1139, 127.239, 46.5218, 0.29 ) }
    dend_38 { pt3dadd( -43.7625, 128.854, 46.6466, 0.07 ) }
    dend_38 { pt3dadd( -43.9751, 129.525, 46.7094, 0.37 ) }
    dend_38 { pt3dadd( -44.1614, 130.296, 46.7742, 0.15 ) }
    dend_38 { pt3dadd( -44.3402, 131.265, 46.837, 0.37 ) }
    dend_38 { pt3dadd( -44.6595, 133.375, 46.9395, 0.15 ) }
    dend_38 { pt3dadd( -44.7781, 134.154, 46.9629, 0.29 ) }
    dend_38 { pt3dadd( -44.8807, 134.888, 46.9652, 0.29 ) }
    dend_38 { pt3dadd( -45.0778, 136.603, 46.9893, 0.15 ) }
    dend_38 { pt3dadd( -45.1914, 137.93, 47.0127, 0.15 ) }
    dend_38 { pt3dadd( -45.2136, 138.559, 47.019, 0.37 ) }
    dend_38 { pt3dadd( -45.1926, 139.367, 46.9883, 0.37 ) }
    dend_38 { pt3dadd( -45.1351, 140.566, 46.9204, 0.07 ) }
    dend_38 { pt3dadd( -45.005, 142.126, 46.8098, 0.29 ) }
    dend_38 { pt3dadd( -44.8794, 143.102, 46.7372, 0.07 ) }
    dend_38 { pt3dadd( -44.7209, 144.118, 46.6663, 0.15 ) }
    dend_38 { pt3dadd( -44.43, 145.85, 46.5581, 0.07 ) }
    dend_38 { pt3dadd( -44.2834, 146.73, 46.505, 0.22 ) }
    dend_38 { pt3dadd( -44.1437, 147.511, 46.458, 0.66 ) }
    dend_38 { pt3dadd( -44.0476, 148.001, 46.4438, 0.66 ) }
    dend_38 { pt3dadd( -43.5114, 150.347, 46.5199, 0.07 ) }
    dend_38 { pt3dadd( -43.1205, 151.946, 46.6414, 0.07 ) }
    dend_38 { pt3dadd( -42.9036, 152.799, 46.7419, 0.66 ) }
    dend_38 { pt3dadd( -42.4699, 154.567, 46.9759, 0.22 ) }
    dend_38 { pt3dadd( -42.1587, 156.033, 47.1729, 0.81 ) }
    dend_38 { pt3dadd( -41.9828, 157.121, 47.3136, 0.59 ) }
    dend_38 { pt3dadd( -41.8157, 159.607, 47.5964, 0.07 ) }
    dend_38 { pt3dadd( -41.8338, 160.181, 47.6604, 0.07 ) }
    dend_38 { pt3dadd( -41.9693, 161.153, 47.7511, 0.22 ) }
    dend_38 { pt3dadd( -42.2278, 162.187, 47.824, 0.07 ) }
    dend_38 { pt3dadd( -42.5154, 163.091, 47.8801, 0.22 ) }
    dend_38 { pt3dadd( -43.2276, 165.02, 48.0241, 0.15 ) }
    dend_38 { pt3dadd( -43.671, 166.144, 48.131, 0.74 ) }
    dend_38 { pt3dadd( -44.4457, 168.191, 48.3264, 0.15 ) }
    dend_38 { pt3dadd( -44.7703, 169.083, 48.4109, 0.29 ) }
    dend_38 { pt3dadd( -45.4869, 171.124, 48.6029, 0.07 ) }
    dend_38 { pt3dadd( -45.6503, 171.616, 48.6468, 0.22 ) }
    dend_38 { pt3dadd( -46.0268, 172.806, 48.7769, 0.22 ) }
    dend_38 { pt3dadd( -46.3579, 173.907, 48.932, 0.44 ) }
    dend_38 { pt3dadd( -46.6886, 175.189, 49.2006, 1.03 ) }
    dend_38 { pt3dadd( -46.932, 176.269, 49.5018, 0.44 ) }
    dend_38 { pt3dadd( -47.2307, 177.679, 49.9197, 0.44 ) }
    dend_38 { pt3dadd( -47.6229, 179.637, 50.5613, 0.15 ) }
    dend_38 { pt3dadd( -47.8347, 180.75, 50.9825, 0.52 ) }
    dend_38 { pt3dadd( -48.1499, 182.605, 51.8129, 0.15 ) }
    dend_38 { pt3dadd( -48.304, 183.769, 52.4353, 0.66 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 90/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -16.0076, 55.3487, 37.0858, 0.15 ) }
    dend_37 { pt3dadd( -15.6888, 56.5396, 37.4281, 0.15 ) }
    dend_37 { pt3dadd( -15.4489, 57.289, 37.7061, 0.15 ) }
    dend_37 { pt3dadd( -15.071, 58.3633, 38.1367, 0.22 ) }
    dend_37 { pt3dadd( -14.8821, 58.9423, 38.3251, 0.22 ) }
    dend_37 { pt3dadd( -14.6209, 59.8867, 38.5828, 0.22 ) }
    dend_37 { pt3dadd( -14.4638, 60.5274, 38.763, 0.22 ) }
    dend_37 { pt3dadd( -14.2117, 61.7628, 39.1745, 0.22 ) }
    dend_37 { pt3dadd( -14.0381, 62.9199, 39.5944, 0.22 ) }
    dend_37 { pt3dadd( -13.9382, 64.1923, 40.0268, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_37 { pt3dadd( -13.9047, 65.3489, 40.3997, 0.59 ) }
    dend_37 { pt3dadd( -13.9476, 67.2105, 40.9431, 0.07 ) }
    dend_37 { pt3dadd( -14.0597, 68.6257, 41.2725, 0.15 ) }
    dend_37 { pt3dadd( -14.2017, 69.598, 41.4787, 0.15 ) }
    dend_37 { pt3dadd( -14.5412, 71.4705, 41.9181, 0.29 ) }
    dend_37 { pt3dadd( -14.8052, 72.7798, 42.2688, 0.07 ) }
    dend_37 { pt3dadd( -15.0406, 73.8315, 42.5499, 0.59 ) }
    dend_37 { pt3dadd( -15.4864, 75.3981, 42.9407, 0.07 ) }
    dend_37 { pt3dadd( -15.9423, 76.7561, 43.2798, 0.22 ) }
    dend_37 { pt3dadd( -16.3143, 77.8118, 43.5824, 0.22 ) }
    dend_37 { pt3dadd( -16.5964, 78.6374, 43.8829, 0.37 ) }
    dend_37 { pt3dadd( -16.9544, 79.7652, 44.3681, 0.29 ) }
    dend_37 { pt3dadd( -17.3564, 81.1573, 45.0265, 0.29 ) }
    dend_37 { pt3dadd( -17.6449, 82.2705, 45.6035, 0.22 ) }
    dend_37 { pt3dadd( -17.8615, 83.3966, 46.1333, 0.59 ) }
    dend_37 { pt3dadd( -18.0829, 84.9529, 46.8156, 0.37 ) }
    dend_37 { pt3dadd( -18.1595, 85.8107, 47.1738, 0.37 ) }
    dend_37 { pt3dadd( -18.1812, 86.4519, 47.4246, 0.44 ) }
    dend_37 { pt3dadd( -18.1578, 87.2627, 47.7123, 0.44 ) }
    dend_37 { pt3dadd( -17.9874, 90.0367, 48.6469, 0.15 ) }
    dend_37 { pt3dadd( -17.8679, 91.5248, 49.1084, 0.15 ) }
    dend_37 { pt3dadd( -17.7875, 92.1837, 49.2967, 0.15 ) }
    dend_37 { pt3dadd( -17.6301, 93.0782, 49.5479, 0.29 ) }
    dend_37 { pt3dadd( -17.3407, 94.2848, 49.8871, 0.15 ) }
    dend_37 { pt3dadd( -16.9, 95.6531, 50.2763, 0.52 ) }
    dend_37 { pt3dadd( -16.5983, 96.3996, 50.5044, 0.52 ) }
    dend_37 { pt3dadd( -15.9809, 97.8405, 50.9586, 0.15 ) }
    dend_37 { pt3dadd( -15.6179, 98.7818, 51.2684, 0.15 ) }
    dend_37 { pt3dadd( -15.3388, 99.5916, 51.5423, 0.44 ) }
    dend_37 { pt3dadd( -14.9165, 100.97, 52.0106, 0.44 ) }
    dend_37 { pt3dadd( -14.374, 102.983, 52.7069, 0.29 ) }
    dend_37 { pt3dadd( -14.087, 104.169, 53.1861, 0.44 ) }
    dend_37 { pt3dadd( -13.5935, 106.223, 54.2136, 0.15 ) }
    dend_37 { pt3dadd( -13.3119, 107.33, 54.8666, 0.15 ) }
    dend_37 { pt3dadd( -13.1208, 108.017, 55.3529, 0.37 ) }
    dend_37 { pt3dadd( -12.6221, 109.595, 56.7147, 0.15 ) }
    dend_37 { pt3dadd( -12.1507, 110.81, 57.9481, 0.15 ) }
    dend_37 { pt3dadd( -11.4976, 112.12, 59.547, 0.66 ) }
    dend_37 { pt3dadd( -11.1469, 112.718, 60.3999, 0.88 ) }
    dend_37 { pt3dadd( -10.4024, 113.944, 62.2875, 0.15 ) }
    dend_37 { pt3dadd( -9.89745, 114.947, 63.7785, 0.15 ) }
    dend_37 { pt3dadd( -9.58524, 115.768, 64.9254, 0.29 ) }
    dend_37 { pt3dadd( -9.25274, 117.377, 66.895, 0.29 ) }
    dend_37 { pt3dadd( -9.07929, 118.757, 68.5146, 0.29 ) }
    dend_37 { pt3dadd( -9.061, 119.153, 68.9659, 0.29 ) }
    dend_37 { pt3dadd( -9.22413, 121.029, 70.8957, 0.07 ) }
    dend_37 { pt3dadd( -9.36933, 121.625, 71.4018, 0.15 ) }
    dend_37 { pt3dadd( -9.97005, 123.038, 72.3791, 0.15 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 48/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 9.76948, 101.549, -24.4197, 0.74 ) }
    dend_32 { pt3dadd( 9.8091, 102.048, -24.8893, 0.74 ) }
    dend_32 { pt3dadd( 9.96774, 102.527, -25.332, 0.22 ) }
    dend_32 { pt3dadd( 10.2295, 103.061, -25.8389, 0.22 ) }
    dend_32 { pt3dadd( 10.3865, 103.375, -26.1419, 0.22 ) }
    dend_32 { pt3dadd( 10.6003, 103.82, -26.5785, 0.22 ) }
    dend_32 { pt3dadd( 10.7879, 104.275, -27.0328, 0.59 ) }
    dend_32 { pt3dadd( 10.9542, 104.803, -27.5974, 0.22 ) }
    dend_32 { pt3dadd( 11.0157, 105.278, -28.0772, 0.22 ) }
    dend_32 { pt3dadd( 10.9645, 105.64, -28.381, 0.22 ) }
    dend_32 { pt3dadd( 10.8375, 106.004, -28.6256, 0.59 ) }
    dend_32 { pt3dadd( 10.5786, 106.497, -28.9006, 0.88 ) }
    dend_32 { pt3dadd( 9.90839, 107.531, -29.4902, 0.22 ) }
    dend_32 { pt3dadd( 9.54367, 108.046, -29.7976, 0.22 ) }
    dend_32 { pt3dadd( 9.18773, 108.576, -30.1279, 0.96 ) }
    dend_32 { pt3dadd( 8.79748, 109.258, -30.5905, 0.15 ) }
    dend_32 { pt3dadd( 8.54486, 109.797, -30.9981, 0.15 ) }
    dend_32 { pt3dadd( 8.28983, 110.567, -31.7015, 0.15 ) }
    dend_32 { pt3dadd( 8.176, 111.044, -32.2597, 0.37 ) }
    dend_32 { pt3dadd( 8.08227, 111.481, -32.9078, 0.81 ) }
    dend_32 { pt3dadd( 8.03048, 111.807, -33.4671, 0.81 ) }
    dend_32 { pt3dadd( 8.02828, 112.026, -33.8812, 0.22 ) }
    dend_32 { pt3dadd( 8.13207, 112.369, -34.4805, 0.22 ) }
    dend_32 { pt3dadd( 8.32984, 112.756, -34.9703, 0.22 ) }
    dend_32 { pt3dadd( 8.4763, 113.003, -35.2191, 0.22 ) }
    dend_32 { pt3dadd( 8.64185, 113.295, -35.4876, 0.59 ) }
    dend_32 { pt3dadd( 8.93092, 113.89, -35.9791, 0.37 ) }
    dend_32 { pt3dadd( 9.32893, 114.725, -36.6467, 0.81 ) }
    dend_32 { pt3dadd( 9.61834, 115.381, -37.1626, 0.22 ) }
    dend_32 { pt3dadd( 9.83715, 115.937, -37.6255, 0.22 ) }
    dend_32 { pt3dadd( 10.0007, 116.52, -38.1764, 0.22 ) }
    dend_32 { pt3dadd( 10.0857, 117.088, -38.7699, 1.03 ) }
    dend_32 { pt3dadd( 10.1051, 117.787, -39.5392, 0.22 ) }
    dend_32 { pt3dadd( 10.1134, 118.157, -39.9643, 0.22 ) }
    dend_32 { pt3dadd( 10.1373, 118.519, -40.3983, 0.37 ) }
    dend_32 { pt3dadd( 10.2128, 119.108, -41.0904, 0.15 ) }
    dend_32 { pt3dadd( 10.2982, 119.631, -41.6791, 1.03 ) }
    dend_32 { pt3dadd( 10.416, 120.252, -42.3567, 0.15 ) }
    dend_32 { pt3dadd( 10.5748, 121.138, -43.2281, 0.15 ) }
    dend_32 { pt3dadd( 10.6777, 121.577, -43.6364, 0.22 ) }
    dend_32 { pt3dadd( 10.7732, 121.916, -43.938, 0.22 ) }
    dend_32 { pt3dadd( 10.8831, 122.29, -44.2735, 0.81 ) }
    dend_32 { pt3dadd( 11.0225, 122.763, -44.6977, 1.25 ) }
    dend_32 { pt3dadd( 11.1811, 123.36, -45.2282, 0.15 ) }
    dend_32 { pt3dadd( 11.3217, 124.025, -45.8057, 0.29 ) }
    dend_32 { pt3dadd( 11.4695, 124.606, -46.3015, 0.07 ) }
    dend_32 { pt3dadd( 11.6065, 125.081, -46.7223, 0.22 ) }
    dend_32 { pt3dadd( 10.6342, 130.259, -52.8495, 0.22 ) }
    dend_32 { pt3dadd( 9.94712, 133.707, -60.0217, 0.22 ) }
    dend_32 { pt3dadd( 7.11587, 136.452, -66.9344, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 98/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 9.76948, 101.549, -24.4197, 0.15 ) }
    dend_31 { pt3dadd( 10.8465, 101.06, -24.0244, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_31 { pt3dadd( 11.2747, 100.86, -23.864, 0.15 ) }
    dend_31 { pt3dadd( 11.7508, 100.692, -23.7744, 0.29 ) }
    dend_31 { pt3dadd( 12.0518, 100.605, -23.7819, 0.29 ) }
    dend_31 { pt3dadd( 13.2293, 100.331, -24.0059, 0.15 ) }
    dend_31 { pt3dadd( 13.8022, 100.219, -24.197, 0.37 ) }
    dend_31 { pt3dadd( 14.0881, 100.185, -24.3653, 0.37 ) }
    dend_31 { pt3dadd( 15.258, 100.158, -25.2709, 0.15 ) }
    dend_31 { pt3dadd( 16.0007, 100.208, -26.0161, 0.15 ) }
    dend_31 { pt3dadd( 16.4702, 100.259, -26.5738, 0.15 ) }
    dend_31 { pt3dadd( 16.9002, 100.288, -27.1797, 0.22 ) }
    dend_31 { pt3dadd( 17.246, 100.31, -27.7194, 0.22 ) }
    dend_31 { pt3dadd( 17.4033, 100.305, -27.9777, 0.22 ) }
    dend_31 { pt3dadd( 17.6731, 100.231, -28.5206, 0.22 ) }
    dend_31 { pt3dadd( 17.9483, 100.085, -29.3109, 0.22 ) }
    dend_31 { pt3dadd( 18.2004, 99.592, -30.1162, 0.44 ) }
    dend_31 { pt3dadd( 25.9494, 99.6241, -36.1443, 0.44 ) }
    dend_31 { pt3dadd( 33.5184, 100.695, -42.3224, 0.44 ) }
    dend_31 { pt3dadd( 41.2288, 101.384, -48.3702, 0.44 ) }
    dend_31 { pt3dadd( 50.2287, 100.19, -52.1092, 0.44 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 19/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 25.7292, 56.0019, 6.0753, 0.22 ) }
    dend_27 { pt3dadd( 27.0864, 56.7, 6.7413, 0.22 ) }
    dend_27 { pt3dadd( 27.8703, 57.0915, 7.09522, 0.22 ) }
    dend_27 { pt3dadd( 28.4773, 57.4074, 7.35444, 0.37 ) }
    dend_27 { pt3dadd( 29.2649, 57.8328, 7.67062, 0.96 ) }
    dend_27 { pt3dadd( 30.0884, 58.3101, 7.959, 0.96 ) }
    dend_27 { pt3dadd( 31.3859, 59.1213, 8.36154, 0.59 ) }
    dend_27 { pt3dadd( 32.1322, 59.6148, 8.55067, 0.37 ) }
    dend_27 { pt3dadd( 33.2461, 60.3681, 8.76533, 0.59 ) }
    dend_27 { pt3dadd( 33.8959, 60.83, 8.88632, 0.29 ) }
    dend_27 { pt3dadd( 34.6873, 61.4324, 9.04869, 0.29 ) }
    dend_27 { pt3dadd( 35.3314, 61.9966, 9.21729, 0.29 ) }
    dend_27 { pt3dadd( 36.0316, 62.6914, 9.4649, 0.44 ) }
    dend_27 { pt3dadd( 36.6653, 63.3608, 9.75723, 0.74 ) }
    dend_27 { pt3dadd( 37.5153, 64.2815, 10.2188, 0.81 ) }
    dend_27 { pt3dadd( 38.2301, 65.0812, 10.6421, 0.29 ) }
    dend_27 { pt3dadd( 38.9568, 65.9351, 11.0983, 0.22 ) }
    dend_27 { pt3dadd( 39.4589, 66.5812, 11.3739, 0.22 ) }
    dend_27 { pt3dadd( 39.8496, 67.1485, 11.5402, 0.59 ) }
    dend_27 { pt3dadd( 40.5038, 68.2143, 11.6918, 0.81 ) }
    dend_27 { pt3dadd( 41.1232, 69.3129, 11.7067, 0.22 ) }
    dend_27 { pt3dadd( 41.4478, 69.9012, 11.6874, 0.22 ) }
    dend_27 { pt3dadd( 42.1407, 71.1876, 11.6485, 0.29 ) }
    dend_27 { pt3dadd( 42.5584, 72.0291, 11.639, 0.52 ) }
    dend_27 { pt3dadd( 42.8705, 72.767, 11.6568, 0.74 ) }
    dend_27 { pt3dadd( 43.2557, 73.8769, 11.745, 1.11 ) }
    dend_27 { pt3dadd( 43.6879, 75.1689, 11.9567, 0.52 ) }
    dend_27 { pt3dadd( 43.9857, 76.0411, 12.1924, 0.22 ) }
    dend_27 { pt3dadd( 44.1609, 76.5323, 12.3647, 0.22 ) }
    dend_27 { pt3dadd( 44.5272, 77.3951, 12.6968, 0.29 ) }
    dend_27 { pt3dadd( 44.9072, 78.1722, 12.9893, 0.29 ) }
    dend_27 { pt3dadd( 45.7009, 79.6304, 13.4882, 0.22 ) }
    dend_27 { pt3dadd( 46.2956, 80.6489, 13.7893, 0.81 ) }
    dend_27 { pt3dadd( 46.912, 81.605, 14.0639, 0.66 ) }
    dend_27 { pt3dadd( 47.7549, 82.8241, 14.408, 0.29 ) }
    dend_27 { pt3dadd( 48.4774, 83.84, 14.7381, 0.22 ) }
    dend_27 { pt3dadd( 48.9525, 84.4834, 14.9629, 0.59 ) }
    dend_27 { pt3dadd( 49.2051, 84.8197, 15.0875, 0.59 ) }
    dend_27 { pt3dadd( 50.0617, 85.9988, 15.5202, 0.81 ) }
    dend_27 { pt3dadd( 50.3856, 86.4928, 15.7305, 0.37 ) }
    dend_27 { pt3dadd( 51.063, 87.6746, 16.2653, 0.22 ) }
    dend_27 { pt3dadd( 51.3703, 88.2798, 16.5466, 0.22 ) }
    dend_27 { pt3dadd( 51.6426, 88.8903, 16.7928, 0.22 ) }
    dend_27 { pt3dadd( 51.9259, 89.6307, 17.0524, 0.22 ) }
    dend_27 { pt3dadd( 52.174, 90.4327, 17.268, 0.22 ) }
    dend_27 { pt3dadd( 52.4674, 91.4159, 17.4347, 0.81 ) }
    dend_27 { pt3dadd( 52.9375, 92.9496, 17.5849, 0.81 ) }
    dend_27 { pt3dadd( 53.3827, 94.3247, 17.6824, 0.29 ) }
    dend_27 { pt3dadd( 53.8525, 95.5966, 17.7417, 0.59 ) }
    dend_27 { pt3dadd( 54.5026, 97.1373, 17.7676, 0.22 ) }
    dend_27 { pt3dadd( 55.1723, 98.5966, 17.7309, 0.22 ) }
    dend_27 { pt3dadd( 55.6577, 99.5583, 17.6827, 0.44 ) }
    dend_27 { pt3dadd( 56.2025, 100.531, 17.6058, 0.52 ) }
    dend_27 { pt3dadd( 56.8749, 101.705, 17.503, 0.15 ) }
    dend_27 { pt3dadd( 57.0619, 102.033, 17.4723, 0.15 ) }
    dend_27 { pt3dadd( 57.6842, 103.188, 17.3984, 0.59 ) }
    dend_27 { pt3dadd( 58.0166, 103.896, 17.3824, 0.59 ) }
    dend_27 { pt3dadd( 58.4018, 104.781, 17.3243, 0.22 ) }
    dend_27 { pt3dadd( 58.8605, 105.843, 17.2322, 0.22 ) }
    dend_27 { pt3dadd( 59.1384, 106.448, 17.1875, 0.22 ) }
    dend_27 { pt3dadd( 59.4598, 107.112, 17.1676, 0.44 ) }
    dend_27 { pt3dadd( 59.9835, 108.179, 17.1929, 0.52 ) }
    dend_27 { pt3dadd( 60.3854, 109.001, 17.2512, 0.52 ) }
    dend_27 { pt3dadd( 60.94, 110.091, 17.3736, 0.74 ) }
    dend_27 { pt3dadd( 61.7478, 111.586, 17.5966, 0.22 ) }
    dend_27 { pt3dadd( 62.17, 112.314, 17.7281, 0.22 ) }
    dend_27 { pt3dadd( 62.6276, 113.075, 17.8902, 0.29 ) }
    dend_27 { pt3dadd( 63.1814, 114.018, 18.1119, 0.37 ) }
    dend_27 { pt3dadd( 63.6044, 114.764, 18.296, 0.81 ) }
    dend_27 { pt3dadd( 63.7887, 115.083, 18.3619, 0.81 ) }
    dend_27 { pt3dadd( 64.3834, 116.056, 18.5039, 0.15 ) }
    dend_27 { pt3dadd( 64.9362, 116.964, 18.625, 0.22 ) }
    dend_27 { pt3dadd( 65.4177, 117.716, 18.7605, 0.22 ) }
    dend_27 { pt3dadd( 65.8822, 118.353, 18.9179, 0.29 ) }
    dend_27 { pt3dadd( 66.7337, 119.426, 19.2384, 0.59 ) }
    dend_27 { pt3dadd( 67.3399, 120.181, 19.4952, 0.44 ) }
    dend_27 { pt3dadd( 67.9572, 120.971, 19.7868, 0.66 ) }
    dend_27 { pt3dadd( 68.8087, 122.046, 20.2097, 0.22 ) }
    dend_27 { pt3dadd( 69.7915, 123.273, 20.6974, 0.22 ) }
    dend_27 { pt3dadd( 70.0524, 123.631, 20.831, 0.29 ) }
    dend_27 { pt3dadd( 70.705, 124.686, 21.1966, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_27 { pt3dadd( 71.1193, 125.472, 21.4314, 0.29 ) }
    dend_27 { pt3dadd( 71.5152, 126.383, 21.642, 0.88 ) }
    dend_27 { pt3dadd( 71.836, 127.391, 21.8454, 0.74 ) }
    dend_27 { pt3dadd( 72.3575, 129.545, 22.263, 0.22 ) }
    dend_27 { pt3dadd( 72.5825, 130.607, 22.4621, 0.22 ) }
    dend_27 { pt3dadd( 72.7302, 131.343, 22.6025, 0.81 ) }
    dend_27 { pt3dadd( 72.9902, 132.546, 22.8397, 0.74 ) }
    dend_27 { pt3dadd( 73.267, 133.818, 23.088, 0.22 ) }
    dend_27 { pt3dadd( 73.4244, 134.49, 23.2195, 0.22 ) }
    dend_27 { pt3dadd( 73.6168, 135.202, 23.3489, 0.22 ) }
    dend_27 { pt3dadd( 73.9147, 136.091, 23.5185, 0.22 ) }
    dend_27 { pt3dadd( 74.371, 137.204, 23.7438, 0.22 ) }
    dend_27 { pt3dadd( 74.7167, 137.949, 23.8937, 0.37 ) }
    dend_27 { pt3dadd( 75.1936, 138.875, 24.0635, 0.88 ) }
    dend_27 { pt3dadd( 75.3985, 139.239, 24.1306, 0.74 ) }
    dend_27 { pt3dadd( 76.3057, 140.699, 24.4045, 0.15 ) }
    dend_27 { pt3dadd( 77.0161, 141.758, 24.5976, 0.15 ) }
    dend_27 { pt3dadd( 77.6283, 142.623, 24.7821, 0.52 ) }
    dend_27 { pt3dadd( 78.1608, 143.294, 24.9462, 0.22 ) }
    dend_27 { pt3dadd( 78.5306, 143.72, 25.0606, 0.22 ) }
    dend_27 { pt3dadd( 79.1649, 144.384, 25.2755, 0.29 ) }
    dend_27 { pt3dadd( 79.6317, 144.791, 25.4535, 0.29 ) }
    dend_27 { pt3dadd( 80.3541, 145.361, 25.7746, 0.29 ) }
    dend_27 { pt3dadd( 81.1105, 145.909, 26.1297, 0.29 ) }
    dend_27 { pt3dadd( 81.5889, 146.252, 26.3666, 0.59 ) }
    dend_27 { pt3dadd( 82.4035, 146.816, 26.774, 1.11 ) }
    dend_27 { pt3dadd( 83.7186, 147.648, 27.4318, 0.15 ) }
    dend_27 { pt3dadd( 84.0657, 147.843, 27.5964, 0.15 ) }
    dend_27 { pt3dadd( 84.5372, 148.049, 27.7983, 0.15 ) }
    dend_27 { pt3dadd( 85.1253, 148.276, 28.0362, 0.15 ) }
    dend_27 { pt3dadd( 85.5641, 148.428, 28.2311, 0.15 ) }
    dend_27 { pt3dadd( 86.1985, 148.641, 28.5346, 0.15 ) }
    dend_27 { pt3dadd( 87.0467, 148.943, 28.9654, 0.44 ) }
    dend_27 { pt3dadd( 88.5822, 149.545, 29.776, 0.22 ) }
    dend_27 { pt3dadd( 89.13, 149.785, 30.0937, 0.15 ) }
    dend_27 { pt3dadd( 90.4586, 150.472, 30.9052, 0.29 ) }
    dend_27 { pt3dadd( 91.0578, 150.824, 31.2914, 0.29 ) }
    dend_27 { pt3dadd( 91.4827, 151.09, 31.5823, 0.29 ) }
    dend_27 { pt3dadd( 92.1461, 151.532, 32.0493, 0.22 ) }
    dend_27 { pt3dadd( 92.7082, 151.938, 32.4057, 0.22 ) }
    dend_27 { pt3dadd( 93.3601, 152.388, 32.7382, 0.22 ) }
    dend_27 { pt3dadd( 94.0206, 152.82, 32.9272, 0.37 ) }
    dend_27 { pt3dadd( 94.6334, 153.156, 33.0312, 0.37 ) }
    dend_27 { pt3dadd( 95.602, 153.602, 33.12, 0.22 ) }
    dend_27 { pt3dadd( 96.4388, 153.947, 33.1321, 0.59 ) }
    dend_27 { pt3dadd( 97.044, 154.188, 33.0893, 0.96 ) }
    dend_27 { pt3dadd( 98.189, 154.694, 32.9517, 0.22 ) }
    dend_27 { pt3dadd( 99.0608, 155.153, 32.7822, 0.15 ) }
    dend_27 { pt3dadd( 99.6385, 155.5, 32.6445, 0.15 ) }
    dend_27 { pt3dadd( 100.298, 155.955, 32.4883, 0.37 ) }
    dend_27 { pt3dadd( 101.112, 156.575, 32.3273, 0.66 ) }
    dend_27 { pt3dadd( 102.003, 157.331, 32.1981, 0.74 ) }
    dend_27 { pt3dadd( 102.882, 158.164, 32.1296, 0.52 ) }
    dend_27 { pt3dadd( 103.212, 158.507, 32.1281, 0.52 ) }
    dend_27 { pt3dadd( 103.944, 159.305, 32.1984, 0.15 ) }
    dend_27 { pt3dadd( 104.746, 160.194, 32.3244, 0.22 ) }
    dend_27 { pt3dadd( 105.255, 160.76, 32.4536, 0.22 ) }
    dend_27 { pt3dadd( 105.783, 161.327, 32.6363, 0.66 ) }
    dend_27 { pt3dadd( 106.589, 162.183, 33.0204, 0.96 ) }
    dend_27 { pt3dadd( 107.031, 162.643, 33.2537, 0.96 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 60/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 25.7292, 56.0019, 6.0753, 0.22 ) }
    dend_26 { pt3dadd( 25.3301, 57.5801, 5.14609, 0.22 ) }
    dend_26 { pt3dadd( 25.1029, 58.4949, 4.66995, 0.22 ) }
    dend_26 { pt3dadd( 24.9081, 59.3051, 4.28972, 0.44 ) }
    dend_26 { pt3dadd( 24.6742, 60.356, 3.85648, 0.37 ) }
    dend_26 { pt3dadd( 24.3999, 61.4636, 3.4359, 0.37 ) }
    dend_26 { pt3dadd( 24.0792, 62.6416, 2.97629, 0.29 ) }
    dend_26 { pt3dadd( 23.8061, 63.4916, 2.67243, 0.29 ) }
    dend_26 { pt3dadd( 23.3338, 64.6955, 2.26566, 0.52 ) }
    dend_26 { pt3dadd( 22.9943, 65.4632, 2.00234, 0.15 ) }
    dend_26 { pt3dadd( 22.6903, 66.155, 1.74937, 0.37 ) }
    dend_26 { pt3dadd( 22.4215, 66.8485, 1.44346, 0.37 ) }
    dend_26 { pt3dadd( 22.1544, 67.6514, 1.06064, 0.22 ) }
    dend_26 { pt3dadd( 21.9477, 68.3577, 0.765702, 0.22 ) }
    dend_26 { pt3dadd( 21.8084, 68.9522, 0.522172, 0.59 ) }
    dend_26 { pt3dadd( 21.6406, 69.8433, 0.130822, 0.22 ) }
    dend_26 { pt3dadd( 21.5062, 70.83, -0.292076, 0.37 ) }
    dend_26 { pt3dadd( 21.36, 71.7841, -0.704186, 0.81 ) }
    dend_26 { pt3dadd( 21.2706, 72.3091, -0.94034, 0.81 ) }
    dend_26 { pt3dadd( 20.9974, 73.5996, -1.50818, 0.52 ) }
    dend_26 { pt3dadd( 20.7423, 74.6642, -2.00241, 0.52 ) }
    dend_26 { pt3dadd( 20.407, 76.0117, -2.65334, 0.22 ) }
    dend_26 { pt3dadd( 20.1405, 77.0615, -3.16262, 0.15 ) }
    dend_26 { pt3dadd( 19.9127, 77.9198, -3.5716, 0.37 ) }
    dend_26 { pt3dadd( 19.753, 78.5245, -3.82929, 0.37 ) }
    dend_26 { pt3dadd( 19.5501, 79.3871, -4.15233, 0.15 ) }
    dend_26 { pt3dadd( 19.4357, 79.9749, -4.34988, 0.15 ) }
    dend_26 { pt3dadd( 19.3258, 80.6435, -4.56168, 0.15 ) }
    dend_26 { pt3dadd( 19.1664, 81.6634, -4.84167, 0.74 ) }
    dend_26 { pt3dadd( 18.9763, 82.6209, -5.08561, 0.22 ) }
    dend_26 { pt3dadd( 18.7057, 83.6842, -5.33196, 0.22 ) }
    dend_26 { pt3dadd( 18.4928, 84.3586, -5.46, 0.22 ) }
    dend_26 { pt3dadd( 18.0636, 85.5694, -5.65096, 0.96 ) }
    dend_26 { pt3dadd( 17.7003, 86.581, -5.77669, 0.96 ) }
    dend_26 { pt3dadd( 17.4895, 87.2022, -5.82129, 0.15 ) }
    dend_26 { pt3dadd( 17.2489, 87.8888, -5.85496, 0.15 ) }
    dend_26 { pt3dadd( 17.0064, 88.5241, -5.87423, 0.15 ) }
    dend_26 { pt3dadd( 16.7173, 89.2863, -5.90361, 0.44 ) }
    dend_26 { pt3dadd( 16.5849, 89.6631, -5.9245, 0.44 ) }
    dend_26 { pt3dadd( 16.0641, 91.2577, -5.98829, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_26 { pt3dadd( 15.8026, 92.1309, -5.98304, 0.22 ) }
    dend_26 { pt3dadd( 15.5613, 92.9434, -5.94058, 0.22 ) }
    dend_26 { pt3dadd( 15.3671, 93.4905, -5.86697, 0.59 ) }
    dend_26 { pt3dadd( 15.0881, 94.1483, -5.72873, 0.74 ) }
    dend_26 { pt3dadd( 14.6778, 95.0093, -5.50126, 0.22 ) }
    dend_26 { pt3dadd( 14.3143, 95.7238, -5.26952, 0.22 ) }
    dend_26 { pt3dadd( 13.9931, 96.4078, -5.02827, 0.88 ) }
    dend_26 { pt3dadd( 13.3338, 97.9673, -4.48551, 0.15 ) }
    dend_26 { pt3dadd( 12.9981, 98.8242, -4.21236, 0.15 ) }
    dend_26 { pt3dadd( 12.6176, 99.832, -3.92698, 0.15 ) }
    dend_26 { pt3dadd( 12.2882, 100.677, -3.725, 0.66 ) }
    dend_26 { pt3dadd( 11.8076, 101.764, -3.46097, 0.07 ) }
    dend_26 { pt3dadd( 11.5275, 102.364, -3.30194, 0.15 ) }
    dend_26 { pt3dadd( 11.2117, 102.994, -3.12056, 0.15 ) }
    dend_26 { pt3dadd( 10.9023, 103.498, -2.94785, 0.15 ) }
    dend_26 { pt3dadd( 10.3609, 104.114, -2.68544, 0.22 ) }
    dend_26 { pt3dadd( 9.3915, 104.87, -2.30883, 0.07 ) }
    dend_26 { pt3dadd( 9.10835, 105.04, -2.21819, 0.07 ) }
    dend_26 { pt3dadd( 8.36469, 105.482, -2.00814, 0.07 ) }
    dend_26 { pt3dadd( 7.92952, 105.742, -1.91206, 0.52 ) }
    dend_26 { pt3dadd( 7.39274, 106.077, -1.81926, 0.96 ) }
    dend_26 { pt3dadd( 6.92297, 106.386, -1.75626, 0.96 ) }
    dend_26 { pt3dadd( 6.02437, 107.029, -1.69512, 0.52 ) }
    dend_26 { pt3dadd( 5.04394, 107.731, -1.66513, 0.22 ) }
    dend_26 { pt3dadd( 4.27926, 108.293, -1.68485, 0.29 ) }
    dend_26 { pt3dadd( 3.58096, 108.84, -1.73177, 0.74 ) }
    dend_26 { pt3dadd( 2.88321, 109.415, -1.8227, 0.22 ) }
    dend_26 { pt3dadd( 2.07765, 110.054, -1.96774, 0.15 ) }
    dend_26 { pt3dadd( 1.39437, 110.545, -2.11963, 0.15 ) }
    dend_26 { pt3dadd( 0.506784, 111.129, -2.33775, 0.15 ) }
    dend_26 { pt3dadd( -0.0452998, 111.484, -2.47478, 0.59 ) }
    dend_26 { pt3dadd( -0.801976, 111.957, -2.70248, 0.15 ) }
    dend_26 { pt3dadd( -1.5526, 112.409, -2.9476, 0.15 ) }
    dend_26 { pt3dadd( -2.07453, 112.718, -3.13829, 0.15 ) }
    dend_26 { pt3dadd( -2.65099, 113.079, -3.39849, 0.37 ) }
    dend_26 { pt3dadd( -3.2693, 113.485, -3.71545, 0.22 ) }
    dend_26 { pt3dadd( -3.89896, 113.931, -4.10804, 0.22 ) }
    dend_26 { pt3dadd( -4.60202, 114.501, -4.61781, 1.03 ) }
    dend_26 { pt3dadd( -5.35452, 115.204, -5.22917, 0.22 ) }
    dend_26 { pt3dadd( -5.94205, 115.778, -5.72219, 0.52 ) }
    dend_26 { pt3dadd( -6.31089, 116.126, -6.02323, 0.74 ) }
    dend_26 { pt3dadd( -7.08072, 116.795, -6.57238, 0.22 ) }
    dend_26 { pt3dadd( -7.50624, 117.148, -6.81488, 0.22 ) }
    dend_26 { pt3dadd( -8.01237, 117.588, -7.05717, 0.22 ) }
    dend_26 { pt3dadd( -8.60109, 118.179, -7.28817, 0.22 ) }
    dend_26 { pt3dadd( -8.86206, 118.499, -7.38635, 0.22 ) }
    dend_26 { pt3dadd( -9.34441, 119.175, -7.57661, 0.22 ) }
    dend_26 { pt3dadd( -9.68595, 119.682, -7.71275, 0.74 ) }
    dend_26 { pt3dadd( -10.0342, 120.202, -7.86802, 0.15 ) }
    dend_26 { pt3dadd( -10.4909, 120.87, -8.06029, 0.15 ) }
    dend_26 { pt3dadd( -10.9973, 121.61, -8.27312, 0.15 ) }
    dend_26 { pt3dadd( -11.347, 122.115, -8.39138, 0.15 ) }
    dend_26 { pt3dadd( -11.724, 122.666, -8.47648, 0.74 ) }
    dend_26 { pt3dadd( -12.2013, 123.369, -8.53281, 0.96 ) }
    dend_26 { pt3dadd( -13.1913, 124.857, -8.5418, 0.15 ) }
    dend_26 { pt3dadd( -13.4038, 125.2, -8.51797, 0.15 ) }
    dend_26 { pt3dadd( -13.8745, 126.088, -8.41566, 0.37 ) }
    dend_26 { pt3dadd( -14.4869, 127.466, -8.17969, 0.15 ) }
    dend_26 { pt3dadd( -14.7397, 128.105, -8.02401, 0.22 ) }
    dend_26 { pt3dadd( -14.897, 128.534, -7.89597, 0.22 ) }
    dend_26 { pt3dadd( -15.1848, 129.42, -7.56393, 0.81 ) }
    dend_26 { pt3dadd( -15.4055, 130.131, -7.26224, 0.29 ) }
    dend_26 { pt3dadd( -15.6458, 130.927, -6.88809, 0.07 ) }
    dend_26 { pt3dadd( -15.9451, 131.813, -6.39856, 0.07 ) }
    dend_26 { pt3dadd( -16.1578, 132.34, -6.09666, 0.52 ) }
    dend_26 { pt3dadd( -16.4738, 133.064, -5.69361, 0.15 ) }
    dend_26 { pt3dadd( -16.7275, 133.597, -5.41678, 0.15 ) }
    dend_26 { pt3dadd( -16.9097, 133.946, -5.25645, 0.15 ) }
    dend_26 { pt3dadd( -17.2148, 134.582, -5.06414, 0.59 ) }
    dend_26 { pt3dadd( -17.5872, 135.459, -4.90034, 0.15 ) }
    dend_26 { pt3dadd( -17.8146, 135.975, -4.84596, 0.29 ) }
    dend_26 { pt3dadd( -18.1053, 136.521, -4.8319, 0.15 ) }
    dend_26 { pt3dadd( -18.596, 137.287, -4.83483, 0.15 ) }
    dend_26 { pt3dadd( -19.156, 138.067, -4.85251, 0.22 ) }
    dend_26 { pt3dadd( -19.3959, 138.404, -4.86202, 0.22 ) }
    dend_26 { pt3dadd( -19.7911, 138.977, -4.87204, 0.22 ) }
    dend_26 { pt3dadd( -20.2367, 139.618, -4.8686, 0.66 ) }
    dend_26 { pt3dadd( -20.7099, 140.315, -4.84706, 0.74 ) }
    dend_26 { pt3dadd( -21.3103, 141.259, -4.79282, 0.15 ) }
    dend_26 { pt3dadd( -21.7091, 141.943, -4.72349, 0.15 ) }
    dend_26 { pt3dadd( -22.1325, 142.919, -4.59862, 0.15 ) }
    dend_26 { pt3dadd( -22.3833, 143.613, -4.50304, 0.22 ) }
    dend_26 { pt3dadd( -22.5866, 144.333, -4.40666, 0.07 ) }
    dend_26 { pt3dadd( -22.7617, 145.187, -4.29292, 0.07 ) }
    dend_26 { pt3dadd( -22.8365, 145.801, -4.20785, 0.15 ) }
    dend_26 { pt3dadd( -22.9293, 147.266, -3.98163, 0.07 ) }
    dend_26 { pt3dadd( -26.2676, 157.381, -5.7546, 0.07 ) }
    dend_26 { pt3dadd( -29.7584, 167.615, -5.38295, 0.07 ) }
    dend_26 { pt3dadd( -32.3448, 178.146, -5.29432, 0.07 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 89/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 33.2323, -10.0748, -11.6231, 0.37 ) }
    dend_19 { pt3dadd( 33.735, -10.9543, -12.5415, 0.37 ) }
    dend_19 { pt3dadd( 34.0815, -11.5478, -13.1978, 0.44 ) }
    dend_19 { pt3dadd( 34.4913, -12.1704, -13.9498, 0.44 ) }
    dend_19 { pt3dadd( 34.9811, -12.794, -14.8048, 0.81 ) }
    dend_19 { pt3dadd( 35.5906, -13.4233, -15.8311, 1.03 ) }
    dend_19 { pt3dadd( 36.1728, -13.893, -16.7726, 1.18 ) }
    dend_19 { pt3dadd( 36.7424, -14.2317, -17.717, 0.44 ) }
    dend_19 { pt3dadd( 37.1624, -14.3446, -18.3154, 0.81 ) }
    dend_19 { pt3dadd( 37.8378, -14.255, -18.9165, 1.11 ) }
    dend_19 { pt3dadd( 38.6802, -13.9268, -19.2453, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_19 { pt3dadd( 39.4285, -13.5832, -19.3693, 0.74 ) }
    dend_19 { pt3dadd( 40.4139, -13.1545, -19.4882, 0.15 ) }
    dend_19 { pt3dadd( 41.3989, -12.7764, -19.6294, 0.44 ) }
    dend_19 { pt3dadd( 42.4091, -12.4593, -19.7514, 0.22 ) }
    dend_19 { pt3dadd( 43.2639, -12.2726, -19.8576, 0.59 ) }
    dend_19 { pt3dadd( 44.4078, -12.1206, -20.0457, 0.74 ) }
    dend_19 { pt3dadd( 45.7972, -12.0159, -20.451, 1.25 ) }
    dend_19 { pt3dadd( 46.5978, -11.9641, -20.8548, 1.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 8/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 33.2323, -10.0748, -11.6231, 0.29 ) }
    dend_16 { pt3dadd( 34.3331, -10.84, -10.7012, 0.29 ) }
    dend_16 { pt3dadd( 35.4626, -11.6252, -9.75521, 0.29 ) }
    dend_16 { pt3dadd( 36.4954, -12.3431, -8.89024, 0.81 ) }
    dend_16 { pt3dadd( 37.4155, -12.9827, -8.11964, 0.96 ) }
    dend_16 { pt3dadd( 38.211, -13.5357, -7.45339, 0.88 ) }
    dend_16 { pt3dadd( 38.9852, -14.0739, -6.80498, 0.74 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 15/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -34.1136, 52.6763, -10.2972, 0.66 ) }
    dend_10 { pt3dadd( -35.2524, 52.4331, -9.91365, 0.66 ) }
    dend_10 { pt3dadd( -36.8106, 52.1019, -9.48777, 0.44 ) }
    dend_10 { pt3dadd( -37.6289, 51.9231, -9.30309, 0.44 ) }
    dend_10 { pt3dadd( -38.8282, 51.6346, -9.08514, 0.59 ) }
    dend_10 { pt3dadd( -39.8862, 51.3873, -8.93223, 0.74 ) }
    dend_10 { pt3dadd( -40.9699, 51.1643, -8.79918, 0.44 ) }
    dend_10 { pt3dadd( -41.9719, 50.9927, -8.76417, 0.44 ) }
    dend_10 { pt3dadd( -42.6443, 50.9261, -8.79613, 0.22 ) }
    dend_10 { pt3dadd( -43.7162, 50.8895, -8.86555, 0.15 ) }
    dend_10 { pt3dadd( -44.2478, 50.9543, -8.91224, 0.15 ) }
    dend_10 { pt3dadd( -44.9245, 51.1619, -8.98038, 0.29 ) }
    dend_10 { pt3dadd( -45.6504, 51.4696, -9.01942, 0.15 ) }
    dend_10 { pt3dadd( -46.1228, 51.7014, -8.99334, 0.15 ) }
    dend_10 { pt3dadd( -46.4102, 51.8495, -8.94422, 0.15 ) }
    dend_10 { pt3dadd( -47.1823, 52.224, -8.76084, 0.88 ) }
    dend_10 { pt3dadd( -48.2109, 52.6179, -8.48869, 0.74 ) }
    dend_10 { pt3dadd( -49.5637, 52.991, -8.13889, 0.29 ) }
    dend_10 { pt3dadd( -50.6312, 53.1864, -7.90673, 0.22 ) }
    dend_10 { pt3dadd( -51.2759, 53.2437, -7.79863, 0.22 ) }
    dend_10 { pt3dadd( -51.7355, 53.2515, -7.74566, 0.22 ) }
    dend_10 { pt3dadd( -52.301, 53.2235, -7.68717, 0.66 ) }
    dend_10 { pt3dadd( -53.1732, 53.1147, -7.60049, 1.03 ) }
    dend_10 { pt3dadd( -54.5821, 52.8111, -7.4899, 0.52 ) }
    dend_10 { pt3dadd( -55.8893, 52.4652, -7.41021, 0.37 ) }
    dend_10 { pt3dadd( -56.5797, 52.2918, -7.35456, 0.22 ) }
    dend_10 { pt3dadd( -57.5513, 52.1049, -7.20921, 0.15 ) }
    dend_10 { pt3dadd( -58.3565, 51.9663, -7.05354, 0.15 ) }
    dend_10 { pt3dadd( -58.9537, 51.8864, -6.88667, 0.15 ) }
    dend_10 { pt3dadd( -59.2081, 51.8728, -6.77032, 0.81 ) }
    dend_10 { pt3dadd( -59.9452, 51.9601, -6.30543, 1.11 ) }
    dend_10 { pt3dadd( -60.6897, 52.1467, -5.80016, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 47/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -34.1136, 52.6763, -10.2972, 0.88 ) }
    dend_9 { pt3dadd( -34.3156, 53.9192, -9.81885, 0.88 ) }
    dend_9 { pt3dadd( -34.413, 54.8218, -9.44941, 0.29 ) }
    dend_9 { pt3dadd( -34.5765, 55.693, -8.93388, 0.29 ) }
    dend_9 { pt3dadd( -34.7581, 56.2898, -8.5165, 0.29 ) }
    dend_9 { pt3dadd( -35.056, 57.0024, -7.97334, 0.88 ) }
    dend_9 { pt3dadd( -35.1883, 57.2553, -7.7837, 0.88 ) }
    dend_9 { pt3dadd( -35.7504, 58.0966, -7.11161, 0.74 ) }
    dend_9 { pt3dadd( -36.8417, 59.6251, -5.8151, 0.52 ) }
    dend_9 { pt3dadd( -37.528, 60.5688, -4.99212, 0.37 ) }
    dend_9 { pt3dadd( -38.0035, 61.1748, -4.48007, 0.37 ) }
    dend_9 { pt3dadd( -38.7554, 62.0541, -3.79113, 0.37 ) }
    dend_9 { pt3dadd( -39.1655, 62.5328, -3.46722, 0.29 ) }
    dend_9 { pt3dadd( -40.0331, 63.6067, -2.89282, 0.66 ) }
    dend_9 { pt3dadd( -40.363, 64.1123, -2.70808, 0.22 ) }
    dend_9 { pt3dadd( -40.7502, 64.7647, -2.49901, 0.22 ) }
    dend_9 { pt3dadd( -41.2048, 65.5495, -2.2854, 0.44 ) }
    dend_9 { pt3dadd( -41.608, 66.3229, -2.08187, 0.15 ) }
    dend_9 { pt3dadd( -42.0014, 67.032, -1.93322, 0.29 ) }
    dend_9 { pt3dadd( -42.3732, 67.6304, -1.82727, 0.15 ) }
    dend_9 { pt3dadd( -42.6688, 68.084, -1.73254, 0.15 ) }
    dend_9 { pt3dadd( -43.2705, 68.9299, -1.52305, 0.96 ) }
    dend_9 { pt3dadd( -44.5019, 70.471, -1.10547, 0.15 ) }
    dend_9 { pt3dadd( -45.2501, 71.3412, -0.844181, 0.22 ) }
    dend_9 { pt3dadd( -46.0077, 72.1817, -0.588694, 0.22 ) }
    dend_9 { pt3dadd( -46.6193, 72.8426, -0.366701, 0.59 ) }
    dend_9 { pt3dadd( -47.4564, 73.7143, -0.0396304, 0.37 ) }
    dend_9 { pt3dadd( -48.5432, 74.7675, 0.412228, 0.74 ) }
    dend_9 { pt3dadd( -49.8945, 75.975, 0.991737, 0.74 ) }
    dend_9 { pt3dadd( -51.1958, 77.189, 1.6231, 0.22 ) }
    dend_9 { pt3dadd( -51.7672, 77.7681, 1.93852, 0.74 ) }
    dend_9 { pt3dadd( -52.1879, 78.2477, 2.20037, 1.03 ) }
    dend_9 { pt3dadd( -53.1312, 79.4663, 2.86396, 0.22 ) }
    dend_9 { pt3dadd( -53.6349, 80.2057, 3.2639, 0.22 ) }
    dend_9 { pt3dadd( -54.0272, 80.8974, 3.61428, 0.81 ) }
    dend_9 { pt3dadd( -54.3805, 81.68, 3.9809, 0.81 ) }
    dend_9 { pt3dadd( -55.0378, 83.3972, 4.67097, 0.15 ) }
    dend_9 { pt3dadd( -55.3121, 84.1504, 4.91797, 0.37 ) }
    dend_9 { pt3dadd( -55.653, 85.0607, 5.14538, 0.15 ) }
    dend_9 { pt3dadd( -56.0741, 86.0995, 5.35777, 0.22 ) }
    dend_9 { pt3dadd( -56.3221, 86.6702, 5.46412, 0.37 ) }
    dend_9 { pt3dadd( -56.6151, 87.3018, 5.5854, 0.74 ) }
    dend_9 { pt3dadd( -57.3148, 88.781, 5.92655, 0.29 ) }
    dend_9 { pt3dadd( -57.8398, 89.8916, 6.22261, 0.22 ) }
    dend_9 { pt3dadd( -58.2027, 90.6649, 6.44492, 0.22 ) }
    dend_9 { pt3dadd( -58.6313, 91.5891, 6.72908, 0.37 ) }
    dend_9 { pt3dadd( -59.0065, 92.4482, 7.01965, 0.22 ) }
    dend_9 { pt3dadd( -59.4585, 93.6076, 7.46445, 0.22 ) }
    dend_9 { pt3dadd( -59.8061, 94.7051, 7.95794, 0.81 ) }
    dend_9 { pt3dadd( -60.2453, 96.1879, 8.66374, 0.22 ) }
    dend_9 { pt3dadd( -64.9495, 105.665, 14.0028, 0.22 ) }
    dend_9 { pt3dadd( -69.5159, 115.207, 19.3543, 0.22 ) }
    dend_9 { pt3dadd( -76.253, 123.164, 24.8035, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_9 { pt3dadd( -82.6953, 130.206, 31.6074, 0.22 ) }
    dend_9 { pt3dadd( -89.0746, 138.555, 36.9474, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 2/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -37.9817, -14.2035, 5.4793, 0.07 ) }
    dend_5 { pt3dadd( -38.5502, -15.0946, 6.46222, 0.07 ) }
    dend_5 { pt3dadd( -38.8307, -15.5609, 6.98944, 0.59 ) }
    dend_5 { pt3dadd( -39.1949, -16.1726, 7.66017, 0.07 ) }
    dend_5 { pt3dadd( -39.4806, -16.6366, 8.14915, 0.29 ) }
    dend_5 { pt3dadd( -39.7252, -17.0319, 8.55287, 0.29 ) }
    dend_5 { pt3dadd( -40.2159, -17.7732, 9.31171, 0.15 ) }
    dend_5 { pt3dadd( -40.5677, -18.2311, 9.84303, 0.22 ) }
    dend_5 { pt3dadd( -41.0219, -18.7863, 10.5637, 0.88 ) }
    dend_5 { pt3dadd( -41.4657, -19.3243, 11.2857, 0.22 ) }
    dend_5 { pt3dadd( -41.8539, -19.7981, 11.9321, 0.37 ) }
    dend_5 { pt3dadd( -42.341, -20.3567, 12.663, 0.59 ) }
    dend_5 { pt3dadd( -42.9714, -21.0121, 13.5147, 0.22 ) }
    dend_5 { pt3dadd( -43.6009, -21.6178, 14.3075, 0.22 ) }
    dend_5 { pt3dadd( -43.9861, -21.9787, 14.7598, 0.22 ) }
    dend_5 { pt3dadd( -44.2787, -22.2668, 15.083, 0.22 ) }
    dend_5 { pt3dadd( -45.0872, -23.0356, 15.8317, 0.15 ) }
    dend_5 { pt3dadd( -45.5942, -23.4826, 16.2238, 0.15 ) }
    dend_5 { pt3dadd( -46.264, -24.0011, 16.6566, 0.59 ) }
    dend_5 { pt3dadd( -47.2638, -24.6952, 17.269, 0.15 ) }
    dend_5 { pt3dadd( -47.9512, -25.1228, 17.7117, 0.59 ) }
    dend_5 { pt3dadd( -48.7832, -25.5856, 18.3042, 0.07 ) }
    dend_5 { pt3dadd( -49.6617, -26.0485, 18.969, 0.15 ) }
    dend_5 { pt3dadd( -50.1879, -26.3161, 19.3715, 0.66 ) }
    dend_5 { pt3dadd( -51.0848, -26.7411, 20.0792, 0.29 ) }
    dend_5 { pt3dadd( -52.0117, -27.0916, 20.8172, 0.29 ) }
    dend_5 { pt3dadd( -52.9397, -27.4097, 21.6065, 0.29 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 29/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -37.9817, -14.2035, 5.4793, 0.22 ) }
    dend_4 { pt3dadd( -38.7606, -14.9062, 5.73282, 0.22 ) }
    dend_4 { pt3dadd( -39.613, -15.7088, 6.00939, 0.22 ) }
    dend_4 { pt3dadd( -40.2937, -16.4395, 6.23825, 0.22 ) }
    dend_4 { pt3dadd( -40.7795, -17.0164, 6.43084, 0.15 ) }
    dend_4 { pt3dadd( -41.2414, -17.5735, 6.64187, 0.15 ) }
    dend_4 { pt3dadd( -41.6859, -18.1211, 6.85487, 0.59 ) }
    dend_4 { pt3dadd( -41.9586, -18.4991, 7.00486, 0.66 ) }
    dend_4 { pt3dadd( -42.4119, -19.1852, 7.26911, 0.29 ) }
    dend_4 { pt3dadd( -42.8698, -19.94, 7.58398, 0.22 ) }
    dend_4 { pt3dadd( -43.3695, -20.8571, 7.98019, 0.22 ) }
    dend_4 { pt3dadd( -43.7721, -21.6656, 8.31979, 0.59 ) }
    dend_4 { pt3dadd( -44.0826, -22.3405, 8.59927, 0.59 ) }
    dend_4 { pt3dadd( -44.4294, -23.1692, 8.9312, 0.22 ) }
    dend_4 { pt3dadd( -44.7152, -23.9283, 9.23253, 0.22 ) }
    dend_4 { pt3dadd( -44.9237, -24.5689, 9.48163, 0.74 ) }
    dend_4 { pt3dadd( -45.1059, -25.2328, 9.76858, 0.74 ) }
    dend_4 { pt3dadd( -45.3517, -26.1166, 10.2305, 0.59 ) }
    dend_4 { pt3dadd( -45.5338, -26.7284, 10.5915, 0.37 ) }
    dend_4 { pt3dadd( -45.7807, -27.4907, 11.0485, 0.22 ) }
    dend_4 { pt3dadd( -46.1031, -28.3128, 11.5595, 0.59 ) }
    dend_4 { pt3dadd( -46.5086, -29.1699, 12.1108, 0.52 ) }
    dend_4 { pt3dadd( -46.8627, -29.7758, 12.5131, 0.52 ) }
    dend_4 { pt3dadd( -47.2461, -30.3383, 12.8848, 0.52 ) }
    dend_4 { pt3dadd( -47.9607, -31.3299, 13.4871, 0.22 ) }
    dend_4 { pt3dadd( -48.4362, -32.0168, 13.8321, 0.66 ) }
    dend_4 { pt3dadd( -48.7597, -32.5141, 14.0238, 0.66 ) }
    dend_4 { pt3dadd( -49.1537, -33.1218, 14.218, 0.22 ) }
    dend_4 { pt3dadd( -49.6022, -33.8275, 14.4295, 0.22 ) }
    dend_4 { pt3dadd( -49.8548, -34.212, 14.5431, 0.22 ) }
    dend_4 { pt3dadd( -50.4139, -35.0271, 14.8045, 0.74 ) }
    dend_4 { pt3dadd( -51.0205, -35.8519, 15.0895, 0.22 ) }
    dend_4 { pt3dadd( -51.8979, -36.9278, 15.4971, 0.15 ) }
    dend_4 { pt3dadd( -52.5516, -37.5911, 15.7816, 0.81 ) }
    dend_4 { pt3dadd( -53.772, -38.459, 16.2684, 0.07 ) }
    dend_4 { pt3dadd( -54.5762, -38.8295, 16.576, 0.22 ) }
    dend_4 { pt3dadd( -55.3029, -38.9778, 16.8182, 0.59 ) }
    dend_4 { pt3dadd( -55.8901, -38.9674, 16.9724, 0.81 ) }
    dend_4 { pt3dadd( -56.9883, -38.7218, 17.1429, 0.22 ) }
    dend_4 { pt3dadd( -58.5273, -38.1312, 17.2114, 0.15 ) }
    dend_4 { pt3dadd( -59.4092, -37.6588, 17.1482, 0.81 ) }
    dend_4 { pt3dadd( -60.6779, -36.8029, 16.8635, 0.22 ) }
    dend_4 { pt3dadd( -61.5788, -36.0538, 16.4922, 0.66 ) }
    dend_4 { pt3dadd( -62.2398, -35.3755, 16.089, 0.22 ) }
    dend_4 { pt3dadd( -62.754, -34.7143, 15.6241, 0.22 ) }
    dend_4 { pt3dadd( -63.1067, -34.1581, 15.1742, 0.59 ) }
    dend_4 { pt3dadd( -63.5625, -33.2542, 14.424, 0.15 ) }
    dend_4 { pt3dadd( -63.9045, -32.3962, 13.7272, 0.15 ) }
    dend_4 { pt3dadd( -64.0814, -31.9252, 13.3443, 0.66 ) }
    dend_4 { pt3dadd( -64.3061, -31.3362, 12.8654, 0.66 ) }
    dend_4 { pt3dadd( -64.6249, -30.5624, 12.2336, 0.15 ) }
    dend_4 { pt3dadd( -64.954, -29.9182, 11.6881, 0.15 ) }
    dend_4 { pt3dadd( -65.2642, -29.4797, 11.3392, 0.52 ) }
    dend_4 { pt3dadd( -65.9371, -28.8229, 10.9129, 0.15 ) }
    dend_4 { pt3dadd( -66.6718, -28.3964, 10.7414, 0.22 ) }
    dend_4 { pt3dadd( -67.1004, -28.2434, 10.7352, 0.59 ) }
    dend_4 { pt3dadd( -67.7999, -28.1021, 10.8354, 0.59 ) }
    dend_4 { pt3dadd( -69.1356, -27.9674, 11.1493, 0.15 ) }
    dend_4 { pt3dadd( -70.6258, -27.9384, 11.6145, 0.66 ) }
    dend_4 { pt3dadd( -72.4656, -28.02, 12.3289, 0.15 ) }
    dend_4 { pt3dadd( -73.4472, -28.1288, 12.7609, 0.59 ) }
    dend_4 { pt3dadd( -74.9219, -28.4269, 13.4571, 0.15 ) }
    dend_4 { pt3dadd( -75.7938, -28.7367, 13.8843, 0.22 ) }
    dend_4 { pt3dadd( -76.4569, -29.0892, 14.2053, 0.22 ) }
    dend_4 { pt3dadd( -76.9253, -29.4185, 14.4393, 0.52 ) }
    dend_4 { pt3dadd( -77.3842, -29.8259, 14.6751, 0.22 ) }
    dend_4 { pt3dadd( -78.0196, -30.4615, 14.9708, 0.81 ) }
    dend_4 { pt3dadd( -79.2054, -31.7299, 15.4108, 0.07 ) }
    dend_4 { pt3dadd( -79.7286, -32.2268, 15.5391, 0.22 ) }
    dend_4 { pt3dadd( -80.2341, -32.6308, 15.6094, 0.07 ) }
    dend_4 { pt3dadd( -80.86, -33.0614, 15.6484, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_4 { pt3dadd( -81.7483, -33.6102, 15.6614, 0.07 ) }
    dend_4 { pt3dadd( -82.0873, -33.796, 15.6477, 0.44 ) }
    dend_4 { pt3dadd( -83.8307, -34.6346, 15.5185, 0.15 ) }
    dend_4 { pt3dadd( -84.5476, -34.965, 15.444, 0.37 ) }
    dend_4 { pt3dadd( -85.6687, -35.4577, 15.284, 0.07 ) }
    dend_4 { pt3dadd( -86.4518, -35.7809, 15.1587, 0.22 ) }
    dend_4 { pt3dadd( -87.5566, -36.233, 14.9615, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 7/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 107.031, 162.643, 33.2537, 0.52 ) }
    dend_29 { pt3dadd( 107.512, 163.505, 33.4162, 0.52 ) }
    dend_29 { pt3dadd( 108.441, 165.018, 33.7672, 0.22 ) }
    dend_29 { pt3dadd( 108.962, 165.847, 34.0202, 0.66 ) }
    dend_29 { pt3dadd( 109.248, 166.293, 34.2057, 0.96 ) }
    dend_29 { pt3dadd( 109.878, 167.259, 34.6586, 0.22 ) }
    dend_29 { pt3dadd( 110.379, 168.059, 35.0387, 0.22 ) }
    dend_29 { pt3dadd( 111.057, 169.128, 35.5591, 0.52 ) }
    dend_29 { pt3dadd( 111.474, 169.748, 35.851, 0.96 ) }
    dend_29 { pt3dadd( 112.485, 171.217, 36.4482, 0.52 ) }
    dend_29 { pt3dadd( 113.426, 172.466, 36.8806, 0.22 ) }
    dend_29 { pt3dadd( 114.077, 173.25, 37.1029, 0.66 ) }
    dend_29 { pt3dadd( 115.148, 174.316, 37.332, 0.15 ) }
    dend_29 { pt3dadd( 115.831, 174.875, 37.4143, 0.15 ) }
    dend_29 { pt3dadd( 116.623, 175.407, 37.4688, 0.44 ) }
    dend_29 { pt3dadd( 117.938, 176.117, 37.5228, 0.15 ) }
    dend_29 { pt3dadd( 118.756, 176.467, 37.5743, 0.74 ) }
    dend_29 { pt3dadd( 121.138, 177.308, 37.8148, 0.15 ) }
    dend_29 { pt3dadd( 121.849, 177.542, 37.9029, 0.59 ) }
    dend_29 { pt3dadd( 123.011, 177.951, 38.054, 0.15 ) }
    dend_29 { pt3dadd( 123.43, 178.108, 38.1009, 0.22 ) }
    dend_29 { pt3dadd( 124.196, 178.433, 38.1736, 0.15 ) }
    dend_29 { pt3dadd( 125.409, 179.001, 38.2123, 0.66 ) }
    dend_29 { pt3dadd( 126.779, 179.728, 38.1516, 0.15 ) }
    dend_29 { pt3dadd( 127.807, 180.342, 38.0652, 0.37 ) }
    dend_29 { pt3dadd( 128.495, 180.765, 37.9481, 0.07 ) }
    dend_29 { pt3dadd( 128.993, 181.065, 37.8222, 0.22 ) }
    dend_29 { pt3dadd( 130.242, 181.792, 37.3615, 0.07 ) }
    dend_29 { pt3dadd( 130.982, 182.163, 37.0069, 0.59 ) }
    dend_29 { pt3dadd( 131.856, 182.524, 36.4584, 0.07 ) }
    dend_29 { pt3dadd( 133.079, 182.922, 35.5153, 0.15 ) }
    dend_29 { pt3dadd( 133.665, 183.073, 35.0091, 0.37 ) }
    dend_29 { pt3dadd( 134.66, 183.239, 34.0602, 0.22 ) }
    dend_29 { pt3dadd( 135.444, 183.331, 33.2242, 0.52 ) }
    dend_29 { pt3dadd( 136.532, 183.412, 31.9751, 0.22 ) }
    dend_29 { pt3dadd( 137.074, 183.44, 31.325, 0.22 ) }
    dend_29 { pt3dadd( 137.424, 183.464, 30.9166, 0.44 ) }
    dend_29 { pt3dadd( 138.317, 183.523, 29.8185, 0.22 ) }
    dend_29 { pt3dadd( 139.077, 183.58, 28.7968, 0.22 ) }
    dend_29 { pt3dadd( 139.823, 183.678, 27.6911, 0.22 ) }
    dend_29 { pt3dadd( 140.188, 183.734, 27.1408, 0.37 ) }
    dend_29 { pt3dadd( 140.478, 183.788, 26.6663, 0.37 ) }
    dend_29 { pt3dadd( 140.961, 183.893, 25.7876, 0.22 ) }
    dend_29 { pt3dadd( 141.226, 183.96, 25.2552, 0.37 ) }
    dend_29 { pt3dadd( 141.462, 184.023, 24.7894, 0.37 ) }
    dend_29 { pt3dadd( 141.753, 184.145, 24.1386, 0.37 ) }
    dend_29 { pt3dadd( 141.931, 184.248, 23.6727, 0.37 ) }
    dend_29 { pt3dadd( 142.198, 184.495, 22.8469, 0.22 ) }
    dend_29 { pt3dadd( 142.615, 185.184, 21.2594, 0.44 ) }
    dend_29 { pt3dadd( 142.775, 185.715, 20.3062, 0.59 ) }
    dend_29 { pt3dadd( 142.922, 186.476, 19.0435, 0.15 ) }
    dend_29 { pt3dadd( 142.957, 187.061, 18.1741, 0.37 ) }
    dend_29 { pt3dadd( 142.905, 187.926, 17.0239, 0.07 ) }
    dend_29 { pt3dadd( 142.692, 188.966, 15.8692, 0.07 ) }
    dend_29 { pt3dadd( 142.577, 189.283, 15.6023, 0.15 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 62/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 107.031, 162.643, 33.2537, 0.15 ) }
    dend_28 { pt3dadd( 108.644, 162.158, 34.0329, 0.15 ) }
    dend_28 { pt3dadd( 109.931, 161.708, 34.6548, 0.15 ) }
    dend_28 { pt3dadd( 110.973, 161.3, 35.1594, 0.37 ) }
    dend_28 { pt3dadd( 111.796, 160.942, 35.541, 0.37 ) }
    dend_28 { pt3dadd( 113.288, 160.27, 36.2288, 0.15 ) }
    dend_28 { pt3dadd( 114.949, 159.525, 37.0012, 0.15 ) }
    dend_28 { pt3dadd( 115.613, 159.211, 37.3268, 0.15 ) }
    dend_28 { pt3dadd( 116.357, 158.856, 37.6665, 0.15 ) }
    dend_28 { pt3dadd( 117.282, 158.427, 38.0907, 0.66 ) }
    dend_28 { pt3dadd( 119.018, 157.655, 38.8739, 0.07 ) }
    dend_28 { pt3dadd( 120.156, 157.159, 39.4038, 0.07 ) }
    dend_28 { pt3dadd( 120.667, 156.95, 39.6214, 0.07 ) }
    dend_28 { pt3dadd( 121.333, 156.679, 39.9183, 0.52 ) }
    dend_28 { pt3dadd( 122.092, 156.353, 40.2717, 0.74 ) }
    dend_28 { pt3dadd( 123.261, 155.798, 40.8441, 0.07 ) }
    dend_28 { pt3dadd( 124.447, 155.119, 41.4803, 0.07 ) }
    dend_28 { pt3dadd( 125.264, 154.591, 41.9471, 0.22 ) }
    dend_28 { pt3dadd( 126.078, 154.013, 42.4586, 0.22 ) }
    dend_28 { pt3dadd( 127.461, 152.939, 43.4287, 0.07 ) }
    dend_28 { pt3dadd( 128.506, 152.072, 44.2324, 0.52 ) }
    dend_28 { pt3dadd( 130.007, 150.746, 45.5559, 0.15 ) }
    dend_28 { pt3dadd( 130.574, 150.216, 46.1439, 0.59 ) }
    dend_28 { pt3dadd( 131.479, 149.343, 47.2202, 0.07 ) }
    dend_28 { pt3dadd( 132.237, 148.583, 48.1769, 0.07 ) }
    dend_28 { pt3dadd( 132.661, 148.145, 48.7739, 0.29 ) }
    dend_28 { pt3dadd( 133.21, 147.569, 49.6389, 0.29 ) }
    dend_28 { pt3dadd( 133.996, 146.768, 51.0134, 0.15 ) }
    dend_28 { pt3dadd( 134.576, 146.197, 52.1356, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 91/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 46.5978, -11.9641, -20.8548, 0.15 ) }
    dend_21 { pt3dadd( 46.7342, -10.7022, -20.8846, 0.15 ) }
    dend_21 { pt3dadd( 46.8836, -9.86063, -20.8444, 0.15 ) }
    dend_21 { pt3dadd( 47.0786, -8.88663, -20.7622, 0.81 ) }
    dend_21 { pt3dadd( 47.2332, -8.09777, -20.6796, 0.22 ) }
    dend_21 { pt3dadd( 47.3932, -7.25365, -20.5803, 0.15 ) }
    dend_21 { pt3dadd( 47.5538, -6.4266, -20.4742, 0.15 ) }
    dend_21 { pt3dadd( 47.7443, -5.3943, -20.3188, 0.15 ) }
    dend_21 { pt3dadd( 47.8812, -4.94932, -20.2377, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_21 { pt3dadd( 48.1485, -4.37636, -20.1183, 0.66 ) }
    dend_21 { pt3dadd( 48.5013, -3.87442, -20.0322, 0.22 ) }
    dend_21 { pt3dadd( 48.9972, -3.34708, -19.9813, 0.22 ) }
    dend_21 { pt3dadd( 49.291, -3.08623, -19.9874, 0.22 ) }
    dend_21 { pt3dadd( 50.1537, -2.44623, -20.1275, 0.88 ) }
    dend_21 { pt3dadd( 50.522, -2.20046, -20.2215, 0.88 ) }
    dend_21 { pt3dadd( 51.3374, -1.69689, -20.51, 0.22 ) }
    dend_21 { pt3dadd( 51.9629, -1.30458, -20.7988, 0.22 ) }
    dend_21 { pt3dadd( 52.4842, -0.929498, -21.0973, 0.22 ) }
    dend_21 { pt3dadd( 53.0577, -0.442613, -21.4812, 0.22 ) }
    dend_21 { pt3dadd( 53.5326, 0.0549613, -21.8477, 0.59 ) }
    dend_21 { pt3dadd( 54.1396, 0.870046, -22.3692, 0.88 ) }
    dend_21 { pt3dadd( 54.5554, 1.59756, -22.7893, 0.88 ) }
    dend_21 { pt3dadd( 55.0779, 2.73859, -23.4208, 0.15 ) }
    dend_21 { pt3dadd( 55.2014, 3.06065, -23.586, 0.29 ) }
    dend_21 { pt3dadd( 55.413, 3.71595, -23.8944, 0.81 ) }
    dend_21 { pt3dadd( 55.7146, 4.93335, -24.4271, 0.22 ) }
    dend_21 { pt3dadd( 55.8866, 5.90085, -24.8188, 0.22 ) }
    dend_21 { pt3dadd( 55.9873, 6.634, -25.1057, 0.22 ) }
    dend_21 { pt3dadd( 56.0532, 7.20689, -25.3441, 0.81 ) }
    dend_21 { pt3dadd( 56.1515, 7.79069, -25.6216, 0.59 ) }
    dend_21 { pt3dadd( 56.3491, 8.4347, -26.0256, 0.59 ) }
    dend_21 { pt3dadd( 61.0516, 17.8, -27.0963, 0.59 ) }
    dend_21 { pt3dadd( 64.1266, 27.9277, -27.5416, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 24/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 46.5978, -11.9641, -20.8548, 0.29 ) }
    dend_20 { pt3dadd( 48.1767, -13.6763, -19.7987, 0.29 ) }
    dend_20 { pt3dadd( 48.9372, -14.3557, -19.3416, 0.22 ) }
    dend_20 { pt3dadd( 49.7311, -14.4711, -19.0805, 0.22 ) }
    dend_20 { pt3dadd( 50.0727, -14.4292, -19.0245, 0.22 ) }
    dend_20 { pt3dadd( 50.6868, -14.3748, -19.0182, 0.44 ) }
    dend_20 { pt3dadd( 51.4658, -14.3908, -19.1174, 0.66 ) }
    dend_20 { pt3dadd( 52.5227, -14.3954, -19.575, 0.22 ) }
    dend_20 { pt3dadd( 52.9789, -14.453, -19.8108, 0.22 ) }
    dend_20 { pt3dadd( 53.5611, -14.6624, -20.1591, 0.52 ) }
    dend_20 { pt3dadd( 54.449, -15.1753, -20.7623, 0.81 ) }
    dend_20 { pt3dadd( 55.1692, -15.6492, -21.2587, 0.59 ) }
    dend_20 { pt3dadd( 56.0321, -16.2238, -21.8859, 0.88 ) }
    dend_20 { pt3dadd( 56.7386, -16.6667, -22.4055, 0.96 ) }
    dend_20 { pt3dadd( 57.7131, -17.1463, -23.1176, 0.66 ) }
    dend_20 { pt3dadd( 59.1904, -17.7138, -24.1818, 0.22 ) }
    dend_20 { pt3dadd( 60.2895, -18.0278, -24.9418, 0.15 ) }
    dend_20 { pt3dadd( 61.2996, -18.2373, -25.5806, 0.15 ) }
    dend_20 { pt3dadd( 62.0651, -18.331, -26.0194, 1.4 ) }
    dend_20 { pt3dadd( 63.4998, -18.3922, -26.717, 0.22 ) }
    dend_20 { pt3dadd( 64.5906, -18.3854, -27.1306, 0.22 ) }
    dend_20 { pt3dadd( 65.1337, -18.3805, -27.2778, 0.22 ) }
    dend_20 { pt3dadd( 66.2223, -18.5092, -27.4844, 0.66 ) }
    dend_20 { pt3dadd( 66.9695, -18.781, -27.5353, 0.66 ) }
    dend_20 { pt3dadd( 67.7641, -19.5036, -27.5314, 0.22 ) }
    dend_20 { pt3dadd( 68.038, -20.2073, -27.5253, 0.22 ) }
    dend_20 { pt3dadd( 68.1667, -20.8316, -27.5865, 0.22 ) }
    dend_20 { pt3dadd( 68.3508, -21.8098, -27.7629, 0.22 ) }
    dend_20 { pt3dadd( 68.5825, -22.8782, -28.027, 0.96 ) }
    dend_20 { pt3dadd( 68.8638, -23.8022, -28.28, 1.25 ) }
    dend_20 { pt3dadd( 69.3727, -24.8764, -28.6052, 0.22 ) }
    dend_20 { pt3dadd( 70.0956, -25.8985, -28.9238, 0.22 ) }
    dend_20 { pt3dadd( 70.6833, -26.5634, -29.1256, 0.29 ) }
    dend_20 { pt3dadd( 71.3054, -27.1558, -29.317, 0.81 ) }
    dend_20 { pt3dadd( 72.1259, -27.8396, -29.5594, 0.88 ) }
    dend_20 { pt3dadd( 73.1546, -28.6091, -29.8269, 1.03 ) }
    dend_20 { pt3dadd( 74.0333, -29.1853, -30.0426, 0.66 ) }
    dend_20 { pt3dadd( 75.1529, -29.8884, -30.2961, 0.22 ) }
    dend_20 { pt3dadd( 76.0416, -30.4122, -30.4877, 0.44 ) }
    dend_20 { pt3dadd( 76.865, -30.868, -30.642, 0.88 ) }
    dend_20 { pt3dadd( 77.7977, -31.3687, -30.7762, 0.96 ) }
    dend_20 { pt3dadd( 78.87, -31.9725, -30.8983, 1.55 ) }
    dend_20 { pt3dadd( 80.0263, -32.6761, -31.029, 0.29 ) }
    dend_20 { pt3dadd( 81.0085, -33.3437, -31.1882, 0.15 ) }
    dend_20 { pt3dadd( 81.6465, -33.9389, -31.359, 0.22 ) }
    dend_20 { pt3dadd( 82.2736, -34.7551, -31.6736, 0.66 ) }
    dend_20 { pt3dadd( 82.9875, -35.9558, -32.2406, 0.22 ) }
    dend_20 { pt3dadd( 83.4971, -36.9788, -32.7826, 0.59 ) }
    dend_20 { pt3dadd( 83.8589, -37.7315, -33.2366, 0.88 ) }
    dend_20 { pt3dadd( 84.4223, -38.8535, -33.952, 0.22 ) }
    dend_20 { pt3dadd( 84.9459, -39.7113, -34.5013, 0.29 ) }
    dend_20 { pt3dadd( 85.4816, -40.392, -34.9064, 0.29 ) }
    dend_20 { pt3dadd( 85.8781, -40.7695, -35.0967, 0.74 ) }
    dend_20 { pt3dadd( 86.7276, -41.37, -35.3095, 1.18 ) }
    dend_20 { pt3dadd( 87.5245, -41.7962, -35.361, 1.25 ) }
    dend_20 { pt3dadd( 88.9964, -42.4085, -35.2865, 0.52 ) }
    dend_20 { pt3dadd( 89.9388, -42.7809, -35.169, 0.22 ) }
    dend_20 { pt3dadd( 91.0273, -43.2325, -34.9974, 0.22 ) }
    dend_20 { pt3dadd( 92.1403, -43.8175, -34.8302, 0.29 ) }
    dend_20 { pt3dadd( 93.2951, -44.6072, -34.6756, 0.22 ) }
    dend_20 { pt3dadd( 93.9754, -45.1946, -34.5996, 1.25 ) }
    dend_20 { pt3dadd( 94.4718, -45.7408, -34.5632, 1.03 ) }
    dend_20 { pt3dadd( 95.0996, -46.5357, -34.5384, 1.18 ) }
    dend_20 { pt3dadd( 96.3796, -48.2923, -34.5011, 0.22 ) }
    dend_20 { pt3dadd( 96.9514, -49.0835, -34.4955, 0.22 ) }
    dend_20 { pt3dadd( 97.1887, -49.3618, -34.4886, 0.22 ) }
    dend_20 { pt3dadd( 97.9833, -50.1169, -34.4113, 0.29 ) }
    dend_20 { pt3dadd( 98.8661, -50.8127, -34.2793, 0.22 ) }
    dend_20 { pt3dadd( 99.7144, -51.3943, -34.1227, 0.81 ) }
    dend_20 { pt3dadd( 100.208, -51.7174, -33.999, 1.11 ) }
    dend_20 { pt3dadd( 101.447, -52.5637, -33.6929, 0.22 ) }
    dend_20 { pt3dadd( 102.034, -52.9883, -33.5578, 0.22 ) }
    dend_20 { pt3dadd( 102.792, -53.5501, -33.4174, 0.88 ) }
    dend_20 { pt3dadd( 103.281, -53.9134, -33.3533, 0.88 ) }
    dend_20 { pt3dadd( 104.44, -54.7271, -33.3268, 0.22 ) }
    dend_20 { pt3dadd( 105.166, -55.2248, -33.4345, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_20 { pt3dadd( 105.803, -55.6244, -33.6714, 0.88 ) }
    dend_20 { pt3dadd( 106.875, -56.1503, -34.2584, 1.03 ) }
    dend_20 { pt3dadd( 107.434, -56.3163, -34.666, 0.59 ) }
    dend_20 { pt3dadd( 108.251, -56.4274, -35.3663, 0.22 ) }
    dend_20 { pt3dadd( 109.254, -56.4206, -36.3348, 0.22 ) }
    dend_20 { pt3dadd( 109.732, -56.3864, -36.8245, 0.22 ) }
    dend_20 { pt3dadd( 110.083, -56.3618, -37.1556, 0.22 ) }
    dend_20 { pt3dadd( 110.955, -56.3185, -37.9314, 0.22 ) }
    dend_20 { pt3dadd( 111.315, -56.3273, -38.2328, 0.22 ) }
    dend_20 { pt3dadd( 111.778, -56.3893, -38.5729, 0.81 ) }
    dend_20 { pt3dadd( 112.399, -56.582, -38.982, 1.18 ) }
    dend_20 { pt3dadd( 114.19, -57.3591, -40.1048, 0.15 ) }
    dend_20 { pt3dadd( 114.836, -57.6958, -40.4888, 0.15 ) }
    dend_20 { pt3dadd( 115.657, -58.1383, -40.9437, 1.03 ) }
    dend_20 { pt3dadd( 116.265, -58.4727, -41.2828, 1.33 ) }
    dend_20 { pt3dadd( 117.616, -59.2384, -42.0152, 0.07 ) }
    dend_20 { pt3dadd( 118.178, -59.5575, -42.3092, 0.22 ) }
    dend_20 { pt3dadd( 118.495, -59.7304, -42.4559, 0.22 ) }
    dend_20 { pt3dadd( 119.781, -60.3114, -42.9109, 0.15 ) }
    dend_20 { pt3dadd( 120.516, -60.5628, -43.1088, 0.15 ) }
    dend_20 { pt3dadd( 121.614, -60.8279, -43.3753, 0.15 ) }
    dend_20 { pt3dadd( 131.693, -66.2402, -45.3491, 0.15 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 38.9852, -14.0739, -6.80498, 0.22 ) }
    dend_18 { pt3dadd( 39.7426, -13.611, -6.10314, 0.22 ) }
    dend_18 { pt3dadd( 40.2174, -13.3837, -5.63546, 0.22 ) }
    dend_18 { pt3dadd( 40.7861, -13.1689, -5.06773, 0.22 ) }
    dend_18 { pt3dadd( 41.3665, -12.9977, -4.53115, 0.66 ) }
    dend_18 { pt3dadd( 42.0704, -12.862, -3.94646, 0.66 ) }
    dend_18 { pt3dadd( 42.9081, -12.7654, -3.34, 0.22 ) }
    dend_18 { pt3dadd( 43.488, -12.7844, -2.98152, 0.22 ) }
    dend_18 { pt3dadd( 43.7505, -12.8331, -2.85949, 0.22 ) }
    dend_18 { pt3dadd( 44.6457, -13.1269, -2.59379, 0.44 ) }
    dend_18 { pt3dadd( 45.5822, -13.5369, -2.4103, 0.88 ) }
    dend_18 { pt3dadd( 46.5603, -13.9918, -2.25097, 0.22 ) }
    dend_18 { pt3dadd( 47.2713, -14.2811, -2.13598, 0.22 ) }
    dend_18 { pt3dadd( 48.1961, -14.5832, -1.97951, 0.29 ) }
    dend_18 { pt3dadd( 49.0782, -14.7853, -1.81493, 0.15 ) }
    dend_18 { pt3dadd( 49.7758, -14.8845, -1.64326, 0.52 ) }
    dend_18 { pt3dadd( 51.3433, -14.9527, -1.13725, 0.37 ) }
    dend_18 { pt3dadd( 52.4235, -14.9127, -0.716506, 0.22 ) }
    dend_18 { pt3dadd( 53.2487, -14.8234, -0.353231, 1.03 ) }
    dend_18 { pt3dadd( 54.3174, -14.6118, 0.176554, 0.29 ) }
    dend_18 { pt3dadd( 55.1004, -14.3917, 0.607129, 0.22 ) }
    dend_18 { pt3dadd( 56.0301, -14.074, 1.15243, 0.22 ) }
    dend_18 { pt3dadd( 56.4232, -13.9266, 1.37159, 0.22 ) }
    dend_18 { pt3dadd( 57.1069, -13.6704, 1.73657, 0.22 ) }
    dend_18 { pt3dadd( 57.9544, -13.3729, 2.10058, 0.22 ) }
    dend_18 { pt3dadd( 58.7467, -13.1279, 2.32928, 0.66 ) }
    dend_18 { pt3dadd( 59.7721, -12.8532, 2.56385, 0.22 ) }
    dend_18 { pt3dadd( 61.0086, -12.5671, 2.85726, 0.66 ) }
    dend_18 { pt3dadd( 61.6731, -12.4552, 3.02593, 0.81 ) }
    dend_18 { pt3dadd( 63.0613, -12.3159, 3.36075, 0.22 ) }
    dend_18 { pt3dadd( 63.7308, -12.281, 3.55095, 0.22 ) }
    dend_18 { pt3dadd( 65.0441, -12.2517, 3.962, 0.37 ) }
    dend_18 { pt3dadd( 65.9268, -12.2317, 4.2942, 0.74 ) }
    dend_18 { pt3dadd( 66.6508, -12.2087, 4.6184, 0.74 ) }
    dend_18 { pt3dadd( 67.4663, -12.1635, 4.99354, 0.59 ) }
    dend_18 { pt3dadd( 68.9095, -12.0303, 5.5987, 0.74 ) }
    dend_18 { pt3dadd( 70.0481, -11.9009, 5.94452, 0.07 ) }
    dend_18 { pt3dadd( 71.2907, -11.7545, 6.15953, 0.07 ) }
    dend_18 { pt3dadd( 71.688, -11.7109, 6.19082, 0.59 ) }
    dend_18 { pt3dadd( 72.4191, -11.6516, 6.16609, 0.59 ) }
    dend_18 { pt3dadd( 73.6334, -11.5589, 5.98181, 0.15 ) }
    dend_18 { pt3dadd( 74.4649, -11.5018, 5.721, 0.15 ) }
    dend_18 { pt3dadd( 75.1423, -11.4529, 5.45395, 0.37 ) }
    dend_18 { pt3dadd( 75.9874, -11.4311, 5.10035, 0.81 ) }
    dend_18 { pt3dadd( 77.5183, -11.4218, 4.42645, 0.07 ) }
    dend_18 { pt3dadd( 78.3777, -11.4535, 4.04385, 0.44 ) }
    dend_18 { pt3dadd( 79.4845, -11.5005, 3.55421, 0.22 ) }
    dend_18 { pt3dadd( 80.5258, -11.5276, 3.08314, 0.96 ) }
    dend_18 { pt3dadd( 82.0721, -11.5715, 2.33092, 0.15 ) }
    dend_18 { pt3dadd( 82.8418, -11.6254, 1.93866, 0.15 ) }
    dend_18 { pt3dadd( 83.6054, -11.7046, 1.53204, 0.44 ) }
    dend_18 { pt3dadd( 84.6238, -11.8285, 0.926569, 0.29 ) }
    dend_18 { pt3dadd( 84.9109, -11.848, 0.733733, 0.29 ) }
    dend_18 { pt3dadd( 85.2157, -11.8346, 0.467694, 0.29 ) }
    dend_18 { pt3dadd( 85.7186, -11.7355, -0.0231402, 0.22 ) }
    dend_18 { pt3dadd( 86.2903, -11.6165, -0.495889, 0.22 ) }
    dend_18 { pt3dadd( 87.0354, -11.4779, -0.933796, 0.22 ) }
    dend_18 { pt3dadd( 87.546, -11.4063, -1.14939, 0.22 ) }
    dend_18 { pt3dadd( 87.9837, -11.3673, -1.30718, 0.22 ) }
    dend_18 { pt3dadd( 88.891, -11.3414, -1.56681, 0.07 ) }
    dend_18 { pt3dadd( 90.0292, -11.3805, -1.82481, 0.96 ) }
    dend_18 { pt3dadd( 91.7295, -11.6379, -2.1072, 0.07 ) }
    dend_18 { pt3dadd( 92.0536, -11.7473, -2.14592, 0.07 ) }
    dend_18 { pt3dadd( 92.9167, -12.1923, -2.23872, 0.07 ) }
    dend_18 { pt3dadd( 93.8048, -12.882, -2.3375, 0.07 ) }
    dend_18 { pt3dadd( 94.1715, -13.3056, -2.38773, 0.88 ) }
    dend_18 { pt3dadd( 94.717, -14.1008, -2.47234, 0.37 ) }
    dend_18 { pt3dadd( 95.6006, -15.7346, -2.67249, 0.22 ) }
    dend_18 { pt3dadd( 95.8477, -16.2463, -2.7264, 0.29 ) }
    dend_18 { pt3dadd( 96.3395, -17.435, -2.80651, 0.07 ) }
    dend_18 { pt3dadd( 96.5409, -18.0677, -2.85968, 0.07 ) }
    dend_18 { pt3dadd( 107.029, -18.3577, -3.63249, 0.07 ) }
    dend_18 { pt3dadd( 117.453, -18.2994, -2.1511, 0.07 ) }
    dend_18 { pt3dadd( 127.833, -19.9762, -2.39328, 0.07 ) }
    dend_18 { pt3dadd( 137.656, -23.2265, -4.39578, 0.07 ) }
    dend_18 { pt3dadd( 147.745, -26.1918, -4.92791, 0.07 ) }
    dend_18 { pt3dadd( 158.084, -27.0429, -6.66409, 0.07 ) }
    dend_18 { pt3dadd( 167.905, -25.5405, -10.18, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 0/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 38.9852, -14.0739, -6.80498, 0.74 ) }
    dend_17 { pt3dadd( 38.8921, -15.429, -6.48221, 0.74 ) }
    dend_17 { pt3dadd( 38.8433, -16.5291, -6.22437, 0.44 ) }
    dend_17 { pt3dadd( 38.8692, -17.4938, -5.97097, 0.22 ) }
    dend_17 { pt3dadd( 38.9307, -18.1189, -5.78425, 0.22 ) }
    dend_17 { pt3dadd( 38.9941, -18.4261, -5.67268, 0.22 ) }
    dend_17 { pt3dadd( 39.2057, -19.1319, -5.39875, 0.22 ) }
    dend_17 { pt3dadd( 39.4436, -19.6246, -5.20611, 0.22 ) }
    dend_17 { pt3dadd( 39.8714, -20.2695, -4.92851, 0.88 ) }
    dend_17 { pt3dadd( 40.1355, -20.5875, -4.77581, 0.81 ) }
    dend_17 { pt3dadd( 40.9545, -21.4347, -4.32548, 0.22 ) }
    dend_17 { pt3dadd( 41.5816, -22.0182, -4.04949, 0.74 ) }
    dend_17 { pt3dadd( 42.0662, -22.4503, -3.90711, 0.81 ) }
    dend_17 { pt3dadd( 42.8306, -23.1854, -3.77827, 0.15 ) }
    dend_17 { pt3dadd( 43.2338, -23.631, -3.77627, 0.15 ) }
    dend_17 { pt3dadd( 43.5287, -23.9979, -3.81283, 0.22 ) }
    dend_17 { pt3dadd( 44.0939, -24.7977, -3.92366, 0.22 ) }
    dend_17 { pt3dadd( 44.7345, -25.783, -3.97763, 0.22 ) }
    dend_17 { pt3dadd( 45.2192, -26.5122, -3.95289, 0.66 ) }
    dend_17 { pt3dadd( 45.7716, -27.278, -3.84878, 0.88 ) }
    dend_17 { pt3dadd( 46.3224, -28.016, -3.68884, 0.74 ) }
    dend_17 { pt3dadd( 46.9199, -28.8162, -3.46107, 0.74 ) }
    dend_17 { pt3dadd( 47.6862, -29.803, -3.0801, 0.22 ) }
    dend_17 { pt3dadd( 48.3324, -30.5452, -2.7439, 0.15 ) }
    dend_17 { pt3dadd( 48.8227, -31.048, -2.52796, 0.15 ) }
    dend_17 { pt3dadd( 49.3286, -31.5267, -2.35162, 0.22 ) }
    dend_17 { pt3dadd( 49.9678, -32.1033, -2.16667, 0.15 ) }
    dend_17 { pt3dadd( 50.2897, -32.3835, -2.09315, 0.15 ) }
    dend_17 { pt3dadd( 50.8692, -32.8786, -1.95349, 0.59 ) }
    dend_17 { pt3dadd( 52.0478, -33.8609, -1.61772, 0.22 ) }
    dend_17 { pt3dadd( 52.658, -34.3218, -1.4324, 0.22 ) }
    dend_17 { pt3dadd( 53.4796, -34.9139, -1.14849, 0.22 ) }
    dend_17 { pt3dadd( 53.9824, -35.2665, -0.968011, 0.37 ) }
    dend_17 { pt3dadd( 54.977, -35.9571, -0.605257, 0.88 ) }
    dend_17 { pt3dadd( 55.5781, -36.3598, -0.381527, 0.74 ) }
    dend_17 { pt3dadd( 56.8985, -37.1788, 0.108836, 0.22 ) }
    dend_17 { pt3dadd( 57.7645, -37.6834, 0.41564, 0.29 ) }
    dend_17 { pt3dadd( 58.4083, -38.0494, 0.634339, 0.59 ) }
    dend_17 { pt3dadd( 59.0462, -38.409, 0.86997, 0.07 ) }
    dend_17 { pt3dadd( 59.446, -38.6548, 1.04193, 0.07 ) }
    dend_17 { pt3dadd( 59.9348, -38.9635, 1.27847, 0.59 ) }
    dend_17 { pt3dadd( 60.8552, -39.5643, 1.70177, 0.15 ) }
    dend_17 { pt3dadd( 61.5047, -40.0076, 1.94325, 0.66 ) }
    dend_17 { pt3dadd( 62.4234, -40.6846, 2.20853, 0.96 ) }
    dend_17 { pt3dadd( 63.7055, -41.7025, 2.46699, 0.29 ) }
    dend_17 { pt3dadd( 64.5555, -42.4284, 2.55907, 0.29 ) }
    dend_17 { pt3dadd( 65.7139, -43.5013, 2.63377, 0.66 ) }
    dend_17 { pt3dadd( 66.7872, -44.578, 2.66854, 0.22 ) }
    dend_17 { pt3dadd( 67.4287, -45.2726, 2.66968, 0.22 ) }
    dend_17 { pt3dadd( 68.1525, -46.1391, 2.64827, 0.37 ) }
    dend_17 { pt3dadd( 68.9184, -47.1734, 2.62265, 0.29 ) }
    dend_17 { pt3dadd( 69.6102, -48.3007, 2.63039, 0.22 ) }
    dend_17 { pt3dadd( 70.3022, -49.7392, 2.72567, 0.74 ) }
    dend_17 { pt3dadd( 70.6686, -50.6953, 2.82047, 0.44 ) }
    dend_17 { pt3dadd( 71.0331, -51.7773, 2.94195, 0.15 ) }
    dend_17 { pt3dadd( 71.321, -52.6861, 3.0364, 0.44 ) }
    dend_17 { pt3dadd( 71.481, -53.1888, 3.09372, 0.44 ) }
    dend_17 { pt3dadd( 71.9426, -54.5956, 3.25268, 0.22 ) }
    dend_17 { pt3dadd( 72.4709, -56.1137, 3.45624, 1.11 ) }
    dend_17 { pt3dadd( 73.3051, -58.3257, 3.79582, 0.15 ) }
    dend_17 { pt3dadd( 73.6003, -59.0459, 3.92794, 0.29 ) }
    dend_17 { pt3dadd( 74.1739, -60.3138, 4.17839, 0.15 ) }
    dend_17 { pt3dadd( 74.443, -60.8823, 4.30396, 0.29 ) }
    dend_17 { pt3dadd( 74.9434, -61.8623, 4.55809, 0.74 ) }
    dend_17 { pt3dadd( 75.3582, -62.6362, 4.83985, 0.22 ) }
    dend_17 { pt3dadd( 75.7914, -63.4449, 5.23929, 0.22 ) }
    dend_17 { pt3dadd( 76.2886, -64.3569, 5.80559, 0.29 ) }
    dend_17 { pt3dadd( 76.6663, -65.0265, 6.31778, 0.22 ) }
    dend_17 { pt3dadd( 77.0679, -65.7223, 6.98874, 0.59 ) }
    dend_17 { pt3dadd( 77.4779, -66.3981, 7.85263, 0.22 ) }
    dend_17 { pt3dadd( 77.9395, -67.0986, 8.97321, 0.74 ) }
    dend_17 { pt3dadd( 78.3475, -67.7002, 10.12, 0.59 ) }
    dend_17 { pt3dadd( 78.7056, -68.222, 11.2527, 0.37 ) }
    dend_17 { pt3dadd( 79.0249, -68.6753, 12.3241, 0.15 ) }
    dend_17 { pt3dadd( 79.4014, -69.1908, 13.5118, 0.22 ) }
    dend_17 { pt3dadd( 79.4893, -69.3043, 13.7758, 0.22 ) }
    dend_17 { pt3dadd( 79.8204, -69.6887, 14.7049, 0.22 ) }
    dend_17 { pt3dadd( 80.2103, -70.1241, 15.7762, 0.59 ) }
    dend_17 { pt3dadd( 80.5089, -70.4354, 16.5707, 1.03 ) }
    dend_17 { pt3dadd( 81.069, -71.0349, 18.0891, 0.22 ) }
    dend_17 { pt3dadd( 81.4577, -71.4639, 19.1401, 0.22 ) }
    dend_17 { pt3dadd( 81.8359, -71.8806, 20.179, 0.22 ) }
    dend_17 { pt3dadd( 82.2591, -72.321, 21.3289, 0.15 ) }
    dend_17 { pt3dadd( 82.5556, -72.6235, 22.0937, 0.44 ) }
    dend_17 { pt3dadd( 83.1296, -73.2316, 23.4477, 0.37 ) }
    dend_17 { pt3dadd( 83.8938, -74.0787, 25.1645, 0.15 ) }
    dend_17 { pt3dadd( 84.3159, -74.5308, 25.9519, 0.29 ) }
    dend_17 { pt3dadd( 84.965, -75.212, 26.9826, 0.81 ) }
    dend_17 { pt3dadd( 85.8766, -76.1295, 28.1835, 0.22 ) }
    dend_17 { pt3dadd( 86.3996, -76.6175, 28.7547, 0.15 ) }
    dend_17 { pt3dadd( 87.0715, -77.1748, 29.3565, 0.15 ) }
    dend_17 { pt3dadd( 87.9138, -77.8132, 30.0003, 0.15 ) }
    dend_17 { pt3dadd( 88.3251, -78.1208, 30.2539, 0.52 ) }
    dend_17 { pt3dadd( 88.8625, -78.5291, 30.5363, 0.52 ) }
    dend_17 { pt3dadd( 90.2937, -79.6388, 31.208, 0.07 ) }
    dend_17 { pt3dadd( 91.0603, -80.2538, 31.5341, 0.22 ) }
    dend_17 { pt3dadd( 92.0455, -81.1023, 31.9113, 0.29 ) }
    dend_17 { pt3dadd( 94.1276, -83.073, 32.7236, 0.07 ) }
    dend_17 { pt3dadd( 94.603, -83.5464, 32.9052, 0.07 ) }
    dend_17 { pt3dadd( 95.0504, -84.0127, 33.0686, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_17 { pt3dadd( 95.604, -84.625, 33.2855, 0.37 ) }
    dend_17 { pt3dadd( 96.8716, -86.116, 34.002, 0.07 ) }
    dend_17 { pt3dadd( 97.4796, -86.8916, 34.4976, 0.07 ) }
    dend_17 { pt3dadd( 97.9196, -87.4894, 34.9803, 0.52 ) }
    dend_17 { pt3dadd( 98.137, -87.799, 35.2551, 0.52 ) }
    dend_17 { pt3dadd( 98.9614, -89.053, 36.4046, 0.22 ) }
    dend_17 { pt3dadd( 99.8107, -90.5301, 37.7116, 0.07 ) }
    dend_17 { pt3dadd( 100.344, -91.5752, 38.5923, 0.07 ) }
    dend_17 { pt3dadd( 100.58, -92.0731, 38.9934, 0.29 ) }
    dend_17 { pt3dadd( 101.25, -93.3835, 39.9633, 0.07 ) }
    dend_17 { pt3dadd( 101.814, -94.348, 40.5864, 0.29 ) }
    dend_17 { pt3dadd( 102.978, -96.0809, 41.4467, 0.07 ) }
    dend_17 { pt3dadd( 103.595, -96.8614, 41.7132, 0.22 ) }
    dend_17 { pt3dadd( 104.26, -97.5614, 41.8456, 0.22 ) }
    dend_17 { pt3dadd( 106.003, -99.1566, 41.7789, 0.07 ) }
    dend_17 { pt3dadd( 106.974, -99.9261, 41.4714, 0.07 ) }
    dend_17 { pt3dadd( 107.442, -100.296, 41.2355, 0.07 ) }
    dend_17 { pt3dadd( 108.283, -101.017, 40.6283, 0.15 ) }
    dend_17 { pt3dadd( 109.058, -101.88, 39.8017, 0.07 ) }
    dend_17 { pt3dadd( 109.536, -102.614, 39.0409, 0.22 ) }
    dend_17 { pt3dadd( 109.811, -103.276, 38.3584, 0.22 ) }
    dend_17 { pt3dadd( 110.097, -104.176, 37.3568, 0.07 ) }
    dend_17 { pt3dadd( 110.278, -104.928, 36.4567, 0.44 ) }
    dend_17 { pt3dadd( 110.477, -106.113, 34.9194, 0.15 ) }
    dend_17 { pt3dadd( 110.567, -106.923, 33.8337, 0.52 ) }
    dend_17 { pt3dadd( 110.606, -107.339, 33.2465, 0.52 ) }
    dend_17 { pt3dadd( 110.66, -107.948, 32.3749, 0.52 ) }
    dend_17 { pt3dadd( 110.739, -108.726, 31.2527, 0.15 ) }
    dend_17 { pt3dadd( 110.846, -109.59, 30.0904, 0.15 ) }
    dend_17 { pt3dadd( 110.894, -109.895, 29.7268, 0.29 ) }
    dend_17 { pt3dadd( 111.122, -111.127, 28.3599, 0.15 ) }
    dend_17 { pt3dadd( 111.229, -111.69, 27.7483, 0.37 ) }
    dend_17 { pt3dadd( 111.41, -112.483, 26.9171, 0.22 ) }
    dend_17 { pt3dadd( 111.579, -113.099, 26.2587, 0.07 ) }
    dend_17 { pt3dadd( 111.815, -113.891, 25.4158, 0.22 ) }
    dend_17 { pt3dadd( 112.196, -115.133, 24.0632, 0.07 ) }
    dend_17 { pt3dadd( 112.583, -116.374, 22.7171, 0.07 ) }
    dend_17 { pt3dadd( 112.962, -117.565, 21.4113, 0.07 ) }
    dend_17 { pt3dadd( 113.18, -118.249, 20.6676, 0.22 ) }
    dend_17 { pt3dadd( 113.418, -118.997, 19.8628, 0.07 ) }
    dend_17 { pt3dadd( 113.605, -119.547, 19.2463, 0.15 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 41/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -60.6897, 52.1467, -5.80016, 0.22 ) }
    dend_12 { pt3dadd( -61.7574, 52.853, -5.19816, 0.22 ) }
    dend_12 { pt3dadd( -62.1633, 53.0582, -5.02647, 0.22 ) }
    dend_12 { pt3dadd( -62.8739, 53.3878, -4.7965, 0.52 ) }
    dend_12 { pt3dadd( -63.2955, 53.5813, -4.68036, 0.52 ) }
    dend_12 { pt3dadd( -64.3647, 54.0962, -4.41901, 0.15 ) }
    dend_12 { pt3dadd( -65.0847, 54.434, -4.25277, 0.66 ) }
    dend_12 { pt3dadd( -65.8876, 54.7768, -4.11213, 0.22 ) }
    dend_12 { pt3dadd( -66.9505, 55.2439, -3.9425, 0.07 ) }
    dend_12 { pt3dadd( -67.6874, 55.5503, -3.83734, 0.07 ) }
    dend_12 { pt3dadd( -68.4097, 55.8459, -3.73294, 0.52 ) }
    dend_12 { pt3dadd( -69.5026, 56.3038, -3.56488, 0.07 ) }
    dend_12 { pt3dadd( -70.4437, 56.6785, -3.3832, 0.07 ) }
    dend_12 { pt3dadd( -70.9256, 56.8418, -3.26213, 0.59 ) }
    dend_12 { pt3dadd( -71.7517, 57.0473, -3.0092, 0.07 ) }
    dend_12 { pt3dadd( -72.4525, 57.1933, -2.75261, 0.15 ) }
    dend_12 { pt3dadd( -73.1183, 57.3101, -2.44386, 0.37 ) }
    dend_12 { pt3dadd( -73.7475, 57.418, -2.04747, 0.59 ) }
    dend_12 { pt3dadd( -74.3581, 57.4939, -1.51829, 0.22 ) }
    dend_12 { pt3dadd( -74.7713, 57.5442, -1.08903, 0.22 ) }
    dend_12 { pt3dadd( -75.3499, 57.6043, -0.439676, 0.22 ) }
    dend_12 { pt3dadd( -75.7772, 57.5953, 0.0787878, 0.22 ) }
    dend_12 { pt3dadd( -76.3886, 57.4852, 0.849287, 0.44 ) }
    dend_12 { pt3dadd( -76.839, 57.3324, 1.39468, 0.44 ) }
    dend_12 { pt3dadd( -77.3541, 57.1174, 1.91019, 0.22 ) }
    dend_12 { pt3dadd( -78.1994, 56.7189, 2.60203, 0.07 ) }
    dend_12 { pt3dadd( -78.8144, 56.4427, 2.99874, 0.07 ) }
    dend_12 { pt3dadd( -79.3211, 56.2333, 3.25444, 0.07 ) }
    dend_12 { pt3dadd( -79.7897, 56.1075, 3.41279, 0.07 ) }
    dend_12 { pt3dadd( -80.6222, 55.9539, 3.62263, 0.07 ) }
    dend_12 { pt3dadd( -81.188, 55.8785, 3.73723, 0.29 ) }
    dend_12 { pt3dadd( -82.1763, 55.8234, 3.90236, 0.66 ) }
    dend_12 { pt3dadd( -82.9137, 55.8117, 4.01913, 0.88 ) }
    dend_12 { pt3dadd( -84.6897, 55.8258, 4.2943, 0.22 ) }
    dend_12 { pt3dadd( -85.7715, 55.8456, 4.45536, 0.15 ) }
    dend_12 { pt3dadd( -86.7185, 55.8786, 4.59317, 0.22 ) }
    dend_12 { pt3dadd( -87.4623, 55.9359, 4.6588, 0.07 ) }
    dend_12 { pt3dadd( -88.0111, 55.9974, 4.67479, 0.07 ) }
    dend_12 { pt3dadd( -88.664, 56.0884, 4.66131, 0.59 ) }
    dend_12 { pt3dadd( -89.3136, 56.2037, 4.62728, 0.07 ) }
    dend_12 { pt3dadd( -90.0142, 56.3819, 4.55025, 0.52 ) }
    dend_12 { pt3dadd( -91.3244, 56.7595, 4.32082, 0.07 ) }
    dend_12 { pt3dadd( -91.7386, 56.8779, 4.20643, 0.07 ) }
    dend_12 { pt3dadd( -92.4084, 57.102, 3.94561, 0.22 ) }
    dend_12 { pt3dadd( -101.738, 57.6107, 7.34759, 0.22 ) }
    dend_12 { pt3dadd( -110.875, 57.9754, 11.2482, 0.22 ) }
    dend_12 { pt3dadd( -119.172, 59.8257, 16.4522, 0.22 ) }
    dend_12 { pt3dadd( -127.162, 60.2823, 22.3555, 0.22 ) }
    dend_12 { pt3dadd( -135.002, 59.1522, 28.3584, 0.22 ) }
    dend_12 { pt3dadd( -143.922, 57.7588, 32.5228, 0.22 ) }
    dend_12 { pt3dadd( -152.079, 54.9754, 37.5153, 0.22 ) }
    dend_12 { pt3dadd( -159.681, 51.385, 42.8909, 0.22 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 93/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -60.6897, 52.1467, -5.80016, 0.15 ) }
    dend_11 { pt3dadd( -61.4474, 52.1147, -5.81057, 0.15 ) }
    dend_11 { pt3dadd( -62.0986, 52.0803, -5.81906, 0.15 ) }
    dend_11 { pt3dadd( -62.7217, 52.0683, -5.84058, 0.15 ) }
    dend_11 { pt3dadd( -63.1053, 52.0657, -5.85562, 0.15 ) }
    dend_11 { pt3dadd( -63.8942, 52.0778, -5.89262, 0.15 ) }
    dend_11 { pt3dadd( -64.4297, 52.0747, -5.92133, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_11 { pt3dadd( -65.0677, 52.0499, -5.96518, 0.81 ) }
    dend_11 { pt3dadd( -65.844, 51.9811, -6.0205, 0.15 ) }
    dend_11 { pt3dadd( -66.4876, 51.9196, -6.06416, 0.44 ) }
    dend_11 { pt3dadd( -67.3664, 51.8456, -6.12057, 0.15 ) }
    dend_11 { pt3dadd( -68.0532, 51.8019, -6.15989, 0.15 ) }
    dend_11 { pt3dadd( -68.4681, 51.7702, -6.18504, 0.15 ) }
    dend_11 { pt3dadd( -68.8453, 51.7346, -6.20726, 0.15 ) }
    dend_11 { pt3dadd( -69.9166, 51.5972, -6.25334, 0.07 ) }
    dend_11 { pt3dadd( -70.4159, 51.5403, -6.27604, 0.07 ) }
    dend_11 { pt3dadd( -70.9193, 51.5051, -6.29134, 0.15 ) }
    dend_11 { pt3dadd( -78.1134, 50.6497, -5.92942, 0.15 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 11/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -52.9397, -27.4097, 21.6065, 0.15 ) }
    dend_7 { pt3dadd( -52.6108, -28.3777, 22.9229, 0.15 ) }
    dend_7 { pt3dadd( -52.3376, -29.182, 24.0166, 0.66 ) }
    dend_7 { pt3dadd( -52.1006, -29.8797, 24.9655, 0.44 ) }
    dend_7 { pt3dadd( -51.6605, -31.1754, 26.7276, 0.15 ) }
    dend_7 { pt3dadd( -51.3217, -32.1727, 28.0838, 0.15 ) }
    dend_7 { pt3dadd( -50.888, -33.4493, 29.8199, 0.07 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 18/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -52.9397, -27.4097, 21.6065, 0.29 ) }
    dend_6 { pt3dadd( -54.3569, -28.1251, 21.4885, 0.29 ) }
    dend_6 { pt3dadd( -55.1898, -28.5667, 21.4097, 0.15 ) }
    dend_6 { pt3dadd( -56.0007, -29.0419, 21.3384, 0.22 ) }
    dend_6 { pt3dadd( -56.9547, -29.601, 21.2545, 0.07 ) }
    dend_6 { pt3dadd( -57.7194, -30.0492, 21.1873, 0.52 ) }
    dend_6 { pt3dadd( -58.4592, -30.4827, 21.1223, 0.15 ) }
    dend_6 { pt3dadd( -59.3744, -31.0092, 21.0171, 0.29 ) }
    dend_6 { pt3dadd( -60.2502, -31.5402, 20.9019, 0.07 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 27/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 64.1266, 27.9277, -27.5416, 0.15 ) }
    dend_23 { pt3dadd( 69.174, 38.0959, -28.1615, 0.15 ) }
    dend_23 { pt3dadd( 73.5592, 48.561, -28.9959, 0.15 ) }
    dend_23 { pt3dadd( 77.2578, 59.2739, -30.0415, 0.15 ) }
    dend_23 { pt3dadd( 79.5279, 70.1726, -32.2376, 0.15 ) }
    dend_23 { pt3dadd( 80.5929, 80.9281, -35.5164, 0.15 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 33/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 64.1266, 27.9277, -27.5416, 0.29 ) }
    dend_22 { pt3dadd( 66.6996, 34.6165, -29.6893, 0.15 ) }
    dend_22 { pt3dadd( 68.9434, 41.0737, -32.6982, 0.15 ) }
    dend_22 { pt3dadd( 70.4466, 47.5524, -36.1081, 0.15 ) }
    dend_22 { pt3dadd( 71.2063, 53.7265, -40.2159, 0.15 ) }
    dend_22 { pt3dadd( 71.5416, 60.7338, -42.9086, 0.15 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_34, dend_33, dend_24, dend_13, dend_2, dend_1, dend_0, dend_36, dend_35, dend_30, dend_25, dend_15, dend_14, dend_8, dend_3, dend_38, dend_37, dend_32, dend_31, dend_27, dend_26, dend_19, dend_16, dend_10, dend_9, dend_5, dend_4, dend_29, dend_28, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_6, dend_23, dend_22]}
    ModelViewParmSubset_2 = new SectionList()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_34, dend_33, dend_24, dend_13, dend_2, dend_1, dend_0, dend_36, dend_35, dend_30, dend_25, dend_15, dend_14, dend_8, dend_3, dend_38, dend_37, dend_32, dend_31, dend_27, dend_26, dend_19, dend_16, dend_10, dend_9, dend_5, dend_4, dend_29, dend_28, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_6, dend_23, dend_22]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_34, dend_33, dend_24, dend_13, dend_2, dend_1, dend_0, axon_0, dend_36, dend_35, dend_30, dend_25, dend_15, dend_14, dend_8, dend_3, axon_1, dend_38, dend_37, dend_32, dend_31, dend_27, dend_26, dend_19, dend_16, dend_10, dend_9, dend_5, dend_4, dend_29, dend_28, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_6, dend_23, dend_22]}
    ModelViewParmSubset_5 = new SectionList()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    axon_1 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_33 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_1 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_36 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_35 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_30 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_14 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_8 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_38 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_32 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_31 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_27 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_26 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_9 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_4 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_29 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_21 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_20 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_18 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_12 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_23 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_2 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_13 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_34 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_24 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_15 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_3 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_16 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_19 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_25 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_5 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_6 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_7 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_10 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_11 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_22 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_28 OneSecGrp_SectionRef_32.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_33 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_33 nseg = 11
    dend_1 nseg = 7
    dend_0 nseg = 9
    dend_36 nseg = 3
    dend_35 nseg = 7
    dend_30 nseg = 3
    dend_14 nseg = 9
    dend_8 nseg = 3
    dend_38 nseg = 7
    dend_37 nseg = 5
    dend_32 nseg = 3
    dend_31 nseg = 3
    dend_27 nseg = 7
    dend_26 nseg = 7
    dend_9 nseg = 5
    dend_4 nseg = 3
    dend_29 nseg = 3
    dend_21 nseg = 3
    dend_20 nseg = 5
    dend_18 nseg = 7
    dend_17 nseg = 9
    dend_12 nseg = 5
    dend_23 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_SBC_7382b080d8_0_0


