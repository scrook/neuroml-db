// Cell: cNAC187_L4_MC_2eb83e1eed_0_0
/*
{
  "id" : "cNAC187_L4_MC_2eb83e1eed_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.46185, -12.2276, 0.866815, 1.38428", "-5.86833, -11.0688, 0.785668, 2.26538", "-5.27481, -9.90998, 0.704522, 3.99869", "-4.6813, -8.75119, 0.623376, 5.02955", "-4.08778, -7.5924, 0.54223, 6.14322", "-3.49426, -6.43361, 0.461083, 7.38472", "-2.90074, -5.27483, 0.379937, 8.66913", "-2.30723, -4.11604, 0.298791, 9.74207", "-1.71371, -2.95725, 0.217645, 10.7549", "-1.12019, -1.79846, 0.136499, 11.1982", "-0.526673, -0.639671, 0.0553524, 11.4133", "0.066845, 0.519118, -0.0257938, 11.6557", "0.660363, 1.67791, -0.10694, 11.5166", "1.25388, 2.8367, -0.188086, 11.1259", "1.8474, 3.99548, -0.269232, 10.3673", "2.44092, 5.15427, -0.350379, 9.22753", "3.03443, 6.31306, -0.431525, 7.92172", "3.62795, 7.47185, -0.512671, 6.21201", "4.22147, 8.63064, -0.593817, 4.99134", "4.81499, 9.78943, -0.674963, 3.57741", "5.4085, 10.9482, -0.75611, 1.81236" ]
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-4.53723, -11.1443, -2.03974, 2.77", "-5.23067, -12.6773, -2.52727, 2.77", "-6.87072, -16.3028, -3.68031, 2.77", "-7.53499, -17.7713, -4.14733, 2.22", "-7.73474, -18.2129, -4.28776, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000106447951405
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "7.31277, 10.3557, 0.400263, 3.05", "8.52277, 12.1457, 0.400263, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000106447951405
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "5.4085, 10.9482, -0.75611, 0.83", "12.2466, 24.2989, -0.75611, 0.83", "19.0846, 37.6496, -0.75611, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-7.73474, -18.2129, -4.28776, 0.55", "-7.13166, -20.0312, -5.29396, 0.55", "-6.94488, -20.9744, -4.66718, 0.55", "-6.50842, -23.2014, -2.27486, 0.55", "-6.29407, -24.491, -0.810127, 0.55", "-6.2157, -25.4436, 0.278203, 0.83", "-6.23558, -27.6783, 3.09517, 0.55", "-6.633, -32.1943, 9.7646, 0.55", "-6.83023, -33.8296, 12.7608, 0.55", "-7.02889, -35.0887, 15.201, 0.55", "-7.24398, -36.0734, 17.2026, 0.55", "-8.09438, -39.051, 23.3171, 0.55", "-9.31637, -42.9743, 31.2103, 0.55", "-11.6021, -49.333, 43.05, 0.55", "-12.0982, -50.6398, 45.4491, 0.55", "-12.4674, -51.7307, 47.4546, 0.55", "-12.705, -52.5883, 48.9903, 0.55", "-13.0407, -53.7624, 50.8474, 0.55", "-13.6132, -55.5264, 53.1845, 0.55", "-14.577, -59.0636, 56.8695, 0.55", "-15.1694, -61.4781, 59.4957, 0.55", "-16.0024, -64.9308, 63.1622, 0.28", "-16.6176, -67.4233, 65.6147, 0.83", "-17.0391, -68.8797, 66.9358, 0.28", "-17.8235, -71.5583, 69.0649, 0.83", "-18.7994, -74.5213, 70.9454, 0.28", "-20.1183, -78.3746, 73.0988, 0.83", "-21.0187, -81.1769, 74.5212, 0.28", "-21.8315, -84.1404, 75.9378, 0.83", "-22.5397, -87.0696, 77.1896, 0.55", "-23.0677, -89.3886, 78.1003, 0.28", "-23.5619, -92.1228, 79.078, 1.38", "-23.6964, -93.0539, 79.4357, 1.38", "-24.2376, -96.557, 80.9907, 0.28", "-24.3939, -97.641, 81.4968, 0.28", "-24.9936, -100.456, 82.9878, 0.28", "-25.3302, -101.564, 83.7511, 0.83", "-26.1199, -103.581, 85.3458, 0.28", "-26.9647, -105.506, 87.0035, 0.83", "-27.9781, -107.463, 88.7456, 0.28", "-29.4946, -110.289, 91.1175, 0.83", "-31.4642, -113.933, 93.9257, 0.28", "-31.8053, -114.564, 94.4311, 0.83", "-32.7438, -116.43, 95.8873, 0.28", "-33.6422, -118.499, 97.4572, 0.83", "-34.3099, -120.194, 98.6424, 0.55", "-34.5929, -121.13, 99.2346, 0.83", "-35.7167, -125.307, 101.541, 0.28", "-36.0276, -126.455, 102.305, 0.55", "-36.759, -129.09, 104.245, 0.28", "-37.0429, -130.295, 105.172, 0.55", "-37.5248, -132.403, 106.729, 0.28", "-37.9915, -134.671, 108.02, 0.83", "-38.9798, -140.34, 110.055, 0.28", "-39.2192, -141.791, 110.3, 1.11", "-39.4544, -143.378, 110.182, 1.11", "-39.8085, -145.328, 109.669, 1.11", "-41.1636, -151.49, 107.093, 0.55", "-41.3517, -152.27, 106.694, 1.11", "-42.0674, -154.833, 105.127, 0.55", "-42.4681, -156.064, 104.379, 1.38", "-43.3853, -158.379, 102.98, 0.55", "-44.06, -159.991, 102.097, 0.55", "-44.6177, -161.252, 101.492, 0.55", "-45.2776, -163.059, 100.425, 1.38", "-45.9562, -165.395, 98.8817, 0.55", "-46.3, -166.919, 97.7042, 0.55", "-46.5059, -168.28, 96.6264, 1.38", "-47.0111, -171.78, 94.019, 0.83", "-47.508, -175.287, 91.505, 0.55", "-47.6121, -175.976, 91.0511, 0.55", "-48.066, -178.194, 89.6907, 0.83", "-48.7892, -181.17, 88.0398, 0.83", "-49.7279, -184.172, 86.2547, 0.83", "-50.9951, -187.512, 84.4607, 0.83", "-51.8121, -189.309, 83.5786, 0.83", "-53.4145, -192.563, 81.6814, 1.11", "-54.2351, -194.072, 80.6387, 0.83", "-56.2539, -197.56, 77.9426, 0.83", "-57.6476, -200.03, 75.9566, 0.83", "-58.9311, -202.311, 74.2383, 1.11", "-61.3343, -206.756, 70.7611, 0.55", "-61.9559, -208.065, 69.7691, 0.55", "-63.0329, -210.488, 68.0324, 0.55", "-63.2574, -211.01, 67.7442, 1.11", "-64.2124, -213.266, 66.4629, 0.55", "-65.018, -215.254, 65.6311, 1.11", "-66.0621, -217.795, 64.9654, 0.55", "-66.9623, -220.052, 64.3697, 0.83", "-68.1863, -223.007, 63.4694, 0.55", "-69.0729, -225.137, 62.9165, 0.83", "-70.0678, -227.683, 62.1573, 0.83", "-70.6321, -229.274, 61.5408, 0.83", "-71.3775, -231.572, 60.7147, 0.83", "-71.6524, -232.477, 60.3676, 0.83", "-72.1008, -234.056, 59.683, 1.11", "-73.489, -238.914, 57.6657, 0.83", "-74.4797, -242.588, 55.9612, 1.11", "-75.5615, -247.031, 53.6931, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-7.73474, -18.2129, -4.28776, 2.49", "-8.54198, -22.8598, -1.82321, 2.49", "-9.34635, -26.1028, -0.0669344, 2.49", "-10.5984, -31.1507, 2.66678, 2.49", "-11.9665, -36.6666, 5.654, 1.94", "-12.4742, -38.7137, 6.76261, 1.94", "-13.4983, -42.8425, 8.99861, 2.22", "-13.8616, -44.4206, 10.121, 2.49" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "8.52277, 12.1457, 0.400263, 2.22", "9.51074, 14.6975, -0.385692, 2.22", "9.61787, 14.9742, -0.470914, 2.22" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "8.52277, 12.1457, 0.400263, 0.55", "12.1771, 13.8716, 0.0210186, 0.55", "14.3721, 14.8118, -0.136327, 0.55", "16.9753, 15.7946, -0.272783, 0.55", "20.9536, 17.1491, -0.553413, 0.55", "22.5455, 17.703, -0.676813, 0.55", "27.0062, 19.1556, -1.02997, 0.55", "29.051, 19.6701, -1.16116, 0.55", "31.7734, 20.2223, -1.2703, 0.55", "35.0839, 20.8005, -1.21895, 0.55", "37.9992, 21.2477, -1.13651, 0.55", "40.1318, 21.5504, -0.967073, 0.55", "42.8004, 21.9003, -0.478451, 0.55", "44.1605, 22.0433, -0.131701, 0.55", "48.3185, 22.3717, 1.17853, 0.55", "49.2635, 22.3944, 1.50857, 0.55", "52.2748, 22.2275, 2.46204, 0.55", "56.2272, 21.8123, 3.52535, 0.55", "58.1978, 21.4329, 3.75266, 0.55", "59.9768, 20.8911, 3.68292, 0.55", "62.6228, 19.9322, 3.21307, 0.55", "66.4339, 18.3854, 2.23971, 0.55", "69.0296, 17.2866, 1.22077, 0.55", "74.5817, 14.5309, -1.49442, 0.55", "76.6672, 13.5026, -2.54956, 0.55", "78.6291, 12.5803, -3.53411, 0.55", "81.016, 11.4072, -4.70464, 0.55", "87.5091, 8.0479, -7.59614, 0.55", "90.6737, 6.11842, -8.7425, 0.55", "93.442, 4.41132, -9.49428, 0.55", "95.5216, 3.03507, -10.0623, 0.55", "98.7324, 0.592865, -10.8985, 0.55", "101.076, -1.43266, -11.3792, 0.55", "104.652, -5.33397, -11.5169, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "19.0846, 37.6496, -0.75611, 0.55", "25.9227, 51.0003, -0.75611, 0.55", "32.7607, 64.351, -0.75611, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-75.5615, -247.031, 53.6931, 0.55", "-77.0218, -249.627, 51.2457, 0.55", "-77.66, -250.536, 50.3765, 0.55", "-78.5661, -251.632, 49.2382, 1.11", "-79.8613, -253.113, 47.734, 0.55", "-80.6308, -253.979, 46.8959, 0.83", "-81.8681, -255.333, 45.7638, 0.55", "-82.6156, -256.071, 45.2627, 0.55", "-83.7379, -257.148, 44.469, 0.83", "-85.0052, -258.485, 43.497, 0.28", "-85.4893, -259.105, 43.108, 0.83", "-86.6475, -260.999, 41.9053, 0.28", "-87.1997, -262.232, 41.1677, 0.83", "-88.1973, -265.179, 39.6058, 0.55", "-88.6116, -266.913, 38.7835, 0.83", "-89.0195, -268.94, 37.7913, 0.83", "-89.3913, -271.217, 36.6513, 0.55", "-89.6423, -273.484, 35.5052, 0.83", "-89.8626, -276.145, 34.3841, 0.83", "-89.9847, -279.767, 33.242, 1.11" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-75.5615, -247.031, 53.6931, 0.83", "-74.3031, -248.141, 55.0216, 0.83", "-73.1273, -249.179, 56.2629, 0.83" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-13.8616, -44.4206, 10.121, 1.66", "-14.5211, -48.1481, 10.3962, 1.66", "-15.2028, -52.0012, 10.6806, 1.66", "-15.8344, -55.5707, 10.9441, 1.66" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-13.8616, -44.4206, 10.121, 1.38", "-16.8537, -45.7908, 9.82751, 1.38", "-19.6878, -47.4982, 9.58612, 1.38", "-21.5614, -48.8027, 9.44788, 1.38", "-23.7099, -50.3169, 9.31519, 1.38", "-25.1399, -51.3259, 9.24203, 1.38", "-27.2805, -52.8116, 9.14825, 1.38", "-28.7499, -53.9536, 9.14825, 1.38", "-29.9982, -54.9766, 9.14825, 1.38", "-31.9745, -56.4955, 9.14825, 1.38", "-34.0656, -57.8396, 9.14825, 1.38", "-35.3027, -58.4946, 9.25954, 1.38", "-36.5609, -59.0634, 9.39203, 1.38", "-37.3687, -59.3902, 9.49286, 1.38", "-39.1692, -60.1029, 9.7783, 1.38", "-41.1891, -60.938, 10.2231, 1.38", "-44.8357, -62.2991, 11.3208, 1.38" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "9.61787, 14.9742, -0.470914, 1.94", "12.0474, 19.5364, 7.73841, 1.94", "12.7979, 20.9455, 10.2741, 1.66", "13.6761, 22.5947, 13.2417, 1.38" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "9.61787, 14.9742, -0.470914, 0.83", "11.2134, 16.7976, -4.75453, 0.83", "12.2112, 17.9379, -7.43351, 0.83", "13.0088, 18.8494, -9.57488, 0.55", "14.4467, 20.4927, -13.4355, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "104.652, -5.33397, -11.5169, 0.55", "104.63, -9.26925, -11.8944, 0.55", "104.686, -10.9473, -12.0185, 0.55", "105.195, -12.9956, -12.1701, 0.55", "106.252, -15.8611, -12.3048, 0.55", "107.187, -17.8917, -12.3769, 0.55", "108.554, -20.7284, -12.4469, 0.55", "109.512, -22.4387, -12.5115, 0.55", "114.148, -29.7746, -12.9718, 0.55", "117.689, -34.7584, -13.3847, 0.55", "119.909, -37.5951, -13.6672, 0.55", "121.702, -39.7847, -13.9075, 0.55", "124.801, -43.3457, -14.3335, 0.55", "126.8, -45.5462, -14.6065, 0.55", "129.219, -48.0992, -14.9344, 0.55", "131.615, -50.3949, -15.2504, 0.55", "134.535, -53.0615, -15.5508, 0.55", "136.385, -54.5184, -15.6599, 0.55", "138.984, -56.4472, -15.6626, 0.55", "141.003, -57.8826, -15.6635, 0.55", "142.949, -59.0793, -15.6645, 0.55", "144.492, -59.9566, -15.6699, 0.55", "148.275, -62.0089, -15.6921, 0.55", "150.099, -63.0566, -15.7057, 0.55", "152.019, -64.1986, -15.7226, 0.55", "153.675, -65.3462, -15.7057, 0.55", "156.663, -67.641, -15.5196, 0.55", "160.238, -70.7195, -15.3581, 0.55", "163.23, -73.5986, -15.2548, 0.55", "164.845, -75.3087, -15.2836, 0.55", "167.965, -78.9564, -15.4568, 0.55", "169.441, -80.8224, -15.5978, 0.83", "172.797, -85.2528, -16.0979, 0.55", "173.021, -85.5788, -16.1466, 0.83", "175.125, -88.723, -16.692, 0.28", "175.801, -89.5701, -16.8495, 0.28", "176.354, -90.1792, -16.9125, 0.28", "179.457, -93.4009, -16.952, 0.28", "181.986, -95.8671, -16.6022, 0.28", "183.656, -97.5235, -16.2837, 0.28", "186.808, -100.616, -15.4983, 0.28", "189.611, -103.529, -14.7737, 0.28", "189.611, -103.529, -14.7737, 0.83", "190.432, -104.42, -14.4854, 0.83", "191.874, -106.007, -13.9468, 0.83", "193.363, -107.522, -13.5108, 0.55", "193.636, -107.799, -13.4739, 1.11", "194.956, -108.988, -13.4786, 0.28", "196.92, -110.718, -13.5056, 0.28", "197.419, -111.147, -13.5156, 0.55", "199.583, -113.147, -13.5702, 0.55", "202.664, -116.388, -13.6653, 0.55", "204.341, -118.312, -13.7241, 0.55", "206.534, -121.093, -13.8156, 0.55", "208.213, -123.519, -13.8763, 0.55", "209.866, -126.094, -13.9162, 0.55", "210.817, -127.808, -13.9958, 0.55", "211.753, -129.751, -14.1716, 0.55", "212.333, -131.112, -14.346, 0.55", "212.749, -132.212, -14.5197, 0.83", "213.582, -134.541, -14.9731, 0.83", "214.668, -137.266, -15.6436, 0.28", "215.484, -139.313, -16.2447, 0.28", "215.963, -140.767, -16.7446, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "104.652, -5.33397, -11.5169, 0.55", "107.273, -6.19413, -10.7241, 0.55", "109.191, -6.98222, -10.1198, 0.55", "111.724, -8.1405, -9.1569, 0.55", "115.658, -10.1372, -7.23918, 0.55", "120.177, -12.7322, -4.69269, 0.55", "121.786, -13.8423, -3.32132, 0.55", "123.199, -15.0829, -1.67408, 0.55", "125.417, -17.5104, 1.67388, 0.55", "127.461, -20.3313, 5.75955, 0.55", "128.382, -22.0864, 8.33851, 0.55", "131.13, -28.0544, 17.7172, 0.55", "131.639, -29.1832, 19.5724, 0.55", "131.978, -29.8521, 20.7393, 0.55", "133.407, -32.3981, 25.305, 0.55", "135.83, -36.1286, 32.3076, 0.55", "138.423, -39.1511, 38.3703, 0.55", "139.096, -39.7346, 39.5734, 0.55", "141.633, -41.424, 43.5167, 0.55", "143.448, -42.35, 45.9348, 0.28", "143.893, -42.488, 46.3452, 0.83", "146.401, -42.7285, 47.5345, 0.28", "146.401, -42.7285, 47.5345, 1.11", "149.799, -42.7688, 47.9097, 0.28", "149.799, -42.7688, 47.9097, 0.83", "152.778, -42.7949, 47.7192, 0.28", "155.594, -42.8641, 47.5457, 1.11", "157.875, -42.9763, 47.4132, 0.28", "157.875, -42.9763, 47.4132, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-15.8344, -55.5707, 10.9441, 0.83", "-12.4331, -58.7547, 16.0616, 0.83", "-12.4186, -61.2025, 15.185, 0.83", "-12.361, -62.5026, 14.7051, 0.83", "-12.3231, -63.3268, 14.1526, 0.83", "-12.258, -66.4455, 12.0097, 0.83", "-12.2805, -67.2785, 11.2633, 0.83", "-12.4192, -69.3975, 8.52141, 0.83", "-12.6078, -71.5341, 5.54371, 0.55", "-12.8505, -74.6946, 0.868393, 0.55", "-12.9416, -76.4989, -1.94385, 0.55", "-13.0117, -80.4425, -8.45897, 0.55", "-13.1815, -83.7364, -14.6871, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-15.8344, -55.5707, 10.9441, 1.66", "-19.012, -64.0124, 11.9073, 1.66", "-19.9534, -68.4167, 12.2573, 1.66", "-20.54, -71.7825, 12.3051, 1.38", "-20.7998, -72.9955, 12.2872, 1.38", "-21.0382, -74.109, 12.2707, 1.38", "-21.4099, -75.8444, 12.245, 1.38", "-21.8046, -77.7361, 12.7453, 1.38", "-21.9565, -79.9003, 12.7602, 1.38", "-21.7689, -81.9852, 12.5053, 1.38" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-44.8357, -62.2991, 11.3208, 1.38", "-46.9711, -63.6338, 11.2483, 1.38", "-49.802, -65.3972, 11.1635, 1.38", "-51.9145, -66.6901, 11.1104, 1.38", "-53.1783, -67.4743, 11.084, 1.38", "-55.8378, -68.9994, 10.6136, 1.38", "-57.0268, -69.6443, 10.3063, 1.38", "-57.3516, -69.7874, 10.1399, 1.38", "-59.2007, -70.4657, 8.82921, 1.38", "-61.0101, -70.9964, 7.37548, 1.38", "-65.6279, -72.0946, 3.23026, 1.38", "-67.6493, -72.5875, 1.09829, 1.38", "-72.2042, -74.0646, -3.91453, 1.38", "-73.1082, -74.4059, -4.9097, 1.38", "-74.2268, -74.8484, -6.08435, 1.38", "-76.5663, -75.8085, -8.2505, 1.38", "-83.2834, -79.0276, -13.2291, 1.38", "-86.3101, -80.6292, -15.0886, 1.38", "-87.3772, -81.2697, -15.7505, 1.38", "-90.1251, -82.929, -17.588, 1.38", "-92.4061, -84.2777, -19.1093, 1.38", "-94.6647, -85.5584, -20.4908, 1.38", "-96.7749, -86.6176, -21.6319, 1.38", "-105.366, -90.4695, -25.8292, 1.38", "-107.398, -91.4136, -26.9238, 1.38", "-109.189, -92.3122, -28.0, 1.38", "-111.038, -93.211, -29.1705, 1.38", "-113.884, -94.3752, -30.8418, 0.83", "-117.878, -95.757, -32.2068, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-44.8357, -62.2991, 11.3208, 1.38", "-45.8269, -62.4295, 11.3765, 1.38", "-49.5626, -62.992, 11.5601, 1.11", "-52.8542, -63.5738, 11.7481, 1.11", "-57.211, -64.4082, 12.0023, 1.11", "-60.2402, -64.9884, 12.1789, 1.11", "-62.6853, -65.4567, 12.3216, 1.11", "-64.219, -65.7493, 12.4014, 1.11", "-67.6505, -66.4674, 12.5239, 1.11", "-71.3812, -67.2094, 12.699, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "13.6761, 22.5947, 13.2417, 1.38", "13.4761, 24.5247, 8.75168, 1.38" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "13.6761, 22.5947, 13.2417, 0.55", "8.68206, 27.2485, 12.8809, 0.55", "6.45345, 29.3935, 12.8957, 0.55", "4.23716, 31.5016, 12.9959, 0.55", "0.0372622, 35.3703, 13.272, 0.55", "-2.59307, 37.7819, 13.474, 0.55", "-4.33174, 39.4132, 13.6196, 0.55", "-5.98833, 40.8567, 14.0194, 0.55", "-6.8055, 41.6248, 14.2394, 0.55", "-7.80958, 42.691, 14.5505, 0.55", "-8.88903, 44.1566, 14.9134, 0.55", "-9.67281, 45.2487, 15.2144, 0.55", "-11.0446, 47.2707, 16.0219, 0.55", "-12.6685, 49.6649, 17.4903, 0.55", "-13.6645, 51.1091, 18.5646, 0.55", "-15.2988, 53.4474, 20.6375, 0.55", "-17.0827, 56.0404, 23.2025, 0.55", "-18.4989, 58.1164, 25.4265, 0.55", "-20.8448, 61.7231, 29.5924, 0.55", "-21.8017, 63.1176, 31.3749, 0.55", "-23.2399, 65.2756, 34.2765, 0.55", "-24.8471, 67.7804, 37.8522, 0.55", "-25.6806, 69.2478, 39.9126, 0.55", "-27.0563, 72.1935, 43.8641, 0.55", "-28.1575, 75.5634, 48.0738, 0.55", "-28.7184, 78.3147, 51.3682, 0.55", "-28.9983, 81.2522, 54.678, 0.55", "-28.9237, 83.9515, 57.5361, 1.11", "-28.5351, 86.3787, 59.8226, 0.55", "-27.8102, 88.5663, 61.6796, 1.11", "-27.0932, 90.0406, 62.7659, 0.28", "-26.6492, 90.8548, 63.484, 0.83", "-26.2098, 91.6673, 64.3101, 0.28", "-25.6852, 92.7973, 65.6606, 0.83", "-24.7955, 94.9529, 68.4619, 0.28", "-24.4307, 95.977, 69.968, 0.83", "-23.1622, 100.533, 76.8915, 0.55", "-23.0108, 101.338, 78.1366, 1.11", "-22.9583, 102.086, 79.3374, 0.28", "-23.0019, 102.696, 80.3008, 1.11", "-23.8493, 105.994, 85.2553, 0.28", "-24.1326, 106.671, 86.2513, 0.28", "-24.9773, 108.005, 88.0345, 0.83", "-26.3942, 109.698, 90.4505, 0.83", "-27.6801, 110.989, 92.2911, 0.28", "-28.6885, 111.89, 93.5701, 0.28", "-30.1287, 113.05, 95.0645, 0.28", "-31.2812, 113.92, 96.2961, 0.83", "-34.4389, 116.156, 99.6368, 0.28", "-35.2003, 116.664, 100.415, 0.55", "-37.2231, 117.954, 102.737, 0.28", "-38.4121, 118.685, 104.177, 0.83", "-40.5294, 119.856, 106.772, 0.28", "-41.3341, 120.313, 107.814, 0.55", "-42.462, 120.925, 109.298, 0.28", "-45.0484, 122.274, 112.919, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "14.4467, 20.4927, -13.4355, 0.83", "17.4338, 20.6876, -13.1552, 0.83", "19.7579, 20.8392, -12.9371, 0.83", "23.4537, 21.0803, -12.5904, 0.83", "28.6552, 21.4196, -12.1024, 0.83", "43.926, 22.4157, -10.6696, 0.83", "48.6192, 22.7219, -10.2293, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "14.4467, 20.4927, -13.4355, 0.55", "14.9797, 23.1389, -13.8918, 0.55", "15.2939, 24.699, -14.1609, 0.55", "15.9414, 27.9139, -14.7153, 0.55", "16.3397, 29.8913, -15.0564, 0.55", "16.6848, 31.6046, -15.3518, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-13.1815, -83.7364, -14.6871, 0.55", "-8.9023, -87.9592, -9.69138, 0.55", "-7.42325, -89.5033, -8.04422, 1.11", "-5.67173, -91.3319, -6.09359, 1.11", "-4.25088, -92.8152, -4.51124, 1.11", "-1.43605, -95.7539, -1.37644, 1.11", "0.174458, -97.4353, 0.417138, 1.11", "2.71224, -100.2, 2.58832, 1.11" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-13.1815, -83.7364, -14.6871, 0.83", "-14.9978, -83.2617, -20.0902, 0.83", "-16.1396, -82.8489, -23.0752, 1.38", "-16.1396, -82.8489, -23.0752, 1.38", "-18.4262, -81.6698, -28.4667, 0.28", "-19.8606, -80.8826, -31.6371, 0.83", "-20.2379, -80.7034, -32.696, 0.28", "-20.4699, -80.6002, -33.4355, 0.83", "-20.7383, -80.4901, -34.413, 0.28", "-21.6039, -80.2538, -37.2813, 0.28", "-22.3319, -80.1676, -39.4041, 1.11", "-25.3964, -80.0918, -48.0479, 0.28", "-26.5126, -80.1241, -51.1595, 0.55", "-28.6726, -80.2552, -56.993, 0.28", "-29.1354, -80.2683, -58.1949, 1.11", "-30.6934, -80.2417, -61.8933, 0.55", "-32.0762, -79.9668, -65.6128, 0.28", "-32.9687, -79.595, -68.1825, 0.28", "-33.3908, -79.3686, -69.4805, 1.11", "-34.0212, -78.9799, -71.4161, 0.28", "-34.2763, -78.8002, -72.2462, 0.83", "-37.3988, -76.411, -82.0229, 0.28", "-38.3916, -75.6689, -84.934, 0.83", "-39.1322, -75.2232, -86.7859, 0.55", "-39.8954, -74.8362, -88.4225, 0.55", "-41.3879, -74.1377, -91.5284, 0.55", "-42.3713, -73.5488, -93.7648, 0.55", "-42.7928, -73.1787, -95.092, 0.28", "-43.3474, -72.2454, -98.1861, 0.83", "-43.6519, -71.3154, -100.935, 0.55", "-43.9827, -69.311, -106.02, 0.55", "-44.1054, -67.697, -109.501, 0.55", "-44.1897, -65.1628, -114.432, 0.28", "-44.2075, -64.2698, -115.944, 0.55", "-44.1992, -63.2191, -117.611, 0.55", "-44.4415, -60.8056, -121.178, 0.83", "-44.9688, -59.2566, -123.262, 0.28", "-45.5108, -58.3268, -124.597, 0.83", "-46.6616, -56.8527, -127.127, 0.28", "-47.4826, -56.1084, -128.931, 0.55", "-47.9648, -55.8076, -129.922, 0.28", "-49.0079, -55.4306, -131.793, 1.11", "-50.6046, -55.1114, -134.219, 0.55", "-52.402, -54.892, -136.45, 0.55", "-53.8886, -54.823, -137.915, 0.55", "-55.326, -54.7359, -139.151, 0.28", "-55.7592, -54.7085, -139.503, 0.83", "-57.6499, -54.6042, -140.652, 0.28", "-61.2176, -54.5181, -142.048, 0.28", "-61.9679, -54.5018, -142.287, 0.55" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-21.7689, -81.9852, 12.5053, 1.11", "-21.4054, -84.257, 18.6196, 1.11", "-21.2025, -85.5246, 22.0309, 1.11" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-21.7689, -81.9852, 12.5053, 1.38", "-23.4113, -83.5219, 11.8749, 1.38", "-26.0552, -86.0003, 11.0227, 1.38", "-27.0572, -86.9223, 10.7656, 1.38", "-27.932, -87.6862, 10.6017, 1.38", "-29.1609, -88.7401, 10.5017, 1.38", "-30.0057, -89.506, 10.4548, 1.38", "-30.592, -90.0838, 10.4205, 1.38", "-31.6143, -91.3394, 10.5171, 1.38", "-32.8633, -93.4606, 10.239, 1.38", "-33.4023, -94.9776, 9.80848, 1.38", "-33.705, -96.5028, 9.24626, 1.38", "-33.8096, -97.3464, 8.9017, 1.38", "-33.9461, -99.3764, 8.0362, 1.38", "-34.1518, -104.017, 5.9754, 1.38", "-34.3292, -105.68, 4.99068, 1.38", "-34.4848, -106.358, 4.53215, 1.38", "-34.8769, -107.45, 3.77368, 1.38", "-35.252, -108.205, 3.24082, 1.38", "-36.0016, -109.367, 2.4084, 1.38", "-39.5478, -113.774, -0.529398, 1.38", "-40.7366, -115.09, -1.44608, 1.38", "-41.5983, -115.987, -2.05636, 1.38", "-42.3961, -116.783, -2.57483, 1.38", "-42.5768, -116.96, -2.67302, 1.38", "-43.1813, -117.558, -2.8891, 1.38", "-44.1411, -118.56, -2.88584, 1.38", "-45.0667, -119.593, -2.88243, 1.38", "-45.4492, -120.075, -2.88101, 1.38", "-46.2473, -121.208, -2.87828, 1.38", "-46.6737, -121.872, -2.87707, 1.38", "-47.5463, -123.391, -2.87525, 1.38", "-47.6726, -123.642, -2.87525, 1.38", "-48.2173, -124.908, -2.87525, 1.38", "-48.4404, -125.497, -2.87525, 1.38", "-48.6329, -126.087, -2.87525, 1.38" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-117.878, -95.757, -32.2068, 0.55", "-121.855, -97.9035, -30.2357, 0.55", "-124.34, -99.1191, -29.0689, 0.55", "-125.156, -99.5405, -28.6812, 0.55", "-127.08, -100.561, -27.8981, 0.55", "-130.909, -102.59, -26.3398, 0.55", "-134.925, -104.718, -24.7055, 0.55", "-136.875, -105.734, -23.9665, 0.55", "-140.518, -107.654, -22.5999, 0.55", "-144.176, -109.586, -21.2478, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-117.878, -95.757, -32.2068, 0.83", "-120.81, -96.402, -32.6145, 0.83", "-123.764, -97.1295, -32.9667, 0.83", "-126.23, -97.7686, -33.1529, 0.55", "-128.103, -98.2813, -33.2473, 0.28", "-128.937, -98.5226, -33.2766, 0.83", "-131.449, -99.3033, -33.3368, 0.28", "-131.97, -99.4855, -33.2994, 0.83", "-133.389, -100.177, -33.1821, 0.28", "-133.921, -100.493, -33.1628, 0.28", "-134.257, -100.693, -33.1514, 0.28", "-134.948, -101.07, -33.1331, 0.83", "-137.461, -102.343, -33.0932, 0.28", "-139.725, -103.527, -33.0878, 0.28", "-141.336, -104.381, -33.1129, 0.55", "-142.882, -105.195, -33.1531, 0.28", "-145.079, -106.402, -33.2185, 0.28", "-145.779, -106.843, -33.242, 0.55", "-146.94, -107.646, -33.2822, 0.28", "-147.158, -107.816, -33.2778, 0.55", "-148.106, -108.77, -33.1982, 0.28", "-148.89, -109.742, -33.1203, 0.28", "-150.009, -111.212, -32.9055, 0.28", "-151.007, -112.39, -32.6673, 0.28", "-152.177, -113.59, -32.3477, 0.28", "-152.78, -114.208, -32.1638, 0.55", "-154.381, -115.722, -31.6315, 0.28", "-155.21, -116.496, -31.3952, 0.28", "-155.845, -117.092, -31.2477, 0.28", "-156.117, -117.369, -31.2001, 0.55", "-157.179, -118.411, -31.1014, 0.28", "-157.988, -119.181, -31.0502, 0.55", "-159.695, -120.848, -30.9993, 0.28", "-160.491, -121.671, -30.9903, 0.28", "-160.918, -122.109, -30.9869, 0.55", "-161.927, -123.065, -30.9821, 0.28", "-162.808, -123.797, -30.981, 0.28", "-163.121, -124.04, -30.9818, 0.28", "-165.318, -125.679, -30.9877, 0.55", "-166.518, -126.566, -30.9906, 0.28", "-167.029, -126.914, -30.9916, 0.55", "-168.95, -128.144, -30.996, 0.28", "-169.184, -128.291, -30.9966, 0.55", "-170.37, -128.999, -30.999, 0.28", "-172.147, -129.785, -30.9529, 0.55", "-173.059, -130.187, -31.0361, 0.28", "-174.519, -130.846, -31.235, 0.28", "-174.864, -130.997, -31.3411, 0.28", "-175.345, -131.191, -31.5254, 0.55", "-177.696, -132.03, -32.5449, 0.28", "-180.631, -133.145, -33.9528, 1.11", "-182.869, -134.04, -35.0876, 0.55", "-186.102, -135.403, -36.7492, 0.28", "-186.937, -135.767, -37.163, 0.28", "-187.454, -136.006, -37.412, 0.55", "-188.954, -136.72, -38.0218, 0.28", "-189.215, -136.821, -38.0713, 0.55", "-190.887, -137.388, -38.2199, 0.28", "-192.043, -137.822, -38.117, 0.28", "-192.303, -137.91, -38.1226, 0.55", "-194.271, -138.47, -38.2081, 0.28", "-195.129, -138.685, -38.2565, 0.28", "-195.724, -138.828, -38.3563, 0.83", "-198.969, -139.584, -38.9786, 0.28", "-202.794, -140.549, -39.8099, 0.28", "-205.53, -141.267, -40.4845, 0.28", "-206.59, -141.562, -40.8004, 0.28", "-210.471, -142.677, -42.0545, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-71.3812, -67.2094, 12.699, 0.83", "-72.9547, -66.8056, 14.9508, 0.83", "-74.3911, -66.395, 17.1068, 0.83", "-76.9281, -65.7635, 20.901, 0.55", "-78.5261, -65.3464, 23.295, 0.83", "-80.275, -64.8755, 25.7968, 0.28", "-82.1361, -64.3225, 28.4104, 0.83", "-83.3285, -63.9458, 30.228, 0.55", "-84.7812, -63.3521, 32.4239, 0.55", "-85.4257, -63.0226, 33.2851, 0.28", "-86.4511, -62.487, 34.5146, 0.55", "-89.1006, -61.0158, 36.982, 0.28", "-90.0924, -60.4497, 37.7123, 0.28", "-91.5005, -59.6893, 38.7643, 1.11", "-94.9217, -57.867, 41.1883, 0.55", "-97.2756, -56.6658, 42.8858, 0.83", "-99.7919, -55.4111, 44.6876, 0.55", "-101.562, -54.5741, 45.8834, 0.28", "-105.542, -52.7221, 48.5335, 0.28", "-107.197, -51.9577, 49.6409, 1.11", "-110.332, -50.4012, 51.6997, 0.28", "-110.708, -50.1862, 52.0438, 0.55", "-112.311, -49.1319, 53.8859, 0.28", "-113.136, -48.6093, 55.1176, 0.83", "-113.924, -48.1761, 56.4107, 0.28", "-114.374, -47.993, 57.3466, 0.83", "-117.609, -47.4697, 64.7194, 0.28", "-118.316, -47.3926, 66.4422, 0.55", "-120.944, -47.3661, 73.4368, 1.11", "-121.519, -47.4283, 75.0835, 0.55", "-122.969, -47.795, 79.4463, 0.28", "-124.542, -48.4661, 84.1215, 1.11" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-71.3812, -67.2094, 12.699, 1.11", "-75.0772, -71.6248, 12.6882, 1.11", "-76.3884, -73.1621, 12.6851, 1.11", "-79.5971, -76.791, 12.6792, 1.11", "-81.7894, -79.163, 12.676, 1.11", "-84.7511, -82.3009, 12.622, 1.11", "-86.7457, -84.391, 12.724, 1.11", "-88.8528, -86.5051, 12.857, 1.11", "-91.9816, -89.5657, 13.0898, 1.11", "-94.1701, -91.7411, 13.3044, 1.11", "-95.7182, -93.2529, 13.4995, 1.11", "-99.9432, -97.0331, 14.2044, 1.11" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "13.4761, 24.5247, 8.75168, 1.38", "13.5161, 26.7547, 8.75168, 1.38" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "13.4761, 24.5247, 8.75168, 0.83", "19.2302, 27.4804, 12.067, 0.83", "20.7144, 28.3858, 13.4346, 0.83", "22.9302, 29.6821, 15.4574, 0.83", "24.8197, 30.735, 17.0845, 0.55", "27.1813, 32.0779, 19.0324, 0.55", "29.0204, 33.206, 20.5091, 0.55", "36.3434, 38.3794, 25.6821, 0.55", "38.834, 40.286, 27.4471, 0.55", "40.3636, 41.553, 28.454, 0.55", "41.6009, 42.7035, 29.2342, 0.55", "43.2302, 44.4063, 30.098, 0.55", "44.2936, 45.7099, 30.6641, 0.55", "45.4921, 47.6543, 31.1982, 0.55", "46.8605, 50.7641, 32.2289, 0.55", "47.3085, 52.0857, 32.7715, 0.55", "47.8622, 53.9321, 33.6141, 0.55", "49.5921, 60.2082, 36.4632, 0.55", "50.2303, 62.9884, 37.6594, 0.55", "51.0237, 67.344, 39.3376, 0.55", "51.4761, 70.3437, 40.4008, 0.55", "51.814, 72.9768, 41.2143, 0.55", "52.4421, 78.3534, 42.6118, 0.55", "52.7309, 80.7885, 43.0589, 0.55", "53.1694, 84.8177, 44.0081, 0.55", "53.2815, 86.5613, 44.4898, 0.55", "53.3493, 87.9934, 44.9103, 0.55", "53.4325, 91.8369, 46.1248, 0.55", "53.462, 95.5304, 47.3466, 0.55", "53.5715, 100.665, 49.0171, 0.55", "53.7448, 103.94, 50.0359, 0.55", "54.0047, 106.747, 50.8001, 0.55", "54.3066, 108.993, 51.3326, 0.28", "54.64, 110.879, 51.7535, 0.83", "55.0914, 112.741, 52.1755, 0.28", "55.7072, 114.729, 52.5393, 1.11", "56.62, 117.372, 53.2588, 0.28", "57.0802, 118.635, 53.7068, 0.83", "58.3441, 121.72, 55.1899, 0.28", "58.9201, 123.028, 55.9009, 0.83", "59.4673, 124.13, 56.5286, 0.28", "60.5931, 126.262, 57.7306, 0.83", "61.8215, 128.267, 58.7925, 0.83", "63.3179, 130.353, 59.733, 0.28", "64.623, 131.902, 60.3596, 0.55", "66.1849, 133.473, 61.0176, 0.28", "67.0097, 134.244, 61.3349, 0.55", "68.1594, 135.242, 61.6898, 0.28", "69.56, 136.399, 62.0973, 1.11", "71.9067, 138.268, 62.6704, 0.83", "73.6218, 139.652, 63.2441, 0.83", "74.9676, 140.805, 63.7855, 0.28", "75.2513, 141.059, 63.9033, 0.55", "76.4913, 142.215, 64.4323, 0.28", "76.6791, 142.41, 64.5248, 0.55", "79.3388, 145.504, 65.8832, 0.28", "80.8141, 147.312, 66.7149, 0.83", "82.1029, 148.882, 67.4576, 0.28", "82.329, 149.162, 67.592, 0.55", "84.3295, 151.712, 68.8331, 0.28", "85.2529, 152.924, 69.3806, 1.11", "86.3752, 154.48, 69.9602, 0.28", "86.5696, 154.785, 70.0903, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "48.6192, 22.7219, -10.2293, 0.83", "54.8061, 25.5572, -12.4659, 0.83", "58.0611, 27.0489, -13.6426, 0.83", "60.4981, 28.1657, -14.5236, 0.83", "62.7689, 29.2063, -15.3445, 0.83", "65.4726, 30.4454, -16.3219, 0.55", "72.0524, 33.4608, -18.7006, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "48.6192, 22.7219, -10.2293, 0.83", "49.3662, 19.8932, -10.0385, 0.83", "50.161, 16.0642, -9.78783, 0.83", "50.4392, 14.0952, -9.62142, 0.83", "50.6354, 12.1115, -9.44396, 0.83", "50.7721, 8.7569, -9.1408, 0.83", "50.8564, 3.69348, -8.59089, 0.83", "50.7438, 1.48426, -8.27204, 0.83", "50.4987, -0.8133, -7.92392, 0.83", "50.2426, -3.58784, -7.48849, 0.83", "50.1359, -6.0235, -7.09571, 0.83", "50.0507, -9.38402, -6.76262, 0.83", "50.1162, -11.8447, -6.64123, 0.83", "50.3507, -16.1229, -6.62335, 0.83", "50.6924, -19.8994, -6.76099, 0.83", "51.0017, -23.238, -6.98385, 0.83", "51.5083, -28.7916, -7.5219, 0.83", "51.6605, -30.7694, -7.78646, 0.55", "51.8381, -33.3613, -8.1714, 0.55", "51.9186, -34.7534, -8.38073, 0.55", "51.9616, -37.8819, -8.77231, 0.55", "51.9189, -39.9846, -8.945, 0.55", "51.8779, -42.3494, -9.08151, 0.55", "51.8959, -44.6211, -9.29123, 0.55", "51.9551, -46.3615, -9.49044, 0.55", "51.9878, -48.9226, -9.77194, 0.83", "52.0254, -52.1475, -10.0964, 0.55", "51.8942, -55.7758, -10.3997, 0.55", "51.6247, -59.7263, -10.6219, 0.55", "51.3117, -62.7989, -10.7207, 0.55", "50.9021, -66.1437, -10.752, 0.55", "50.3754, -69.9808, -10.6899, 0.55", "49.5472, -74.8991, -10.4926, 0.55", "49.0326, -77.6001, -10.3328, 0.55", "48.4496, -80.4825, -10.1946, 0.55", "48.0934, -82.3901, -10.1318, 0.55", "47.6672, -84.9614, -10.0935, 1.11", "46.8599, -89.3627, -10.0429, 0.55", "46.1541, -93.5528, -10.1881, 0.55", "45.8485, -95.3849, -10.2922, 0.83", "45.3938, -98.187, -10.4628, 0.83", "45.1963, -99.2811, -10.5332, 0.55", "44.8377, -101.234, -10.6644, 1.11", "43.8284, -106.456, -11.2993, 0.28", "43.571, -107.804, -11.4205, 0.55", "43.1072, -110.723, -11.6284, 0.28", "42.9961, -111.956, -11.6898, 0.55", "42.9171, -113.604, -11.7579, 0.83", "42.888, -117.917, -11.7368, 1.11", "42.902, -122.569, -11.2997, 0.28", "42.9239, -124.339, -11.0962, 0.83", "43.0398, -128.266, -10.5179, 0.28", "43.0717, -129.342, -10.331, 1.11", "43.3243, -134.843, -9.22893, 0.55", "43.5073, -137.949, -8.3893, 0.28", "43.5868, -139.278, -8.04024, 0.55", "43.6477, -140.888, -7.54945, 0.83", "43.6915, -143.251, -6.75505, 0.55", "43.8266, -145.103, -6.14767, 0.28", "44.213, -147.774, -5.37523, 0.83", "44.5998, -149.65, -4.95277, 0.55", "45.0666, -151.502, -4.39243, 0.28", "45.2823, -152.261, -4.12201, 0.83", "46.0057, -154.71, -3.05763, 0.28", "46.0715, -154.953, -2.95538, 0.55", "46.7757, -157.313, -2.05368, 0.28", "47.7972, -160.386, -0.82867, 0.83", "48.4692, -162.353, -0.0442106, 0.28", "49.0158, -164.053, 0.500992, 0.83", "50.1381, -167.84, 1.25741, 0.55", "50.6347, -169.325, 1.32417, 0.55", "51.0243, -170.401, 1.07862, 0.28", "51.2933, -171.092, 0.698457, 0.55", "52.325, -173.569, -1.41282, 0.28", "53.0093, -175.039, -2.97524, 0.83", "53.6298, -176.357, -4.53174, 0.28", "54.4296, -178.218, -6.78415, 0.55", "55.2267, -180.096, -9.09146, 0.55", "55.9782, -181.872, -11.266, 0.28", "56.9817, -184.364, -14.2082, 0.83", "58.1286, -187.416, -17.8079, 0.55", "59.2638, -190.729, -21.6401, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "16.6848, 31.6046, -15.3518, 0.55", "16.6448, 34.6646, -15.3518, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "16.6848, 31.6046, -15.3518, 0.83", "18.2948, 29.5446, -13.5918, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "2.71224, -100.2, 2.58832, 0.55", "5.32048, -101.043, 3.17878, 0.55", "6.80069, -101.448, 3.46806, 0.55", "8.40917, -102.066, 3.78027, 0.83", "9.12281, -102.377, 3.90272, 0.28", "10.4716, -102.972, 4.12575, 0.55", "11.5332, -103.42, 4.17723, 0.28", "13.8327, -104.458, 4.12502, 0.55", "16.3859, -105.625, 4.0372, 0.55", "18.4002, -106.593, 3.93268, 0.55", "19.4637, -107.102, 3.85148, 0.83", "23.1078, -108.875, 3.39854, 0.55" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "2.71224, -100.2, 2.58832, 1.11", "1.83102, -102.741, 3.04484, 1.11", "1.23975, -104.389, 3.31291, 1.11", "0.232749, -107.22, 3.81109, 1.11", "-1.55602, -111.721, 4.69207, 1.11", "-2.718, -114.586, 5.32258, 1.11", "-3.3615, -116.28, 5.72767, 0.83", "-4.18259, -118.542, 6.33045, 0.83", "-4.65359, -119.966, 6.77465, 1.11", "-5.75795, -123.568, 8.01696, 0.83", "-6.46601, -126.838, 8.99188, 0.83", "-6.88042, -129.852, 9.99786, 0.55", "-7.02915, -131.44, 10.5713, 0.55", "-7.22391, -134.522, 11.7027, 0.55", "-7.27551, -136.651, 12.4549, 0.83", "-7.04766, -140.861, 13.9306, 0.55", "-6.7094, -145.649, 15.593, 0.55", "-6.58369, -147.665, 16.3007, 0.55" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-21.2025, -85.5246, 22.0309, 0.55", "-22.8437, -87.7646, 24.6498, 0.55", "-24.3087, -89.764, 26.9874, 0.55", "-25.1488, -90.9107, 28.328, 0.55", "-27.1037, -93.5789, 31.4476, 0.55" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-21.2025, -85.5246, 22.0309, 1.11", "-19.7149, -87.7026, 22.3437, 1.11", "-18.4955, -89.7136, 22.3853, 1.11", "-17.5753, -91.2056, 22.1568, 0.83", "-16.7259, -92.558, 21.8289, 0.83", "-15.4624, -94.6234, 21.2492, 0.83", "-13.7617, -97.5411, 20.4052, 0.83", "-11.7881, -101.045, 19.2594, 0.55", "-10.2233, -103.922, 18.2427, 0.55", "-9.48459, -105.268, 17.7438, 0.55", "-8.67876, -106.62, 17.2219, 0.55", "-7.50776, -108.397, 16.5334, 0.55", "-6.74121, -109.487, 16.1545, 0.55", "-5.71726, -110.934, 16.0524, 0.55", "-5.20227, -111.791, 16.1049, 0.55", "-4.53432, -113.115, 16.2159, 0.55", "-4.35991, -113.704, 16.2681, 0.55", "-4.02211, -115.611, 16.6104, 0.55", "-3.83809, -118.472, 17.2139, 0.55", "-3.94734, -120.814, 17.5304, 0.55", "-4.12506, -123.312, 17.7518, 0.55", "-4.53835, -127.861, 18.118, 0.55", "-5.06884, -132.608, 17.9934, 0.55", "-5.41544, -135.339, 17.6706, 0.55", "-6.26078, -140.992, 16.514, 0.55", "-6.59206, -143.44, 15.8672, 0.55", "-7.08889, -146.346, 14.9581, 0.55", "-8.07822, -153.01, 12.406, 0.55", "-8.26571, -154.488, 11.6235, 0.55", "-8.34327, -155.506, 11.0339, 0.55", "-8.53358, -158.899, 9.0748, 0.55", "-8.82906, -162.912, 6.6449, 0.55", "-8.96496, -166.223, 4.58213, 0.55", "-8.88676, -171.733, 1.8632, 0.55", "-8.82786, -172.892, 1.1867, 0.55" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-48.6329, -126.087, -2.87525, 1.38", "-50.4836, -129.917, -5.33736, 1.38", "-51.0933, -130.812, -5.68302, 1.38", "-51.8106, -131.718, -5.92453, 1.38", "-52.7717, -132.828, -6.16334, 1.38", "-53.8364, -134.023, -6.37505, 1.38", "-54.4857, -134.768, -6.5107, 1.38", "-56.3297, -136.782, -6.61048, 1.11", "-57.5497, -138.058, -6.69992, 1.11", "-58.1523, -138.694, -6.75463, 1.11", "-59.0853, -139.713, -6.8571, 1.11", "-60.3509, -141.339, -7.03154, 1.11", "-60.8328, -142.068, -7.11048, 1.11", "-61.2829, -142.965, -7.19632, 1.11", "-61.537, -143.529, -7.23636, 1.11", "-61.8728, -144.282, -7.27224, 1.11", "-62.5562, -145.804, -7.30346, 1.11", "-62.8818, -146.515, -7.29776, 1.11", "-63.9044, -148.667, -7.28262, 1.11", "-64.8655, -150.611, -7.27028, 1.11", "-65.3286, -151.491, -7.26508, 1.11", "-66.0784, -152.788, -7.25714, 1.11", "-66.2895, -153.116, -7.25512, 1.11", "-67.1298, -154.436, -7.24863, 1.11" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-48.6329, -126.087, -2.87525, 0.83", "-49.5681, -126.844, -1.623, 0.83", "-50.5282, -127.723, -0.0802653, 0.83", "-51.8107, -128.922, 1.83595, 0.83", "-54.309, -131.107, 5.2279, 0.83", "-54.8673, -131.573, 5.91709, 0.83", "-55.6806, -132.199, 6.86423, 0.83", "-58.8466, -134.545, 10.1989, 0.83", "-60.6253, -135.641, 11.7135, 0.28", "-61.8018, -136.105, 12.2723, 0.28", "-63.8012, -136.429, 12.181, 0.83", "-65.8072, -136.223, 11.0872, 0.28", "-68.7688, -135.623, 8.85959, 0.28", "-69.6699, -135.37, 8.04178, 1.11", "-70.6526, -134.991, 7.00029, 0.28", "-72.9966, -134.036, 4.24107, 0.83", "-75.0148, -133.19, 1.717, 0.28" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-99.9432, -97.0331, 14.2044, 0.83", "-105.152, -95.5009, 10.7943, 0.83", "-106.894, -94.9954, 9.51092, 0.83", "-109.466, -94.2071, 7.58067, 0.83", "-111.137, -93.6747, 6.36818, 0.83", "-112.766, -93.1836, 5.23191, 0.83", "-118.126, -91.5116, 1.6011, 0.83", "-119.799, -90.9751, 0.422782, 0.83", "-121.042, -90.5473, -0.423177, 0.83", "-122.589, -90.0307, -1.31207, 0.83", "-123.813, -89.5742, -1.77867, 0.83", "-125.084, -89.073, -2.02066, 0.83", "-126.158, -88.6832, -2.00634, 0.83", "-127.925, -88.1129, -1.97884, 0.83", "-129.112, -87.751, -1.95908, 0.83", "-132.158, -86.6757, -1.90541, 0.83", "-133.716, -86.0382, -1.87733, 0.83", "-134.735, -85.6119, -1.859, 0.83", "-135.755, -85.0836, -1.84098, 0.83", "-136.922, -84.334, -1.82193, 0.83", "-138.388, -83.0459, -1.805, 0.83", "-138.712, -82.5861, -1.78022, 0.83", "-139.046, -82.0799, -1.74297, 0.83", "-140.05, -80.7172, -1.28151, 0.83", "-140.297, -80.4317, -1.1554, 0.83", "-141.104, -79.5263, -0.428005, 0.83", "-143.191, -77.3881, 1.76472, 0.83", "-145.525, -75.1377, 4.30406, 0.83", "-149.487, -71.7106, 8.99083, 0.83", "-151.812, -69.941, 11.7516, 0.83", "-157.813, -65.7771, 18.6698, 0.83", "-158.9, -65.108, 19.8737, 0.83", "-160.804, -64.0838, 21.8676, 0.83", "-165.957, -61.521, 26.8585, 0.83", "-168.825, -60.1578, 29.0371, 0.83", "-170.456, -59.3405, 30.0143, 0.83", "-172.146, -58.3825, 30.5754, 0.83", "-173.821, -57.1885, 31.0302, 0.83", "-174.818, -56.2535, 31.265, 0.83", "-176.495, -54.1158, 31.7892, 0.83", "-178.272, -51.3681, 32.8045, 0.83", "-179.877, -48.8166, 33.9988, 0.83", "-180.59, -47.6982, 34.4805, 0.83", "-182.757, -44.533, 35.8343, 0.83", "-186.433, -40.1014, 37.626, 0.83", "-188.255, -38.4436, 38.2149, 0.83", "-190.45, -37.2384, 38.112, 0.83", "-195.789, -34.968, 36.6903, 0.83", "-197.406, -34.3094, 36.0557, 0.83", "-199.851, -33.183, 34.6357, 0.28", "-200.87, -32.587, 33.8653, 0.83", "-203.958, -29.8443, 31.385, 0.28", "-205.933, -27.1635, 29.7792, 0.28", "-206.759, -25.4903, 29.1867, 0.83", "-208.154, -21.238, 28.1993, 0.28", "-208.474, -19.5324, 28.0043, 1.11", "-208.839, -15.109, 27.9021, 0.28", "-208.825, -14.5062, 27.9771, 0.83", "-208.666, -12.6683, 28.1666, 0.28", "-208.258, -9.1008, 28.5784, 0.28", "-208.125, -7.38627, 28.8113, 0.55", "-208.098, -5.90297, 28.9154, 0.55", "-208.26, -3.06825, 28.9187, 0.55", "-209.127, 2.96138, 28.5544, 0.28", "-209.921, 5.69113, 28.2759, 0.28", "-211.189, 8.75576, 27.9342, 0.28", "-211.658, 9.79321, 27.8345, 0.55", "-212.697, 12.0144, 27.6769, 0.28", "-214.164, 15.544, 27.6195, 0.28", "-216.663, 22.1336, 27.8406, 0.28", "-218.343, 26.975, 28.0148, 0.28", "-219.665, 31.1542, 28.0844, 0.28", "-221.234, 36.3876, 28.0932, 0.28", "-224.374, 47.2839, 27.9708, 0.28", "-224.677, 48.4128, 27.9462, 0.55", "-225.766, 52.3419, 27.6353, 0.28", "-226.741, 55.4206, 27.1835, 0.83", "-227.543, 57.3743, 26.7375, 0.28", "-228.589, 59.303, 26.1081, 0.28", "-229.653, 60.6931, 25.4933, 0.55", "-233.403, 65.2014, 23.7172, 0.28", "-233.986, 65.8274, 23.518, 0.55", "-235.915, 67.9455, 22.8315, 0.28", "-237.794, 70.1925, 22.0118, 0.28", "-238.948, 71.7455, 21.4417, 0.28", "-239.614, 72.7337, 21.0689, 0.55", "-241.253, 75.9648, 19.8031, 0.28", "-243.634, 82.0175, 17.3102, 0.28", "-244.238, 84.2073, 16.3425, 0.55", "-244.595, 86.0139, 15.5396, 0.28", "-244.889, 88.1009, 14.6002, 0.55", "-245.385, 93.2569, 12.3519, 0.28", "-245.467, 95.2591, 11.4047, 0.55", "-245.55, 98.5736, 9.90397, 0.28", "-245.551, 99.5656, 9.40412, 0.55", "-245.519, 103.594, 7.28606, 0.28", "-245.511, 104.378, 6.86639, 0.55", "-245.457, 108.668, 3.9038, 0.28", "-245.393, 109.784, 3.04542, 0.55", "-245.276, 111.644, 1.56814, 0.28", "-245.21, 112.989, 0.458218, 0.28", "-245.184, 113.411, 0.0934306, 0.55", "-245.291, 118.744, -4.42277, 0.28", "-245.345, 119.212, -4.80637, 0.55", "-245.659, 120.897, -6.23962, 0.28", "-246.14, 122.761, -7.81368, 0.28", "-246.57, 124.246, -8.97064, 0.83", "-247.287, 126.327, -10.3986, 0.28", "-248.361, 129.106, -11.7991, 0.55", "-248.828, 130.449, -12.421, 0.55", "-249.234, 131.848, -12.9989, 0.28", "-249.849, 133.891, -13.7248, 0.28", "-250.446, 135.801, -14.3392, 0.55", "-251.112, 138.209, -15.1532, 0.28", "-251.431, 139.348, -15.4676, 0.55", "-251.694, 140.37, -15.8075, 0.28" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-99.9432, -97.0331, 14.2044, 1.11", "-103.498, -99.4278, 13.5169, 1.11", "-106.328, -101.44, 13.3695, 1.11", "-108.039, -102.758, 13.422, 1.11", "-109.659, -104.103, 13.5479, 1.11", "-111.011, -105.292, 13.6936, 1.11", "-112.249, -106.386, 13.8424, 1.11", "-114.296, -108.413, 14.3466, 1.11", "-115.809, -109.913, 14.7246, 1.11", "-117.016, -111.177, 15.0216, 1.11", "-117.989, -112.356, 15.4147, 1.11", "-119.176, -113.875, 15.9996, 1.11", "-120.059, -115.05, 16.5321, 1.11", "-121.17, -116.685, 17.292, 1.11", "-122.67, -118.881, 18.3711, 1.11", "-125.118, -122.455, 20.7367, 1.11", "-126.627, -124.648, 22.3281, 1.11", "-127.64, -126.122, 23.4127, 1.11", "-128.756, -127.834, 24.6379, 1.11", "-130.41, -130.482, 26.4489, 1.11", "-134.271, -136.332, 30.1376, 1.11", "-135.864, -138.698, 31.4218, 1.11", "-137.121, -140.671, 32.4353, 1.11", "-139.149, -143.923, 33.9641, 1.11", "-139.678, -144.832, 34.4107, 1.11", "-141.121, -147.455, 35.6334, 1.11", "-141.897, -148.738, 36.1017, 1.11", "-143.291, -150.647, 36.9389, 1.11", "-144.131, -151.605, 37.4221, 1.11", "-146.74, -154.005, 38.4574, 1.11", "-148.49, -155.478, 39.0771, 1.11", "-150.901, -157.389, 39.7969, 1.11", "-153.02, -158.747, 40.2178, 1.11", "-153.589, -159.019, 40.2767, 1.11", "-157.64, -160.728, 40.4289, 1.11", "-161.497, -162.274, 40.3164, 1.11", "-163.352, -163.01, 40.292, 1.11", "-166.244, -164.266, 40.3181, 1.11", "-168.379, -165.322, 40.3891, 1.11", "-169.621, -165.987, 40.4696, 1.11", "-170.937, -166.818, 40.626, 1.11", "-172.33, -167.884, 40.6599, 1.11", "-174.358, -169.721, 40.7218, 1.11", "-175.491, -170.883, 40.7599, 1.11", "-176.748, -172.147, 40.8164, 1.11", "-178.076, -173.43, 40.8838, 1.11", "-179.497, -174.781, 40.9618, 1.11", "-180.567, -175.815, 41.0216, 1.11", "-182.29, -177.44, 41.1125, 1.11", "-183.768, -178.876, 41.1831, 1.11", "-185.935, -181.089, 41.2683, 1.11", "-186.729, -181.917, 41.2983, 1.11", "-188.473, -183.779, 41.359, 1.11", "-189.57, -184.966, 41.3894, 1.11", "-190.518, -185.979, 41.4053, 1.11", "-191.791, -187.226, 41.4053, 1.11", "-192.714, -187.95, 41.4053, 1.11", "-193.648, -188.608, 41.4053, 1.11", "-195.446, -189.727, 41.4053, 1.11", "-196.155, -190.146, 41.4053, 1.11", "-197.462, -190.879, 41.4053, 1.11", "-199.445, -192.001, 41.4053, 1.11", "-200.135, -192.381, 41.4075, 1.11", "-200.891, -192.81, 41.3411, 1.11", "-201.572, -193.175, 41.2213, 1.11", "-202.44, -193.624, 41.0025, 1.11", "-203.407, -194.141, 40.6722, 1.11", "-204.655, -194.791, 40.1821, 1.11", "-207.07, -195.893, 39.5048, 1.11", "-207.638, -196.123, 39.4089, 1.11", "-207.889, -196.227, 39.4017, 1.11", "-209.164, -196.827, 39.5415, 1.11", "-210.864, -197.738, 39.926, 1.11", "-212.797, -198.928, 40.6475, 1.11", "-213.68, -199.499, 41.0826, 1.11", "-214.718, -200.24, 41.6161, 1.11", "-215.747, -201.016, 42.1276, 1.11", "-216.82, -201.922, 42.6246, 1.11", "-217.684, -202.813, 42.96, 1.11", "-218.518, -203.7, 43.1454, 1.11", "-219.146, -204.305, 43.2459, 1.11", "-220.341, -205.394, 43.3658, 1.11", "-221.36, -206.317, 43.4468, 1.11", "-222.183, -207.116, 43.4921, 1.11", "-223.176, -208.069, 43.5533, 1.11", "-224.206, -209.032, 43.6563, 1.11", "-225.319, -210.021, 43.7977, 1.11", "-225.731, -210.383, 43.8614, 1.11", "-226.775, -211.28, 44.035, 1.11", "-227.475, -211.913, 44.1504, 1.11", "-228.695, -213.064, 44.3417, 1.11", "-229.694, -213.95, 44.6879, 1.11", "-230.547, -214.61, 45.083, 1.11", "-231.288, -215.146, 45.4749, 1.11", "-232.47, -215.946, 46.1313, 1.11", "-232.922, -216.279, 46.3955, 1.11", "-235.484, -218.45, 48.1739, 1.11", "-236.064, -218.977, 48.5688, 1.11", "-236.727, -219.603, 48.9851, 1.11", "-237.466, -220.251, 49.563, 1.11", "-238.036, -220.715, 50.0318, 1.11", "-238.77, -221.31, 50.606, 1.11", "-240.287, -222.586, 51.6415, 1.11", "-240.664, -222.879, 51.9199, 1.11", "-243.663, -224.66, 54.1189, 1.11", "-244.418, -225.038, 54.6458, 1.11", "-244.908, -225.277, 54.9412, 1.11", "-245.228, -225.442, 55.1112, 1.11", "-246.499, -226.166, 55.8936, 1.11", "-249.455, -227.983, 57.6509, 1.11", "-250.219, -228.481, 58.0649, 1.11", "-252.428, -229.972, 59.309, 1.11", "-254.522, -231.47, 60.5134, 1.11", "-258.19, -234.188, 62.5378, 1.11", "-260.028, -235.583, 63.4643, 1.11", "-261.045, -236.365, 63.9724, 1.11", "-261.508, -236.705, 64.2057, 1.11", "-262.45, -237.354, 64.6604, 1.11", "-264.054, -238.469, 65.2632, 1.11", "-266.049, -239.937, 65.7077, 1.11", "-268.66, -241.935, 66.4073, 1.11", "-269.328, -242.462, 66.5929, 1.11", "-269.925, -242.943, 66.7457, 1.11", "-270.568, -243.496, 66.8998, 1.11", "-271.154, -244.062, 67.0298, 1.11", "-272.175, -245.038, 67.1058, 1.11", "-273.272, -245.88, 67.0012, 1.11", "-274.764, -246.975, 66.8643, 1.11", "-275.407, -247.418, 66.8151, 1.11", "-275.874, -247.714, 66.7915, 1.11", "-276.581, -248.154, 66.7481, 1.11", "-278.373, -249.502, 66.6072, 1.11", "-280.468, -251.48, 66.4176, 1.11", "-281.451, -252.838, 66.3303, 1.11", "-281.759, -253.297, 66.3095, 1.11", "-282.069, -253.755, 66.2955, 1.11", "-282.626, -254.576, 66.2831, 1.11", "-283.162, -255.428, 66.2831, 1.11", "-284.031, -256.636, 66.2831, 1.11", "-284.459, -257.352, 66.2831, 1.11", "-284.854, -258.076, 66.2831, 1.11", "-285.338, -258.948, 66.2831, 1.11", "-286.001, -260.196, 66.2831, 1.11", "-286.123, -260.45, 66.2831, 1.11", "-286.476, -261.257, 66.2831, 1.11", "-286.79, -262.07, 66.2831, 1.11", "-286.98, -262.589, 66.2831, 1.11", "-287.444, -263.74, 66.2831, 1.11", "-287.701, -264.229, 66.2831, 1.11", "-288.358, -265.389, 66.651, 1.11", "-288.624, -265.865, 66.9458, 1.11", "-288.738, -266.058, 67.1172, 1.11", "-288.847, -266.237, 67.3054, 1.11", "-289.415, -267.097, 68.3803, 1.11", "-291.157, -269.635, 71.5747, 1.11", "-291.477, -270.076, 72.1451, 1.11", "-291.75, -270.427, 72.5775, 1.11", "-292.367, -271.12, 73.2954, 1.11", "-292.525, -271.3, 73.443, 1.11", "-293.378, -272.27, 73.9354, 1.11", "-293.742, -272.678, 74.0188, 1.11", "-294.087, -273.1, 74.1159, 1.11", "-294.994, -274.294, 74.4164, 1.11", "-296.293, -276.054, 74.9393, 1.11", "-296.95, -276.975, 75.2483, 1.11", "-297.254, -277.472, 75.4484, 1.11", "-297.501, -277.999, 75.6726, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "13.5161, 26.7547, 8.75168, 0.83", "14.0861, 29.3147, 7.62168, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "13.5161, 26.7547, 8.75168, 0.83", "12.3648, 29.4389, 8.46096, 0.83", "11.3801, 31.7345, 8.21232, 0.55", "11.0346, 32.54, 8.12508, 0.55", "10.5715, 33.6197, 8.00813, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "72.0524, 33.4608, -18.7006, 0.55", "74.7772, 33.2215, -18.883, 0.55", "76.746, 32.8902, -18.9641, 0.55", "80.5228, 32.2006, -18.8123, 0.55", "83.2147, 31.7313, -19.1085, 0.55", "84.9503, 31.4071, -19.6868, 0.55", "87.0475, 31.0524, -20.5684, 0.55", "90.909, 30.3287, -22.5236, 0.55", "93.5025, 29.8802, -23.9225, 0.55", "100.248, 28.8362, -27.7202, 0.55", "106.584, 28.1776, -31.3303, 0.55", "109.463, 27.9614, -33.008, 0.55", "110.995, 27.8858, -33.884, 0.55", "113.612, 27.7735, -35.3146, 0.55", "116.095, 27.6671, -36.4811, 0.55", "118.516, 27.5045, -37.2972, 0.55", "121.199, 27.2565, -38.1384, 0.55", "123.694, 26.7316, -39.109, 0.55", "125.346, 26.2994, -40.0359, 0.28", "125.839, 26.1445, -40.375, 0.83", "130.464, 24.7117, -43.6105, 0.55", "132.349, 24.0717, -44.8892, 0.55", "136.887, 22.5039, -47.6904, 0.55", "141.577, 20.6666, -50.4344, 0.28", "142.762, 20.1671, -51.0126, 0.55", "146.405, 18.7139, -52.3125, 0.55", "147.79, 18.1849, -52.6019, 0.55", "149.813, 17.5017, -52.9338, 0.83", "152.715, 16.5887, -53.2443, 0.55", "157.679, 15.0659, -53.6004, 0.55", "160.148, 14.3858, -53.8724, 0.55", "162.032, 13.9426, -54.1646, 0.55", "167.037, 13.0548, -54.9877, 0.55", "168.858, 12.8648, -55.2985, 0.55", "170.58, 12.8156, -55.5938, 0.83", "172.212, 12.84, -55.9218, 0.55", "172.751, 12.845, -56.0438, 0.83", "173.864, 12.8888, -56.2902, 1.11", "176.521, 12.9291, -56.826, 1.11", "179.797, 13.0069, -57.3565, 0.28", "181.302, 13.019, -57.5653, 0.28", "184.005, 13.0516, -57.9318, 0.83", "185.603, 13.062, -58.1551, 0.28", "187.355, 13.0609, -58.446, 0.55", "189.721, 13.0671, -58.8662, 0.55", "195.179, 13.1127, -59.8642, 0.28", "197.962, 13.1288, -60.4001, 0.55", "200.53, 13.1526, -60.967, 0.28", "202.692, 13.1434, -61.5019, 0.55", "204.301, 13.1747, -61.9675, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "72.0524, 33.4608, -18.7006, 0.55", "77.3285, 35.4471, -15.4808, 0.55", "78.6954, 36.0432, -14.7573, 0.28", "82.1278, 37.5402, -12.9406, 0.55", "83.8465, 38.2897, -12.0309, 0.28", "84.5308, 38.5881, -11.6688, 0.55", "86.6747, 39.5232, -10.534, 0.28", "87.4314, 39.8514, -10.4639, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "16.6448, 34.6646, -15.3518, 0.55", "16.4417, 36.3196, -16.3368, 0.55", "16.4167, 36.6697, -16.5079, 0.83", "16.3052, 38.8364, -17.6006, 0.28", "16.2417, 39.3929, -17.8591, 0.83", "15.8398, 42.2102, -19.1098, 0.55", "15.6447, 43.5733, -19.6775, 0.55", "15.3609, 45.4378, -20.3414, 0.55", "15.0343, 47.6511, -21.0705, 0.55", "14.5079, 50.5101, -21.7685, 0.55", "14.3189, 51.3597, -21.9402, 0.83", "13.9709, 52.7931, -22.1337, 0.55", "13.684, 53.9022, -22.2467, 0.83", "13.276, 55.4141, -22.3448, 1.11", "11.744, 61.0836, -22.4932, 0.55", "11.4672, 62.1881, -22.5165, 1.11", "10.2213, 67.0202, -22.6998, 0.55", "9.79554, 68.7242, -22.7899, 0.55", "9.48283, 70.1258, -22.8931, 0.83", "9.12466, 71.9452, -23.0561, 0.55", "8.7699, 74.2096, -23.3376, 0.83", "8.42496, 76.7225, -23.6874, 0.83", "8.16772, 78.7954, -24.0058, 0.83", "7.71799, 82.3936, -24.522, 0.55", "7.61187, 83.1624, -24.6217, 1.11", "7.37713, 84.8296, -24.7788, 0.55", "6.99422, 87.3429, -24.9257, 1.11", "6.71908, 89.2827, -24.9697, 0.55", "6.40652, 91.8153, -25.0024, 0.83", "6.28538, 93.2239, -25.0024, 0.55", "5.97679, 97.9293, -25.0024, 0.83", "5.95605, 98.5458, -25.0005, 0.55", "5.96367, 100.033, -24.992, 0.83", "6.07829, 102.029, -24.9764, 0.28", "6.15669, 102.906, -24.9642, 0.55", "6.45252, 105.516, -24.9115, 0.28", "6.77049, 107.978, -24.8479, 0.83", "7.01995, 110.065, -24.7845, 0.28", "7.35939, 112.875, -24.6904, 0.83", "7.49949, 114.289, -24.6478, 0.55", "7.66717, 116.143, -24.5968, 0.28", "7.75519, 117.281, -24.569, 0.83", "7.85355, 120.115, -24.5132, 0.55", "7.88469, 121.725, -24.4865, 0.55", "7.93451, 129.121, -24.3909, 0.28", "7.93225, 129.737, -24.3858, 0.55", "7.89674, 131.696, -24.3742, 0.28", "7.83094, 134.2, -24.3637, 0.55", "7.73786, 136.921, -24.3605, 0.28", "7.70378, 137.798, -24.3594, 0.55", "7.65953, 138.902, -24.3436, 0.28", "7.60589, 140.653, -24.3005, 0.28", "7.57806, 141.485, -24.2712, 0.55", "7.45015, 143.99, -24.156, 0.28", "7.39951, 144.54, -24.1268, 0.55", "7.14482, 146.694, -23.91, 0.28", "6.94778, 147.664, -23.7854, 0.28", "6.74491, 148.51, -23.6662, 0.28", "6.6128, 149.039, -23.5758, 0.28", "6.19295, 150.615, -23.2708, 0.55", "5.54364, 153.916, -22.5928, 0.28", "4.96043, 157.284, -22.0092, 0.28", "4.59204, 159.516, -21.6909, 0.55", "4.14378, 162.776, -21.3155, 0.28", "3.97278, 164.298, -21.1763, 0.28", "3.49355, 170.363, -20.9225, 0.55", "3.37965, 173.506, -20.9783, 0.28", "3.36559, 174.681, -21.0443, 0.55", "3.34039, 176.787, -21.2524, 0.28", "3.33973, 177.167, -21.3096, 0.28", "3.33094, 179.454, -21.6686, 0.55", "3.24458, 181.937, -22.0568, 0.28", "3.16652, 183.794, -22.1653, 0.55", "2.98305, 186.145, -22.3676, 0.28", "2.94963, 186.422, -22.3963, 0.55", "2.57934, 189.182, -22.689, 0.28", "2.4937, 189.727, -22.7307, 0.55", "2.05929, 191.994, -22.9479, 0.28", "1.27413, 195.756, -23.3059, 0.55", "0.767396, 197.773, -23.4935, 0.28", "0.455306, 199.15, -23.6034, 0.55", "0.159773, 201.024, -23.8465, 0.28", "0.068262, 202.006, -23.9631, 0.55", "0.106514, 203.681, -24.1277, 0.28", "0.163859, 204.241, -24.1287, 0.28", "0.652196, 206.29, -24.136, 0.28", "1.62651, 209.011, -24.1054, 0.28", "2.29422, 210.286, -24.1199, 0.28", "3.315, 212.201, -24.0783, 0.28", "3.95445, 213.27, -24.0293, 0.28", "5.35414, 215.481, -23.8837, 0.28", "5.68144, 216.001, -23.8394, 0.28", "7.36441, 218.703, -23.552, 0.55", "9.99491, 223.046, -23.2494, 0.28", "11.3169, 225.543, -23.1326, 0.28", "11.3169, 225.543, -23.1326, 0.55", "12.2573, 227.9, -23.3526, 0.28", "12.3383, 228.155, -23.3987, 0.55", "13.0792, 231.203, -24.1534, 0.28", "13.4445, 233.043, -24.7097, 0.28", "13.6326, 234.819, -25.2357, 0.55", "14.1013, 239.627, -26.7343, 0.28", "14.3638, 242.816, -27.8185, 0.28", "14.4818, 244.716, -28.4939, 0.28", "14.5045, 246.071, -29.0323, 0.28", "14.5251, 248.069, -29.8454, 0.28" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "16.6448, 34.6646, -15.3518, 0.55", "15.6727, 35.2494, -16.9445, 0.55", "14.4435, 36.3502, -18.9706, 0.55", "12.7863, 38.1758, -22.2237, 0.55", "11.0294, 40.6113, -25.9909, 0.55", "10.4526, 41.4196, -27.3196, 0.55", "8.59067, 43.9664, -31.8082, 0.55", "7.11274, 46.1396, -35.8788, 1.11", "5.035, 49.2014, -41.9791, 0.55", "3.85362, 50.7721, -45.6933, 0.55", "0.898447, 53.5776, -54.4778, 0.55", "0.204649, 53.9293, -56.2764, 0.55", "-1.57609, 54.23, -59.981, 0.55", "-2.39049, 54.1658, -61.4524, 0.55", "-3.86317, 53.9271, -63.5446, 0.55", "-6.69841, 53.4439, -67.0364, 0.55", "-8.71156, 53.2061, -69.0523, 0.55", "-11.8627, 53.0266, -71.8867, 0.55", "-13.9017, 52.9214, -73.5129, 0.55", "-17.2385, 52.8037, -76.0163, 0.55", "-18.6644, 52.8293, -77.0299, 1.11", "-21.7174, 52.8957, -79.0458, 0.55", "-22.9084, 52.9556, -79.8852, 0.83", "-24.2333, 53.045, -80.8847, 0.55", "-25.4386, 53.1888, -81.884, 0.55", "-27.7348, 53.3478, -83.7525, 0.83", "-29.5002, 53.4343, -85.2116, 0.28", "-30.5875, 53.4676, -86.1013, 0.55", "-31.4829, 53.4841, -86.8301, 0.28", "-33.2906, 53.4771, -88.11, 1.38", "-36.3113, 53.3053, -89.9515, 0.55", "-37.9676, 53.1724, -90.7185, 0.83", "-38.9946, 53.0833, -91.1866, 0.55", "-40.2657, 52.9542, -91.7497, 0.83", "-42.7791, 52.662, -92.8795, 0.55", "-43.2828, 52.5974, -93.099, 0.55", "-45.8859, 52.2423, -94.3052, 0.55", "-48.8623, 51.7399, -95.8179, 0.28", "-50.6039, 51.3976, -96.7536, 0.83", "-52.1023, 51.0152, -97.6728, 0.55", "-52.8356, 50.7717, -98.1795, 0.83", "-54.3355, 50.1668, -99.2391, 0.28", "-54.5423, 50.0665, -99.3843, 0.55", "-55.7526, 49.5051, -100.078, 0.28", "-57.4139, 48.8296, -100.921, 0.83", "-58.5728, 48.4501, -101.5, 0.55", "-59.1394, 48.3132, -101.761, 0.28", "-60.7019, 48.051, -102.633, 0.83", "-61.971, 47.8801, -103.358, 0.55", "-63.473, 47.7483, -104.25, 0.83", "-66.3795, 47.6373, -106.005, 0.55", "-67.6341, 47.628, -106.804, 0.83", "-71.7745, 47.6535, -109.644, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-8.82786, -172.892, 1.1867, 0.55", "-8.89484, -174.279, 1.96826, 0.55", "-9.04617, -177.412, 3.73436, 0.55", "-9.20223, -180.643, 5.55555, 0.55", "-9.44671, -185.705, 8.40866, 0.55", "-9.63696, -189.645, 10.629, 1.66", "-9.64851, -189.884, 10.7637, 1.66" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-8.82786, -172.892, 1.1867, 0.55", "-8.79509, -173.3, 1.65762, 0.55", "-8.59269, -174.711, 3.30235, 0.55", "-8.27564, -176.737, 5.58004, 0.55", "-7.22923, -185.314, 15.3257, 0.55", "-7.03431, -187.398, 17.6787, 0.55", "-6.76377, -191.298, 22.0541, 0.55", "-6.68599, -192.729, 23.6752, 0.55", "-6.60097, -194.11, 25.2633, 0.55", "-6.48337, -197.028, 28.5254, 0.55", "-6.46145, -197.757, 29.2065, 0.55", "-6.43976, -199.878, 31.1779, 0.55", "-6.48385, -200.988, 32.0076, 0.55", "-6.50205, -201.832, 32.5467, 0.55", "-6.57866, -203.712, 33.5797, 0.55", "-6.5858, -207.582, 35.4244, 0.55", "-6.59537, -208.623, 35.9077, 0.55", "-6.71917, -211.691, 37.2133, 0.55", "-7.08675, -216.032, 39.0344, 0.55", "-7.6306, -219.705, 40.4361, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-67.1298, -154.436, -7.24863, 1.11", "-71.9924, -154.459, -4.63368, 1.11", "-74.2765, -154.353, -3.13225, 1.11", "-75.5139, -154.242, -2.31076, 1.11", "-77.3451, -154.02, -0.958578, 1.11", "-81.2192, -153.506, 1.92811, 1.11", "-83.4977, -153.198, 3.57148, 0.83", "-87.8684, -152.374, 6.5731, 0.83", "-89.4844, -152.039, 7.7062, 0.83", "-93.8463, -150.979, 10.7517, 0.83", "-95.4337, -150.544, 11.8197, 0.83", "-97.3042, -150.023, 12.9202, 0.83", "-98.605, -149.566, 13.657, 0.83", "-99.4638, -149.199, 14.0324, 0.83", "-99.9302, -148.973, 14.2275, 0.83", "-101.096, -148.321, 14.6239, 0.83", "-101.606, -148.032, 14.848, 0.83", "-104.02, -146.871, 16.0245, 0.83", "-105.187, -146.404, 16.6093, 0.83", "-105.946, -146.163, 16.9554, 0.83", "-107.179, -145.914, 17.4205, 0.28", "-108.548, -145.787, 17.7633, 1.11", "-110.187, -145.698, 18.0101, 0.28", "-111.082, -145.683, 18.0718, 0.55", "-112.763, -145.697, 18.1633, 1.11", "-114.517, -145.701, 18.2256, 0.83", "-118.159, -145.8, 18.2736, 1.11", "-120.263, -145.911, 18.2921, 1.11", "-121.942, -146.09, 18.2989, 0.28", "-122.764, -146.23, 18.3365, 0.28", "-124.474, -146.593, 18.441, 0.83", "-125.823, -146.919, 18.54, 0.55", "-126.777, -147.199, 18.6209, 0.55", "-128.482, -147.677, 18.5479, 0.28", "-130.848, -148.245, 18.3529, 1.11", "-133.821, -148.763, 17.9762, 0.55", "-134.906, -148.894, 17.801, 1.11", "-135.99, -148.986, 17.5982, 1.11", "-140.034, -149.247, 16.6945, 0.28", "-142.239, -149.263, 16.0801, 1.11", "-144.559, -149.226, 15.2215, 1.11", "-146.21, -149.172, 14.6338, 1.11" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-67.1298, -154.436, -7.24863, 1.11", "-67.4862, -155.757, -7.83254, 1.11", "-67.796, -156.777, -8.24452, 1.11", "-68.4075, -158.525, -8.87859, 1.11", "-68.7774, -159.58, -9.23183, 1.11", "-69.9983, -163.411, -10.4224, 1.11", "-70.5818, -165.406, -11.0115, 1.11", "-71.1132, -167.369, -11.5606, 1.11", "-71.5828, -169.215, -12.0032, 1.11", "-71.8008, -170.053, -12.1464, 1.11", "-72.1695, -171.385, -12.2549, 1.11", "-72.2878, -171.757, -12.2424, 1.11", "-72.9948, -173.926, -12.1612, 1.11", "-73.7009, -175.91, -12.0866, 1.11", "-74.3598, -177.799, -12.1643, 1.11", "-75.0944, -179.771, -12.3453, 1.11", "-76.12, -182.408, -12.6852, 1.11", "-76.8064, -184.199, -12.9764, 1.11", "-77.5505, -186.262, -13.3995, 1.11", "-78.7109, -189.823, -14.2804, 1.11", "-79.0052, -190.92, -14.5983, 1.11", "-79.0614, -191.183, -14.6827, 1.11", "-79.1156, -191.443, -14.7746, 1.11", "-79.3171, -192.204, -15.0182, 1.11", "-79.579, -193.152, -15.2087, 1.11", "-79.6559, -193.412, -15.2087, 1.11", "-79.7574, -193.797, -15.2087, 1.11", "-80.0864, -195.164, -15.2087, 1.11", "-80.3737, -196.52, -15.2087, 1.11", "-80.5299, -197.339, -15.2087, 1.11", "-80.7101, -198.43, -15.2087, 1.11", "-80.9712, -200.272, -15.2087, 1.11", "-81.1129, -201.37, -15.2087, 1.11", "-81.249, -202.192, -15.209, 1.11", "-81.3688, -202.801, -15.2094, 1.11", "-81.5162, -203.394, -15.2101, 1.11", "-81.8406, -204.495, -15.2125, 1.11", "-82.0708, -205.243, -15.2151, 1.11", "-82.5512, -206.786, -15.2218, 1.11", "-82.7853, -207.635, -15.2259, 1.11", "-82.8393, -207.901, -15.2272, 1.11", "-82.8768, -208.181, -15.2286, 1.11", "-82.99, -209.281, -15.234, 1.11", "-83.0087, -209.897, -15.2365, 1.11", "-82.9783, -210.731, -15.2391, 1.11", "-83.003, -211.346, -15.2405, 1.11", "-83.1264, -212.218, -15.2415, 1.11", "-83.2292, -212.762, -15.2415, 1.11", "-83.3742, -213.365, -15.2415, 1.11", "-83.5084, -213.9, -15.2194, 1.11", "-83.8246, -215.237, -15.1217, 1.11", "-84.1131, -216.44, -15.023, 1.11", "-84.29, -217.295, -14.9424, 1.11", "-84.29, -217.295, -14.9424, 1.11", "-84.4605, -218.599, -14.778, 1.11", "-84.5121, -219.142, -14.6905, 1.11" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-75.0148, -133.19, 1.717, 0.55", "-75.1443, -131.232, 1.717, 0.55", "-75.2262, -129.995, 1.717, 0.28", "-75.2631, -129.437, 1.717, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-75.0148, -133.19, 1.717, 0.28", "-77.493, -132.3, 0.312095, 0.28", "-78.1566, -132.104, -0.456517, 0.55", "-79.5129, -131.734, -1.90581, 0.28", "-81.0776, -131.347, -3.62579, 0.83", "-83.7836, -130.552, -6.76879, 0.28", "-84.6984, -130.26, -7.94788, 0.83", "-88.9091, -129.097, -13.6874, 0.28", "-89.8205, -128.887, -15.143, 0.28", "-90.5758, -128.738, -16.5542, 0.83", "-91.6851, -128.519, -18.5665, 0.28", "-93.3149, -128.199, -21.2343, 0.28", "-94.2471, -128.047, -22.7417, 0.55", "-98.2616, -127.58, -28.3919, 0.55", "-99.9622, -127.452, -30.7563, 0.55", "-104.254, -127.289, -36.5084, 0.83", "-106.275, -127.296, -38.9355, 0.28", "-111.372, -127.255, -44.6472, 0.28", "-113.788, -127.119, -47.6563, 0.28", "-115.558, -126.986, -49.8696, 0.55", "-117.418, -126.828, -52.3973, 0.55", "-119.635, -126.662, -56.0098, 0.28", "-120.936, -126.507, -58.4116, 0.55", "-122.732, -125.916, -62.3175, 0.28", "-122.963, -125.832, -62.8959, 0.28", "-124.592, -124.987, -67.7507, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-251.694, 140.37, -15.8075, 0.28", "-252.332, 142.785, -17.4894, 0.28", "-252.434, 143.261, -17.8638, 0.55", "-252.764, 145.016, -19.2886, 0.28", "-253.095, 146.388, -20.5013, 0.28", "-253.759, 148.666, -22.3583, 0.28", "-255.034, 153.583, -27.0013, 0.28", "-255.152, 154.051, -27.4712, 0.55", "-255.618, 155.86, -29.3256, 0.28", "-256.054, 157.424, -30.944, 0.28", "-256.828, 159.937, -33.4395, 0.28", "-258.712, 165.28, -38.3299, 0.28", "-259.382, 166.768, -39.4892, 0.28", "-260.339, 168.811, -40.9653, 0.28", "-260.832, 169.848, -41.742, 0.55", "-261.471, 171.152, -42.6412, 0.28", "-263.75, 175.496, -45.7247, 0.28", "-264.356, 176.675, -46.5445, 0.55", "-265.001, 178.119, -47.6432, 0.28", "-266.596, 181.889, -50.4364, 0.55", "-267.573, 184.582, -52.1605, 0.28", "-268.959, 188.697, -54.5441, 0.28", "-272.115, 197.648, -58.9945, 0.28", "-272.817, 199.448, -59.8428, 0.55", "-273.806, 201.67, -60.7751, 0.28", "-276.195, 206.618, -62.5597, 0.28", "-277.39, 208.862, -63.2422, 0.28", "-279.279, 211.882, -63.792, 0.28", "-281.534, 215.042, -63.997, 0.28", "-284.403, 218.782, -64.1923, 0.28", "-285.484, 220.195, -64.2147, 0.83", "-288.594, 224.524, -63.8987, 0.28", "-289.048, 225.212, -63.7756, 0.28", "-291.372, 229.023, -63.1207, 0.28", "-291.86, 229.881, -62.9749, 0.83", "-294.823, 235.261, -62.1919, 0.28", "-298.579, 242.155, -61.3767, 0.28", "-301.304, 247.37, -61.1905, 0.28", "-303.634, 251.852, -61.2126, 0.55", "-304.529, 253.575, -61.304, 0.28", "-305.69, 255.782, -61.5468, 0.28", "-306.169, 256.637, -61.7318, 0.55", "-308.016, 259.903, -62.7201, 0.28", "-309.234, 262.237, -63.4998, 0.28", "-310.366, 264.384, -64.002, 0.28", "-310.778, 265.235, -64.3062, 0.55", "-311.262, 266.435, -64.8078, 0.28", "-311.565, 267.207, -65.1006, 0.28", "-312.609, 269.954, -66.0288, 0.28", "-313.195, 271.547, -66.5672, 0.28", "-315.343, 277.312, -68.322, 0.28", "-316.054, 279.108, -68.9105, 0.55", "-317.45, 282.586, -70.0739, 0.28", "-318.075, 284.146, -70.6987, 0.28", "-318.293, 284.678, -70.9284, 0.28", "-318.806, 285.971, -71.5344, 0.55", "-320.397, 290.091, -73.7153, 0.28", "-321.163, 292.227, -75.1353, 0.28", "-322.027, 295.072, -77.2552, 0.55", "-322.504, 296.626, -78.3444, 0.28", "-322.794, 297.556, -78.9389, 0.28", "-323.378, 299.394, -80.0333, 0.55", "-324.122, 301.179, -80.8827, 0.28", "-325.35, 303.467, -81.921, 0.28", "-326.591, 305.441, -82.8751, 0.28", "-327.662, 307.013, -83.6996, 0.28", "-328.272, 307.86, -84.15, 0.55", "-331.833, 312.557, -86.6489, 0.28", "-334.498, 315.909, -88.5601, 0.28", "-336.888, 318.773, -90.3453, 0.28", "-337.76, 319.843, -91.0869, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-251.694, 140.37, -15.8075, 0.55", "-250.024, 142.393, -17.1898, 0.55", "-249.443, 143.069, -17.6367, 0.83", "-248.17, 144.493, -18.7598, 0.28", "-246.738, 146.094, -20.0222, 0.28", "-244.645, 148.434, -21.8675, 0.28", "-243.49, 149.725, -22.8861, 0.28", "-241.869, 151.451, -24.1868, 0.28", "-240.134, 153.307, -25.6361, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-297.501, -277.999, 75.6726, 1.11", "-297.146, -280.982, 77.4917, 1.11", "-296.966, -282.226, 78.0803, 1.11", "-296.625, -284.27, 78.8504, 1.11", "-295.703, -288.757, 80.9093, 1.11", "-295.003, -291.775, 82.3698, 0.83", "-294.325, -294.698, 83.7844, 1.11", "-293.733, -297.398, 84.9696, 1.11", "-293.289, -299.273, 85.8151, 1.11", "-291.744, -305.054, 88.4017, 0.83", "-291.248, -306.633, 88.9846, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-297.501, -277.999, 75.6726, 1.11", "-299.31, -280.386, 76.7366, 1.11", "-300.409, -281.804, 77.9413, 1.11", "-302.043, -283.681, 79.7879, 1.11", "-303.168, -284.858, 80.943, 1.11", "-304.269, -285.905, 82.4835, 1.11", "-305.204, -286.788, 83.9592, 1.11", "-308.851, -289.929, 89.9306, 1.11", "-310.032, -290.784, 92.0321, 1.11", "-311.368, -291.575, 94.431, 1.11", "-316.844, -294.148, 103.867, 1.11", "-317.252, -294.295, 104.519, 1.11", "-318.897, -294.712, 106.73, 1.11", "-322.938, -295.461, 111.449, 1.11", "-324.098, -295.64, 112.749, 1.11", "-325.907, -295.915, 114.521, 1.11", "-327.021, -296.129, 115.319, 1.11", "-330.747, -297.152, 117.865, 1.11", "-334.445, -298.65, 120.337, 1.11", "-335.537, -299.205, 120.985, 1.11", "-337.189, -300.241, 122.075, 1.11", "-338.197, -301.047, 122.816, 1.11", "-340.159, -303.039, 124.276, 1.11", "-340.74, -303.982, 124.579, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-9.64851, -189.884, 10.7637, 0.55", "-9.94903, -194.189, 8.87255, 0.55", "-10.0951, -197.752, 6.92472, 1.38", "-10.2348, -201.665, 4.72548, 0.55", "-10.309, -203.363, 3.75785, 0.55", "-10.5001, -207.25, 1.62616, 0.55", "-10.5852, -208.86, 0.742102, 1.11", "-10.651, -211.621, -0.774993, 0.55", "-10.6915, -213.059, -1.59732, 0.55", "-10.7699, -214.171, -2.24529, 1.11", "-11.0117, -216.132, -3.28948, 0.55", "-11.1029, -216.964, -3.66155, 0.83", "-11.3394, -219.447, -4.5524, 0.83", "-11.568, -222.657, -5.53571, 0.83", "-11.7139, -227.091, -6.56026, 0.55", "-11.7249, -228.363, -6.84111, 0.83", "-11.6468, -231.072, -7.47992, 0.55", "-11.4433, -234.633, -8.40559, 1.11", "-11.102, -238.293, -9.38493, 0.55", "-10.731, -240.894, -10.0192, 1.11", "-10.0081, -245.229, -10.8692, 0.28", "-9.64664, -247.455, -11.5432, 0.83", "-9.27224, -249.742, -12.4959, 0.55", "-9.01055, -251.101, -13.2224, 0.55", "-8.94914, -251.357, -13.3613, 1.11", "-8.51696, -253.016, -14.3151, 0.28", "-7.80529, -255.409, -15.2662, 0.83", "-7.1844, -257.508, -15.7842, 0.28", "-6.52772, -259.526, -15.9543, 1.11", "-6.02561, -261.022, -15.6177, 0.55", "-5.58042, -262.264, -15.1057, 1.11", "-4.64102, -264.608, -13.6245, 0.28", "-3.79177, -266.696, -11.9678, 0.83", "-3.23486, -268.086, -10.6527, 0.28", "-1.89279, -271.218, -7.16674, 1.11", "-1.1246, -272.92, -5.05857, 0.55", "-0.947382, -273.285, -4.58071, 0.55", "-0.56855, -274.003, -3.77627, 0.28", "-0.083884, -274.93, -3.00187, 0.55" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-9.64851, -189.884, 10.7637, 0.55", "-7.37081, -192.246, 0.956296, 0.55", "-7.19437, -192.443, 0.176135, 0.83", "-6.20042, -193.562, -4.2512, 0.28", "-6.0341, -193.763, -4.98879, 0.83", "-4.81126, -195.387, -10.5383, 0.28", "-4.59611, -195.705, -11.6141, 1.11", "-3.2486, -198.009, -18.6063, 0.55", "-3.07796, -198.341, -19.6152, 1.11", "-2.79722, -198.952, -21.3289, 0.28", "-2.02551, -200.57, -25.6797, 1.11", "-0.774724, -203.14, -32.2102, 0.28", "-0.645795, -203.378, -32.7779, 1.38", "0.637622, -205.614, -37.4778, 0.28", "1.31749, -206.673, -39.491, 1.11", "2.96352, -209.025, -43.5903, 0.28", "3.63881, -209.956, -44.8379, 1.11", "4.77389, -211.525, -46.5005, 0.28", "5.81299, -212.952, -47.9555, 1.38", "8.96024, -217.286, -51.9828, 0.28", "9.92181, -218.662, -53.2472, 1.11", "12.2746, -222.129, -55.9588, 0.28", "12.8649, -223.007, -56.6123, 1.38" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-84.5121, -219.142, -14.6905, 1.11", "-83.9521, -220.482, -14.6905, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-84.5121, -219.142, -14.6905, 1.11", "-85.7382, -221.152, -12.1546, 1.11", "-86.1339, -221.801, -11.3364, 1.11", "-86.623, -222.602, -10.3247, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-240.134, 153.307, -25.6361, 0.28", "-239.222, 154.667, -27.4285, 0.28", "-238.369, 156.032, -29.3943, 0.55", "-237.854, 156.667, -30.554, 0.28", "-236.979, 157.703, -32.6505, 0.83", "-235.562, 159.31, -35.9224, 0.28", "-235.001, 159.958, -37.3675, 0.28", "-233.646, 161.627, -41.3151, 0.55", "-232.378, 163.153, -44.9827, 0.28", "-230.923, 164.787, -49.1517, 0.28", "-230.453, 165.207, -50.5968, 0.28", "-228.396, 166.694, -57.3804, 0.28", "-228.117, 166.83, -58.3301, 0.83", "-227.656, 166.976, -59.929, 0.28", "-227.438, 167.031, -60.7319, 0.55", "-224.179, 167.148, -72.7278, 0.28", "-224.014, 167.13, -73.3523, 0.55", "-222.369, 166.666, -79.0601, 0.28", "-222.087, 166.563, -80.0816, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-240.134, 153.307, -25.6361, 0.55", "-236.647, 151.846, -22.8363, 0.55", "-235.412, 151.328, -21.844, 0.55", "-234.644, 151.006, -21.2277, 0.55", "-233.122, 150.368, -20.005, 0.28", "-230.989, 149.474, -18.2928, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-86.623, -222.602, -10.3247, 1.11", "-88.473, -222.242, -9.28479, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-86.623, -222.602, -10.3247, 1.11", "-86.7866, -223.133, -10.4281, 1.11", "-87.2504, -224.856, -10.9064, 1.11", "-87.4913, -225.662, -11.1551, 1.11", "-87.777, -226.455, -11.4119, 1.11", "-88.2542, -227.689, -11.8125, 1.11", "-88.9947, -229.542, -12.348, 1.11", "-89.5677, -230.866, -12.7371, 1.11", "-89.942, -231.653, -12.837, 1.11", "-90.2816, -232.407, -12.7271, 1.11", "-90.4315, -232.903, -12.5083, 1.11", "-90.7346, -234.625, -11.3322, 1.11", "-90.7562, -234.837, -11.1639, 1.11", "-90.879, -237.82, -8.59255, 1.11", "-90.8631, -238.805, -7.83615, 1.11", "-90.8285, -239.774, -7.15489, 1.11", "-90.839, -240.015, -7.01008, 1.11", "-90.9375, -240.822, -6.69829, 1.11", "-91.026, -241.2, -6.64995, 1.11", "-91.6919, -243.093, -6.7433, 1.11", "-91.8096, -243.348, -6.75431, 1.11", "-92.4363, -244.569, -6.80032, 1.11", "-92.9397, -245.564, -6.83396, 1.11", "-93.5045, -246.669, -6.8664, 1.11", "-94.1235, -247.903, -6.8935, 1.11", "-94.1235, -247.903, -6.8935, 1.11", "-94.224, -248.166, -6.89565, 1.11", "-94.5081, -248.999, -6.90047, 1.11", "-94.59, -249.258, -6.90116, 1.11", "-94.6725, -249.528, -6.90116, 1.11", "-94.9366, -250.358, -6.90116, 1.11", "-95.3222, -251.537, -6.90116, 1.11", "-95.7956, -253.081, -6.90116, 1.11", "-96.2698, -254.696, -6.90116, 1.11", "-96.4127, -255.231, -6.90116, 1.11", "-96.7427, -256.576, -6.90116, 1.11", "-97.0957, -258.223, -6.90116, 1.11", "-97.2275, -258.992, -6.856, 1.11", "-97.3169, -259.602, -6.78007, 1.11", "-97.5271, -260.669, -6.58444, 1.11", "-97.6869, -261.255, -6.45684, 1.11", "-98.2907, -262.856, -6.08417, 1.11", "-99.0538, -264.549, -5.72811, 1.11", "-99.6381, -265.792, -5.50616, 1.11", "-100.339, -267.218, -5.25855, 1.11", "-100.974, -268.436, -5.0628, 1.11", "-101.961, -270.292, -4.8201, 1.11", "-102.915, -272.057, -4.69141, 1.11", "-103.44, -273.071, -4.70003, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-103.44, -273.071, -4.70003, 1.11", "-105.479, -272.171, -1.79003, 1.11" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-103.44, -273.071, -4.70003, 1.11", "-104.796, -273.831, -4.13277, 1.11", "-105.301, -274.114, -3.92169, 1.11", "-105.805, -274.396, -3.71061, 1.11", "-106.267, -274.655, -3.51759, 1.11" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-106.267, -274.655, -3.51759, 1.11", "-107.227, -273.355, -4.53759, 1.11" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-106.267, -274.655, -3.51759, 1.11", "-107.976, -276.648, -4.73462, 1.11", "-108.977, -277.78, -5.3015, 1.11", "-109.51, -278.443, -5.59184, 1.11", "-110.309, -279.549, -5.96599, 1.11", "-110.636, -280.057, -6.10893, 1.11", "-110.933, -280.591, -6.23852, 1.11", "-111.472, -281.858, -6.32936, 1.11", "-111.756, -282.814, -6.36247, 1.11", "-112.18, -284.535, -6.34924, 1.11", "-112.26, -285.145, -6.34499, 1.11", "-112.318, -285.932, -6.34053, 1.11", "-112.318, -285.932, -6.34053, 1.11", "-112.188, -286.702, -6.34053, 1.11", "-112.096, -287.09, -6.34053, 1.11", "-111.837, -287.653, -6.34053, 1.11", "-111.591, -288.224, -6.34053, 1.11", "-111.486, -288.484, -6.34053, 1.11", "-111.155, -289.286, -6.34053, 1.11", "-110.932, -289.792, -6.34053, 1.11", "-110.838, -290.047, -6.34053, 1.11", "-110.482, -291.387, -6.34053, 1.11", "-110.389, -291.933, -6.34053, 1.11", "-110.38, -292.214, -6.34053, 1.11", "-110.572, -293.691, -6.34053, 1.11", "-110.727, -294.458, -6.34053, 1.11", "-110.817, -294.838, -6.34053, 1.11", "-111.166, -296.211, -6.34053, 1.11", "-111.538, -297.73, -6.34053, 1.11", "-111.828, -299.061, -6.5611, 1.11", "-112.263, -301.15, -7.17581, 1.11", "-112.439, -302.209, -7.56425, 1.11", "-112.606, -303.219, -7.97973, 1.11", "-112.756, -304.23, -8.40214, 1.11", "-113.362, -308.71, -10.2167, 1.11", "-113.511, -309.628, -10.5663, 1.11", "-114.021, -311.987, -11.4125, 1.11", "-114.347, -313.269, -11.8299, 1.11", "-115.5, -317.209, -12.8986, 1.11", "-115.976, -318.593, -13.1631, 1.11", "-116.788, -320.613, -13.3221, 1.11", "-117.198, -321.521, -13.3923, 1.11", "-117.329, -321.759, -13.4098, 1.11", "-118.146, -322.999, -13.4852, 1.11", "-119.336, -324.324, -13.5263, 1.11", "-119.958, -324.944, -13.5396, 1.11", "-121.122, -325.986, -13.1486, 1.11", "-121.95, -326.707, -12.8142, 1.11", "-122.544, -327.201, -12.5267, 1.11", "-122.991, -327.528, -12.2385, 1.11", "-123.501, -327.879, -11.7601, 1.11", "-126.995, -330.209, -7.34762, 1.11" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-126.995, -330.209, -7.34762, 1.11", "-128.375, -330.349, -4.27762, 1.11" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-126.995, -330.209, -7.34762, 1.11", "-126.953, -332.274, -4.96117, 1.11", "-126.93, -334.301, -2.82985, 1.11", "-127.206, -341.391, 3.85182, 1.11", "-127.326, -342.52, 4.81656, 1.11", "-127.438, -343.214, 5.34044, 1.11", "-127.579, -344.091, 6.00135, 1.11", "-127.785, -345.339, 7.00543, 1.11", "-128.2, -347.546, 8.53686, 1.11", "-128.927, -349.243, 8.76965, 1.11", "-130.043, -351.317, 9.09281, 1.11" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_0", "dend_71", "dend_24", "dend_4", "dend_1", "dend_73", "dend_72", "dend_40", "dend_25", "dend_16", "dend_5", "dend_3", "dend_2", "dend_66", "dend_41", "dend_37", "dend_26", "dend_18", "dend_17", "dend_11", "dend_6", "dend_68", "dend_67", "dend_59", "dend_42", "dend_39", "dend_38", "dend_36", "dend_27", "dend_20", "dend_19", "dend_13", "dend_12", "dend_8", "dend_7", "dend_70", "dend_69", "dend_65", "dend_60", "dend_46", "dend_43", "dend_31", "dend_28", "dend_22", "dend_21", "dend_15", "dend_14", "dend_10", "dend_9", "dend_62", "dend_61", "dend_58", "dend_47", "dend_45", "dend_44", "dend_35", "dend_32", "dend_30", "dend_29", "dend_64", "dend_63", "dend_57", "dend_48", "dend_34", "dend_33", "dend_56", "dend_49", "dend_55", "dend_50", "dend_54", "dend_51", "dend_53", "dend_52" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_23", "dend_0", "dend_71", "dend_24", "dend_4", "dend_1", "dend_73", "dend_72", "dend_40", "dend_25", "dend_16", "dend_5", "dend_3", "dend_2", "dend_66", "dend_41", "dend_37", "dend_26", "dend_18", "dend_17", "dend_11", "dend_6", "dend_68", "dend_67", "dend_59", "dend_42", "dend_39", "dend_38", "dend_36", "dend_27", "dend_20", "dend_19", "dend_13", "dend_12", "dend_8", "dend_7", "dend_70", "dend_69", "dend_65", "dend_60", "dend_46", "dend_43", "dend_31", "dend_28", "dend_22", "dend_21", "dend_15", "dend_14", "dend_10", "dend_9", "dend_62", "dend_61", "dend_58", "dend_47", "dend_45", "dend_44", "dend_35", "dend_32", "dend_30", "dend_29", "dend_64", "dend_63", "dend_57", "dend_48", "dend_34", "dend_33", "dend_56", "dend_49", "dend_55", "dend_50", "dend_54", "dend_51", "dend_53", "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_23", "dend_23", "dend_23", "dend_23", "dend_0", "axon_0", "axon_0", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_40", "dend_40", "dend_40", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_16", "dend_16", "dend_16", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_59", "dend_59", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_7", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_65", "dend_65", "dend_65", "dend_65", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_57", "dend_48", "dend_48", "dend_48", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_56", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_55", "dend_50", "dend_50", "dend_50", "dend_50", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_MC_2eb83e1eed_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_71, id: dend_71, parent: dend_23
create dend_71
public dend_71
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_40, id: dend_40, parent: dend_24
create dend_40
public dend_40
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_16, id: dend_16, parent: dend_4
create dend_16
public dend_16
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_66, id: dend_66, parent: dend_40
create dend_66
public dend_66
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_25
create dend_37
public dend_37
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_59, id: dend_59, parent: dend_41
create dend_59
public dend_59
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_26
create dend_36
public dend_36
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_65, id: dend_65, parent: dend_59
create dend_65
public dend_65
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: dend_46
create dend_58
public dend_58
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_57, id: dend_57, parent: dend_47
create dend_57
public dend_57
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_56, id: dend_56, parent: dend_48
create dend_56
public dend_56
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_55, id: dend_55, parent: dend_49
create dend_55
public dend_55
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_54, id: dend_54, parent: dend_50
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_0, dend_71, dend_24, dend_4, dend_1, dend_73, dend_72, dend_40, dend_25, dend_16, dend_5, dend_3, dend_2, dend_66, dend_41, dend_37, dend_26, dend_18, dend_17, dend_11, dend_6, dend_68, dend_67, dend_59, dend_42, dend_39, dend_38, dend_36, dend_27, dend_20, dend_19, dend_13, dend_12, dend_8, dend_7, dend_70, dend_69, dend_65, dend_60, dend_46, dend_43, dend_31, dend_28, dend_22, dend_21, dend_15, dend_14, dend_10, dend_9, dend_62, dend_61, dend_58, dend_47, dend_45, dend_44, dend_35, dend_32, dend_30, dend_29, dend_64, dend_63, dend_57, dend_48, dend_34, dend_33, dend_56, dend_49, dend_55, dend_50, dend_54, dend_51, dend_53, dend_52]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_0, dend_71, dend_24, dend_4, dend_1, dend_73, dend_72, dend_40, dend_25, dend_16, dend_5, dend_3, dend_2, dend_66, dend_41, dend_37, dend_26, dend_18, dend_17, dend_11, dend_6, dend_68, dend_67, dend_59, dend_42, dend_39, dend_38, dend_36, dend_27, dend_20, dend_19, dend_13, dend_12, dend_8, dend_7, dend_70, dend_69, dend_65, dend_60, dend_46, dend_43, dend_31, dend_28, dend_22, dend_21, dend_15, dend_14, dend_10, dend_9, dend_62, dend_61, dend_58, dend_47, dend_45, dend_44, dend_35, dend_32, dend_30, dend_29, dend_64, dend_63, dend_57, dend_48, dend_34, dend_33, dend_56, dend_49, dend_55, dend_50, dend_54, dend_51, dend_53, dend_52]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_69
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_23, dend_0, axon_0, axon_0, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_40, dend_40, dend_40, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_59, dend_59, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_7, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_65, dend_65, dend_65, dend_65, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_57, dend_48, dend_48, dend_48, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_56, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_55, dend_50, dend_50, dend_50, dend_50, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_23(0), soma_0(0.45000106447951405)
    connect dend_0(0), soma_0(0.45000106447951405)
    connect axon_0(0), soma_0(1.0)
    connect dend_71(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_40(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_16(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_66(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_59(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_65(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_58(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_57(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_56(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_55(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_54(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.46185, -12.2276, 0.866815, 1.38428 ) }
    soma_0 { pt3dadd( -5.86833, -11.0688, 0.785668, 2.26538 ) }
    soma_0 { pt3dadd( -5.27481, -9.90998, 0.704522, 3.99869 ) }
    soma_0 { pt3dadd( -4.6813, -8.75119, 0.623376, 5.02955 ) }
    soma_0 { pt3dadd( -4.08778, -7.5924, 0.54223, 6.14322 ) }
    soma_0 { pt3dadd( -3.49426, -6.43361, 0.461083, 7.38472 ) }
    soma_0 { pt3dadd( -2.90074, -5.27483, 0.379937, 8.66913 ) }
    soma_0 { pt3dadd( -2.30723, -4.11604, 0.298791, 9.74207 ) }
    soma_0 { pt3dadd( -1.71371, -2.95725, 0.217645, 10.7549 ) }
    soma_0 { pt3dadd( -1.12019, -1.79846, 0.136499, 11.1982 ) }
    soma_0 { pt3dadd( -0.526673, -0.639671, 0.0553524, 11.4133 ) }
    soma_0 { pt3dadd( 0.066845, 0.519118, -0.0257938, 11.6557 ) }
    soma_0 { pt3dadd( 0.660363, 1.67791, -0.10694, 11.5166 ) }
    soma_0 { pt3dadd( 1.25388, 2.8367, -0.188086, 11.1259 ) }
    soma_0 { pt3dadd( 1.8474, 3.99548, -0.269232, 10.3673 ) }
    soma_0 { pt3dadd( 2.44092, 5.15427, -0.350379, 9.22753 ) }
    soma_0 { pt3dadd( 3.03443, 6.31306, -0.431525, 7.92172 ) }
    soma_0 { pt3dadd( 3.62795, 7.47185, -0.512671, 6.21201 ) }
    soma_0 { pt3dadd( 4.22147, 8.63064, -0.593817, 4.99134 ) }
    soma_0 { pt3dadd( 4.81499, 9.78943, -0.674963, 3.57741 ) }
    soma_0 { pt3dadd( 5.4085, 10.9482, -0.75611, 1.81236 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -4.53723, -11.1443, -2.03974, 2.77 ) }
    dend_23 { pt3dadd( -5.23067, -12.6773, -2.52727, 2.77 ) }
    dend_23 { pt3dadd( -6.87072, -16.3028, -3.68031, 2.77 ) }
    dend_23 { pt3dadd( -7.53499, -17.7713, -4.14733, 2.22 ) }
    dend_23 { pt3dadd( -7.73474, -18.2129, -4.28776, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 26/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 7.31277, 10.3557, 0.400263, 3.05 ) }
    dend_0 { pt3dadd( 8.52277, 12.1457, 0.400263, 2.77 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 28/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 5.4085, 10.9482, -0.75611, 0.83 ) }
    axon_0 { pt3dadd( 12.2466, 24.2989, -0.75611, 0.83 ) }
    axon_0 { pt3dadd( 19.0846, 37.6496, -0.75611, 0.83 ) }
    // Section: dend_71, id: dend_71, parent: dend_23 (entry count 31/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -7.73474, -18.2129, -4.28776, 0.55 ) }
    dend_71 { pt3dadd( -7.13166, -20.0312, -5.29396, 0.55 ) }
    dend_71 { pt3dadd( -6.94488, -20.9744, -4.66718, 0.55 ) }
    dend_71 { pt3dadd( -6.50842, -23.2014, -2.27486, 0.55 ) }
    dend_71 { pt3dadd( -6.29407, -24.491, -0.810127, 0.55 ) }
    dend_71 { pt3dadd( -6.2157, -25.4436, 0.278203, 0.83 ) }
    dend_71 { pt3dadd( -6.23558, -27.6783, 3.09517, 0.55 ) }
    dend_71 { pt3dadd( -6.633, -32.1943, 9.7646, 0.55 ) }
    dend_71 { pt3dadd( -6.83023, -33.8296, 12.7608, 0.55 ) }
    dend_71 { pt3dadd( -7.02889, -35.0887, 15.201, 0.55 ) }
    dend_71 { pt3dadd( -7.24398, -36.0734, 17.2026, 0.55 ) }
    dend_71 { pt3dadd( -8.09438, -39.051, 23.3171, 0.55 ) }
    dend_71 { pt3dadd( -9.31637, -42.9743, 31.2103, 0.55 ) }
    dend_71 { pt3dadd( -11.6021, -49.333, 43.05, 0.55 ) }
    dend_71 { pt3dadd( -12.0982, -50.6398, 45.4491, 0.55 ) }
    dend_71 { pt3dadd( -12.4674, -51.7307, 47.4546, 0.55 ) }
    dend_71 { pt3dadd( -12.705, -52.5883, 48.9903, 0.55 ) }
    dend_71 { pt3dadd( -13.0407, -53.7624, 50.8474, 0.55 ) }
    dend_71 { pt3dadd( -13.6132, -55.5264, 53.1845, 0.55 ) }
    dend_71 { pt3dadd( -14.577, -59.0636, 56.8695, 0.55 ) }
    dend_71 { pt3dadd( -15.1694, -61.4781, 59.4957, 0.55 ) }
    dend_71 { pt3dadd( -16.0024, -64.9308, 63.1622, 0.28 ) }
    dend_71 { pt3dadd( -16.6176, -67.4233, 65.6147, 0.83 ) }
    dend_71 { pt3dadd( -17.0391, -68.8797, 66.9358, 0.28 ) }
    dend_71 { pt3dadd( -17.8235, -71.5583, 69.0649, 0.83 ) }
    dend_71 { pt3dadd( -18.7994, -74.5213, 70.9454, 0.28 ) }
    dend_71 { pt3dadd( -20.1183, -78.3746, 73.0988, 0.83 ) }
    dend_71 { pt3dadd( -21.0187, -81.1769, 74.5212, 0.28 ) }
    dend_71 { pt3dadd( -21.8315, -84.1404, 75.9378, 0.83 ) }
    dend_71 { pt3dadd( -22.5397, -87.0696, 77.1896, 0.55 ) }
    dend_71 { pt3dadd( -23.0677, -89.3886, 78.1003, 0.28 ) }
    dend_71 { pt3dadd( -23.5619, -92.1228, 79.078, 1.38 ) }
    dend_71 { pt3dadd( -23.6964, -93.0539, 79.4357, 1.38 ) }
    dend_71 { pt3dadd( -24.2376, -96.557, 80.9907, 0.28 ) }
    dend_71 { pt3dadd( -24.3939, -97.641, 81.4968, 0.28 ) }
    dend_71 { pt3dadd( -24.9936, -100.456, 82.9878, 0.28 ) }
    dend_71 { pt3dadd( -25.3302, -101.564, 83.7511, 0.83 ) }
    dend_71 { pt3dadd( -26.1199, -103.581, 85.3458, 0.28 ) }
    dend_71 { pt3dadd( -26.9647, -105.506, 87.0035, 0.83 ) }
    dend_71 { pt3dadd( -27.9781, -107.463, 88.7456, 0.28 ) }
    dend_71 { pt3dadd( -29.4946, -110.289, 91.1175, 0.83 ) }
    dend_71 { pt3dadd( -31.4642, -113.933, 93.9257, 0.28 ) }
    dend_71 { pt3dadd( -31.8053, -114.564, 94.4311, 0.83 ) }
    dend_71 { pt3dadd( -32.7438, -116.43, 95.8873, 0.28 ) }
    dend_71 { pt3dadd( -33.6422, -118.499, 97.4572, 0.83 ) }
    dend_71 { pt3dadd( -34.3099, -120.194, 98.6424, 0.55 ) }
    dend_71 { pt3dadd( -34.5929, -121.13, 99.2346, 0.83 ) }
    dend_71 { pt3dadd( -35.7167, -125.307, 101.541, 0.28 ) }
    dend_71 { pt3dadd( -36.0276, -126.455, 102.305, 0.55 ) }
    dend_71 { pt3dadd( -36.759, -129.09, 104.245, 0.28 ) }
    dend_71 { pt3dadd( -37.0429, -130.295, 105.172, 0.55 ) }
    dend_71 { pt3dadd( -37.5248, -132.403, 106.729, 0.28 ) }
    dend_71 { pt3dadd( -37.9915, -134.671, 108.02, 0.83 ) }
    dend_71 { pt3dadd( -38.9798, -140.34, 110.055, 0.28 ) }
    dend_71 { pt3dadd( -39.2192, -141.791, 110.3, 1.11 ) }
    dend_71 { pt3dadd( -39.4544, -143.378, 110.182, 1.11 ) }
    dend_71 { pt3dadd( -39.8085, -145.328, 109.669, 1.11 ) }
    dend_71 { pt3dadd( -41.1636, -151.49, 107.093, 0.55 ) }
    dend_71 { pt3dadd( -41.3517, -152.27, 106.694, 1.11 ) }
    dend_71 { pt3dadd( -42.0674, -154.833, 105.127, 0.55 ) }
    dend_71 { pt3dadd( -42.4681, -156.064, 104.379, 1.38 ) }
    dend_71 { pt3dadd( -43.3853, -158.379, 102.98, 0.55 ) }
    dend_71 { pt3dadd( -44.06, -159.991, 102.097, 0.55 ) }
    dend_71 { pt3dadd( -44.6177, -161.252, 101.492, 0.55 ) }
    dend_71 { pt3dadd( -45.2776, -163.059, 100.425, 1.38 ) }
    dend_71 { pt3dadd( -45.9562, -165.395, 98.8817, 0.55 ) }
    dend_71 { pt3dadd( -46.3, -166.919, 97.7042, 0.55 ) }
    dend_71 { pt3dadd( -46.5059, -168.28, 96.6264, 1.38 ) }
    dend_71 { pt3dadd( -47.0111, -171.78, 94.019, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_71 { pt3dadd( -47.508, -175.287, 91.505, 0.55 ) }
    dend_71 { pt3dadd( -47.6121, -175.976, 91.0511, 0.55 ) }
    dend_71 { pt3dadd( -48.066, -178.194, 89.6907, 0.83 ) }
    dend_71 { pt3dadd( -48.7892, -181.17, 88.0398, 0.83 ) }
    dend_71 { pt3dadd( -49.7279, -184.172, 86.2547, 0.83 ) }
    dend_71 { pt3dadd( -50.9951, -187.512, 84.4607, 0.83 ) }
    dend_71 { pt3dadd( -51.8121, -189.309, 83.5786, 0.83 ) }
    dend_71 { pt3dadd( -53.4145, -192.563, 81.6814, 1.11 ) }
    dend_71 { pt3dadd( -54.2351, -194.072, 80.6387, 0.83 ) }
    dend_71 { pt3dadd( -56.2539, -197.56, 77.9426, 0.83 ) }
    dend_71 { pt3dadd( -57.6476, -200.03, 75.9566, 0.83 ) }
    dend_71 { pt3dadd( -58.9311, -202.311, 74.2383, 1.11 ) }
    dend_71 { pt3dadd( -61.3343, -206.756, 70.7611, 0.55 ) }
    dend_71 { pt3dadd( -61.9559, -208.065, 69.7691, 0.55 ) }
    dend_71 { pt3dadd( -63.0329, -210.488, 68.0324, 0.55 ) }
    dend_71 { pt3dadd( -63.2574, -211.01, 67.7442, 1.11 ) }
    dend_71 { pt3dadd( -64.2124, -213.266, 66.4629, 0.55 ) }
    dend_71 { pt3dadd( -65.018, -215.254, 65.6311, 1.11 ) }
    dend_71 { pt3dadd( -66.0621, -217.795, 64.9654, 0.55 ) }
    dend_71 { pt3dadd( -66.9623, -220.052, 64.3697, 0.83 ) }
    dend_71 { pt3dadd( -68.1863, -223.007, 63.4694, 0.55 ) }
    dend_71 { pt3dadd( -69.0729, -225.137, 62.9165, 0.83 ) }
    dend_71 { pt3dadd( -70.0678, -227.683, 62.1573, 0.83 ) }
    dend_71 { pt3dadd( -70.6321, -229.274, 61.5408, 0.83 ) }
    dend_71 { pt3dadd( -71.3775, -231.572, 60.7147, 0.83 ) }
    dend_71 { pt3dadd( -71.6524, -232.477, 60.3676, 0.83 ) }
    dend_71 { pt3dadd( -72.1008, -234.056, 59.683, 1.11 ) }
    dend_71 { pt3dadd( -73.489, -238.914, 57.6657, 0.83 ) }
    dend_71 { pt3dadd( -74.4797, -242.588, 55.9612, 1.11 ) }
    dend_71 { pt3dadd( -75.5615, -247.031, 53.6931, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 30/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -7.73474, -18.2129, -4.28776, 2.49 ) }
    dend_24 { pt3dadd( -8.54198, -22.8598, -1.82321, 2.49 ) }
    dend_24 { pt3dadd( -9.34635, -26.1028, -0.0669344, 2.49 ) }
    dend_24 { pt3dadd( -10.5984, -31.1507, 2.66678, 2.49 ) }
    dend_24 { pt3dadd( -11.9665, -36.6666, 5.654, 1.94 ) }
    dend_24 { pt3dadd( -12.4742, -38.7137, 6.76261, 1.94 ) }
    dend_24 { pt3dadd( -13.4983, -42.8425, 8.99861, 2.22 ) }
    dend_24 { pt3dadd( -13.8616, -44.4206, 10.121, 2.49 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 38/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 8.52277, 12.1457, 0.400263, 2.22 ) }
    dend_4 { pt3dadd( 9.51074, 14.6975, -0.385692, 2.22 ) }
    dend_4 { pt3dadd( 9.61787, 14.9742, -0.470914, 2.22 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 41/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 8.52277, 12.1457, 0.400263, 0.55 ) }
    dend_1 { pt3dadd( 12.1771, 13.8716, 0.0210186, 0.55 ) }
    dend_1 { pt3dadd( 14.3721, 14.8118, -0.136327, 0.55 ) }
    dend_1 { pt3dadd( 16.9753, 15.7946, -0.272783, 0.55 ) }
    dend_1 { pt3dadd( 20.9536, 17.1491, -0.553413, 0.55 ) }
    dend_1 { pt3dadd( 22.5455, 17.703, -0.676813, 0.55 ) }
    dend_1 { pt3dadd( 27.0062, 19.1556, -1.02997, 0.55 ) }
    dend_1 { pt3dadd( 29.051, 19.6701, -1.16116, 0.55 ) }
    dend_1 { pt3dadd( 31.7734, 20.2223, -1.2703, 0.55 ) }
    dend_1 { pt3dadd( 35.0839, 20.8005, -1.21895, 0.55 ) }
    dend_1 { pt3dadd( 37.9992, 21.2477, -1.13651, 0.55 ) }
    dend_1 { pt3dadd( 40.1318, 21.5504, -0.967073, 0.55 ) }
    dend_1 { pt3dadd( 42.8004, 21.9003, -0.478451, 0.55 ) }
    dend_1 { pt3dadd( 44.1605, 22.0433, -0.131701, 0.55 ) }
    dend_1 { pt3dadd( 48.3185, 22.3717, 1.17853, 0.55 ) }
    dend_1 { pt3dadd( 49.2635, 22.3944, 1.50857, 0.55 ) }
    dend_1 { pt3dadd( 52.2748, 22.2275, 2.46204, 0.55 ) }
    dend_1 { pt3dadd( 56.2272, 21.8123, 3.52535, 0.55 ) }
    dend_1 { pt3dadd( 58.1978, 21.4329, 3.75266, 0.55 ) }
    dend_1 { pt3dadd( 59.9768, 20.8911, 3.68292, 0.55 ) }
    dend_1 { pt3dadd( 62.6228, 19.9322, 3.21307, 0.55 ) }
    dend_1 { pt3dadd( 66.4339, 18.3854, 2.23971, 0.55 ) }
    dend_1 { pt3dadd( 69.0296, 17.2866, 1.22077, 0.55 ) }
    dend_1 { pt3dadd( 74.5817, 14.5309, -1.49442, 0.55 ) }
    dend_1 { pt3dadd( 76.6672, 13.5026, -2.54956, 0.55 ) }
    dend_1 { pt3dadd( 78.6291, 12.5803, -3.53411, 0.55 ) }
    dend_1 { pt3dadd( 81.016, 11.4072, -4.70464, 0.55 ) }
    dend_1 { pt3dadd( 87.5091, 8.0479, -7.59614, 0.55 ) }
    dend_1 { pt3dadd( 90.6737, 6.11842, -8.7425, 0.55 ) }
    dend_1 { pt3dadd( 93.442, 4.41132, -9.49428, 0.55 ) }
    dend_1 { pt3dadd( 95.5216, 3.03507, -10.0623, 0.55 ) }
    dend_1 { pt3dadd( 98.7324, 0.592865, -10.8985, 0.55 ) }
    dend_1 { pt3dadd( 101.076, -1.43266, -11.3792, 0.55 ) }
    dend_1 { pt3dadd( 104.652, -5.33397, -11.5169, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 75/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 19.0846, 37.6496, -0.75611, 0.55 ) }
    axon_1 { pt3dadd( 25.9227, 51.0003, -0.75611, 0.55 ) }
    axon_1 { pt3dadd( 32.7607, 64.351, -0.75611, 0.55 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 78/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -75.5615, -247.031, 53.6931, 0.55 ) }
    dend_73 { pt3dadd( -77.0218, -249.627, 51.2457, 0.55 ) }
    dend_73 { pt3dadd( -77.66, -250.536, 50.3765, 0.55 ) }
    dend_73 { pt3dadd( -78.5661, -251.632, 49.2382, 1.11 ) }
    dend_73 { pt3dadd( -79.8613, -253.113, 47.734, 0.55 ) }
    dend_73 { pt3dadd( -80.6308, -253.979, 46.8959, 0.83 ) }
    dend_73 { pt3dadd( -81.8681, -255.333, 45.7638, 0.55 ) }
    dend_73 { pt3dadd( -82.6156, -256.071, 45.2627, 0.55 ) }
    dend_73 { pt3dadd( -83.7379, -257.148, 44.469, 0.83 ) }
    dend_73 { pt3dadd( -85.0052, -258.485, 43.497, 0.28 ) }
    dend_73 { pt3dadd( -85.4893, -259.105, 43.108, 0.83 ) }
    dend_73 { pt3dadd( -86.6475, -260.999, 41.9053, 0.28 ) }
    dend_73 { pt3dadd( -87.1997, -262.232, 41.1677, 0.83 ) }
    dend_73 { pt3dadd( -88.1973, -265.179, 39.6058, 0.55 ) }
    dend_73 { pt3dadd( -88.6116, -266.913, 38.7835, 0.83 ) }
    dend_73 { pt3dadd( -89.0195, -268.94, 37.7913, 0.83 ) }
    dend_73 { pt3dadd( -89.3913, -271.217, 36.6513, 0.55 ) }
    dend_73 { pt3dadd( -89.6423, -273.484, 35.5052, 0.83 ) }
    dend_73 { pt3dadd( -89.8626, -276.145, 34.3841, 0.83 ) }
    dend_73 { pt3dadd( -89.9847, -279.767, 33.242, 1.11 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 98/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -75.5615, -247.031, 53.6931, 0.83 ) }
    dend_72 { pt3dadd( -74.3031, -248.141, 55.0216, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_72 { pt3dadd( -73.1273, -249.179, 56.2629, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_24 (entry count 1/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -13.8616, -44.4206, 10.121, 1.66 ) }
    dend_40 { pt3dadd( -14.5211, -48.1481, 10.3962, 1.66 ) }
    dend_40 { pt3dadd( -15.2028, -52.0012, 10.6806, 1.66 ) }
    dend_40 { pt3dadd( -15.8344, -55.5707, 10.9441, 1.66 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 5/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -13.8616, -44.4206, 10.121, 1.38 ) }
    dend_25 { pt3dadd( -16.8537, -45.7908, 9.82751, 1.38 ) }
    dend_25 { pt3dadd( -19.6878, -47.4982, 9.58612, 1.38 ) }
    dend_25 { pt3dadd( -21.5614, -48.8027, 9.44788, 1.38 ) }
    dend_25 { pt3dadd( -23.7099, -50.3169, 9.31519, 1.38 ) }
    dend_25 { pt3dadd( -25.1399, -51.3259, 9.24203, 1.38 ) }
    dend_25 { pt3dadd( -27.2805, -52.8116, 9.14825, 1.38 ) }
    dend_25 { pt3dadd( -28.7499, -53.9536, 9.14825, 1.38 ) }
    dend_25 { pt3dadd( -29.9982, -54.9766, 9.14825, 1.38 ) }
    dend_25 { pt3dadd( -31.9745, -56.4955, 9.14825, 1.38 ) }
    dend_25 { pt3dadd( -34.0656, -57.8396, 9.14825, 1.38 ) }
    dend_25 { pt3dadd( -35.3027, -58.4946, 9.25954, 1.38 ) }
    dend_25 { pt3dadd( -36.5609, -59.0634, 9.39203, 1.38 ) }
    dend_25 { pt3dadd( -37.3687, -59.3902, 9.49286, 1.38 ) }
    dend_25 { pt3dadd( -39.1692, -60.1029, 9.7783, 1.38 ) }
    dend_25 { pt3dadd( -41.1891, -60.938, 10.2231, 1.38 ) }
    dend_25 { pt3dadd( -44.8357, -62.2991, 11.3208, 1.38 ) }
    // Section: dend_16, id: dend_16, parent: dend_4 (entry count 22/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 9.61787, 14.9742, -0.470914, 1.94 ) }
    dend_16 { pt3dadd( 12.0474, 19.5364, 7.73841, 1.94 ) }
    dend_16 { pt3dadd( 12.7979, 20.9455, 10.2741, 1.66 ) }
    dend_16 { pt3dadd( 13.6761, 22.5947, 13.2417, 1.38 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 26/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 9.61787, 14.9742, -0.470914, 0.83 ) }
    dend_5 { pt3dadd( 11.2134, 16.7976, -4.75453, 0.83 ) }
    dend_5 { pt3dadd( 12.2112, 17.9379, -7.43351, 0.83 ) }
    dend_5 { pt3dadd( 13.0088, 18.8494, -9.57488, 0.55 ) }
    dend_5 { pt3dadd( 14.4467, 20.4927, -13.4355, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 104.652, -5.33397, -11.5169, 0.55 ) }
    dend_3 { pt3dadd( 104.63, -9.26925, -11.8944, 0.55 ) }
    dend_3 { pt3dadd( 104.686, -10.9473, -12.0185, 0.55 ) }
    dend_3 { pt3dadd( 105.195, -12.9956, -12.1701, 0.55 ) }
    dend_3 { pt3dadd( 106.252, -15.8611, -12.3048, 0.55 ) }
    dend_3 { pt3dadd( 107.187, -17.8917, -12.3769, 0.55 ) }
    dend_3 { pt3dadd( 108.554, -20.7284, -12.4469, 0.55 ) }
    dend_3 { pt3dadd( 109.512, -22.4387, -12.5115, 0.55 ) }
    dend_3 { pt3dadd( 114.148, -29.7746, -12.9718, 0.55 ) }
    dend_3 { pt3dadd( 117.689, -34.7584, -13.3847, 0.55 ) }
    dend_3 { pt3dadd( 119.909, -37.5951, -13.6672, 0.55 ) }
    dend_3 { pt3dadd( 121.702, -39.7847, -13.9075, 0.55 ) }
    dend_3 { pt3dadd( 124.801, -43.3457, -14.3335, 0.55 ) }
    dend_3 { pt3dadd( 126.8, -45.5462, -14.6065, 0.55 ) }
    dend_3 { pt3dadd( 129.219, -48.0992, -14.9344, 0.55 ) }
    dend_3 { pt3dadd( 131.615, -50.3949, -15.2504, 0.55 ) }
    dend_3 { pt3dadd( 134.535, -53.0615, -15.5508, 0.55 ) }
    dend_3 { pt3dadd( 136.385, -54.5184, -15.6599, 0.55 ) }
    dend_3 { pt3dadd( 138.984, -56.4472, -15.6626, 0.55 ) }
    dend_3 { pt3dadd( 141.003, -57.8826, -15.6635, 0.55 ) }
    dend_3 { pt3dadd( 142.949, -59.0793, -15.6645, 0.55 ) }
    dend_3 { pt3dadd( 144.492, -59.9566, -15.6699, 0.55 ) }
    dend_3 { pt3dadd( 148.275, -62.0089, -15.6921, 0.55 ) }
    dend_3 { pt3dadd( 150.099, -63.0566, -15.7057, 0.55 ) }
    dend_3 { pt3dadd( 152.019, -64.1986, -15.7226, 0.55 ) }
    dend_3 { pt3dadd( 153.675, -65.3462, -15.7057, 0.55 ) }
    dend_3 { pt3dadd( 156.663, -67.641, -15.5196, 0.55 ) }
    dend_3 { pt3dadd( 160.238, -70.7195, -15.3581, 0.55 ) }
    dend_3 { pt3dadd( 163.23, -73.5986, -15.2548, 0.55 ) }
    dend_3 { pt3dadd( 164.845, -75.3087, -15.2836, 0.55 ) }
    dend_3 { pt3dadd( 167.965, -78.9564, -15.4568, 0.55 ) }
    dend_3 { pt3dadd( 169.441, -80.8224, -15.5978, 0.83 ) }
    dend_3 { pt3dadd( 172.797, -85.2528, -16.0979, 0.55 ) }
    dend_3 { pt3dadd( 173.021, -85.5788, -16.1466, 0.83 ) }
    dend_3 { pt3dadd( 175.125, -88.723, -16.692, 0.28 ) }
    dend_3 { pt3dadd( 175.801, -89.5701, -16.8495, 0.28 ) }
    dend_3 { pt3dadd( 176.354, -90.1792, -16.9125, 0.28 ) }
    dend_3 { pt3dadd( 179.457, -93.4009, -16.952, 0.28 ) }
    dend_3 { pt3dadd( 181.986, -95.8671, -16.6022, 0.28 ) }
    dend_3 { pt3dadd( 183.656, -97.5235, -16.2837, 0.28 ) }
    dend_3 { pt3dadd( 186.808, -100.616, -15.4983, 0.28 ) }
    dend_3 { pt3dadd( 189.611, -103.529, -14.7737, 0.28 ) }
    dend_3 { pt3dadd( 189.611, -103.529, -14.7737, 0.83 ) }
    dend_3 { pt3dadd( 190.432, -104.42, -14.4854, 0.83 ) }
    dend_3 { pt3dadd( 191.874, -106.007, -13.9468, 0.83 ) }
    dend_3 { pt3dadd( 193.363, -107.522, -13.5108, 0.55 ) }
    dend_3 { pt3dadd( 193.636, -107.799, -13.4739, 1.11 ) }
    dend_3 { pt3dadd( 194.956, -108.988, -13.4786, 0.28 ) }
    dend_3 { pt3dadd( 196.92, -110.718, -13.5056, 0.28 ) }
    dend_3 { pt3dadd( 197.419, -111.147, -13.5156, 0.55 ) }
    dend_3 { pt3dadd( 199.583, -113.147, -13.5702, 0.55 ) }
    dend_3 { pt3dadd( 202.664, -116.388, -13.6653, 0.55 ) }
    dend_3 { pt3dadd( 204.341, -118.312, -13.7241, 0.55 ) }
    dend_3 { pt3dadd( 206.534, -121.093, -13.8156, 0.55 ) }
    dend_3 { pt3dadd( 208.213, -123.519, -13.8763, 0.55 ) }
    dend_3 { pt3dadd( 209.866, -126.094, -13.9162, 0.55 ) }
    dend_3 { pt3dadd( 210.817, -127.808, -13.9958, 0.55 ) }
    dend_3 { pt3dadd( 211.753, -129.751, -14.1716, 0.55 ) }
    dend_3 { pt3dadd( 212.333, -131.112, -14.346, 0.55 ) }
    dend_3 { pt3dadd( 212.749, -132.212, -14.5197, 0.83 ) }
    dend_3 { pt3dadd( 213.582, -134.541, -14.9731, 0.83 ) }
    dend_3 { pt3dadd( 214.668, -137.266, -15.6436, 0.28 ) }
    dend_3 { pt3dadd( 215.484, -139.313, -16.2447, 0.28 ) }
    dend_3 { pt3dadd( 215.963, -140.767, -16.7446, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 95/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 104.652, -5.33397, -11.5169, 0.55 ) }
    dend_2 { pt3dadd( 107.273, -6.19413, -10.7241, 0.55 ) }
    dend_2 { pt3dadd( 109.191, -6.98222, -10.1198, 0.55 ) }
    dend_2 { pt3dadd( 111.724, -8.1405, -9.1569, 0.55 ) }
    dend_2 { pt3dadd( 115.658, -10.1372, -7.23918, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_2 { pt3dadd( 120.177, -12.7322, -4.69269, 0.55 ) }
    dend_2 { pt3dadd( 121.786, -13.8423, -3.32132, 0.55 ) }
    dend_2 { pt3dadd( 123.199, -15.0829, -1.67408, 0.55 ) }
    dend_2 { pt3dadd( 125.417, -17.5104, 1.67388, 0.55 ) }
    dend_2 { pt3dadd( 127.461, -20.3313, 5.75955, 0.55 ) }
    dend_2 { pt3dadd( 128.382, -22.0864, 8.33851, 0.55 ) }
    dend_2 { pt3dadd( 131.13, -28.0544, 17.7172, 0.55 ) }
    dend_2 { pt3dadd( 131.639, -29.1832, 19.5724, 0.55 ) }
    dend_2 { pt3dadd( 131.978, -29.8521, 20.7393, 0.55 ) }
    dend_2 { pt3dadd( 133.407, -32.3981, 25.305, 0.55 ) }
    dend_2 { pt3dadd( 135.83, -36.1286, 32.3076, 0.55 ) }
    dend_2 { pt3dadd( 138.423, -39.1511, 38.3703, 0.55 ) }
    dend_2 { pt3dadd( 139.096, -39.7346, 39.5734, 0.55 ) }
    dend_2 { pt3dadd( 141.633, -41.424, 43.5167, 0.55 ) }
    dend_2 { pt3dadd( 143.448, -42.35, 45.9348, 0.28 ) }
    dend_2 { pt3dadd( 143.893, -42.488, 46.3452, 0.83 ) }
    dend_2 { pt3dadd( 146.401, -42.7285, 47.5345, 0.28 ) }
    dend_2 { pt3dadd( 146.401, -42.7285, 47.5345, 1.11 ) }
    dend_2 { pt3dadd( 149.799, -42.7688, 47.9097, 0.28 ) }
    dend_2 { pt3dadd( 149.799, -42.7688, 47.9097, 0.83 ) }
    dend_2 { pt3dadd( 152.778, -42.7949, 47.7192, 0.28 ) }
    dend_2 { pt3dadd( 155.594, -42.8641, 47.5457, 1.11 ) }
    dend_2 { pt3dadd( 157.875, -42.9763, 47.4132, 0.28 ) }
    dend_2 { pt3dadd( 157.875, -42.9763, 47.4132, 1.11 ) }
    // Section: dend_66, id: dend_66, parent: dend_40 (entry count 24/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -15.8344, -55.5707, 10.9441, 0.83 ) }
    dend_66 { pt3dadd( -12.4331, -58.7547, 16.0616, 0.83 ) }
    dend_66 { pt3dadd( -12.4186, -61.2025, 15.185, 0.83 ) }
    dend_66 { pt3dadd( -12.361, -62.5026, 14.7051, 0.83 ) }
    dend_66 { pt3dadd( -12.3231, -63.3268, 14.1526, 0.83 ) }
    dend_66 { pt3dadd( -12.258, -66.4455, 12.0097, 0.83 ) }
    dend_66 { pt3dadd( -12.2805, -67.2785, 11.2633, 0.83 ) }
    dend_66 { pt3dadd( -12.4192, -69.3975, 8.52141, 0.83 ) }
    dend_66 { pt3dadd( -12.6078, -71.5341, 5.54371, 0.55 ) }
    dend_66 { pt3dadd( -12.8505, -74.6946, 0.868393, 0.55 ) }
    dend_66 { pt3dadd( -12.9416, -76.4989, -1.94385, 0.55 ) }
    dend_66 { pt3dadd( -13.0117, -80.4425, -8.45897, 0.55 ) }
    dend_66 { pt3dadd( -13.1815, -83.7364, -14.6871, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 37/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -15.8344, -55.5707, 10.9441, 1.66 ) }
    dend_41 { pt3dadd( -19.012, -64.0124, 11.9073, 1.66 ) }
    dend_41 { pt3dadd( -19.9534, -68.4167, 12.2573, 1.66 ) }
    dend_41 { pt3dadd( -20.54, -71.7825, 12.3051, 1.38 ) }
    dend_41 { pt3dadd( -20.7998, -72.9955, 12.2872, 1.38 ) }
    dend_41 { pt3dadd( -21.0382, -74.109, 12.2707, 1.38 ) }
    dend_41 { pt3dadd( -21.4099, -75.8444, 12.245, 1.38 ) }
    dend_41 { pt3dadd( -21.8046, -77.7361, 12.7453, 1.38 ) }
    dend_41 { pt3dadd( -21.9565, -79.9003, 12.7602, 1.38 ) }
    dend_41 { pt3dadd( -21.7689, -81.9852, 12.5053, 1.38 ) }
    // Section: dend_37, id: dend_37, parent: dend_25 (entry count 47/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -44.8357, -62.2991, 11.3208, 1.38 ) }
    dend_37 { pt3dadd( -46.9711, -63.6338, 11.2483, 1.38 ) }
    dend_37 { pt3dadd( -49.802, -65.3972, 11.1635, 1.38 ) }
    dend_37 { pt3dadd( -51.9145, -66.6901, 11.1104, 1.38 ) }
    dend_37 { pt3dadd( -53.1783, -67.4743, 11.084, 1.38 ) }
    dend_37 { pt3dadd( -55.8378, -68.9994, 10.6136, 1.38 ) }
    dend_37 { pt3dadd( -57.0268, -69.6443, 10.3063, 1.38 ) }
    dend_37 { pt3dadd( -57.3516, -69.7874, 10.1399, 1.38 ) }
    dend_37 { pt3dadd( -59.2007, -70.4657, 8.82921, 1.38 ) }
    dend_37 { pt3dadd( -61.0101, -70.9964, 7.37548, 1.38 ) }
    dend_37 { pt3dadd( -65.6279, -72.0946, 3.23026, 1.38 ) }
    dend_37 { pt3dadd( -67.6493, -72.5875, 1.09829, 1.38 ) }
    dend_37 { pt3dadd( -72.2042, -74.0646, -3.91453, 1.38 ) }
    dend_37 { pt3dadd( -73.1082, -74.4059, -4.9097, 1.38 ) }
    dend_37 { pt3dadd( -74.2268, -74.8484, -6.08435, 1.38 ) }
    dend_37 { pt3dadd( -76.5663, -75.8085, -8.2505, 1.38 ) }
    dend_37 { pt3dadd( -83.2834, -79.0276, -13.2291, 1.38 ) }
    dend_37 { pt3dadd( -86.3101, -80.6292, -15.0886, 1.38 ) }
    dend_37 { pt3dadd( -87.3772, -81.2697, -15.7505, 1.38 ) }
    dend_37 { pt3dadd( -90.1251, -82.929, -17.588, 1.38 ) }
    dend_37 { pt3dadd( -92.4061, -84.2777, -19.1093, 1.38 ) }
    dend_37 { pt3dadd( -94.6647, -85.5584, -20.4908, 1.38 ) }
    dend_37 { pt3dadd( -96.7749, -86.6176, -21.6319, 1.38 ) }
    dend_37 { pt3dadd( -105.366, -90.4695, -25.8292, 1.38 ) }
    dend_37 { pt3dadd( -107.398, -91.4136, -26.9238, 1.38 ) }
    dend_37 { pt3dadd( -109.189, -92.3122, -28.0, 1.38 ) }
    dend_37 { pt3dadd( -111.038, -93.211, -29.1705, 1.38 ) }
    dend_37 { pt3dadd( -113.884, -94.3752, -30.8418, 0.83 ) }
    dend_37 { pt3dadd( -117.878, -95.757, -32.2068, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 76/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -44.8357, -62.2991, 11.3208, 1.38 ) }
    dend_26 { pt3dadd( -45.8269, -62.4295, 11.3765, 1.38 ) }
    dend_26 { pt3dadd( -49.5626, -62.992, 11.5601, 1.11 ) }
    dend_26 { pt3dadd( -52.8542, -63.5738, 11.7481, 1.11 ) }
    dend_26 { pt3dadd( -57.211, -64.4082, 12.0023, 1.11 ) }
    dend_26 { pt3dadd( -60.2402, -64.9884, 12.1789, 1.11 ) }
    dend_26 { pt3dadd( -62.6853, -65.4567, 12.3216, 1.11 ) }
    dend_26 { pt3dadd( -64.219, -65.7493, 12.4014, 1.11 ) }
    dend_26 { pt3dadd( -67.6505, -66.4674, 12.5239, 1.11 ) }
    dend_26 { pt3dadd( -71.3812, -67.2094, 12.699, 1.11 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 86/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 13.6761, 22.5947, 13.2417, 1.38 ) }
    dend_18 { pt3dadd( 13.4761, 24.5247, 8.75168, 1.38 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 88/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 13.6761, 22.5947, 13.2417, 0.55 ) }
    dend_17 { pt3dadd( 8.68206, 27.2485, 12.8809, 0.55 ) }
    dend_17 { pt3dadd( 6.45345, 29.3935, 12.8957, 0.55 ) }
    dend_17 { pt3dadd( 4.23716, 31.5016, 12.9959, 0.55 ) }
    dend_17 { pt3dadd( 0.0372622, 35.3703, 13.272, 0.55 ) }
    dend_17 { pt3dadd( -2.59307, 37.7819, 13.474, 0.55 ) }
    dend_17 { pt3dadd( -4.33174, 39.4132, 13.6196, 0.55 ) }
    dend_17 { pt3dadd( -5.98833, 40.8567, 14.0194, 0.55 ) }
    dend_17 { pt3dadd( -6.8055, 41.6248, 14.2394, 0.55 ) }
    dend_17 { pt3dadd( -7.80958, 42.691, 14.5505, 0.55 ) }
    dend_17 { pt3dadd( -8.88903, 44.1566, 14.9134, 0.55 ) }
    dend_17 { pt3dadd( -9.67281, 45.2487, 15.2144, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_17 { pt3dadd( -11.0446, 47.2707, 16.0219, 0.55 ) }
    dend_17 { pt3dadd( -12.6685, 49.6649, 17.4903, 0.55 ) }
    dend_17 { pt3dadd( -13.6645, 51.1091, 18.5646, 0.55 ) }
    dend_17 { pt3dadd( -15.2988, 53.4474, 20.6375, 0.55 ) }
    dend_17 { pt3dadd( -17.0827, 56.0404, 23.2025, 0.55 ) }
    dend_17 { pt3dadd( -18.4989, 58.1164, 25.4265, 0.55 ) }
    dend_17 { pt3dadd( -20.8448, 61.7231, 29.5924, 0.55 ) }
    dend_17 { pt3dadd( -21.8017, 63.1176, 31.3749, 0.55 ) }
    dend_17 { pt3dadd( -23.2399, 65.2756, 34.2765, 0.55 ) }
    dend_17 { pt3dadd( -24.8471, 67.7804, 37.8522, 0.55 ) }
    dend_17 { pt3dadd( -25.6806, 69.2478, 39.9126, 0.55 ) }
    dend_17 { pt3dadd( -27.0563, 72.1935, 43.8641, 0.55 ) }
    dend_17 { pt3dadd( -28.1575, 75.5634, 48.0738, 0.55 ) }
    dend_17 { pt3dadd( -28.7184, 78.3147, 51.3682, 0.55 ) }
    dend_17 { pt3dadd( -28.9983, 81.2522, 54.678, 0.55 ) }
    dend_17 { pt3dadd( -28.9237, 83.9515, 57.5361, 1.11 ) }
    dend_17 { pt3dadd( -28.5351, 86.3787, 59.8226, 0.55 ) }
    dend_17 { pt3dadd( -27.8102, 88.5663, 61.6796, 1.11 ) }
    dend_17 { pt3dadd( -27.0932, 90.0406, 62.7659, 0.28 ) }
    dend_17 { pt3dadd( -26.6492, 90.8548, 63.484, 0.83 ) }
    dend_17 { pt3dadd( -26.2098, 91.6673, 64.3101, 0.28 ) }
    dend_17 { pt3dadd( -25.6852, 92.7973, 65.6606, 0.83 ) }
    dend_17 { pt3dadd( -24.7955, 94.9529, 68.4619, 0.28 ) }
    dend_17 { pt3dadd( -24.4307, 95.977, 69.968, 0.83 ) }
    dend_17 { pt3dadd( -23.1622, 100.533, 76.8915, 0.55 ) }
    dend_17 { pt3dadd( -23.0108, 101.338, 78.1366, 1.11 ) }
    dend_17 { pt3dadd( -22.9583, 102.086, 79.3374, 0.28 ) }
    dend_17 { pt3dadd( -23.0019, 102.696, 80.3008, 1.11 ) }
    dend_17 { pt3dadd( -23.8493, 105.994, 85.2553, 0.28 ) }
    dend_17 { pt3dadd( -24.1326, 106.671, 86.2513, 0.28 ) }
    dend_17 { pt3dadd( -24.9773, 108.005, 88.0345, 0.83 ) }
    dend_17 { pt3dadd( -26.3942, 109.698, 90.4505, 0.83 ) }
    dend_17 { pt3dadd( -27.6801, 110.989, 92.2911, 0.28 ) }
    dend_17 { pt3dadd( -28.6885, 111.89, 93.5701, 0.28 ) }
    dend_17 { pt3dadd( -30.1287, 113.05, 95.0645, 0.28 ) }
    dend_17 { pt3dadd( -31.2812, 113.92, 96.2961, 0.83 ) }
    dend_17 { pt3dadd( -34.4389, 116.156, 99.6368, 0.28 ) }
    dend_17 { pt3dadd( -35.2003, 116.664, 100.415, 0.55 ) }
    dend_17 { pt3dadd( -37.2231, 117.954, 102.737, 0.28 ) }
    dend_17 { pt3dadd( -38.4121, 118.685, 104.177, 0.83 ) }
    dend_17 { pt3dadd( -40.5294, 119.856, 106.772, 0.28 ) }
    dend_17 { pt3dadd( -41.3341, 120.313, 107.814, 0.55 ) }
    dend_17 { pt3dadd( -42.462, 120.925, 109.298, 0.28 ) }
    dend_17 { pt3dadd( -45.0484, 122.274, 112.919, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 44/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 14.4467, 20.4927, -13.4355, 0.83 ) }
    dend_11 { pt3dadd( 17.4338, 20.6876, -13.1552, 0.83 ) }
    dend_11 { pt3dadd( 19.7579, 20.8392, -12.9371, 0.83 ) }
    dend_11 { pt3dadd( 23.4537, 21.0803, -12.5904, 0.83 ) }
    dend_11 { pt3dadd( 28.6552, 21.4196, -12.1024, 0.83 ) }
    dend_11 { pt3dadd( 43.926, 22.4157, -10.6696, 0.83 ) }
    dend_11 { pt3dadd( 48.6192, 22.7219, -10.2293, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 14.4467, 20.4927, -13.4355, 0.55 ) }
    dend_6 { pt3dadd( 14.9797, 23.1389, -13.8918, 0.55 ) }
    dend_6 { pt3dadd( 15.2939, 24.699, -14.1609, 0.55 ) }
    dend_6 { pt3dadd( 15.9414, 27.9139, -14.7153, 0.55 ) }
    dend_6 { pt3dadd( 16.3397, 29.8913, -15.0564, 0.55 ) }
    dend_6 { pt3dadd( 16.6848, 31.6046, -15.3518, 0.55 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 57/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -13.1815, -83.7364, -14.6871, 0.55 ) }
    dend_68 { pt3dadd( -8.9023, -87.9592, -9.69138, 0.55 ) }
    dend_68 { pt3dadd( -7.42325, -89.5033, -8.04422, 1.11 ) }
    dend_68 { pt3dadd( -5.67173, -91.3319, -6.09359, 1.11 ) }
    dend_68 { pt3dadd( -4.25088, -92.8152, -4.51124, 1.11 ) }
    dend_68 { pt3dadd( -1.43605, -95.7539, -1.37644, 1.11 ) }
    dend_68 { pt3dadd( 0.174458, -97.4353, 0.417138, 1.11 ) }
    dend_68 { pt3dadd( 2.71224, -100.2, 2.58832, 1.11 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 65/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -13.1815, -83.7364, -14.6871, 0.83 ) }
    dend_67 { pt3dadd( -14.9978, -83.2617, -20.0902, 0.83 ) }
    dend_67 { pt3dadd( -16.1396, -82.8489, -23.0752, 1.38 ) }
    dend_67 { pt3dadd( -16.1396, -82.8489, -23.0752, 1.38 ) }
    dend_67 { pt3dadd( -18.4262, -81.6698, -28.4667, 0.28 ) }
    dend_67 { pt3dadd( -19.8606, -80.8826, -31.6371, 0.83 ) }
    dend_67 { pt3dadd( -20.2379, -80.7034, -32.696, 0.28 ) }
    dend_67 { pt3dadd( -20.4699, -80.6002, -33.4355, 0.83 ) }
    dend_67 { pt3dadd( -20.7383, -80.4901, -34.413, 0.28 ) }
    dend_67 { pt3dadd( -21.6039, -80.2538, -37.2813, 0.28 ) }
    dend_67 { pt3dadd( -22.3319, -80.1676, -39.4041, 1.11 ) }
    dend_67 { pt3dadd( -25.3964, -80.0918, -48.0479, 0.28 ) }
    dend_67 { pt3dadd( -26.5126, -80.1241, -51.1595, 0.55 ) }
    dend_67 { pt3dadd( -28.6726, -80.2552, -56.993, 0.28 ) }
    dend_67 { pt3dadd( -29.1354, -80.2683, -58.1949, 1.11 ) }
    dend_67 { pt3dadd( -30.6934, -80.2417, -61.8933, 0.55 ) }
    dend_67 { pt3dadd( -32.0762, -79.9668, -65.6128, 0.28 ) }
    dend_67 { pt3dadd( -32.9687, -79.595, -68.1825, 0.28 ) }
    dend_67 { pt3dadd( -33.3908, -79.3686, -69.4805, 1.11 ) }
    dend_67 { pt3dadd( -34.0212, -78.9799, -71.4161, 0.28 ) }
    dend_67 { pt3dadd( -34.2763, -78.8002, -72.2462, 0.83 ) }
    dend_67 { pt3dadd( -37.3988, -76.411, -82.0229, 0.28 ) }
    dend_67 { pt3dadd( -38.3916, -75.6689, -84.934, 0.83 ) }
    dend_67 { pt3dadd( -39.1322, -75.2232, -86.7859, 0.55 ) }
    dend_67 { pt3dadd( -39.8954, -74.8362, -88.4225, 0.55 ) }
    dend_67 { pt3dadd( -41.3879, -74.1377, -91.5284, 0.55 ) }
    dend_67 { pt3dadd( -42.3713, -73.5488, -93.7648, 0.55 ) }
    dend_67 { pt3dadd( -42.7928, -73.1787, -95.092, 0.28 ) }
    dend_67 { pt3dadd( -43.3474, -72.2454, -98.1861, 0.83 ) }
    dend_67 { pt3dadd( -43.6519, -71.3154, -100.935, 0.55 ) }
    dend_67 { pt3dadd( -43.9827, -69.311, -106.02, 0.55 ) }
    dend_67 { pt3dadd( -44.1054, -67.697, -109.501, 0.55 ) }
    dend_67 { pt3dadd( -44.1897, -65.1628, -114.432, 0.28 ) }
    dend_67 { pt3dadd( -44.2075, -64.2698, -115.944, 0.55 ) }
    dend_67 { pt3dadd( -44.1992, -63.2191, -117.611, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_67 { pt3dadd( -44.4415, -60.8056, -121.178, 0.83 ) }
    dend_67 { pt3dadd( -44.9688, -59.2566, -123.262, 0.28 ) }
    dend_67 { pt3dadd( -45.5108, -58.3268, -124.597, 0.83 ) }
    dend_67 { pt3dadd( -46.6616, -56.8527, -127.127, 0.28 ) }
    dend_67 { pt3dadd( -47.4826, -56.1084, -128.931, 0.55 ) }
    dend_67 { pt3dadd( -47.9648, -55.8076, -129.922, 0.28 ) }
    dend_67 { pt3dadd( -49.0079, -55.4306, -131.793, 1.11 ) }
    dend_67 { pt3dadd( -50.6046, -55.1114, -134.219, 0.55 ) }
    dend_67 { pt3dadd( -52.402, -54.892, -136.45, 0.55 ) }
    dend_67 { pt3dadd( -53.8886, -54.823, -137.915, 0.55 ) }
    dend_67 { pt3dadd( -55.326, -54.7359, -139.151, 0.28 ) }
    dend_67 { pt3dadd( -55.7592, -54.7085, -139.503, 0.83 ) }
    dend_67 { pt3dadd( -57.6499, -54.6042, -140.652, 0.28 ) }
    dend_67 { pt3dadd( -61.2176, -54.5181, -142.048, 0.28 ) }
    dend_67 { pt3dadd( -61.9679, -54.5018, -142.287, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_41 (entry count 15/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -21.7689, -81.9852, 12.5053, 1.11 ) }
    dend_59 { pt3dadd( -21.4054, -84.257, 18.6196, 1.11 ) }
    dend_59 { pt3dadd( -21.2025, -85.5246, 22.0309, 1.11 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 18/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -21.7689, -81.9852, 12.5053, 1.38 ) }
    dend_42 { pt3dadd( -23.4113, -83.5219, 11.8749, 1.38 ) }
    dend_42 { pt3dadd( -26.0552, -86.0003, 11.0227, 1.38 ) }
    dend_42 { pt3dadd( -27.0572, -86.9223, 10.7656, 1.38 ) }
    dend_42 { pt3dadd( -27.932, -87.6862, 10.6017, 1.38 ) }
    dend_42 { pt3dadd( -29.1609, -88.7401, 10.5017, 1.38 ) }
    dend_42 { pt3dadd( -30.0057, -89.506, 10.4548, 1.38 ) }
    dend_42 { pt3dadd( -30.592, -90.0838, 10.4205, 1.38 ) }
    dend_42 { pt3dadd( -31.6143, -91.3394, 10.5171, 1.38 ) }
    dend_42 { pt3dadd( -32.8633, -93.4606, 10.239, 1.38 ) }
    dend_42 { pt3dadd( -33.4023, -94.9776, 9.80848, 1.38 ) }
    dend_42 { pt3dadd( -33.705, -96.5028, 9.24626, 1.38 ) }
    dend_42 { pt3dadd( -33.8096, -97.3464, 8.9017, 1.38 ) }
    dend_42 { pt3dadd( -33.9461, -99.3764, 8.0362, 1.38 ) }
    dend_42 { pt3dadd( -34.1518, -104.017, 5.9754, 1.38 ) }
    dend_42 { pt3dadd( -34.3292, -105.68, 4.99068, 1.38 ) }
    dend_42 { pt3dadd( -34.4848, -106.358, 4.53215, 1.38 ) }
    dend_42 { pt3dadd( -34.8769, -107.45, 3.77368, 1.38 ) }
    dend_42 { pt3dadd( -35.252, -108.205, 3.24082, 1.38 ) }
    dend_42 { pt3dadd( -36.0016, -109.367, 2.4084, 1.38 ) }
    dend_42 { pt3dadd( -39.5478, -113.774, -0.529398, 1.38 ) }
    dend_42 { pt3dadd( -40.7366, -115.09, -1.44608, 1.38 ) }
    dend_42 { pt3dadd( -41.5983, -115.987, -2.05636, 1.38 ) }
    dend_42 { pt3dadd( -42.3961, -116.783, -2.57483, 1.38 ) }
    dend_42 { pt3dadd( -42.5768, -116.96, -2.67302, 1.38 ) }
    dend_42 { pt3dadd( -43.1813, -117.558, -2.8891, 1.38 ) }
    dend_42 { pt3dadd( -44.1411, -118.56, -2.88584, 1.38 ) }
    dend_42 { pt3dadd( -45.0667, -119.593, -2.88243, 1.38 ) }
    dend_42 { pt3dadd( -45.4492, -120.075, -2.88101, 1.38 ) }
    dend_42 { pt3dadd( -46.2473, -121.208, -2.87828, 1.38 ) }
    dend_42 { pt3dadd( -46.6737, -121.872, -2.87707, 1.38 ) }
    dend_42 { pt3dadd( -47.5463, -123.391, -2.87525, 1.38 ) }
    dend_42 { pt3dadd( -47.6726, -123.642, -2.87525, 1.38 ) }
    dend_42 { pt3dadd( -48.2173, -124.908, -2.87525, 1.38 ) }
    dend_42 { pt3dadd( -48.4404, -125.497, -2.87525, 1.38 ) }
    dend_42 { pt3dadd( -48.6329, -126.087, -2.87525, 1.38 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 54/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -117.878, -95.757, -32.2068, 0.55 ) }
    dend_39 { pt3dadd( -121.855, -97.9035, -30.2357, 0.55 ) }
    dend_39 { pt3dadd( -124.34, -99.1191, -29.0689, 0.55 ) }
    dend_39 { pt3dadd( -125.156, -99.5405, -28.6812, 0.55 ) }
    dend_39 { pt3dadd( -127.08, -100.561, -27.8981, 0.55 ) }
    dend_39 { pt3dadd( -130.909, -102.59, -26.3398, 0.55 ) }
    dend_39 { pt3dadd( -134.925, -104.718, -24.7055, 0.55 ) }
    dend_39 { pt3dadd( -136.875, -105.734, -23.9665, 0.55 ) }
    dend_39 { pt3dadd( -140.518, -107.654, -22.5999, 0.55 ) }
    dend_39 { pt3dadd( -144.176, -109.586, -21.2478, 0.28 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 64/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -117.878, -95.757, -32.2068, 0.83 ) }
    dend_38 { pt3dadd( -120.81, -96.402, -32.6145, 0.83 ) }
    dend_38 { pt3dadd( -123.764, -97.1295, -32.9667, 0.83 ) }
    dend_38 { pt3dadd( -126.23, -97.7686, -33.1529, 0.55 ) }
    dend_38 { pt3dadd( -128.103, -98.2813, -33.2473, 0.28 ) }
    dend_38 { pt3dadd( -128.937, -98.5226, -33.2766, 0.83 ) }
    dend_38 { pt3dadd( -131.449, -99.3033, -33.3368, 0.28 ) }
    dend_38 { pt3dadd( -131.97, -99.4855, -33.2994, 0.83 ) }
    dend_38 { pt3dadd( -133.389, -100.177, -33.1821, 0.28 ) }
    dend_38 { pt3dadd( -133.921, -100.493, -33.1628, 0.28 ) }
    dend_38 { pt3dadd( -134.257, -100.693, -33.1514, 0.28 ) }
    dend_38 { pt3dadd( -134.948, -101.07, -33.1331, 0.83 ) }
    dend_38 { pt3dadd( -137.461, -102.343, -33.0932, 0.28 ) }
    dend_38 { pt3dadd( -139.725, -103.527, -33.0878, 0.28 ) }
    dend_38 { pt3dadd( -141.336, -104.381, -33.1129, 0.55 ) }
    dend_38 { pt3dadd( -142.882, -105.195, -33.1531, 0.28 ) }
    dend_38 { pt3dadd( -145.079, -106.402, -33.2185, 0.28 ) }
    dend_38 { pt3dadd( -145.779, -106.843, -33.242, 0.55 ) }
    dend_38 { pt3dadd( -146.94, -107.646, -33.2822, 0.28 ) }
    dend_38 { pt3dadd( -147.158, -107.816, -33.2778, 0.55 ) }
    dend_38 { pt3dadd( -148.106, -108.77, -33.1982, 0.28 ) }
    dend_38 { pt3dadd( -148.89, -109.742, -33.1203, 0.28 ) }
    dend_38 { pt3dadd( -150.009, -111.212, -32.9055, 0.28 ) }
    dend_38 { pt3dadd( -151.007, -112.39, -32.6673, 0.28 ) }
    dend_38 { pt3dadd( -152.177, -113.59, -32.3477, 0.28 ) }
    dend_38 { pt3dadd( -152.78, -114.208, -32.1638, 0.55 ) }
    dend_38 { pt3dadd( -154.381, -115.722, -31.6315, 0.28 ) }
    dend_38 { pt3dadd( -155.21, -116.496, -31.3952, 0.28 ) }
    dend_38 { pt3dadd( -155.845, -117.092, -31.2477, 0.28 ) }
    dend_38 { pt3dadd( -156.117, -117.369, -31.2001, 0.55 ) }
    dend_38 { pt3dadd( -157.179, -118.411, -31.1014, 0.28 ) }
    dend_38 { pt3dadd( -157.988, -119.181, -31.0502, 0.55 ) }
    dend_38 { pt3dadd( -159.695, -120.848, -30.9993, 0.28 ) }
    dend_38 { pt3dadd( -160.491, -121.671, -30.9903, 0.28 ) }
    dend_38 { pt3dadd( -160.918, -122.109, -30.9869, 0.55 ) }
    dend_38 { pt3dadd( -161.927, -123.065, -30.9821, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_38 { pt3dadd( -162.808, -123.797, -30.981, 0.28 ) }
    dend_38 { pt3dadd( -163.121, -124.04, -30.9818, 0.28 ) }
    dend_38 { pt3dadd( -165.318, -125.679, -30.9877, 0.55 ) }
    dend_38 { pt3dadd( -166.518, -126.566, -30.9906, 0.28 ) }
    dend_38 { pt3dadd( -167.029, -126.914, -30.9916, 0.55 ) }
    dend_38 { pt3dadd( -168.95, -128.144, -30.996, 0.28 ) }
    dend_38 { pt3dadd( -169.184, -128.291, -30.9966, 0.55 ) }
    dend_38 { pt3dadd( -170.37, -128.999, -30.999, 0.28 ) }
    dend_38 { pt3dadd( -172.147, -129.785, -30.9529, 0.55 ) }
    dend_38 { pt3dadd( -173.059, -130.187, -31.0361, 0.28 ) }
    dend_38 { pt3dadd( -174.519, -130.846, -31.235, 0.28 ) }
    dend_38 { pt3dadd( -174.864, -130.997, -31.3411, 0.28 ) }
    dend_38 { pt3dadd( -175.345, -131.191, -31.5254, 0.55 ) }
    dend_38 { pt3dadd( -177.696, -132.03, -32.5449, 0.28 ) }
    dend_38 { pt3dadd( -180.631, -133.145, -33.9528, 1.11 ) }
    dend_38 { pt3dadd( -182.869, -134.04, -35.0876, 0.55 ) }
    dend_38 { pt3dadd( -186.102, -135.403, -36.7492, 0.28 ) }
    dend_38 { pt3dadd( -186.937, -135.767, -37.163, 0.28 ) }
    dend_38 { pt3dadd( -187.454, -136.006, -37.412, 0.55 ) }
    dend_38 { pt3dadd( -188.954, -136.72, -38.0218, 0.28 ) }
    dend_38 { pt3dadd( -189.215, -136.821, -38.0713, 0.55 ) }
    dend_38 { pt3dadd( -190.887, -137.388, -38.2199, 0.28 ) }
    dend_38 { pt3dadd( -192.043, -137.822, -38.117, 0.28 ) }
    dend_38 { pt3dadd( -192.303, -137.91, -38.1226, 0.55 ) }
    dend_38 { pt3dadd( -194.271, -138.47, -38.2081, 0.28 ) }
    dend_38 { pt3dadd( -195.129, -138.685, -38.2565, 0.28 ) }
    dend_38 { pt3dadd( -195.724, -138.828, -38.3563, 0.83 ) }
    dend_38 { pt3dadd( -198.969, -139.584, -38.9786, 0.28 ) }
    dend_38 { pt3dadd( -202.794, -140.549, -39.8099, 0.28 ) }
    dend_38 { pt3dadd( -205.53, -141.267, -40.4845, 0.28 ) }
    dend_38 { pt3dadd( -206.59, -141.562, -40.8004, 0.28 ) }
    dend_38 { pt3dadd( -210.471, -142.677, -42.0545, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_26 (entry count 32/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -71.3812, -67.2094, 12.699, 0.83 ) }
    dend_36 { pt3dadd( -72.9547, -66.8056, 14.9508, 0.83 ) }
    dend_36 { pt3dadd( -74.3911, -66.395, 17.1068, 0.83 ) }
    dend_36 { pt3dadd( -76.9281, -65.7635, 20.901, 0.55 ) }
    dend_36 { pt3dadd( -78.5261, -65.3464, 23.295, 0.83 ) }
    dend_36 { pt3dadd( -80.275, -64.8755, 25.7968, 0.28 ) }
    dend_36 { pt3dadd( -82.1361, -64.3225, 28.4104, 0.83 ) }
    dend_36 { pt3dadd( -83.3285, -63.9458, 30.228, 0.55 ) }
    dend_36 { pt3dadd( -84.7812, -63.3521, 32.4239, 0.55 ) }
    dend_36 { pt3dadd( -85.4257, -63.0226, 33.2851, 0.28 ) }
    dend_36 { pt3dadd( -86.4511, -62.487, 34.5146, 0.55 ) }
    dend_36 { pt3dadd( -89.1006, -61.0158, 36.982, 0.28 ) }
    dend_36 { pt3dadd( -90.0924, -60.4497, 37.7123, 0.28 ) }
    dend_36 { pt3dadd( -91.5005, -59.6893, 38.7643, 1.11 ) }
    dend_36 { pt3dadd( -94.9217, -57.867, 41.1883, 0.55 ) }
    dend_36 { pt3dadd( -97.2756, -56.6658, 42.8858, 0.83 ) }
    dend_36 { pt3dadd( -99.7919, -55.4111, 44.6876, 0.55 ) }
    dend_36 { pt3dadd( -101.562, -54.5741, 45.8834, 0.28 ) }
    dend_36 { pt3dadd( -105.542, -52.7221, 48.5335, 0.28 ) }
    dend_36 { pt3dadd( -107.197, -51.9577, 49.6409, 1.11 ) }
    dend_36 { pt3dadd( -110.332, -50.4012, 51.6997, 0.28 ) }
    dend_36 { pt3dadd( -110.708, -50.1862, 52.0438, 0.55 ) }
    dend_36 { pt3dadd( -112.311, -49.1319, 53.8859, 0.28 ) }
    dend_36 { pt3dadd( -113.136, -48.6093, 55.1176, 0.83 ) }
    dend_36 { pt3dadd( -113.924, -48.1761, 56.4107, 0.28 ) }
    dend_36 { pt3dadd( -114.374, -47.993, 57.3466, 0.83 ) }
    dend_36 { pt3dadd( -117.609, -47.4697, 64.7194, 0.28 ) }
    dend_36 { pt3dadd( -118.316, -47.3926, 66.4422, 0.55 ) }
    dend_36 { pt3dadd( -120.944, -47.3661, 73.4368, 1.11 ) }
    dend_36 { pt3dadd( -121.519, -47.4283, 75.0835, 0.55 ) }
    dend_36 { pt3dadd( -122.969, -47.795, 79.4463, 0.28 ) }
    dend_36 { pt3dadd( -124.542, -48.4661, 84.1215, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 64/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -71.3812, -67.2094, 12.699, 1.11 ) }
    dend_27 { pt3dadd( -75.0772, -71.6248, 12.6882, 1.11 ) }
    dend_27 { pt3dadd( -76.3884, -73.1621, 12.6851, 1.11 ) }
    dend_27 { pt3dadd( -79.5971, -76.791, 12.6792, 1.11 ) }
    dend_27 { pt3dadd( -81.7894, -79.163, 12.676, 1.11 ) }
    dend_27 { pt3dadd( -84.7511, -82.3009, 12.622, 1.11 ) }
    dend_27 { pt3dadd( -86.7457, -84.391, 12.724, 1.11 ) }
    dend_27 { pt3dadd( -88.8528, -86.5051, 12.857, 1.11 ) }
    dend_27 { pt3dadd( -91.9816, -89.5657, 13.0898, 1.11 ) }
    dend_27 { pt3dadd( -94.1701, -91.7411, 13.3044, 1.11 ) }
    dend_27 { pt3dadd( -95.7182, -93.2529, 13.4995, 1.11 ) }
    dend_27 { pt3dadd( -99.9432, -97.0331, 14.2044, 1.11 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 76/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 13.4761, 24.5247, 8.75168, 1.38 ) }
    dend_20 { pt3dadd( 13.5161, 26.7547, 8.75168, 1.38 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 78/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 13.4761, 24.5247, 8.75168, 0.83 ) }
    dend_19 { pt3dadd( 19.2302, 27.4804, 12.067, 0.83 ) }
    dend_19 { pt3dadd( 20.7144, 28.3858, 13.4346, 0.83 ) }
    dend_19 { pt3dadd( 22.9302, 29.6821, 15.4574, 0.83 ) }
    dend_19 { pt3dadd( 24.8197, 30.735, 17.0845, 0.55 ) }
    dend_19 { pt3dadd( 27.1813, 32.0779, 19.0324, 0.55 ) }
    dend_19 { pt3dadd( 29.0204, 33.206, 20.5091, 0.55 ) }
    dend_19 { pt3dadd( 36.3434, 38.3794, 25.6821, 0.55 ) }
    dend_19 { pt3dadd( 38.834, 40.286, 27.4471, 0.55 ) }
    dend_19 { pt3dadd( 40.3636, 41.553, 28.454, 0.55 ) }
    dend_19 { pt3dadd( 41.6009, 42.7035, 29.2342, 0.55 ) }
    dend_19 { pt3dadd( 43.2302, 44.4063, 30.098, 0.55 ) }
    dend_19 { pt3dadd( 44.2936, 45.7099, 30.6641, 0.55 ) }
    dend_19 { pt3dadd( 45.4921, 47.6543, 31.1982, 0.55 ) }
    dend_19 { pt3dadd( 46.8605, 50.7641, 32.2289, 0.55 ) }
    dend_19 { pt3dadd( 47.3085, 52.0857, 32.7715, 0.55 ) }
    dend_19 { pt3dadd( 47.8622, 53.9321, 33.6141, 0.55 ) }
    dend_19 { pt3dadd( 49.5921, 60.2082, 36.4632, 0.55 ) }
    dend_19 { pt3dadd( 50.2303, 62.9884, 37.6594, 0.55 ) }
    dend_19 { pt3dadd( 51.0237, 67.344, 39.3376, 0.55 ) }
    dend_19 { pt3dadd( 51.4761, 70.3437, 40.4008, 0.55 ) }
    dend_19 { pt3dadd( 51.814, 72.9768, 41.2143, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_19 { pt3dadd( 52.4421, 78.3534, 42.6118, 0.55 ) }
    dend_19 { pt3dadd( 52.7309, 80.7885, 43.0589, 0.55 ) }
    dend_19 { pt3dadd( 53.1694, 84.8177, 44.0081, 0.55 ) }
    dend_19 { pt3dadd( 53.2815, 86.5613, 44.4898, 0.55 ) }
    dend_19 { pt3dadd( 53.3493, 87.9934, 44.9103, 0.55 ) }
    dend_19 { pt3dadd( 53.4325, 91.8369, 46.1248, 0.55 ) }
    dend_19 { pt3dadd( 53.462, 95.5304, 47.3466, 0.55 ) }
    dend_19 { pt3dadd( 53.5715, 100.665, 49.0171, 0.55 ) }
    dend_19 { pt3dadd( 53.7448, 103.94, 50.0359, 0.55 ) }
    dend_19 { pt3dadd( 54.0047, 106.747, 50.8001, 0.55 ) }
    dend_19 { pt3dadd( 54.3066, 108.993, 51.3326, 0.28 ) }
    dend_19 { pt3dadd( 54.64, 110.879, 51.7535, 0.83 ) }
    dend_19 { pt3dadd( 55.0914, 112.741, 52.1755, 0.28 ) }
    dend_19 { pt3dadd( 55.7072, 114.729, 52.5393, 1.11 ) }
    dend_19 { pt3dadd( 56.62, 117.372, 53.2588, 0.28 ) }
    dend_19 { pt3dadd( 57.0802, 118.635, 53.7068, 0.83 ) }
    dend_19 { pt3dadd( 58.3441, 121.72, 55.1899, 0.28 ) }
    dend_19 { pt3dadd( 58.9201, 123.028, 55.9009, 0.83 ) }
    dend_19 { pt3dadd( 59.4673, 124.13, 56.5286, 0.28 ) }
    dend_19 { pt3dadd( 60.5931, 126.262, 57.7306, 0.83 ) }
    dend_19 { pt3dadd( 61.8215, 128.267, 58.7925, 0.83 ) }
    dend_19 { pt3dadd( 63.3179, 130.353, 59.733, 0.28 ) }
    dend_19 { pt3dadd( 64.623, 131.902, 60.3596, 0.55 ) }
    dend_19 { pt3dadd( 66.1849, 133.473, 61.0176, 0.28 ) }
    dend_19 { pt3dadd( 67.0097, 134.244, 61.3349, 0.55 ) }
    dend_19 { pt3dadd( 68.1594, 135.242, 61.6898, 0.28 ) }
    dend_19 { pt3dadd( 69.56, 136.399, 62.0973, 1.11 ) }
    dend_19 { pt3dadd( 71.9067, 138.268, 62.6704, 0.83 ) }
    dend_19 { pt3dadd( 73.6218, 139.652, 63.2441, 0.83 ) }
    dend_19 { pt3dadd( 74.9676, 140.805, 63.7855, 0.28 ) }
    dend_19 { pt3dadd( 75.2513, 141.059, 63.9033, 0.55 ) }
    dend_19 { pt3dadd( 76.4913, 142.215, 64.4323, 0.28 ) }
    dend_19 { pt3dadd( 76.6791, 142.41, 64.5248, 0.55 ) }
    dend_19 { pt3dadd( 79.3388, 145.504, 65.8832, 0.28 ) }
    dend_19 { pt3dadd( 80.8141, 147.312, 66.7149, 0.83 ) }
    dend_19 { pt3dadd( 82.1029, 148.882, 67.4576, 0.28 ) }
    dend_19 { pt3dadd( 82.329, 149.162, 67.592, 0.55 ) }
    dend_19 { pt3dadd( 84.3295, 151.712, 68.8331, 0.28 ) }
    dend_19 { pt3dadd( 85.2529, 152.924, 69.3806, 1.11 ) }
    dend_19 { pt3dadd( 86.3752, 154.48, 69.9602, 0.28 ) }
    dend_19 { pt3dadd( 86.5696, 154.785, 70.0903, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 41/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 48.6192, 22.7219, -10.2293, 0.83 ) }
    dend_13 { pt3dadd( 54.8061, 25.5572, -12.4659, 0.83 ) }
    dend_13 { pt3dadd( 58.0611, 27.0489, -13.6426, 0.83 ) }
    dend_13 { pt3dadd( 60.4981, 28.1657, -14.5236, 0.83 ) }
    dend_13 { pt3dadd( 62.7689, 29.2063, -15.3445, 0.83 ) }
    dend_13 { pt3dadd( 65.4726, 30.4454, -16.3219, 0.55 ) }
    dend_13 { pt3dadd( 72.0524, 33.4608, -18.7006, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 48/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 48.6192, 22.7219, -10.2293, 0.83 ) }
    dend_12 { pt3dadd( 49.3662, 19.8932, -10.0385, 0.83 ) }
    dend_12 { pt3dadd( 50.161, 16.0642, -9.78783, 0.83 ) }
    dend_12 { pt3dadd( 50.4392, 14.0952, -9.62142, 0.83 ) }
    dend_12 { pt3dadd( 50.6354, 12.1115, -9.44396, 0.83 ) }
    dend_12 { pt3dadd( 50.7721, 8.7569, -9.1408, 0.83 ) }
    dend_12 { pt3dadd( 50.8564, 3.69348, -8.59089, 0.83 ) }
    dend_12 { pt3dadd( 50.7438, 1.48426, -8.27204, 0.83 ) }
    dend_12 { pt3dadd( 50.4987, -0.8133, -7.92392, 0.83 ) }
    dend_12 { pt3dadd( 50.2426, -3.58784, -7.48849, 0.83 ) }
    dend_12 { pt3dadd( 50.1359, -6.0235, -7.09571, 0.83 ) }
    dend_12 { pt3dadd( 50.0507, -9.38402, -6.76262, 0.83 ) }
    dend_12 { pt3dadd( 50.1162, -11.8447, -6.64123, 0.83 ) }
    dend_12 { pt3dadd( 50.3507, -16.1229, -6.62335, 0.83 ) }
    dend_12 { pt3dadd( 50.6924, -19.8994, -6.76099, 0.83 ) }
    dend_12 { pt3dadd( 51.0017, -23.238, -6.98385, 0.83 ) }
    dend_12 { pt3dadd( 51.5083, -28.7916, -7.5219, 0.83 ) }
    dend_12 { pt3dadd( 51.6605, -30.7694, -7.78646, 0.55 ) }
    dend_12 { pt3dadd( 51.8381, -33.3613, -8.1714, 0.55 ) }
    dend_12 { pt3dadd( 51.9186, -34.7534, -8.38073, 0.55 ) }
    dend_12 { pt3dadd( 51.9616, -37.8819, -8.77231, 0.55 ) }
    dend_12 { pt3dadd( 51.9189, -39.9846, -8.945, 0.55 ) }
    dend_12 { pt3dadd( 51.8779, -42.3494, -9.08151, 0.55 ) }
    dend_12 { pt3dadd( 51.8959, -44.6211, -9.29123, 0.55 ) }
    dend_12 { pt3dadd( 51.9551, -46.3615, -9.49044, 0.55 ) }
    dend_12 { pt3dadd( 51.9878, -48.9226, -9.77194, 0.83 ) }
    dend_12 { pt3dadd( 52.0254, -52.1475, -10.0964, 0.55 ) }
    dend_12 { pt3dadd( 51.8942, -55.7758, -10.3997, 0.55 ) }
    dend_12 { pt3dadd( 51.6247, -59.7263, -10.6219, 0.55 ) }
    dend_12 { pt3dadd( 51.3117, -62.7989, -10.7207, 0.55 ) }
    dend_12 { pt3dadd( 50.9021, -66.1437, -10.752, 0.55 ) }
    dend_12 { pt3dadd( 50.3754, -69.9808, -10.6899, 0.55 ) }
    dend_12 { pt3dadd( 49.5472, -74.8991, -10.4926, 0.55 ) }
    dend_12 { pt3dadd( 49.0326, -77.6001, -10.3328, 0.55 ) }
    dend_12 { pt3dadd( 48.4496, -80.4825, -10.1946, 0.55 ) }
    dend_12 { pt3dadd( 48.0934, -82.3901, -10.1318, 0.55 ) }
    dend_12 { pt3dadd( 47.6672, -84.9614, -10.0935, 1.11 ) }
    dend_12 { pt3dadd( 46.8599, -89.3627, -10.0429, 0.55 ) }
    dend_12 { pt3dadd( 46.1541, -93.5528, -10.1881, 0.55 ) }
    dend_12 { pt3dadd( 45.8485, -95.3849, -10.2922, 0.83 ) }
    dend_12 { pt3dadd( 45.3938, -98.187, -10.4628, 0.83 ) }
    dend_12 { pt3dadd( 45.1963, -99.2811, -10.5332, 0.55 ) }
    dend_12 { pt3dadd( 44.8377, -101.234, -10.6644, 1.11 ) }
    dend_12 { pt3dadd( 43.8284, -106.456, -11.2993, 0.28 ) }
    dend_12 { pt3dadd( 43.571, -107.804, -11.4205, 0.55 ) }
    dend_12 { pt3dadd( 43.1072, -110.723, -11.6284, 0.28 ) }
    dend_12 { pt3dadd( 42.9961, -111.956, -11.6898, 0.55 ) }
    dend_12 { pt3dadd( 42.9171, -113.604, -11.7579, 0.83 ) }
    dend_12 { pt3dadd( 42.888, -117.917, -11.7368, 1.11 ) }
    dend_12 { pt3dadd( 42.902, -122.569, -11.2997, 0.28 ) }
    dend_12 { pt3dadd( 42.9239, -124.339, -11.0962, 0.83 ) }
    dend_12 { pt3dadd( 43.0398, -128.266, -10.5179, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( 43.0717, -129.342, -10.331, 1.11 ) }
    dend_12 { pt3dadd( 43.3243, -134.843, -9.22893, 0.55 ) }
    dend_12 { pt3dadd( 43.5073, -137.949, -8.3893, 0.28 ) }
    dend_12 { pt3dadd( 43.5868, -139.278, -8.04024, 0.55 ) }
    dend_12 { pt3dadd( 43.6477, -140.888, -7.54945, 0.83 ) }
    dend_12 { pt3dadd( 43.6915, -143.251, -6.75505, 0.55 ) }
    dend_12 { pt3dadd( 43.8266, -145.103, -6.14767, 0.28 ) }
    dend_12 { pt3dadd( 44.213, -147.774, -5.37523, 0.83 ) }
    dend_12 { pt3dadd( 44.5998, -149.65, -4.95277, 0.55 ) }
    dend_12 { pt3dadd( 45.0666, -151.502, -4.39243, 0.28 ) }
    dend_12 { pt3dadd( 45.2823, -152.261, -4.12201, 0.83 ) }
    dend_12 { pt3dadd( 46.0057, -154.71, -3.05763, 0.28 ) }
    dend_12 { pt3dadd( 46.0715, -154.953, -2.95538, 0.55 ) }
    dend_12 { pt3dadd( 46.7757, -157.313, -2.05368, 0.28 ) }
    dend_12 { pt3dadd( 47.7972, -160.386, -0.82867, 0.83 ) }
    dend_12 { pt3dadd( 48.4692, -162.353, -0.0442106, 0.28 ) }
    dend_12 { pt3dadd( 49.0158, -164.053, 0.500992, 0.83 ) }
    dend_12 { pt3dadd( 50.1381, -167.84, 1.25741, 0.55 ) }
    dend_12 { pt3dadd( 50.6347, -169.325, 1.32417, 0.55 ) }
    dend_12 { pt3dadd( 51.0243, -170.401, 1.07862, 0.28 ) }
    dend_12 { pt3dadd( 51.2933, -171.092, 0.698457, 0.55 ) }
    dend_12 { pt3dadd( 52.325, -173.569, -1.41282, 0.28 ) }
    dend_12 { pt3dadd( 53.0093, -175.039, -2.97524, 0.83 ) }
    dend_12 { pt3dadd( 53.6298, -176.357, -4.53174, 0.28 ) }
    dend_12 { pt3dadd( 54.4296, -178.218, -6.78415, 0.55 ) }
    dend_12 { pt3dadd( 55.2267, -180.096, -9.09146, 0.55 ) }
    dend_12 { pt3dadd( 55.9782, -181.872, -11.266, 0.28 ) }
    dend_12 { pt3dadd( 56.9817, -184.364, -14.2082, 0.83 ) }
    dend_12 { pt3dadd( 58.1286, -187.416, -17.8079, 0.55 ) }
    dend_12 { pt3dadd( 59.2638, -190.729, -21.6401, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 30/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 16.6848, 31.6046, -15.3518, 0.55 ) }
    dend_8 { pt3dadd( 16.6448, 34.6646, -15.3518, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 32/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 16.6848, 31.6046, -15.3518, 0.83 ) }
    dend_7 { pt3dadd( 18.2948, 29.5446, -13.5918, 0.83 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 34/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 2.71224, -100.2, 2.58832, 0.55 ) }
    dend_70 { pt3dadd( 5.32048, -101.043, 3.17878, 0.55 ) }
    dend_70 { pt3dadd( 6.80069, -101.448, 3.46806, 0.55 ) }
    dend_70 { pt3dadd( 8.40917, -102.066, 3.78027, 0.83 ) }
    dend_70 { pt3dadd( 9.12281, -102.377, 3.90272, 0.28 ) }
    dend_70 { pt3dadd( 10.4716, -102.972, 4.12575, 0.55 ) }
    dend_70 { pt3dadd( 11.5332, -103.42, 4.17723, 0.28 ) }
    dend_70 { pt3dadd( 13.8327, -104.458, 4.12502, 0.55 ) }
    dend_70 { pt3dadd( 16.3859, -105.625, 4.0372, 0.55 ) }
    dend_70 { pt3dadd( 18.4002, -106.593, 3.93268, 0.55 ) }
    dend_70 { pt3dadd( 19.4637, -107.102, 3.85148, 0.83 ) }
    dend_70 { pt3dadd( 23.1078, -108.875, 3.39854, 0.55 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 46/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 2.71224, -100.2, 2.58832, 1.11 ) }
    dend_69 { pt3dadd( 1.83102, -102.741, 3.04484, 1.11 ) }
    dend_69 { pt3dadd( 1.23975, -104.389, 3.31291, 1.11 ) }
    dend_69 { pt3dadd( 0.232749, -107.22, 3.81109, 1.11 ) }
    dend_69 { pt3dadd( -1.55602, -111.721, 4.69207, 1.11 ) }
    dend_69 { pt3dadd( -2.718, -114.586, 5.32258, 1.11 ) }
    dend_69 { pt3dadd( -3.3615, -116.28, 5.72767, 0.83 ) }
    dend_69 { pt3dadd( -4.18259, -118.542, 6.33045, 0.83 ) }
    dend_69 { pt3dadd( -4.65359, -119.966, 6.77465, 1.11 ) }
    dend_69 { pt3dadd( -5.75795, -123.568, 8.01696, 0.83 ) }
    dend_69 { pt3dadd( -6.46601, -126.838, 8.99188, 0.83 ) }
    dend_69 { pt3dadd( -6.88042, -129.852, 9.99786, 0.55 ) }
    dend_69 { pt3dadd( -7.02915, -131.44, 10.5713, 0.55 ) }
    dend_69 { pt3dadd( -7.22391, -134.522, 11.7027, 0.55 ) }
    dend_69 { pt3dadd( -7.27551, -136.651, 12.4549, 0.83 ) }
    dend_69 { pt3dadd( -7.04766, -140.861, 13.9306, 0.55 ) }
    dend_69 { pt3dadd( -6.7094, -145.649, 15.593, 0.55 ) }
    dend_69 { pt3dadd( -6.58369, -147.665, 16.3007, 0.55 ) }
    // Section: dend_65, id: dend_65, parent: dend_59 (entry count 64/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -21.2025, -85.5246, 22.0309, 0.55 ) }
    dend_65 { pt3dadd( -22.8437, -87.7646, 24.6498, 0.55 ) }
    dend_65 { pt3dadd( -24.3087, -89.764, 26.9874, 0.55 ) }
    dend_65 { pt3dadd( -25.1488, -90.9107, 28.328, 0.55 ) }
    dend_65 { pt3dadd( -27.1037, -93.5789, 31.4476, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 69/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -21.2025, -85.5246, 22.0309, 1.11 ) }
    dend_60 { pt3dadd( -19.7149, -87.7026, 22.3437, 1.11 ) }
    dend_60 { pt3dadd( -18.4955, -89.7136, 22.3853, 1.11 ) }
    dend_60 { pt3dadd( -17.5753, -91.2056, 22.1568, 0.83 ) }
    dend_60 { pt3dadd( -16.7259, -92.558, 21.8289, 0.83 ) }
    dend_60 { pt3dadd( -15.4624, -94.6234, 21.2492, 0.83 ) }
    dend_60 { pt3dadd( -13.7617, -97.5411, 20.4052, 0.83 ) }
    dend_60 { pt3dadd( -11.7881, -101.045, 19.2594, 0.55 ) }
    dend_60 { pt3dadd( -10.2233, -103.922, 18.2427, 0.55 ) }
    dend_60 { pt3dadd( -9.48459, -105.268, 17.7438, 0.55 ) }
    dend_60 { pt3dadd( -8.67876, -106.62, 17.2219, 0.55 ) }
    dend_60 { pt3dadd( -7.50776, -108.397, 16.5334, 0.55 ) }
    dend_60 { pt3dadd( -6.74121, -109.487, 16.1545, 0.55 ) }
    dend_60 { pt3dadd( -5.71726, -110.934, 16.0524, 0.55 ) }
    dend_60 { pt3dadd( -5.20227, -111.791, 16.1049, 0.55 ) }
    dend_60 { pt3dadd( -4.53432, -113.115, 16.2159, 0.55 ) }
    dend_60 { pt3dadd( -4.35991, -113.704, 16.2681, 0.55 ) }
    dend_60 { pt3dadd( -4.02211, -115.611, 16.6104, 0.55 ) }
    dend_60 { pt3dadd( -3.83809, -118.472, 17.2139, 0.55 ) }
    dend_60 { pt3dadd( -3.94734, -120.814, 17.5304, 0.55 ) }
    dend_60 { pt3dadd( -4.12506, -123.312, 17.7518, 0.55 ) }
    dend_60 { pt3dadd( -4.53835, -127.861, 18.118, 0.55 ) }
    dend_60 { pt3dadd( -5.06884, -132.608, 17.9934, 0.55 ) }
    dend_60 { pt3dadd( -5.41544, -135.339, 17.6706, 0.55 ) }
    dend_60 { pt3dadd( -6.26078, -140.992, 16.514, 0.55 ) }
    dend_60 { pt3dadd( -6.59206, -143.44, 15.8672, 0.55 ) }
    dend_60 { pt3dadd( -7.08889, -146.346, 14.9581, 0.55 ) }
    dend_60 { pt3dadd( -8.07822, -153.01, 12.406, 0.55 ) }
    dend_60 { pt3dadd( -8.26571, -154.488, 11.6235, 0.55 ) }
    dend_60 { pt3dadd( -8.34327, -155.506, 11.0339, 0.55 ) }
    dend_60 { pt3dadd( -8.53358, -158.899, 9.0748, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_60 { pt3dadd( -8.82906, -162.912, 6.6449, 0.55 ) }
    dend_60 { pt3dadd( -8.96496, -166.223, 4.58213, 0.55 ) }
    dend_60 { pt3dadd( -8.88676, -171.733, 1.8632, 0.55 ) }
    dend_60 { pt3dadd( -8.82786, -172.892, 1.1867, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 4/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -48.6329, -126.087, -2.87525, 1.38 ) }
    dend_46 { pt3dadd( -50.4836, -129.917, -5.33736, 1.38 ) }
    dend_46 { pt3dadd( -51.0933, -130.812, -5.68302, 1.38 ) }
    dend_46 { pt3dadd( -51.8106, -131.718, -5.92453, 1.38 ) }
    dend_46 { pt3dadd( -52.7717, -132.828, -6.16334, 1.38 ) }
    dend_46 { pt3dadd( -53.8364, -134.023, -6.37505, 1.38 ) }
    dend_46 { pt3dadd( -54.4857, -134.768, -6.5107, 1.38 ) }
    dend_46 { pt3dadd( -56.3297, -136.782, -6.61048, 1.11 ) }
    dend_46 { pt3dadd( -57.5497, -138.058, -6.69992, 1.11 ) }
    dend_46 { pt3dadd( -58.1523, -138.694, -6.75463, 1.11 ) }
    dend_46 { pt3dadd( -59.0853, -139.713, -6.8571, 1.11 ) }
    dend_46 { pt3dadd( -60.3509, -141.339, -7.03154, 1.11 ) }
    dend_46 { pt3dadd( -60.8328, -142.068, -7.11048, 1.11 ) }
    dend_46 { pt3dadd( -61.2829, -142.965, -7.19632, 1.11 ) }
    dend_46 { pt3dadd( -61.537, -143.529, -7.23636, 1.11 ) }
    dend_46 { pt3dadd( -61.8728, -144.282, -7.27224, 1.11 ) }
    dend_46 { pt3dadd( -62.5562, -145.804, -7.30346, 1.11 ) }
    dend_46 { pt3dadd( -62.8818, -146.515, -7.29776, 1.11 ) }
    dend_46 { pt3dadd( -63.9044, -148.667, -7.28262, 1.11 ) }
    dend_46 { pt3dadd( -64.8655, -150.611, -7.27028, 1.11 ) }
    dend_46 { pt3dadd( -65.3286, -151.491, -7.26508, 1.11 ) }
    dend_46 { pt3dadd( -66.0784, -152.788, -7.25714, 1.11 ) }
    dend_46 { pt3dadd( -66.2895, -153.116, -7.25512, 1.11 ) }
    dend_46 { pt3dadd( -67.1298, -154.436, -7.24863, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 28/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -48.6329, -126.087, -2.87525, 0.83 ) }
    dend_43 { pt3dadd( -49.5681, -126.844, -1.623, 0.83 ) }
    dend_43 { pt3dadd( -50.5282, -127.723, -0.0802653, 0.83 ) }
    dend_43 { pt3dadd( -51.8107, -128.922, 1.83595, 0.83 ) }
    dend_43 { pt3dadd( -54.309, -131.107, 5.2279, 0.83 ) }
    dend_43 { pt3dadd( -54.8673, -131.573, 5.91709, 0.83 ) }
    dend_43 { pt3dadd( -55.6806, -132.199, 6.86423, 0.83 ) }
    dend_43 { pt3dadd( -58.8466, -134.545, 10.1989, 0.83 ) }
    dend_43 { pt3dadd( -60.6253, -135.641, 11.7135, 0.28 ) }
    dend_43 { pt3dadd( -61.8018, -136.105, 12.2723, 0.28 ) }
    dend_43 { pt3dadd( -63.8012, -136.429, 12.181, 0.83 ) }
    dend_43 { pt3dadd( -65.8072, -136.223, 11.0872, 0.28 ) }
    dend_43 { pt3dadd( -68.7688, -135.623, 8.85959, 0.28 ) }
    dend_43 { pt3dadd( -69.6699, -135.37, 8.04178, 1.11 ) }
    dend_43 { pt3dadd( -70.6526, -134.991, 7.00029, 0.28 ) }
    dend_43 { pt3dadd( -72.9966, -134.036, 4.24107, 0.83 ) }
    dend_43 { pt3dadd( -75.0148, -133.19, 1.717, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 45/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -99.9432, -97.0331, 14.2044, 0.83 ) }
    dend_31 { pt3dadd( -105.152, -95.5009, 10.7943, 0.83 ) }
    dend_31 { pt3dadd( -106.894, -94.9954, 9.51092, 0.83 ) }
    dend_31 { pt3dadd( -109.466, -94.2071, 7.58067, 0.83 ) }
    dend_31 { pt3dadd( -111.137, -93.6747, 6.36818, 0.83 ) }
    dend_31 { pt3dadd( -112.766, -93.1836, 5.23191, 0.83 ) }
    dend_31 { pt3dadd( -118.126, -91.5116, 1.6011, 0.83 ) }
    dend_31 { pt3dadd( -119.799, -90.9751, 0.422782, 0.83 ) }
    dend_31 { pt3dadd( -121.042, -90.5473, -0.423177, 0.83 ) }
    dend_31 { pt3dadd( -122.589, -90.0307, -1.31207, 0.83 ) }
    dend_31 { pt3dadd( -123.813, -89.5742, -1.77867, 0.83 ) }
    dend_31 { pt3dadd( -125.084, -89.073, -2.02066, 0.83 ) }
    dend_31 { pt3dadd( -126.158, -88.6832, -2.00634, 0.83 ) }
    dend_31 { pt3dadd( -127.925, -88.1129, -1.97884, 0.83 ) }
    dend_31 { pt3dadd( -129.112, -87.751, -1.95908, 0.83 ) }
    dend_31 { pt3dadd( -132.158, -86.6757, -1.90541, 0.83 ) }
    dend_31 { pt3dadd( -133.716, -86.0382, -1.87733, 0.83 ) }
    dend_31 { pt3dadd( -134.735, -85.6119, -1.859, 0.83 ) }
    dend_31 { pt3dadd( -135.755, -85.0836, -1.84098, 0.83 ) }
    dend_31 { pt3dadd( -136.922, -84.334, -1.82193, 0.83 ) }
    dend_31 { pt3dadd( -138.388, -83.0459, -1.805, 0.83 ) }
    dend_31 { pt3dadd( -138.712, -82.5861, -1.78022, 0.83 ) }
    dend_31 { pt3dadd( -139.046, -82.0799, -1.74297, 0.83 ) }
    dend_31 { pt3dadd( -140.05, -80.7172, -1.28151, 0.83 ) }
    dend_31 { pt3dadd( -140.297, -80.4317, -1.1554, 0.83 ) }
    dend_31 { pt3dadd( -141.104, -79.5263, -0.428005, 0.83 ) }
    dend_31 { pt3dadd( -143.191, -77.3881, 1.76472, 0.83 ) }
    dend_31 { pt3dadd( -145.525, -75.1377, 4.30406, 0.83 ) }
    dend_31 { pt3dadd( -149.487, -71.7106, 8.99083, 0.83 ) }
    dend_31 { pt3dadd( -151.812, -69.941, 11.7516, 0.83 ) }
    dend_31 { pt3dadd( -157.813, -65.7771, 18.6698, 0.83 ) }
    dend_31 { pt3dadd( -158.9, -65.108, 19.8737, 0.83 ) }
    dend_31 { pt3dadd( -160.804, -64.0838, 21.8676, 0.83 ) }
    dend_31 { pt3dadd( -165.957, -61.521, 26.8585, 0.83 ) }
    dend_31 { pt3dadd( -168.825, -60.1578, 29.0371, 0.83 ) }
    dend_31 { pt3dadd( -170.456, -59.3405, 30.0143, 0.83 ) }
    dend_31 { pt3dadd( -172.146, -58.3825, 30.5754, 0.83 ) }
    dend_31 { pt3dadd( -173.821, -57.1885, 31.0302, 0.83 ) }
    dend_31 { pt3dadd( -174.818, -56.2535, 31.265, 0.83 ) }
    dend_31 { pt3dadd( -176.495, -54.1158, 31.7892, 0.83 ) }
    dend_31 { pt3dadd( -178.272, -51.3681, 32.8045, 0.83 ) }
    dend_31 { pt3dadd( -179.877, -48.8166, 33.9988, 0.83 ) }
    dend_31 { pt3dadd( -180.59, -47.6982, 34.4805, 0.83 ) }
    dend_31 { pt3dadd( -182.757, -44.533, 35.8343, 0.83 ) }
    dend_31 { pt3dadd( -186.433, -40.1014, 37.626, 0.83 ) }
    dend_31 { pt3dadd( -188.255, -38.4436, 38.2149, 0.83 ) }
    dend_31 { pt3dadd( -190.45, -37.2384, 38.112, 0.83 ) }
    dend_31 { pt3dadd( -195.789, -34.968, 36.6903, 0.83 ) }
    dend_31 { pt3dadd( -197.406, -34.3094, 36.0557, 0.83 ) }
    dend_31 { pt3dadd( -199.851, -33.183, 34.6357, 0.28 ) }
    dend_31 { pt3dadd( -200.87, -32.587, 33.8653, 0.83 ) }
    dend_31 { pt3dadd( -203.958, -29.8443, 31.385, 0.28 ) }
    dend_31 { pt3dadd( -205.933, -27.1635, 29.7792, 0.28 ) }
    dend_31 { pt3dadd( -206.759, -25.4903, 29.1867, 0.83 ) }
    dend_31 { pt3dadd( -208.154, -21.238, 28.1993, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_31 { pt3dadd( -208.474, -19.5324, 28.0043, 1.11 ) }
    dend_31 { pt3dadd( -208.839, -15.109, 27.9021, 0.28 ) }
    dend_31 { pt3dadd( -208.825, -14.5062, 27.9771, 0.83 ) }
    dend_31 { pt3dadd( -208.666, -12.6683, 28.1666, 0.28 ) }
    dend_31 { pt3dadd( -208.258, -9.1008, 28.5784, 0.28 ) }
    dend_31 { pt3dadd( -208.125, -7.38627, 28.8113, 0.55 ) }
    dend_31 { pt3dadd( -208.098, -5.90297, 28.9154, 0.55 ) }
    dend_31 { pt3dadd( -208.26, -3.06825, 28.9187, 0.55 ) }
    dend_31 { pt3dadd( -209.127, 2.96138, 28.5544, 0.28 ) }
    dend_31 { pt3dadd( -209.921, 5.69113, 28.2759, 0.28 ) }
    dend_31 { pt3dadd( -211.189, 8.75576, 27.9342, 0.28 ) }
    dend_31 { pt3dadd( -211.658, 9.79321, 27.8345, 0.55 ) }
    dend_31 { pt3dadd( -212.697, 12.0144, 27.6769, 0.28 ) }
    dend_31 { pt3dadd( -214.164, 15.544, 27.6195, 0.28 ) }
    dend_31 { pt3dadd( -216.663, 22.1336, 27.8406, 0.28 ) }
    dend_31 { pt3dadd( -218.343, 26.975, 28.0148, 0.28 ) }
    dend_31 { pt3dadd( -219.665, 31.1542, 28.0844, 0.28 ) }
    dend_31 { pt3dadd( -221.234, 36.3876, 28.0932, 0.28 ) }
    dend_31 { pt3dadd( -224.374, 47.2839, 27.9708, 0.28 ) }
    dend_31 { pt3dadd( -224.677, 48.4128, 27.9462, 0.55 ) }
    dend_31 { pt3dadd( -225.766, 52.3419, 27.6353, 0.28 ) }
    dend_31 { pt3dadd( -226.741, 55.4206, 27.1835, 0.83 ) }
    dend_31 { pt3dadd( -227.543, 57.3743, 26.7375, 0.28 ) }
    dend_31 { pt3dadd( -228.589, 59.303, 26.1081, 0.28 ) }
    dend_31 { pt3dadd( -229.653, 60.6931, 25.4933, 0.55 ) }
    dend_31 { pt3dadd( -233.403, 65.2014, 23.7172, 0.28 ) }
    dend_31 { pt3dadd( -233.986, 65.8274, 23.518, 0.55 ) }
    dend_31 { pt3dadd( -235.915, 67.9455, 22.8315, 0.28 ) }
    dend_31 { pt3dadd( -237.794, 70.1925, 22.0118, 0.28 ) }
    dend_31 { pt3dadd( -238.948, 71.7455, 21.4417, 0.28 ) }
    dend_31 { pt3dadd( -239.614, 72.7337, 21.0689, 0.55 ) }
    dend_31 { pt3dadd( -241.253, 75.9648, 19.8031, 0.28 ) }
    dend_31 { pt3dadd( -243.634, 82.0175, 17.3102, 0.28 ) }
    dend_31 { pt3dadd( -244.238, 84.2073, 16.3425, 0.55 ) }
    dend_31 { pt3dadd( -244.595, 86.0139, 15.5396, 0.28 ) }
    dend_31 { pt3dadd( -244.889, 88.1009, 14.6002, 0.55 ) }
    dend_31 { pt3dadd( -245.385, 93.2569, 12.3519, 0.28 ) }
    dend_31 { pt3dadd( -245.467, 95.2591, 11.4047, 0.55 ) }
    dend_31 { pt3dadd( -245.55, 98.5736, 9.90397, 0.28 ) }
    dend_31 { pt3dadd( -245.551, 99.5656, 9.40412, 0.55 ) }
    dend_31 { pt3dadd( -245.519, 103.594, 7.28606, 0.28 ) }
    dend_31 { pt3dadd( -245.511, 104.378, 6.86639, 0.55 ) }
    dend_31 { pt3dadd( -245.457, 108.668, 3.9038, 0.28 ) }
    dend_31 { pt3dadd( -245.393, 109.784, 3.04542, 0.55 ) }
    dend_31 { pt3dadd( -245.276, 111.644, 1.56814, 0.28 ) }
    dend_31 { pt3dadd( -245.21, 112.989, 0.458218, 0.28 ) }
    dend_31 { pt3dadd( -245.184, 113.411, 0.0934306, 0.55 ) }
    dend_31 { pt3dadd( -245.291, 118.744, -4.42277, 0.28 ) }
    dend_31 { pt3dadd( -245.345, 119.212, -4.80637, 0.55 ) }
    dend_31 { pt3dadd( -245.659, 120.897, -6.23962, 0.28 ) }
    dend_31 { pt3dadd( -246.14, 122.761, -7.81368, 0.28 ) }
    dend_31 { pt3dadd( -246.57, 124.246, -8.97064, 0.83 ) }
    dend_31 { pt3dadd( -247.287, 126.327, -10.3986, 0.28 ) }
    dend_31 { pt3dadd( -248.361, 129.106, -11.7991, 0.55 ) }
    dend_31 { pt3dadd( -248.828, 130.449, -12.421, 0.55 ) }
    dend_31 { pt3dadd( -249.234, 131.848, -12.9989, 0.28 ) }
    dend_31 { pt3dadd( -249.849, 133.891, -13.7248, 0.28 ) }
    dend_31 { pt3dadd( -250.446, 135.801, -14.3392, 0.55 ) }
    dend_31 { pt3dadd( -251.112, 138.209, -15.1532, 0.28 ) }
    dend_31 { pt3dadd( -251.431, 139.348, -15.4676, 0.55 ) }
    dend_31 { pt3dadd( -251.694, 140.37, -15.8075, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 61/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -99.9432, -97.0331, 14.2044, 1.11 ) }
    dend_28 { pt3dadd( -103.498, -99.4278, 13.5169, 1.11 ) }
    dend_28 { pt3dadd( -106.328, -101.44, 13.3695, 1.11 ) }
    dend_28 { pt3dadd( -108.039, -102.758, 13.422, 1.11 ) }
    dend_28 { pt3dadd( -109.659, -104.103, 13.5479, 1.11 ) }
    dend_28 { pt3dadd( -111.011, -105.292, 13.6936, 1.11 ) }
    dend_28 { pt3dadd( -112.249, -106.386, 13.8424, 1.11 ) }
    dend_28 { pt3dadd( -114.296, -108.413, 14.3466, 1.11 ) }
    dend_28 { pt3dadd( -115.809, -109.913, 14.7246, 1.11 ) }
    dend_28 { pt3dadd( -117.016, -111.177, 15.0216, 1.11 ) }
    dend_28 { pt3dadd( -117.989, -112.356, 15.4147, 1.11 ) }
    dend_28 { pt3dadd( -119.176, -113.875, 15.9996, 1.11 ) }
    dend_28 { pt3dadd( -120.059, -115.05, 16.5321, 1.11 ) }
    dend_28 { pt3dadd( -121.17, -116.685, 17.292, 1.11 ) }
    dend_28 { pt3dadd( -122.67, -118.881, 18.3711, 1.11 ) }
    dend_28 { pt3dadd( -125.118, -122.455, 20.7367, 1.11 ) }
    dend_28 { pt3dadd( -126.627, -124.648, 22.3281, 1.11 ) }
    dend_28 { pt3dadd( -127.64, -126.122, 23.4127, 1.11 ) }
    dend_28 { pt3dadd( -128.756, -127.834, 24.6379, 1.11 ) }
    dend_28 { pt3dadd( -130.41, -130.482, 26.4489, 1.11 ) }
    dend_28 { pt3dadd( -134.271, -136.332, 30.1376, 1.11 ) }
    dend_28 { pt3dadd( -135.864, -138.698, 31.4218, 1.11 ) }
    dend_28 { pt3dadd( -137.121, -140.671, 32.4353, 1.11 ) }
    dend_28 { pt3dadd( -139.149, -143.923, 33.9641, 1.11 ) }
    dend_28 { pt3dadd( -139.678, -144.832, 34.4107, 1.11 ) }
    dend_28 { pt3dadd( -141.121, -147.455, 35.6334, 1.11 ) }
    dend_28 { pt3dadd( -141.897, -148.738, 36.1017, 1.11 ) }
    dend_28 { pt3dadd( -143.291, -150.647, 36.9389, 1.11 ) }
    dend_28 { pt3dadd( -144.131, -151.605, 37.4221, 1.11 ) }
    dend_28 { pt3dadd( -146.74, -154.005, 38.4574, 1.11 ) }
    dend_28 { pt3dadd( -148.49, -155.478, 39.0771, 1.11 ) }
    dend_28 { pt3dadd( -150.901, -157.389, 39.7969, 1.11 ) }
    dend_28 { pt3dadd( -153.02, -158.747, 40.2178, 1.11 ) }
    dend_28 { pt3dadd( -153.589, -159.019, 40.2767, 1.11 ) }
    dend_28 { pt3dadd( -157.64, -160.728, 40.4289, 1.11 ) }
    dend_28 { pt3dadd( -161.497, -162.274, 40.3164, 1.11 ) }
    dend_28 { pt3dadd( -163.352, -163.01, 40.292, 1.11 ) }
    dend_28 { pt3dadd( -166.244, -164.266, 40.3181, 1.11 ) }
    dend_28 { pt3dadd( -168.379, -165.322, 40.3891, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( -169.621, -165.987, 40.4696, 1.11 ) }
    dend_28 { pt3dadd( -170.937, -166.818, 40.626, 1.11 ) }
    dend_28 { pt3dadd( -172.33, -167.884, 40.6599, 1.11 ) }
    dend_28 { pt3dadd( -174.358, -169.721, 40.7218, 1.11 ) }
    dend_28 { pt3dadd( -175.491, -170.883, 40.7599, 1.11 ) }
    dend_28 { pt3dadd( -176.748, -172.147, 40.8164, 1.11 ) }
    dend_28 { pt3dadd( -178.076, -173.43, 40.8838, 1.11 ) }
    dend_28 { pt3dadd( -179.497, -174.781, 40.9618, 1.11 ) }
    dend_28 { pt3dadd( -180.567, -175.815, 41.0216, 1.11 ) }
    dend_28 { pt3dadd( -182.29, -177.44, 41.1125, 1.11 ) }
    dend_28 { pt3dadd( -183.768, -178.876, 41.1831, 1.11 ) }
    dend_28 { pt3dadd( -185.935, -181.089, 41.2683, 1.11 ) }
    dend_28 { pt3dadd( -186.729, -181.917, 41.2983, 1.11 ) }
    dend_28 { pt3dadd( -188.473, -183.779, 41.359, 1.11 ) }
    dend_28 { pt3dadd( -189.57, -184.966, 41.3894, 1.11 ) }
    dend_28 { pt3dadd( -190.518, -185.979, 41.4053, 1.11 ) }
    dend_28 { pt3dadd( -191.791, -187.226, 41.4053, 1.11 ) }
    dend_28 { pt3dadd( -192.714, -187.95, 41.4053, 1.11 ) }
    dend_28 { pt3dadd( -193.648, -188.608, 41.4053, 1.11 ) }
    dend_28 { pt3dadd( -195.446, -189.727, 41.4053, 1.11 ) }
    dend_28 { pt3dadd( -196.155, -190.146, 41.4053, 1.11 ) }
    dend_28 { pt3dadd( -197.462, -190.879, 41.4053, 1.11 ) }
    dend_28 { pt3dadd( -199.445, -192.001, 41.4053, 1.11 ) }
    dend_28 { pt3dadd( -200.135, -192.381, 41.4075, 1.11 ) }
    dend_28 { pt3dadd( -200.891, -192.81, 41.3411, 1.11 ) }
    dend_28 { pt3dadd( -201.572, -193.175, 41.2213, 1.11 ) }
    dend_28 { pt3dadd( -202.44, -193.624, 41.0025, 1.11 ) }
    dend_28 { pt3dadd( -203.407, -194.141, 40.6722, 1.11 ) }
    dend_28 { pt3dadd( -204.655, -194.791, 40.1821, 1.11 ) }
    dend_28 { pt3dadd( -207.07, -195.893, 39.5048, 1.11 ) }
    dend_28 { pt3dadd( -207.638, -196.123, 39.4089, 1.11 ) }
    dend_28 { pt3dadd( -207.889, -196.227, 39.4017, 1.11 ) }
    dend_28 { pt3dadd( -209.164, -196.827, 39.5415, 1.11 ) }
    dend_28 { pt3dadd( -210.864, -197.738, 39.926, 1.11 ) }
    dend_28 { pt3dadd( -212.797, -198.928, 40.6475, 1.11 ) }
    dend_28 { pt3dadd( -213.68, -199.499, 41.0826, 1.11 ) }
    dend_28 { pt3dadd( -214.718, -200.24, 41.6161, 1.11 ) }
    dend_28 { pt3dadd( -215.747, -201.016, 42.1276, 1.11 ) }
    dend_28 { pt3dadd( -216.82, -201.922, 42.6246, 1.11 ) }
    dend_28 { pt3dadd( -217.684, -202.813, 42.96, 1.11 ) }
    dend_28 { pt3dadd( -218.518, -203.7, 43.1454, 1.11 ) }
    dend_28 { pt3dadd( -219.146, -204.305, 43.2459, 1.11 ) }
    dend_28 { pt3dadd( -220.341, -205.394, 43.3658, 1.11 ) }
    dend_28 { pt3dadd( -221.36, -206.317, 43.4468, 1.11 ) }
    dend_28 { pt3dadd( -222.183, -207.116, 43.4921, 1.11 ) }
    dend_28 { pt3dadd( -223.176, -208.069, 43.5533, 1.11 ) }
    dend_28 { pt3dadd( -224.206, -209.032, 43.6563, 1.11 ) }
    dend_28 { pt3dadd( -225.319, -210.021, 43.7977, 1.11 ) }
    dend_28 { pt3dadd( -225.731, -210.383, 43.8614, 1.11 ) }
    dend_28 { pt3dadd( -226.775, -211.28, 44.035, 1.11 ) }
    dend_28 { pt3dadd( -227.475, -211.913, 44.1504, 1.11 ) }
    dend_28 { pt3dadd( -228.695, -213.064, 44.3417, 1.11 ) }
    dend_28 { pt3dadd( -229.694, -213.95, 44.6879, 1.11 ) }
    dend_28 { pt3dadd( -230.547, -214.61, 45.083, 1.11 ) }
    dend_28 { pt3dadd( -231.288, -215.146, 45.4749, 1.11 ) }
    dend_28 { pt3dadd( -232.47, -215.946, 46.1313, 1.11 ) }
    dend_28 { pt3dadd( -232.922, -216.279, 46.3955, 1.11 ) }
    dend_28 { pt3dadd( -235.484, -218.45, 48.1739, 1.11 ) }
    dend_28 { pt3dadd( -236.064, -218.977, 48.5688, 1.11 ) }
    dend_28 { pt3dadd( -236.727, -219.603, 48.9851, 1.11 ) }
    dend_28 { pt3dadd( -237.466, -220.251, 49.563, 1.11 ) }
    dend_28 { pt3dadd( -238.036, -220.715, 50.0318, 1.11 ) }
    dend_28 { pt3dadd( -238.77, -221.31, 50.606, 1.11 ) }
    dend_28 { pt3dadd( -240.287, -222.586, 51.6415, 1.11 ) }
    dend_28 { pt3dadd( -240.664, -222.879, 51.9199, 1.11 ) }
    dend_28 { pt3dadd( -243.663, -224.66, 54.1189, 1.11 ) }
    dend_28 { pt3dadd( -244.418, -225.038, 54.6458, 1.11 ) }
    dend_28 { pt3dadd( -244.908, -225.277, 54.9412, 1.11 ) }
    dend_28 { pt3dadd( -245.228, -225.442, 55.1112, 1.11 ) }
    dend_28 { pt3dadd( -246.499, -226.166, 55.8936, 1.11 ) }
    dend_28 { pt3dadd( -249.455, -227.983, 57.6509, 1.11 ) }
    dend_28 { pt3dadd( -250.219, -228.481, 58.0649, 1.11 ) }
    dend_28 { pt3dadd( -252.428, -229.972, 59.309, 1.11 ) }
    dend_28 { pt3dadd( -254.522, -231.47, 60.5134, 1.11 ) }
    dend_28 { pt3dadd( -258.19, -234.188, 62.5378, 1.11 ) }
    dend_28 { pt3dadd( -260.028, -235.583, 63.4643, 1.11 ) }
    dend_28 { pt3dadd( -261.045, -236.365, 63.9724, 1.11 ) }
    dend_28 { pt3dadd( -261.508, -236.705, 64.2057, 1.11 ) }
    dend_28 { pt3dadd( -262.45, -237.354, 64.6604, 1.11 ) }
    dend_28 { pt3dadd( -264.054, -238.469, 65.2632, 1.11 ) }
    dend_28 { pt3dadd( -266.049, -239.937, 65.7077, 1.11 ) }
    dend_28 { pt3dadd( -268.66, -241.935, 66.4073, 1.11 ) }
    dend_28 { pt3dadd( -269.328, -242.462, 66.5929, 1.11 ) }
    dend_28 { pt3dadd( -269.925, -242.943, 66.7457, 1.11 ) }
    dend_28 { pt3dadd( -270.568, -243.496, 66.8998, 1.11 ) }
    dend_28 { pt3dadd( -271.154, -244.062, 67.0298, 1.11 ) }
    dend_28 { pt3dadd( -272.175, -245.038, 67.1058, 1.11 ) }
    dend_28 { pt3dadd( -273.272, -245.88, 67.0012, 1.11 ) }
    dend_28 { pt3dadd( -274.764, -246.975, 66.8643, 1.11 ) }
    dend_28 { pt3dadd( -275.407, -247.418, 66.8151, 1.11 ) }
    dend_28 { pt3dadd( -275.874, -247.714, 66.7915, 1.11 ) }
    dend_28 { pt3dadd( -276.581, -248.154, 66.7481, 1.11 ) }
    dend_28 { pt3dadd( -278.373, -249.502, 66.6072, 1.11 ) }
    dend_28 { pt3dadd( -280.468, -251.48, 66.4176, 1.11 ) }
    dend_28 { pt3dadd( -281.451, -252.838, 66.3303, 1.11 ) }
    dend_28 { pt3dadd( -281.759, -253.297, 66.3095, 1.11 ) }
    dend_28 { pt3dadd( -282.069, -253.755, 66.2955, 1.11 ) }
    dend_28 { pt3dadd( -282.626, -254.576, 66.2831, 1.11 ) }
    dend_28 { pt3dadd( -283.162, -255.428, 66.2831, 1.11 ) }
    dend_28 { pt3dadd( -284.031, -256.636, 66.2831, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_28 { pt3dadd( -284.459, -257.352, 66.2831, 1.11 ) }
    dend_28 { pt3dadd( -284.854, -258.076, 66.2831, 1.11 ) }
    dend_28 { pt3dadd( -285.338, -258.948, 66.2831, 1.11 ) }
    dend_28 { pt3dadd( -286.001, -260.196, 66.2831, 1.11 ) }
    dend_28 { pt3dadd( -286.123, -260.45, 66.2831, 1.11 ) }
    dend_28 { pt3dadd( -286.476, -261.257, 66.2831, 1.11 ) }
    dend_28 { pt3dadd( -286.79, -262.07, 66.2831, 1.11 ) }
    dend_28 { pt3dadd( -286.98, -262.589, 66.2831, 1.11 ) }
    dend_28 { pt3dadd( -287.444, -263.74, 66.2831, 1.11 ) }
    dend_28 { pt3dadd( -287.701, -264.229, 66.2831, 1.11 ) }
    dend_28 { pt3dadd( -288.358, -265.389, 66.651, 1.11 ) }
    dend_28 { pt3dadd( -288.624, -265.865, 66.9458, 1.11 ) }
    dend_28 { pt3dadd( -288.738, -266.058, 67.1172, 1.11 ) }
    dend_28 { pt3dadd( -288.847, -266.237, 67.3054, 1.11 ) }
    dend_28 { pt3dadd( -289.415, -267.097, 68.3803, 1.11 ) }
    dend_28 { pt3dadd( -291.157, -269.635, 71.5747, 1.11 ) }
    dend_28 { pt3dadd( -291.477, -270.076, 72.1451, 1.11 ) }
    dend_28 { pt3dadd( -291.75, -270.427, 72.5775, 1.11 ) }
    dend_28 { pt3dadd( -292.367, -271.12, 73.2954, 1.11 ) }
    dend_28 { pt3dadd( -292.525, -271.3, 73.443, 1.11 ) }
    dend_28 { pt3dadd( -293.378, -272.27, 73.9354, 1.11 ) }
    dend_28 { pt3dadd( -293.742, -272.678, 74.0188, 1.11 ) }
    dend_28 { pt3dadd( -294.087, -273.1, 74.1159, 1.11 ) }
    dend_28 { pt3dadd( -294.994, -274.294, 74.4164, 1.11 ) }
    dend_28 { pt3dadd( -296.293, -276.054, 74.9393, 1.11 ) }
    dend_28 { pt3dadd( -296.95, -276.975, 75.2483, 1.11 ) }
    dend_28 { pt3dadd( -297.254, -277.472, 75.4484, 1.11 ) }
    dend_28 { pt3dadd( -297.501, -277.999, 75.6726, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 28/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 13.5161, 26.7547, 8.75168, 0.83 ) }
    dend_22 { pt3dadd( 14.0861, 29.3147, 7.62168, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 30/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 13.5161, 26.7547, 8.75168, 0.83 ) }
    dend_21 { pt3dadd( 12.3648, 29.4389, 8.46096, 0.83 ) }
    dend_21 { pt3dadd( 11.3801, 31.7345, 8.21232, 0.55 ) }
    dend_21 { pt3dadd( 11.0346, 32.54, 8.12508, 0.55 ) }
    dend_21 { pt3dadd( 10.5715, 33.6197, 8.00813, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 35/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 72.0524, 33.4608, -18.7006, 0.55 ) }
    dend_15 { pt3dadd( 74.7772, 33.2215, -18.883, 0.55 ) }
    dend_15 { pt3dadd( 76.746, 32.8902, -18.9641, 0.55 ) }
    dend_15 { pt3dadd( 80.5228, 32.2006, -18.8123, 0.55 ) }
    dend_15 { pt3dadd( 83.2147, 31.7313, -19.1085, 0.55 ) }
    dend_15 { pt3dadd( 84.9503, 31.4071, -19.6868, 0.55 ) }
    dend_15 { pt3dadd( 87.0475, 31.0524, -20.5684, 0.55 ) }
    dend_15 { pt3dadd( 90.909, 30.3287, -22.5236, 0.55 ) }
    dend_15 { pt3dadd( 93.5025, 29.8802, -23.9225, 0.55 ) }
    dend_15 { pt3dadd( 100.248, 28.8362, -27.7202, 0.55 ) }
    dend_15 { pt3dadd( 106.584, 28.1776, -31.3303, 0.55 ) }
    dend_15 { pt3dadd( 109.463, 27.9614, -33.008, 0.55 ) }
    dend_15 { pt3dadd( 110.995, 27.8858, -33.884, 0.55 ) }
    dend_15 { pt3dadd( 113.612, 27.7735, -35.3146, 0.55 ) }
    dend_15 { pt3dadd( 116.095, 27.6671, -36.4811, 0.55 ) }
    dend_15 { pt3dadd( 118.516, 27.5045, -37.2972, 0.55 ) }
    dend_15 { pt3dadd( 121.199, 27.2565, -38.1384, 0.55 ) }
    dend_15 { pt3dadd( 123.694, 26.7316, -39.109, 0.55 ) }
    dend_15 { pt3dadd( 125.346, 26.2994, -40.0359, 0.28 ) }
    dend_15 { pt3dadd( 125.839, 26.1445, -40.375, 0.83 ) }
    dend_15 { pt3dadd( 130.464, 24.7117, -43.6105, 0.55 ) }
    dend_15 { pt3dadd( 132.349, 24.0717, -44.8892, 0.55 ) }
    dend_15 { pt3dadd( 136.887, 22.5039, -47.6904, 0.55 ) }
    dend_15 { pt3dadd( 141.577, 20.6666, -50.4344, 0.28 ) }
    dend_15 { pt3dadd( 142.762, 20.1671, -51.0126, 0.55 ) }
    dend_15 { pt3dadd( 146.405, 18.7139, -52.3125, 0.55 ) }
    dend_15 { pt3dadd( 147.79, 18.1849, -52.6019, 0.55 ) }
    dend_15 { pt3dadd( 149.813, 17.5017, -52.9338, 0.83 ) }
    dend_15 { pt3dadd( 152.715, 16.5887, -53.2443, 0.55 ) }
    dend_15 { pt3dadd( 157.679, 15.0659, -53.6004, 0.55 ) }
    dend_15 { pt3dadd( 160.148, 14.3858, -53.8724, 0.55 ) }
    dend_15 { pt3dadd( 162.032, 13.9426, -54.1646, 0.55 ) }
    dend_15 { pt3dadd( 167.037, 13.0548, -54.9877, 0.55 ) }
    dend_15 { pt3dadd( 168.858, 12.8648, -55.2985, 0.55 ) }
    dend_15 { pt3dadd( 170.58, 12.8156, -55.5938, 0.83 ) }
    dend_15 { pt3dadd( 172.212, 12.84, -55.9218, 0.55 ) }
    dend_15 { pt3dadd( 172.751, 12.845, -56.0438, 0.83 ) }
    dend_15 { pt3dadd( 173.864, 12.8888, -56.2902, 1.11 ) }
    dend_15 { pt3dadd( 176.521, 12.9291, -56.826, 1.11 ) }
    dend_15 { pt3dadd( 179.797, 13.0069, -57.3565, 0.28 ) }
    dend_15 { pt3dadd( 181.302, 13.019, -57.5653, 0.28 ) }
    dend_15 { pt3dadd( 184.005, 13.0516, -57.9318, 0.83 ) }
    dend_15 { pt3dadd( 185.603, 13.062, -58.1551, 0.28 ) }
    dend_15 { pt3dadd( 187.355, 13.0609, -58.446, 0.55 ) }
    dend_15 { pt3dadd( 189.721, 13.0671, -58.8662, 0.55 ) }
    dend_15 { pt3dadd( 195.179, 13.1127, -59.8642, 0.28 ) }
    dend_15 { pt3dadd( 197.962, 13.1288, -60.4001, 0.55 ) }
    dend_15 { pt3dadd( 200.53, 13.1526, -60.967, 0.28 ) }
    dend_15 { pt3dadd( 202.692, 13.1434, -61.5019, 0.55 ) }
    dend_15 { pt3dadd( 204.301, 13.1747, -61.9675, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 72.0524, 33.4608, -18.7006, 0.55 ) }
    dend_14 { pt3dadd( 77.3285, 35.4471, -15.4808, 0.55 ) }
    dend_14 { pt3dadd( 78.6954, 36.0432, -14.7573, 0.28 ) }
    dend_14 { pt3dadd( 82.1278, 37.5402, -12.9406, 0.55 ) }
    dend_14 { pt3dadd( 83.8465, 38.2897, -12.0309, 0.28 ) }
    dend_14 { pt3dadd( 84.5308, 38.5881, -11.6688, 0.55 ) }
    dend_14 { pt3dadd( 86.6747, 39.5232, -10.534, 0.28 ) }
    dend_14 { pt3dadd( 87.4314, 39.8514, -10.4639, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 93/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 16.6448, 34.6646, -15.3518, 0.55 ) }
    dend_10 { pt3dadd( 16.4417, 36.3196, -16.3368, 0.55 ) }
    dend_10 { pt3dadd( 16.4167, 36.6697, -16.5079, 0.83 ) }
    dend_10 { pt3dadd( 16.3052, 38.8364, -17.6006, 0.28 ) }
    dend_10 { pt3dadd( 16.2417, 39.3929, -17.8591, 0.83 ) }
    dend_10 { pt3dadd( 15.8398, 42.2102, -19.1098, 0.55 ) }
    dend_10 { pt3dadd( 15.6447, 43.5733, -19.6775, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_10 { pt3dadd( 15.3609, 45.4378, -20.3414, 0.55 ) }
    dend_10 { pt3dadd( 15.0343, 47.6511, -21.0705, 0.55 ) }
    dend_10 { pt3dadd( 14.5079, 50.5101, -21.7685, 0.55 ) }
    dend_10 { pt3dadd( 14.3189, 51.3597, -21.9402, 0.83 ) }
    dend_10 { pt3dadd( 13.9709, 52.7931, -22.1337, 0.55 ) }
    dend_10 { pt3dadd( 13.684, 53.9022, -22.2467, 0.83 ) }
    dend_10 { pt3dadd( 13.276, 55.4141, -22.3448, 1.11 ) }
    dend_10 { pt3dadd( 11.744, 61.0836, -22.4932, 0.55 ) }
    dend_10 { pt3dadd( 11.4672, 62.1881, -22.5165, 1.11 ) }
    dend_10 { pt3dadd( 10.2213, 67.0202, -22.6998, 0.55 ) }
    dend_10 { pt3dadd( 9.79554, 68.7242, -22.7899, 0.55 ) }
    dend_10 { pt3dadd( 9.48283, 70.1258, -22.8931, 0.83 ) }
    dend_10 { pt3dadd( 9.12466, 71.9452, -23.0561, 0.55 ) }
    dend_10 { pt3dadd( 8.7699, 74.2096, -23.3376, 0.83 ) }
    dend_10 { pt3dadd( 8.42496, 76.7225, -23.6874, 0.83 ) }
    dend_10 { pt3dadd( 8.16772, 78.7954, -24.0058, 0.83 ) }
    dend_10 { pt3dadd( 7.71799, 82.3936, -24.522, 0.55 ) }
    dend_10 { pt3dadd( 7.61187, 83.1624, -24.6217, 1.11 ) }
    dend_10 { pt3dadd( 7.37713, 84.8296, -24.7788, 0.55 ) }
    dend_10 { pt3dadd( 6.99422, 87.3429, -24.9257, 1.11 ) }
    dend_10 { pt3dadd( 6.71908, 89.2827, -24.9697, 0.55 ) }
    dend_10 { pt3dadd( 6.40652, 91.8153, -25.0024, 0.83 ) }
    dend_10 { pt3dadd( 6.28538, 93.2239, -25.0024, 0.55 ) }
    dend_10 { pt3dadd( 5.97679, 97.9293, -25.0024, 0.83 ) }
    dend_10 { pt3dadd( 5.95605, 98.5458, -25.0005, 0.55 ) }
    dend_10 { pt3dadd( 5.96367, 100.033, -24.992, 0.83 ) }
    dend_10 { pt3dadd( 6.07829, 102.029, -24.9764, 0.28 ) }
    dend_10 { pt3dadd( 6.15669, 102.906, -24.9642, 0.55 ) }
    dend_10 { pt3dadd( 6.45252, 105.516, -24.9115, 0.28 ) }
    dend_10 { pt3dadd( 6.77049, 107.978, -24.8479, 0.83 ) }
    dend_10 { pt3dadd( 7.01995, 110.065, -24.7845, 0.28 ) }
    dend_10 { pt3dadd( 7.35939, 112.875, -24.6904, 0.83 ) }
    dend_10 { pt3dadd( 7.49949, 114.289, -24.6478, 0.55 ) }
    dend_10 { pt3dadd( 7.66717, 116.143, -24.5968, 0.28 ) }
    dend_10 { pt3dadd( 7.75519, 117.281, -24.569, 0.83 ) }
    dend_10 { pt3dadd( 7.85355, 120.115, -24.5132, 0.55 ) }
    dend_10 { pt3dadd( 7.88469, 121.725, -24.4865, 0.55 ) }
    dend_10 { pt3dadd( 7.93451, 129.121, -24.3909, 0.28 ) }
    dend_10 { pt3dadd( 7.93225, 129.737, -24.3858, 0.55 ) }
    dend_10 { pt3dadd( 7.89674, 131.696, -24.3742, 0.28 ) }
    dend_10 { pt3dadd( 7.83094, 134.2, -24.3637, 0.55 ) }
    dend_10 { pt3dadd( 7.73786, 136.921, -24.3605, 0.28 ) }
    dend_10 { pt3dadd( 7.70378, 137.798, -24.3594, 0.55 ) }
    dend_10 { pt3dadd( 7.65953, 138.902, -24.3436, 0.28 ) }
    dend_10 { pt3dadd( 7.60589, 140.653, -24.3005, 0.28 ) }
    dend_10 { pt3dadd( 7.57806, 141.485, -24.2712, 0.55 ) }
    dend_10 { pt3dadd( 7.45015, 143.99, -24.156, 0.28 ) }
    dend_10 { pt3dadd( 7.39951, 144.54, -24.1268, 0.55 ) }
    dend_10 { pt3dadd( 7.14482, 146.694, -23.91, 0.28 ) }
    dend_10 { pt3dadd( 6.94778, 147.664, -23.7854, 0.28 ) }
    dend_10 { pt3dadd( 6.74491, 148.51, -23.6662, 0.28 ) }
    dend_10 { pt3dadd( 6.6128, 149.039, -23.5758, 0.28 ) }
    dend_10 { pt3dadd( 6.19295, 150.615, -23.2708, 0.55 ) }
    dend_10 { pt3dadd( 5.54364, 153.916, -22.5928, 0.28 ) }
    dend_10 { pt3dadd( 4.96043, 157.284, -22.0092, 0.28 ) }
    dend_10 { pt3dadd( 4.59204, 159.516, -21.6909, 0.55 ) }
    dend_10 { pt3dadd( 4.14378, 162.776, -21.3155, 0.28 ) }
    dend_10 { pt3dadd( 3.97278, 164.298, -21.1763, 0.28 ) }
    dend_10 { pt3dadd( 3.49355, 170.363, -20.9225, 0.55 ) }
    dend_10 { pt3dadd( 3.37965, 173.506, -20.9783, 0.28 ) }
    dend_10 { pt3dadd( 3.36559, 174.681, -21.0443, 0.55 ) }
    dend_10 { pt3dadd( 3.34039, 176.787, -21.2524, 0.28 ) }
    dend_10 { pt3dadd( 3.33973, 177.167, -21.3096, 0.28 ) }
    dend_10 { pt3dadd( 3.33094, 179.454, -21.6686, 0.55 ) }
    dend_10 { pt3dadd( 3.24458, 181.937, -22.0568, 0.28 ) }
    dend_10 { pt3dadd( 3.16652, 183.794, -22.1653, 0.55 ) }
    dend_10 { pt3dadd( 2.98305, 186.145, -22.3676, 0.28 ) }
    dend_10 { pt3dadd( 2.94963, 186.422, -22.3963, 0.55 ) }
    dend_10 { pt3dadd( 2.57934, 189.182, -22.689, 0.28 ) }
    dend_10 { pt3dadd( 2.4937, 189.727, -22.7307, 0.55 ) }
    dend_10 { pt3dadd( 2.05929, 191.994, -22.9479, 0.28 ) }
    dend_10 { pt3dadd( 1.27413, 195.756, -23.3059, 0.55 ) }
    dend_10 { pt3dadd( 0.767396, 197.773, -23.4935, 0.28 ) }
    dend_10 { pt3dadd( 0.455306, 199.15, -23.6034, 0.55 ) }
    dend_10 { pt3dadd( 0.159773, 201.024, -23.8465, 0.28 ) }
    dend_10 { pt3dadd( 0.068262, 202.006, -23.9631, 0.55 ) }
    dend_10 { pt3dadd( 0.106514, 203.681, -24.1277, 0.28 ) }
    dend_10 { pt3dadd( 0.163859, 204.241, -24.1287, 0.28 ) }
    dend_10 { pt3dadd( 0.652196, 206.29, -24.136, 0.28 ) }
    dend_10 { pt3dadd( 1.62651, 209.011, -24.1054, 0.28 ) }
    dend_10 { pt3dadd( 2.29422, 210.286, -24.1199, 0.28 ) }
    dend_10 { pt3dadd( 3.315, 212.201, -24.0783, 0.28 ) }
    dend_10 { pt3dadd( 3.95445, 213.27, -24.0293, 0.28 ) }
    dend_10 { pt3dadd( 5.35414, 215.481, -23.8837, 0.28 ) }
    dend_10 { pt3dadd( 5.68144, 216.001, -23.8394, 0.28 ) }
    dend_10 { pt3dadd( 7.36441, 218.703, -23.552, 0.55 ) }
    dend_10 { pt3dadd( 9.99491, 223.046, -23.2494, 0.28 ) }
    dend_10 { pt3dadd( 11.3169, 225.543, -23.1326, 0.28 ) }
    dend_10 { pt3dadd( 11.3169, 225.543, -23.1326, 0.55 ) }
    dend_10 { pt3dadd( 12.2573, 227.9, -23.3526, 0.28 ) }
    dend_10 { pt3dadd( 12.3383, 228.155, -23.3987, 0.55 ) }
    dend_10 { pt3dadd( 13.0792, 231.203, -24.1534, 0.28 ) }
    dend_10 { pt3dadd( 13.4445, 233.043, -24.7097, 0.28 ) }
    dend_10 { pt3dadd( 13.6326, 234.819, -25.2357, 0.55 ) }
    dend_10 { pt3dadd( 14.1013, 239.627, -26.7343, 0.28 ) }
    dend_10 { pt3dadd( 14.3638, 242.816, -27.8185, 0.28 ) }
    dend_10 { pt3dadd( 14.4818, 244.716, -28.4939, 0.28 ) }
    dend_10 { pt3dadd( 14.5045, 246.071, -29.0323, 0.28 ) }
    dend_10 { pt3dadd( 14.5251, 248.069, -29.8454, 0.28 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 99/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 16.6448, 34.6646, -15.3518, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_9 { pt3dadd( 15.6727, 35.2494, -16.9445, 0.55 ) }
    dend_9 { pt3dadd( 14.4435, 36.3502, -18.9706, 0.55 ) }
    dend_9 { pt3dadd( 12.7863, 38.1758, -22.2237, 0.55 ) }
    dend_9 { pt3dadd( 11.0294, 40.6113, -25.9909, 0.55 ) }
    dend_9 { pt3dadd( 10.4526, 41.4196, -27.3196, 0.55 ) }
    dend_9 { pt3dadd( 8.59067, 43.9664, -31.8082, 0.55 ) }
    dend_9 { pt3dadd( 7.11274, 46.1396, -35.8788, 1.11 ) }
    dend_9 { pt3dadd( 5.035, 49.2014, -41.9791, 0.55 ) }
    dend_9 { pt3dadd( 3.85362, 50.7721, -45.6933, 0.55 ) }
    dend_9 { pt3dadd( 0.898447, 53.5776, -54.4778, 0.55 ) }
    dend_9 { pt3dadd( 0.204649, 53.9293, -56.2764, 0.55 ) }
    dend_9 { pt3dadd( -1.57609, 54.23, -59.981, 0.55 ) }
    dend_9 { pt3dadd( -2.39049, 54.1658, -61.4524, 0.55 ) }
    dend_9 { pt3dadd( -3.86317, 53.9271, -63.5446, 0.55 ) }
    dend_9 { pt3dadd( -6.69841, 53.4439, -67.0364, 0.55 ) }
    dend_9 { pt3dadd( -8.71156, 53.2061, -69.0523, 0.55 ) }
    dend_9 { pt3dadd( -11.8627, 53.0266, -71.8867, 0.55 ) }
    dend_9 { pt3dadd( -13.9017, 52.9214, -73.5129, 0.55 ) }
    dend_9 { pt3dadd( -17.2385, 52.8037, -76.0163, 0.55 ) }
    dend_9 { pt3dadd( -18.6644, 52.8293, -77.0299, 1.11 ) }
    dend_9 { pt3dadd( -21.7174, 52.8957, -79.0458, 0.55 ) }
    dend_9 { pt3dadd( -22.9084, 52.9556, -79.8852, 0.83 ) }
    dend_9 { pt3dadd( -24.2333, 53.045, -80.8847, 0.55 ) }
    dend_9 { pt3dadd( -25.4386, 53.1888, -81.884, 0.55 ) }
    dend_9 { pt3dadd( -27.7348, 53.3478, -83.7525, 0.83 ) }
    dend_9 { pt3dadd( -29.5002, 53.4343, -85.2116, 0.28 ) }
    dend_9 { pt3dadd( -30.5875, 53.4676, -86.1013, 0.55 ) }
    dend_9 { pt3dadd( -31.4829, 53.4841, -86.8301, 0.28 ) }
    dend_9 { pt3dadd( -33.2906, 53.4771, -88.11, 1.38 ) }
    dend_9 { pt3dadd( -36.3113, 53.3053, -89.9515, 0.55 ) }
    dend_9 { pt3dadd( -37.9676, 53.1724, -90.7185, 0.83 ) }
    dend_9 { pt3dadd( -38.9946, 53.0833, -91.1866, 0.55 ) }
    dend_9 { pt3dadd( -40.2657, 52.9542, -91.7497, 0.83 ) }
    dend_9 { pt3dadd( -42.7791, 52.662, -92.8795, 0.55 ) }
    dend_9 { pt3dadd( -43.2828, 52.5974, -93.099, 0.55 ) }
    dend_9 { pt3dadd( -45.8859, 52.2423, -94.3052, 0.55 ) }
    dend_9 { pt3dadd( -48.8623, 51.7399, -95.8179, 0.28 ) }
    dend_9 { pt3dadd( -50.6039, 51.3976, -96.7536, 0.83 ) }
    dend_9 { pt3dadd( -52.1023, 51.0152, -97.6728, 0.55 ) }
    dend_9 { pt3dadd( -52.8356, 50.7717, -98.1795, 0.83 ) }
    dend_9 { pt3dadd( -54.3355, 50.1668, -99.2391, 0.28 ) }
    dend_9 { pt3dadd( -54.5423, 50.0665, -99.3843, 0.55 ) }
    dend_9 { pt3dadd( -55.7526, 49.5051, -100.078, 0.28 ) }
    dend_9 { pt3dadd( -57.4139, 48.8296, -100.921, 0.83 ) }
    dend_9 { pt3dadd( -58.5728, 48.4501, -101.5, 0.55 ) }
    dend_9 { pt3dadd( -59.1394, 48.3132, -101.761, 0.28 ) }
    dend_9 { pt3dadd( -60.7019, 48.051, -102.633, 0.83 ) }
    dend_9 { pt3dadd( -61.971, 47.8801, -103.358, 0.55 ) }
    dend_9 { pt3dadd( -63.473, 47.7483, -104.25, 0.83 ) }
    dend_9 { pt3dadd( -66.3795, 47.6373, -106.005, 0.55 ) }
    dend_9 { pt3dadd( -67.6341, 47.628, -106.804, 0.83 ) }
    dend_9 { pt3dadd( -71.7745, 47.6535, -109.644, 0.83 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 52/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -8.82786, -172.892, 1.1867, 0.55 ) }
    dend_62 { pt3dadd( -8.89484, -174.279, 1.96826, 0.55 ) }
    dend_62 { pt3dadd( -9.04617, -177.412, 3.73436, 0.55 ) }
    dend_62 { pt3dadd( -9.20223, -180.643, 5.55555, 0.55 ) }
    dend_62 { pt3dadd( -9.44671, -185.705, 8.40866, 0.55 ) }
    dend_62 { pt3dadd( -9.63696, -189.645, 10.629, 1.66 ) }
    dend_62 { pt3dadd( -9.64851, -189.884, 10.7637, 1.66 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 59/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -8.82786, -172.892, 1.1867, 0.55 ) }
    dend_61 { pt3dadd( -8.79509, -173.3, 1.65762, 0.55 ) }
    dend_61 { pt3dadd( -8.59269, -174.711, 3.30235, 0.55 ) }
    dend_61 { pt3dadd( -8.27564, -176.737, 5.58004, 0.55 ) }
    dend_61 { pt3dadd( -7.22923, -185.314, 15.3257, 0.55 ) }
    dend_61 { pt3dadd( -7.03431, -187.398, 17.6787, 0.55 ) }
    dend_61 { pt3dadd( -6.76377, -191.298, 22.0541, 0.55 ) }
    dend_61 { pt3dadd( -6.68599, -192.729, 23.6752, 0.55 ) }
    dend_61 { pt3dadd( -6.60097, -194.11, 25.2633, 0.55 ) }
    dend_61 { pt3dadd( -6.48337, -197.028, 28.5254, 0.55 ) }
    dend_61 { pt3dadd( -6.46145, -197.757, 29.2065, 0.55 ) }
    dend_61 { pt3dadd( -6.43976, -199.878, 31.1779, 0.55 ) }
    dend_61 { pt3dadd( -6.48385, -200.988, 32.0076, 0.55 ) }
    dend_61 { pt3dadd( -6.50205, -201.832, 32.5467, 0.55 ) }
    dend_61 { pt3dadd( -6.57866, -203.712, 33.5797, 0.55 ) }
    dend_61 { pt3dadd( -6.5858, -207.582, 35.4244, 0.55 ) }
    dend_61 { pt3dadd( -6.59537, -208.623, 35.9077, 0.55 ) }
    dend_61 { pt3dadd( -6.71917, -211.691, 37.2133, 0.55 ) }
    dend_61 { pt3dadd( -7.08675, -216.032, 39.0344, 0.55 ) }
    dend_61 { pt3dadd( -7.6306, -219.705, 40.4361, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_46 (entry count 79/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -67.1298, -154.436, -7.24863, 1.11 ) }
    dend_58 { pt3dadd( -71.9924, -154.459, -4.63368, 1.11 ) }
    dend_58 { pt3dadd( -74.2765, -154.353, -3.13225, 1.11 ) }
    dend_58 { pt3dadd( -75.5139, -154.242, -2.31076, 1.11 ) }
    dend_58 { pt3dadd( -77.3451, -154.02, -0.958578, 1.11 ) }
    dend_58 { pt3dadd( -81.2192, -153.506, 1.92811, 1.11 ) }
    dend_58 { pt3dadd( -83.4977, -153.198, 3.57148, 0.83 ) }
    dend_58 { pt3dadd( -87.8684, -152.374, 6.5731, 0.83 ) }
    dend_58 { pt3dadd( -89.4844, -152.039, 7.7062, 0.83 ) }
    dend_58 { pt3dadd( -93.8463, -150.979, 10.7517, 0.83 ) }
    dend_58 { pt3dadd( -95.4337, -150.544, 11.8197, 0.83 ) }
    dend_58 { pt3dadd( -97.3042, -150.023, 12.9202, 0.83 ) }
    dend_58 { pt3dadd( -98.605, -149.566, 13.657, 0.83 ) }
    dend_58 { pt3dadd( -99.4638, -149.199, 14.0324, 0.83 ) }
    dend_58 { pt3dadd( -99.9302, -148.973, 14.2275, 0.83 ) }
    dend_58 { pt3dadd( -101.096, -148.321, 14.6239, 0.83 ) }
    dend_58 { pt3dadd( -101.606, -148.032, 14.848, 0.83 ) }
    dend_58 { pt3dadd( -104.02, -146.871, 16.0245, 0.83 ) }
    dend_58 { pt3dadd( -105.187, -146.404, 16.6093, 0.83 ) }
    dend_58 { pt3dadd( -105.946, -146.163, 16.9554, 0.83 ) }
    dend_58 { pt3dadd( -107.179, -145.914, 17.4205, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_58 { pt3dadd( -108.548, -145.787, 17.7633, 1.11 ) }
    dend_58 { pt3dadd( -110.187, -145.698, 18.0101, 0.28 ) }
    dend_58 { pt3dadd( -111.082, -145.683, 18.0718, 0.55 ) }
    dend_58 { pt3dadd( -112.763, -145.697, 18.1633, 1.11 ) }
    dend_58 { pt3dadd( -114.517, -145.701, 18.2256, 0.83 ) }
    dend_58 { pt3dadd( -118.159, -145.8, 18.2736, 1.11 ) }
    dend_58 { pt3dadd( -120.263, -145.911, 18.2921, 1.11 ) }
    dend_58 { pt3dadd( -121.942, -146.09, 18.2989, 0.28 ) }
    dend_58 { pt3dadd( -122.764, -146.23, 18.3365, 0.28 ) }
    dend_58 { pt3dadd( -124.474, -146.593, 18.441, 0.83 ) }
    dend_58 { pt3dadd( -125.823, -146.919, 18.54, 0.55 ) }
    dend_58 { pt3dadd( -126.777, -147.199, 18.6209, 0.55 ) }
    dend_58 { pt3dadd( -128.482, -147.677, 18.5479, 0.28 ) }
    dend_58 { pt3dadd( -130.848, -148.245, 18.3529, 1.11 ) }
    dend_58 { pt3dadd( -133.821, -148.763, 17.9762, 0.55 ) }
    dend_58 { pt3dadd( -134.906, -148.894, 17.801, 1.11 ) }
    dend_58 { pt3dadd( -135.99, -148.986, 17.5982, 1.11 ) }
    dend_58 { pt3dadd( -140.034, -149.247, 16.6945, 0.28 ) }
    dend_58 { pt3dadd( -142.239, -149.263, 16.0801, 1.11 ) }
    dend_58 { pt3dadd( -144.559, -149.226, 15.2215, 1.11 ) }
    dend_58 { pt3dadd( -146.21, -149.172, 14.6338, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -67.1298, -154.436, -7.24863, 1.11 ) }
    dend_47 { pt3dadd( -67.4862, -155.757, -7.83254, 1.11 ) }
    dend_47 { pt3dadd( -67.796, -156.777, -8.24452, 1.11 ) }
    dend_47 { pt3dadd( -68.4075, -158.525, -8.87859, 1.11 ) }
    dend_47 { pt3dadd( -68.7774, -159.58, -9.23183, 1.11 ) }
    dend_47 { pt3dadd( -69.9983, -163.411, -10.4224, 1.11 ) }
    dend_47 { pt3dadd( -70.5818, -165.406, -11.0115, 1.11 ) }
    dend_47 { pt3dadd( -71.1132, -167.369, -11.5606, 1.11 ) }
    dend_47 { pt3dadd( -71.5828, -169.215, -12.0032, 1.11 ) }
    dend_47 { pt3dadd( -71.8008, -170.053, -12.1464, 1.11 ) }
    dend_47 { pt3dadd( -72.1695, -171.385, -12.2549, 1.11 ) }
    dend_47 { pt3dadd( -72.2878, -171.757, -12.2424, 1.11 ) }
    dend_47 { pt3dadd( -72.9948, -173.926, -12.1612, 1.11 ) }
    dend_47 { pt3dadd( -73.7009, -175.91, -12.0866, 1.11 ) }
    dend_47 { pt3dadd( -74.3598, -177.799, -12.1643, 1.11 ) }
    dend_47 { pt3dadd( -75.0944, -179.771, -12.3453, 1.11 ) }
    dend_47 { pt3dadd( -76.12, -182.408, -12.6852, 1.11 ) }
    dend_47 { pt3dadd( -76.8064, -184.199, -12.9764, 1.11 ) }
    dend_47 { pt3dadd( -77.5505, -186.262, -13.3995, 1.11 ) }
    dend_47 { pt3dadd( -78.7109, -189.823, -14.2804, 1.11 ) }
    dend_47 { pt3dadd( -79.0052, -190.92, -14.5983, 1.11 ) }
    dend_47 { pt3dadd( -79.0614, -191.183, -14.6827, 1.11 ) }
    dend_47 { pt3dadd( -79.1156, -191.443, -14.7746, 1.11 ) }
    dend_47 { pt3dadd( -79.3171, -192.204, -15.0182, 1.11 ) }
    dend_47 { pt3dadd( -79.579, -193.152, -15.2087, 1.11 ) }
    dend_47 { pt3dadd( -79.6559, -193.412, -15.2087, 1.11 ) }
    dend_47 { pt3dadd( -79.7574, -193.797, -15.2087, 1.11 ) }
    dend_47 { pt3dadd( -80.0864, -195.164, -15.2087, 1.11 ) }
    dend_47 { pt3dadd( -80.3737, -196.52, -15.2087, 1.11 ) }
    dend_47 { pt3dadd( -80.5299, -197.339, -15.2087, 1.11 ) }
    dend_47 { pt3dadd( -80.7101, -198.43, -15.2087, 1.11 ) }
    dend_47 { pt3dadd( -80.9712, -200.272, -15.2087, 1.11 ) }
    dend_47 { pt3dadd( -81.1129, -201.37, -15.2087, 1.11 ) }
    dend_47 { pt3dadd( -81.249, -202.192, -15.209, 1.11 ) }
    dend_47 { pt3dadd( -81.3688, -202.801, -15.2094, 1.11 ) }
    dend_47 { pt3dadd( -81.5162, -203.394, -15.2101, 1.11 ) }
    dend_47 { pt3dadd( -81.8406, -204.495, -15.2125, 1.11 ) }
    dend_47 { pt3dadd( -82.0708, -205.243, -15.2151, 1.11 ) }
    dend_47 { pt3dadd( -82.5512, -206.786, -15.2218, 1.11 ) }
    dend_47 { pt3dadd( -82.7853, -207.635, -15.2259, 1.11 ) }
    dend_47 { pt3dadd( -82.8393, -207.901, -15.2272, 1.11 ) }
    dend_47 { pt3dadd( -82.8768, -208.181, -15.2286, 1.11 ) }
    dend_47 { pt3dadd( -82.99, -209.281, -15.234, 1.11 ) }
    dend_47 { pt3dadd( -83.0087, -209.897, -15.2365, 1.11 ) }
    dend_47 { pt3dadd( -82.9783, -210.731, -15.2391, 1.11 ) }
    dend_47 { pt3dadd( -83.003, -211.346, -15.2405, 1.11 ) }
    dend_47 { pt3dadd( -83.1264, -212.218, -15.2415, 1.11 ) }
    dend_47 { pt3dadd( -83.2292, -212.762, -15.2415, 1.11 ) }
    dend_47 { pt3dadd( -83.3742, -213.365, -15.2415, 1.11 ) }
    dend_47 { pt3dadd( -83.5084, -213.9, -15.2194, 1.11 ) }
    dend_47 { pt3dadd( -83.8246, -215.237, -15.1217, 1.11 ) }
    dend_47 { pt3dadd( -84.1131, -216.44, -15.023, 1.11 ) }
    dend_47 { pt3dadd( -84.29, -217.295, -14.9424, 1.11 ) }
    dend_47 { pt3dadd( -84.29, -217.295, -14.9424, 1.11 ) }
    dend_47 { pt3dadd( -84.4605, -218.599, -14.778, 1.11 ) }
    dend_47 { pt3dadd( -84.5121, -219.142, -14.6905, 1.11 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 77/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -75.0148, -133.19, 1.717, 0.55 ) }
    dend_45 { pt3dadd( -75.1443, -131.232, 1.717, 0.55 ) }
    dend_45 { pt3dadd( -75.2262, -129.995, 1.717, 0.28 ) }
    dend_45 { pt3dadd( -75.2631, -129.437, 1.717, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 81/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -75.0148, -133.19, 1.717, 0.28 ) }
    dend_44 { pt3dadd( -77.493, -132.3, 0.312095, 0.28 ) }
    dend_44 { pt3dadd( -78.1566, -132.104, -0.456517, 0.55 ) }
    dend_44 { pt3dadd( -79.5129, -131.734, -1.90581, 0.28 ) }
    dend_44 { pt3dadd( -81.0776, -131.347, -3.62579, 0.83 ) }
    dend_44 { pt3dadd( -83.7836, -130.552, -6.76879, 0.28 ) }
    dend_44 { pt3dadd( -84.6984, -130.26, -7.94788, 0.83 ) }
    dend_44 { pt3dadd( -88.9091, -129.097, -13.6874, 0.28 ) }
    dend_44 { pt3dadd( -89.8205, -128.887, -15.143, 0.28 ) }
    dend_44 { pt3dadd( -90.5758, -128.738, -16.5542, 0.83 ) }
    dend_44 { pt3dadd( -91.6851, -128.519, -18.5665, 0.28 ) }
    dend_44 { pt3dadd( -93.3149, -128.199, -21.2343, 0.28 ) }
    dend_44 { pt3dadd( -94.2471, -128.047, -22.7417, 0.55 ) }
    dend_44 { pt3dadd( -98.2616, -127.58, -28.3919, 0.55 ) }
    dend_44 { pt3dadd( -99.9622, -127.452, -30.7563, 0.55 ) }
    dend_44 { pt3dadd( -104.254, -127.289, -36.5084, 0.83 ) }
    dend_44 { pt3dadd( -106.275, -127.296, -38.9355, 0.28 ) }
    dend_44 { pt3dadd( -111.372, -127.255, -44.6472, 0.28 ) }
    dend_44 { pt3dadd( -113.788, -127.119, -47.6563, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_44 { pt3dadd( -115.558, -126.986, -49.8696, 0.55 ) }
    dend_44 { pt3dadd( -117.418, -126.828, -52.3973, 0.55 ) }
    dend_44 { pt3dadd( -119.635, -126.662, -56.0098, 0.28 ) }
    dend_44 { pt3dadd( -120.936, -126.507, -58.4116, 0.55 ) }
    dend_44 { pt3dadd( -122.732, -125.916, -62.3175, 0.28 ) }
    dend_44 { pt3dadd( -122.963, -125.832, -62.8959, 0.28 ) }
    dend_44 { pt3dadd( -124.592, -124.987, -67.7507, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 7/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -251.694, 140.37, -15.8075, 0.28 ) }
    dend_35 { pt3dadd( -252.332, 142.785, -17.4894, 0.28 ) }
    dend_35 { pt3dadd( -252.434, 143.261, -17.8638, 0.55 ) }
    dend_35 { pt3dadd( -252.764, 145.016, -19.2886, 0.28 ) }
    dend_35 { pt3dadd( -253.095, 146.388, -20.5013, 0.28 ) }
    dend_35 { pt3dadd( -253.759, 148.666, -22.3583, 0.28 ) }
    dend_35 { pt3dadd( -255.034, 153.583, -27.0013, 0.28 ) }
    dend_35 { pt3dadd( -255.152, 154.051, -27.4712, 0.55 ) }
    dend_35 { pt3dadd( -255.618, 155.86, -29.3256, 0.28 ) }
    dend_35 { pt3dadd( -256.054, 157.424, -30.944, 0.28 ) }
    dend_35 { pt3dadd( -256.828, 159.937, -33.4395, 0.28 ) }
    dend_35 { pt3dadd( -258.712, 165.28, -38.3299, 0.28 ) }
    dend_35 { pt3dadd( -259.382, 166.768, -39.4892, 0.28 ) }
    dend_35 { pt3dadd( -260.339, 168.811, -40.9653, 0.28 ) }
    dend_35 { pt3dadd( -260.832, 169.848, -41.742, 0.55 ) }
    dend_35 { pt3dadd( -261.471, 171.152, -42.6412, 0.28 ) }
    dend_35 { pt3dadd( -263.75, 175.496, -45.7247, 0.28 ) }
    dend_35 { pt3dadd( -264.356, 176.675, -46.5445, 0.55 ) }
    dend_35 { pt3dadd( -265.001, 178.119, -47.6432, 0.28 ) }
    dend_35 { pt3dadd( -266.596, 181.889, -50.4364, 0.55 ) }
    dend_35 { pt3dadd( -267.573, 184.582, -52.1605, 0.28 ) }
    dend_35 { pt3dadd( -268.959, 188.697, -54.5441, 0.28 ) }
    dend_35 { pt3dadd( -272.115, 197.648, -58.9945, 0.28 ) }
    dend_35 { pt3dadd( -272.817, 199.448, -59.8428, 0.55 ) }
    dend_35 { pt3dadd( -273.806, 201.67, -60.7751, 0.28 ) }
    dend_35 { pt3dadd( -276.195, 206.618, -62.5597, 0.28 ) }
    dend_35 { pt3dadd( -277.39, 208.862, -63.2422, 0.28 ) }
    dend_35 { pt3dadd( -279.279, 211.882, -63.792, 0.28 ) }
    dend_35 { pt3dadd( -281.534, 215.042, -63.997, 0.28 ) }
    dend_35 { pt3dadd( -284.403, 218.782, -64.1923, 0.28 ) }
    dend_35 { pt3dadd( -285.484, 220.195, -64.2147, 0.83 ) }
    dend_35 { pt3dadd( -288.594, 224.524, -63.8987, 0.28 ) }
    dend_35 { pt3dadd( -289.048, 225.212, -63.7756, 0.28 ) }
    dend_35 { pt3dadd( -291.372, 229.023, -63.1207, 0.28 ) }
    dend_35 { pt3dadd( -291.86, 229.881, -62.9749, 0.83 ) }
    dend_35 { pt3dadd( -294.823, 235.261, -62.1919, 0.28 ) }
    dend_35 { pt3dadd( -298.579, 242.155, -61.3767, 0.28 ) }
    dend_35 { pt3dadd( -301.304, 247.37, -61.1905, 0.28 ) }
    dend_35 { pt3dadd( -303.634, 251.852, -61.2126, 0.55 ) }
    dend_35 { pt3dadd( -304.529, 253.575, -61.304, 0.28 ) }
    dend_35 { pt3dadd( -305.69, 255.782, -61.5468, 0.28 ) }
    dend_35 { pt3dadd( -306.169, 256.637, -61.7318, 0.55 ) }
    dend_35 { pt3dadd( -308.016, 259.903, -62.7201, 0.28 ) }
    dend_35 { pt3dadd( -309.234, 262.237, -63.4998, 0.28 ) }
    dend_35 { pt3dadd( -310.366, 264.384, -64.002, 0.28 ) }
    dend_35 { pt3dadd( -310.778, 265.235, -64.3062, 0.55 ) }
    dend_35 { pt3dadd( -311.262, 266.435, -64.8078, 0.28 ) }
    dend_35 { pt3dadd( -311.565, 267.207, -65.1006, 0.28 ) }
    dend_35 { pt3dadd( -312.609, 269.954, -66.0288, 0.28 ) }
    dend_35 { pt3dadd( -313.195, 271.547, -66.5672, 0.28 ) }
    dend_35 { pt3dadd( -315.343, 277.312, -68.322, 0.28 ) }
    dend_35 { pt3dadd( -316.054, 279.108, -68.9105, 0.55 ) }
    dend_35 { pt3dadd( -317.45, 282.586, -70.0739, 0.28 ) }
    dend_35 { pt3dadd( -318.075, 284.146, -70.6987, 0.28 ) }
    dend_35 { pt3dadd( -318.293, 284.678, -70.9284, 0.28 ) }
    dend_35 { pt3dadd( -318.806, 285.971, -71.5344, 0.55 ) }
    dend_35 { pt3dadd( -320.397, 290.091, -73.7153, 0.28 ) }
    dend_35 { pt3dadd( -321.163, 292.227, -75.1353, 0.28 ) }
    dend_35 { pt3dadd( -322.027, 295.072, -77.2552, 0.55 ) }
    dend_35 { pt3dadd( -322.504, 296.626, -78.3444, 0.28 ) }
    dend_35 { pt3dadd( -322.794, 297.556, -78.9389, 0.28 ) }
    dend_35 { pt3dadd( -323.378, 299.394, -80.0333, 0.55 ) }
    dend_35 { pt3dadd( -324.122, 301.179, -80.8827, 0.28 ) }
    dend_35 { pt3dadd( -325.35, 303.467, -81.921, 0.28 ) }
    dend_35 { pt3dadd( -326.591, 305.441, -82.8751, 0.28 ) }
    dend_35 { pt3dadd( -327.662, 307.013, -83.6996, 0.28 ) }
    dend_35 { pt3dadd( -328.272, 307.86, -84.15, 0.55 ) }
    dend_35 { pt3dadd( -331.833, 312.557, -86.6489, 0.28 ) }
    dend_35 { pt3dadd( -334.498, 315.909, -88.5601, 0.28 ) }
    dend_35 { pt3dadd( -336.888, 318.773, -90.3453, 0.28 ) }
    dend_35 { pt3dadd( -337.76, 319.843, -91.0869, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 78/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -251.694, 140.37, -15.8075, 0.55 ) }
    dend_32 { pt3dadd( -250.024, 142.393, -17.1898, 0.55 ) }
    dend_32 { pt3dadd( -249.443, 143.069, -17.6367, 0.83 ) }
    dend_32 { pt3dadd( -248.17, 144.493, -18.7598, 0.28 ) }
    dend_32 { pt3dadd( -246.738, 146.094, -20.0222, 0.28 ) }
    dend_32 { pt3dadd( -244.645, 148.434, -21.8675, 0.28 ) }
    dend_32 { pt3dadd( -243.49, 149.725, -22.8861, 0.28 ) }
    dend_32 { pt3dadd( -241.869, 151.451, -24.1868, 0.28 ) }
    dend_32 { pt3dadd( -240.134, 153.307, -25.6361, 0.28 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 87/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -297.501, -277.999, 75.6726, 1.11 ) }
    dend_30 { pt3dadd( -297.146, -280.982, 77.4917, 1.11 ) }
    dend_30 { pt3dadd( -296.966, -282.226, 78.0803, 1.11 ) }
    dend_30 { pt3dadd( -296.625, -284.27, 78.8504, 1.11 ) }
    dend_30 { pt3dadd( -295.703, -288.757, 80.9093, 1.11 ) }
    dend_30 { pt3dadd( -295.003, -291.775, 82.3698, 0.83 ) }
    dend_30 { pt3dadd( -294.325, -294.698, 83.7844, 1.11 ) }
    dend_30 { pt3dadd( -293.733, -297.398, 84.9696, 1.11 ) }
    dend_30 { pt3dadd( -293.289, -299.273, 85.8151, 1.11 ) }
    dend_30 { pt3dadd( -291.744, -305.054, 88.4017, 0.83 ) }
    dend_30 { pt3dadd( -291.248, -306.633, 88.9846, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 98/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -297.501, -277.999, 75.6726, 1.11 ) }
    dend_29 { pt3dadd( -299.31, -280.386, 76.7366, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_29 { pt3dadd( -300.409, -281.804, 77.9413, 1.11 ) }
    dend_29 { pt3dadd( -302.043, -283.681, 79.7879, 1.11 ) }
    dend_29 { pt3dadd( -303.168, -284.858, 80.943, 1.11 ) }
    dend_29 { pt3dadd( -304.269, -285.905, 82.4835, 1.11 ) }
    dend_29 { pt3dadd( -305.204, -286.788, 83.9592, 1.11 ) }
    dend_29 { pt3dadd( -308.851, -289.929, 89.9306, 1.11 ) }
    dend_29 { pt3dadd( -310.032, -290.784, 92.0321, 1.11 ) }
    dend_29 { pt3dadd( -311.368, -291.575, 94.431, 1.11 ) }
    dend_29 { pt3dadd( -316.844, -294.148, 103.867, 1.11 ) }
    dend_29 { pt3dadd( -317.252, -294.295, 104.519, 1.11 ) }
    dend_29 { pt3dadd( -318.897, -294.712, 106.73, 1.11 ) }
    dend_29 { pt3dadd( -322.938, -295.461, 111.449, 1.11 ) }
    dend_29 { pt3dadd( -324.098, -295.64, 112.749, 1.11 ) }
    dend_29 { pt3dadd( -325.907, -295.915, 114.521, 1.11 ) }
    dend_29 { pt3dadd( -327.021, -296.129, 115.319, 1.11 ) }
    dend_29 { pt3dadd( -330.747, -297.152, 117.865, 1.11 ) }
    dend_29 { pt3dadd( -334.445, -298.65, 120.337, 1.11 ) }
    dend_29 { pt3dadd( -335.537, -299.205, 120.985, 1.11 ) }
    dend_29 { pt3dadd( -337.189, -300.241, 122.075, 1.11 ) }
    dend_29 { pt3dadd( -338.197, -301.047, 122.816, 1.11 ) }
    dend_29 { pt3dadd( -340.159, -303.039, 124.276, 1.11 ) }
    dend_29 { pt3dadd( -340.74, -303.982, 124.579, 1.11 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 22/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -9.64851, -189.884, 10.7637, 0.55 ) }
    dend_64 { pt3dadd( -9.94903, -194.189, 8.87255, 0.55 ) }
    dend_64 { pt3dadd( -10.0951, -197.752, 6.92472, 1.38 ) }
    dend_64 { pt3dadd( -10.2348, -201.665, 4.72548, 0.55 ) }
    dend_64 { pt3dadd( -10.309, -203.363, 3.75785, 0.55 ) }
    dend_64 { pt3dadd( -10.5001, -207.25, 1.62616, 0.55 ) }
    dend_64 { pt3dadd( -10.5852, -208.86, 0.742102, 1.11 ) }
    dend_64 { pt3dadd( -10.651, -211.621, -0.774993, 0.55 ) }
    dend_64 { pt3dadd( -10.6915, -213.059, -1.59732, 0.55 ) }
    dend_64 { pt3dadd( -10.7699, -214.171, -2.24529, 1.11 ) }
    dend_64 { pt3dadd( -11.0117, -216.132, -3.28948, 0.55 ) }
    dend_64 { pt3dadd( -11.1029, -216.964, -3.66155, 0.83 ) }
    dend_64 { pt3dadd( -11.3394, -219.447, -4.5524, 0.83 ) }
    dend_64 { pt3dadd( -11.568, -222.657, -5.53571, 0.83 ) }
    dend_64 { pt3dadd( -11.7139, -227.091, -6.56026, 0.55 ) }
    dend_64 { pt3dadd( -11.7249, -228.363, -6.84111, 0.83 ) }
    dend_64 { pt3dadd( -11.6468, -231.072, -7.47992, 0.55 ) }
    dend_64 { pt3dadd( -11.4433, -234.633, -8.40559, 1.11 ) }
    dend_64 { pt3dadd( -11.102, -238.293, -9.38493, 0.55 ) }
    dend_64 { pt3dadd( -10.731, -240.894, -10.0192, 1.11 ) }
    dend_64 { pt3dadd( -10.0081, -245.229, -10.8692, 0.28 ) }
    dend_64 { pt3dadd( -9.64664, -247.455, -11.5432, 0.83 ) }
    dend_64 { pt3dadd( -9.27224, -249.742, -12.4959, 0.55 ) }
    dend_64 { pt3dadd( -9.01055, -251.101, -13.2224, 0.55 ) }
    dend_64 { pt3dadd( -8.94914, -251.357, -13.3613, 1.11 ) }
    dend_64 { pt3dadd( -8.51696, -253.016, -14.3151, 0.28 ) }
    dend_64 { pt3dadd( -7.80529, -255.409, -15.2662, 0.83 ) }
    dend_64 { pt3dadd( -7.1844, -257.508, -15.7842, 0.28 ) }
    dend_64 { pt3dadd( -6.52772, -259.526, -15.9543, 1.11 ) }
    dend_64 { pt3dadd( -6.02561, -261.022, -15.6177, 0.55 ) }
    dend_64 { pt3dadd( -5.58042, -262.264, -15.1057, 1.11 ) }
    dend_64 { pt3dadd( -4.64102, -264.608, -13.6245, 0.28 ) }
    dend_64 { pt3dadd( -3.79177, -266.696, -11.9678, 0.83 ) }
    dend_64 { pt3dadd( -3.23486, -268.086, -10.6527, 0.28 ) }
    dend_64 { pt3dadd( -1.89279, -271.218, -7.16674, 1.11 ) }
    dend_64 { pt3dadd( -1.1246, -272.92, -5.05857, 0.55 ) }
    dend_64 { pt3dadd( -0.947382, -273.285, -4.58071, 0.55 ) }
    dend_64 { pt3dadd( -0.56855, -274.003, -3.77627, 0.28 ) }
    dend_64 { pt3dadd( -0.083884, -274.93, -3.00187, 0.55 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 61/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -9.64851, -189.884, 10.7637, 0.55 ) }
    dend_63 { pt3dadd( -7.37081, -192.246, 0.956296, 0.55 ) }
    dend_63 { pt3dadd( -7.19437, -192.443, 0.176135, 0.83 ) }
    dend_63 { pt3dadd( -6.20042, -193.562, -4.2512, 0.28 ) }
    dend_63 { pt3dadd( -6.0341, -193.763, -4.98879, 0.83 ) }
    dend_63 { pt3dadd( -4.81126, -195.387, -10.5383, 0.28 ) }
    dend_63 { pt3dadd( -4.59611, -195.705, -11.6141, 1.11 ) }
    dend_63 { pt3dadd( -3.2486, -198.009, -18.6063, 0.55 ) }
    dend_63 { pt3dadd( -3.07796, -198.341, -19.6152, 1.11 ) }
    dend_63 { pt3dadd( -2.79722, -198.952, -21.3289, 0.28 ) }
    dend_63 { pt3dadd( -2.02551, -200.57, -25.6797, 1.11 ) }
    dend_63 { pt3dadd( -0.774724, -203.14, -32.2102, 0.28 ) }
    dend_63 { pt3dadd( -0.645795, -203.378, -32.7779, 1.38 ) }
    dend_63 { pt3dadd( 0.637622, -205.614, -37.4778, 0.28 ) }
    dend_63 { pt3dadd( 1.31749, -206.673, -39.491, 1.11 ) }
    dend_63 { pt3dadd( 2.96352, -209.025, -43.5903, 0.28 ) }
    dend_63 { pt3dadd( 3.63881, -209.956, -44.8379, 1.11 ) }
    dend_63 { pt3dadd( 4.77389, -211.525, -46.5005, 0.28 ) }
    dend_63 { pt3dadd( 5.81299, -212.952, -47.9555, 1.38 ) }
    dend_63 { pt3dadd( 8.96024, -217.286, -51.9828, 0.28 ) }
    dend_63 { pt3dadd( 9.92181, -218.662, -53.2472, 1.11 ) }
    dend_63 { pt3dadd( 12.2746, -222.129, -55.9588, 0.28 ) }
    dend_63 { pt3dadd( 12.8649, -223.007, -56.6123, 1.38 ) }
    // Section: dend_57, id: dend_57, parent: dend_47 (entry count 84/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -84.5121, -219.142, -14.6905, 1.11 ) }
    dend_57 { pt3dadd( -83.9521, -220.482, -14.6905, 1.11 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 86/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -84.5121, -219.142, -14.6905, 1.11 ) }
    dend_48 { pt3dadd( -85.7382, -221.152, -12.1546, 1.11 ) }
    dend_48 { pt3dadd( -86.1339, -221.801, -11.3364, 1.11 ) }
    dend_48 { pt3dadd( -86.623, -222.602, -10.3247, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 90/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -240.134, 153.307, -25.6361, 0.28 ) }
    dend_34 { pt3dadd( -239.222, 154.667, -27.4285, 0.28 ) }
    dend_34 { pt3dadd( -238.369, 156.032, -29.3943, 0.55 ) }
    dend_34 { pt3dadd( -237.854, 156.667, -30.554, 0.28 ) }
    dend_34 { pt3dadd( -236.979, 157.703, -32.6505, 0.83 ) }
    dend_34 { pt3dadd( -235.562, 159.31, -35.9224, 0.28 ) }
    dend_34 { pt3dadd( -235.001, 159.958, -37.3675, 0.28 ) }
    dend_34 { pt3dadd( -233.646, 161.627, -41.3151, 0.55 ) }
    dend_34 { pt3dadd( -232.378, 163.153, -44.9827, 0.28 ) }
    dend_34 { pt3dadd( -230.923, 164.787, -49.1517, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_34 { pt3dadd( -230.453, 165.207, -50.5968, 0.28 ) }
    dend_34 { pt3dadd( -228.396, 166.694, -57.3804, 0.28 ) }
    dend_34 { pt3dadd( -228.117, 166.83, -58.3301, 0.83 ) }
    dend_34 { pt3dadd( -227.656, 166.976, -59.929, 0.28 ) }
    dend_34 { pt3dadd( -227.438, 167.031, -60.7319, 0.55 ) }
    dend_34 { pt3dadd( -224.179, 167.148, -72.7278, 0.28 ) }
    dend_34 { pt3dadd( -224.014, 167.13, -73.3523, 0.55 ) }
    dend_34 { pt3dadd( -222.369, 166.666, -79.0601, 0.28 ) }
    dend_34 { pt3dadd( -222.087, 166.563, -80.0816, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 9/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -240.134, 153.307, -25.6361, 0.55 ) }
    dend_33 { pt3dadd( -236.647, 151.846, -22.8363, 0.55 ) }
    dend_33 { pt3dadd( -235.412, 151.328, -21.844, 0.55 ) }
    dend_33 { pt3dadd( -234.644, 151.006, -21.2277, 0.55 ) }
    dend_33 { pt3dadd( -233.122, 150.368, -20.005, 0.28 ) }
    dend_33 { pt3dadd( -230.989, 149.474, -18.2928, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_48 (entry count 15/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -86.623, -222.602, -10.3247, 1.11 ) }
    dend_56 { pt3dadd( -88.473, -222.242, -9.28479, 1.11 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -86.623, -222.602, -10.3247, 1.11 ) }
    dend_49 { pt3dadd( -86.7866, -223.133, -10.4281, 1.11 ) }
    dend_49 { pt3dadd( -87.2504, -224.856, -10.9064, 1.11 ) }
    dend_49 { pt3dadd( -87.4913, -225.662, -11.1551, 1.11 ) }
    dend_49 { pt3dadd( -87.777, -226.455, -11.4119, 1.11 ) }
    dend_49 { pt3dadd( -88.2542, -227.689, -11.8125, 1.11 ) }
    dend_49 { pt3dadd( -88.9947, -229.542, -12.348, 1.11 ) }
    dend_49 { pt3dadd( -89.5677, -230.866, -12.7371, 1.11 ) }
    dend_49 { pt3dadd( -89.942, -231.653, -12.837, 1.11 ) }
    dend_49 { pt3dadd( -90.2816, -232.407, -12.7271, 1.11 ) }
    dend_49 { pt3dadd( -90.4315, -232.903, -12.5083, 1.11 ) }
    dend_49 { pt3dadd( -90.7346, -234.625, -11.3322, 1.11 ) }
    dend_49 { pt3dadd( -90.7562, -234.837, -11.1639, 1.11 ) }
    dend_49 { pt3dadd( -90.879, -237.82, -8.59255, 1.11 ) }
    dend_49 { pt3dadd( -90.8631, -238.805, -7.83615, 1.11 ) }
    dend_49 { pt3dadd( -90.8285, -239.774, -7.15489, 1.11 ) }
    dend_49 { pt3dadd( -90.839, -240.015, -7.01008, 1.11 ) }
    dend_49 { pt3dadd( -90.9375, -240.822, -6.69829, 1.11 ) }
    dend_49 { pt3dadd( -91.026, -241.2, -6.64995, 1.11 ) }
    dend_49 { pt3dadd( -91.6919, -243.093, -6.7433, 1.11 ) }
    dend_49 { pt3dadd( -91.8096, -243.348, -6.75431, 1.11 ) }
    dend_49 { pt3dadd( -92.4363, -244.569, -6.80032, 1.11 ) }
    dend_49 { pt3dadd( -92.9397, -245.564, -6.83396, 1.11 ) }
    dend_49 { pt3dadd( -93.5045, -246.669, -6.8664, 1.11 ) }
    dend_49 { pt3dadd( -94.1235, -247.903, -6.8935, 1.11 ) }
    dend_49 { pt3dadd( -94.1235, -247.903, -6.8935, 1.11 ) }
    dend_49 { pt3dadd( -94.224, -248.166, -6.89565, 1.11 ) }
    dend_49 { pt3dadd( -94.5081, -248.999, -6.90047, 1.11 ) }
    dend_49 { pt3dadd( -94.59, -249.258, -6.90116, 1.11 ) }
    dend_49 { pt3dadd( -94.6725, -249.528, -6.90116, 1.11 ) }
    dend_49 { pt3dadd( -94.9366, -250.358, -6.90116, 1.11 ) }
    dend_49 { pt3dadd( -95.3222, -251.537, -6.90116, 1.11 ) }
    dend_49 { pt3dadd( -95.7956, -253.081, -6.90116, 1.11 ) }
    dend_49 { pt3dadd( -96.2698, -254.696, -6.90116, 1.11 ) }
    dend_49 { pt3dadd( -96.4127, -255.231, -6.90116, 1.11 ) }
    dend_49 { pt3dadd( -96.7427, -256.576, -6.90116, 1.11 ) }
    dend_49 { pt3dadd( -97.0957, -258.223, -6.90116, 1.11 ) }
    dend_49 { pt3dadd( -97.2275, -258.992, -6.856, 1.11 ) }
    dend_49 { pt3dadd( -97.3169, -259.602, -6.78007, 1.11 ) }
    dend_49 { pt3dadd( -97.5271, -260.669, -6.58444, 1.11 ) }
    dend_49 { pt3dadd( -97.6869, -261.255, -6.45684, 1.11 ) }
    dend_49 { pt3dadd( -98.2907, -262.856, -6.08417, 1.11 ) }
    dend_49 { pt3dadd( -99.0538, -264.549, -5.72811, 1.11 ) }
    dend_49 { pt3dadd( -99.6381, -265.792, -5.50616, 1.11 ) }
    dend_49 { pt3dadd( -100.339, -267.218, -5.25855, 1.11 ) }
    dend_49 { pt3dadd( -100.974, -268.436, -5.0628, 1.11 ) }
    dend_49 { pt3dadd( -101.961, -270.292, -4.8201, 1.11 ) }
    dend_49 { pt3dadd( -102.915, -272.057, -4.69141, 1.11 ) }
    dend_49 { pt3dadd( -103.44, -273.071, -4.70003, 1.11 ) }
    // Section: dend_55, id: dend_55, parent: dend_49 (entry count 66/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -103.44, -273.071, -4.70003, 1.11 ) }
    dend_55 { pt3dadd( -105.479, -272.171, -1.79003, 1.11 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 68/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -103.44, -273.071, -4.70003, 1.11 ) }
    dend_50 { pt3dadd( -104.796, -273.831, -4.13277, 1.11 ) }
    dend_50 { pt3dadd( -105.301, -274.114, -3.92169, 1.11 ) }
    dend_50 { pt3dadd( -105.805, -274.396, -3.71061, 1.11 ) }
    dend_50 { pt3dadd( -106.267, -274.655, -3.51759, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_50 (entry count 73/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -106.267, -274.655, -3.51759, 1.11 ) }
    dend_54 { pt3dadd( -107.227, -273.355, -4.53759, 1.11 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 75/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -106.267, -274.655, -3.51759, 1.11 ) }
    dend_51 { pt3dadd( -107.976, -276.648, -4.73462, 1.11 ) }
    dend_51 { pt3dadd( -108.977, -277.78, -5.3015, 1.11 ) }
    dend_51 { pt3dadd( -109.51, -278.443, -5.59184, 1.11 ) }
    dend_51 { pt3dadd( -110.309, -279.549, -5.96599, 1.11 ) }
    dend_51 { pt3dadd( -110.636, -280.057, -6.10893, 1.11 ) }
    dend_51 { pt3dadd( -110.933, -280.591, -6.23852, 1.11 ) }
    dend_51 { pt3dadd( -111.472, -281.858, -6.32936, 1.11 ) }
    dend_51 { pt3dadd( -111.756, -282.814, -6.36247, 1.11 ) }
    dend_51 { pt3dadd( -112.18, -284.535, -6.34924, 1.11 ) }
    dend_51 { pt3dadd( -112.26, -285.145, -6.34499, 1.11 ) }
    dend_51 { pt3dadd( -112.318, -285.932, -6.34053, 1.11 ) }
    dend_51 { pt3dadd( -112.318, -285.932, -6.34053, 1.11 ) }
    dend_51 { pt3dadd( -112.188, -286.702, -6.34053, 1.11 ) }
    dend_51 { pt3dadd( -112.096, -287.09, -6.34053, 1.11 ) }
    dend_51 { pt3dadd( -111.837, -287.653, -6.34053, 1.11 ) }
    dend_51 { pt3dadd( -111.591, -288.224, -6.34053, 1.11 ) }
    dend_51 { pt3dadd( -111.486, -288.484, -6.34053, 1.11 ) }
    dend_51 { pt3dadd( -111.155, -289.286, -6.34053, 1.11 ) }
    dend_51 { pt3dadd( -110.932, -289.792, -6.34053, 1.11 ) }
    dend_51 { pt3dadd( -110.838, -290.047, -6.34053, 1.11 ) }
    dend_51 { pt3dadd( -110.482, -291.387, -6.34053, 1.11 ) }
    dend_51 { pt3dadd( -110.389, -291.933, -6.34053, 1.11 ) }
    dend_51 { pt3dadd( -110.38, -292.214, -6.34053, 1.11 ) }
    dend_51 { pt3dadd( -110.572, -293.691, -6.34053, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_51 { pt3dadd( -110.727, -294.458, -6.34053, 1.11 ) }
    dend_51 { pt3dadd( -110.817, -294.838, -6.34053, 1.11 ) }
    dend_51 { pt3dadd( -111.166, -296.211, -6.34053, 1.11 ) }
    dend_51 { pt3dadd( -111.538, -297.73, -6.34053, 1.11 ) }
    dend_51 { pt3dadd( -111.828, -299.061, -6.5611, 1.11 ) }
    dend_51 { pt3dadd( -112.263, -301.15, -7.17581, 1.11 ) }
    dend_51 { pt3dadd( -112.439, -302.209, -7.56425, 1.11 ) }
    dend_51 { pt3dadd( -112.606, -303.219, -7.97973, 1.11 ) }
    dend_51 { pt3dadd( -112.756, -304.23, -8.40214, 1.11 ) }
    dend_51 { pt3dadd( -113.362, -308.71, -10.2167, 1.11 ) }
    dend_51 { pt3dadd( -113.511, -309.628, -10.5663, 1.11 ) }
    dend_51 { pt3dadd( -114.021, -311.987, -11.4125, 1.11 ) }
    dend_51 { pt3dadd( -114.347, -313.269, -11.8299, 1.11 ) }
    dend_51 { pt3dadd( -115.5, -317.209, -12.8986, 1.11 ) }
    dend_51 { pt3dadd( -115.976, -318.593, -13.1631, 1.11 ) }
    dend_51 { pt3dadd( -116.788, -320.613, -13.3221, 1.11 ) }
    dend_51 { pt3dadd( -117.198, -321.521, -13.3923, 1.11 ) }
    dend_51 { pt3dadd( -117.329, -321.759, -13.4098, 1.11 ) }
    dend_51 { pt3dadd( -118.146, -322.999, -13.4852, 1.11 ) }
    dend_51 { pt3dadd( -119.336, -324.324, -13.5263, 1.11 ) }
    dend_51 { pt3dadd( -119.958, -324.944, -13.5396, 1.11 ) }
    dend_51 { pt3dadd( -121.122, -325.986, -13.1486, 1.11 ) }
    dend_51 { pt3dadd( -121.95, -326.707, -12.8142, 1.11 ) }
    dend_51 { pt3dadd( -122.544, -327.201, -12.5267, 1.11 ) }
    dend_51 { pt3dadd( -122.991, -327.528, -12.2385, 1.11 ) }
    dend_51 { pt3dadd( -123.501, -327.879, -11.7601, 1.11 ) }
    dend_51 { pt3dadd( -126.995, -330.209, -7.34762, 1.11 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 27/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -126.995, -330.209, -7.34762, 1.11 ) }
    dend_53 { pt3dadd( -128.375, -330.349, -4.27762, 1.11 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 29/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -126.995, -330.209, -7.34762, 1.11 ) }
    dend_52 { pt3dadd( -126.953, -332.274, -4.96117, 1.11 ) }
    dend_52 { pt3dadd( -126.93, -334.301, -2.82985, 1.11 ) }
    dend_52 { pt3dadd( -127.206, -341.391, 3.85182, 1.11 ) }
    dend_52 { pt3dadd( -127.326, -342.52, 4.81656, 1.11 ) }
    dend_52 { pt3dadd( -127.438, -343.214, 5.34044, 1.11 ) }
    dend_52 { pt3dadd( -127.579, -344.091, 6.00135, 1.11 ) }
    dend_52 { pt3dadd( -127.785, -345.339, 7.00543, 1.11 ) }
    dend_52 { pt3dadd( -128.2, -347.546, 8.53686, 1.11 ) }
    dend_52 { pt3dadd( -128.927, -349.243, 8.76965, 1.11 ) }
    dend_52 { pt3dadd( -130.043, -351.317, 9.09281, 1.11 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_0, dend_71, dend_24, dend_4, dend_1, dend_73, dend_72, dend_40, dend_25, dend_16, dend_5, dend_3, dend_2, dend_66, dend_41, dend_37, dend_26, dend_18, dend_17, dend_11, dend_6, dend_68, dend_67, dend_59, dend_42, dend_39, dend_38, dend_36, dend_27, dend_20, dend_19, dend_13, dend_12, dend_8, dend_7, dend_70, dend_69, dend_65, dend_60, dend_46, dend_43, dend_31, dend_28, dend_22, dend_21, dend_15, dend_14, dend_10, dend_9, dend_62, dend_61, dend_58, dend_47, dend_45, dend_44, dend_35, dend_32, dend_30, dend_29, dend_64, dend_63, dend_57, dend_48, dend_34, dend_33, dend_56, dend_49, dend_55, dend_50, dend_54, dend_51, dend_53, dend_52]}
    ModelViewParmSubset_2 = new SectionList()
    dend_23 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_0, dend_71, dend_24, dend_4, dend_1, dend_73, dend_72, dend_40, dend_25, dend_16, dend_5, dend_3, dend_2, dend_66, dend_41, dend_37, dend_26, dend_18, dend_17, dend_11, dend_6, dend_68, dend_67, dend_59, dend_42, dend_39, dend_38, dend_36, dend_27, dend_20, dend_19, dend_13, dend_12, dend_8, dend_7, dend_70, dend_69, dend_65, dend_60, dend_46, dend_43, dend_31, dend_28, dend_22, dend_21, dend_15, dend_14, dend_10, dend_9, dend_62, dend_61, dend_58, dend_47, dend_45, dend_44, dend_35, dend_32, dend_30, dend_29, dend_64, dend_63, dend_57, dend_48, dend_34, dend_33, dend_56, dend_49, dend_55, dend_50, dend_54, dend_51, dend_53, dend_52]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_71 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_73 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_66 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_17 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_67 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_42 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_38 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_36 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_27 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_19 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_12 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_69 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_60 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_43 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_31 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_28 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_15 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_10 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_9 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_61 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_58 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_47 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_44 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_35 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_29 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_64 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_63 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_34 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_49 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_51 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_4 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_23 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_5 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_16 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_18 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_20 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_22 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_6 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_7 OneSecGrp_SectionRef_39.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_21 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_24 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_40 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_11 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_25 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_41 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_13 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_59 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_14 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_65 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_26 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_68 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_70 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_46 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_45 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_39 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_62 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_57 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_48 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_56 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_50 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_55 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_54 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_72 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_53 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_52 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_30 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_32 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_33 OneSecGrp_SectionRef_69.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_23, dend_0, axon_0, axon_0, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_40, dend_40, dend_40, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_59, dend_59, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_7, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_65, dend_65, dend_65, dend_65, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_57, dend_48, dend_48, dend_48, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_56, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_55, dend_50, dend_50, dend_50, dend_50, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_7 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_57 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_56 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_49 all.append()
    dend_55 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_71 nseg = 15
    dend_1 nseg = 5
    dend_73 nseg = 3
    dend_3 nseg = 9
    dend_2 nseg = 5
    dend_66 nseg = 3
    dend_37 nseg = 5
    dend_17 nseg = 9
    dend_67 nseg = 7
    dend_42 nseg = 3
    dend_38 nseg = 5
    dend_36 nseg = 5
    dend_27 nseg = 3
    dend_19 nseg = 9
    dend_12 nseg = 11
    dend_69 nseg = 3
    dend_60 nseg = 5
    dend_43 nseg = 3
    dend_31 nseg = 17
    dend_28 nseg = 15
    dend_15 nseg = 7
    dend_10 nseg = 11
    dend_9 nseg = 7
    dend_61 nseg = 3
    dend_58 nseg = 5
    dend_47 nseg = 3
    dend_44 nseg = 5
    dend_35 nseg = 11
    dend_29 nseg = 3
    dend_64 nseg = 5
    dend_63 nseg = 5
    dend_34 nseg = 3
    dend_49 nseg = 3
    dend_51 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_MC_2eb83e1eed_0_0


