// Cell: bNAC219_L1_SLAC_d22d584760_0_0
/*
{
  "id" : "bNAC219_L1_SLAC_d22d584760_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-9.39632, -3.96587, 0.0, 1.74986", "-8.42207, -3.6396, 0.0, 3.17966", "-7.44781, -3.31332, 0.0, 5.02405", "-6.47356, -2.98705, 0.0, 6.48048", "-5.49931, -2.66077, 0.0, 7.83461", "-4.52506, -2.3345, 0.0, 9.24415", "-3.55081, -2.00822, 0.0, 9.9604", "-2.57655, -1.68194, 0.0, 11.044", "-1.6023, -1.35567, 0.0, 11.9021", "-0.628051, -1.02939, 0.0, 12.3025", "0.346201, -0.703117, 0.0, 12.7109", "1.32045, -0.376841, 0.0, 12.6912", "2.2947, -0.0505657, 0.0, 12.1867", "3.26896, 0.27571, 0.0, 11.6828", "4.24321, 0.601986, 0.0, 11.1774", "5.21746, 0.928261, 0.0, 10.319", "6.19171, 1.25454, 0.0, 9.00686", "7.16596, 1.58081, 0.0, 7.63456", "8.14022, 1.90709, 0.0, 6.27045", "9.11447, 2.23336, 0.0, 4.49667", "10.0887, 2.55964, 0.0, 2.60875" ]
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "10.244, 1.95355, 3.07, 2.09", "11.0755, 4.40685, 4.42511, 1.48", "11.5381, 5.77156, 5.17893, 1.48", "12.4154, 8.3597, 6.60852, 1.48", "13.189, 10.642, 7.86923, 1.48", "13.8535, 12.6024, 8.95205, 1.11", "14.9432, 15.8172, 10.7278, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000046918597253
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "10.244, -0.762703, -1.13, 1.72", "12.4928, -1.95766, 0.0821983, 1.72", "14.1223, -2.82354, 0.960568, 1.72", "17.6778, -4.71281, 2.87709, 1.72", "19.0995, -5.46825, 3.64343, 1.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000046918597253
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.74599, 6.36105, -6.8, 2.58", "-3.37599, 8.2163, -7.0, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000046918597253
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.56599, -4.9447, -5.2, 1.23", "-2.90388, -7.01096, -6.61443, 1.23", "-2.98659, -8.89176, -7.85484, 0.98", "-2.97022, -9.10451, -7.99359, 0.98", "-2.58482, -11.9805, -9.85364, 0.98", "-2.00505, -15.1654, -11.8644, 0.98", "-1.40538, -17.6661, -13.3178, 0.74", "-0.805413, -19.3443, -14.263, 0.74", "0.14884, -21.4817, -15.3913, 0.74", "0.177774, -21.5395, -15.421, 0.74", "1.09762, -23.1573, -16.2159, 0.74", "2.33875, -25.2467, -17.2841, 0.74", "2.39049, -25.3445, -17.3352, 0.74", "3.6598, -28.2434, -18.8604, 0.74", "4.69674, -30.9385, -20.2148, 0.74", "5.32746, -32.6897, -21.0791, 0.74", "5.36408, -32.8044, -21.1343, 0.74", "5.96853, -34.9817, -22.1673, 0.61", "6.31224, -36.3345, -22.7217, 0.61", "6.6245, -37.7086, -23.1466, 0.61", "7.00674, -39.5903, -23.583, 0.61", "7.31748, -41.214, -23.9056, 0.61", "7.32976, -41.2733, -23.9162, 0.61", "7.61646, -42.5002, -24.1171, 0.61", "7.69018, -42.767, -24.1545, 0.61", "8.04085, -43.8236, -24.2682, 0.61", "8.28125, -44.4031, -24.3568, 0.61", "8.95245, -46.0127, -24.7606, 0.61", "8.99111, -46.1229, -24.7974, 0.61", "9.64628, -48.4665, -25.6794, 0.61", "9.96394, -50.1024, -26.3314, 0.61", "10.3827, -53.3229, -27.7102, 0.61", "10.4543, -55.5069, -28.7103, 0.61", "10.2953, -57.9112, -29.8873, 0.61", "9.99524, -59.2867, -30.5811, 0.61", "9.40354, -60.6343, -31.2996, 0.61", "9.25025, -60.8315, -31.4109, 0.61", "7.5298, -62.1962, -32.2002, 0.61", "7.47938, -62.2217, -32.2212, 0.61", "5.06451, -62.9169, -33.2817, 0.61", "5.0023, -62.9282, -33.3118, 0.61", "2.80947, -63.141, -34.3626, 0.61", "2.74633, -63.1448, -34.3926, 0.61", "0.239347, -63.1682, -35.5195, 0.61", "-1.21117, -63.2452, -36.1317, 0.61", "-1.32183, -63.2547, -36.1783, 0.61", "-3.7486, -63.5562, -37.0779, 0.61", "-3.81456, -63.5666, -37.099, 0.61", "-6.27319, -64.0129, -37.7987, 0.61", "-8.6909, -64.536, -38.3763, 0.61", "-8.94726, -64.5982, -38.4354, 0.61", "-10.9899, -65.1229, -38.8787, 0.61", "-11.0467, -65.1383, -38.8904, 0.61", "-12.6718, -65.5694, -39.2161, 0.61", "-12.9403, -65.6389, -39.269, 0.61", "-16.7308, -66.4003, -39.9656, 0.61", "-18.583, -66.7602, -40.2866, 0.61", "-19.19, -66.8707, -40.3871, 0.61", "-21.2212, -67.2308, -40.7128, 0.61", "-21.4964, -67.2766, -40.7549, 0.61", "-23.4998, -67.5685, -41.0702, 0.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000046918597253,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-5.08599, -6.0312, 6.73, 1.72", "-5.66599, -7.6302, 6.73, 1.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000046918597253
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "10.0887, 2.55964, 0.0, 2.09", "24.3123, 7.32309, 0.0, 2.09", "38.5358, 12.0865, 0.0, 2.09" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "19.0995, -5.46825, 3.64343, 1.11", "21.9566, -5.34078, 4.85983, 1.11", "23.8564, -5.25601, 5.66869, 1.23" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "19.0995, -5.46825, 3.64343, 1.23", "20.4392, -7.62191, 3.59388, 1.23", "21.4929, -9.3974, 3.55924, 1.23", "22.7062, -11.6614, 3.42808, 1.23", "23.7002, -13.5506, 3.28381, 1.23", "24.523, -15.1233, 3.14992, 1.23", "25.1989, -16.4855, 3.03179, 1.23", "25.9381, -18.0124, 2.88174, 1.23", "26.8081, -20.0126, 2.68208, 1.23", "27.1653, -20.8891, 2.59921, 1.23", "27.753, -22.3131, 2.54555, 1.23", "28.5123, -24.1763, 2.53602, 1.23", "29.4668, -26.4734, 2.5922, 1.23", "30.26, -28.3366, 2.68925, 1.23", "31.117, -30.2884, 2.84788, 1.23", "32.159, -32.6274, 3.04402, 1.23", "32.8781, -34.1533, 3.17654, 1.23", "33.4118, -35.2049, 3.28265, 1.23", "34.3433, -36.9885, 3.47109, 1.23", "35.1355, -38.3898, 3.55384, 1.23", "35.8905, -39.6835, 3.56721, 1.23", "36.7881, -41.127, 3.50276, 1.23", "38.006, -43.0743, 3.34668, 0.86", "39.2129, -44.9612, 3.14212, 0.86", "40.6653, -47.1888, 2.84269, 0.86", "40.9614, -47.6491, 2.77274, 0.86", "41.0603, -47.8059, 2.74622, 0.86", "42.2694, -49.7434, 2.38423, 0.86", "43.3722, -51.5371, 2.01565, 0.86", "43.5129, -51.7731, 1.97327, 0.86", "44.3491, -53.2362, 1.79113, 0.86", "44.4704, -53.4482, 1.77697, 0.86", "44.9488, -54.2757, 1.74421, 0.86", "45.1763, -54.6656, 1.73615, 0.86", "45.9789, -56.1494, 1.71416, 0.86", "46.0131, -56.212, 1.71391, 0.86", "47.3561, -58.6226, 1.76383, 0.86", "47.5614, -58.9739, 1.78274, 0.86" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-3.37599, 8.2163, -7.0, 1.97", "-5.75598, 9.6923, -13.46, 1.97" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-3.37599, 8.2163, -7.0, 1.35", "-3.61101, 11.4426, -5.23889, 1.35", "-3.74979, 13.8911, -3.70771, 1.35", "-3.88131, 16.5342, -1.95898, 1.35", "-3.99991, 18.7116, -0.420556, 1.35", "-4.11239, 19.9108, 0.507945, 1.35", "-4.57546, 23.1431, 3.07165, 1.35", "-4.92803, 25.0399, 4.81977, 1.35", "-4.93844, 25.0896, 4.8692, 1.35", "-5.31982, 26.3696, 6.30753, 1.35", "-5.42385, 28.4505, 9.02262, 0.98", "-6.25504, 27.3557, 7.22328, 0.61", "-7.65753, 26.1746, 5.13525, 0.61", "-9.51745, 24.5543, 2.28817, 0.61", "-10.1497, 23.9341, 1.20248, 0.61", "-11.7131, 22.1425, -1.91545, 0.61", "-12.54, 20.9178, -4.0399, 0.61" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-5.66599, -7.6302, 6.73, 1.23", "-3.94104, -8.56605, 7.82245, 1.23", "-2.65023, -9.26636, 8.63995, 1.23", "-0.244978, -10.5713, 10.1633, 1.23", "1.29387, -11.4062, 11.1378, 1.23", "3.5482, -12.6293, 12.5656, 0.98", "4.53661, -13.1655, 13.1915, 0.98" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-5.66599, -7.6302, 6.73, 1.35", "-5.03329, -9.94778, 5.9338, 1.35", "-4.35163, -12.2806, 5.03413, 1.23", "-4.1236, -13.0902, 4.71127, 1.23", "-3.31458, -16.001, 3.54261, 1.23", "-3.28405, -16.1125, 3.50102, 1.23", "-3.06149, -16.9422, 3.20401, 1.23", "-2.63516, -18.2303, 2.6957, 1.23", "-2.35667, -19.2804, 2.29646, 1.23", "-2.31594, -19.5531, 2.22981, 1.23", "-2.34347, -21.5325, 2.06618, 1.23", "-2.3543, -21.6554, 2.06121, 1.23", "-2.537, -22.8593, 2.05229, 1.23", "-2.83813, -24.421, 2.09464, 1.23", "-3.1752, -26.0412, 2.14912, 1.23", "-3.59365, -28.0894, 2.20933, 1.23", "-3.79975, -29.075, 2.23876, 1.23", "-3.98952, -30.2058, 2.25684, 1.23", "-4.12752, -31.3364, 2.26098, 1.23", "-4.23686, -32.9744, 2.23468, 1.23", "-4.30195, -35.1154, 2.26511, 1.23", "-4.30273, -35.1871, 2.26929, 1.23", "-4.30699, -36.3476, 2.46251, 1.23", "-4.32259, -38.2857, 2.99455, 1.23", "-4.35631, -40.2019, 3.69351, 1.23", "-4.40872, -42.7859, 4.84715, 1.23", "-4.41234, -42.9041, 4.90779, 1.23", "-4.52094, -45.4859, 6.35164, 1.23", "-4.59337, -46.5946, 7.08399, 1.23", "-4.5979, -46.7035, 7.17329, 1.23", "-4.5827, -47.3413, 7.81326, 1.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "38.5358, 12.0865, 0.0, 0.86", "52.7594, 16.85, 0.0, 0.86", "66.9829, 21.6134, 0.0, 0.86" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "23.8564, -5.25601, 5.66869, 0.98", "26.5859, -5.35873, 4.67509, 0.98", "28.8187, -5.41715, 3.89978, 0.98", "30.5502, -5.45193, 3.31693, 0.98", "34.261, -5.87247, 1.71593, 0.98", "34.3239, -5.88658, 1.68832, 0.98", "35.5828, -6.28426, 1.06401, 0.98", "36.4926, -6.74567, 0.548187, 0.61", "36.5877, -6.79583, 0.493787, 0.61", "39.182, -8.24004, -0.902799, 0.61", "40.9677, -9.33625, -1.77203, 0.61", "43.2641, -10.7851, -2.92455, 0.61", "45.4685, -12.2369, -4.08017, 0.61", "48.2884, -14.0303, -5.55435, 0.61", "50.1027, -15.141, -6.45605, 0.61" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "23.8564, -5.25601, 5.66869, 1.23", "24.544, -3.68943, 6.2605, 1.23", "25.344, -1.66372, 6.99066, 1.23", "25.9382, -0.159312, 7.53293, 1.35", "26.6202, 1.56766, 8.15541, 1.35", "27.9656, 4.97397, 9.38322, 1.35", "28.0117, 5.09083, 9.42534, 1.35", "28.5921, 6.54987, 10.1483, 1.35" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "47.5614, -58.9739, 1.78274, 0.61", "48.9014, -61.3371, 1.39629, 0.61", "49.6149, -62.8251, 1.10578, 0.61", "50.6509, -65.2186, 0.631765, 0.61", "51.0447, -66.2536, 0.437288, 0.61", "51.0888, -66.3773, 0.414772, 0.61", "51.9992, -69.102, -0.0481463, 0.61", "52.4135, -70.7502, -0.330287, 0.61", "52.6642, -72.0704, -0.555495, 0.61", "52.9224, -73.6588, -0.816304, 0.61", "52.9512, -73.8337, -0.853068, 0.61", "53.2365, -75.5986, -1.2291, 0.61", "53.247, -75.6679, -1.24419, 0.61", "53.5625, -77.9808, -1.77957, 0.61", "53.5713, -78.0491, -1.79934, 0.61", "53.9359, -80.6064, -2.72057, 0.61" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "47.5614, -58.9739, 1.78274, 0.61", "48.4291, -61.2193, 1.7465, 0.61", "49.3242, -63.5357, 1.70911, 0.61", "50.4916, -66.5568, 1.66035, 0.61" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-5.75598, 9.6923, -13.46, 0.98", "-8.51331, 8.2223, -17.2652, 0.98", "-9.51824, 7.68654, -18.6521, 0.98" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.75598, 9.6923, -13.46, 0.86", "-6.92859, 11.8749, -12.3097, 0.86", "-7.99875, 13.9766, -11.2211, 0.86", "-8.04926, 14.088, -11.1707, 0.86", "-8.70643, 15.6582, -10.518, 0.86", "-8.75801, 15.7826, -10.471, 0.86", "-9.45468, 17.5555, -9.94653, 0.86", "-9.47397, 17.6129, -9.93709, 0.86", "-10.0949, 19.4553, -9.84717, 0.86", "-10.5893, 21.0128, -9.89736, 0.86", "-11.0093, 22.3795, -10.0124, 0.86", "-11.7318, 24.8171, -10.3138, 0.86", "-12.4401, 27.1623, -10.6973, 0.86", "-12.9867, 28.9387, -11.0234, 0.86", "-13.9144, 31.7251, -11.6108, 0.86", "-13.9385, 31.7907, -11.6261, 0.86", "-14.4912, 33.1147, -11.9223, 0.86", "-15.3153, 34.7602, -12.2763, 0.86", "-15.3451, 34.8122, -12.288, 0.86", "-16.2571, 36.2115, -12.666, 0.86", "-17.1187, 37.4848, -13.0923, 0.86", "-17.9007, 38.7888, -13.5971, 0.86", "-18.7007, 40.4344, -14.261, 0.86", "-18.8488, 40.8628, -14.4169, 0.86", "-19.3006, 42.542, -14.9784, 0.86", "-19.6031, 44.3282, -15.457, 0.86", "-19.8236, 46.0762, -15.9007, 0.86", "-20.0212, 48.2653, -16.4028, 0.86", "-20.2159, 51.2596, -16.944, 0.86", "-20.2193, 51.3204, -16.9522, 0.86", "-20.376, 55.7437, -17.2501, 0.86" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-4.5827, -47.3413, 7.81326, 0.61", "-6.45659, -49.5315, 8.9575, 0.61", "-7.49677, -50.8252, 9.76223, 0.61", "-8.57845, -52.1504, 10.6123, 0.74", "-10.1359, -54.0449, 11.8503, 0.74", "-11.7194, -56.0544, 13.026, 0.74", "-11.7539, -56.0996, 13.0476, 0.74", "-12.6762, -57.3726, 13.7685, 0.74", "-13.8733, -59.1842, 14.7915, 0.74", "-13.9094, -59.2384, 14.8197, 0.74", "-15.2383, -61.2136, 15.2796, 0.74", "-16.5704, -63.2753, 15.048, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-4.5827, -47.3413, 7.81326, 1.23", "-4.03208, -50.4394, 6.91066, 1.23", "-3.61353, -52.7945, 6.22454, 0.98", "-3.20546, -55.0906, 5.5556, 0.98", "-2.36727, -59.8069, 4.18157, 0.98" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "50.1027, -15.141, -6.45605, 0.61", "50.5036, -16.3815, -7.47929, 0.61", "51.8349, -18.8324, -9.89863, 0.61", "52.6525, -19.9329, -11.4102, 0.61", "53.5277, -21.0004, -13.0173, 0.61", "54.2773, -21.8894, -14.2849, 0.61", "55.8513, -23.6346, -16.7749, 0.61", "57.5283, -25.1479, -19.1472, 0.61", "59.64, -26.8259, -21.8007, 0.61", "60.8252, -27.6899, -23.1854, 0.61", "63.6204, -29.5724, -26.1661, 0.61", "65.0817, -30.5631, -27.5499, 0.61", "67.2638, -32.115, -29.2386, 0.61", "68.5483, -32.991, -30.0624, 0.61", "69.5937, -33.6196, -30.595, 0.61", "69.9182, -33.7851, -30.7406, 0.61", "73.1908, -35.3004, -32.0211, 0.61", "76.0025, -36.5971, -33.0135, 0.61", "79.142, -37.9213, -34.0852, 0.61", "81.8015, -38.8831, -35.034, 0.61", "84.3727, -39.6933, -35.9869, 0.61", "86.7561, -40.3476, -36.8718, 0.61", "89.1184, -40.8936, -37.76, 0.61", "91.6974, -41.4995, -38.7428, 0.61", "94.3113, -42.1357, -39.6991, 0.61", "96.9317, -42.7278, -40.6254, 0.61", "98.7927, -43.0992, -41.2638, 0.61", "99.0196, -43.1405, -41.3337, 0.61", "101.518, -43.5899, -41.9815, 0.61", "104.031, -44.1002, -42.2489, 0.61", "107.844, -44.897, -42.4525, 0.61", "107.963, -44.9194, -42.4535, 0.61", "110.511, -45.3458, -42.4158, 0.61", "112.505, -45.6171, -42.3443, 0.61", "117.919, -45.9699, -41.881, 0.61" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "50.1027, -15.141, -6.45605, 0.61", "52.871, -15.8565, -7.28555, 0.61", "55.3125, -16.7682, -8.04465, 0.61", "55.5393, -16.8425, -8.14875, 0.61", "56.9941, -17.233, -9.29016, 0.61", "57.048, -17.2475, -9.33248, 0.61", "59.7165, -17.9638, -11.4262, 0.61", "61.995, -18.6276, -13.51, 0.61", "64.6126, -19.382, -16.2524, 0.61", "68.9305, -20.4955, -21.0465, 0.61" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-9.51824, 7.68654, -18.6521, 0.98", "-11.3338, 5.54531, -20.2363, 0.98", "-12.6143, 3.99513, -21.4395, 0.98", "-13.8108, 2.45122, -22.542, 0.98", "-15.0827, 0.71714, -23.73, 0.98", "-16.2534, -0.939347, -24.9028, 0.74", "-17.5625, -2.92433, -26.3503, 0.74", "-17.6109, -3.01388, -26.4176, 0.74", "-18.1954, -4.35556, -27.4419, 0.74", "-18.6794, -5.51641, -28.3368, 0.74", "-19.6514, -7.74566, -30.0359, 0.74", "-20.8449, -10.1294, -31.6129, 0.74", "-22.1711, -12.6059, -32.9527, 0.74", "-23.2659, -14.5318, -33.8728, 0.74", "-24.3137, -16.2341, -34.5935, 0.74", "-25.4139, -17.8549, -35.1249, 0.74", "-27.6192, -20.8603, -35.9144, 0.74", "-28.7593, -22.2903, -36.2299, 0.74", "-29.6105, -23.3117, -36.4447, 0.74", "-31.1651, -25.2639, -36.9207, 0.74", "-34.3572, -29.6395, -38.1583, 0.74", "-35.4629, -31.24, -38.6846, 0.49", "-36.5936, -32.9298, -39.3071, 0.49", "-37.6799, -34.5501, -39.896, 0.49", "-39.3734, -37.1253, -40.7966, 0.49", "-40.8945, -39.4989, -41.5952, 0.49", "-42.4541, -42.0266, -42.44, 0.49", "-43.1588, -43.2043, -42.8003, 0.49", "-44.1998, -44.9687, -43.334, 0.49", "-44.2362, -45.0277, -43.3503, 0.49", "-46.0884, -47.6257, -43.9928, 0.49", "-47.6603, -49.635, -44.4713, 0.49", "-49.4482, -51.7783, -44.9544, 0.49", "-49.6781, -52.0192, -44.9828, 0.49", "-51.1826, -53.3855, -44.9597, 0.49", "-53.8992, -55.3357, -44.4342, 0.49", "-54.5315, -55.6472, -44.1953, 0.49", "-55.1912, -55.8632, -43.9315, 0.49", "-58.8094, -56.7734, -42.4228, 0.49", "-59.0502, -56.8285, -42.3132, 0.49", "-61.9491, -57.3557, -40.8139, 0.49", "-63.5662, -57.6098, -39.8621, 0.49", "-66.1584, -58.0393, -38.3725, 0.49" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-9.51824, 7.68654, -18.6521, 0.98", "-10.9373, 10.3671, -20.6424, 0.98", "-11.4335, 11.3045, -21.3385, 0.98", "-12.5011, 13.3212, -22.8359, 0.98" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-20.376, 55.7437, -17.2501, 0.49", "-18.6402, 58.1672, -19.8377, 0.49", "-17.2413, 60.1204, -21.9233, 0.49", "-16.0894, 61.7287, -23.6404, 0.49", "-14.9306, 63.3468, -25.3681, 0.49" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-20.376, 55.7437, -17.2501, 0.49", "-20.7567, 57.6113, -18.6087, 0.49", "-21.2597, 60.0785, -20.4035, 0.49", "-21.6147, 61.8197, -21.6701, 0.49" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-2.36727, -59.8069, 4.18157, 0.49", "-1.30292, -62.3107, 2.71619, 0.49", "-0.307493, -64.7284, 1.23335, 0.49", "0.828327, -67.3484, -0.413094, 0.61", "1.79204, -69.537, -1.7962, 0.61", "2.40015, -71.0074, -2.72267, 0.61", "3.48189, -73.9724, -4.57022, 0.61", "4.19474, -76.4532, -6.15713, 0.61", "4.60435, -78.5786, -7.53866, 0.61", "4.72863, -79.8518, -8.34769, 0.61", "4.64926, -81.7107, -9.51119, 0.61", "4.33248, -83.411, -10.6792, 0.61", "3.77429, -85.3469, -12.1743, 0.61", "3.746, -85.4366, -12.2515, 0.61", "2.7926, -88.167, -14.6848, 0.61", "1.83106, -90.9368, -17.2531, 0.61", "0.859332, -94.001, -20.2271, 0.61", "0.0525378, -96.9956, -23.2531, 0.61", "-0.444862, -99.2349, -25.5787, 0.61" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-2.36727, -59.8069, 4.18157, 0.74", "-3.97145, -62.2548, 6.15149, 0.74", "-4.66286, -63.3098, 7.00055, 0.74" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-12.5011, 13.3212, -22.8359, 0.61", "-13.6586, 13.7588, -23.9975, 0.61", "-14.6807, 14.121, -25.0847, 0.61", "-15.5755, 14.3646, -26.0345, 0.61", "-15.6603, 14.3857, -26.1314, 0.61", "-17.6104, 14.8034, -28.3595, 0.61", "-19.4263, 15.1665, -30.4272, 0.61", "-21.0118, 15.4556, -32.2107, 0.61", "-23.3558, 15.8123, -34.8583, 0.61", "-26.8983, 16.3061, -38.9624, 0.61", "-28.9503, 16.5845, -41.3777, 0.61", "-29.0341, 16.5965, -41.4768, 0.61", "-32.3841, 17.1226, -45.3723, 0.49", "-35.3375, 17.6611, -48.9972, 0.49", "-37.7159, 18.1506, -52.0348, 0.49", "-40.6072, 18.77, -55.6622, 0.49", "-42.4365, 19.2189, -57.9138, 0.49", "-43.3128, 19.4504, -58.9691, 0.49", "-47.4195, 20.6834, -63.5217, 0.49", "-47.6787, 20.7692, -63.7729, 0.49", "-49.9209, 21.6169, -65.5339, 0.49", "-51.6489, 22.3417, -66.6272, 0.49", "-51.9239, 22.4713, -66.7587, 0.49", "-54.7104, 23.935, -67.6066, 0.49", "-54.8222, 24.0017, -67.6199, 0.49", "-57.6362, 25.847, -67.8401, 0.49", "-57.6936, 25.888, -67.8424, 0.49", "-60.7289, 28.154, -67.7804, 0.49", "-62.9172, 29.8496, -67.6196, 0.49", "-63.3437, 30.2097, -67.5632, 0.49", "-65.9499, 32.5855, -66.9529, 0.49", "-65.9932, 32.6258, -66.9396, 0.49", "-67.5562, 34.1394, -66.4149, 0.49", "-67.6891, 34.2824, -66.3611, 0.49", "-69.9975, 37.0097, -65.39, 0.49", "-71.6794, 39.0819, -64.5773, 0.49" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-12.5011, 13.3212, -22.8359, 0.74", "-10.9115, 13.5417, -27.2174, 0.74", "-9.73857, 13.3748, -30.5159, 0.74", "-7.66157, 12.5278, -36.6194, 0.74", "-5.53774, 11.3315, -42.9794, 0.61", "-4.26842, 10.6165, -46.7804, 0.61", "-3.03089, 9.91942, -50.4863, 0.61", "-2.06128, 9.07489, -53.1396, 0.61", "-1.18929, 8.02851, -55.4354, 0.61", "-1.12223, 7.86759, -55.6653, 0.61" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-0.444862, -99.2349, -25.5787, 0.61", "-0.150192, -101.252, -25.7568, 0.61", "0.288419, -104.766, -26.0678, 0.61", "0.296397, -104.837, -26.0748, 0.61", "0.461235, -106.196, -26.2179, 0.61", "0.495293, -106.472, -26.2469, 0.61", "0.702773, -108.099, -26.4234, 0.61", "0.745935, -108.385, -26.4697, 0.61", "1.14738, -110.786, -26.9354, 0.61", "1.22036, -111.151, -27.0307, 0.61", "1.4876, -112.327, -27.3889, 0.61", "1.53201, -112.539, -27.4654, 0.61", "2.00586, -115.562, -28.7425, 0.61", "2.02493, -115.732, -28.8205, 0.61", "2.16554, -119.099, -30.4435, 0.61", "2.16481, -119.21, -30.4971, 0.61", "2.03167, -121.893, -31.7821, 0.61", "1.82046, -124.057, -32.7617, 0.61", "1.80999, -124.122, -32.7902, 0.61", "1.34899, -126.65, -33.8608, 0.61", "1.3229, -126.771, -33.9085, 0.61", "1.09343, -127.919, -34.3398, 0.61", "0.956048, -128.74, -34.6338, 0.61", "0.7288, -130.019, -35.2471, 0.61", "0.643056, -130.427, -35.5202, 0.61", "0.354024, -131.861, -36.8184, 0.61", "0.341786, -131.956, -36.9143, 0.61", "0.227669, -134.429, -39.5096, 0.61", "0.228745, -136.897, -42.1665, 0.61", "0.580646, -140.045, -45.4574, 0.61", "1.16104, -144.405, -50.1052, 0.61", "1.63047, -147.221, -53.1693, 0.61", "2.12311, -149.579, -55.7548, 0.61", "2.13519, -149.619, -55.799, 0.61", "3.82717, -153.522, -59.7619, 0.61" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-0.444862, -99.2349, -25.5787, 0.61", "-3.03486, -97.0722, -25.9187, 0.61" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-4.66286, -63.3098, 7.00055, 0.74", "-6.05934, -63.0586, 6.8175, 0.74", "-7.88826, -62.7297, 6.57778, 0.74", "-11.1583, -62.1416, 6.14916, 0.49" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-4.66286, -63.3098, 7.00055, 0.74", "-5.83728, -64.7604, 7.1168, 0.74", "-6.91911, -66.0966, 7.2239, 0.74", "-7.91306, -67.3243, 7.32229, 0.74", "-8.05978, -67.5055, 7.33681, 0.74", "-9.25764, -68.9851, 7.45539, 0.74", "-11.0732, -71.2275, 7.63511, 0.74" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_23", "dend_12", "dend_11", "dend_0", "dend_27", "dend_24", "dend_14", "dend_13", "dend_10", "dend_1", "dend_29", "dend_28", "dend_26", "dend_25", "dend_18", "dend_15", "dend_9", "dend_2", "dend_31", "dend_30", "dend_22", "dend_19", "dend_17", "dend_16", "dend_6", "dend_3", "dend_21", "dend_20", "dend_8", "dend_7", "dend_5", "dend_4" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_32", "dend_23", "dend_12", "dend_11", "dend_0", "dend_27", "dend_24", "dend_14", "dend_13", "dend_10", "dend_1", "dend_29", "dend_28", "dend_26", "dend_25", "dend_18", "dend_15", "dend_9", "dend_2", "dend_31", "dend_30", "dend_22", "dend_19", "dend_17", "dend_16", "dend_6", "dend_3", "dend_21", "dend_20", "dend_8", "dend_7", "dend_5", "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "axon_0", "axon_0", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L1_SLAC_d22d584760_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_23, dend_12, dend_11, dend_0, dend_27, dend_24, dend_14, dend_13, dend_10, dend_1, dend_29, dend_28, dend_26, dend_25, dend_18, dend_15, dend_9, dend_2, dend_31, dend_30, dend_22, dend_19, dend_17, dend_16, dend_6, dend_3, dend_21, dend_20, dend_8, dend_7, dend_5, dend_4]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_23, dend_12, dend_11, dend_0, dend_27, dend_24, dend_14, dend_13, dend_10, dend_1, dend_29, dend_28, dend_26, dend_25, dend_18, dend_15, dend_9, dend_2, dend_31, dend_30, dend_22, dend_19, dend_17, dend_16, dend_6, dend_3, dend_21, dend_20, dend_8, dend_7, dend_5, dend_4]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_34
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, axon_0, axon_0, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_32(0), soma_0(0.45000046918597253)
    connect dend_23(0), soma_0(0.45000046918597253)
    connect dend_12(0), soma_0(0.45000046918597253)
    connect dend_11(0), soma_0(0.45000046918597253)
    connect dend_0(0), soma_0(0.45000046918597253)
    connect axon_0(0), soma_0(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -9.39632, -3.96587, 0.0, 1.74986 ) }
    soma_0 { pt3dadd( -8.42207, -3.6396, 0.0, 3.17966 ) }
    soma_0 { pt3dadd( -7.44781, -3.31332, 0.0, 5.02405 ) }
    soma_0 { pt3dadd( -6.47356, -2.98705, 0.0, 6.48048 ) }
    soma_0 { pt3dadd( -5.49931, -2.66077, 0.0, 7.83461 ) }
    soma_0 { pt3dadd( -4.52506, -2.3345, 0.0, 9.24415 ) }
    soma_0 { pt3dadd( -3.55081, -2.00822, 0.0, 9.9604 ) }
    soma_0 { pt3dadd( -2.57655, -1.68194, 0.0, 11.044 ) }
    soma_0 { pt3dadd( -1.6023, -1.35567, 0.0, 11.9021 ) }
    soma_0 { pt3dadd( -0.628051, -1.02939, 0.0, 12.3025 ) }
    soma_0 { pt3dadd( 0.346201, -0.703117, 0.0, 12.7109 ) }
    soma_0 { pt3dadd( 1.32045, -0.376841, 0.0, 12.6912 ) }
    soma_0 { pt3dadd( 2.2947, -0.0505657, 0.0, 12.1867 ) }
    soma_0 { pt3dadd( 3.26896, 0.27571, 0.0, 11.6828 ) }
    soma_0 { pt3dadd( 4.24321, 0.601986, 0.0, 11.1774 ) }
    soma_0 { pt3dadd( 5.21746, 0.928261, 0.0, 10.319 ) }
    soma_0 { pt3dadd( 6.19171, 1.25454, 0.0, 9.00686 ) }
    soma_0 { pt3dadd( 7.16596, 1.58081, 0.0, 7.63456 ) }
    soma_0 { pt3dadd( 8.14022, 1.90709, 0.0, 6.27045 ) }
    soma_0 { pt3dadd( 9.11447, 2.23336, 0.0, 4.49667 ) }
    soma_0 { pt3dadd( 10.0887, 2.55964, 0.0, 2.60875 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 21/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 10.244, 1.95355, 3.07, 2.09 ) }
    dend_32 { pt3dadd( 11.0755, 4.40685, 4.42511, 1.48 ) }
    dend_32 { pt3dadd( 11.5381, 5.77156, 5.17893, 1.48 ) }
    dend_32 { pt3dadd( 12.4154, 8.3597, 6.60852, 1.48 ) }
    dend_32 { pt3dadd( 13.189, 10.642, 7.86923, 1.48 ) }
    dend_32 { pt3dadd( 13.8535, 12.6024, 8.95205, 1.11 ) }
    dend_32 { pt3dadd( 14.9432, 15.8172, 10.7278, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 28/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 10.244, -0.762703, -1.13, 1.72 ) }
    dend_23 { pt3dadd( 12.4928, -1.95766, 0.0821983, 1.72 ) }
    dend_23 { pt3dadd( 14.1223, -2.82354, 0.960568, 1.72 ) }
    dend_23 { pt3dadd( 17.6778, -4.71281, 2.87709, 1.72 ) }
    dend_23 { pt3dadd( 19.0995, -5.46825, 3.64343, 1.72 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 33/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.74599, 6.36105, -6.8, 2.58 ) }
    dend_12 { pt3dadd( -3.37599, 8.2163, -7.0, 2.58 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 35/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.56599, -4.9447, -5.2, 1.23 ) }
    dend_11 { pt3dadd( -2.90388, -7.01096, -6.61443, 1.23 ) }
    dend_11 { pt3dadd( -2.98659, -8.89176, -7.85484, 0.98 ) }
    dend_11 { pt3dadd( -2.97022, -9.10451, -7.99359, 0.98 ) }
    dend_11 { pt3dadd( -2.58482, -11.9805, -9.85364, 0.98 ) }
    dend_11 { pt3dadd( -2.00505, -15.1654, -11.8644, 0.98 ) }
    dend_11 { pt3dadd( -1.40538, -17.6661, -13.3178, 0.74 ) }
    dend_11 { pt3dadd( -0.805413, -19.3443, -14.263, 0.74 ) }
    dend_11 { pt3dadd( 0.14884, -21.4817, -15.3913, 0.74 ) }
    dend_11 { pt3dadd( 0.177774, -21.5395, -15.421, 0.74 ) }
    dend_11 { pt3dadd( 1.09762, -23.1573, -16.2159, 0.74 ) }
    dend_11 { pt3dadd( 2.33875, -25.2467, -17.2841, 0.74 ) }
    dend_11 { pt3dadd( 2.39049, -25.3445, -17.3352, 0.74 ) }
    dend_11 { pt3dadd( 3.6598, -28.2434, -18.8604, 0.74 ) }
    dend_11 { pt3dadd( 4.69674, -30.9385, -20.2148, 0.74 ) }
    dend_11 { pt3dadd( 5.32746, -32.6897, -21.0791, 0.74 ) }
    dend_11 { pt3dadd( 5.36408, -32.8044, -21.1343, 0.74 ) }
    dend_11 { pt3dadd( 5.96853, -34.9817, -22.1673, 0.61 ) }
    dend_11 { pt3dadd( 6.31224, -36.3345, -22.7217, 0.61 ) }
    dend_11 { pt3dadd( 6.6245, -37.7086, -23.1466, 0.61 ) }
    dend_11 { pt3dadd( 7.00674, -39.5903, -23.583, 0.61 ) }
    dend_11 { pt3dadd( 7.31748, -41.214, -23.9056, 0.61 ) }
    dend_11 { pt3dadd( 7.32976, -41.2733, -23.9162, 0.61 ) }
    dend_11 { pt3dadd( 7.61646, -42.5002, -24.1171, 0.61 ) }
    dend_11 { pt3dadd( 7.69018, -42.767, -24.1545, 0.61 ) }
    dend_11 { pt3dadd( 8.04085, -43.8236, -24.2682, 0.61 ) }
    dend_11 { pt3dadd( 8.28125, -44.4031, -24.3568, 0.61 ) }
    dend_11 { pt3dadd( 8.95245, -46.0127, -24.7606, 0.61 ) }
    dend_11 { pt3dadd( 8.99111, -46.1229, -24.7974, 0.61 ) }
    dend_11 { pt3dadd( 9.64628, -48.4665, -25.6794, 0.61 ) }
    dend_11 { pt3dadd( 9.96394, -50.1024, -26.3314, 0.61 ) }
    dend_11 { pt3dadd( 10.3827, -53.3229, -27.7102, 0.61 ) }
    dend_11 { pt3dadd( 10.4543, -55.5069, -28.7103, 0.61 ) }
    dend_11 { pt3dadd( 10.2953, -57.9112, -29.8873, 0.61 ) }
    dend_11 { pt3dadd( 9.99524, -59.2867, -30.5811, 0.61 ) }
    dend_11 { pt3dadd( 9.40354, -60.6343, -31.2996, 0.61 ) }
    dend_11 { pt3dadd( 9.25025, -60.8315, -31.4109, 0.61 ) }
    dend_11 { pt3dadd( 7.5298, -62.1962, -32.2002, 0.61 ) }
    dend_11 { pt3dadd( 7.47938, -62.2217, -32.2212, 0.61 ) }
    dend_11 { pt3dadd( 5.06451, -62.9169, -33.2817, 0.61 ) }
    dend_11 { pt3dadd( 5.0023, -62.9282, -33.3118, 0.61 ) }
    dend_11 { pt3dadd( 2.80947, -63.141, -34.3626, 0.61 ) }
    dend_11 { pt3dadd( 2.74633, -63.1448, -34.3926, 0.61 ) }
    dend_11 { pt3dadd( 0.239347, -63.1682, -35.5195, 0.61 ) }
    dend_11 { pt3dadd( -1.21117, -63.2452, -36.1317, 0.61 ) }
    dend_11 { pt3dadd( -1.32183, -63.2547, -36.1783, 0.61 ) }
    dend_11 { pt3dadd( -3.7486, -63.5562, -37.0779, 0.61 ) }
    dend_11 { pt3dadd( -3.81456, -63.5666, -37.099, 0.61 ) }
    dend_11 { pt3dadd( -6.27319, -64.0129, -37.7987, 0.61 ) }
    dend_11 { pt3dadd( -8.6909, -64.536, -38.3763, 0.61 ) }
    dend_11 { pt3dadd( -8.94726, -64.5982, -38.4354, 0.61 ) }
    dend_11 { pt3dadd( -10.9899, -65.1229, -38.8787, 0.61 ) }
    dend_11 { pt3dadd( -11.0467, -65.1383, -38.8904, 0.61 ) }
    dend_11 { pt3dadd( -12.6718, -65.5694, -39.2161, 0.61 ) }
    dend_11 { pt3dadd( -12.9403, -65.6389, -39.269, 0.61 ) }
    dend_11 { pt3dadd( -16.7308, -66.4003, -39.9656, 0.61 ) }
    dend_11 { pt3dadd( -18.583, -66.7602, -40.2866, 0.61 ) }
    dend_11 { pt3dadd( -19.19, -66.8707, -40.3871, 0.61 ) }
    dend_11 { pt3dadd( -21.2212, -67.2308, -40.7128, 0.61 ) }
    dend_11 { pt3dadd( -21.4964, -67.2766, -40.7549, 0.61 ) }
    dend_11 { pt3dadd( -23.4998, -67.5685, -41.0702, 0.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 96/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -5.08599, -6.0312, 6.73, 1.72 ) }
    dend_0 { pt3dadd( -5.66599, -7.6302, 6.73, 1.72 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 98/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 10.0887, 2.55964, 0.0, 2.09 ) }
    axon_0 { pt3dadd( 24.3123, 7.32309, 0.0, 2.09 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    axon_0 { pt3dadd( 38.5358, 12.0865, 0.0, 2.09 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 1/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 19.0995, -5.46825, 3.64343, 1.11 ) }
    dend_27 { pt3dadd( 21.9566, -5.34078, 4.85983, 1.11 ) }
    dend_27 { pt3dadd( 23.8564, -5.25601, 5.66869, 1.23 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 4/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 19.0995, -5.46825, 3.64343, 1.23 ) }
    dend_24 { pt3dadd( 20.4392, -7.62191, 3.59388, 1.23 ) }
    dend_24 { pt3dadd( 21.4929, -9.3974, 3.55924, 1.23 ) }
    dend_24 { pt3dadd( 22.7062, -11.6614, 3.42808, 1.23 ) }
    dend_24 { pt3dadd( 23.7002, -13.5506, 3.28381, 1.23 ) }
    dend_24 { pt3dadd( 24.523, -15.1233, 3.14992, 1.23 ) }
    dend_24 { pt3dadd( 25.1989, -16.4855, 3.03179, 1.23 ) }
    dend_24 { pt3dadd( 25.9381, -18.0124, 2.88174, 1.23 ) }
    dend_24 { pt3dadd( 26.8081, -20.0126, 2.68208, 1.23 ) }
    dend_24 { pt3dadd( 27.1653, -20.8891, 2.59921, 1.23 ) }
    dend_24 { pt3dadd( 27.753, -22.3131, 2.54555, 1.23 ) }
    dend_24 { pt3dadd( 28.5123, -24.1763, 2.53602, 1.23 ) }
    dend_24 { pt3dadd( 29.4668, -26.4734, 2.5922, 1.23 ) }
    dend_24 { pt3dadd( 30.26, -28.3366, 2.68925, 1.23 ) }
    dend_24 { pt3dadd( 31.117, -30.2884, 2.84788, 1.23 ) }
    dend_24 { pt3dadd( 32.159, -32.6274, 3.04402, 1.23 ) }
    dend_24 { pt3dadd( 32.8781, -34.1533, 3.17654, 1.23 ) }
    dend_24 { pt3dadd( 33.4118, -35.2049, 3.28265, 1.23 ) }
    dend_24 { pt3dadd( 34.3433, -36.9885, 3.47109, 1.23 ) }
    dend_24 { pt3dadd( 35.1355, -38.3898, 3.55384, 1.23 ) }
    dend_24 { pt3dadd( 35.8905, -39.6835, 3.56721, 1.23 ) }
    dend_24 { pt3dadd( 36.7881, -41.127, 3.50276, 1.23 ) }
    dend_24 { pt3dadd( 38.006, -43.0743, 3.34668, 0.86 ) }
    dend_24 { pt3dadd( 39.2129, -44.9612, 3.14212, 0.86 ) }
    dend_24 { pt3dadd( 40.6653, -47.1888, 2.84269, 0.86 ) }
    dend_24 { pt3dadd( 40.9614, -47.6491, 2.77274, 0.86 ) }
    dend_24 { pt3dadd( 41.0603, -47.8059, 2.74622, 0.86 ) }
    dend_24 { pt3dadd( 42.2694, -49.7434, 2.38423, 0.86 ) }
    dend_24 { pt3dadd( 43.3722, -51.5371, 2.01565, 0.86 ) }
    dend_24 { pt3dadd( 43.5129, -51.7731, 1.97327, 0.86 ) }
    dend_24 { pt3dadd( 44.3491, -53.2362, 1.79113, 0.86 ) }
    dend_24 { pt3dadd( 44.4704, -53.4482, 1.77697, 0.86 ) }
    dend_24 { pt3dadd( 44.9488, -54.2757, 1.74421, 0.86 ) }
    dend_24 { pt3dadd( 45.1763, -54.6656, 1.73615, 0.86 ) }
    dend_24 { pt3dadd( 45.9789, -56.1494, 1.71416, 0.86 ) }
    dend_24 { pt3dadd( 46.0131, -56.212, 1.71391, 0.86 ) }
    dend_24 { pt3dadd( 47.3561, -58.6226, 1.76383, 0.86 ) }
    dend_24 { pt3dadd( 47.5614, -58.9739, 1.78274, 0.86 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 42/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -3.37599, 8.2163, -7.0, 1.97 ) }
    dend_14 { pt3dadd( -5.75598, 9.6923, -13.46, 1.97 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 44/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -3.37599, 8.2163, -7.0, 1.35 ) }
    dend_13 { pt3dadd( -3.61101, 11.4426, -5.23889, 1.35 ) }
    dend_13 { pt3dadd( -3.74979, 13.8911, -3.70771, 1.35 ) }
    dend_13 { pt3dadd( -3.88131, 16.5342, -1.95898, 1.35 ) }
    dend_13 { pt3dadd( -3.99991, 18.7116, -0.420556, 1.35 ) }
    dend_13 { pt3dadd( -4.11239, 19.9108, 0.507945, 1.35 ) }
    dend_13 { pt3dadd( -4.57546, 23.1431, 3.07165, 1.35 ) }
    dend_13 { pt3dadd( -4.92803, 25.0399, 4.81977, 1.35 ) }
    dend_13 { pt3dadd( -4.93844, 25.0896, 4.8692, 1.35 ) }
    dend_13 { pt3dadd( -5.31982, 26.3696, 6.30753, 1.35 ) }
    dend_13 { pt3dadd( -5.42385, 28.4505, 9.02262, 0.98 ) }
    dend_13 { pt3dadd( -6.25504, 27.3557, 7.22328, 0.61 ) }
    dend_13 { pt3dadd( -7.65753, 26.1746, 5.13525, 0.61 ) }
    dend_13 { pt3dadd( -9.51745, 24.5543, 2.28817, 0.61 ) }
    dend_13 { pt3dadd( -10.1497, 23.9341, 1.20248, 0.61 ) }
    dend_13 { pt3dadd( -11.7131, 22.1425, -1.91545, 0.61 ) }
    dend_13 { pt3dadd( -12.54, 20.9178, -4.0399, 0.61 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 61/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -5.66599, -7.6302, 6.73, 1.23 ) }
    dend_10 { pt3dadd( -3.94104, -8.56605, 7.82245, 1.23 ) }
    dend_10 { pt3dadd( -2.65023, -9.26636, 8.63995, 1.23 ) }
    dend_10 { pt3dadd( -0.244978, -10.5713, 10.1633, 1.23 ) }
    dend_10 { pt3dadd( 1.29387, -11.4062, 11.1378, 1.23 ) }
    dend_10 { pt3dadd( 3.5482, -12.6293, 12.5656, 0.98 ) }
    dend_10 { pt3dadd( 4.53661, -13.1655, 13.1915, 0.98 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 68/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -5.66599, -7.6302, 6.73, 1.35 ) }
    dend_1 { pt3dadd( -5.03329, -9.94778, 5.9338, 1.35 ) }
    dend_1 { pt3dadd( -4.35163, -12.2806, 5.03413, 1.23 ) }
    dend_1 { pt3dadd( -4.1236, -13.0902, 4.71127, 1.23 ) }
    dend_1 { pt3dadd( -3.31458, -16.001, 3.54261, 1.23 ) }
    dend_1 { pt3dadd( -3.28405, -16.1125, 3.50102, 1.23 ) }
    dend_1 { pt3dadd( -3.06149, -16.9422, 3.20401, 1.23 ) }
    dend_1 { pt3dadd( -2.63516, -18.2303, 2.6957, 1.23 ) }
    dend_1 { pt3dadd( -2.35667, -19.2804, 2.29646, 1.23 ) }
    dend_1 { pt3dadd( -2.31594, -19.5531, 2.22981, 1.23 ) }
    dend_1 { pt3dadd( -2.34347, -21.5325, 2.06618, 1.23 ) }
    dend_1 { pt3dadd( -2.3543, -21.6554, 2.06121, 1.23 ) }
    dend_1 { pt3dadd( -2.537, -22.8593, 2.05229, 1.23 ) }
    dend_1 { pt3dadd( -2.83813, -24.421, 2.09464, 1.23 ) }
    dend_1 { pt3dadd( -3.1752, -26.0412, 2.14912, 1.23 ) }
    dend_1 { pt3dadd( -3.59365, -28.0894, 2.20933, 1.23 ) }
    dend_1 { pt3dadd( -3.79975, -29.075, 2.23876, 1.23 ) }
    dend_1 { pt3dadd( -3.98952, -30.2058, 2.25684, 1.23 ) }
    dend_1 { pt3dadd( -4.12752, -31.3364, 2.26098, 1.23 ) }
    dend_1 { pt3dadd( -4.23686, -32.9744, 2.23468, 1.23 ) }
    dend_1 { pt3dadd( -4.30195, -35.1154, 2.26511, 1.23 ) }
    dend_1 { pt3dadd( -4.30273, -35.1871, 2.26929, 1.23 ) }
    dend_1 { pt3dadd( -4.30699, -36.3476, 2.46251, 1.23 ) }
    dend_1 { pt3dadd( -4.32259, -38.2857, 2.99455, 1.23 ) }
    dend_1 { pt3dadd( -4.35631, -40.2019, 3.69351, 1.23 ) }
    dend_1 { pt3dadd( -4.40872, -42.7859, 4.84715, 1.23 ) }
    dend_1 { pt3dadd( -4.41234, -42.9041, 4.90779, 1.23 ) }
    dend_1 { pt3dadd( -4.52094, -45.4859, 6.35164, 1.23 ) }
    dend_1 { pt3dadd( -4.59337, -46.5946, 7.08399, 1.23 ) }
    dend_1 { pt3dadd( -4.5979, -46.7035, 7.17329, 1.23 ) }
    dend_1 { pt3dadd( -4.5827, -47.3413, 7.81326, 1.23 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 99/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 38.5358, 12.0865, 0.0, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    axon_1 { pt3dadd( 52.7594, 16.85, 0.0, 0.86 ) }
    axon_1 { pt3dadd( 66.9829, 21.6134, 0.0, 0.86 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 2/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 23.8564, -5.25601, 5.66869, 0.98 ) }
    dend_29 { pt3dadd( 26.5859, -5.35873, 4.67509, 0.98 ) }
    dend_29 { pt3dadd( 28.8187, -5.41715, 3.89978, 0.98 ) }
    dend_29 { pt3dadd( 30.5502, -5.45193, 3.31693, 0.98 ) }
    dend_29 { pt3dadd( 34.261, -5.87247, 1.71593, 0.98 ) }
    dend_29 { pt3dadd( 34.3239, -5.88658, 1.68832, 0.98 ) }
    dend_29 { pt3dadd( 35.5828, -6.28426, 1.06401, 0.98 ) }
    dend_29 { pt3dadd( 36.4926, -6.74567, 0.548187, 0.61 ) }
    dend_29 { pt3dadd( 36.5877, -6.79583, 0.493787, 0.61 ) }
    dend_29 { pt3dadd( 39.182, -8.24004, -0.902799, 0.61 ) }
    dend_29 { pt3dadd( 40.9677, -9.33625, -1.77203, 0.61 ) }
    dend_29 { pt3dadd( 43.2641, -10.7851, -2.92455, 0.61 ) }
    dend_29 { pt3dadd( 45.4685, -12.2369, -4.08017, 0.61 ) }
    dend_29 { pt3dadd( 48.2884, -14.0303, -5.55435, 0.61 ) }
    dend_29 { pt3dadd( 50.1027, -15.141, -6.45605, 0.61 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 17/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 23.8564, -5.25601, 5.66869, 1.23 ) }
    dend_28 { pt3dadd( 24.544, -3.68943, 6.2605, 1.23 ) }
    dend_28 { pt3dadd( 25.344, -1.66372, 6.99066, 1.23 ) }
    dend_28 { pt3dadd( 25.9382, -0.159312, 7.53293, 1.35 ) }
    dend_28 { pt3dadd( 26.6202, 1.56766, 8.15541, 1.35 ) }
    dend_28 { pt3dadd( 27.9656, 4.97397, 9.38322, 1.35 ) }
    dend_28 { pt3dadd( 28.0117, 5.09083, 9.42534, 1.35 ) }
    dend_28 { pt3dadd( 28.5921, 6.54987, 10.1483, 1.35 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 25/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 47.5614, -58.9739, 1.78274, 0.61 ) }
    dend_26 { pt3dadd( 48.9014, -61.3371, 1.39629, 0.61 ) }
    dend_26 { pt3dadd( 49.6149, -62.8251, 1.10578, 0.61 ) }
    dend_26 { pt3dadd( 50.6509, -65.2186, 0.631765, 0.61 ) }
    dend_26 { pt3dadd( 51.0447, -66.2536, 0.437288, 0.61 ) }
    dend_26 { pt3dadd( 51.0888, -66.3773, 0.414772, 0.61 ) }
    dend_26 { pt3dadd( 51.9992, -69.102, -0.0481463, 0.61 ) }
    dend_26 { pt3dadd( 52.4135, -70.7502, -0.330287, 0.61 ) }
    dend_26 { pt3dadd( 52.6642, -72.0704, -0.555495, 0.61 ) }
    dend_26 { pt3dadd( 52.9224, -73.6588, -0.816304, 0.61 ) }
    dend_26 { pt3dadd( 52.9512, -73.8337, -0.853068, 0.61 ) }
    dend_26 { pt3dadd( 53.2365, -75.5986, -1.2291, 0.61 ) }
    dend_26 { pt3dadd( 53.247, -75.6679, -1.24419, 0.61 ) }
    dend_26 { pt3dadd( 53.5625, -77.9808, -1.77957, 0.61 ) }
    dend_26 { pt3dadd( 53.5713, -78.0491, -1.79934, 0.61 ) }
    dend_26 { pt3dadd( 53.9359, -80.6064, -2.72057, 0.61 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 41/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 47.5614, -58.9739, 1.78274, 0.61 ) }
    dend_25 { pt3dadd( 48.4291, -61.2193, 1.7465, 0.61 ) }
    dend_25 { pt3dadd( 49.3242, -63.5357, 1.70911, 0.61 ) }
    dend_25 { pt3dadd( 50.4916, -66.5568, 1.66035, 0.61 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 45/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -5.75598, 9.6923, -13.46, 0.98 ) }
    dend_18 { pt3dadd( -8.51331, 8.2223, -17.2652, 0.98 ) }
    dend_18 { pt3dadd( -9.51824, 7.68654, -18.6521, 0.98 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 48/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.75598, 9.6923, -13.46, 0.86 ) }
    dend_15 { pt3dadd( -6.92859, 11.8749, -12.3097, 0.86 ) }
    dend_15 { pt3dadd( -7.99875, 13.9766, -11.2211, 0.86 ) }
    dend_15 { pt3dadd( -8.04926, 14.088, -11.1707, 0.86 ) }
    dend_15 { pt3dadd( -8.70643, 15.6582, -10.518, 0.86 ) }
    dend_15 { pt3dadd( -8.75801, 15.7826, -10.471, 0.86 ) }
    dend_15 { pt3dadd( -9.45468, 17.5555, -9.94653, 0.86 ) }
    dend_15 { pt3dadd( -9.47397, 17.6129, -9.93709, 0.86 ) }
    dend_15 { pt3dadd( -10.0949, 19.4553, -9.84717, 0.86 ) }
    dend_15 { pt3dadd( -10.5893, 21.0128, -9.89736, 0.86 ) }
    dend_15 { pt3dadd( -11.0093, 22.3795, -10.0124, 0.86 ) }
    dend_15 { pt3dadd( -11.7318, 24.8171, -10.3138, 0.86 ) }
    dend_15 { pt3dadd( -12.4401, 27.1623, -10.6973, 0.86 ) }
    dend_15 { pt3dadd( -12.9867, 28.9387, -11.0234, 0.86 ) }
    dend_15 { pt3dadd( -13.9144, 31.7251, -11.6108, 0.86 ) }
    dend_15 { pt3dadd( -13.9385, 31.7907, -11.6261, 0.86 ) }
    dend_15 { pt3dadd( -14.4912, 33.1147, -11.9223, 0.86 ) }
    dend_15 { pt3dadd( -15.3153, 34.7602, -12.2763, 0.86 ) }
    dend_15 { pt3dadd( -15.3451, 34.8122, -12.288, 0.86 ) }
    dend_15 { pt3dadd( -16.2571, 36.2115, -12.666, 0.86 ) }
    dend_15 { pt3dadd( -17.1187, 37.4848, -13.0923, 0.86 ) }
    dend_15 { pt3dadd( -17.9007, 38.7888, -13.5971, 0.86 ) }
    dend_15 { pt3dadd( -18.7007, 40.4344, -14.261, 0.86 ) }
    dend_15 { pt3dadd( -18.8488, 40.8628, -14.4169, 0.86 ) }
    dend_15 { pt3dadd( -19.3006, 42.542, -14.9784, 0.86 ) }
    dend_15 { pt3dadd( -19.6031, 44.3282, -15.457, 0.86 ) }
    dend_15 { pt3dadd( -19.8236, 46.0762, -15.9007, 0.86 ) }
    dend_15 { pt3dadd( -20.0212, 48.2653, -16.4028, 0.86 ) }
    dend_15 { pt3dadd( -20.2159, 51.2596, -16.944, 0.86 ) }
    dend_15 { pt3dadd( -20.2193, 51.3204, -16.9522, 0.86 ) }
    dend_15 { pt3dadd( -20.376, 55.7437, -17.2501, 0.86 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 79/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -4.5827, -47.3413, 7.81326, 0.61 ) }
    dend_9 { pt3dadd( -6.45659, -49.5315, 8.9575, 0.61 ) }
    dend_9 { pt3dadd( -7.49677, -50.8252, 9.76223, 0.61 ) }
    dend_9 { pt3dadd( -8.57845, -52.1504, 10.6123, 0.74 ) }
    dend_9 { pt3dadd( -10.1359, -54.0449, 11.8503, 0.74 ) }
    dend_9 { pt3dadd( -11.7194, -56.0544, 13.026, 0.74 ) }
    dend_9 { pt3dadd( -11.7539, -56.0996, 13.0476, 0.74 ) }
    dend_9 { pt3dadd( -12.6762, -57.3726, 13.7685, 0.74 ) }
    dend_9 { pt3dadd( -13.8733, -59.1842, 14.7915, 0.74 ) }
    dend_9 { pt3dadd( -13.9094, -59.2384, 14.8197, 0.74 ) }
    dend_9 { pt3dadd( -15.2383, -61.2136, 15.2796, 0.74 ) }
    dend_9 { pt3dadd( -16.5704, -63.2753, 15.048, 0.74 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 91/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -4.5827, -47.3413, 7.81326, 1.23 ) }
    dend_2 { pt3dadd( -4.03208, -50.4394, 6.91066, 1.23 ) }
    dend_2 { pt3dadd( -3.61353, -52.7945, 6.22454, 0.98 ) }
    dend_2 { pt3dadd( -3.20546, -55.0906, 5.5556, 0.98 ) }
    dend_2 { pt3dadd( -2.36727, -59.8069, 4.18157, 0.98 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 96/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 50.1027, -15.141, -6.45605, 0.61 ) }
    dend_31 { pt3dadd( 50.5036, -16.3815, -7.47929, 0.61 ) }
    dend_31 { pt3dadd( 51.8349, -18.8324, -9.89863, 0.61 ) }
    dend_31 { pt3dadd( 52.6525, -19.9329, -11.4102, 0.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_31 { pt3dadd( 53.5277, -21.0004, -13.0173, 0.61 ) }
    dend_31 { pt3dadd( 54.2773, -21.8894, -14.2849, 0.61 ) }
    dend_31 { pt3dadd( 55.8513, -23.6346, -16.7749, 0.61 ) }
    dend_31 { pt3dadd( 57.5283, -25.1479, -19.1472, 0.61 ) }
    dend_31 { pt3dadd( 59.64, -26.8259, -21.8007, 0.61 ) }
    dend_31 { pt3dadd( 60.8252, -27.6899, -23.1854, 0.61 ) }
    dend_31 { pt3dadd( 63.6204, -29.5724, -26.1661, 0.61 ) }
    dend_31 { pt3dadd( 65.0817, -30.5631, -27.5499, 0.61 ) }
    dend_31 { pt3dadd( 67.2638, -32.115, -29.2386, 0.61 ) }
    dend_31 { pt3dadd( 68.5483, -32.991, -30.0624, 0.61 ) }
    dend_31 { pt3dadd( 69.5937, -33.6196, -30.595, 0.61 ) }
    dend_31 { pt3dadd( 69.9182, -33.7851, -30.7406, 0.61 ) }
    dend_31 { pt3dadd( 73.1908, -35.3004, -32.0211, 0.61 ) }
    dend_31 { pt3dadd( 76.0025, -36.5971, -33.0135, 0.61 ) }
    dend_31 { pt3dadd( 79.142, -37.9213, -34.0852, 0.61 ) }
    dend_31 { pt3dadd( 81.8015, -38.8831, -35.034, 0.61 ) }
    dend_31 { pt3dadd( 84.3727, -39.6933, -35.9869, 0.61 ) }
    dend_31 { pt3dadd( 86.7561, -40.3476, -36.8718, 0.61 ) }
    dend_31 { pt3dadd( 89.1184, -40.8936, -37.76, 0.61 ) }
    dend_31 { pt3dadd( 91.6974, -41.4995, -38.7428, 0.61 ) }
    dend_31 { pt3dadd( 94.3113, -42.1357, -39.6991, 0.61 ) }
    dend_31 { pt3dadd( 96.9317, -42.7278, -40.6254, 0.61 ) }
    dend_31 { pt3dadd( 98.7927, -43.0992, -41.2638, 0.61 ) }
    dend_31 { pt3dadd( 99.0196, -43.1405, -41.3337, 0.61 ) }
    dend_31 { pt3dadd( 101.518, -43.5899, -41.9815, 0.61 ) }
    dend_31 { pt3dadd( 104.031, -44.1002, -42.2489, 0.61 ) }
    dend_31 { pt3dadd( 107.844, -44.897, -42.4525, 0.61 ) }
    dend_31 { pt3dadd( 107.963, -44.9194, -42.4535, 0.61 ) }
    dend_31 { pt3dadd( 110.511, -45.3458, -42.4158, 0.61 ) }
    dend_31 { pt3dadd( 112.505, -45.6171, -42.3443, 0.61 ) }
    dend_31 { pt3dadd( 117.919, -45.9699, -41.881, 0.61 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 31/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 50.1027, -15.141, -6.45605, 0.61 ) }
    dend_30 { pt3dadd( 52.871, -15.8565, -7.28555, 0.61 ) }
    dend_30 { pt3dadd( 55.3125, -16.7682, -8.04465, 0.61 ) }
    dend_30 { pt3dadd( 55.5393, -16.8425, -8.14875, 0.61 ) }
    dend_30 { pt3dadd( 56.9941, -17.233, -9.29016, 0.61 ) }
    dend_30 { pt3dadd( 57.048, -17.2475, -9.33248, 0.61 ) }
    dend_30 { pt3dadd( 59.7165, -17.9638, -11.4262, 0.61 ) }
    dend_30 { pt3dadd( 61.995, -18.6276, -13.51, 0.61 ) }
    dend_30 { pt3dadd( 64.6126, -19.382, -16.2524, 0.61 ) }
    dend_30 { pt3dadd( 68.9305, -20.4955, -21.0465, 0.61 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 41/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -9.51824, 7.68654, -18.6521, 0.98 ) }
    dend_22 { pt3dadd( -11.3338, 5.54531, -20.2363, 0.98 ) }
    dend_22 { pt3dadd( -12.6143, 3.99513, -21.4395, 0.98 ) }
    dend_22 { pt3dadd( -13.8108, 2.45122, -22.542, 0.98 ) }
    dend_22 { pt3dadd( -15.0827, 0.71714, -23.73, 0.98 ) }
    dend_22 { pt3dadd( -16.2534, -0.939347, -24.9028, 0.74 ) }
    dend_22 { pt3dadd( -17.5625, -2.92433, -26.3503, 0.74 ) }
    dend_22 { pt3dadd( -17.6109, -3.01388, -26.4176, 0.74 ) }
    dend_22 { pt3dadd( -18.1954, -4.35556, -27.4419, 0.74 ) }
    dend_22 { pt3dadd( -18.6794, -5.51641, -28.3368, 0.74 ) }
    dend_22 { pt3dadd( -19.6514, -7.74566, -30.0359, 0.74 ) }
    dend_22 { pt3dadd( -20.8449, -10.1294, -31.6129, 0.74 ) }
    dend_22 { pt3dadd( -22.1711, -12.6059, -32.9527, 0.74 ) }
    dend_22 { pt3dadd( -23.2659, -14.5318, -33.8728, 0.74 ) }
    dend_22 { pt3dadd( -24.3137, -16.2341, -34.5935, 0.74 ) }
    dend_22 { pt3dadd( -25.4139, -17.8549, -35.1249, 0.74 ) }
    dend_22 { pt3dadd( -27.6192, -20.8603, -35.9144, 0.74 ) }
    dend_22 { pt3dadd( -28.7593, -22.2903, -36.2299, 0.74 ) }
    dend_22 { pt3dadd( -29.6105, -23.3117, -36.4447, 0.74 ) }
    dend_22 { pt3dadd( -31.1651, -25.2639, -36.9207, 0.74 ) }
    dend_22 { pt3dadd( -34.3572, -29.6395, -38.1583, 0.74 ) }
    dend_22 { pt3dadd( -35.4629, -31.24, -38.6846, 0.49 ) }
    dend_22 { pt3dadd( -36.5936, -32.9298, -39.3071, 0.49 ) }
    dend_22 { pt3dadd( -37.6799, -34.5501, -39.896, 0.49 ) }
    dend_22 { pt3dadd( -39.3734, -37.1253, -40.7966, 0.49 ) }
    dend_22 { pt3dadd( -40.8945, -39.4989, -41.5952, 0.49 ) }
    dend_22 { pt3dadd( -42.4541, -42.0266, -42.44, 0.49 ) }
    dend_22 { pt3dadd( -43.1588, -43.2043, -42.8003, 0.49 ) }
    dend_22 { pt3dadd( -44.1998, -44.9687, -43.334, 0.49 ) }
    dend_22 { pt3dadd( -44.2362, -45.0277, -43.3503, 0.49 ) }
    dend_22 { pt3dadd( -46.0884, -47.6257, -43.9928, 0.49 ) }
    dend_22 { pt3dadd( -47.6603, -49.635, -44.4713, 0.49 ) }
    dend_22 { pt3dadd( -49.4482, -51.7783, -44.9544, 0.49 ) }
    dend_22 { pt3dadd( -49.6781, -52.0192, -44.9828, 0.49 ) }
    dend_22 { pt3dadd( -51.1826, -53.3855, -44.9597, 0.49 ) }
    dend_22 { pt3dadd( -53.8992, -55.3357, -44.4342, 0.49 ) }
    dend_22 { pt3dadd( -54.5315, -55.6472, -44.1953, 0.49 ) }
    dend_22 { pt3dadd( -55.1912, -55.8632, -43.9315, 0.49 ) }
    dend_22 { pt3dadd( -58.8094, -56.7734, -42.4228, 0.49 ) }
    dend_22 { pt3dadd( -59.0502, -56.8285, -42.3132, 0.49 ) }
    dend_22 { pt3dadd( -61.9491, -57.3557, -40.8139, 0.49 ) }
    dend_22 { pt3dadd( -63.5662, -57.6098, -39.8621, 0.49 ) }
    dend_22 { pt3dadd( -66.1584, -58.0393, -38.3725, 0.49 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 84/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -9.51824, 7.68654, -18.6521, 0.98 ) }
    dend_19 { pt3dadd( -10.9373, 10.3671, -20.6424, 0.98 ) }
    dend_19 { pt3dadd( -11.4335, 11.3045, -21.3385, 0.98 ) }
    dend_19 { pt3dadd( -12.5011, 13.3212, -22.8359, 0.98 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 88/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -20.376, 55.7437, -17.2501, 0.49 ) }
    dend_17 { pt3dadd( -18.6402, 58.1672, -19.8377, 0.49 ) }
    dend_17 { pt3dadd( -17.2413, 60.1204, -21.9233, 0.49 ) }
    dend_17 { pt3dadd( -16.0894, 61.7287, -23.6404, 0.49 ) }
    dend_17 { pt3dadd( -14.9306, 63.3468, -25.3681, 0.49 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 93/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -20.376, 55.7437, -17.2501, 0.49 ) }
    dend_16 { pt3dadd( -20.7567, 57.6113, -18.6087, 0.49 ) }
    dend_16 { pt3dadd( -21.2597, 60.0785, -20.4035, 0.49 ) }
    dend_16 { pt3dadd( -21.6147, 61.8197, -21.6701, 0.49 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 97/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -2.36727, -59.8069, 4.18157, 0.49 ) }
    dend_6 { pt3dadd( -1.30292, -62.3107, 2.71619, 0.49 ) }
    dend_6 { pt3dadd( -0.307493, -64.7284, 1.23335, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_6 { pt3dadd( 0.828327, -67.3484, -0.413094, 0.61 ) }
    dend_6 { pt3dadd( 1.79204, -69.537, -1.7962, 0.61 ) }
    dend_6 { pt3dadd( 2.40015, -71.0074, -2.72267, 0.61 ) }
    dend_6 { pt3dadd( 3.48189, -73.9724, -4.57022, 0.61 ) }
    dend_6 { pt3dadd( 4.19474, -76.4532, -6.15713, 0.61 ) }
    dend_6 { pt3dadd( 4.60435, -78.5786, -7.53866, 0.61 ) }
    dend_6 { pt3dadd( 4.72863, -79.8518, -8.34769, 0.61 ) }
    dend_6 { pt3dadd( 4.64926, -81.7107, -9.51119, 0.61 ) }
    dend_6 { pt3dadd( 4.33248, -83.411, -10.6792, 0.61 ) }
    dend_6 { pt3dadd( 3.77429, -85.3469, -12.1743, 0.61 ) }
    dend_6 { pt3dadd( 3.746, -85.4366, -12.2515, 0.61 ) }
    dend_6 { pt3dadd( 2.7926, -88.167, -14.6848, 0.61 ) }
    dend_6 { pt3dadd( 1.83106, -90.9368, -17.2531, 0.61 ) }
    dend_6 { pt3dadd( 0.859332, -94.001, -20.2271, 0.61 ) }
    dend_6 { pt3dadd( 0.0525378, -96.9956, -23.2531, 0.61 ) }
    dend_6 { pt3dadd( -0.444862, -99.2349, -25.5787, 0.61 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 16/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -2.36727, -59.8069, 4.18157, 0.74 ) }
    dend_3 { pt3dadd( -3.97145, -62.2548, 6.15149, 0.74 ) }
    dend_3 { pt3dadd( -4.66286, -63.3098, 7.00055, 0.74 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 19/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -12.5011, 13.3212, -22.8359, 0.61 ) }
    dend_21 { pt3dadd( -13.6586, 13.7588, -23.9975, 0.61 ) }
    dend_21 { pt3dadd( -14.6807, 14.121, -25.0847, 0.61 ) }
    dend_21 { pt3dadd( -15.5755, 14.3646, -26.0345, 0.61 ) }
    dend_21 { pt3dadd( -15.6603, 14.3857, -26.1314, 0.61 ) }
    dend_21 { pt3dadd( -17.6104, 14.8034, -28.3595, 0.61 ) }
    dend_21 { pt3dadd( -19.4263, 15.1665, -30.4272, 0.61 ) }
    dend_21 { pt3dadd( -21.0118, 15.4556, -32.2107, 0.61 ) }
    dend_21 { pt3dadd( -23.3558, 15.8123, -34.8583, 0.61 ) }
    dend_21 { pt3dadd( -26.8983, 16.3061, -38.9624, 0.61 ) }
    dend_21 { pt3dadd( -28.9503, 16.5845, -41.3777, 0.61 ) }
    dend_21 { pt3dadd( -29.0341, 16.5965, -41.4768, 0.61 ) }
    dend_21 { pt3dadd( -32.3841, 17.1226, -45.3723, 0.49 ) }
    dend_21 { pt3dadd( -35.3375, 17.6611, -48.9972, 0.49 ) }
    dend_21 { pt3dadd( -37.7159, 18.1506, -52.0348, 0.49 ) }
    dend_21 { pt3dadd( -40.6072, 18.77, -55.6622, 0.49 ) }
    dend_21 { pt3dadd( -42.4365, 19.2189, -57.9138, 0.49 ) }
    dend_21 { pt3dadd( -43.3128, 19.4504, -58.9691, 0.49 ) }
    dend_21 { pt3dadd( -47.4195, 20.6834, -63.5217, 0.49 ) }
    dend_21 { pt3dadd( -47.6787, 20.7692, -63.7729, 0.49 ) }
    dend_21 { pt3dadd( -49.9209, 21.6169, -65.5339, 0.49 ) }
    dend_21 { pt3dadd( -51.6489, 22.3417, -66.6272, 0.49 ) }
    dend_21 { pt3dadd( -51.9239, 22.4713, -66.7587, 0.49 ) }
    dend_21 { pt3dadd( -54.7104, 23.935, -67.6066, 0.49 ) }
    dend_21 { pt3dadd( -54.8222, 24.0017, -67.6199, 0.49 ) }
    dend_21 { pt3dadd( -57.6362, 25.847, -67.8401, 0.49 ) }
    dend_21 { pt3dadd( -57.6936, 25.888, -67.8424, 0.49 ) }
    dend_21 { pt3dadd( -60.7289, 28.154, -67.7804, 0.49 ) }
    dend_21 { pt3dadd( -62.9172, 29.8496, -67.6196, 0.49 ) }
    dend_21 { pt3dadd( -63.3437, 30.2097, -67.5632, 0.49 ) }
    dend_21 { pt3dadd( -65.9499, 32.5855, -66.9529, 0.49 ) }
    dend_21 { pt3dadd( -65.9932, 32.6258, -66.9396, 0.49 ) }
    dend_21 { pt3dadd( -67.5562, 34.1394, -66.4149, 0.49 ) }
    dend_21 { pt3dadd( -67.6891, 34.2824, -66.3611, 0.49 ) }
    dend_21 { pt3dadd( -69.9975, 37.0097, -65.39, 0.49 ) }
    dend_21 { pt3dadd( -71.6794, 39.0819, -64.5773, 0.49 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 55/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -12.5011, 13.3212, -22.8359, 0.74 ) }
    dend_20 { pt3dadd( -10.9115, 13.5417, -27.2174, 0.74 ) }
    dend_20 { pt3dadd( -9.73857, 13.3748, -30.5159, 0.74 ) }
    dend_20 { pt3dadd( -7.66157, 12.5278, -36.6194, 0.74 ) }
    dend_20 { pt3dadd( -5.53774, 11.3315, -42.9794, 0.61 ) }
    dend_20 { pt3dadd( -4.26842, 10.6165, -46.7804, 0.61 ) }
    dend_20 { pt3dadd( -3.03089, 9.91942, -50.4863, 0.61 ) }
    dend_20 { pt3dadd( -2.06128, 9.07489, -53.1396, 0.61 ) }
    dend_20 { pt3dadd( -1.18929, 8.02851, -55.4354, 0.61 ) }
    dend_20 { pt3dadd( -1.12223, 7.86759, -55.6653, 0.61 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 65/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -0.444862, -99.2349, -25.5787, 0.61 ) }
    dend_8 { pt3dadd( -0.150192, -101.252, -25.7568, 0.61 ) }
    dend_8 { pt3dadd( 0.288419, -104.766, -26.0678, 0.61 ) }
    dend_8 { pt3dadd( 0.296397, -104.837, -26.0748, 0.61 ) }
    dend_8 { pt3dadd( 0.461235, -106.196, -26.2179, 0.61 ) }
    dend_8 { pt3dadd( 0.495293, -106.472, -26.2469, 0.61 ) }
    dend_8 { pt3dadd( 0.702773, -108.099, -26.4234, 0.61 ) }
    dend_8 { pt3dadd( 0.745935, -108.385, -26.4697, 0.61 ) }
    dend_8 { pt3dadd( 1.14738, -110.786, -26.9354, 0.61 ) }
    dend_8 { pt3dadd( 1.22036, -111.151, -27.0307, 0.61 ) }
    dend_8 { pt3dadd( 1.4876, -112.327, -27.3889, 0.61 ) }
    dend_8 { pt3dadd( 1.53201, -112.539, -27.4654, 0.61 ) }
    dend_8 { pt3dadd( 2.00586, -115.562, -28.7425, 0.61 ) }
    dend_8 { pt3dadd( 2.02493, -115.732, -28.8205, 0.61 ) }
    dend_8 { pt3dadd( 2.16554, -119.099, -30.4435, 0.61 ) }
    dend_8 { pt3dadd( 2.16481, -119.21, -30.4971, 0.61 ) }
    dend_8 { pt3dadd( 2.03167, -121.893, -31.7821, 0.61 ) }
    dend_8 { pt3dadd( 1.82046, -124.057, -32.7617, 0.61 ) }
    dend_8 { pt3dadd( 1.80999, -124.122, -32.7902, 0.61 ) }
    dend_8 { pt3dadd( 1.34899, -126.65, -33.8608, 0.61 ) }
    dend_8 { pt3dadd( 1.3229, -126.771, -33.9085, 0.61 ) }
    dend_8 { pt3dadd( 1.09343, -127.919, -34.3398, 0.61 ) }
    dend_8 { pt3dadd( 0.956048, -128.74, -34.6338, 0.61 ) }
    dend_8 { pt3dadd( 0.7288, -130.019, -35.2471, 0.61 ) }
    dend_8 { pt3dadd( 0.643056, -130.427, -35.5202, 0.61 ) }
    dend_8 { pt3dadd( 0.354024, -131.861, -36.8184, 0.61 ) }
    dend_8 { pt3dadd( 0.341786, -131.956, -36.9143, 0.61 ) }
    dend_8 { pt3dadd( 0.227669, -134.429, -39.5096, 0.61 ) }
    dend_8 { pt3dadd( 0.228745, -136.897, -42.1665, 0.61 ) }
    dend_8 { pt3dadd( 0.580646, -140.045, -45.4574, 0.61 ) }
    dend_8 { pt3dadd( 1.16104, -144.405, -50.1052, 0.61 ) }
    dend_8 { pt3dadd( 1.63047, -147.221, -53.1693, 0.61 ) }
    dend_8 { pt3dadd( 2.12311, -149.579, -55.7548, 0.61 ) }
    dend_8 { pt3dadd( 2.13519, -149.619, -55.799, 0.61 ) }
    dend_8 { pt3dadd( 3.82717, -153.522, -59.7619, 0.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 0/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -0.444862, -99.2349, -25.5787, 0.61 ) }
    dend_7 { pt3dadd( -3.03486, -97.0722, -25.9187, 0.61 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 2/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -4.66286, -63.3098, 7.00055, 0.74 ) }
    dend_5 { pt3dadd( -6.05934, -63.0586, 6.8175, 0.74 ) }
    dend_5 { pt3dadd( -7.88826, -62.7297, 6.57778, 0.74 ) }
    dend_5 { pt3dadd( -11.1583, -62.1416, 6.14916, 0.49 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 6/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -4.66286, -63.3098, 7.00055, 0.74 ) }
    dend_4 { pt3dadd( -5.83728, -64.7604, 7.1168, 0.74 ) }
    dend_4 { pt3dadd( -6.91911, -66.0966, 7.2239, 0.74 ) }
    dend_4 { pt3dadd( -7.91306, -67.3243, 7.32229, 0.74 ) }
    dend_4 { pt3dadd( -8.05978, -67.5055, 7.33681, 0.74 ) }
    dend_4 { pt3dadd( -9.25764, -68.9851, 7.45539, 0.74 ) }
    dend_4 { pt3dadd( -11.0732, -71.2275, 7.63511, 0.74 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_23, dend_12, dend_11, dend_0, dend_27, dend_24, dend_14, dend_13, dend_10, dend_1, dend_29, dend_28, dend_26, dend_25, dend_18, dend_15, dend_9, dend_2, dend_31, dend_30, dend_22, dend_19, dend_17, dend_16, dend_6, dend_3, dend_21, dend_20, dend_8, dend_7, dend_5, dend_4]}
    ModelViewParmSubset_2 = new SectionList()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_23, dend_12, dend_11, dend_0, dend_27, dend_24, dend_14, dend_13, dend_10, dend_1, dend_29, dend_28, dend_26, dend_25, dend_18, dend_15, dend_9, dend_2, dend_31, dend_30, dend_22, dend_19, dend_17, dend_16, dend_6, dend_3, dend_21, dend_20, dend_8, dend_7, dend_5, dend_4]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_11 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_24 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_13 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_1 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_15 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_31 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_22 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_6 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_21 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_12 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_14 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_10 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_18 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_27 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_32 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_19 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_29 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_20 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_3 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_9 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_16 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_5 OneSecGrp_SectionRef_35.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_17 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_4 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_25 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_26 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_7 OneSecGrp_SectionRef_34.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, axon_0, axon_0, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_11 nseg = 5
    dend_24 nseg = 3
    dend_13 nseg = 3
    dend_1 nseg = 3
    dend_15 nseg = 3
    dend_31 nseg = 5
    dend_22 nseg = 5
    dend_6 nseg = 3
    dend_21 nseg = 5
    dend_8 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L1_SLAC_d22d584760_0_0


