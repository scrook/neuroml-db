// Cell: cIR216_L6_MC_a405be0ec4_0_0
/*
{
  "id" : "cIR216_L6_MC_a405be0ec4_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.604345, 14.9148, -0.0137517, 2.24895", "0.567996, 13.358, -0.0124092, 3.66148", "0.531648, 11.8012, -0.0110666, 5.24119", "0.495299, 10.2445, -0.00972411, 6.93007", "0.458951, 8.68766, -0.00838158, 8.33529", "0.422602, 7.13086, -0.00703904, 9.38398", "0.386254, 5.57407, -0.00569651, 10.3974", "0.349905, 4.01727, -0.00435398, 11.1281", "0.313557, 2.46048, -0.00301145, 11.4353", "0.277208, 0.903681, -0.00166892, 10.9538", "0.240859, -0.653114, -3.26385E-4, 10.395", "0.204511, -2.20991, 0.00101615, 9.83019", "0.168162, -3.7667, 0.00235868, 9.07757", "0.131814, -5.3235, 0.00370121, 8.19272", "0.0954654, -6.8803, 0.00504374, 7.59378", "0.0591169, -8.43709, 0.00638627, 7.0332", "0.0227684, -9.99389, 0.00772881, 6.30438", "-0.0135801, -11.5507, 0.00907134, 5.3987", "-0.0499286, -13.1075, 0.0104139, 4.49303", "-0.0862771, -14.6643, 0.0117564, 3.43597", "-0.122626, -16.2211, 0.0130989, 2.07305" ]
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "0.599542, 14.9694, -0.0268013, 2.43", "0.599542, 14.9694, -0.0268013, 2.43", "0.570311, 16.0694, -0.0163575, 2.5", "0.536977, 17.3237, -0.00444804, 2.8", "0.515091, 18.1473, 0.00337142, 3.02", "0.495589, 18.8811, 0.0103386, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884478442963
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-1.69046, 11.2494, -14.5568, 1.11", "-1.75224, 11.6212, -14.9909, 1.11", "-1.78056, 12.4406, -15.7169, 1.11", "-1.77697, 13.1126, -16.3698, 1.11", "-1.78825, 13.7071, -17.0043, 1.11", "-1.81942, 14.5452, -17.9106, 1.11", "-1.85451, 15.489, -18.931, 1.11", "-1.84547, 16.4848, -19.9958, 1.11", "-1.76799, 18.0405, -21.5777, 1.11", "-1.71464, 18.9677, -22.5029, 1.11", "-1.70614, 19.6747, -23.2387, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884478442963
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "4.02954, 9.89942, -5.4068, 0.88", "4.41444, 10.3563, -5.56563, 0.88", "5.27166, 11.4035, -5.95683, 0.88", "6.26022, 12.619, -6.39914, 0.88", "7.31781, 13.9671, -6.85894, 0.88", "8.19562, 15.1302, -7.27492, 0.88", "9.53946, 16.933, -7.95355, 0.88", "10.5029, 18.2332, -8.48964, 0.88", "11.283, 19.2561, -8.95461, 0.88", "11.9359, 20.0617, -9.38734, 0.88", "12.597, 20.7986, -9.8264, 0.88", "13.223, 21.4103, -10.2079, 0.88", "14.04, 22.0788, -10.6178, 0.88", "14.987, 22.7111, -11.0736, 0.88", "16.185, 23.3993, -11.6087, 0.88", "17.1273, 23.8916, -11.9697, 0.88", "17.9702, 24.3336, -12.2496, 0.88", "18.7549, 24.7743, -12.4957, 0.81", "19.5363, 25.2414, -12.7391, 0.74", "20.3664, 25.7271, -12.9989, 0.74", "21.6393, 26.4485, -13.4237, 0.74", "22.2189, 26.7868, -13.6581, 0.74", "22.9199, 27.1889, -13.9513, 0.74", "24.1591, 27.8412, -14.4272, 0.74", "25.2871, 28.3692, -14.8297, 0.74", "26.3103, 28.7789, -15.1785, 0.74", "27.5362, 29.1619, -15.5389, 0.74", "28.997, 29.5241, -15.8935, 0.74", "31.1653, 29.98, -16.3931, 0.66", "32.6754, 30.2795, -16.7165, 0.66", "34.2301, 30.6188, -17.066, 0.66", "36.8939, 31.2935, -17.6567, 0.66", "38.692, 31.815, -18.0369, 0.66", "39.984, 32.2779, -18.358, 0.66", "41.0709, 32.7697, -18.6595, 0.59", "42.4557, 33.5292, -19.0549, 0.59", "43.5173, 34.2244, -19.4208, 0.59", "44.5871, 35.0214, -19.8711, 0.59", "46.3399, 36.3005, -20.6183, 0.59", "47.0022, 36.7507, -20.8785, 0.59", "47.4227, 37.0152, -21.0374, 0.59", "49.1636, 38.0106, -21.6555, 0.59", "50.7532, 38.8851, -22.26, 0.59", "51.7475, 39.4313, -22.6694, 0.59", "53.23, 40.2431, -23.2752, 0.59", "54.8762, 41.1447, -23.9396, 0.59", "55.9316, 41.7373, -24.3602, 0.59", "57.1929, 42.4873, -24.8342, 0.59", "58.8075, 43.5166, -25.4356, 0.59", "59.8213, 44.168, -25.7946, 0.59", "61.6171, 45.3029, -26.3952, 0.59", "63.4086, 46.4276, -26.9527, 0.59", "64.5615, 47.1484, -27.2867, 0.59", "67.6521, 49.0437, -28.127, 0.59", "69.1629, 49.9426, -28.5246, 0.59", "69.9582, 50.3932, -28.73, 0.59", "71.4433, 51.2004, -29.112, 0.59", "73.4619, 52.2335, -29.6223, 0.59", "74.1531, 52.5569, -29.7962, 0.59", "76.6329, 53.6096, -30.3856, 0.59", "78.4768, 54.4093, -30.8043, 0.59", "79.2277, 54.7344, -30.9498, 0.59", "79.8515, 55.0148, -31.0587, 0.59", "80.8534, 55.4972, -31.2138, 0.59", "81.7573, 55.9657, -31.335, 0.59", "83.5627, 56.9577, -31.5435, 0.52", "85.0104, 57.8, -31.6956, 0.52", "86.5555, 58.7295, -31.8316, 0.52", "88.464, 59.8895, -31.9824, 0.52", "90.7297, 61.2941, -32.1419, 0.52", "92.6498, 62.5209, -32.2505, 0.52", "93.6418, 63.1792, -32.2815, 0.52", "95.2991, 64.3438, -32.3021, 0.52", "97.1616, 65.7427, -32.2857, 0.52", "98.0175, 66.4274, -32.2688, 0.52", "99.8503, 67.9569, -32.2261, 0.52", "102.126, 69.8628, -32.1725, 0.52", "103.772, 71.2613, -32.1282, 0.52", "104.884, 72.2175, -32.0962, 0.52", "106.053, 73.2094, -32.0339, 0.52", "107.536, 74.4069, -31.9152, 0.52", "110.74, 76.9112, -31.6536, 0.52", "113.613, 79.1519, -31.4528, 0.52", "114.441, 79.7981, -31.4, 0.52", "116.535, 81.4929, -31.2768, 0.52", "118.026, 82.7739, -31.2051, 0.52", "123.495, 87.7429, -30.9934, 0.52", "126.095, 90.2221, -30.9679, 0.52", "126.857, 90.9644, -30.9926, 0.52", "128.323, 92.4344, -31.099, 0.52", "131.523, 95.7544, -31.4841, 0.52", "131.94, 96.2008, -31.5489, 0.52", "134.166, 98.5905, -31.9338, 0.52", "136.035, 100.521, -32.1934, 0.52", "137.767, 102.241, -32.3775, 0.52", "139.271, 103.676, -32.4912, 0.52", "140.18, 104.532, -32.5394, 0.52", "144.09, 108.198, -32.6623, 0.52", "146.973, 110.97, -32.7027, 0.52", "149.763, 113.691, -32.7213, 0.44", "152.885, 116.753, -32.7431, 0.44", "153.971, 117.816, -32.748, 0.44", "155.675, 119.483, -32.7529, 0.44", "157.803, 121.613, -32.7979, 0.44", "158.954, 122.823, -32.8928, 0.44", "159.89, 123.868, -32.9941, 0.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884478442963,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.310458, -16.2806, 2.5432, 0.81", "0.655409, -17.932, 2.71348, 0.81", "1.26307, -18.8628, 2.77943, 0.81", "2.04375, -19.9755, 2.83429, 0.81", "2.99995, -21.3315, 2.86177, 0.81", "3.46295, -21.9702, 2.93063, 0.74", "4.3856, -23.1795, 3.16197, 0.74", "5.53821, -24.4034, 3.51474, 0.74", "6.30026, -25.1329, 3.76709, 0.59", "7.15605, -25.8832, 4.08266, 0.59", "9.09655, -27.4054, 4.85554, 0.59", "10.1118, -28.1342, 5.2606, 0.59", "12.1739, -29.47, 6.0547, 0.59", "13.3302, -30.1573, 6.48925, 0.59", "14.6673, -30.8787, 6.89301, 0.59", "15.6395, -31.3632, 7.16077, 0.59", "16.3997, -31.731, 7.32814, 0.59", "18.4747, -32.7529, 7.78673, 0.59", "19.8979, -33.4959, 8.18856, 0.59", "20.8015, -33.9763, 8.46362, 0.59", "22.7124, -35.0197, 9.04958, 0.59", "23.9973, -35.7764, 9.50117, 0.59", "24.4909, -36.0935, 9.70885, 0.59", "25.7966, -37.057, 10.4087, 0.59", "26.7401, -37.8366, 11.025, 0.59", "27.4705, -38.4653, 11.5228, 0.59", "28.9997, -39.9193, 12.5265, 0.59", "29.6951, -40.6575, 13.0292, 0.59", "30.5948, -41.7207, 13.7479, 0.59", "31.4167, -42.7885, 14.4452, 0.59", "31.9084, -43.491, 14.9117, 0.59", "32.5372, -44.3883, 15.5188, 0.59", "33.0241, -45.014, 15.9507, 0.59", "33.637, -45.7044, 16.4097, 0.59", "34.5582, -46.6519, 16.9794, 0.59", "35.1458, -47.2693, 17.3355, 0.59", "35.9924, -48.1708, 17.8311, 0.59", "36.8961, -49.0794, 18.3257, 0.59", "37.8316, -50.0201, 18.7806, 0.59", "38.4701, -50.6703, 19.0697, 0.59", "39.6013, -51.9036, 19.5734, 0.59", "40.3296, -52.7471, 19.8817, 0.59", "40.7414, -53.267, 20.0508, 0.59", "41.5847, -54.4016, 20.4155, 0.59", "49.4153, -59.0304, 24.5695, 0.59", "56.3333, -64.3136, 29.4919, 0.59", "62.751, -70.1461, 34.4713, 0.59", "68.9934, -76.0942, 39.5361, 0.59", "73.8081, -83.1222, 44.7731, 0.59", "77.8741, -90.1951, 50.5561, 0.59", "81.0364, -97.038, 57.1268, 0.59", "83.8184, -102.947, 64.6996, 0.59", "86.2129, -108.057, 72.955, 0.59", "87.8563, -112.431, 81.7965, 0.59", "90.1772, -116.827, 90.4732, 0.59", "92.987, -121.877, 98.6345, 0.59", "95.426, -126.103, 107.363, 0.59", "97.1107, -131.147, 115.832, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884478442963,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.980458, -15.2106, 10.9432, 0.88", "-2.02769, -16.6827, 11.6874, 0.88", "-2.46146, -17.3736, 12.0036, 0.88", "-3.17908, -18.6816, 12.5505, 0.88", "-3.50812, -19.3619, 12.8097, 0.88", "-4.11034, -20.681, 13.2581, 0.88", "-4.47435, -21.5562, 13.5355, 0.88", "-4.774, -22.4592, 13.7863, 0.88", "-5.10802, -23.5986, 14.0719, 0.88", "-5.29241, -24.3549, 14.2658, 0.88", "-5.53418, -25.6002, 14.6213, 0.88", "-5.70698, -26.9702, 15.1199, 0.88", "-5.75008, -27.5284, 15.3754, 0.88", "-5.77054, -28.27, 15.813, 0.88", "-5.75675, -28.9132, 16.2783, 0.88", "-5.70351, -29.7435, 16.9694, 0.88", "-5.55926, -30.9049, 18.0201, 0.88", "-5.41845, -31.6849, 18.7586, 0.88", "-5.26215, -32.4122, 19.444, 0.88", "-5.15702, -32.9588, 19.9227, 0.88", "-5.10091, -33.3801, 20.2535, 0.88", "-5.09626, -34.2415, 20.8208, 0.88", "-5.2011, -34.9559, 21.1949, 0.88", "-5.41854, -35.7257, 21.5084, 0.88", "-5.77046, -36.6224, 21.8459, 0.88", "-6.13337, -37.3277, 22.1065, 0.88", "-6.79313, -38.3859, 22.4787, 0.88", "-7.69375, -39.5803, 22.866, 0.88", "-8.36263, -40.3565, 23.1073, 0.88", "-9.09978, -41.1686, 23.3565, 0.88", "-9.73781, -41.8454, 23.5788, 0.88", "-10.557, -42.7051, 23.8722, 0.88", "-11.6387, -43.8024, 24.2451, 0.88", "-12.3246, -44.4514, 24.4207, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884478442963
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.40046, -16.5606, 0.893199, 1.47", "-1.39648, -17.0194, 0.893199, 1.47", "-1.38338, -18.531, 0.893199, 1.47", "-1.37941, -18.9898, 0.893199, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884478442963
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.122626, -16.2211, 0.0130989, 0.501649", "-0.472755, -31.217, 0.0130989, 0.501649", "-0.822885, -46.2129, 0.0130989, 0.501649" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "0.495589, 18.8811, 0.0103386, 1.03", "-0.479383, 20.1456, 1.31696, 1.03", "-1.31916, 21.2455, 2.33897, 1.25", "-1.71017, 21.746, 2.75512, 1.25", "-2.23879, 22.4054, 3.26929, 1.4", "-2.81732, 23.127, 3.832, 1.25", "-3.30926, 23.7407, 4.31048, 1.4", "-3.85117, 24.4233, 4.7713, 1.55", "-4.3703, 25.0624, 5.12213, 1.92", "-4.73219, 25.5001, 5.34694, 2.14" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "0.495589, 18.8811, 0.0103386, 1.62", "1.28164, 20.916, -0.226657, 1.62", "1.65287, 21.7255, -0.32049, 1.62", "2.21796, 22.8714, -0.46239, 1.92", "2.83364, 23.9559, -0.595313, 2.06", "3.43265, 24.8758, -0.704736, 2.43", "3.70409, 25.2523, -0.74784, 2.43", "4.91135, 26.6763, -0.929536, 1.11", "5.74823, 27.5232, -1.03297, 1.11", "6.70151, 28.3359, -1.11923, 1.25", "7.64992, 29.0435, -1.19804, 1.25", "8.34437, 29.5143, -1.25064, 1.4", "9.41992, 30.2088, -1.32773, 1.03", "10.3125, 30.7882, -1.38036, 1.03", "11.1799, 31.3766, -1.4432, 1.18", "11.8009, 31.8372, -1.46174, 1.47", "12.5254, 32.3753, -1.45002, 1.62", "12.9798, 32.6888, -1.42536, 1.62", "14.289, 33.4878, -1.32298, 1.11", "15.3455, 34.1081, -1.23342, 1.11", "16.8071, 34.9912, -1.10633, 0.88", "17.9958, 35.737, -1.00499, 0.88", "18.906, 36.3353, -0.90654, 0.88", "20.3522, 37.2689, -0.740315, 1.11", "20.9274, 37.6257, -0.674435, 1.11", "22.1958, 38.4287, -0.534956, 0.96", "23.592, 39.4308, -0.487805, 1.33", "24.2598, 40.0279, -0.450982, 1.62" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-1.70614, 19.6747, -23.2387, 0.52", "0.710096, 19.8633, -24.7969, 0.52", "1.9842, 20.128, -25.5101, 0.52", "3.12391, 20.5079, -26.0759, 0.52", "4.45614, 21.0339, -26.7188, 0.52", "5.54242, 21.4793, -27.264, 0.52", "7.19227, 22.1839, -28.2711, 0.52", "7.9856, 22.591, -28.8849, 0.52", "8.76071, 23.0921, -29.6114, 0.52", "9.3653, 23.5207, -30.2289, 0.52", "10.4376, 24.3669, -31.3424, 0.52", "12.4319, 25.9679, -33.3783, 0.52", "14.0687, 27.2437, -34.9422, 0.52", "15.8846, 28.6621, -36.718, 0.52", "16.7935, 29.3452, -37.6022, 0.52", "18.7315, 30.6587, -39.3626, 0.52", "19.6226, 31.2157, -40.132, 0.52", "21.7157, 32.3807, -41.8365, 0.52", "25.2683, 34.1535, -44.7216, 0.52", "26.673, 34.7729, -45.9153, 0.52", "29.1135, 35.7765, -48.0761, 0.52", "30.3984, 36.2601, -49.31, 0.52", "31.7303, 36.7951, -50.7072, 0.52", "32.8738, 37.2853, -51.9604, 0.52", "33.591, 37.6121, -52.6998, 0.52", "34.9872, 38.3075, -54.136, 0.52", "36.8483, 39.2739, -56.0054, 0.52", "37.8951, 39.7828, -56.9904, 0.52", "39.4232, 40.5029, -58.3831, 0.52", "40.8564, 41.143, -59.6363, 0.52", "42.3391, 41.8005, -60.8522, 0.52", "43.0953, 42.155, -61.4147, 0.52", "44.1967, 42.7219, -62.1635, 0.52", "45.7523, 43.5881, -63.3278, 0.52", "47.1148, 44.43, -64.4921, 0.52", "48.0801, 45.0596, -65.4289, 0.52", "49.002, 45.6916, -66.4688, 0.52", "50.1821, 46.471, -67.8484, 0.44", "51.8531, 47.4561, -69.6792, 0.44", "52.5197, 47.8062, -70.4063, 0.44", "53.8011, 48.4089, -71.8726, 0.44", "54.9356, 48.8679, -73.1809, 0.44", "56.5483, 49.4517, -74.942, 0.44", "58.5384, 50.1196, -76.9128, 0.44", "59.3073, 50.3684, -77.5568, 0.44", "60.2711, 50.6989, -78.2279, 0.44", "62.0123, 51.3412, -79.2637, 0.44", "63.9589, 52.1114, -80.2663, 0.44", "65.7308, 52.8076, -81.0617, 0.44", "67.8335, 53.6249, -81.8594, 0.44", "71.041, 54.8592, -82.9446, 0.44", "72.0142, 55.2295, -83.2336, 0.44", "74.0181, 55.9449, -83.751, 0.44", "77.0331, 56.9246, -84.4313, 0.44", "79.2751, 57.6232, -84.9834, 0.44", "80.1065, 57.8798, -85.238, 0.44", "81.8297, 58.383, -85.8781, 0.44", "84.1415, 59.0908, -86.7943, 0.44", "85.0363, 59.3718, -87.166, 0.44", "87.2265, 60.0943, -88.1112, 0.44", "88.5007, 60.454, -88.6884, 0.44", "89.6815, 60.7447, -89.1984, 0.44", "91.1663, 61.0311, -89.7841, 0.44", "92.9883, 61.3253, -90.4744, 0.44", "94.5396, 61.5171, -91.0394, 0.44", "96.0481, 61.6076, -91.5333, 0.44", "96.9655, 61.6025, -91.8796, 0.44", "99.5211, 61.4689, -93.0663, 0.44", "100.964, 61.3612, -93.8951, 0.44", "102.275, 61.2807, -94.8194, 0.44", "103.287, 61.2146, -95.5987, 0.44", "105.574, 61.0901, -97.4844, 0.44", "106.903, 61.0009, -98.7057, 0.44", "107.517, 60.9564, -99.3558, 0.44", "108.884, 60.8616, -100.745, 0.44" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.70614, 19.6747, -23.2387, 0.74", "-2.17278, 19.4563, -23.8805, 0.74", "-2.83843, 19.2584, -24.8129, 0.74", "-3.51138, 19.1748, -25.7871, 0.74", "-4.24551, 19.1998, -26.9219, 0.74", "-4.81053, 19.3166, -27.8251, 0.74", "-5.39825, 19.5282, -28.8299, 0.74", "-5.98623, 19.9056, -29.952, 0.74", "-6.41889, 20.2716, -30.7999, 0.74", "-6.94848, 20.8576, -31.8714, 0.74", "-7.43139, 21.5334, -32.9045, 0.74", "-7.85119, 22.2795, -33.9355, 0.74", "-8.16933, 22.9798, -34.825, 0.74" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-12.3246, -44.4514, 24.4207, 0.52", "-12.314, -45.3565, 25.0366, 0.52", "-12.3648, -46.6024, 25.8105, 0.52", "-12.3782, -47.4297, 26.2989, 0.52", "-12.3768, -48.0816, 26.6521, 0.52", "-12.3593, -49.2412, 27.2197, 0.52", "-12.3496, -50.3804, 27.7203, 0.52", "-12.3926, -51.3959, 28.1467, 0.52", "-12.4332, -52.1021, 28.4055, 0.52", "-12.4673, -52.9267, 28.6897, 0.52", "-12.4667, -53.77, 28.9091, 0.52", "-12.3827, -54.7521, 29.0627, 0.52" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-12.3246, -44.4514, 24.4207, 0.74", "-13.0861, -44.9973, 24.6303, 0.74", "-14.1919, -45.7315, 24.8893, 0.74", "-15.9153, -46.7506, 25.2717, 0.74", "-16.6829, -47.1508, 25.4316, 0.74", "-17.7321, -47.637, 25.6306, 0.74", "-18.7174, -48.0614, 25.8181, 0.52", "-19.6004, -48.3884, 25.985, 0.52", "-20.4505, -48.6252, 26.1273, 0.52", "-21.4532, -48.8237, 26.2969, 0.52", "-22.5484, -49.0179, 26.4944, 0.52", "-23.5369, -49.1994, 26.6759, 0.52", "-24.6691, -49.4314, 26.8611, 0.52", "-25.9687, -49.7303, 27.1077, 0.52", "-27.3026, -50.0867, 27.3813, 0.52", "-28.406, -50.3886, 27.6126, 0.52", "-29.5166, -50.7016, 27.839, 0.52", "-30.45, -50.938, 28.0137, 0.52", "-32.3488, -51.3492, 28.3546, 0.52", "-33.5468, -51.5462, 28.5803, 0.52", "-35.2859, -51.7487, 28.9046, 0.52", "-36.3415, -51.8425, 29.1009, 0.52", "-37.5086, -51.9109, 29.3195, 0.52", "-39.2776, -51.9649, 29.6368, 0.52", "-40.8122, -51.9803, 29.8744, 0.52", "-41.6923, -51.986, 30.0285, 0.52", "-43.2692, -52.017, 30.3407, 0.52", "-44.4307, -52.0556, 30.5943, 0.52", "-45.9032, -52.149, 30.92, 0.52", "-47.1123, -52.195, 31.1665, 0.52", "-47.9177, -52.1892, 31.3074, 0.52", "-48.4544, -52.172, 31.402, 0.52", "-49.063, -52.1381, 31.5078, 0.52", "-51.0954, -52.0259, 31.8469, 0.52", "-53.1508, -51.9361, 32.1621, 0.52", "-54.7157, -51.8927, 32.3858, 0.52", "-56.1019, -51.8663, 32.5745, 0.52", "-56.8405, -51.8615, 32.6737, 0.52", "-57.3838, -51.8704, 32.7464, 0.52", "-58.066, -51.9038, 32.8522, 0.52", "-58.9438, -51.9699, 32.9908, 0.52", "-59.3786, -52.0002, 33.0693, 0.52", "-60.4415, -52.0412, 33.2576, 0.52", "-61.6928, -52.0455, 33.4506, 0.52", "-63.3977, -52.0191, 33.7215, 0.52", "-64.3449, -51.9835, 33.875, 0.52", "-65.3731, -51.9309, 34.041, 0.52", "-66.458, -51.8819, 34.2166, 0.52", "-68.5231, -51.8217, 34.5477, 0.52", "-77.3641, -54.572, 38.3257, 0.52", "-85.4322, -58.425, 42.8046, 0.52", "-93.5767, -63.0809, 46.2673, 0.52", "-100.93, -68.6104, 50.1844, 0.52", "-109.102, -73.7774, 52.737, 0.52", "-116.06, -79.51, 57.0645, 0.52", "-122.317, -85.0685, 62.5374, 0.52" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.37941, -18.9898, 0.893199, 1.03", "-0.922363, -22.052, -0.821654, 1.03", "-0.701424, -23.5323, -1.65063, 1.03", "-0.428251, -25.3625, -2.6756, 1.03", "-0.192021, -26.9453, -3.56195, 0.88", "-0.105617, -27.5242, -3.88615, 0.88" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.37941, -18.9898, 0.893199, 1.47", "-1.55904, -20.9381, 0.944292, 1.47", "-1.81133, -24.3881, 1.00142, 1.47", "-1.94804, -26.6121, 1.028, 1.33", "-2.06549, -28.7347, 1.04708, 1.18", "-2.13146, -30.3827, 1.05801, 1.03", "-2.21677, -32.9391, 1.05834, 1.03", "-2.25949, -35.8048, 1.04298, 1.03", "-2.25565, -36.8959, 1.03269, 1.03", "-2.22955, -38.5192, 1.00518, 1.03", "-2.17593, -41.2588, 0.944407, 1.03", "-2.15373, -42.5452, 0.910821, 1.03", "-2.1273, -43.3508, 0.90949, 1.03", "-2.01768, -45.1164, 1.014, 1.25", "-1.86603, -47.3053, 1.25465, 1.18", "-1.76373, -49.1107, 1.53717, 1.11", "-1.73781, -50.8268, 1.90316, 1.11", "-1.75634, -52.2995, 2.27288, 1.03", "-1.85493, -54.2766, 2.80262, 1.03", "-2.01274, -55.8698, 3.2521, 1.03", "-2.23119, -57.6803, 3.769, 1.03", "-2.44776, -59.4459, 4.24394, 1.03", "-2.55709, -60.3552, 4.4626, 1.03", "-2.72418, -61.9589, 4.75966, 1.03", "-2.85737, -63.5806, 4.95321, 1.03", "-2.89396, -64.7699, 5.08851, 1.03", "-2.85982, -65.9207, 5.2096, 1.03", "-2.77742, -66.8971, 5.28955, 1.03", "-2.59813, -68.6354, 5.43534, 1.18", "-2.32135, -70.716, 5.61263, 1.18" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.822885, -46.2129, 0.0130989, 0.501649", "-1.17301, -61.2088, 0.0130989, 0.501649", "-1.52314, -76.2048, 0.0130989, 0.501649" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-4.73219, 25.5001, 5.34694, 0.96", "-6.31155, 26.1358, 5.35686, 0.96", "-7.39925, 26.5877, 5.35626, 0.96", "-8.49698, 27.0565, 5.34593, 0.81", "-9.09586, 27.322, 5.35082, 0.81", "-9.78647, 27.6303, 5.38706, 0.96", "-10.5631, 27.9493, 5.44811, 0.96", "-11.1243, 28.1607, 5.51237, 0.96", "-11.8573, 28.4189, 5.62886, 0.88", "-12.4753, 28.6153, 5.7157, 0.88", "-13.4697, 28.8813, 5.81085, 1.03", "-14.9269, 29.2028, 5.84718, 1.25", "-15.6696, 29.3448, 5.81881, 1.25", "-16.481, 29.4768, 5.73388, 1.03", "-17.8092, 29.6651, 5.50027, 0.88", "-18.9907, 29.8194, 5.2244, 0.74", "-20.0615, 29.9589, 4.89833, 1.11", "-20.8952, 30.0755, 4.5952, 1.18", "-21.6629, 30.1714, 4.28125, 1.18", "-22.302, 30.2275, 4.00372, 1.18" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-4.73219, 25.5001, 5.34694, 0.96", "-4.57006, 27.6112, 5.50026, 0.96", "-4.49527, 28.4196, 5.54284, 1.25", "-4.41709, 29.163, 5.5678, 1.25", "-4.35257, 29.8243, 5.58281, 1.4", "-4.29623, 30.6263, 5.64152, 1.4", "-4.26608, 31.6361, 5.74698, 1.18", "-4.2988, 32.5449, 5.88479, 1.03", "-4.4574, 33.6818, 6.13053, 0.88", "-4.67193, 34.4494, 6.3388, 0.81", "-5.1975, 35.6119, 6.79915, 1.03", "-5.60452, 36.1975, 7.11002, 1.03", "-6.06898, 36.6638, 7.43471, 1.25", "-6.8804, 37.3078, 8.05029, 0.88", "-7.49704, 37.725, 8.53217, 0.74", "-8.33319, 38.2709, 9.22884, 0.74", "-8.9696, 38.7034, 9.81988, 1.03", "-9.60505, 39.1656, 10.5213, 1.18", "-10.5242, 39.9147, 11.7121, 1.03", "-10.9258, 40.3215, 12.3495, 0.66", "-11.5668, 41.2069, 13.68, 0.59", "-11.8333, 41.7962, 14.4788, 0.96", "-11.9303, 42.3017, 15.1017, 0.96", "-11.9481, 42.6875, 15.501, 1.11", "-11.9193, 43.2278, 15.9967, 1.11", "-11.8243, 43.8423, 16.5281, 1.25", "-11.6684, 44.4821, 17.0074, 1.03", "-11.4158, 45.6345, 17.7532, 0.59", "-11.2373, 46.6101, 18.3574, 1.18" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "24.2598, 40.0279, -0.450982, 0.59", "24.8453, 41.2539, -0.492922, 0.59", "25.1706, 41.9561, -0.512879, 0.29", "25.6325, 43.015, -0.538203, 0.66", "26.1708, 44.3464, -0.523479, 0.29", "26.5352, 45.3342, -0.501427, 0.29", "26.8495, 46.2284, -0.473743, 1.11", "27.0289, 46.781, -0.43685, 1.11", "27.2518, 47.5593, -0.362357, 0.74", "27.5135, 48.5593, -0.221598, 0.44", "27.7189, 49.4204, -0.0579221, 0.29", "27.8754, 50.1777, 0.100481, 0.29", "28.0381, 51.0664, 0.285874, 0.96", "28.1419, 51.6865, 0.403167, 1.18", "28.2574, 52.4923, 0.533731, 1.18", "28.2981, 52.8433, 0.580282, 1.18", "28.4256, 54.2229, 0.758673, 0.52", "28.4969, 55.2387, 0.81894, 0.52", "28.5789, 56.4162, 0.81844, 0.96", "28.6381, 57.2269, 0.776354, 1.4", "28.6923, 57.893, 0.699155, 1.4", "28.7357, 58.4108, 0.618495, 1.4", "28.906, 60.0543, 0.296805, 0.59", "28.9917, 60.7935, 0.113665, 0.59", "29.0781, 61.5136, -0.055893, 0.74", "29.1833, 62.4435, -0.259851, 0.52", "29.2641, 63.333, -0.438539, 0.29", "29.3218, 64.3387, -0.614431, 0.29", "29.3336, 65.3449, -0.762767, 0.29", "29.3009, 66.6185, -0.94993, 0.96", "29.2769, 67.3024, -1.03832, 1.33", "29.2665, 67.735, -1.08406, 1.69", "29.2588, 68.3782, -1.16663, 1.77", "29.2569, 69.2192, -1.25204, 1.33", "29.2927, 70.5366, -1.35698, 0.37", "29.3257, 71.2068, -1.41478, 0.37", "29.3541, 71.7967, -1.42855, 0.29", "29.3753, 72.5465, -1.40797, 0.29", "29.3697, 73.6036, -1.32134, 0.74", "29.3395, 74.3423, -1.24395, 0.96", "29.294, 74.8721, -1.20944, 0.96", "29.1579, 75.9554, -1.17837, 0.66", "29.0471, 76.7037, -1.18369, 0.44", "28.878, 77.8141, -1.2276, 0.29", "28.7366, 78.7916, -1.3321, 0.88", "28.6316, 79.7734, -1.4644, 1.33", "28.602, 80.3674, -1.55394, 1.4", "28.6327, 81.239, -1.69074, 1.11", "28.702, 81.9593, -1.78907, 0.81", "28.8104, 82.7675, -1.88142, 0.81", "28.9859, 83.9276, -1.97324, 0.22", "29.1429, 84.8941, -2.01917, 0.22", "29.3397, 86.0913, -2.07131, 0.22", "29.5523, 87.3852, -2.10511, 0.96", "29.6207, 87.831, -2.10246, 1.03", "29.6902, 88.3828, -2.0819, 0.81", "29.745, 89.0325, -2.05028, 0.44", "29.7669, 89.5213, -2.02267, 0.29", "29.7803, 89.9136, -1.99926, 0.29", "29.8406, 90.6393, -1.96008, 0.29", "29.9205, 91.321, -1.92742, 0.74", "29.981, 91.7582, -1.90975, 0.74", "30.1032, 92.7033, -1.87729, 0.29", "30.1693, 93.4541, -1.85767, 0.29", "30.2143, 94.4983, -1.88845, 1.03", "30.2153, 94.9392, -1.9164, 1.4", "30.2029, 95.589, -1.93378, 1.11", "30.1701, 96.5027, -1.92553, 0.29", "30.1217, 97.4371, -1.86786, 0.29", "30.0379, 98.8845, -1.70688, 0.96", "30.0111, 99.4371, -1.60318, 1.18", "29.9982, 100.74, -1.25384, 0.29", "30.0145, 101.26, -1.07864, 0.29", "30.0913, 102.104, -0.731359, 0.74", "30.2063, 102.695, -0.452575, 0.88", "30.4759, 103.669, 0.0435206, 0.29", "30.899, 104.913, 0.608267, 0.88", "30.9797, 105.121, 0.6879, 1.11", "31.2102, 105.655, 0.888849, 1.11", "31.7726, 106.827, 1.31387, 0.22", "32.1464, 107.561, 1.56782, 0.22", "32.8003, 108.768, 1.95276, 1.03", "33.0043, 109.129, 2.06986, 1.18", "33.4944, 110.003, 2.41452, 0.66", "33.7793, 110.541, 2.66259, 0.22", "34.0319, 111.077, 2.94394, 0.22", "34.2669, 111.614, 3.26174, 0.74", "34.4465, 112.065, 3.53635, 0.74", "34.8373, 113.194, 4.18765, 0.37", "35.0332, 113.842, 4.54428, 0.37", "35.2285, 114.601, 4.95523, 0.29", "35.4243, 115.492, 5.41267, 0.81", "35.542, 116.159, 5.71935, 0.96", "35.6016, 116.559, 5.8799, 0.96", "35.7656, 117.771, 6.30006, 0.29", "35.8881, 118.713, 6.62166, 0.29", "36.0332, 119.892, 7.0183, 0.29", "36.1219, 120.653, 7.25538, 0.81", "36.1718, 121.073, 7.38391, 1.03", "36.2312, 121.512, 7.50805, 1.03", "36.395, 122.554, 7.76113, 0.29", "36.554, 123.367, 7.95236, 0.29", "36.8089, 124.35, 8.18067, 0.52", "36.9252, 124.696, 8.25335, 0.52", "37.3216, 125.697, 8.42561, 0.29", "37.6733, 126.463, 8.52161, 0.96", "37.8907, 126.876, 8.55117, 0.96", "38.252, 127.525, 8.56969, 0.66", "38.62, 128.235, 8.5598, 0.52", "38.9797, 129.046, 8.52238, 0.37", "39.1695, 129.556, 8.48176, 0.37", "39.3342, 130.076, 8.42601, 0.29", "39.5004, 130.629, 8.35034, 0.29", "39.777, 131.539, 8.1926, 0.29", "39.9488, 132.089, 8.0901, 0.29", "40.2152, 132.94, 7.91387, 0.88", "40.411, 133.591, 7.75166, 1.03", "40.7994, 134.925, 7.35603, 0.22", "41.0435, 135.778, 7.08399, 0.22", "41.2032, 136.324, 6.90476, 0.22", "41.5064, 137.404, 6.53656, 1.11", "41.6965, 138.166, 6.26868, 1.33", "41.9629, 139.492, 5.80896, 0.22", "42.0723, 140.322, 5.52273, 0.22", "42.119, 140.789, 5.36954, 0.66" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "24.2598, 40.0279, -0.450982, 1.18", "25.7833, 40.3201, -0.484289, 1.18", "26.9674, 40.5473, -0.510177, 1.18", "28.0188, 40.7489, -0.533163, 1.11", "29.9877, 41.1266, -0.57621, 1.33", "30.5944, 41.2429, -0.589474, 1.33" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-8.16933, 22.9798, -34.825, 0.52", "-7.18364, 23.3648, -36.4453, 0.52", "-6.36032, 23.7645, -37.7867, 0.52", "-5.47393, 24.1988, -39.2034, 0.52", "-4.33048, 24.7026, -40.9816, 0.52", "-3.63119, 24.9736, -42.0896, 0.52", "-2.74617, 25.2747, -43.422, 0.52", "-1.62681, 25.5976, -45.1279, 0.52", "-0.257683, 25.916, -47.1329, 0.52", "1.21751, 26.2089, -49.2245, 0.52", "3.62717, 26.6238, -52.4655, 0.52", "4.61842, 26.7903, -53.7729, 0.52", "5.74147, 26.9954, -55.2451, 0.52", "7.18073, 27.2842, -57.2183, 0.52", "8.09673, 27.5165, -58.5093, 0.52", "8.74935, 27.728, -59.485, 0.52", "9.38996, 27.9853, -60.5284, 0.52", "10.6562, 28.5379, -62.9493, 0.52", "11.5962, 28.944, -64.9179, 0.52", "12.5895, 29.3319, -67.1403, 0.52", "13.4619, 29.6143, -69.1587, 0.52", "14.4548, 29.9209, -71.5584, 0.52", "15.877, 30.4107, -75.2666, 0.52", "16.4222, 30.6522, -76.8808, 0.52", "16.6306, 30.7786, -77.5817, 0.52", "17.1672, 31.212, -79.7323, 0.52", "17.6195, 31.6931, -81.8499, 0.52", "18.2215, 32.5497, -85.1854, 0.52", "18.541, 33.1608, -87.3262, 0.52", "18.7695, 33.6873, -89.0864, 0.52", "19.0579, 34.4244, -91.58, 0.52", "19.3163, 35.0738, -93.8498, 0.52", "19.652, 35.6754, -95.9985, 0.52", "20.1185, 36.2745, -98.0378, 0.52", "20.7643, 36.9429, -100.152, 0.52", "21.5648, 37.669, -102.245, 0.52", "22.3262, 38.3085, -103.913, 0.52", "23.6701, 39.3942, -106.574, 0.52", "24.8803, 40.3447, -108.787, 0.52", "25.4512, 40.7882, -109.763, 0.52", "26.4215, 41.5219, -111.348, 0.52", "28.1005, 42.7728, -114.031, 0.52", "29.1871, 43.5735, -115.816, 0.52", "30.2766, 44.3706, -117.728, 0.52", "31.2184, 45.0447, -119.417, 0.52", "31.9037, 45.5157, -120.649, 0.52", "32.3681, 45.8223, -121.497, 0.52", "33.038, 46.2378, -122.723, 0.52", "33.6015, 46.5567, -123.665, 0.52", "34.2161, 46.9026, -124.705, 0.52", "34.8059, 47.2328, -125.727, 0.52", "36.194, 48.0492, -128.147, 0.52", "37.1235, 48.6106, -129.729, 0.52", "38.6777, 49.5072, -132.29, 0.52" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-8.16933, 22.9798, -34.825, 0.66", "-9.46481, 22.5638, -35.5903, 0.66", "-10.9384, 22.057, -36.5833, 0.66", "-12.5346, 21.5139, -37.7218, 0.66", "-13.5399, 21.1844, -38.502, 0.66", "-14.5703, 20.8718, -39.3294, 0.59", "-15.9446, 20.4849, -40.4259, 0.59", "-17.1846, 20.157, -41.4602, 0.59", "-17.9109, 19.9924, -42.0461, 0.59", "-19.2136, 19.7509, -42.9807, 0.59", "-20.6965, 19.5528, -43.95, 0.59", "-22.4142, 19.3996, -45.0319, 0.59", "-23.8436, 19.3153, -45.8415, 0.59", "-25.164, 19.2297, -46.5916, 0.59", "-26.3382, 19.1286, -47.2978, 0.59", "-28.2131, 18.94, -48.4521, 0.59", "-28.8, 18.871, -48.8557, 0.59", "-29.7041, 18.7752, -49.5363, 0.59", "-32.2096, 18.5815, -51.4881, 0.59", "-33.5564, 18.5435, -52.6067, 0.59", "-34.3135, 18.5514, -53.2163, 0.52", "-36.0747, 18.6468, -54.5355, 0.52", "-38.6258, 18.8886, -56.2393, 0.52", "-40.6611, 19.1535, -57.4155, 0.52", "-44.1625, 19.7354, -59.1136, 0.52", "-46.0388, 20.0795, -59.8738, 0.52", "-49.2805, 20.7173, -60.9855, 0.52", "-51.8645, 21.26, -61.7243, 0.52", "-54.5229, 21.9281, -62.3455, 0.52", "-56.747, 22.5706, -62.7638, 0.52", "-60.2836, 23.7337, -63.3202, 0.52", "-64.6149, 25.2259, -63.9939, 0.52", "-65.924, 25.6915, -64.1815, 0.52", "-71.189, 27.5757, -65.0124, 0.52", "-74.0627, 28.6017, -65.5054, 0.52", "-80.0397, 30.6571, -66.4806, 0.52", "-84.8025, 32.1905, -67.2301, 0.52", "-88.8067, 33.3863, -67.7964, 0.52", "-92.9243, 34.5007, -68.3464, 0.52", "-94.242, 34.8101, -68.5115, 0.52", "-96.6585, 35.343, -68.7965, 0.52", "-98.6038, 35.7283, -69.0018, 0.52", "-101.32, 36.1666, -69.2632, 0.52", "-105.507, 36.6935, -69.7363, 0.52", "-108.541, 37.0116, -70.1243, 0.52", "-111.608, 37.2845, -70.6373, 0.52", "-115.434, 37.5469, -71.4175, 0.52", "-122.226, 37.906, -72.9668, 0.52", "-126.197, 38.0106, -73.9254, 0.52", "-127.715, 38.0225, -74.3211, 0.52", "-130.24, 38.0199, -75.0177, 0.52", "-131.31, 38.013, -75.3212, 0.52", "-134.191, 38.0029, -76.2108, 0.52", "-137.578, 38.0556, -77.369, 0.52", "-139.79, 38.1545, -78.1192, 0.52", "-143.161, 38.4418, -79.3636, 0.52", "-146.3, 38.9322, -80.6492, 0.52", "-148.213, 39.3901, -81.5579, 0.52", "-150.046, 40.0132, -82.6123, 0.52", "-151.965, 40.9681, -83.9898, 0.52", "-153.415, 41.9376, -85.1761, 0.52", "-155.415, 43.6556, -87.0791, 0.52", "-156.644, 44.9572, -88.3884, 0.52", "-157.808, 46.3362, -89.6899, 0.52", "-158.69, 47.4661, -90.7519, 0.52", "-159.25, 48.2177, -91.4726, 0.52" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-12.3827, -54.7521, 29.0627, 0.52", "-12.5279, -56.4204, 28.8742, 0.52", "-12.5767, -57.211, 28.8333, 0.52", "-12.587, -58.0666, 28.8356, 0.52", "-12.4976, -59.6054, 28.8956, 0.52", "-12.408, -60.448, 28.9458, 0.52", "-12.2872, -61.3333, 29.0076, 0.52", "-12.1744, -61.9239, 29.1301, 0.52", "-11.9656, -62.7295, 29.373, 0.52", "-11.6926, -63.624, 29.7062, 0.52", "-11.2286, -64.9836, 30.2984, 0.52", "-10.8622, -65.9914, 30.8098, 0.52", "-10.2946, -67.529, 31.6817, 0.52", "-9.98508, -68.4206, 32.2089, 0.52", "-9.84747, -68.8371, 32.4783, 0.52", "-9.65837, -69.4194, 32.9086, 0.52", "-9.35884, -70.212, 33.6123, 0.52", "-9.20693, -70.5846, 33.9698, 0.52", "-9.0055, -71.0955, 34.3616, 0.52", "-8.99628, -81.0054, 35.7008, 0.52", "-7.12715, -90.8105, 36.3051, 0.52", "-5.58831, -100.665, 37.034, 0.52", "-4.18023, -110.558, 37.4005, 0.52", "-0.89006, -119.99, 36.9232, 0.52", "2.69294, -129.321, 37.2309, 0.52", "6.56848, -138.389, 38.8869, 0.52", "9.99945, -147.672, 40.3176, 0.52", "14.9838, -156.113, 42.2968, 0.52", "20.6153, -164.145, 44.2371, 0.52", "27.5644, -171.039, 46.2842, 0.52", "34.3807, -177.17, 50.2776, 0.52" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-12.3827, -54.7521, 29.0627, 0.59", "-13.1222, -56.2753, 29.2668, 0.59", "-13.4133, -56.9, 29.3538, 0.59", "-13.8695, -57.7988, 29.4944, 0.59", "-14.5327, -59.0173, 29.6851, 0.59", "-14.9629, -59.721, 29.8132, 0.59", "-15.3461, -60.2835, 29.9336, 0.59", "-16.175, -61.3529, 30.2379, 0.59", "-16.7735, -62.0117, 30.4429, 0.59", "-17.6165, -62.7641, 30.706, 0.59", "-18.4726, -63.4093, 30.9558, 0.59", "-19.2758, -63.9359, 31.2639, 0.59", "-20.4602, -64.6399, 31.8295, 0.59", "-20.8038, -64.8373, 32.021, 0.59", "-21.8176, -65.4596, 32.6314, 0.59", "-22.5896, -65.9492, 33.1196, 0.59", "-24.194, -67.0612, 34.1515, 0.59", "-24.9636, -67.5888, 34.6458, 0.59", "-25.9662, -68.2365, 35.2796, 0.59", "-27.0155, -68.8817, 35.8945, 0.59", "-27.5492, -69.1924, 36.1766, 0.59", "-28.0382, -69.4542, 36.3968, 0.59", "-29.4122, -70.1256, 36.8919, 0.59", "-30.6169, -70.6312, 37.3325, 0.59", "-31.24, -70.8561, 37.579, 0.59", "-32.0433, -71.1518, 37.8957, 0.59", "-32.7951, -71.5199, 38.1538, 0.59", "-33.4293, -71.9117, 38.3423, 0.59", "-34.4562, -72.69, 38.5676, 0.59", "-35.2147, -73.3114, 38.7121, 0.59", "-36.5758, -74.4843, 38.938, 0.59", "-38.5767, -76.3273, 39.189, 0.59", "-39.2836, -77.0517, 39.2481, 0.52", "-39.8576, -77.7059, 39.2645, 0.52", "-46.729, -84.3493, 42.2056, 0.52", "-52.6243, -91.9207, 45.0197, 0.52", "-58.8113, -99.3125, 47.6809, 0.52", "-66.7595, -105.266, 48.8594, 0.52", "-74.8645, -110.26, 51.9191, 0.52" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.105617, -27.5242, -3.88615, 0.66", "0.169059, -30.4871, -4.82615, 0.66", "0.375397, -31.5584, -5.03768, 0.66", "0.595462, -32.5559, -5.23001, 0.59", "0.991702, -34.3454, -5.55213, 0.59", "1.26927, -35.6272, -5.76996, 0.59", "1.6168, -37.201, -6.02599, 0.59", "2.13958, -39.1882, -6.28156, 0.59", "2.83356, -41.7886, -6.68124, 0.59", "3.16502, -43.1909, -6.91999, 0.59", "3.30857, -43.896, -7.04345, 0.59", "3.38758, -44.4092, -7.15126, 0.59", "3.48634, -45.5092, -7.46449, 0.59", "3.52865, -46.2563, -7.70853, 0.59", "3.71036, -47.5728, -8.06814, 0.59", "3.83392, -48.1711, -8.24363, 0.59", "4.01827, -48.9118, -8.44795, 0.59", "4.24239, -49.632, -8.63777, 0.59", "4.74233, -50.9349, -8.96544, 0.59", "5.38634, -52.4135, -9.3834, 0.59", "5.68083, -52.9777, -9.5663, 0.59", "6.19045, -53.8948, -9.918, 0.59", "6.98632, -55.1311, -10.4458, 0.59", "7.4422, -55.7595, -10.7375, 0.59", "8.27103, -56.7732, -11.2593, 0.59", "8.95021, -57.5719, -11.7085, 0.59", "9.48959, -58.2046, -12.0486, 0.59", "10.4367, -59.3669, -12.6846, 0.52", "10.9865, -60.119, -13.0908, 0.52", "11.8322, -61.3909, -13.7432, 0.52", "12.2051, -62.0349, -14.067, 0.52", "12.7012, -63.1195, -14.5864, 0.52", "13.1841, -64.3558, -15.162, 0.52", "13.6621, -65.7332, -15.8593, 0.52", "13.8854, -66.3362, -16.1941, 0.52", "14.3048, -67.3808, -16.8179, 0.52", "14.7848, -68.4925, -17.5049, 0.52", "15.4043, -69.914, -18.4392, 0.52", "15.9168, -71.1472, -19.2536, 0.52", "16.3352, -72.3067, -20.0296, 0.52", "16.655, -73.2814, -20.6623, 0.52", "16.9209, -74.1119, -21.1802, 0.52", "17.286, -75.1064, -21.7883, 0.52", "17.7493, -76.3384, -22.4579, 0.52", "18.3789, -77.9183, -23.2514, 0.52", "18.899, -79.1142, -23.8271, 0.52", "19.5736, -80.4604, -24.4554, 0.52", "20.6959, -82.4918, -25.3603, 0.52", "21.2465, -83.4281, -25.7218, 0.52", "21.6427, -84.071, -25.9542, 0.52", "22.1197, -84.8279, -26.2038, 0.52", "22.7236, -85.7716, -26.4952, 0.52", "23.7537, -87.3688, -26.9993, 0.52", "25.0083, -89.2528, -27.6748, 0.52", "25.5875, -90.0638, -28.0165, 0.52", "26.3856, -91.1091, -28.502, 0.52", "27.3847, -92.3134, -29.149, 0.52", "28.7629, -93.853, -30.0705, 0.52", "29.575, -94.6561, -30.5781, 0.52", "30.3167, -95.3102, -30.98, 0.52", "31.0842, -95.9436, -31.3371, 0.52", "32.0555, -96.7083, -31.7091, 0.52", "33.2404, -97.5912, -32.05, 0.52", "35.3112, -99.0564, -32.4794, 0.52", "37.6783, -100.62, -32.9022, 0.52", "39.7079, -101.856, -33.2249, 0.52", "42.4102, -103.391, -33.6227, 0.52", "44.9285, -104.714, -33.9764, 0.52", "46.005, -105.229, -34.1262, 0.52", "48.4158, -106.301, -34.4414, 0.52", "49.4879, -106.762, -34.5723, 0.52", "50.6828, -107.284, -34.6556, 0.52", "52.1449, -107.971, -34.6703, 0.52", "54.3145, -109.127, -34.5666, 0.52", "55.8214, -110.064, -34.4264, 0.52", "56.7654, -110.735, -34.2975, 0.52", "58.7927, -112.313, -33.9754, 0.52", "61.4195, -114.491, -33.4586, 0.52", "63.3949, -116.227, -32.9731, 0.52", "65.4057, -118.075, -32.4133, 0.52", "66.1676, -118.781, -32.1926, 0.52", "67.4665, -119.978, -31.8174, 0.52", "68.7861, -121.225, -31.4553, 0.52", "69.8537, -122.295, -31.1133, 0.52", "71.3387, -123.807, -30.5596, 0.52", "72.3027, -124.761, -30.1881, 0.52", "72.9516, -125.416, -29.9386, 0.52", "73.7295, -126.207, -29.6569, 0.52", "74.948, -127.49, -29.2377, 0.52", "76.0842, -128.719, -28.8572, 0.52", "76.964, -129.693, -28.5586, 0.52", "78.1451, -131.006, -28.1753, 0.52", "79.0679, -132.039, -27.8741, 0.52", "79.5504, -132.589, -27.72, 0.52", "80.3318, -133.542, -27.4888, 0.52", "80.8938, -134.303, -27.3114, 0.52", "81.4948, -135.194, -27.1007, 0.52", "82.0204, -136.036, -26.9174, 0.52", "82.4551, -136.745, -26.7719, 0.52", "83.1554, -137.818, -26.569, 0.52", "84.0905, -139.163, -26.3256, 0.52", "85.2409, -140.617, -26.0982, 0.52", "86.1078, -141.59, -25.9611, 0.52", "87.6867, -143.159, -25.8308, 0.52", "88.7491, -144.122, -25.805, 0.52", "89.8339, -145.041, -25.8383, 0.52", "92.6064, -147.242, -26.0281, 0.52", "93.552, -147.945, -26.1105, 0.52", "95.0253, -149.019, -26.2475, 0.52", "96.0956, -149.808, -26.3344, 0.52", "99.399, -152.335, -26.5565, 0.52", "100.854, -153.516, -26.613, 0.52", "102.708, -155.128, -26.5744, 0.52", "103.858, -156.199, -26.4684, 0.52", "105.278, -157.649, -26.2004, 0.52", "106.17, -158.645, -25.9728, 0.52", "107.07, -159.786, -25.6846, 0.52", "107.839, -160.853, -25.4019, 0.52", "108.435, -161.752, -25.1549, 0.52", "110.199, -164.502, -24.4121, 0.52", "111.294, -166.267, -23.9922, 0.52", "111.867, -167.177, -23.7983, 0.52" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-0.105617, -27.5242, -3.88615, 0.88", "0.0327942, -29.0647, -4.55493, 0.88", "0.259139, -30.7619, -5.30824, 0.88", "0.519002, -32.0106, -6.00689, 0.88", "0.781781, -32.9419, -6.66487, 0.88", "1.02621, -33.6811, -7.24373, 0.81", "1.2743, -34.4052, -7.80954, 0.74", "1.6217, -35.2564, -8.48133, 0.74", "2.28727, -36.7008, -9.52267, 0.74", "2.79283, -37.7115, -10.2199, 0.74", "3.09293, -38.3213, -10.5908, 0.74", "3.56526, -39.3606, -11.2554, 0.74", "3.93595, -40.3083, -11.8549, 0.74", "4.2987, -41.4172, -12.477, 0.74", "4.60141, -42.4644, -13.0618, 0.66", "4.92212, -43.514, -13.6492, 0.66", "5.62561, -45.7807, -15.0076, 0.66", "5.87759, -46.5643, -15.553, 0.66", "6.07735, -47.2106, -16.0692, 0.66", "6.39333, -48.3196, -17.104, 0.66", "6.6837, -49.3955, -18.1697, 0.66", "6.90457, -50.0175, -18.8245, 0.66" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.32135, -70.716, 5.61263, 0.96", "-6.35882, -73.5062, 7.34007, 0.96", "-7.43436, -74.3177, 7.62371, 0.96", "-8.85363, -75.5533, 7.87046, 0.96", "-9.38797, -76.0894, 7.93446, 1.18", "-10.2328, -77.0586, 7.97816, 0.88", "-10.8248, -77.7943, 7.97856, 0.88", "-11.3852, -78.5627, 7.78755, 0.88", "-11.9693, -79.4813, 7.60069, 0.88", "-12.4115, -80.2329, 7.45798, 0.88", "-12.8641, -81.0204, 7.32423, 0.88", "-13.4112, -81.961, 7.17202, 0.88", "-14.0834, -82.9779, 7.00151, 0.81", "-14.6964, -83.8199, 6.86932, 0.81", "-15.3545, -84.6148, 6.73635, 0.81", "-16.0034, -85.3313, 6.62163, 0.59", "-16.7622, -86.1663, 6.49653, 0.59", "-17.7705, -87.3469, 6.3252, 0.59", "-18.4781, -88.2325, 6.20717, 0.59", "-19.0623, -88.9687, 6.11305, 0.59", "-20.1833, -90.4409, 5.91804, 0.59", "-20.6975, -91.153, 5.82582, 0.59", "-21.2914, -92.0457, 5.72585, 0.59", "-21.6221, -92.6381, 5.66151, 0.59", "-21.8193, -93.031, 5.61962, 0.59", "-22.2113, -93.9164, 5.53894, 0.59", "-22.4944, -94.6222, 5.47356, 0.59", "-23.0007, -95.7694, 5.37514, 0.59", "-23.422, -96.6834, 5.28893, 0.59" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-2.32135, -70.716, 5.61263, 1.18", "-1.93366, -72.9813, 6.38575, 1.18", "-1.7517, -74.0444, 6.74859, 1.18", "-1.50171, -75.5051, 7.2471, 1.03", "-1.20581, -77.234, 7.83718, 1.03", "-0.920592, -78.9005, 8.40594, 1.03" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-22.302, 30.2275, 4.00372, 0.29", "-23.7916, 31.8235, 2.2743, 0.29", "-24.2355, 32.3434, 1.70934, 0.29", "-24.5675, 32.7546, 1.2919, 0.29", "-25.0839, 33.3585, 0.667739, 0.74", "-25.4796, 33.7912, 0.200509, 1.18", "-25.7968, 34.1145, -0.155744, 1.18", "-26.3358, 34.6219, -0.66067, 0.66", "-26.6809, 34.9414, -0.997678, 0.59", "-27.2835, 35.4709, -1.55067, 1.03", "-27.9737, 36.0404, -2.11864, 1.18", "-28.5062, 36.4807, -2.50704, 0.52", "-29.1401, 37.0245, -2.89766, 0.52", "-29.6225, 37.455, -3.15149, 0.52", "-30.0729, 37.8925, -3.36642, 0.66", "-30.6346, 38.5355, -3.64711, 0.66", "-31.1124, 39.1788, -3.92525, 1.03", "-31.3369, 39.5629, -4.08962, 1.25", "-31.5558, 40.0167, -4.27295, 1.25", "-31.8147, 40.6456, -4.52326, 1.11", "-32.3488, 42.0599, -5.09305, 0.44", "-32.611, 42.7573, -5.3716, 0.37", "-32.9999, 43.7775, -5.77621, 0.74", "-33.4063, 44.7979, -6.16361, 0.96", "-33.6902, 45.4418, -6.38261, 0.96", "-33.9373, 45.9285, -6.53473, 0.96", "-34.2367, 46.4144, -6.65882, 0.81", "-34.8266, 47.2184, -6.86326, 0.29", "-35.4514, 47.9369, -7.07572, 0.29", "-36.1158, 48.627, -7.33515, 0.88", "-36.4971, 48.9891, -7.50846, 1.18", "-36.8896, 49.3392, -7.69909, 1.18", "-37.4005, 49.773, -7.98825, 0.96", "-37.8316, 50.1167, -8.26126, 0.74", "-38.634, 50.7522, -8.86224, 0.37", "-39.1352, 51.1629, -9.30712, 0.37", "-39.6456, 51.6031, -9.7911, 1.03", "-40.0132, 51.9374, -10.1572, 1.25", "-40.2449, 52.1562, -10.389, 1.4", "-40.5773, 52.4956, -10.7054, 0.74", "-41.4606, 53.443, -11.4704, 0.22", "-41.8509, 53.8667, -11.7718, 0.44", "-42.1444, 54.1914, -11.9783, 0.59", "-42.4602, 54.5536, -12.169, 0.59", "-42.7438, 54.9035, -12.3325, 0.66", "-43.6505, 56.0997, -12.8293, 0.22", "-44.0867, 56.7238, -13.0628, 0.22", "-44.5452, 57.3971, -13.3046, 0.59", "-44.9794, 58.0479, -13.5215, 0.81", "-45.3549, 58.5968, -13.6986, 1.18", "-45.6748, 59.0406, -13.8374, 0.74", "-46.4933, 60.1293, -14.1798, 0.29", "-47.2188, 61.0387, -14.4905, 0.29", "-47.7425, 61.6418, -14.7239, 0.44", "-48.3462, 62.2827, -14.9794, 0.44", "-48.9464, 62.8672, -15.2084, 1.11", "-49.3846, 63.2697, -15.3652, 1.33", "-49.6495, 63.5079, -15.4576, 1.47", "-50.1939, 64.008, -15.6438, 0.88", "-50.9223, 64.7209, -15.8819, 0.29", "-51.4249, 65.2733, -16.0205, 0.29", "-51.8217, 65.7618, -16.1056, 0.29", "-52.2192, 66.3239, -16.1294, 0.66", "-52.5236, 66.8107, -16.1177, 0.81", "-52.6326, 67.0024, -16.1043, 0.81", "-53.0311, 67.7828, -16.0485, 0.22", "-53.4822, 68.7011, -16.0037, 0.22", "-54.0298, 69.8078, -16.0916, 0.96", "-54.3099, 70.3582, -16.197, 1.25", "-54.543, 70.8205, -16.3362, 1.25", "-54.6899, 71.1141, -16.4525, 1.25", "-55.0664, 71.9043, -16.8929, 0.22", "-55.7511, 73.349, -17.8481, 0.22", "-56.0546, 73.9768, -18.2974, 1.11", "-56.2484, 74.3916, -18.5832, 1.25", "-56.4157, 74.7589, -18.8276, 1.33", "-57.0306, 76.0689, -19.6727, 0.29", "-57.475, 77.008, -20.2292, 0.74", "-57.6853, 77.4269, -20.4481, 0.88", "-57.9127, 77.866, -20.6748, 0.74", "-58.4766, 78.8623, -21.1589, 0.22", "-58.6574, 79.1554, -21.2975, 0.22", "-59.0313, 79.7217, -21.5316, 0.66", "-59.331, 80.1584, -21.7331, 0.81", "-59.5633, 80.4942, -21.8951, 0.81", "-60.2094, 81.4168, -22.3704, 0.22", "-60.8094, 82.2728, -22.8047, 0.22", "-61.2904, 82.9512, -23.1324, 0.88", "-61.7914, 83.6327, -23.4435, 1.25", "-62.0887, 84.0337, -23.6087, 1.25", "-62.9104, 85.1512, -24.0455, 0.22", "-63.7363, 86.3636, -24.4673, 0.22", "-64.6093, 87.7226, -24.8973, 0.22", "-65.1213, 88.5898, -25.1468, 0.22", "-65.4674, 89.2262, -25.3025, 0.88", "-65.8534, 89.9927, -25.4853, 0.88", "-66.4426, 91.3604, -25.7995, 0.22", "-66.7508, 92.216, -26.0184, 0.22", "-67.0821, 93.2811, -26.3054, 0.74", "-67.2158, 93.7468, -26.4342, 1.11", "-67.4002, 94.4385, -26.624, 1.11", "-67.7978, 95.9756, -27.0537, 0.22", "-68.124, 97.2664, -27.4275, 0.22", "-68.3687, 98.304, -27.7251, 0.66", "-68.4631, 98.7633, -27.8513, 0.66", "-68.7123, 100.191, -28.2133, 0.29", "-68.8936, 101.491, -28.5231, 0.29", "-68.968, 102.224, -28.6917, 0.44", "-69.0099, 102.787, -28.8235, 0.44", "-69.0915, 104.059, -29.1441, 1.25", "-69.136, 104.668, -29.3107, 1.18", "-69.2079, 105.517, -29.5569, 0.59", "-69.3108, 106.58, -29.8803, 0.22", "-69.4407, 107.706, -30.2645, 0.22", "-69.6005, 108.834, -30.6691, 0.88", "-69.7456, 109.665, -30.9989, 1.03", "-69.8368, 110.11, -31.1918, 0.74", "-70.0949, 111.107, -31.6765, 0.29", "-70.2201, 111.506, -31.8943, 0.29", "-70.5265, 112.305, -32.377, 0.66", "-70.7235, 112.731, -32.6604, 0.66", "-71.1791, 113.619, -33.3102, 0.22", "-71.5125, 114.191, -33.7648, 0.22", "-71.7507, 114.539, -34.0751, 0.81", "-72.094, 114.992, -34.4994, 0.96", "-72.7642, 115.811, -35.2731, 0.22", "-73.1115, 116.224, -35.63, 0.22", "-73.3878, 116.542, -35.8874, 0.59", "-73.9267, 117.169, -36.3471, 0.59", "-74.6243, 117.979, -36.8915, 0.22", "-75.2577, 118.715, -37.3175, 0.74", "-75.8271, 119.356, -37.6332, 0.74", "-76.177, 119.764, -37.7936, 0.88", "-76.5276, 120.2, -37.9344, 0.88", "-77.1311, 121.016, -38.1283, 0.22", "-77.4064, 121.445, -38.2065, 0.37", "-77.7557, 122.161, -38.3188, 0.37", "-78.0412, 122.955, -38.4175, 0.22", "-78.1419, 123.3, -38.4527, 0.37", "-78.231, 123.706, -38.4944, 0.37", "-78.3999, 124.718, -38.6014, 0.22", "-78.5712, 126.056, -38.7477, 0.22", "-78.6792, 127.106, -38.8655, 0.74", "-78.7163, 127.465, -38.9122, 0.88", "-78.8553, 128.64, -39.0933, 0.22", "-78.9689, 129.499, -39.2349, 0.37", "-79.1116, 130.496, -39.4186, 0.22", "-79.2368, 131.315, -39.5875, 0.81", "-79.3304, 131.881, -39.7129, 0.96", "-79.4229, 132.402, -39.829, 0.96", "-79.6349, 133.478, -40.0489, 0.22", "-79.799, 134.282, -40.2026, 0.44", "-79.8675, 134.606, -40.2634, 0.44", "-80.2864, 136.508, -40.5744, 0.22", "-80.5437, 137.633, -40.7358, 0.22", "-80.8554, 138.881, -40.9068, 0.22", "-81.1088, 139.803, -41.037, 0.96", "-81.2365, 140.236, -41.1059, 1.11", "-81.7335, 141.801, -41.3767, 0.15", "-81.9046, 142.287, -41.4821, 0.15", "-82.1694, 142.951, -41.6508, 0.37", "-82.6342, 143.999, -41.9657, 0.22", "-82.9815, 144.735, -42.2083, 0.22", "-83.289, 145.366, -42.4238, 0.66", "-83.6204, 146.016, -42.6591, 0.66", "-83.8599, 146.461, -42.813, 0.81", "-84.4474, 147.473, -43.1568, 0.22", "-84.9912, 148.328, -43.4324, 0.22", "-85.2964, 148.779, -43.5608, 0.66", "-85.6328, 149.243, -43.6895, 0.74", "-86.2809, 150.067, -43.9, 0.22", "-86.8151, 150.705, -44.0662, 0.22", "-87.0866, 151.014, -44.153, 0.37", "-87.3298, 151.287, -44.2311, 0.37", "-88.3536, 152.441, -44.5684, 0.22", "-88.7327, 152.884, -44.6928, 0.59", "-89.3525, 153.644, -44.8943, 0.74", "-90.4496, 155.044, -45.2677, 0.22", "-91.1199, 155.921, -45.5112, 0.22", "-91.399, 156.298, -45.6193, 0.44", "-91.7272, 156.777, -45.7492, 0.44", "-92.248, 157.637, -45.9609, 0.22", "-92.5436, 158.193, -46.0773, 0.59", "-92.7261, 158.585, -46.1491, 0.74", "-92.9053, 159.048, -46.224, 0.74", "-93.5567, 160.92, -46.484, 0.22", "-93.9215, 162.046, -46.6288, 0.22", "-94.1308, 162.757, -46.7085, 0.66", "-94.2592, 163.226, -46.7543, 0.66", "-94.8465, 165.488, -46.9589, 0.22", "-95.0846, 166.426, -47.0634, 0.44", "-95.2851, 167.187, -47.1667, 0.52", "-95.7164, 168.776, -47.4597, 0.22", "-95.9588, 169.63, -47.6604, 0.59", "-96.1794, 170.38, -47.8646, 0.59", "-96.7946, 172.342, -48.4966, 0.22", "-97.2754, 173.805, -49.0179, 0.22", "-97.8037, 175.311, -49.6066, 0.22", "-98.1617, 176.254, -50.0246, 0.22", "-98.4158, 176.903, -50.3257, 0.66", "-98.5108, 177.145, -50.4427, 0.88", "-98.8027, 177.906, -50.7938, 0.59", "-99.1963, 179.022, -51.2667, 0.22", "-99.5293, 180.02, -51.6104, 0.22", "-99.7571, 180.773, -51.8555, 0.59", "-99.9636, 181.497, -52.0854, 0.59", "-100.314, 182.76, -52.4654, 0.22", "-100.558, 183.595, -52.699, 0.22", "-101.025, 185.092, -53.1064, 0.22", "-101.369, 186.091, -53.3805, 0.66", "-101.446, 186.296, -53.4368, 0.88", "-101.648, 186.827, -53.583, 0.88", "-102.089, 187.94, -53.9368, 0.22", "-102.322, 188.496, -54.1333, 0.22", "-102.567, 189.052, -54.3369, 0.37", "-103.15, 190.154, -54.7798, 0.22", "-103.765, 191.16, -55.2451, 0.22", "-104.348, 192.015, -55.6975, 0.81", "-104.871, 192.692, -56.0988, 0.96", "-105.712, 193.619, -56.6559, 0.22", "-107.16, 195.053, -57.4856, 0.22", "-107.72, 195.582, -57.7781, 0.59", "-108.026, 195.871, -57.9201, 0.74", "-108.761, 196.601, -58.2426, 0.22", "-110.016, 198.032, -58.7677, 0.22", "-110.93, 199.321, -59.1425, 0.22", "-111.696, 200.635, -59.4323, 0.88", "-111.973, 201.214, -59.5335, 1.25", "-112.347, 202.143, -59.6742, 0.81", "-113.028, 204.188, -59.9613, 0.15", "-113.689, 206.601, -60.2886, 0.15", "-113.936, 207.591, -60.4147, 0.37", "-114.451, 209.776, -60.625, 0.15", "-114.635, 210.605, -60.7016, 0.15", "-114.78, 211.345, -60.7561, 0.29", "-114.876, 211.87, -60.7955, 0.22", "-114.94, 212.266, -60.8209, 0.22", "-115.106, 213.259, -60.8974, 0.22", "-115.37, 214.166, -60.9913, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-22.302, 30.2275, 4.00372, 0.59", "-23.6906, 30.6476, 4.94895, 0.59", "-24.3757, 30.8849, 5.36306, 0.74", "-25.6416, 31.3278, 6.03929, 0.81", "-26.2769, 31.5414, 6.34624, 0.96", "-26.9905, 31.7561, 6.67376, 1.18", "-27.8005, 31.9759, 7.03382, 0.74", "-28.5729, 32.1865, 7.34442, 0.52", "-29.1789, 32.3387, 7.58709, 0.52", "-29.818, 32.4761, 7.8275, 0.81", "-30.4908, 32.606, 8.08444, 0.96", "-31.1615, 32.7371, 8.33004, 0.74", "-31.7924, 32.873, 8.56351, 0.96", "-32.4979, 33.0532, 8.82575, 1.11", "-33.2257, 33.2812, 9.07495, 0.88", "-34.5227, 33.7393, 9.44457, 0.37", "-35.1809, 33.9826, 9.58654, 0.37", "-35.6446, 34.1343, 9.66375, 0.74", "-36.2265, 34.2823, 9.73445, 0.88", "-36.6757, 34.357, 9.77335, 0.88", "-37.4842, 34.4182, 9.83329, 0.74", "-38.2223, 34.4154, 9.88539, 0.29", "-39.0741, 34.379, 9.9451, 0.29", "-39.793, 34.3454, 9.99308, 0.74", "-40.6944, 34.3154, 10.0482, 0.88", "-41.392, 34.3142, 10.0846, 0.74", "-42.1332, 34.3594, 10.1182, 0.59", "-42.866, 34.462, 10.1428, 0.59", "-43.5077, 34.5935, 10.1549, 0.52", "-44.1781, 34.7657, 10.1799, 0.66", "-44.9462, 34.9955, 10.2261, 0.88", "-46.038, 35.3406, 10.3447, 0.29", "-47.1251, 35.6731, 10.5061, 0.88", "-47.7407, 35.8468, 10.6363, 1.18", "-48.4515, 36.0242, 10.8457, 1.33", "-48.8595, 36.112, 11.0046, 1.55", "-49.8813, 36.2969, 11.4815, 0.96", "-50.6667, 36.4018, 11.8989, 0.81", "-51.4573, 36.466, 12.3416, 0.66", "-52.1465, 36.4892, 12.7202, 0.66", "-52.7612, 36.4774, 13.0301, 0.52", "-53.4352, 36.4418, 13.3371, 0.88", "-53.926, 36.408, 13.5307, 1.11", "-54.5252, 36.3671, 13.7314, 1.18", "-55.0252, 36.3439, 13.8623, 0.96", "-55.6811, 36.3344, 14.0115, 0.66", "-56.2672, 36.3604, 14.1486, 0.44", "-56.7914, 36.429, 14.2838, 0.44", "-57.4295, 36.5813, 14.4442, 0.66", "-57.8088, 36.7139, 14.5356, 0.66", "-58.4504, 36.9824, 14.6705, 0.66", "-59.196, 37.3146, 14.7995, 0.52", "-59.9564, 37.6484, 14.9041, 0.52", "-60.8955, 38.0341, 15.0006, 0.88", "-61.6045, 38.301, 15.0561, 1.11", "-62.5188, 38.6066, 15.1404, 0.88", "-63.506, 38.8918, 15.2564, 0.66", "-64.2278, 39.0633, 15.3678, 1.11", "-65.0614, 39.2378, 15.563, 1.33", "-65.6293, 39.361, 15.7463, 0.81", "-66.5814, 39.5922, 16.1305, 0.59", "-67.3246, 39.8002, 16.4862, 0.44", "-68.3104, 40.1173, 17.016, 0.44", "-69.4926, 40.5542, 17.6848, 0.37", "-70.1932, 40.8343, 18.1469, 0.74", "-70.7841, 41.0748, 18.5543, 1.11", "-71.0954, 41.1966, 18.7658, 1.33", "-71.4844, 41.3495, 19.0123, 1.33", "-72.2301, 41.6275, 19.4372, 1.11", "-74.3234, 42.3284, 20.43, 0.74", "-75.065, 42.5267, 20.7253, 0.81", "-76.0802, 42.7742, 21.0629, 0.52", "-77.3177, 43.0796, 21.3948, 1.18", "-77.889, 43.2295, 21.5025, 1.47", "-78.5241, 43.3998, 21.5629, 1.47", "-79.5909, 43.6808, 21.5486, 0.52", "-80.4608, 43.9044, 21.5359, 0.37", "-81.3884, 44.1356, 21.5287, 0.37", "-82.5659, 44.4103, 21.5538, 0.81", "-83.2074, 44.5655, 21.564, 1.11", "-84.1282, 44.7818, 21.5724, 1.55", "-84.5521, 44.8599, 21.5738, 1.55", "-85.819, 44.9893, 21.5852, 0.44", "-86.413, 45.0073, 21.5935, 0.44", "-87.0756, 44.9965, 21.6127, 0.81", "-87.6828, 44.9724, 21.6376, 0.81", "-88.6745, 44.8891, 21.6884, 0.37", "-89.1342, 44.8244, 21.7145, 0.37", "-89.6915, 44.7147, 21.7511, 0.81", "-90.4444, 44.5786, 21.8074, 1.18", "-90.9624, 44.5186, 21.8547, 1.18", "-91.8821, 44.5065, 21.9701, 0.59", "-92.6164, 44.5705, 22.0819, 0.74", "-92.9163, 44.6099, 22.1363, 0.74", "-93.6217, 44.7468, 22.289, 0.44", "-94.3411, 44.9046, 22.4841, 0.44", "-94.912, 45.0535, 22.6849, 0.22", "-95.3191, 45.1873, 22.8607, 0.22", "-95.8479, 45.3932, 23.1409, 0.66", "-96.1562, 45.5342, 23.3403, 0.66", "-96.9087, 45.9064, 23.9377, 0.22", "-97.3358, 46.145, 24.3109, 0.22", "-97.7713, 46.4413, 24.7321, 0.44", "-98.3112, 46.883, 25.3573, 0.44", "-98.8726, 47.4026, 26.0741, 0.15", "-99.43, 47.9637, 26.8474, 0.59", "-99.7752, 48.3334, 27.3401, 0.74", "-100.107, 48.6716, 27.7912, 0.74", "-101.07, 49.5408, 28.9944, 0.52", "-101.229, 49.6655, 29.1741, 0.74", "-101.782, 50.0489, 29.7147, 0.88", "-102.22, 50.3283, 30.0802, 0.88", "-102.727, 50.6086, 30.4401, 0.37", "-103.322, 50.8848, 30.7654, 0.29", "-104.12, 51.1946, 31.0696, 0.29", "-104.903, 51.4627, 31.316, 0.81", "-105.434, 51.6266, 31.4367, 0.81", "-105.839, 51.7502, 31.5174, 0.81", "-106.193, 51.8596, 31.5469, 0.74", "-106.758, 52.0361, 31.5274, 0.96", "-107.483, 52.2539, 31.4388, 0.66", "-108.238, 52.4677, 31.3074, 0.44", "-108.921, 52.6634, 31.1606, 0.44", "-110.161, 53.05, 30.8597, 0.44", "-111.142, 53.3539, 30.6329, 0.66", "-111.707, 53.5294, 30.5099, 0.96", "-112.166, 53.6621, 30.423, 0.96", "-112.753, 53.8286, 30.3255, 0.52", "-113.421, 54.009, 30.3234, 0.66", "-114.377, 54.2369, 30.4817, 0.66", "-114.978, 54.3409, 30.6429, 0.59", "-115.887, 54.4851, 30.9262, 0.96", "-116.842, 54.6135, 31.2657, 0.96", "-118.897, 54.8145, 32.0777, 0.52", "-119.711, 54.8651, 32.4297, 0.29", "-120.92, 54.9189, 33.0022, 0.29", "-129.214, 58.4468, 37.3335, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-11.2373, 46.6101, 18.3574, 0.59", "-10.6419, 46.3135, 19.9065, 0.59", "-10.0217, 46.1929, 21.5075, 0.74", "-8.67219, 46.3493, 24.9931, 0.66", "-8.35374, 46.4769, 25.8548, 0.66", "-8.20097, 46.5924, 26.3246, 0.74", "-8.01733, 46.866, 27.1209, 0.52", "-8.01303, 47.322, 27.941, 0.52", "-8.15092, 47.7857, 28.5451, 0.66", "-8.38238, 48.2001, 28.8758, 0.81", "-8.7651, 48.7093, 29.2993, 0.96", "-9.51151, 49.4817, 30.0264, 1.03", "-10.1223, 49.971, 30.5913, 0.81", "-10.6111, 50.2955, 31.0261, 0.81", "-11.0759, 50.5715, 31.4422, 0.74", "-11.7972, 51.0384, 32.1247, 0.88", "-12.2316, 51.3824, 32.5788, 0.88", "-12.7989, 52.0077, 33.3009, 0.74", "-13.0219, 52.4027, 33.7064, 0.74", "-13.181, 52.89, 34.1412, 0.59", "-13.2848, 53.6985, 34.7894, 0.96", "-13.2713, 54.4285, 35.3043, 0.96", "-13.1432, 55.284, 35.9267, 0.96", "-12.8871, 56.2424, 36.6329, 0.66", "-12.658, 56.9121, 37.1349, 0.59", "-12.4176, 57.596, 37.6368, 0.59", "-12.2524, 58.1675, 38.0396, 0.74", "-12.0295, 59.38, 38.7943, 0.81", "-11.9951, 60.0259, 39.1186, 0.81", "-12.0673, 61.0721, 39.514, 0.81", "-12.1961, 62.0754, 39.8025, 0.81", "-12.3599, 63.1378, 40.0347, 0.74", "-12.5267, 64.2268, 40.2405, 0.74", "-12.729, 65.6598, 40.5046, 0.66", "-12.8698, 67.0478, 40.8273, 0.66", "-12.9667, 68.3481, 41.1549, 0.66", "-12.9784, 69.1384, 41.377, 0.81", "-12.9283, 70.0256, 41.6561, 0.81", "-12.799, 71.0316, 42.0223, 1.11", "-12.5684, 71.9645, 42.4801, 1.11", "-12.2237, 78.4911, 50.0487, 1.11", "-12.9884, 85.7202, 56.9157, 1.11", "-12.8208, 91.5858, 65.013, 1.11", "-11.7438, 95.482, 74.1596, 1.11", "-10.3965, 98.4932, 83.5998, 1.11", "-8.11846, 102.049, 92.6642, 1.11", "-5.01101, 107.101, 100.716, 1.11", "-0.997402, 111.331, 108.839, 1.11", "2.58167, 116.433, 116.66, 1.11" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-11.2373, 46.6101, 18.3574, 0.59", "-12.3585, 47.0876, 18.4393, 0.59", "-13.0923, 47.3542, 18.4913, 0.59", "-13.809, 47.6005, 18.5426, 0.81", "-14.4932, 47.8584, 18.5859, 0.81", "-15.3554, 48.2197, 18.6359, 0.44", "-16.3766, 48.695, 18.6911, 0.66", "-16.9599, 48.9684, 18.7289, 0.81", "-17.5906, 49.3222, 18.7654, 0.81", "-18.3823, 49.8997, 18.7989, 0.29", "-18.7435, 50.2365, 18.7862, 0.29", "-19.0684, 50.6061, 18.7438, 0.44", "-19.4069, 51.0509, 18.6719, 0.66", "-19.9419, 51.813, 18.523, 0.22", "-20.6779, 52.9101, 18.2533, 0.22", "-21.2617, 53.7659, 18.0152, 0.22", "-21.7744, 54.4881, 17.7982, 0.81", "-22.1285, 54.9821, 17.6413, 1.11", "-22.5944, 55.6501, 17.4253, 1.03", "-23.1183, 56.4161, 17.1796, 0.22", "-23.7156, 57.2943, 16.923, 0.22", "-23.9303, 57.6038, 16.8522, 0.44", "-24.3559, 58.2439, 16.7351, 0.22", "-24.7364, 58.8506, 16.6495, 0.59", "-24.984, 59.3286, 16.6149, 0.81", "-25.2349, 59.959, 16.5941, 0.29", "-25.4391, 60.6104, 16.5909, 0.29", "-25.7257, 61.689, 16.6153, 1.25", "-25.7741, 61.9041, 16.6292, 1.4", "-26.0674, 63.4035, 16.7525, 0.44", "-26.205, 64.1446, 16.8195, 0.74", "-26.3017, 64.6656, 16.8642, 0.96", "-26.4574, 65.4252, 16.925, 0.29", "-26.6339, 66.1966, 16.9785, 0.22", "-26.9148, 67.3302, 17.0543, 1.33", "-27.0909, 67.9796, 17.0965, 1.33", "-27.4225, 69.1804, 17.1663, 0.29", "-27.7329, 70.3217, 17.2287, 0.29", "-27.9518, 71.1142, 17.2674, 0.29", "-28.113, 71.7168, 17.2937, 0.52", "-28.2772, 72.407, 17.3337, 0.29", "-28.4153, 73.1261, 17.3834, 0.52", "-28.4561, 73.4462, 17.4003, 0.59", "-28.4963, 74.3972, 17.4197, 0.37", "-28.4274, 75.651, 17.406, 0.96", "-28.3589, 76.0258, 17.3969, 1.47", "-28.2064, 76.4798, 17.4036, 1.18", "-27.8353, 77.2388, 17.4748, 0.81", "-27.4608, 77.8575, 17.5914, 0.29", "-27.1585, 78.3299, 17.7272, 0.29", "-26.7813, 79.0322, 17.9764, 0.22", "-26.5629, 79.665, 18.2123, 0.22", "-26.4266, 80.4093, 18.5026, 1.03", "-26.3949, 80.9841, 18.7365, 1.25", "-26.4524, 82.09, 19.1476, 0.29", "-26.58, 83.0763, 19.4566, 0.29", "-26.7358, 83.9337, 19.6735, 0.66", "-26.8624, 84.5401, 19.8069, 0.74", "-26.9832, 85.0604, 19.9184, 0.52", "-27.1076, 85.6046, 20.041, 0.29", "-27.2838, 86.6086, 20.2921, 1.11", "-27.3503, 87.1826, 20.4329, 1.33", "-27.4361, 88.133, 20.6582, 0.74", "-27.4899, 88.7533, 20.8111, 0.29", "-27.535, 89.326, 20.9639, 0.29", "-27.5881, 90.069, 21.199, 0.29", "-27.6283, 90.595, 21.3897, 0.52", "-27.6629, 91.0139, 21.571, 0.52", "-27.7292, 91.6901, 21.89, 0.29", "-27.7874, 92.2495, 22.1865, 0.59", "-27.8504, 92.8171, 22.5203, 0.81", "-27.903, 93.2923, 22.8108, 1.03", "-27.9979, 94.1438, 23.3193, 0.59", "-28.0854, 94.8909, 23.7585, 0.29", "-28.1868, 95.7414, 24.2327, 0.22", "-28.264, 96.3028, 24.5288, 0.22", "-28.3909, 97.1672, 24.9506, 0.22", "-28.5499, 98.1316, 25.3788, 0.22", "-28.7012, 98.9395, 25.6613, 0.66", "-28.8218, 99.5418, 25.8223, 0.96", "-28.9632, 100.157, 25.9245, 0.96", "-29.0743, 100.611, 25.9477, 0.96", "-29.2428, 101.279, 25.884, 0.52", "-29.4898, 102.3, 25.6589, 0.22", "-29.6252, 102.836, 25.4965, 0.22", "-29.7288, 103.219, 25.3699, 0.88", "-29.8952, 103.795, 25.1767, 1.03", "-30.2423, 104.853, 24.817, 0.44", "-30.4358, 105.388, 24.6557, 0.29", "-30.644, 105.909, 24.537, 0.29", "-30.8595, 106.419, 24.4495, 0.66", "-31.081, 106.927, 24.4062, 0.66", "-31.4, 107.641, 24.408, 0.22", "-31.6775, 108.26, 24.4446, 0.22", "-31.8849, 108.735, 24.4827, 0.74", "-32.1209, 109.279, 24.5268, 0.74", "-32.5768, 110.344, 24.5861, 0.22", "-32.7816, 110.862, 24.6396, 0.22", "-33.0572, 111.626, 24.7315, 0.74", "-33.2018, 112.054, 24.7714, 0.81", "-33.5185, 113.082, 24.8252, 0.22", "-33.7753, 113.981, 24.838, 0.22", "-34.1389, 115.353, 24.797, 0.22", "-34.2942, 115.946, 24.7749, 0.66", "-34.4341, 116.46, 24.7388, 0.66", "-34.6948, 117.363, 24.6464, 0.37", "-34.8358, 117.823, 24.5871, 0.37", "-35.1914, 118.834, 24.4076, 0.96", "-35.4709, 119.516, 24.2372, 1.18", "-35.8088, 120.265, 24.0449, 1.25", "-36.1137, 120.91, 23.8782, 0.52", "-36.3623, 121.418, 23.7407, 0.37", "-36.6141, 121.948, 23.5752, 0.29", "-36.8971, 122.604, 23.35, 0.22", "-37.0685, 123.102, 23.1609, 0.22", "-37.2813, 123.867, 22.8763, 0.66", "-37.3601, 124.196, 22.7507, 0.81", "-37.4861, 124.81, 22.5201, 0.81", "-37.6773, 125.957, 22.118, 0.29", "-37.8494, 127.454, 21.5779, 0.59", "-37.8973, 128.102, 21.3486, 0.59", "-37.9243, 128.665, 21.1521, 0.59", "-37.9451, 129.239, 20.9684, 0.59", "-37.9638, 129.878, 20.7939, 0.22", "-37.9778, 130.821, 20.5939, 0.22", "-37.982, 131.848, 20.4555, 0.74", "-37.98, 132.425, 20.3904, 0.74", "-37.9789, 133.058, 20.3338, 0.74", "-37.9912, 133.978, 20.2663, 0.29", "-38.0144, 135.116, 20.2166, 0.29", "-38.0309, 135.858, 20.2142, 0.74", "-38.0302, 136.633, 20.2165, 0.96", "-38.0203, 137.078, 20.2172, 1.18", "-37.9848, 137.831, 20.2201, 0.88", "-37.9376, 138.691, 20.2247, 0.22", "-37.9047, 139.706, 20.2561, 0.59", "-37.9067, 140.159, 20.2861, 0.59", "-37.9149, 140.43, 20.3149, 0.59", "-37.9707, 141.443, 20.4481, 0.22", "-37.9907, 141.709, 20.4857, 0.22", "-38.1402, 143.019, 20.6568, 0.22", "-38.2637, 143.837, 20.7593, 0.88", "-38.3532, 144.332, 20.8163, 0.88", "-38.4665, 144.874, 20.8723, 0.66", "-38.8113, 146.217, 20.9835, 0.22", "-39.0977, 147.215, 21.0391, 0.59", "-39.2863, 147.771, 21.0457, 0.74", "-39.5541, 148.474, 21.0398, 0.59", "-39.7717, 149.005, 21.0197, 0.44", "-40.0755, 149.719, 20.954, 0.81", "-40.2766, 150.137, 20.8913, 1.03", "-40.4827, 150.567, 20.8099, 1.18", "-40.5882, 150.796, 20.7607, 1.18", "-40.8573, 151.394, 20.6207, 0.66", "-41.3516, 152.606, 20.3531, 0.29", "-41.624, 153.419, 20.1977, 0.29", "-41.849, 154.24, 20.0683, 0.74", "-41.9906, 154.958, 19.9554, 0.74", "-42.0198, 155.173, 19.9163, 0.74", "-42.1167, 156.56, 19.6211, 0.29", "-42.1086, 157.764, 19.2932, 0.29", "-42.0617, 158.523, 19.039, 0.29", "-41.9185, 160.067, 18.4601, 0.88", "-41.8415, 160.791, 18.1647, 1.03", "-41.7146, 162.001, 17.6377, 0.22", "-41.5631, 163.389, 16.9821, 0.88", "-41.5038, 163.988, 16.692, 1.03", "-41.4206, 164.858, 16.3035, 0.52", "-41.3522, 165.507, 16.0601, 0.52", "-41.2877, 166.022, 15.9135, 0.88", "-41.1855, 166.597, 15.7915, 0.88", "-41.104, 166.96, 15.7365, 0.88", "-40.8494, 167.879, 15.6117, 0.22", "-40.6203, 168.57, 15.5177, 0.22", "-40.2881, 169.555, 15.3934, 0.88", "-40.0728, 170.218, 15.3138, 1.11", "-39.9169, 170.742, 15.2597, 1.11", "-39.7461, 171.378, 15.2043, 0.74", "-39.4755, 172.528, 15.1267, 0.29", "-39.2826, 173.519, 15.087, 0.29", "-39.1432, 174.37, 15.0664, 0.29", "-39.0217, 175.32, 15.0587, 0.74", "-38.9574, 175.912, 15.0611, 0.74", "-38.8861, 176.712, 15.0662, 0.44", "-38.7634, 178.251, 15.0754, 1.11", "-38.705, 179.053, 15.0801, 1.11", "-38.6646, 179.886, 15.0767, 0.81", "-38.6328, 180.978, 15.0875, 0.37", "-38.6257, 181.941, 15.1166, 0.37", "-38.6537, 182.831, 15.1708, 0.74", "-38.7374, 183.794, 15.2569, 0.29", "-38.8154, 184.355, 15.317, 0.29", "-38.9666, 185.295, 15.4293, 0.74", "-39.066, 185.87, 15.5039, 0.74", "-39.2302, 186.98, 15.6566, 0.29", "-39.349, 188.017, 15.8, 0.29", "-39.4277, 189.149, 15.9423, 0.29", "-39.4544, 190.251, 16.0215, 0.96", "-39.4487, 190.848, 16.0335, 0.96", "-39.4125, 191.679, 16.0219, 0.66", "-39.3752, 192.211, 15.9814, 0.22", "-39.2746, 193.368, 15.8277, 0.22", "-39.1313, 195.05, 15.5275, 1.4", "-39.1159, 195.349, 15.4604, 1.62", "-39.1092, 195.843, 15.3276, 1.62", "-39.1417, 197.263, 14.9128, 0.22", "-39.1736, 197.929, 14.7045, 0.22", "-39.2291, 198.838, 14.4209, 0.66", "-39.2584, 199.343, 14.2761, 0.66", "-39.2987, 200.307, 14.0177, 0.44", "-39.34, 201.179, 13.8174, 0.81", "-39.3846, 201.807, 13.7213, 0.81", "-39.4761, 202.819, 13.6158, 0.22", "-39.5449, 203.511, 13.588, 0.74", "-39.6088, 204.191, 13.6403, 0.74", "-39.7117, 205.343, 13.8883, 0.15", "-39.7889, 206.158, 14.1701, 0.15", "-39.8362, 206.702, 14.4024, 0.59", "-39.8878, 207.359, 14.7127, 0.59", "-39.9456, 208.354, 15.2034, 0.37", "-39.9441, 209.385, 15.7056, 0.44", "-39.8712, 210.227, 16.1025, 0.22", "-39.7556, 210.973, 16.4389, 0.66", "-39.6248, 211.625, 16.7441, 1.03", "-39.5159, 212.034, 16.9257, 1.03", "-39.2744, 212.726, 17.2209, 0.37", "-39.0651, 213.203, 17.4487, 0.37", "-38.5782, 214.171, 17.9929, 0.22", "-38.2449, 214.813, 18.3996, 0.22", "-37.9596, 215.399, 18.7839, 0.74", "-37.7463, 215.938, 19.1262, 0.74", "-37.5582, 216.564, 19.4882, 0.44", "-37.3286, 217.567, 19.9698, 0.88", "-37.2167, 218.184, 20.1861, 1.11", "-37.0776, 219.109, 20.4329, 0.66", "-36.9772, 219.964, 20.6139, 0.22", "-36.8943, 220.766, 20.7349, 0.22", "-36.8011, 221.723, 20.8227, 0.44", "-36.6372, 223.365, 20.8975, 0.22", "-36.5249, 224.231, 20.9226, 0.44", "-36.4647, 224.598, 20.9252, 0.44", "-36.3162, 225.323, 20.9243, 0.22", "-36.1531, 226.121, 20.916, 0.22", "-36.0316, 226.772, 20.9023, 0.44", "-35.9722, 227.18, 20.898, 0.22", "-39.3743, 236.345, 23.0039, 0.22" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "42.119, 140.789, 5.36954, 0.44", "42.593, 141.957, 5.38502, 0.44", "43.1103, 143.243, 5.44838, 0.37", "43.5998, 144.391, 5.57503, 1.18", "43.7495, 144.746, 5.655, 1.55", "44.0399, 145.464, 5.86634, 0.96", "44.4446, 146.44, 6.18987, 0.22", "44.8544, 147.319, 6.59281, 0.22", "45.2223, 148.101, 6.9979, 0.22", "46.0953, 149.915, 8.03761, 0.22", "46.543, 150.814, 8.59146, 0.44", "46.8635, 151.418, 9.00096, 0.37", "47.52, 152.608, 9.87716, 0.29", "51.7288, 161.536, 11.4806, 0.29", "55.433, 170.311, 14.529, 0.29", "58.06, 179.771, 16.4241, 0.29", "62.8457, 188.318, 18.4378, 0.29", "68.2656, 196.3, 21.0652, 0.29" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "42.119, 140.789, 5.36954, 0.29", "41.017, 141.04, 5.24929, 0.29", "40.6678, 141.125, 5.21465, 0.44", "40.3748, 141.196, 5.18891, 0.44", "39.3767, 141.422, 5.10837, 0.22", "38.5954, 141.599, 5.04533, 0.22", "38.01, 141.731, 4.99809, 0.22", "36.9849, 141.974, 4.91327, 0.22", "36.3367, 142.104, 4.86567, 0.52", "36.0352, 142.153, 4.84975, 0.52", "26.9274, 145.96, 3.25183, 0.52" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "30.5944, 41.2429, -0.589474, 0.52", "31.6689, 41.4375, -1.87951, 0.52", "32.433, 41.5564, -2.72196, 0.44", "32.9698, 41.6345, -3.21988, 0.59", "33.4883, 41.7142, -3.65457, 0.81", "34.2813, 41.8458, -4.35626, 0.81", "34.8113, 41.9332, -4.8343, 0.66", "35.4404, 42.046, -5.36531, 0.37", "36.3192, 42.187, -6.07128, 0.37", "36.9767, 42.296, -6.56909, 0.88", "38.672, 42.5563, -7.8021, 1.03", "39.4426, 42.6675, -8.31821, 1.11", "39.8934, 42.7203, -8.60618, 1.25", "40.521, 42.7762, -9.00051, 0.96", "41.2781, 42.8383, -9.45027, 0.37", "42.4855, 42.9308, -10.038, 0.29", "43.115, 42.9851, -10.261, 0.66", "43.7223, 43.0317, -10.456, 0.66", "44.2469, 43.0622, -10.6361, 0.66", "44.8856, 43.1073, -10.8619, 0.22", "45.3853, 43.1491, -11.0322, 0.22", "46.1349, 43.212, -11.265, 0.96", "46.8544, 43.2467, -11.4896, 1.4", "47.4885, 43.2491, -11.6865, 1.55", "48.062, 43.2186, -11.823, 0.88", "48.7492, 43.15, -11.9505, 0.44", "49.6107, 43.0585, -12.0668, 0.59", "50.2125, 42.996, -12.1165, 0.29", "51.1905, 42.9041, -12.1455, 0.29", "52.4892, 42.7625, -12.1089, 0.52", "53.0753, 42.6844, -12.0769, 1.11", "53.465, 42.6066, -12.0474, 1.11", "53.8979, 42.5001, -12.011, 1.11", "54.5577, 42.324, -11.9926, 0.96", "55.1941, 42.1402, -12.0166, 0.52", "55.6908, 41.9946, -12.0825, 0.29", "56.7419, 41.6799, -12.2531, 0.29", "57.3567, 41.502, -12.3811, 0.96", "58.049, 41.3202, -12.5597, 0.96", "58.499, 41.2154, -12.6932, 0.96", "58.9824, 41.1148, -12.8612, 0.59", "59.4174, 41.0273, -13.0364, 0.59", "60.5027, 40.8231, -13.5338, 0.22", "61.0824, 40.7176, -13.8406, 0.22", "61.4778, 40.6555, -14.0739, 0.96", "61.9163, 40.5976, -14.3526, 1.18", "62.9476, 40.4823, -15.0587, 0.44", "63.3797, 40.428, -15.3569, 0.44", "64.0491, 40.3349, -15.8855, 1.11", "64.6313, 40.2614, -16.3648, 1.33", "65.0999, 40.2076, -16.7291, 1.33", "65.6143, 40.1533, -17.1053, 1.03", "66.6544, 40.0499, -17.831, 0.22", "68.1066, 39.878, -18.7917, 0.88", "68.4997, 39.8166, -19.045, 1.11", "69.5157, 39.6374, -19.736, 0.22", "70.1013, 39.5313, -20.1468, 0.66", "70.6485, 39.4412, -20.5282, 0.81", "71.0828, 39.3761, -20.8419, 0.59", "72.004, 39.2347, -21.476, 0.29", "72.8293, 39.0999, -22.0885, 0.59", "73.2385, 39.0273, -22.3954, 0.59", "74.3709, 38.8218, -23.2057, 0.22", "75.1596, 38.6875, -23.7596, 0.22", "75.7696, 38.5934, -24.18, 1.25", "76.284, 38.5275, -24.5273, 1.25", "77.7566, 38.384, -25.4895, 0.22", "78.7718, 38.3009, -26.1638, 0.22", "79.5458, 38.2226, -26.6644, 0.52", "79.9994, 38.1682, -26.9355, 0.52", "80.3898, 38.1134, -27.1671, 0.52", "81.0176, 38.0131, -27.5249, 0.22", "81.7438, 37.8854, -27.9066, 0.22", "82.4016, 37.7428, -28.2344, 0.22", "83.2048, 37.5474, -28.6092, 0.81", "83.84, 37.3817, -28.8948, 0.81", "84.9922, 37.0554, -29.3895, 0.15", "85.919, 36.7966, -29.7678, 0.22", "86.9855, 36.5252, -30.1931, 1.11", "87.7362, 36.3559, -30.4884, 1.55", "88.1809, 36.2594, -30.6567, 1.55", "88.8449, 36.1095, -30.8934, 0.96", "90.9934, 35.598, -31.6613, 0.22", "91.6173, 35.4412, -31.8908, 0.88", "92.022, 35.3373, -32.032, 1.03", "92.4152, 35.2304, -32.1749, 1.03", "93.9129, 34.8149, -32.7318, 0.22", "94.3936, 34.683, -32.9086, 0.52", "94.6744, 34.6025, -33.0085, 0.52", "95.4986, 34.3779, -33.2908, 0.22", "96.1384, 34.2192, -33.496, 0.74", "96.6733, 34.0969, -33.651, 0.74", "97.6666, 33.8888, -33.9086, 0.22", "98.169, 33.7745, -34.0368, 0.44", "98.6893, 33.6449, -34.1835, 0.44", "99.9318, 33.3602, -34.5457, 0.22", "100.609, 33.2212, -34.7457, 0.52", "101.403, 33.0658, -35.0001, 0.52", "102.167, 32.9247, -35.2824, 1.03", "102.612, 32.8489, -35.4544, 1.03", "103.995, 32.6424, -35.9868, 0.22", "104.716, 32.5494, -36.271, 0.81", "105.422, 32.4779, -36.5408, 1.03", "107.559, 32.3214, -37.3952, 0.22", "109.113, 32.2884, -38.0446, 0.22", "110.195, 32.2968, -38.5151, 0.88", "110.736, 32.3062, -38.7737, 1.4", "111.214, 32.3238, -39.0073, 0.96", "112.304, 32.3912, -39.5594, 0.66", "113.926, 32.5516, -40.4976, 0.22", "114.472, 32.6057, -40.8412, 0.22", "115.548, 32.69, -41.5546, 0.22", "116.28, 32.7318, -42.0472, 0.66", "116.825, 32.7462, -42.4208, 0.66", "118.564, 32.7401, -43.5795, 0.29", "119.322, 32.7137, -44.0981, 0.66", "119.839, 32.6963, -44.4587, 0.66", "120.823, 32.6697, -45.1639, 0.22", "121.476, 32.6422, -45.6514, 0.59", "122.153, 32.6016, -46.1645, 0.59", "123.194, 32.4978, -47.0368, 0.22", "124.142, 32.3812, -47.9044, 0.88", "124.6, 32.3072, -48.3214, 0.88", "125.569, 32.1175, -49.1979, 0.22", "126.301, 31.9574, -49.8602, 0.52", "127.827, 31.5876, -51.2095, 0.22", "128.731, 31.3593, -51.9598, 0.22", "130.038, 31.0275, -52.9554, 0.22", "130.413, 30.9359, -53.21, 0.44", "131.149, 30.7602, -53.6466, 0.44", "132.178, 30.5237, -54.1688, 0.88", "133.73, 30.1962, -54.8057, 0.22", "134.403, 30.0682, -55.0829, 0.44", "135.412, 29.9007, -55.5199, 0.22", "136.229, 29.7837, -55.8716, 0.44", "136.65, 29.7499, -56.0586, 0.44", "138.25, 29.7525, -56.7982, 0.22", "139.37, 29.853, -57.3396, 0.88", "139.621, 29.9134, -57.4752, 0.88", "140.144, 30.1443, -57.8032, 0.22", "141.326, 30.9568, -58.607, 0.22", "141.892, 31.44, -59.0184, 0.88", "142.26, 31.8198, -59.3037, 0.88", "143.264, 32.9045, -60.0596, 0.22", "143.979, 33.6885, -60.6087, 0.22", "145.354, 35.2099, -61.6944, 0.22", "145.976, 35.8516, -62.153, 0.96", "146.358, 36.2007, -62.4159, 0.96", "147.134, 36.8224, -62.908, 0.15", "147.864, 37.3017, -63.3067, 0.37", "148.281, 37.5373, -63.5183, 0.59", "149.892, 38.3196, -64.2923, 0.22", "150.542, 38.6196, -64.5865, 0.66", "151.025, 38.8227, -64.8049, 0.66", "152.24, 39.2879, -65.3807, 0.22", "153.142, 39.5899, -65.8205, 0.44", "153.6, 39.7056, -66.1295, 0.44", "154.222, 39.8218, -66.6911, 0.22", "154.833, 39.8963, -67.3224, 0.22", "155.336, 39.9194, -67.8943, 0.59", "155.7, 39.9271, -68.3656, 0.81", "157.52, 40.0055, -70.8962, 0.22", "158.116, 40.0407, -71.7285, 0.22", "158.704, 40.0733, -72.528, 0.22", "159.344, 40.1305, -73.3537, 0.22", "160.439, 40.2664, -74.6654, 1.03", "160.951, 40.351, -75.2197, 1.03", "162.157, 40.6039, -76.2906, 0.22", "162.887, 40.7721, -76.9529, 0.22", "163.546, 40.9672, -77.5738, 0.88", "163.767, 41.0467, -77.8012, 0.88", "164.408, 41.2772, -78.4595, 0.66", "165.099, 41.5448, -79.2079, 0.22", "166.486, 42.2324, -80.941, 0.81", "167.205, 42.638, -81.9201, 0.22", "168.218, 43.231, -83.3991, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "30.5944, 41.2429, -0.589474, 0.81", "31.8032, 42.3451, -0.474849, 0.81", "32.8096, 43.1222, -0.376396, 1.11", "33.6544, 43.6711, -0.298287, 1.03", "34.339, 44.0746, -0.244082, 0.59", "34.7545, 44.3066, -0.224657, 0.59", "35.5428, 44.7291, -0.221153, 0.52", "36.5248, 45.1398, -0.227625, 0.66", "37.2957, 45.3975, -0.246271, 1.03", "37.7533, 45.5352, -0.27141, 1.25", "38.5043, 45.7562, -0.343275, 0.96", "39.1207, 45.951, -0.446093, 0.81" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "111.867, -167.177, -23.7983, 0.52", "113.705, -169.163, -23.0618, 0.52", "114.287, -169.797, -22.8443, 0.52", "115.366, -170.996, -22.4436, 0.44", "116.054, -171.744, -22.2073, 0.44", "117.75, -173.531, -21.6721, 0.44", "118.595, -174.43, -21.4379, 0.44", "119.364, -175.255, -21.3013, 0.44", "120.341, -176.315, -21.1386, 0.44", "121.429, -177.545, -20.9711, 0.44", "122.224, -178.466, -20.8629, 0.44", "124.051, -180.638, -20.6202, 0.44", "124.743, -181.465, -20.5084, 0.44", "126.456, -183.518, -20.2092, 0.44", "128.245, -185.625, -19.8685, 0.44", "128.846, -186.319, -19.7379, 0.44", "129.923, -187.522, -19.4982, 0.44", "130.982, -188.631, -19.2667, 0.44", "132.039, -189.69, -19.0607, 0.44", "132.906, -190.534, -18.9167, 0.44", "134.525, -192.169, -18.689, 0.44", "135.025, -192.742, -18.6355, 0.44", "136.025, -194.058, -18.6107, 0.44", "136.991, -195.488, -18.6457, 0.37", "137.901, -197.02, -18.731, 0.37", "138.554, -198.273, -18.836, 0.37", "139.91, -201.296, -19.0998, 0.37", "140.724, -203.317, -19.2765, 0.37", "141.262, -204.767, -19.4201, 0.37", "141.773, -206.267, -19.5913, 0.37", "142.25, -207.748, -19.789, 0.37", "142.918, -209.909, -20.1066, 0.37", "143.194, -211.006, -20.2774, 0.37" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "111.867, -167.177, -23.7983, 0.52", "112.053, -167.999, -24.0393, 0.52", "112.522, -169.678, -24.5052, 0.52", "112.908, -170.969, -24.8616, 0.52", "113.409, -172.422, -25.305, 0.52", "113.695, -173.171, -25.5512, 0.52", "113.969, -173.781, -25.7443, 0.52", "114.577, -174.939, -26.1079, 0.52", "115.043, -175.752, -26.3417, 0.52", "115.839, -177.137, -26.7109, 0.52", "116.307, -178.03, -26.9524, 0.52", "117.433, -180.345, -27.565, 0.52", "117.844, -181.25, -27.8017, 0.52", "118.656, -183.138, -28.2811, 0.52", "119.308, -184.686, -28.6899, 0.52", "120.41, -187.49, -29.4708, 0.52", "121.166, -189.549, -30.0823, 0.52", "121.525, -190.633, -30.4225, 0.52", "122.24, -192.721, -31.097, 0.52", "122.749, -194.116, -31.5839, 0.52", "123.236, -195.278, -32.0383, 0.52", "123.831, -196.486, -32.4822, 0.52", "124.767, -198.085, -33.0034, 0.52", "125.751, -199.498, -33.3835, 0.52", "126.64, -200.623, -33.611, 0.52", "127.859, -202.094, -33.7889, 0.52", "129.678, -204.162, -33.9039, 0.52", "131.62, -206.27, -33.9236, 0.52", "133.453, -208.198, -33.8604, 0.52", "134.626, -209.372, -33.7653, 0.52", "138.247, -212.892, -33.3665, 0.52", "139.254, -213.838, -33.2617, 0.52", "140.92, -215.335, -33.1122, 0.52", "142.473, -216.701, -32.9653, 0.52", "145.747, -219.491, -32.6512, 0.52", "147.291, -220.729, -32.5093, 0.52", "149.609, -222.381, -32.3303, 0.52", "150.657, -223.132, -32.2856, 0.52" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "6.90457, -50.0175, -18.8245, 0.66", "6.68754, -51.0569, -20.5813, 0.66", "6.42525, -52.1638, -22.1128, 0.66", "6.00824, -53.9747, -24.0884, 0.66", "5.74116, -55.3078, -25.2888, 0.66", "5.62843, -55.961, -25.8113, 0.66", "5.41775, -57.472, -26.9413, 0.66", "5.27976, -58.9587, -27.8435, 0.66", "5.18488, -60.8093, -28.7192, 0.66", "5.16903, -62.4731, -29.412, 0.66", "5.23756, -64.1528, -30.1309, 0.66", "5.3553, -65.7981, -30.8871, 0.66", "5.46278, -66.9659, -31.4436, 0.66", "5.60017, -68.4852, -32.2843, 0.59", "5.72305, -70.0966, -33.3106, 0.59", "5.78272, -71.2616, -34.0782, 0.59", "5.81105, -72.2736, -34.7549, 0.59", "5.84245, -74.0859, -35.9471, 0.59", "5.86368, -77.0761, -38.007, 0.59", "5.8881, -78.3952, -38.9686, 0.59", "5.94798, -79.3974, -39.6796, 0.59", "6.08647, -80.774, -40.6541, 0.59", "6.28201, -81.9681, -41.5271, 0.59", "6.77574, -84.189, -43.1919, 0.59", "7.31845, -86.1095, -44.494, 0.59", "7.64474, -87.1157, -45.1773, 0.59", "7.83945, -87.6152, -45.5076, 0.59", "8.40055, -88.8161, -46.2248, 0.59", "9.23313, -90.2999, -46.9916, 0.59", "10.2411, -91.8231, -47.6171, 0.59", "11.0797, -93.0226, -48.0935, 0.59", "12.1942, -94.5824, -48.7284, 0.59", "13.123, -95.9313, -49.2517, 0.59", "14.5488, -98.1164, -50.0028, 0.59", "16.1527, -100.671, -50.8916, 0.52", "16.9672, -102.038, -51.3837, 0.52", "17.3587, -102.767, -51.6526, 0.44", "18.8414, -105.913, -53.0476, 0.44", "19.7874, -108.124, -54.1474, 0.44", "21.0023, -111.209, -55.7769, 0.44", "21.3038, -112.015, -56.2038, 0.44", "22.7491, -115.923, -58.2982, 0.44", "23.9963, -119.309, -60.2515, 0.44", "24.7812, -121.433, -61.5466, 0.44", "25.3961, -123.094, -62.5558, 0.44", "26.0611, -124.941, -63.5891, 0.44", "26.3534, -125.734, -63.9937, 0.44", "26.899, -127.167, -64.6334, 0.44", "27.5415, -128.721, -65.2439, 0.44", "28.2927, -130.397, -66.001, 0.44", "28.7965, -131.384, -66.567, 0.44", "29.3452, -132.349, -67.207, 0.44", "30.2879, -133.89, -68.3338, 0.44", "31.158, -135.231, -69.3929, 0.44", "31.8664, -136.234, -70.2881, 0.44", "32.7705, -137.364, -71.3205, 0.44", "33.5405, -138.266, -72.0972, 0.44", "34.5035, -139.475, -72.9718, 0.44", "34.9508, -140.11, -73.3308, 0.44", "35.6141, -141.201, -73.8227, 0.44", "36.6397, -143.087, -74.6002, 0.44", "37.0281, -143.897, -74.9127, 0.44", "37.9073, -145.988, -75.7934, 0.44", "38.3345, -147.173, -76.3306, 0.44", "38.5433, -147.864, -76.6805, 0.44", "38.8679, -149.155, -77.3671, 0.44", "39.007, -149.726, -77.668, 0.44", "39.3817, -150.95, -78.2722, 0.44", "39.8936, -152.442, -78.9319, 0.44", "40.0708, -152.963, -79.1513, 0.44", "40.4455, -154.187, -79.6505, 0.44", "40.9547, -156.038, -80.3703, 0.44", "41.2085, -157.065, -80.7793, 0.44", "42.1245, -161.063, -82.443, 0.44", "42.4984, -162.925, -83.223, 0.44", "42.8197, -164.691, -83.9855, 0.44", "43.2802, -167.309, -85.2044, 0.44", "43.5278, -168.695, -85.8832, 0.44", "43.9812, -170.815, -86.9257, 0.44", "44.5373, -172.783, -87.8663, 0.44", "45.2456, -174.789, -88.8076, 0.44", "46.2061, -177.027, -89.8239, 0.44", "47.0301, -178.641, -90.5199, 0.44", "48.1151, -180.431, -91.2599, 0.44", "49.2232, -182.033, -91.8876, 0.44", "49.9063, -182.937, -92.2481, 0.44", "50.908, -184.252, -92.7247, 0.44", "51.9542, -185.797, -93.2008, 0.44", "52.6822, -187.073, -93.6108, 0.44", "53.426, -188.831, -94.1298, 0.44", "54.036, -190.731, -94.6003, 0.44", "54.3225, -191.85, -94.8237, 0.44", "54.893, -194.49, -95.2688, 0.44", "55.326, -196.815, -95.6216, 0.44", "56.1431, -201.379, -96.3327, 0.44", "56.9969, -205.456, -96.9969, 0.44", "57.9447, -209.031, -97.5933, 0.44", "58.5175, -210.837, -97.9066, 0.44", "59.2733, -212.892, -98.2824, 0.44", "60.1105, -214.981, -98.7026, 0.44", "61.3978, -218.01, -99.4523, 0.44", "62.9192, -221.476, -100.41, 0.44", "63.6001, -223.084, -100.849, 0.44", "64.7144, -226.262, -101.605, 0.44", "65.3574, -228.598, -102.063, 0.44", "65.7932, -230.84, -102.42, 0.44", "66.0027, -232.428, -102.661, 0.44", "66.2618, -235.631, -103.123, 0.44", "66.4891, -239.68, -103.649, 0.44", "66.5532, -242.023, -103.865, 0.44", "66.5646, -243.771, -103.956, 0.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "6.90457, -50.0175, -18.8245, 0.59", "8.70211, -51.1061, -19.682, 0.59", "9.11592, -51.3677, -19.892, 0.59", "9.9515, -51.8588, -20.294, 0.52", "10.7755, -52.3167, -20.6371, 0.52", "11.4603, -52.6899, -20.8871, 0.52", "12.7032, -53.3328, -21.2833, 0.44", "13.9432, -53.9549, -21.5746, 0.44", "15.0588, -54.5294, -21.8056, 0.44", "16.4396, -55.3154, -22.0985, 0.44", "18.0354, -56.2853, -22.4205, 0.44", "19.3356, -57.1484, -22.6885, 0.44", "20.386, -57.9304, -22.9195, 0.44", "21.6059, -58.9304, -23.1773, 0.44", "22.7812, -59.9837, -23.4585, 0.44", "23.5926, -60.7792, -23.6885, 0.44", "24.2671, -61.4837, -23.9094, 0.44", "25.0809, -62.3973, -24.2181, 0.44", "25.8064, -63.2408, -24.5068, 0.44", "26.3885, -63.8972, -24.741, 0.44", "27.4025, -64.9801, -25.1228, 0.44", "28.5165, -66.15, -25.5707, 0.44", "29.5044, -67.2139, -25.9918, 0.44", "30.2542, -68.0747, -26.3491, 0.44", "31.3296, -69.3318, -26.9028, 0.44", "32.2867, -70.447, -27.4021, 0.44", "33.2649, -71.5388, -27.9161, 0.44", "34.1437, -72.4901, -28.3799, 0.44", "35.1252, -73.5254, -28.9253, 0.44", "36.315, -74.7502, -29.6352, 0.44", "36.9897, -75.4359, -30.0596, 0.44", "38.0886, -76.4858, -30.7227, 0.44", "39.5573, -77.8234, -31.5401, 0.44", "41.2246, -79.3113, -32.3853, 0.44", "42.2316, -80.2041, -32.8862, 0.44", "43.7074, -81.5547, -33.6418, 0.44", "45.6986, -83.4024, -34.6413, 0.44", "46.7258, -84.3695, -35.1529, 0.44", "48.0867, -85.686, -35.8485, 0.44", "48.9108, -86.5411, -36.2836, 0.44", "50.5404, -88.4257, -37.1998, 0.44", "51.3359, -89.4195, -37.6705, 0.44", "52.4124, -90.8106, -38.3764, 0.44", "53.8263, -92.6325, -39.3256, 0.44", "55.1345, -94.2947, -40.1849, 0.44", "55.8155, -95.1665, -40.5874, 0.44", "56.7809, -96.3774, -41.1212, 0.44", "58.1225, -98.0866, -41.7795, 0.44", "59.0677, -99.2977, -42.1698, 0.44", "59.7558, -100.163, -42.4075, 0.44", "61.0067, -101.745, -42.7862, 0.44", "63.0045, -104.322, -43.3397, 0.44", "65.2744, -107.338, -43.8959, 0.44", "66.0142, -108.325, -44.0551, 0.44", "68.5929, -111.653, -44.6208, 0.44", "69.8834, -113.235, -44.9184, 0.44", "70.2898, -113.702, -45.0157, 0.44", "71.1966, -114.635, -45.2203, 0.44", "72.4553, -115.74, -45.5647, 0.44", "73.3739, -116.474, -45.8169, 0.44", "75.1242, -117.745, -46.364, 0.44", "75.9909, -118.353, -46.6567, 0.44", "78.235, -119.805, -47.5162, 0.44", "80.1643, -120.958, -48.3082, 0.44", "82.8222, -122.401, -49.3841, 0.44", "85.7276, -123.833, -50.5313, 0.44", "87.9236, -124.784, -51.3707, 0.44", "92.8585, -126.628, -53.1788, 0.44", "94.8323, -127.263, -53.8781, 0.44", "97.3656, -127.976, -54.6233, 0.44", "99.2047, -128.41, -55.0514, 0.44", "101.35, -128.874, -55.3667, 0.44", "103.216, -129.282, -55.5293, 0.37", "105.135, -129.75, -55.6019, 0.37", "108.176, -130.591, -55.7183, 0.37", "110.791, -131.37, -55.9192, 0.37", "112.484, -131.901, -56.0664, 0.37", "115.07, -132.756, -56.3231, 0.37", "116.63, -133.286, -56.4992, 0.37", "119.083, -134.084, -56.8492, 0.37", "121.059, -134.706, -57.3596, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-23.422, -96.6834, 5.28893, 0.59", "-23.3157, -97.7099, 5.07148, 0.59", "-23.2655, -98.8849, 4.83476, 0.59", "-23.2222, -99.7776, 4.60267, 0.59", "-23.2039, -100.141, 4.49951, 0.59", "-23.1194, -101.636, 4.07663, 0.59", "-23.0847, -102.474, 3.84355, 0.59", "-23.0823, -103.052, 3.67849, 0.59", "-23.099, -104.294, 3.33609, 0.52", "-23.13, -105.572, 2.95232, 0.52", "-23.1878, -107.34, 2.3671, 0.52", "-23.247, -108.499, 1.94225, 0.52", "-23.3077, -109.087, 1.72086, 0.52", "-23.4584, -109.935, 1.38314, 0.52", "-23.6277, -110.505, 1.15535, 0.52", "-23.9056, -111.165, 0.887047, 0.52", "-24.0901, -111.529, 0.737605, 0.52", "-24.4881, -112.362, 0.419816, 0.52", "-24.7089, -112.812, 0.258163, 0.52", "-25.0145, -113.442, 0.0532033, 0.52", "-25.7088, -114.995, -0.377996, 0.52", "-26.0105, -115.753, -0.55042, 0.52", "-26.4143, -116.916, -0.787662, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-23.422, -96.6834, 5.28893, 0.59", "-24.0949, -97.6993, 5.37001, 0.59", "-24.6305, -98.5285, 5.46769, 0.59", "-25.2866, -99.5546, 5.60033, 0.59", "-25.961, -100.6, 5.71139, 0.59", "-26.9748, -102.081, 5.91953, 0.59", "-28.0654, -103.621, 6.16347, 0.59", "-28.587, -104.345, 6.29524, 0.59", "-29.195, -105.07, 6.45237, 0.59", "-30.132, -106.055, 6.70634, 0.59", "-31.3061, -107.173, 7.01384, 0.59", "-32.2091, -107.979, 7.21392, 0.59", "-33.0955, -108.766, 7.36619, 0.59", "-34.7655, -110.314, 7.61321, 0.59", "-35.6513, -111.16, 7.71852, 0.59", "-36.5953, -112.119, 7.76554, 0.59", "-37.7819, -113.429, 7.69742, 0.59", "-38.4575, -114.208, 7.61955, 0.59", "-39.5963, -115.58, 7.43028, 0.59", "-40.5122, -116.719, 7.22397, 0.59", "-41.608, -118.051, 6.94767, 0.59", "-42.5465, -119.206, 6.69798, 0.59", "-43.2411, -120.086, 6.5104, 0.59", "-44.2586, -121.454, 6.22743, 0.59", "-44.8404, -122.271, 6.07203, 0.59", "-45.3817, -123.059, 5.94804, 0.59", "-46.1392, -124.179, 5.83615, 0.59", "-46.6676, -124.967, 5.78535, 0.59", "-47.3587, -125.99, 5.75284, 0.59", "-47.9919, -126.92, 5.75123, 0.59", "-48.6971, -127.883, 5.77739, 0.59", "-49.3538, -128.686, 5.81466, 0.59", "-50.0826, -129.512, 5.86908, 0.59", "-51.5561, -131.064, 5.98716, 0.59", "-52.0342, -131.552, 6.02312, 0.59", "-52.9978, -132.525, 6.07876, 0.59", "-53.4804, -132.998, 6.09285, 0.59", "-54.3698, -133.834, 6.09865, 0.59", "-55.4492, -134.846, 6.08552, 0.59", "-56.7553, -136.057, 6.04984, 0.59", "-57.3551, -136.63, 6.03021, 0.59", "-58.2291, -137.528, 6.00044, 0.59", "-58.6666, -137.998, 5.98578, 0.59", "-59.3506, -138.735, 5.97782, 0.59", "-60.3776, -139.863, 5.98925, 0.59", "-60.9332, -140.443, 6.02523, 0.59", "-62.4543, -141.887, 6.17322, 0.59", "-63.0929, -142.419, 6.24817, 0.59", "-64.1673, -143.167, 6.37546, 0.59", "-64.8448, -143.551, 6.45272, 0.59", "-65.8031, -144.003, 6.56111, 0.59", "-67.814, -144.845, 6.77075, 0.59", "-68.968, -145.288, 6.87715, 0.59", "-71.0802, -146.053, 7.03875, 0.59", "-72.5864, -146.595, 7.12549, 0.59", "-73.856, -147.02, 7.18201, 0.59", "-74.9421, -147.383, 7.21355, 0.59", "-76.2811, -147.819, 7.25132, 0.59", "-77.4757, -148.224, 7.27065, 0.59", "-78.8184, -148.698, 7.27174, 0.59", "-80.353, -149.269, 7.28125, 0.59", "-81.3202, -149.658, 7.28995, 0.59", "-82.1639, -150.005, 7.30333, 0.59", "-83.0777, -150.394, 7.3225, 0.59", "-84.3351, -150.959, 7.34367, 0.59", "-86.398, -151.935, 7.37986, 0.59", "-88.1026, -152.787, 7.41117, 0.59", "-89.1654, -153.337, 7.43242, 0.59", "-90.1559, -153.896, 7.46232, 0.59", "-91.1083, -154.458, 7.49861, 0.59", "-92.3586, -155.209, 7.53614, 0.59", "-94.26, -156.398, 7.58955, 0.59", "-95.6885, -157.278, 7.63841, 0.59", "-97.4861, -158.39, 7.70732, 0.59", "-98.3707, -158.912, 7.74422, 0.59", "-99.1131, -159.291, 7.77594, 0.59", "-100.368, -159.825, 7.83243, 0.59", "-102.221, -160.465, 7.9263, 0.59", "-103.272, -160.734, 8.00697, 0.59", "-104.155, -160.928, 8.10575, 0.59", "-106.002, -161.38, 8.39231, 0.59", "-106.889, -161.644, 8.56868, 0.59", "-107.697, -161.937, 8.77954, 0.59", "-108.802, -162.461, 9.16864, 0.59", "-109.687, -162.98, 9.53527, 0.59", "-110.4, -163.507, 9.85295, 0.59", "-111.163, -164.16, 10.1962, 0.59", "-112.005, -164.87, 10.5214, 0.59", "-112.377, -165.178, 10.6394, 0.59", "-113.329, -165.882, 10.8661, 0.59", "-114.419, -166.577, 11.0744, 0.59", "-115.454, -167.175, 11.2396, 0.59", "-116.323, -167.619, 11.3535, 0.59", "-117.471, -168.187, 11.4762, 0.59", "-118.607, -168.754, 11.6038, 0.59", "-119.357, -169.127, 11.6916, 0.59", "-120.185, -169.551, 11.8022, 0.59", "-121.406, -170.23, 11.9988, 0.59", "-122.433, -170.873, 12.2004, 0.59", "-123.345, -171.503, 12.4189, 0.59", "-124.052, -172.07, 12.6153, 0.59", "-124.544, -172.505, 12.7997, 0.59", "-125.185, -173.13, 13.1207, 0.59", "-125.549, -173.538, 13.3639, 0.59", "-125.874, -173.964, 13.7087, 0.59", "-126.327, -174.691, 14.4135, 0.59", "-126.768, -175.538, 15.3118, 0.59", "-127.044, -176.101, 15.9541, 0.59", "-127.236, -176.523, 16.4759, 0.59", "-127.791, -177.855, 18.2474, 0.59", "-127.875, -178.135, 18.6406, 0.59", "-127.93, -178.548, 19.2632, 0.59", "-135.641, -184.546, 21.3994, 0.59" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-0.920592, -78.9005, 8.40594, 0.74", "-2.45635, -81.7545, 16.0174, 0.74", "-2.55054, -81.9945, 16.4739, 0.66", "-2.76652, -82.6024, 17.3898, 0.66", "-3.01877, -83.2971, 18.2553, 0.66", "-3.27694, -83.9866, 18.9787, 0.66", "-3.60676, -84.846, 19.7821, 0.66", "-3.9148, -85.7551, 20.0364, 0.66", "-4.21261, -86.5706, 20.2844, 0.66", "-4.52605, -87.3608, 20.5388, 0.66", "-4.84613, -88.1052, 20.7467, 0.66", "-5.07087, -88.6056, 20.8522, 0.66", "-5.53745, -89.7156, 21.0029, 0.66", "-5.74374, -90.2994, 21.0547, 0.66", "-5.92574, -90.8392, 21.0767, 0.66", "-6.4699, -92.2823, 21.1327, 0.66", "-6.94674, -93.382, 21.1745, 0.66", "-7.72176, -94.9394, 21.2303, 0.66", "-8.34394, -96.0353, 21.3136, 0.66", "-8.89857, -96.8998, 21.4136, 0.66", "-9.77917, -98.1613, 21.6165, 0.66", "-10.1419, -98.6472, 21.7206, 0.66", "-10.7035, -99.3806, 21.9139, 0.66", "-11.2587, -100.094, 22.1225, 0.66", "-11.8697, -100.939, 22.3474, 0.66", "-12.25, -101.542, 22.4721, 0.66", "-12.5976, -102.184, 22.5657, 0.66", "-12.8074, -102.569, 22.6009, 0.66", "-13.2177, -103.314, 22.6395, 0.66", "-13.8897, -104.505, 22.6574, 0.66", "-14.4186, -105.458, 22.657, 0.66", "-15.2295, -106.946, 22.6393, 0.66", "-15.9099, -108.289, 22.6115, 0.66", "-16.5846, -109.831, 22.6103, 0.66", "-16.9937, -110.998, 22.6348, 0.66", "-17.2422, -111.846, 22.6695, 0.66", "-17.4448, -112.624, 22.7174, 0.66", "-17.8008, -113.967, 22.8227, 0.66", "-18.1915, -115.457, 22.9712, 0.66", "-18.4823, -116.54, 23.0981, 0.66", "-18.8079, -117.753, 23.2749, 0.52", "-19.1435, -118.948, 23.4839, 0.52", "-19.521, -120.227, 23.7449, 0.52", "-19.8853, -121.38, 24.0061, 0.52", "-20.3189, -122.672, 24.3018, 0.52", "-20.8024, -124.133, 24.6588, 0.52", "-21.2745, -125.596, 25.0359, 0.52", "-21.6467, -126.838, 25.3614, 0.52", "-21.9655, -127.997, 25.665, 0.52", "-22.2489, -129.003, 25.9132, 0.52", "-22.3901, -129.494, 26.0077, 0.52", "-22.6593, -130.494, 26.1458, 0.52", "-22.8815, -131.37, 26.2753, 0.52", "-23.1115, -132.279, 26.3961, 0.52", "-23.4053, -133.255, 26.5275, 0.52", "-23.9128, -134.793, 26.7334, 0.52", "-24.2246, -135.688, 26.8535, 0.52", "-24.7887, -137.195, 27.0492, 0.52", "-25.1994, -138.224, 27.1522, 0.52", "-25.7026, -139.583, 27.2167, 0.52", "-25.914, -140.226, 27.2178, 0.52", "-26.2865, -141.435, 27.2045, 0.52", "-26.6542, -142.647, 27.1781, 0.52", "-26.9901, -143.799, 27.1494, 0.52", "-27.4519, -145.387, 27.172, 0.52", "-27.8082, -146.54, 27.2145, 0.52", "-28.2752, -147.937, 27.2979, 0.52", "-28.7167, -149.21, 27.4051, 0.52", "-29.2106, -150.588, 27.5672, 0.52", "-29.5591, -151.505, 27.7097, 0.52", "-30.438, -153.733, 28.0999, 0.52", "-30.9226, -154.961, 28.3246, 0.52", "-31.2541, -155.834, 28.4836, 0.52", "-31.5201, -156.532, 28.6207, 0.52", "-31.8576, -157.398, 28.8055, 0.52", "-32.6101, -159.288, 29.2333, 0.52", "-33.2541, -160.819, 29.5856, 0.52", "-33.7357, -161.841, 29.8072, 0.52", "-34.1882, -162.774, 29.9863, 0.52", "-34.5561, -163.569, 30.1176, 0.52", "-34.8421, -164.243, 30.2094, 0.52", "-35.2662, -165.425, 30.328, 0.52", "-35.5355, -166.445, 30.3931, 0.52", "-35.7484, -167.515, 30.4281, 0.52", "-35.8592, -168.679, 30.4421, 0.52", "-35.8737, -169.561, 30.4794, 0.52", "-35.8203, -170.516, 30.5767, 0.52", "-35.6397, -171.978, 30.8096, 0.52", "-35.4217, -173.326, 31.086, 0.52", "-35.2321, -174.564, 31.4078, 0.52", "-35.0279, -176.174, 31.9564, 0.52", "-34.9587, -177.179, 32.3832, 0.52", "-34.9607, -177.719, 32.7104, 0.52", "-35.0275, -178.241, 33.1059, 0.52", "-35.1206, -178.659, 33.4338, 0.52", "-35.3098, -179.376, 33.98, 0.52", "-35.4112, -179.869, 34.3194, 0.52", "-35.4817, -181.367, 35.1103, 0.52", "-35.4298, -182.34, 35.4813, 0.52", "-35.2851, -183.995, 35.8474, 0.52", "-35.1214, -185.562, 35.9766, 0.52", "-35.0568, -186.129, 35.9982, 0.52", "-34.8773, -188.139, 36.0656, 0.52", "-34.7951, -189.259, 36.0958, 0.52", "-34.6809, -191.369, 36.2326, 0.52", "-34.6729, -192.796, 36.3237, 0.52", "-34.7191, -194.099, 36.3947, 0.52", "-34.8519, -196.077, 36.5779, 0.52", "-34.9483, -197.006, 36.7291, 0.52", "-34.9966, -197.725, 36.873, 0.52", "-35.0591, -199.764, 37.4173, 0.52" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.920592, -78.9005, 8.40594, 0.88", "-0.656951, -80.4644, 8.55609, 0.88", "-0.511998, -82.3306, 8.64591, 0.88", "-0.507881, -83.8373, 8.69858, 0.88", "-0.530115, -84.8679, 8.72593, 0.88", "-0.578071, -86.85, 8.80605, 0.88", "-0.606638, -88.2924, 8.87495, 0.88", "-0.723364, -90.3999, 8.93472, 0.88", "-0.816359, -91.4195, 8.95836, 0.88", "-0.952455, -92.6155, 8.99104, 0.88", "-1.15652, -94.1843, 9.03875, 0.96", "-1.2593, -95.0138, 9.07761, 0.96", "-1.4122, -96.7405, 9.19777, 0.96", "-1.50958, -98.2325, 9.32536, 0.96", "-1.59676, -99.6166, 9.43547, 0.96", "-1.75892, -101.18, 9.55176, 0.96", "-1.96867, -102.99, 9.66347, 0.96", "-2.18297, -104.755, 9.79417, 0.74", "-2.3474, -106.133, 9.90858, 0.74", "-2.5525, -107.864, 10.062, 0.74", "-2.76709, -109.877, 10.2285, 0.74", "-2.89157, -111.364, 10.3621, 0.74", "-3.02634, -113.143, 10.5171, 0.74", "-3.1143, -114.474, 10.6408, 0.74", "-3.13752, -115.209, 10.719, 0.74", "-3.14495, -116.454, 10.8826, 0.74", "-3.11351, -117.838, 11.0853, 0.74", "-3.07771, -119.588, 11.3495, 0.74", "-3.04281, -120.874, 11.53, 0.74", "-2.97723, -122.331, 11.7367, 0.74", "-2.92246, -123.3, 11.8662, 0.74", "-2.84503, -124.463, 12.0026, 0.74", "-2.74324, -125.625, 12.1032, 0.74", "-2.60589, -126.703, 12.1879, 0.74", "-2.39017, -127.987, 12.2702, 0.74", "-2.19494, -129.042, 12.3247, 0.74", "-1.98664, -130.042, 12.3538, 0.74", "-1.62949, -131.54, 12.4003, 0.74", "-1.48717, -132.09, 12.4172, 0.74", "-1.43205, -132.308, 12.4224, 0.74" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "39.1207, 45.951, -0.446093, 0.37", "39.7379, 46.4564, -1.67168, 0.37", "40.2568, 46.8881, -2.52167, 0.37", "41.0087, 47.5524, -3.60864, 0.74", "41.5033, 48.0163, -4.27657, 0.88", "41.9306, 48.4739, -4.81686, 0.88", "42.4427, 49.076, -5.46511, 0.22", "42.9121, 49.7029, -6.008, 0.22", "43.4864, 50.5368, -6.62042, 0.22", "44.0089, 51.3987, -7.14259, 0.22", "44.5959, 52.5052, -7.75981, 1.11", "44.8852, 53.1378, -8.08992, 1.47", "45.036, 53.5192, -8.29944, 1.47", "45.3638, 54.3963, -8.7882, 0.22", "45.5122, 54.7984, -9.00468, 0.59", "45.688, 55.2573, -9.25277, 0.59", "45.9799, 55.9172, -9.60856, 0.44", "46.3326, 56.6357, -9.95716, 0.88", "46.6917, 57.264, -10.2592, 0.88", "47.1377, 57.9765, -10.595, 0.29", "47.5433, 58.5678, -10.871, 0.29", "48.2476, 59.4773, -11.2822, 0.88", "48.5466, 59.8105, -11.4307, 1.18", "49.5249, 60.781, -11.8436, 0.37", "49.9638, 61.177, -12.0185, 0.37", "50.4169, 61.569, -12.1872, 0.96", "50.9884, 62.0547, -12.3922, 0.96", "51.5576, 62.5303, -12.5944, 0.96", "52.0351, 62.9349, -12.7607, 0.66", "52.8016, 63.6094, -13.0649, 0.22", "53.4349, 64.198, -13.3763, 0.22", "53.8869, 64.6477, -13.6453, 0.81", "54.117, 64.904, -13.8108, 1.03", "54.3415, 65.1792, -13.995, 1.03", "55.0993, 66.1472, -14.6417, 0.22", "55.5823, 66.7416, -15.0691, 0.88", "55.7962, 66.9927, -15.2604, 1.18", "56.1219, 67.3607, -15.5668, 1.18", "56.6606, 67.9631, -16.0978, 0.22", "57.2532, 68.6364, -16.6958, 0.22", "57.6563, 69.1084, -17.1181, 0.22", "58.039, 69.6002, -17.5866, 0.96", "58.4603, 70.2129, -18.1814, 1.33", "58.9957, 71.1334, -19.0671, 0.52", "59.2587, 71.7727, -19.6666, 0.44", "59.462, 72.4911, -20.3162, 0.37", "59.6783, 73.4993, -21.1625, 0.96", "59.7833, 74.0504, -21.5794, 0.96", "59.9548, 74.997, -22.2005, 0.22", "60.2287, 76.5023, -23.0818, 1.11", "60.3324, 76.996, -23.3605, 1.33", "60.462, 77.5411, -23.6435, 0.37", "60.7795, 78.5655, -24.1466, 0.15", "60.9969, 79.1092, -24.4391, 0.96", "61.2597, 79.6206, -24.7315, 0.96", "61.8555, 80.5846, -25.3575, 0.22", "62.374, 81.3551, -25.8948, 0.59", "62.9446, 82.1501, -26.5146, 0.22", "63.4553, 82.8043, -27.0463, 0.22", "63.888, 83.3308, -27.4675, 0.59", "64.5398, 84.0704, -28.0216, 0.59", "65.284, 84.8599, -28.5444, 0.22", "65.8369, 85.4251, -28.931, 0.22", "66.4925, 86.0995, -29.4037, 0.88", "66.7317, 86.3511, -29.5903, 1.25", "67.7954, 87.487, -30.5405, 0.22", "68.2976, 88.0297, -31.0286, 0.22", "69.0413, 88.8707, -31.8966, 0.88", "69.3988, 89.3487, -32.4391, 1.03", "69.9933, 90.2937, -33.5929, 0.22", "70.3439, 90.9802, -34.4513, 0.22", "70.6329, 91.769, -35.4653, 1.33", "70.7827, 92.3515, -36.2147, 1.47", "70.9984, 93.7631, -38.009, 0.22", "71.0255, 94.2932, -38.7037, 0.22", "70.9906, 95.0032, -39.6505, 0.52", "70.9098, 95.6359, -40.5154, 0.52", "70.8307, 96.0833, -41.1329, 0.22", "70.6643, 97.0455, -42.4398, 0.59", "70.4987, 98.0799, -43.8102, 0.88", "70.4208, 98.5906, -44.4736, 0.88", "70.339, 99.3035, -45.3671, 0.59", "70.2963, 99.9541, -46.1439, 0.22", "70.2803, 100.993, -47.3307, 0.59", "70.2923, 101.528, -47.9209, 0.22", "70.3182, 102.008, -48.4491, 0.22", "70.4308, 103.026, -49.6413, 0.66", "70.5274, 103.637, -50.3705, 0.81", "70.6457, 104.262, -51.1486, 0.29", "70.8862, 105.256, -52.4174, 0.88", "70.9695, 105.546, -52.7969, 0.88", "71.3032, 106.481, -53.9958, 0.29", "71.4907, 106.903, -54.5295, 0.29", "71.8228, 107.538, -55.3113, 0.29", "72.2673, 108.313, -56.1616, 0.59", "72.4771, 108.681, -56.5287, 0.59", "72.9332, 109.558, -57.3166, 0.29", "73.286, 110.321, -57.8951, 0.52", "73.5144, 110.853, -58.2265, 0.52", "73.9534, 111.923, -58.783, 0.29", "74.9017, 114.223, -59.8354, 0.15", "75.2229, 114.975, -60.1702, 0.88", "75.6061, 115.86, -60.5757, 1.11", "76.2313, 117.251, -61.2544, 0.15", "76.8228, 118.486, -61.9359, 0.59", "77.6937, 120.12, -63.0068, 0.15", "78.2505, 121.063, -63.702, 0.66", "78.6939, 121.777, -64.3115, 0.66", "79.2582, 122.667, -65.1586, 0.22", "79.6521, 123.265, -65.7598, 0.22", "80.2747, 124.216, -66.6654, 0.59", "81.065, 125.431, -67.7409, 0.22", "81.4423, 126.015, -68.21, 0.52", "81.7057, 126.431, -68.5204, 0.52", "82.2384, 127.313, -69.1481, 0.22", "83.0019, 128.678, -70.0396, 0.22", "83.7383, 130.085, -70.9134, 1.03", "83.9596, 130.538, -71.1906, 1.03", "84.6197, 132.009, -72.0511, 0.15", "84.9422, 132.797, -72.4778, 0.15", "85.189, 133.485, -72.837, 0.81", "85.2972, 133.854, -72.9967, 0.81", "85.6794, 135.391, -73.5201, 0.22", "85.9238, 136.348, -73.7865, 0.37", "86.1882, 137.338, -74.0052, 0.22", "86.4176, 138.129, -74.1719, 0.44", "87.0763, 140.199, -74.6003, 0.22", "87.4172, 141.162, -74.7849, 0.44", "87.6886, 141.886, -74.9072, 0.22", "87.8836, 142.371, -74.993, 0.29", "88.1025, 142.883, -75.0801, 0.29", "88.4325, 143.524, -75.1615, 0.22", "88.9265, 144.074, -75.3072, 0.29" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "39.1207, 45.951, -0.446093, 0.37", "40.3152, 46.3982, -0.365469, 0.37", "41.2185, 46.7487, -0.227341, 0.37", "42.0163, 47.0506, -0.0689021, 0.44", "42.5864, 47.2624, 0.0572821, 0.44", "43.6922, 47.6732, 0.341804, 0.44", "45.1127, 48.2067, 0.744979, 0.81", "45.534, 48.3745, 0.908771, 0.88", "46.169, 48.639, 1.21896, 0.88", "46.5007, 48.7921, 1.41033, 0.96", "47.0703, 49.088, 1.75864, 0.74", "47.5001, 49.3394, 2.01835, 0.66", "48.1714, 49.7246, 2.35294, 0.66", "48.9049, 50.1214, 2.66706, 0.52", "49.6166, 50.4939, 2.9413, 0.52", "50.5689, 50.9627, 3.25491, 1.18", "50.9174, 51.1271, 3.34426, 1.55", "51.7812, 51.5067, 3.52172, 1.55", "52.6263, 51.8543, 3.66028, 0.81", "53.713, 52.28, 3.80629, 0.44", "54.3282, 52.5041, 3.88333, 0.44", "55.3941, 52.8903, 4.02811, 1.55", "55.9511, 53.107, 4.11014, 1.69", "56.3212, 53.2732, 4.17099, 1.69" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-26.4143, -116.916, -0.787662, 0.52", "-26.6921, -118.183, -1.64376, 0.52", "-26.8116, -118.928, -2.14771, 0.52", "-26.8313, -120.021, -2.84576, 0.52", "-26.778, -121.109, -3.53552, 0.52", "-26.6796, -122.243, -4.26526, 0.52", "-26.6106, -122.891, -4.7002, 0.52", "-26.4978, -123.628, -5.25206, 0.52", "-26.2036, -125.147, -6.61579, 0.52", "-26.0936, -125.682, -7.13012, 0.44", "-25.9546, -126.373, -7.85709, 0.44", "-25.8237, -127.079, -8.65116, 0.44", "-25.6978, -127.929, -9.59297, 0.44", "-25.5523, -129.758, -11.6201, 0.44", "-25.5543, -130.427, -12.3692, 0.44", "-25.5847, -131.164, -13.147, 0.44", "-25.627, -131.704, -13.6684, 0.44", "-25.7637, -132.868, -14.6639, 0.44", "-25.9124, -133.77, -15.3532, 0.44", "-26.1943, -135.022, -16.1756, 0.44", "-26.4778, -135.958, -16.8353, 0.44", "-26.7525, -136.676, -17.3496, 0.44", "-26.9623, -137.167, -17.7389, 0.44", "-27.2497, -137.834, -18.2497, 0.44", "-27.4175, -138.331, -18.5931, 0.44", "-27.7059, -139.416, -19.2657, 0.44", "-27.7933, -139.803, -19.5079, 0.44", "-28.0967, -141.151, -20.3659, 0.44", "-28.4265, -142.7, -21.378, 0.44", "-28.7485, -144.213, -22.3581, 0.44", "-28.9829, -145.266, -23.0853, 0.44", "-29.1825, -146.021, -23.6431, 0.44", "-29.5017, -146.986, -24.4557, 0.44", "-30.0157, -148.281, -25.6792, 0.44", "-30.305, -148.935, -26.3981, 0.44", "-30.6822, -149.699, -27.301, 0.44", "-31.0248, -150.406, -28.2104, 0.44", "-31.3706, -151.203, -29.265, 0.44", "-31.5243, -151.634, -29.8584, 0.44", "-31.6078, -151.86, -30.184, 0.44", "-31.6379, -151.958, -30.3219, 0.44", "-31.7377, -152.37, -30.8417, 0.44", "-31.8043, -152.734, -31.2838, 0.44", "-31.8527, -153.154, -31.7573, 0.44", "-31.9315, -154.206, -32.8388, 0.44", "-31.9604, -154.962, -33.5246, 0.44", "-31.9589, -155.196, -33.7036, 0.44", "-31.9456, -155.494, -33.8966, 0.44", "-31.9053, -156.328, -34.3395, 0.44", "-31.864, -157.049, -34.7061, 0.44", "-31.8079, -157.888, -35.1308, 0.44", "-31.8143, -158.547, -35.4483, 0.44", "-31.8479, -159.392, -35.8258, 0.44", "-31.9349, -160.295, -36.2912, 0.44", "-32.0645, -161.349, -36.9678, 0.44", "-32.1591, -162.377, -37.7379, 0.44", "-32.2512, -163.978, -38.9913, 0.44", "-32.28, -164.997, -39.7629, 0.44", "-32.2476, -167.071, -41.2141, 0.44", "-32.1123, -169.07, -42.4299, 0.44", "-31.9465, -170.712, -43.2694, 0.44", "-31.8123, -171.915, -43.887, 0.44", "-31.6077, -173.788, -44.8586, 0.44", "-31.4897, -175.1, -45.5141, 0.44", "-31.2821, -177.489, -46.5893, 0.44", "-31.2276, -178.376, -46.9698, 0.44", "-31.1038, -182.099, -48.6677, 0.44", "-31.0898, -182.756, -49.0038, 0.37", "-31.0757, -183.783, -49.5973, 0.37", "-31.0672, -184.539, -50.0834, 0.29", "-31.0136, -185.883, -50.9752, 0.29", "-30.9541, -186.492, -51.3641, 0.29", "-30.7516, -187.699, -52.01, 0.29", "-30.5533, -188.757, -52.5607, 0.29", "-30.3206, -190.05, -53.1852, 0.29", "-30.1428, -191.197, -53.694, 0.29", "-29.9588, -192.538, -54.2397, 0.29", "-29.8325, -193.614, -54.6846, 0.29", "-29.765, -194.362, -54.9886, 0.29", "-29.7067, -195.23, -55.3693, 0.29", "-29.6393, -196.22, -55.8214, 0.29", "-29.6006, -196.865, -56.1396, 0.29", "-29.5017, -198.454, -56.9395, 0.29", "-29.4621, -198.956, -57.2572, 0.29", "-29.337, -200.143, -58.1879, 0.29", "-29.2566, -200.695, -58.742, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-26.4143, -116.916, -0.787662, 0.52", "-26.5745, -117.775, -0.837026, 0.52", "-26.74, -118.973, -0.902384, 0.52", "-26.8243, -119.912, -0.948087, 0.52", "-26.9772, -122.177, -1.0503, 0.52", "-27.0673, -123.849, -1.12054, 0.52", "-27.1169, -125.108, -1.17507, 0.52", "-27.1265, -127.094, -1.26899, 0.52", "-27.107, -128.936, -1.35244, 0.52", "-27.1018, -129.515, -1.3901, 0.52", "-27.1131, -130.391, -1.4729, 0.52", "-27.2028, -132.141, -1.68486, 0.52", "-27.3623, -133.505, -1.90967, 0.52", "-27.6166, -134.646, -2.16073, 0.52", "-27.8826, -135.49, -2.37659, 0.52", "-28.1456, -136.201, -2.5764, 0.52", "-28.5115, -137.047, -2.83714, 0.52", "-29.0547, -138.103, -3.18759, 0.52", "-29.827, -139.421, -3.63875, 0.52", "-30.2355, -140.064, -3.84556, 0.52", "-30.7902, -140.913, -4.11546, 0.52", "-31.3404, -141.739, -4.36759, 0.52", "-31.7896, -142.413, -4.56717, 0.52", "-32.4024, -143.27, -4.79923, 0.52", "-33.1609, -144.208, -5.10134, 0.52", "-33.7409, -144.843, -5.3288, 0.52", "-34.6397, -145.768, -5.68168, 0.52", "-35.0761, -146.224, -5.87309, 0.52", "-36.0303, -147.263, -6.35182, 0.52", "-36.9231, -148.288, -6.8608, 0.52", "-37.6745, -149.207, -7.34723, 0.52", "-38.2899, -150.015, -7.7672, 0.52", "-38.8518, -150.831, -8.19231, 0.52", "-39.3348, -151.68, -8.62588, 0.52", "-39.6988, -152.558, -9.04199, 0.52", "-39.9315, -153.298, -9.33332, 0.52", "-40.1943, -154.255, -9.66945, 0.52", "-40.3934, -155.014, -9.88853, 0.52", "-40.7203, -156.283, -10.1576, 0.52", "-41.0233, -157.557, -10.3794, 0.52", "-41.3455, -158.978, -10.5885, 0.52", "-41.5671, -160.05, -10.7296, 0.52", "-41.8485, -161.553, -10.9039, 0.52", "-42.2772, -163.93, -11.1343, 0.52", "-42.5118, -165.359, -11.2361, 0.52", "-42.6694, -166.446, -11.3024, 0.52", "-43.0058, -168.653, -11.43, 0.52", "-43.326, -170.63, -11.5307, 0.52", "-43.549, -171.902, -11.5974, 0.52", "-43.9272, -173.922, -11.6995, 0.52", "-44.4038, -176.264, -11.7651, 0.52", "-44.822, -178.155, -11.7975, 0.52", "-45.2388, -179.931, -11.8405, 0.52", "-45.4929, -181.025, -11.8848, 0.52", "-45.7549, -182.167, -11.9437, 0.52", "-46.0178, -183.35, -12.0303, 0.52", "-46.213, -184.352, -12.1185, 0.52", "-46.5372, -186.185, -12.2882, 0.52", "-46.8483, -187.926, -12.4558, 0.52", "-47.2689, -190.151, -12.6623, 0.52", "-47.4857, -191.251, -12.7695, 0.52", "-47.817, -192.888, -12.945, 0.52", "-48.1503, -194.49, -13.0873, 0.52", "-48.4329, -195.785, -13.1684, 0.52", "-48.5881, -196.467, -13.2104, 0.52", "-48.8546, -197.629, -13.2745, 0.52", "-49.0089, -198.306, -13.3, 0.52", "-49.1859, -199.219, -13.3168, 0.52", "-49.3548, -200.154, -13.2935, 0.52", "-49.6298, -201.708, -13.1954, 0.52", "-49.7128, -202.209, -13.1469, 0.52", "-49.871, -203.152, -13.0207, 0.52", "-50.2269, -205.086, -12.7051, 0.52", "-50.4455, -206.147, -12.5096, 0.52", "-50.589, -206.784, -12.3999, 0.52", "-50.8099, -207.672, -12.2649, 0.52", "-51.1327, -208.894, -12.1375, 0.52", "-51.4128, -209.91, -12.0925, 0.52", "-51.751, -211.134, -12.1255, 0.52", "-51.984, -212.115, -12.2006, 0.52", "-52.1801, -213.066, -12.303, 0.52", "-52.3591, -214.136, -12.4597, 0.52", "-52.5043, -215.087, -12.6157, 0.52", "-52.6551, -216.081, -12.7924, 0.52", "-52.9386, -217.788, -13.1142, 0.52", "-53.1559, -218.958, -13.3223, 0.52", "-53.3718, -220.012, -13.5304, 0.52", "-53.6981, -221.307, -13.8001, 0.52", "-54.0632, -222.545, -14.0813, 0.52", "-54.3616, -223.414, -14.2984, 0.52", "-54.6775, -224.226, -14.4709, 0.52", "-55.0038, -225.035, -14.5895, 0.52", "-55.2982, -225.814, -14.6495, 0.52", "-55.624, -226.806, -14.6702, 0.52", "-56.0019, -228.008, -14.6297, 0.52", "-56.4369, -229.367, -14.5417, 0.52", "-56.8494, -230.564, -14.4471, 0.52", "-57.2839, -231.733, -14.3439, 0.52", "-57.7029, -232.835, -14.2471, 0.52", "-58.2871, -234.262, -14.1275, 0.52", "-58.8037, -235.47, -14.0456, 0.52", "-59.3633, -236.711, -14.0034, 0.52", "-59.9382, -237.908, -13.9514, 0.52", "-60.4273, -238.836, -13.9036, 0.52", "-60.8742, -239.679, -13.8803, 0.52", "-61.3174, -240.55, -13.8753, 0.52", "-61.6144, -241.169, -13.8838, 0.52", "-61.7986, -241.582, -13.9044, 0.52", "-62.6719, -243.581, -14.0847, 0.52", "-63.5332, -245.463, -14.2367, 0.52", "-63.9779, -246.43, -14.2975, 0.52", "-64.3527, -247.245, -14.3316, 0.52", "-64.8471, -248.339, -14.3539, 0.52", "-65.3128, -249.387, -14.3509, 0.52", "-66.1464, -251.33, -14.2675, 0.52", "-66.4401, -251.996, -14.1911, 0.52", "-66.6804, -252.55, -14.1015, 0.52", "-67.1092, -253.566, -13.866, 0.52", "-67.2476, -253.915, -13.7596, 0.52", "-67.5697, -254.854, -13.4505, 0.52", "-67.7646, -255.49, -13.259, 0.52", "-67.9644, -256.085, -13.0791, 0.52", "-68.2396, -256.829, -12.8702, 0.52", "-68.6744, -257.879, -12.5722, 0.52", "-68.9848, -258.552, -12.3918, 0.52", "-69.3703, -259.355, -12.2051, 0.52", "-69.7215, -260.108, -12.0714, 0.52", "-70.2534, -261.238, -11.9213, 0.52", "-70.5579, -261.884, -11.8534, 0.52", "-70.8797, -262.569, -11.7852, 0.52", "-71.3978, -263.702, -11.6736, 0.52", "-71.8198, -264.706, -11.5731, 0.52", "-72.2653, -265.921, -11.4532, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-35.0591, -199.764, 37.4173, 0.44", "-36.0168, -201.286, 36.3776, 0.44", "-36.2847, -201.999, 35.9964, 0.44", "-36.3674, -202.593, 35.7697, 0.44", "-36.3484, -203.309, 35.5767, 0.44", "-36.2148, -204.238, 35.4191, 0.44", "-36.0842, -204.896, 35.3481, 0.44", "-35.8253, -205.813, 35.3317, 0.44", "-35.351, -207.171, 35.3551, 0.44", "-34.915, -208.215, 35.404, 0.44", "-34.2743, -209.666, 35.505, 0.44", "-33.6754, -210.951, 35.6079, 0.44", "-33.2603, -211.823, 35.6919, 0.44", "-32.7929, -212.802, 35.8125, 0.44", "-32.4083, -213.605, 35.9092, 0.44", "-29.3894, -223.138, 36.0528, 0.44" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-35.0591, -199.764, 37.4173, 0.52", "-35.8431, -201.272, 37.9466, 0.52", "-36.0722, -201.713, 38.1013, 0.52", "-36.4979, -202.531, 38.3887, 0.44", "-36.8882, -203.282, 38.6522, 0.44", "-37.3256, -204.123, 38.9475, 0.44", "-37.8435, -205.119, 39.2972, 0.44", "-40.5336, -214.489, 41.5274, 0.44" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-1.43205, -132.308, 12.4224, 0.44", "-0.1531, -137.302, 15.1556, 0.44", "0.252915, -138.684, 15.6934, 0.44", "0.497949, -139.377, 15.8786, 0.44", "0.91737, -140.502, 16.0426, 0.44", "1.36334, -141.708, 16.1212, 0.44", "1.64691, -142.507, 16.1272, 0.44", "1.96378, -143.412, 15.9371, 0.44", "2.44685, -144.885, 15.6448, 0.44", "2.88759, -146.421, 15.3312, 0.44", "3.0721, -147.176, 15.1659, 0.44", "3.31997, -148.391, 14.8864, 0.44", "3.59419, -149.919, 14.512, 0.44", "3.73429, -150.844, 14.2873, 0.44", "3.82043, -151.474, 14.1359, 0.44", "4.05917, -153.064, 13.8088, 0.44", "4.29201, -154.479, 13.5679, 0.44", "4.48701, -155.66, 13.3849, 0.44", "4.64602, -156.778, 13.2458, 0.44", "4.72739, -157.459, 13.183, 0.44", "4.93622, -159.443, 13.0558, 0.44", "5.11628, -161.591, 12.9719, 0.44", "5.23504, -163.234, 12.9502, 0.44", "5.34913, -165.053, 12.966, 0.44", "5.4208, -166.184, 12.9902, 0.44", "5.52255, -167.844, 13.0456, 0.44", "5.5926, -169.024, 13.098, 0.44", "5.69913, -170.912, 13.2045, 0.44", "5.75495, -172.139, 13.2885, 0.44", "5.84241, -173.963, 13.4056, 0.44", "5.91621, -175.48, 13.5189, 0.44", "5.94621, -176.314, 13.5859, 0.44", "5.99355, -177.344, 13.6788, 0.44", "6.03148, -178.887, 13.8339, 0.44", "6.04122, -180.494, 14.0342, 0.44", "6.04164, -181.822, 14.2314, 0.44", "6.03878, -182.836, 14.4037, 0.44", "6.0457, -183.65, 14.5546, 0.44", "6.06739, -184.937, 14.8374, 0.44", "6.08129, -185.812, 15.056, 0.44", "6.07029, -186.392, 15.2037, 0.44", "6.05409, -187.071, 15.3589, 0.44", "6.04366, -188.031, 15.5829, 0.44", "6.06352, -189.308, 15.8537, 0.44", "6.10927, -190.317, 16.064, 0.44", "6.21687, -191.831, 16.3247, 0.44", "6.34201, -193.059, 16.4995, 0.44", "6.58965, -194.979, 16.7136, 0.44", "6.87391, -196.857, 16.8688, 0.44", "7.06795, -197.942, 16.9222, 0.44", "7.41778, -199.688, 16.9712, 0.44", "7.63449, -200.655, 16.9677, 0.44", "7.9429, -201.824, 16.9093, 0.44", "8.28824, -202.954, 16.796, 0.44", "8.52211, -203.688, 16.7235, 0.44", "8.72935, -204.326, 16.6708, 0.44", "9.15787, -205.655, 16.6051, 0.44", "9.61225, -207.004, 16.5742, 0.44", "10.2124, -208.577, 16.5782, 0.44", "10.7344, -209.844, 16.6124, 0.44", "11.5335, -211.683, 16.7154, 0.44", "11.762, -212.196, 16.7562, 0.44", "12.1544, -213.068, 16.8482, 0.44", "12.7089, -214.282, 17.0043, 0.44", "13.6402, -216.186, 17.2545, 0.44", "14.0291, -216.943, 17.346, 0.44", "14.6468, -218.106, 17.474, 0.44", "15.3137, -219.302, 17.6067, 0.37", "16.2695, -220.928, 17.8039, 0.37", "17.2675, -222.534, 18.0257, 0.37", "18.3773, -224.236, 18.2989, 0.37", "19.3071, -225.623, 18.5364, 0.37", "19.9322, -226.545, 18.7089, 0.37", "21.0751, -228.237, 19.0431, 0.37", "21.774, -229.317, 19.2709, 0.37", "22.7795, -230.9, 19.657, 0.37", "23.4642, -232.013, 19.9736, 0.37", "23.9223, -232.784, 20.207, 0.37", "24.279, -233.428, 20.3948, 0.37", "24.7066, -234.228, 20.6327, 0.37", "25.2354, -235.205, 20.9498, 0.37", "25.5882, -235.792, 21.1519, 0.37", "26.0012, -236.433, 21.3801, 0.37", "26.4201, -236.997, 21.5893, 0.37", "26.7787, -237.444, 21.7532, 0.37", "27.3602, -238.156, 21.9978, 0.37", "27.9416, -238.944, 22.2486, 0.37", "28.367, -239.551, 22.4477, 0.37", "28.7331, -240.096, 22.6655, 0.37", "29.1147, -240.67, 22.9379, 0.37", "29.3706, -241.1, 23.1625, 0.37", "29.7041, -241.716, 23.4855, 0.37", "30.0668, -242.482, 23.8641, 0.37", "30.2989, -243.012, 24.1046, 0.37", "30.8396, -244.355, 24.6776, 0.29", "31.2765, -245.547, 25.1449, 0.37", "31.5577, -246.357, 25.4188, 0.37", "31.8503, -247.303, 25.6926, 0.37", "32.0753, -248.11, 25.8814, 0.37", "32.3198, -249.072, 26.0645, 0.37", "32.5584, -250.146, 26.2412, 0.37", "32.8151, -251.253, 26.4162, 0.37", "33.0844, -252.351, 26.6014, 0.37", "33.3671, -253.303, 26.7533, 0.37", "33.6261, -254.173, 26.8826, 0.37", "33.9184, -255.188, 27.0058, 0.37", "34.1603, -256.095, 27.1193, 0.37", "34.5374, -257.749, 27.3175, 0.37", "35.0426, -260.109, 27.598, 0.37", "35.2373, -260.937, 27.6563, 0.37", "35.7551, -262.847, 27.6782, 0.37", "36.1712, -264.108, 27.6211, 0.37", "36.5131, -265.076, 27.5411, 0.37", "37.0602, -266.357, 27.3873, 0.37", "38.1485, -268.483, 27.0867, 0.37", "38.6007, -269.261, 26.9792, 0.37", "39.3665, -270.485, 26.8157, 0.37", "40.2857, -272.093, 26.6784, 0.37", "40.8209, -273.2, 26.6483, 0.37", "41.258, -274.338, 26.6647, 0.37", "41.7072, -275.807, 26.7434, 0.37", "42.0257, -276.967, 26.8057, 0.37", "42.7087, -279.646, 26.9272, 0.37", "43.5855, -283.111, 27.0635, 0.37", "44.0424, -285.036, 27.1514, 0.37", "44.4542, -286.827, 27.2399, 0.37", "44.8218, -288.489, 27.3362, 0.37", "45.1833, -290.256, 27.4516, 0.37", "45.481, -291.871, 27.5673, 0.37", "45.6938, -293.214, 27.6906, 0.37", "45.9176, -294.731, 27.8458, 0.37", "46.1567, -296.513, 28.0397, 0.37", "46.3759, -298.608, 28.2735, 0.37", "46.5484, -300.715, 28.4987, 0.37", "46.5902, -301.465, 28.5693, 0.37", "46.6109, -302.211, 28.6304, 0.37", "46.5851, -303.647, 28.7454, 0.37", "46.5023, -305.342, 28.8729, 0.37", "46.4059, -306.445, 28.9565, 0.37", "46.266, -307.88, 29.0901, 0.37", "46.1619, -308.76, 29.1773, 0.37", "45.9515, -310.345, 29.3652, 0.37", "45.758, -311.409, 29.4833, 0.37", "45.3596, -313.12, 29.6293, 0.37", "44.8077, -315.48, 29.8349, 0.37", "44.382, -317.358, 29.9974, 0.37", "43.9251, -319.414, 30.1631, 0.37", "43.4299, -321.477, 30.3167, 0.37", "42.9272, -323.081, 30.4146, 0.37", "45.566, -332.707, 31.036, 0.37" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-1.43205, -132.308, 12.4224, 0.74", "-1.55634, -132.985, 12.3692, 0.74", "-1.70441, -134.487, 12.2815, 0.74", "-1.83055, -135.762, 12.2917, 0.74", "-1.97686, -137.074, 12.3909, 0.74", "-2.06656, -137.801, 12.4855, 0.74", "-2.3295, -139.977, 12.8173, 0.74", "-2.46646, -141.564, 13.1534, 0.74", "-2.53861, -143.101, 13.5595, 0.74", "-2.54749, -144.403, 13.9327, 0.74", "-2.52838, -145.356, 14.2271, 0.74", "-2.50088, -146.43, 14.5583, 0.74", "-2.45725, -148.366, 15.1157, 0.74", "-2.44724, -149.145, 15.3101, 0.74", "-2.41901, -150.656, 15.6257, 0.74", "-2.43112, -152.135, 15.8976, 0.74", "-2.48653, -153.578, 16.1444, 0.74", "-2.64146, -155.417, 16.4501, 0.74", "-2.73094, -156.369, 16.5774, 0.66", "-2.90883, -158.158, 16.7815, 0.66", "-3.03567, -159.495, 16.9028, 0.66", "-3.10133, -160.362, 16.9751, 0.66", "-3.13071, -161.352, 17.0401, 0.66", "-3.08629, -163.657, 17.2147, 0.66", "-2.93193, -165.392, 17.3843, 0.66", "-2.75658, -166.41, 17.5082, 0.66", "-2.42574, -167.733, 17.7429, 0.66", "-2.09128, -168.87, 17.9933, 0.66", "-1.63961, -170.293, 18.7915, 0.66", "-1.27898, -171.355, 19.5301, 0.66", "-0.810739, -172.556, 20.5123, 0.66", "-0.371286, -173.673, 21.5685, 0.66", "-0.224287, -174.057, 21.9925, 0.66", "1.26017, -178.34, 27.7727, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "56.3212, 53.2732, 4.17099, 0.29", "58.0533, 54.1723, 4.07717, 0.29", "58.7063, 54.4833, 4.04504, 0.29", "59.343, 54.7551, 4.0175, 0.29", "60.2116, 55.1151, 3.97312, 0.66", "60.9107, 55.4041, 3.96802, 0.66", "62.0361, 55.87, 3.99828, 0.37", "62.6631, 56.1128, 4.05544, 0.37", "63.5055, 56.4195, 4.16135, 0.37", "64.1206, 56.6206, 4.24921, 0.37", "65.3781, 57.0062, 4.4512, 0.96", "65.9671, 57.1886, 4.55136, 0.96", "66.3537, 57.3136, 4.62792, 0.96", "67.3078, 57.6487, 4.83675, 0.44", "67.7106, 57.8034, 4.93164, 0.44", "68.492, 58.1012, 5.10824, 0.29", "69.303, 58.4246, 5.2638, 0.59", "69.9435, 58.6982, 5.39354, 0.59", "70.9313, 59.1566, 5.60946, 0.44", "71.7855, 59.5728, 5.80565, 0.66", "72.4534, 59.8881, 5.95847, 0.66", "72.9682, 60.1187, 6.05863, 0.66", "73.6389, 60.4123, 6.17368, 0.96", "74.4746, 60.768, 6.27116, 0.96", "75.6499, 61.2524, 6.34179, 0.29", "76.7538, 61.7099, 6.3684, 0.29", "77.5545, 62.0738, 6.36743, 0.74", "78.2552, 62.416, 6.34648, 0.29", "78.8697, 62.7462, 6.30979, 0.29", "79.4729, 63.108, 6.26125, 0.29", "80.1209, 63.5425, 6.20262, 0.29", "80.8282, 64.0032, 6.14902, 1.03", "81.2043, 64.2234, 6.13513, 1.18", "81.7657, 64.5032, 6.11116, 1.18", "82.3445, 64.7452, 6.13057, 0.59", "83.1815, 65.0488, 6.21048, 0.37", "84.3062, 65.3935, 6.35429, 0.37", "85.1033, 65.6033, 6.47893, 0.81", "85.7798, 65.7742, 6.60109, 0.52", "87.1376, 66.1076, 6.87766, 0.29", "87.7975, 66.2882, 7.02556, 0.29", "88.8294, 66.635, 7.27272, 0.59", "89.4229, 66.8933, 7.40719, 0.59", "90.0096, 67.1802, 7.52068, 0.59", "90.6709, 67.533, 7.6161, 0.59", "91.314, 67.8886, 7.66724, 0.29", "91.9565, 68.2433, 7.7216, 0.29", "93.1387, 68.8817, 7.83714, 0.44", "93.6998, 69.1699, 7.89227, 0.88", "94.5059, 69.5485, 7.94096, 0.74", "95.5771, 69.9784, 7.92481, 1.11", "96.1464, 70.1719, 7.87902, 1.11", "97.4676, 70.5439, 7.67894, 0.29", "98.147, 70.6855, 7.53705, 0.29", "99.2963, 70.8921, 7.23792, 0.29", "100.724, 71.1145, 6.80228, 0.74", "101.349, 71.2095, 6.57174, 0.96", "102.168, 71.3433, 6.24733, 0.74", "103.456, 71.5851, 5.71775, 0.22", "104.223, 71.7412, 5.42796, 0.22", "105.192, 71.956, 5.12997, 0.66", "106.082, 72.1608, 4.9106, 0.66", "106.901, 72.3495, 4.73741, 0.22", "107.408, 72.4828, 4.64145, 0.22", "107.826, 72.6019, 4.56697, 0.66", "108.611, 72.8264, 4.45639, 0.74", "109.237, 73.0243, 4.38618, 0.96", "109.962, 73.264, 4.32811, 0.96", "110.543, 73.4773, 4.27759, 0.44", "111.243, 73.7541, 4.2152, 0.44", "112.243, 74.186, 4.11331, 0.81", "112.634, 74.3659, 4.05306, 0.81", "113.378, 74.6916, 3.91502, 0.52", "113.816, 74.8679, 3.82726, 0.52", "114.696, 75.1749, 3.65465, 0.88", "115.454, 75.4022, 3.506, 1.03", "116.66, 75.6918, 3.27251, 0.29", "117.664, 75.8707, 3.08911, 0.29", "118.532, 75.9956, 2.93435, 0.29", "119.697, 76.1434, 2.72506, 0.44", "120.331, 76.2374, 2.60579, 0.44", "120.83, 76.3473, 2.49747, 0.22", "121.627, 76.6701, 2.26365, 0.22", "122.04, 76.9698, 2.06264, 0.74", "122.444, 77.3958, 1.75197, 0.88", "122.937, 78.0534, 1.27778, 0.66", "123.491, 78.845, 0.672293, 0.52", "124.059, 79.6571, -2.92296E-4, 0.96", "124.392, 80.1194, -0.410066, 1.4", "125.004, 80.8731, -1.1304, 1.11", "125.502, 81.4111, -1.71158, 0.59", "126.248, 82.1398, -2.5547, 0.52", "126.867, 82.7134, -3.2479, 0.44", "127.194, 83.0123, -3.61792, 0.44", "127.732, 83.4995, -4.22425, 0.37", "128.451, 84.1278, -5.02501, 0.74", "129.023, 84.6098, -5.66884, 1.03", "129.701, 85.1541, -6.37845, 1.18", "130.147, 85.4657, -6.78892, 1.18", "130.74, 85.8127, -7.30494, 0.66", "131.826, 86.3245, -8.24248, 0.44", "132.462, 86.5697, -8.75118, 0.44", "133.062, 86.754, -9.2368, 0.44", "134.089, 87.0369, -10.0409, 0.96", "135.269, 87.3768, -10.9226, 0.96", "136.204, 87.6677, -11.574, 0.88", "136.897, 87.9151, -12.0298, 0.29", "137.631, 88.2085, -12.5056, 0.29", "138.335, 88.5567, -12.9534, 0.29", "139.09, 89.0215, -13.3986, 0.88", "139.596, 89.359, -13.6494, 0.88", "140.24, 89.7901, -13.944, 0.88", "140.977, 90.2604, -14.29, 0.66", "141.813, 90.7897, -14.6934, 0.29", "142.552, 91.2523, -15.0911, 0.81", "142.932, 91.502, -15.3161, 0.81", "143.348, 91.8055, -15.5806, 0.81", "143.733, 92.1132, -15.8158, 0.81", "144.499, 92.7721, -16.2463, 0.29", "144.805, 93.038, -16.4189, 0.29", "145.221, 93.4099, -16.6507, 0.66", "145.579, 93.7331, -16.8543, 0.66", "146.345, 94.4125, -17.2812, 0.29", "147.274, 95.2272, -17.7853, 0.88", "147.696, 95.5822, -18.0167, 0.88", "148.544, 96.2614, -18.5014, 0.37", "149.244, 96.7842, -18.9232, 0.59", "149.673, 97.0831, -19.1862, 0.74", "150.104, 97.3637, -19.4691, 0.74", "150.861, 97.8381, -19.9523, 0.44", "151.34, 98.1149, -20.2322, 0.66", "151.959, 98.4484, -20.5581, 0.44", "152.442, 98.6946, -20.7977, 0.29", "152.813, 98.8748, -20.9644, 0.29", "153.528, 99.2143, -21.2524, 0.81", "154.203, 99.5421, -21.5005, 0.81", "155.047, 99.9789, -21.8242, 0.29", "155.548, 100.238, -22.031, 0.29", "156.553, 100.738, -22.5047, 0.74", "157.013, 100.944, -22.7305, 0.88", "157.628, 101.175, -23.0487, 0.88", "158.264, 101.39, -23.3941, 0.88", "159.264, 101.713, -23.9975, 0.22", "159.907, 101.929, -24.4152, 0.22", "160.708, 102.21, -24.9803, 0.81", "161.518, 102.526, -25.5976, 1.03", "162.583, 102.987, -26.4379, 0.29", "163.284, 103.327, -27.021, 0.29", "164.05, 103.751, -27.6817, 1.03", "164.547, 104.053, -28.1123, 1.11", "165.342, 104.591, -28.8274, 0.96", "166.063, 105.124, -29.4824, 0.29", "166.616, 105.538, -29.9333, 0.29", "167.214, 105.969, -30.354, 0.29", "167.725, 106.322, -30.6693, 0.29", "168.7, 106.975, -31.1827, 1.11", "169.082, 107.226, -31.3599, 1.25", "170.335, 108.053, -31.9115, 0.29", "170.964, 108.451, -32.1592, 0.22", "171.401, 108.716, -32.3264, 0.96", "171.834, 108.971, -32.4765, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "56.3212, 53.2732, 4.17099, 0.44", "57.4796, 54.2773, 4.44927, 0.44", "58.2773, 54.9133, 4.64838, 0.44", "58.9776, 55.4353, 4.83614, 0.59", "59.6124, 55.8852, 5.02334, 0.59", "60.137, 56.232, 5.20817, 0.37", "60.8401, 56.654, 5.47829, 0.74", "61.374, 56.9278, 5.70665, 0.74", "61.7737, 57.1184, 5.88803, 0.96", "62.2023, 57.3219, 6.09788, 0.96", "63.2953, 57.8767, 6.67231, 0.29", "63.8923, 58.2226, 7.04328, 0.29", "64.6535, 58.7265, 7.58941, 0.88", "65.048, 59.0053, 7.88409, 0.88", "65.4519, 59.308, 8.18963, 0.59", "65.866, 59.6132, 8.48072, 0.44", "66.4254, 60.0418, 8.84954, 0.29", "67.0963, 60.572, 9.29688, 1.33", "67.4019, 60.8217, 9.50561, 1.55", "67.6774, 61.0611, 9.69737, 1.55", "68.365, 61.7061, 10.1776, 0.88", "69.0134, 62.4306, 10.7006, 0.29", "69.2891, 62.8006, 10.9615, 0.29", "69.7846, 63.6063, 11.5183, 0.96", "70.0461, 64.0913, 11.8516, 1.11", "70.3106, 64.6074, 12.2118, 0.81", "70.8428, 65.6821, 12.9484, 0.29", "71.1267, 66.1947, 13.2862, 0.29", "71.4231, 66.6761, 13.5712, 0.96", "71.6368, 67.0026, 13.7386, 0.96", "71.9783, 67.5195, 13.9535, 0.96", "72.3633, 68.1074, 14.1391, 0.29", "72.7496, 68.7148, 14.2918, 0.29", "73.3075, 69.6322, 14.4961, 0.96", "73.6042, 70.133, 14.6044, 1.18", "73.9117, 70.631, 14.7404, 0.81", "74.2953, 71.2504, 14.9344, 0.29", "74.8459, 72.1274, 15.2548, 0.29", "75.3389, 72.8589, 15.5601, 0.96", "75.6481, 73.2589, 15.7456, 0.96", "76.5147, 74.2451, 16.2497, 0.37", "77.0565, 74.7936, 16.558, 0.37", "77.5062, 75.1941, 16.8046, 0.37", "77.9421, 75.5511, 17.0248, 0.29", "78.7673, 76.1969, 17.4, 0.96", "79.2107, 76.5274, 17.5721, 1.18", "79.6549, 76.844, 17.7071, 1.18", "80.0496, 77.1062, 17.8167, 1.18", "80.5804, 77.4559, 17.9542, 0.66", "81.3628, 78.0295, 18.1613, 0.29", "81.9535, 78.516, 18.3216, 0.29", "82.5297, 79.0419, 18.4831, 0.29", "82.9421, 79.4457, 18.5968, 0.96", "83.2381, 79.7539, 18.6812, 0.96", "84.1082, 80.6669, 18.9897, 0.29", "84.4309, 81.0149, 19.1266, 0.29", "84.8911, 81.5051, 19.3394, 0.74", "85.436, 82.0551, 19.6192, 0.88", "85.923, 82.5117, 19.8808, 0.88", "86.7879, 83.2413, 20.3446, 0.52", "87.3164, 83.6384, 20.6216, 1.18", "87.6941, 83.9092, 20.8079, 1.4", "88.0551, 84.1604, 20.9678, 1.4", "88.5364, 84.5083, 21.1712, 1.03", "89.4441, 85.2022, 21.4898, 0.29", "89.9129, 85.5806, 21.6122, 0.29", "90.3711, 85.958, 21.7131, 0.81", "90.7693, 86.2819, 21.7868, 1.03", "91.3334, 86.7094, 21.8725, 0.44", "92.1547, 87.2542, 21.9739, 0.29", "92.7976, 87.6496, 22.0519, 0.59", "93.2235, 87.8944, 22.1042, 0.59", "93.8027, 88.2094, 22.1746, 0.59", "94.4662, 88.5633, 22.2482, 0.74", "95.2061, 88.9568, 22.3434, 0.44", "96.2331, 89.5537, 22.4971, 0.81", "96.6326, 89.8242, 22.5783, 0.96", "97.0348, 90.1345, 22.6825, 0.96", "97.802, 90.8044, 22.9189, 0.44", "98.639, 91.5932, 23.1992, 0.44", "99.4744, 92.3995, 23.457, 0.96", "100.311, 93.2092, 23.6717, 1.55", "100.841, 93.7276, 23.7905, 1.55", "101.491, 94.3718, 23.8976, 1.03", "102.179, 95.0645, 23.9584, 0.37", "102.933, 95.8168, 23.9504, 0.96", "103.544, 96.4151, 23.9031, 0.96", "103.945, 96.8008, 23.8396, 0.96", "104.592, 97.4218, 23.7182, 0.52", "105.074, 97.8845, 23.6278, 0.44", "105.676, 98.4476, 23.5222, 0.44", "106.544, 99.2214, 23.4495, 1.11", "107.101, 99.6907, 23.4631, 1.25", "107.818, 100.302, 23.5571, 0.59", "108.395, 100.805, 23.7052, 0.37", "108.91, 101.272, 23.8961, 0.37", "109.705, 102.015, 24.287, 0.66", "110.356, 102.611, 24.6978, 0.52", "110.763, 102.987, 25.0214, 0.37", "111.403, 103.589, 25.6144, 0.37", "111.882, 104.037, 26.0891, 0.37", "112.328, 104.444, 26.5369, 0.74", "113.126, 105.132, 27.308, 0.59", "114.064, 105.9, 28.2126, 0.96", "114.756, 106.46, 28.8908, 1.18", "115.048, 106.706, 29.1891, 1.18", "115.532, 107.147, 29.6909, 0.81", "115.93, 107.546, 30.0898, 0.81", "116.356, 108.01, 30.4835, 1.03", "116.964, 108.68, 30.9801, 0.59", "117.505, 109.27, 31.4029, 0.59", "118.022, 109.777, 31.7883, 0.59", "118.402, 110.113, 32.0461, 1.18", "118.743, 110.377, 32.2517, 1.18", "119.271, 110.742, 32.5381, 0.88", "119.898, 111.148, 32.854, 0.66", "120.921, 111.857, 33.3211, 0.59", "121.633, 112.401, 33.6105, 0.59", "122.028, 112.728, 33.7519, 1.11", "122.615, 113.232, 33.9127, 1.18", "123.063, 113.627, 34.01, 1.18", "123.801, 114.262, 34.1066, 1.03", "124.44, 114.801, 34.1516, 0.66", "125.014, 115.288, 34.1466, 0.66", "125.937, 116.094, 34.0702, 1.25", "126.332, 116.43, 34.0121, 1.25", "127.286, 117.221, 33.8383, 0.81", "127.958, 117.772, 33.7072, 0.96", "129.061, 118.711, 33.4584, 0.52", "129.908, 119.487, 33.2369, 0.52", "130.417, 119.999, 33.0791, 0.74", "130.935, 120.545, 32.9011, 0.74", "131.353, 121.018, 32.7712, 0.37", "136.72, 128.978, 35.5703, 0.37", "141.952, 137.303, 37.3909, 0.37" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "1.26017, -178.34, 27.7727, 0.52", "2.07904, -179.292, 27.9725, 0.52", "2.89777, -180.319, 28.1839, 0.52", "3.81089, -181.578, 28.3495, 0.52", "4.23036, -182.189, 28.3927, 0.52", "5.17871, -183.57, 28.4903, 0.52", "5.83728, -184.529, 28.5581, 0.52", "6.1531, -185.082, 28.5928, 0.52", "6.70908, -186.203, 28.6517, 0.52", "7.08484, -186.989, 28.6367, 0.52", "12.0889, -195.61, 29.4295, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "1.26017, -178.34, 27.7727, 0.66", "0.777185, -179.823, 27.7377, 0.66", "0.308202, -181.35, 27.7013, 0.66", "-0.338738, -183.481, 27.6515, 0.66", "-0.834679, -185.125, 27.6157, 0.66", "-1.01644, -185.832, 27.6174, 0.66", "-1.1366, -186.399, 27.6284, 0.66", "-1.21446, -187.055, 27.6515, 0.66", "-1.19711, -187.81, 27.6914, 0.66", "-1.0269, -189.082, 27.8251, 0.66", "-0.803216, -190.482, 28.0032, 0.66", "-0.709425, -191.138, 28.0887, 0.66", "-0.611093, -191.914, 28.1838, 0.66", "-0.463806, -193.208, 28.3277, 0.66", "-0.338369, -194.599, 28.4564, 0.66", "-0.174515, -196.2, 28.5345, 0.66", "-0.0260484, -197.457, 28.6259, 0.66", "0.194949, -198.827, 28.7689, 0.66", "0.466229, -200.125, 28.9475, 0.66", "1.04917, -202.21, 29.2873, 0.66", "1.62055, -203.771, 29.5671, 0.66", "2.55651, -205.855, 29.976, 0.66", "3.23186, -207.171, 30.3179, 0.66", "3.75136, -208.101, 30.5902, 0.66", "4.62112, -209.545, 31.0651, 0.66", "5.19529, -210.449, 31.3991, 0.66", "5.92176, -211.742, 31.8795, 0.66", "6.60246, -213.054, 32.1965, 0.66", "7.54615, -222.559, 35.1563, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "171.834, 108.971, -32.4765, 0.22", "172.746, 109.473, -32.5216, 0.22", "173.354, 109.803, -32.5535, 0.66", "173.719, 110.017, -32.5858, 0.66", "175.497, 111.053, -32.7962, 0.22", "176.266, 111.518, -32.8967, 0.88", "176.599, 111.721, -32.9477, 1.03", "176.967, 111.944, -33.0195, 1.03", "178.251, 112.714, -33.3398, 0.22", "179.107, 113.229, -33.593, 0.22", "179.881, 113.696, -33.8567, 0.44", "180.285, 113.942, -34.0005, 0.44", "181.319, 114.556, -34.3737, 0.22", "182.217, 115.066, -34.696, 0.74", "182.608, 115.283, -34.8382, 0.88", "182.957, 115.499, -34.9617, 0.88", "183.685, 115.969, -35.2094, 0.29", "184.403, 116.475, -35.4494, 0.29", "184.775, 116.763, -35.5839, 0.59", "185.28, 117.173, -35.781, 0.59", "186.172, 117.956, -36.1913, 0.22", "186.641, 118.387, -36.4268, 0.81", "187.072, 118.797, -36.65, 1.03", "187.514, 119.217, -36.8679, 1.03", "188.461, 120.116, -37.3425, 0.44", "189.062, 120.676, -37.6494, 0.52", "189.939, 121.475, -38.1343, 0.22", "190.588, 122.061, -38.483, 0.37", "191.076, 122.488, -38.7411, 0.22", "191.762, 123.075, -39.1015, 0.81", "192.209, 123.432, -39.3406, 0.81", "193.201, 124.202, -39.8619, 0.44", "193.775, 124.64, -40.1565, 0.37", "194.486, 125.168, -40.516, 0.59", "194.878, 125.458, -40.7043, 0.37", "196.409, 126.577, -41.3488, 0.29", "197.855, 127.681, -41.8949, 0.29", "198.619, 128.311, -42.1522, 0.88", "198.934, 128.579, -42.2518, 1.11", "199.4, 128.979, -42.3993, 0.81", "200.862, 130.247, -42.8694, 0.22", "201.825, 131.096, -43.1796, 0.22", "203.174, 132.257, -43.7095, 0.22", "204.237, 133.137, -44.2549, 0.22", "205.169, 133.872, -44.8171, 0.88", "205.489, 134.103, -45.0394, 1.25", "205.844, 134.331, -45.3129, 1.25", "207.15, 135.068, -46.3783, 0.44", "208.542, 135.776, -47.532, 0.22", "209.082, 136.049, -47.9781, 0.44", "209.909, 136.467, -48.6279, 0.29", "210.53, 136.785, -49.0967, 0.66", "211.389, 137.232, -49.6981, 0.52", "211.979, 137.551, -50.0587, 0.29", "212.926, 138.099, -50.6371, 0.96", "213.667, 138.547, -51.1177, 0.96", "214.037, 138.779, -51.3666, 0.96", "216.14, 140.153, -52.861, 0.22", "217.454, 141.037, -53.8108, 0.22", "218.64, 141.858, -54.6814, 0.66", "219.202, 142.249, -55.0808, 0.66", "220.487, 143.158, -55.9991, 0.22", "221.096, 143.593, -56.4433, 0.66", "221.695, 144.012, -56.877, 0.66", "222.234, 144.358, -57.2669, 0.37", "223.618, 145.183, -58.2019, 0.22", "224.494, 145.666, -58.7474, 0.66", "225.367, 146.103, -59.2371, 0.66", "227.091, 146.834, -60.2497, 0.22", "227.915, 147.136, -60.7885, 0.22", "228.501, 147.312, -61.1955, 0.74", "229.153, 147.452, -61.6763, 0.88", "229.578, 147.512, -61.9936, 0.88", "232.02, 147.705, -63.7008, 0.29", "232.686, 147.728, -64.1552, 0.44", "233.593, 147.757, -64.7483, 0.22", "234.234, 147.793, -65.1423, 0.59", "234.639, 147.832, -65.3583, 0.59", "236.593, 148.087, -66.2209, 0.22", "237.65, 148.246, -66.582, 0.66", "238.433, 148.383, -66.8226, 0.66", "240.487, 148.8, -67.4596, 0.15", "242.332, 149.223, -68.0253, 0.15", "243.406, 149.493, -68.3246, 0.59", "243.898, 149.626, -68.4612, 0.88", "246.221, 150.224, -68.939, 0.22", "247.087, 150.432, -69.087, 0.59", "247.389, 150.499, -69.1284, 0.59", "249.347, 150.89, -69.3511, 0.22", "250.972, 151.19, -69.4961, 0.22", "252.819, 151.505, -69.6241, 0.22", "253.72, 151.614, -69.6532, 0.74", "254.392, 151.68, -69.6471, 0.88", "254.774, 151.708, -69.6465, 0.59" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "171.834, 108.971, -32.4765, 0.22", "173.068, 108.413, -32.4892, 0.22", "173.672, 108.114, -32.4823, 0.74", "173.942, 107.975, -32.4761, 0.74", "175.874, 106.906, -32.4195, 0.22", "176.409, 106.588, -32.4023, 0.22", "177.251, 106.062, -32.3382, 0.81", "177.653, 105.78, -32.2877, 0.81", "178.078, 105.478, -32.2187, 0.81", "179.196, 104.706, -32.0036, 0.22", "179.881, 104.264, -31.8501, 0.22", "180.745, 103.755, -31.6619, 0.52", "181.101, 103.576, -31.5953, 0.52", "181.978, 103.19, -31.43, 0.22", "182.722, 102.889, -31.2929, 0.22", "183.492, 102.609, -31.1585, 0.66", "184.007, 102.432, -31.0819, 0.66", "185.252, 102.011, -30.9476, 0.22", "185.718, 101.852, -30.8947, 0.66", "186.215, 101.683, -30.8414, 0.88", "186.668, 101.552, -30.8234, 0.88", "187.031, 101.475, -30.8298, 0.88", "187.468, 101.416, -30.8591, 0.29", "187.986, 101.379, -30.9102, 0.22", "189.596, 101.31, -31.1066, 0.22", "190.828, 101.296, -31.2571, 0.96", "191.298, 101.303, -31.3134, 0.96", "192.984, 101.356, -31.5031, 0.22", "193.501, 101.383, -31.5564, 0.52", "193.894, 101.409, -31.5914, 0.52", "195.886, 101.563, -31.7463, 0.22", "196.548, 101.611, -31.7844, 0.81", "198.196, 101.687, -31.8376, 0.22", "198.963, 101.717, -31.8437, 0.22", "199.992, 101.739, -31.8274, 0.74", "200.405, 101.738, -31.8097, 1.03", "200.714, 101.728, -31.7878, 1.03", "202.405, 101.627, -31.6347, 0.22", "202.991, 101.583, -31.5679, 0.59", "203.359, 101.554, -31.5241, 0.59", "205.469, 101.39, -31.261, 0.22", "206.275, 101.333, -31.1592, 0.59", "206.665, 101.31, -31.1149, 0.59", "208.586, 101.228, -30.9578, 0.22", "209.254, 101.197, -30.8976, 0.22" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_35", "dend_30", "dend_29", "dend_28", "dend_23", "dend_0", "dend_49", "dend_36", "dend_34", "dend_31", "dend_25", "dend_24", "dend_16", "dend_1", "dend_53", "dend_50", "dend_46", "dend_37", "dend_33", "dend_32", "dend_27", "dend_26", "dend_20", "dend_17", "dend_11", "dend_2", "dend_55", "dend_54", "dend_52", "dend_51", "dend_48", "dend_47", "dend_45", "dend_38", "dend_22", "dend_21", "dend_19", "dend_18", "dend_13", "dend_12", "dend_8", "dend_3", "dend_44", "dend_39", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_4", "dend_41", "dend_40", "dend_6", "dend_5", "dend_43", "dend_42" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_35", "dend_30", "dend_29", "dend_28", "dend_23", "dend_0", "dend_49", "dend_36", "dend_34", "dend_31", "dend_25", "dend_24", "dend_16", "dend_1", "dend_53", "dend_50", "dend_46", "dend_37", "dend_33", "dend_32", "dend_27", "dend_26", "dend_20", "dend_17", "dend_11", "dend_2", "dend_55", "dend_54", "dend_52", "dend_51", "dend_48", "dend_47", "dend_45", "dend_38", "dend_22", "dend_21", "dend_19", "dend_18", "dend_13", "dend_12", "dend_8", "dend_3", "dend_44", "dend_39", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_4", "dend_41", "dend_40", "dend_6", "dend_5", "dend_43", "dend_42" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_35", "dend_30", "dend_29", "dend_28", "dend_23", "dend_0", "axon_0", "dend_49", "dend_36", "dend_34", "dend_31", "dend_25", "dend_24", "dend_16", "dend_1", "axon_1", "dend_53", "dend_50", "dend_46", "dend_37", "dend_33", "dend_32", "dend_27", "dend_26", "dend_20", "dend_17", "dend_11", "dend_2", "dend_55", "dend_54", "dend_52", "dend_51", "dend_48", "dend_47", "dend_45", "dend_38", "dend_22", "dend_21", "dend_19", "dend_18", "dend_13", "dend_12", "dend_8", "dend_3", "dend_44", "dend_39", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_4", "dend_41", "dend_40", "dend_6", "dend_5", "dend_43", "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L6_MC_a405be0ec4_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_49, id: dend_49, parent: dend_35
create dend_49
public dend_49
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_36
create dend_46
public dend_46
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_37
create dend_45
public dend_45
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_44, id: dend_44, parent: dend_38
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_35, dend_30, dend_29, dend_28, dend_23, dend_0, dend_49, dend_36, dend_34, dend_31, dend_25, dend_24, dend_16, dend_1, dend_53, dend_50, dend_46, dend_37, dend_33, dend_32, dend_27, dend_26, dend_20, dend_17, dend_11, dend_2, dend_55, dend_54, dend_52, dend_51, dend_48, dend_47, dend_45, dend_38, dend_22, dend_21, dend_19, dend_18, dend_13, dend_12, dend_8, dend_3, dend_44, dend_39, dend_15, dend_14, dend_10, dend_9, dend_7, dend_4, dend_41, dend_40, dend_6, dend_5, dend_43, dend_42]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_35, dend_30, dend_29, dend_28, dend_23, dend_0, dend_49, dend_36, dend_34, dend_31, dend_25, dend_24, dend_16, dend_1, dend_53, dend_50, dend_46, dend_37, dend_33, dend_32, dend_27, dend_26, dend_20, dend_17, dend_11, dend_2, dend_55, dend_54, dend_52, dend_51, dend_48, dend_47, dend_45, dend_38, dend_22, dend_21, dend_19, dend_18, dend_13, dend_12, dend_8, dend_3, dend_44, dend_39, dend_15, dend_14, dend_10, dend_9, dend_7, dend_4, dend_41, dend_40, dend_6, dend_5, dend_43, dend_42]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_35, dend_30, dend_29, dend_28, dend_23, dend_0, axon_0, dend_49, dend_36, dend_34, dend_31, dend_25, dend_24, dend_16, dend_1, axon_1, dend_53, dend_50, dend_46, dend_37, dend_33, dend_32, dend_27, dend_26, dend_20, dend_17, dend_11, dend_2, dend_55, dend_54, dend_52, dend_51, dend_48, dend_47, dend_45, dend_38, dend_22, dend_21, dend_19, dend_18, dend_13, dend_12, dend_8, dend_3, dend_44, dend_39, dend_15, dend_14, dend_10, dend_9, dend_7, dend_4, dend_41, dend_40, dend_6, dend_5, dend_43, dend_42]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_59
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_35(0), soma_0(0.49999884478442963)
    connect dend_30(0), soma_0(0.49999884478442963)
    connect dend_29(0), soma_0(0.49999884478442963)
    connect dend_28(0), soma_0(0.49999884478442963)
    connect dend_23(0), soma_0(0.49999884478442963)
    connect dend_0(0), soma_0(0.49999884478442963)
    connect axon_0(0), soma_0(1.0)
    connect dend_49(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_44(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.604345, 14.9148, -0.0137517, 2.24895 ) }
    soma_0 { pt3dadd( 0.567996, 13.358, -0.0124092, 3.66148 ) }
    soma_0 { pt3dadd( 0.531648, 11.8012, -0.0110666, 5.24119 ) }
    soma_0 { pt3dadd( 0.495299, 10.2445, -0.00972411, 6.93007 ) }
    soma_0 { pt3dadd( 0.458951, 8.68766, -0.00838158, 8.33529 ) }
    soma_0 { pt3dadd( 0.422602, 7.13086, -0.00703904, 9.38398 ) }
    soma_0 { pt3dadd( 0.386254, 5.57407, -0.00569651, 10.3974 ) }
    soma_0 { pt3dadd( 0.349905, 4.01727, -0.00435398, 11.1281 ) }
    soma_0 { pt3dadd( 0.313557, 2.46048, -0.00301145, 11.4353 ) }
    soma_0 { pt3dadd( 0.277208, 0.903681, -0.00166892, 10.9538 ) }
    soma_0 { pt3dadd( 0.240859, -0.653114, -3.26385E-4, 10.395 ) }
    soma_0 { pt3dadd( 0.204511, -2.20991, 0.00101615, 9.83019 ) }
    soma_0 { pt3dadd( 0.168162, -3.7667, 0.00235868, 9.07757 ) }
    soma_0 { pt3dadd( 0.131814, -5.3235, 0.00370121, 8.19272 ) }
    soma_0 { pt3dadd( 0.0954654, -6.8803, 0.00504374, 7.59378 ) }
    soma_0 { pt3dadd( 0.0591169, -8.43709, 0.00638627, 7.0332 ) }
    soma_0 { pt3dadd( 0.0227684, -9.99389, 0.00772881, 6.30438 ) }
    soma_0 { pt3dadd( -0.0135801, -11.5507, 0.00907134, 5.3987 ) }
    soma_0 { pt3dadd( -0.0499286, -13.1075, 0.0104139, 4.49303 ) }
    soma_0 { pt3dadd( -0.0862771, -14.6643, 0.0117564, 3.43597 ) }
    soma_0 { pt3dadd( -0.122626, -16.2211, 0.0130989, 2.07305 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 21/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 0.599542, 14.9694, -0.0268013, 2.43 ) }
    dend_35 { pt3dadd( 0.599542, 14.9694, -0.0268013, 2.43 ) }
    dend_35 { pt3dadd( 0.570311, 16.0694, -0.0163575, 2.5 ) }
    dend_35 { pt3dadd( 0.536977, 17.3237, -0.00444804, 2.8 ) }
    dend_35 { pt3dadd( 0.515091, 18.1473, 0.00337142, 3.02 ) }
    dend_35 { pt3dadd( 0.495589, 18.8811, 0.0103386, 3.17 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 27/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -1.69046, 11.2494, -14.5568, 1.11 ) }
    dend_30 { pt3dadd( -1.75224, 11.6212, -14.9909, 1.11 ) }
    dend_30 { pt3dadd( -1.78056, 12.4406, -15.7169, 1.11 ) }
    dend_30 { pt3dadd( -1.77697, 13.1126, -16.3698, 1.11 ) }
    dend_30 { pt3dadd( -1.78825, 13.7071, -17.0043, 1.11 ) }
    dend_30 { pt3dadd( -1.81942, 14.5452, -17.9106, 1.11 ) }
    dend_30 { pt3dadd( -1.85451, 15.489, -18.931, 1.11 ) }
    dend_30 { pt3dadd( -1.84547, 16.4848, -19.9958, 1.11 ) }
    dend_30 { pt3dadd( -1.76799, 18.0405, -21.5777, 1.11 ) }
    dend_30 { pt3dadd( -1.71464, 18.9677, -22.5029, 1.11 ) }
    dend_30 { pt3dadd( -1.70614, 19.6747, -23.2387, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 38/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 4.02954, 9.89942, -5.4068, 0.88 ) }
    dend_29 { pt3dadd( 4.41444, 10.3563, -5.56563, 0.88 ) }
    dend_29 { pt3dadd( 5.27166, 11.4035, -5.95683, 0.88 ) }
    dend_29 { pt3dadd( 6.26022, 12.619, -6.39914, 0.88 ) }
    dend_29 { pt3dadd( 7.31781, 13.9671, -6.85894, 0.88 ) }
    dend_29 { pt3dadd( 8.19562, 15.1302, -7.27492, 0.88 ) }
    dend_29 { pt3dadd( 9.53946, 16.933, -7.95355, 0.88 ) }
    dend_29 { pt3dadd( 10.5029, 18.2332, -8.48964, 0.88 ) }
    dend_29 { pt3dadd( 11.283, 19.2561, -8.95461, 0.88 ) }
    dend_29 { pt3dadd( 11.9359, 20.0617, -9.38734, 0.88 ) }
    dend_29 { pt3dadd( 12.597, 20.7986, -9.8264, 0.88 ) }
    dend_29 { pt3dadd( 13.223, 21.4103, -10.2079, 0.88 ) }
    dend_29 { pt3dadd( 14.04, 22.0788, -10.6178, 0.88 ) }
    dend_29 { pt3dadd( 14.987, 22.7111, -11.0736, 0.88 ) }
    dend_29 { pt3dadd( 16.185, 23.3993, -11.6087, 0.88 ) }
    dend_29 { pt3dadd( 17.1273, 23.8916, -11.9697, 0.88 ) }
    dend_29 { pt3dadd( 17.9702, 24.3336, -12.2496, 0.88 ) }
    dend_29 { pt3dadd( 18.7549, 24.7743, -12.4957, 0.81 ) }
    dend_29 { pt3dadd( 19.5363, 25.2414, -12.7391, 0.74 ) }
    dend_29 { pt3dadd( 20.3664, 25.7271, -12.9989, 0.74 ) }
    dend_29 { pt3dadd( 21.6393, 26.4485, -13.4237, 0.74 ) }
    dend_29 { pt3dadd( 22.2189, 26.7868, -13.6581, 0.74 ) }
    dend_29 { pt3dadd( 22.9199, 27.1889, -13.9513, 0.74 ) }
    dend_29 { pt3dadd( 24.1591, 27.8412, -14.4272, 0.74 ) }
    dend_29 { pt3dadd( 25.2871, 28.3692, -14.8297, 0.74 ) }
    dend_29 { pt3dadd( 26.3103, 28.7789, -15.1785, 0.74 ) }
    dend_29 { pt3dadd( 27.5362, 29.1619, -15.5389, 0.74 ) }
    dend_29 { pt3dadd( 28.997, 29.5241, -15.8935, 0.74 ) }
    dend_29 { pt3dadd( 31.1653, 29.98, -16.3931, 0.66 ) }
    dend_29 { pt3dadd( 32.6754, 30.2795, -16.7165, 0.66 ) }
    dend_29 { pt3dadd( 34.2301, 30.6188, -17.066, 0.66 ) }
    dend_29 { pt3dadd( 36.8939, 31.2935, -17.6567, 0.66 ) }
    dend_29 { pt3dadd( 38.692, 31.815, -18.0369, 0.66 ) }
    dend_29 { pt3dadd( 39.984, 32.2779, -18.358, 0.66 ) }
    dend_29 { pt3dadd( 41.0709, 32.7697, -18.6595, 0.59 ) }
    dend_29 { pt3dadd( 42.4557, 33.5292, -19.0549, 0.59 ) }
    dend_29 { pt3dadd( 43.5173, 34.2244, -19.4208, 0.59 ) }
    dend_29 { pt3dadd( 44.5871, 35.0214, -19.8711, 0.59 ) }
    dend_29 { pt3dadd( 46.3399, 36.3005, -20.6183, 0.59 ) }
    dend_29 { pt3dadd( 47.0022, 36.7507, -20.8785, 0.59 ) }
    dend_29 { pt3dadd( 47.4227, 37.0152, -21.0374, 0.59 ) }
    dend_29 { pt3dadd( 49.1636, 38.0106, -21.6555, 0.59 ) }
    dend_29 { pt3dadd( 50.7532, 38.8851, -22.26, 0.59 ) }
    dend_29 { pt3dadd( 51.7475, 39.4313, -22.6694, 0.59 ) }
    dend_29 { pt3dadd( 53.23, 40.2431, -23.2752, 0.59 ) }
    dend_29 { pt3dadd( 54.8762, 41.1447, -23.9396, 0.59 ) }
    dend_29 { pt3dadd( 55.9316, 41.7373, -24.3602, 0.59 ) }
    dend_29 { pt3dadd( 57.1929, 42.4873, -24.8342, 0.59 ) }
    dend_29 { pt3dadd( 58.8075, 43.5166, -25.4356, 0.59 ) }
    dend_29 { pt3dadd( 59.8213, 44.168, -25.7946, 0.59 ) }
    dend_29 { pt3dadd( 61.6171, 45.3029, -26.3952, 0.59 ) }
    dend_29 { pt3dadd( 63.4086, 46.4276, -26.9527, 0.59 ) }
    dend_29 { pt3dadd( 64.5615, 47.1484, -27.2867, 0.59 ) }
    dend_29 { pt3dadd( 67.6521, 49.0437, -28.127, 0.59 ) }
    dend_29 { pt3dadd( 69.1629, 49.9426, -28.5246, 0.59 ) }
    dend_29 { pt3dadd( 69.9582, 50.3932, -28.73, 0.59 ) }
    dend_29 { pt3dadd( 71.4433, 51.2004, -29.112, 0.59 ) }
    dend_29 { pt3dadd( 73.4619, 52.2335, -29.6223, 0.59 ) }
    dend_29 { pt3dadd( 74.1531, 52.5569, -29.7962, 0.59 ) }
    dend_29 { pt3dadd( 76.6329, 53.6096, -30.3856, 0.59 ) }
    dend_29 { pt3dadd( 78.4768, 54.4093, -30.8043, 0.59 ) }
    dend_29 { pt3dadd( 79.2277, 54.7344, -30.9498, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_29 { pt3dadd( 79.8515, 55.0148, -31.0587, 0.59 ) }
    dend_29 { pt3dadd( 80.8534, 55.4972, -31.2138, 0.59 ) }
    dend_29 { pt3dadd( 81.7573, 55.9657, -31.335, 0.59 ) }
    dend_29 { pt3dadd( 83.5627, 56.9577, -31.5435, 0.52 ) }
    dend_29 { pt3dadd( 85.0104, 57.8, -31.6956, 0.52 ) }
    dend_29 { pt3dadd( 86.5555, 58.7295, -31.8316, 0.52 ) }
    dend_29 { pt3dadd( 88.464, 59.8895, -31.9824, 0.52 ) }
    dend_29 { pt3dadd( 90.7297, 61.2941, -32.1419, 0.52 ) }
    dend_29 { pt3dadd( 92.6498, 62.5209, -32.2505, 0.52 ) }
    dend_29 { pt3dadd( 93.6418, 63.1792, -32.2815, 0.52 ) }
    dend_29 { pt3dadd( 95.2991, 64.3438, -32.3021, 0.52 ) }
    dend_29 { pt3dadd( 97.1616, 65.7427, -32.2857, 0.52 ) }
    dend_29 { pt3dadd( 98.0175, 66.4274, -32.2688, 0.52 ) }
    dend_29 { pt3dadd( 99.8503, 67.9569, -32.2261, 0.52 ) }
    dend_29 { pt3dadd( 102.126, 69.8628, -32.1725, 0.52 ) }
    dend_29 { pt3dadd( 103.772, 71.2613, -32.1282, 0.52 ) }
    dend_29 { pt3dadd( 104.884, 72.2175, -32.0962, 0.52 ) }
    dend_29 { pt3dadd( 106.053, 73.2094, -32.0339, 0.52 ) }
    dend_29 { pt3dadd( 107.536, 74.4069, -31.9152, 0.52 ) }
    dend_29 { pt3dadd( 110.74, 76.9112, -31.6536, 0.52 ) }
    dend_29 { pt3dadd( 113.613, 79.1519, -31.4528, 0.52 ) }
    dend_29 { pt3dadd( 114.441, 79.7981, -31.4, 0.52 ) }
    dend_29 { pt3dadd( 116.535, 81.4929, -31.2768, 0.52 ) }
    dend_29 { pt3dadd( 118.026, 82.7739, -31.2051, 0.52 ) }
    dend_29 { pt3dadd( 123.495, 87.7429, -30.9934, 0.52 ) }
    dend_29 { pt3dadd( 126.095, 90.2221, -30.9679, 0.52 ) }
    dend_29 { pt3dadd( 126.857, 90.9644, -30.9926, 0.52 ) }
    dend_29 { pt3dadd( 128.323, 92.4344, -31.099, 0.52 ) }
    dend_29 { pt3dadd( 131.523, 95.7544, -31.4841, 0.52 ) }
    dend_29 { pt3dadd( 131.94, 96.2008, -31.5489, 0.52 ) }
    dend_29 { pt3dadd( 134.166, 98.5905, -31.9338, 0.52 ) }
    dend_29 { pt3dadd( 136.035, 100.521, -32.1934, 0.52 ) }
    dend_29 { pt3dadd( 137.767, 102.241, -32.3775, 0.52 ) }
    dend_29 { pt3dadd( 139.271, 103.676, -32.4912, 0.52 ) }
    dend_29 { pt3dadd( 140.18, 104.532, -32.5394, 0.52 ) }
    dend_29 { pt3dadd( 144.09, 108.198, -32.6623, 0.52 ) }
    dend_29 { pt3dadd( 146.973, 110.97, -32.7027, 0.52 ) }
    dend_29 { pt3dadd( 149.763, 113.691, -32.7213, 0.44 ) }
    dend_29 { pt3dadd( 152.885, 116.753, -32.7431, 0.44 ) }
    dend_29 { pt3dadd( 153.971, 117.816, -32.748, 0.44 ) }
    dend_29 { pt3dadd( 155.675, 119.483, -32.7529, 0.44 ) }
    dend_29 { pt3dadd( 157.803, 121.613, -32.7979, 0.44 ) }
    dend_29 { pt3dadd( 158.954, 122.823, -32.8928, 0.44 ) }
    dend_29 { pt3dadd( 159.89, 123.868, -32.9941, 0.44 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 44/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.310458, -16.2806, 2.5432, 0.81 ) }
    dend_28 { pt3dadd( 0.655409, -17.932, 2.71348, 0.81 ) }
    dend_28 { pt3dadd( 1.26307, -18.8628, 2.77943, 0.81 ) }
    dend_28 { pt3dadd( 2.04375, -19.9755, 2.83429, 0.81 ) }
    dend_28 { pt3dadd( 2.99995, -21.3315, 2.86177, 0.81 ) }
    dend_28 { pt3dadd( 3.46295, -21.9702, 2.93063, 0.74 ) }
    dend_28 { pt3dadd( 4.3856, -23.1795, 3.16197, 0.74 ) }
    dend_28 { pt3dadd( 5.53821, -24.4034, 3.51474, 0.74 ) }
    dend_28 { pt3dadd( 6.30026, -25.1329, 3.76709, 0.59 ) }
    dend_28 { pt3dadd( 7.15605, -25.8832, 4.08266, 0.59 ) }
    dend_28 { pt3dadd( 9.09655, -27.4054, 4.85554, 0.59 ) }
    dend_28 { pt3dadd( 10.1118, -28.1342, 5.2606, 0.59 ) }
    dend_28 { pt3dadd( 12.1739, -29.47, 6.0547, 0.59 ) }
    dend_28 { pt3dadd( 13.3302, -30.1573, 6.48925, 0.59 ) }
    dend_28 { pt3dadd( 14.6673, -30.8787, 6.89301, 0.59 ) }
    dend_28 { pt3dadd( 15.6395, -31.3632, 7.16077, 0.59 ) }
    dend_28 { pt3dadd( 16.3997, -31.731, 7.32814, 0.59 ) }
    dend_28 { pt3dadd( 18.4747, -32.7529, 7.78673, 0.59 ) }
    dend_28 { pt3dadd( 19.8979, -33.4959, 8.18856, 0.59 ) }
    dend_28 { pt3dadd( 20.8015, -33.9763, 8.46362, 0.59 ) }
    dend_28 { pt3dadd( 22.7124, -35.0197, 9.04958, 0.59 ) }
    dend_28 { pt3dadd( 23.9973, -35.7764, 9.50117, 0.59 ) }
    dend_28 { pt3dadd( 24.4909, -36.0935, 9.70885, 0.59 ) }
    dend_28 { pt3dadd( 25.7966, -37.057, 10.4087, 0.59 ) }
    dend_28 { pt3dadd( 26.7401, -37.8366, 11.025, 0.59 ) }
    dend_28 { pt3dadd( 27.4705, -38.4653, 11.5228, 0.59 ) }
    dend_28 { pt3dadd( 28.9997, -39.9193, 12.5265, 0.59 ) }
    dend_28 { pt3dadd( 29.6951, -40.6575, 13.0292, 0.59 ) }
    dend_28 { pt3dadd( 30.5948, -41.7207, 13.7479, 0.59 ) }
    dend_28 { pt3dadd( 31.4167, -42.7885, 14.4452, 0.59 ) }
    dend_28 { pt3dadd( 31.9084, -43.491, 14.9117, 0.59 ) }
    dend_28 { pt3dadd( 32.5372, -44.3883, 15.5188, 0.59 ) }
    dend_28 { pt3dadd( 33.0241, -45.014, 15.9507, 0.59 ) }
    dend_28 { pt3dadd( 33.637, -45.7044, 16.4097, 0.59 ) }
    dend_28 { pt3dadd( 34.5582, -46.6519, 16.9794, 0.59 ) }
    dend_28 { pt3dadd( 35.1458, -47.2693, 17.3355, 0.59 ) }
    dend_28 { pt3dadd( 35.9924, -48.1708, 17.8311, 0.59 ) }
    dend_28 { pt3dadd( 36.8961, -49.0794, 18.3257, 0.59 ) }
    dend_28 { pt3dadd( 37.8316, -50.0201, 18.7806, 0.59 ) }
    dend_28 { pt3dadd( 38.4701, -50.6703, 19.0697, 0.59 ) }
    dend_28 { pt3dadd( 39.6013, -51.9036, 19.5734, 0.59 ) }
    dend_28 { pt3dadd( 40.3296, -52.7471, 19.8817, 0.59 ) }
    dend_28 { pt3dadd( 40.7414, -53.267, 20.0508, 0.59 ) }
    dend_28 { pt3dadd( 41.5847, -54.4016, 20.4155, 0.59 ) }
    dend_28 { pt3dadd( 49.4153, -59.0304, 24.5695, 0.59 ) }
    dend_28 { pt3dadd( 56.3333, -64.3136, 29.4919, 0.59 ) }
    dend_28 { pt3dadd( 62.751, -70.1461, 34.4713, 0.59 ) }
    dend_28 { pt3dadd( 68.9934, -76.0942, 39.5361, 0.59 ) }
    dend_28 { pt3dadd( 73.8081, -83.1222, 44.7731, 0.59 ) }
    dend_28 { pt3dadd( 77.8741, -90.1951, 50.5561, 0.59 ) }
    dend_28 { pt3dadd( 81.0364, -97.038, 57.1268, 0.59 ) }
    dend_28 { pt3dadd( 83.8184, -102.947, 64.6996, 0.59 ) }
    dend_28 { pt3dadd( 86.2129, -108.057, 72.955, 0.59 ) }
    dend_28 { pt3dadd( 87.8563, -112.431, 81.7965, 0.59 ) }
    dend_28 { pt3dadd( 90.1772, -116.827, 90.4732, 0.59 ) }
    dend_28 { pt3dadd( 92.987, -121.877, 98.6345, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_28 { pt3dadd( 95.426, -126.103, 107.363, 0.59 ) }
    dend_28 { pt3dadd( 97.1107, -131.147, 115.832, 0.59 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 2/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.980458, -15.2106, 10.9432, 0.88 ) }
    dend_23 { pt3dadd( -2.02769, -16.6827, 11.6874, 0.88 ) }
    dend_23 { pt3dadd( -2.46146, -17.3736, 12.0036, 0.88 ) }
    dend_23 { pt3dadd( -3.17908, -18.6816, 12.5505, 0.88 ) }
    dend_23 { pt3dadd( -3.50812, -19.3619, 12.8097, 0.88 ) }
    dend_23 { pt3dadd( -4.11034, -20.681, 13.2581, 0.88 ) }
    dend_23 { pt3dadd( -4.47435, -21.5562, 13.5355, 0.88 ) }
    dend_23 { pt3dadd( -4.774, -22.4592, 13.7863, 0.88 ) }
    dend_23 { pt3dadd( -5.10802, -23.5986, 14.0719, 0.88 ) }
    dend_23 { pt3dadd( -5.29241, -24.3549, 14.2658, 0.88 ) }
    dend_23 { pt3dadd( -5.53418, -25.6002, 14.6213, 0.88 ) }
    dend_23 { pt3dadd( -5.70698, -26.9702, 15.1199, 0.88 ) }
    dend_23 { pt3dadd( -5.75008, -27.5284, 15.3754, 0.88 ) }
    dend_23 { pt3dadd( -5.77054, -28.27, 15.813, 0.88 ) }
    dend_23 { pt3dadd( -5.75675, -28.9132, 16.2783, 0.88 ) }
    dend_23 { pt3dadd( -5.70351, -29.7435, 16.9694, 0.88 ) }
    dend_23 { pt3dadd( -5.55926, -30.9049, 18.0201, 0.88 ) }
    dend_23 { pt3dadd( -5.41845, -31.6849, 18.7586, 0.88 ) }
    dend_23 { pt3dadd( -5.26215, -32.4122, 19.444, 0.88 ) }
    dend_23 { pt3dadd( -5.15702, -32.9588, 19.9227, 0.88 ) }
    dend_23 { pt3dadd( -5.10091, -33.3801, 20.2535, 0.88 ) }
    dend_23 { pt3dadd( -5.09626, -34.2415, 20.8208, 0.88 ) }
    dend_23 { pt3dadd( -5.2011, -34.9559, 21.1949, 0.88 ) }
    dend_23 { pt3dadd( -5.41854, -35.7257, 21.5084, 0.88 ) }
    dend_23 { pt3dadd( -5.77046, -36.6224, 21.8459, 0.88 ) }
    dend_23 { pt3dadd( -6.13337, -37.3277, 22.1065, 0.88 ) }
    dend_23 { pt3dadd( -6.79313, -38.3859, 22.4787, 0.88 ) }
    dend_23 { pt3dadd( -7.69375, -39.5803, 22.866, 0.88 ) }
    dend_23 { pt3dadd( -8.36263, -40.3565, 23.1073, 0.88 ) }
    dend_23 { pt3dadd( -9.09978, -41.1686, 23.3565, 0.88 ) }
    dend_23 { pt3dadd( -9.73781, -41.8454, 23.5788, 0.88 ) }
    dend_23 { pt3dadd( -10.557, -42.7051, 23.8722, 0.88 ) }
    dend_23 { pt3dadd( -11.6387, -43.8024, 24.2451, 0.88 ) }
    dend_23 { pt3dadd( -12.3246, -44.4514, 24.4207, 0.88 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 36/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.40046, -16.5606, 0.893199, 1.47 ) }
    dend_0 { pt3dadd( -1.39648, -17.0194, 0.893199, 1.47 ) }
    dend_0 { pt3dadd( -1.38338, -18.531, 0.893199, 1.47 ) }
    dend_0 { pt3dadd( -1.37941, -18.9898, 0.893199, 1.47 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.122626, -16.2211, 0.0130989, 0.501649 ) }
    axon_0 { pt3dadd( -0.472755, -31.217, 0.0130989, 0.501649 ) }
    axon_0 { pt3dadd( -0.822885, -46.2129, 0.0130989, 0.501649 ) }
    // Section: dend_49, id: dend_49, parent: dend_35 (entry count 43/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 0.495589, 18.8811, 0.0103386, 1.03 ) }
    dend_49 { pt3dadd( -0.479383, 20.1456, 1.31696, 1.03 ) }
    dend_49 { pt3dadd( -1.31916, 21.2455, 2.33897, 1.25 ) }
    dend_49 { pt3dadd( -1.71017, 21.746, 2.75512, 1.25 ) }
    dend_49 { pt3dadd( -2.23879, 22.4054, 3.26929, 1.4 ) }
    dend_49 { pt3dadd( -2.81732, 23.127, 3.832, 1.25 ) }
    dend_49 { pt3dadd( -3.30926, 23.7407, 4.31048, 1.4 ) }
    dend_49 { pt3dadd( -3.85117, 24.4233, 4.7713, 1.55 ) }
    dend_49 { pt3dadd( -4.3703, 25.0624, 5.12213, 1.92 ) }
    dend_49 { pt3dadd( -4.73219, 25.5001, 5.34694, 2.14 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 0.495589, 18.8811, 0.0103386, 1.62 ) }
    dend_36 { pt3dadd( 1.28164, 20.916, -0.226657, 1.62 ) }
    dend_36 { pt3dadd( 1.65287, 21.7255, -0.32049, 1.62 ) }
    dend_36 { pt3dadd( 2.21796, 22.8714, -0.46239, 1.92 ) }
    dend_36 { pt3dadd( 2.83364, 23.9559, -0.595313, 2.06 ) }
    dend_36 { pt3dadd( 3.43265, 24.8758, -0.704736, 2.43 ) }
    dend_36 { pt3dadd( 3.70409, 25.2523, -0.74784, 2.43 ) }
    dend_36 { pt3dadd( 4.91135, 26.6763, -0.929536, 1.11 ) }
    dend_36 { pt3dadd( 5.74823, 27.5232, -1.03297, 1.11 ) }
    dend_36 { pt3dadd( 6.70151, 28.3359, -1.11923, 1.25 ) }
    dend_36 { pt3dadd( 7.64992, 29.0435, -1.19804, 1.25 ) }
    dend_36 { pt3dadd( 8.34437, 29.5143, -1.25064, 1.4 ) }
    dend_36 { pt3dadd( 9.41992, 30.2088, -1.32773, 1.03 ) }
    dend_36 { pt3dadd( 10.3125, 30.7882, -1.38036, 1.03 ) }
    dend_36 { pt3dadd( 11.1799, 31.3766, -1.4432, 1.18 ) }
    dend_36 { pt3dadd( 11.8009, 31.8372, -1.46174, 1.47 ) }
    dend_36 { pt3dadd( 12.5254, 32.3753, -1.45002, 1.62 ) }
    dend_36 { pt3dadd( 12.9798, 32.6888, -1.42536, 1.62 ) }
    dend_36 { pt3dadd( 14.289, 33.4878, -1.32298, 1.11 ) }
    dend_36 { pt3dadd( 15.3455, 34.1081, -1.23342, 1.11 ) }
    dend_36 { pt3dadd( 16.8071, 34.9912, -1.10633, 0.88 ) }
    dend_36 { pt3dadd( 17.9958, 35.737, -1.00499, 0.88 ) }
    dend_36 { pt3dadd( 18.906, 36.3353, -0.90654, 0.88 ) }
    dend_36 { pt3dadd( 20.3522, 37.2689, -0.740315, 1.11 ) }
    dend_36 { pt3dadd( 20.9274, 37.6257, -0.674435, 1.11 ) }
    dend_36 { pt3dadd( 22.1958, 38.4287, -0.534956, 0.96 ) }
    dend_36 { pt3dadd( 23.592, 39.4308, -0.487805, 1.33 ) }
    dend_36 { pt3dadd( 24.2598, 40.0279, -0.450982, 1.62 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 81/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -1.70614, 19.6747, -23.2387, 0.52 ) }
    dend_34 { pt3dadd( 0.710096, 19.8633, -24.7969, 0.52 ) }
    dend_34 { pt3dadd( 1.9842, 20.128, -25.5101, 0.52 ) }
    dend_34 { pt3dadd( 3.12391, 20.5079, -26.0759, 0.52 ) }
    dend_34 { pt3dadd( 4.45614, 21.0339, -26.7188, 0.52 ) }
    dend_34 { pt3dadd( 5.54242, 21.4793, -27.264, 0.52 ) }
    dend_34 { pt3dadd( 7.19227, 22.1839, -28.2711, 0.52 ) }
    dend_34 { pt3dadd( 7.9856, 22.591, -28.8849, 0.52 ) }
    dend_34 { pt3dadd( 8.76071, 23.0921, -29.6114, 0.52 ) }
    dend_34 { pt3dadd( 9.3653, 23.5207, -30.2289, 0.52 ) }
    dend_34 { pt3dadd( 10.4376, 24.3669, -31.3424, 0.52 ) }
    dend_34 { pt3dadd( 12.4319, 25.9679, -33.3783, 0.52 ) }
    dend_34 { pt3dadd( 14.0687, 27.2437, -34.9422, 0.52 ) }
    dend_34 { pt3dadd( 15.8846, 28.6621, -36.718, 0.52 ) }
    dend_34 { pt3dadd( 16.7935, 29.3452, -37.6022, 0.52 ) }
    dend_34 { pt3dadd( 18.7315, 30.6587, -39.3626, 0.52 ) }
    dend_34 { pt3dadd( 19.6226, 31.2157, -40.132, 0.52 ) }
    dend_34 { pt3dadd( 21.7157, 32.3807, -41.8365, 0.52 ) }
    dend_34 { pt3dadd( 25.2683, 34.1535, -44.7216, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_34 { pt3dadd( 26.673, 34.7729, -45.9153, 0.52 ) }
    dend_34 { pt3dadd( 29.1135, 35.7765, -48.0761, 0.52 ) }
    dend_34 { pt3dadd( 30.3984, 36.2601, -49.31, 0.52 ) }
    dend_34 { pt3dadd( 31.7303, 36.7951, -50.7072, 0.52 ) }
    dend_34 { pt3dadd( 32.8738, 37.2853, -51.9604, 0.52 ) }
    dend_34 { pt3dadd( 33.591, 37.6121, -52.6998, 0.52 ) }
    dend_34 { pt3dadd( 34.9872, 38.3075, -54.136, 0.52 ) }
    dend_34 { pt3dadd( 36.8483, 39.2739, -56.0054, 0.52 ) }
    dend_34 { pt3dadd( 37.8951, 39.7828, -56.9904, 0.52 ) }
    dend_34 { pt3dadd( 39.4232, 40.5029, -58.3831, 0.52 ) }
    dend_34 { pt3dadd( 40.8564, 41.143, -59.6363, 0.52 ) }
    dend_34 { pt3dadd( 42.3391, 41.8005, -60.8522, 0.52 ) }
    dend_34 { pt3dadd( 43.0953, 42.155, -61.4147, 0.52 ) }
    dend_34 { pt3dadd( 44.1967, 42.7219, -62.1635, 0.52 ) }
    dend_34 { pt3dadd( 45.7523, 43.5881, -63.3278, 0.52 ) }
    dend_34 { pt3dadd( 47.1148, 44.43, -64.4921, 0.52 ) }
    dend_34 { pt3dadd( 48.0801, 45.0596, -65.4289, 0.52 ) }
    dend_34 { pt3dadd( 49.002, 45.6916, -66.4688, 0.52 ) }
    dend_34 { pt3dadd( 50.1821, 46.471, -67.8484, 0.44 ) }
    dend_34 { pt3dadd( 51.8531, 47.4561, -69.6792, 0.44 ) }
    dend_34 { pt3dadd( 52.5197, 47.8062, -70.4063, 0.44 ) }
    dend_34 { pt3dadd( 53.8011, 48.4089, -71.8726, 0.44 ) }
    dend_34 { pt3dadd( 54.9356, 48.8679, -73.1809, 0.44 ) }
    dend_34 { pt3dadd( 56.5483, 49.4517, -74.942, 0.44 ) }
    dend_34 { pt3dadd( 58.5384, 50.1196, -76.9128, 0.44 ) }
    dend_34 { pt3dadd( 59.3073, 50.3684, -77.5568, 0.44 ) }
    dend_34 { pt3dadd( 60.2711, 50.6989, -78.2279, 0.44 ) }
    dend_34 { pt3dadd( 62.0123, 51.3412, -79.2637, 0.44 ) }
    dend_34 { pt3dadd( 63.9589, 52.1114, -80.2663, 0.44 ) }
    dend_34 { pt3dadd( 65.7308, 52.8076, -81.0617, 0.44 ) }
    dend_34 { pt3dadd( 67.8335, 53.6249, -81.8594, 0.44 ) }
    dend_34 { pt3dadd( 71.041, 54.8592, -82.9446, 0.44 ) }
    dend_34 { pt3dadd( 72.0142, 55.2295, -83.2336, 0.44 ) }
    dend_34 { pt3dadd( 74.0181, 55.9449, -83.751, 0.44 ) }
    dend_34 { pt3dadd( 77.0331, 56.9246, -84.4313, 0.44 ) }
    dend_34 { pt3dadd( 79.2751, 57.6232, -84.9834, 0.44 ) }
    dend_34 { pt3dadd( 80.1065, 57.8798, -85.238, 0.44 ) }
    dend_34 { pt3dadd( 81.8297, 58.383, -85.8781, 0.44 ) }
    dend_34 { pt3dadd( 84.1415, 59.0908, -86.7943, 0.44 ) }
    dend_34 { pt3dadd( 85.0363, 59.3718, -87.166, 0.44 ) }
    dend_34 { pt3dadd( 87.2265, 60.0943, -88.1112, 0.44 ) }
    dend_34 { pt3dadd( 88.5007, 60.454, -88.6884, 0.44 ) }
    dend_34 { pt3dadd( 89.6815, 60.7447, -89.1984, 0.44 ) }
    dend_34 { pt3dadd( 91.1663, 61.0311, -89.7841, 0.44 ) }
    dend_34 { pt3dadd( 92.9883, 61.3253, -90.4744, 0.44 ) }
    dend_34 { pt3dadd( 94.5396, 61.5171, -91.0394, 0.44 ) }
    dend_34 { pt3dadd( 96.0481, 61.6076, -91.5333, 0.44 ) }
    dend_34 { pt3dadd( 96.9655, 61.6025, -91.8796, 0.44 ) }
    dend_34 { pt3dadd( 99.5211, 61.4689, -93.0663, 0.44 ) }
    dend_34 { pt3dadd( 100.964, 61.3612, -93.8951, 0.44 ) }
    dend_34 { pt3dadd( 102.275, 61.2807, -94.8194, 0.44 ) }
    dend_34 { pt3dadd( 103.287, 61.2146, -95.5987, 0.44 ) }
    dend_34 { pt3dadd( 105.574, 61.0901, -97.4844, 0.44 ) }
    dend_34 { pt3dadd( 106.903, 61.0009, -98.7057, 0.44 ) }
    dend_34 { pt3dadd( 107.517, 60.9564, -99.3558, 0.44 ) }
    dend_34 { pt3dadd( 108.884, 60.8616, -100.745, 0.44 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 56/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.70614, 19.6747, -23.2387, 0.74 ) }
    dend_31 { pt3dadd( -2.17278, 19.4563, -23.8805, 0.74 ) }
    dend_31 { pt3dadd( -2.83843, 19.2584, -24.8129, 0.74 ) }
    dend_31 { pt3dadd( -3.51138, 19.1748, -25.7871, 0.74 ) }
    dend_31 { pt3dadd( -4.24551, 19.1998, -26.9219, 0.74 ) }
    dend_31 { pt3dadd( -4.81053, 19.3166, -27.8251, 0.74 ) }
    dend_31 { pt3dadd( -5.39825, 19.5282, -28.8299, 0.74 ) }
    dend_31 { pt3dadd( -5.98623, 19.9056, -29.952, 0.74 ) }
    dend_31 { pt3dadd( -6.41889, 20.2716, -30.7999, 0.74 ) }
    dend_31 { pt3dadd( -6.94848, 20.8576, -31.8714, 0.74 ) }
    dend_31 { pt3dadd( -7.43139, 21.5334, -32.9045, 0.74 ) }
    dend_31 { pt3dadd( -7.85119, 22.2795, -33.9355, 0.74 ) }
    dend_31 { pt3dadd( -8.16933, 22.9798, -34.825, 0.74 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 69/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -12.3246, -44.4514, 24.4207, 0.52 ) }
    dend_25 { pt3dadd( -12.314, -45.3565, 25.0366, 0.52 ) }
    dend_25 { pt3dadd( -12.3648, -46.6024, 25.8105, 0.52 ) }
    dend_25 { pt3dadd( -12.3782, -47.4297, 26.2989, 0.52 ) }
    dend_25 { pt3dadd( -12.3768, -48.0816, 26.6521, 0.52 ) }
    dend_25 { pt3dadd( -12.3593, -49.2412, 27.2197, 0.52 ) }
    dend_25 { pt3dadd( -12.3496, -50.3804, 27.7203, 0.52 ) }
    dend_25 { pt3dadd( -12.3926, -51.3959, 28.1467, 0.52 ) }
    dend_25 { pt3dadd( -12.4332, -52.1021, 28.4055, 0.52 ) }
    dend_25 { pt3dadd( -12.4673, -52.9267, 28.6897, 0.52 ) }
    dend_25 { pt3dadd( -12.4667, -53.77, 28.9091, 0.52 ) }
    dend_25 { pt3dadd( -12.3827, -54.7521, 29.0627, 0.52 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 81/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -12.3246, -44.4514, 24.4207, 0.74 ) }
    dend_24 { pt3dadd( -13.0861, -44.9973, 24.6303, 0.74 ) }
    dend_24 { pt3dadd( -14.1919, -45.7315, 24.8893, 0.74 ) }
    dend_24 { pt3dadd( -15.9153, -46.7506, 25.2717, 0.74 ) }
    dend_24 { pt3dadd( -16.6829, -47.1508, 25.4316, 0.74 ) }
    dend_24 { pt3dadd( -17.7321, -47.637, 25.6306, 0.74 ) }
    dend_24 { pt3dadd( -18.7174, -48.0614, 25.8181, 0.52 ) }
    dend_24 { pt3dadd( -19.6004, -48.3884, 25.985, 0.52 ) }
    dend_24 { pt3dadd( -20.4505, -48.6252, 26.1273, 0.52 ) }
    dend_24 { pt3dadd( -21.4532, -48.8237, 26.2969, 0.52 ) }
    dend_24 { pt3dadd( -22.5484, -49.0179, 26.4944, 0.52 ) }
    dend_24 { pt3dadd( -23.5369, -49.1994, 26.6759, 0.52 ) }
    dend_24 { pt3dadd( -24.6691, -49.4314, 26.8611, 0.52 ) }
    dend_24 { pt3dadd( -25.9687, -49.7303, 27.1077, 0.52 ) }
    dend_24 { pt3dadd( -27.3026, -50.0867, 27.3813, 0.52 ) }
    dend_24 { pt3dadd( -28.406, -50.3886, 27.6126, 0.52 ) }
    dend_24 { pt3dadd( -29.5166, -50.7016, 27.839, 0.52 ) }
    dend_24 { pt3dadd( -30.45, -50.938, 28.0137, 0.52 ) }
    dend_24 { pt3dadd( -32.3488, -51.3492, 28.3546, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_24 { pt3dadd( -33.5468, -51.5462, 28.5803, 0.52 ) }
    dend_24 { pt3dadd( -35.2859, -51.7487, 28.9046, 0.52 ) }
    dend_24 { pt3dadd( -36.3415, -51.8425, 29.1009, 0.52 ) }
    dend_24 { pt3dadd( -37.5086, -51.9109, 29.3195, 0.52 ) }
    dend_24 { pt3dadd( -39.2776, -51.9649, 29.6368, 0.52 ) }
    dend_24 { pt3dadd( -40.8122, -51.9803, 29.8744, 0.52 ) }
    dend_24 { pt3dadd( -41.6923, -51.986, 30.0285, 0.52 ) }
    dend_24 { pt3dadd( -43.2692, -52.017, 30.3407, 0.52 ) }
    dend_24 { pt3dadd( -44.4307, -52.0556, 30.5943, 0.52 ) }
    dend_24 { pt3dadd( -45.9032, -52.149, 30.92, 0.52 ) }
    dend_24 { pt3dadd( -47.1123, -52.195, 31.1665, 0.52 ) }
    dend_24 { pt3dadd( -47.9177, -52.1892, 31.3074, 0.52 ) }
    dend_24 { pt3dadd( -48.4544, -52.172, 31.402, 0.52 ) }
    dend_24 { pt3dadd( -49.063, -52.1381, 31.5078, 0.52 ) }
    dend_24 { pt3dadd( -51.0954, -52.0259, 31.8469, 0.52 ) }
    dend_24 { pt3dadd( -53.1508, -51.9361, 32.1621, 0.52 ) }
    dend_24 { pt3dadd( -54.7157, -51.8927, 32.3858, 0.52 ) }
    dend_24 { pt3dadd( -56.1019, -51.8663, 32.5745, 0.52 ) }
    dend_24 { pt3dadd( -56.8405, -51.8615, 32.6737, 0.52 ) }
    dend_24 { pt3dadd( -57.3838, -51.8704, 32.7464, 0.52 ) }
    dend_24 { pt3dadd( -58.066, -51.9038, 32.8522, 0.52 ) }
    dend_24 { pt3dadd( -58.9438, -51.9699, 32.9908, 0.52 ) }
    dend_24 { pt3dadd( -59.3786, -52.0002, 33.0693, 0.52 ) }
    dend_24 { pt3dadd( -60.4415, -52.0412, 33.2576, 0.52 ) }
    dend_24 { pt3dadd( -61.6928, -52.0455, 33.4506, 0.52 ) }
    dend_24 { pt3dadd( -63.3977, -52.0191, 33.7215, 0.52 ) }
    dend_24 { pt3dadd( -64.3449, -51.9835, 33.875, 0.52 ) }
    dend_24 { pt3dadd( -65.3731, -51.9309, 34.041, 0.52 ) }
    dend_24 { pt3dadd( -66.458, -51.8819, 34.2166, 0.52 ) }
    dend_24 { pt3dadd( -68.5231, -51.8217, 34.5477, 0.52 ) }
    dend_24 { pt3dadd( -77.3641, -54.572, 38.3257, 0.52 ) }
    dend_24 { pt3dadd( -85.4322, -58.425, 42.8046, 0.52 ) }
    dend_24 { pt3dadd( -93.5767, -63.0809, 46.2673, 0.52 ) }
    dend_24 { pt3dadd( -100.93, -68.6104, 50.1844, 0.52 ) }
    dend_24 { pt3dadd( -109.102, -73.7774, 52.737, 0.52 ) }
    dend_24 { pt3dadd( -116.06, -79.51, 57.0645, 0.52 ) }
    dend_24 { pt3dadd( -122.317, -85.0685, 62.5374, 0.52 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 37/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.37941, -18.9898, 0.893199, 1.03 ) }
    dend_16 { pt3dadd( -0.922363, -22.052, -0.821654, 1.03 ) }
    dend_16 { pt3dadd( -0.701424, -23.5323, -1.65063, 1.03 ) }
    dend_16 { pt3dadd( -0.428251, -25.3625, -2.6756, 1.03 ) }
    dend_16 { pt3dadd( -0.192021, -26.9453, -3.56195, 0.88 ) }
    dend_16 { pt3dadd( -0.105617, -27.5242, -3.88615, 0.88 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 43/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.37941, -18.9898, 0.893199, 1.47 ) }
    dend_1 { pt3dadd( -1.55904, -20.9381, 0.944292, 1.47 ) }
    dend_1 { pt3dadd( -1.81133, -24.3881, 1.00142, 1.47 ) }
    dend_1 { pt3dadd( -1.94804, -26.6121, 1.028, 1.33 ) }
    dend_1 { pt3dadd( -2.06549, -28.7347, 1.04708, 1.18 ) }
    dend_1 { pt3dadd( -2.13146, -30.3827, 1.05801, 1.03 ) }
    dend_1 { pt3dadd( -2.21677, -32.9391, 1.05834, 1.03 ) }
    dend_1 { pt3dadd( -2.25949, -35.8048, 1.04298, 1.03 ) }
    dend_1 { pt3dadd( -2.25565, -36.8959, 1.03269, 1.03 ) }
    dend_1 { pt3dadd( -2.22955, -38.5192, 1.00518, 1.03 ) }
    dend_1 { pt3dadd( -2.17593, -41.2588, 0.944407, 1.03 ) }
    dend_1 { pt3dadd( -2.15373, -42.5452, 0.910821, 1.03 ) }
    dend_1 { pt3dadd( -2.1273, -43.3508, 0.90949, 1.03 ) }
    dend_1 { pt3dadd( -2.01768, -45.1164, 1.014, 1.25 ) }
    dend_1 { pt3dadd( -1.86603, -47.3053, 1.25465, 1.18 ) }
    dend_1 { pt3dadd( -1.76373, -49.1107, 1.53717, 1.11 ) }
    dend_1 { pt3dadd( -1.73781, -50.8268, 1.90316, 1.11 ) }
    dend_1 { pt3dadd( -1.75634, -52.2995, 2.27288, 1.03 ) }
    dend_1 { pt3dadd( -1.85493, -54.2766, 2.80262, 1.03 ) }
    dend_1 { pt3dadd( -2.01274, -55.8698, 3.2521, 1.03 ) }
    dend_1 { pt3dadd( -2.23119, -57.6803, 3.769, 1.03 ) }
    dend_1 { pt3dadd( -2.44776, -59.4459, 4.24394, 1.03 ) }
    dend_1 { pt3dadd( -2.55709, -60.3552, 4.4626, 1.03 ) }
    dend_1 { pt3dadd( -2.72418, -61.9589, 4.75966, 1.03 ) }
    dend_1 { pt3dadd( -2.85737, -63.5806, 4.95321, 1.03 ) }
    dend_1 { pt3dadd( -2.89396, -64.7699, 5.08851, 1.03 ) }
    dend_1 { pt3dadd( -2.85982, -65.9207, 5.2096, 1.03 ) }
    dend_1 { pt3dadd( -2.77742, -66.8971, 5.28955, 1.03 ) }
    dend_1 { pt3dadd( -2.59813, -68.6354, 5.43534, 1.18 ) }
    dend_1 { pt3dadd( -2.32135, -70.716, 5.61263, 1.18 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 73/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.822885, -46.2129, 0.0130989, 0.501649 ) }
    axon_1 { pt3dadd( -1.17301, -61.2088, 0.0130989, 0.501649 ) }
    axon_1 { pt3dadd( -1.52314, -76.2048, 0.0130989, 0.501649 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 76/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -4.73219, 25.5001, 5.34694, 0.96 ) }
    dend_53 { pt3dadd( -6.31155, 26.1358, 5.35686, 0.96 ) }
    dend_53 { pt3dadd( -7.39925, 26.5877, 5.35626, 0.96 ) }
    dend_53 { pt3dadd( -8.49698, 27.0565, 5.34593, 0.81 ) }
    dend_53 { pt3dadd( -9.09586, 27.322, 5.35082, 0.81 ) }
    dend_53 { pt3dadd( -9.78647, 27.6303, 5.38706, 0.96 ) }
    dend_53 { pt3dadd( -10.5631, 27.9493, 5.44811, 0.96 ) }
    dend_53 { pt3dadd( -11.1243, 28.1607, 5.51237, 0.96 ) }
    dend_53 { pt3dadd( -11.8573, 28.4189, 5.62886, 0.88 ) }
    dend_53 { pt3dadd( -12.4753, 28.6153, 5.7157, 0.88 ) }
    dend_53 { pt3dadd( -13.4697, 28.8813, 5.81085, 1.03 ) }
    dend_53 { pt3dadd( -14.9269, 29.2028, 5.84718, 1.25 ) }
    dend_53 { pt3dadd( -15.6696, 29.3448, 5.81881, 1.25 ) }
    dend_53 { pt3dadd( -16.481, 29.4768, 5.73388, 1.03 ) }
    dend_53 { pt3dadd( -17.8092, 29.6651, 5.50027, 0.88 ) }
    dend_53 { pt3dadd( -18.9907, 29.8194, 5.2244, 0.74 ) }
    dend_53 { pt3dadd( -20.0615, 29.9589, 4.89833, 1.11 ) }
    dend_53 { pt3dadd( -20.8952, 30.0755, 4.5952, 1.18 ) }
    dend_53 { pt3dadd( -21.6629, 30.1714, 4.28125, 1.18 ) }
    dend_53 { pt3dadd( -22.302, 30.2275, 4.00372, 1.18 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 96/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -4.73219, 25.5001, 5.34694, 0.96 ) }
    dend_50 { pt3dadd( -4.57006, 27.6112, 5.50026, 0.96 ) }
    dend_50 { pt3dadd( -4.49527, 28.4196, 5.54284, 1.25 ) }
    dend_50 { pt3dadd( -4.41709, 29.163, 5.5678, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_50 { pt3dadd( -4.35257, 29.8243, 5.58281, 1.4 ) }
    dend_50 { pt3dadd( -4.29623, 30.6263, 5.64152, 1.4 ) }
    dend_50 { pt3dadd( -4.26608, 31.6361, 5.74698, 1.18 ) }
    dend_50 { pt3dadd( -4.2988, 32.5449, 5.88479, 1.03 ) }
    dend_50 { pt3dadd( -4.4574, 33.6818, 6.13053, 0.88 ) }
    dend_50 { pt3dadd( -4.67193, 34.4494, 6.3388, 0.81 ) }
    dend_50 { pt3dadd( -5.1975, 35.6119, 6.79915, 1.03 ) }
    dend_50 { pt3dadd( -5.60452, 36.1975, 7.11002, 1.03 ) }
    dend_50 { pt3dadd( -6.06898, 36.6638, 7.43471, 1.25 ) }
    dend_50 { pt3dadd( -6.8804, 37.3078, 8.05029, 0.88 ) }
    dend_50 { pt3dadd( -7.49704, 37.725, 8.53217, 0.74 ) }
    dend_50 { pt3dadd( -8.33319, 38.2709, 9.22884, 0.74 ) }
    dend_50 { pt3dadd( -8.9696, 38.7034, 9.81988, 1.03 ) }
    dend_50 { pt3dadd( -9.60505, 39.1656, 10.5213, 1.18 ) }
    dend_50 { pt3dadd( -10.5242, 39.9147, 11.7121, 1.03 ) }
    dend_50 { pt3dadd( -10.9258, 40.3215, 12.3495, 0.66 ) }
    dend_50 { pt3dadd( -11.5668, 41.2069, 13.68, 0.59 ) }
    dend_50 { pt3dadd( -11.8333, 41.7962, 14.4788, 0.96 ) }
    dend_50 { pt3dadd( -11.9303, 42.3017, 15.1017, 0.96 ) }
    dend_50 { pt3dadd( -11.9481, 42.6875, 15.501, 1.11 ) }
    dend_50 { pt3dadd( -11.9193, 43.2278, 15.9967, 1.11 ) }
    dend_50 { pt3dadd( -11.8243, 43.8423, 16.5281, 1.25 ) }
    dend_50 { pt3dadd( -11.6684, 44.4821, 17.0074, 1.03 ) }
    dend_50 { pt3dadd( -11.4158, 45.6345, 17.7532, 0.59 ) }
    dend_50 { pt3dadd( -11.2373, 46.6101, 18.3574, 1.18 ) }
    // Section: dend_46, id: dend_46, parent: dend_36 (entry count 25/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 24.2598, 40.0279, -0.450982, 0.59 ) }
    dend_46 { pt3dadd( 24.8453, 41.2539, -0.492922, 0.59 ) }
    dend_46 { pt3dadd( 25.1706, 41.9561, -0.512879, 0.29 ) }
    dend_46 { pt3dadd( 25.6325, 43.015, -0.538203, 0.66 ) }
    dend_46 { pt3dadd( 26.1708, 44.3464, -0.523479, 0.29 ) }
    dend_46 { pt3dadd( 26.5352, 45.3342, -0.501427, 0.29 ) }
    dend_46 { pt3dadd( 26.8495, 46.2284, -0.473743, 1.11 ) }
    dend_46 { pt3dadd( 27.0289, 46.781, -0.43685, 1.11 ) }
    dend_46 { pt3dadd( 27.2518, 47.5593, -0.362357, 0.74 ) }
    dend_46 { pt3dadd( 27.5135, 48.5593, -0.221598, 0.44 ) }
    dend_46 { pt3dadd( 27.7189, 49.4204, -0.0579221, 0.29 ) }
    dend_46 { pt3dadd( 27.8754, 50.1777, 0.100481, 0.29 ) }
    dend_46 { pt3dadd( 28.0381, 51.0664, 0.285874, 0.96 ) }
    dend_46 { pt3dadd( 28.1419, 51.6865, 0.403167, 1.18 ) }
    dend_46 { pt3dadd( 28.2574, 52.4923, 0.533731, 1.18 ) }
    dend_46 { pt3dadd( 28.2981, 52.8433, 0.580282, 1.18 ) }
    dend_46 { pt3dadd( 28.4256, 54.2229, 0.758673, 0.52 ) }
    dend_46 { pt3dadd( 28.4969, 55.2387, 0.81894, 0.52 ) }
    dend_46 { pt3dadd( 28.5789, 56.4162, 0.81844, 0.96 ) }
    dend_46 { pt3dadd( 28.6381, 57.2269, 0.776354, 1.4 ) }
    dend_46 { pt3dadd( 28.6923, 57.893, 0.699155, 1.4 ) }
    dend_46 { pt3dadd( 28.7357, 58.4108, 0.618495, 1.4 ) }
    dend_46 { pt3dadd( 28.906, 60.0543, 0.296805, 0.59 ) }
    dend_46 { pt3dadd( 28.9917, 60.7935, 0.113665, 0.59 ) }
    dend_46 { pt3dadd( 29.0781, 61.5136, -0.055893, 0.74 ) }
    dend_46 { pt3dadd( 29.1833, 62.4435, -0.259851, 0.52 ) }
    dend_46 { pt3dadd( 29.2641, 63.333, -0.438539, 0.29 ) }
    dend_46 { pt3dadd( 29.3218, 64.3387, -0.614431, 0.29 ) }
    dend_46 { pt3dadd( 29.3336, 65.3449, -0.762767, 0.29 ) }
    dend_46 { pt3dadd( 29.3009, 66.6185, -0.94993, 0.96 ) }
    dend_46 { pt3dadd( 29.2769, 67.3024, -1.03832, 1.33 ) }
    dend_46 { pt3dadd( 29.2665, 67.735, -1.08406, 1.69 ) }
    dend_46 { pt3dadd( 29.2588, 68.3782, -1.16663, 1.77 ) }
    dend_46 { pt3dadd( 29.2569, 69.2192, -1.25204, 1.33 ) }
    dend_46 { pt3dadd( 29.2927, 70.5366, -1.35698, 0.37 ) }
    dend_46 { pt3dadd( 29.3257, 71.2068, -1.41478, 0.37 ) }
    dend_46 { pt3dadd( 29.3541, 71.7967, -1.42855, 0.29 ) }
    dend_46 { pt3dadd( 29.3753, 72.5465, -1.40797, 0.29 ) }
    dend_46 { pt3dadd( 29.3697, 73.6036, -1.32134, 0.74 ) }
    dend_46 { pt3dadd( 29.3395, 74.3423, -1.24395, 0.96 ) }
    dend_46 { pt3dadd( 29.294, 74.8721, -1.20944, 0.96 ) }
    dend_46 { pt3dadd( 29.1579, 75.9554, -1.17837, 0.66 ) }
    dend_46 { pt3dadd( 29.0471, 76.7037, -1.18369, 0.44 ) }
    dend_46 { pt3dadd( 28.878, 77.8141, -1.2276, 0.29 ) }
    dend_46 { pt3dadd( 28.7366, 78.7916, -1.3321, 0.88 ) }
    dend_46 { pt3dadd( 28.6316, 79.7734, -1.4644, 1.33 ) }
    dend_46 { pt3dadd( 28.602, 80.3674, -1.55394, 1.4 ) }
    dend_46 { pt3dadd( 28.6327, 81.239, -1.69074, 1.11 ) }
    dend_46 { pt3dadd( 28.702, 81.9593, -1.78907, 0.81 ) }
    dend_46 { pt3dadd( 28.8104, 82.7675, -1.88142, 0.81 ) }
    dend_46 { pt3dadd( 28.9859, 83.9276, -1.97324, 0.22 ) }
    dend_46 { pt3dadd( 29.1429, 84.8941, -2.01917, 0.22 ) }
    dend_46 { pt3dadd( 29.3397, 86.0913, -2.07131, 0.22 ) }
    dend_46 { pt3dadd( 29.5523, 87.3852, -2.10511, 0.96 ) }
    dend_46 { pt3dadd( 29.6207, 87.831, -2.10246, 1.03 ) }
    dend_46 { pt3dadd( 29.6902, 88.3828, -2.0819, 0.81 ) }
    dend_46 { pt3dadd( 29.745, 89.0325, -2.05028, 0.44 ) }
    dend_46 { pt3dadd( 29.7669, 89.5213, -2.02267, 0.29 ) }
    dend_46 { pt3dadd( 29.7803, 89.9136, -1.99926, 0.29 ) }
    dend_46 { pt3dadd( 29.8406, 90.6393, -1.96008, 0.29 ) }
    dend_46 { pt3dadd( 29.9205, 91.321, -1.92742, 0.74 ) }
    dend_46 { pt3dadd( 29.981, 91.7582, -1.90975, 0.74 ) }
    dend_46 { pt3dadd( 30.1032, 92.7033, -1.87729, 0.29 ) }
    dend_46 { pt3dadd( 30.1693, 93.4541, -1.85767, 0.29 ) }
    dend_46 { pt3dadd( 30.2143, 94.4983, -1.88845, 1.03 ) }
    dend_46 { pt3dadd( 30.2153, 94.9392, -1.9164, 1.4 ) }
    dend_46 { pt3dadd( 30.2029, 95.589, -1.93378, 1.11 ) }
    dend_46 { pt3dadd( 30.1701, 96.5027, -1.92553, 0.29 ) }
    dend_46 { pt3dadd( 30.1217, 97.4371, -1.86786, 0.29 ) }
    dend_46 { pt3dadd( 30.0379, 98.8845, -1.70688, 0.96 ) }
    dend_46 { pt3dadd( 30.0111, 99.4371, -1.60318, 1.18 ) }
    dend_46 { pt3dadd( 29.9982, 100.74, -1.25384, 0.29 ) }
    dend_46 { pt3dadd( 30.0145, 101.26, -1.07864, 0.29 ) }
    dend_46 { pt3dadd( 30.0913, 102.104, -0.731359, 0.74 ) }
    dend_46 { pt3dadd( 30.2063, 102.695, -0.452575, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( 30.4759, 103.669, 0.0435206, 0.29 ) }
    dend_46 { pt3dadd( 30.899, 104.913, 0.608267, 0.88 ) }
    dend_46 { pt3dadd( 30.9797, 105.121, 0.6879, 1.11 ) }
    dend_46 { pt3dadd( 31.2102, 105.655, 0.888849, 1.11 ) }
    dend_46 { pt3dadd( 31.7726, 106.827, 1.31387, 0.22 ) }
    dend_46 { pt3dadd( 32.1464, 107.561, 1.56782, 0.22 ) }
    dend_46 { pt3dadd( 32.8003, 108.768, 1.95276, 1.03 ) }
    dend_46 { pt3dadd( 33.0043, 109.129, 2.06986, 1.18 ) }
    dend_46 { pt3dadd( 33.4944, 110.003, 2.41452, 0.66 ) }
    dend_46 { pt3dadd( 33.7793, 110.541, 2.66259, 0.22 ) }
    dend_46 { pt3dadd( 34.0319, 111.077, 2.94394, 0.22 ) }
    dend_46 { pt3dadd( 34.2669, 111.614, 3.26174, 0.74 ) }
    dend_46 { pt3dadd( 34.4465, 112.065, 3.53635, 0.74 ) }
    dend_46 { pt3dadd( 34.8373, 113.194, 4.18765, 0.37 ) }
    dend_46 { pt3dadd( 35.0332, 113.842, 4.54428, 0.37 ) }
    dend_46 { pt3dadd( 35.2285, 114.601, 4.95523, 0.29 ) }
    dend_46 { pt3dadd( 35.4243, 115.492, 5.41267, 0.81 ) }
    dend_46 { pt3dadd( 35.542, 116.159, 5.71935, 0.96 ) }
    dend_46 { pt3dadd( 35.6016, 116.559, 5.8799, 0.96 ) }
    dend_46 { pt3dadd( 35.7656, 117.771, 6.30006, 0.29 ) }
    dend_46 { pt3dadd( 35.8881, 118.713, 6.62166, 0.29 ) }
    dend_46 { pt3dadd( 36.0332, 119.892, 7.0183, 0.29 ) }
    dend_46 { pt3dadd( 36.1219, 120.653, 7.25538, 0.81 ) }
    dend_46 { pt3dadd( 36.1718, 121.073, 7.38391, 1.03 ) }
    dend_46 { pt3dadd( 36.2312, 121.512, 7.50805, 1.03 ) }
    dend_46 { pt3dadd( 36.395, 122.554, 7.76113, 0.29 ) }
    dend_46 { pt3dadd( 36.554, 123.367, 7.95236, 0.29 ) }
    dend_46 { pt3dadd( 36.8089, 124.35, 8.18067, 0.52 ) }
    dend_46 { pt3dadd( 36.9252, 124.696, 8.25335, 0.52 ) }
    dend_46 { pt3dadd( 37.3216, 125.697, 8.42561, 0.29 ) }
    dend_46 { pt3dadd( 37.6733, 126.463, 8.52161, 0.96 ) }
    dend_46 { pt3dadd( 37.8907, 126.876, 8.55117, 0.96 ) }
    dend_46 { pt3dadd( 38.252, 127.525, 8.56969, 0.66 ) }
    dend_46 { pt3dadd( 38.62, 128.235, 8.5598, 0.52 ) }
    dend_46 { pt3dadd( 38.9797, 129.046, 8.52238, 0.37 ) }
    dend_46 { pt3dadd( 39.1695, 129.556, 8.48176, 0.37 ) }
    dend_46 { pt3dadd( 39.3342, 130.076, 8.42601, 0.29 ) }
    dend_46 { pt3dadd( 39.5004, 130.629, 8.35034, 0.29 ) }
    dend_46 { pt3dadd( 39.777, 131.539, 8.1926, 0.29 ) }
    dend_46 { pt3dadd( 39.9488, 132.089, 8.0901, 0.29 ) }
    dend_46 { pt3dadd( 40.2152, 132.94, 7.91387, 0.88 ) }
    dend_46 { pt3dadd( 40.411, 133.591, 7.75166, 1.03 ) }
    dend_46 { pt3dadd( 40.7994, 134.925, 7.35603, 0.22 ) }
    dend_46 { pt3dadd( 41.0435, 135.778, 7.08399, 0.22 ) }
    dend_46 { pt3dadd( 41.2032, 136.324, 6.90476, 0.22 ) }
    dend_46 { pt3dadd( 41.5064, 137.404, 6.53656, 1.11 ) }
    dend_46 { pt3dadd( 41.6965, 138.166, 6.26868, 1.33 ) }
    dend_46 { pt3dadd( 41.9629, 139.492, 5.80896, 0.22 ) }
    dend_46 { pt3dadd( 42.0723, 140.322, 5.52273, 0.22 ) }
    dend_46 { pt3dadd( 42.119, 140.789, 5.36954, 0.66 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 50/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 24.2598, 40.0279, -0.450982, 1.18 ) }
    dend_37 { pt3dadd( 25.7833, 40.3201, -0.484289, 1.18 ) }
    dend_37 { pt3dadd( 26.9674, 40.5473, -0.510177, 1.18 ) }
    dend_37 { pt3dadd( 28.0188, 40.7489, -0.533163, 1.11 ) }
    dend_37 { pt3dadd( 29.9877, 41.1266, -0.57621, 1.33 ) }
    dend_37 { pt3dadd( 30.5944, 41.2429, -0.589474, 1.33 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 56/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -8.16933, 22.9798, -34.825, 0.52 ) }
    dend_33 { pt3dadd( -7.18364, 23.3648, -36.4453, 0.52 ) }
    dend_33 { pt3dadd( -6.36032, 23.7645, -37.7867, 0.52 ) }
    dend_33 { pt3dadd( -5.47393, 24.1988, -39.2034, 0.52 ) }
    dend_33 { pt3dadd( -4.33048, 24.7026, -40.9816, 0.52 ) }
    dend_33 { pt3dadd( -3.63119, 24.9736, -42.0896, 0.52 ) }
    dend_33 { pt3dadd( -2.74617, 25.2747, -43.422, 0.52 ) }
    dend_33 { pt3dadd( -1.62681, 25.5976, -45.1279, 0.52 ) }
    dend_33 { pt3dadd( -0.257683, 25.916, -47.1329, 0.52 ) }
    dend_33 { pt3dadd( 1.21751, 26.2089, -49.2245, 0.52 ) }
    dend_33 { pt3dadd( 3.62717, 26.6238, -52.4655, 0.52 ) }
    dend_33 { pt3dadd( 4.61842, 26.7903, -53.7729, 0.52 ) }
    dend_33 { pt3dadd( 5.74147, 26.9954, -55.2451, 0.52 ) }
    dend_33 { pt3dadd( 7.18073, 27.2842, -57.2183, 0.52 ) }
    dend_33 { pt3dadd( 8.09673, 27.5165, -58.5093, 0.52 ) }
    dend_33 { pt3dadd( 8.74935, 27.728, -59.485, 0.52 ) }
    dend_33 { pt3dadd( 9.38996, 27.9853, -60.5284, 0.52 ) }
    dend_33 { pt3dadd( 10.6562, 28.5379, -62.9493, 0.52 ) }
    dend_33 { pt3dadd( 11.5962, 28.944, -64.9179, 0.52 ) }
    dend_33 { pt3dadd( 12.5895, 29.3319, -67.1403, 0.52 ) }
    dend_33 { pt3dadd( 13.4619, 29.6143, -69.1587, 0.52 ) }
    dend_33 { pt3dadd( 14.4548, 29.9209, -71.5584, 0.52 ) }
    dend_33 { pt3dadd( 15.877, 30.4107, -75.2666, 0.52 ) }
    dend_33 { pt3dadd( 16.4222, 30.6522, -76.8808, 0.52 ) }
    dend_33 { pt3dadd( 16.6306, 30.7786, -77.5817, 0.52 ) }
    dend_33 { pt3dadd( 17.1672, 31.212, -79.7323, 0.52 ) }
    dend_33 { pt3dadd( 17.6195, 31.6931, -81.8499, 0.52 ) }
    dend_33 { pt3dadd( 18.2215, 32.5497, -85.1854, 0.52 ) }
    dend_33 { pt3dadd( 18.541, 33.1608, -87.3262, 0.52 ) }
    dend_33 { pt3dadd( 18.7695, 33.6873, -89.0864, 0.52 ) }
    dend_33 { pt3dadd( 19.0579, 34.4244, -91.58, 0.52 ) }
    dend_33 { pt3dadd( 19.3163, 35.0738, -93.8498, 0.52 ) }
    dend_33 { pt3dadd( 19.652, 35.6754, -95.9985, 0.52 ) }
    dend_33 { pt3dadd( 20.1185, 36.2745, -98.0378, 0.52 ) }
    dend_33 { pt3dadd( 20.7643, 36.9429, -100.152, 0.52 ) }
    dend_33 { pt3dadd( 21.5648, 37.669, -102.245, 0.52 ) }
    dend_33 { pt3dadd( 22.3262, 38.3085, -103.913, 0.52 ) }
    dend_33 { pt3dadd( 23.6701, 39.3942, -106.574, 0.52 ) }
    dend_33 { pt3dadd( 24.8803, 40.3447, -108.787, 0.52 ) }
    dend_33 { pt3dadd( 25.4512, 40.7882, -109.763, 0.52 ) }
    dend_33 { pt3dadd( 26.4215, 41.5219, -111.348, 0.52 ) }
    dend_33 { pt3dadd( 28.1005, 42.7728, -114.031, 0.52 ) }
    dend_33 { pt3dadd( 29.1871, 43.5735, -115.816, 0.52 ) }
    dend_33 { pt3dadd( 30.2766, 44.3706, -117.728, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_33 { pt3dadd( 31.2184, 45.0447, -119.417, 0.52 ) }
    dend_33 { pt3dadd( 31.9037, 45.5157, -120.649, 0.52 ) }
    dend_33 { pt3dadd( 32.3681, 45.8223, -121.497, 0.52 ) }
    dend_33 { pt3dadd( 33.038, 46.2378, -122.723, 0.52 ) }
    dend_33 { pt3dadd( 33.6015, 46.5567, -123.665, 0.52 ) }
    dend_33 { pt3dadd( 34.2161, 46.9026, -124.705, 0.52 ) }
    dend_33 { pt3dadd( 34.8059, 47.2328, -125.727, 0.52 ) }
    dend_33 { pt3dadd( 36.194, 48.0492, -128.147, 0.52 ) }
    dend_33 { pt3dadd( 37.1235, 48.6106, -129.729, 0.52 ) }
    dend_33 { pt3dadd( 38.6777, 49.5072, -132.29, 0.52 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 10/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -8.16933, 22.9798, -34.825, 0.66 ) }
    dend_32 { pt3dadd( -9.46481, 22.5638, -35.5903, 0.66 ) }
    dend_32 { pt3dadd( -10.9384, 22.057, -36.5833, 0.66 ) }
    dend_32 { pt3dadd( -12.5346, 21.5139, -37.7218, 0.66 ) }
    dend_32 { pt3dadd( -13.5399, 21.1844, -38.502, 0.66 ) }
    dend_32 { pt3dadd( -14.5703, 20.8718, -39.3294, 0.59 ) }
    dend_32 { pt3dadd( -15.9446, 20.4849, -40.4259, 0.59 ) }
    dend_32 { pt3dadd( -17.1846, 20.157, -41.4602, 0.59 ) }
    dend_32 { pt3dadd( -17.9109, 19.9924, -42.0461, 0.59 ) }
    dend_32 { pt3dadd( -19.2136, 19.7509, -42.9807, 0.59 ) }
    dend_32 { pt3dadd( -20.6965, 19.5528, -43.95, 0.59 ) }
    dend_32 { pt3dadd( -22.4142, 19.3996, -45.0319, 0.59 ) }
    dend_32 { pt3dadd( -23.8436, 19.3153, -45.8415, 0.59 ) }
    dend_32 { pt3dadd( -25.164, 19.2297, -46.5916, 0.59 ) }
    dend_32 { pt3dadd( -26.3382, 19.1286, -47.2978, 0.59 ) }
    dend_32 { pt3dadd( -28.2131, 18.94, -48.4521, 0.59 ) }
    dend_32 { pt3dadd( -28.8, 18.871, -48.8557, 0.59 ) }
    dend_32 { pt3dadd( -29.7041, 18.7752, -49.5363, 0.59 ) }
    dend_32 { pt3dadd( -32.2096, 18.5815, -51.4881, 0.59 ) }
    dend_32 { pt3dadd( -33.5564, 18.5435, -52.6067, 0.59 ) }
    dend_32 { pt3dadd( -34.3135, 18.5514, -53.2163, 0.52 ) }
    dend_32 { pt3dadd( -36.0747, 18.6468, -54.5355, 0.52 ) }
    dend_32 { pt3dadd( -38.6258, 18.8886, -56.2393, 0.52 ) }
    dend_32 { pt3dadd( -40.6611, 19.1535, -57.4155, 0.52 ) }
    dend_32 { pt3dadd( -44.1625, 19.7354, -59.1136, 0.52 ) }
    dend_32 { pt3dadd( -46.0388, 20.0795, -59.8738, 0.52 ) }
    dend_32 { pt3dadd( -49.2805, 20.7173, -60.9855, 0.52 ) }
    dend_32 { pt3dadd( -51.8645, 21.26, -61.7243, 0.52 ) }
    dend_32 { pt3dadd( -54.5229, 21.9281, -62.3455, 0.52 ) }
    dend_32 { pt3dadd( -56.747, 22.5706, -62.7638, 0.52 ) }
    dend_32 { pt3dadd( -60.2836, 23.7337, -63.3202, 0.52 ) }
    dend_32 { pt3dadd( -64.6149, 25.2259, -63.9939, 0.52 ) }
    dend_32 { pt3dadd( -65.924, 25.6915, -64.1815, 0.52 ) }
    dend_32 { pt3dadd( -71.189, 27.5757, -65.0124, 0.52 ) }
    dend_32 { pt3dadd( -74.0627, 28.6017, -65.5054, 0.52 ) }
    dend_32 { pt3dadd( -80.0397, 30.6571, -66.4806, 0.52 ) }
    dend_32 { pt3dadd( -84.8025, 32.1905, -67.2301, 0.52 ) }
    dend_32 { pt3dadd( -88.8067, 33.3863, -67.7964, 0.52 ) }
    dend_32 { pt3dadd( -92.9243, 34.5007, -68.3464, 0.52 ) }
    dend_32 { pt3dadd( -94.242, 34.8101, -68.5115, 0.52 ) }
    dend_32 { pt3dadd( -96.6585, 35.343, -68.7965, 0.52 ) }
    dend_32 { pt3dadd( -98.6038, 35.7283, -69.0018, 0.52 ) }
    dend_32 { pt3dadd( -101.32, 36.1666, -69.2632, 0.52 ) }
    dend_32 { pt3dadd( -105.507, 36.6935, -69.7363, 0.52 ) }
    dend_32 { pt3dadd( -108.541, 37.0116, -70.1243, 0.52 ) }
    dend_32 { pt3dadd( -111.608, 37.2845, -70.6373, 0.52 ) }
    dend_32 { pt3dadd( -115.434, 37.5469, -71.4175, 0.52 ) }
    dend_32 { pt3dadd( -122.226, 37.906, -72.9668, 0.52 ) }
    dend_32 { pt3dadd( -126.197, 38.0106, -73.9254, 0.52 ) }
    dend_32 { pt3dadd( -127.715, 38.0225, -74.3211, 0.52 ) }
    dend_32 { pt3dadd( -130.24, 38.0199, -75.0177, 0.52 ) }
    dend_32 { pt3dadd( -131.31, 38.013, -75.3212, 0.52 ) }
    dend_32 { pt3dadd( -134.191, 38.0029, -76.2108, 0.52 ) }
    dend_32 { pt3dadd( -137.578, 38.0556, -77.369, 0.52 ) }
    dend_32 { pt3dadd( -139.79, 38.1545, -78.1192, 0.52 ) }
    dend_32 { pt3dadd( -143.161, 38.4418, -79.3636, 0.52 ) }
    dend_32 { pt3dadd( -146.3, 38.9322, -80.6492, 0.52 ) }
    dend_32 { pt3dadd( -148.213, 39.3901, -81.5579, 0.52 ) }
    dend_32 { pt3dadd( -150.046, 40.0132, -82.6123, 0.52 ) }
    dend_32 { pt3dadd( -151.965, 40.9681, -83.9898, 0.52 ) }
    dend_32 { pt3dadd( -153.415, 41.9376, -85.1761, 0.52 ) }
    dend_32 { pt3dadd( -155.415, 43.6556, -87.0791, 0.52 ) }
    dend_32 { pt3dadd( -156.644, 44.9572, -88.3884, 0.52 ) }
    dend_32 { pt3dadd( -157.808, 46.3362, -89.6899, 0.52 ) }
    dend_32 { pt3dadd( -158.69, 47.4661, -90.7519, 0.52 ) }
    dend_32 { pt3dadd( -159.25, 48.2177, -91.4726, 0.52 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -12.3827, -54.7521, 29.0627, 0.52 ) }
    dend_27 { pt3dadd( -12.5279, -56.4204, 28.8742, 0.52 ) }
    dend_27 { pt3dadd( -12.5767, -57.211, 28.8333, 0.52 ) }
    dend_27 { pt3dadd( -12.587, -58.0666, 28.8356, 0.52 ) }
    dend_27 { pt3dadd( -12.4976, -59.6054, 28.8956, 0.52 ) }
    dend_27 { pt3dadd( -12.408, -60.448, 28.9458, 0.52 ) }
    dend_27 { pt3dadd( -12.2872, -61.3333, 29.0076, 0.52 ) }
    dend_27 { pt3dadd( -12.1744, -61.9239, 29.1301, 0.52 ) }
    dend_27 { pt3dadd( -11.9656, -62.7295, 29.373, 0.52 ) }
    dend_27 { pt3dadd( -11.6926, -63.624, 29.7062, 0.52 ) }
    dend_27 { pt3dadd( -11.2286, -64.9836, 30.2984, 0.52 ) }
    dend_27 { pt3dadd( -10.8622, -65.9914, 30.8098, 0.52 ) }
    dend_27 { pt3dadd( -10.2946, -67.529, 31.6817, 0.52 ) }
    dend_27 { pt3dadd( -9.98508, -68.4206, 32.2089, 0.52 ) }
    dend_27 { pt3dadd( -9.84747, -68.8371, 32.4783, 0.52 ) }
    dend_27 { pt3dadd( -9.65837, -69.4194, 32.9086, 0.52 ) }
    dend_27 { pt3dadd( -9.35884, -70.212, 33.6123, 0.52 ) }
    dend_27 { pt3dadd( -9.20693, -70.5846, 33.9698, 0.52 ) }
    dend_27 { pt3dadd( -9.0055, -71.0955, 34.3616, 0.52 ) }
    dend_27 { pt3dadd( -8.99628, -81.0054, 35.7008, 0.52 ) }
    dend_27 { pt3dadd( -7.12715, -90.8105, 36.3051, 0.52 ) }
    dend_27 { pt3dadd( -5.58831, -100.665, 37.034, 0.52 ) }
    dend_27 { pt3dadd( -4.18023, -110.558, 37.4005, 0.52 ) }
    dend_27 { pt3dadd( -0.89006, -119.99, 36.9232, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_27 { pt3dadd( 2.69294, -129.321, 37.2309, 0.52 ) }
    dend_27 { pt3dadd( 6.56848, -138.389, 38.8869, 0.52 ) }
    dend_27 { pt3dadd( 9.99945, -147.672, 40.3176, 0.52 ) }
    dend_27 { pt3dadd( 14.9838, -156.113, 42.2968, 0.52 ) }
    dend_27 { pt3dadd( 20.6153, -164.145, 44.2371, 0.52 ) }
    dend_27 { pt3dadd( 27.5644, -171.039, 46.2842, 0.52 ) }
    dend_27 { pt3dadd( 34.3807, -177.17, 50.2776, 0.52 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 7/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -12.3827, -54.7521, 29.0627, 0.59 ) }
    dend_26 { pt3dadd( -13.1222, -56.2753, 29.2668, 0.59 ) }
    dend_26 { pt3dadd( -13.4133, -56.9, 29.3538, 0.59 ) }
    dend_26 { pt3dadd( -13.8695, -57.7988, 29.4944, 0.59 ) }
    dend_26 { pt3dadd( -14.5327, -59.0173, 29.6851, 0.59 ) }
    dend_26 { pt3dadd( -14.9629, -59.721, 29.8132, 0.59 ) }
    dend_26 { pt3dadd( -15.3461, -60.2835, 29.9336, 0.59 ) }
    dend_26 { pt3dadd( -16.175, -61.3529, 30.2379, 0.59 ) }
    dend_26 { pt3dadd( -16.7735, -62.0117, 30.4429, 0.59 ) }
    dend_26 { pt3dadd( -17.6165, -62.7641, 30.706, 0.59 ) }
    dend_26 { pt3dadd( -18.4726, -63.4093, 30.9558, 0.59 ) }
    dend_26 { pt3dadd( -19.2758, -63.9359, 31.2639, 0.59 ) }
    dend_26 { pt3dadd( -20.4602, -64.6399, 31.8295, 0.59 ) }
    dend_26 { pt3dadd( -20.8038, -64.8373, 32.021, 0.59 ) }
    dend_26 { pt3dadd( -21.8176, -65.4596, 32.6314, 0.59 ) }
    dend_26 { pt3dadd( -22.5896, -65.9492, 33.1196, 0.59 ) }
    dend_26 { pt3dadd( -24.194, -67.0612, 34.1515, 0.59 ) }
    dend_26 { pt3dadd( -24.9636, -67.5888, 34.6458, 0.59 ) }
    dend_26 { pt3dadd( -25.9662, -68.2365, 35.2796, 0.59 ) }
    dend_26 { pt3dadd( -27.0155, -68.8817, 35.8945, 0.59 ) }
    dend_26 { pt3dadd( -27.5492, -69.1924, 36.1766, 0.59 ) }
    dend_26 { pt3dadd( -28.0382, -69.4542, 36.3968, 0.59 ) }
    dend_26 { pt3dadd( -29.4122, -70.1256, 36.8919, 0.59 ) }
    dend_26 { pt3dadd( -30.6169, -70.6312, 37.3325, 0.59 ) }
    dend_26 { pt3dadd( -31.24, -70.8561, 37.579, 0.59 ) }
    dend_26 { pt3dadd( -32.0433, -71.1518, 37.8957, 0.59 ) }
    dend_26 { pt3dadd( -32.7951, -71.5199, 38.1538, 0.59 ) }
    dend_26 { pt3dadd( -33.4293, -71.9117, 38.3423, 0.59 ) }
    dend_26 { pt3dadd( -34.4562, -72.69, 38.5676, 0.59 ) }
    dend_26 { pt3dadd( -35.2147, -73.3114, 38.7121, 0.59 ) }
    dend_26 { pt3dadd( -36.5758, -74.4843, 38.938, 0.59 ) }
    dend_26 { pt3dadd( -38.5767, -76.3273, 39.189, 0.59 ) }
    dend_26 { pt3dadd( -39.2836, -77.0517, 39.2481, 0.52 ) }
    dend_26 { pt3dadd( -39.8576, -77.7059, 39.2645, 0.52 ) }
    dend_26 { pt3dadd( -46.729, -84.3493, 42.2056, 0.52 ) }
    dend_26 { pt3dadd( -52.6243, -91.9207, 45.0197, 0.52 ) }
    dend_26 { pt3dadd( -58.8113, -99.3125, 47.6809, 0.52 ) }
    dend_26 { pt3dadd( -66.7595, -105.266, 48.8594, 0.52 ) }
    dend_26 { pt3dadd( -74.8645, -110.26, 51.9191, 0.52 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 46/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.105617, -27.5242, -3.88615, 0.66 ) }
    dend_20 { pt3dadd( 0.169059, -30.4871, -4.82615, 0.66 ) }
    dend_20 { pt3dadd( 0.375397, -31.5584, -5.03768, 0.66 ) }
    dend_20 { pt3dadd( 0.595462, -32.5559, -5.23001, 0.59 ) }
    dend_20 { pt3dadd( 0.991702, -34.3454, -5.55213, 0.59 ) }
    dend_20 { pt3dadd( 1.26927, -35.6272, -5.76996, 0.59 ) }
    dend_20 { pt3dadd( 1.6168, -37.201, -6.02599, 0.59 ) }
    dend_20 { pt3dadd( 2.13958, -39.1882, -6.28156, 0.59 ) }
    dend_20 { pt3dadd( 2.83356, -41.7886, -6.68124, 0.59 ) }
    dend_20 { pt3dadd( 3.16502, -43.1909, -6.91999, 0.59 ) }
    dend_20 { pt3dadd( 3.30857, -43.896, -7.04345, 0.59 ) }
    dend_20 { pt3dadd( 3.38758, -44.4092, -7.15126, 0.59 ) }
    dend_20 { pt3dadd( 3.48634, -45.5092, -7.46449, 0.59 ) }
    dend_20 { pt3dadd( 3.52865, -46.2563, -7.70853, 0.59 ) }
    dend_20 { pt3dadd( 3.71036, -47.5728, -8.06814, 0.59 ) }
    dend_20 { pt3dadd( 3.83392, -48.1711, -8.24363, 0.59 ) }
    dend_20 { pt3dadd( 4.01827, -48.9118, -8.44795, 0.59 ) }
    dend_20 { pt3dadd( 4.24239, -49.632, -8.63777, 0.59 ) }
    dend_20 { pt3dadd( 4.74233, -50.9349, -8.96544, 0.59 ) }
    dend_20 { pt3dadd( 5.38634, -52.4135, -9.3834, 0.59 ) }
    dend_20 { pt3dadd( 5.68083, -52.9777, -9.5663, 0.59 ) }
    dend_20 { pt3dadd( 6.19045, -53.8948, -9.918, 0.59 ) }
    dend_20 { pt3dadd( 6.98632, -55.1311, -10.4458, 0.59 ) }
    dend_20 { pt3dadd( 7.4422, -55.7595, -10.7375, 0.59 ) }
    dend_20 { pt3dadd( 8.27103, -56.7732, -11.2593, 0.59 ) }
    dend_20 { pt3dadd( 8.95021, -57.5719, -11.7085, 0.59 ) }
    dend_20 { pt3dadd( 9.48959, -58.2046, -12.0486, 0.59 ) }
    dend_20 { pt3dadd( 10.4367, -59.3669, -12.6846, 0.52 ) }
    dend_20 { pt3dadd( 10.9865, -60.119, -13.0908, 0.52 ) }
    dend_20 { pt3dadd( 11.8322, -61.3909, -13.7432, 0.52 ) }
    dend_20 { pt3dadd( 12.2051, -62.0349, -14.067, 0.52 ) }
    dend_20 { pt3dadd( 12.7012, -63.1195, -14.5864, 0.52 ) }
    dend_20 { pt3dadd( 13.1841, -64.3558, -15.162, 0.52 ) }
    dend_20 { pt3dadd( 13.6621, -65.7332, -15.8593, 0.52 ) }
    dend_20 { pt3dadd( 13.8854, -66.3362, -16.1941, 0.52 ) }
    dend_20 { pt3dadd( 14.3048, -67.3808, -16.8179, 0.52 ) }
    dend_20 { pt3dadd( 14.7848, -68.4925, -17.5049, 0.52 ) }
    dend_20 { pt3dadd( 15.4043, -69.914, -18.4392, 0.52 ) }
    dend_20 { pt3dadd( 15.9168, -71.1472, -19.2536, 0.52 ) }
    dend_20 { pt3dadd( 16.3352, -72.3067, -20.0296, 0.52 ) }
    dend_20 { pt3dadd( 16.655, -73.2814, -20.6623, 0.52 ) }
    dend_20 { pt3dadd( 16.9209, -74.1119, -21.1802, 0.52 ) }
    dend_20 { pt3dadd( 17.286, -75.1064, -21.7883, 0.52 ) }
    dend_20 { pt3dadd( 17.7493, -76.3384, -22.4579, 0.52 ) }
    dend_20 { pt3dadd( 18.3789, -77.9183, -23.2514, 0.52 ) }
    dend_20 { pt3dadd( 18.899, -79.1142, -23.8271, 0.52 ) }
    dend_20 { pt3dadd( 19.5736, -80.4604, -24.4554, 0.52 ) }
    dend_20 { pt3dadd( 20.6959, -82.4918, -25.3603, 0.52 ) }
    dend_20 { pt3dadd( 21.2465, -83.4281, -25.7218, 0.52 ) }
    dend_20 { pt3dadd( 21.6427, -84.071, -25.9542, 0.52 ) }
    dend_20 { pt3dadd( 22.1197, -84.8279, -26.2038, 0.52 ) }
    dend_20 { pt3dadd( 22.7236, -85.7716, -26.4952, 0.52 ) }
    dend_20 { pt3dadd( 23.7537, -87.3688, -26.9993, 0.52 ) }
    dend_20 { pt3dadd( 25.0083, -89.2528, -27.6748, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_20 { pt3dadd( 25.5875, -90.0638, -28.0165, 0.52 ) }
    dend_20 { pt3dadd( 26.3856, -91.1091, -28.502, 0.52 ) }
    dend_20 { pt3dadd( 27.3847, -92.3134, -29.149, 0.52 ) }
    dend_20 { pt3dadd( 28.7629, -93.853, -30.0705, 0.52 ) }
    dend_20 { pt3dadd( 29.575, -94.6561, -30.5781, 0.52 ) }
    dend_20 { pt3dadd( 30.3167, -95.3102, -30.98, 0.52 ) }
    dend_20 { pt3dadd( 31.0842, -95.9436, -31.3371, 0.52 ) }
    dend_20 { pt3dadd( 32.0555, -96.7083, -31.7091, 0.52 ) }
    dend_20 { pt3dadd( 33.2404, -97.5912, -32.05, 0.52 ) }
    dend_20 { pt3dadd( 35.3112, -99.0564, -32.4794, 0.52 ) }
    dend_20 { pt3dadd( 37.6783, -100.62, -32.9022, 0.52 ) }
    dend_20 { pt3dadd( 39.7079, -101.856, -33.2249, 0.52 ) }
    dend_20 { pt3dadd( 42.4102, -103.391, -33.6227, 0.52 ) }
    dend_20 { pt3dadd( 44.9285, -104.714, -33.9764, 0.52 ) }
    dend_20 { pt3dadd( 46.005, -105.229, -34.1262, 0.52 ) }
    dend_20 { pt3dadd( 48.4158, -106.301, -34.4414, 0.52 ) }
    dend_20 { pt3dadd( 49.4879, -106.762, -34.5723, 0.52 ) }
    dend_20 { pt3dadd( 50.6828, -107.284, -34.6556, 0.52 ) }
    dend_20 { pt3dadd( 52.1449, -107.971, -34.6703, 0.52 ) }
    dend_20 { pt3dadd( 54.3145, -109.127, -34.5666, 0.52 ) }
    dend_20 { pt3dadd( 55.8214, -110.064, -34.4264, 0.52 ) }
    dend_20 { pt3dadd( 56.7654, -110.735, -34.2975, 0.52 ) }
    dend_20 { pt3dadd( 58.7927, -112.313, -33.9754, 0.52 ) }
    dend_20 { pt3dadd( 61.4195, -114.491, -33.4586, 0.52 ) }
    dend_20 { pt3dadd( 63.3949, -116.227, -32.9731, 0.52 ) }
    dend_20 { pt3dadd( 65.4057, -118.075, -32.4133, 0.52 ) }
    dend_20 { pt3dadd( 66.1676, -118.781, -32.1926, 0.52 ) }
    dend_20 { pt3dadd( 67.4665, -119.978, -31.8174, 0.52 ) }
    dend_20 { pt3dadd( 68.7861, -121.225, -31.4553, 0.52 ) }
    dend_20 { pt3dadd( 69.8537, -122.295, -31.1133, 0.52 ) }
    dend_20 { pt3dadd( 71.3387, -123.807, -30.5596, 0.52 ) }
    dend_20 { pt3dadd( 72.3027, -124.761, -30.1881, 0.52 ) }
    dend_20 { pt3dadd( 72.9516, -125.416, -29.9386, 0.52 ) }
    dend_20 { pt3dadd( 73.7295, -126.207, -29.6569, 0.52 ) }
    dend_20 { pt3dadd( 74.948, -127.49, -29.2377, 0.52 ) }
    dend_20 { pt3dadd( 76.0842, -128.719, -28.8572, 0.52 ) }
    dend_20 { pt3dadd( 76.964, -129.693, -28.5586, 0.52 ) }
    dend_20 { pt3dadd( 78.1451, -131.006, -28.1753, 0.52 ) }
    dend_20 { pt3dadd( 79.0679, -132.039, -27.8741, 0.52 ) }
    dend_20 { pt3dadd( 79.5504, -132.589, -27.72, 0.52 ) }
    dend_20 { pt3dadd( 80.3318, -133.542, -27.4888, 0.52 ) }
    dend_20 { pt3dadd( 80.8938, -134.303, -27.3114, 0.52 ) }
    dend_20 { pt3dadd( 81.4948, -135.194, -27.1007, 0.52 ) }
    dend_20 { pt3dadd( 82.0204, -136.036, -26.9174, 0.52 ) }
    dend_20 { pt3dadd( 82.4551, -136.745, -26.7719, 0.52 ) }
    dend_20 { pt3dadd( 83.1554, -137.818, -26.569, 0.52 ) }
    dend_20 { pt3dadd( 84.0905, -139.163, -26.3256, 0.52 ) }
    dend_20 { pt3dadd( 85.2409, -140.617, -26.0982, 0.52 ) }
    dend_20 { pt3dadd( 86.1078, -141.59, -25.9611, 0.52 ) }
    dend_20 { pt3dadd( 87.6867, -143.159, -25.8308, 0.52 ) }
    dend_20 { pt3dadd( 88.7491, -144.122, -25.805, 0.52 ) }
    dend_20 { pt3dadd( 89.8339, -145.041, -25.8383, 0.52 ) }
    dend_20 { pt3dadd( 92.6064, -147.242, -26.0281, 0.52 ) }
    dend_20 { pt3dadd( 93.552, -147.945, -26.1105, 0.52 ) }
    dend_20 { pt3dadd( 95.0253, -149.019, -26.2475, 0.52 ) }
    dend_20 { pt3dadd( 96.0956, -149.808, -26.3344, 0.52 ) }
    dend_20 { pt3dadd( 99.399, -152.335, -26.5565, 0.52 ) }
    dend_20 { pt3dadd( 100.854, -153.516, -26.613, 0.52 ) }
    dend_20 { pt3dadd( 102.708, -155.128, -26.5744, 0.52 ) }
    dend_20 { pt3dadd( 103.858, -156.199, -26.4684, 0.52 ) }
    dend_20 { pt3dadd( 105.278, -157.649, -26.2004, 0.52 ) }
    dend_20 { pt3dadd( 106.17, -158.645, -25.9728, 0.52 ) }
    dend_20 { pt3dadd( 107.07, -159.786, -25.6846, 0.52 ) }
    dend_20 { pt3dadd( 107.839, -160.853, -25.4019, 0.52 ) }
    dend_20 { pt3dadd( 108.435, -161.752, -25.1549, 0.52 ) }
    dend_20 { pt3dadd( 110.199, -164.502, -24.4121, 0.52 ) }
    dend_20 { pt3dadd( 111.294, -166.267, -23.9922, 0.52 ) }
    dend_20 { pt3dadd( 111.867, -167.177, -23.7983, 0.52 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 68/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -0.105617, -27.5242, -3.88615, 0.88 ) }
    dend_17 { pt3dadd( 0.0327942, -29.0647, -4.55493, 0.88 ) }
    dend_17 { pt3dadd( 0.259139, -30.7619, -5.30824, 0.88 ) }
    dend_17 { pt3dadd( 0.519002, -32.0106, -6.00689, 0.88 ) }
    dend_17 { pt3dadd( 0.781781, -32.9419, -6.66487, 0.88 ) }
    dend_17 { pt3dadd( 1.02621, -33.6811, -7.24373, 0.81 ) }
    dend_17 { pt3dadd( 1.2743, -34.4052, -7.80954, 0.74 ) }
    dend_17 { pt3dadd( 1.6217, -35.2564, -8.48133, 0.74 ) }
    dend_17 { pt3dadd( 2.28727, -36.7008, -9.52267, 0.74 ) }
    dend_17 { pt3dadd( 2.79283, -37.7115, -10.2199, 0.74 ) }
    dend_17 { pt3dadd( 3.09293, -38.3213, -10.5908, 0.74 ) }
    dend_17 { pt3dadd( 3.56526, -39.3606, -11.2554, 0.74 ) }
    dend_17 { pt3dadd( 3.93595, -40.3083, -11.8549, 0.74 ) }
    dend_17 { pt3dadd( 4.2987, -41.4172, -12.477, 0.74 ) }
    dend_17 { pt3dadd( 4.60141, -42.4644, -13.0618, 0.66 ) }
    dend_17 { pt3dadd( 4.92212, -43.514, -13.6492, 0.66 ) }
    dend_17 { pt3dadd( 5.62561, -45.7807, -15.0076, 0.66 ) }
    dend_17 { pt3dadd( 5.87759, -46.5643, -15.553, 0.66 ) }
    dend_17 { pt3dadd( 6.07735, -47.2106, -16.0692, 0.66 ) }
    dend_17 { pt3dadd( 6.39333, -48.3196, -17.104, 0.66 ) }
    dend_17 { pt3dadd( 6.6837, -49.3955, -18.1697, 0.66 ) }
    dend_17 { pt3dadd( 6.90457, -50.0175, -18.8245, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 90/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.32135, -70.716, 5.61263, 0.96 ) }
    dend_11 { pt3dadd( -6.35882, -73.5062, 7.34007, 0.96 ) }
    dend_11 { pt3dadd( -7.43436, -74.3177, 7.62371, 0.96 ) }
    dend_11 { pt3dadd( -8.85363, -75.5533, 7.87046, 0.96 ) }
    dend_11 { pt3dadd( -9.38797, -76.0894, 7.93446, 1.18 ) }
    dend_11 { pt3dadd( -10.2328, -77.0586, 7.97816, 0.88 ) }
    dend_11 { pt3dadd( -10.8248, -77.7943, 7.97856, 0.88 ) }
    dend_11 { pt3dadd( -11.3852, -78.5627, 7.78755, 0.88 ) }
    dend_11 { pt3dadd( -11.9693, -79.4813, 7.60069, 0.88 ) }
    dend_11 { pt3dadd( -12.4115, -80.2329, 7.45798, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_11 { pt3dadd( -12.8641, -81.0204, 7.32423, 0.88 ) }
    dend_11 { pt3dadd( -13.4112, -81.961, 7.17202, 0.88 ) }
    dend_11 { pt3dadd( -14.0834, -82.9779, 7.00151, 0.81 ) }
    dend_11 { pt3dadd( -14.6964, -83.8199, 6.86932, 0.81 ) }
    dend_11 { pt3dadd( -15.3545, -84.6148, 6.73635, 0.81 ) }
    dend_11 { pt3dadd( -16.0034, -85.3313, 6.62163, 0.59 ) }
    dend_11 { pt3dadd( -16.7622, -86.1663, 6.49653, 0.59 ) }
    dend_11 { pt3dadd( -17.7705, -87.3469, 6.3252, 0.59 ) }
    dend_11 { pt3dadd( -18.4781, -88.2325, 6.20717, 0.59 ) }
    dend_11 { pt3dadd( -19.0623, -88.9687, 6.11305, 0.59 ) }
    dend_11 { pt3dadd( -20.1833, -90.4409, 5.91804, 0.59 ) }
    dend_11 { pt3dadd( -20.6975, -91.153, 5.82582, 0.59 ) }
    dend_11 { pt3dadd( -21.2914, -92.0457, 5.72585, 0.59 ) }
    dend_11 { pt3dadd( -21.6221, -92.6381, 5.66151, 0.59 ) }
    dend_11 { pt3dadd( -21.8193, -93.031, 5.61962, 0.59 ) }
    dend_11 { pt3dadd( -22.2113, -93.9164, 5.53894, 0.59 ) }
    dend_11 { pt3dadd( -22.4944, -94.6222, 5.47356, 0.59 ) }
    dend_11 { pt3dadd( -23.0007, -95.7694, 5.37514, 0.59 ) }
    dend_11 { pt3dadd( -23.422, -96.6834, 5.28893, 0.59 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 19/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -2.32135, -70.716, 5.61263, 1.18 ) }
    dend_2 { pt3dadd( -1.93366, -72.9813, 6.38575, 1.18 ) }
    dend_2 { pt3dadd( -1.7517, -74.0444, 6.74859, 1.18 ) }
    dend_2 { pt3dadd( -1.50171, -75.5051, 7.2471, 1.03 ) }
    dend_2 { pt3dadd( -1.20581, -77.234, 7.83718, 1.03 ) }
    dend_2 { pt3dadd( -0.920592, -78.9005, 8.40594, 1.03 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 25/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -22.302, 30.2275, 4.00372, 0.29 ) }
    dend_55 { pt3dadd( -23.7916, 31.8235, 2.2743, 0.29 ) }
    dend_55 { pt3dadd( -24.2355, 32.3434, 1.70934, 0.29 ) }
    dend_55 { pt3dadd( -24.5675, 32.7546, 1.2919, 0.29 ) }
    dend_55 { pt3dadd( -25.0839, 33.3585, 0.667739, 0.74 ) }
    dend_55 { pt3dadd( -25.4796, 33.7912, 0.200509, 1.18 ) }
    dend_55 { pt3dadd( -25.7968, 34.1145, -0.155744, 1.18 ) }
    dend_55 { pt3dadd( -26.3358, 34.6219, -0.66067, 0.66 ) }
    dend_55 { pt3dadd( -26.6809, 34.9414, -0.997678, 0.59 ) }
    dend_55 { pt3dadd( -27.2835, 35.4709, -1.55067, 1.03 ) }
    dend_55 { pt3dadd( -27.9737, 36.0404, -2.11864, 1.18 ) }
    dend_55 { pt3dadd( -28.5062, 36.4807, -2.50704, 0.52 ) }
    dend_55 { pt3dadd( -29.1401, 37.0245, -2.89766, 0.52 ) }
    dend_55 { pt3dadd( -29.6225, 37.455, -3.15149, 0.52 ) }
    dend_55 { pt3dadd( -30.0729, 37.8925, -3.36642, 0.66 ) }
    dend_55 { pt3dadd( -30.6346, 38.5355, -3.64711, 0.66 ) }
    dend_55 { pt3dadd( -31.1124, 39.1788, -3.92525, 1.03 ) }
    dend_55 { pt3dadd( -31.3369, 39.5629, -4.08962, 1.25 ) }
    dend_55 { pt3dadd( -31.5558, 40.0167, -4.27295, 1.25 ) }
    dend_55 { pt3dadd( -31.8147, 40.6456, -4.52326, 1.11 ) }
    dend_55 { pt3dadd( -32.3488, 42.0599, -5.09305, 0.44 ) }
    dend_55 { pt3dadd( -32.611, 42.7573, -5.3716, 0.37 ) }
    dend_55 { pt3dadd( -32.9999, 43.7775, -5.77621, 0.74 ) }
    dend_55 { pt3dadd( -33.4063, 44.7979, -6.16361, 0.96 ) }
    dend_55 { pt3dadd( -33.6902, 45.4418, -6.38261, 0.96 ) }
    dend_55 { pt3dadd( -33.9373, 45.9285, -6.53473, 0.96 ) }
    dend_55 { pt3dadd( -34.2367, 46.4144, -6.65882, 0.81 ) }
    dend_55 { pt3dadd( -34.8266, 47.2184, -6.86326, 0.29 ) }
    dend_55 { pt3dadd( -35.4514, 47.9369, -7.07572, 0.29 ) }
    dend_55 { pt3dadd( -36.1158, 48.627, -7.33515, 0.88 ) }
    dend_55 { pt3dadd( -36.4971, 48.9891, -7.50846, 1.18 ) }
    dend_55 { pt3dadd( -36.8896, 49.3392, -7.69909, 1.18 ) }
    dend_55 { pt3dadd( -37.4005, 49.773, -7.98825, 0.96 ) }
    dend_55 { pt3dadd( -37.8316, 50.1167, -8.26126, 0.74 ) }
    dend_55 { pt3dadd( -38.634, 50.7522, -8.86224, 0.37 ) }
    dend_55 { pt3dadd( -39.1352, 51.1629, -9.30712, 0.37 ) }
    dend_55 { pt3dadd( -39.6456, 51.6031, -9.7911, 1.03 ) }
    dend_55 { pt3dadd( -40.0132, 51.9374, -10.1572, 1.25 ) }
    dend_55 { pt3dadd( -40.2449, 52.1562, -10.389, 1.4 ) }
    dend_55 { pt3dadd( -40.5773, 52.4956, -10.7054, 0.74 ) }
    dend_55 { pt3dadd( -41.4606, 53.443, -11.4704, 0.22 ) }
    dend_55 { pt3dadd( -41.8509, 53.8667, -11.7718, 0.44 ) }
    dend_55 { pt3dadd( -42.1444, 54.1914, -11.9783, 0.59 ) }
    dend_55 { pt3dadd( -42.4602, 54.5536, -12.169, 0.59 ) }
    dend_55 { pt3dadd( -42.7438, 54.9035, -12.3325, 0.66 ) }
    dend_55 { pt3dadd( -43.6505, 56.0997, -12.8293, 0.22 ) }
    dend_55 { pt3dadd( -44.0867, 56.7238, -13.0628, 0.22 ) }
    dend_55 { pt3dadd( -44.5452, 57.3971, -13.3046, 0.59 ) }
    dend_55 { pt3dadd( -44.9794, 58.0479, -13.5215, 0.81 ) }
    dend_55 { pt3dadd( -45.3549, 58.5968, -13.6986, 1.18 ) }
    dend_55 { pt3dadd( -45.6748, 59.0406, -13.8374, 0.74 ) }
    dend_55 { pt3dadd( -46.4933, 60.1293, -14.1798, 0.29 ) }
    dend_55 { pt3dadd( -47.2188, 61.0387, -14.4905, 0.29 ) }
    dend_55 { pt3dadd( -47.7425, 61.6418, -14.7239, 0.44 ) }
    dend_55 { pt3dadd( -48.3462, 62.2827, -14.9794, 0.44 ) }
    dend_55 { pt3dadd( -48.9464, 62.8672, -15.2084, 1.11 ) }
    dend_55 { pt3dadd( -49.3846, 63.2697, -15.3652, 1.33 ) }
    dend_55 { pt3dadd( -49.6495, 63.5079, -15.4576, 1.47 ) }
    dend_55 { pt3dadd( -50.1939, 64.008, -15.6438, 0.88 ) }
    dend_55 { pt3dadd( -50.9223, 64.7209, -15.8819, 0.29 ) }
    dend_55 { pt3dadd( -51.4249, 65.2733, -16.0205, 0.29 ) }
    dend_55 { pt3dadd( -51.8217, 65.7618, -16.1056, 0.29 ) }
    dend_55 { pt3dadd( -52.2192, 66.3239, -16.1294, 0.66 ) }
    dend_55 { pt3dadd( -52.5236, 66.8107, -16.1177, 0.81 ) }
    dend_55 { pt3dadd( -52.6326, 67.0024, -16.1043, 0.81 ) }
    dend_55 { pt3dadd( -53.0311, 67.7828, -16.0485, 0.22 ) }
    dend_55 { pt3dadd( -53.4822, 68.7011, -16.0037, 0.22 ) }
    dend_55 { pt3dadd( -54.0298, 69.8078, -16.0916, 0.96 ) }
    dend_55 { pt3dadd( -54.3099, 70.3582, -16.197, 1.25 ) }
    dend_55 { pt3dadd( -54.543, 70.8205, -16.3362, 1.25 ) }
    dend_55 { pt3dadd( -54.6899, 71.1141, -16.4525, 1.25 ) }
    dend_55 { pt3dadd( -55.0664, 71.9043, -16.8929, 0.22 ) }
    dend_55 { pt3dadd( -55.7511, 73.349, -17.8481, 0.22 ) }
    dend_55 { pt3dadd( -56.0546, 73.9768, -18.2974, 1.11 ) }
    dend_55 { pt3dadd( -56.2484, 74.3916, -18.5832, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_55 { pt3dadd( -56.4157, 74.7589, -18.8276, 1.33 ) }
    dend_55 { pt3dadd( -57.0306, 76.0689, -19.6727, 0.29 ) }
    dend_55 { pt3dadd( -57.475, 77.008, -20.2292, 0.74 ) }
    dend_55 { pt3dadd( -57.6853, 77.4269, -20.4481, 0.88 ) }
    dend_55 { pt3dadd( -57.9127, 77.866, -20.6748, 0.74 ) }
    dend_55 { pt3dadd( -58.4766, 78.8623, -21.1589, 0.22 ) }
    dend_55 { pt3dadd( -58.6574, 79.1554, -21.2975, 0.22 ) }
    dend_55 { pt3dadd( -59.0313, 79.7217, -21.5316, 0.66 ) }
    dend_55 { pt3dadd( -59.331, 80.1584, -21.7331, 0.81 ) }
    dend_55 { pt3dadd( -59.5633, 80.4942, -21.8951, 0.81 ) }
    dend_55 { pt3dadd( -60.2094, 81.4168, -22.3704, 0.22 ) }
    dend_55 { pt3dadd( -60.8094, 82.2728, -22.8047, 0.22 ) }
    dend_55 { pt3dadd( -61.2904, 82.9512, -23.1324, 0.88 ) }
    dend_55 { pt3dadd( -61.7914, 83.6327, -23.4435, 1.25 ) }
    dend_55 { pt3dadd( -62.0887, 84.0337, -23.6087, 1.25 ) }
    dend_55 { pt3dadd( -62.9104, 85.1512, -24.0455, 0.22 ) }
    dend_55 { pt3dadd( -63.7363, 86.3636, -24.4673, 0.22 ) }
    dend_55 { pt3dadd( -64.6093, 87.7226, -24.8973, 0.22 ) }
    dend_55 { pt3dadd( -65.1213, 88.5898, -25.1468, 0.22 ) }
    dend_55 { pt3dadd( -65.4674, 89.2262, -25.3025, 0.88 ) }
    dend_55 { pt3dadd( -65.8534, 89.9927, -25.4853, 0.88 ) }
    dend_55 { pt3dadd( -66.4426, 91.3604, -25.7995, 0.22 ) }
    dend_55 { pt3dadd( -66.7508, 92.216, -26.0184, 0.22 ) }
    dend_55 { pt3dadd( -67.0821, 93.2811, -26.3054, 0.74 ) }
    dend_55 { pt3dadd( -67.2158, 93.7468, -26.4342, 1.11 ) }
    dend_55 { pt3dadd( -67.4002, 94.4385, -26.624, 1.11 ) }
    dend_55 { pt3dadd( -67.7978, 95.9756, -27.0537, 0.22 ) }
    dend_55 { pt3dadd( -68.124, 97.2664, -27.4275, 0.22 ) }
    dend_55 { pt3dadd( -68.3687, 98.304, -27.7251, 0.66 ) }
    dend_55 { pt3dadd( -68.4631, 98.7633, -27.8513, 0.66 ) }
    dend_55 { pt3dadd( -68.7123, 100.191, -28.2133, 0.29 ) }
    dend_55 { pt3dadd( -68.8936, 101.491, -28.5231, 0.29 ) }
    dend_55 { pt3dadd( -68.968, 102.224, -28.6917, 0.44 ) }
    dend_55 { pt3dadd( -69.0099, 102.787, -28.8235, 0.44 ) }
    dend_55 { pt3dadd( -69.0915, 104.059, -29.1441, 1.25 ) }
    dend_55 { pt3dadd( -69.136, 104.668, -29.3107, 1.18 ) }
    dend_55 { pt3dadd( -69.2079, 105.517, -29.5569, 0.59 ) }
    dend_55 { pt3dadd( -69.3108, 106.58, -29.8803, 0.22 ) }
    dend_55 { pt3dadd( -69.4407, 107.706, -30.2645, 0.22 ) }
    dend_55 { pt3dadd( -69.6005, 108.834, -30.6691, 0.88 ) }
    dend_55 { pt3dadd( -69.7456, 109.665, -30.9989, 1.03 ) }
    dend_55 { pt3dadd( -69.8368, 110.11, -31.1918, 0.74 ) }
    dend_55 { pt3dadd( -70.0949, 111.107, -31.6765, 0.29 ) }
    dend_55 { pt3dadd( -70.2201, 111.506, -31.8943, 0.29 ) }
    dend_55 { pt3dadd( -70.5265, 112.305, -32.377, 0.66 ) }
    dend_55 { pt3dadd( -70.7235, 112.731, -32.6604, 0.66 ) }
    dend_55 { pt3dadd( -71.1791, 113.619, -33.3102, 0.22 ) }
    dend_55 { pt3dadd( -71.5125, 114.191, -33.7648, 0.22 ) }
    dend_55 { pt3dadd( -71.7507, 114.539, -34.0751, 0.81 ) }
    dend_55 { pt3dadd( -72.094, 114.992, -34.4994, 0.96 ) }
    dend_55 { pt3dadd( -72.7642, 115.811, -35.2731, 0.22 ) }
    dend_55 { pt3dadd( -73.1115, 116.224, -35.63, 0.22 ) }
    dend_55 { pt3dadd( -73.3878, 116.542, -35.8874, 0.59 ) }
    dend_55 { pt3dadd( -73.9267, 117.169, -36.3471, 0.59 ) }
    dend_55 { pt3dadd( -74.6243, 117.979, -36.8915, 0.22 ) }
    dend_55 { pt3dadd( -75.2577, 118.715, -37.3175, 0.74 ) }
    dend_55 { pt3dadd( -75.8271, 119.356, -37.6332, 0.74 ) }
    dend_55 { pt3dadd( -76.177, 119.764, -37.7936, 0.88 ) }
    dend_55 { pt3dadd( -76.5276, 120.2, -37.9344, 0.88 ) }
    dend_55 { pt3dadd( -77.1311, 121.016, -38.1283, 0.22 ) }
    dend_55 { pt3dadd( -77.4064, 121.445, -38.2065, 0.37 ) }
    dend_55 { pt3dadd( -77.7557, 122.161, -38.3188, 0.37 ) }
    dend_55 { pt3dadd( -78.0412, 122.955, -38.4175, 0.22 ) }
    dend_55 { pt3dadd( -78.1419, 123.3, -38.4527, 0.37 ) }
    dend_55 { pt3dadd( -78.231, 123.706, -38.4944, 0.37 ) }
    dend_55 { pt3dadd( -78.3999, 124.718, -38.6014, 0.22 ) }
    dend_55 { pt3dadd( -78.5712, 126.056, -38.7477, 0.22 ) }
    dend_55 { pt3dadd( -78.6792, 127.106, -38.8655, 0.74 ) }
    dend_55 { pt3dadd( -78.7163, 127.465, -38.9122, 0.88 ) }
    dend_55 { pt3dadd( -78.8553, 128.64, -39.0933, 0.22 ) }
    dend_55 { pt3dadd( -78.9689, 129.499, -39.2349, 0.37 ) }
    dend_55 { pt3dadd( -79.1116, 130.496, -39.4186, 0.22 ) }
    dend_55 { pt3dadd( -79.2368, 131.315, -39.5875, 0.81 ) }
    dend_55 { pt3dadd( -79.3304, 131.881, -39.7129, 0.96 ) }
    dend_55 { pt3dadd( -79.4229, 132.402, -39.829, 0.96 ) }
    dend_55 { pt3dadd( -79.6349, 133.478, -40.0489, 0.22 ) }
    dend_55 { pt3dadd( -79.799, 134.282, -40.2026, 0.44 ) }
    dend_55 { pt3dadd( -79.8675, 134.606, -40.2634, 0.44 ) }
    dend_55 { pt3dadd( -80.2864, 136.508, -40.5744, 0.22 ) }
    dend_55 { pt3dadd( -80.5437, 137.633, -40.7358, 0.22 ) }
    dend_55 { pt3dadd( -80.8554, 138.881, -40.9068, 0.22 ) }
    dend_55 { pt3dadd( -81.1088, 139.803, -41.037, 0.96 ) }
    dend_55 { pt3dadd( -81.2365, 140.236, -41.1059, 1.11 ) }
    dend_55 { pt3dadd( -81.7335, 141.801, -41.3767, 0.15 ) }
    dend_55 { pt3dadd( -81.9046, 142.287, -41.4821, 0.15 ) }
    dend_55 { pt3dadd( -82.1694, 142.951, -41.6508, 0.37 ) }
    dend_55 { pt3dadd( -82.6342, 143.999, -41.9657, 0.22 ) }
    dend_55 { pt3dadd( -82.9815, 144.735, -42.2083, 0.22 ) }
    dend_55 { pt3dadd( -83.289, 145.366, -42.4238, 0.66 ) }
    dend_55 { pt3dadd( -83.6204, 146.016, -42.6591, 0.66 ) }
    dend_55 { pt3dadd( -83.8599, 146.461, -42.813, 0.81 ) }
    dend_55 { pt3dadd( -84.4474, 147.473, -43.1568, 0.22 ) }
    dend_55 { pt3dadd( -84.9912, 148.328, -43.4324, 0.22 ) }
    dend_55 { pt3dadd( -85.2964, 148.779, -43.5608, 0.66 ) }
    dend_55 { pt3dadd( -85.6328, 149.243, -43.6895, 0.74 ) }
    dend_55 { pt3dadd( -86.2809, 150.067, -43.9, 0.22 ) }
    dend_55 { pt3dadd( -86.8151, 150.705, -44.0662, 0.22 ) }
    dend_55 { pt3dadd( -87.0866, 151.014, -44.153, 0.37 ) }
    dend_55 { pt3dadd( -87.3298, 151.287, -44.2311, 0.37 ) }
    dend_55 { pt3dadd( -88.3536, 152.441, -44.5684, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_55 { pt3dadd( -88.7327, 152.884, -44.6928, 0.59 ) }
    dend_55 { pt3dadd( -89.3525, 153.644, -44.8943, 0.74 ) }
    dend_55 { pt3dadd( -90.4496, 155.044, -45.2677, 0.22 ) }
    dend_55 { pt3dadd( -91.1199, 155.921, -45.5112, 0.22 ) }
    dend_55 { pt3dadd( -91.399, 156.298, -45.6193, 0.44 ) }
    dend_55 { pt3dadd( -91.7272, 156.777, -45.7492, 0.44 ) }
    dend_55 { pt3dadd( -92.248, 157.637, -45.9609, 0.22 ) }
    dend_55 { pt3dadd( -92.5436, 158.193, -46.0773, 0.59 ) }
    dend_55 { pt3dadd( -92.7261, 158.585, -46.1491, 0.74 ) }
    dend_55 { pt3dadd( -92.9053, 159.048, -46.224, 0.74 ) }
    dend_55 { pt3dadd( -93.5567, 160.92, -46.484, 0.22 ) }
    dend_55 { pt3dadd( -93.9215, 162.046, -46.6288, 0.22 ) }
    dend_55 { pt3dadd( -94.1308, 162.757, -46.7085, 0.66 ) }
    dend_55 { pt3dadd( -94.2592, 163.226, -46.7543, 0.66 ) }
    dend_55 { pt3dadd( -94.8465, 165.488, -46.9589, 0.22 ) }
    dend_55 { pt3dadd( -95.0846, 166.426, -47.0634, 0.44 ) }
    dend_55 { pt3dadd( -95.2851, 167.187, -47.1667, 0.52 ) }
    dend_55 { pt3dadd( -95.7164, 168.776, -47.4597, 0.22 ) }
    dend_55 { pt3dadd( -95.9588, 169.63, -47.6604, 0.59 ) }
    dend_55 { pt3dadd( -96.1794, 170.38, -47.8646, 0.59 ) }
    dend_55 { pt3dadd( -96.7946, 172.342, -48.4966, 0.22 ) }
    dend_55 { pt3dadd( -97.2754, 173.805, -49.0179, 0.22 ) }
    dend_55 { pt3dadd( -97.8037, 175.311, -49.6066, 0.22 ) }
    dend_55 { pt3dadd( -98.1617, 176.254, -50.0246, 0.22 ) }
    dend_55 { pt3dadd( -98.4158, 176.903, -50.3257, 0.66 ) }
    dend_55 { pt3dadd( -98.5108, 177.145, -50.4427, 0.88 ) }
    dend_55 { pt3dadd( -98.8027, 177.906, -50.7938, 0.59 ) }
    dend_55 { pt3dadd( -99.1963, 179.022, -51.2667, 0.22 ) }
    dend_55 { pt3dadd( -99.5293, 180.02, -51.6104, 0.22 ) }
    dend_55 { pt3dadd( -99.7571, 180.773, -51.8555, 0.59 ) }
    dend_55 { pt3dadd( -99.9636, 181.497, -52.0854, 0.59 ) }
    dend_55 { pt3dadd( -100.314, 182.76, -52.4654, 0.22 ) }
    dend_55 { pt3dadd( -100.558, 183.595, -52.699, 0.22 ) }
    dend_55 { pt3dadd( -101.025, 185.092, -53.1064, 0.22 ) }
    dend_55 { pt3dadd( -101.369, 186.091, -53.3805, 0.66 ) }
    dend_55 { pt3dadd( -101.446, 186.296, -53.4368, 0.88 ) }
    dend_55 { pt3dadd( -101.648, 186.827, -53.583, 0.88 ) }
    dend_55 { pt3dadd( -102.089, 187.94, -53.9368, 0.22 ) }
    dend_55 { pt3dadd( -102.322, 188.496, -54.1333, 0.22 ) }
    dend_55 { pt3dadd( -102.567, 189.052, -54.3369, 0.37 ) }
    dend_55 { pt3dadd( -103.15, 190.154, -54.7798, 0.22 ) }
    dend_55 { pt3dadd( -103.765, 191.16, -55.2451, 0.22 ) }
    dend_55 { pt3dadd( -104.348, 192.015, -55.6975, 0.81 ) }
    dend_55 { pt3dadd( -104.871, 192.692, -56.0988, 0.96 ) }
    dend_55 { pt3dadd( -105.712, 193.619, -56.6559, 0.22 ) }
    dend_55 { pt3dadd( -107.16, 195.053, -57.4856, 0.22 ) }
    dend_55 { pt3dadd( -107.72, 195.582, -57.7781, 0.59 ) }
    dend_55 { pt3dadd( -108.026, 195.871, -57.9201, 0.74 ) }
    dend_55 { pt3dadd( -108.761, 196.601, -58.2426, 0.22 ) }
    dend_55 { pt3dadd( -110.016, 198.032, -58.7677, 0.22 ) }
    dend_55 { pt3dadd( -110.93, 199.321, -59.1425, 0.22 ) }
    dend_55 { pt3dadd( -111.696, 200.635, -59.4323, 0.88 ) }
    dend_55 { pt3dadd( -111.973, 201.214, -59.5335, 1.25 ) }
    dend_55 { pt3dadd( -112.347, 202.143, -59.6742, 0.81 ) }
    dend_55 { pt3dadd( -113.028, 204.188, -59.9613, 0.15 ) }
    dend_55 { pt3dadd( -113.689, 206.601, -60.2886, 0.15 ) }
    dend_55 { pt3dadd( -113.936, 207.591, -60.4147, 0.37 ) }
    dend_55 { pt3dadd( -114.451, 209.776, -60.625, 0.15 ) }
    dend_55 { pt3dadd( -114.635, 210.605, -60.7016, 0.15 ) }
    dend_55 { pt3dadd( -114.78, 211.345, -60.7561, 0.29 ) }
    dend_55 { pt3dadd( -114.876, 211.87, -60.7955, 0.22 ) }
    dend_55 { pt3dadd( -114.94, 212.266, -60.8209, 0.22 ) }
    dend_55 { pt3dadd( -115.106, 213.259, -60.8974, 0.22 ) }
    dend_55 { pt3dadd( -115.37, 214.166, -60.9913, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 64/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -22.302, 30.2275, 4.00372, 0.59 ) }
    dend_54 { pt3dadd( -23.6906, 30.6476, 4.94895, 0.59 ) }
    dend_54 { pt3dadd( -24.3757, 30.8849, 5.36306, 0.74 ) }
    dend_54 { pt3dadd( -25.6416, 31.3278, 6.03929, 0.81 ) }
    dend_54 { pt3dadd( -26.2769, 31.5414, 6.34624, 0.96 ) }
    dend_54 { pt3dadd( -26.9905, 31.7561, 6.67376, 1.18 ) }
    dend_54 { pt3dadd( -27.8005, 31.9759, 7.03382, 0.74 ) }
    dend_54 { pt3dadd( -28.5729, 32.1865, 7.34442, 0.52 ) }
    dend_54 { pt3dadd( -29.1789, 32.3387, 7.58709, 0.52 ) }
    dend_54 { pt3dadd( -29.818, 32.4761, 7.8275, 0.81 ) }
    dend_54 { pt3dadd( -30.4908, 32.606, 8.08444, 0.96 ) }
    dend_54 { pt3dadd( -31.1615, 32.7371, 8.33004, 0.74 ) }
    dend_54 { pt3dadd( -31.7924, 32.873, 8.56351, 0.96 ) }
    dend_54 { pt3dadd( -32.4979, 33.0532, 8.82575, 1.11 ) }
    dend_54 { pt3dadd( -33.2257, 33.2812, 9.07495, 0.88 ) }
    dend_54 { pt3dadd( -34.5227, 33.7393, 9.44457, 0.37 ) }
    dend_54 { pt3dadd( -35.1809, 33.9826, 9.58654, 0.37 ) }
    dend_54 { pt3dadd( -35.6446, 34.1343, 9.66375, 0.74 ) }
    dend_54 { pt3dadd( -36.2265, 34.2823, 9.73445, 0.88 ) }
    dend_54 { pt3dadd( -36.6757, 34.357, 9.77335, 0.88 ) }
    dend_54 { pt3dadd( -37.4842, 34.4182, 9.83329, 0.74 ) }
    dend_54 { pt3dadd( -38.2223, 34.4154, 9.88539, 0.29 ) }
    dend_54 { pt3dadd( -39.0741, 34.379, 9.9451, 0.29 ) }
    dend_54 { pt3dadd( -39.793, 34.3454, 9.99308, 0.74 ) }
    dend_54 { pt3dadd( -40.6944, 34.3154, 10.0482, 0.88 ) }
    dend_54 { pt3dadd( -41.392, 34.3142, 10.0846, 0.74 ) }
    dend_54 { pt3dadd( -42.1332, 34.3594, 10.1182, 0.59 ) }
    dend_54 { pt3dadd( -42.866, 34.462, 10.1428, 0.59 ) }
    dend_54 { pt3dadd( -43.5077, 34.5935, 10.1549, 0.52 ) }
    dend_54 { pt3dadd( -44.1781, 34.7657, 10.1799, 0.66 ) }
    dend_54 { pt3dadd( -44.9462, 34.9955, 10.2261, 0.88 ) }
    dend_54 { pt3dadd( -46.038, 35.3406, 10.3447, 0.29 ) }
    dend_54 { pt3dadd( -47.1251, 35.6731, 10.5061, 0.88 ) }
    dend_54 { pt3dadd( -47.7407, 35.8468, 10.6363, 1.18 ) }
    dend_54 { pt3dadd( -48.4515, 36.0242, 10.8457, 1.33 ) }
    dend_54 { pt3dadd( -48.8595, 36.112, 11.0046, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_54 { pt3dadd( -49.8813, 36.2969, 11.4815, 0.96 ) }
    dend_54 { pt3dadd( -50.6667, 36.4018, 11.8989, 0.81 ) }
    dend_54 { pt3dadd( -51.4573, 36.466, 12.3416, 0.66 ) }
    dend_54 { pt3dadd( -52.1465, 36.4892, 12.7202, 0.66 ) }
    dend_54 { pt3dadd( -52.7612, 36.4774, 13.0301, 0.52 ) }
    dend_54 { pt3dadd( -53.4352, 36.4418, 13.3371, 0.88 ) }
    dend_54 { pt3dadd( -53.926, 36.408, 13.5307, 1.11 ) }
    dend_54 { pt3dadd( -54.5252, 36.3671, 13.7314, 1.18 ) }
    dend_54 { pt3dadd( -55.0252, 36.3439, 13.8623, 0.96 ) }
    dend_54 { pt3dadd( -55.6811, 36.3344, 14.0115, 0.66 ) }
    dend_54 { pt3dadd( -56.2672, 36.3604, 14.1486, 0.44 ) }
    dend_54 { pt3dadd( -56.7914, 36.429, 14.2838, 0.44 ) }
    dend_54 { pt3dadd( -57.4295, 36.5813, 14.4442, 0.66 ) }
    dend_54 { pt3dadd( -57.8088, 36.7139, 14.5356, 0.66 ) }
    dend_54 { pt3dadd( -58.4504, 36.9824, 14.6705, 0.66 ) }
    dend_54 { pt3dadd( -59.196, 37.3146, 14.7995, 0.52 ) }
    dend_54 { pt3dadd( -59.9564, 37.6484, 14.9041, 0.52 ) }
    dend_54 { pt3dadd( -60.8955, 38.0341, 15.0006, 0.88 ) }
    dend_54 { pt3dadd( -61.6045, 38.301, 15.0561, 1.11 ) }
    dend_54 { pt3dadd( -62.5188, 38.6066, 15.1404, 0.88 ) }
    dend_54 { pt3dadd( -63.506, 38.8918, 15.2564, 0.66 ) }
    dend_54 { pt3dadd( -64.2278, 39.0633, 15.3678, 1.11 ) }
    dend_54 { pt3dadd( -65.0614, 39.2378, 15.563, 1.33 ) }
    dend_54 { pt3dadd( -65.6293, 39.361, 15.7463, 0.81 ) }
    dend_54 { pt3dadd( -66.5814, 39.5922, 16.1305, 0.59 ) }
    dend_54 { pt3dadd( -67.3246, 39.8002, 16.4862, 0.44 ) }
    dend_54 { pt3dadd( -68.3104, 40.1173, 17.016, 0.44 ) }
    dend_54 { pt3dadd( -69.4926, 40.5542, 17.6848, 0.37 ) }
    dend_54 { pt3dadd( -70.1932, 40.8343, 18.1469, 0.74 ) }
    dend_54 { pt3dadd( -70.7841, 41.0748, 18.5543, 1.11 ) }
    dend_54 { pt3dadd( -71.0954, 41.1966, 18.7658, 1.33 ) }
    dend_54 { pt3dadd( -71.4844, 41.3495, 19.0123, 1.33 ) }
    dend_54 { pt3dadd( -72.2301, 41.6275, 19.4372, 1.11 ) }
    dend_54 { pt3dadd( -74.3234, 42.3284, 20.43, 0.74 ) }
    dend_54 { pt3dadd( -75.065, 42.5267, 20.7253, 0.81 ) }
    dend_54 { pt3dadd( -76.0802, 42.7742, 21.0629, 0.52 ) }
    dend_54 { pt3dadd( -77.3177, 43.0796, 21.3948, 1.18 ) }
    dend_54 { pt3dadd( -77.889, 43.2295, 21.5025, 1.47 ) }
    dend_54 { pt3dadd( -78.5241, 43.3998, 21.5629, 1.47 ) }
    dend_54 { pt3dadd( -79.5909, 43.6808, 21.5486, 0.52 ) }
    dend_54 { pt3dadd( -80.4608, 43.9044, 21.5359, 0.37 ) }
    dend_54 { pt3dadd( -81.3884, 44.1356, 21.5287, 0.37 ) }
    dend_54 { pt3dadd( -82.5659, 44.4103, 21.5538, 0.81 ) }
    dend_54 { pt3dadd( -83.2074, 44.5655, 21.564, 1.11 ) }
    dend_54 { pt3dadd( -84.1282, 44.7818, 21.5724, 1.55 ) }
    dend_54 { pt3dadd( -84.5521, 44.8599, 21.5738, 1.55 ) }
    dend_54 { pt3dadd( -85.819, 44.9893, 21.5852, 0.44 ) }
    dend_54 { pt3dadd( -86.413, 45.0073, 21.5935, 0.44 ) }
    dend_54 { pt3dadd( -87.0756, 44.9965, 21.6127, 0.81 ) }
    dend_54 { pt3dadd( -87.6828, 44.9724, 21.6376, 0.81 ) }
    dend_54 { pt3dadd( -88.6745, 44.8891, 21.6884, 0.37 ) }
    dend_54 { pt3dadd( -89.1342, 44.8244, 21.7145, 0.37 ) }
    dend_54 { pt3dadd( -89.6915, 44.7147, 21.7511, 0.81 ) }
    dend_54 { pt3dadd( -90.4444, 44.5786, 21.8074, 1.18 ) }
    dend_54 { pt3dadd( -90.9624, 44.5186, 21.8547, 1.18 ) }
    dend_54 { pt3dadd( -91.8821, 44.5065, 21.9701, 0.59 ) }
    dend_54 { pt3dadd( -92.6164, 44.5705, 22.0819, 0.74 ) }
    dend_54 { pt3dadd( -92.9163, 44.6099, 22.1363, 0.74 ) }
    dend_54 { pt3dadd( -93.6217, 44.7468, 22.289, 0.44 ) }
    dend_54 { pt3dadd( -94.3411, 44.9046, 22.4841, 0.44 ) }
    dend_54 { pt3dadd( -94.912, 45.0535, 22.6849, 0.22 ) }
    dend_54 { pt3dadd( -95.3191, 45.1873, 22.8607, 0.22 ) }
    dend_54 { pt3dadd( -95.8479, 45.3932, 23.1409, 0.66 ) }
    dend_54 { pt3dadd( -96.1562, 45.5342, 23.3403, 0.66 ) }
    dend_54 { pt3dadd( -96.9087, 45.9064, 23.9377, 0.22 ) }
    dend_54 { pt3dadd( -97.3358, 46.145, 24.3109, 0.22 ) }
    dend_54 { pt3dadd( -97.7713, 46.4413, 24.7321, 0.44 ) }
    dend_54 { pt3dadd( -98.3112, 46.883, 25.3573, 0.44 ) }
    dend_54 { pt3dadd( -98.8726, 47.4026, 26.0741, 0.15 ) }
    dend_54 { pt3dadd( -99.43, 47.9637, 26.8474, 0.59 ) }
    dend_54 { pt3dadd( -99.7752, 48.3334, 27.3401, 0.74 ) }
    dend_54 { pt3dadd( -100.107, 48.6716, 27.7912, 0.74 ) }
    dend_54 { pt3dadd( -101.07, 49.5408, 28.9944, 0.52 ) }
    dend_54 { pt3dadd( -101.229, 49.6655, 29.1741, 0.74 ) }
    dend_54 { pt3dadd( -101.782, 50.0489, 29.7147, 0.88 ) }
    dend_54 { pt3dadd( -102.22, 50.3283, 30.0802, 0.88 ) }
    dend_54 { pt3dadd( -102.727, 50.6086, 30.4401, 0.37 ) }
    dend_54 { pt3dadd( -103.322, 50.8848, 30.7654, 0.29 ) }
    dend_54 { pt3dadd( -104.12, 51.1946, 31.0696, 0.29 ) }
    dend_54 { pt3dadd( -104.903, 51.4627, 31.316, 0.81 ) }
    dend_54 { pt3dadd( -105.434, 51.6266, 31.4367, 0.81 ) }
    dend_54 { pt3dadd( -105.839, 51.7502, 31.5174, 0.81 ) }
    dend_54 { pt3dadd( -106.193, 51.8596, 31.5469, 0.74 ) }
    dend_54 { pt3dadd( -106.758, 52.0361, 31.5274, 0.96 ) }
    dend_54 { pt3dadd( -107.483, 52.2539, 31.4388, 0.66 ) }
    dend_54 { pt3dadd( -108.238, 52.4677, 31.3074, 0.44 ) }
    dend_54 { pt3dadd( -108.921, 52.6634, 31.1606, 0.44 ) }
    dend_54 { pt3dadd( -110.161, 53.05, 30.8597, 0.44 ) }
    dend_54 { pt3dadd( -111.142, 53.3539, 30.6329, 0.66 ) }
    dend_54 { pt3dadd( -111.707, 53.5294, 30.5099, 0.96 ) }
    dend_54 { pt3dadd( -112.166, 53.6621, 30.423, 0.96 ) }
    dend_54 { pt3dadd( -112.753, 53.8286, 30.3255, 0.52 ) }
    dend_54 { pt3dadd( -113.421, 54.009, 30.3234, 0.66 ) }
    dend_54 { pt3dadd( -114.377, 54.2369, 30.4817, 0.66 ) }
    dend_54 { pt3dadd( -114.978, 54.3409, 30.6429, 0.59 ) }
    dend_54 { pt3dadd( -115.887, 54.4851, 30.9262, 0.96 ) }
    dend_54 { pt3dadd( -116.842, 54.6135, 31.2657, 0.96 ) }
    dend_54 { pt3dadd( -118.897, 54.8145, 32.0777, 0.52 ) }
    dend_54 { pt3dadd( -119.711, 54.8651, 32.4297, 0.29 ) }
    dend_54 { pt3dadd( -120.92, 54.9189, 33.0022, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_54 { pt3dadd( -129.214, 58.4468, 37.3335, 0.29 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 1/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -11.2373, 46.6101, 18.3574, 0.59 ) }
    dend_52 { pt3dadd( -10.6419, 46.3135, 19.9065, 0.59 ) }
    dend_52 { pt3dadd( -10.0217, 46.1929, 21.5075, 0.74 ) }
    dend_52 { pt3dadd( -8.67219, 46.3493, 24.9931, 0.66 ) }
    dend_52 { pt3dadd( -8.35374, 46.4769, 25.8548, 0.66 ) }
    dend_52 { pt3dadd( -8.20097, 46.5924, 26.3246, 0.74 ) }
    dend_52 { pt3dadd( -8.01733, 46.866, 27.1209, 0.52 ) }
    dend_52 { pt3dadd( -8.01303, 47.322, 27.941, 0.52 ) }
    dend_52 { pt3dadd( -8.15092, 47.7857, 28.5451, 0.66 ) }
    dend_52 { pt3dadd( -8.38238, 48.2001, 28.8758, 0.81 ) }
    dend_52 { pt3dadd( -8.7651, 48.7093, 29.2993, 0.96 ) }
    dend_52 { pt3dadd( -9.51151, 49.4817, 30.0264, 1.03 ) }
    dend_52 { pt3dadd( -10.1223, 49.971, 30.5913, 0.81 ) }
    dend_52 { pt3dadd( -10.6111, 50.2955, 31.0261, 0.81 ) }
    dend_52 { pt3dadd( -11.0759, 50.5715, 31.4422, 0.74 ) }
    dend_52 { pt3dadd( -11.7972, 51.0384, 32.1247, 0.88 ) }
    dend_52 { pt3dadd( -12.2316, 51.3824, 32.5788, 0.88 ) }
    dend_52 { pt3dadd( -12.7989, 52.0077, 33.3009, 0.74 ) }
    dend_52 { pt3dadd( -13.0219, 52.4027, 33.7064, 0.74 ) }
    dend_52 { pt3dadd( -13.181, 52.89, 34.1412, 0.59 ) }
    dend_52 { pt3dadd( -13.2848, 53.6985, 34.7894, 0.96 ) }
    dend_52 { pt3dadd( -13.2713, 54.4285, 35.3043, 0.96 ) }
    dend_52 { pt3dadd( -13.1432, 55.284, 35.9267, 0.96 ) }
    dend_52 { pt3dadd( -12.8871, 56.2424, 36.6329, 0.66 ) }
    dend_52 { pt3dadd( -12.658, 56.9121, 37.1349, 0.59 ) }
    dend_52 { pt3dadd( -12.4176, 57.596, 37.6368, 0.59 ) }
    dend_52 { pt3dadd( -12.2524, 58.1675, 38.0396, 0.74 ) }
    dend_52 { pt3dadd( -12.0295, 59.38, 38.7943, 0.81 ) }
    dend_52 { pt3dadd( -11.9951, 60.0259, 39.1186, 0.81 ) }
    dend_52 { pt3dadd( -12.0673, 61.0721, 39.514, 0.81 ) }
    dend_52 { pt3dadd( -12.1961, 62.0754, 39.8025, 0.81 ) }
    dend_52 { pt3dadd( -12.3599, 63.1378, 40.0347, 0.74 ) }
    dend_52 { pt3dadd( -12.5267, 64.2268, 40.2405, 0.74 ) }
    dend_52 { pt3dadd( -12.729, 65.6598, 40.5046, 0.66 ) }
    dend_52 { pt3dadd( -12.8698, 67.0478, 40.8273, 0.66 ) }
    dend_52 { pt3dadd( -12.9667, 68.3481, 41.1549, 0.66 ) }
    dend_52 { pt3dadd( -12.9784, 69.1384, 41.377, 0.81 ) }
    dend_52 { pt3dadd( -12.9283, 70.0256, 41.6561, 0.81 ) }
    dend_52 { pt3dadd( -12.799, 71.0316, 42.0223, 1.11 ) }
    dend_52 { pt3dadd( -12.5684, 71.9645, 42.4801, 1.11 ) }
    dend_52 { pt3dadd( -12.2237, 78.4911, 50.0487, 1.11 ) }
    dend_52 { pt3dadd( -12.9884, 85.7202, 56.9157, 1.11 ) }
    dend_52 { pt3dadd( -12.8208, 91.5858, 65.013, 1.11 ) }
    dend_52 { pt3dadd( -11.7438, 95.482, 74.1596, 1.11 ) }
    dend_52 { pt3dadd( -10.3965, 98.4932, 83.5998, 1.11 ) }
    dend_52 { pt3dadd( -8.11846, 102.049, 92.6642, 1.11 ) }
    dend_52 { pt3dadd( -5.01101, 107.101, 100.716, 1.11 ) }
    dend_52 { pt3dadd( -0.997402, 111.331, 108.839, 1.11 ) }
    dend_52 { pt3dadd( 2.58167, 116.433, 116.66, 1.11 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 50/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -11.2373, 46.6101, 18.3574, 0.59 ) }
    dend_51 { pt3dadd( -12.3585, 47.0876, 18.4393, 0.59 ) }
    dend_51 { pt3dadd( -13.0923, 47.3542, 18.4913, 0.59 ) }
    dend_51 { pt3dadd( -13.809, 47.6005, 18.5426, 0.81 ) }
    dend_51 { pt3dadd( -14.4932, 47.8584, 18.5859, 0.81 ) }
    dend_51 { pt3dadd( -15.3554, 48.2197, 18.6359, 0.44 ) }
    dend_51 { pt3dadd( -16.3766, 48.695, 18.6911, 0.66 ) }
    dend_51 { pt3dadd( -16.9599, 48.9684, 18.7289, 0.81 ) }
    dend_51 { pt3dadd( -17.5906, 49.3222, 18.7654, 0.81 ) }
    dend_51 { pt3dadd( -18.3823, 49.8997, 18.7989, 0.29 ) }
    dend_51 { pt3dadd( -18.7435, 50.2365, 18.7862, 0.29 ) }
    dend_51 { pt3dadd( -19.0684, 50.6061, 18.7438, 0.44 ) }
    dend_51 { pt3dadd( -19.4069, 51.0509, 18.6719, 0.66 ) }
    dend_51 { pt3dadd( -19.9419, 51.813, 18.523, 0.22 ) }
    dend_51 { pt3dadd( -20.6779, 52.9101, 18.2533, 0.22 ) }
    dend_51 { pt3dadd( -21.2617, 53.7659, 18.0152, 0.22 ) }
    dend_51 { pt3dadd( -21.7744, 54.4881, 17.7982, 0.81 ) }
    dend_51 { pt3dadd( -22.1285, 54.9821, 17.6413, 1.11 ) }
    dend_51 { pt3dadd( -22.5944, 55.6501, 17.4253, 1.03 ) }
    dend_51 { pt3dadd( -23.1183, 56.4161, 17.1796, 0.22 ) }
    dend_51 { pt3dadd( -23.7156, 57.2943, 16.923, 0.22 ) }
    dend_51 { pt3dadd( -23.9303, 57.6038, 16.8522, 0.44 ) }
    dend_51 { pt3dadd( -24.3559, 58.2439, 16.7351, 0.22 ) }
    dend_51 { pt3dadd( -24.7364, 58.8506, 16.6495, 0.59 ) }
    dend_51 { pt3dadd( -24.984, 59.3286, 16.6149, 0.81 ) }
    dend_51 { pt3dadd( -25.2349, 59.959, 16.5941, 0.29 ) }
    dend_51 { pt3dadd( -25.4391, 60.6104, 16.5909, 0.29 ) }
    dend_51 { pt3dadd( -25.7257, 61.689, 16.6153, 1.25 ) }
    dend_51 { pt3dadd( -25.7741, 61.9041, 16.6292, 1.4 ) }
    dend_51 { pt3dadd( -26.0674, 63.4035, 16.7525, 0.44 ) }
    dend_51 { pt3dadd( -26.205, 64.1446, 16.8195, 0.74 ) }
    dend_51 { pt3dadd( -26.3017, 64.6656, 16.8642, 0.96 ) }
    dend_51 { pt3dadd( -26.4574, 65.4252, 16.925, 0.29 ) }
    dend_51 { pt3dadd( -26.6339, 66.1966, 16.9785, 0.22 ) }
    dend_51 { pt3dadd( -26.9148, 67.3302, 17.0543, 1.33 ) }
    dend_51 { pt3dadd( -27.0909, 67.9796, 17.0965, 1.33 ) }
    dend_51 { pt3dadd( -27.4225, 69.1804, 17.1663, 0.29 ) }
    dend_51 { pt3dadd( -27.7329, 70.3217, 17.2287, 0.29 ) }
    dend_51 { pt3dadd( -27.9518, 71.1142, 17.2674, 0.29 ) }
    dend_51 { pt3dadd( -28.113, 71.7168, 17.2937, 0.52 ) }
    dend_51 { pt3dadd( -28.2772, 72.407, 17.3337, 0.29 ) }
    dend_51 { pt3dadd( -28.4153, 73.1261, 17.3834, 0.52 ) }
    dend_51 { pt3dadd( -28.4561, 73.4462, 17.4003, 0.59 ) }
    dend_51 { pt3dadd( -28.4963, 74.3972, 17.4197, 0.37 ) }
    dend_51 { pt3dadd( -28.4274, 75.651, 17.406, 0.96 ) }
    dend_51 { pt3dadd( -28.3589, 76.0258, 17.3969, 1.47 ) }
    dend_51 { pt3dadd( -28.2064, 76.4798, 17.4036, 1.18 ) }
    dend_51 { pt3dadd( -27.8353, 77.2388, 17.4748, 0.81 ) }
    dend_51 { pt3dadd( -27.4608, 77.8575, 17.5914, 0.29 ) }
    dend_51 { pt3dadd( -27.1585, 78.3299, 17.7272, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_51 { pt3dadd( -26.7813, 79.0322, 17.9764, 0.22 ) }
    dend_51 { pt3dadd( -26.5629, 79.665, 18.2123, 0.22 ) }
    dend_51 { pt3dadd( -26.4266, 80.4093, 18.5026, 1.03 ) }
    dend_51 { pt3dadd( -26.3949, 80.9841, 18.7365, 1.25 ) }
    dend_51 { pt3dadd( -26.4524, 82.09, 19.1476, 0.29 ) }
    dend_51 { pt3dadd( -26.58, 83.0763, 19.4566, 0.29 ) }
    dend_51 { pt3dadd( -26.7358, 83.9337, 19.6735, 0.66 ) }
    dend_51 { pt3dadd( -26.8624, 84.5401, 19.8069, 0.74 ) }
    dend_51 { pt3dadd( -26.9832, 85.0604, 19.9184, 0.52 ) }
    dend_51 { pt3dadd( -27.1076, 85.6046, 20.041, 0.29 ) }
    dend_51 { pt3dadd( -27.2838, 86.6086, 20.2921, 1.11 ) }
    dend_51 { pt3dadd( -27.3503, 87.1826, 20.4329, 1.33 ) }
    dend_51 { pt3dadd( -27.4361, 88.133, 20.6582, 0.74 ) }
    dend_51 { pt3dadd( -27.4899, 88.7533, 20.8111, 0.29 ) }
    dend_51 { pt3dadd( -27.535, 89.326, 20.9639, 0.29 ) }
    dend_51 { pt3dadd( -27.5881, 90.069, 21.199, 0.29 ) }
    dend_51 { pt3dadd( -27.6283, 90.595, 21.3897, 0.52 ) }
    dend_51 { pt3dadd( -27.6629, 91.0139, 21.571, 0.52 ) }
    dend_51 { pt3dadd( -27.7292, 91.6901, 21.89, 0.29 ) }
    dend_51 { pt3dadd( -27.7874, 92.2495, 22.1865, 0.59 ) }
    dend_51 { pt3dadd( -27.8504, 92.8171, 22.5203, 0.81 ) }
    dend_51 { pt3dadd( -27.903, 93.2923, 22.8108, 1.03 ) }
    dend_51 { pt3dadd( -27.9979, 94.1438, 23.3193, 0.59 ) }
    dend_51 { pt3dadd( -28.0854, 94.8909, 23.7585, 0.29 ) }
    dend_51 { pt3dadd( -28.1868, 95.7414, 24.2327, 0.22 ) }
    dend_51 { pt3dadd( -28.264, 96.3028, 24.5288, 0.22 ) }
    dend_51 { pt3dadd( -28.3909, 97.1672, 24.9506, 0.22 ) }
    dend_51 { pt3dadd( -28.5499, 98.1316, 25.3788, 0.22 ) }
    dend_51 { pt3dadd( -28.7012, 98.9395, 25.6613, 0.66 ) }
    dend_51 { pt3dadd( -28.8218, 99.5418, 25.8223, 0.96 ) }
    dend_51 { pt3dadd( -28.9632, 100.157, 25.9245, 0.96 ) }
    dend_51 { pt3dadd( -29.0743, 100.611, 25.9477, 0.96 ) }
    dend_51 { pt3dadd( -29.2428, 101.279, 25.884, 0.52 ) }
    dend_51 { pt3dadd( -29.4898, 102.3, 25.6589, 0.22 ) }
    dend_51 { pt3dadd( -29.6252, 102.836, 25.4965, 0.22 ) }
    dend_51 { pt3dadd( -29.7288, 103.219, 25.3699, 0.88 ) }
    dend_51 { pt3dadd( -29.8952, 103.795, 25.1767, 1.03 ) }
    dend_51 { pt3dadd( -30.2423, 104.853, 24.817, 0.44 ) }
    dend_51 { pt3dadd( -30.4358, 105.388, 24.6557, 0.29 ) }
    dend_51 { pt3dadd( -30.644, 105.909, 24.537, 0.29 ) }
    dend_51 { pt3dadd( -30.8595, 106.419, 24.4495, 0.66 ) }
    dend_51 { pt3dadd( -31.081, 106.927, 24.4062, 0.66 ) }
    dend_51 { pt3dadd( -31.4, 107.641, 24.408, 0.22 ) }
    dend_51 { pt3dadd( -31.6775, 108.26, 24.4446, 0.22 ) }
    dend_51 { pt3dadd( -31.8849, 108.735, 24.4827, 0.74 ) }
    dend_51 { pt3dadd( -32.1209, 109.279, 24.5268, 0.74 ) }
    dend_51 { pt3dadd( -32.5768, 110.344, 24.5861, 0.22 ) }
    dend_51 { pt3dadd( -32.7816, 110.862, 24.6396, 0.22 ) }
    dend_51 { pt3dadd( -33.0572, 111.626, 24.7315, 0.74 ) }
    dend_51 { pt3dadd( -33.2018, 112.054, 24.7714, 0.81 ) }
    dend_51 { pt3dadd( -33.5185, 113.082, 24.8252, 0.22 ) }
    dend_51 { pt3dadd( -33.7753, 113.981, 24.838, 0.22 ) }
    dend_51 { pt3dadd( -34.1389, 115.353, 24.797, 0.22 ) }
    dend_51 { pt3dadd( -34.2942, 115.946, 24.7749, 0.66 ) }
    dend_51 { pt3dadd( -34.4341, 116.46, 24.7388, 0.66 ) }
    dend_51 { pt3dadd( -34.6948, 117.363, 24.6464, 0.37 ) }
    dend_51 { pt3dadd( -34.8358, 117.823, 24.5871, 0.37 ) }
    dend_51 { pt3dadd( -35.1914, 118.834, 24.4076, 0.96 ) }
    dend_51 { pt3dadd( -35.4709, 119.516, 24.2372, 1.18 ) }
    dend_51 { pt3dadd( -35.8088, 120.265, 24.0449, 1.25 ) }
    dend_51 { pt3dadd( -36.1137, 120.91, 23.8782, 0.52 ) }
    dend_51 { pt3dadd( -36.3623, 121.418, 23.7407, 0.37 ) }
    dend_51 { pt3dadd( -36.6141, 121.948, 23.5752, 0.29 ) }
    dend_51 { pt3dadd( -36.8971, 122.604, 23.35, 0.22 ) }
    dend_51 { pt3dadd( -37.0685, 123.102, 23.1609, 0.22 ) }
    dend_51 { pt3dadd( -37.2813, 123.867, 22.8763, 0.66 ) }
    dend_51 { pt3dadd( -37.3601, 124.196, 22.7507, 0.81 ) }
    dend_51 { pt3dadd( -37.4861, 124.81, 22.5201, 0.81 ) }
    dend_51 { pt3dadd( -37.6773, 125.957, 22.118, 0.29 ) }
    dend_51 { pt3dadd( -37.8494, 127.454, 21.5779, 0.59 ) }
    dend_51 { pt3dadd( -37.8973, 128.102, 21.3486, 0.59 ) }
    dend_51 { pt3dadd( -37.9243, 128.665, 21.1521, 0.59 ) }
    dend_51 { pt3dadd( -37.9451, 129.239, 20.9684, 0.59 ) }
    dend_51 { pt3dadd( -37.9638, 129.878, 20.7939, 0.22 ) }
    dend_51 { pt3dadd( -37.9778, 130.821, 20.5939, 0.22 ) }
    dend_51 { pt3dadd( -37.982, 131.848, 20.4555, 0.74 ) }
    dend_51 { pt3dadd( -37.98, 132.425, 20.3904, 0.74 ) }
    dend_51 { pt3dadd( -37.9789, 133.058, 20.3338, 0.74 ) }
    dend_51 { pt3dadd( -37.9912, 133.978, 20.2663, 0.29 ) }
    dend_51 { pt3dadd( -38.0144, 135.116, 20.2166, 0.29 ) }
    dend_51 { pt3dadd( -38.0309, 135.858, 20.2142, 0.74 ) }
    dend_51 { pt3dadd( -38.0302, 136.633, 20.2165, 0.96 ) }
    dend_51 { pt3dadd( -38.0203, 137.078, 20.2172, 1.18 ) }
    dend_51 { pt3dadd( -37.9848, 137.831, 20.2201, 0.88 ) }
    dend_51 { pt3dadd( -37.9376, 138.691, 20.2247, 0.22 ) }
    dend_51 { pt3dadd( -37.9047, 139.706, 20.2561, 0.59 ) }
    dend_51 { pt3dadd( -37.9067, 140.159, 20.2861, 0.59 ) }
    dend_51 { pt3dadd( -37.9149, 140.43, 20.3149, 0.59 ) }
    dend_51 { pt3dadd( -37.9707, 141.443, 20.4481, 0.22 ) }
    dend_51 { pt3dadd( -37.9907, 141.709, 20.4857, 0.22 ) }
    dend_51 { pt3dadd( -38.1402, 143.019, 20.6568, 0.22 ) }
    dend_51 { pt3dadd( -38.2637, 143.837, 20.7593, 0.88 ) }
    dend_51 { pt3dadd( -38.3532, 144.332, 20.8163, 0.88 ) }
    dend_51 { pt3dadd( -38.4665, 144.874, 20.8723, 0.66 ) }
    dend_51 { pt3dadd( -38.8113, 146.217, 20.9835, 0.22 ) }
    dend_51 { pt3dadd( -39.0977, 147.215, 21.0391, 0.59 ) }
    dend_51 { pt3dadd( -39.2863, 147.771, 21.0457, 0.74 ) }
    dend_51 { pt3dadd( -39.5541, 148.474, 21.0398, 0.59 ) }
    dend_51 { pt3dadd( -39.7717, 149.005, 21.0197, 0.44 ) }
    dend_51 { pt3dadd( -40.0755, 149.719, 20.954, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_51 { pt3dadd( -40.2766, 150.137, 20.8913, 1.03 ) }
    dend_51 { pt3dadd( -40.4827, 150.567, 20.8099, 1.18 ) }
    dend_51 { pt3dadd( -40.5882, 150.796, 20.7607, 1.18 ) }
    dend_51 { pt3dadd( -40.8573, 151.394, 20.6207, 0.66 ) }
    dend_51 { pt3dadd( -41.3516, 152.606, 20.3531, 0.29 ) }
    dend_51 { pt3dadd( -41.624, 153.419, 20.1977, 0.29 ) }
    dend_51 { pt3dadd( -41.849, 154.24, 20.0683, 0.74 ) }
    dend_51 { pt3dadd( -41.9906, 154.958, 19.9554, 0.74 ) }
    dend_51 { pt3dadd( -42.0198, 155.173, 19.9163, 0.74 ) }
    dend_51 { pt3dadd( -42.1167, 156.56, 19.6211, 0.29 ) }
    dend_51 { pt3dadd( -42.1086, 157.764, 19.2932, 0.29 ) }
    dend_51 { pt3dadd( -42.0617, 158.523, 19.039, 0.29 ) }
    dend_51 { pt3dadd( -41.9185, 160.067, 18.4601, 0.88 ) }
    dend_51 { pt3dadd( -41.8415, 160.791, 18.1647, 1.03 ) }
    dend_51 { pt3dadd( -41.7146, 162.001, 17.6377, 0.22 ) }
    dend_51 { pt3dadd( -41.5631, 163.389, 16.9821, 0.88 ) }
    dend_51 { pt3dadd( -41.5038, 163.988, 16.692, 1.03 ) }
    dend_51 { pt3dadd( -41.4206, 164.858, 16.3035, 0.52 ) }
    dend_51 { pt3dadd( -41.3522, 165.507, 16.0601, 0.52 ) }
    dend_51 { pt3dadd( -41.2877, 166.022, 15.9135, 0.88 ) }
    dend_51 { pt3dadd( -41.1855, 166.597, 15.7915, 0.88 ) }
    dend_51 { pt3dadd( -41.104, 166.96, 15.7365, 0.88 ) }
    dend_51 { pt3dadd( -40.8494, 167.879, 15.6117, 0.22 ) }
    dend_51 { pt3dadd( -40.6203, 168.57, 15.5177, 0.22 ) }
    dend_51 { pt3dadd( -40.2881, 169.555, 15.3934, 0.88 ) }
    dend_51 { pt3dadd( -40.0728, 170.218, 15.3138, 1.11 ) }
    dend_51 { pt3dadd( -39.9169, 170.742, 15.2597, 1.11 ) }
    dend_51 { pt3dadd( -39.7461, 171.378, 15.2043, 0.74 ) }
    dend_51 { pt3dadd( -39.4755, 172.528, 15.1267, 0.29 ) }
    dend_51 { pt3dadd( -39.2826, 173.519, 15.087, 0.29 ) }
    dend_51 { pt3dadd( -39.1432, 174.37, 15.0664, 0.29 ) }
    dend_51 { pt3dadd( -39.0217, 175.32, 15.0587, 0.74 ) }
    dend_51 { pt3dadd( -38.9574, 175.912, 15.0611, 0.74 ) }
    dend_51 { pt3dadd( -38.8861, 176.712, 15.0662, 0.44 ) }
    dend_51 { pt3dadd( -38.7634, 178.251, 15.0754, 1.11 ) }
    dend_51 { pt3dadd( -38.705, 179.053, 15.0801, 1.11 ) }
    dend_51 { pt3dadd( -38.6646, 179.886, 15.0767, 0.81 ) }
    dend_51 { pt3dadd( -38.6328, 180.978, 15.0875, 0.37 ) }
    dend_51 { pt3dadd( -38.6257, 181.941, 15.1166, 0.37 ) }
    dend_51 { pt3dadd( -38.6537, 182.831, 15.1708, 0.74 ) }
    dend_51 { pt3dadd( -38.7374, 183.794, 15.2569, 0.29 ) }
    dend_51 { pt3dadd( -38.8154, 184.355, 15.317, 0.29 ) }
    dend_51 { pt3dadd( -38.9666, 185.295, 15.4293, 0.74 ) }
    dend_51 { pt3dadd( -39.066, 185.87, 15.5039, 0.74 ) }
    dend_51 { pt3dadd( -39.2302, 186.98, 15.6566, 0.29 ) }
    dend_51 { pt3dadd( -39.349, 188.017, 15.8, 0.29 ) }
    dend_51 { pt3dadd( -39.4277, 189.149, 15.9423, 0.29 ) }
    dend_51 { pt3dadd( -39.4544, 190.251, 16.0215, 0.96 ) }
    dend_51 { pt3dadd( -39.4487, 190.848, 16.0335, 0.96 ) }
    dend_51 { pt3dadd( -39.4125, 191.679, 16.0219, 0.66 ) }
    dend_51 { pt3dadd( -39.3752, 192.211, 15.9814, 0.22 ) }
    dend_51 { pt3dadd( -39.2746, 193.368, 15.8277, 0.22 ) }
    dend_51 { pt3dadd( -39.1313, 195.05, 15.5275, 1.4 ) }
    dend_51 { pt3dadd( -39.1159, 195.349, 15.4604, 1.62 ) }
    dend_51 { pt3dadd( -39.1092, 195.843, 15.3276, 1.62 ) }
    dend_51 { pt3dadd( -39.1417, 197.263, 14.9128, 0.22 ) }
    dend_51 { pt3dadd( -39.1736, 197.929, 14.7045, 0.22 ) }
    dend_51 { pt3dadd( -39.2291, 198.838, 14.4209, 0.66 ) }
    dend_51 { pt3dadd( -39.2584, 199.343, 14.2761, 0.66 ) }
    dend_51 { pt3dadd( -39.2987, 200.307, 14.0177, 0.44 ) }
    dend_51 { pt3dadd( -39.34, 201.179, 13.8174, 0.81 ) }
    dend_51 { pt3dadd( -39.3846, 201.807, 13.7213, 0.81 ) }
    dend_51 { pt3dadd( -39.4761, 202.819, 13.6158, 0.22 ) }
    dend_51 { pt3dadd( -39.5449, 203.511, 13.588, 0.74 ) }
    dend_51 { pt3dadd( -39.6088, 204.191, 13.6403, 0.74 ) }
    dend_51 { pt3dadd( -39.7117, 205.343, 13.8883, 0.15 ) }
    dend_51 { pt3dadd( -39.7889, 206.158, 14.1701, 0.15 ) }
    dend_51 { pt3dadd( -39.8362, 206.702, 14.4024, 0.59 ) }
    dend_51 { pt3dadd( -39.8878, 207.359, 14.7127, 0.59 ) }
    dend_51 { pt3dadd( -39.9456, 208.354, 15.2034, 0.37 ) }
    dend_51 { pt3dadd( -39.9441, 209.385, 15.7056, 0.44 ) }
    dend_51 { pt3dadd( -39.8712, 210.227, 16.1025, 0.22 ) }
    dend_51 { pt3dadd( -39.7556, 210.973, 16.4389, 0.66 ) }
    dend_51 { pt3dadd( -39.6248, 211.625, 16.7441, 1.03 ) }
    dend_51 { pt3dadd( -39.5159, 212.034, 16.9257, 1.03 ) }
    dend_51 { pt3dadd( -39.2744, 212.726, 17.2209, 0.37 ) }
    dend_51 { pt3dadd( -39.0651, 213.203, 17.4487, 0.37 ) }
    dend_51 { pt3dadd( -38.5782, 214.171, 17.9929, 0.22 ) }
    dend_51 { pt3dadd( -38.2449, 214.813, 18.3996, 0.22 ) }
    dend_51 { pt3dadd( -37.9596, 215.399, 18.7839, 0.74 ) }
    dend_51 { pt3dadd( -37.7463, 215.938, 19.1262, 0.74 ) }
    dend_51 { pt3dadd( -37.5582, 216.564, 19.4882, 0.44 ) }
    dend_51 { pt3dadd( -37.3286, 217.567, 19.9698, 0.88 ) }
    dend_51 { pt3dadd( -37.2167, 218.184, 20.1861, 1.11 ) }
    dend_51 { pt3dadd( -37.0776, 219.109, 20.4329, 0.66 ) }
    dend_51 { pt3dadd( -36.9772, 219.964, 20.6139, 0.22 ) }
    dend_51 { pt3dadd( -36.8943, 220.766, 20.7349, 0.22 ) }
    dend_51 { pt3dadd( -36.8011, 221.723, 20.8227, 0.44 ) }
    dend_51 { pt3dadd( -36.6372, 223.365, 20.8975, 0.22 ) }
    dend_51 { pt3dadd( -36.5249, 224.231, 20.9226, 0.44 ) }
    dend_51 { pt3dadd( -36.4647, 224.598, 20.9252, 0.44 ) }
    dend_51 { pt3dadd( -36.3162, 225.323, 20.9243, 0.22 ) }
    dend_51 { pt3dadd( -36.1531, 226.121, 20.916, 0.22 ) }
    dend_51 { pt3dadd( -36.0316, 226.772, 20.9023, 0.44 ) }
    dend_51 { pt3dadd( -35.9722, 227.18, 20.898, 0.22 ) }
    dend_51 { pt3dadd( -39.3743, 236.345, 23.0039, 0.22 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 96/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 42.119, 140.789, 5.36954, 0.44 ) }
    dend_48 { pt3dadd( 42.593, 141.957, 5.38502, 0.44 ) }
    dend_48 { pt3dadd( 43.1103, 143.243, 5.44838, 0.37 ) }
    dend_48 { pt3dadd( 43.5998, 144.391, 5.57503, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_48 { pt3dadd( 43.7495, 144.746, 5.655, 1.55 ) }
    dend_48 { pt3dadd( 44.0399, 145.464, 5.86634, 0.96 ) }
    dend_48 { pt3dadd( 44.4446, 146.44, 6.18987, 0.22 ) }
    dend_48 { pt3dadd( 44.8544, 147.319, 6.59281, 0.22 ) }
    dend_48 { pt3dadd( 45.2223, 148.101, 6.9979, 0.22 ) }
    dend_48 { pt3dadd( 46.0953, 149.915, 8.03761, 0.22 ) }
    dend_48 { pt3dadd( 46.543, 150.814, 8.59146, 0.44 ) }
    dend_48 { pt3dadd( 46.8635, 151.418, 9.00096, 0.37 ) }
    dend_48 { pt3dadd( 47.52, 152.608, 9.87716, 0.29 ) }
    dend_48 { pt3dadd( 51.7288, 161.536, 11.4806, 0.29 ) }
    dend_48 { pt3dadd( 55.433, 170.311, 14.529, 0.29 ) }
    dend_48 { pt3dadd( 58.06, 179.771, 16.4241, 0.29 ) }
    dend_48 { pt3dadd( 62.8457, 188.318, 18.4378, 0.29 ) }
    dend_48 { pt3dadd( 68.2656, 196.3, 21.0652, 0.29 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 14/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 42.119, 140.789, 5.36954, 0.29 ) }
    dend_47 { pt3dadd( 41.017, 141.04, 5.24929, 0.29 ) }
    dend_47 { pt3dadd( 40.6678, 141.125, 5.21465, 0.44 ) }
    dend_47 { pt3dadd( 40.3748, 141.196, 5.18891, 0.44 ) }
    dend_47 { pt3dadd( 39.3767, 141.422, 5.10837, 0.22 ) }
    dend_47 { pt3dadd( 38.5954, 141.599, 5.04533, 0.22 ) }
    dend_47 { pt3dadd( 38.01, 141.731, 4.99809, 0.22 ) }
    dend_47 { pt3dadd( 36.9849, 141.974, 4.91327, 0.22 ) }
    dend_47 { pt3dadd( 36.3367, 142.104, 4.86567, 0.52 ) }
    dend_47 { pt3dadd( 36.0352, 142.153, 4.84975, 0.52 ) }
    dend_47 { pt3dadd( 26.9274, 145.96, 3.25183, 0.52 ) }
    // Section: dend_45, id: dend_45, parent: dend_37 (entry count 25/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 30.5944, 41.2429, -0.589474, 0.52 ) }
    dend_45 { pt3dadd( 31.6689, 41.4375, -1.87951, 0.52 ) }
    dend_45 { pt3dadd( 32.433, 41.5564, -2.72196, 0.44 ) }
    dend_45 { pt3dadd( 32.9698, 41.6345, -3.21988, 0.59 ) }
    dend_45 { pt3dadd( 33.4883, 41.7142, -3.65457, 0.81 ) }
    dend_45 { pt3dadd( 34.2813, 41.8458, -4.35626, 0.81 ) }
    dend_45 { pt3dadd( 34.8113, 41.9332, -4.8343, 0.66 ) }
    dend_45 { pt3dadd( 35.4404, 42.046, -5.36531, 0.37 ) }
    dend_45 { pt3dadd( 36.3192, 42.187, -6.07128, 0.37 ) }
    dend_45 { pt3dadd( 36.9767, 42.296, -6.56909, 0.88 ) }
    dend_45 { pt3dadd( 38.672, 42.5563, -7.8021, 1.03 ) }
    dend_45 { pt3dadd( 39.4426, 42.6675, -8.31821, 1.11 ) }
    dend_45 { pt3dadd( 39.8934, 42.7203, -8.60618, 1.25 ) }
    dend_45 { pt3dadd( 40.521, 42.7762, -9.00051, 0.96 ) }
    dend_45 { pt3dadd( 41.2781, 42.8383, -9.45027, 0.37 ) }
    dend_45 { pt3dadd( 42.4855, 42.9308, -10.038, 0.29 ) }
    dend_45 { pt3dadd( 43.115, 42.9851, -10.261, 0.66 ) }
    dend_45 { pt3dadd( 43.7223, 43.0317, -10.456, 0.66 ) }
    dend_45 { pt3dadd( 44.2469, 43.0622, -10.6361, 0.66 ) }
    dend_45 { pt3dadd( 44.8856, 43.1073, -10.8619, 0.22 ) }
    dend_45 { pt3dadd( 45.3853, 43.1491, -11.0322, 0.22 ) }
    dend_45 { pt3dadd( 46.1349, 43.212, -11.265, 0.96 ) }
    dend_45 { pt3dadd( 46.8544, 43.2467, -11.4896, 1.4 ) }
    dend_45 { pt3dadd( 47.4885, 43.2491, -11.6865, 1.55 ) }
    dend_45 { pt3dadd( 48.062, 43.2186, -11.823, 0.88 ) }
    dend_45 { pt3dadd( 48.7492, 43.15, -11.9505, 0.44 ) }
    dend_45 { pt3dadd( 49.6107, 43.0585, -12.0668, 0.59 ) }
    dend_45 { pt3dadd( 50.2125, 42.996, -12.1165, 0.29 ) }
    dend_45 { pt3dadd( 51.1905, 42.9041, -12.1455, 0.29 ) }
    dend_45 { pt3dadd( 52.4892, 42.7625, -12.1089, 0.52 ) }
    dend_45 { pt3dadd( 53.0753, 42.6844, -12.0769, 1.11 ) }
    dend_45 { pt3dadd( 53.465, 42.6066, -12.0474, 1.11 ) }
    dend_45 { pt3dadd( 53.8979, 42.5001, -12.011, 1.11 ) }
    dend_45 { pt3dadd( 54.5577, 42.324, -11.9926, 0.96 ) }
    dend_45 { pt3dadd( 55.1941, 42.1402, -12.0166, 0.52 ) }
    dend_45 { pt3dadd( 55.6908, 41.9946, -12.0825, 0.29 ) }
    dend_45 { pt3dadd( 56.7419, 41.6799, -12.2531, 0.29 ) }
    dend_45 { pt3dadd( 57.3567, 41.502, -12.3811, 0.96 ) }
    dend_45 { pt3dadd( 58.049, 41.3202, -12.5597, 0.96 ) }
    dend_45 { pt3dadd( 58.499, 41.2154, -12.6932, 0.96 ) }
    dend_45 { pt3dadd( 58.9824, 41.1148, -12.8612, 0.59 ) }
    dend_45 { pt3dadd( 59.4174, 41.0273, -13.0364, 0.59 ) }
    dend_45 { pt3dadd( 60.5027, 40.8231, -13.5338, 0.22 ) }
    dend_45 { pt3dadd( 61.0824, 40.7176, -13.8406, 0.22 ) }
    dend_45 { pt3dadd( 61.4778, 40.6555, -14.0739, 0.96 ) }
    dend_45 { pt3dadd( 61.9163, 40.5976, -14.3526, 1.18 ) }
    dend_45 { pt3dadd( 62.9476, 40.4823, -15.0587, 0.44 ) }
    dend_45 { pt3dadd( 63.3797, 40.428, -15.3569, 0.44 ) }
    dend_45 { pt3dadd( 64.0491, 40.3349, -15.8855, 1.11 ) }
    dend_45 { pt3dadd( 64.6313, 40.2614, -16.3648, 1.33 ) }
    dend_45 { pt3dadd( 65.0999, 40.2076, -16.7291, 1.33 ) }
    dend_45 { pt3dadd( 65.6143, 40.1533, -17.1053, 1.03 ) }
    dend_45 { pt3dadd( 66.6544, 40.0499, -17.831, 0.22 ) }
    dend_45 { pt3dadd( 68.1066, 39.878, -18.7917, 0.88 ) }
    dend_45 { pt3dadd( 68.4997, 39.8166, -19.045, 1.11 ) }
    dend_45 { pt3dadd( 69.5157, 39.6374, -19.736, 0.22 ) }
    dend_45 { pt3dadd( 70.1013, 39.5313, -20.1468, 0.66 ) }
    dend_45 { pt3dadd( 70.6485, 39.4412, -20.5282, 0.81 ) }
    dend_45 { pt3dadd( 71.0828, 39.3761, -20.8419, 0.59 ) }
    dend_45 { pt3dadd( 72.004, 39.2347, -21.476, 0.29 ) }
    dend_45 { pt3dadd( 72.8293, 39.0999, -22.0885, 0.59 ) }
    dend_45 { pt3dadd( 73.2385, 39.0273, -22.3954, 0.59 ) }
    dend_45 { pt3dadd( 74.3709, 38.8218, -23.2057, 0.22 ) }
    dend_45 { pt3dadd( 75.1596, 38.6875, -23.7596, 0.22 ) }
    dend_45 { pt3dadd( 75.7696, 38.5934, -24.18, 1.25 ) }
    dend_45 { pt3dadd( 76.284, 38.5275, -24.5273, 1.25 ) }
    dend_45 { pt3dadd( 77.7566, 38.384, -25.4895, 0.22 ) }
    dend_45 { pt3dadd( 78.7718, 38.3009, -26.1638, 0.22 ) }
    dend_45 { pt3dadd( 79.5458, 38.2226, -26.6644, 0.52 ) }
    dend_45 { pt3dadd( 79.9994, 38.1682, -26.9355, 0.52 ) }
    dend_45 { pt3dadd( 80.3898, 38.1134, -27.1671, 0.52 ) }
    dend_45 { pt3dadd( 81.0176, 38.0131, -27.5249, 0.22 ) }
    dend_45 { pt3dadd( 81.7438, 37.8854, -27.9066, 0.22 ) }
    dend_45 { pt3dadd( 82.4016, 37.7428, -28.2344, 0.22 ) }
    dend_45 { pt3dadd( 83.2048, 37.5474, -28.6092, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_45 { pt3dadd( 83.84, 37.3817, -28.8948, 0.81 ) }
    dend_45 { pt3dadd( 84.9922, 37.0554, -29.3895, 0.15 ) }
    dend_45 { pt3dadd( 85.919, 36.7966, -29.7678, 0.22 ) }
    dend_45 { pt3dadd( 86.9855, 36.5252, -30.1931, 1.11 ) }
    dend_45 { pt3dadd( 87.7362, 36.3559, -30.4884, 1.55 ) }
    dend_45 { pt3dadd( 88.1809, 36.2594, -30.6567, 1.55 ) }
    dend_45 { pt3dadd( 88.8449, 36.1095, -30.8934, 0.96 ) }
    dend_45 { pt3dadd( 90.9934, 35.598, -31.6613, 0.22 ) }
    dend_45 { pt3dadd( 91.6173, 35.4412, -31.8908, 0.88 ) }
    dend_45 { pt3dadd( 92.022, 35.3373, -32.032, 1.03 ) }
    dend_45 { pt3dadd( 92.4152, 35.2304, -32.1749, 1.03 ) }
    dend_45 { pt3dadd( 93.9129, 34.8149, -32.7318, 0.22 ) }
    dend_45 { pt3dadd( 94.3936, 34.683, -32.9086, 0.52 ) }
    dend_45 { pt3dadd( 94.6744, 34.6025, -33.0085, 0.52 ) }
    dend_45 { pt3dadd( 95.4986, 34.3779, -33.2908, 0.22 ) }
    dend_45 { pt3dadd( 96.1384, 34.2192, -33.496, 0.74 ) }
    dend_45 { pt3dadd( 96.6733, 34.0969, -33.651, 0.74 ) }
    dend_45 { pt3dadd( 97.6666, 33.8888, -33.9086, 0.22 ) }
    dend_45 { pt3dadd( 98.169, 33.7745, -34.0368, 0.44 ) }
    dend_45 { pt3dadd( 98.6893, 33.6449, -34.1835, 0.44 ) }
    dend_45 { pt3dadd( 99.9318, 33.3602, -34.5457, 0.22 ) }
    dend_45 { pt3dadd( 100.609, 33.2212, -34.7457, 0.52 ) }
    dend_45 { pt3dadd( 101.403, 33.0658, -35.0001, 0.52 ) }
    dend_45 { pt3dadd( 102.167, 32.9247, -35.2824, 1.03 ) }
    dend_45 { pt3dadd( 102.612, 32.8489, -35.4544, 1.03 ) }
    dend_45 { pt3dadd( 103.995, 32.6424, -35.9868, 0.22 ) }
    dend_45 { pt3dadd( 104.716, 32.5494, -36.271, 0.81 ) }
    dend_45 { pt3dadd( 105.422, 32.4779, -36.5408, 1.03 ) }
    dend_45 { pt3dadd( 107.559, 32.3214, -37.3952, 0.22 ) }
    dend_45 { pt3dadd( 109.113, 32.2884, -38.0446, 0.22 ) }
    dend_45 { pt3dadd( 110.195, 32.2968, -38.5151, 0.88 ) }
    dend_45 { pt3dadd( 110.736, 32.3062, -38.7737, 1.4 ) }
    dend_45 { pt3dadd( 111.214, 32.3238, -39.0073, 0.96 ) }
    dend_45 { pt3dadd( 112.304, 32.3912, -39.5594, 0.66 ) }
    dend_45 { pt3dadd( 113.926, 32.5516, -40.4976, 0.22 ) }
    dend_45 { pt3dadd( 114.472, 32.6057, -40.8412, 0.22 ) }
    dend_45 { pt3dadd( 115.548, 32.69, -41.5546, 0.22 ) }
    dend_45 { pt3dadd( 116.28, 32.7318, -42.0472, 0.66 ) }
    dend_45 { pt3dadd( 116.825, 32.7462, -42.4208, 0.66 ) }
    dend_45 { pt3dadd( 118.564, 32.7401, -43.5795, 0.29 ) }
    dend_45 { pt3dadd( 119.322, 32.7137, -44.0981, 0.66 ) }
    dend_45 { pt3dadd( 119.839, 32.6963, -44.4587, 0.66 ) }
    dend_45 { pt3dadd( 120.823, 32.6697, -45.1639, 0.22 ) }
    dend_45 { pt3dadd( 121.476, 32.6422, -45.6514, 0.59 ) }
    dend_45 { pt3dadd( 122.153, 32.6016, -46.1645, 0.59 ) }
    dend_45 { pt3dadd( 123.194, 32.4978, -47.0368, 0.22 ) }
    dend_45 { pt3dadd( 124.142, 32.3812, -47.9044, 0.88 ) }
    dend_45 { pt3dadd( 124.6, 32.3072, -48.3214, 0.88 ) }
    dend_45 { pt3dadd( 125.569, 32.1175, -49.1979, 0.22 ) }
    dend_45 { pt3dadd( 126.301, 31.9574, -49.8602, 0.52 ) }
    dend_45 { pt3dadd( 127.827, 31.5876, -51.2095, 0.22 ) }
    dend_45 { pt3dadd( 128.731, 31.3593, -51.9598, 0.22 ) }
    dend_45 { pt3dadd( 130.038, 31.0275, -52.9554, 0.22 ) }
    dend_45 { pt3dadd( 130.413, 30.9359, -53.21, 0.44 ) }
    dend_45 { pt3dadd( 131.149, 30.7602, -53.6466, 0.44 ) }
    dend_45 { pt3dadd( 132.178, 30.5237, -54.1688, 0.88 ) }
    dend_45 { pt3dadd( 133.73, 30.1962, -54.8057, 0.22 ) }
    dend_45 { pt3dadd( 134.403, 30.0682, -55.0829, 0.44 ) }
    dend_45 { pt3dadd( 135.412, 29.9007, -55.5199, 0.22 ) }
    dend_45 { pt3dadd( 136.229, 29.7837, -55.8716, 0.44 ) }
    dend_45 { pt3dadd( 136.65, 29.7499, -56.0586, 0.44 ) }
    dend_45 { pt3dadd( 138.25, 29.7525, -56.7982, 0.22 ) }
    dend_45 { pt3dadd( 139.37, 29.853, -57.3396, 0.88 ) }
    dend_45 { pt3dadd( 139.621, 29.9134, -57.4752, 0.88 ) }
    dend_45 { pt3dadd( 140.144, 30.1443, -57.8032, 0.22 ) }
    dend_45 { pt3dadd( 141.326, 30.9568, -58.607, 0.22 ) }
    dend_45 { pt3dadd( 141.892, 31.44, -59.0184, 0.88 ) }
    dend_45 { pt3dadd( 142.26, 31.8198, -59.3037, 0.88 ) }
    dend_45 { pt3dadd( 143.264, 32.9045, -60.0596, 0.22 ) }
    dend_45 { pt3dadd( 143.979, 33.6885, -60.6087, 0.22 ) }
    dend_45 { pt3dadd( 145.354, 35.2099, -61.6944, 0.22 ) }
    dend_45 { pt3dadd( 145.976, 35.8516, -62.153, 0.96 ) }
    dend_45 { pt3dadd( 146.358, 36.2007, -62.4159, 0.96 ) }
    dend_45 { pt3dadd( 147.134, 36.8224, -62.908, 0.15 ) }
    dend_45 { pt3dadd( 147.864, 37.3017, -63.3067, 0.37 ) }
    dend_45 { pt3dadd( 148.281, 37.5373, -63.5183, 0.59 ) }
    dend_45 { pt3dadd( 149.892, 38.3196, -64.2923, 0.22 ) }
    dend_45 { pt3dadd( 150.542, 38.6196, -64.5865, 0.66 ) }
    dend_45 { pt3dadd( 151.025, 38.8227, -64.8049, 0.66 ) }
    dend_45 { pt3dadd( 152.24, 39.2879, -65.3807, 0.22 ) }
    dend_45 { pt3dadd( 153.142, 39.5899, -65.8205, 0.44 ) }
    dend_45 { pt3dadd( 153.6, 39.7056, -66.1295, 0.44 ) }
    dend_45 { pt3dadd( 154.222, 39.8218, -66.6911, 0.22 ) }
    dend_45 { pt3dadd( 154.833, 39.8963, -67.3224, 0.22 ) }
    dend_45 { pt3dadd( 155.336, 39.9194, -67.8943, 0.59 ) }
    dend_45 { pt3dadd( 155.7, 39.9271, -68.3656, 0.81 ) }
    dend_45 { pt3dadd( 157.52, 40.0055, -70.8962, 0.22 ) }
    dend_45 { pt3dadd( 158.116, 40.0407, -71.7285, 0.22 ) }
    dend_45 { pt3dadd( 158.704, 40.0733, -72.528, 0.22 ) }
    dend_45 { pt3dadd( 159.344, 40.1305, -73.3537, 0.22 ) }
    dend_45 { pt3dadd( 160.439, 40.2664, -74.6654, 1.03 ) }
    dend_45 { pt3dadd( 160.951, 40.351, -75.2197, 1.03 ) }
    dend_45 { pt3dadd( 162.157, 40.6039, -76.2906, 0.22 ) }
    dend_45 { pt3dadd( 162.887, 40.7721, -76.9529, 0.22 ) }
    dend_45 { pt3dadd( 163.546, 40.9672, -77.5738, 0.88 ) }
    dend_45 { pt3dadd( 163.767, 41.0467, -77.8012, 0.88 ) }
    dend_45 { pt3dadd( 164.408, 41.2772, -78.4595, 0.66 ) }
    dend_45 { pt3dadd( 165.099, 41.5448, -79.2079, 0.22 ) }
    dend_45 { pt3dadd( 166.486, 42.2324, -80.941, 0.81 ) }
    dend_45 { pt3dadd( 167.205, 42.638, -81.9201, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_45 { pt3dadd( 168.218, 43.231, -83.3991, 0.74 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 1/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 30.5944, 41.2429, -0.589474, 0.81 ) }
    dend_38 { pt3dadd( 31.8032, 42.3451, -0.474849, 0.81 ) }
    dend_38 { pt3dadd( 32.8096, 43.1222, -0.376396, 1.11 ) }
    dend_38 { pt3dadd( 33.6544, 43.6711, -0.298287, 1.03 ) }
    dend_38 { pt3dadd( 34.339, 44.0746, -0.244082, 0.59 ) }
    dend_38 { pt3dadd( 34.7545, 44.3066, -0.224657, 0.59 ) }
    dend_38 { pt3dadd( 35.5428, 44.7291, -0.221153, 0.52 ) }
    dend_38 { pt3dadd( 36.5248, 45.1398, -0.227625, 0.66 ) }
    dend_38 { pt3dadd( 37.2957, 45.3975, -0.246271, 1.03 ) }
    dend_38 { pt3dadd( 37.7533, 45.5352, -0.27141, 1.25 ) }
    dend_38 { pt3dadd( 38.5043, 45.7562, -0.343275, 0.96 ) }
    dend_38 { pt3dadd( 39.1207, 45.951, -0.446093, 0.81 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 13/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 111.867, -167.177, -23.7983, 0.52 ) }
    dend_22 { pt3dadd( 113.705, -169.163, -23.0618, 0.52 ) }
    dend_22 { pt3dadd( 114.287, -169.797, -22.8443, 0.52 ) }
    dend_22 { pt3dadd( 115.366, -170.996, -22.4436, 0.44 ) }
    dend_22 { pt3dadd( 116.054, -171.744, -22.2073, 0.44 ) }
    dend_22 { pt3dadd( 117.75, -173.531, -21.6721, 0.44 ) }
    dend_22 { pt3dadd( 118.595, -174.43, -21.4379, 0.44 ) }
    dend_22 { pt3dadd( 119.364, -175.255, -21.3013, 0.44 ) }
    dend_22 { pt3dadd( 120.341, -176.315, -21.1386, 0.44 ) }
    dend_22 { pt3dadd( 121.429, -177.545, -20.9711, 0.44 ) }
    dend_22 { pt3dadd( 122.224, -178.466, -20.8629, 0.44 ) }
    dend_22 { pt3dadd( 124.051, -180.638, -20.6202, 0.44 ) }
    dend_22 { pt3dadd( 124.743, -181.465, -20.5084, 0.44 ) }
    dend_22 { pt3dadd( 126.456, -183.518, -20.2092, 0.44 ) }
    dend_22 { pt3dadd( 128.245, -185.625, -19.8685, 0.44 ) }
    dend_22 { pt3dadd( 128.846, -186.319, -19.7379, 0.44 ) }
    dend_22 { pt3dadd( 129.923, -187.522, -19.4982, 0.44 ) }
    dend_22 { pt3dadd( 130.982, -188.631, -19.2667, 0.44 ) }
    dend_22 { pt3dadd( 132.039, -189.69, -19.0607, 0.44 ) }
    dend_22 { pt3dadd( 132.906, -190.534, -18.9167, 0.44 ) }
    dend_22 { pt3dadd( 134.525, -192.169, -18.689, 0.44 ) }
    dend_22 { pt3dadd( 135.025, -192.742, -18.6355, 0.44 ) }
    dend_22 { pt3dadd( 136.025, -194.058, -18.6107, 0.44 ) }
    dend_22 { pt3dadd( 136.991, -195.488, -18.6457, 0.37 ) }
    dend_22 { pt3dadd( 137.901, -197.02, -18.731, 0.37 ) }
    dend_22 { pt3dadd( 138.554, -198.273, -18.836, 0.37 ) }
    dend_22 { pt3dadd( 139.91, -201.296, -19.0998, 0.37 ) }
    dend_22 { pt3dadd( 140.724, -203.317, -19.2765, 0.37 ) }
    dend_22 { pt3dadd( 141.262, -204.767, -19.4201, 0.37 ) }
    dend_22 { pt3dadd( 141.773, -206.267, -19.5913, 0.37 ) }
    dend_22 { pt3dadd( 142.25, -207.748, -19.789, 0.37 ) }
    dend_22 { pt3dadd( 142.918, -209.909, -20.1066, 0.37 ) }
    dend_22 { pt3dadd( 143.194, -211.006, -20.2774, 0.37 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 46/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 111.867, -167.177, -23.7983, 0.52 ) }
    dend_21 { pt3dadd( 112.053, -167.999, -24.0393, 0.52 ) }
    dend_21 { pt3dadd( 112.522, -169.678, -24.5052, 0.52 ) }
    dend_21 { pt3dadd( 112.908, -170.969, -24.8616, 0.52 ) }
    dend_21 { pt3dadd( 113.409, -172.422, -25.305, 0.52 ) }
    dend_21 { pt3dadd( 113.695, -173.171, -25.5512, 0.52 ) }
    dend_21 { pt3dadd( 113.969, -173.781, -25.7443, 0.52 ) }
    dend_21 { pt3dadd( 114.577, -174.939, -26.1079, 0.52 ) }
    dend_21 { pt3dadd( 115.043, -175.752, -26.3417, 0.52 ) }
    dend_21 { pt3dadd( 115.839, -177.137, -26.7109, 0.52 ) }
    dend_21 { pt3dadd( 116.307, -178.03, -26.9524, 0.52 ) }
    dend_21 { pt3dadd( 117.433, -180.345, -27.565, 0.52 ) }
    dend_21 { pt3dadd( 117.844, -181.25, -27.8017, 0.52 ) }
    dend_21 { pt3dadd( 118.656, -183.138, -28.2811, 0.52 ) }
    dend_21 { pt3dadd( 119.308, -184.686, -28.6899, 0.52 ) }
    dend_21 { pt3dadd( 120.41, -187.49, -29.4708, 0.52 ) }
    dend_21 { pt3dadd( 121.166, -189.549, -30.0823, 0.52 ) }
    dend_21 { pt3dadd( 121.525, -190.633, -30.4225, 0.52 ) }
    dend_21 { pt3dadd( 122.24, -192.721, -31.097, 0.52 ) }
    dend_21 { pt3dadd( 122.749, -194.116, -31.5839, 0.52 ) }
    dend_21 { pt3dadd( 123.236, -195.278, -32.0383, 0.52 ) }
    dend_21 { pt3dadd( 123.831, -196.486, -32.4822, 0.52 ) }
    dend_21 { pt3dadd( 124.767, -198.085, -33.0034, 0.52 ) }
    dend_21 { pt3dadd( 125.751, -199.498, -33.3835, 0.52 ) }
    dend_21 { pt3dadd( 126.64, -200.623, -33.611, 0.52 ) }
    dend_21 { pt3dadd( 127.859, -202.094, -33.7889, 0.52 ) }
    dend_21 { pt3dadd( 129.678, -204.162, -33.9039, 0.52 ) }
    dend_21 { pt3dadd( 131.62, -206.27, -33.9236, 0.52 ) }
    dend_21 { pt3dadd( 133.453, -208.198, -33.8604, 0.52 ) }
    dend_21 { pt3dadd( 134.626, -209.372, -33.7653, 0.52 ) }
    dend_21 { pt3dadd( 138.247, -212.892, -33.3665, 0.52 ) }
    dend_21 { pt3dadd( 139.254, -213.838, -33.2617, 0.52 ) }
    dend_21 { pt3dadd( 140.92, -215.335, -33.1122, 0.52 ) }
    dend_21 { pt3dadd( 142.473, -216.701, -32.9653, 0.52 ) }
    dend_21 { pt3dadd( 145.747, -219.491, -32.6512, 0.52 ) }
    dend_21 { pt3dadd( 147.291, -220.729, -32.5093, 0.52 ) }
    dend_21 { pt3dadd( 149.609, -222.381, -32.3303, 0.52 ) }
    dend_21 { pt3dadd( 150.657, -223.132, -32.2856, 0.52 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 84/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 6.90457, -50.0175, -18.8245, 0.66 ) }
    dend_19 { pt3dadd( 6.68754, -51.0569, -20.5813, 0.66 ) }
    dend_19 { pt3dadd( 6.42525, -52.1638, -22.1128, 0.66 ) }
    dend_19 { pt3dadd( 6.00824, -53.9747, -24.0884, 0.66 ) }
    dend_19 { pt3dadd( 5.74116, -55.3078, -25.2888, 0.66 ) }
    dend_19 { pt3dadd( 5.62843, -55.961, -25.8113, 0.66 ) }
    dend_19 { pt3dadd( 5.41775, -57.472, -26.9413, 0.66 ) }
    dend_19 { pt3dadd( 5.27976, -58.9587, -27.8435, 0.66 ) }
    dend_19 { pt3dadd( 5.18488, -60.8093, -28.7192, 0.66 ) }
    dend_19 { pt3dadd( 5.16903, -62.4731, -29.412, 0.66 ) }
    dend_19 { pt3dadd( 5.23756, -64.1528, -30.1309, 0.66 ) }
    dend_19 { pt3dadd( 5.3553, -65.7981, -30.8871, 0.66 ) }
    dend_19 { pt3dadd( 5.46278, -66.9659, -31.4436, 0.66 ) }
    dend_19 { pt3dadd( 5.60017, -68.4852, -32.2843, 0.59 ) }
    dend_19 { pt3dadd( 5.72305, -70.0966, -33.3106, 0.59 ) }
    dend_19 { pt3dadd( 5.78272, -71.2616, -34.0782, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_19 { pt3dadd( 5.81105, -72.2736, -34.7549, 0.59 ) }
    dend_19 { pt3dadd( 5.84245, -74.0859, -35.9471, 0.59 ) }
    dend_19 { pt3dadd( 5.86368, -77.0761, -38.007, 0.59 ) }
    dend_19 { pt3dadd( 5.8881, -78.3952, -38.9686, 0.59 ) }
    dend_19 { pt3dadd( 5.94798, -79.3974, -39.6796, 0.59 ) }
    dend_19 { pt3dadd( 6.08647, -80.774, -40.6541, 0.59 ) }
    dend_19 { pt3dadd( 6.28201, -81.9681, -41.5271, 0.59 ) }
    dend_19 { pt3dadd( 6.77574, -84.189, -43.1919, 0.59 ) }
    dend_19 { pt3dadd( 7.31845, -86.1095, -44.494, 0.59 ) }
    dend_19 { pt3dadd( 7.64474, -87.1157, -45.1773, 0.59 ) }
    dend_19 { pt3dadd( 7.83945, -87.6152, -45.5076, 0.59 ) }
    dend_19 { pt3dadd( 8.40055, -88.8161, -46.2248, 0.59 ) }
    dend_19 { pt3dadd( 9.23313, -90.2999, -46.9916, 0.59 ) }
    dend_19 { pt3dadd( 10.2411, -91.8231, -47.6171, 0.59 ) }
    dend_19 { pt3dadd( 11.0797, -93.0226, -48.0935, 0.59 ) }
    dend_19 { pt3dadd( 12.1942, -94.5824, -48.7284, 0.59 ) }
    dend_19 { pt3dadd( 13.123, -95.9313, -49.2517, 0.59 ) }
    dend_19 { pt3dadd( 14.5488, -98.1164, -50.0028, 0.59 ) }
    dend_19 { pt3dadd( 16.1527, -100.671, -50.8916, 0.52 ) }
    dend_19 { pt3dadd( 16.9672, -102.038, -51.3837, 0.52 ) }
    dend_19 { pt3dadd( 17.3587, -102.767, -51.6526, 0.44 ) }
    dend_19 { pt3dadd( 18.8414, -105.913, -53.0476, 0.44 ) }
    dend_19 { pt3dadd( 19.7874, -108.124, -54.1474, 0.44 ) }
    dend_19 { pt3dadd( 21.0023, -111.209, -55.7769, 0.44 ) }
    dend_19 { pt3dadd( 21.3038, -112.015, -56.2038, 0.44 ) }
    dend_19 { pt3dadd( 22.7491, -115.923, -58.2982, 0.44 ) }
    dend_19 { pt3dadd( 23.9963, -119.309, -60.2515, 0.44 ) }
    dend_19 { pt3dadd( 24.7812, -121.433, -61.5466, 0.44 ) }
    dend_19 { pt3dadd( 25.3961, -123.094, -62.5558, 0.44 ) }
    dend_19 { pt3dadd( 26.0611, -124.941, -63.5891, 0.44 ) }
    dend_19 { pt3dadd( 26.3534, -125.734, -63.9937, 0.44 ) }
    dend_19 { pt3dadd( 26.899, -127.167, -64.6334, 0.44 ) }
    dend_19 { pt3dadd( 27.5415, -128.721, -65.2439, 0.44 ) }
    dend_19 { pt3dadd( 28.2927, -130.397, -66.001, 0.44 ) }
    dend_19 { pt3dadd( 28.7965, -131.384, -66.567, 0.44 ) }
    dend_19 { pt3dadd( 29.3452, -132.349, -67.207, 0.44 ) }
    dend_19 { pt3dadd( 30.2879, -133.89, -68.3338, 0.44 ) }
    dend_19 { pt3dadd( 31.158, -135.231, -69.3929, 0.44 ) }
    dend_19 { pt3dadd( 31.8664, -136.234, -70.2881, 0.44 ) }
    dend_19 { pt3dadd( 32.7705, -137.364, -71.3205, 0.44 ) }
    dend_19 { pt3dadd( 33.5405, -138.266, -72.0972, 0.44 ) }
    dend_19 { pt3dadd( 34.5035, -139.475, -72.9718, 0.44 ) }
    dend_19 { pt3dadd( 34.9508, -140.11, -73.3308, 0.44 ) }
    dend_19 { pt3dadd( 35.6141, -141.201, -73.8227, 0.44 ) }
    dend_19 { pt3dadd( 36.6397, -143.087, -74.6002, 0.44 ) }
    dend_19 { pt3dadd( 37.0281, -143.897, -74.9127, 0.44 ) }
    dend_19 { pt3dadd( 37.9073, -145.988, -75.7934, 0.44 ) }
    dend_19 { pt3dadd( 38.3345, -147.173, -76.3306, 0.44 ) }
    dend_19 { pt3dadd( 38.5433, -147.864, -76.6805, 0.44 ) }
    dend_19 { pt3dadd( 38.8679, -149.155, -77.3671, 0.44 ) }
    dend_19 { pt3dadd( 39.007, -149.726, -77.668, 0.44 ) }
    dend_19 { pt3dadd( 39.3817, -150.95, -78.2722, 0.44 ) }
    dend_19 { pt3dadd( 39.8936, -152.442, -78.9319, 0.44 ) }
    dend_19 { pt3dadd( 40.0708, -152.963, -79.1513, 0.44 ) }
    dend_19 { pt3dadd( 40.4455, -154.187, -79.6505, 0.44 ) }
    dend_19 { pt3dadd( 40.9547, -156.038, -80.3703, 0.44 ) }
    dend_19 { pt3dadd( 41.2085, -157.065, -80.7793, 0.44 ) }
    dend_19 { pt3dadd( 42.1245, -161.063, -82.443, 0.44 ) }
    dend_19 { pt3dadd( 42.4984, -162.925, -83.223, 0.44 ) }
    dend_19 { pt3dadd( 42.8197, -164.691, -83.9855, 0.44 ) }
    dend_19 { pt3dadd( 43.2802, -167.309, -85.2044, 0.44 ) }
    dend_19 { pt3dadd( 43.5278, -168.695, -85.8832, 0.44 ) }
    dend_19 { pt3dadd( 43.9812, -170.815, -86.9257, 0.44 ) }
    dend_19 { pt3dadd( 44.5373, -172.783, -87.8663, 0.44 ) }
    dend_19 { pt3dadd( 45.2456, -174.789, -88.8076, 0.44 ) }
    dend_19 { pt3dadd( 46.2061, -177.027, -89.8239, 0.44 ) }
    dend_19 { pt3dadd( 47.0301, -178.641, -90.5199, 0.44 ) }
    dend_19 { pt3dadd( 48.1151, -180.431, -91.2599, 0.44 ) }
    dend_19 { pt3dadd( 49.2232, -182.033, -91.8876, 0.44 ) }
    dend_19 { pt3dadd( 49.9063, -182.937, -92.2481, 0.44 ) }
    dend_19 { pt3dadd( 50.908, -184.252, -92.7247, 0.44 ) }
    dend_19 { pt3dadd( 51.9542, -185.797, -93.2008, 0.44 ) }
    dend_19 { pt3dadd( 52.6822, -187.073, -93.6108, 0.44 ) }
    dend_19 { pt3dadd( 53.426, -188.831, -94.1298, 0.44 ) }
    dend_19 { pt3dadd( 54.036, -190.731, -94.6003, 0.44 ) }
    dend_19 { pt3dadd( 54.3225, -191.85, -94.8237, 0.44 ) }
    dend_19 { pt3dadd( 54.893, -194.49, -95.2688, 0.44 ) }
    dend_19 { pt3dadd( 55.326, -196.815, -95.6216, 0.44 ) }
    dend_19 { pt3dadd( 56.1431, -201.379, -96.3327, 0.44 ) }
    dend_19 { pt3dadd( 56.9969, -205.456, -96.9969, 0.44 ) }
    dend_19 { pt3dadd( 57.9447, -209.031, -97.5933, 0.44 ) }
    dend_19 { pt3dadd( 58.5175, -210.837, -97.9066, 0.44 ) }
    dend_19 { pt3dadd( 59.2733, -212.892, -98.2824, 0.44 ) }
    dend_19 { pt3dadd( 60.1105, -214.981, -98.7026, 0.44 ) }
    dend_19 { pt3dadd( 61.3978, -218.01, -99.4523, 0.44 ) }
    dend_19 { pt3dadd( 62.9192, -221.476, -100.41, 0.44 ) }
    dend_19 { pt3dadd( 63.6001, -223.084, -100.849, 0.44 ) }
    dend_19 { pt3dadd( 64.7144, -226.262, -101.605, 0.44 ) }
    dend_19 { pt3dadd( 65.3574, -228.598, -102.063, 0.44 ) }
    dend_19 { pt3dadd( 65.7932, -230.84, -102.42, 0.44 ) }
    dend_19 { pt3dadd( 66.0027, -232.428, -102.661, 0.44 ) }
    dend_19 { pt3dadd( 66.2618, -235.631, -103.123, 0.44 ) }
    dend_19 { pt3dadd( 66.4891, -239.68, -103.649, 0.44 ) }
    dend_19 { pt3dadd( 66.5532, -242.023, -103.865, 0.44 ) }
    dend_19 { pt3dadd( 66.5646, -243.771, -103.956, 0.44 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 95/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 6.90457, -50.0175, -18.8245, 0.59 ) }
    dend_18 { pt3dadd( 8.70211, -51.1061, -19.682, 0.59 ) }
    dend_18 { pt3dadd( 9.11592, -51.3677, -19.892, 0.59 ) }
    dend_18 { pt3dadd( 9.9515, -51.8588, -20.294, 0.52 ) }
    dend_18 { pt3dadd( 10.7755, -52.3167, -20.6371, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_18 { pt3dadd( 11.4603, -52.6899, -20.8871, 0.52 ) }
    dend_18 { pt3dadd( 12.7032, -53.3328, -21.2833, 0.44 ) }
    dend_18 { pt3dadd( 13.9432, -53.9549, -21.5746, 0.44 ) }
    dend_18 { pt3dadd( 15.0588, -54.5294, -21.8056, 0.44 ) }
    dend_18 { pt3dadd( 16.4396, -55.3154, -22.0985, 0.44 ) }
    dend_18 { pt3dadd( 18.0354, -56.2853, -22.4205, 0.44 ) }
    dend_18 { pt3dadd( 19.3356, -57.1484, -22.6885, 0.44 ) }
    dend_18 { pt3dadd( 20.386, -57.9304, -22.9195, 0.44 ) }
    dend_18 { pt3dadd( 21.6059, -58.9304, -23.1773, 0.44 ) }
    dend_18 { pt3dadd( 22.7812, -59.9837, -23.4585, 0.44 ) }
    dend_18 { pt3dadd( 23.5926, -60.7792, -23.6885, 0.44 ) }
    dend_18 { pt3dadd( 24.2671, -61.4837, -23.9094, 0.44 ) }
    dend_18 { pt3dadd( 25.0809, -62.3973, -24.2181, 0.44 ) }
    dend_18 { pt3dadd( 25.8064, -63.2408, -24.5068, 0.44 ) }
    dend_18 { pt3dadd( 26.3885, -63.8972, -24.741, 0.44 ) }
    dend_18 { pt3dadd( 27.4025, -64.9801, -25.1228, 0.44 ) }
    dend_18 { pt3dadd( 28.5165, -66.15, -25.5707, 0.44 ) }
    dend_18 { pt3dadd( 29.5044, -67.2139, -25.9918, 0.44 ) }
    dend_18 { pt3dadd( 30.2542, -68.0747, -26.3491, 0.44 ) }
    dend_18 { pt3dadd( 31.3296, -69.3318, -26.9028, 0.44 ) }
    dend_18 { pt3dadd( 32.2867, -70.447, -27.4021, 0.44 ) }
    dend_18 { pt3dadd( 33.2649, -71.5388, -27.9161, 0.44 ) }
    dend_18 { pt3dadd( 34.1437, -72.4901, -28.3799, 0.44 ) }
    dend_18 { pt3dadd( 35.1252, -73.5254, -28.9253, 0.44 ) }
    dend_18 { pt3dadd( 36.315, -74.7502, -29.6352, 0.44 ) }
    dend_18 { pt3dadd( 36.9897, -75.4359, -30.0596, 0.44 ) }
    dend_18 { pt3dadd( 38.0886, -76.4858, -30.7227, 0.44 ) }
    dend_18 { pt3dadd( 39.5573, -77.8234, -31.5401, 0.44 ) }
    dend_18 { pt3dadd( 41.2246, -79.3113, -32.3853, 0.44 ) }
    dend_18 { pt3dadd( 42.2316, -80.2041, -32.8862, 0.44 ) }
    dend_18 { pt3dadd( 43.7074, -81.5547, -33.6418, 0.44 ) }
    dend_18 { pt3dadd( 45.6986, -83.4024, -34.6413, 0.44 ) }
    dend_18 { pt3dadd( 46.7258, -84.3695, -35.1529, 0.44 ) }
    dend_18 { pt3dadd( 48.0867, -85.686, -35.8485, 0.44 ) }
    dend_18 { pt3dadd( 48.9108, -86.5411, -36.2836, 0.44 ) }
    dend_18 { pt3dadd( 50.5404, -88.4257, -37.1998, 0.44 ) }
    dend_18 { pt3dadd( 51.3359, -89.4195, -37.6705, 0.44 ) }
    dend_18 { pt3dadd( 52.4124, -90.8106, -38.3764, 0.44 ) }
    dend_18 { pt3dadd( 53.8263, -92.6325, -39.3256, 0.44 ) }
    dend_18 { pt3dadd( 55.1345, -94.2947, -40.1849, 0.44 ) }
    dend_18 { pt3dadd( 55.8155, -95.1665, -40.5874, 0.44 ) }
    dend_18 { pt3dadd( 56.7809, -96.3774, -41.1212, 0.44 ) }
    dend_18 { pt3dadd( 58.1225, -98.0866, -41.7795, 0.44 ) }
    dend_18 { pt3dadd( 59.0677, -99.2977, -42.1698, 0.44 ) }
    dend_18 { pt3dadd( 59.7558, -100.163, -42.4075, 0.44 ) }
    dend_18 { pt3dadd( 61.0067, -101.745, -42.7862, 0.44 ) }
    dend_18 { pt3dadd( 63.0045, -104.322, -43.3397, 0.44 ) }
    dend_18 { pt3dadd( 65.2744, -107.338, -43.8959, 0.44 ) }
    dend_18 { pt3dadd( 66.0142, -108.325, -44.0551, 0.44 ) }
    dend_18 { pt3dadd( 68.5929, -111.653, -44.6208, 0.44 ) }
    dend_18 { pt3dadd( 69.8834, -113.235, -44.9184, 0.44 ) }
    dend_18 { pt3dadd( 70.2898, -113.702, -45.0157, 0.44 ) }
    dend_18 { pt3dadd( 71.1966, -114.635, -45.2203, 0.44 ) }
    dend_18 { pt3dadd( 72.4553, -115.74, -45.5647, 0.44 ) }
    dend_18 { pt3dadd( 73.3739, -116.474, -45.8169, 0.44 ) }
    dend_18 { pt3dadd( 75.1242, -117.745, -46.364, 0.44 ) }
    dend_18 { pt3dadd( 75.9909, -118.353, -46.6567, 0.44 ) }
    dend_18 { pt3dadd( 78.235, -119.805, -47.5162, 0.44 ) }
    dend_18 { pt3dadd( 80.1643, -120.958, -48.3082, 0.44 ) }
    dend_18 { pt3dadd( 82.8222, -122.401, -49.3841, 0.44 ) }
    dend_18 { pt3dadd( 85.7276, -123.833, -50.5313, 0.44 ) }
    dend_18 { pt3dadd( 87.9236, -124.784, -51.3707, 0.44 ) }
    dend_18 { pt3dadd( 92.8585, -126.628, -53.1788, 0.44 ) }
    dend_18 { pt3dadd( 94.8323, -127.263, -53.8781, 0.44 ) }
    dend_18 { pt3dadd( 97.3656, -127.976, -54.6233, 0.44 ) }
    dend_18 { pt3dadd( 99.2047, -128.41, -55.0514, 0.44 ) }
    dend_18 { pt3dadd( 101.35, -128.874, -55.3667, 0.44 ) }
    dend_18 { pt3dadd( 103.216, -129.282, -55.5293, 0.37 ) }
    dend_18 { pt3dadd( 105.135, -129.75, -55.6019, 0.37 ) }
    dend_18 { pt3dadd( 108.176, -130.591, -55.7183, 0.37 ) }
    dend_18 { pt3dadd( 110.791, -131.37, -55.9192, 0.37 ) }
    dend_18 { pt3dadd( 112.484, -131.901, -56.0664, 0.37 ) }
    dend_18 { pt3dadd( 115.07, -132.756, -56.3231, 0.37 ) }
    dend_18 { pt3dadd( 116.63, -133.286, -56.4992, 0.37 ) }
    dend_18 { pt3dadd( 119.083, -134.084, -56.8492, 0.37 ) }
    dend_18 { pt3dadd( 121.059, -134.706, -57.3596, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 76/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -23.422, -96.6834, 5.28893, 0.59 ) }
    dend_13 { pt3dadd( -23.3157, -97.7099, 5.07148, 0.59 ) }
    dend_13 { pt3dadd( -23.2655, -98.8849, 4.83476, 0.59 ) }
    dend_13 { pt3dadd( -23.2222, -99.7776, 4.60267, 0.59 ) }
    dend_13 { pt3dadd( -23.2039, -100.141, 4.49951, 0.59 ) }
    dend_13 { pt3dadd( -23.1194, -101.636, 4.07663, 0.59 ) }
    dend_13 { pt3dadd( -23.0847, -102.474, 3.84355, 0.59 ) }
    dend_13 { pt3dadd( -23.0823, -103.052, 3.67849, 0.59 ) }
    dend_13 { pt3dadd( -23.099, -104.294, 3.33609, 0.52 ) }
    dend_13 { pt3dadd( -23.13, -105.572, 2.95232, 0.52 ) }
    dend_13 { pt3dadd( -23.1878, -107.34, 2.3671, 0.52 ) }
    dend_13 { pt3dadd( -23.247, -108.499, 1.94225, 0.52 ) }
    dend_13 { pt3dadd( -23.3077, -109.087, 1.72086, 0.52 ) }
    dend_13 { pt3dadd( -23.4584, -109.935, 1.38314, 0.52 ) }
    dend_13 { pt3dadd( -23.6277, -110.505, 1.15535, 0.52 ) }
    dend_13 { pt3dadd( -23.9056, -111.165, 0.887047, 0.52 ) }
    dend_13 { pt3dadd( -24.0901, -111.529, 0.737605, 0.52 ) }
    dend_13 { pt3dadd( -24.4881, -112.362, 0.419816, 0.52 ) }
    dend_13 { pt3dadd( -24.7089, -112.812, 0.258163, 0.52 ) }
    dend_13 { pt3dadd( -25.0145, -113.442, 0.0532033, 0.52 ) }
    dend_13 { pt3dadd( -25.7088, -114.995, -0.377996, 0.52 ) }
    dend_13 { pt3dadd( -26.0105, -115.753, -0.55042, 0.52 ) }
    dend_13 { pt3dadd( -26.4143, -116.916, -0.787662, 0.52 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 99/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -23.422, -96.6834, 5.28893, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_12 { pt3dadd( -24.0949, -97.6993, 5.37001, 0.59 ) }
    dend_12 { pt3dadd( -24.6305, -98.5285, 5.46769, 0.59 ) }
    dend_12 { pt3dadd( -25.2866, -99.5546, 5.60033, 0.59 ) }
    dend_12 { pt3dadd( -25.961, -100.6, 5.71139, 0.59 ) }
    dend_12 { pt3dadd( -26.9748, -102.081, 5.91953, 0.59 ) }
    dend_12 { pt3dadd( -28.0654, -103.621, 6.16347, 0.59 ) }
    dend_12 { pt3dadd( -28.587, -104.345, 6.29524, 0.59 ) }
    dend_12 { pt3dadd( -29.195, -105.07, 6.45237, 0.59 ) }
    dend_12 { pt3dadd( -30.132, -106.055, 6.70634, 0.59 ) }
    dend_12 { pt3dadd( -31.3061, -107.173, 7.01384, 0.59 ) }
    dend_12 { pt3dadd( -32.2091, -107.979, 7.21392, 0.59 ) }
    dend_12 { pt3dadd( -33.0955, -108.766, 7.36619, 0.59 ) }
    dend_12 { pt3dadd( -34.7655, -110.314, 7.61321, 0.59 ) }
    dend_12 { pt3dadd( -35.6513, -111.16, 7.71852, 0.59 ) }
    dend_12 { pt3dadd( -36.5953, -112.119, 7.76554, 0.59 ) }
    dend_12 { pt3dadd( -37.7819, -113.429, 7.69742, 0.59 ) }
    dend_12 { pt3dadd( -38.4575, -114.208, 7.61955, 0.59 ) }
    dend_12 { pt3dadd( -39.5963, -115.58, 7.43028, 0.59 ) }
    dend_12 { pt3dadd( -40.5122, -116.719, 7.22397, 0.59 ) }
    dend_12 { pt3dadd( -41.608, -118.051, 6.94767, 0.59 ) }
    dend_12 { pt3dadd( -42.5465, -119.206, 6.69798, 0.59 ) }
    dend_12 { pt3dadd( -43.2411, -120.086, 6.5104, 0.59 ) }
    dend_12 { pt3dadd( -44.2586, -121.454, 6.22743, 0.59 ) }
    dend_12 { pt3dadd( -44.8404, -122.271, 6.07203, 0.59 ) }
    dend_12 { pt3dadd( -45.3817, -123.059, 5.94804, 0.59 ) }
    dend_12 { pt3dadd( -46.1392, -124.179, 5.83615, 0.59 ) }
    dend_12 { pt3dadd( -46.6676, -124.967, 5.78535, 0.59 ) }
    dend_12 { pt3dadd( -47.3587, -125.99, 5.75284, 0.59 ) }
    dend_12 { pt3dadd( -47.9919, -126.92, 5.75123, 0.59 ) }
    dend_12 { pt3dadd( -48.6971, -127.883, 5.77739, 0.59 ) }
    dend_12 { pt3dadd( -49.3538, -128.686, 5.81466, 0.59 ) }
    dend_12 { pt3dadd( -50.0826, -129.512, 5.86908, 0.59 ) }
    dend_12 { pt3dadd( -51.5561, -131.064, 5.98716, 0.59 ) }
    dend_12 { pt3dadd( -52.0342, -131.552, 6.02312, 0.59 ) }
    dend_12 { pt3dadd( -52.9978, -132.525, 6.07876, 0.59 ) }
    dend_12 { pt3dadd( -53.4804, -132.998, 6.09285, 0.59 ) }
    dend_12 { pt3dadd( -54.3698, -133.834, 6.09865, 0.59 ) }
    dend_12 { pt3dadd( -55.4492, -134.846, 6.08552, 0.59 ) }
    dend_12 { pt3dadd( -56.7553, -136.057, 6.04984, 0.59 ) }
    dend_12 { pt3dadd( -57.3551, -136.63, 6.03021, 0.59 ) }
    dend_12 { pt3dadd( -58.2291, -137.528, 6.00044, 0.59 ) }
    dend_12 { pt3dadd( -58.6666, -137.998, 5.98578, 0.59 ) }
    dend_12 { pt3dadd( -59.3506, -138.735, 5.97782, 0.59 ) }
    dend_12 { pt3dadd( -60.3776, -139.863, 5.98925, 0.59 ) }
    dend_12 { pt3dadd( -60.9332, -140.443, 6.02523, 0.59 ) }
    dend_12 { pt3dadd( -62.4543, -141.887, 6.17322, 0.59 ) }
    dend_12 { pt3dadd( -63.0929, -142.419, 6.24817, 0.59 ) }
    dend_12 { pt3dadd( -64.1673, -143.167, 6.37546, 0.59 ) }
    dend_12 { pt3dadd( -64.8448, -143.551, 6.45272, 0.59 ) }
    dend_12 { pt3dadd( -65.8031, -144.003, 6.56111, 0.59 ) }
    dend_12 { pt3dadd( -67.814, -144.845, 6.77075, 0.59 ) }
    dend_12 { pt3dadd( -68.968, -145.288, 6.87715, 0.59 ) }
    dend_12 { pt3dadd( -71.0802, -146.053, 7.03875, 0.59 ) }
    dend_12 { pt3dadd( -72.5864, -146.595, 7.12549, 0.59 ) }
    dend_12 { pt3dadd( -73.856, -147.02, 7.18201, 0.59 ) }
    dend_12 { pt3dadd( -74.9421, -147.383, 7.21355, 0.59 ) }
    dend_12 { pt3dadd( -76.2811, -147.819, 7.25132, 0.59 ) }
    dend_12 { pt3dadd( -77.4757, -148.224, 7.27065, 0.59 ) }
    dend_12 { pt3dadd( -78.8184, -148.698, 7.27174, 0.59 ) }
    dend_12 { pt3dadd( -80.353, -149.269, 7.28125, 0.59 ) }
    dend_12 { pt3dadd( -81.3202, -149.658, 7.28995, 0.59 ) }
    dend_12 { pt3dadd( -82.1639, -150.005, 7.30333, 0.59 ) }
    dend_12 { pt3dadd( -83.0777, -150.394, 7.3225, 0.59 ) }
    dend_12 { pt3dadd( -84.3351, -150.959, 7.34367, 0.59 ) }
    dend_12 { pt3dadd( -86.398, -151.935, 7.37986, 0.59 ) }
    dend_12 { pt3dadd( -88.1026, -152.787, 7.41117, 0.59 ) }
    dend_12 { pt3dadd( -89.1654, -153.337, 7.43242, 0.59 ) }
    dend_12 { pt3dadd( -90.1559, -153.896, 7.46232, 0.59 ) }
    dend_12 { pt3dadd( -91.1083, -154.458, 7.49861, 0.59 ) }
    dend_12 { pt3dadd( -92.3586, -155.209, 7.53614, 0.59 ) }
    dend_12 { pt3dadd( -94.26, -156.398, 7.58955, 0.59 ) }
    dend_12 { pt3dadd( -95.6885, -157.278, 7.63841, 0.59 ) }
    dend_12 { pt3dadd( -97.4861, -158.39, 7.70732, 0.59 ) }
    dend_12 { pt3dadd( -98.3707, -158.912, 7.74422, 0.59 ) }
    dend_12 { pt3dadd( -99.1131, -159.291, 7.77594, 0.59 ) }
    dend_12 { pt3dadd( -100.368, -159.825, 7.83243, 0.59 ) }
    dend_12 { pt3dadd( -102.221, -160.465, 7.9263, 0.59 ) }
    dend_12 { pt3dadd( -103.272, -160.734, 8.00697, 0.59 ) }
    dend_12 { pt3dadd( -104.155, -160.928, 8.10575, 0.59 ) }
    dend_12 { pt3dadd( -106.002, -161.38, 8.39231, 0.59 ) }
    dend_12 { pt3dadd( -106.889, -161.644, 8.56868, 0.59 ) }
    dend_12 { pt3dadd( -107.697, -161.937, 8.77954, 0.59 ) }
    dend_12 { pt3dadd( -108.802, -162.461, 9.16864, 0.59 ) }
    dend_12 { pt3dadd( -109.687, -162.98, 9.53527, 0.59 ) }
    dend_12 { pt3dadd( -110.4, -163.507, 9.85295, 0.59 ) }
    dend_12 { pt3dadd( -111.163, -164.16, 10.1962, 0.59 ) }
    dend_12 { pt3dadd( -112.005, -164.87, 10.5214, 0.59 ) }
    dend_12 { pt3dadd( -112.377, -165.178, 10.6394, 0.59 ) }
    dend_12 { pt3dadd( -113.329, -165.882, 10.8661, 0.59 ) }
    dend_12 { pt3dadd( -114.419, -166.577, 11.0744, 0.59 ) }
    dend_12 { pt3dadd( -115.454, -167.175, 11.2396, 0.59 ) }
    dend_12 { pt3dadd( -116.323, -167.619, 11.3535, 0.59 ) }
    dend_12 { pt3dadd( -117.471, -168.187, 11.4762, 0.59 ) }
    dend_12 { pt3dadd( -118.607, -168.754, 11.6038, 0.59 ) }
    dend_12 { pt3dadd( -119.357, -169.127, 11.6916, 0.59 ) }
    dend_12 { pt3dadd( -120.185, -169.551, 11.8022, 0.59 ) }
    dend_12 { pt3dadd( -121.406, -170.23, 11.9988, 0.59 ) }
    dend_12 { pt3dadd( -122.433, -170.873, 12.2004, 0.59 ) }
    dend_12 { pt3dadd( -123.345, -171.503, 12.4189, 0.59 ) }
    dend_12 { pt3dadd( -124.052, -172.07, 12.6153, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_12 { pt3dadd( -124.544, -172.505, 12.7997, 0.59 ) }
    dend_12 { pt3dadd( -125.185, -173.13, 13.1207, 0.59 ) }
    dend_12 { pt3dadd( -125.549, -173.538, 13.3639, 0.59 ) }
    dend_12 { pt3dadd( -125.874, -173.964, 13.7087, 0.59 ) }
    dend_12 { pt3dadd( -126.327, -174.691, 14.4135, 0.59 ) }
    dend_12 { pt3dadd( -126.768, -175.538, 15.3118, 0.59 ) }
    dend_12 { pt3dadd( -127.044, -176.101, 15.9541, 0.59 ) }
    dend_12 { pt3dadd( -127.236, -176.523, 16.4759, 0.59 ) }
    dend_12 { pt3dadd( -127.791, -177.855, 18.2474, 0.59 ) }
    dend_12 { pt3dadd( -127.875, -178.135, 18.6406, 0.59 ) }
    dend_12 { pt3dadd( -127.93, -178.548, 19.2632, 0.59 ) }
    dend_12 { pt3dadd( -135.641, -184.546, 21.3994, 0.59 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 12/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -0.920592, -78.9005, 8.40594, 0.74 ) }
    dend_8 { pt3dadd( -2.45635, -81.7545, 16.0174, 0.74 ) }
    dend_8 { pt3dadd( -2.55054, -81.9945, 16.4739, 0.66 ) }
    dend_8 { pt3dadd( -2.76652, -82.6024, 17.3898, 0.66 ) }
    dend_8 { pt3dadd( -3.01877, -83.2971, 18.2553, 0.66 ) }
    dend_8 { pt3dadd( -3.27694, -83.9866, 18.9787, 0.66 ) }
    dend_8 { pt3dadd( -3.60676, -84.846, 19.7821, 0.66 ) }
    dend_8 { pt3dadd( -3.9148, -85.7551, 20.0364, 0.66 ) }
    dend_8 { pt3dadd( -4.21261, -86.5706, 20.2844, 0.66 ) }
    dend_8 { pt3dadd( -4.52605, -87.3608, 20.5388, 0.66 ) }
    dend_8 { pt3dadd( -4.84613, -88.1052, 20.7467, 0.66 ) }
    dend_8 { pt3dadd( -5.07087, -88.6056, 20.8522, 0.66 ) }
    dend_8 { pt3dadd( -5.53745, -89.7156, 21.0029, 0.66 ) }
    dend_8 { pt3dadd( -5.74374, -90.2994, 21.0547, 0.66 ) }
    dend_8 { pt3dadd( -5.92574, -90.8392, 21.0767, 0.66 ) }
    dend_8 { pt3dadd( -6.4699, -92.2823, 21.1327, 0.66 ) }
    dend_8 { pt3dadd( -6.94674, -93.382, 21.1745, 0.66 ) }
    dend_8 { pt3dadd( -7.72176, -94.9394, 21.2303, 0.66 ) }
    dend_8 { pt3dadd( -8.34394, -96.0353, 21.3136, 0.66 ) }
    dend_8 { pt3dadd( -8.89857, -96.8998, 21.4136, 0.66 ) }
    dend_8 { pt3dadd( -9.77917, -98.1613, 21.6165, 0.66 ) }
    dend_8 { pt3dadd( -10.1419, -98.6472, 21.7206, 0.66 ) }
    dend_8 { pt3dadd( -10.7035, -99.3806, 21.9139, 0.66 ) }
    dend_8 { pt3dadd( -11.2587, -100.094, 22.1225, 0.66 ) }
    dend_8 { pt3dadd( -11.8697, -100.939, 22.3474, 0.66 ) }
    dend_8 { pt3dadd( -12.25, -101.542, 22.4721, 0.66 ) }
    dend_8 { pt3dadd( -12.5976, -102.184, 22.5657, 0.66 ) }
    dend_8 { pt3dadd( -12.8074, -102.569, 22.6009, 0.66 ) }
    dend_8 { pt3dadd( -13.2177, -103.314, 22.6395, 0.66 ) }
    dend_8 { pt3dadd( -13.8897, -104.505, 22.6574, 0.66 ) }
    dend_8 { pt3dadd( -14.4186, -105.458, 22.657, 0.66 ) }
    dend_8 { pt3dadd( -15.2295, -106.946, 22.6393, 0.66 ) }
    dend_8 { pt3dadd( -15.9099, -108.289, 22.6115, 0.66 ) }
    dend_8 { pt3dadd( -16.5846, -109.831, 22.6103, 0.66 ) }
    dend_8 { pt3dadd( -16.9937, -110.998, 22.6348, 0.66 ) }
    dend_8 { pt3dadd( -17.2422, -111.846, 22.6695, 0.66 ) }
    dend_8 { pt3dadd( -17.4448, -112.624, 22.7174, 0.66 ) }
    dend_8 { pt3dadd( -17.8008, -113.967, 22.8227, 0.66 ) }
    dend_8 { pt3dadd( -18.1915, -115.457, 22.9712, 0.66 ) }
    dend_8 { pt3dadd( -18.4823, -116.54, 23.0981, 0.66 ) }
    dend_8 { pt3dadd( -18.8079, -117.753, 23.2749, 0.52 ) }
    dend_8 { pt3dadd( -19.1435, -118.948, 23.4839, 0.52 ) }
    dend_8 { pt3dadd( -19.521, -120.227, 23.7449, 0.52 ) }
    dend_8 { pt3dadd( -19.8853, -121.38, 24.0061, 0.52 ) }
    dend_8 { pt3dadd( -20.3189, -122.672, 24.3018, 0.52 ) }
    dend_8 { pt3dadd( -20.8024, -124.133, 24.6588, 0.52 ) }
    dend_8 { pt3dadd( -21.2745, -125.596, 25.0359, 0.52 ) }
    dend_8 { pt3dadd( -21.6467, -126.838, 25.3614, 0.52 ) }
    dend_8 { pt3dadd( -21.9655, -127.997, 25.665, 0.52 ) }
    dend_8 { pt3dadd( -22.2489, -129.003, 25.9132, 0.52 ) }
    dend_8 { pt3dadd( -22.3901, -129.494, 26.0077, 0.52 ) }
    dend_8 { pt3dadd( -22.6593, -130.494, 26.1458, 0.52 ) }
    dend_8 { pt3dadd( -22.8815, -131.37, 26.2753, 0.52 ) }
    dend_8 { pt3dadd( -23.1115, -132.279, 26.3961, 0.52 ) }
    dend_8 { pt3dadd( -23.4053, -133.255, 26.5275, 0.52 ) }
    dend_8 { pt3dadd( -23.9128, -134.793, 26.7334, 0.52 ) }
    dend_8 { pt3dadd( -24.2246, -135.688, 26.8535, 0.52 ) }
    dend_8 { pt3dadd( -24.7887, -137.195, 27.0492, 0.52 ) }
    dend_8 { pt3dadd( -25.1994, -138.224, 27.1522, 0.52 ) }
    dend_8 { pt3dadd( -25.7026, -139.583, 27.2167, 0.52 ) }
    dend_8 { pt3dadd( -25.914, -140.226, 27.2178, 0.52 ) }
    dend_8 { pt3dadd( -26.2865, -141.435, 27.2045, 0.52 ) }
    dend_8 { pt3dadd( -26.6542, -142.647, 27.1781, 0.52 ) }
    dend_8 { pt3dadd( -26.9901, -143.799, 27.1494, 0.52 ) }
    dend_8 { pt3dadd( -27.4519, -145.387, 27.172, 0.52 ) }
    dend_8 { pt3dadd( -27.8082, -146.54, 27.2145, 0.52 ) }
    dend_8 { pt3dadd( -28.2752, -147.937, 27.2979, 0.52 ) }
    dend_8 { pt3dadd( -28.7167, -149.21, 27.4051, 0.52 ) }
    dend_8 { pt3dadd( -29.2106, -150.588, 27.5672, 0.52 ) }
    dend_8 { pt3dadd( -29.5591, -151.505, 27.7097, 0.52 ) }
    dend_8 { pt3dadd( -30.438, -153.733, 28.0999, 0.52 ) }
    dend_8 { pt3dadd( -30.9226, -154.961, 28.3246, 0.52 ) }
    dend_8 { pt3dadd( -31.2541, -155.834, 28.4836, 0.52 ) }
    dend_8 { pt3dadd( -31.5201, -156.532, 28.6207, 0.52 ) }
    dend_8 { pt3dadd( -31.8576, -157.398, 28.8055, 0.52 ) }
    dend_8 { pt3dadd( -32.6101, -159.288, 29.2333, 0.52 ) }
    dend_8 { pt3dadd( -33.2541, -160.819, 29.5856, 0.52 ) }
    dend_8 { pt3dadd( -33.7357, -161.841, 29.8072, 0.52 ) }
    dend_8 { pt3dadd( -34.1882, -162.774, 29.9863, 0.52 ) }
    dend_8 { pt3dadd( -34.5561, -163.569, 30.1176, 0.52 ) }
    dend_8 { pt3dadd( -34.8421, -164.243, 30.2094, 0.52 ) }
    dend_8 { pt3dadd( -35.2662, -165.425, 30.328, 0.52 ) }
    dend_8 { pt3dadd( -35.5355, -166.445, 30.3931, 0.52 ) }
    dend_8 { pt3dadd( -35.7484, -167.515, 30.4281, 0.52 ) }
    dend_8 { pt3dadd( -35.8592, -168.679, 30.4421, 0.52 ) }
    dend_8 { pt3dadd( -35.8737, -169.561, 30.4794, 0.52 ) }
    dend_8 { pt3dadd( -35.8203, -170.516, 30.5767, 0.52 ) }
    dend_8 { pt3dadd( -35.6397, -171.978, 30.8096, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_8 { pt3dadd( -35.4217, -173.326, 31.086, 0.52 ) }
    dend_8 { pt3dadd( -35.2321, -174.564, 31.4078, 0.52 ) }
    dend_8 { pt3dadd( -35.0279, -176.174, 31.9564, 0.52 ) }
    dend_8 { pt3dadd( -34.9587, -177.179, 32.3832, 0.52 ) }
    dend_8 { pt3dadd( -34.9607, -177.719, 32.7104, 0.52 ) }
    dend_8 { pt3dadd( -35.0275, -178.241, 33.1059, 0.52 ) }
    dend_8 { pt3dadd( -35.1206, -178.659, 33.4338, 0.52 ) }
    dend_8 { pt3dadd( -35.3098, -179.376, 33.98, 0.52 ) }
    dend_8 { pt3dadd( -35.4112, -179.869, 34.3194, 0.52 ) }
    dend_8 { pt3dadd( -35.4817, -181.367, 35.1103, 0.52 ) }
    dend_8 { pt3dadd( -35.4298, -182.34, 35.4813, 0.52 ) }
    dend_8 { pt3dadd( -35.2851, -183.995, 35.8474, 0.52 ) }
    dend_8 { pt3dadd( -35.1214, -185.562, 35.9766, 0.52 ) }
    dend_8 { pt3dadd( -35.0568, -186.129, 35.9982, 0.52 ) }
    dend_8 { pt3dadd( -34.8773, -188.139, 36.0656, 0.52 ) }
    dend_8 { pt3dadd( -34.7951, -189.259, 36.0958, 0.52 ) }
    dend_8 { pt3dadd( -34.6809, -191.369, 36.2326, 0.52 ) }
    dend_8 { pt3dadd( -34.6729, -192.796, 36.3237, 0.52 ) }
    dend_8 { pt3dadd( -34.7191, -194.099, 36.3947, 0.52 ) }
    dend_8 { pt3dadd( -34.8519, -196.077, 36.5779, 0.52 ) }
    dend_8 { pt3dadd( -34.9483, -197.006, 36.7291, 0.52 ) }
    dend_8 { pt3dadd( -34.9966, -197.725, 36.873, 0.52 ) }
    dend_8 { pt3dadd( -35.0591, -199.764, 37.4173, 0.52 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 23/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.920592, -78.9005, 8.40594, 0.88 ) }
    dend_3 { pt3dadd( -0.656951, -80.4644, 8.55609, 0.88 ) }
    dend_3 { pt3dadd( -0.511998, -82.3306, 8.64591, 0.88 ) }
    dend_3 { pt3dadd( -0.507881, -83.8373, 8.69858, 0.88 ) }
    dend_3 { pt3dadd( -0.530115, -84.8679, 8.72593, 0.88 ) }
    dend_3 { pt3dadd( -0.578071, -86.85, 8.80605, 0.88 ) }
    dend_3 { pt3dadd( -0.606638, -88.2924, 8.87495, 0.88 ) }
    dend_3 { pt3dadd( -0.723364, -90.3999, 8.93472, 0.88 ) }
    dend_3 { pt3dadd( -0.816359, -91.4195, 8.95836, 0.88 ) }
    dend_3 { pt3dadd( -0.952455, -92.6155, 8.99104, 0.88 ) }
    dend_3 { pt3dadd( -1.15652, -94.1843, 9.03875, 0.96 ) }
    dend_3 { pt3dadd( -1.2593, -95.0138, 9.07761, 0.96 ) }
    dend_3 { pt3dadd( -1.4122, -96.7405, 9.19777, 0.96 ) }
    dend_3 { pt3dadd( -1.50958, -98.2325, 9.32536, 0.96 ) }
    dend_3 { pt3dadd( -1.59676, -99.6166, 9.43547, 0.96 ) }
    dend_3 { pt3dadd( -1.75892, -101.18, 9.55176, 0.96 ) }
    dend_3 { pt3dadd( -1.96867, -102.99, 9.66347, 0.96 ) }
    dend_3 { pt3dadd( -2.18297, -104.755, 9.79417, 0.74 ) }
    dend_3 { pt3dadd( -2.3474, -106.133, 9.90858, 0.74 ) }
    dend_3 { pt3dadd( -2.5525, -107.864, 10.062, 0.74 ) }
    dend_3 { pt3dadd( -2.76709, -109.877, 10.2285, 0.74 ) }
    dend_3 { pt3dadd( -2.89157, -111.364, 10.3621, 0.74 ) }
    dend_3 { pt3dadd( -3.02634, -113.143, 10.5171, 0.74 ) }
    dend_3 { pt3dadd( -3.1143, -114.474, 10.6408, 0.74 ) }
    dend_3 { pt3dadd( -3.13752, -115.209, 10.719, 0.74 ) }
    dend_3 { pt3dadd( -3.14495, -116.454, 10.8826, 0.74 ) }
    dend_3 { pt3dadd( -3.11351, -117.838, 11.0853, 0.74 ) }
    dend_3 { pt3dadd( -3.07771, -119.588, 11.3495, 0.74 ) }
    dend_3 { pt3dadd( -3.04281, -120.874, 11.53, 0.74 ) }
    dend_3 { pt3dadd( -2.97723, -122.331, 11.7367, 0.74 ) }
    dend_3 { pt3dadd( -2.92246, -123.3, 11.8662, 0.74 ) }
    dend_3 { pt3dadd( -2.84503, -124.463, 12.0026, 0.74 ) }
    dend_3 { pt3dadd( -2.74324, -125.625, 12.1032, 0.74 ) }
    dend_3 { pt3dadd( -2.60589, -126.703, 12.1879, 0.74 ) }
    dend_3 { pt3dadd( -2.39017, -127.987, 12.2702, 0.74 ) }
    dend_3 { pt3dadd( -2.19494, -129.042, 12.3247, 0.74 ) }
    dend_3 { pt3dadd( -1.98664, -130.042, 12.3538, 0.74 ) }
    dend_3 { pt3dadd( -1.62949, -131.54, 12.4003, 0.74 ) }
    dend_3 { pt3dadd( -1.48717, -132.09, 12.4172, 0.74 ) }
    dend_3 { pt3dadd( -1.43205, -132.308, 12.4224, 0.74 ) }
    // Section: dend_44, id: dend_44, parent: dend_38 (entry count 63/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 39.1207, 45.951, -0.446093, 0.37 ) }
    dend_44 { pt3dadd( 39.7379, 46.4564, -1.67168, 0.37 ) }
    dend_44 { pt3dadd( 40.2568, 46.8881, -2.52167, 0.37 ) }
    dend_44 { pt3dadd( 41.0087, 47.5524, -3.60864, 0.74 ) }
    dend_44 { pt3dadd( 41.5033, 48.0163, -4.27657, 0.88 ) }
    dend_44 { pt3dadd( 41.9306, 48.4739, -4.81686, 0.88 ) }
    dend_44 { pt3dadd( 42.4427, 49.076, -5.46511, 0.22 ) }
    dend_44 { pt3dadd( 42.9121, 49.7029, -6.008, 0.22 ) }
    dend_44 { pt3dadd( 43.4864, 50.5368, -6.62042, 0.22 ) }
    dend_44 { pt3dadd( 44.0089, 51.3987, -7.14259, 0.22 ) }
    dend_44 { pt3dadd( 44.5959, 52.5052, -7.75981, 1.11 ) }
    dend_44 { pt3dadd( 44.8852, 53.1378, -8.08992, 1.47 ) }
    dend_44 { pt3dadd( 45.036, 53.5192, -8.29944, 1.47 ) }
    dend_44 { pt3dadd( 45.3638, 54.3963, -8.7882, 0.22 ) }
    dend_44 { pt3dadd( 45.5122, 54.7984, -9.00468, 0.59 ) }
    dend_44 { pt3dadd( 45.688, 55.2573, -9.25277, 0.59 ) }
    dend_44 { pt3dadd( 45.9799, 55.9172, -9.60856, 0.44 ) }
    dend_44 { pt3dadd( 46.3326, 56.6357, -9.95716, 0.88 ) }
    dend_44 { pt3dadd( 46.6917, 57.264, -10.2592, 0.88 ) }
    dend_44 { pt3dadd( 47.1377, 57.9765, -10.595, 0.29 ) }
    dend_44 { pt3dadd( 47.5433, 58.5678, -10.871, 0.29 ) }
    dend_44 { pt3dadd( 48.2476, 59.4773, -11.2822, 0.88 ) }
    dend_44 { pt3dadd( 48.5466, 59.8105, -11.4307, 1.18 ) }
    dend_44 { pt3dadd( 49.5249, 60.781, -11.8436, 0.37 ) }
    dend_44 { pt3dadd( 49.9638, 61.177, -12.0185, 0.37 ) }
    dend_44 { pt3dadd( 50.4169, 61.569, -12.1872, 0.96 ) }
    dend_44 { pt3dadd( 50.9884, 62.0547, -12.3922, 0.96 ) }
    dend_44 { pt3dadd( 51.5576, 62.5303, -12.5944, 0.96 ) }
    dend_44 { pt3dadd( 52.0351, 62.9349, -12.7607, 0.66 ) }
    dend_44 { pt3dadd( 52.8016, 63.6094, -13.0649, 0.22 ) }
    dend_44 { pt3dadd( 53.4349, 64.198, -13.3763, 0.22 ) }
    dend_44 { pt3dadd( 53.8869, 64.6477, -13.6453, 0.81 ) }
    dend_44 { pt3dadd( 54.117, 64.904, -13.8108, 1.03 ) }
    dend_44 { pt3dadd( 54.3415, 65.1792, -13.995, 1.03 ) }
    dend_44 { pt3dadd( 55.0993, 66.1472, -14.6417, 0.22 ) }
    dend_44 { pt3dadd( 55.5823, 66.7416, -15.0691, 0.88 ) }
    dend_44 { pt3dadd( 55.7962, 66.9927, -15.2604, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_44 { pt3dadd( 56.1219, 67.3607, -15.5668, 1.18 ) }
    dend_44 { pt3dadd( 56.6606, 67.9631, -16.0978, 0.22 ) }
    dend_44 { pt3dadd( 57.2532, 68.6364, -16.6958, 0.22 ) }
    dend_44 { pt3dadd( 57.6563, 69.1084, -17.1181, 0.22 ) }
    dend_44 { pt3dadd( 58.039, 69.6002, -17.5866, 0.96 ) }
    dend_44 { pt3dadd( 58.4603, 70.2129, -18.1814, 1.33 ) }
    dend_44 { pt3dadd( 58.9957, 71.1334, -19.0671, 0.52 ) }
    dend_44 { pt3dadd( 59.2587, 71.7727, -19.6666, 0.44 ) }
    dend_44 { pt3dadd( 59.462, 72.4911, -20.3162, 0.37 ) }
    dend_44 { pt3dadd( 59.6783, 73.4993, -21.1625, 0.96 ) }
    dend_44 { pt3dadd( 59.7833, 74.0504, -21.5794, 0.96 ) }
    dend_44 { pt3dadd( 59.9548, 74.997, -22.2005, 0.22 ) }
    dend_44 { pt3dadd( 60.2287, 76.5023, -23.0818, 1.11 ) }
    dend_44 { pt3dadd( 60.3324, 76.996, -23.3605, 1.33 ) }
    dend_44 { pt3dadd( 60.462, 77.5411, -23.6435, 0.37 ) }
    dend_44 { pt3dadd( 60.7795, 78.5655, -24.1466, 0.15 ) }
    dend_44 { pt3dadd( 60.9969, 79.1092, -24.4391, 0.96 ) }
    dend_44 { pt3dadd( 61.2597, 79.6206, -24.7315, 0.96 ) }
    dend_44 { pt3dadd( 61.8555, 80.5846, -25.3575, 0.22 ) }
    dend_44 { pt3dadd( 62.374, 81.3551, -25.8948, 0.59 ) }
    dend_44 { pt3dadd( 62.9446, 82.1501, -26.5146, 0.22 ) }
    dend_44 { pt3dadd( 63.4553, 82.8043, -27.0463, 0.22 ) }
    dend_44 { pt3dadd( 63.888, 83.3308, -27.4675, 0.59 ) }
    dend_44 { pt3dadd( 64.5398, 84.0704, -28.0216, 0.59 ) }
    dend_44 { pt3dadd( 65.284, 84.8599, -28.5444, 0.22 ) }
    dend_44 { pt3dadd( 65.8369, 85.4251, -28.931, 0.22 ) }
    dend_44 { pt3dadd( 66.4925, 86.0995, -29.4037, 0.88 ) }
    dend_44 { pt3dadd( 66.7317, 86.3511, -29.5903, 1.25 ) }
    dend_44 { pt3dadd( 67.7954, 87.487, -30.5405, 0.22 ) }
    dend_44 { pt3dadd( 68.2976, 88.0297, -31.0286, 0.22 ) }
    dend_44 { pt3dadd( 69.0413, 88.8707, -31.8966, 0.88 ) }
    dend_44 { pt3dadd( 69.3988, 89.3487, -32.4391, 1.03 ) }
    dend_44 { pt3dadd( 69.9933, 90.2937, -33.5929, 0.22 ) }
    dend_44 { pt3dadd( 70.3439, 90.9802, -34.4513, 0.22 ) }
    dend_44 { pt3dadd( 70.6329, 91.769, -35.4653, 1.33 ) }
    dend_44 { pt3dadd( 70.7827, 92.3515, -36.2147, 1.47 ) }
    dend_44 { pt3dadd( 70.9984, 93.7631, -38.009, 0.22 ) }
    dend_44 { pt3dadd( 71.0255, 94.2932, -38.7037, 0.22 ) }
    dend_44 { pt3dadd( 70.9906, 95.0032, -39.6505, 0.52 ) }
    dend_44 { pt3dadd( 70.9098, 95.6359, -40.5154, 0.52 ) }
    dend_44 { pt3dadd( 70.8307, 96.0833, -41.1329, 0.22 ) }
    dend_44 { pt3dadd( 70.6643, 97.0455, -42.4398, 0.59 ) }
    dend_44 { pt3dadd( 70.4987, 98.0799, -43.8102, 0.88 ) }
    dend_44 { pt3dadd( 70.4208, 98.5906, -44.4736, 0.88 ) }
    dend_44 { pt3dadd( 70.339, 99.3035, -45.3671, 0.59 ) }
    dend_44 { pt3dadd( 70.2963, 99.9541, -46.1439, 0.22 ) }
    dend_44 { pt3dadd( 70.2803, 100.993, -47.3307, 0.59 ) }
    dend_44 { pt3dadd( 70.2923, 101.528, -47.9209, 0.22 ) }
    dend_44 { pt3dadd( 70.3182, 102.008, -48.4491, 0.22 ) }
    dend_44 { pt3dadd( 70.4308, 103.026, -49.6413, 0.66 ) }
    dend_44 { pt3dadd( 70.5274, 103.637, -50.3705, 0.81 ) }
    dend_44 { pt3dadd( 70.6457, 104.262, -51.1486, 0.29 ) }
    dend_44 { pt3dadd( 70.8862, 105.256, -52.4174, 0.88 ) }
    dend_44 { pt3dadd( 70.9695, 105.546, -52.7969, 0.88 ) }
    dend_44 { pt3dadd( 71.3032, 106.481, -53.9958, 0.29 ) }
    dend_44 { pt3dadd( 71.4907, 106.903, -54.5295, 0.29 ) }
    dend_44 { pt3dadd( 71.8228, 107.538, -55.3113, 0.29 ) }
    dend_44 { pt3dadd( 72.2673, 108.313, -56.1616, 0.59 ) }
    dend_44 { pt3dadd( 72.4771, 108.681, -56.5287, 0.59 ) }
    dend_44 { pt3dadd( 72.9332, 109.558, -57.3166, 0.29 ) }
    dend_44 { pt3dadd( 73.286, 110.321, -57.8951, 0.52 ) }
    dend_44 { pt3dadd( 73.5144, 110.853, -58.2265, 0.52 ) }
    dend_44 { pt3dadd( 73.9534, 111.923, -58.783, 0.29 ) }
    dend_44 { pt3dadd( 74.9017, 114.223, -59.8354, 0.15 ) }
    dend_44 { pt3dadd( 75.2229, 114.975, -60.1702, 0.88 ) }
    dend_44 { pt3dadd( 75.6061, 115.86, -60.5757, 1.11 ) }
    dend_44 { pt3dadd( 76.2313, 117.251, -61.2544, 0.15 ) }
    dend_44 { pt3dadd( 76.8228, 118.486, -61.9359, 0.59 ) }
    dend_44 { pt3dadd( 77.6937, 120.12, -63.0068, 0.15 ) }
    dend_44 { pt3dadd( 78.2505, 121.063, -63.702, 0.66 ) }
    dend_44 { pt3dadd( 78.6939, 121.777, -64.3115, 0.66 ) }
    dend_44 { pt3dadd( 79.2582, 122.667, -65.1586, 0.22 ) }
    dend_44 { pt3dadd( 79.6521, 123.265, -65.7598, 0.22 ) }
    dend_44 { pt3dadd( 80.2747, 124.216, -66.6654, 0.59 ) }
    dend_44 { pt3dadd( 81.065, 125.431, -67.7409, 0.22 ) }
    dend_44 { pt3dadd( 81.4423, 126.015, -68.21, 0.52 ) }
    dend_44 { pt3dadd( 81.7057, 126.431, -68.5204, 0.52 ) }
    dend_44 { pt3dadd( 82.2384, 127.313, -69.1481, 0.22 ) }
    dend_44 { pt3dadd( 83.0019, 128.678, -70.0396, 0.22 ) }
    dend_44 { pt3dadd( 83.7383, 130.085, -70.9134, 1.03 ) }
    dend_44 { pt3dadd( 83.9596, 130.538, -71.1906, 1.03 ) }
    dend_44 { pt3dadd( 84.6197, 132.009, -72.0511, 0.15 ) }
    dend_44 { pt3dadd( 84.9422, 132.797, -72.4778, 0.15 ) }
    dend_44 { pt3dadd( 85.189, 133.485, -72.837, 0.81 ) }
    dend_44 { pt3dadd( 85.2972, 133.854, -72.9967, 0.81 ) }
    dend_44 { pt3dadd( 85.6794, 135.391, -73.5201, 0.22 ) }
    dend_44 { pt3dadd( 85.9238, 136.348, -73.7865, 0.37 ) }
    dend_44 { pt3dadd( 86.1882, 137.338, -74.0052, 0.22 ) }
    dend_44 { pt3dadd( 86.4176, 138.129, -74.1719, 0.44 ) }
    dend_44 { pt3dadd( 87.0763, 140.199, -74.6003, 0.22 ) }
    dend_44 { pt3dadd( 87.4172, 141.162, -74.7849, 0.44 ) }
    dend_44 { pt3dadd( 87.6886, 141.886, -74.9072, 0.22 ) }
    dend_44 { pt3dadd( 87.8836, 142.371, -74.993, 0.29 ) }
    dend_44 { pt3dadd( 88.1025, 142.883, -75.0801, 0.29 ) }
    dend_44 { pt3dadd( 88.4325, 143.524, -75.1615, 0.22 ) }
    dend_44 { pt3dadd( 88.9265, 144.074, -75.3072, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 96/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 39.1207, 45.951, -0.446093, 0.37 ) }
    dend_39 { pt3dadd( 40.3152, 46.3982, -0.365469, 0.37 ) }
    dend_39 { pt3dadd( 41.2185, 46.7487, -0.227341, 0.37 ) }
    dend_39 { pt3dadd( 42.0163, 47.0506, -0.0689021, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_39 { pt3dadd( 42.5864, 47.2624, 0.0572821, 0.44 ) }
    dend_39 { pt3dadd( 43.6922, 47.6732, 0.341804, 0.44 ) }
    dend_39 { pt3dadd( 45.1127, 48.2067, 0.744979, 0.81 ) }
    dend_39 { pt3dadd( 45.534, 48.3745, 0.908771, 0.88 ) }
    dend_39 { pt3dadd( 46.169, 48.639, 1.21896, 0.88 ) }
    dend_39 { pt3dadd( 46.5007, 48.7921, 1.41033, 0.96 ) }
    dend_39 { pt3dadd( 47.0703, 49.088, 1.75864, 0.74 ) }
    dend_39 { pt3dadd( 47.5001, 49.3394, 2.01835, 0.66 ) }
    dend_39 { pt3dadd( 48.1714, 49.7246, 2.35294, 0.66 ) }
    dend_39 { pt3dadd( 48.9049, 50.1214, 2.66706, 0.52 ) }
    dend_39 { pt3dadd( 49.6166, 50.4939, 2.9413, 0.52 ) }
    dend_39 { pt3dadd( 50.5689, 50.9627, 3.25491, 1.18 ) }
    dend_39 { pt3dadd( 50.9174, 51.1271, 3.34426, 1.55 ) }
    dend_39 { pt3dadd( 51.7812, 51.5067, 3.52172, 1.55 ) }
    dend_39 { pt3dadd( 52.6263, 51.8543, 3.66028, 0.81 ) }
    dend_39 { pt3dadd( 53.713, 52.28, 3.80629, 0.44 ) }
    dend_39 { pt3dadd( 54.3282, 52.5041, 3.88333, 0.44 ) }
    dend_39 { pt3dadd( 55.3941, 52.8903, 4.02811, 1.55 ) }
    dend_39 { pt3dadd( 55.9511, 53.107, 4.11014, 1.69 ) }
    dend_39 { pt3dadd( 56.3212, 53.2732, 4.17099, 1.69 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 20/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -26.4143, -116.916, -0.787662, 0.52 ) }
    dend_15 { pt3dadd( -26.6921, -118.183, -1.64376, 0.52 ) }
    dend_15 { pt3dadd( -26.8116, -118.928, -2.14771, 0.52 ) }
    dend_15 { pt3dadd( -26.8313, -120.021, -2.84576, 0.52 ) }
    dend_15 { pt3dadd( -26.778, -121.109, -3.53552, 0.52 ) }
    dend_15 { pt3dadd( -26.6796, -122.243, -4.26526, 0.52 ) }
    dend_15 { pt3dadd( -26.6106, -122.891, -4.7002, 0.52 ) }
    dend_15 { pt3dadd( -26.4978, -123.628, -5.25206, 0.52 ) }
    dend_15 { pt3dadd( -26.2036, -125.147, -6.61579, 0.52 ) }
    dend_15 { pt3dadd( -26.0936, -125.682, -7.13012, 0.44 ) }
    dend_15 { pt3dadd( -25.9546, -126.373, -7.85709, 0.44 ) }
    dend_15 { pt3dadd( -25.8237, -127.079, -8.65116, 0.44 ) }
    dend_15 { pt3dadd( -25.6978, -127.929, -9.59297, 0.44 ) }
    dend_15 { pt3dadd( -25.5523, -129.758, -11.6201, 0.44 ) }
    dend_15 { pt3dadd( -25.5543, -130.427, -12.3692, 0.44 ) }
    dend_15 { pt3dadd( -25.5847, -131.164, -13.147, 0.44 ) }
    dend_15 { pt3dadd( -25.627, -131.704, -13.6684, 0.44 ) }
    dend_15 { pt3dadd( -25.7637, -132.868, -14.6639, 0.44 ) }
    dend_15 { pt3dadd( -25.9124, -133.77, -15.3532, 0.44 ) }
    dend_15 { pt3dadd( -26.1943, -135.022, -16.1756, 0.44 ) }
    dend_15 { pt3dadd( -26.4778, -135.958, -16.8353, 0.44 ) }
    dend_15 { pt3dadd( -26.7525, -136.676, -17.3496, 0.44 ) }
    dend_15 { pt3dadd( -26.9623, -137.167, -17.7389, 0.44 ) }
    dend_15 { pt3dadd( -27.2497, -137.834, -18.2497, 0.44 ) }
    dend_15 { pt3dadd( -27.4175, -138.331, -18.5931, 0.44 ) }
    dend_15 { pt3dadd( -27.7059, -139.416, -19.2657, 0.44 ) }
    dend_15 { pt3dadd( -27.7933, -139.803, -19.5079, 0.44 ) }
    dend_15 { pt3dadd( -28.0967, -141.151, -20.3659, 0.44 ) }
    dend_15 { pt3dadd( -28.4265, -142.7, -21.378, 0.44 ) }
    dend_15 { pt3dadd( -28.7485, -144.213, -22.3581, 0.44 ) }
    dend_15 { pt3dadd( -28.9829, -145.266, -23.0853, 0.44 ) }
    dend_15 { pt3dadd( -29.1825, -146.021, -23.6431, 0.44 ) }
    dend_15 { pt3dadd( -29.5017, -146.986, -24.4557, 0.44 ) }
    dend_15 { pt3dadd( -30.0157, -148.281, -25.6792, 0.44 ) }
    dend_15 { pt3dadd( -30.305, -148.935, -26.3981, 0.44 ) }
    dend_15 { pt3dadd( -30.6822, -149.699, -27.301, 0.44 ) }
    dend_15 { pt3dadd( -31.0248, -150.406, -28.2104, 0.44 ) }
    dend_15 { pt3dadd( -31.3706, -151.203, -29.265, 0.44 ) }
    dend_15 { pt3dadd( -31.5243, -151.634, -29.8584, 0.44 ) }
    dend_15 { pt3dadd( -31.6078, -151.86, -30.184, 0.44 ) }
    dend_15 { pt3dadd( -31.6379, -151.958, -30.3219, 0.44 ) }
    dend_15 { pt3dadd( -31.7377, -152.37, -30.8417, 0.44 ) }
    dend_15 { pt3dadd( -31.8043, -152.734, -31.2838, 0.44 ) }
    dend_15 { pt3dadd( -31.8527, -153.154, -31.7573, 0.44 ) }
    dend_15 { pt3dadd( -31.9315, -154.206, -32.8388, 0.44 ) }
    dend_15 { pt3dadd( -31.9604, -154.962, -33.5246, 0.44 ) }
    dend_15 { pt3dadd( -31.9589, -155.196, -33.7036, 0.44 ) }
    dend_15 { pt3dadd( -31.9456, -155.494, -33.8966, 0.44 ) }
    dend_15 { pt3dadd( -31.9053, -156.328, -34.3395, 0.44 ) }
    dend_15 { pt3dadd( -31.864, -157.049, -34.7061, 0.44 ) }
    dend_15 { pt3dadd( -31.8079, -157.888, -35.1308, 0.44 ) }
    dend_15 { pt3dadd( -31.8143, -158.547, -35.4483, 0.44 ) }
    dend_15 { pt3dadd( -31.8479, -159.392, -35.8258, 0.44 ) }
    dend_15 { pt3dadd( -31.9349, -160.295, -36.2912, 0.44 ) }
    dend_15 { pt3dadd( -32.0645, -161.349, -36.9678, 0.44 ) }
    dend_15 { pt3dadd( -32.1591, -162.377, -37.7379, 0.44 ) }
    dend_15 { pt3dadd( -32.2512, -163.978, -38.9913, 0.44 ) }
    dend_15 { pt3dadd( -32.28, -164.997, -39.7629, 0.44 ) }
    dend_15 { pt3dadd( -32.2476, -167.071, -41.2141, 0.44 ) }
    dend_15 { pt3dadd( -32.1123, -169.07, -42.4299, 0.44 ) }
    dend_15 { pt3dadd( -31.9465, -170.712, -43.2694, 0.44 ) }
    dend_15 { pt3dadd( -31.8123, -171.915, -43.887, 0.44 ) }
    dend_15 { pt3dadd( -31.6077, -173.788, -44.8586, 0.44 ) }
    dend_15 { pt3dadd( -31.4897, -175.1, -45.5141, 0.44 ) }
    dend_15 { pt3dadd( -31.2821, -177.489, -46.5893, 0.44 ) }
    dend_15 { pt3dadd( -31.2276, -178.376, -46.9698, 0.44 ) }
    dend_15 { pt3dadd( -31.1038, -182.099, -48.6677, 0.44 ) }
    dend_15 { pt3dadd( -31.0898, -182.756, -49.0038, 0.37 ) }
    dend_15 { pt3dadd( -31.0757, -183.783, -49.5973, 0.37 ) }
    dend_15 { pt3dadd( -31.0672, -184.539, -50.0834, 0.29 ) }
    dend_15 { pt3dadd( -31.0136, -185.883, -50.9752, 0.29 ) }
    dend_15 { pt3dadd( -30.9541, -186.492, -51.3641, 0.29 ) }
    dend_15 { pt3dadd( -30.7516, -187.699, -52.01, 0.29 ) }
    dend_15 { pt3dadd( -30.5533, -188.757, -52.5607, 0.29 ) }
    dend_15 { pt3dadd( -30.3206, -190.05, -53.1852, 0.29 ) }
    dend_15 { pt3dadd( -30.1428, -191.197, -53.694, 0.29 ) }
    dend_15 { pt3dadd( -29.9588, -192.538, -54.2397, 0.29 ) }
    dend_15 { pt3dadd( -29.8325, -193.614, -54.6846, 0.29 ) }
    dend_15 { pt3dadd( -29.765, -194.362, -54.9886, 0.29 ) }
    dend_15 { pt3dadd( -29.7067, -195.23, -55.3693, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_15 { pt3dadd( -29.6393, -196.22, -55.8214, 0.29 ) }
    dend_15 { pt3dadd( -29.6006, -196.865, -56.1396, 0.29 ) }
    dend_15 { pt3dadd( -29.5017, -198.454, -56.9395, 0.29 ) }
    dend_15 { pt3dadd( -29.4621, -198.956, -57.2572, 0.29 ) }
    dend_15 { pt3dadd( -29.337, -200.143, -58.1879, 0.29 ) }
    dend_15 { pt3dadd( -29.2566, -200.695, -58.742, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 6/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -26.4143, -116.916, -0.787662, 0.52 ) }
    dend_14 { pt3dadd( -26.5745, -117.775, -0.837026, 0.52 ) }
    dend_14 { pt3dadd( -26.74, -118.973, -0.902384, 0.52 ) }
    dend_14 { pt3dadd( -26.8243, -119.912, -0.948087, 0.52 ) }
    dend_14 { pt3dadd( -26.9772, -122.177, -1.0503, 0.52 ) }
    dend_14 { pt3dadd( -27.0673, -123.849, -1.12054, 0.52 ) }
    dend_14 { pt3dadd( -27.1169, -125.108, -1.17507, 0.52 ) }
    dend_14 { pt3dadd( -27.1265, -127.094, -1.26899, 0.52 ) }
    dend_14 { pt3dadd( -27.107, -128.936, -1.35244, 0.52 ) }
    dend_14 { pt3dadd( -27.1018, -129.515, -1.3901, 0.52 ) }
    dend_14 { pt3dadd( -27.1131, -130.391, -1.4729, 0.52 ) }
    dend_14 { pt3dadd( -27.2028, -132.141, -1.68486, 0.52 ) }
    dend_14 { pt3dadd( -27.3623, -133.505, -1.90967, 0.52 ) }
    dend_14 { pt3dadd( -27.6166, -134.646, -2.16073, 0.52 ) }
    dend_14 { pt3dadd( -27.8826, -135.49, -2.37659, 0.52 ) }
    dend_14 { pt3dadd( -28.1456, -136.201, -2.5764, 0.52 ) }
    dend_14 { pt3dadd( -28.5115, -137.047, -2.83714, 0.52 ) }
    dend_14 { pt3dadd( -29.0547, -138.103, -3.18759, 0.52 ) }
    dend_14 { pt3dadd( -29.827, -139.421, -3.63875, 0.52 ) }
    dend_14 { pt3dadd( -30.2355, -140.064, -3.84556, 0.52 ) }
    dend_14 { pt3dadd( -30.7902, -140.913, -4.11546, 0.52 ) }
    dend_14 { pt3dadd( -31.3404, -141.739, -4.36759, 0.52 ) }
    dend_14 { pt3dadd( -31.7896, -142.413, -4.56717, 0.52 ) }
    dend_14 { pt3dadd( -32.4024, -143.27, -4.79923, 0.52 ) }
    dend_14 { pt3dadd( -33.1609, -144.208, -5.10134, 0.52 ) }
    dend_14 { pt3dadd( -33.7409, -144.843, -5.3288, 0.52 ) }
    dend_14 { pt3dadd( -34.6397, -145.768, -5.68168, 0.52 ) }
    dend_14 { pt3dadd( -35.0761, -146.224, -5.87309, 0.52 ) }
    dend_14 { pt3dadd( -36.0303, -147.263, -6.35182, 0.52 ) }
    dend_14 { pt3dadd( -36.9231, -148.288, -6.8608, 0.52 ) }
    dend_14 { pt3dadd( -37.6745, -149.207, -7.34723, 0.52 ) }
    dend_14 { pt3dadd( -38.2899, -150.015, -7.7672, 0.52 ) }
    dend_14 { pt3dadd( -38.8518, -150.831, -8.19231, 0.52 ) }
    dend_14 { pt3dadd( -39.3348, -151.68, -8.62588, 0.52 ) }
    dend_14 { pt3dadd( -39.6988, -152.558, -9.04199, 0.52 ) }
    dend_14 { pt3dadd( -39.9315, -153.298, -9.33332, 0.52 ) }
    dend_14 { pt3dadd( -40.1943, -154.255, -9.66945, 0.52 ) }
    dend_14 { pt3dadd( -40.3934, -155.014, -9.88853, 0.52 ) }
    dend_14 { pt3dadd( -40.7203, -156.283, -10.1576, 0.52 ) }
    dend_14 { pt3dadd( -41.0233, -157.557, -10.3794, 0.52 ) }
    dend_14 { pt3dadd( -41.3455, -158.978, -10.5885, 0.52 ) }
    dend_14 { pt3dadd( -41.5671, -160.05, -10.7296, 0.52 ) }
    dend_14 { pt3dadd( -41.8485, -161.553, -10.9039, 0.52 ) }
    dend_14 { pt3dadd( -42.2772, -163.93, -11.1343, 0.52 ) }
    dend_14 { pt3dadd( -42.5118, -165.359, -11.2361, 0.52 ) }
    dend_14 { pt3dadd( -42.6694, -166.446, -11.3024, 0.52 ) }
    dend_14 { pt3dadd( -43.0058, -168.653, -11.43, 0.52 ) }
    dend_14 { pt3dadd( -43.326, -170.63, -11.5307, 0.52 ) }
    dend_14 { pt3dadd( -43.549, -171.902, -11.5974, 0.52 ) }
    dend_14 { pt3dadd( -43.9272, -173.922, -11.6995, 0.52 ) }
    dend_14 { pt3dadd( -44.4038, -176.264, -11.7651, 0.52 ) }
    dend_14 { pt3dadd( -44.822, -178.155, -11.7975, 0.52 ) }
    dend_14 { pt3dadd( -45.2388, -179.931, -11.8405, 0.52 ) }
    dend_14 { pt3dadd( -45.4929, -181.025, -11.8848, 0.52 ) }
    dend_14 { pt3dadd( -45.7549, -182.167, -11.9437, 0.52 ) }
    dend_14 { pt3dadd( -46.0178, -183.35, -12.0303, 0.52 ) }
    dend_14 { pt3dadd( -46.213, -184.352, -12.1185, 0.52 ) }
    dend_14 { pt3dadd( -46.5372, -186.185, -12.2882, 0.52 ) }
    dend_14 { pt3dadd( -46.8483, -187.926, -12.4558, 0.52 ) }
    dend_14 { pt3dadd( -47.2689, -190.151, -12.6623, 0.52 ) }
    dend_14 { pt3dadd( -47.4857, -191.251, -12.7695, 0.52 ) }
    dend_14 { pt3dadd( -47.817, -192.888, -12.945, 0.52 ) }
    dend_14 { pt3dadd( -48.1503, -194.49, -13.0873, 0.52 ) }
    dend_14 { pt3dadd( -48.4329, -195.785, -13.1684, 0.52 ) }
    dend_14 { pt3dadd( -48.5881, -196.467, -13.2104, 0.52 ) }
    dend_14 { pt3dadd( -48.8546, -197.629, -13.2745, 0.52 ) }
    dend_14 { pt3dadd( -49.0089, -198.306, -13.3, 0.52 ) }
    dend_14 { pt3dadd( -49.1859, -199.219, -13.3168, 0.52 ) }
    dend_14 { pt3dadd( -49.3548, -200.154, -13.2935, 0.52 ) }
    dend_14 { pt3dadd( -49.6298, -201.708, -13.1954, 0.52 ) }
    dend_14 { pt3dadd( -49.7128, -202.209, -13.1469, 0.52 ) }
    dend_14 { pt3dadd( -49.871, -203.152, -13.0207, 0.52 ) }
    dend_14 { pt3dadd( -50.2269, -205.086, -12.7051, 0.52 ) }
    dend_14 { pt3dadd( -50.4455, -206.147, -12.5096, 0.52 ) }
    dend_14 { pt3dadd( -50.589, -206.784, -12.3999, 0.52 ) }
    dend_14 { pt3dadd( -50.8099, -207.672, -12.2649, 0.52 ) }
    dend_14 { pt3dadd( -51.1327, -208.894, -12.1375, 0.52 ) }
    dend_14 { pt3dadd( -51.4128, -209.91, -12.0925, 0.52 ) }
    dend_14 { pt3dadd( -51.751, -211.134, -12.1255, 0.52 ) }
    dend_14 { pt3dadd( -51.984, -212.115, -12.2006, 0.52 ) }
    dend_14 { pt3dadd( -52.1801, -213.066, -12.303, 0.52 ) }
    dend_14 { pt3dadd( -52.3591, -214.136, -12.4597, 0.52 ) }
    dend_14 { pt3dadd( -52.5043, -215.087, -12.6157, 0.52 ) }
    dend_14 { pt3dadd( -52.6551, -216.081, -12.7924, 0.52 ) }
    dend_14 { pt3dadd( -52.9386, -217.788, -13.1142, 0.52 ) }
    dend_14 { pt3dadd( -53.1559, -218.958, -13.3223, 0.52 ) }
    dend_14 { pt3dadd( -53.3718, -220.012, -13.5304, 0.52 ) }
    dend_14 { pt3dadd( -53.6981, -221.307, -13.8001, 0.52 ) }
    dend_14 { pt3dadd( -54.0632, -222.545, -14.0813, 0.52 ) }
    dend_14 { pt3dadd( -54.3616, -223.414, -14.2984, 0.52 ) }
    dend_14 { pt3dadd( -54.6775, -224.226, -14.4709, 0.52 ) }
    dend_14 { pt3dadd( -55.0038, -225.035, -14.5895, 0.52 ) }
    dend_14 { pt3dadd( -55.2982, -225.814, -14.6495, 0.52 ) }
    dend_14 { pt3dadd( -55.624, -226.806, -14.6702, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_14 { pt3dadd( -56.0019, -228.008, -14.6297, 0.52 ) }
    dend_14 { pt3dadd( -56.4369, -229.367, -14.5417, 0.52 ) }
    dend_14 { pt3dadd( -56.8494, -230.564, -14.4471, 0.52 ) }
    dend_14 { pt3dadd( -57.2839, -231.733, -14.3439, 0.52 ) }
    dend_14 { pt3dadd( -57.7029, -232.835, -14.2471, 0.52 ) }
    dend_14 { pt3dadd( -58.2871, -234.262, -14.1275, 0.52 ) }
    dend_14 { pt3dadd( -58.8037, -235.47, -14.0456, 0.52 ) }
    dend_14 { pt3dadd( -59.3633, -236.711, -14.0034, 0.52 ) }
    dend_14 { pt3dadd( -59.9382, -237.908, -13.9514, 0.52 ) }
    dend_14 { pt3dadd( -60.4273, -238.836, -13.9036, 0.52 ) }
    dend_14 { pt3dadd( -60.8742, -239.679, -13.8803, 0.52 ) }
    dend_14 { pt3dadd( -61.3174, -240.55, -13.8753, 0.52 ) }
    dend_14 { pt3dadd( -61.6144, -241.169, -13.8838, 0.52 ) }
    dend_14 { pt3dadd( -61.7986, -241.582, -13.9044, 0.52 ) }
    dend_14 { pt3dadd( -62.6719, -243.581, -14.0847, 0.52 ) }
    dend_14 { pt3dadd( -63.5332, -245.463, -14.2367, 0.52 ) }
    dend_14 { pt3dadd( -63.9779, -246.43, -14.2975, 0.52 ) }
    dend_14 { pt3dadd( -64.3527, -247.245, -14.3316, 0.52 ) }
    dend_14 { pt3dadd( -64.8471, -248.339, -14.3539, 0.52 ) }
    dend_14 { pt3dadd( -65.3128, -249.387, -14.3509, 0.52 ) }
    dend_14 { pt3dadd( -66.1464, -251.33, -14.2675, 0.52 ) }
    dend_14 { pt3dadd( -66.4401, -251.996, -14.1911, 0.52 ) }
    dend_14 { pt3dadd( -66.6804, -252.55, -14.1015, 0.52 ) }
    dend_14 { pt3dadd( -67.1092, -253.566, -13.866, 0.52 ) }
    dend_14 { pt3dadd( -67.2476, -253.915, -13.7596, 0.52 ) }
    dend_14 { pt3dadd( -67.5697, -254.854, -13.4505, 0.52 ) }
    dend_14 { pt3dadd( -67.7646, -255.49, -13.259, 0.52 ) }
    dend_14 { pt3dadd( -67.9644, -256.085, -13.0791, 0.52 ) }
    dend_14 { pt3dadd( -68.2396, -256.829, -12.8702, 0.52 ) }
    dend_14 { pt3dadd( -68.6744, -257.879, -12.5722, 0.52 ) }
    dend_14 { pt3dadd( -68.9848, -258.552, -12.3918, 0.52 ) }
    dend_14 { pt3dadd( -69.3703, -259.355, -12.2051, 0.52 ) }
    dend_14 { pt3dadd( -69.7215, -260.108, -12.0714, 0.52 ) }
    dend_14 { pt3dadd( -70.2534, -261.238, -11.9213, 0.52 ) }
    dend_14 { pt3dadd( -70.5579, -261.884, -11.8534, 0.52 ) }
    dend_14 { pt3dadd( -70.8797, -262.569, -11.7852, 0.52 ) }
    dend_14 { pt3dadd( -71.3978, -263.702, -11.6736, 0.52 ) }
    dend_14 { pt3dadd( -71.8198, -264.706, -11.5731, 0.52 ) }
    dend_14 { pt3dadd( -72.2653, -265.921, -11.4532, 0.52 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 39/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -35.0591, -199.764, 37.4173, 0.44 ) }
    dend_10 { pt3dadd( -36.0168, -201.286, 36.3776, 0.44 ) }
    dend_10 { pt3dadd( -36.2847, -201.999, 35.9964, 0.44 ) }
    dend_10 { pt3dadd( -36.3674, -202.593, 35.7697, 0.44 ) }
    dend_10 { pt3dadd( -36.3484, -203.309, 35.5767, 0.44 ) }
    dend_10 { pt3dadd( -36.2148, -204.238, 35.4191, 0.44 ) }
    dend_10 { pt3dadd( -36.0842, -204.896, 35.3481, 0.44 ) }
    dend_10 { pt3dadd( -35.8253, -205.813, 35.3317, 0.44 ) }
    dend_10 { pt3dadd( -35.351, -207.171, 35.3551, 0.44 ) }
    dend_10 { pt3dadd( -34.915, -208.215, 35.404, 0.44 ) }
    dend_10 { pt3dadd( -34.2743, -209.666, 35.505, 0.44 ) }
    dend_10 { pt3dadd( -33.6754, -210.951, 35.6079, 0.44 ) }
    dend_10 { pt3dadd( -33.2603, -211.823, 35.6919, 0.44 ) }
    dend_10 { pt3dadd( -32.7929, -212.802, 35.8125, 0.44 ) }
    dend_10 { pt3dadd( -32.4083, -213.605, 35.9092, 0.44 ) }
    dend_10 { pt3dadd( -29.3894, -223.138, 36.0528, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 55/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -35.0591, -199.764, 37.4173, 0.52 ) }
    dend_9 { pt3dadd( -35.8431, -201.272, 37.9466, 0.52 ) }
    dend_9 { pt3dadd( -36.0722, -201.713, 38.1013, 0.52 ) }
    dend_9 { pt3dadd( -36.4979, -202.531, 38.3887, 0.44 ) }
    dend_9 { pt3dadd( -36.8882, -203.282, 38.6522, 0.44 ) }
    dend_9 { pt3dadd( -37.3256, -204.123, 38.9475, 0.44 ) }
    dend_9 { pt3dadd( -37.8435, -205.119, 39.2972, 0.44 ) }
    dend_9 { pt3dadd( -40.5336, -214.489, 41.5274, 0.44 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 63/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -1.43205, -132.308, 12.4224, 0.44 ) }
    dend_7 { pt3dadd( -0.1531, -137.302, 15.1556, 0.44 ) }
    dend_7 { pt3dadd( 0.252915, -138.684, 15.6934, 0.44 ) }
    dend_7 { pt3dadd( 0.497949, -139.377, 15.8786, 0.44 ) }
    dend_7 { pt3dadd( 0.91737, -140.502, 16.0426, 0.44 ) }
    dend_7 { pt3dadd( 1.36334, -141.708, 16.1212, 0.44 ) }
    dend_7 { pt3dadd( 1.64691, -142.507, 16.1272, 0.44 ) }
    dend_7 { pt3dadd( 1.96378, -143.412, 15.9371, 0.44 ) }
    dend_7 { pt3dadd( 2.44685, -144.885, 15.6448, 0.44 ) }
    dend_7 { pt3dadd( 2.88759, -146.421, 15.3312, 0.44 ) }
    dend_7 { pt3dadd( 3.0721, -147.176, 15.1659, 0.44 ) }
    dend_7 { pt3dadd( 3.31997, -148.391, 14.8864, 0.44 ) }
    dend_7 { pt3dadd( 3.59419, -149.919, 14.512, 0.44 ) }
    dend_7 { pt3dadd( 3.73429, -150.844, 14.2873, 0.44 ) }
    dend_7 { pt3dadd( 3.82043, -151.474, 14.1359, 0.44 ) }
    dend_7 { pt3dadd( 4.05917, -153.064, 13.8088, 0.44 ) }
    dend_7 { pt3dadd( 4.29201, -154.479, 13.5679, 0.44 ) }
    dend_7 { pt3dadd( 4.48701, -155.66, 13.3849, 0.44 ) }
    dend_7 { pt3dadd( 4.64602, -156.778, 13.2458, 0.44 ) }
    dend_7 { pt3dadd( 4.72739, -157.459, 13.183, 0.44 ) }
    dend_7 { pt3dadd( 4.93622, -159.443, 13.0558, 0.44 ) }
    dend_7 { pt3dadd( 5.11628, -161.591, 12.9719, 0.44 ) }
    dend_7 { pt3dadd( 5.23504, -163.234, 12.9502, 0.44 ) }
    dend_7 { pt3dadd( 5.34913, -165.053, 12.966, 0.44 ) }
    dend_7 { pt3dadd( 5.4208, -166.184, 12.9902, 0.44 ) }
    dend_7 { pt3dadd( 5.52255, -167.844, 13.0456, 0.44 ) }
    dend_7 { pt3dadd( 5.5926, -169.024, 13.098, 0.44 ) }
    dend_7 { pt3dadd( 5.69913, -170.912, 13.2045, 0.44 ) }
    dend_7 { pt3dadd( 5.75495, -172.139, 13.2885, 0.44 ) }
    dend_7 { pt3dadd( 5.84241, -173.963, 13.4056, 0.44 ) }
    dend_7 { pt3dadd( 5.91621, -175.48, 13.5189, 0.44 ) }
    dend_7 { pt3dadd( 5.94621, -176.314, 13.5859, 0.44 ) }
    dend_7 { pt3dadd( 5.99355, -177.344, 13.6788, 0.44 ) }
    dend_7 { pt3dadd( 6.03148, -178.887, 13.8339, 0.44 ) }
    dend_7 { pt3dadd( 6.04122, -180.494, 14.0342, 0.44 ) }
    dend_7 { pt3dadd( 6.04164, -181.822, 14.2314, 0.44 ) }
    dend_7 { pt3dadd( 6.03878, -182.836, 14.4037, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_7 { pt3dadd( 6.0457, -183.65, 14.5546, 0.44 ) }
    dend_7 { pt3dadd( 6.06739, -184.937, 14.8374, 0.44 ) }
    dend_7 { pt3dadd( 6.08129, -185.812, 15.056, 0.44 ) }
    dend_7 { pt3dadd( 6.07029, -186.392, 15.2037, 0.44 ) }
    dend_7 { pt3dadd( 6.05409, -187.071, 15.3589, 0.44 ) }
    dend_7 { pt3dadd( 6.04366, -188.031, 15.5829, 0.44 ) }
    dend_7 { pt3dadd( 6.06352, -189.308, 15.8537, 0.44 ) }
    dend_7 { pt3dadd( 6.10927, -190.317, 16.064, 0.44 ) }
    dend_7 { pt3dadd( 6.21687, -191.831, 16.3247, 0.44 ) }
    dend_7 { pt3dadd( 6.34201, -193.059, 16.4995, 0.44 ) }
    dend_7 { pt3dadd( 6.58965, -194.979, 16.7136, 0.44 ) }
    dend_7 { pt3dadd( 6.87391, -196.857, 16.8688, 0.44 ) }
    dend_7 { pt3dadd( 7.06795, -197.942, 16.9222, 0.44 ) }
    dend_7 { pt3dadd( 7.41778, -199.688, 16.9712, 0.44 ) }
    dend_7 { pt3dadd( 7.63449, -200.655, 16.9677, 0.44 ) }
    dend_7 { pt3dadd( 7.9429, -201.824, 16.9093, 0.44 ) }
    dend_7 { pt3dadd( 8.28824, -202.954, 16.796, 0.44 ) }
    dend_7 { pt3dadd( 8.52211, -203.688, 16.7235, 0.44 ) }
    dend_7 { pt3dadd( 8.72935, -204.326, 16.6708, 0.44 ) }
    dend_7 { pt3dadd( 9.15787, -205.655, 16.6051, 0.44 ) }
    dend_7 { pt3dadd( 9.61225, -207.004, 16.5742, 0.44 ) }
    dend_7 { pt3dadd( 10.2124, -208.577, 16.5782, 0.44 ) }
    dend_7 { pt3dadd( 10.7344, -209.844, 16.6124, 0.44 ) }
    dend_7 { pt3dadd( 11.5335, -211.683, 16.7154, 0.44 ) }
    dend_7 { pt3dadd( 11.762, -212.196, 16.7562, 0.44 ) }
    dend_7 { pt3dadd( 12.1544, -213.068, 16.8482, 0.44 ) }
    dend_7 { pt3dadd( 12.7089, -214.282, 17.0043, 0.44 ) }
    dend_7 { pt3dadd( 13.6402, -216.186, 17.2545, 0.44 ) }
    dend_7 { pt3dadd( 14.0291, -216.943, 17.346, 0.44 ) }
    dend_7 { pt3dadd( 14.6468, -218.106, 17.474, 0.44 ) }
    dend_7 { pt3dadd( 15.3137, -219.302, 17.6067, 0.37 ) }
    dend_7 { pt3dadd( 16.2695, -220.928, 17.8039, 0.37 ) }
    dend_7 { pt3dadd( 17.2675, -222.534, 18.0257, 0.37 ) }
    dend_7 { pt3dadd( 18.3773, -224.236, 18.2989, 0.37 ) }
    dend_7 { pt3dadd( 19.3071, -225.623, 18.5364, 0.37 ) }
    dend_7 { pt3dadd( 19.9322, -226.545, 18.7089, 0.37 ) }
    dend_7 { pt3dadd( 21.0751, -228.237, 19.0431, 0.37 ) }
    dend_7 { pt3dadd( 21.774, -229.317, 19.2709, 0.37 ) }
    dend_7 { pt3dadd( 22.7795, -230.9, 19.657, 0.37 ) }
    dend_7 { pt3dadd( 23.4642, -232.013, 19.9736, 0.37 ) }
    dend_7 { pt3dadd( 23.9223, -232.784, 20.207, 0.37 ) }
    dend_7 { pt3dadd( 24.279, -233.428, 20.3948, 0.37 ) }
    dend_7 { pt3dadd( 24.7066, -234.228, 20.6327, 0.37 ) }
    dend_7 { pt3dadd( 25.2354, -235.205, 20.9498, 0.37 ) }
    dend_7 { pt3dadd( 25.5882, -235.792, 21.1519, 0.37 ) }
    dend_7 { pt3dadd( 26.0012, -236.433, 21.3801, 0.37 ) }
    dend_7 { pt3dadd( 26.4201, -236.997, 21.5893, 0.37 ) }
    dend_7 { pt3dadd( 26.7787, -237.444, 21.7532, 0.37 ) }
    dend_7 { pt3dadd( 27.3602, -238.156, 21.9978, 0.37 ) }
    dend_7 { pt3dadd( 27.9416, -238.944, 22.2486, 0.37 ) }
    dend_7 { pt3dadd( 28.367, -239.551, 22.4477, 0.37 ) }
    dend_7 { pt3dadd( 28.7331, -240.096, 22.6655, 0.37 ) }
    dend_7 { pt3dadd( 29.1147, -240.67, 22.9379, 0.37 ) }
    dend_7 { pt3dadd( 29.3706, -241.1, 23.1625, 0.37 ) }
    dend_7 { pt3dadd( 29.7041, -241.716, 23.4855, 0.37 ) }
    dend_7 { pt3dadd( 30.0668, -242.482, 23.8641, 0.37 ) }
    dend_7 { pt3dadd( 30.2989, -243.012, 24.1046, 0.37 ) }
    dend_7 { pt3dadd( 30.8396, -244.355, 24.6776, 0.29 ) }
    dend_7 { pt3dadd( 31.2765, -245.547, 25.1449, 0.37 ) }
    dend_7 { pt3dadd( 31.5577, -246.357, 25.4188, 0.37 ) }
    dend_7 { pt3dadd( 31.8503, -247.303, 25.6926, 0.37 ) }
    dend_7 { pt3dadd( 32.0753, -248.11, 25.8814, 0.37 ) }
    dend_7 { pt3dadd( 32.3198, -249.072, 26.0645, 0.37 ) }
    dend_7 { pt3dadd( 32.5584, -250.146, 26.2412, 0.37 ) }
    dend_7 { pt3dadd( 32.8151, -251.253, 26.4162, 0.37 ) }
    dend_7 { pt3dadd( 33.0844, -252.351, 26.6014, 0.37 ) }
    dend_7 { pt3dadd( 33.3671, -253.303, 26.7533, 0.37 ) }
    dend_7 { pt3dadd( 33.6261, -254.173, 26.8826, 0.37 ) }
    dend_7 { pt3dadd( 33.9184, -255.188, 27.0058, 0.37 ) }
    dend_7 { pt3dadd( 34.1603, -256.095, 27.1193, 0.37 ) }
    dend_7 { pt3dadd( 34.5374, -257.749, 27.3175, 0.37 ) }
    dend_7 { pt3dadd( 35.0426, -260.109, 27.598, 0.37 ) }
    dend_7 { pt3dadd( 35.2373, -260.937, 27.6563, 0.37 ) }
    dend_7 { pt3dadd( 35.7551, -262.847, 27.6782, 0.37 ) }
    dend_7 { pt3dadd( 36.1712, -264.108, 27.6211, 0.37 ) }
    dend_7 { pt3dadd( 36.5131, -265.076, 27.5411, 0.37 ) }
    dend_7 { pt3dadd( 37.0602, -266.357, 27.3873, 0.37 ) }
    dend_7 { pt3dadd( 38.1485, -268.483, 27.0867, 0.37 ) }
    dend_7 { pt3dadd( 38.6007, -269.261, 26.9792, 0.37 ) }
    dend_7 { pt3dadd( 39.3665, -270.485, 26.8157, 0.37 ) }
    dend_7 { pt3dadd( 40.2857, -272.093, 26.6784, 0.37 ) }
    dend_7 { pt3dadd( 40.8209, -273.2, 26.6483, 0.37 ) }
    dend_7 { pt3dadd( 41.258, -274.338, 26.6647, 0.37 ) }
    dend_7 { pt3dadd( 41.7072, -275.807, 26.7434, 0.37 ) }
    dend_7 { pt3dadd( 42.0257, -276.967, 26.8057, 0.37 ) }
    dend_7 { pt3dadd( 42.7087, -279.646, 26.9272, 0.37 ) }
    dend_7 { pt3dadd( 43.5855, -283.111, 27.0635, 0.37 ) }
    dend_7 { pt3dadd( 44.0424, -285.036, 27.1514, 0.37 ) }
    dend_7 { pt3dadd( 44.4542, -286.827, 27.2399, 0.37 ) }
    dend_7 { pt3dadd( 44.8218, -288.489, 27.3362, 0.37 ) }
    dend_7 { pt3dadd( 45.1833, -290.256, 27.4516, 0.37 ) }
    dend_7 { pt3dadd( 45.481, -291.871, 27.5673, 0.37 ) }
    dend_7 { pt3dadd( 45.6938, -293.214, 27.6906, 0.37 ) }
    dend_7 { pt3dadd( 45.9176, -294.731, 27.8458, 0.37 ) }
    dend_7 { pt3dadd( 46.1567, -296.513, 28.0397, 0.37 ) }
    dend_7 { pt3dadd( 46.3759, -298.608, 28.2735, 0.37 ) }
    dend_7 { pt3dadd( 46.5484, -300.715, 28.4987, 0.37 ) }
    dend_7 { pt3dadd( 46.5902, -301.465, 28.5693, 0.37 ) }
    dend_7 { pt3dadd( 46.6109, -302.211, 28.6304, 0.37 ) }
    dend_7 { pt3dadd( 46.5851, -303.647, 28.7454, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_7 { pt3dadd( 46.5023, -305.342, 28.8729, 0.37 ) }
    dend_7 { pt3dadd( 46.4059, -306.445, 28.9565, 0.37 ) }
    dend_7 { pt3dadd( 46.266, -307.88, 29.0901, 0.37 ) }
    dend_7 { pt3dadd( 46.1619, -308.76, 29.1773, 0.37 ) }
    dend_7 { pt3dadd( 45.9515, -310.345, 29.3652, 0.37 ) }
    dend_7 { pt3dadd( 45.758, -311.409, 29.4833, 0.37 ) }
    dend_7 { pt3dadd( 45.3596, -313.12, 29.6293, 0.37 ) }
    dend_7 { pt3dadd( 44.8077, -315.48, 29.8349, 0.37 ) }
    dend_7 { pt3dadd( 44.382, -317.358, 29.9974, 0.37 ) }
    dend_7 { pt3dadd( 43.9251, -319.414, 30.1631, 0.37 ) }
    dend_7 { pt3dadd( 43.4299, -321.477, 30.3167, 0.37 ) }
    dend_7 { pt3dadd( 42.9272, -323.081, 30.4146, 0.37 ) }
    dend_7 { pt3dadd( 45.566, -332.707, 31.036, 0.37 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 13/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -1.43205, -132.308, 12.4224, 0.74 ) }
    dend_4 { pt3dadd( -1.55634, -132.985, 12.3692, 0.74 ) }
    dend_4 { pt3dadd( -1.70441, -134.487, 12.2815, 0.74 ) }
    dend_4 { pt3dadd( -1.83055, -135.762, 12.2917, 0.74 ) }
    dend_4 { pt3dadd( -1.97686, -137.074, 12.3909, 0.74 ) }
    dend_4 { pt3dadd( -2.06656, -137.801, 12.4855, 0.74 ) }
    dend_4 { pt3dadd( -2.3295, -139.977, 12.8173, 0.74 ) }
    dend_4 { pt3dadd( -2.46646, -141.564, 13.1534, 0.74 ) }
    dend_4 { pt3dadd( -2.53861, -143.101, 13.5595, 0.74 ) }
    dend_4 { pt3dadd( -2.54749, -144.403, 13.9327, 0.74 ) }
    dend_4 { pt3dadd( -2.52838, -145.356, 14.2271, 0.74 ) }
    dend_4 { pt3dadd( -2.50088, -146.43, 14.5583, 0.74 ) }
    dend_4 { pt3dadd( -2.45725, -148.366, 15.1157, 0.74 ) }
    dend_4 { pt3dadd( -2.44724, -149.145, 15.3101, 0.74 ) }
    dend_4 { pt3dadd( -2.41901, -150.656, 15.6257, 0.74 ) }
    dend_4 { pt3dadd( -2.43112, -152.135, 15.8976, 0.74 ) }
    dend_4 { pt3dadd( -2.48653, -153.578, 16.1444, 0.74 ) }
    dend_4 { pt3dadd( -2.64146, -155.417, 16.4501, 0.74 ) }
    dend_4 { pt3dadd( -2.73094, -156.369, 16.5774, 0.66 ) }
    dend_4 { pt3dadd( -2.90883, -158.158, 16.7815, 0.66 ) }
    dend_4 { pt3dadd( -3.03567, -159.495, 16.9028, 0.66 ) }
    dend_4 { pt3dadd( -3.10133, -160.362, 16.9751, 0.66 ) }
    dend_4 { pt3dadd( -3.13071, -161.352, 17.0401, 0.66 ) }
    dend_4 { pt3dadd( -3.08629, -163.657, 17.2147, 0.66 ) }
    dend_4 { pt3dadd( -2.93193, -165.392, 17.3843, 0.66 ) }
    dend_4 { pt3dadd( -2.75658, -166.41, 17.5082, 0.66 ) }
    dend_4 { pt3dadd( -2.42574, -167.733, 17.7429, 0.66 ) }
    dend_4 { pt3dadd( -2.09128, -168.87, 17.9933, 0.66 ) }
    dend_4 { pt3dadd( -1.63961, -170.293, 18.7915, 0.66 ) }
    dend_4 { pt3dadd( -1.27898, -171.355, 19.5301, 0.66 ) }
    dend_4 { pt3dadd( -0.810739, -172.556, 20.5123, 0.66 ) }
    dend_4 { pt3dadd( -0.371286, -173.673, 21.5685, 0.66 ) }
    dend_4 { pt3dadd( -0.224287, -174.057, 21.9925, 0.66 ) }
    dend_4 { pt3dadd( 1.26017, -178.34, 27.7727, 0.66 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 47/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 56.3212, 53.2732, 4.17099, 0.29 ) }
    dend_41 { pt3dadd( 58.0533, 54.1723, 4.07717, 0.29 ) }
    dend_41 { pt3dadd( 58.7063, 54.4833, 4.04504, 0.29 ) }
    dend_41 { pt3dadd( 59.343, 54.7551, 4.0175, 0.29 ) }
    dend_41 { pt3dadd( 60.2116, 55.1151, 3.97312, 0.66 ) }
    dend_41 { pt3dadd( 60.9107, 55.4041, 3.96802, 0.66 ) }
    dend_41 { pt3dadd( 62.0361, 55.87, 3.99828, 0.37 ) }
    dend_41 { pt3dadd( 62.6631, 56.1128, 4.05544, 0.37 ) }
    dend_41 { pt3dadd( 63.5055, 56.4195, 4.16135, 0.37 ) }
    dend_41 { pt3dadd( 64.1206, 56.6206, 4.24921, 0.37 ) }
    dend_41 { pt3dadd( 65.3781, 57.0062, 4.4512, 0.96 ) }
    dend_41 { pt3dadd( 65.9671, 57.1886, 4.55136, 0.96 ) }
    dend_41 { pt3dadd( 66.3537, 57.3136, 4.62792, 0.96 ) }
    dend_41 { pt3dadd( 67.3078, 57.6487, 4.83675, 0.44 ) }
    dend_41 { pt3dadd( 67.7106, 57.8034, 4.93164, 0.44 ) }
    dend_41 { pt3dadd( 68.492, 58.1012, 5.10824, 0.29 ) }
    dend_41 { pt3dadd( 69.303, 58.4246, 5.2638, 0.59 ) }
    dend_41 { pt3dadd( 69.9435, 58.6982, 5.39354, 0.59 ) }
    dend_41 { pt3dadd( 70.9313, 59.1566, 5.60946, 0.44 ) }
    dend_41 { pt3dadd( 71.7855, 59.5728, 5.80565, 0.66 ) }
    dend_41 { pt3dadd( 72.4534, 59.8881, 5.95847, 0.66 ) }
    dend_41 { pt3dadd( 72.9682, 60.1187, 6.05863, 0.66 ) }
    dend_41 { pt3dadd( 73.6389, 60.4123, 6.17368, 0.96 ) }
    dend_41 { pt3dadd( 74.4746, 60.768, 6.27116, 0.96 ) }
    dend_41 { pt3dadd( 75.6499, 61.2524, 6.34179, 0.29 ) }
    dend_41 { pt3dadd( 76.7538, 61.7099, 6.3684, 0.29 ) }
    dend_41 { pt3dadd( 77.5545, 62.0738, 6.36743, 0.74 ) }
    dend_41 { pt3dadd( 78.2552, 62.416, 6.34648, 0.29 ) }
    dend_41 { pt3dadd( 78.8697, 62.7462, 6.30979, 0.29 ) }
    dend_41 { pt3dadd( 79.4729, 63.108, 6.26125, 0.29 ) }
    dend_41 { pt3dadd( 80.1209, 63.5425, 6.20262, 0.29 ) }
    dend_41 { pt3dadd( 80.8282, 64.0032, 6.14902, 1.03 ) }
    dend_41 { pt3dadd( 81.2043, 64.2234, 6.13513, 1.18 ) }
    dend_41 { pt3dadd( 81.7657, 64.5032, 6.11116, 1.18 ) }
    dend_41 { pt3dadd( 82.3445, 64.7452, 6.13057, 0.59 ) }
    dend_41 { pt3dadd( 83.1815, 65.0488, 6.21048, 0.37 ) }
    dend_41 { pt3dadd( 84.3062, 65.3935, 6.35429, 0.37 ) }
    dend_41 { pt3dadd( 85.1033, 65.6033, 6.47893, 0.81 ) }
    dend_41 { pt3dadd( 85.7798, 65.7742, 6.60109, 0.52 ) }
    dend_41 { pt3dadd( 87.1376, 66.1076, 6.87766, 0.29 ) }
    dend_41 { pt3dadd( 87.7975, 66.2882, 7.02556, 0.29 ) }
    dend_41 { pt3dadd( 88.8294, 66.635, 7.27272, 0.59 ) }
    dend_41 { pt3dadd( 89.4229, 66.8933, 7.40719, 0.59 ) }
    dend_41 { pt3dadd( 90.0096, 67.1802, 7.52068, 0.59 ) }
    dend_41 { pt3dadd( 90.6709, 67.533, 7.6161, 0.59 ) }
    dend_41 { pt3dadd( 91.314, 67.8886, 7.66724, 0.29 ) }
    dend_41 { pt3dadd( 91.9565, 68.2433, 7.7216, 0.29 ) }
    dend_41 { pt3dadd( 93.1387, 68.8817, 7.83714, 0.44 ) }
    dend_41 { pt3dadd( 93.6998, 69.1699, 7.89227, 0.88 ) }
    dend_41 { pt3dadd( 94.5059, 69.5485, 7.94096, 0.74 ) }
    dend_41 { pt3dadd( 95.5771, 69.9784, 7.92481, 1.11 ) }
    dend_41 { pt3dadd( 96.1464, 70.1719, 7.87902, 1.11 ) }
    dend_41 { pt3dadd( 97.4676, 70.5439, 7.67894, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_41 { pt3dadd( 98.147, 70.6855, 7.53705, 0.29 ) }
    dend_41 { pt3dadd( 99.2963, 70.8921, 7.23792, 0.29 ) }
    dend_41 { pt3dadd( 100.724, 71.1145, 6.80228, 0.74 ) }
    dend_41 { pt3dadd( 101.349, 71.2095, 6.57174, 0.96 ) }
    dend_41 { pt3dadd( 102.168, 71.3433, 6.24733, 0.74 ) }
    dend_41 { pt3dadd( 103.456, 71.5851, 5.71775, 0.22 ) }
    dend_41 { pt3dadd( 104.223, 71.7412, 5.42796, 0.22 ) }
    dend_41 { pt3dadd( 105.192, 71.956, 5.12997, 0.66 ) }
    dend_41 { pt3dadd( 106.082, 72.1608, 4.9106, 0.66 ) }
    dend_41 { pt3dadd( 106.901, 72.3495, 4.73741, 0.22 ) }
    dend_41 { pt3dadd( 107.408, 72.4828, 4.64145, 0.22 ) }
    dend_41 { pt3dadd( 107.826, 72.6019, 4.56697, 0.66 ) }
    dend_41 { pt3dadd( 108.611, 72.8264, 4.45639, 0.74 ) }
    dend_41 { pt3dadd( 109.237, 73.0243, 4.38618, 0.96 ) }
    dend_41 { pt3dadd( 109.962, 73.264, 4.32811, 0.96 ) }
    dend_41 { pt3dadd( 110.543, 73.4773, 4.27759, 0.44 ) }
    dend_41 { pt3dadd( 111.243, 73.7541, 4.2152, 0.44 ) }
    dend_41 { pt3dadd( 112.243, 74.186, 4.11331, 0.81 ) }
    dend_41 { pt3dadd( 112.634, 74.3659, 4.05306, 0.81 ) }
    dend_41 { pt3dadd( 113.378, 74.6916, 3.91502, 0.52 ) }
    dend_41 { pt3dadd( 113.816, 74.8679, 3.82726, 0.52 ) }
    dend_41 { pt3dadd( 114.696, 75.1749, 3.65465, 0.88 ) }
    dend_41 { pt3dadd( 115.454, 75.4022, 3.506, 1.03 ) }
    dend_41 { pt3dadd( 116.66, 75.6918, 3.27251, 0.29 ) }
    dend_41 { pt3dadd( 117.664, 75.8707, 3.08911, 0.29 ) }
    dend_41 { pt3dadd( 118.532, 75.9956, 2.93435, 0.29 ) }
    dend_41 { pt3dadd( 119.697, 76.1434, 2.72506, 0.44 ) }
    dend_41 { pt3dadd( 120.331, 76.2374, 2.60579, 0.44 ) }
    dend_41 { pt3dadd( 120.83, 76.3473, 2.49747, 0.22 ) }
    dend_41 { pt3dadd( 121.627, 76.6701, 2.26365, 0.22 ) }
    dend_41 { pt3dadd( 122.04, 76.9698, 2.06264, 0.74 ) }
    dend_41 { pt3dadd( 122.444, 77.3958, 1.75197, 0.88 ) }
    dend_41 { pt3dadd( 122.937, 78.0534, 1.27778, 0.66 ) }
    dend_41 { pt3dadd( 123.491, 78.845, 0.672293, 0.52 ) }
    dend_41 { pt3dadd( 124.059, 79.6571, -2.92296E-4, 0.96 ) }
    dend_41 { pt3dadd( 124.392, 80.1194, -0.410066, 1.4 ) }
    dend_41 { pt3dadd( 125.004, 80.8731, -1.1304, 1.11 ) }
    dend_41 { pt3dadd( 125.502, 81.4111, -1.71158, 0.59 ) }
    dend_41 { pt3dadd( 126.248, 82.1398, -2.5547, 0.52 ) }
    dend_41 { pt3dadd( 126.867, 82.7134, -3.2479, 0.44 ) }
    dend_41 { pt3dadd( 127.194, 83.0123, -3.61792, 0.44 ) }
    dend_41 { pt3dadd( 127.732, 83.4995, -4.22425, 0.37 ) }
    dend_41 { pt3dadd( 128.451, 84.1278, -5.02501, 0.74 ) }
    dend_41 { pt3dadd( 129.023, 84.6098, -5.66884, 1.03 ) }
    dend_41 { pt3dadd( 129.701, 85.1541, -6.37845, 1.18 ) }
    dend_41 { pt3dadd( 130.147, 85.4657, -6.78892, 1.18 ) }
    dend_41 { pt3dadd( 130.74, 85.8127, -7.30494, 0.66 ) }
    dend_41 { pt3dadd( 131.826, 86.3245, -8.24248, 0.44 ) }
    dend_41 { pt3dadd( 132.462, 86.5697, -8.75118, 0.44 ) }
    dend_41 { pt3dadd( 133.062, 86.754, -9.2368, 0.44 ) }
    dend_41 { pt3dadd( 134.089, 87.0369, -10.0409, 0.96 ) }
    dend_41 { pt3dadd( 135.269, 87.3768, -10.9226, 0.96 ) }
    dend_41 { pt3dadd( 136.204, 87.6677, -11.574, 0.88 ) }
    dend_41 { pt3dadd( 136.897, 87.9151, -12.0298, 0.29 ) }
    dend_41 { pt3dadd( 137.631, 88.2085, -12.5056, 0.29 ) }
    dend_41 { pt3dadd( 138.335, 88.5567, -12.9534, 0.29 ) }
    dend_41 { pt3dadd( 139.09, 89.0215, -13.3986, 0.88 ) }
    dend_41 { pt3dadd( 139.596, 89.359, -13.6494, 0.88 ) }
    dend_41 { pt3dadd( 140.24, 89.7901, -13.944, 0.88 ) }
    dend_41 { pt3dadd( 140.977, 90.2604, -14.29, 0.66 ) }
    dend_41 { pt3dadd( 141.813, 90.7897, -14.6934, 0.29 ) }
    dend_41 { pt3dadd( 142.552, 91.2523, -15.0911, 0.81 ) }
    dend_41 { pt3dadd( 142.932, 91.502, -15.3161, 0.81 ) }
    dend_41 { pt3dadd( 143.348, 91.8055, -15.5806, 0.81 ) }
    dend_41 { pt3dadd( 143.733, 92.1132, -15.8158, 0.81 ) }
    dend_41 { pt3dadd( 144.499, 92.7721, -16.2463, 0.29 ) }
    dend_41 { pt3dadd( 144.805, 93.038, -16.4189, 0.29 ) }
    dend_41 { pt3dadd( 145.221, 93.4099, -16.6507, 0.66 ) }
    dend_41 { pt3dadd( 145.579, 93.7331, -16.8543, 0.66 ) }
    dend_41 { pt3dadd( 146.345, 94.4125, -17.2812, 0.29 ) }
    dend_41 { pt3dadd( 147.274, 95.2272, -17.7853, 0.88 ) }
    dend_41 { pt3dadd( 147.696, 95.5822, -18.0167, 0.88 ) }
    dend_41 { pt3dadd( 148.544, 96.2614, -18.5014, 0.37 ) }
    dend_41 { pt3dadd( 149.244, 96.7842, -18.9232, 0.59 ) }
    dend_41 { pt3dadd( 149.673, 97.0831, -19.1862, 0.74 ) }
    dend_41 { pt3dadd( 150.104, 97.3637, -19.4691, 0.74 ) }
    dend_41 { pt3dadd( 150.861, 97.8381, -19.9523, 0.44 ) }
    dend_41 { pt3dadd( 151.34, 98.1149, -20.2322, 0.66 ) }
    dend_41 { pt3dadd( 151.959, 98.4484, -20.5581, 0.44 ) }
    dend_41 { pt3dadd( 152.442, 98.6946, -20.7977, 0.29 ) }
    dend_41 { pt3dadd( 152.813, 98.8748, -20.9644, 0.29 ) }
    dend_41 { pt3dadd( 153.528, 99.2143, -21.2524, 0.81 ) }
    dend_41 { pt3dadd( 154.203, 99.5421, -21.5005, 0.81 ) }
    dend_41 { pt3dadd( 155.047, 99.9789, -21.8242, 0.29 ) }
    dend_41 { pt3dadd( 155.548, 100.238, -22.031, 0.29 ) }
    dend_41 { pt3dadd( 156.553, 100.738, -22.5047, 0.74 ) }
    dend_41 { pt3dadd( 157.013, 100.944, -22.7305, 0.88 ) }
    dend_41 { pt3dadd( 157.628, 101.175, -23.0487, 0.88 ) }
    dend_41 { pt3dadd( 158.264, 101.39, -23.3941, 0.88 ) }
    dend_41 { pt3dadd( 159.264, 101.713, -23.9975, 0.22 ) }
    dend_41 { pt3dadd( 159.907, 101.929, -24.4152, 0.22 ) }
    dend_41 { pt3dadd( 160.708, 102.21, -24.9803, 0.81 ) }
    dend_41 { pt3dadd( 161.518, 102.526, -25.5976, 1.03 ) }
    dend_41 { pt3dadd( 162.583, 102.987, -26.4379, 0.29 ) }
    dend_41 { pt3dadd( 163.284, 103.327, -27.021, 0.29 ) }
    dend_41 { pt3dadd( 164.05, 103.751, -27.6817, 1.03 ) }
    dend_41 { pt3dadd( 164.547, 104.053, -28.1123, 1.11 ) }
    dend_41 { pt3dadd( 165.342, 104.591, -28.8274, 0.96 ) }
    dend_41 { pt3dadd( 166.063, 105.124, -29.4824, 0.29 ) }
    dend_41 { pt3dadd( 166.616, 105.538, -29.9333, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_41 { pt3dadd( 167.214, 105.969, -30.354, 0.29 ) }
    dend_41 { pt3dadd( 167.725, 106.322, -30.6693, 0.29 ) }
    dend_41 { pt3dadd( 168.7, 106.975, -31.1827, 1.11 ) }
    dend_41 { pt3dadd( 169.082, 107.226, -31.3599, 1.25 ) }
    dend_41 { pt3dadd( 170.335, 108.053, -31.9115, 0.29 ) }
    dend_41 { pt3dadd( 170.964, 108.451, -32.1592, 0.22 ) }
    dend_41 { pt3dadd( 171.401, 108.716, -32.3264, 0.96 ) }
    dend_41 { pt3dadd( 171.834, 108.971, -32.4765, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 8/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 56.3212, 53.2732, 4.17099, 0.44 ) }
    dend_40 { pt3dadd( 57.4796, 54.2773, 4.44927, 0.44 ) }
    dend_40 { pt3dadd( 58.2773, 54.9133, 4.64838, 0.44 ) }
    dend_40 { pt3dadd( 58.9776, 55.4353, 4.83614, 0.59 ) }
    dend_40 { pt3dadd( 59.6124, 55.8852, 5.02334, 0.59 ) }
    dend_40 { pt3dadd( 60.137, 56.232, 5.20817, 0.37 ) }
    dend_40 { pt3dadd( 60.8401, 56.654, 5.47829, 0.74 ) }
    dend_40 { pt3dadd( 61.374, 56.9278, 5.70665, 0.74 ) }
    dend_40 { pt3dadd( 61.7737, 57.1184, 5.88803, 0.96 ) }
    dend_40 { pt3dadd( 62.2023, 57.3219, 6.09788, 0.96 ) }
    dend_40 { pt3dadd( 63.2953, 57.8767, 6.67231, 0.29 ) }
    dend_40 { pt3dadd( 63.8923, 58.2226, 7.04328, 0.29 ) }
    dend_40 { pt3dadd( 64.6535, 58.7265, 7.58941, 0.88 ) }
    dend_40 { pt3dadd( 65.048, 59.0053, 7.88409, 0.88 ) }
    dend_40 { pt3dadd( 65.4519, 59.308, 8.18963, 0.59 ) }
    dend_40 { pt3dadd( 65.866, 59.6132, 8.48072, 0.44 ) }
    dend_40 { pt3dadd( 66.4254, 60.0418, 8.84954, 0.29 ) }
    dend_40 { pt3dadd( 67.0963, 60.572, 9.29688, 1.33 ) }
    dend_40 { pt3dadd( 67.4019, 60.8217, 9.50561, 1.55 ) }
    dend_40 { pt3dadd( 67.6774, 61.0611, 9.69737, 1.55 ) }
    dend_40 { pt3dadd( 68.365, 61.7061, 10.1776, 0.88 ) }
    dend_40 { pt3dadd( 69.0134, 62.4306, 10.7006, 0.29 ) }
    dend_40 { pt3dadd( 69.2891, 62.8006, 10.9615, 0.29 ) }
    dend_40 { pt3dadd( 69.7846, 63.6063, 11.5183, 0.96 ) }
    dend_40 { pt3dadd( 70.0461, 64.0913, 11.8516, 1.11 ) }
    dend_40 { pt3dadd( 70.3106, 64.6074, 12.2118, 0.81 ) }
    dend_40 { pt3dadd( 70.8428, 65.6821, 12.9484, 0.29 ) }
    dend_40 { pt3dadd( 71.1267, 66.1947, 13.2862, 0.29 ) }
    dend_40 { pt3dadd( 71.4231, 66.6761, 13.5712, 0.96 ) }
    dend_40 { pt3dadd( 71.6368, 67.0026, 13.7386, 0.96 ) }
    dend_40 { pt3dadd( 71.9783, 67.5195, 13.9535, 0.96 ) }
    dend_40 { pt3dadd( 72.3633, 68.1074, 14.1391, 0.29 ) }
    dend_40 { pt3dadd( 72.7496, 68.7148, 14.2918, 0.29 ) }
    dend_40 { pt3dadd( 73.3075, 69.6322, 14.4961, 0.96 ) }
    dend_40 { pt3dadd( 73.6042, 70.133, 14.6044, 1.18 ) }
    dend_40 { pt3dadd( 73.9117, 70.631, 14.7404, 0.81 ) }
    dend_40 { pt3dadd( 74.2953, 71.2504, 14.9344, 0.29 ) }
    dend_40 { pt3dadd( 74.8459, 72.1274, 15.2548, 0.29 ) }
    dend_40 { pt3dadd( 75.3389, 72.8589, 15.5601, 0.96 ) }
    dend_40 { pt3dadd( 75.6481, 73.2589, 15.7456, 0.96 ) }
    dend_40 { pt3dadd( 76.5147, 74.2451, 16.2497, 0.37 ) }
    dend_40 { pt3dadd( 77.0565, 74.7936, 16.558, 0.37 ) }
    dend_40 { pt3dadd( 77.5062, 75.1941, 16.8046, 0.37 ) }
    dend_40 { pt3dadd( 77.9421, 75.5511, 17.0248, 0.29 ) }
    dend_40 { pt3dadd( 78.7673, 76.1969, 17.4, 0.96 ) }
    dend_40 { pt3dadd( 79.2107, 76.5274, 17.5721, 1.18 ) }
    dend_40 { pt3dadd( 79.6549, 76.844, 17.7071, 1.18 ) }
    dend_40 { pt3dadd( 80.0496, 77.1062, 17.8167, 1.18 ) }
    dend_40 { pt3dadd( 80.5804, 77.4559, 17.9542, 0.66 ) }
    dend_40 { pt3dadd( 81.3628, 78.0295, 18.1613, 0.29 ) }
    dend_40 { pt3dadd( 81.9535, 78.516, 18.3216, 0.29 ) }
    dend_40 { pt3dadd( 82.5297, 79.0419, 18.4831, 0.29 ) }
    dend_40 { pt3dadd( 82.9421, 79.4457, 18.5968, 0.96 ) }
    dend_40 { pt3dadd( 83.2381, 79.7539, 18.6812, 0.96 ) }
    dend_40 { pt3dadd( 84.1082, 80.6669, 18.9897, 0.29 ) }
    dend_40 { pt3dadd( 84.4309, 81.0149, 19.1266, 0.29 ) }
    dend_40 { pt3dadd( 84.8911, 81.5051, 19.3394, 0.74 ) }
    dend_40 { pt3dadd( 85.436, 82.0551, 19.6192, 0.88 ) }
    dend_40 { pt3dadd( 85.923, 82.5117, 19.8808, 0.88 ) }
    dend_40 { pt3dadd( 86.7879, 83.2413, 20.3446, 0.52 ) }
    dend_40 { pt3dadd( 87.3164, 83.6384, 20.6216, 1.18 ) }
    dend_40 { pt3dadd( 87.6941, 83.9092, 20.8079, 1.4 ) }
    dend_40 { pt3dadd( 88.0551, 84.1604, 20.9678, 1.4 ) }
    dend_40 { pt3dadd( 88.5364, 84.5083, 21.1712, 1.03 ) }
    dend_40 { pt3dadd( 89.4441, 85.2022, 21.4898, 0.29 ) }
    dend_40 { pt3dadd( 89.9129, 85.5806, 21.6122, 0.29 ) }
    dend_40 { pt3dadd( 90.3711, 85.958, 21.7131, 0.81 ) }
    dend_40 { pt3dadd( 90.7693, 86.2819, 21.7868, 1.03 ) }
    dend_40 { pt3dadd( 91.3334, 86.7094, 21.8725, 0.44 ) }
    dend_40 { pt3dadd( 92.1547, 87.2542, 21.9739, 0.29 ) }
    dend_40 { pt3dadd( 92.7976, 87.6496, 22.0519, 0.59 ) }
    dend_40 { pt3dadd( 93.2235, 87.8944, 22.1042, 0.59 ) }
    dend_40 { pt3dadd( 93.8027, 88.2094, 22.1746, 0.59 ) }
    dend_40 { pt3dadd( 94.4662, 88.5633, 22.2482, 0.74 ) }
    dend_40 { pt3dadd( 95.2061, 88.9568, 22.3434, 0.44 ) }
    dend_40 { pt3dadd( 96.2331, 89.5537, 22.4971, 0.81 ) }
    dend_40 { pt3dadd( 96.6326, 89.8242, 22.5783, 0.96 ) }
    dend_40 { pt3dadd( 97.0348, 90.1345, 22.6825, 0.96 ) }
    dend_40 { pt3dadd( 97.802, 90.8044, 22.9189, 0.44 ) }
    dend_40 { pt3dadd( 98.639, 91.5932, 23.1992, 0.44 ) }
    dend_40 { pt3dadd( 99.4744, 92.3995, 23.457, 0.96 ) }
    dend_40 { pt3dadd( 100.311, 93.2092, 23.6717, 1.55 ) }
    dend_40 { pt3dadd( 100.841, 93.7276, 23.7905, 1.55 ) }
    dend_40 { pt3dadd( 101.491, 94.3718, 23.8976, 1.03 ) }
    dend_40 { pt3dadd( 102.179, 95.0645, 23.9584, 0.37 ) }
    dend_40 { pt3dadd( 102.933, 95.8168, 23.9504, 0.96 ) }
    dend_40 { pt3dadd( 103.544, 96.4151, 23.9031, 0.96 ) }
    dend_40 { pt3dadd( 103.945, 96.8008, 23.8396, 0.96 ) }
    dend_40 { pt3dadd( 104.592, 97.4218, 23.7182, 0.52 ) }
    dend_40 { pt3dadd( 105.074, 97.8845, 23.6278, 0.44 ) }
    dend_40 { pt3dadd( 105.676, 98.4476, 23.5222, 0.44 ) }
    dend_40 { pt3dadd( 106.544, 99.2214, 23.4495, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_40 { pt3dadd( 107.101, 99.6907, 23.4631, 1.25 ) }
    dend_40 { pt3dadd( 107.818, 100.302, 23.5571, 0.59 ) }
    dend_40 { pt3dadd( 108.395, 100.805, 23.7052, 0.37 ) }
    dend_40 { pt3dadd( 108.91, 101.272, 23.8961, 0.37 ) }
    dend_40 { pt3dadd( 109.705, 102.015, 24.287, 0.66 ) }
    dend_40 { pt3dadd( 110.356, 102.611, 24.6978, 0.52 ) }
    dend_40 { pt3dadd( 110.763, 102.987, 25.0214, 0.37 ) }
    dend_40 { pt3dadd( 111.403, 103.589, 25.6144, 0.37 ) }
    dend_40 { pt3dadd( 111.882, 104.037, 26.0891, 0.37 ) }
    dend_40 { pt3dadd( 112.328, 104.444, 26.5369, 0.74 ) }
    dend_40 { pt3dadd( 113.126, 105.132, 27.308, 0.59 ) }
    dend_40 { pt3dadd( 114.064, 105.9, 28.2126, 0.96 ) }
    dend_40 { pt3dadd( 114.756, 106.46, 28.8908, 1.18 ) }
    dend_40 { pt3dadd( 115.048, 106.706, 29.1891, 1.18 ) }
    dend_40 { pt3dadd( 115.532, 107.147, 29.6909, 0.81 ) }
    dend_40 { pt3dadd( 115.93, 107.546, 30.0898, 0.81 ) }
    dend_40 { pt3dadd( 116.356, 108.01, 30.4835, 1.03 ) }
    dend_40 { pt3dadd( 116.964, 108.68, 30.9801, 0.59 ) }
    dend_40 { pt3dadd( 117.505, 109.27, 31.4029, 0.59 ) }
    dend_40 { pt3dadd( 118.022, 109.777, 31.7883, 0.59 ) }
    dend_40 { pt3dadd( 118.402, 110.113, 32.0461, 1.18 ) }
    dend_40 { pt3dadd( 118.743, 110.377, 32.2517, 1.18 ) }
    dend_40 { pt3dadd( 119.271, 110.742, 32.5381, 0.88 ) }
    dend_40 { pt3dadd( 119.898, 111.148, 32.854, 0.66 ) }
    dend_40 { pt3dadd( 120.921, 111.857, 33.3211, 0.59 ) }
    dend_40 { pt3dadd( 121.633, 112.401, 33.6105, 0.59 ) }
    dend_40 { pt3dadd( 122.028, 112.728, 33.7519, 1.11 ) }
    dend_40 { pt3dadd( 122.615, 113.232, 33.9127, 1.18 ) }
    dend_40 { pt3dadd( 123.063, 113.627, 34.01, 1.18 ) }
    dend_40 { pt3dadd( 123.801, 114.262, 34.1066, 1.03 ) }
    dend_40 { pt3dadd( 124.44, 114.801, 34.1516, 0.66 ) }
    dend_40 { pt3dadd( 125.014, 115.288, 34.1466, 0.66 ) }
    dend_40 { pt3dadd( 125.937, 116.094, 34.0702, 1.25 ) }
    dend_40 { pt3dadd( 126.332, 116.43, 34.0121, 1.25 ) }
    dend_40 { pt3dadd( 127.286, 117.221, 33.8383, 0.81 ) }
    dend_40 { pt3dadd( 127.958, 117.772, 33.7072, 0.96 ) }
    dend_40 { pt3dadd( 129.061, 118.711, 33.4584, 0.52 ) }
    dend_40 { pt3dadd( 129.908, 119.487, 33.2369, 0.52 ) }
    dend_40 { pt3dadd( 130.417, 119.999, 33.0791, 0.74 ) }
    dend_40 { pt3dadd( 130.935, 120.545, 32.9011, 0.74 ) }
    dend_40 { pt3dadd( 131.353, 121.018, 32.7712, 0.37 ) }
    dend_40 { pt3dadd( 136.72, 128.978, 35.5703, 0.37 ) }
    dend_40 { pt3dadd( 141.952, 137.303, 37.3909, 0.37 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 43/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 1.26017, -178.34, 27.7727, 0.52 ) }
    dend_6 { pt3dadd( 2.07904, -179.292, 27.9725, 0.52 ) }
    dend_6 { pt3dadd( 2.89777, -180.319, 28.1839, 0.52 ) }
    dend_6 { pt3dadd( 3.81089, -181.578, 28.3495, 0.52 ) }
    dend_6 { pt3dadd( 4.23036, -182.189, 28.3927, 0.52 ) }
    dend_6 { pt3dadd( 5.17871, -183.57, 28.4903, 0.52 ) }
    dend_6 { pt3dadd( 5.83728, -184.529, 28.5581, 0.52 ) }
    dend_6 { pt3dadd( 6.1531, -185.082, 28.5928, 0.52 ) }
    dend_6 { pt3dadd( 6.70908, -186.203, 28.6517, 0.52 ) }
    dend_6 { pt3dadd( 7.08484, -186.989, 28.6367, 0.52 ) }
    dend_6 { pt3dadd( 12.0889, -195.61, 29.4295, 0.52 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 54/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 1.26017, -178.34, 27.7727, 0.66 ) }
    dend_5 { pt3dadd( 0.777185, -179.823, 27.7377, 0.66 ) }
    dend_5 { pt3dadd( 0.308202, -181.35, 27.7013, 0.66 ) }
    dend_5 { pt3dadd( -0.338738, -183.481, 27.6515, 0.66 ) }
    dend_5 { pt3dadd( -0.834679, -185.125, 27.6157, 0.66 ) }
    dend_5 { pt3dadd( -1.01644, -185.832, 27.6174, 0.66 ) }
    dend_5 { pt3dadd( -1.1366, -186.399, 27.6284, 0.66 ) }
    dend_5 { pt3dadd( -1.21446, -187.055, 27.6515, 0.66 ) }
    dend_5 { pt3dadd( -1.19711, -187.81, 27.6914, 0.66 ) }
    dend_5 { pt3dadd( -1.0269, -189.082, 27.8251, 0.66 ) }
    dend_5 { pt3dadd( -0.803216, -190.482, 28.0032, 0.66 ) }
    dend_5 { pt3dadd( -0.709425, -191.138, 28.0887, 0.66 ) }
    dend_5 { pt3dadd( -0.611093, -191.914, 28.1838, 0.66 ) }
    dend_5 { pt3dadd( -0.463806, -193.208, 28.3277, 0.66 ) }
    dend_5 { pt3dadd( -0.338369, -194.599, 28.4564, 0.66 ) }
    dend_5 { pt3dadd( -0.174515, -196.2, 28.5345, 0.66 ) }
    dend_5 { pt3dadd( -0.0260484, -197.457, 28.6259, 0.66 ) }
    dend_5 { pt3dadd( 0.194949, -198.827, 28.7689, 0.66 ) }
    dend_5 { pt3dadd( 0.466229, -200.125, 28.9475, 0.66 ) }
    dend_5 { pt3dadd( 1.04917, -202.21, 29.2873, 0.66 ) }
    dend_5 { pt3dadd( 1.62055, -203.771, 29.5671, 0.66 ) }
    dend_5 { pt3dadd( 2.55651, -205.855, 29.976, 0.66 ) }
    dend_5 { pt3dadd( 3.23186, -207.171, 30.3179, 0.66 ) }
    dend_5 { pt3dadd( 3.75136, -208.101, 30.5902, 0.66 ) }
    dend_5 { pt3dadd( 4.62112, -209.545, 31.0651, 0.66 ) }
    dend_5 { pt3dadd( 5.19529, -210.449, 31.3991, 0.66 ) }
    dend_5 { pt3dadd( 5.92176, -211.742, 31.8795, 0.66 ) }
    dend_5 { pt3dadd( 6.60246, -213.054, 32.1965, 0.66 ) }
    dend_5 { pt3dadd( 7.54615, -222.559, 35.1563, 0.66 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 83/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 171.834, 108.971, -32.4765, 0.22 ) }
    dend_43 { pt3dadd( 172.746, 109.473, -32.5216, 0.22 ) }
    dend_43 { pt3dadd( 173.354, 109.803, -32.5535, 0.66 ) }
    dend_43 { pt3dadd( 173.719, 110.017, -32.5858, 0.66 ) }
    dend_43 { pt3dadd( 175.497, 111.053, -32.7962, 0.22 ) }
    dend_43 { pt3dadd( 176.266, 111.518, -32.8967, 0.88 ) }
    dend_43 { pt3dadd( 176.599, 111.721, -32.9477, 1.03 ) }
    dend_43 { pt3dadd( 176.967, 111.944, -33.0195, 1.03 ) }
    dend_43 { pt3dadd( 178.251, 112.714, -33.3398, 0.22 ) }
    dend_43 { pt3dadd( 179.107, 113.229, -33.593, 0.22 ) }
    dend_43 { pt3dadd( 179.881, 113.696, -33.8567, 0.44 ) }
    dend_43 { pt3dadd( 180.285, 113.942, -34.0005, 0.44 ) }
    dend_43 { pt3dadd( 181.319, 114.556, -34.3737, 0.22 ) }
    dend_43 { pt3dadd( 182.217, 115.066, -34.696, 0.74 ) }
    dend_43 { pt3dadd( 182.608, 115.283, -34.8382, 0.88 ) }
    dend_43 { pt3dadd( 182.957, 115.499, -34.9617, 0.88 ) }
    dend_43 { pt3dadd( 183.685, 115.969, -35.2094, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_43 { pt3dadd( 184.403, 116.475, -35.4494, 0.29 ) }
    dend_43 { pt3dadd( 184.775, 116.763, -35.5839, 0.59 ) }
    dend_43 { pt3dadd( 185.28, 117.173, -35.781, 0.59 ) }
    dend_43 { pt3dadd( 186.172, 117.956, -36.1913, 0.22 ) }
    dend_43 { pt3dadd( 186.641, 118.387, -36.4268, 0.81 ) }
    dend_43 { pt3dadd( 187.072, 118.797, -36.65, 1.03 ) }
    dend_43 { pt3dadd( 187.514, 119.217, -36.8679, 1.03 ) }
    dend_43 { pt3dadd( 188.461, 120.116, -37.3425, 0.44 ) }
    dend_43 { pt3dadd( 189.062, 120.676, -37.6494, 0.52 ) }
    dend_43 { pt3dadd( 189.939, 121.475, -38.1343, 0.22 ) }
    dend_43 { pt3dadd( 190.588, 122.061, -38.483, 0.37 ) }
    dend_43 { pt3dadd( 191.076, 122.488, -38.7411, 0.22 ) }
    dend_43 { pt3dadd( 191.762, 123.075, -39.1015, 0.81 ) }
    dend_43 { pt3dadd( 192.209, 123.432, -39.3406, 0.81 ) }
    dend_43 { pt3dadd( 193.201, 124.202, -39.8619, 0.44 ) }
    dend_43 { pt3dadd( 193.775, 124.64, -40.1565, 0.37 ) }
    dend_43 { pt3dadd( 194.486, 125.168, -40.516, 0.59 ) }
    dend_43 { pt3dadd( 194.878, 125.458, -40.7043, 0.37 ) }
    dend_43 { pt3dadd( 196.409, 126.577, -41.3488, 0.29 ) }
    dend_43 { pt3dadd( 197.855, 127.681, -41.8949, 0.29 ) }
    dend_43 { pt3dadd( 198.619, 128.311, -42.1522, 0.88 ) }
    dend_43 { pt3dadd( 198.934, 128.579, -42.2518, 1.11 ) }
    dend_43 { pt3dadd( 199.4, 128.979, -42.3993, 0.81 ) }
    dend_43 { pt3dadd( 200.862, 130.247, -42.8694, 0.22 ) }
    dend_43 { pt3dadd( 201.825, 131.096, -43.1796, 0.22 ) }
    dend_43 { pt3dadd( 203.174, 132.257, -43.7095, 0.22 ) }
    dend_43 { pt3dadd( 204.237, 133.137, -44.2549, 0.22 ) }
    dend_43 { pt3dadd( 205.169, 133.872, -44.8171, 0.88 ) }
    dend_43 { pt3dadd( 205.489, 134.103, -45.0394, 1.25 ) }
    dend_43 { pt3dadd( 205.844, 134.331, -45.3129, 1.25 ) }
    dend_43 { pt3dadd( 207.15, 135.068, -46.3783, 0.44 ) }
    dend_43 { pt3dadd( 208.542, 135.776, -47.532, 0.22 ) }
    dend_43 { pt3dadd( 209.082, 136.049, -47.9781, 0.44 ) }
    dend_43 { pt3dadd( 209.909, 136.467, -48.6279, 0.29 ) }
    dend_43 { pt3dadd( 210.53, 136.785, -49.0967, 0.66 ) }
    dend_43 { pt3dadd( 211.389, 137.232, -49.6981, 0.52 ) }
    dend_43 { pt3dadd( 211.979, 137.551, -50.0587, 0.29 ) }
    dend_43 { pt3dadd( 212.926, 138.099, -50.6371, 0.96 ) }
    dend_43 { pt3dadd( 213.667, 138.547, -51.1177, 0.96 ) }
    dend_43 { pt3dadd( 214.037, 138.779, -51.3666, 0.96 ) }
    dend_43 { pt3dadd( 216.14, 140.153, -52.861, 0.22 ) }
    dend_43 { pt3dadd( 217.454, 141.037, -53.8108, 0.22 ) }
    dend_43 { pt3dadd( 218.64, 141.858, -54.6814, 0.66 ) }
    dend_43 { pt3dadd( 219.202, 142.249, -55.0808, 0.66 ) }
    dend_43 { pt3dadd( 220.487, 143.158, -55.9991, 0.22 ) }
    dend_43 { pt3dadd( 221.096, 143.593, -56.4433, 0.66 ) }
    dend_43 { pt3dadd( 221.695, 144.012, -56.877, 0.66 ) }
    dend_43 { pt3dadd( 222.234, 144.358, -57.2669, 0.37 ) }
    dend_43 { pt3dadd( 223.618, 145.183, -58.2019, 0.22 ) }
    dend_43 { pt3dadd( 224.494, 145.666, -58.7474, 0.66 ) }
    dend_43 { pt3dadd( 225.367, 146.103, -59.2371, 0.66 ) }
    dend_43 { pt3dadd( 227.091, 146.834, -60.2497, 0.22 ) }
    dend_43 { pt3dadd( 227.915, 147.136, -60.7885, 0.22 ) }
    dend_43 { pt3dadd( 228.501, 147.312, -61.1955, 0.74 ) }
    dend_43 { pt3dadd( 229.153, 147.452, -61.6763, 0.88 ) }
    dend_43 { pt3dadd( 229.578, 147.512, -61.9936, 0.88 ) }
    dend_43 { pt3dadd( 232.02, 147.705, -63.7008, 0.29 ) }
    dend_43 { pt3dadd( 232.686, 147.728, -64.1552, 0.44 ) }
    dend_43 { pt3dadd( 233.593, 147.757, -64.7483, 0.22 ) }
    dend_43 { pt3dadd( 234.234, 147.793, -65.1423, 0.59 ) }
    dend_43 { pt3dadd( 234.639, 147.832, -65.3583, 0.59 ) }
    dend_43 { pt3dadd( 236.593, 148.087, -66.2209, 0.22 ) }
    dend_43 { pt3dadd( 237.65, 148.246, -66.582, 0.66 ) }
    dend_43 { pt3dadd( 238.433, 148.383, -66.8226, 0.66 ) }
    dend_43 { pt3dadd( 240.487, 148.8, -67.4596, 0.15 ) }
    dend_43 { pt3dadd( 242.332, 149.223, -68.0253, 0.15 ) }
    dend_43 { pt3dadd( 243.406, 149.493, -68.3246, 0.59 ) }
    dend_43 { pt3dadd( 243.898, 149.626, -68.4612, 0.88 ) }
    dend_43 { pt3dadd( 246.221, 150.224, -68.939, 0.22 ) }
    dend_43 { pt3dadd( 247.087, 150.432, -69.087, 0.59 ) }
    dend_43 { pt3dadd( 247.389, 150.499, -69.1284, 0.59 ) }
    dend_43 { pt3dadd( 249.347, 150.89, -69.3511, 0.22 ) }
    dend_43 { pt3dadd( 250.972, 151.19, -69.4961, 0.22 ) }
    dend_43 { pt3dadd( 252.819, 151.505, -69.6241, 0.22 ) }
    dend_43 { pt3dadd( 253.72, 151.614, -69.6532, 0.74 ) }
    dend_43 { pt3dadd( 254.392, 151.68, -69.6471, 0.88 ) }
    dend_43 { pt3dadd( 254.774, 151.708, -69.6465, 0.59 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 77/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 171.834, 108.971, -32.4765, 0.22 ) }
    dend_42 { pt3dadd( 173.068, 108.413, -32.4892, 0.22 ) }
    dend_42 { pt3dadd( 173.672, 108.114, -32.4823, 0.74 ) }
    dend_42 { pt3dadd( 173.942, 107.975, -32.4761, 0.74 ) }
    dend_42 { pt3dadd( 175.874, 106.906, -32.4195, 0.22 ) }
    dend_42 { pt3dadd( 176.409, 106.588, -32.4023, 0.22 ) }
    dend_42 { pt3dadd( 177.251, 106.062, -32.3382, 0.81 ) }
    dend_42 { pt3dadd( 177.653, 105.78, -32.2877, 0.81 ) }
    dend_42 { pt3dadd( 178.078, 105.478, -32.2187, 0.81 ) }
    dend_42 { pt3dadd( 179.196, 104.706, -32.0036, 0.22 ) }
    dend_42 { pt3dadd( 179.881, 104.264, -31.8501, 0.22 ) }
    dend_42 { pt3dadd( 180.745, 103.755, -31.6619, 0.52 ) }
    dend_42 { pt3dadd( 181.101, 103.576, -31.5953, 0.52 ) }
    dend_42 { pt3dadd( 181.978, 103.19, -31.43, 0.22 ) }
    dend_42 { pt3dadd( 182.722, 102.889, -31.2929, 0.22 ) }
    dend_42 { pt3dadd( 183.492, 102.609, -31.1585, 0.66 ) }
    dend_42 { pt3dadd( 184.007, 102.432, -31.0819, 0.66 ) }
    dend_42 { pt3dadd( 185.252, 102.011, -30.9476, 0.22 ) }
    dend_42 { pt3dadd( 185.718, 101.852, -30.8947, 0.66 ) }
    dend_42 { pt3dadd( 186.215, 101.683, -30.8414, 0.88 ) }
    dend_42 { pt3dadd( 186.668, 101.552, -30.8234, 0.88 ) }
    dend_42 { pt3dadd( 187.031, 101.475, -30.8298, 0.88 ) }
    dend_42 { pt3dadd( 187.468, 101.416, -30.8591, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_42 { pt3dadd( 187.986, 101.379, -30.9102, 0.22 ) }
    dend_42 { pt3dadd( 189.596, 101.31, -31.1066, 0.22 ) }
    dend_42 { pt3dadd( 190.828, 101.296, -31.2571, 0.96 ) }
    dend_42 { pt3dadd( 191.298, 101.303, -31.3134, 0.96 ) }
    dend_42 { pt3dadd( 192.984, 101.356, -31.5031, 0.22 ) }
    dend_42 { pt3dadd( 193.501, 101.383, -31.5564, 0.52 ) }
    dend_42 { pt3dadd( 193.894, 101.409, -31.5914, 0.52 ) }
    dend_42 { pt3dadd( 195.886, 101.563, -31.7463, 0.22 ) }
    dend_42 { pt3dadd( 196.548, 101.611, -31.7844, 0.81 ) }
    dend_42 { pt3dadd( 198.196, 101.687, -31.8376, 0.22 ) }
    dend_42 { pt3dadd( 198.963, 101.717, -31.8437, 0.22 ) }
    dend_42 { pt3dadd( 199.992, 101.739, -31.8274, 0.74 ) }
    dend_42 { pt3dadd( 200.405, 101.738, -31.8097, 1.03 ) }
    dend_42 { pt3dadd( 200.714, 101.728, -31.7878, 1.03 ) }
    dend_42 { pt3dadd( 202.405, 101.627, -31.6347, 0.22 ) }
    dend_42 { pt3dadd( 202.991, 101.583, -31.5679, 0.59 ) }
    dend_42 { pt3dadd( 203.359, 101.554, -31.5241, 0.59 ) }
    dend_42 { pt3dadd( 205.469, 101.39, -31.261, 0.22 ) }
    dend_42 { pt3dadd( 206.275, 101.333, -31.1592, 0.59 ) }
    dend_42 { pt3dadd( 206.665, 101.31, -31.1149, 0.59 ) }
    dend_42 { pt3dadd( 208.586, 101.228, -30.9578, 0.22 ) }
    dend_42 { pt3dadd( 209.254, 101.197, -30.8976, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_35, dend_30, dend_29, dend_28, dend_23, dend_0, dend_49, dend_36, dend_34, dend_31, dend_25, dend_24, dend_16, dend_1, dend_53, dend_50, dend_46, dend_37, dend_33, dend_32, dend_27, dend_26, dend_20, dend_17, dend_11, dend_2, dend_55, dend_54, dend_52, dend_51, dend_48, dend_47, dend_45, dend_38, dend_22, dend_21, dend_19, dend_18, dend_13, dend_12, dend_8, dend_3, dend_44, dend_39, dend_15, dend_14, dend_10, dend_9, dend_7, dend_4, dend_41, dend_40, dend_6, dend_5, dend_43, dend_42]}
    ModelViewParmSubset_2 = new SectionList()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_35, dend_30, dend_29, dend_28, dend_23, dend_0, dend_49, dend_36, dend_34, dend_31, dend_25, dend_24, dend_16, dend_1, dend_53, dend_50, dend_46, dend_37, dend_33, dend_32, dend_27, dend_26, dend_20, dend_17, dend_11, dend_2, dend_55, dend_54, dend_52, dend_51, dend_48, dend_47, dend_45, dend_38, dend_22, dend_21, dend_19, dend_18, dend_13, dend_12, dend_8, dend_3, dend_44, dend_39, dend_15, dend_14, dend_10, dend_9, dend_7, dend_4, dend_41, dend_40, dend_6, dend_5, dend_43, dend_42]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_35, dend_30, dend_29, dend_28, dend_23, dend_0, axon_0, dend_49, dend_36, dend_34, dend_31, dend_25, dend_24, dend_16, dend_1, axon_1, dend_53, dend_50, dend_46, dend_37, dend_33, dend_32, dend_27, dend_26, dend_20, dend_17, dend_11, dend_2, dend_55, dend_54, dend_52, dend_51, dend_48, dend_47, dend_45, dend_38, dend_22, dend_21, dend_19, dend_18, dend_13, dend_12, dend_8, dend_3, dend_44, dend_39, dend_15, dend_14, dend_10, dend_9, dend_7, dend_4, dend_41, dend_40, dend_6, dend_5, dend_43, dend_42]}
    ModelViewParmSubset_5 = new SectionList()
    dend_35 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_29 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_28 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_34 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_24 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_1 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_46 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_32 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_26 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_55 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_54 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_52 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_51 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_48 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_45 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_22 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_21 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_19 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_18 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_12 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_8 OneSecGrp_SectionRef_44.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_3 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_44 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_15 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_14 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_7 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_4 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_41 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_40 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_43 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_35 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_30 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_16 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_49 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_31 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_53 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_23 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_36 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_17 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_50 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_37 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_25 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_38 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_39 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_11 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_13 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_47 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_9 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_10 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_42 OneSecGrp_SectionRef_59.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 9
    dend_28 nseg = 11
    dend_34 nseg = 7
    dend_24 nseg = 7
    dend_1 nseg = 3
    dend_46 nseg = 5
    dend_33 nseg = 5
    dend_32 nseg = 9
    dend_27 nseg = 7
    dend_26 nseg = 5
    dend_20 nseg = 9
    dend_55 nseg = 11
    dend_54 nseg = 7
    dend_52 nseg = 7
    dend_51 nseg = 11
    dend_48 nseg = 3
    dend_45 nseg = 9
    dend_22 nseg = 3
    dend_21 nseg = 3
    dend_19 nseg = 11
    dend_18 nseg = 7
    dend_12 nseg = 7
    dend_8 nseg = 7
    dend_3 nseg = 3
    dend_44 nseg = 7
    dend_15 nseg = 5
    dend_14 nseg = 9
    dend_7 nseg = 11
    dend_4 nseg = 3
    dend_41 nseg = 7
    dend_40 nseg = 7
    dend_5 nseg = 3
    dend_43 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L6_MC_a405be0ec4_0_0


