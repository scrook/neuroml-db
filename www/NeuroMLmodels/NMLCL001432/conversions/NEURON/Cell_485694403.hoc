// Cell: Cell_485694403
/*
{
  "id" : "Cell_485694403",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "326.2, 440.326, 37.52, 13.4076", "332.904, 440.326, 37.52, 13.4076", "339.608, 440.326, 37.52, 13.4076" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "332.904, 440.326, 37.52, 1.0", "338.745, 454.142, 37.52, 1.0", "344.587, 467.958, 37.52, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "338.569, 443.088, 37.4245, 0.4606", "339.326, 443.946, 37.38, 0.7874", "340.098, 444.791, 37.3206, 1.0544", "340.856, 445.647, 37.2523, 1.1768", "341.835, 446.237, 37.1605, 1.1578", "342.858, 446.746, 37.0227, 0.942" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "335.594, 444.879, 33.7901, 0.2364", "336.026, 445.92, 33.3136, 0.7008", "336.127, 447.05, 32.9717, 0.692", "336.279, 448.18, 32.7606, 0.7998", "336.663, 449.258, 32.6631, 1.079", "337.138, 450.298, 32.648, 1.2164", "337.509, 451.381, 32.6906, 0.8108", "337.893, 452.458, 32.746, 0.5144" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "334.392, 445.159, 43.934, 0.2302", "334.61, 446.211, 44.8907, 0.299", "334.594, 447.318, 45.6067, 0.314", "334.406, 448.425, 46.1339, 0.3716", "334.12, 449.521, 46.5105, 0.3356", "333.624, 450.546, 46.7771, 0.3016", "333.231, 451.617, 46.9781, 0.2758", "333.145, 452.753, 47.1643, 0.275", "333.14, 453.893, 47.374, 0.2756", "333.239, 455.028, 47.626, 0.2764", "333.376, 456.157, 47.9349, 0.2782", "333.518, 457.282, 48.3162, 0.281", "333.68, 458.397, 48.7869, 0.2864", "334.103, 459.429, 49.3867, 0.2974", "334.597, 460.414, 50.141, 0.3124", "335.086, 461.379, 51.051, 0.3696", "335.564, 462.319, 52.1346, 0.3312", "335.829, 463.309, 53.3761, 0.2934", "335.991, 464.303, 54.7042, 0.2622", "336.15, 465.298, 56.0308, 0.2516", "336.297, 466.225, 57.5462, 0.2288", "336.394, 466.836, 59.901, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "327.303, 442.473, 37.4587, 0.2412", "326.173, 442.651, 37.4875, 0.4156", "325.046, 442.847, 37.5245, 0.5484", "323.948, 443.167, 37.5757, 0.7254", "322.856, 442.826, 37.6194, 0.7052", "321.764, 442.486, 37.6387, 0.5248" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "331.21, 436.635, 28.0591, 0.6326", "331.137, 435.625, 26.8599, 0.3504", "331.131, 434.539, 25.982, 0.491", "330.401, 433.896, 25.1547, 0.488", "329.922, 432.911, 24.5706, 0.539", "329.689, 431.809, 24.1167, 0.4398", "329.464, 430.699, 23.7184, 0.3988", "329.083, 429.633, 23.3356, 0.4018", "328.589, 428.613, 22.9526, 0.5152", "328.144, 427.571, 22.5711, 0.6592", "327.631, 426.561, 22.1869, 0.6598", "327.035, 425.598, 21.798, 0.846", "326.431, 424.64, 21.3942, 0.8226", "325.841, 423.677, 20.9629, 0.7486", "325.51, 422.603, 20.4719, 0.5674", "324.991, 421.599, 20.043, 0.4258", "324.382, 420.64, 19.7173, 0.3682", "323.705, 419.721, 19.5024, 0.4226", "323.161, 418.717, 19.4059, 0.432", "322.853, 417.622, 19.6888, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "334.667, 433.616, 38.031, 2.5094", "333.681, 431.559, 38.3328, 1.324", "333.43, 429.31, 38.7136, 1.7762", "333.831, 427.069, 39.1205, 1.5654" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "344.587, 467.958, 37.52, 1.0", "350.428, 481.774, 37.52, 1.0", "356.269, 495.59, 37.52, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "342.858, 446.746, 37.0227, 0.942", "343.846, 447.495, 37.6894, 0.9156", "344.922, 447.871, 37.905, 0.869", "346.059, 447.956, 38.117, 0.6054", "347.138, 448.329, 38.3057, 0.5134" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "342.858, 446.746, 37.0227, 0.942", "343.362, 447.355, 36.8416, 0.7346", "344.346, 447.93, 36.6125, 0.7976", "345.1, 448.783, 36.3577, 0.965", "345.821, 449.665, 36.0886, 1.08", "346.452, 450.611, 35.8179, 1.1134", "347.071, 451.568, 35.5432, 1.1276", "347.603, 452.573, 35.2509, 1.1486", "348.135, 453.579, 34.953, 1.2126", "348.798, 454.504, 34.6702, 1.2108" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "337.893, 452.458, 32.746, 0.5144", "337.26, 451.84, 31.5636, 0.4662", "336.267, 451.448, 30.6821, 0.4972", "335.229, 451.761, 29.8987, 0.6072", "334.167, 452.069, 29.1746, 0.6142", "333.15, 451.621, 28.5477, 0.6658", "332.053, 451.364, 28.0624, 0.5584", "331.321, 452.225, 27.7371, 0.6606" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "337.893, 452.458, 32.746, 0.5144", "337.831, 453.606, 32.7701, 0.4882", "337.522, 454.706, 32.7116, 0.4244", "337.216, 455.806, 32.6018, 0.375", "337.593, 456.878, 32.4705, 0.389", "338.367, 457.718, 32.3568, 0.3632", "339.02, 458.656, 32.2655, 0.3546", "339.563, 459.661, 32.1748, 0.371", "340.055, 460.693, 32.0575, 0.4736", "340.377, 461.789, 31.915, 0.5436", "340.691, 462.888, 31.7573, 0.5818" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "321.764, 442.486, 37.6387, 0.5248", "321.861, 443.361, 37.6146, 0.4248", "321.987, 444.498, 37.5348, 0.4786", "321.904, 445.637, 37.4041, 0.5444", "321.598, 446.738, 37.2355, 0.6172", "321.228, 447.818, 37.0454, 0.5338", "320.787, 448.869, 36.8424, 0.5258", "320.352, 449.924, 36.6346, 0.7066", "319.96, 450.996, 36.4277, 0.7806", "319.61, 452.081, 36.2382, 0.5878", "319.282, 453.176, 36.0816, 0.4574", "318.825, 454.223, 35.9621, 0.4884", "318.263, 455.219, 35.8761, 0.5924", "317.907, 456.306, 35.8095, 0.5586", "317.796, 457.444, 35.7437, 0.4554" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "321.764, 442.486, 37.6387, 0.5248", "321.302, 442.428, 38.2166, 0.2372", "320.174, 442.332, 38.6033, 0.356", "319.05, 442.126, 38.7545, 0.4304", "318.016, 441.641, 38.9141, 0.552", "317.254, 440.793, 39.0967, 0.8476", "316.615, 439.849, 39.2986, 1.0556", "316.017, 438.876, 39.5147, 1.0512", "315.488, 437.867, 39.741, 0.8752", "314.884, 436.899, 39.9633, 0.8878", "314.496, 435.827, 40.1752, 0.8562", "313.86, 434.88, 40.3822, 0.8476", "313.217, 433.939, 40.6188, 0.8148" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "333.831, 427.069, 39.1205, 1.5654", "334.495, 426.142, 38.7652, 0.7024", "335.082, 425.163, 38.5907, 0.7862", "335.621, 424.156, 38.4289, 0.7906", "336.266, 423.214, 38.2956, 0.5992", "336.986, 422.324, 38.2024, 0.5224", "337.568, 421.34, 38.1595, 0.6038", "337.902, 420.246, 38.1755, 0.8164", "338.141, 419.127, 38.2435, 0.9292", "338.332, 418.0, 38.3407, 0.6904", "338.343, 416.858, 38.4364, 0.5838", "338.129, 415.734, 38.5126, 0.5616", "337.974, 414.6, 38.5557, 0.5896", "337.924, 413.458, 38.5792, 0.7652", "337.835, 412.317, 38.5997, 0.949", "337.471, 411.233, 38.6238, 1.071", "337.052, 410.169, 38.656, 0.9874", "336.632, 409.105, 38.701, 0.7368", "336.193, 408.049, 38.757, 0.7286", "335.85, 406.957, 38.7996, 0.775", "335.748, 405.818, 38.7999, 0.7982", "336.035, 404.711, 38.7691, 0.9212", "336.114, 403.57, 38.7282, 0.99", "336.167, 402.427, 38.6848, 0.9728", "336.47, 401.324, 38.6467, 0.959", "336.836, 400.24, 38.6224, 1.0736", "337.296, 399.193, 38.6128, 1.063", "337.505, 398.067, 38.6112, 0.9814", "337.665, 396.935, 38.6114, 0.9026", "338.297, 395.981, 38.6123, 1.0896", "338.965, 395.053, 38.6126, 1.1938", "339.61, 394.108, 38.61, 1.1926" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "333.831, 427.069, 39.1205, 1.5654", "333.696, 425.033, 37.5542, 0.7186", "333.207, 424.006, 37.27, 0.541", "333.142, 422.872, 37.0135, 0.5834", "333.317, 421.745, 36.7979, 0.7814", "333.542, 420.626, 36.6358, 0.842", "333.701, 419.493, 36.5263, 0.6572", "333.59, 418.356, 36.4482, 0.599", "333.211, 417.279, 36.3647, 0.6476", "332.793, 416.215, 36.2639, 0.6882", "332.378, 415.15, 36.1483, 0.5698", "331.807, 414.159, 36.0326, 0.6074", "331.15, 413.223, 35.9369, 0.5416", "330.726, 412.161, 35.8795, 0.6454", "330.466, 411.048, 35.863, 0.6376", "330.083, 409.97, 35.8672, 0.7058", "329.536, 408.965, 35.8621, 0.6426", "328.987, 407.962, 35.8243, 0.771", "328.497, 406.928, 35.7577, 0.9444", "328.051, 405.875, 35.6678, 0.9084", "327.588, 404.83, 35.5625, 0.7564", "327.392, 403.704, 35.4558, 0.8718", "327.145, 402.587, 35.3724, 0.9786", "326.808, 401.495, 35.3251, 1.0232", "326.332, 400.455, 35.3038, 0.9394", "325.783, 399.452, 35.2794, 0.902", "325.648, 398.316, 35.2209, 0.9406" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "333.831, 427.069, 39.1205, 1.5654", "334.051, 426.065, 39.3285, 1.2798", "334.292, 424.949, 39.5324, 1.1006", "334.504, 423.828, 39.7107, 1.1152", "334.674, 422.698, 39.8496, 1.2972", "334.793, 421.561, 39.9361, 1.111" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "347.138, 448.329, 38.3057, 0.5134", "347.306, 448.582, 39.0272, 0.2646", "347.889, 449.38, 40.4253, 0.405", "348.811, 449.98, 41.1009, 0.4194", "349.9, 449.856, 41.783, 0.4764", "350.782, 449.196, 42.5006, 0.5078", "351.285, 448.215, 43.2264, 0.49", "351.612, 447.155, 43.92, 0.5882", "351.947, 446.092, 44.553, 0.5832", "352.837, 445.413, 45.129, 0.5744", "353.885, 445.002, 45.6257, 0.5504", "355.011, 444.91, 46.0541, 0.545", "356.146, 444.906, 46.424, 0.5712", "357.28, 444.928, 46.7664, 0.446" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "347.138, 448.329, 38.3057, 0.5134", "348.282, 448.315, 38.5053, 0.45", "349.426, 448.308, 38.5412, 0.45", "350.569, 448.352, 38.5316, 0.5426", "351.703, 448.489, 38.5101, 0.7242", "352.832, 448.673, 38.507, 0.7502", "353.964, 448.84, 38.5392, 0.762", "355.103, 448.927, 38.6098, 0.7562", "356.229, 448.76, 38.717, 0.748", "357.312, 448.405, 38.848, 0.6714", "358.381, 448.001, 38.9833, 0.6426", "359.457, 447.615, 39.0967, 0.5492", "360.552, 447.286, 39.1597, 0.5176", "361.668, 447.034, 39.1482, 0.6594", "362.805, 446.931, 39.048, 0.722", "363.945, 446.944, 38.8595, 0.6316", "365.073, 447.089, 38.6016, 0.6056", "366.2, 447.246, 38.299, 0.6928", "367.333, 447.225, 37.9705, 0.7794", "368.463, 447.114, 37.6331, 0.8098", "369.595, 447.024, 37.2999, 0.807", "370.73, 446.958, 36.981, 0.787", "371.866, 446.923, 36.6825, 0.783", "373.006, 446.905, 36.4106, 0.6144", "374.143, 446.835, 36.1757, 0.5048", "375.267, 446.644, 35.9937, 0.5668", "376.389, 446.423, 35.8688, 0.6104", "377.517, 446.238, 35.7885, 0.6284", "378.649, 446.074, 35.7342, 0.6674", "379.771, 445.855, 35.6857, 0.6798", "380.859, 445.504, 35.6261, 0.6048", "381.99, 445.366, 35.5387, 0.4822", "383.123, 445.483, 35.4122, 0.493", "384.264, 445.506, 35.2475, 0.4068", "385.374, 445.255, 35.0633, 0.3336", "386.372, 444.713, 34.8933, 0.2804", "387.337, 444.099, 34.7612, 0.2746", "388.305, 443.49, 34.6741, 0.2748", "389.296, 442.921, 34.6287, 0.2748", "390.333, 442.439, 34.6237, 0.2752", "391.408, 442.047, 34.6587, 0.2756", "392.511, 441.749, 34.7357, 0.2766", "393.637, 441.554, 34.8597, 0.278", "394.775, 441.473, 35.0308, 0.281", "395.914, 441.517, 35.2422, 0.2864", "397.04, 441.689, 35.4855, 0.2976", "398.112, 442.069, 35.7535, 0.3126", "399.145, 442.544, 36.0422, 0.3672", "400.155, 443.063, 36.3793, 0.3376", "401.035, 443.774, 36.7716, 0.3024", "401.809, 444.598, 37.1686, 0.2762", "402.524, 445.478, 37.534, 0.2746", "403.195, 446.397, 37.8442, 0.2746", "403.857, 447.325, 38.0834, 0.2746", "404.497, 448.271, 38.2474, 0.2746", "405.108, 449.237, 38.3463, 0.2746", "405.796, 450.149, 38.4003, 0.2748", "406.612, 450.95, 38.4269, 0.275", "407.516, 451.651, 38.439, 0.2752", "408.473, 452.277, 38.4454, 0.2758", "409.48, 452.82, 38.4504, 0.2768", "410.524, 453.285, 38.4563, 0.2788", "411.588, 453.706, 38.4639, 0.2826", "412.658, 454.111, 38.474, 0.2892", "413.746, 454.465, 38.4871, 0.3016", "414.856, 454.743, 38.5039, 0.3254", "415.976, 454.976, 38.5258, 0.366", "417.094, 455.212, 38.5535, 0.4582", "418.209, 455.473, 38.5888, 0.5474", "419.292, 455.839, 38.6324, 0.4652", "420.319, 456.341, 38.6851, 0.3992", "421.364, 456.806, 38.7492, 0.4292", "422.459, 457.134, 38.8282, 0.431", "423.587, 457.317, 38.9183, 0.5254", "424.728, 457.376, 39.0076, 0.4606", "425.871, 457.416, 39.0832, 0.439", "426.989, 457.653, 39.1348, 0.5018", "428.03, 458.125, 39.1558, 0.5896", "429.016, 458.705, 39.1496, 0.7016", "429.994, 459.298, 39.1314, 0.709", "431.019, 459.806, 39.121, 0.801", "432.07, 460.255, 39.1373, 0.7638", "433.068, 460.815, 39.1969, 0.6256", "433.97, 461.516, 39.3098, 0.65", "434.774, 462.326, 39.4789, 0.6422", "435.44, 463.251, 39.7051, 0.73", "436.013, 464.235, 39.9792, 0.6056", "436.912, 464.926, 40.2861, 0.4534", "438.027, 465.132, 40.5947, 0.4006", "439.164, 465.165, 40.8909, 0.337", "440.297, 465.276, 41.1734, 0.3046", "441.419, 465.466, 41.442, 0.2824", "442.549, 465.613, 41.6959, 0.2886", "443.615, 466.016, 41.9364, 0.3004", "444.376, 466.862, 42.1764, 0.3246", "444.553, 467.986, 42.4155, 0.3576", "444.588, 469.126, 42.6423, 0.4794", "444.87, 470.232, 42.8509, 0.4064", "445.519, 471.17, 43.0394, 0.3508", "446.536, 471.688, 43.2079, 0.3164", "447.59, 472.129, 43.3656, 0.3774", "448.581, 472.697, 43.5221, 0.3418", "449.075, 473.727, 43.6705, 0.3134", "449.13, 474.869, 43.8024, 0.305", "449.109, 476.012, 43.9118, 0.3052", "448.682, 477.071, 44.0843, 0.4576" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "348.798, 454.504, 34.6702, 1.2108", "348.923, 456.243, 35.4239, 0.9566", "349.021, 457.383, 35.5519, 0.7426", "349.23, 458.506, 35.6437, 0.7224", "349.518, 459.612, 35.7059, 0.7648", "349.771, 460.728, 35.7476, 0.7636", "350.006, 461.848, 35.7748, 0.7236", "350.196, 462.976, 35.784, 0.5952", "350.309, 464.114, 35.7781, 0.6096", "350.495, 465.243, 35.7504, 0.7162", "350.834, 466.334, 35.6891, 0.809", "351.221, 467.41, 35.5796, 0.8496", "351.543, 468.506, 35.4172, 0.876", "351.85, 469.605, 35.2106, 0.9116", "352.186, 470.694, 34.9742, 1.031", "352.487, 471.793, 34.7161, 0.9944", "352.827, 472.879, 34.4378, 0.8608", "353.113, 473.98, 34.1435, 0.6536", "352.863, 475.085, 33.8444, 0.724", "352.242, 476.038, 33.5667, 0.667", "351.855, 477.109, 33.322, 0.645", "351.993, 478.239, 33.1148, 0.6262", "352.588, 479.212, 32.9476, 0.7182", "353.259, 480.137, 32.8143, 0.7298", "353.775, 481.157, 32.7023, 0.851", "354.163, 482.232, 32.5895, 0.8076", "354.368, 483.356, 32.475, 0.9048", "354.428, 484.498, 32.3683, 0.8848", "354.553, 485.635, 32.2781, 0.9222", "355.083, 486.647, 32.2132, 0.8474", "355.855, 487.49, 32.1793, 0.7288", "356.721, 488.239, 32.1779, 0.861", "357.594, 488.978, 32.2025, 0.9894", "358.218, 489.935, 32.2493, 0.8994", "358.097, 491.071, 32.3201, 0.7266", "357.518, 492.056, 32.3935, 0.6474", "357.024, 493.088, 32.4503, 0.7052", "356.722, 494.192, 32.4761, 0.7346", "356.71, 495.335, 32.4593, 0.7104", "356.766, 496.478, 32.3954, 0.5914" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "348.798, 454.504, 34.6702, 1.2108", "349.506, 455.548, 34.2521, 1.1044", "350.264, 456.4, 34.0679, 0.951", "351.208, 457.044, 33.9144, 0.9056" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "331.321, 452.225, 27.7371, 0.6606", "330.608, 453.027, 27.4659, 0.5306", "329.86, 453.891, 27.4137, 0.5014", "329.233, 454.848, 27.431, 0.4288", "328.807, 455.907, 27.4598, 0.479", "328.41, 456.98, 27.4823, 0.5168", "327.878, 457.992, 27.4954, 0.5098", "327.228, 458.932, 27.4885, 0.6226", "326.515, 459.826, 27.4492, 0.6276", "325.752, 460.677, 27.3815, 0.8138", "324.959, 461.502, 27.2962, 0.8704", "324.14, 462.3, 27.1997, 0.94", "323.355, 463.131, 27.1012, 0.9104", "322.626, 464.012, 27.0127, 0.7618", "321.782, 464.783, 26.9446, 0.6608", "320.829, 465.414, 26.8999, 0.674", "319.84, 465.988, 26.8725, 0.661", "318.866, 466.587, 26.8558, 0.6656", "317.973, 467.3, 26.8532, 0.7356", "317.152, 468.097, 26.8663, 0.7964", "316.373, 468.936, 26.8923, 0.8264", "315.498, 469.67, 26.9356, 0.8274", "314.558, 470.321, 27.0001, 0.8528", "313.708, 471.086, 27.0842, 0.7696", "312.914, 471.908, 27.18, 0.5996", "311.991, 472.581, 27.2686, 0.5374", "311.107, 473.307, 27.3334, 0.7258", "310.294, 474.111, 27.3636, 0.7738", "309.489, 474.924, 27.3463, 0.8552", "308.835, 475.862, 27.2667, 0.966", "308.44, 476.931, 27.135, 0.933", "307.992, 477.983, 26.9793, 0.6874", "307.362, 478.935, 26.8173, 0.6294", "306.582, 479.767, 26.6534, 0.5672", "305.704, 480.497, 26.4845, 0.5236", "304.969, 481.37, 26.3098, 0.5432", "304.629, 482.458, 26.131, 0.7772", "304.699, 483.595, 25.952, 0.9444", "304.742, 484.737, 25.7743, 0.7678", "304.446, 485.837, 25.5892, 0.7404", "303.874, 486.825, 25.4057, 0.7726", "303.325, 487.826, 25.2205, 0.681", "302.86, 488.868, 25.0205, 0.5752", "302.604, 489.979, 24.796, 0.5062", "302.459, 491.109, 24.5459, 0.443", "302.244, 492.227, 24.2699, 0.4746", "301.966, 493.329, 23.9667, 0.4952", "301.755, 494.446, 23.6429, 0.5004", "301.613, 495.573, 23.3088, 0.4402", "301.457, 496.697, 22.9671, 0.44", "301.092, 497.772, 22.6028, 0.5738", "300.532, 498.754, 22.1953, 0.6304", "300.032, 499.768, 21.7617, 0.5422", "299.94, 500.895, 21.3472, 0.3848", "299.937, 502.028, 20.9635, 0.3008", "299.941, 503.162, 20.5924, 0.2762", "300.07, 504.289, 20.2314, 0.2768", "300.211, 505.416, 19.8763, 0.2796", "300.098, 506.544, 19.5077, 0.2796", "299.937, 507.664, 19.1101, 0.3044", "299.937, 508.729, 18.086, 0.2288" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "331.321, 452.225, 27.7371, 0.6606", "330.86, 451.649, 26.7439, 0.4844", "329.979, 451.012, 25.9323, 0.453", "328.902, 450.681, 25.5651, 0.4622", "327.784, 450.499, 25.201, 0.6028", "326.71, 450.147, 24.7893, 0.6988", "325.743, 449.573, 24.3344, 0.7138", "324.732, 449.078, 23.8328, 0.5922", "323.631, 448.91, 23.2676, 0.584", "322.533, 448.731, 22.6239, 0.6726", "321.477, 448.407, 21.8983, 0.7036", "320.381, 448.299, 21.1507, 0.8076", "319.277, 448.327, 20.4219, 0.71", "318.236, 448.695, 19.7266, 0.8514", "317.296, 449.285, 19.0603, 0.7814", "316.456, 450.012, 18.3965, 0.6292", "315.381, 450.206, 17.6514, 0.5464", "314.301, 449.953, 16.9809, 0.7492", "313.366, 449.341, 16.4099, 0.823", "312.702, 448.43, 15.9496, 0.8248", "312.31, 447.367, 15.5691, 0.8122", "311.635, 446.452, 15.2779, 0.6354", "310.571, 446.04, 15.0657, 0.6106", "309.554, 445.539, 14.6947, 0.6864" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "340.691, 462.888, 31.7573, 0.5818", "341.076, 464.056, 31.5717, 0.6036", "341.419, 465.146, 31.5386, 0.5342", "341.723, 466.249, 31.5938, 0.5542", "341.932, 467.37, 31.7358, 0.5636", "341.966, 468.507, 31.9486, 0.5408", "341.717, 469.609, 32.1975, 0.4722", "341.266, 470.653, 32.4355, 0.4732", "340.945, 471.742, 32.6416, 0.5086", "340.959, 472.871, 32.8149, 0.5102", "341.183, 473.99, 32.9585, 0.596", "341.487, 475.091, 33.0795, 0.6202", "341.876, 476.166, 33.1853, 0.7748", "342.305, 477.225, 33.2794, 0.7862", "342.654, 478.313, 33.3553, 0.6504", "342.933, 479.422, 33.4057, 0.5478", "343.295, 480.505, 33.4331, 0.6436", "343.778, 481.54, 33.451, 0.807", "344.377, 482.513, 33.479, 0.867", "345.184, 483.312, 33.5289, 0.7316", "346.147, 483.922, 33.5961, 0.5766", "347.154, 484.463, 33.6739, 0.4456", "348.174, 484.978, 33.7658, 0.4232", "349.232, 485.411, 33.873, 0.3966", "350.286, 485.853, 33.9895, 0.3874", "351.258, 486.446, 34.1194, 0.4638", "352.28, 486.951, 34.2602, 0.4384", "353.361, 487.316, 34.3944, 0.3868", "354.473, 487.578, 34.5008, 0.3898", "355.594, 487.802, 34.5632, 0.3768", "356.717, 488.017, 34.5719, 0.372", "357.841, 488.233, 34.522, 0.3926", "358.963, 488.449, 34.4156, 0.5156", "360.084, 488.671, 34.2569, 0.5614", "361.201, 488.903, 34.0469, 0.5222", "362.301, 489.197, 33.7918, 0.5634", "363.307, 489.718, 33.5132, 0.5702", "364.377, 490.091, 33.2419, 0.5314", "365.404, 490.577, 33.0103, 0.563", "366.389, 491.155, 32.8364, 0.6748", "367.366, 491.747, 32.7205, 0.7552", "368.357, 492.318, 32.6514, 0.7724", "369.371, 492.845, 32.6127, 0.7174", "370.389, 493.367, 32.587, 0.7232", "371.38, 493.939, 32.5606, 0.7286", "372.374, 494.504, 32.5265, 0.7044", "373.418, 494.972, 32.4783, 0.5978", "374.459, 495.445, 32.4215, 0.4698", "375.463, 495.99, 32.3702, 0.4116", "376.442, 496.582, 32.3411, 0.4996", "377.413, 497.188, 32.349, 0.4808", "378.433, 497.701, 32.3943, 0.514", "379.47, 498.183, 32.4666, 0.416", "380.467, 498.743, 32.5494, 0.3372", "381.506, 499.219, 32.6284, 0.2832", "382.558, 499.665, 32.6928, 0.2746", "383.592, 500.152, 32.7387, 0.2746", "384.636, 500.622, 32.7678, 0.2746", "385.723, 500.975, 32.7852, 0.2746", "386.826, 501.278, 32.7958, 0.2746", "387.923, 501.598, 32.804, 0.2746", "389.005, 501.974, 32.8124, 0.2746", "390.021, 502.495, 32.8227, 0.2746", "390.954, 503.154, 32.8359, 0.2746", "391.926, 503.756, 32.853, 0.2746", "392.966, 504.227, 32.8745, 0.2746", "394.027, 504.656, 32.9022, 0.2746", "395.087, 505.085, 32.9375, 0.2746", "396.14, 505.534, 32.9809, 0.2746", "397.169, 506.031, 33.033, 0.2746", "398.175, 506.575, 33.0952, 0.2746", "399.127, 507.207, 33.1724, 0.2746", "400.027, 507.912, 33.2601, 0.2748", "400.885, 508.667, 33.3438, 0.2748", "401.783, 509.375, 33.4107, 0.275", "402.752, 509.982, 33.451, 0.2754", "403.742, 510.556, 33.4569, 0.276", "404.745, 511.104, 33.4242, 0.2776", "405.79, 511.565, 33.3645, 0.2798", "406.873, 511.933, 33.2987, 0.2846", "407.964, 512.276, 33.2458, 0.293", "409.053, 512.626, 33.2203, 0.309", "410.117, 513.045, 33.2321, 0.3382", "411.114, 513.604, 33.2853, 0.3948", "412.047, 514.263, 33.3785, 0.4874", "412.898, 515.024, 33.5059, 0.7202", "413.7, 515.838, 33.6566, 0.8546", "414.367, 516.762, 33.819, 0.7856", "414.807, 517.812, 33.9833, 0.7248", "415.323, 518.83, 34.1429, 0.6798", "416.055, 519.702, 34.2933, 0.5626", "416.935, 520.425, 34.4378, 0.5406", "417.887, 521.057, 34.5853, 0.5406", "418.763, 521.788, 34.7514, 0.6966", "419.592, 522.571, 34.9468, 0.8552", "420.534, 523.209, 35.1716, 0.882", "421.558, 523.707, 35.4127, 0.8804", "422.606, 524.154, 35.6516, 0.7484", "423.651, 524.614, 35.8716, 0.698", "424.639, 525.183, 36.0629, 0.6168", "425.45, 525.982, 36.2225, 0.542", "426.037, 526.957, 36.3647, 0.6402", "426.607, 527.947, 36.5126, 0.5614", "427.353, 528.808, 36.6859, 0.5776", "428.255, 529.502, 36.8939, 0.4674", "429.233, 530.086, 37.1308, 0.4404", "430.19, 530.706, 37.3842, 0.4732", "431.012, 531.491, 37.6359, 0.6662", "431.767, 532.344, 37.87, 0.8414", "432.615, 533.107, 38.0752, 0.8648", "433.52, 533.803, 38.2486, 0.7898", "434.385, 534.549, 38.3869, 0.862", "435.188, 535.362, 38.4863, 0.7686", "435.938, 536.225, 38.5753, 0.5578", "436.613, 537.147, 38.6688, 0.4144", "437.488, 537.877, 38.7912, 0.4138", "438.23, 538.74, 38.99, 0.5228", "438.841, 539.698, 39.3193, 0.7484", "439.603, 540.324, 40.6932, 1.144" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "340.691, 462.888, 31.7573, 0.5818", "340.801, 463.255, 31.0148, 0.52", "341.031, 464.246, 29.8796, 0.5324", "341.159, 465.363, 29.4524, 0.5156", "341.196, 466.501, 29.197, 0.4386", "341.2, 467.641, 28.9503, 0.4464", "341.355, 468.763, 28.7095, 0.5054", "341.755, 469.824, 28.4668, 0.5334", "342.309, 470.818, 28.2159, 0.613", "342.922, 471.776, 27.9451, 0.7276", "343.56, 472.718, 27.6537, 0.7098", "344.209, 473.653, 27.3555, 0.5912", "344.781, 474.634, 27.062, 0.5518", "345.249, 475.671, 26.7813, 0.6336", "345.65, 476.736, 26.5103, 0.6928", "346.014, 477.815, 26.2368, 0.7624", "346.515, 478.828, 25.9454, 0.7442", "347.229, 479.706, 25.6315, 0.71", "348.115, 480.407, 25.2994, 0.6522", "349.157, 480.821, 24.9594, 0.6236", "350.273, 481.018, 24.6279, 0.5556", "351.398, 481.187, 24.3129, 0.4354", "352.367, 481.717, 24.0103, 0.3382", "353.08, 482.592, 23.7419, 0.3068", "353.009, 483.636, 23.4774, 0.3242", "352.39, 484.585, 23.2473, 0.365", "351.681, 485.478, 23.0205, 0.4546", "350.941, 486.345, 22.7785, 0.5492", "350.306, 487.288, 22.5156, 0.4928", "349.986, 488.372, 22.2312, 0.4404", "350.05, 489.499, 21.9242, 0.4906", "350.466, 490.549, 21.5961, 0.5674", "351.114, 491.478, 21.2569, 0.6878", "351.802, 492.381, 20.9113, 0.5836", "352.342, 493.378, 20.5518, 0.5096", "352.731, 494.441, 20.1785, 0.6138", "353.316, 495.408, 19.7987, 0.5852", "354.219, 496.083, 19.4354, 0.4748", "355.201, 496.655, 19.1169, 0.4056", "356.108, 497.344, 18.8518, 0.47", "356.763, 498.273, 18.6428, 0.5696", "357.056, 499.371, 18.4738, 0.4968", "356.984, 500.507, 18.309, 0.5104", "357.343, 501.587, 18.1363, 0.3764", "357.326, 502.727, 18.0068, 0.2814", "356.719, 503.692, 18.086, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "317.796, 457.444, 35.7437, 0.4554", "316.633, 456.781, 35.6546, 0.4408", "315.543, 456.45, 35.6328, 0.5018", "314.418, 456.241, 35.6328, 0.561", "313.28, 456.296, 35.6457, 0.6158", "312.143, 456.414, 35.6726, 0.721", "311.0, 456.471, 35.7123, 0.6678", "309.857, 456.441, 35.7563, 0.5642", "308.718, 456.341, 35.793, 0.5912", "307.585, 456.183, 35.8173, 0.6266", "306.466, 455.946, 35.8232, 0.53", "305.344, 455.725, 35.8039, 0.485", "304.206, 455.631, 35.758, 0.441", "303.062, 455.613, 35.7006, 0.4938", "301.918, 455.612, 35.6437, 0.5636", "300.774, 455.612, 35.5897, 0.5284", "299.631, 455.613, 35.5306, 0.4094", "298.487, 455.628, 35.4547, 0.3234", "297.347, 455.712, 35.3464, 0.3002", "296.222, 455.9, 35.1896, 0.3152", "295.102, 456.121, 34.9745, 0.3512", "293.989, 456.354, 34.6968, 0.4098", "292.897, 456.667, 34.3549, 0.5604", "291.85, 457.095, 33.9534, 0.638", "290.79, 457.487, 33.5163, 0.5584", "289.797, 458.022, 33.0775, 0.5078", "289.167, 458.945, 32.6536, 0.663", "288.835, 460.025, 32.2694, 0.6708", "288.274, 461.01, 31.9281, 0.6484", "287.372, 461.694, 31.6498, 0.6606", "286.372, 462.242, 31.4502, 0.636", "285.554, 463.036, 31.3236, 0.6196", "284.948, 464.005, 31.2606, 0.6486", "284.382, 464.999, 31.2556, 0.6426", "283.794, 465.98, 31.3029, 0.5006", "283.196, 466.954, 31.3869, 0.4148", "282.547, 467.896, 31.4737, 0.4578", "281.772, 468.736, 31.5263, 0.485", "280.932, 469.514, 31.5358, 0.618", "280.275, 470.448, 31.5157, 0.672", "279.901, 471.528, 31.4835, 0.6216", "279.694, 472.652, 31.458, 0.5498", "279.414, 473.761, 31.4513, 0.5038", "278.915, 474.79, 31.4639, 0.4446", "278.208, 475.688, 31.486, 0.4456", "277.406, 476.504, 31.5042, 0.581", "276.592, 477.306, 31.5087, 0.6482", "275.805, 478.137, 31.4961, 0.582", "275.06, 479.005, 31.4653, 0.459", "274.329, 479.884, 31.4098, 0.42", "273.564, 480.734, 31.3202, 0.5432", "272.739, 481.525, 31.1903, 0.5246", "271.864, 482.259, 31.0248, 0.6112", "270.959, 482.953, 30.8398, 0.5848", "269.99, 483.557, 30.6519, 0.5706", "268.95, 484.029, 30.4755, 0.5706", "267.91, 484.501, 30.317, 0.4484", "266.904, 485.042, 30.1725, 0.3708", "265.927, 485.636, 30.0412, 0.38", "264.969, 486.257, 29.9298, 0.3474", "264.122, 487.026, 29.8432, 0.3248", "263.46, 487.957, 29.7853, 0.3144", "262.875, 488.94, 29.7592, 0.3718", "262.318, 489.94, 29.7651, 0.3348", "261.652, 490.87, 29.7892, 0.3008", "260.896, 491.728, 29.8063, 0.2752", "260.297, 492.703, 29.7951, 0.2746", "259.9, 493.774, 29.7402, 0.2746", "259.484, 494.84, 29.6296, 0.2746", "259.018, 495.88, 29.458, 0.2746", "258.5, 496.896, 29.2239, 0.2746", "257.938, 497.886, 28.9299, 0.2746", "257.45, 498.912, 28.6068, 0.2746", "257.067, 499.983, 28.296, 0.2746", "256.724, 501.069, 28.0255, 0.2746", "256.408, 502.164, 27.8104, 0.2746", "255.689, 503.051, 27.6575, 0.2744", "254.753, 503.708, 27.5618, 0.2744", "253.613, 503.813, 27.5089, 0.2742", "252.471, 503.839, 27.4828, 0.2736", "251.327, 503.866, 27.4722, 0.2728", "250.182, 503.892, 27.4688, 0.2712", "249.038, 503.892, 27.468, 0.2684", "247.895, 503.892, 27.468, 0.2626", "246.751, 503.892, 27.468, 0.2542", "245.681, 504.296, 27.468, 0.2288", "244.657, 504.807, 27.468, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "317.796, 457.444, 35.7437, 0.4554", "317.644, 458.286, 36.6559, 0.256", "317.578, 459.37, 37.5208, 0.3738", "317.322, 460.468, 37.9305, 0.5304", "316.979, 461.548, 38.3158, 0.5228", "316.703, 462.646, 38.7178, 0.5948", "316.43, 463.746, 39.1182, 0.592", "316.024, 464.803, 39.5007, 0.457", "315.625, 465.864, 39.8462, 0.3358", "315.269, 466.944, 40.1534, 0.2792", "314.924, 468.03, 40.4208, 0.2748", "314.517, 469.094, 40.6552, 0.275", "314.069, 470.144, 40.8629, 0.2752", "313.64, 471.202, 41.0402, 0.2758", "313.202, 472.257, 41.1838, 0.2772", "312.755, 473.309, 41.2947, 0.2794", "312.325, 474.369, 41.375, 0.2836", "311.899, 475.43, 41.4296, 0.2912", "311.468, 476.49, 41.4677, 0.305", "311.036, 477.549, 41.4988, 0.3328", "310.661, 478.629, 41.5374, 0.374", "310.415, 479.746, 41.6027, 0.5004", "310.583, 480.87, 41.7178, 0.4936", "311.055, 481.907, 41.909, 0.3918", "310.988, 483.031, 42.2097, 0.3044", "310.731, 484.133, 42.6224, 0.2756", "310.534, 485.24, 43.1287, 0.2746", "310.412, 486.353, 43.7007, 0.2746", "310.355, 487.469, 44.3075, 0.2746", "310.376, 488.585, 44.9198, 0.2746", "310.452, 489.701, 45.5146, 0.2746", "310.488, 490.819, 46.0886, 0.2746", "310.428, 491.941, 46.629, 0.2746", "310.211, 493.046, 47.1164, 0.2746", "309.864, 494.122, 47.5426, 0.2746", "309.52, 495.202, 47.908, 0.2746", "309.339, 496.324, 48.2255, 0.2746", "308.948, 497.393, 48.524, 0.2746", "308.235, 498.28, 48.7906, 0.2746", "307.898, 499.37, 49.0207, 0.2746", "307.587, 500.468, 49.2136, 0.2746", "307.127, 501.514, 49.3688, 0.2746", "306.645, 502.549, 49.4872, 0.2746", "306.051, 503.527, 49.5751, 0.2746", "305.331, 504.415, 49.6485, 0.2746", "304.687, 505.361, 49.7193, 0.2746", "304.171, 506.381, 49.7862, 0.2746", "303.629, 507.388, 49.8462, 0.2746", "303.078, 508.39, 49.8971, 0.2746", "302.658, 509.454, 49.9369, 0.2746", "302.315, 510.546, 49.9638, 0.2746", "301.843, 511.588, 49.9794, 0.2746", "301.778, 512.729, 49.9876, 0.2746", "301.674, 513.869, 49.9912, 0.2744", "301.523, 515.004, 49.9926, 0.2744", "301.37, 516.137, 49.9929, 0.2742", "301.311, 517.279, 49.9929, 0.2736", "301.017, 518.385, 49.9929, 0.2728", "300.935, 519.526, 49.9929, 0.2712", "300.925, 520.67, 49.9929, 0.2684", "300.925, 521.814, 49.9929, 0.2626", "300.925, 522.958, 49.9929, 0.2542", "300.809, 524.096, 49.9929, 0.2288", "300.696, 525.234, 49.9929, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "313.217, 433.939, 40.6188, 0.8148", "311.93, 433.052, 41.8429, 0.4624", "310.963, 432.451, 42.1271, 0.434", "309.907, 432.026, 42.3973, 0.422", "308.908, 431.481, 42.6675, 0.573", "308.025, 430.762, 42.945, 0.4668", "307.048, 430.181, 43.2477, 0.3738", "305.934, 429.985, 43.605, 0.3142", "304.804, 429.97, 44.0314, 0.3394", "303.676, 429.959, 44.5119, 0.4222", "302.552, 429.94, 45.0262, 0.4154", "301.43, 429.885, 45.5596, 0.501", "300.323, 429.708, 46.1129, 0.4018", "299.221, 429.503, 46.6749, 0.34", "298.114, 429.326, 47.2326, 0.3028", "297.005, 429.156, 47.7814, 0.3208", "295.885, 429.094, 48.3325, 0.3852", "294.765, 429.066, 48.8916, 0.3584", "293.645, 429.095, 49.4665, 0.3398", "292.53, 429.162, 50.0637, 0.3732", "291.443, 428.905, 50.6691, 0.334", "290.371, 428.592, 51.2753, 0.3", "289.294, 428.302, 51.8862, 0.2746", "288.224, 427.978, 52.4922, 0.2746", "287.159, 427.642, 53.0872, 0.2744", "286.095, 427.295, 53.6642, 0.2744", "285.135, 426.713, 54.2111, 0.274", "284.206, 426.078, 54.7145, 0.2736", "283.274, 425.442, 55.1659, 0.2728", "282.281, 424.899, 55.5764, 0.2712", "281.3, 424.329, 55.9493, 0.2684", "280.361, 423.691, 56.2822, 0.2626", "279.466, 422.988, 56.5729, 0.254", "278.618, 422.228, 56.8254, 0.2288", "277.83, 421.426, 57.3404, 0.2288" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "313.217, 433.939, 40.6188, 0.8148", "312.603, 432.898, 40.973, 0.8332", "312.089, 431.881, 41.1916, 0.7246", "311.648, 430.827, 41.3767, 0.6066", "311.179, 429.786, 41.5223, 0.6894", "310.717, 428.74, 41.6102, 0.6978", "310.374, 427.65, 41.6402, 0.596", "310.114, 426.536, 41.6178, 0.4318", "309.792, 425.439, 41.5568, 0.3504", "309.366, 424.378, 41.4742, 0.3734", "308.882, 423.343, 41.3944, 0.3464", "308.401, 422.305, 41.3395, 0.318", "307.942, 421.257, 41.33, 0.3048", "307.257, 420.347, 41.3935, 0.3204", "306.331, 419.687, 41.5587, 0.3828", "305.5, 418.91, 41.8172, 0.365", "304.796, 418.018, 42.1232, 0.3556", "304.135, 417.093, 42.42, 0.371", "303.477, 416.162, 42.6597, 0.4712", "302.836, 415.216, 42.8148, 0.539", "302.222, 414.252, 42.8814, 0.605", "301.6, 413.292, 42.873, 0.5458", "300.945, 412.354, 42.8112, 0.4318", "300.198, 411.489, 42.716, 0.401", "299.342, 410.732, 42.5992, 0.3388", "298.389, 410.102, 42.4628, 0.304", "297.368, 409.593, 42.3024, 0.2798", "296.354, 409.067, 42.1137, 0.2814", "295.405, 408.437, 41.8866, 0.2872", "294.501, 407.746, 41.6052, 0.299", "293.612, 407.039, 41.2644, 0.3152", "292.814, 406.234, 40.8923, 0.3748", "292.108, 405.347, 40.5345, 0.3404", "291.268, 404.58, 40.2195, 0.3112", "290.308, 403.968, 39.9683, 0.2944", "289.244, 403.556, 39.7886, 0.31", "288.14, 403.258, 39.6757, 0.3422", "287.038, 402.956, 39.6124, 0.3908", "286.111, 402.288, 39.5814, 0.535", "285.534, 401.303, 39.5682, 0.5408", "284.896, 400.353, 39.564, 0.4734", "284.458, 399.297, 39.5629, 0.4774", "284.334, 398.16, 39.5629, 0.5298", "284.194, 397.025, 39.5629, 0.4184", "283.452, 396.156, 39.5629, 0.3226", "282.338, 395.904, 39.5629, 0.2686", "281.681, 394.968, 39.5629, 0.2626", "281.394, 393.861, 39.5629, 0.2542", "280.76, 392.908, 39.5629, 0.2288", "280.198, 391.913, 39.5629, 0.2288" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "339.61, 394.108, 38.61, 1.1926", "339.671, 393.042, 38.619, 0.947", "339.639, 391.9, 38.635, 0.8136", "339.464, 390.772, 38.663, 0.6986", "339.21, 389.657, 38.7092, 0.6162", "339.066, 388.529, 38.7699, 0.5492", "339.194, 387.402, 38.8335, 0.6696", "339.484, 386.297, 38.8965, 0.7568", "339.724, 385.18, 38.9631, 0.79", "339.941, 384.058, 39.0328, 0.78", "340.263, 382.962, 39.1068, 0.6476", "340.625, 381.878, 39.1933, 0.6192", "340.817, 380.761, 39.3047, 0.6616", "340.7, 379.635, 39.4436, 0.7298", "340.446, 378.521, 39.601, 0.7948", "340.316, 377.392, 39.769, 0.846", "340.387, 376.257, 39.9462, 0.8322", "340.562, 375.129, 40.1321, 0.7306", "340.698, 373.996, 40.3197, 0.617", "340.762, 372.857, 40.5056, 0.6486", "340.857, 371.721, 40.6963, 0.6988", "341.027, 370.593, 40.8929, 0.7006", "341.209, 369.466, 41.0883, 0.6518", "341.392, 368.339, 41.2692, 0.6618", "341.546, 367.208, 41.4221, 0.76", "341.652, 366.07, 41.536, 0.7758", "341.783, 364.934, 41.6021, 0.6664", "341.92, 363.799, 41.6195, 0.5072", "341.936, 362.658, 41.6027, 0.4142", "341.856, 361.518, 41.5668, 0.437", "341.875, 360.378, 41.5145, 0.5206", "342.03, 359.246, 41.4476, 0.5086", "342.159, 358.111, 41.3731, 0.4402", "342.196, 356.968, 41.302, 0.4504", "342.228, 355.825, 41.2462, 0.493", "342.197, 354.684, 41.214, 0.613", "341.952, 353.574, 41.2026, 0.6766", "341.553, 352.503, 41.2012, 0.5722", "341.149, 351.433, 41.2017, 0.437", "340.859, 350.329, 41.1998, 0.4052", "340.723, 349.196, 41.1947, 0.428", "340.649, 348.054, 41.1858, 0.3942", "340.525, 346.917, 41.1687, 0.3342", "340.345, 345.788, 41.1387, 0.3054", "340.157, 344.66, 41.0978, 0.3102", "340.006, 343.526, 41.0533, 0.3542", "339.935, 342.385, 41.0152, 0.3568", "339.957, 341.243, 40.9928, 0.327", "340.02, 340.1, 40.9948, 0.3098", "340.064, 338.957, 41.025, 0.3226", "340.046, 337.814, 41.0836, 0.358", "339.902, 336.683, 41.1715, 0.457", "339.602, 335.582, 41.288, 0.4808", "339.191, 334.517, 41.4266, 0.4526", "338.71, 333.482, 41.5764, 0.5068", "338.154, 332.484, 41.7253, 0.5494", "337.523, 331.532, 41.8642, 0.5126", "336.853, 330.607, 41.9899, 0.5192", "336.202, 329.668, 42.1011, 0.5098", "335.627, 328.681, 42.1935, 0.4262", "335.147, 327.644, 42.2584, 0.3344", "334.757, 326.57, 42.2864, 0.2896", "334.429, 325.474, 42.2696, 0.2852", "334.124, 324.372, 42.2013, 0.2944", "333.833, 323.267, 42.0773, 0.3112", "333.597, 322.15, 41.9012, 0.3436", "333.437, 321.021, 41.685, 0.398", "333.272, 319.894, 41.4464, 0.527", "333.02, 318.784, 41.2056, 0.6306", "332.639, 317.712, 40.9794, 0.5922", "332.117, 316.7, 40.7784, 0.5596", "331.524, 315.723, 40.6048, 0.5842", "330.953, 314.734, 40.4538, 0.6864", "330.509, 313.686, 40.3164, 0.6804", "330.271, 312.574, 40.1848, 0.5772", "330.198, 311.435, 40.0546, 0.5732", "330.223, 310.293, 39.9266, 0.5694", "330.306, 309.153, 39.8062, 0.6304", "330.426, 308.016, 39.6998, 0.7136", "330.451, 306.876, 39.611, 0.637", "330.337, 305.74, 39.5416, 0.5466", "330.229, 304.601, 39.4904, 0.5104", "330.24, 303.46, 39.4531, 0.4908", "330.371, 302.325, 39.4299, 0.5292", "330.502, 301.188, 39.4274, 0.622", "330.466, 300.049, 39.4582, 0.6834", "330.253, 298.928, 39.5368, 0.6384", "330.019, 297.81, 39.6617, 0.5622", "329.847, 296.68, 39.816, 0.483", "329.74, 295.544, 39.9778, 0.4948", "329.686, 294.404, 40.1282, 0.5248", "329.607, 293.263, 40.2539, 0.6594", "329.441, 292.133, 40.3502, 0.7776", "329.192, 291.018, 40.4194, 0.974", "328.869, 289.921, 40.4664, 1.1018", "328.484, 288.844, 40.4933, 1.0472", "328.035, 287.793, 40.495, 0.9398", "327.571, 286.747, 40.4659, 0.9088", "327.193, 285.668, 40.4093, 0.8818", "326.873, 284.571, 40.3211, 0.7968", "326.334, 283.577, 40.1822, 0.906", "325.576, 282.729, 39.9955, 1.0214", "324.825, 281.871, 39.7813, 0.9514", "324.244, 280.896, 39.5674, 0.7402", "323.737, 279.874, 39.3812, 0.7294", "323.086, 278.939, 39.2417, 0.712", "322.316, 278.095, 39.1588, 0.705", "321.526, 277.268, 39.1222, 0.7534", "320.76, 276.419, 39.1098, 0.828", "320.053, 275.52, 39.0995, 0.9188", "319.433, 274.56, 39.0827, 0.9126", "318.871, 273.565, 39.0659, 0.9394", "318.281, 272.584, 39.0592, 0.7666", "317.675, 271.613, 39.0734, 0.6978", "317.118, 270.616, 39.1213, 0.6746", "316.605, 269.594, 39.2148, 0.595", "316.159, 268.543, 39.3688, 0.6258", "315.754, 267.476, 39.5898, 0.5234", "314.951, 266.719, 39.8835, 0.4274", "313.855, 266.515, 40.2254, 0.4134", "312.724, 266.467, 40.6216, 0.4302", "311.758, 265.941, 41.1821, 0.3636", "311.517, 264.87, 41.8312, 0.3006", "311.352, 263.765, 42.4306, 0.2762", "311.33, 262.642, 42.9584, 0.2778", "311.33, 261.512, 43.3857, 0.2806", "311.33, 260.374, 43.6979, 0.2856", "311.33, 259.233, 43.8931, 0.2944", "311.33, 258.09, 43.9995, 0.3134", "311.432, 256.95, 44.053, 0.3362", "311.574, 255.816, 44.0756, 0.4406", "311.786, 254.691, 44.0829, 0.3304", "312.247, 253.644, 44.0843, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "339.61, 394.108, 38.61, 1.1926", "340.149, 392.251, 36.8449, 1.3054", "340.245, 391.122, 36.4879, 1.1026", "340.408, 390.0, 36.1164, 0.8954", "340.754, 388.923, 35.7162, 0.7694", "341.126, 387.854, 35.3111, 0.6516", "341.413, 386.759, 34.9146, 0.5942", "341.619, 385.645, 34.5358, 0.6096", "341.943, 384.558, 34.1636, 0.5242", "342.518, 383.581, 33.8089, 0.4994", "343.25, 382.713, 33.4849, 0.6688", "343.891, 381.772, 33.1962, 0.6328", "344.249, 380.694, 32.9409, 0.7444", "344.466, 379.573, 32.7141, 0.6928", "344.82, 378.49, 32.506, 0.5518", "345.353, 377.481, 32.3019, 0.462", "345.849, 376.455, 32.0841, 0.5634", "346.165, 375.36, 31.8318, 0.5916", "346.581, 374.302, 31.5322, 0.5864", "347.274, 373.406, 31.173, 0.6008", "347.866, 372.441, 30.774, 0.4986", "348.343, 371.416, 30.3545, 0.4912", "348.99, 370.488, 29.9312, 0.478", "349.678, 369.591, 29.5201, 0.4684", "350.388, 368.708, 29.1259, 0.3802", "351.183, 367.901, 28.7328, 0.3364", "352.104, 367.245, 28.3296, 0.3346", "353.062, 366.643, 27.9136, 0.41", "353.936, 365.927, 27.4794, 0.4008", "354.736, 365.134, 26.9768, 0.4504", "355.737, 364.627, 26.4447, 0.4206", "356.803, 364.272, 25.9305, 0.5098", "357.622, 363.498, 25.453, 0.4174", "358.441, 362.718, 25.0294, 0.3672", "359.319, 362.0, 24.6862, 0.3728", "359.668, 360.916, 24.4309, 0.3552", "360.36, 360.017, 24.08, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "325.648, 398.316, 35.2209, 0.9406", "326.031, 397.689, 33.108, 0.3106", "326.487, 396.801, 31.8926, 0.401", "326.698, 395.734, 31.1094, 0.523", "326.666, 394.632, 30.3962, 0.6768", "326.692, 393.523, 29.724, 0.7742", "326.951, 392.447, 29.087, 0.8546", "327.358, 391.406, 28.5046, 0.696", "327.757, 390.357, 27.9584, 0.5362", "328.071, 389.28, 27.4204, 0.5126", "328.317, 388.187, 26.8652, 0.6344", "328.628, 387.112, 26.2807, 0.589", "329.112, 386.109, 25.686, 0.536", "329.638, 385.122, 25.1023, 0.4836", "329.83, 384.036, 24.535, 0.5716", "329.785, 382.916, 23.9994, 0.5874", "330.122, 381.873, 23.4497, 0.6808", "330.728, 380.931, 22.9046, 0.8098", "331.166, 379.904, 22.3738, 0.6854", "331.475, 378.823, 21.8653, 0.553", "331.976, 377.82, 21.3718, 0.589", "332.569, 376.862, 20.8858, 0.6504", "332.849, 375.788, 20.3765, 0.6936", "332.783, 374.678, 19.8125, 0.845", "332.176, 373.85, 18.8416, 0.687", "331.42, 373.133, 17.6898, 0.4162", "330.721, 372.371, 16.5553, 0.251", "330.161, 371.761, 14.6233, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "325.648, 398.316, 35.2209, 0.9406", "325.259, 396.878, 35.0974, 0.8282", "324.835, 395.816, 35.0244, 0.8124", "324.34, 394.785, 34.9709, 0.8106", "323.917, 393.723, 34.9535, 0.9748", "323.517, 392.651, 34.9642, 1.1174", "323.036, 391.613, 34.9958, 1.157", "322.512, 390.597, 35.0577, 0.967", "322.033, 389.558, 35.1439, 0.9432", "321.685, 388.47, 35.2405, 0.9366", "321.338, 387.38, 35.3424, 0.8736", "321.044, 386.276, 35.4452, 0.7918", "320.812, 385.156, 35.5258, 0.6646", "320.362, 384.106, 35.562, 0.7554", "319.677, 383.192, 35.5438, 0.8672", "318.957, 382.303, 35.4813, 1.0244", "318.34, 381.342, 35.3909, 1.0988", "317.731, 380.374, 35.287, 1.1808", "317.069, 379.443, 35.1812, 1.11", "316.355, 378.55, 35.0851, 1.1686", "315.572, 377.716, 35.0053, 1.1724", "314.845, 376.834, 34.9373, 1.0882", "314.319, 375.819, 34.8726, 0.903", "313.95, 374.738, 34.8006, 0.8948", "313.556, 373.665, 34.7057, 1.0038", "313.156, 372.594, 34.5873, 1.1308", "312.774, 371.516, 34.4582, 1.0996", "312.476, 370.414, 34.3274, 0.9926", "312.154, 369.318, 34.1956, 0.9698", "311.853, 368.215, 34.0878, 0.9488", "311.569, 367.106, 34.0203, 0.848", "311.193, 366.026, 33.9892, 0.7432", "310.882, 364.926, 33.9842, 0.5778", "310.495, 363.849, 34.0015, 0.5884", "309.953, 362.842, 34.05, 0.6226", "309.612, 361.752, 34.141, 0.9034", "309.496, 360.616, 34.2768, 1.0414", "309.292, 359.493, 34.4333, 0.7478", "309.099, 358.366, 34.5828, 0.5562", "308.906, 357.239, 34.7091, 0.4326", "308.679, 356.119, 34.8043, 0.469", "308.435, 355.001, 34.8625, 0.621", "308.139, 353.897, 34.8841, 0.7502", "307.807, 352.802, 34.8748, 0.6216", "307.386, 351.739, 34.8387, 0.5818", "306.721, 350.809, 34.7738, 0.6172", "305.876, 350.04, 34.6758, 0.6294", "305.072, 349.229, 34.5517, 0.473", "304.504, 348.237, 34.4165, 0.3696", "304.028, 347.198, 34.2818, 0.3782", "303.552, 346.159, 34.1527, 0.3438", "303.229, 345.064, 34.0318, 0.3176", "303.019, 343.94, 33.9189, 0.3074", "302.706, 342.841, 33.8047, 0.3294", "302.379, 341.746, 33.6602, 0.401", "302.253, 340.612, 33.4636, 0.3904", "302.197, 339.474, 33.224, 0.3932", "302.042, 338.346, 32.9546, 0.4988", "301.803, 337.234, 32.6631, 0.4396", "301.579, 336.119, 32.3674, 0.4358", "301.127, 335.074, 32.0883, 0.3558", "300.452, 334.158, 31.8147, 0.3404", "299.78, 333.239, 31.5389, 0.3452", "299.298, 332.206, 31.2886, 0.4256", "298.816, 331.172, 31.0786, 0.4572" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "334.793, 421.561, 39.9361, 1.111", "334.423, 420.45, 41.2157, 0.4754", "334.046, 419.387, 41.6668, 0.515", "333.233, 418.6, 42.0692, 0.5718", "332.305, 417.948, 42.4203, 0.8596", "331.23, 417.577, 42.747, 0.9626" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "334.793, 421.561, 39.9361, 1.111", "335.25, 419.73, 39.9442, 0.7606" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "357.28, 444.928, 46.7664, 0.446", "357.531, 444.287, 46.984, 0.3868", "358.222, 443.393, 47.2368, 0.3824", "359.102, 442.671, 47.4225, 0.3586", "359.809, 441.78, 47.5605, 0.3396", "360.578, 440.935, 47.6515, 0.346", "361.549, 440.338, 47.7033, 0.3884", "362.617, 439.935, 47.7316, 0.5532", "363.698, 439.561, 47.7448, 0.4652", "364.715, 439.04, 47.7501, 0.3618", "365.689, 438.44, 47.7526, 0.284", "366.621, 437.778, 47.7548, 0.278", "367.509, 437.056, 47.7582, 0.2812", "368.425, 436.372, 47.7624, 0.2866", "369.409, 435.79, 47.768, 0.2976", "370.415, 435.244, 47.7758, 0.3128", "371.419, 434.696, 47.7859, 0.3684", "372.451, 434.203, 47.7996, 0.3386", "373.454, 433.654, 47.8178, 0.305", "374.057, 432.699, 47.843, 0.2796", "374.569, 431.676, 47.8752, 0.2812", "375.606, 431.234, 47.9186, 0.2868", "376.747, 431.171, 47.9732, 0.2986", "377.849, 430.874, 48.0438, 0.3138", "378.743, 430.163, 48.1348, 0.3722", "379.489, 429.299, 48.2482, 0.3346", "380.118, 428.345, 48.3857, 0.3006", "380.901, 427.513, 48.5506, 0.275", "381.75, 426.752, 48.7721, 0.2746", "382.117, 425.676, 49.03, 0.2744", "382.162, 424.537, 49.2831, 0.2744", "382.579, 423.476, 49.5104, 0.2742", "382.956, 422.399, 49.6961, 0.2736", "383.212, 421.285, 49.831, 0.2728", "383.526, 420.185, 49.9142, 0.2712", "383.91, 419.108, 49.9593, 0.2684", "384.409, 418.078, 49.9814, 0.2626", "385.162, 417.217, 49.9901, 0.2542", "385.806, 416.271, 49.9926, 0.2288", "386.74, 415.611, 49.9929, 0.2288" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "357.28, 444.928, 46.7664, 0.446", "358.112, 445.237, 48.9423, 0.318", "359.088, 445.697, 49.8137, 0.3976", "360.123, 446.083, 50.5288, 0.3834", "361.19, 446.4, 51.1694, 0.3876", "362.234, 446.815, 51.7132, 0.4504", "363.225, 447.361, 52.1321, 0.5284", "364.294, 447.749, 52.4098, 0.423", "365.398, 448.038, 52.5829, 0.329", "366.471, 448.431, 52.6828, 0.2766", "367.421, 449.068, 52.7335, 0.2746", "368.181, 449.919, 52.7514, 0.2746", "369.021, 450.697, 52.75, 0.2746", "370.002, 451.284, 52.7383, 0.2746", "370.891, 452.005, 52.7201, 0.2746", "371.442, 453.003, 52.6954, 0.2746", "371.815, 454.085, 52.6652, 0.2746", "372.756, 454.727, 52.628, 0.2746", "373.837, 455.099, 52.582, 0.2746", "374.781, 455.744, 52.5244, 0.2746", "375.415, 456.696, 52.4619, 0.2746", "375.568, 457.83, 52.4012, 0.2746", "376.144, 458.818, 52.3474, 0.2746", "376.716, 459.809, 52.3048, 0.2746", "377.561, 460.579, 52.2749, 0.2746", "378.432, 461.321, 52.2564, 0.2746", "379.08, 462.264, 52.2466, 0.2746", "379.762, 463.182, 52.2421, 0.2744", "380.573, 463.989, 52.2404, 0.2744", "381.19, 464.953, 52.2399, 0.2742", "381.92, 465.833, 52.2399, 0.2736", "382.91, 466.405, 52.2399, 0.2728", "384.039, 466.594, 52.2399, 0.2712", "385.181, 466.647, 52.2399, 0.2684", "386.325, 466.666, 52.2399, 0.2626", "387.467, 466.742, 52.2399, 0.2542", "388.572, 467.039, 52.2399, 0.2288", "389.714, 467.104, 52.2399, 0.2288" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "356.766, 496.478, 32.3954, 0.5914", "357.357, 496.738, 32.5346, 0.341", "358.399, 497.204, 32.4652, 0.3366", "359.423, 497.711, 32.3638, 0.4756", "360.409, 498.289, 32.279, 0.4708", "361.267, 499.037, 32.1891, 0.469", "362.027, 499.89, 32.1087, 0.4274", "362.817, 500.716, 32.0494, 0.4772", "363.65, 501.5, 32.0202, 0.4184", "364.489, 502.279, 32.0253, 0.3418", "365.299, 503.085, 32.0636, 0.2868", "365.963, 504.011, 32.1356, 0.2748", "366.483, 505.028, 32.2353, 0.2748", "366.837, 506.111, 32.3478, 0.275", "367.106, 507.222, 32.4573, 0.2754", "367.343, 508.341, 32.5517, 0.276", "367.571, 509.461, 32.6234, 0.2772", "367.84, 510.573, 32.6698, 0.2794", "368.18, 511.664, 32.6939, 0.2834", "368.49, 512.765, 32.7015, 0.2912", "368.613, 513.898, 32.6992, 0.3052", "368.715, 515.038, 32.6861, 0.332", "369.108, 516.101, 32.6704, 0.379", "369.721, 517.063, 32.6718, 0.4808", "370.294, 518.052, 32.6959, 0.5974", "370.794, 519.081, 32.7373, 0.6144", "371.239, 520.133, 32.7888, 0.5584", "371.696, 521.182, 32.8426, 0.6496", "372.259, 522.177, 32.8927, 0.61", "372.865, 523.147, 32.9216, 0.6236", "373.396, 524.159, 32.9028, 0.697", "373.926, 525.173, 32.8098, 0.7758", "374.484, 526.168, 32.6292, 0.829", "375.025, 527.17, 32.3638, 0.7324", "375.465, 528.216, 32.0309, 0.6214", "375.753, 529.31, 31.6618, 0.6766", "376.033, 530.41, 31.2855, 0.8276", "376.419, 531.475, 30.9173, 0.7032", "376.164, 532.553, 30.6023, 0.5882", "375.811, 533.639, 30.4396, 0.7142", "375.926, 534.771, 30.3887, 0.7714", "376.2, 535.88, 30.3957, 0.754", "376.368, 537.012, 30.4223, 0.5948", "376.494, 538.149, 30.457, 0.6646", "376.668, 539.279, 30.4895, 0.5388", "376.791, 540.416, 30.5026, 0.5274", "377.012, 541.539, 30.4884, 0.4692", "377.393, 542.617, 30.4394, 0.5932", "377.797, 543.687, 30.3464, 0.5728", "378.302, 544.711, 30.2131, 0.695", "378.927, 545.667, 30.0583, 0.755", "379.62, 546.575, 29.8959, 0.822", "380.367, 547.438, 29.7282, 0.6862", "381.246, 548.166, 29.5492, 0.579", "382.157, 548.853, 29.351, 0.5116", "382.809, 549.787, 29.129, 0.4456", "383.271, 550.829, 28.8977, 0.5058", "383.662, 551.9, 28.6742, 0.414", "384.037, 552.978, 28.4701, 0.3606", "384.47, 554.034, 28.2842, 0.338", "384.946, 555.071, 28.1033, 0.3868", "385.521, 556.056, 27.9059, 0.4924", "386.478, 556.669, 27.665, 0.6346", "387.605, 556.797, 27.3826, 0.4926", "388.738, 556.698, 27.0735, 0.3766", "389.835, 556.405, 26.745, 0.315", "390.937, 556.127, 26.4078, 0.3734", "392.073, 556.126, 26.0739, 0.335", "393.209, 556.166, 25.757, 0.3018", "394.342, 556.077, 25.4751, 0.278", "395.476, 555.958, 25.2388, 0.281", "396.618, 555.924, 25.0546, 0.286", "397.744, 556.118, 24.9191, 0.297", "398.776, 556.611, 24.8145, 0.3108", "399.529, 557.471, 24.7573, 0.3672", "400.28, 558.335, 24.7411, 0.322", "400.938, 559.271, 24.7509, 0.2796", "401.702, 560.121, 24.7761, 0.2288", "402.511, 560.93, 24.8682, 0.2288" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "356.766, 496.478, 32.3954, 0.5914", "356.843, 497.252, 32.3198, 0.5256", "356.881, 498.394, 32.1874, 0.4198", "356.954, 499.532, 32.0228, 0.3634", "357.318, 500.602, 31.8273, 0.3884", "357.875, 501.596, 31.6159, 0.3878", "358.389, 502.613, 31.4048, 0.383", "358.777, 503.685, 31.2133, 0.4574", "359.036, 504.796, 31.0579, 0.4226", "359.111, 505.934, 30.949, 0.3626", "359.013, 507.071, 30.8888, 0.323", "359.11, 508.205, 30.8736, 0.3634", "359.512, 509.268, 30.9008, 0.3454", "359.995, 510.305, 30.954, 0.3138", "360.448, 511.355, 31.0108, 0.293", "360.938, 512.388, 31.0512, 0.2992", "361.531, 513.364, 31.0601, 0.322", "362.159, 514.321, 31.0257, 0.3544", "362.734, 515.309, 30.9389, 0.4622", "363.261, 516.323, 30.8034, 0.43", "363.703, 517.375, 30.6342, 0.3792", "363.733, 518.5, 30.4396, 0.3608", "363.429, 519.594, 30.2369, 0.4184", "363.121, 520.694, 30.0404, 0.5508", "362.901, 521.814, 29.8651, 0.7408", "362.819, 522.951, 29.7102, 0.7766", "362.872, 524.092, 29.5585, 0.7194", "362.875, 525.233, 29.3986, 0.5508", "362.753, 526.368, 29.2272, 0.473", "362.531, 527.487, 29.0315, 0.5572", "362.252, 528.591, 28.7924, 0.6228", "362.035, 529.709, 28.5104, 0.5356", "361.885, 530.835, 28.1988, 0.4656", "361.766, 531.965, 27.8701, 0.5516", "361.67, 533.096, 27.5341, 0.5804", "361.631, 534.232, 27.1993, 0.6006", "361.972, 535.305, 26.8546, 0.4746", "362.22, 536.412, 26.5282, 0.4008", "362.274, 537.547, 26.2355, 0.4246", "362.256, 538.686, 25.9861, 0.4344", "362.412, 539.815, 25.7783, 0.481", "362.839, 540.871, 25.6071, 0.6142", "363.409, 541.86, 25.4586, 0.8664", "363.959, 542.86, 25.3051, 0.9132", "364.434, 543.899, 25.1422, 0.7134", "364.796, 544.981, 24.984, 0.6668", "365.054, 546.094, 24.839, 0.6002", "365.299, 547.211, 24.7114, 0.7492", "365.578, 548.319, 24.5994, 0.7686", "365.906, 549.414, 24.496, 0.6852", "366.31, 550.482, 24.396, 0.7632", "366.762, 551.534, 24.3017, 0.8036", "367.159, 552.606, 24.2127, 0.6468", "367.412, 553.72, 24.1192, 0.5644", "367.342, 554.857, 24.018, 0.5794", "367.01, 555.948, 23.9174, 0.5392", "366.706, 557.051, 23.8145, 0.4272", "366.517, 558.178, 23.6982, 0.3678", "366.446, 559.318, 23.5637, 0.388", "366.472, 560.459, 23.4132, 0.4954", "366.611, 561.593, 23.2506, 0.6186", "366.864, 562.706, 23.0837, 0.5904", "367.242, 563.783, 22.9224, 0.6698", "367.751, 564.805, 22.7775, 0.7424", "368.249, 565.834, 22.6552, 0.6426", "368.649, 566.905, 22.5567, 0.4772", "368.927, 568.013, 22.4773, 0.4334", "369.141, 569.137, 22.4081, 0.3914", "369.336, 570.263, 22.3495, 0.426", "369.026, 571.357, 22.3154, 0.3852", "368.215, 572.156, 22.3154, 0.4156", "367.376, 572.933, 22.3413, 0.3702", "366.573, 573.748, 22.3978, 0.3592", "365.784, 574.575, 22.4937, 0.407", "364.955, 575.362, 22.6347, 0.4004", "364.158, 576.179, 22.8235, 0.4188", "363.594, 577.169, 23.06, 0.5102", "363.147, 578.215, 23.3346, 0.6312", "362.666, 579.246, 23.6242, 0.6544", "362.135, 580.253, 23.9097, 0.5438", "361.242, 580.954, 24.1948, 0.384", "360.426, 581.748, 24.4621, 0.2946", "359.923, 582.771, 24.6898, 0.263", "359.175, 583.633, 24.8629, 0.2542", "358.19, 584.213, 24.9625, 0.229", "357.176, 584.741, 24.8682, 0.2288" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "351.208, 457.044, 33.9144, 0.9056", "351.605, 457.606, 33.8433, 0.8366", "352.243, 458.555, 33.7719, 0.7188", "352.94, 459.46, 33.7372, 0.6462", "353.737, 460.279, 33.7204, 0.6482", "354.505, 461.126, 33.6974, 0.7324", "355.142, 462.073, 33.6482, 0.8386", "355.667, 463.088, 33.5712, 0.807", "356.138, 464.13, 33.4807, 0.8164", "356.671, 465.14, 33.3931, 0.766", "357.346, 466.06, 33.3245, 0.6292", "358.118, 466.903, 33.2844, 0.6066", "358.921, 467.717, 33.2752, 0.5598", "359.722, 468.534, 33.2917, 0.6262", "360.475, 469.395, 33.3301, 0.6678", "361.088, 470.357, 33.3827, 0.6342", "361.509, 471.417, 33.4342, 0.5466", "361.813, 472.519, 33.4692, 0.5856", "362.037, 473.64, 33.474, 0.6306", "362.151, 474.777, 33.4387, 0.5504", "362.188, 475.92, 33.3525, 0.5094", "362.212, 477.062, 33.2083, 0.4858", "362.298, 478.199, 33.0067, 0.5626", "362.425, 479.331, 32.7558, 0.7108", "362.562, 480.461, 32.4638, 0.7402", "362.778, 481.576, 32.1387, 0.6152", "363.223, 482.614, 31.7912, 0.5602", "363.941, 483.484, 31.4325, 0.608", "364.768, 484.259, 31.068, 0.6134", "365.477, 485.139, 30.6998, 0.5554", "365.847, 486.2, 30.3414, 0.651", "366.069, 487.314, 30.0138, 0.6014", "366.52, 488.352, 29.7195, 0.6154", "367.202, 489.26, 29.4622, 0.6754", "367.957, 490.114, 29.2328, 0.7678", "368.748, 490.936, 29.0209, 0.6432", "369.506, 491.788, 28.821, 0.6152", "370.102, 492.759, 28.632, 0.5278", "370.476, 493.834, 28.4522, 0.556", "370.73, 494.946, 28.2794, 0.6224", "371.111, 496.021, 28.1095, 0.6542", "371.662, 497.02, 27.9405, 0.5354", "372.393, 497.893, 27.7785, 0.4894", "373.208, 498.693, 27.6352, 0.4432", "373.937, 499.572, 27.5166, 0.5268", "374.551, 500.535, 27.4228, 0.4838", "375.097, 501.54, 27.3493, 0.4694", "375.715, 502.502, 27.2905, 0.5666", "376.478, 503.351, 27.2411, 0.6338", "377.274, 504.172, 27.1975, 0.574", "378.023, 505.036, 27.1586, 0.443", "378.704, 505.955, 27.1241, 0.376", "379.313, 506.924, 27.0931, 0.4202", "379.771, 507.969, 27.0643, 0.4314", "380.016, 509.083, 27.0344, 0.4884", "380.158, 510.218, 27.001, 0.5582", "380.544, 511.29, 26.96, 0.4896", "381.098, 512.29, 26.9088, 0.4648", "381.483, 513.364, 26.8444, 0.4128", "381.712, 514.483, 26.766, 0.427", "381.85, 515.618, 26.672, 0.5248", "381.978, 516.754, 26.5496, 0.643", "382.359, 517.827, 26.4021, 0.7888", "382.873, 518.846, 26.253, 0.9584", "383.391, 519.865, 26.1116, 0.8844", "383.921, 520.877, 25.9794, 0.8942", "384.53, 521.844, 25.8616, 0.8378", "384.988, 522.889, 25.7502, 0.7758", "385.169, 524.014, 25.6281, 0.8198", "385.522, 525.098, 25.4845, 0.7938", "385.997, 526.137, 25.33, 0.7134", "386.408, 527.202, 25.1765, 0.6554", "386.696, 528.307, 25.0335, 0.7332", "386.933, 529.426, 24.9096, 0.668", "387.093, 530.557, 24.8069, 0.5712", "387.247, 531.69, 24.7211, 0.5976", "387.489, 532.808, 24.6429, 0.7334", "387.905, 533.872, 24.5644, 0.872", "388.375, 534.914, 24.4781, 0.86", "388.901, 535.929, 24.3731, 0.8052", "389.438, 536.938, 24.2496, 0.7484", "389.85, 538.003, 24.117, 0.635", "389.847, 539.139, 23.9859, 0.6944", "389.651, 540.264, 23.864, 0.7804", "389.405, 541.381, 23.7519, 0.7386", "389.13, 542.49, 23.6496, 0.5418", "388.802, 543.585, 23.546, 0.4624", "388.42, 544.662, 23.4225, 0.4006", "388.138, 545.768, 23.2372, 0.411", "387.652, 546.794, 22.9363, 0.4928", "387.436, 547.905, 22.553, 0.6126", "387.402, 549.035, 22.1348, 0.5672", "387.5, 550.162, 21.7179, 0.6394", "387.682, 551.28, 21.3329, 0.6576", "387.814, 552.409, 21.0087, 0.5896", "387.853, 553.547, 20.756, 0.4962", "387.857, 554.689, 20.5669, 0.3818", "388.012, 555.822, 20.4287, 0.3374", "388.29, 556.93, 20.3285, 0.3444", "388.666, 558.01, 20.2521, 0.393", "389.138, 559.051, 20.1866, 0.544", "389.629, 560.084, 20.1214, 0.5308", "390.097, 561.127, 20.048, 0.588", "390.563, 562.172, 19.9607, 0.7152", "391.057, 563.203, 19.8544, 0.6342", "391.654, 564.176, 19.723, 0.6772", "392.316, 565.107, 19.5629, 0.6804", "392.958, 566.051, 19.3823, 0.6308", "393.591, 567.001, 19.1907, 0.5742", "394.296, 567.899, 18.9955, 0.518", "395.03, 568.773, 18.8002, 0.6314", "395.729, 569.674, 18.5968, 0.691", "396.333, 570.641, 18.3784, 0.6534", "396.673, 571.729, 18.1486, 0.6108", "396.92, 572.842, 17.9143, 0.6112", "396.892, 573.98, 17.6724, 0.6816", "396.745, 575.11, 17.4221, 0.706", "396.276, 576.148, 17.1724, 0.596", "395.64, 577.093, 16.9341, 0.681", "395.035, 578.06, 16.7061, 0.562", "394.461, 579.046, 16.487, 0.5662", "394.025, 580.099, 16.2881, 0.6028", "393.626, 581.17, 16.1221, 0.5432", "393.069, 582.168, 15.9919, 0.5956", "392.584, 583.203, 15.8945, 0.5792", "392.656, 584.343, 15.8126, 0.4246", "392.775, 585.481, 15.7553, 0.2804", "392.437, 586.572, 15.8253, 0.2288" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "351.208, 457.044, 33.9144, 0.9056", "352.7, 457.29, 32.7774, 0.709", "353.822, 457.459, 32.452, 0.7844", "354.957, 457.463, 32.2073, 0.6572", "355.987, 457.037, 31.9385, 0.508", "356.878, 456.336, 31.6453, 0.5038", "357.866, 455.796, 31.2995, 0.4752", "358.875, 456.085, 30.8392, 0.4788", "359.429, 457.039, 30.3271, 0.444", "360.093, 457.943, 29.7973, 0.4864", "360.945, 458.675, 29.2897, 0.6592", "361.887, 459.297, 28.8333, 0.7874", "362.841, 459.909, 28.4458, 0.89", "363.697, 460.655, 28.1338, 0.8074", "364.278, 461.632, 27.8938, 0.8508", "364.652, 462.709, 27.7181, 0.7716", "365.074, 463.771, 27.5933, 0.8038", "365.552, 464.81, 27.5081, 0.8222", "366.013, 465.856, 27.4509, 0.8906", "366.503, 466.889, 27.4119, 0.8382", "367.089, 467.872, 27.382, 0.746", "367.756, 468.802, 27.3541, 0.7174", "368.406, 469.742, 27.323, 0.85", "368.956, 470.746, 27.2844, 0.8946", "369.376, 471.809, 27.2346, 0.9114", "369.688, 472.909, 27.1704, 0.9812", "369.922, 474.028, 27.0875, 0.9124", "370.219, 475.132, 26.9814, 0.6624", "370.749, 476.143, 26.8476, 0.517", "371.48, 477.018, 26.6795, 0.6402", "372.202, 477.903, 26.4686, 0.5922", "372.751, 478.899, 26.2115, 0.6212", "373.186, 479.949, 25.9134, 0.6872", "373.579, 481.015, 25.5767, 0.7854", "374.094, 482.024, 25.2049, 0.6456", "374.848, 482.867, 24.8049, 0.6138", "375.68, 483.632, 24.3832, 0.7112", "376.429, 484.479, 23.9451, 0.628", "377.059, 485.416, 23.5078, 0.6648", "377.693, 486.353, 23.0898, 0.6576", "378.365, 487.265, 22.6986, 0.5892", "379.1, 488.129, 22.3343, 0.4952", "379.983, 488.844, 21.9976, 0.3794", "380.969, 489.409, 21.6969, 0.3332", "381.976, 489.942, 21.4421, 0.3368", "382.93, 490.568, 21.2356, 0.3796", "383.739, 491.374, 21.0788, 0.514", "384.429, 492.285, 20.9716, 0.5016", "384.994, 493.279, 20.8998, 0.4036", "385.603, 494.246, 20.8363, 0.3338", "386.319, 495.139, 20.7481, 0.329", "387.075, 495.995, 20.6079, 0.401", "387.991, 496.674, 20.4144, 0.3826", "389.047, 497.102, 20.1771, 0.4148", "390.162, 497.33, 19.9057, 0.3652", "391.267, 497.601, 19.6235, 0.352", "391.995, 498.476, 19.3502, 0.3974", "392.544, 499.475, 19.1031, 0.3732", "393.195, 500.411, 18.8762, 0.3984", "393.791, 501.384, 18.6722, 0.3328", "394.475, 502.298, 18.5, 0.298", "395.421, 502.938, 18.3609, 0.2712", "396.533, 503.203, 18.2546, 0.2684", "397.646, 503.466, 18.1793, 0.2626", "398.779, 503.625, 18.132, 0.2542", "399.923, 503.625, 18.1056, 0.2288", "401.067, 503.625, 18.086, 0.2288" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "298.816, 331.172, 31.0786, 0.4572", "298.751, 330.553, 30.9378, 0.407", "298.629, 329.417, 30.8148, 0.3996", "298.49, 328.281, 30.7549, 0.341", "298.322, 327.15, 30.744, 0.3058", "298.099, 326.029, 30.7714, 0.2824", "297.779, 324.93, 30.83, 0.2852", "297.417, 323.846, 30.9168, 0.2944", "297.141, 322.737, 31.0316, 0.3106", "296.969, 321.608, 31.1749, 0.3434", "296.809, 320.478, 31.353, 0.3938", "296.617, 319.353, 31.5745, 0.5372", "296.455, 318.227, 31.8368, 0.5614", "296.275, 317.102, 32.1289, 0.5152", "296.007, 315.998, 32.4374, 0.55", "295.646, 314.919, 32.7482, 0.6474", "295.18, 313.884, 33.0613, 0.7188", "294.673, 312.866, 33.3794, 0.5332", "294.082, 311.894, 33.6815, 0.3896", "293.608, 310.861, 33.9606, 0.333", "293.325, 309.759, 34.2238, 0.3704", "293.136, 308.635, 34.4817, 0.4656", "292.985, 307.507, 34.7449, 0.5628", "292.843, 306.377, 35.0246, 0.4908", "292.492, 305.297, 35.3321, 0.4736", "291.945, 304.304, 35.6678, 0.4294", "291.187, 303.463, 36.0304, 0.4574", "290.284, 302.78, 36.4235, 0.6144", "289.336, 302.167, 36.8665, 0.6572", "288.369, 301.589, 37.3554, 0.8916", "287.397, 301.026, 37.8759, 0.9234", "286.347, 300.634, 38.4314, 0.8224", "285.246, 300.448, 39.0309, 0.624", "284.164, 300.193, 39.6855, 0.4752", "283.276, 299.536, 40.3785, 0.4414", "282.432, 298.816, 41.0662, 0.6106", "281.446, 298.301, 41.7192, 0.5316", "280.425, 297.844, 42.306, 0.4834", "279.527, 297.165, 42.8064, 0.5834", "278.688, 296.407, 43.2107, 0.5348", "278.873, 295.346, 44.0843, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "298.816, 331.172, 31.0786, 0.4572", "298.491, 329.8, 29.969, 0.2786", "298.023, 328.762, 29.7769, 0.2876", "297.232, 327.943, 29.6422, 0.2998", "296.723, 326.922, 29.5476, 0.3164", "296.555, 325.793, 29.4921, 0.3766", "296.239, 324.695, 29.4728, 0.3458", "295.806, 323.635, 29.4888, 0.3206", "295.358, 322.584, 29.5176, 0.311", "294.844, 321.561, 29.5571, 0.3422", "294.286, 320.562, 29.6094, 0.391", "293.783, 319.536, 29.6769, 0.5332", "293.356, 318.476, 29.7648, 0.5446", "292.948, 317.407, 29.8777, 0.475", "292.544, 316.339, 30.0196, 0.5114", "292.171, 315.26, 30.1944, 0.4254", "291.76, 314.196, 30.4094, 0.3798", "291.217, 313.196, 30.6855, 0.3738", "290.617, 312.231, 31.0131, 0.449", "290.036, 311.255, 31.36, 0.634", "289.487, 310.262, 31.7027, 0.7688", "288.834, 309.332, 32.0258, 0.6802", "288.146, 308.425, 32.3042, 0.5516", "287.602, 307.422, 32.506, 0.571", "287.126, 306.383, 32.62, 0.7254", "286.653, 305.342, 32.6572, 0.672", "286.114, 304.333, 32.6292, 0.6372", "285.498, 303.369, 32.5466, 0.4734", "284.855, 302.424, 32.44, 0.427", "284.204, 301.484, 32.342, 0.4544", "283.519, 300.569, 32.2582, 0.645", "282.885, 299.617, 32.1874, 0.7804", "282.297, 298.635, 32.1149, 0.7244", "281.576, 297.748, 32.0337, 0.5122", "280.608, 297.14, 31.9452, 0.4072", "279.509, 296.826, 31.8545, 0.4068", "278.418, 296.485, 31.7562, 0.6102", "277.499, 295.804, 31.6504, 0.4576" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "331.23, 417.577, 42.747, 0.9626", "329.879, 417.697, 43.9236, 1.1196", "328.74, 417.598, 43.9692, 1.1494", "327.61, 417.425, 44.0196, 1.1326", "326.477, 417.268, 44.1092, 1.0038", "325.335, 417.221, 44.2688, 0.7786", "324.269, 416.821, 44.5096, 0.5164", "323.545, 415.947, 44.8263, 0.4128", "322.835, 415.064, 45.2122, 0.4196", "321.888, 414.448, 45.6627, 0.621" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "331.23, 417.577, 42.747, 0.9626", "330.976, 416.176, 43.1382, 0.5226", "330.86, 415.039, 43.2426, 0.4132", "330.635, 413.918, 43.2978, 0.4478", "330.354, 412.809, 43.3171, 0.6256", "330.046, 411.707, 43.3121, 0.7516", "329.724, 410.61, 43.2986, 0.806", "329.527, 409.484, 43.2866, 0.8042", "329.326, 408.358, 43.2802, 0.7814", "329.016, 407.258, 43.2793, 0.7742", "328.528, 406.224, 43.2835, 0.5918", "327.857, 405.301, 43.2925, 0.4704", "327.247, 404.334, 43.3051, 0.5174", "326.74, 403.309, 43.3222, 0.4862", "326.234, 402.283, 43.344, 0.5326", "325.665, 401.291, 43.3717, 0.4374", "325.152, 400.268, 43.4078, 0.3828", "324.787, 399.186, 43.4538, 0.3944", "324.491, 398.081, 43.5106, 0.3798", "324.247, 396.965, 43.5798, 0.3758", "323.969, 395.855, 43.664, 0.4346", "323.679, 394.75, 43.7693, 0.4506", "323.395, 393.642, 43.8894, 0.5518", "323.013, 392.566, 44.0104, 0.544", "322.56, 391.517, 44.121, 0.4852", "322.143, 390.452, 44.2126, 0.4664", "321.729, 389.386, 44.2809, 0.606", "321.202, 388.372, 44.3251, 0.7036", "320.537, 387.442, 44.3509, 0.7204", "319.806, 386.562, 44.3646, 0.6082", "319.131, 385.639, 44.3722, 0.5874", "318.603, 384.626, 44.3772, 0.8248", "318.16, 383.572, 44.3831, 0.8872", "317.707, 382.52, 44.3946, 0.8758", "317.279, 381.46, 44.4144, 0.827", "316.901, 380.381, 44.4472, 0.8254", "316.523, 379.301, 44.4951, 0.8006", "316.132, 378.226, 44.5556, 0.9086", "315.752, 377.148, 44.6214, 0.9784", "315.378, 376.067, 44.6916, 0.986", "315.027, 374.979, 44.772, 0.8852", "314.737, 373.873, 44.8624, 0.7724", "314.451, 372.766, 44.9565, 0.7764", "314.101, 371.678, 45.0464, 0.847", "313.725, 370.598, 45.1321, 0.7868", "313.36, 369.514, 45.2183, 0.7764", "313.006, 368.426, 45.3071, 0.7944", "312.73, 367.318, 45.3925, 0.7142", "312.617, 366.181, 45.4717, 0.499", "312.57, 365.038, 45.5437, 0.3532", "312.492, 363.897, 45.6092, 0.3046", "312.405, 362.757, 45.67, 0.3222", "312.263, 361.622, 45.7321, 0.358", "311.906, 360.537, 45.8027, 0.4538", "311.324, 359.556, 45.8858, 0.488", "310.697, 358.6, 45.9889, 0.6258", "310.227, 357.561, 46.1188, 0.664", "309.898, 356.467, 46.2697, 0.7694", "309.638, 355.355, 46.4335, 0.694", "309.365, 354.246, 46.6004, 0.612", "309.022, 353.157, 46.76, 0.6906", "308.716, 352.057, 46.9087, 0.8224", "308.434, 350.949, 47.0464, 0.8126", "308.09, 349.86, 47.1685, 0.732", "307.775, 348.761, 47.2721, 0.5612", "307.506, 347.649, 47.3654, 0.538", "307.274, 346.53, 47.4544, 0.556", "306.983, 345.424, 47.5392, 0.6372", "306.506, 344.386, 47.6216, 0.5776", "305.9, 343.418, 47.7036, 0.645", "305.31, 342.439, 47.7868, 0.6706", "304.823, 341.405, 47.8713, 0.6478", "304.464, 340.319, 47.962, 0.467", "304.192, 339.21, 48.064, 0.348", "303.85, 338.118, 48.1743, 0.3026", "303.405, 337.066, 48.2835, 0.321", "302.873, 336.055, 48.3826, 0.3514", "302.272, 335.082, 48.4652, 0.4632", "301.747, 334.066, 48.5274, 0.3994", "301.343, 332.997, 48.5691, 0.3308", "300.887, 331.948, 48.5946, 0.2786", "300.276, 330.981, 48.6097, 0.2748", "299.688, 330.0, 48.6192, 0.275", "299.254, 328.942, 48.6262, 0.2754", "298.837, 327.878, 48.634, 0.2762", "298.244, 326.901, 48.6436, 0.2772", "297.568, 325.978, 48.6564, 0.2796", "296.953, 325.014, 48.673, 0.2838", "296.448, 323.989, 48.6942, 0.292", "296.119, 322.894, 48.7231, 0.3066", "295.904, 321.771, 48.7617, 0.3358", "295.644, 320.656, 48.8107, 0.3796", "295.321, 319.559, 48.8701, 0.5112", "294.897, 318.498, 48.9479, 0.5094", "294.403, 317.468, 49.0563, 0.4228", "293.894, 316.444, 49.1974, 0.3578", "293.429, 315.402, 49.3637, 0.3968", "293.11, 314.306, 49.5337, 0.3832", "292.871, 313.188, 49.6857, 0.3906", "292.646, 312.068, 49.8056, 0.4322", "292.499, 310.935, 49.8907, 0.6036", "292.441, 309.793, 49.9492, 0.6924", "292.416, 308.649, 49.9943, 0.6936", "292.396, 307.505, 50.0377, 0.5462", "292.377, 306.362, 50.0861, 0.5136", "292.316, 305.219, 50.141, 0.5456", "292.175, 304.084, 50.1962, 0.4544", "291.995, 302.955, 50.2463, 0.3852", "291.807, 301.827, 50.2869, 0.3752", "291.618, 300.698, 50.3163, 0.4692", "291.383, 299.579, 50.335, 0.5682", "291.075, 298.478, 50.3454, 0.5026", "290.74, 297.384, 50.3499, 0.4708", "290.399, 296.291, 50.351, 0.5534", "290.057, 295.2, 50.3502, 0.7036", "289.716, 294.108, 50.3479, 0.8258", "289.374, 293.016, 50.3448, 0.7222", "289.033, 291.925, 50.3406, 0.772", "288.691, 290.832, 50.3353, 0.8978", "288.341, 289.743, 50.3286, 0.836", "287.977, 288.659, 50.3196, 0.636", "287.61, 287.575, 50.3082, 0.5824", "287.241, 286.493, 50.2942, 0.6642", "286.85, 285.418, 50.2771, 0.6904", "286.341, 284.394, 50.2561, 0.7454", "285.771, 283.402, 50.2306, 0.7738", "285.191, 282.416, 50.2018, 0.7532", "284.604, 281.434, 50.1715, 0.828", "283.98, 280.476, 50.1421, 0.836", "283.333, 279.532, 50.1164, 0.6518", "282.685, 278.589, 50.099, 0.5764", "282.168, 277.57, 50.0982, 0.6108", "281.732, 276.512, 50.1214, 0.5702", "281.312, 275.448, 50.1729, 0.6106", "280.89, 274.385, 50.2524, 0.742", "280.341, 273.384, 50.3555, 0.7514", "279.705, 272.433, 50.475, 0.6146", "279.05, 271.497, 50.6064, 0.5966", "278.393, 270.562, 50.7464, 0.6876", "277.795, 269.589, 50.8987, 0.764", "277.239, 268.592, 51.0695, 0.7336", "276.696, 267.589, 51.261, 0.8258", "276.156, 266.583, 51.4704, 0.6672", "275.674, 265.55, 51.688, 0.485", "275.22, 264.503, 51.9025, 0.381", "274.771, 263.454, 52.1032, 0.4052", "274.321, 262.405, 52.2841, 0.5524", "274.171, 261.275, 52.4401, 0.6052", "274.174, 260.133, 52.5694, 0.4824", "274.198, 258.99, 52.6756, 0.3838", "274.288, 257.85, 52.764, 0.3984", "274.583, 256.747, 52.8422, 0.3824", "274.964, 255.668, 52.915, 0.3908", "275.354, 254.593, 52.9852, 0.4268", "275.726, 253.512, 53.0524, 0.622", "275.846, 252.376, 53.111, 0.5928", "275.86, 251.232, 53.1541, 0.49", "275.86, 250.088, 53.1768, 0.4326", "275.86, 248.944, 53.177, 0.5498", "275.914, 247.802, 53.1535, 0.5974", "276.04, 246.665, 53.1076, 0.4666", "276.188, 245.531, 53.0415, 0.3608", "276.338, 244.397, 52.9609, 0.3268", "276.487, 243.264, 52.8702, 0.3912", "276.817, 242.17, 52.7758, 0.3732", "277.27, 241.12, 52.684, 0.3744", "277.748, 240.081, 52.5986, 0.396", "278.231, 239.044, 52.521, 0.5698", "278.775, 238.038, 52.4482, 0.471", "279.387, 237.072, 52.3765, 0.379", "280.019, 236.119, 52.3046, 0.3234", "280.653, 235.167, 52.246, 0.349", "281.353, 234.264, 52.1948, 0.461", "282.118, 233.414, 52.1469, 0.3848", "282.922, 232.599, 52.1214, 0.3082", "283.926, 232.056, 52.145, 0.2318", "285.024, 231.82, 52.647, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "335.25, 419.73, 39.9442, 0.7606", "335.527, 419.619, 40.7016, 0.4576", "336.559, 419.186, 41.2885, 0.3892", "337.591, 418.703, 41.5204, 0.3554", "338.235, 417.764, 41.7698, 0.3802", "338.607, 416.687, 42.0311, 0.4566", "339.42, 415.89, 42.2988, 0.6784" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "321.888, 414.448, 45.6627, 0.621", "320.993, 414.656, 46.2518, 0.2382", "319.96, 414.849, 47.3564, 0.3102", "318.849, 415.031, 47.8411, 0.3392", "317.743, 415.24, 48.342, 0.4216", "316.702, 415.661, 48.8698, 0.4156", "315.917, 416.46, 49.4217, 0.5018", "315.163, 417.291, 49.9579, 0.4026", "314.459, 418.171, 50.451, 0.3422", "313.81, 419.094, 50.9046, 0.3056", "313.167, 420.026, 51.2943, 0.3336", "312.197, 420.618, 51.6043, 0.3762", "311.129, 421.02, 51.8283, 0.5", "310.058, 421.418, 51.973, 0.5086", "308.991, 421.828, 52.0752, 0.9152" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "321.888, 414.448, 45.6627, 0.621", "321.365, 413.727, 46.1037, 0.5534", "321.036, 412.667, 46.6816, 0.5354", "320.859, 411.562, 47.2525, 0.5212", "320.552, 410.484, 47.808, 0.5098", "320.144, 409.439, 48.3442, 0.616", "319.804, 408.368, 48.8642, 0.6278", "319.629, 407.258, 49.3727, 0.7964", "319.479, 406.143, 49.8744, 0.8894", "319.304, 405.031, 50.3776, 0.8034", "319.249, 403.909, 50.8948, 0.9038", "319.361, 402.794, 51.4416, 0.9106", "319.539, 401.69, 52.0299, 0.7752", "319.655, 400.583, 52.6677, 0.6652", "319.863, 399.495, 53.3602, 0.5148", "320.335, 398.501, 54.0963, 0.4918", "321.043, 397.665, 54.8727, 0.4844", "321.689, 396.783, 55.6898, 0.4558", "322.033, 395.742, 56.476, 0.4722", "322.361, 394.687, 57.1942, 0.6018", "322.837, 393.682, 57.8547, 0.8128", "323.373, 392.704, 58.478, 0.9374", "323.909, 391.725, 59.0906, 0.7358", "324.469, 390.758, 59.6957, 0.6422", "325.084, 389.826, 60.2977, 0.6734", "325.842, 389.007, 60.8989, 0.7234", "326.498, 388.103, 61.4989, 0.7032", "326.846, 387.044, 62.0878, 0.554", "327.015, 385.936, 62.6508, 0.5616", "326.926, 384.82, 63.201, 0.4762", "326.597, 383.751, 63.7734, 0.453", "326.24, 382.693, 64.3852, 0.5802", "326.091, 381.588, 65.0012, 0.4832", "325.945, 380.479, 65.5948, 0.3994", "325.776, 379.371, 66.1444, 0.3864", "325.777, 378.246, 66.6478, 0.3592", "325.975, 377.137, 67.1146, 0.3406", "326.185, 376.027, 67.5595, 0.3722", "326.37, 374.913, 68.007, 0.3364", "326.483, 373.791, 68.4746, 0.3028", "326.496, 372.665, 68.9629, 0.278", "326.496, 371.539, 69.4616, 0.2788", "326.486, 370.417, 70.0031, 0.2826", "326.339, 369.311, 70.6224, 0.2896", "326.031, 368.243, 71.2818, 0.3022", "325.629, 367.207, 71.9505, 0.3284", "325.317, 366.141, 72.6124, 0.3642", "325.343, 365.027, 73.2561, 0.4918", "325.389, 363.913, 73.8713, 0.4306", "325.258, 362.801, 74.4416, 0.391", "325.453, 361.692, 74.9311, 0.4162", "325.585, 360.568, 75.3444, 0.4386", "325.435, 359.444, 75.7056, 0.3704", "325.22, 358.328, 76.0427, 0.3212", "324.91, 357.236, 76.3694, 0.308", "324.531, 356.165, 76.7024, 0.3612", "323.997, 355.165, 77.0675, 0.3126", "323.77, 354.053, 77.4172, 0.2538", "323.291, 353.042, 77.9957, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "339.42, 415.89, 42.2988, 0.6784", "339.66, 415.393, 42.4906, 0.6918", "339.895, 414.289, 42.812, 0.6034", "340.009, 413.16, 43.1416, 0.4404", "340.136, 412.031, 43.4826, 0.3576", "340.359, 410.918, 43.8113, 0.3606", "340.632, 409.814, 44.1104, 0.4184", "340.898, 408.707, 44.3696, 0.5784", "341.132, 407.59, 44.5875, 0.6558", "341.405, 406.483, 44.7754, 0.7284", "341.558, 405.352, 44.9548, 0.7826", "341.609, 404.213, 45.141, 0.6668", "341.651, 403.072, 45.3407, 0.6262", "341.705, 401.933, 45.5557, 0.6802", "341.875, 400.807, 45.789, 0.771", "342.2, 399.717, 46.0449, 0.6842", "342.555, 398.636, 46.324, 0.5476", "342.88, 397.546, 46.6242, 0.507", "343.202, 396.456, 46.9375, 0.6586", "343.384, 395.336, 47.2464, 0.8348", "343.373, 394.201, 47.5513, 0.8672", "343.055, 393.116, 47.8548, 0.8288", "342.74, 392.024, 48.1645, 0.7782", "342.587, 390.899, 48.4929, 0.7392", "342.483, 389.769, 48.8342, 0.6296", "342.368, 388.638, 49.1694, 0.6446", "342.244, 387.509, 49.4796, 0.7898", "342.078, 386.383, 49.7591, 0.884", "341.827, 385.272, 50.0144, 0.7608", "341.65, 384.145, 50.2121, 0.7998", "341.609, 383.004, 50.3401, 0.796", "341.573, 381.862, 50.4185, 0.7848", "341.436, 380.727, 50.4672, 0.6912", "341.193, 379.609, 50.4986, 0.6738", "340.971, 378.487, 50.5215, 0.6428", "340.803, 377.355, 50.5434, 0.5058", "340.57, 376.236, 50.5711, 0.4086", "340.231, 375.144, 50.6148, 0.427", "339.948, 374.036, 50.6892, 0.4434", "339.818, 372.903, 50.8088, 0.4852", "339.719, 371.766, 50.9835, 0.6764", "339.444, 370.661, 51.2151, 0.7074", "339.084, 369.582, 51.4956, 0.7712", "338.913, 368.46, 51.7972, 0.6204", "338.896, 367.322, 52.0864, 0.6304", "338.808, 366.188, 52.3494, 0.5456", "338.584, 365.07, 52.5784, 0.6526", "338.418, 363.941, 52.7652, 0.5438", "338.3, 362.805, 52.9099, 0.5214", "338.146, 361.672, 53.0194, 0.4628", "337.94, 360.548, 53.1014, 0.5602", "337.702, 359.429, 53.1639, 0.5548", "337.533, 358.298, 53.2143, 0.5268", "337.458, 357.157, 53.2627, 0.4384", "337.356, 356.017, 53.3142, 0.451", "337.175, 354.889, 53.3705, 0.435", "336.953, 353.767, 53.4444, 0.491", "336.772, 352.638, 53.5517, 0.5612", "336.765, 351.497, 53.6886, 0.4974", "336.89, 350.363, 53.8401, 0.451", "336.988, 349.224, 53.9893, 0.5368", "337.022, 348.083, 54.1223, 0.5506", "336.956, 346.942, 54.236, 0.5234", "336.746, 345.819, 54.3236, 0.4328", "336.461, 344.711, 54.3794, 0.4374", "336.154, 343.61, 54.4043, 0.4342", "335.825, 342.514, 54.4062, 0.3684", "335.486, 341.421, 54.3948, 0.3092", "335.144, 340.329, 54.3766, 0.2834", "334.78, 339.244, 54.3609, 0.2862", "334.335, 338.192, 54.3547, 0.296", "333.808, 337.176, 54.3603, 0.315", "333.289, 336.156, 54.3785, 0.3456", "332.819, 335.113, 54.4096, 0.4242", "332.385, 334.056, 54.4538, 0.4658", "331.978, 332.986, 54.5132, 0.4276", "331.627, 331.898, 54.5899, 0.437", "331.373, 330.784, 54.6862, 0.4336", "331.141, 329.665, 54.8064, 0.367", "330.869, 328.556, 54.9578, 0.3068", "330.548, 327.46, 55.1457, 0.279", "330.169, 326.385, 55.3638, 0.278", "329.763, 325.319, 55.6046, 0.281", "329.378, 324.247, 55.8634, 0.2864", "328.978, 323.182, 56.14, 0.2966", "328.461, 322.17, 56.4312, 0.315", "327.846, 321.212, 56.7325, 0.3516", "327.236, 320.254, 57.045, 0.4086", "326.697, 319.255, 57.3843, 0.5668", "326.178, 318.246, 57.7469, 0.6086", "325.706, 317.213, 58.079, 0.6476", "325.333, 316.138, 58.3629, 0.5778", "324.921, 315.075, 58.6099, 0.488", "324.483, 314.023, 58.8482, 0.4984", "324.037, 312.974, 59.0862, 0.5332", "323.624, 311.912, 59.3253, 0.5974", "323.276, 310.827, 59.5652, 0.5076", "322.908, 309.748, 59.8055, 0.4952", "322.356, 308.753, 60.0538, 0.4914", "321.581, 307.924, 60.3308, 0.4664", "320.74, 307.161, 60.6628, 0.5062", "319.915, 306.385, 61.0579, 0.5798", "318.944, 305.822, 61.5622, 0.548", "317.879, 305.501, 62.1922, 0.432", "317.15, 304.652, 62.7819, 0.413", "316.505, 303.733, 63.301, 0.3612", "315.633, 303.011, 63.7218, 0.3528", "314.841, 302.196, 64.0324, 0.3624", "314.128, 301.306, 64.2312, 0.4886", "313.702, 300.245, 64.3406, 0.418", "313.27, 299.186, 64.3966, 0.3984", "312.758, 298.163, 64.421, 0.2796", "312.247, 297.139, 64.4311, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "339.42, 415.89, 42.2988, 0.6784", "340.488, 415.559, 42.0358, 0.2678", "341.588, 415.251, 41.979, 0.3728", "342.71, 415.031, 41.9745, 0.4884", "343.852, 415.007, 42.0028, 0.6066", "344.987, 415.143, 42.0577, 0.5776", "346.101, 415.401, 42.1207, 0.6226", "347.217, 415.655, 42.1674, 0.7584", "348.357, 415.695, 42.1772, 0.811", "349.46, 415.406, 42.1526, 0.6142", "350.434, 414.812, 42.0902, 0.5106", "351.354, 414.135, 41.9846, 0.4404", "352.341, 413.559, 41.8278, 0.4762", "353.399, 413.134, 41.6147, 0.6388", "354.494, 412.824, 41.3448, 0.753", "355.579, 412.49, 41.0276, 0.827", "356.618, 412.033, 40.6792, 0.6954", "357.706, 411.715, 40.3141, 0.622", "358.835, 411.624, 39.9448, 0.4472", "359.965, 411.517, 39.5903, 0.365", "361.088, 411.34, 39.2664, 0.3424", "362.179, 411.021, 38.9763, 0.3912", "363.229, 410.582, 38.7142, 0.5114", "364.25, 410.075, 38.4714, 0.6134", "365.248, 409.525, 38.239, 0.7412", "366.208, 408.909, 38.0111, 0.8056", "367.118, 408.22, 37.7871, 0.871", "367.968, 407.461, 37.5715, 0.7716", "368.743, 406.623, 37.382, 0.7638", "369.459, 405.733, 37.2397, 0.721", "370.214, 404.875, 37.1622, 0.8224", "371.046, 404.091, 37.1574, 0.7898", "371.87, 403.297, 37.2347, 0.7336", "372.634, 402.448, 37.4058, 0.5578", "373.402, 401.606, 37.6412, 0.5782", "374.174, 400.768, 37.8988, 0.488", "374.814, 399.827, 38.152, 0.547", "375.412, 398.854, 38.3779, 0.4426", "376.075, 397.926, 38.5568, 0.4096", "376.834, 397.071, 38.6758, 0.4504", "377.785, 396.437, 38.7307, 0.4972", "378.772, 395.859, 38.7237, 0.508", "379.734, 395.239, 38.6686, 0.4426", "380.717, 394.657, 38.5784, 0.5028", "381.745, 394.155, 38.4661, 0.4052", "382.819, 393.766, 38.3572, 0.3458", "383.924, 393.47, 38.2802, 0.3126", "384.971, 393.01, 38.2463, 0.34", "385.918, 392.369, 38.2511, 0.416", "386.671, 391.508, 38.285, 0.4394", "387.04, 390.427, 38.3356, 0.3724", "387.26, 389.304, 38.3902, 0.3246", "387.466, 388.179, 38.4392, 0.3142", "387.673, 387.054, 38.481, 0.3728", "387.946, 385.943, 38.5182, 0.3342", "388.279, 384.849, 38.5546, 0.3002", "388.69, 383.781, 38.5952, 0.2748", "389.243, 382.78, 38.6439, 0.2746", "389.808, 381.785, 38.7036, 0.2746", "390.36, 380.784, 38.7764, 0.2746", "390.921, 379.787, 38.8634, 0.2746", "391.518, 378.813, 38.9715, 0.2746", "392.152, 377.862, 39.095, 0.2746", "392.835, 376.945, 39.2193, 0.2746", "393.498, 376.014, 39.3333, 0.2746", "394.129, 375.06, 39.4293, 0.2746", "394.864, 374.185, 39.5041, 0.2746", "395.749, 373.459, 39.557, 0.2746", "396.649, 372.755, 39.5942, 0.2746", "397.564, 372.068, 39.6234, 0.2746", "398.488, 371.393, 39.6502, 0.2746", "399.422, 370.733, 39.6802, 0.2746", "400.31, 370.011, 39.7172, 0.2746", "401.112, 369.195, 39.7642, 0.2746", "401.908, 368.374, 39.8244, 0.2746", "402.703, 367.553, 39.8997, 0.2746", "403.493, 366.726, 39.9935, 0.2746", "404.275, 365.892, 40.1094, 0.2746", "405.015, 365.022, 40.2514, 0.2746", "405.722, 364.125, 40.4197, 0.2746", "406.524, 363.313, 40.6036, 0.2746", "407.367, 362.543, 40.7907, 0.2744", "408.186, 361.748, 40.9811, 0.2744", "408.993, 360.941, 41.1737, 0.2742", "409.735, 360.074, 41.3504, 0.2736", "410.475, 359.203, 41.4996, 0.2728", "410.929, 358.155, 41.6186, 0.2712", "411.382, 357.105, 41.7068, 0.2684", "411.495, 355.967, 41.7642, 0.2626", "411.552, 354.824, 41.7967, 0.2542", "411.598, 353.681, 41.8135, 0.2288", "411.598, 352.537, 41.8236, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_35", "dend_28", "dend_27", "dend_20", "dend_19", "dend_0", "dend_43", "dend_36", "dend_32", "dend_29", "dend_24", "dend_21", "dend_16", "dend_11", "dend_1", "dend_45", "dend_44", "dend_40", "dend_37", "dend_34", "dend_33", "dend_31", "dend_30", "dend_26", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_12", "dend_6", "dend_2", "dend_47", "dend_46", "dend_42", "dend_41", "dend_39", "dend_38", "dend_14", "dend_13", "dend_8", "dend_7", "dend_3", "dend_10", "dend_9", "dend_5", "dend_4" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4305",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_43", "dend_43", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "0.76334894"
  }, {
    "group" : "axon",
    "value" : "0.76334894"
  }, {
    "group" : "dend",
    "value" : "0.76334894"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "278.35275"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "6.069486E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.04226754",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "5.4815485E-10",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.2632433",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.39675176",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.09037042",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "8.570881E-6",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.062897444",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "1.0202261E-7",
    "erev" : "-88.83443"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "8.0578314E-4",
    "erev" : "-88.83443"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "6.305873E-5",
    "erev" : "-88.83443"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "2.357391E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.007846445",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_485694403",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_485694403

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_43, id: dend_43, parent: dend_35
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_0
create dend_11
public dend_11
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_1
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_35, dend_28, dend_27, dend_20, dend_19, dend_0, dend_43, dend_36, dend_32, dend_29, dend_24, dend_21, dend_16, dend_11, dend_1, dend_45, dend_44, dend_40, dend_37, dend_34, dend_33, dend_31, dend_30, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_12, dend_6, dend_2, dend_47, dend_46, dend_42, dend_41, dend_39, dend_38, dend_14, dend_13, dend_8, dend_7, dend_3, dend_10, dend_9, dend_5, dend_4]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_4305, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_4305
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, dend_0, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_1, dend_1, dend_1, dend_1, dend_1, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_485694403
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5)
    connect dend_35(0), soma_0(0.5)
    connect dend_28(0), soma_0(0.5)
    connect dend_27(0), soma_0(0.5)
    connect dend_20(0), soma_0(0.5)
    connect dend_19(0), soma_0(0.5)
    connect dend_0(0), soma_0(0.5)
    connect axon_1(0), axon_0(1.0)
    connect dend_43(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_11(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 326.2, 440.326, 37.52, 13.4076 ) }
    soma_0 { pt3dadd( 332.904, 440.326, 37.52, 13.4076 ) }
    soma_0 { pt3dadd( 339.608, 440.326, 37.52, 13.4076 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 332.904, 440.326, 37.52, 1.0 ) }
    axon_0 { pt3dadd( 338.745, 454.142, 37.52, 1.0 ) }
    axon_0 { pt3dadd( 344.587, 467.958, 37.52, 1.0 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 6/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 338.569, 443.088, 37.4245, 0.4606 ) }
    dend_35 { pt3dadd( 339.326, 443.946, 37.38, 0.7874 ) }
    dend_35 { pt3dadd( 340.098, 444.791, 37.3206, 1.0544 ) }
    dend_35 { pt3dadd( 340.856, 445.647, 37.2523, 1.1768 ) }
    dend_35 { pt3dadd( 341.835, 446.237, 37.1605, 1.1578 ) }
    dend_35 { pt3dadd( 342.858, 446.746, 37.0227, 0.942 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 12/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 335.594, 444.879, 33.7901, 0.2364 ) }
    dend_28 { pt3dadd( 336.026, 445.92, 33.3136, 0.7008 ) }
    dend_28 { pt3dadd( 336.127, 447.05, 32.9717, 0.692 ) }
    dend_28 { pt3dadd( 336.279, 448.18, 32.7606, 0.7998 ) }
    dend_28 { pt3dadd( 336.663, 449.258, 32.6631, 1.079 ) }
    dend_28 { pt3dadd( 337.138, 450.298, 32.648, 1.2164 ) }
    dend_28 { pt3dadd( 337.509, 451.381, 32.6906, 0.8108 ) }
    dend_28 { pt3dadd( 337.893, 452.458, 32.746, 0.5144 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 20/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 334.392, 445.159, 43.934, 0.2302 ) }
    dend_27 { pt3dadd( 334.61, 446.211, 44.8907, 0.299 ) }
    dend_27 { pt3dadd( 334.594, 447.318, 45.6067, 0.314 ) }
    dend_27 { pt3dadd( 334.406, 448.425, 46.1339, 0.3716 ) }
    dend_27 { pt3dadd( 334.12, 449.521, 46.5105, 0.3356 ) }
    dend_27 { pt3dadd( 333.624, 450.546, 46.7771, 0.3016 ) }
    dend_27 { pt3dadd( 333.231, 451.617, 46.9781, 0.2758 ) }
    dend_27 { pt3dadd( 333.145, 452.753, 47.1643, 0.275 ) }
    dend_27 { pt3dadd( 333.14, 453.893, 47.374, 0.2756 ) }
    dend_27 { pt3dadd( 333.239, 455.028, 47.626, 0.2764 ) }
    dend_27 { pt3dadd( 333.376, 456.157, 47.9349, 0.2782 ) }
    dend_27 { pt3dadd( 333.518, 457.282, 48.3162, 0.281 ) }
    dend_27 { pt3dadd( 333.68, 458.397, 48.7869, 0.2864 ) }
    dend_27 { pt3dadd( 334.103, 459.429, 49.3867, 0.2974 ) }
    dend_27 { pt3dadd( 334.597, 460.414, 50.141, 0.3124 ) }
    dend_27 { pt3dadd( 335.086, 461.379, 51.051, 0.3696 ) }
    dend_27 { pt3dadd( 335.564, 462.319, 52.1346, 0.3312 ) }
    dend_27 { pt3dadd( 335.829, 463.309, 53.3761, 0.2934 ) }
    dend_27 { pt3dadd( 335.991, 464.303, 54.7042, 0.2622 ) }
    dend_27 { pt3dadd( 336.15, 465.298, 56.0308, 0.2516 ) }
    dend_27 { pt3dadd( 336.297, 466.225, 57.5462, 0.2288 ) }
    dend_27 { pt3dadd( 336.394, 466.836, 59.901, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 42/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 327.303, 442.473, 37.4587, 0.2412 ) }
    dend_20 { pt3dadd( 326.173, 442.651, 37.4875, 0.4156 ) }
    dend_20 { pt3dadd( 325.046, 442.847, 37.5245, 0.5484 ) }
    dend_20 { pt3dadd( 323.948, 443.167, 37.5757, 0.7254 ) }
    dend_20 { pt3dadd( 322.856, 442.826, 37.6194, 0.7052 ) }
    dend_20 { pt3dadd( 321.764, 442.486, 37.6387, 0.5248 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 48/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 331.21, 436.635, 28.0591, 0.6326 ) }
    dend_19 { pt3dadd( 331.137, 435.625, 26.8599, 0.3504 ) }
    dend_19 { pt3dadd( 331.131, 434.539, 25.982, 0.491 ) }
    dend_19 { pt3dadd( 330.401, 433.896, 25.1547, 0.488 ) }
    dend_19 { pt3dadd( 329.922, 432.911, 24.5706, 0.539 ) }
    dend_19 { pt3dadd( 329.689, 431.809, 24.1167, 0.4398 ) }
    dend_19 { pt3dadd( 329.464, 430.699, 23.7184, 0.3988 ) }
    dend_19 { pt3dadd( 329.083, 429.633, 23.3356, 0.4018 ) }
    dend_19 { pt3dadd( 328.589, 428.613, 22.9526, 0.5152 ) }
    dend_19 { pt3dadd( 328.144, 427.571, 22.5711, 0.6592 ) }
    dend_19 { pt3dadd( 327.631, 426.561, 22.1869, 0.6598 ) }
    dend_19 { pt3dadd( 327.035, 425.598, 21.798, 0.846 ) }
    dend_19 { pt3dadd( 326.431, 424.64, 21.3942, 0.8226 ) }
    dend_19 { pt3dadd( 325.841, 423.677, 20.9629, 0.7486 ) }
    dend_19 { pt3dadd( 325.51, 422.603, 20.4719, 0.5674 ) }
    dend_19 { pt3dadd( 324.991, 421.599, 20.043, 0.4258 ) }
    dend_19 { pt3dadd( 324.382, 420.64, 19.7173, 0.3682 ) }
    dend_19 { pt3dadd( 323.705, 419.721, 19.5024, 0.4226 ) }
    dend_19 { pt3dadd( 323.161, 418.717, 19.4059, 0.432 ) }
    dend_19 { pt3dadd( 322.853, 417.622, 19.6888, 0.4576 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 68/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 334.667, 433.616, 38.031, 2.5094 ) }
    dend_0 { pt3dadd( 333.681, 431.559, 38.3328, 1.324 ) }
    dend_0 { pt3dadd( 333.43, 429.31, 38.7136, 1.7762 ) }
    dend_0 { pt3dadd( 333.831, 427.069, 39.1205, 1.5654 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 72/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 344.587, 467.958, 37.52, 1.0 ) }
    axon_1 { pt3dadd( 350.428, 481.774, 37.52, 1.0 ) }
    axon_1 { pt3dadd( 356.269, 495.59, 37.52, 1.0 ) }
    // Section: dend_43, id: dend_43, parent: dend_35 (entry count 75/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 342.858, 446.746, 37.0227, 0.942 ) }
    dend_43 { pt3dadd( 343.846, 447.495, 37.6894, 0.9156 ) }
    dend_43 { pt3dadd( 344.922, 447.871, 37.905, 0.869 ) }
    dend_43 { pt3dadd( 346.059, 447.956, 38.117, 0.6054 ) }
    dend_43 { pt3dadd( 347.138, 448.329, 38.3057, 0.5134 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 80/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 342.858, 446.746, 37.0227, 0.942 ) }
    dend_36 { pt3dadd( 343.362, 447.355, 36.8416, 0.7346 ) }
    dend_36 { pt3dadd( 344.346, 447.93, 36.6125, 0.7976 ) }
    dend_36 { pt3dadd( 345.1, 448.783, 36.3577, 0.965 ) }
    dend_36 { pt3dadd( 345.821, 449.665, 36.0886, 1.08 ) }
    dend_36 { pt3dadd( 346.452, 450.611, 35.8179, 1.1134 ) }
    dend_36 { pt3dadd( 347.071, 451.568, 35.5432, 1.1276 ) }
    dend_36 { pt3dadd( 347.603, 452.573, 35.2509, 1.1486 ) }
    dend_36 { pt3dadd( 348.135, 453.579, 34.953, 1.2126 ) }
    dend_36 { pt3dadd( 348.798, 454.504, 34.6702, 1.2108 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 90/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 337.893, 452.458, 32.746, 0.5144 ) }
    dend_32 { pt3dadd( 337.26, 451.84, 31.5636, 0.4662 ) }
    dend_32 { pt3dadd( 336.267, 451.448, 30.6821, 0.4972 ) }
    dend_32 { pt3dadd( 335.229, 451.761, 29.8987, 0.6072 ) }
    dend_32 { pt3dadd( 334.167, 452.069, 29.1746, 0.6142 ) }
    dend_32 { pt3dadd( 333.15, 451.621, 28.5477, 0.6658 ) }
    dend_32 { pt3dadd( 332.053, 451.364, 28.0624, 0.5584 ) }
    dend_32 { pt3dadd( 331.321, 452.225, 27.7371, 0.6606 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 98/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 337.893, 452.458, 32.746, 0.5144 ) }
    dend_29 { pt3dadd( 337.831, 453.606, 32.7701, 0.4882 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_29 { pt3dadd( 337.522, 454.706, 32.7116, 0.4244 ) }
    dend_29 { pt3dadd( 337.216, 455.806, 32.6018, 0.375 ) }
    dend_29 { pt3dadd( 337.593, 456.878, 32.4705, 0.389 ) }
    dend_29 { pt3dadd( 338.367, 457.718, 32.3568, 0.3632 ) }
    dend_29 { pt3dadd( 339.02, 458.656, 32.2655, 0.3546 ) }
    dend_29 { pt3dadd( 339.563, 459.661, 32.1748, 0.371 ) }
    dend_29 { pt3dadd( 340.055, 460.693, 32.0575, 0.4736 ) }
    dend_29 { pt3dadd( 340.377, 461.789, 31.915, 0.5436 ) }
    dend_29 { pt3dadd( 340.691, 462.888, 31.7573, 0.5818 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 9/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 321.764, 442.486, 37.6387, 0.5248 ) }
    dend_24 { pt3dadd( 321.861, 443.361, 37.6146, 0.4248 ) }
    dend_24 { pt3dadd( 321.987, 444.498, 37.5348, 0.4786 ) }
    dend_24 { pt3dadd( 321.904, 445.637, 37.4041, 0.5444 ) }
    dend_24 { pt3dadd( 321.598, 446.738, 37.2355, 0.6172 ) }
    dend_24 { pt3dadd( 321.228, 447.818, 37.0454, 0.5338 ) }
    dend_24 { pt3dadd( 320.787, 448.869, 36.8424, 0.5258 ) }
    dend_24 { pt3dadd( 320.352, 449.924, 36.6346, 0.7066 ) }
    dend_24 { pt3dadd( 319.96, 450.996, 36.4277, 0.7806 ) }
    dend_24 { pt3dadd( 319.61, 452.081, 36.2382, 0.5878 ) }
    dend_24 { pt3dadd( 319.282, 453.176, 36.0816, 0.4574 ) }
    dend_24 { pt3dadd( 318.825, 454.223, 35.9621, 0.4884 ) }
    dend_24 { pt3dadd( 318.263, 455.219, 35.8761, 0.5924 ) }
    dend_24 { pt3dadd( 317.907, 456.306, 35.8095, 0.5586 ) }
    dend_24 { pt3dadd( 317.796, 457.444, 35.7437, 0.4554 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 24/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 321.764, 442.486, 37.6387, 0.5248 ) }
    dend_21 { pt3dadd( 321.302, 442.428, 38.2166, 0.2372 ) }
    dend_21 { pt3dadd( 320.174, 442.332, 38.6033, 0.356 ) }
    dend_21 { pt3dadd( 319.05, 442.126, 38.7545, 0.4304 ) }
    dend_21 { pt3dadd( 318.016, 441.641, 38.9141, 0.552 ) }
    dend_21 { pt3dadd( 317.254, 440.793, 39.0967, 0.8476 ) }
    dend_21 { pt3dadd( 316.615, 439.849, 39.2986, 1.0556 ) }
    dend_21 { pt3dadd( 316.017, 438.876, 39.5147, 1.0512 ) }
    dend_21 { pt3dadd( 315.488, 437.867, 39.741, 0.8752 ) }
    dend_21 { pt3dadd( 314.884, 436.899, 39.9633, 0.8878 ) }
    dend_21 { pt3dadd( 314.496, 435.827, 40.1752, 0.8562 ) }
    dend_21 { pt3dadd( 313.86, 434.88, 40.3822, 0.8476 ) }
    dend_21 { pt3dadd( 313.217, 433.939, 40.6188, 0.8148 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 37/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 333.831, 427.069, 39.1205, 1.5654 ) }
    dend_16 { pt3dadd( 334.495, 426.142, 38.7652, 0.7024 ) }
    dend_16 { pt3dadd( 335.082, 425.163, 38.5907, 0.7862 ) }
    dend_16 { pt3dadd( 335.621, 424.156, 38.4289, 0.7906 ) }
    dend_16 { pt3dadd( 336.266, 423.214, 38.2956, 0.5992 ) }
    dend_16 { pt3dadd( 336.986, 422.324, 38.2024, 0.5224 ) }
    dend_16 { pt3dadd( 337.568, 421.34, 38.1595, 0.6038 ) }
    dend_16 { pt3dadd( 337.902, 420.246, 38.1755, 0.8164 ) }
    dend_16 { pt3dadd( 338.141, 419.127, 38.2435, 0.9292 ) }
    dend_16 { pt3dadd( 338.332, 418.0, 38.3407, 0.6904 ) }
    dend_16 { pt3dadd( 338.343, 416.858, 38.4364, 0.5838 ) }
    dend_16 { pt3dadd( 338.129, 415.734, 38.5126, 0.5616 ) }
    dend_16 { pt3dadd( 337.974, 414.6, 38.5557, 0.5896 ) }
    dend_16 { pt3dadd( 337.924, 413.458, 38.5792, 0.7652 ) }
    dend_16 { pt3dadd( 337.835, 412.317, 38.5997, 0.949 ) }
    dend_16 { pt3dadd( 337.471, 411.233, 38.6238, 1.071 ) }
    dend_16 { pt3dadd( 337.052, 410.169, 38.656, 0.9874 ) }
    dend_16 { pt3dadd( 336.632, 409.105, 38.701, 0.7368 ) }
    dend_16 { pt3dadd( 336.193, 408.049, 38.757, 0.7286 ) }
    dend_16 { pt3dadd( 335.85, 406.957, 38.7996, 0.775 ) }
    dend_16 { pt3dadd( 335.748, 405.818, 38.7999, 0.7982 ) }
    dend_16 { pt3dadd( 336.035, 404.711, 38.7691, 0.9212 ) }
    dend_16 { pt3dadd( 336.114, 403.57, 38.7282, 0.99 ) }
    dend_16 { pt3dadd( 336.167, 402.427, 38.6848, 0.9728 ) }
    dend_16 { pt3dadd( 336.47, 401.324, 38.6467, 0.959 ) }
    dend_16 { pt3dadd( 336.836, 400.24, 38.6224, 1.0736 ) }
    dend_16 { pt3dadd( 337.296, 399.193, 38.6128, 1.063 ) }
    dend_16 { pt3dadd( 337.505, 398.067, 38.6112, 0.9814 ) }
    dend_16 { pt3dadd( 337.665, 396.935, 38.6114, 0.9026 ) }
    dend_16 { pt3dadd( 338.297, 395.981, 38.6123, 1.0896 ) }
    dend_16 { pt3dadd( 338.965, 395.053, 38.6126, 1.1938 ) }
    dend_16 { pt3dadd( 339.61, 394.108, 38.61, 1.1926 ) }
    // Section: dend_11, id: dend_11, parent: dend_0 (entry count 69/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 333.831, 427.069, 39.1205, 1.5654 ) }
    dend_11 { pt3dadd( 333.696, 425.033, 37.5542, 0.7186 ) }
    dend_11 { pt3dadd( 333.207, 424.006, 37.27, 0.541 ) }
    dend_11 { pt3dadd( 333.142, 422.872, 37.0135, 0.5834 ) }
    dend_11 { pt3dadd( 333.317, 421.745, 36.7979, 0.7814 ) }
    dend_11 { pt3dadd( 333.542, 420.626, 36.6358, 0.842 ) }
    dend_11 { pt3dadd( 333.701, 419.493, 36.5263, 0.6572 ) }
    dend_11 { pt3dadd( 333.59, 418.356, 36.4482, 0.599 ) }
    dend_11 { pt3dadd( 333.211, 417.279, 36.3647, 0.6476 ) }
    dend_11 { pt3dadd( 332.793, 416.215, 36.2639, 0.6882 ) }
    dend_11 { pt3dadd( 332.378, 415.15, 36.1483, 0.5698 ) }
    dend_11 { pt3dadd( 331.807, 414.159, 36.0326, 0.6074 ) }
    dend_11 { pt3dadd( 331.15, 413.223, 35.9369, 0.5416 ) }
    dend_11 { pt3dadd( 330.726, 412.161, 35.8795, 0.6454 ) }
    dend_11 { pt3dadd( 330.466, 411.048, 35.863, 0.6376 ) }
    dend_11 { pt3dadd( 330.083, 409.97, 35.8672, 0.7058 ) }
    dend_11 { pt3dadd( 329.536, 408.965, 35.8621, 0.6426 ) }
    dend_11 { pt3dadd( 328.987, 407.962, 35.8243, 0.771 ) }
    dend_11 { pt3dadd( 328.497, 406.928, 35.7577, 0.9444 ) }
    dend_11 { pt3dadd( 328.051, 405.875, 35.6678, 0.9084 ) }
    dend_11 { pt3dadd( 327.588, 404.83, 35.5625, 0.7564 ) }
    dend_11 { pt3dadd( 327.392, 403.704, 35.4558, 0.8718 ) }
    dend_11 { pt3dadd( 327.145, 402.587, 35.3724, 0.9786 ) }
    dend_11 { pt3dadd( 326.808, 401.495, 35.3251, 1.0232 ) }
    dend_11 { pt3dadd( 326.332, 400.455, 35.3038, 0.9394 ) }
    dend_11 { pt3dadd( 325.783, 399.452, 35.2794, 0.902 ) }
    dend_11 { pt3dadd( 325.648, 398.316, 35.2209, 0.9406 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 96/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 333.831, 427.069, 39.1205, 1.5654 ) }
    dend_1 { pt3dadd( 334.051, 426.065, 39.3285, 1.2798 ) }
    dend_1 { pt3dadd( 334.292, 424.949, 39.5324, 1.1006 ) }
    dend_1 { pt3dadd( 334.504, 423.828, 39.7107, 1.1152 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( 334.674, 422.698, 39.8496, 1.2972 ) }
    dend_1 { pt3dadd( 334.793, 421.561, 39.9361, 1.111 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 2/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 347.138, 448.329, 38.3057, 0.5134 ) }
    dend_45 { pt3dadd( 347.306, 448.582, 39.0272, 0.2646 ) }
    dend_45 { pt3dadd( 347.889, 449.38, 40.4253, 0.405 ) }
    dend_45 { pt3dadd( 348.811, 449.98, 41.1009, 0.4194 ) }
    dend_45 { pt3dadd( 349.9, 449.856, 41.783, 0.4764 ) }
    dend_45 { pt3dadd( 350.782, 449.196, 42.5006, 0.5078 ) }
    dend_45 { pt3dadd( 351.285, 448.215, 43.2264, 0.49 ) }
    dend_45 { pt3dadd( 351.612, 447.155, 43.92, 0.5882 ) }
    dend_45 { pt3dadd( 351.947, 446.092, 44.553, 0.5832 ) }
    dend_45 { pt3dadd( 352.837, 445.413, 45.129, 0.5744 ) }
    dend_45 { pt3dadd( 353.885, 445.002, 45.6257, 0.5504 ) }
    dend_45 { pt3dadd( 355.011, 444.91, 46.0541, 0.545 ) }
    dend_45 { pt3dadd( 356.146, 444.906, 46.424, 0.5712 ) }
    dend_45 { pt3dadd( 357.28, 444.928, 46.7664, 0.446 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 16/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 347.138, 448.329, 38.3057, 0.5134 ) }
    dend_44 { pt3dadd( 348.282, 448.315, 38.5053, 0.45 ) }
    dend_44 { pt3dadd( 349.426, 448.308, 38.5412, 0.45 ) }
    dend_44 { pt3dadd( 350.569, 448.352, 38.5316, 0.5426 ) }
    dend_44 { pt3dadd( 351.703, 448.489, 38.5101, 0.7242 ) }
    dend_44 { pt3dadd( 352.832, 448.673, 38.507, 0.7502 ) }
    dend_44 { pt3dadd( 353.964, 448.84, 38.5392, 0.762 ) }
    dend_44 { pt3dadd( 355.103, 448.927, 38.6098, 0.7562 ) }
    dend_44 { pt3dadd( 356.229, 448.76, 38.717, 0.748 ) }
    dend_44 { pt3dadd( 357.312, 448.405, 38.848, 0.6714 ) }
    dend_44 { pt3dadd( 358.381, 448.001, 38.9833, 0.6426 ) }
    dend_44 { pt3dadd( 359.457, 447.615, 39.0967, 0.5492 ) }
    dend_44 { pt3dadd( 360.552, 447.286, 39.1597, 0.5176 ) }
    dend_44 { pt3dadd( 361.668, 447.034, 39.1482, 0.6594 ) }
    dend_44 { pt3dadd( 362.805, 446.931, 39.048, 0.722 ) }
    dend_44 { pt3dadd( 363.945, 446.944, 38.8595, 0.6316 ) }
    dend_44 { pt3dadd( 365.073, 447.089, 38.6016, 0.6056 ) }
    dend_44 { pt3dadd( 366.2, 447.246, 38.299, 0.6928 ) }
    dend_44 { pt3dadd( 367.333, 447.225, 37.9705, 0.7794 ) }
    dend_44 { pt3dadd( 368.463, 447.114, 37.6331, 0.8098 ) }
    dend_44 { pt3dadd( 369.595, 447.024, 37.2999, 0.807 ) }
    dend_44 { pt3dadd( 370.73, 446.958, 36.981, 0.787 ) }
    dend_44 { pt3dadd( 371.866, 446.923, 36.6825, 0.783 ) }
    dend_44 { pt3dadd( 373.006, 446.905, 36.4106, 0.6144 ) }
    dend_44 { pt3dadd( 374.143, 446.835, 36.1757, 0.5048 ) }
    dend_44 { pt3dadd( 375.267, 446.644, 35.9937, 0.5668 ) }
    dend_44 { pt3dadd( 376.389, 446.423, 35.8688, 0.6104 ) }
    dend_44 { pt3dadd( 377.517, 446.238, 35.7885, 0.6284 ) }
    dend_44 { pt3dadd( 378.649, 446.074, 35.7342, 0.6674 ) }
    dend_44 { pt3dadd( 379.771, 445.855, 35.6857, 0.6798 ) }
    dend_44 { pt3dadd( 380.859, 445.504, 35.6261, 0.6048 ) }
    dend_44 { pt3dadd( 381.99, 445.366, 35.5387, 0.4822 ) }
    dend_44 { pt3dadd( 383.123, 445.483, 35.4122, 0.493 ) }
    dend_44 { pt3dadd( 384.264, 445.506, 35.2475, 0.4068 ) }
    dend_44 { pt3dadd( 385.374, 445.255, 35.0633, 0.3336 ) }
    dend_44 { pt3dadd( 386.372, 444.713, 34.8933, 0.2804 ) }
    dend_44 { pt3dadd( 387.337, 444.099, 34.7612, 0.2746 ) }
    dend_44 { pt3dadd( 388.305, 443.49, 34.6741, 0.2748 ) }
    dend_44 { pt3dadd( 389.296, 442.921, 34.6287, 0.2748 ) }
    dend_44 { pt3dadd( 390.333, 442.439, 34.6237, 0.2752 ) }
    dend_44 { pt3dadd( 391.408, 442.047, 34.6587, 0.2756 ) }
    dend_44 { pt3dadd( 392.511, 441.749, 34.7357, 0.2766 ) }
    dend_44 { pt3dadd( 393.637, 441.554, 34.8597, 0.278 ) }
    dend_44 { pt3dadd( 394.775, 441.473, 35.0308, 0.281 ) }
    dend_44 { pt3dadd( 395.914, 441.517, 35.2422, 0.2864 ) }
    dend_44 { pt3dadd( 397.04, 441.689, 35.4855, 0.2976 ) }
    dend_44 { pt3dadd( 398.112, 442.069, 35.7535, 0.3126 ) }
    dend_44 { pt3dadd( 399.145, 442.544, 36.0422, 0.3672 ) }
    dend_44 { pt3dadd( 400.155, 443.063, 36.3793, 0.3376 ) }
    dend_44 { pt3dadd( 401.035, 443.774, 36.7716, 0.3024 ) }
    dend_44 { pt3dadd( 401.809, 444.598, 37.1686, 0.2762 ) }
    dend_44 { pt3dadd( 402.524, 445.478, 37.534, 0.2746 ) }
    dend_44 { pt3dadd( 403.195, 446.397, 37.8442, 0.2746 ) }
    dend_44 { pt3dadd( 403.857, 447.325, 38.0834, 0.2746 ) }
    dend_44 { pt3dadd( 404.497, 448.271, 38.2474, 0.2746 ) }
    dend_44 { pt3dadd( 405.108, 449.237, 38.3463, 0.2746 ) }
    dend_44 { pt3dadd( 405.796, 450.149, 38.4003, 0.2748 ) }
    dend_44 { pt3dadd( 406.612, 450.95, 38.4269, 0.275 ) }
    dend_44 { pt3dadd( 407.516, 451.651, 38.439, 0.2752 ) }
    dend_44 { pt3dadd( 408.473, 452.277, 38.4454, 0.2758 ) }
    dend_44 { pt3dadd( 409.48, 452.82, 38.4504, 0.2768 ) }
    dend_44 { pt3dadd( 410.524, 453.285, 38.4563, 0.2788 ) }
    dend_44 { pt3dadd( 411.588, 453.706, 38.4639, 0.2826 ) }
    dend_44 { pt3dadd( 412.658, 454.111, 38.474, 0.2892 ) }
    dend_44 { pt3dadd( 413.746, 454.465, 38.4871, 0.3016 ) }
    dend_44 { pt3dadd( 414.856, 454.743, 38.5039, 0.3254 ) }
    dend_44 { pt3dadd( 415.976, 454.976, 38.5258, 0.366 ) }
    dend_44 { pt3dadd( 417.094, 455.212, 38.5535, 0.4582 ) }
    dend_44 { pt3dadd( 418.209, 455.473, 38.5888, 0.5474 ) }
    dend_44 { pt3dadd( 419.292, 455.839, 38.6324, 0.4652 ) }
    dend_44 { pt3dadd( 420.319, 456.341, 38.6851, 0.3992 ) }
    dend_44 { pt3dadd( 421.364, 456.806, 38.7492, 0.4292 ) }
    dend_44 { pt3dadd( 422.459, 457.134, 38.8282, 0.431 ) }
    dend_44 { pt3dadd( 423.587, 457.317, 38.9183, 0.5254 ) }
    dend_44 { pt3dadd( 424.728, 457.376, 39.0076, 0.4606 ) }
    dend_44 { pt3dadd( 425.871, 457.416, 39.0832, 0.439 ) }
    dend_44 { pt3dadd( 426.989, 457.653, 39.1348, 0.5018 ) }
    dend_44 { pt3dadd( 428.03, 458.125, 39.1558, 0.5896 ) }
    dend_44 { pt3dadd( 429.016, 458.705, 39.1496, 0.7016 ) }
    dend_44 { pt3dadd( 429.994, 459.298, 39.1314, 0.709 ) }
    dend_44 { pt3dadd( 431.019, 459.806, 39.121, 0.801 ) }
    dend_44 { pt3dadd( 432.07, 460.255, 39.1373, 0.7638 ) }
    dend_44 { pt3dadd( 433.068, 460.815, 39.1969, 0.6256 ) }
    dend_44 { pt3dadd( 433.97, 461.516, 39.3098, 0.65 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( 434.774, 462.326, 39.4789, 0.6422 ) }
    dend_44 { pt3dadd( 435.44, 463.251, 39.7051, 0.73 ) }
    dend_44 { pt3dadd( 436.013, 464.235, 39.9792, 0.6056 ) }
    dend_44 { pt3dadd( 436.912, 464.926, 40.2861, 0.4534 ) }
    dend_44 { pt3dadd( 438.027, 465.132, 40.5947, 0.4006 ) }
    dend_44 { pt3dadd( 439.164, 465.165, 40.8909, 0.337 ) }
    dend_44 { pt3dadd( 440.297, 465.276, 41.1734, 0.3046 ) }
    dend_44 { pt3dadd( 441.419, 465.466, 41.442, 0.2824 ) }
    dend_44 { pt3dadd( 442.549, 465.613, 41.6959, 0.2886 ) }
    dend_44 { pt3dadd( 443.615, 466.016, 41.9364, 0.3004 ) }
    dend_44 { pt3dadd( 444.376, 466.862, 42.1764, 0.3246 ) }
    dend_44 { pt3dadd( 444.553, 467.986, 42.4155, 0.3576 ) }
    dend_44 { pt3dadd( 444.588, 469.126, 42.6423, 0.4794 ) }
    dend_44 { pt3dadd( 444.87, 470.232, 42.8509, 0.4064 ) }
    dend_44 { pt3dadd( 445.519, 471.17, 43.0394, 0.3508 ) }
    dend_44 { pt3dadd( 446.536, 471.688, 43.2079, 0.3164 ) }
    dend_44 { pt3dadd( 447.59, 472.129, 43.3656, 0.3774 ) }
    dend_44 { pt3dadd( 448.581, 472.697, 43.5221, 0.3418 ) }
    dend_44 { pt3dadd( 449.075, 473.727, 43.6705, 0.3134 ) }
    dend_44 { pt3dadd( 449.13, 474.869, 43.8024, 0.305 ) }
    dend_44 { pt3dadd( 449.109, 476.012, 43.9118, 0.3052 ) }
    dend_44 { pt3dadd( 448.682, 477.071, 44.0843, 0.4576 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 22/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 348.798, 454.504, 34.6702, 1.2108 ) }
    dend_40 { pt3dadd( 348.923, 456.243, 35.4239, 0.9566 ) }
    dend_40 { pt3dadd( 349.021, 457.383, 35.5519, 0.7426 ) }
    dend_40 { pt3dadd( 349.23, 458.506, 35.6437, 0.7224 ) }
    dend_40 { pt3dadd( 349.518, 459.612, 35.7059, 0.7648 ) }
    dend_40 { pt3dadd( 349.771, 460.728, 35.7476, 0.7636 ) }
    dend_40 { pt3dadd( 350.006, 461.848, 35.7748, 0.7236 ) }
    dend_40 { pt3dadd( 350.196, 462.976, 35.784, 0.5952 ) }
    dend_40 { pt3dadd( 350.309, 464.114, 35.7781, 0.6096 ) }
    dend_40 { pt3dadd( 350.495, 465.243, 35.7504, 0.7162 ) }
    dend_40 { pt3dadd( 350.834, 466.334, 35.6891, 0.809 ) }
    dend_40 { pt3dadd( 351.221, 467.41, 35.5796, 0.8496 ) }
    dend_40 { pt3dadd( 351.543, 468.506, 35.4172, 0.876 ) }
    dend_40 { pt3dadd( 351.85, 469.605, 35.2106, 0.9116 ) }
    dend_40 { pt3dadd( 352.186, 470.694, 34.9742, 1.031 ) }
    dend_40 { pt3dadd( 352.487, 471.793, 34.7161, 0.9944 ) }
    dend_40 { pt3dadd( 352.827, 472.879, 34.4378, 0.8608 ) }
    dend_40 { pt3dadd( 353.113, 473.98, 34.1435, 0.6536 ) }
    dend_40 { pt3dadd( 352.863, 475.085, 33.8444, 0.724 ) }
    dend_40 { pt3dadd( 352.242, 476.038, 33.5667, 0.667 ) }
    dend_40 { pt3dadd( 351.855, 477.109, 33.322, 0.645 ) }
    dend_40 { pt3dadd( 351.993, 478.239, 33.1148, 0.6262 ) }
    dend_40 { pt3dadd( 352.588, 479.212, 32.9476, 0.7182 ) }
    dend_40 { pt3dadd( 353.259, 480.137, 32.8143, 0.7298 ) }
    dend_40 { pt3dadd( 353.775, 481.157, 32.7023, 0.851 ) }
    dend_40 { pt3dadd( 354.163, 482.232, 32.5895, 0.8076 ) }
    dend_40 { pt3dadd( 354.368, 483.356, 32.475, 0.9048 ) }
    dend_40 { pt3dadd( 354.428, 484.498, 32.3683, 0.8848 ) }
    dend_40 { pt3dadd( 354.553, 485.635, 32.2781, 0.9222 ) }
    dend_40 { pt3dadd( 355.083, 486.647, 32.2132, 0.8474 ) }
    dend_40 { pt3dadd( 355.855, 487.49, 32.1793, 0.7288 ) }
    dend_40 { pt3dadd( 356.721, 488.239, 32.1779, 0.861 ) }
    dend_40 { pt3dadd( 357.594, 488.978, 32.2025, 0.9894 ) }
    dend_40 { pt3dadd( 358.218, 489.935, 32.2493, 0.8994 ) }
    dend_40 { pt3dadd( 358.097, 491.071, 32.3201, 0.7266 ) }
    dend_40 { pt3dadd( 357.518, 492.056, 32.3935, 0.6474 ) }
    dend_40 { pt3dadd( 357.024, 493.088, 32.4503, 0.7052 ) }
    dend_40 { pt3dadd( 356.722, 494.192, 32.4761, 0.7346 ) }
    dend_40 { pt3dadd( 356.71, 495.335, 32.4593, 0.7104 ) }
    dend_40 { pt3dadd( 356.766, 496.478, 32.3954, 0.5914 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 62/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 348.798, 454.504, 34.6702, 1.2108 ) }
    dend_37 { pt3dadd( 349.506, 455.548, 34.2521, 1.1044 ) }
    dend_37 { pt3dadd( 350.264, 456.4, 34.0679, 0.951 ) }
    dend_37 { pt3dadd( 351.208, 457.044, 33.9144, 0.9056 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 66/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 331.321, 452.225, 27.7371, 0.6606 ) }
    dend_34 { pt3dadd( 330.608, 453.027, 27.4659, 0.5306 ) }
    dend_34 { pt3dadd( 329.86, 453.891, 27.4137, 0.5014 ) }
    dend_34 { pt3dadd( 329.233, 454.848, 27.431, 0.4288 ) }
    dend_34 { pt3dadd( 328.807, 455.907, 27.4598, 0.479 ) }
    dend_34 { pt3dadd( 328.41, 456.98, 27.4823, 0.5168 ) }
    dend_34 { pt3dadd( 327.878, 457.992, 27.4954, 0.5098 ) }
    dend_34 { pt3dadd( 327.228, 458.932, 27.4885, 0.6226 ) }
    dend_34 { pt3dadd( 326.515, 459.826, 27.4492, 0.6276 ) }
    dend_34 { pt3dadd( 325.752, 460.677, 27.3815, 0.8138 ) }
    dend_34 { pt3dadd( 324.959, 461.502, 27.2962, 0.8704 ) }
    dend_34 { pt3dadd( 324.14, 462.3, 27.1997, 0.94 ) }
    dend_34 { pt3dadd( 323.355, 463.131, 27.1012, 0.9104 ) }
    dend_34 { pt3dadd( 322.626, 464.012, 27.0127, 0.7618 ) }
    dend_34 { pt3dadd( 321.782, 464.783, 26.9446, 0.6608 ) }
    dend_34 { pt3dadd( 320.829, 465.414, 26.8999, 0.674 ) }
    dend_34 { pt3dadd( 319.84, 465.988, 26.8725, 0.661 ) }
    dend_34 { pt3dadd( 318.866, 466.587, 26.8558, 0.6656 ) }
    dend_34 { pt3dadd( 317.973, 467.3, 26.8532, 0.7356 ) }
    dend_34 { pt3dadd( 317.152, 468.097, 26.8663, 0.7964 ) }
    dend_34 { pt3dadd( 316.373, 468.936, 26.8923, 0.8264 ) }
    dend_34 { pt3dadd( 315.498, 469.67, 26.9356, 0.8274 ) }
    dend_34 { pt3dadd( 314.558, 470.321, 27.0001, 0.8528 ) }
    dend_34 { pt3dadd( 313.708, 471.086, 27.0842, 0.7696 ) }
    dend_34 { pt3dadd( 312.914, 471.908, 27.18, 0.5996 ) }
    dend_34 { pt3dadd( 311.991, 472.581, 27.2686, 0.5374 ) }
    dend_34 { pt3dadd( 311.107, 473.307, 27.3334, 0.7258 ) }
    dend_34 { pt3dadd( 310.294, 474.111, 27.3636, 0.7738 ) }
    dend_34 { pt3dadd( 309.489, 474.924, 27.3463, 0.8552 ) }
    dend_34 { pt3dadd( 308.835, 475.862, 27.2667, 0.966 ) }
    dend_34 { pt3dadd( 308.44, 476.931, 27.135, 0.933 ) }
    dend_34 { pt3dadd( 307.992, 477.983, 26.9793, 0.6874 ) }
    dend_34 { pt3dadd( 307.362, 478.935, 26.8173, 0.6294 ) }
    dend_34 { pt3dadd( 306.582, 479.767, 26.6534, 0.5672 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_34 { pt3dadd( 305.704, 480.497, 26.4845, 0.5236 ) }
    dend_34 { pt3dadd( 304.969, 481.37, 26.3098, 0.5432 ) }
    dend_34 { pt3dadd( 304.629, 482.458, 26.131, 0.7772 ) }
    dend_34 { pt3dadd( 304.699, 483.595, 25.952, 0.9444 ) }
    dend_34 { pt3dadd( 304.742, 484.737, 25.7743, 0.7678 ) }
    dend_34 { pt3dadd( 304.446, 485.837, 25.5892, 0.7404 ) }
    dend_34 { pt3dadd( 303.874, 486.825, 25.4057, 0.7726 ) }
    dend_34 { pt3dadd( 303.325, 487.826, 25.2205, 0.681 ) }
    dend_34 { pt3dadd( 302.86, 488.868, 25.0205, 0.5752 ) }
    dend_34 { pt3dadd( 302.604, 489.979, 24.796, 0.5062 ) }
    dend_34 { pt3dadd( 302.459, 491.109, 24.5459, 0.443 ) }
    dend_34 { pt3dadd( 302.244, 492.227, 24.2699, 0.4746 ) }
    dend_34 { pt3dadd( 301.966, 493.329, 23.9667, 0.4952 ) }
    dend_34 { pt3dadd( 301.755, 494.446, 23.6429, 0.5004 ) }
    dend_34 { pt3dadd( 301.613, 495.573, 23.3088, 0.4402 ) }
    dend_34 { pt3dadd( 301.457, 496.697, 22.9671, 0.44 ) }
    dend_34 { pt3dadd( 301.092, 497.772, 22.6028, 0.5738 ) }
    dend_34 { pt3dadd( 300.532, 498.754, 22.1953, 0.6304 ) }
    dend_34 { pt3dadd( 300.032, 499.768, 21.7617, 0.5422 ) }
    dend_34 { pt3dadd( 299.94, 500.895, 21.3472, 0.3848 ) }
    dend_34 { pt3dadd( 299.937, 502.028, 20.9635, 0.3008 ) }
    dend_34 { pt3dadd( 299.941, 503.162, 20.5924, 0.2762 ) }
    dend_34 { pt3dadd( 300.07, 504.289, 20.2314, 0.2768 ) }
    dend_34 { pt3dadd( 300.211, 505.416, 19.8763, 0.2796 ) }
    dend_34 { pt3dadd( 300.098, 506.544, 19.5077, 0.2796 ) }
    dend_34 { pt3dadd( 299.937, 507.664, 19.1101, 0.3044 ) }
    dend_34 { pt3dadd( 299.937, 508.729, 18.086, 0.2288 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 331.321, 452.225, 27.7371, 0.6606 ) }
    dend_33 { pt3dadd( 330.86, 451.649, 26.7439, 0.4844 ) }
    dend_33 { pt3dadd( 329.979, 451.012, 25.9323, 0.453 ) }
    dend_33 { pt3dadd( 328.902, 450.681, 25.5651, 0.4622 ) }
    dend_33 { pt3dadd( 327.784, 450.499, 25.201, 0.6028 ) }
    dend_33 { pt3dadd( 326.71, 450.147, 24.7893, 0.6988 ) }
    dend_33 { pt3dadd( 325.743, 449.573, 24.3344, 0.7138 ) }
    dend_33 { pt3dadd( 324.732, 449.078, 23.8328, 0.5922 ) }
    dend_33 { pt3dadd( 323.631, 448.91, 23.2676, 0.584 ) }
    dend_33 { pt3dadd( 322.533, 448.731, 22.6239, 0.6726 ) }
    dend_33 { pt3dadd( 321.477, 448.407, 21.8983, 0.7036 ) }
    dend_33 { pt3dadd( 320.381, 448.299, 21.1507, 0.8076 ) }
    dend_33 { pt3dadd( 319.277, 448.327, 20.4219, 0.71 ) }
    dend_33 { pt3dadd( 318.236, 448.695, 19.7266, 0.8514 ) }
    dend_33 { pt3dadd( 317.296, 449.285, 19.0603, 0.7814 ) }
    dend_33 { pt3dadd( 316.456, 450.012, 18.3965, 0.6292 ) }
    dend_33 { pt3dadd( 315.381, 450.206, 17.6514, 0.5464 ) }
    dend_33 { pt3dadd( 314.301, 449.953, 16.9809, 0.7492 ) }
    dend_33 { pt3dadd( 313.366, 449.341, 16.4099, 0.823 ) }
    dend_33 { pt3dadd( 312.702, 448.43, 15.9496, 0.8248 ) }
    dend_33 { pt3dadd( 312.31, 447.367, 15.5691, 0.8122 ) }
    dend_33 { pt3dadd( 311.635, 446.452, 15.2779, 0.6354 ) }
    dend_33 { pt3dadd( 310.571, 446.04, 15.0657, 0.6106 ) }
    dend_33 { pt3dadd( 309.554, 445.539, 14.6947, 0.6864 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 51/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 340.691, 462.888, 31.7573, 0.5818 ) }
    dend_31 { pt3dadd( 341.076, 464.056, 31.5717, 0.6036 ) }
    dend_31 { pt3dadd( 341.419, 465.146, 31.5386, 0.5342 ) }
    dend_31 { pt3dadd( 341.723, 466.249, 31.5938, 0.5542 ) }
    dend_31 { pt3dadd( 341.932, 467.37, 31.7358, 0.5636 ) }
    dend_31 { pt3dadd( 341.966, 468.507, 31.9486, 0.5408 ) }
    dend_31 { pt3dadd( 341.717, 469.609, 32.1975, 0.4722 ) }
    dend_31 { pt3dadd( 341.266, 470.653, 32.4355, 0.4732 ) }
    dend_31 { pt3dadd( 340.945, 471.742, 32.6416, 0.5086 ) }
    dend_31 { pt3dadd( 340.959, 472.871, 32.8149, 0.5102 ) }
    dend_31 { pt3dadd( 341.183, 473.99, 32.9585, 0.596 ) }
    dend_31 { pt3dadd( 341.487, 475.091, 33.0795, 0.6202 ) }
    dend_31 { pt3dadd( 341.876, 476.166, 33.1853, 0.7748 ) }
    dend_31 { pt3dadd( 342.305, 477.225, 33.2794, 0.7862 ) }
    dend_31 { pt3dadd( 342.654, 478.313, 33.3553, 0.6504 ) }
    dend_31 { pt3dadd( 342.933, 479.422, 33.4057, 0.5478 ) }
    dend_31 { pt3dadd( 343.295, 480.505, 33.4331, 0.6436 ) }
    dend_31 { pt3dadd( 343.778, 481.54, 33.451, 0.807 ) }
    dend_31 { pt3dadd( 344.377, 482.513, 33.479, 0.867 ) }
    dend_31 { pt3dadd( 345.184, 483.312, 33.5289, 0.7316 ) }
    dend_31 { pt3dadd( 346.147, 483.922, 33.5961, 0.5766 ) }
    dend_31 { pt3dadd( 347.154, 484.463, 33.6739, 0.4456 ) }
    dend_31 { pt3dadd( 348.174, 484.978, 33.7658, 0.4232 ) }
    dend_31 { pt3dadd( 349.232, 485.411, 33.873, 0.3966 ) }
    dend_31 { pt3dadd( 350.286, 485.853, 33.9895, 0.3874 ) }
    dend_31 { pt3dadd( 351.258, 486.446, 34.1194, 0.4638 ) }
    dend_31 { pt3dadd( 352.28, 486.951, 34.2602, 0.4384 ) }
    dend_31 { pt3dadd( 353.361, 487.316, 34.3944, 0.3868 ) }
    dend_31 { pt3dadd( 354.473, 487.578, 34.5008, 0.3898 ) }
    dend_31 { pt3dadd( 355.594, 487.802, 34.5632, 0.3768 ) }
    dend_31 { pt3dadd( 356.717, 488.017, 34.5719, 0.372 ) }
    dend_31 { pt3dadd( 357.841, 488.233, 34.522, 0.3926 ) }
    dend_31 { pt3dadd( 358.963, 488.449, 34.4156, 0.5156 ) }
    dend_31 { pt3dadd( 360.084, 488.671, 34.2569, 0.5614 ) }
    dend_31 { pt3dadd( 361.201, 488.903, 34.0469, 0.5222 ) }
    dend_31 { pt3dadd( 362.301, 489.197, 33.7918, 0.5634 ) }
    dend_31 { pt3dadd( 363.307, 489.718, 33.5132, 0.5702 ) }
    dend_31 { pt3dadd( 364.377, 490.091, 33.2419, 0.5314 ) }
    dend_31 { pt3dadd( 365.404, 490.577, 33.0103, 0.563 ) }
    dend_31 { pt3dadd( 366.389, 491.155, 32.8364, 0.6748 ) }
    dend_31 { pt3dadd( 367.366, 491.747, 32.7205, 0.7552 ) }
    dend_31 { pt3dadd( 368.357, 492.318, 32.6514, 0.7724 ) }
    dend_31 { pt3dadd( 369.371, 492.845, 32.6127, 0.7174 ) }
    dend_31 { pt3dadd( 370.389, 493.367, 32.587, 0.7232 ) }
    dend_31 { pt3dadd( 371.38, 493.939, 32.5606, 0.7286 ) }
    dend_31 { pt3dadd( 372.374, 494.504, 32.5265, 0.7044 ) }
    dend_31 { pt3dadd( 373.418, 494.972, 32.4783, 0.5978 ) }
    dend_31 { pt3dadd( 374.459, 495.445, 32.4215, 0.4698 ) }
    dend_31 { pt3dadd( 375.463, 495.99, 32.3702, 0.4116 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_31 { pt3dadd( 376.442, 496.582, 32.3411, 0.4996 ) }
    dend_31 { pt3dadd( 377.413, 497.188, 32.349, 0.4808 ) }
    dend_31 { pt3dadd( 378.433, 497.701, 32.3943, 0.514 ) }
    dend_31 { pt3dadd( 379.47, 498.183, 32.4666, 0.416 ) }
    dend_31 { pt3dadd( 380.467, 498.743, 32.5494, 0.3372 ) }
    dend_31 { pt3dadd( 381.506, 499.219, 32.6284, 0.2832 ) }
    dend_31 { pt3dadd( 382.558, 499.665, 32.6928, 0.2746 ) }
    dend_31 { pt3dadd( 383.592, 500.152, 32.7387, 0.2746 ) }
    dend_31 { pt3dadd( 384.636, 500.622, 32.7678, 0.2746 ) }
    dend_31 { pt3dadd( 385.723, 500.975, 32.7852, 0.2746 ) }
    dend_31 { pt3dadd( 386.826, 501.278, 32.7958, 0.2746 ) }
    dend_31 { pt3dadd( 387.923, 501.598, 32.804, 0.2746 ) }
    dend_31 { pt3dadd( 389.005, 501.974, 32.8124, 0.2746 ) }
    dend_31 { pt3dadd( 390.021, 502.495, 32.8227, 0.2746 ) }
    dend_31 { pt3dadd( 390.954, 503.154, 32.8359, 0.2746 ) }
    dend_31 { pt3dadd( 391.926, 503.756, 32.853, 0.2746 ) }
    dend_31 { pt3dadd( 392.966, 504.227, 32.8745, 0.2746 ) }
    dend_31 { pt3dadd( 394.027, 504.656, 32.9022, 0.2746 ) }
    dend_31 { pt3dadd( 395.087, 505.085, 32.9375, 0.2746 ) }
    dend_31 { pt3dadd( 396.14, 505.534, 32.9809, 0.2746 ) }
    dend_31 { pt3dadd( 397.169, 506.031, 33.033, 0.2746 ) }
    dend_31 { pt3dadd( 398.175, 506.575, 33.0952, 0.2746 ) }
    dend_31 { pt3dadd( 399.127, 507.207, 33.1724, 0.2746 ) }
    dend_31 { pt3dadd( 400.027, 507.912, 33.2601, 0.2748 ) }
    dend_31 { pt3dadd( 400.885, 508.667, 33.3438, 0.2748 ) }
    dend_31 { pt3dadd( 401.783, 509.375, 33.4107, 0.275 ) }
    dend_31 { pt3dadd( 402.752, 509.982, 33.451, 0.2754 ) }
    dend_31 { pt3dadd( 403.742, 510.556, 33.4569, 0.276 ) }
    dend_31 { pt3dadd( 404.745, 511.104, 33.4242, 0.2776 ) }
    dend_31 { pt3dadd( 405.79, 511.565, 33.3645, 0.2798 ) }
    dend_31 { pt3dadd( 406.873, 511.933, 33.2987, 0.2846 ) }
    dend_31 { pt3dadd( 407.964, 512.276, 33.2458, 0.293 ) }
    dend_31 { pt3dadd( 409.053, 512.626, 33.2203, 0.309 ) }
    dend_31 { pt3dadd( 410.117, 513.045, 33.2321, 0.3382 ) }
    dend_31 { pt3dadd( 411.114, 513.604, 33.2853, 0.3948 ) }
    dend_31 { pt3dadd( 412.047, 514.263, 33.3785, 0.4874 ) }
    dend_31 { pt3dadd( 412.898, 515.024, 33.5059, 0.7202 ) }
    dend_31 { pt3dadd( 413.7, 515.838, 33.6566, 0.8546 ) }
    dend_31 { pt3dadd( 414.367, 516.762, 33.819, 0.7856 ) }
    dend_31 { pt3dadd( 414.807, 517.812, 33.9833, 0.7248 ) }
    dend_31 { pt3dadd( 415.323, 518.83, 34.1429, 0.6798 ) }
    dend_31 { pt3dadd( 416.055, 519.702, 34.2933, 0.5626 ) }
    dend_31 { pt3dadd( 416.935, 520.425, 34.4378, 0.5406 ) }
    dend_31 { pt3dadd( 417.887, 521.057, 34.5853, 0.5406 ) }
    dend_31 { pt3dadd( 418.763, 521.788, 34.7514, 0.6966 ) }
    dend_31 { pt3dadd( 419.592, 522.571, 34.9468, 0.8552 ) }
    dend_31 { pt3dadd( 420.534, 523.209, 35.1716, 0.882 ) }
    dend_31 { pt3dadd( 421.558, 523.707, 35.4127, 0.8804 ) }
    dend_31 { pt3dadd( 422.606, 524.154, 35.6516, 0.7484 ) }
    dend_31 { pt3dadd( 423.651, 524.614, 35.8716, 0.698 ) }
    dend_31 { pt3dadd( 424.639, 525.183, 36.0629, 0.6168 ) }
    dend_31 { pt3dadd( 425.45, 525.982, 36.2225, 0.542 ) }
    dend_31 { pt3dadd( 426.037, 526.957, 36.3647, 0.6402 ) }
    dend_31 { pt3dadd( 426.607, 527.947, 36.5126, 0.5614 ) }
    dend_31 { pt3dadd( 427.353, 528.808, 36.6859, 0.5776 ) }
    dend_31 { pt3dadd( 428.255, 529.502, 36.8939, 0.4674 ) }
    dend_31 { pt3dadd( 429.233, 530.086, 37.1308, 0.4404 ) }
    dend_31 { pt3dadd( 430.19, 530.706, 37.3842, 0.4732 ) }
    dend_31 { pt3dadd( 431.012, 531.491, 37.6359, 0.6662 ) }
    dend_31 { pt3dadd( 431.767, 532.344, 37.87, 0.8414 ) }
    dend_31 { pt3dadd( 432.615, 533.107, 38.0752, 0.8648 ) }
    dend_31 { pt3dadd( 433.52, 533.803, 38.2486, 0.7898 ) }
    dend_31 { pt3dadd( 434.385, 534.549, 38.3869, 0.862 ) }
    dend_31 { pt3dadd( 435.188, 535.362, 38.4863, 0.7686 ) }
    dend_31 { pt3dadd( 435.938, 536.225, 38.5753, 0.5578 ) }
    dend_31 { pt3dadd( 436.613, 537.147, 38.6688, 0.4144 ) }
    dend_31 { pt3dadd( 437.488, 537.877, 38.7912, 0.4138 ) }
    dend_31 { pt3dadd( 438.23, 538.74, 38.99, 0.5228 ) }
    dend_31 { pt3dadd( 438.841, 539.698, 39.3193, 0.7484 ) }
    dend_31 { pt3dadd( 439.603, 540.324, 40.6932, 1.144 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 70/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 340.691, 462.888, 31.7573, 0.5818 ) }
    dend_30 { pt3dadd( 340.801, 463.255, 31.0148, 0.52 ) }
    dend_30 { pt3dadd( 341.031, 464.246, 29.8796, 0.5324 ) }
    dend_30 { pt3dadd( 341.159, 465.363, 29.4524, 0.5156 ) }
    dend_30 { pt3dadd( 341.196, 466.501, 29.197, 0.4386 ) }
    dend_30 { pt3dadd( 341.2, 467.641, 28.9503, 0.4464 ) }
    dend_30 { pt3dadd( 341.355, 468.763, 28.7095, 0.5054 ) }
    dend_30 { pt3dadd( 341.755, 469.824, 28.4668, 0.5334 ) }
    dend_30 { pt3dadd( 342.309, 470.818, 28.2159, 0.613 ) }
    dend_30 { pt3dadd( 342.922, 471.776, 27.9451, 0.7276 ) }
    dend_30 { pt3dadd( 343.56, 472.718, 27.6537, 0.7098 ) }
    dend_30 { pt3dadd( 344.209, 473.653, 27.3555, 0.5912 ) }
    dend_30 { pt3dadd( 344.781, 474.634, 27.062, 0.5518 ) }
    dend_30 { pt3dadd( 345.249, 475.671, 26.7813, 0.6336 ) }
    dend_30 { pt3dadd( 345.65, 476.736, 26.5103, 0.6928 ) }
    dend_30 { pt3dadd( 346.014, 477.815, 26.2368, 0.7624 ) }
    dend_30 { pt3dadd( 346.515, 478.828, 25.9454, 0.7442 ) }
    dend_30 { pt3dadd( 347.229, 479.706, 25.6315, 0.71 ) }
    dend_30 { pt3dadd( 348.115, 480.407, 25.2994, 0.6522 ) }
    dend_30 { pt3dadd( 349.157, 480.821, 24.9594, 0.6236 ) }
    dend_30 { pt3dadd( 350.273, 481.018, 24.6279, 0.5556 ) }
    dend_30 { pt3dadd( 351.398, 481.187, 24.3129, 0.4354 ) }
    dend_30 { pt3dadd( 352.367, 481.717, 24.0103, 0.3382 ) }
    dend_30 { pt3dadd( 353.08, 482.592, 23.7419, 0.3068 ) }
    dend_30 { pt3dadd( 353.009, 483.636, 23.4774, 0.3242 ) }
    dend_30 { pt3dadd( 352.39, 484.585, 23.2473, 0.365 ) }
    dend_30 { pt3dadd( 351.681, 485.478, 23.0205, 0.4546 ) }
    dend_30 { pt3dadd( 350.941, 486.345, 22.7785, 0.5492 ) }
    dend_30 { pt3dadd( 350.306, 487.288, 22.5156, 0.4928 ) }
    dend_30 { pt3dadd( 349.986, 488.372, 22.2312, 0.4404 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( 350.05, 489.499, 21.9242, 0.4906 ) }
    dend_30 { pt3dadd( 350.466, 490.549, 21.5961, 0.5674 ) }
    dend_30 { pt3dadd( 351.114, 491.478, 21.2569, 0.6878 ) }
    dend_30 { pt3dadd( 351.802, 492.381, 20.9113, 0.5836 ) }
    dend_30 { pt3dadd( 352.342, 493.378, 20.5518, 0.5096 ) }
    dend_30 { pt3dadd( 352.731, 494.441, 20.1785, 0.6138 ) }
    dend_30 { pt3dadd( 353.316, 495.408, 19.7987, 0.5852 ) }
    dend_30 { pt3dadd( 354.219, 496.083, 19.4354, 0.4748 ) }
    dend_30 { pt3dadd( 355.201, 496.655, 19.1169, 0.4056 ) }
    dend_30 { pt3dadd( 356.108, 497.344, 18.8518, 0.47 ) }
    dend_30 { pt3dadd( 356.763, 498.273, 18.6428, 0.5696 ) }
    dend_30 { pt3dadd( 357.056, 499.371, 18.4738, 0.4968 ) }
    dend_30 { pt3dadd( 356.984, 500.507, 18.309, 0.5104 ) }
    dend_30 { pt3dadd( 357.343, 501.587, 18.1363, 0.3764 ) }
    dend_30 { pt3dadd( 357.326, 502.727, 18.0068, 0.2814 ) }
    dend_30 { pt3dadd( 356.719, 503.692, 18.086, 0.2288 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 16/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 317.796, 457.444, 35.7437, 0.4554 ) }
    dend_26 { pt3dadd( 316.633, 456.781, 35.6546, 0.4408 ) }
    dend_26 { pt3dadd( 315.543, 456.45, 35.6328, 0.5018 ) }
    dend_26 { pt3dadd( 314.418, 456.241, 35.6328, 0.561 ) }
    dend_26 { pt3dadd( 313.28, 456.296, 35.6457, 0.6158 ) }
    dend_26 { pt3dadd( 312.143, 456.414, 35.6726, 0.721 ) }
    dend_26 { pt3dadd( 311.0, 456.471, 35.7123, 0.6678 ) }
    dend_26 { pt3dadd( 309.857, 456.441, 35.7563, 0.5642 ) }
    dend_26 { pt3dadd( 308.718, 456.341, 35.793, 0.5912 ) }
    dend_26 { pt3dadd( 307.585, 456.183, 35.8173, 0.6266 ) }
    dend_26 { pt3dadd( 306.466, 455.946, 35.8232, 0.53 ) }
    dend_26 { pt3dadd( 305.344, 455.725, 35.8039, 0.485 ) }
    dend_26 { pt3dadd( 304.206, 455.631, 35.758, 0.441 ) }
    dend_26 { pt3dadd( 303.062, 455.613, 35.7006, 0.4938 ) }
    dend_26 { pt3dadd( 301.918, 455.612, 35.6437, 0.5636 ) }
    dend_26 { pt3dadd( 300.774, 455.612, 35.5897, 0.5284 ) }
    dend_26 { pt3dadd( 299.631, 455.613, 35.5306, 0.4094 ) }
    dend_26 { pt3dadd( 298.487, 455.628, 35.4547, 0.3234 ) }
    dend_26 { pt3dadd( 297.347, 455.712, 35.3464, 0.3002 ) }
    dend_26 { pt3dadd( 296.222, 455.9, 35.1896, 0.3152 ) }
    dend_26 { pt3dadd( 295.102, 456.121, 34.9745, 0.3512 ) }
    dend_26 { pt3dadd( 293.989, 456.354, 34.6968, 0.4098 ) }
    dend_26 { pt3dadd( 292.897, 456.667, 34.3549, 0.5604 ) }
    dend_26 { pt3dadd( 291.85, 457.095, 33.9534, 0.638 ) }
    dend_26 { pt3dadd( 290.79, 457.487, 33.5163, 0.5584 ) }
    dend_26 { pt3dadd( 289.797, 458.022, 33.0775, 0.5078 ) }
    dend_26 { pt3dadd( 289.167, 458.945, 32.6536, 0.663 ) }
    dend_26 { pt3dadd( 288.835, 460.025, 32.2694, 0.6708 ) }
    dend_26 { pt3dadd( 288.274, 461.01, 31.9281, 0.6484 ) }
    dend_26 { pt3dadd( 287.372, 461.694, 31.6498, 0.6606 ) }
    dend_26 { pt3dadd( 286.372, 462.242, 31.4502, 0.636 ) }
    dend_26 { pt3dadd( 285.554, 463.036, 31.3236, 0.6196 ) }
    dend_26 { pt3dadd( 284.948, 464.005, 31.2606, 0.6486 ) }
    dend_26 { pt3dadd( 284.382, 464.999, 31.2556, 0.6426 ) }
    dend_26 { pt3dadd( 283.794, 465.98, 31.3029, 0.5006 ) }
    dend_26 { pt3dadd( 283.196, 466.954, 31.3869, 0.4148 ) }
    dend_26 { pt3dadd( 282.547, 467.896, 31.4737, 0.4578 ) }
    dend_26 { pt3dadd( 281.772, 468.736, 31.5263, 0.485 ) }
    dend_26 { pt3dadd( 280.932, 469.514, 31.5358, 0.618 ) }
    dend_26 { pt3dadd( 280.275, 470.448, 31.5157, 0.672 ) }
    dend_26 { pt3dadd( 279.901, 471.528, 31.4835, 0.6216 ) }
    dend_26 { pt3dadd( 279.694, 472.652, 31.458, 0.5498 ) }
    dend_26 { pt3dadd( 279.414, 473.761, 31.4513, 0.5038 ) }
    dend_26 { pt3dadd( 278.915, 474.79, 31.4639, 0.4446 ) }
    dend_26 { pt3dadd( 278.208, 475.688, 31.486, 0.4456 ) }
    dend_26 { pt3dadd( 277.406, 476.504, 31.5042, 0.581 ) }
    dend_26 { pt3dadd( 276.592, 477.306, 31.5087, 0.6482 ) }
    dend_26 { pt3dadd( 275.805, 478.137, 31.4961, 0.582 ) }
    dend_26 { pt3dadd( 275.06, 479.005, 31.4653, 0.459 ) }
    dend_26 { pt3dadd( 274.329, 479.884, 31.4098, 0.42 ) }
    dend_26 { pt3dadd( 273.564, 480.734, 31.3202, 0.5432 ) }
    dend_26 { pt3dadd( 272.739, 481.525, 31.1903, 0.5246 ) }
    dend_26 { pt3dadd( 271.864, 482.259, 31.0248, 0.6112 ) }
    dend_26 { pt3dadd( 270.959, 482.953, 30.8398, 0.5848 ) }
    dend_26 { pt3dadd( 269.99, 483.557, 30.6519, 0.5706 ) }
    dend_26 { pt3dadd( 268.95, 484.029, 30.4755, 0.5706 ) }
    dend_26 { pt3dadd( 267.91, 484.501, 30.317, 0.4484 ) }
    dend_26 { pt3dadd( 266.904, 485.042, 30.1725, 0.3708 ) }
    dend_26 { pt3dadd( 265.927, 485.636, 30.0412, 0.38 ) }
    dend_26 { pt3dadd( 264.969, 486.257, 29.9298, 0.3474 ) }
    dend_26 { pt3dadd( 264.122, 487.026, 29.8432, 0.3248 ) }
    dend_26 { pt3dadd( 263.46, 487.957, 29.7853, 0.3144 ) }
    dend_26 { pt3dadd( 262.875, 488.94, 29.7592, 0.3718 ) }
    dend_26 { pt3dadd( 262.318, 489.94, 29.7651, 0.3348 ) }
    dend_26 { pt3dadd( 261.652, 490.87, 29.7892, 0.3008 ) }
    dend_26 { pt3dadd( 260.896, 491.728, 29.8063, 0.2752 ) }
    dend_26 { pt3dadd( 260.297, 492.703, 29.7951, 0.2746 ) }
    dend_26 { pt3dadd( 259.9, 493.774, 29.7402, 0.2746 ) }
    dend_26 { pt3dadd( 259.484, 494.84, 29.6296, 0.2746 ) }
    dend_26 { pt3dadd( 259.018, 495.88, 29.458, 0.2746 ) }
    dend_26 { pt3dadd( 258.5, 496.896, 29.2239, 0.2746 ) }
    dend_26 { pt3dadd( 257.938, 497.886, 28.9299, 0.2746 ) }
    dend_26 { pt3dadd( 257.45, 498.912, 28.6068, 0.2746 ) }
    dend_26 { pt3dadd( 257.067, 499.983, 28.296, 0.2746 ) }
    dend_26 { pt3dadd( 256.724, 501.069, 28.0255, 0.2746 ) }
    dend_26 { pt3dadd( 256.408, 502.164, 27.8104, 0.2746 ) }
    dend_26 { pt3dadd( 255.689, 503.051, 27.6575, 0.2744 ) }
    dend_26 { pt3dadd( 254.753, 503.708, 27.5618, 0.2744 ) }
    dend_26 { pt3dadd( 253.613, 503.813, 27.5089, 0.2742 ) }
    dend_26 { pt3dadd( 252.471, 503.839, 27.4828, 0.2736 ) }
    dend_26 { pt3dadd( 251.327, 503.866, 27.4722, 0.2728 ) }
    dend_26 { pt3dadd( 250.182, 503.892, 27.4688, 0.2712 ) }
    dend_26 { pt3dadd( 249.038, 503.892, 27.468, 0.2684 ) }
    dend_26 { pt3dadd( 247.895, 503.892, 27.468, 0.2626 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_26 { pt3dadd( 246.751, 503.892, 27.468, 0.2542 ) }
    dend_26 { pt3dadd( 245.681, 504.296, 27.468, 0.2288 ) }
    dend_26 { pt3dadd( 244.657, 504.807, 27.468, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 3/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 317.796, 457.444, 35.7437, 0.4554 ) }
    dend_25 { pt3dadd( 317.644, 458.286, 36.6559, 0.256 ) }
    dend_25 { pt3dadd( 317.578, 459.37, 37.5208, 0.3738 ) }
    dend_25 { pt3dadd( 317.322, 460.468, 37.9305, 0.5304 ) }
    dend_25 { pt3dadd( 316.979, 461.548, 38.3158, 0.5228 ) }
    dend_25 { pt3dadd( 316.703, 462.646, 38.7178, 0.5948 ) }
    dend_25 { pt3dadd( 316.43, 463.746, 39.1182, 0.592 ) }
    dend_25 { pt3dadd( 316.024, 464.803, 39.5007, 0.457 ) }
    dend_25 { pt3dadd( 315.625, 465.864, 39.8462, 0.3358 ) }
    dend_25 { pt3dadd( 315.269, 466.944, 40.1534, 0.2792 ) }
    dend_25 { pt3dadd( 314.924, 468.03, 40.4208, 0.2748 ) }
    dend_25 { pt3dadd( 314.517, 469.094, 40.6552, 0.275 ) }
    dend_25 { pt3dadd( 314.069, 470.144, 40.8629, 0.2752 ) }
    dend_25 { pt3dadd( 313.64, 471.202, 41.0402, 0.2758 ) }
    dend_25 { pt3dadd( 313.202, 472.257, 41.1838, 0.2772 ) }
    dend_25 { pt3dadd( 312.755, 473.309, 41.2947, 0.2794 ) }
    dend_25 { pt3dadd( 312.325, 474.369, 41.375, 0.2836 ) }
    dend_25 { pt3dadd( 311.899, 475.43, 41.4296, 0.2912 ) }
    dend_25 { pt3dadd( 311.468, 476.49, 41.4677, 0.305 ) }
    dend_25 { pt3dadd( 311.036, 477.549, 41.4988, 0.3328 ) }
    dend_25 { pt3dadd( 310.661, 478.629, 41.5374, 0.374 ) }
    dend_25 { pt3dadd( 310.415, 479.746, 41.6027, 0.5004 ) }
    dend_25 { pt3dadd( 310.583, 480.87, 41.7178, 0.4936 ) }
    dend_25 { pt3dadd( 311.055, 481.907, 41.909, 0.3918 ) }
    dend_25 { pt3dadd( 310.988, 483.031, 42.2097, 0.3044 ) }
    dend_25 { pt3dadd( 310.731, 484.133, 42.6224, 0.2756 ) }
    dend_25 { pt3dadd( 310.534, 485.24, 43.1287, 0.2746 ) }
    dend_25 { pt3dadd( 310.412, 486.353, 43.7007, 0.2746 ) }
    dend_25 { pt3dadd( 310.355, 487.469, 44.3075, 0.2746 ) }
    dend_25 { pt3dadd( 310.376, 488.585, 44.9198, 0.2746 ) }
    dend_25 { pt3dadd( 310.452, 489.701, 45.5146, 0.2746 ) }
    dend_25 { pt3dadd( 310.488, 490.819, 46.0886, 0.2746 ) }
    dend_25 { pt3dadd( 310.428, 491.941, 46.629, 0.2746 ) }
    dend_25 { pt3dadd( 310.211, 493.046, 47.1164, 0.2746 ) }
    dend_25 { pt3dadd( 309.864, 494.122, 47.5426, 0.2746 ) }
    dend_25 { pt3dadd( 309.52, 495.202, 47.908, 0.2746 ) }
    dend_25 { pt3dadd( 309.339, 496.324, 48.2255, 0.2746 ) }
    dend_25 { pt3dadd( 308.948, 497.393, 48.524, 0.2746 ) }
    dend_25 { pt3dadd( 308.235, 498.28, 48.7906, 0.2746 ) }
    dend_25 { pt3dadd( 307.898, 499.37, 49.0207, 0.2746 ) }
    dend_25 { pt3dadd( 307.587, 500.468, 49.2136, 0.2746 ) }
    dend_25 { pt3dadd( 307.127, 501.514, 49.3688, 0.2746 ) }
    dend_25 { pt3dadd( 306.645, 502.549, 49.4872, 0.2746 ) }
    dend_25 { pt3dadd( 306.051, 503.527, 49.5751, 0.2746 ) }
    dend_25 { pt3dadd( 305.331, 504.415, 49.6485, 0.2746 ) }
    dend_25 { pt3dadd( 304.687, 505.361, 49.7193, 0.2746 ) }
    dend_25 { pt3dadd( 304.171, 506.381, 49.7862, 0.2746 ) }
    dend_25 { pt3dadd( 303.629, 507.388, 49.8462, 0.2746 ) }
    dend_25 { pt3dadd( 303.078, 508.39, 49.8971, 0.2746 ) }
    dend_25 { pt3dadd( 302.658, 509.454, 49.9369, 0.2746 ) }
    dend_25 { pt3dadd( 302.315, 510.546, 49.9638, 0.2746 ) }
    dend_25 { pt3dadd( 301.843, 511.588, 49.9794, 0.2746 ) }
    dend_25 { pt3dadd( 301.778, 512.729, 49.9876, 0.2746 ) }
    dend_25 { pt3dadd( 301.674, 513.869, 49.9912, 0.2744 ) }
    dend_25 { pt3dadd( 301.523, 515.004, 49.9926, 0.2744 ) }
    dend_25 { pt3dadd( 301.37, 516.137, 49.9929, 0.2742 ) }
    dend_25 { pt3dadd( 301.311, 517.279, 49.9929, 0.2736 ) }
    dend_25 { pt3dadd( 301.017, 518.385, 49.9929, 0.2728 ) }
    dend_25 { pt3dadd( 300.935, 519.526, 49.9929, 0.2712 ) }
    dend_25 { pt3dadd( 300.925, 520.67, 49.9929, 0.2684 ) }
    dend_25 { pt3dadd( 300.925, 521.814, 49.9929, 0.2626 ) }
    dend_25 { pt3dadd( 300.925, 522.958, 49.9929, 0.2542 ) }
    dend_25 { pt3dadd( 300.809, 524.096, 49.9929, 0.2288 ) }
    dend_25 { pt3dadd( 300.696, 525.234, 49.9929, 0.2288 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 67/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 313.217, 433.939, 40.6188, 0.8148 ) }
    dend_23 { pt3dadd( 311.93, 433.052, 41.8429, 0.4624 ) }
    dend_23 { pt3dadd( 310.963, 432.451, 42.1271, 0.434 ) }
    dend_23 { pt3dadd( 309.907, 432.026, 42.3973, 0.422 ) }
    dend_23 { pt3dadd( 308.908, 431.481, 42.6675, 0.573 ) }
    dend_23 { pt3dadd( 308.025, 430.762, 42.945, 0.4668 ) }
    dend_23 { pt3dadd( 307.048, 430.181, 43.2477, 0.3738 ) }
    dend_23 { pt3dadd( 305.934, 429.985, 43.605, 0.3142 ) }
    dend_23 { pt3dadd( 304.804, 429.97, 44.0314, 0.3394 ) }
    dend_23 { pt3dadd( 303.676, 429.959, 44.5119, 0.4222 ) }
    dend_23 { pt3dadd( 302.552, 429.94, 45.0262, 0.4154 ) }
    dend_23 { pt3dadd( 301.43, 429.885, 45.5596, 0.501 ) }
    dend_23 { pt3dadd( 300.323, 429.708, 46.1129, 0.4018 ) }
    dend_23 { pt3dadd( 299.221, 429.503, 46.6749, 0.34 ) }
    dend_23 { pt3dadd( 298.114, 429.326, 47.2326, 0.3028 ) }
    dend_23 { pt3dadd( 297.005, 429.156, 47.7814, 0.3208 ) }
    dend_23 { pt3dadd( 295.885, 429.094, 48.3325, 0.3852 ) }
    dend_23 { pt3dadd( 294.765, 429.066, 48.8916, 0.3584 ) }
    dend_23 { pt3dadd( 293.645, 429.095, 49.4665, 0.3398 ) }
    dend_23 { pt3dadd( 292.53, 429.162, 50.0637, 0.3732 ) }
    dend_23 { pt3dadd( 291.443, 428.905, 50.6691, 0.334 ) }
    dend_23 { pt3dadd( 290.371, 428.592, 51.2753, 0.3 ) }
    dend_23 { pt3dadd( 289.294, 428.302, 51.8862, 0.2746 ) }
    dend_23 { pt3dadd( 288.224, 427.978, 52.4922, 0.2746 ) }
    dend_23 { pt3dadd( 287.159, 427.642, 53.0872, 0.2744 ) }
    dend_23 { pt3dadd( 286.095, 427.295, 53.6642, 0.2744 ) }
    dend_23 { pt3dadd( 285.135, 426.713, 54.2111, 0.274 ) }
    dend_23 { pt3dadd( 284.206, 426.078, 54.7145, 0.2736 ) }
    dend_23 { pt3dadd( 283.274, 425.442, 55.1659, 0.2728 ) }
    dend_23 { pt3dadd( 282.281, 424.899, 55.5764, 0.2712 ) }
    dend_23 { pt3dadd( 281.3, 424.329, 55.9493, 0.2684 ) }
    dend_23 { pt3dadd( 280.361, 423.691, 56.2822, 0.2626 ) }
    dend_23 { pt3dadd( 279.466, 422.988, 56.5729, 0.254 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_23 { pt3dadd( 278.618, 422.228, 56.8254, 0.2288 ) }
    dend_23 { pt3dadd( 277.83, 421.426, 57.3404, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 2/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 313.217, 433.939, 40.6188, 0.8148 ) }
    dend_22 { pt3dadd( 312.603, 432.898, 40.973, 0.8332 ) }
    dend_22 { pt3dadd( 312.089, 431.881, 41.1916, 0.7246 ) }
    dend_22 { pt3dadd( 311.648, 430.827, 41.3767, 0.6066 ) }
    dend_22 { pt3dadd( 311.179, 429.786, 41.5223, 0.6894 ) }
    dend_22 { pt3dadd( 310.717, 428.74, 41.6102, 0.6978 ) }
    dend_22 { pt3dadd( 310.374, 427.65, 41.6402, 0.596 ) }
    dend_22 { pt3dadd( 310.114, 426.536, 41.6178, 0.4318 ) }
    dend_22 { pt3dadd( 309.792, 425.439, 41.5568, 0.3504 ) }
    dend_22 { pt3dadd( 309.366, 424.378, 41.4742, 0.3734 ) }
    dend_22 { pt3dadd( 308.882, 423.343, 41.3944, 0.3464 ) }
    dend_22 { pt3dadd( 308.401, 422.305, 41.3395, 0.318 ) }
    dend_22 { pt3dadd( 307.942, 421.257, 41.33, 0.3048 ) }
    dend_22 { pt3dadd( 307.257, 420.347, 41.3935, 0.3204 ) }
    dend_22 { pt3dadd( 306.331, 419.687, 41.5587, 0.3828 ) }
    dend_22 { pt3dadd( 305.5, 418.91, 41.8172, 0.365 ) }
    dend_22 { pt3dadd( 304.796, 418.018, 42.1232, 0.3556 ) }
    dend_22 { pt3dadd( 304.135, 417.093, 42.42, 0.371 ) }
    dend_22 { pt3dadd( 303.477, 416.162, 42.6597, 0.4712 ) }
    dend_22 { pt3dadd( 302.836, 415.216, 42.8148, 0.539 ) }
    dend_22 { pt3dadd( 302.222, 414.252, 42.8814, 0.605 ) }
    dend_22 { pt3dadd( 301.6, 413.292, 42.873, 0.5458 ) }
    dend_22 { pt3dadd( 300.945, 412.354, 42.8112, 0.4318 ) }
    dend_22 { pt3dadd( 300.198, 411.489, 42.716, 0.401 ) }
    dend_22 { pt3dadd( 299.342, 410.732, 42.5992, 0.3388 ) }
    dend_22 { pt3dadd( 298.389, 410.102, 42.4628, 0.304 ) }
    dend_22 { pt3dadd( 297.368, 409.593, 42.3024, 0.2798 ) }
    dend_22 { pt3dadd( 296.354, 409.067, 42.1137, 0.2814 ) }
    dend_22 { pt3dadd( 295.405, 408.437, 41.8866, 0.2872 ) }
    dend_22 { pt3dadd( 294.501, 407.746, 41.6052, 0.299 ) }
    dend_22 { pt3dadd( 293.612, 407.039, 41.2644, 0.3152 ) }
    dend_22 { pt3dadd( 292.814, 406.234, 40.8923, 0.3748 ) }
    dend_22 { pt3dadd( 292.108, 405.347, 40.5345, 0.3404 ) }
    dend_22 { pt3dadd( 291.268, 404.58, 40.2195, 0.3112 ) }
    dend_22 { pt3dadd( 290.308, 403.968, 39.9683, 0.2944 ) }
    dend_22 { pt3dadd( 289.244, 403.556, 39.7886, 0.31 ) }
    dend_22 { pt3dadd( 288.14, 403.258, 39.6757, 0.3422 ) }
    dend_22 { pt3dadd( 287.038, 402.956, 39.6124, 0.3908 ) }
    dend_22 { pt3dadd( 286.111, 402.288, 39.5814, 0.535 ) }
    dend_22 { pt3dadd( 285.534, 401.303, 39.5682, 0.5408 ) }
    dend_22 { pt3dadd( 284.896, 400.353, 39.564, 0.4734 ) }
    dend_22 { pt3dadd( 284.458, 399.297, 39.5629, 0.4774 ) }
    dend_22 { pt3dadd( 284.334, 398.16, 39.5629, 0.5298 ) }
    dend_22 { pt3dadd( 284.194, 397.025, 39.5629, 0.4184 ) }
    dend_22 { pt3dadd( 283.452, 396.156, 39.5629, 0.3226 ) }
    dend_22 { pt3dadd( 282.338, 395.904, 39.5629, 0.2686 ) }
    dend_22 { pt3dadd( 281.681, 394.968, 39.5629, 0.2626 ) }
    dend_22 { pt3dadd( 281.394, 393.861, 39.5629, 0.2542 ) }
    dend_22 { pt3dadd( 280.76, 392.908, 39.5629, 0.2288 ) }
    dend_22 { pt3dadd( 280.198, 391.913, 39.5629, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 52/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 339.61, 394.108, 38.61, 1.1926 ) }
    dend_18 { pt3dadd( 339.671, 393.042, 38.619, 0.947 ) }
    dend_18 { pt3dadd( 339.639, 391.9, 38.635, 0.8136 ) }
    dend_18 { pt3dadd( 339.464, 390.772, 38.663, 0.6986 ) }
    dend_18 { pt3dadd( 339.21, 389.657, 38.7092, 0.6162 ) }
    dend_18 { pt3dadd( 339.066, 388.529, 38.7699, 0.5492 ) }
    dend_18 { pt3dadd( 339.194, 387.402, 38.8335, 0.6696 ) }
    dend_18 { pt3dadd( 339.484, 386.297, 38.8965, 0.7568 ) }
    dend_18 { pt3dadd( 339.724, 385.18, 38.9631, 0.79 ) }
    dend_18 { pt3dadd( 339.941, 384.058, 39.0328, 0.78 ) }
    dend_18 { pt3dadd( 340.263, 382.962, 39.1068, 0.6476 ) }
    dend_18 { pt3dadd( 340.625, 381.878, 39.1933, 0.6192 ) }
    dend_18 { pt3dadd( 340.817, 380.761, 39.3047, 0.6616 ) }
    dend_18 { pt3dadd( 340.7, 379.635, 39.4436, 0.7298 ) }
    dend_18 { pt3dadd( 340.446, 378.521, 39.601, 0.7948 ) }
    dend_18 { pt3dadd( 340.316, 377.392, 39.769, 0.846 ) }
    dend_18 { pt3dadd( 340.387, 376.257, 39.9462, 0.8322 ) }
    dend_18 { pt3dadd( 340.562, 375.129, 40.1321, 0.7306 ) }
    dend_18 { pt3dadd( 340.698, 373.996, 40.3197, 0.617 ) }
    dend_18 { pt3dadd( 340.762, 372.857, 40.5056, 0.6486 ) }
    dend_18 { pt3dadd( 340.857, 371.721, 40.6963, 0.6988 ) }
    dend_18 { pt3dadd( 341.027, 370.593, 40.8929, 0.7006 ) }
    dend_18 { pt3dadd( 341.209, 369.466, 41.0883, 0.6518 ) }
    dend_18 { pt3dadd( 341.392, 368.339, 41.2692, 0.6618 ) }
    dend_18 { pt3dadd( 341.546, 367.208, 41.4221, 0.76 ) }
    dend_18 { pt3dadd( 341.652, 366.07, 41.536, 0.7758 ) }
    dend_18 { pt3dadd( 341.783, 364.934, 41.6021, 0.6664 ) }
    dend_18 { pt3dadd( 341.92, 363.799, 41.6195, 0.5072 ) }
    dend_18 { pt3dadd( 341.936, 362.658, 41.6027, 0.4142 ) }
    dend_18 { pt3dadd( 341.856, 361.518, 41.5668, 0.437 ) }
    dend_18 { pt3dadd( 341.875, 360.378, 41.5145, 0.5206 ) }
    dend_18 { pt3dadd( 342.03, 359.246, 41.4476, 0.5086 ) }
    dend_18 { pt3dadd( 342.159, 358.111, 41.3731, 0.4402 ) }
    dend_18 { pt3dadd( 342.196, 356.968, 41.302, 0.4504 ) }
    dend_18 { pt3dadd( 342.228, 355.825, 41.2462, 0.493 ) }
    dend_18 { pt3dadd( 342.197, 354.684, 41.214, 0.613 ) }
    dend_18 { pt3dadd( 341.952, 353.574, 41.2026, 0.6766 ) }
    dend_18 { pt3dadd( 341.553, 352.503, 41.2012, 0.5722 ) }
    dend_18 { pt3dadd( 341.149, 351.433, 41.2017, 0.437 ) }
    dend_18 { pt3dadd( 340.859, 350.329, 41.1998, 0.4052 ) }
    dend_18 { pt3dadd( 340.723, 349.196, 41.1947, 0.428 ) }
    dend_18 { pt3dadd( 340.649, 348.054, 41.1858, 0.3942 ) }
    dend_18 { pt3dadd( 340.525, 346.917, 41.1687, 0.3342 ) }
    dend_18 { pt3dadd( 340.345, 345.788, 41.1387, 0.3054 ) }
    dend_18 { pt3dadd( 340.157, 344.66, 41.0978, 0.3102 ) }
    dend_18 { pt3dadd( 340.006, 343.526, 41.0533, 0.3542 ) }
    dend_18 { pt3dadd( 339.935, 342.385, 41.0152, 0.3568 ) }
    dend_18 { pt3dadd( 339.957, 341.243, 40.9928, 0.327 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_18 { pt3dadd( 340.02, 340.1, 40.9948, 0.3098 ) }
    dend_18 { pt3dadd( 340.064, 338.957, 41.025, 0.3226 ) }
    dend_18 { pt3dadd( 340.046, 337.814, 41.0836, 0.358 ) }
    dend_18 { pt3dadd( 339.902, 336.683, 41.1715, 0.457 ) }
    dend_18 { pt3dadd( 339.602, 335.582, 41.288, 0.4808 ) }
    dend_18 { pt3dadd( 339.191, 334.517, 41.4266, 0.4526 ) }
    dend_18 { pt3dadd( 338.71, 333.482, 41.5764, 0.5068 ) }
    dend_18 { pt3dadd( 338.154, 332.484, 41.7253, 0.5494 ) }
    dend_18 { pt3dadd( 337.523, 331.532, 41.8642, 0.5126 ) }
    dend_18 { pt3dadd( 336.853, 330.607, 41.9899, 0.5192 ) }
    dend_18 { pt3dadd( 336.202, 329.668, 42.1011, 0.5098 ) }
    dend_18 { pt3dadd( 335.627, 328.681, 42.1935, 0.4262 ) }
    dend_18 { pt3dadd( 335.147, 327.644, 42.2584, 0.3344 ) }
    dend_18 { pt3dadd( 334.757, 326.57, 42.2864, 0.2896 ) }
    dend_18 { pt3dadd( 334.429, 325.474, 42.2696, 0.2852 ) }
    dend_18 { pt3dadd( 334.124, 324.372, 42.2013, 0.2944 ) }
    dend_18 { pt3dadd( 333.833, 323.267, 42.0773, 0.3112 ) }
    dend_18 { pt3dadd( 333.597, 322.15, 41.9012, 0.3436 ) }
    dend_18 { pt3dadd( 333.437, 321.021, 41.685, 0.398 ) }
    dend_18 { pt3dadd( 333.272, 319.894, 41.4464, 0.527 ) }
    dend_18 { pt3dadd( 333.02, 318.784, 41.2056, 0.6306 ) }
    dend_18 { pt3dadd( 332.639, 317.712, 40.9794, 0.5922 ) }
    dend_18 { pt3dadd( 332.117, 316.7, 40.7784, 0.5596 ) }
    dend_18 { pt3dadd( 331.524, 315.723, 40.6048, 0.5842 ) }
    dend_18 { pt3dadd( 330.953, 314.734, 40.4538, 0.6864 ) }
    dend_18 { pt3dadd( 330.509, 313.686, 40.3164, 0.6804 ) }
    dend_18 { pt3dadd( 330.271, 312.574, 40.1848, 0.5772 ) }
    dend_18 { pt3dadd( 330.198, 311.435, 40.0546, 0.5732 ) }
    dend_18 { pt3dadd( 330.223, 310.293, 39.9266, 0.5694 ) }
    dend_18 { pt3dadd( 330.306, 309.153, 39.8062, 0.6304 ) }
    dend_18 { pt3dadd( 330.426, 308.016, 39.6998, 0.7136 ) }
    dend_18 { pt3dadd( 330.451, 306.876, 39.611, 0.637 ) }
    dend_18 { pt3dadd( 330.337, 305.74, 39.5416, 0.5466 ) }
    dend_18 { pt3dadd( 330.229, 304.601, 39.4904, 0.5104 ) }
    dend_18 { pt3dadd( 330.24, 303.46, 39.4531, 0.4908 ) }
    dend_18 { pt3dadd( 330.371, 302.325, 39.4299, 0.5292 ) }
    dend_18 { pt3dadd( 330.502, 301.188, 39.4274, 0.622 ) }
    dend_18 { pt3dadd( 330.466, 300.049, 39.4582, 0.6834 ) }
    dend_18 { pt3dadd( 330.253, 298.928, 39.5368, 0.6384 ) }
    dend_18 { pt3dadd( 330.019, 297.81, 39.6617, 0.5622 ) }
    dend_18 { pt3dadd( 329.847, 296.68, 39.816, 0.483 ) }
    dend_18 { pt3dadd( 329.74, 295.544, 39.9778, 0.4948 ) }
    dend_18 { pt3dadd( 329.686, 294.404, 40.1282, 0.5248 ) }
    dend_18 { pt3dadd( 329.607, 293.263, 40.2539, 0.6594 ) }
    dend_18 { pt3dadd( 329.441, 292.133, 40.3502, 0.7776 ) }
    dend_18 { pt3dadd( 329.192, 291.018, 40.4194, 0.974 ) }
    dend_18 { pt3dadd( 328.869, 289.921, 40.4664, 1.1018 ) }
    dend_18 { pt3dadd( 328.484, 288.844, 40.4933, 1.0472 ) }
    dend_18 { pt3dadd( 328.035, 287.793, 40.495, 0.9398 ) }
    dend_18 { pt3dadd( 327.571, 286.747, 40.4659, 0.9088 ) }
    dend_18 { pt3dadd( 327.193, 285.668, 40.4093, 0.8818 ) }
    dend_18 { pt3dadd( 326.873, 284.571, 40.3211, 0.7968 ) }
    dend_18 { pt3dadd( 326.334, 283.577, 40.1822, 0.906 ) }
    dend_18 { pt3dadd( 325.576, 282.729, 39.9955, 1.0214 ) }
    dend_18 { pt3dadd( 324.825, 281.871, 39.7813, 0.9514 ) }
    dend_18 { pt3dadd( 324.244, 280.896, 39.5674, 0.7402 ) }
    dend_18 { pt3dadd( 323.737, 279.874, 39.3812, 0.7294 ) }
    dend_18 { pt3dadd( 323.086, 278.939, 39.2417, 0.712 ) }
    dend_18 { pt3dadd( 322.316, 278.095, 39.1588, 0.705 ) }
    dend_18 { pt3dadd( 321.526, 277.268, 39.1222, 0.7534 ) }
    dend_18 { pt3dadd( 320.76, 276.419, 39.1098, 0.828 ) }
    dend_18 { pt3dadd( 320.053, 275.52, 39.0995, 0.9188 ) }
    dend_18 { pt3dadd( 319.433, 274.56, 39.0827, 0.9126 ) }
    dend_18 { pt3dadd( 318.871, 273.565, 39.0659, 0.9394 ) }
    dend_18 { pt3dadd( 318.281, 272.584, 39.0592, 0.7666 ) }
    dend_18 { pt3dadd( 317.675, 271.613, 39.0734, 0.6978 ) }
    dend_18 { pt3dadd( 317.118, 270.616, 39.1213, 0.6746 ) }
    dend_18 { pt3dadd( 316.605, 269.594, 39.2148, 0.595 ) }
    dend_18 { pt3dadd( 316.159, 268.543, 39.3688, 0.6258 ) }
    dend_18 { pt3dadd( 315.754, 267.476, 39.5898, 0.5234 ) }
    dend_18 { pt3dadd( 314.951, 266.719, 39.8835, 0.4274 ) }
    dend_18 { pt3dadd( 313.855, 266.515, 40.2254, 0.4134 ) }
    dend_18 { pt3dadd( 312.724, 266.467, 40.6216, 0.4302 ) }
    dend_18 { pt3dadd( 311.758, 265.941, 41.1821, 0.3636 ) }
    dend_18 { pt3dadd( 311.517, 264.87, 41.8312, 0.3006 ) }
    dend_18 { pt3dadd( 311.352, 263.765, 42.4306, 0.2762 ) }
    dend_18 { pt3dadd( 311.33, 262.642, 42.9584, 0.2778 ) }
    dend_18 { pt3dadd( 311.33, 261.512, 43.3857, 0.2806 ) }
    dend_18 { pt3dadd( 311.33, 260.374, 43.6979, 0.2856 ) }
    dend_18 { pt3dadd( 311.33, 259.233, 43.8931, 0.2944 ) }
    dend_18 { pt3dadd( 311.33, 258.09, 43.9995, 0.3134 ) }
    dend_18 { pt3dadd( 311.432, 256.95, 44.053, 0.3362 ) }
    dend_18 { pt3dadd( 311.574, 255.816, 44.0756, 0.4406 ) }
    dend_18 { pt3dadd( 311.786, 254.691, 44.0829, 0.3304 ) }
    dend_18 { pt3dadd( 312.247, 253.644, 44.0843, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 85/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 339.61, 394.108, 38.61, 1.1926 ) }
    dend_17 { pt3dadd( 340.149, 392.251, 36.8449, 1.3054 ) }
    dend_17 { pt3dadd( 340.245, 391.122, 36.4879, 1.1026 ) }
    dend_17 { pt3dadd( 340.408, 390.0, 36.1164, 0.8954 ) }
    dend_17 { pt3dadd( 340.754, 388.923, 35.7162, 0.7694 ) }
    dend_17 { pt3dadd( 341.126, 387.854, 35.3111, 0.6516 ) }
    dend_17 { pt3dadd( 341.413, 386.759, 34.9146, 0.5942 ) }
    dend_17 { pt3dadd( 341.619, 385.645, 34.5358, 0.6096 ) }
    dend_17 { pt3dadd( 341.943, 384.558, 34.1636, 0.5242 ) }
    dend_17 { pt3dadd( 342.518, 383.581, 33.8089, 0.4994 ) }
    dend_17 { pt3dadd( 343.25, 382.713, 33.4849, 0.6688 ) }
    dend_17 { pt3dadd( 343.891, 381.772, 33.1962, 0.6328 ) }
    dend_17 { pt3dadd( 344.249, 380.694, 32.9409, 0.7444 ) }
    dend_17 { pt3dadd( 344.466, 379.573, 32.7141, 0.6928 ) }
    dend_17 { pt3dadd( 344.82, 378.49, 32.506, 0.5518 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_17 { pt3dadd( 345.353, 377.481, 32.3019, 0.462 ) }
    dend_17 { pt3dadd( 345.849, 376.455, 32.0841, 0.5634 ) }
    dend_17 { pt3dadd( 346.165, 375.36, 31.8318, 0.5916 ) }
    dend_17 { pt3dadd( 346.581, 374.302, 31.5322, 0.5864 ) }
    dend_17 { pt3dadd( 347.274, 373.406, 31.173, 0.6008 ) }
    dend_17 { pt3dadd( 347.866, 372.441, 30.774, 0.4986 ) }
    dend_17 { pt3dadd( 348.343, 371.416, 30.3545, 0.4912 ) }
    dend_17 { pt3dadd( 348.99, 370.488, 29.9312, 0.478 ) }
    dend_17 { pt3dadd( 349.678, 369.591, 29.5201, 0.4684 ) }
    dend_17 { pt3dadd( 350.388, 368.708, 29.1259, 0.3802 ) }
    dend_17 { pt3dadd( 351.183, 367.901, 28.7328, 0.3364 ) }
    dend_17 { pt3dadd( 352.104, 367.245, 28.3296, 0.3346 ) }
    dend_17 { pt3dadd( 353.062, 366.643, 27.9136, 0.41 ) }
    dend_17 { pt3dadd( 353.936, 365.927, 27.4794, 0.4008 ) }
    dend_17 { pt3dadd( 354.736, 365.134, 26.9768, 0.4504 ) }
    dend_17 { pt3dadd( 355.737, 364.627, 26.4447, 0.4206 ) }
    dend_17 { pt3dadd( 356.803, 364.272, 25.9305, 0.5098 ) }
    dend_17 { pt3dadd( 357.622, 363.498, 25.453, 0.4174 ) }
    dend_17 { pt3dadd( 358.441, 362.718, 25.0294, 0.3672 ) }
    dend_17 { pt3dadd( 359.319, 362.0, 24.6862, 0.3728 ) }
    dend_17 { pt3dadd( 359.668, 360.916, 24.4309, 0.3552 ) }
    dend_17 { pt3dadd( 360.36, 360.017, 24.08, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 325.648, 398.316, 35.2209, 0.9406 ) }
    dend_15 { pt3dadd( 326.031, 397.689, 33.108, 0.3106 ) }
    dend_15 { pt3dadd( 326.487, 396.801, 31.8926, 0.401 ) }
    dend_15 { pt3dadd( 326.698, 395.734, 31.1094, 0.523 ) }
    dend_15 { pt3dadd( 326.666, 394.632, 30.3962, 0.6768 ) }
    dend_15 { pt3dadd( 326.692, 393.523, 29.724, 0.7742 ) }
    dend_15 { pt3dadd( 326.951, 392.447, 29.087, 0.8546 ) }
    dend_15 { pt3dadd( 327.358, 391.406, 28.5046, 0.696 ) }
    dend_15 { pt3dadd( 327.757, 390.357, 27.9584, 0.5362 ) }
    dend_15 { pt3dadd( 328.071, 389.28, 27.4204, 0.5126 ) }
    dend_15 { pt3dadd( 328.317, 388.187, 26.8652, 0.6344 ) }
    dend_15 { pt3dadd( 328.628, 387.112, 26.2807, 0.589 ) }
    dend_15 { pt3dadd( 329.112, 386.109, 25.686, 0.536 ) }
    dend_15 { pt3dadd( 329.638, 385.122, 25.1023, 0.4836 ) }
    dend_15 { pt3dadd( 329.83, 384.036, 24.535, 0.5716 ) }
    dend_15 { pt3dadd( 329.785, 382.916, 23.9994, 0.5874 ) }
    dend_15 { pt3dadd( 330.122, 381.873, 23.4497, 0.6808 ) }
    dend_15 { pt3dadd( 330.728, 380.931, 22.9046, 0.8098 ) }
    dend_15 { pt3dadd( 331.166, 379.904, 22.3738, 0.6854 ) }
    dend_15 { pt3dadd( 331.475, 378.823, 21.8653, 0.553 ) }
    dend_15 { pt3dadd( 331.976, 377.82, 21.3718, 0.589 ) }
    dend_15 { pt3dadd( 332.569, 376.862, 20.8858, 0.6504 ) }
    dend_15 { pt3dadd( 332.849, 375.788, 20.3765, 0.6936 ) }
    dend_15 { pt3dadd( 332.783, 374.678, 19.8125, 0.845 ) }
    dend_15 { pt3dadd( 332.176, 373.85, 18.8416, 0.687 ) }
    dend_15 { pt3dadd( 331.42, 373.133, 17.6898, 0.4162 ) }
    dend_15 { pt3dadd( 330.721, 372.371, 16.5553, 0.251 ) }
    dend_15 { pt3dadd( 330.161, 371.761, 14.6233, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 50/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 325.648, 398.316, 35.2209, 0.9406 ) }
    dend_12 { pt3dadd( 325.259, 396.878, 35.0974, 0.8282 ) }
    dend_12 { pt3dadd( 324.835, 395.816, 35.0244, 0.8124 ) }
    dend_12 { pt3dadd( 324.34, 394.785, 34.9709, 0.8106 ) }
    dend_12 { pt3dadd( 323.917, 393.723, 34.9535, 0.9748 ) }
    dend_12 { pt3dadd( 323.517, 392.651, 34.9642, 1.1174 ) }
    dend_12 { pt3dadd( 323.036, 391.613, 34.9958, 1.157 ) }
    dend_12 { pt3dadd( 322.512, 390.597, 35.0577, 0.967 ) }
    dend_12 { pt3dadd( 322.033, 389.558, 35.1439, 0.9432 ) }
    dend_12 { pt3dadd( 321.685, 388.47, 35.2405, 0.9366 ) }
    dend_12 { pt3dadd( 321.338, 387.38, 35.3424, 0.8736 ) }
    dend_12 { pt3dadd( 321.044, 386.276, 35.4452, 0.7918 ) }
    dend_12 { pt3dadd( 320.812, 385.156, 35.5258, 0.6646 ) }
    dend_12 { pt3dadd( 320.362, 384.106, 35.562, 0.7554 ) }
    dend_12 { pt3dadd( 319.677, 383.192, 35.5438, 0.8672 ) }
    dend_12 { pt3dadd( 318.957, 382.303, 35.4813, 1.0244 ) }
    dend_12 { pt3dadd( 318.34, 381.342, 35.3909, 1.0988 ) }
    dend_12 { pt3dadd( 317.731, 380.374, 35.287, 1.1808 ) }
    dend_12 { pt3dadd( 317.069, 379.443, 35.1812, 1.11 ) }
    dend_12 { pt3dadd( 316.355, 378.55, 35.0851, 1.1686 ) }
    dend_12 { pt3dadd( 315.572, 377.716, 35.0053, 1.1724 ) }
    dend_12 { pt3dadd( 314.845, 376.834, 34.9373, 1.0882 ) }
    dend_12 { pt3dadd( 314.319, 375.819, 34.8726, 0.903 ) }
    dend_12 { pt3dadd( 313.95, 374.738, 34.8006, 0.8948 ) }
    dend_12 { pt3dadd( 313.556, 373.665, 34.7057, 1.0038 ) }
    dend_12 { pt3dadd( 313.156, 372.594, 34.5873, 1.1308 ) }
    dend_12 { pt3dadd( 312.774, 371.516, 34.4582, 1.0996 ) }
    dend_12 { pt3dadd( 312.476, 370.414, 34.3274, 0.9926 ) }
    dend_12 { pt3dadd( 312.154, 369.318, 34.1956, 0.9698 ) }
    dend_12 { pt3dadd( 311.853, 368.215, 34.0878, 0.9488 ) }
    dend_12 { pt3dadd( 311.569, 367.106, 34.0203, 0.848 ) }
    dend_12 { pt3dadd( 311.193, 366.026, 33.9892, 0.7432 ) }
    dend_12 { pt3dadd( 310.882, 364.926, 33.9842, 0.5778 ) }
    dend_12 { pt3dadd( 310.495, 363.849, 34.0015, 0.5884 ) }
    dend_12 { pt3dadd( 309.953, 362.842, 34.05, 0.6226 ) }
    dend_12 { pt3dadd( 309.612, 361.752, 34.141, 0.9034 ) }
    dend_12 { pt3dadd( 309.496, 360.616, 34.2768, 1.0414 ) }
    dend_12 { pt3dadd( 309.292, 359.493, 34.4333, 0.7478 ) }
    dend_12 { pt3dadd( 309.099, 358.366, 34.5828, 0.5562 ) }
    dend_12 { pt3dadd( 308.906, 357.239, 34.7091, 0.4326 ) }
    dend_12 { pt3dadd( 308.679, 356.119, 34.8043, 0.469 ) }
    dend_12 { pt3dadd( 308.435, 355.001, 34.8625, 0.621 ) }
    dend_12 { pt3dadd( 308.139, 353.897, 34.8841, 0.7502 ) }
    dend_12 { pt3dadd( 307.807, 352.802, 34.8748, 0.6216 ) }
    dend_12 { pt3dadd( 307.386, 351.739, 34.8387, 0.5818 ) }
    dend_12 { pt3dadd( 306.721, 350.809, 34.7738, 0.6172 ) }
    dend_12 { pt3dadd( 305.876, 350.04, 34.6758, 0.6294 ) }
    dend_12 { pt3dadd( 305.072, 349.229, 34.5517, 0.473 ) }
    dend_12 { pt3dadd( 304.504, 348.237, 34.4165, 0.3696 ) }
    dend_12 { pt3dadd( 304.028, 347.198, 34.2818, 0.3782 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( 303.552, 346.159, 34.1527, 0.3438 ) }
    dend_12 { pt3dadd( 303.229, 345.064, 34.0318, 0.3176 ) }
    dend_12 { pt3dadd( 303.019, 343.94, 33.9189, 0.3074 ) }
    dend_12 { pt3dadd( 302.706, 342.841, 33.8047, 0.3294 ) }
    dend_12 { pt3dadd( 302.379, 341.746, 33.6602, 0.401 ) }
    dend_12 { pt3dadd( 302.253, 340.612, 33.4636, 0.3904 ) }
    dend_12 { pt3dadd( 302.197, 339.474, 33.224, 0.3932 ) }
    dend_12 { pt3dadd( 302.042, 338.346, 32.9546, 0.4988 ) }
    dend_12 { pt3dadd( 301.803, 337.234, 32.6631, 0.4396 ) }
    dend_12 { pt3dadd( 301.579, 336.119, 32.3674, 0.4358 ) }
    dend_12 { pt3dadd( 301.127, 335.074, 32.0883, 0.3558 ) }
    dend_12 { pt3dadd( 300.452, 334.158, 31.8147, 0.3404 ) }
    dend_12 { pt3dadd( 299.78, 333.239, 31.5389, 0.3452 ) }
    dend_12 { pt3dadd( 299.298, 332.206, 31.2886, 0.4256 ) }
    dend_12 { pt3dadd( 298.816, 331.172, 31.0786, 0.4572 ) }
    // Section: dend_6, id: dend_6, parent: dend_1 (entry count 15/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 334.793, 421.561, 39.9361, 1.111 ) }
    dend_6 { pt3dadd( 334.423, 420.45, 41.2157, 0.4754 ) }
    dend_6 { pt3dadd( 334.046, 419.387, 41.6668, 0.515 ) }
    dend_6 { pt3dadd( 333.233, 418.6, 42.0692, 0.5718 ) }
    dend_6 { pt3dadd( 332.305, 417.948, 42.4203, 0.8596 ) }
    dend_6 { pt3dadd( 331.23, 417.577, 42.747, 0.9626 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 21/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 334.793, 421.561, 39.9361, 1.111 ) }
    dend_2 { pt3dadd( 335.25, 419.73, 39.9442, 0.7606 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 23/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 357.28, 444.928, 46.7664, 0.446 ) }
    dend_47 { pt3dadd( 357.531, 444.287, 46.984, 0.3868 ) }
    dend_47 { pt3dadd( 358.222, 443.393, 47.2368, 0.3824 ) }
    dend_47 { pt3dadd( 359.102, 442.671, 47.4225, 0.3586 ) }
    dend_47 { pt3dadd( 359.809, 441.78, 47.5605, 0.3396 ) }
    dend_47 { pt3dadd( 360.578, 440.935, 47.6515, 0.346 ) }
    dend_47 { pt3dadd( 361.549, 440.338, 47.7033, 0.3884 ) }
    dend_47 { pt3dadd( 362.617, 439.935, 47.7316, 0.5532 ) }
    dend_47 { pt3dadd( 363.698, 439.561, 47.7448, 0.4652 ) }
    dend_47 { pt3dadd( 364.715, 439.04, 47.7501, 0.3618 ) }
    dend_47 { pt3dadd( 365.689, 438.44, 47.7526, 0.284 ) }
    dend_47 { pt3dadd( 366.621, 437.778, 47.7548, 0.278 ) }
    dend_47 { pt3dadd( 367.509, 437.056, 47.7582, 0.2812 ) }
    dend_47 { pt3dadd( 368.425, 436.372, 47.7624, 0.2866 ) }
    dend_47 { pt3dadd( 369.409, 435.79, 47.768, 0.2976 ) }
    dend_47 { pt3dadd( 370.415, 435.244, 47.7758, 0.3128 ) }
    dend_47 { pt3dadd( 371.419, 434.696, 47.7859, 0.3684 ) }
    dend_47 { pt3dadd( 372.451, 434.203, 47.7996, 0.3386 ) }
    dend_47 { pt3dadd( 373.454, 433.654, 47.8178, 0.305 ) }
    dend_47 { pt3dadd( 374.057, 432.699, 47.843, 0.2796 ) }
    dend_47 { pt3dadd( 374.569, 431.676, 47.8752, 0.2812 ) }
    dend_47 { pt3dadd( 375.606, 431.234, 47.9186, 0.2868 ) }
    dend_47 { pt3dadd( 376.747, 431.171, 47.9732, 0.2986 ) }
    dend_47 { pt3dadd( 377.849, 430.874, 48.0438, 0.3138 ) }
    dend_47 { pt3dadd( 378.743, 430.163, 48.1348, 0.3722 ) }
    dend_47 { pt3dadd( 379.489, 429.299, 48.2482, 0.3346 ) }
    dend_47 { pt3dadd( 380.118, 428.345, 48.3857, 0.3006 ) }
    dend_47 { pt3dadd( 380.901, 427.513, 48.5506, 0.275 ) }
    dend_47 { pt3dadd( 381.75, 426.752, 48.7721, 0.2746 ) }
    dend_47 { pt3dadd( 382.117, 425.676, 49.03, 0.2744 ) }
    dend_47 { pt3dadd( 382.162, 424.537, 49.2831, 0.2744 ) }
    dend_47 { pt3dadd( 382.579, 423.476, 49.5104, 0.2742 ) }
    dend_47 { pt3dadd( 382.956, 422.399, 49.6961, 0.2736 ) }
    dend_47 { pt3dadd( 383.212, 421.285, 49.831, 0.2728 ) }
    dend_47 { pt3dadd( 383.526, 420.185, 49.9142, 0.2712 ) }
    dend_47 { pt3dadd( 383.91, 419.108, 49.9593, 0.2684 ) }
    dend_47 { pt3dadd( 384.409, 418.078, 49.9814, 0.2626 ) }
    dend_47 { pt3dadd( 385.162, 417.217, 49.9901, 0.2542 ) }
    dend_47 { pt3dadd( 385.806, 416.271, 49.9926, 0.2288 ) }
    dend_47 { pt3dadd( 386.74, 415.611, 49.9929, 0.2288 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 63/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 357.28, 444.928, 46.7664, 0.446 ) }
    dend_46 { pt3dadd( 358.112, 445.237, 48.9423, 0.318 ) }
    dend_46 { pt3dadd( 359.088, 445.697, 49.8137, 0.3976 ) }
    dend_46 { pt3dadd( 360.123, 446.083, 50.5288, 0.3834 ) }
    dend_46 { pt3dadd( 361.19, 446.4, 51.1694, 0.3876 ) }
    dend_46 { pt3dadd( 362.234, 446.815, 51.7132, 0.4504 ) }
    dend_46 { pt3dadd( 363.225, 447.361, 52.1321, 0.5284 ) }
    dend_46 { pt3dadd( 364.294, 447.749, 52.4098, 0.423 ) }
    dend_46 { pt3dadd( 365.398, 448.038, 52.5829, 0.329 ) }
    dend_46 { pt3dadd( 366.471, 448.431, 52.6828, 0.2766 ) }
    dend_46 { pt3dadd( 367.421, 449.068, 52.7335, 0.2746 ) }
    dend_46 { pt3dadd( 368.181, 449.919, 52.7514, 0.2746 ) }
    dend_46 { pt3dadd( 369.021, 450.697, 52.75, 0.2746 ) }
    dend_46 { pt3dadd( 370.002, 451.284, 52.7383, 0.2746 ) }
    dend_46 { pt3dadd( 370.891, 452.005, 52.7201, 0.2746 ) }
    dend_46 { pt3dadd( 371.442, 453.003, 52.6954, 0.2746 ) }
    dend_46 { pt3dadd( 371.815, 454.085, 52.6652, 0.2746 ) }
    dend_46 { pt3dadd( 372.756, 454.727, 52.628, 0.2746 ) }
    dend_46 { pt3dadd( 373.837, 455.099, 52.582, 0.2746 ) }
    dend_46 { pt3dadd( 374.781, 455.744, 52.5244, 0.2746 ) }
    dend_46 { pt3dadd( 375.415, 456.696, 52.4619, 0.2746 ) }
    dend_46 { pt3dadd( 375.568, 457.83, 52.4012, 0.2746 ) }
    dend_46 { pt3dadd( 376.144, 458.818, 52.3474, 0.2746 ) }
    dend_46 { pt3dadd( 376.716, 459.809, 52.3048, 0.2746 ) }
    dend_46 { pt3dadd( 377.561, 460.579, 52.2749, 0.2746 ) }
    dend_46 { pt3dadd( 378.432, 461.321, 52.2564, 0.2746 ) }
    dend_46 { pt3dadd( 379.08, 462.264, 52.2466, 0.2746 ) }
    dend_46 { pt3dadd( 379.762, 463.182, 52.2421, 0.2744 ) }
    dend_46 { pt3dadd( 380.573, 463.989, 52.2404, 0.2744 ) }
    dend_46 { pt3dadd( 381.19, 464.953, 52.2399, 0.2742 ) }
    dend_46 { pt3dadd( 381.92, 465.833, 52.2399, 0.2736 ) }
    dend_46 { pt3dadd( 382.91, 466.405, 52.2399, 0.2728 ) }
    dend_46 { pt3dadd( 384.039, 466.594, 52.2399, 0.2712 ) }
    dend_46 { pt3dadd( 385.181, 466.647, 52.2399, 0.2684 ) }
    dend_46 { pt3dadd( 386.325, 466.666, 52.2399, 0.2626 ) }
    dend_46 { pt3dadd( 387.467, 466.742, 52.2399, 0.2542 ) }
    dend_46 { pt3dadd( 388.572, 467.039, 52.2399, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_46 { pt3dadd( 389.714, 467.104, 52.2399, 0.2288 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 356.766, 496.478, 32.3954, 0.5914 ) }
    dend_42 { pt3dadd( 357.357, 496.738, 32.5346, 0.341 ) }
    dend_42 { pt3dadd( 358.399, 497.204, 32.4652, 0.3366 ) }
    dend_42 { pt3dadd( 359.423, 497.711, 32.3638, 0.4756 ) }
    dend_42 { pt3dadd( 360.409, 498.289, 32.279, 0.4708 ) }
    dend_42 { pt3dadd( 361.267, 499.037, 32.1891, 0.469 ) }
    dend_42 { pt3dadd( 362.027, 499.89, 32.1087, 0.4274 ) }
    dend_42 { pt3dadd( 362.817, 500.716, 32.0494, 0.4772 ) }
    dend_42 { pt3dadd( 363.65, 501.5, 32.0202, 0.4184 ) }
    dend_42 { pt3dadd( 364.489, 502.279, 32.0253, 0.3418 ) }
    dend_42 { pt3dadd( 365.299, 503.085, 32.0636, 0.2868 ) }
    dend_42 { pt3dadd( 365.963, 504.011, 32.1356, 0.2748 ) }
    dend_42 { pt3dadd( 366.483, 505.028, 32.2353, 0.2748 ) }
    dend_42 { pt3dadd( 366.837, 506.111, 32.3478, 0.275 ) }
    dend_42 { pt3dadd( 367.106, 507.222, 32.4573, 0.2754 ) }
    dend_42 { pt3dadd( 367.343, 508.341, 32.5517, 0.276 ) }
    dend_42 { pt3dadd( 367.571, 509.461, 32.6234, 0.2772 ) }
    dend_42 { pt3dadd( 367.84, 510.573, 32.6698, 0.2794 ) }
    dend_42 { pt3dadd( 368.18, 511.664, 32.6939, 0.2834 ) }
    dend_42 { pt3dadd( 368.49, 512.765, 32.7015, 0.2912 ) }
    dend_42 { pt3dadd( 368.613, 513.898, 32.6992, 0.3052 ) }
    dend_42 { pt3dadd( 368.715, 515.038, 32.6861, 0.332 ) }
    dend_42 { pt3dadd( 369.108, 516.101, 32.6704, 0.379 ) }
    dend_42 { pt3dadd( 369.721, 517.063, 32.6718, 0.4808 ) }
    dend_42 { pt3dadd( 370.294, 518.052, 32.6959, 0.5974 ) }
    dend_42 { pt3dadd( 370.794, 519.081, 32.7373, 0.6144 ) }
    dend_42 { pt3dadd( 371.239, 520.133, 32.7888, 0.5584 ) }
    dend_42 { pt3dadd( 371.696, 521.182, 32.8426, 0.6496 ) }
    dend_42 { pt3dadd( 372.259, 522.177, 32.8927, 0.61 ) }
    dend_42 { pt3dadd( 372.865, 523.147, 32.9216, 0.6236 ) }
    dend_42 { pt3dadd( 373.396, 524.159, 32.9028, 0.697 ) }
    dend_42 { pt3dadd( 373.926, 525.173, 32.8098, 0.7758 ) }
    dend_42 { pt3dadd( 374.484, 526.168, 32.6292, 0.829 ) }
    dend_42 { pt3dadd( 375.025, 527.17, 32.3638, 0.7324 ) }
    dend_42 { pt3dadd( 375.465, 528.216, 32.0309, 0.6214 ) }
    dend_42 { pt3dadd( 375.753, 529.31, 31.6618, 0.6766 ) }
    dend_42 { pt3dadd( 376.033, 530.41, 31.2855, 0.8276 ) }
    dend_42 { pt3dadd( 376.419, 531.475, 30.9173, 0.7032 ) }
    dend_42 { pt3dadd( 376.164, 532.553, 30.6023, 0.5882 ) }
    dend_42 { pt3dadd( 375.811, 533.639, 30.4396, 0.7142 ) }
    dend_42 { pt3dadd( 375.926, 534.771, 30.3887, 0.7714 ) }
    dend_42 { pt3dadd( 376.2, 535.88, 30.3957, 0.754 ) }
    dend_42 { pt3dadd( 376.368, 537.012, 30.4223, 0.5948 ) }
    dend_42 { pt3dadd( 376.494, 538.149, 30.457, 0.6646 ) }
    dend_42 { pt3dadd( 376.668, 539.279, 30.4895, 0.5388 ) }
    dend_42 { pt3dadd( 376.791, 540.416, 30.5026, 0.5274 ) }
    dend_42 { pt3dadd( 377.012, 541.539, 30.4884, 0.4692 ) }
    dend_42 { pt3dadd( 377.393, 542.617, 30.4394, 0.5932 ) }
    dend_42 { pt3dadd( 377.797, 543.687, 30.3464, 0.5728 ) }
    dend_42 { pt3dadd( 378.302, 544.711, 30.2131, 0.695 ) }
    dend_42 { pt3dadd( 378.927, 545.667, 30.0583, 0.755 ) }
    dend_42 { pt3dadd( 379.62, 546.575, 29.8959, 0.822 ) }
    dend_42 { pt3dadd( 380.367, 547.438, 29.7282, 0.6862 ) }
    dend_42 { pt3dadd( 381.246, 548.166, 29.5492, 0.579 ) }
    dend_42 { pt3dadd( 382.157, 548.853, 29.351, 0.5116 ) }
    dend_42 { pt3dadd( 382.809, 549.787, 29.129, 0.4456 ) }
    dend_42 { pt3dadd( 383.271, 550.829, 28.8977, 0.5058 ) }
    dend_42 { pt3dadd( 383.662, 551.9, 28.6742, 0.414 ) }
    dend_42 { pt3dadd( 384.037, 552.978, 28.4701, 0.3606 ) }
    dend_42 { pt3dadd( 384.47, 554.034, 28.2842, 0.338 ) }
    dend_42 { pt3dadd( 384.946, 555.071, 28.1033, 0.3868 ) }
    dend_42 { pt3dadd( 385.521, 556.056, 27.9059, 0.4924 ) }
    dend_42 { pt3dadd( 386.478, 556.669, 27.665, 0.6346 ) }
    dend_42 { pt3dadd( 387.605, 556.797, 27.3826, 0.4926 ) }
    dend_42 { pt3dadd( 388.738, 556.698, 27.0735, 0.3766 ) }
    dend_42 { pt3dadd( 389.835, 556.405, 26.745, 0.315 ) }
    dend_42 { pt3dadd( 390.937, 556.127, 26.4078, 0.3734 ) }
    dend_42 { pt3dadd( 392.073, 556.126, 26.0739, 0.335 ) }
    dend_42 { pt3dadd( 393.209, 556.166, 25.757, 0.3018 ) }
    dend_42 { pt3dadd( 394.342, 556.077, 25.4751, 0.278 ) }
    dend_42 { pt3dadd( 395.476, 555.958, 25.2388, 0.281 ) }
    dend_42 { pt3dadd( 396.618, 555.924, 25.0546, 0.286 ) }
    dend_42 { pt3dadd( 397.744, 556.118, 24.9191, 0.297 ) }
    dend_42 { pt3dadd( 398.776, 556.611, 24.8145, 0.3108 ) }
    dend_42 { pt3dadd( 399.529, 557.471, 24.7573, 0.3672 ) }
    dend_42 { pt3dadd( 400.28, 558.335, 24.7411, 0.322 ) }
    dend_42 { pt3dadd( 400.938, 559.271, 24.7509, 0.2796 ) }
    dend_42 { pt3dadd( 401.702, 560.121, 24.7761, 0.2288 ) }
    dend_42 { pt3dadd( 402.511, 560.93, 24.8682, 0.2288 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 80/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 356.766, 496.478, 32.3954, 0.5914 ) }
    dend_41 { pt3dadd( 356.843, 497.252, 32.3198, 0.5256 ) }
    dend_41 { pt3dadd( 356.881, 498.394, 32.1874, 0.4198 ) }
    dend_41 { pt3dadd( 356.954, 499.532, 32.0228, 0.3634 ) }
    dend_41 { pt3dadd( 357.318, 500.602, 31.8273, 0.3884 ) }
    dend_41 { pt3dadd( 357.875, 501.596, 31.6159, 0.3878 ) }
    dend_41 { pt3dadd( 358.389, 502.613, 31.4048, 0.383 ) }
    dend_41 { pt3dadd( 358.777, 503.685, 31.2133, 0.4574 ) }
    dend_41 { pt3dadd( 359.036, 504.796, 31.0579, 0.4226 ) }
    dend_41 { pt3dadd( 359.111, 505.934, 30.949, 0.3626 ) }
    dend_41 { pt3dadd( 359.013, 507.071, 30.8888, 0.323 ) }
    dend_41 { pt3dadd( 359.11, 508.205, 30.8736, 0.3634 ) }
    dend_41 { pt3dadd( 359.512, 509.268, 30.9008, 0.3454 ) }
    dend_41 { pt3dadd( 359.995, 510.305, 30.954, 0.3138 ) }
    dend_41 { pt3dadd( 360.448, 511.355, 31.0108, 0.293 ) }
    dend_41 { pt3dadd( 360.938, 512.388, 31.0512, 0.2992 ) }
    dend_41 { pt3dadd( 361.531, 513.364, 31.0601, 0.322 ) }
    dend_41 { pt3dadd( 362.159, 514.321, 31.0257, 0.3544 ) }
    dend_41 { pt3dadd( 362.734, 515.309, 30.9389, 0.4622 ) }
    dend_41 { pt3dadd( 363.261, 516.323, 30.8034, 0.43 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_41 { pt3dadd( 363.703, 517.375, 30.6342, 0.3792 ) }
    dend_41 { pt3dadd( 363.733, 518.5, 30.4396, 0.3608 ) }
    dend_41 { pt3dadd( 363.429, 519.594, 30.2369, 0.4184 ) }
    dend_41 { pt3dadd( 363.121, 520.694, 30.0404, 0.5508 ) }
    dend_41 { pt3dadd( 362.901, 521.814, 29.8651, 0.7408 ) }
    dend_41 { pt3dadd( 362.819, 522.951, 29.7102, 0.7766 ) }
    dend_41 { pt3dadd( 362.872, 524.092, 29.5585, 0.7194 ) }
    dend_41 { pt3dadd( 362.875, 525.233, 29.3986, 0.5508 ) }
    dend_41 { pt3dadd( 362.753, 526.368, 29.2272, 0.473 ) }
    dend_41 { pt3dadd( 362.531, 527.487, 29.0315, 0.5572 ) }
    dend_41 { pt3dadd( 362.252, 528.591, 28.7924, 0.6228 ) }
    dend_41 { pt3dadd( 362.035, 529.709, 28.5104, 0.5356 ) }
    dend_41 { pt3dadd( 361.885, 530.835, 28.1988, 0.4656 ) }
    dend_41 { pt3dadd( 361.766, 531.965, 27.8701, 0.5516 ) }
    dend_41 { pt3dadd( 361.67, 533.096, 27.5341, 0.5804 ) }
    dend_41 { pt3dadd( 361.631, 534.232, 27.1993, 0.6006 ) }
    dend_41 { pt3dadd( 361.972, 535.305, 26.8546, 0.4746 ) }
    dend_41 { pt3dadd( 362.22, 536.412, 26.5282, 0.4008 ) }
    dend_41 { pt3dadd( 362.274, 537.547, 26.2355, 0.4246 ) }
    dend_41 { pt3dadd( 362.256, 538.686, 25.9861, 0.4344 ) }
    dend_41 { pt3dadd( 362.412, 539.815, 25.7783, 0.481 ) }
    dend_41 { pt3dadd( 362.839, 540.871, 25.6071, 0.6142 ) }
    dend_41 { pt3dadd( 363.409, 541.86, 25.4586, 0.8664 ) }
    dend_41 { pt3dadd( 363.959, 542.86, 25.3051, 0.9132 ) }
    dend_41 { pt3dadd( 364.434, 543.899, 25.1422, 0.7134 ) }
    dend_41 { pt3dadd( 364.796, 544.981, 24.984, 0.6668 ) }
    dend_41 { pt3dadd( 365.054, 546.094, 24.839, 0.6002 ) }
    dend_41 { pt3dadd( 365.299, 547.211, 24.7114, 0.7492 ) }
    dend_41 { pt3dadd( 365.578, 548.319, 24.5994, 0.7686 ) }
    dend_41 { pt3dadd( 365.906, 549.414, 24.496, 0.6852 ) }
    dend_41 { pt3dadd( 366.31, 550.482, 24.396, 0.7632 ) }
    dend_41 { pt3dadd( 366.762, 551.534, 24.3017, 0.8036 ) }
    dend_41 { pt3dadd( 367.159, 552.606, 24.2127, 0.6468 ) }
    dend_41 { pt3dadd( 367.412, 553.72, 24.1192, 0.5644 ) }
    dend_41 { pt3dadd( 367.342, 554.857, 24.018, 0.5794 ) }
    dend_41 { pt3dadd( 367.01, 555.948, 23.9174, 0.5392 ) }
    dend_41 { pt3dadd( 366.706, 557.051, 23.8145, 0.4272 ) }
    dend_41 { pt3dadd( 366.517, 558.178, 23.6982, 0.3678 ) }
    dend_41 { pt3dadd( 366.446, 559.318, 23.5637, 0.388 ) }
    dend_41 { pt3dadd( 366.472, 560.459, 23.4132, 0.4954 ) }
    dend_41 { pt3dadd( 366.611, 561.593, 23.2506, 0.6186 ) }
    dend_41 { pt3dadd( 366.864, 562.706, 23.0837, 0.5904 ) }
    dend_41 { pt3dadd( 367.242, 563.783, 22.9224, 0.6698 ) }
    dend_41 { pt3dadd( 367.751, 564.805, 22.7775, 0.7424 ) }
    dend_41 { pt3dadd( 368.249, 565.834, 22.6552, 0.6426 ) }
    dend_41 { pt3dadd( 368.649, 566.905, 22.5567, 0.4772 ) }
    dend_41 { pt3dadd( 368.927, 568.013, 22.4773, 0.4334 ) }
    dend_41 { pt3dadd( 369.141, 569.137, 22.4081, 0.3914 ) }
    dend_41 { pt3dadd( 369.336, 570.263, 22.3495, 0.426 ) }
    dend_41 { pt3dadd( 369.026, 571.357, 22.3154, 0.3852 ) }
    dend_41 { pt3dadd( 368.215, 572.156, 22.3154, 0.4156 ) }
    dend_41 { pt3dadd( 367.376, 572.933, 22.3413, 0.3702 ) }
    dend_41 { pt3dadd( 366.573, 573.748, 22.3978, 0.3592 ) }
    dend_41 { pt3dadd( 365.784, 574.575, 22.4937, 0.407 ) }
    dend_41 { pt3dadd( 364.955, 575.362, 22.6347, 0.4004 ) }
    dend_41 { pt3dadd( 364.158, 576.179, 22.8235, 0.4188 ) }
    dend_41 { pt3dadd( 363.594, 577.169, 23.06, 0.5102 ) }
    dend_41 { pt3dadd( 363.147, 578.215, 23.3346, 0.6312 ) }
    dend_41 { pt3dadd( 362.666, 579.246, 23.6242, 0.6544 ) }
    dend_41 { pt3dadd( 362.135, 580.253, 23.9097, 0.5438 ) }
    dend_41 { pt3dadd( 361.242, 580.954, 24.1948, 0.384 ) }
    dend_41 { pt3dadd( 360.426, 581.748, 24.4621, 0.2946 ) }
    dend_41 { pt3dadd( 359.923, 582.771, 24.6898, 0.263 ) }
    dend_41 { pt3dadd( 359.175, 583.633, 24.8629, 0.2542 ) }
    dend_41 { pt3dadd( 358.19, 584.213, 24.9625, 0.229 ) }
    dend_41 { pt3dadd( 357.176, 584.741, 24.8682, 0.2288 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 66/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 351.208, 457.044, 33.9144, 0.9056 ) }
    dend_39 { pt3dadd( 351.605, 457.606, 33.8433, 0.8366 ) }
    dend_39 { pt3dadd( 352.243, 458.555, 33.7719, 0.7188 ) }
    dend_39 { pt3dadd( 352.94, 459.46, 33.7372, 0.6462 ) }
    dend_39 { pt3dadd( 353.737, 460.279, 33.7204, 0.6482 ) }
    dend_39 { pt3dadd( 354.505, 461.126, 33.6974, 0.7324 ) }
    dend_39 { pt3dadd( 355.142, 462.073, 33.6482, 0.8386 ) }
    dend_39 { pt3dadd( 355.667, 463.088, 33.5712, 0.807 ) }
    dend_39 { pt3dadd( 356.138, 464.13, 33.4807, 0.8164 ) }
    dend_39 { pt3dadd( 356.671, 465.14, 33.3931, 0.766 ) }
    dend_39 { pt3dadd( 357.346, 466.06, 33.3245, 0.6292 ) }
    dend_39 { pt3dadd( 358.118, 466.903, 33.2844, 0.6066 ) }
    dend_39 { pt3dadd( 358.921, 467.717, 33.2752, 0.5598 ) }
    dend_39 { pt3dadd( 359.722, 468.534, 33.2917, 0.6262 ) }
    dend_39 { pt3dadd( 360.475, 469.395, 33.3301, 0.6678 ) }
    dend_39 { pt3dadd( 361.088, 470.357, 33.3827, 0.6342 ) }
    dend_39 { pt3dadd( 361.509, 471.417, 33.4342, 0.5466 ) }
    dend_39 { pt3dadd( 361.813, 472.519, 33.4692, 0.5856 ) }
    dend_39 { pt3dadd( 362.037, 473.64, 33.474, 0.6306 ) }
    dend_39 { pt3dadd( 362.151, 474.777, 33.4387, 0.5504 ) }
    dend_39 { pt3dadd( 362.188, 475.92, 33.3525, 0.5094 ) }
    dend_39 { pt3dadd( 362.212, 477.062, 33.2083, 0.4858 ) }
    dend_39 { pt3dadd( 362.298, 478.199, 33.0067, 0.5626 ) }
    dend_39 { pt3dadd( 362.425, 479.331, 32.7558, 0.7108 ) }
    dend_39 { pt3dadd( 362.562, 480.461, 32.4638, 0.7402 ) }
    dend_39 { pt3dadd( 362.778, 481.576, 32.1387, 0.6152 ) }
    dend_39 { pt3dadd( 363.223, 482.614, 31.7912, 0.5602 ) }
    dend_39 { pt3dadd( 363.941, 483.484, 31.4325, 0.608 ) }
    dend_39 { pt3dadd( 364.768, 484.259, 31.068, 0.6134 ) }
    dend_39 { pt3dadd( 365.477, 485.139, 30.6998, 0.5554 ) }
    dend_39 { pt3dadd( 365.847, 486.2, 30.3414, 0.651 ) }
    dend_39 { pt3dadd( 366.069, 487.314, 30.0138, 0.6014 ) }
    dend_39 { pt3dadd( 366.52, 488.352, 29.7195, 0.6154 ) }
    dend_39 { pt3dadd( 367.202, 489.26, 29.4622, 0.6754 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_39 { pt3dadd( 367.957, 490.114, 29.2328, 0.7678 ) }
    dend_39 { pt3dadd( 368.748, 490.936, 29.0209, 0.6432 ) }
    dend_39 { pt3dadd( 369.506, 491.788, 28.821, 0.6152 ) }
    dend_39 { pt3dadd( 370.102, 492.759, 28.632, 0.5278 ) }
    dend_39 { pt3dadd( 370.476, 493.834, 28.4522, 0.556 ) }
    dend_39 { pt3dadd( 370.73, 494.946, 28.2794, 0.6224 ) }
    dend_39 { pt3dadd( 371.111, 496.021, 28.1095, 0.6542 ) }
    dend_39 { pt3dadd( 371.662, 497.02, 27.9405, 0.5354 ) }
    dend_39 { pt3dadd( 372.393, 497.893, 27.7785, 0.4894 ) }
    dend_39 { pt3dadd( 373.208, 498.693, 27.6352, 0.4432 ) }
    dend_39 { pt3dadd( 373.937, 499.572, 27.5166, 0.5268 ) }
    dend_39 { pt3dadd( 374.551, 500.535, 27.4228, 0.4838 ) }
    dend_39 { pt3dadd( 375.097, 501.54, 27.3493, 0.4694 ) }
    dend_39 { pt3dadd( 375.715, 502.502, 27.2905, 0.5666 ) }
    dend_39 { pt3dadd( 376.478, 503.351, 27.2411, 0.6338 ) }
    dend_39 { pt3dadd( 377.274, 504.172, 27.1975, 0.574 ) }
    dend_39 { pt3dadd( 378.023, 505.036, 27.1586, 0.443 ) }
    dend_39 { pt3dadd( 378.704, 505.955, 27.1241, 0.376 ) }
    dend_39 { pt3dadd( 379.313, 506.924, 27.0931, 0.4202 ) }
    dend_39 { pt3dadd( 379.771, 507.969, 27.0643, 0.4314 ) }
    dend_39 { pt3dadd( 380.016, 509.083, 27.0344, 0.4884 ) }
    dend_39 { pt3dadd( 380.158, 510.218, 27.001, 0.5582 ) }
    dend_39 { pt3dadd( 380.544, 511.29, 26.96, 0.4896 ) }
    dend_39 { pt3dadd( 381.098, 512.29, 26.9088, 0.4648 ) }
    dend_39 { pt3dadd( 381.483, 513.364, 26.8444, 0.4128 ) }
    dend_39 { pt3dadd( 381.712, 514.483, 26.766, 0.427 ) }
    dend_39 { pt3dadd( 381.85, 515.618, 26.672, 0.5248 ) }
    dend_39 { pt3dadd( 381.978, 516.754, 26.5496, 0.643 ) }
    dend_39 { pt3dadd( 382.359, 517.827, 26.4021, 0.7888 ) }
    dend_39 { pt3dadd( 382.873, 518.846, 26.253, 0.9584 ) }
    dend_39 { pt3dadd( 383.391, 519.865, 26.1116, 0.8844 ) }
    dend_39 { pt3dadd( 383.921, 520.877, 25.9794, 0.8942 ) }
    dend_39 { pt3dadd( 384.53, 521.844, 25.8616, 0.8378 ) }
    dend_39 { pt3dadd( 384.988, 522.889, 25.7502, 0.7758 ) }
    dend_39 { pt3dadd( 385.169, 524.014, 25.6281, 0.8198 ) }
    dend_39 { pt3dadd( 385.522, 525.098, 25.4845, 0.7938 ) }
    dend_39 { pt3dadd( 385.997, 526.137, 25.33, 0.7134 ) }
    dend_39 { pt3dadd( 386.408, 527.202, 25.1765, 0.6554 ) }
    dend_39 { pt3dadd( 386.696, 528.307, 25.0335, 0.7332 ) }
    dend_39 { pt3dadd( 386.933, 529.426, 24.9096, 0.668 ) }
    dend_39 { pt3dadd( 387.093, 530.557, 24.8069, 0.5712 ) }
    dend_39 { pt3dadd( 387.247, 531.69, 24.7211, 0.5976 ) }
    dend_39 { pt3dadd( 387.489, 532.808, 24.6429, 0.7334 ) }
    dend_39 { pt3dadd( 387.905, 533.872, 24.5644, 0.872 ) }
    dend_39 { pt3dadd( 388.375, 534.914, 24.4781, 0.86 ) }
    dend_39 { pt3dadd( 388.901, 535.929, 24.3731, 0.8052 ) }
    dend_39 { pt3dadd( 389.438, 536.938, 24.2496, 0.7484 ) }
    dend_39 { pt3dadd( 389.85, 538.003, 24.117, 0.635 ) }
    dend_39 { pt3dadd( 389.847, 539.139, 23.9859, 0.6944 ) }
    dend_39 { pt3dadd( 389.651, 540.264, 23.864, 0.7804 ) }
    dend_39 { pt3dadd( 389.405, 541.381, 23.7519, 0.7386 ) }
    dend_39 { pt3dadd( 389.13, 542.49, 23.6496, 0.5418 ) }
    dend_39 { pt3dadd( 388.802, 543.585, 23.546, 0.4624 ) }
    dend_39 { pt3dadd( 388.42, 544.662, 23.4225, 0.4006 ) }
    dend_39 { pt3dadd( 388.138, 545.768, 23.2372, 0.411 ) }
    dend_39 { pt3dadd( 387.652, 546.794, 22.9363, 0.4928 ) }
    dend_39 { pt3dadd( 387.436, 547.905, 22.553, 0.6126 ) }
    dend_39 { pt3dadd( 387.402, 549.035, 22.1348, 0.5672 ) }
    dend_39 { pt3dadd( 387.5, 550.162, 21.7179, 0.6394 ) }
    dend_39 { pt3dadd( 387.682, 551.28, 21.3329, 0.6576 ) }
    dend_39 { pt3dadd( 387.814, 552.409, 21.0087, 0.5896 ) }
    dend_39 { pt3dadd( 387.853, 553.547, 20.756, 0.4962 ) }
    dend_39 { pt3dadd( 387.857, 554.689, 20.5669, 0.3818 ) }
    dend_39 { pt3dadd( 388.012, 555.822, 20.4287, 0.3374 ) }
    dend_39 { pt3dadd( 388.29, 556.93, 20.3285, 0.3444 ) }
    dend_39 { pt3dadd( 388.666, 558.01, 20.2521, 0.393 ) }
    dend_39 { pt3dadd( 389.138, 559.051, 20.1866, 0.544 ) }
    dend_39 { pt3dadd( 389.629, 560.084, 20.1214, 0.5308 ) }
    dend_39 { pt3dadd( 390.097, 561.127, 20.048, 0.588 ) }
    dend_39 { pt3dadd( 390.563, 562.172, 19.9607, 0.7152 ) }
    dend_39 { pt3dadd( 391.057, 563.203, 19.8544, 0.6342 ) }
    dend_39 { pt3dadd( 391.654, 564.176, 19.723, 0.6772 ) }
    dend_39 { pt3dadd( 392.316, 565.107, 19.5629, 0.6804 ) }
    dend_39 { pt3dadd( 392.958, 566.051, 19.3823, 0.6308 ) }
    dend_39 { pt3dadd( 393.591, 567.001, 19.1907, 0.5742 ) }
    dend_39 { pt3dadd( 394.296, 567.899, 18.9955, 0.518 ) }
    dend_39 { pt3dadd( 395.03, 568.773, 18.8002, 0.6314 ) }
    dend_39 { pt3dadd( 395.729, 569.674, 18.5968, 0.691 ) }
    dend_39 { pt3dadd( 396.333, 570.641, 18.3784, 0.6534 ) }
    dend_39 { pt3dadd( 396.673, 571.729, 18.1486, 0.6108 ) }
    dend_39 { pt3dadd( 396.92, 572.842, 17.9143, 0.6112 ) }
    dend_39 { pt3dadd( 396.892, 573.98, 17.6724, 0.6816 ) }
    dend_39 { pt3dadd( 396.745, 575.11, 17.4221, 0.706 ) }
    dend_39 { pt3dadd( 396.276, 576.148, 17.1724, 0.596 ) }
    dend_39 { pt3dadd( 395.64, 577.093, 16.9341, 0.681 ) }
    dend_39 { pt3dadd( 395.035, 578.06, 16.7061, 0.562 ) }
    dend_39 { pt3dadd( 394.461, 579.046, 16.487, 0.5662 ) }
    dend_39 { pt3dadd( 394.025, 580.099, 16.2881, 0.6028 ) }
    dend_39 { pt3dadd( 393.626, 581.17, 16.1221, 0.5432 ) }
    dend_39 { pt3dadd( 393.069, 582.168, 15.9919, 0.5956 ) }
    dend_39 { pt3dadd( 392.584, 583.203, 15.8945, 0.5792 ) }
    dend_39 { pt3dadd( 392.656, 584.343, 15.8126, 0.4246 ) }
    dend_39 { pt3dadd( 392.775, 585.481, 15.7553, 0.2804 ) }
    dend_39 { pt3dadd( 392.437, 586.572, 15.8253, 0.2288 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 94/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 351.208, 457.044, 33.9144, 0.9056 ) }
    dend_38 { pt3dadd( 352.7, 457.29, 32.7774, 0.709 ) }
    dend_38 { pt3dadd( 353.822, 457.459, 32.452, 0.7844 ) }
    dend_38 { pt3dadd( 354.957, 457.463, 32.2073, 0.6572 ) }
    dend_38 { pt3dadd( 355.987, 457.037, 31.9385, 0.508 ) }
    dend_38 { pt3dadd( 356.878, 456.336, 31.6453, 0.5038 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_38 { pt3dadd( 357.866, 455.796, 31.2995, 0.4752 ) }
    dend_38 { pt3dadd( 358.875, 456.085, 30.8392, 0.4788 ) }
    dend_38 { pt3dadd( 359.429, 457.039, 30.3271, 0.444 ) }
    dend_38 { pt3dadd( 360.093, 457.943, 29.7973, 0.4864 ) }
    dend_38 { pt3dadd( 360.945, 458.675, 29.2897, 0.6592 ) }
    dend_38 { pt3dadd( 361.887, 459.297, 28.8333, 0.7874 ) }
    dend_38 { pt3dadd( 362.841, 459.909, 28.4458, 0.89 ) }
    dend_38 { pt3dadd( 363.697, 460.655, 28.1338, 0.8074 ) }
    dend_38 { pt3dadd( 364.278, 461.632, 27.8938, 0.8508 ) }
    dend_38 { pt3dadd( 364.652, 462.709, 27.7181, 0.7716 ) }
    dend_38 { pt3dadd( 365.074, 463.771, 27.5933, 0.8038 ) }
    dend_38 { pt3dadd( 365.552, 464.81, 27.5081, 0.8222 ) }
    dend_38 { pt3dadd( 366.013, 465.856, 27.4509, 0.8906 ) }
    dend_38 { pt3dadd( 366.503, 466.889, 27.4119, 0.8382 ) }
    dend_38 { pt3dadd( 367.089, 467.872, 27.382, 0.746 ) }
    dend_38 { pt3dadd( 367.756, 468.802, 27.3541, 0.7174 ) }
    dend_38 { pt3dadd( 368.406, 469.742, 27.323, 0.85 ) }
    dend_38 { pt3dadd( 368.956, 470.746, 27.2844, 0.8946 ) }
    dend_38 { pt3dadd( 369.376, 471.809, 27.2346, 0.9114 ) }
    dend_38 { pt3dadd( 369.688, 472.909, 27.1704, 0.9812 ) }
    dend_38 { pt3dadd( 369.922, 474.028, 27.0875, 0.9124 ) }
    dend_38 { pt3dadd( 370.219, 475.132, 26.9814, 0.6624 ) }
    dend_38 { pt3dadd( 370.749, 476.143, 26.8476, 0.517 ) }
    dend_38 { pt3dadd( 371.48, 477.018, 26.6795, 0.6402 ) }
    dend_38 { pt3dadd( 372.202, 477.903, 26.4686, 0.5922 ) }
    dend_38 { pt3dadd( 372.751, 478.899, 26.2115, 0.6212 ) }
    dend_38 { pt3dadd( 373.186, 479.949, 25.9134, 0.6872 ) }
    dend_38 { pt3dadd( 373.579, 481.015, 25.5767, 0.7854 ) }
    dend_38 { pt3dadd( 374.094, 482.024, 25.2049, 0.6456 ) }
    dend_38 { pt3dadd( 374.848, 482.867, 24.8049, 0.6138 ) }
    dend_38 { pt3dadd( 375.68, 483.632, 24.3832, 0.7112 ) }
    dend_38 { pt3dadd( 376.429, 484.479, 23.9451, 0.628 ) }
    dend_38 { pt3dadd( 377.059, 485.416, 23.5078, 0.6648 ) }
    dend_38 { pt3dadd( 377.693, 486.353, 23.0898, 0.6576 ) }
    dend_38 { pt3dadd( 378.365, 487.265, 22.6986, 0.5892 ) }
    dend_38 { pt3dadd( 379.1, 488.129, 22.3343, 0.4952 ) }
    dend_38 { pt3dadd( 379.983, 488.844, 21.9976, 0.3794 ) }
    dend_38 { pt3dadd( 380.969, 489.409, 21.6969, 0.3332 ) }
    dend_38 { pt3dadd( 381.976, 489.942, 21.4421, 0.3368 ) }
    dend_38 { pt3dadd( 382.93, 490.568, 21.2356, 0.3796 ) }
    dend_38 { pt3dadd( 383.739, 491.374, 21.0788, 0.514 ) }
    dend_38 { pt3dadd( 384.429, 492.285, 20.9716, 0.5016 ) }
    dend_38 { pt3dadd( 384.994, 493.279, 20.8998, 0.4036 ) }
    dend_38 { pt3dadd( 385.603, 494.246, 20.8363, 0.3338 ) }
    dend_38 { pt3dadd( 386.319, 495.139, 20.7481, 0.329 ) }
    dend_38 { pt3dadd( 387.075, 495.995, 20.6079, 0.401 ) }
    dend_38 { pt3dadd( 387.991, 496.674, 20.4144, 0.3826 ) }
    dend_38 { pt3dadd( 389.047, 497.102, 20.1771, 0.4148 ) }
    dend_38 { pt3dadd( 390.162, 497.33, 19.9057, 0.3652 ) }
    dend_38 { pt3dadd( 391.267, 497.601, 19.6235, 0.352 ) }
    dend_38 { pt3dadd( 391.995, 498.476, 19.3502, 0.3974 ) }
    dend_38 { pt3dadd( 392.544, 499.475, 19.1031, 0.3732 ) }
    dend_38 { pt3dadd( 393.195, 500.411, 18.8762, 0.3984 ) }
    dend_38 { pt3dadd( 393.791, 501.384, 18.6722, 0.3328 ) }
    dend_38 { pt3dadd( 394.475, 502.298, 18.5, 0.298 ) }
    dend_38 { pt3dadd( 395.421, 502.938, 18.3609, 0.2712 ) }
    dend_38 { pt3dadd( 396.533, 503.203, 18.2546, 0.2684 ) }
    dend_38 { pt3dadd( 397.646, 503.466, 18.1793, 0.2626 ) }
    dend_38 { pt3dadd( 398.779, 503.625, 18.132, 0.2542 ) }
    dend_38 { pt3dadd( 399.923, 503.625, 18.1056, 0.2288 ) }
    dend_38 { pt3dadd( 401.067, 503.625, 18.086, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 61/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 298.816, 331.172, 31.0786, 0.4572 ) }
    dend_14 { pt3dadd( 298.751, 330.553, 30.9378, 0.407 ) }
    dend_14 { pt3dadd( 298.629, 329.417, 30.8148, 0.3996 ) }
    dend_14 { pt3dadd( 298.49, 328.281, 30.7549, 0.341 ) }
    dend_14 { pt3dadd( 298.322, 327.15, 30.744, 0.3058 ) }
    dend_14 { pt3dadd( 298.099, 326.029, 30.7714, 0.2824 ) }
    dend_14 { pt3dadd( 297.779, 324.93, 30.83, 0.2852 ) }
    dend_14 { pt3dadd( 297.417, 323.846, 30.9168, 0.2944 ) }
    dend_14 { pt3dadd( 297.141, 322.737, 31.0316, 0.3106 ) }
    dend_14 { pt3dadd( 296.969, 321.608, 31.1749, 0.3434 ) }
    dend_14 { pt3dadd( 296.809, 320.478, 31.353, 0.3938 ) }
    dend_14 { pt3dadd( 296.617, 319.353, 31.5745, 0.5372 ) }
    dend_14 { pt3dadd( 296.455, 318.227, 31.8368, 0.5614 ) }
    dend_14 { pt3dadd( 296.275, 317.102, 32.1289, 0.5152 ) }
    dend_14 { pt3dadd( 296.007, 315.998, 32.4374, 0.55 ) }
    dend_14 { pt3dadd( 295.646, 314.919, 32.7482, 0.6474 ) }
    dend_14 { pt3dadd( 295.18, 313.884, 33.0613, 0.7188 ) }
    dend_14 { pt3dadd( 294.673, 312.866, 33.3794, 0.5332 ) }
    dend_14 { pt3dadd( 294.082, 311.894, 33.6815, 0.3896 ) }
    dend_14 { pt3dadd( 293.608, 310.861, 33.9606, 0.333 ) }
    dend_14 { pt3dadd( 293.325, 309.759, 34.2238, 0.3704 ) }
    dend_14 { pt3dadd( 293.136, 308.635, 34.4817, 0.4656 ) }
    dend_14 { pt3dadd( 292.985, 307.507, 34.7449, 0.5628 ) }
    dend_14 { pt3dadd( 292.843, 306.377, 35.0246, 0.4908 ) }
    dend_14 { pt3dadd( 292.492, 305.297, 35.3321, 0.4736 ) }
    dend_14 { pt3dadd( 291.945, 304.304, 35.6678, 0.4294 ) }
    dend_14 { pt3dadd( 291.187, 303.463, 36.0304, 0.4574 ) }
    dend_14 { pt3dadd( 290.284, 302.78, 36.4235, 0.6144 ) }
    dend_14 { pt3dadd( 289.336, 302.167, 36.8665, 0.6572 ) }
    dend_14 { pt3dadd( 288.369, 301.589, 37.3554, 0.8916 ) }
    dend_14 { pt3dadd( 287.397, 301.026, 37.8759, 0.9234 ) }
    dend_14 { pt3dadd( 286.347, 300.634, 38.4314, 0.8224 ) }
    dend_14 { pt3dadd( 285.246, 300.448, 39.0309, 0.624 ) }
    dend_14 { pt3dadd( 284.164, 300.193, 39.6855, 0.4752 ) }
    dend_14 { pt3dadd( 283.276, 299.536, 40.3785, 0.4414 ) }
    dend_14 { pt3dadd( 282.432, 298.816, 41.0662, 0.6106 ) }
    dend_14 { pt3dadd( 281.446, 298.301, 41.7192, 0.5316 ) }
    dend_14 { pt3dadd( 280.425, 297.844, 42.306, 0.4834 ) }
    dend_14 { pt3dadd( 279.527, 297.165, 42.8064, 0.5834 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_14 { pt3dadd( 278.688, 296.407, 43.2107, 0.5348 ) }
    dend_14 { pt3dadd( 278.873, 295.346, 44.0843, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 2/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 298.816, 331.172, 31.0786, 0.4572 ) }
    dend_13 { pt3dadd( 298.491, 329.8, 29.969, 0.2786 ) }
    dend_13 { pt3dadd( 298.023, 328.762, 29.7769, 0.2876 ) }
    dend_13 { pt3dadd( 297.232, 327.943, 29.6422, 0.2998 ) }
    dend_13 { pt3dadd( 296.723, 326.922, 29.5476, 0.3164 ) }
    dend_13 { pt3dadd( 296.555, 325.793, 29.4921, 0.3766 ) }
    dend_13 { pt3dadd( 296.239, 324.695, 29.4728, 0.3458 ) }
    dend_13 { pt3dadd( 295.806, 323.635, 29.4888, 0.3206 ) }
    dend_13 { pt3dadd( 295.358, 322.584, 29.5176, 0.311 ) }
    dend_13 { pt3dadd( 294.844, 321.561, 29.5571, 0.3422 ) }
    dend_13 { pt3dadd( 294.286, 320.562, 29.6094, 0.391 ) }
    dend_13 { pt3dadd( 293.783, 319.536, 29.6769, 0.5332 ) }
    dend_13 { pt3dadd( 293.356, 318.476, 29.7648, 0.5446 ) }
    dend_13 { pt3dadd( 292.948, 317.407, 29.8777, 0.475 ) }
    dend_13 { pt3dadd( 292.544, 316.339, 30.0196, 0.5114 ) }
    dend_13 { pt3dadd( 292.171, 315.26, 30.1944, 0.4254 ) }
    dend_13 { pt3dadd( 291.76, 314.196, 30.4094, 0.3798 ) }
    dend_13 { pt3dadd( 291.217, 313.196, 30.6855, 0.3738 ) }
    dend_13 { pt3dadd( 290.617, 312.231, 31.0131, 0.449 ) }
    dend_13 { pt3dadd( 290.036, 311.255, 31.36, 0.634 ) }
    dend_13 { pt3dadd( 289.487, 310.262, 31.7027, 0.7688 ) }
    dend_13 { pt3dadd( 288.834, 309.332, 32.0258, 0.6802 ) }
    dend_13 { pt3dadd( 288.146, 308.425, 32.3042, 0.5516 ) }
    dend_13 { pt3dadd( 287.602, 307.422, 32.506, 0.571 ) }
    dend_13 { pt3dadd( 287.126, 306.383, 32.62, 0.7254 ) }
    dend_13 { pt3dadd( 286.653, 305.342, 32.6572, 0.672 ) }
    dend_13 { pt3dadd( 286.114, 304.333, 32.6292, 0.6372 ) }
    dend_13 { pt3dadd( 285.498, 303.369, 32.5466, 0.4734 ) }
    dend_13 { pt3dadd( 284.855, 302.424, 32.44, 0.427 ) }
    dend_13 { pt3dadd( 284.204, 301.484, 32.342, 0.4544 ) }
    dend_13 { pt3dadd( 283.519, 300.569, 32.2582, 0.645 ) }
    dend_13 { pt3dadd( 282.885, 299.617, 32.1874, 0.7804 ) }
    dend_13 { pt3dadd( 282.297, 298.635, 32.1149, 0.7244 ) }
    dend_13 { pt3dadd( 281.576, 297.748, 32.0337, 0.5122 ) }
    dend_13 { pt3dadd( 280.608, 297.14, 31.9452, 0.4072 ) }
    dend_13 { pt3dadd( 279.509, 296.826, 31.8545, 0.4068 ) }
    dend_13 { pt3dadd( 278.418, 296.485, 31.7562, 0.6102 ) }
    dend_13 { pt3dadd( 277.499, 295.804, 31.6504, 0.4576 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 331.23, 417.577, 42.747, 0.9626 ) }
    dend_8 { pt3dadd( 329.879, 417.697, 43.9236, 1.1196 ) }
    dend_8 { pt3dadd( 328.74, 417.598, 43.9692, 1.1494 ) }
    dend_8 { pt3dadd( 327.61, 417.425, 44.0196, 1.1326 ) }
    dend_8 { pt3dadd( 326.477, 417.268, 44.1092, 1.0038 ) }
    dend_8 { pt3dadd( 325.335, 417.221, 44.2688, 0.7786 ) }
    dend_8 { pt3dadd( 324.269, 416.821, 44.5096, 0.5164 ) }
    dend_8 { pt3dadd( 323.545, 415.947, 44.8263, 0.4128 ) }
    dend_8 { pt3dadd( 322.835, 415.064, 45.2122, 0.4196 ) }
    dend_8 { pt3dadd( 321.888, 414.448, 45.6627, 0.621 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 50/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 331.23, 417.577, 42.747, 0.9626 ) }
    dend_7 { pt3dadd( 330.976, 416.176, 43.1382, 0.5226 ) }
    dend_7 { pt3dadd( 330.86, 415.039, 43.2426, 0.4132 ) }
    dend_7 { pt3dadd( 330.635, 413.918, 43.2978, 0.4478 ) }
    dend_7 { pt3dadd( 330.354, 412.809, 43.3171, 0.6256 ) }
    dend_7 { pt3dadd( 330.046, 411.707, 43.3121, 0.7516 ) }
    dend_7 { pt3dadd( 329.724, 410.61, 43.2986, 0.806 ) }
    dend_7 { pt3dadd( 329.527, 409.484, 43.2866, 0.8042 ) }
    dend_7 { pt3dadd( 329.326, 408.358, 43.2802, 0.7814 ) }
    dend_7 { pt3dadd( 329.016, 407.258, 43.2793, 0.7742 ) }
    dend_7 { pt3dadd( 328.528, 406.224, 43.2835, 0.5918 ) }
    dend_7 { pt3dadd( 327.857, 405.301, 43.2925, 0.4704 ) }
    dend_7 { pt3dadd( 327.247, 404.334, 43.3051, 0.5174 ) }
    dend_7 { pt3dadd( 326.74, 403.309, 43.3222, 0.4862 ) }
    dend_7 { pt3dadd( 326.234, 402.283, 43.344, 0.5326 ) }
    dend_7 { pt3dadd( 325.665, 401.291, 43.3717, 0.4374 ) }
    dend_7 { pt3dadd( 325.152, 400.268, 43.4078, 0.3828 ) }
    dend_7 { pt3dadd( 324.787, 399.186, 43.4538, 0.3944 ) }
    dend_7 { pt3dadd( 324.491, 398.081, 43.5106, 0.3798 ) }
    dend_7 { pt3dadd( 324.247, 396.965, 43.5798, 0.3758 ) }
    dend_7 { pt3dadd( 323.969, 395.855, 43.664, 0.4346 ) }
    dend_7 { pt3dadd( 323.679, 394.75, 43.7693, 0.4506 ) }
    dend_7 { pt3dadd( 323.395, 393.642, 43.8894, 0.5518 ) }
    dend_7 { pt3dadd( 323.013, 392.566, 44.0104, 0.544 ) }
    dend_7 { pt3dadd( 322.56, 391.517, 44.121, 0.4852 ) }
    dend_7 { pt3dadd( 322.143, 390.452, 44.2126, 0.4664 ) }
    dend_7 { pt3dadd( 321.729, 389.386, 44.2809, 0.606 ) }
    dend_7 { pt3dadd( 321.202, 388.372, 44.3251, 0.7036 ) }
    dend_7 { pt3dadd( 320.537, 387.442, 44.3509, 0.7204 ) }
    dend_7 { pt3dadd( 319.806, 386.562, 44.3646, 0.6082 ) }
    dend_7 { pt3dadd( 319.131, 385.639, 44.3722, 0.5874 ) }
    dend_7 { pt3dadd( 318.603, 384.626, 44.3772, 0.8248 ) }
    dend_7 { pt3dadd( 318.16, 383.572, 44.3831, 0.8872 ) }
    dend_7 { pt3dadd( 317.707, 382.52, 44.3946, 0.8758 ) }
    dend_7 { pt3dadd( 317.279, 381.46, 44.4144, 0.827 ) }
    dend_7 { pt3dadd( 316.901, 380.381, 44.4472, 0.8254 ) }
    dend_7 { pt3dadd( 316.523, 379.301, 44.4951, 0.8006 ) }
    dend_7 { pt3dadd( 316.132, 378.226, 44.5556, 0.9086 ) }
    dend_7 { pt3dadd( 315.752, 377.148, 44.6214, 0.9784 ) }
    dend_7 { pt3dadd( 315.378, 376.067, 44.6916, 0.986 ) }
    dend_7 { pt3dadd( 315.027, 374.979, 44.772, 0.8852 ) }
    dend_7 { pt3dadd( 314.737, 373.873, 44.8624, 0.7724 ) }
    dend_7 { pt3dadd( 314.451, 372.766, 44.9565, 0.7764 ) }
    dend_7 { pt3dadd( 314.101, 371.678, 45.0464, 0.847 ) }
    dend_7 { pt3dadd( 313.725, 370.598, 45.1321, 0.7868 ) }
    dend_7 { pt3dadd( 313.36, 369.514, 45.2183, 0.7764 ) }
    dend_7 { pt3dadd( 313.006, 368.426, 45.3071, 0.7944 ) }
    dend_7 { pt3dadd( 312.73, 367.318, 45.3925, 0.7142 ) }
    dend_7 { pt3dadd( 312.617, 366.181, 45.4717, 0.499 ) }
    dend_7 { pt3dadd( 312.57, 365.038, 45.5437, 0.3532 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_7 { pt3dadd( 312.492, 363.897, 45.6092, 0.3046 ) }
    dend_7 { pt3dadd( 312.405, 362.757, 45.67, 0.3222 ) }
    dend_7 { pt3dadd( 312.263, 361.622, 45.7321, 0.358 ) }
    dend_7 { pt3dadd( 311.906, 360.537, 45.8027, 0.4538 ) }
    dend_7 { pt3dadd( 311.324, 359.556, 45.8858, 0.488 ) }
    dend_7 { pt3dadd( 310.697, 358.6, 45.9889, 0.6258 ) }
    dend_7 { pt3dadd( 310.227, 357.561, 46.1188, 0.664 ) }
    dend_7 { pt3dadd( 309.898, 356.467, 46.2697, 0.7694 ) }
    dend_7 { pt3dadd( 309.638, 355.355, 46.4335, 0.694 ) }
    dend_7 { pt3dadd( 309.365, 354.246, 46.6004, 0.612 ) }
    dend_7 { pt3dadd( 309.022, 353.157, 46.76, 0.6906 ) }
    dend_7 { pt3dadd( 308.716, 352.057, 46.9087, 0.8224 ) }
    dend_7 { pt3dadd( 308.434, 350.949, 47.0464, 0.8126 ) }
    dend_7 { pt3dadd( 308.09, 349.86, 47.1685, 0.732 ) }
    dend_7 { pt3dadd( 307.775, 348.761, 47.2721, 0.5612 ) }
    dend_7 { pt3dadd( 307.506, 347.649, 47.3654, 0.538 ) }
    dend_7 { pt3dadd( 307.274, 346.53, 47.4544, 0.556 ) }
    dend_7 { pt3dadd( 306.983, 345.424, 47.5392, 0.6372 ) }
    dend_7 { pt3dadd( 306.506, 344.386, 47.6216, 0.5776 ) }
    dend_7 { pt3dadd( 305.9, 343.418, 47.7036, 0.645 ) }
    dend_7 { pt3dadd( 305.31, 342.439, 47.7868, 0.6706 ) }
    dend_7 { pt3dadd( 304.823, 341.405, 47.8713, 0.6478 ) }
    dend_7 { pt3dadd( 304.464, 340.319, 47.962, 0.467 ) }
    dend_7 { pt3dadd( 304.192, 339.21, 48.064, 0.348 ) }
    dend_7 { pt3dadd( 303.85, 338.118, 48.1743, 0.3026 ) }
    dend_7 { pt3dadd( 303.405, 337.066, 48.2835, 0.321 ) }
    dend_7 { pt3dadd( 302.873, 336.055, 48.3826, 0.3514 ) }
    dend_7 { pt3dadd( 302.272, 335.082, 48.4652, 0.4632 ) }
    dend_7 { pt3dadd( 301.747, 334.066, 48.5274, 0.3994 ) }
    dend_7 { pt3dadd( 301.343, 332.997, 48.5691, 0.3308 ) }
    dend_7 { pt3dadd( 300.887, 331.948, 48.5946, 0.2786 ) }
    dend_7 { pt3dadd( 300.276, 330.981, 48.6097, 0.2748 ) }
    dend_7 { pt3dadd( 299.688, 330.0, 48.6192, 0.275 ) }
    dend_7 { pt3dadd( 299.254, 328.942, 48.6262, 0.2754 ) }
    dend_7 { pt3dadd( 298.837, 327.878, 48.634, 0.2762 ) }
    dend_7 { pt3dadd( 298.244, 326.901, 48.6436, 0.2772 ) }
    dend_7 { pt3dadd( 297.568, 325.978, 48.6564, 0.2796 ) }
    dend_7 { pt3dadd( 296.953, 325.014, 48.673, 0.2838 ) }
    dend_7 { pt3dadd( 296.448, 323.989, 48.6942, 0.292 ) }
    dend_7 { pt3dadd( 296.119, 322.894, 48.7231, 0.3066 ) }
    dend_7 { pt3dadd( 295.904, 321.771, 48.7617, 0.3358 ) }
    dend_7 { pt3dadd( 295.644, 320.656, 48.8107, 0.3796 ) }
    dend_7 { pt3dadd( 295.321, 319.559, 48.8701, 0.5112 ) }
    dend_7 { pt3dadd( 294.897, 318.498, 48.9479, 0.5094 ) }
    dend_7 { pt3dadd( 294.403, 317.468, 49.0563, 0.4228 ) }
    dend_7 { pt3dadd( 293.894, 316.444, 49.1974, 0.3578 ) }
    dend_7 { pt3dadd( 293.429, 315.402, 49.3637, 0.3968 ) }
    dend_7 { pt3dadd( 293.11, 314.306, 49.5337, 0.3832 ) }
    dend_7 { pt3dadd( 292.871, 313.188, 49.6857, 0.3906 ) }
    dend_7 { pt3dadd( 292.646, 312.068, 49.8056, 0.4322 ) }
    dend_7 { pt3dadd( 292.499, 310.935, 49.8907, 0.6036 ) }
    dend_7 { pt3dadd( 292.441, 309.793, 49.9492, 0.6924 ) }
    dend_7 { pt3dadd( 292.416, 308.649, 49.9943, 0.6936 ) }
    dend_7 { pt3dadd( 292.396, 307.505, 50.0377, 0.5462 ) }
    dend_7 { pt3dadd( 292.377, 306.362, 50.0861, 0.5136 ) }
    dend_7 { pt3dadd( 292.316, 305.219, 50.141, 0.5456 ) }
    dend_7 { pt3dadd( 292.175, 304.084, 50.1962, 0.4544 ) }
    dend_7 { pt3dadd( 291.995, 302.955, 50.2463, 0.3852 ) }
    dend_7 { pt3dadd( 291.807, 301.827, 50.2869, 0.3752 ) }
    dend_7 { pt3dadd( 291.618, 300.698, 50.3163, 0.4692 ) }
    dend_7 { pt3dadd( 291.383, 299.579, 50.335, 0.5682 ) }
    dend_7 { pt3dadd( 291.075, 298.478, 50.3454, 0.5026 ) }
    dend_7 { pt3dadd( 290.74, 297.384, 50.3499, 0.4708 ) }
    dend_7 { pt3dadd( 290.399, 296.291, 50.351, 0.5534 ) }
    dend_7 { pt3dadd( 290.057, 295.2, 50.3502, 0.7036 ) }
    dend_7 { pt3dadd( 289.716, 294.108, 50.3479, 0.8258 ) }
    dend_7 { pt3dadd( 289.374, 293.016, 50.3448, 0.7222 ) }
    dend_7 { pt3dadd( 289.033, 291.925, 50.3406, 0.772 ) }
    dend_7 { pt3dadd( 288.691, 290.832, 50.3353, 0.8978 ) }
    dend_7 { pt3dadd( 288.341, 289.743, 50.3286, 0.836 ) }
    dend_7 { pt3dadd( 287.977, 288.659, 50.3196, 0.636 ) }
    dend_7 { pt3dadd( 287.61, 287.575, 50.3082, 0.5824 ) }
    dend_7 { pt3dadd( 287.241, 286.493, 50.2942, 0.6642 ) }
    dend_7 { pt3dadd( 286.85, 285.418, 50.2771, 0.6904 ) }
    dend_7 { pt3dadd( 286.341, 284.394, 50.2561, 0.7454 ) }
    dend_7 { pt3dadd( 285.771, 283.402, 50.2306, 0.7738 ) }
    dend_7 { pt3dadd( 285.191, 282.416, 50.2018, 0.7532 ) }
    dend_7 { pt3dadd( 284.604, 281.434, 50.1715, 0.828 ) }
    dend_7 { pt3dadd( 283.98, 280.476, 50.1421, 0.836 ) }
    dend_7 { pt3dadd( 283.333, 279.532, 50.1164, 0.6518 ) }
    dend_7 { pt3dadd( 282.685, 278.589, 50.099, 0.5764 ) }
    dend_7 { pt3dadd( 282.168, 277.57, 50.0982, 0.6108 ) }
    dend_7 { pt3dadd( 281.732, 276.512, 50.1214, 0.5702 ) }
    dend_7 { pt3dadd( 281.312, 275.448, 50.1729, 0.6106 ) }
    dend_7 { pt3dadd( 280.89, 274.385, 50.2524, 0.742 ) }
    dend_7 { pt3dadd( 280.341, 273.384, 50.3555, 0.7514 ) }
    dend_7 { pt3dadd( 279.705, 272.433, 50.475, 0.6146 ) }
    dend_7 { pt3dadd( 279.05, 271.497, 50.6064, 0.5966 ) }
    dend_7 { pt3dadd( 278.393, 270.562, 50.7464, 0.6876 ) }
    dend_7 { pt3dadd( 277.795, 269.589, 50.8987, 0.764 ) }
    dend_7 { pt3dadd( 277.239, 268.592, 51.0695, 0.7336 ) }
    dend_7 { pt3dadd( 276.696, 267.589, 51.261, 0.8258 ) }
    dend_7 { pt3dadd( 276.156, 266.583, 51.4704, 0.6672 ) }
    dend_7 { pt3dadd( 275.674, 265.55, 51.688, 0.485 ) }
    dend_7 { pt3dadd( 275.22, 264.503, 51.9025, 0.381 ) }
    dend_7 { pt3dadd( 274.771, 263.454, 52.1032, 0.4052 ) }
    dend_7 { pt3dadd( 274.321, 262.405, 52.2841, 0.5524 ) }
    dend_7 { pt3dadd( 274.171, 261.275, 52.4401, 0.6052 ) }
    dend_7 { pt3dadd( 274.174, 260.133, 52.5694, 0.4824 ) }
    dend_7 { pt3dadd( 274.198, 258.99, 52.6756, 0.3838 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_7 { pt3dadd( 274.288, 257.85, 52.764, 0.3984 ) }
    dend_7 { pt3dadd( 274.583, 256.747, 52.8422, 0.3824 ) }
    dend_7 { pt3dadd( 274.964, 255.668, 52.915, 0.3908 ) }
    dend_7 { pt3dadd( 275.354, 254.593, 52.9852, 0.4268 ) }
    dend_7 { pt3dadd( 275.726, 253.512, 53.0524, 0.622 ) }
    dend_7 { pt3dadd( 275.846, 252.376, 53.111, 0.5928 ) }
    dend_7 { pt3dadd( 275.86, 251.232, 53.1541, 0.49 ) }
    dend_7 { pt3dadd( 275.86, 250.088, 53.1768, 0.4326 ) }
    dend_7 { pt3dadd( 275.86, 248.944, 53.177, 0.5498 ) }
    dend_7 { pt3dadd( 275.914, 247.802, 53.1535, 0.5974 ) }
    dend_7 { pt3dadd( 276.04, 246.665, 53.1076, 0.4666 ) }
    dend_7 { pt3dadd( 276.188, 245.531, 53.0415, 0.3608 ) }
    dend_7 { pt3dadd( 276.338, 244.397, 52.9609, 0.3268 ) }
    dend_7 { pt3dadd( 276.487, 243.264, 52.8702, 0.3912 ) }
    dend_7 { pt3dadd( 276.817, 242.17, 52.7758, 0.3732 ) }
    dend_7 { pt3dadd( 277.27, 241.12, 52.684, 0.3744 ) }
    dend_7 { pt3dadd( 277.748, 240.081, 52.5986, 0.396 ) }
    dend_7 { pt3dadd( 278.231, 239.044, 52.521, 0.5698 ) }
    dend_7 { pt3dadd( 278.775, 238.038, 52.4482, 0.471 ) }
    dend_7 { pt3dadd( 279.387, 237.072, 52.3765, 0.379 ) }
    dend_7 { pt3dadd( 280.019, 236.119, 52.3046, 0.3234 ) }
    dend_7 { pt3dadd( 280.653, 235.167, 52.246, 0.349 ) }
    dend_7 { pt3dadd( 281.353, 234.264, 52.1948, 0.461 ) }
    dend_7 { pt3dadd( 282.118, 233.414, 52.1469, 0.3848 ) }
    dend_7 { pt3dadd( 282.922, 232.599, 52.1214, 0.3082 ) }
    dend_7 { pt3dadd( 283.926, 232.056, 52.145, 0.2318 ) }
    dend_7 { pt3dadd( 285.024, 231.82, 52.647, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 27/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 335.25, 419.73, 39.9442, 0.7606 ) }
    dend_3 { pt3dadd( 335.527, 419.619, 40.7016, 0.4576 ) }
    dend_3 { pt3dadd( 336.559, 419.186, 41.2885, 0.3892 ) }
    dend_3 { pt3dadd( 337.591, 418.703, 41.5204, 0.3554 ) }
    dend_3 { pt3dadd( 338.235, 417.764, 41.7698, 0.3802 ) }
    dend_3 { pt3dadd( 338.607, 416.687, 42.0311, 0.4566 ) }
    dend_3 { pt3dadd( 339.42, 415.89, 42.2988, 0.6784 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 34/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 321.888, 414.448, 45.6627, 0.621 ) }
    dend_10 { pt3dadd( 320.993, 414.656, 46.2518, 0.2382 ) }
    dend_10 { pt3dadd( 319.96, 414.849, 47.3564, 0.3102 ) }
    dend_10 { pt3dadd( 318.849, 415.031, 47.8411, 0.3392 ) }
    dend_10 { pt3dadd( 317.743, 415.24, 48.342, 0.4216 ) }
    dend_10 { pt3dadd( 316.702, 415.661, 48.8698, 0.4156 ) }
    dend_10 { pt3dadd( 315.917, 416.46, 49.4217, 0.5018 ) }
    dend_10 { pt3dadd( 315.163, 417.291, 49.9579, 0.4026 ) }
    dend_10 { pt3dadd( 314.459, 418.171, 50.451, 0.3422 ) }
    dend_10 { pt3dadd( 313.81, 419.094, 50.9046, 0.3056 ) }
    dend_10 { pt3dadd( 313.167, 420.026, 51.2943, 0.3336 ) }
    dend_10 { pt3dadd( 312.197, 420.618, 51.6043, 0.3762 ) }
    dend_10 { pt3dadd( 311.129, 421.02, 51.8283, 0.5 ) }
    dend_10 { pt3dadd( 310.058, 421.418, 51.973, 0.5086 ) }
    dend_10 { pt3dadd( 308.991, 421.828, 52.0752, 0.9152 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 49/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 321.888, 414.448, 45.6627, 0.621 ) }
    dend_9 { pt3dadd( 321.365, 413.727, 46.1037, 0.5534 ) }
    dend_9 { pt3dadd( 321.036, 412.667, 46.6816, 0.5354 ) }
    dend_9 { pt3dadd( 320.859, 411.562, 47.2525, 0.5212 ) }
    dend_9 { pt3dadd( 320.552, 410.484, 47.808, 0.5098 ) }
    dend_9 { pt3dadd( 320.144, 409.439, 48.3442, 0.616 ) }
    dend_9 { pt3dadd( 319.804, 408.368, 48.8642, 0.6278 ) }
    dend_9 { pt3dadd( 319.629, 407.258, 49.3727, 0.7964 ) }
    dend_9 { pt3dadd( 319.479, 406.143, 49.8744, 0.8894 ) }
    dend_9 { pt3dadd( 319.304, 405.031, 50.3776, 0.8034 ) }
    dend_9 { pt3dadd( 319.249, 403.909, 50.8948, 0.9038 ) }
    dend_9 { pt3dadd( 319.361, 402.794, 51.4416, 0.9106 ) }
    dend_9 { pt3dadd( 319.539, 401.69, 52.0299, 0.7752 ) }
    dend_9 { pt3dadd( 319.655, 400.583, 52.6677, 0.6652 ) }
    dend_9 { pt3dadd( 319.863, 399.495, 53.3602, 0.5148 ) }
    dend_9 { pt3dadd( 320.335, 398.501, 54.0963, 0.4918 ) }
    dend_9 { pt3dadd( 321.043, 397.665, 54.8727, 0.4844 ) }
    dend_9 { pt3dadd( 321.689, 396.783, 55.6898, 0.4558 ) }
    dend_9 { pt3dadd( 322.033, 395.742, 56.476, 0.4722 ) }
    dend_9 { pt3dadd( 322.361, 394.687, 57.1942, 0.6018 ) }
    dend_9 { pt3dadd( 322.837, 393.682, 57.8547, 0.8128 ) }
    dend_9 { pt3dadd( 323.373, 392.704, 58.478, 0.9374 ) }
    dend_9 { pt3dadd( 323.909, 391.725, 59.0906, 0.7358 ) }
    dend_9 { pt3dadd( 324.469, 390.758, 59.6957, 0.6422 ) }
    dend_9 { pt3dadd( 325.084, 389.826, 60.2977, 0.6734 ) }
    dend_9 { pt3dadd( 325.842, 389.007, 60.8989, 0.7234 ) }
    dend_9 { pt3dadd( 326.498, 388.103, 61.4989, 0.7032 ) }
    dend_9 { pt3dadd( 326.846, 387.044, 62.0878, 0.554 ) }
    dend_9 { pt3dadd( 327.015, 385.936, 62.6508, 0.5616 ) }
    dend_9 { pt3dadd( 326.926, 384.82, 63.201, 0.4762 ) }
    dend_9 { pt3dadd( 326.597, 383.751, 63.7734, 0.453 ) }
    dend_9 { pt3dadd( 326.24, 382.693, 64.3852, 0.5802 ) }
    dend_9 { pt3dadd( 326.091, 381.588, 65.0012, 0.4832 ) }
    dend_9 { pt3dadd( 325.945, 380.479, 65.5948, 0.3994 ) }
    dend_9 { pt3dadd( 325.776, 379.371, 66.1444, 0.3864 ) }
    dend_9 { pt3dadd( 325.777, 378.246, 66.6478, 0.3592 ) }
    dend_9 { pt3dadd( 325.975, 377.137, 67.1146, 0.3406 ) }
    dend_9 { pt3dadd( 326.185, 376.027, 67.5595, 0.3722 ) }
    dend_9 { pt3dadd( 326.37, 374.913, 68.007, 0.3364 ) }
    dend_9 { pt3dadd( 326.483, 373.791, 68.4746, 0.3028 ) }
    dend_9 { pt3dadd( 326.496, 372.665, 68.9629, 0.278 ) }
    dend_9 { pt3dadd( 326.496, 371.539, 69.4616, 0.2788 ) }
    dend_9 { pt3dadd( 326.486, 370.417, 70.0031, 0.2826 ) }
    dend_9 { pt3dadd( 326.339, 369.311, 70.6224, 0.2896 ) }
    dend_9 { pt3dadd( 326.031, 368.243, 71.2818, 0.3022 ) }
    dend_9 { pt3dadd( 325.629, 367.207, 71.9505, 0.3284 ) }
    dend_9 { pt3dadd( 325.317, 366.141, 72.6124, 0.3642 ) }
    dend_9 { pt3dadd( 325.343, 365.027, 73.2561, 0.4918 ) }
    dend_9 { pt3dadd( 325.389, 363.913, 73.8713, 0.4306 ) }
    dend_9 { pt3dadd( 325.258, 362.801, 74.4416, 0.391 ) }
    dend_9 { pt3dadd( 325.453, 361.692, 74.9311, 0.4162 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_9 { pt3dadd( 325.585, 360.568, 75.3444, 0.4386 ) }
    dend_9 { pt3dadd( 325.435, 359.444, 75.7056, 0.3704 ) }
    dend_9 { pt3dadd( 325.22, 358.328, 76.0427, 0.3212 ) }
    dend_9 { pt3dadd( 324.91, 357.236, 76.3694, 0.308 ) }
    dend_9 { pt3dadd( 324.531, 356.165, 76.7024, 0.3612 ) }
    dend_9 { pt3dadd( 323.997, 355.165, 77.0675, 0.3126 ) }
    dend_9 { pt3dadd( 323.77, 354.053, 77.4172, 0.2538 ) }
    dend_9 { pt3dadd( 323.291, 353.042, 77.9957, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 8/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 339.42, 415.89, 42.2988, 0.6784 ) }
    dend_5 { pt3dadd( 339.66, 415.393, 42.4906, 0.6918 ) }
    dend_5 { pt3dadd( 339.895, 414.289, 42.812, 0.6034 ) }
    dend_5 { pt3dadd( 340.009, 413.16, 43.1416, 0.4404 ) }
    dend_5 { pt3dadd( 340.136, 412.031, 43.4826, 0.3576 ) }
    dend_5 { pt3dadd( 340.359, 410.918, 43.8113, 0.3606 ) }
    dend_5 { pt3dadd( 340.632, 409.814, 44.1104, 0.4184 ) }
    dend_5 { pt3dadd( 340.898, 408.707, 44.3696, 0.5784 ) }
    dend_5 { pt3dadd( 341.132, 407.59, 44.5875, 0.6558 ) }
    dend_5 { pt3dadd( 341.405, 406.483, 44.7754, 0.7284 ) }
    dend_5 { pt3dadd( 341.558, 405.352, 44.9548, 0.7826 ) }
    dend_5 { pt3dadd( 341.609, 404.213, 45.141, 0.6668 ) }
    dend_5 { pt3dadd( 341.651, 403.072, 45.3407, 0.6262 ) }
    dend_5 { pt3dadd( 341.705, 401.933, 45.5557, 0.6802 ) }
    dend_5 { pt3dadd( 341.875, 400.807, 45.789, 0.771 ) }
    dend_5 { pt3dadd( 342.2, 399.717, 46.0449, 0.6842 ) }
    dend_5 { pt3dadd( 342.555, 398.636, 46.324, 0.5476 ) }
    dend_5 { pt3dadd( 342.88, 397.546, 46.6242, 0.507 ) }
    dend_5 { pt3dadd( 343.202, 396.456, 46.9375, 0.6586 ) }
    dend_5 { pt3dadd( 343.384, 395.336, 47.2464, 0.8348 ) }
    dend_5 { pt3dadd( 343.373, 394.201, 47.5513, 0.8672 ) }
    dend_5 { pt3dadd( 343.055, 393.116, 47.8548, 0.8288 ) }
    dend_5 { pt3dadd( 342.74, 392.024, 48.1645, 0.7782 ) }
    dend_5 { pt3dadd( 342.587, 390.899, 48.4929, 0.7392 ) }
    dend_5 { pt3dadd( 342.483, 389.769, 48.8342, 0.6296 ) }
    dend_5 { pt3dadd( 342.368, 388.638, 49.1694, 0.6446 ) }
    dend_5 { pt3dadd( 342.244, 387.509, 49.4796, 0.7898 ) }
    dend_5 { pt3dadd( 342.078, 386.383, 49.7591, 0.884 ) }
    dend_5 { pt3dadd( 341.827, 385.272, 50.0144, 0.7608 ) }
    dend_5 { pt3dadd( 341.65, 384.145, 50.2121, 0.7998 ) }
    dend_5 { pt3dadd( 341.609, 383.004, 50.3401, 0.796 ) }
    dend_5 { pt3dadd( 341.573, 381.862, 50.4185, 0.7848 ) }
    dend_5 { pt3dadd( 341.436, 380.727, 50.4672, 0.6912 ) }
    dend_5 { pt3dadd( 341.193, 379.609, 50.4986, 0.6738 ) }
    dend_5 { pt3dadd( 340.971, 378.487, 50.5215, 0.6428 ) }
    dend_5 { pt3dadd( 340.803, 377.355, 50.5434, 0.5058 ) }
    dend_5 { pt3dadd( 340.57, 376.236, 50.5711, 0.4086 ) }
    dend_5 { pt3dadd( 340.231, 375.144, 50.6148, 0.427 ) }
    dend_5 { pt3dadd( 339.948, 374.036, 50.6892, 0.4434 ) }
    dend_5 { pt3dadd( 339.818, 372.903, 50.8088, 0.4852 ) }
    dend_5 { pt3dadd( 339.719, 371.766, 50.9835, 0.6764 ) }
    dend_5 { pt3dadd( 339.444, 370.661, 51.2151, 0.7074 ) }
    dend_5 { pt3dadd( 339.084, 369.582, 51.4956, 0.7712 ) }
    dend_5 { pt3dadd( 338.913, 368.46, 51.7972, 0.6204 ) }
    dend_5 { pt3dadd( 338.896, 367.322, 52.0864, 0.6304 ) }
    dend_5 { pt3dadd( 338.808, 366.188, 52.3494, 0.5456 ) }
    dend_5 { pt3dadd( 338.584, 365.07, 52.5784, 0.6526 ) }
    dend_5 { pt3dadd( 338.418, 363.941, 52.7652, 0.5438 ) }
    dend_5 { pt3dadd( 338.3, 362.805, 52.9099, 0.5214 ) }
    dend_5 { pt3dadd( 338.146, 361.672, 53.0194, 0.4628 ) }
    dend_5 { pt3dadd( 337.94, 360.548, 53.1014, 0.5602 ) }
    dend_5 { pt3dadd( 337.702, 359.429, 53.1639, 0.5548 ) }
    dend_5 { pt3dadd( 337.533, 358.298, 53.2143, 0.5268 ) }
    dend_5 { pt3dadd( 337.458, 357.157, 53.2627, 0.4384 ) }
    dend_5 { pt3dadd( 337.356, 356.017, 53.3142, 0.451 ) }
    dend_5 { pt3dadd( 337.175, 354.889, 53.3705, 0.435 ) }
    dend_5 { pt3dadd( 336.953, 353.767, 53.4444, 0.491 ) }
    dend_5 { pt3dadd( 336.772, 352.638, 53.5517, 0.5612 ) }
    dend_5 { pt3dadd( 336.765, 351.497, 53.6886, 0.4974 ) }
    dend_5 { pt3dadd( 336.89, 350.363, 53.8401, 0.451 ) }
    dend_5 { pt3dadd( 336.988, 349.224, 53.9893, 0.5368 ) }
    dend_5 { pt3dadd( 337.022, 348.083, 54.1223, 0.5506 ) }
    dend_5 { pt3dadd( 336.956, 346.942, 54.236, 0.5234 ) }
    dend_5 { pt3dadd( 336.746, 345.819, 54.3236, 0.4328 ) }
    dend_5 { pt3dadd( 336.461, 344.711, 54.3794, 0.4374 ) }
    dend_5 { pt3dadd( 336.154, 343.61, 54.4043, 0.4342 ) }
    dend_5 { pt3dadd( 335.825, 342.514, 54.4062, 0.3684 ) }
    dend_5 { pt3dadd( 335.486, 341.421, 54.3948, 0.3092 ) }
    dend_5 { pt3dadd( 335.144, 340.329, 54.3766, 0.2834 ) }
    dend_5 { pt3dadd( 334.78, 339.244, 54.3609, 0.2862 ) }
    dend_5 { pt3dadd( 334.335, 338.192, 54.3547, 0.296 ) }
    dend_5 { pt3dadd( 333.808, 337.176, 54.3603, 0.315 ) }
    dend_5 { pt3dadd( 333.289, 336.156, 54.3785, 0.3456 ) }
    dend_5 { pt3dadd( 332.819, 335.113, 54.4096, 0.4242 ) }
    dend_5 { pt3dadd( 332.385, 334.056, 54.4538, 0.4658 ) }
    dend_5 { pt3dadd( 331.978, 332.986, 54.5132, 0.4276 ) }
    dend_5 { pt3dadd( 331.627, 331.898, 54.5899, 0.437 ) }
    dend_5 { pt3dadd( 331.373, 330.784, 54.6862, 0.4336 ) }
    dend_5 { pt3dadd( 331.141, 329.665, 54.8064, 0.367 ) }
    dend_5 { pt3dadd( 330.869, 328.556, 54.9578, 0.3068 ) }
    dend_5 { pt3dadd( 330.548, 327.46, 55.1457, 0.279 ) }
    dend_5 { pt3dadd( 330.169, 326.385, 55.3638, 0.278 ) }
    dend_5 { pt3dadd( 329.763, 325.319, 55.6046, 0.281 ) }
    dend_5 { pt3dadd( 329.378, 324.247, 55.8634, 0.2864 ) }
    dend_5 { pt3dadd( 328.978, 323.182, 56.14, 0.2966 ) }
    dend_5 { pt3dadd( 328.461, 322.17, 56.4312, 0.315 ) }
    dend_5 { pt3dadd( 327.846, 321.212, 56.7325, 0.3516 ) }
    dend_5 { pt3dadd( 327.236, 320.254, 57.045, 0.4086 ) }
    dend_5 { pt3dadd( 326.697, 319.255, 57.3843, 0.5668 ) }
    dend_5 { pt3dadd( 326.178, 318.246, 57.7469, 0.6086 ) }
    dend_5 { pt3dadd( 325.706, 317.213, 58.079, 0.6476 ) }
    dend_5 { pt3dadd( 325.333, 316.138, 58.3629, 0.5778 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_5 { pt3dadd( 324.921, 315.075, 58.6099, 0.488 ) }
    dend_5 { pt3dadd( 324.483, 314.023, 58.8482, 0.4984 ) }
    dend_5 { pt3dadd( 324.037, 312.974, 59.0862, 0.5332 ) }
    dend_5 { pt3dadd( 323.624, 311.912, 59.3253, 0.5974 ) }
    dend_5 { pt3dadd( 323.276, 310.827, 59.5652, 0.5076 ) }
    dend_5 { pt3dadd( 322.908, 309.748, 59.8055, 0.4952 ) }
    dend_5 { pt3dadd( 322.356, 308.753, 60.0538, 0.4914 ) }
    dend_5 { pt3dadd( 321.581, 307.924, 60.3308, 0.4664 ) }
    dend_5 { pt3dadd( 320.74, 307.161, 60.6628, 0.5062 ) }
    dend_5 { pt3dadd( 319.915, 306.385, 61.0579, 0.5798 ) }
    dend_5 { pt3dadd( 318.944, 305.822, 61.5622, 0.548 ) }
    dend_5 { pt3dadd( 317.879, 305.501, 62.1922, 0.432 ) }
    dend_5 { pt3dadd( 317.15, 304.652, 62.7819, 0.413 ) }
    dend_5 { pt3dadd( 316.505, 303.733, 63.301, 0.3612 ) }
    dend_5 { pt3dadd( 315.633, 303.011, 63.7218, 0.3528 ) }
    dend_5 { pt3dadd( 314.841, 302.196, 64.0324, 0.3624 ) }
    dend_5 { pt3dadd( 314.128, 301.306, 64.2312, 0.4886 ) }
    dend_5 { pt3dadd( 313.702, 300.245, 64.3406, 0.418 ) }
    dend_5 { pt3dadd( 313.27, 299.186, 64.3966, 0.3984 ) }
    dend_5 { pt3dadd( 312.758, 298.163, 64.421, 0.2796 ) }
    dend_5 { pt3dadd( 312.247, 297.139, 64.4311, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 21/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 339.42, 415.89, 42.2988, 0.6784 ) }
    dend_4 { pt3dadd( 340.488, 415.559, 42.0358, 0.2678 ) }
    dend_4 { pt3dadd( 341.588, 415.251, 41.979, 0.3728 ) }
    dend_4 { pt3dadd( 342.71, 415.031, 41.9745, 0.4884 ) }
    dend_4 { pt3dadd( 343.852, 415.007, 42.0028, 0.6066 ) }
    dend_4 { pt3dadd( 344.987, 415.143, 42.0577, 0.5776 ) }
    dend_4 { pt3dadd( 346.101, 415.401, 42.1207, 0.6226 ) }
    dend_4 { pt3dadd( 347.217, 415.655, 42.1674, 0.7584 ) }
    dend_4 { pt3dadd( 348.357, 415.695, 42.1772, 0.811 ) }
    dend_4 { pt3dadd( 349.46, 415.406, 42.1526, 0.6142 ) }
    dend_4 { pt3dadd( 350.434, 414.812, 42.0902, 0.5106 ) }
    dend_4 { pt3dadd( 351.354, 414.135, 41.9846, 0.4404 ) }
    dend_4 { pt3dadd( 352.341, 413.559, 41.8278, 0.4762 ) }
    dend_4 { pt3dadd( 353.399, 413.134, 41.6147, 0.6388 ) }
    dend_4 { pt3dadd( 354.494, 412.824, 41.3448, 0.753 ) }
    dend_4 { pt3dadd( 355.579, 412.49, 41.0276, 0.827 ) }
    dend_4 { pt3dadd( 356.618, 412.033, 40.6792, 0.6954 ) }
    dend_4 { pt3dadd( 357.706, 411.715, 40.3141, 0.622 ) }
    dend_4 { pt3dadd( 358.835, 411.624, 39.9448, 0.4472 ) }
    dend_4 { pt3dadd( 359.965, 411.517, 39.5903, 0.365 ) }
    dend_4 { pt3dadd( 361.088, 411.34, 39.2664, 0.3424 ) }
    dend_4 { pt3dadd( 362.179, 411.021, 38.9763, 0.3912 ) }
    dend_4 { pt3dadd( 363.229, 410.582, 38.7142, 0.5114 ) }
    dend_4 { pt3dadd( 364.25, 410.075, 38.4714, 0.6134 ) }
    dend_4 { pt3dadd( 365.248, 409.525, 38.239, 0.7412 ) }
    dend_4 { pt3dadd( 366.208, 408.909, 38.0111, 0.8056 ) }
    dend_4 { pt3dadd( 367.118, 408.22, 37.7871, 0.871 ) }
    dend_4 { pt3dadd( 367.968, 407.461, 37.5715, 0.7716 ) }
    dend_4 { pt3dadd( 368.743, 406.623, 37.382, 0.7638 ) }
    dend_4 { pt3dadd( 369.459, 405.733, 37.2397, 0.721 ) }
    dend_4 { pt3dadd( 370.214, 404.875, 37.1622, 0.8224 ) }
    dend_4 { pt3dadd( 371.046, 404.091, 37.1574, 0.7898 ) }
    dend_4 { pt3dadd( 371.87, 403.297, 37.2347, 0.7336 ) }
    dend_4 { pt3dadd( 372.634, 402.448, 37.4058, 0.5578 ) }
    dend_4 { pt3dadd( 373.402, 401.606, 37.6412, 0.5782 ) }
    dend_4 { pt3dadd( 374.174, 400.768, 37.8988, 0.488 ) }
    dend_4 { pt3dadd( 374.814, 399.827, 38.152, 0.547 ) }
    dend_4 { pt3dadd( 375.412, 398.854, 38.3779, 0.4426 ) }
    dend_4 { pt3dadd( 376.075, 397.926, 38.5568, 0.4096 ) }
    dend_4 { pt3dadd( 376.834, 397.071, 38.6758, 0.4504 ) }
    dend_4 { pt3dadd( 377.785, 396.437, 38.7307, 0.4972 ) }
    dend_4 { pt3dadd( 378.772, 395.859, 38.7237, 0.508 ) }
    dend_4 { pt3dadd( 379.734, 395.239, 38.6686, 0.4426 ) }
    dend_4 { pt3dadd( 380.717, 394.657, 38.5784, 0.5028 ) }
    dend_4 { pt3dadd( 381.745, 394.155, 38.4661, 0.4052 ) }
    dend_4 { pt3dadd( 382.819, 393.766, 38.3572, 0.3458 ) }
    dend_4 { pt3dadd( 383.924, 393.47, 38.2802, 0.3126 ) }
    dend_4 { pt3dadd( 384.971, 393.01, 38.2463, 0.34 ) }
    dend_4 { pt3dadd( 385.918, 392.369, 38.2511, 0.416 ) }
    dend_4 { pt3dadd( 386.671, 391.508, 38.285, 0.4394 ) }
    dend_4 { pt3dadd( 387.04, 390.427, 38.3356, 0.3724 ) }
    dend_4 { pt3dadd( 387.26, 389.304, 38.3902, 0.3246 ) }
    dend_4 { pt3dadd( 387.466, 388.179, 38.4392, 0.3142 ) }
    dend_4 { pt3dadd( 387.673, 387.054, 38.481, 0.3728 ) }
    dend_4 { pt3dadd( 387.946, 385.943, 38.5182, 0.3342 ) }
    dend_4 { pt3dadd( 388.279, 384.849, 38.5546, 0.3002 ) }
    dend_4 { pt3dadd( 388.69, 383.781, 38.5952, 0.2748 ) }
    dend_4 { pt3dadd( 389.243, 382.78, 38.6439, 0.2746 ) }
    dend_4 { pt3dadd( 389.808, 381.785, 38.7036, 0.2746 ) }
    dend_4 { pt3dadd( 390.36, 380.784, 38.7764, 0.2746 ) }
    dend_4 { pt3dadd( 390.921, 379.787, 38.8634, 0.2746 ) }
    dend_4 { pt3dadd( 391.518, 378.813, 38.9715, 0.2746 ) }
    dend_4 { pt3dadd( 392.152, 377.862, 39.095, 0.2746 ) }
    dend_4 { pt3dadd( 392.835, 376.945, 39.2193, 0.2746 ) }
    dend_4 { pt3dadd( 393.498, 376.014, 39.3333, 0.2746 ) }
    dend_4 { pt3dadd( 394.129, 375.06, 39.4293, 0.2746 ) }
    dend_4 { pt3dadd( 394.864, 374.185, 39.5041, 0.2746 ) }
    dend_4 { pt3dadd( 395.749, 373.459, 39.557, 0.2746 ) }
    dend_4 { pt3dadd( 396.649, 372.755, 39.5942, 0.2746 ) }
    dend_4 { pt3dadd( 397.564, 372.068, 39.6234, 0.2746 ) }
    dend_4 { pt3dadd( 398.488, 371.393, 39.6502, 0.2746 ) }
    dend_4 { pt3dadd( 399.422, 370.733, 39.6802, 0.2746 ) }
    dend_4 { pt3dadd( 400.31, 370.011, 39.7172, 0.2746 ) }
    dend_4 { pt3dadd( 401.112, 369.195, 39.7642, 0.2746 ) }
    dend_4 { pt3dadd( 401.908, 368.374, 39.8244, 0.2746 ) }
    dend_4 { pt3dadd( 402.703, 367.553, 39.8997, 0.2746 ) }
    dend_4 { pt3dadd( 403.493, 366.726, 39.9935, 0.2746 ) }
    dend_4 { pt3dadd( 404.275, 365.892, 40.1094, 0.2746 ) }
    dend_4 { pt3dadd( 405.015, 365.022, 40.2514, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_4 { pt3dadd( 405.722, 364.125, 40.4197, 0.2746 ) }
    dend_4 { pt3dadd( 406.524, 363.313, 40.6036, 0.2746 ) }
    dend_4 { pt3dadd( 407.367, 362.543, 40.7907, 0.2744 ) }
    dend_4 { pt3dadd( 408.186, 361.748, 40.9811, 0.2744 ) }
    dend_4 { pt3dadd( 408.993, 360.941, 41.1737, 0.2742 ) }
    dend_4 { pt3dadd( 409.735, 360.074, 41.3504, 0.2736 ) }
    dend_4 { pt3dadd( 410.475, 359.203, 41.4996, 0.2728 ) }
    dend_4 { pt3dadd( 410.929, 358.155, 41.6186, 0.2712 ) }
    dend_4 { pt3dadd( 411.382, 357.105, 41.7068, 0.2684 ) }
    dend_4 { pt3dadd( 411.495, 355.967, 41.7642, 0.2626 ) }
    dend_4 { pt3dadd( 411.552, 354.824, 41.7967, 0.2542 ) }
    dend_4 { pt3dadd( 411.598, 353.681, 41.8135, 0.2288 ) }
    dend_4 { pt3dadd( 411.598, 352.537, 41.8236, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_35, dend_28, dend_27, dend_20, dend_19, dend_0, dend_43, dend_36, dend_32, dend_29, dend_24, dend_21, dend_16, dend_11, dend_1, dend_45, dend_44, dend_40, dend_37, dend_34, dend_33, dend_31, dend_30, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_12, dend_6, dend_2, dend_47, dend_46, dend_42, dend_41, dend_39, dend_38, dend_14, dend_13, dend_8, dend_7, dend_3, dend_10, dend_9, dend_5, dend_4]}
    dend = new SectionList()
    dend_35 dend.append()
    dend_28 dend.append()
    dend_27 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_0 dend.append()
    dend_43 dend.append()
    dend_36 dend.append()
    dend_32 dend.append()
    dend_29 dend.append()
    dend_24 dend.append()
    dend_21 dend.append()
    dend_16 dend.append()
    dend_11 dend.append()
    dend_1 dend.append()
    dend_45 dend.append()
    dend_44 dend.append()
    dend_40 dend.append()
    dend_37 dend.append()
    dend_34 dend.append()
    dend_33 dend.append()
    dend_31 dend.append()
    dend_30 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_23 dend.append()
    dend_22 dend.append()
    dend_18 dend.append()
    dend_17 dend.append()
    dend_15 dend.append()
    dend_12 dend.append()
    dend_6 dend.append()
    dend_2 dend.append()
    dend_47 dend.append()
    dend_46 dend.append()
    dend_42 dend.append()
    dend_41 dend.append()
    dend_39 dend.append()
    dend_38 dend.append()
    dend_14 dend.append()
    dend_13 dend.append()
    dend_8 dend.append()
    dend_7 dend.append()
    dend_3 dend.append()
    dend_10 dend.append()
    dend_9 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_4305, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_4305 = new SectionList()
    soma_0 OneSecGrp_SectionRef_4305.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, dend_0, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_1, dend_1, dend_1, dend_1, dend_1, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 0.76334894  // units: uF/cm2
    forsec axon cm = 0.76334894  // units: uF/cm2
    forsec dend cm = 0.76334894  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 278.35275  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 6.069486E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.04226754  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 5.4815485E-10  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.2632433  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.39675176  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.09037042  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 8.570881E-6  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.062897444  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 1.0202261E-7  // units: S cm-2
        e_pas_nml2 = -88.83443  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 8.0578314E-4  // units: S cm-2
        e_pas_nml2 = -88.83443  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 6.305873E-5  // units: S cm-2
        e_pas_nml2 = -88.83443  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 2.357391E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.007846445  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_485694403
    forsec soma {
        insert CaDynamics_485694403
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_44 nseg = 7
    dend_40 nseg = 3
    dend_34 nseg = 3
    dend_31 nseg = 7
    dend_30 nseg = 3
    dend_26 nseg = 5
    dend_25 nseg = 3
    dend_23 nseg = 3
    dend_22 nseg = 3
    dend_18 nseg = 7
    dend_17 nseg = 3
    dend_12 nseg = 3
    dend_47 nseg = 3
    dend_46 nseg = 3
    dend_42 nseg = 5
    dend_41 nseg = 5
    dend_39 nseg = 7
    dend_38 nseg = 3
    dend_14 nseg = 3
    dend_13 nseg = 3
    dend_7 nseg = 11
    dend_9 nseg = 3
    dend_5 nseg = 7
    dend_4 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_485694403


