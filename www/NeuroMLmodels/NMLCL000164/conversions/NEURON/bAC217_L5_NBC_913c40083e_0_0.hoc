// Cell: bAC217_L5_NBC_913c40083e_0_0
/*
{
  "id" : "bAC217_L5_NBC_913c40083e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.91165, -15.504, 0.0, 2.36095", "1.69225, -14.164, 0.0, 3.77272", "1.47285, -12.824, 0.0, 5.64735", "1.25345, -11.484, 0.0, 7.11092", "1.03406, -10.144, 0.0, 8.31603", "0.814659, -8.80403, 0.0, 9.51462", "0.595262, -7.46404, 0.0, 10.3186", "0.375865, -6.12406, 0.0, 10.9463", "0.156467, -4.78407, 0.0, 11.2263", "-0.0629298, -3.44408, 0.0, 11.5062", "-0.282327, -2.1041, 0.0, 11.5148", "-0.501724, -0.76411, 0.0, 11.4563", "-0.721122, 0.575877, 0.0, 12.0569", "-0.940519, 1.91586, 0.0, 12.3516", "-1.15992, 3.25585, 0.0, 11.8398", "-1.37931, 4.59584, 0.0, 10.9681", "-1.59871, 5.93582, 0.0, 9.93554", "-1.81811, 7.27581, 0.0, 8.23546", "-2.03751, 8.6158, 0.0, 6.93545", "-2.2569, 9.95578, 0.0, 5.0025", "-2.4763, 11.2958, 0.0, 3.14572" ]
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "2.49262, -15.4467, -20.89, 1.66", "3.92691, -25.6285, -23.4744, 1.66", "5.13463, -34.2019, -25.6506, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000037708019813
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-8.31738, 1.91933, -1.78, 2.49", "-9.95378, 2.413, -1.62074, 2.49", "-14.3287, 3.73286, -1.19493, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000037708019813
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.21262, 10.6023, 2.62, 1.94", "6.67818, 14.5589, 3.09416, 1.94", "10.6998, 18.1222, 3.52119, 1.66", "13.9449, 20.9975, 3.86576, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000037708019813
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.4763, 11.2958, 0.0, 0.55", "-4.89999, 26.0987, 0.0, 0.55", "-7.32368, 40.9016, 0.0, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "5.13463, -34.2019, -25.6506, 1.66", "5.98903, -36.6183, -17.1282, 1.66" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "5.13463, -34.2019, -25.6506, 0.83", "8.26651, -38.1795, -33.415, 0.83", "9.31627, -39.5127, -36.0176, 0.83" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-14.3287, 3.73286, -1.19493, 1.66", "-16.2812, 5.0063, 0.563609, 1.66", "-19.0539, 6.81477, 3.06098, 1.38", "-21.1284, 8.1678, 4.92943, 1.38" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-14.3287, 3.73286, -1.19493, 0.83", "-21.7963, 3.53819, -7.568, 0.83", "-24.2944, 3.52074, -9.45599, 0.83", "-27.7429, 3.57514, -11.7442, 0.83", "-30.0278, 3.65637, -13.0779, 0.83", "-31.9309, 3.75598, -14.0419, 0.83", "-33.3908, 3.87984, -14.705, 0.83", "-34.8139, 4.11076, -14.9832, 0.55", "-36.2897, 4.44158, -15.1775, 0.83", "-37.8213, 4.92048, -15.2836, 0.55", "-39.3731, 5.43612, -15.4377, 0.83", "-41.9962, 6.34053, -15.7397, 0.55", "-44.5865, 7.2784, -15.9454, 0.83", "-46.9441, 8.16415, -16.0448, 0.83", "-49.1243, 8.97526, -16.0425, 0.55", "-52.8988, 10.3399, -15.7153, 0.55", "-53.9406, 10.6971, -15.5335, 0.55", "-56.5066, 11.4659, -14.7991, 0.83", "-58.0803, 11.9074, -14.2653, 0.55", "-60.4683, 12.4471, -13.4311, 0.83", "-62.6486, 12.9005, -12.6922, 0.55", "-65.0532, 13.3972, -11.9768, 1.11", "-69.7416, 14.3728, -11.3222, 0.55", "-72.2965, 14.9366, -11.3436, 0.55", "-74.508, 15.4149, -11.5809, 0.55", "-77.4386, 16.0905, -12.4574, 0.55", "-79.4468, 16.5746, -13.3497, 0.55", "-84.1734, 17.7435, -15.8857, 0.55", "-86.3331, 18.3461, -17.0903, 0.83", "-88.003, 18.8552, -17.9011, 0.83", "-93.0468, 20.6183, -19.8273, 0.28", "-94.7991, 21.2598, -20.2689, 0.55", "-97.7916, 22.4395, -20.7113, 0.55", "-101.122, 23.8329, -20.7274, 0.28", "-103.215, 24.8072, -20.6088, 0.55", "-105.023, 25.7358, -20.374, 0.28", "-105.996, 26.2574, -20.2271, 0.83", "-108.035, 27.3986, -20.0734, 0.28", "-108.732, 27.7703, -20.0734, 0.83", "-111.789, 29.2687, -20.2708, 0.28", "-114.062, 30.2069, -20.578, 0.83", "-117.715, 31.465, -21.15, 0.28", "-119.68, 32.0501, -21.4762, 0.55", "-124.34, 33.3199, -22.2579, 0.28", "-126.527, 33.7872, -22.5783, 0.55", "-133.265, 34.8936, -23.3983, 0.28", "-136.671, 35.3012, -23.7468, 0.55", "-139.61, 35.5565, -23.973, 0.28", "-142.33, 35.7055, -24.1825, 0.55", "-151.855, 35.9829, -24.6909, 0.28", "-153.832, 35.9913, -24.7068, 0.83", "-157.177, 35.9168, -24.5768, 0.28", "-157.878, 35.8797, -24.5078, 0.55", "-160.114, 35.7751, -24.1889, 0.28", "-162.004, 35.712, -23.8628, 0.83", "-166.699, 35.8819, -22.948, 0.28", "-169.165, 36.0981, -22.4277, 0.83", "-176.945, 37.3667, -21.0805, 0.28", "-182.668, 38.6495, -20.2398, 0.28", "-183.807, 38.9818, -20.1002, 0.83", "-188.045, 40.4216, -19.9552, 0.28", "-189.938, 41.1944, -19.9964, 0.83", "-195.397, 43.7265, -20.9773, 0.28", "-196.886, 44.4827, -21.5263, 0.55", "-198.063, 45.0666, -22.0624, 0.55", "-203.168, 47.385, -24.6388, 0.28", "-205.077, 48.0985, -25.7575, 0.55", "-210.247, 49.7276, -28.9893, 0.28", "-212.844, 50.2276, -30.4236, 0.55", "-222.064, 51.7845, -32.3216, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "13.9449, 20.9975, 3.86576, 1.38", "16.2026, 22.8336, 3.70228, 1.38", "18.1786, 24.4406, 3.5592, 1.11", "19.9469, 25.8787, 3.43116, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "13.9449, 20.9975, 3.86576, 0.83", "19.5961, 22.7897, 4.40418, 0.83", "23.7136, 24.2171, 5.33169, 0.83", "25.5732, 24.9163, 5.95688, 0.83", "27.8057, 25.836, 6.86646, 0.83", "30.2281, 26.8965, 7.99082, 0.83", "33.6784, 28.4503, 9.7475, 1.11", "35.4874, 29.3155, 10.9894, 0.83", "37.2114, 30.2113, 12.2676, 1.11", "38.3095, 30.8123, 13.0986, 0.55", "39.362, 31.3672, 13.9211, 0.83", "41.0665, 32.2103, 15.2681, 0.28", "42.2168, 32.684, 16.157, 0.55", "43.5951, 33.1226, 17.158, 0.28", "47.2552, 34.0519, 19.7359, 0.55", "48.7785, 34.3594, 20.7825, 0.83", "50.8144, 34.6994, 22.2076, 0.55", "52.187, 34.8783, 23.2406, 0.83", "54.5719, 35.0894, 25.2531, 0.55", "56.9298, 35.2236, 27.339, 0.83", "59.0102, 35.1945, 29.3338, 0.55", "60.6212, 35.1007, 30.9374, 0.55", "62.5035, 34.9163, 32.8315, 0.83", "65.0829, 34.5716, 35.3935, 0.55", "66.2908, 34.3668, 36.5824, 1.38", "71.1132, 33.4965, 41.057, 0.55", "72.4725, 33.2684, 42.2146, 0.55", "73.9388, 33.0572, 43.2545, 1.11", "76.9968, 32.6834, 44.9454, 0.28", "77.7617, 32.5763, 45.2622, 0.83", "79.5289, 32.2703, 45.8485, 0.28", "80.6076, 32.0512, 46.0493, 1.11", "81.9855, 31.6407, 46.3078, 0.28", "82.8942, 31.2674, 46.5043, 0.83", "86.1286, 29.5726, 47.2153, 0.28", "87.7249, 28.6014, 47.6827, 0.28", "88.7291, 27.8968, 48.0758, 1.11", "89.5659, 27.2969, 48.5319, 1.11", "90.7751, 26.4753, 49.3327, 0.28", "91.5005, 26.045, 49.8637, 0.83", "93.2713, 25.1778, 51.1481, 0.28", "94.8033, 24.5858, 52.2527, 0.83", "97.5949, 23.6909, 54.2646, 0.28", "99.2289, 23.2583, 55.3722, 1.11", "101.518, 22.7633, 56.8377, 0.28", "102.982, 22.5097, 57.753, 0.83", "107.003, 22.0013, 60.0865, 0.28", "107.364, 21.9659, 60.2843, 0.83", "109.885, 21.7496, 61.5117, 0.55", "112.092, 21.5482, 62.5258, 0.28", "114.283, 21.3242, 63.478, 1.38", "115.948, 21.121, 64.1779, 0.83", "120.195, 20.5317, 65.7359, 0.28", "122.363, 20.2174, 66.5204, 1.11", "125.362, 19.7656, 67.5704, 0.28", "126.148, 19.643, 67.8427, 1.11", "128.198, 19.3476, 68.4494, 0.28", "129.539, 19.1894, 68.8656, 1.11", "132.487, 18.986, 69.9036, 0.28", "133.043, 18.9795, 70.1451, 0.55", "135.544, 19.1397, 71.3018, 0.28", "138.271, 19.5397, 72.7386, 0.83", "140.308, 20.0317, 73.9089, 0.28", "141.995, 20.5476, 75.1008, 0.83", "144.379, 21.3708, 77.1728, 0.28", "145.377, 21.7391, 78.1104, 0.55", "147.89, 22.751, 80.7311, 0.28", "148.85, 23.1452, 81.86, 0.55", "151.465, 24.2683, 85.0201, 0.28", "152.96, 24.9116, 86.8605, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.32368, 40.9016, 0.0, 0.55", "-9.74737, 55.7045, 0.0, 0.55", "-12.1711, 70.5074, 0.0, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "5.98903, -36.6183, -17.1282, 0.55", "5.96036, -36.7331, -17.13, 0.55", "4.73777, -42.1683, -16.9549, 0.55", "3.5756, -48.4885, -16.3197, 0.55", "3.05676, -51.7311, -15.8698, 0.55", "2.72279, -53.6393, -15.5185, 0.55", "2.14459, -56.8975, -14.9431, 0.55", "1.11917, -62.682, -13.6358, 0.55", "0.275531, -68.2959, -12.6627, 0.55", "0.0293681, -70.3099, -12.4595, 0.28", "-0.630054, -77.0873, -12.2014, 0.55", "-0.962123, -81.0027, -12.2587, 0.55", "-1.29666, -84.958, -12.5675, 0.55", "-2.16001, -96.3389, -14.4795, 0.28", "-2.33052, -98.6233, -15.0475, 0.55", "-2.44248, -100.079, -15.4334, 0.55", "-2.62099, -102.628, -16.1617, 0.28", "-2.68306, -103.126, -16.2645, 0.55", "-3.16877, -105.949, -16.9477, 0.28", "-3.71049, -108.415, -17.3154, 0.55", "-4.60158, -112.848, -18.0049, 0.28", "-5.25511, -116.668, -18.4911, 0.55", "-5.7311, -120.438, -18.8647, 0.28", "-6.32122, -126.483, -19.2397, 0.83", "-6.65629, -131.468, -19.437, 0.55", "-6.76696, -134.183, -19.4867, 0.83", "-6.85285, -137.179, -19.4075, 0.28", "-6.9175, -140.843, -19.0677, 0.83", "-6.95582, -144.917, -18.3809, 0.28", "-7.00617, -146.867, -17.8328, 0.83", "-7.23898, -151.752, -16.3425, 0.28", "-7.45912, -154.952, -15.4108, 0.83", "-7.76916, -158.828, -14.2424, 0.28", "-8.1167, -163.251, -12.8402, 0.83", "-8.86526, -172.548, -9.68197, 0.28", "-9.11317, -176.81, -8.11731, 0.83", "-9.41733, -184.689, -5.14859, 0.28", "-9.57356, -189.046, -3.5956, 0.83", "-9.8228, -194.902, -1.54395, 0.28", "-9.88808, -197.936, -0.571281, 0.83", "-9.71768, -214.646, 4.24745, 0.28", "-9.54741, -219.069, 5.43252, 0.83", "-8.79288, -231.354, 8.54391, 0.28", "-8.54556, -234.76, 9.33113, 0.83", "-7.95597, -241.805, 10.7708, 0.28", "-7.50636, -246.346, 11.5026, 0.83", "-6.65124, -253.536, 12.0457, 0.28", "-6.38428, -255.145, 12.1108, 0.83" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "5.98903, -36.6183, -17.1282, 0.55", "6.23721, -46.883, -23.0099, 0.55", "6.24581, -51.8496, -25.4734, 0.55", "6.23455, -54.175, -26.4238, 0.55", "6.07999, -58.7662, -27.6839, 0.55", "5.788, -62.7025, -28.189, 0.55", "5.40782, -66.4473, -28.1338, 0.55", "5.02518, -68.8291, -27.285, 0.28", "4.51613, -72.1845, -25.3537, 0.55", "3.75388, -77.1494, -21.7652, 0.55", "3.13196, -81.4963, -18.5373, 0.55", "2.71041, -84.7123, -15.9925, 0.28", "2.30149, -87.2304, -13.8389, 0.55", "1.14618, -93.7942, -8.0684, 0.28", "0.091937, -98.918, -3.44786, 0.83", "-1.01847, -103.945, 1.10591, 0.28", "-2.41186, -109.508, 6.06011, 0.83", "-3.8554, -114.339, 10.4826, 0.28", "-4.67511, -116.674, 12.7655, 0.55", "-6.36419, -120.815, 17.2286, 0.28", "-7.34771, -123.035, 19.9765, 0.83", "-7.96728, -124.323, 21.8175, 0.83", "-10.5213, -130.017, 29.8798, 0.28", "-11.7465, -132.849, 33.897, 0.55", "-13.0166, -135.711, 38.0023, 0.28", "-15.246, -140.187, 44.7928, 0.83", "-18.1232, -145.453, 52.9528, 0.28", "-19.1576, -147.262, 55.4786, 0.83", "-21.6292, -151.332, 60.6072, 0.28", "-23.6324, -154.579, 64.1599, 0.83", "-31.2557, -166.855, 76.1211, 0.28", "-32.6065, -169.007, 77.981, 0.83", "-38.6315, -178.477, 85.4466, 0.28", "-40.5689, -181.441, 87.6895, 0.55", "-43.8687, -186.61, 91.1917, 0.28", "-44.9699, -188.473, 92.3085, 0.83", "-46.2585, -190.929, 93.4953, 0.28", "-46.8034, -192.033, 94.1294, 0.55", "-48.0405, -194.654, 96.0466, 0.28", "-48.6394, -196.022, 96.9951, 0.83", "-51.4352, -202.9, 101.484, 0.28", "-51.9597, -204.226, 102.286, 0.83", "-53.9704, -209.21, 105.147, 0.28", "-55.1462, -212.076, 106.697, 0.83", "-56.4059, -215.143, 108.259, 0.28", "-57.646, -217.961, 109.647, 0.55", "-59.9894, -223.053, 111.959, 0.28", "-61.3104, -226.043, 113.342, 0.83", "-63.2181, -230.635, 115.287, 0.28", "-63.8603, -232.358, 115.956, 0.55", "-64.9051, -235.399, 117.08, 0.28", "-65.6059, -237.755, 117.845, 0.55", "-67.8058, -246.302, 120.458, 0.28", "-68.6497, -250.18, 121.589, 0.83", "-69.1261, -252.73, 122.275, 0.28", "-69.381, -254.345, 122.673, 0.55", "-69.8121, -257.938, 123.437, 0.28", "-70.185, -261.795, 124.097, 0.55" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "9.31627, -39.5127, -36.0176, 0.83", "9.24709, -40.9885, -34.6134, 0.83", "9.14591, -41.7974, -33.5939, 0.28", "8.96466, -42.7051, -32.344, 0.55", "8.85788, -43.2386, -31.5864, 0.28", "8.50898, -44.7588, -29.1878, 0.83", "8.1331, -46.4811, -26.4653, 0.28", "7.63162, -48.3808, -22.7246, 0.83", "7.18103, -49.8719, -19.2917, 0.28", "6.91073, -50.7251, -17.2424, 0.83", "6.0098, -53.3341, -10.7452, 0.28", "5.82477, -53.8475, -9.4149, 0.55", "4.56433, -57.0473, -0.40166, 0.28", "3.9704, -58.5825, 4.48429, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "9.31627, -39.5127, -36.0176, 0.83", "9.31416, -39.7733, -36.1875, 0.83", "9.328, -41.7291, -37.7502, 0.83", "9.40846, -43.9892, -39.5184, 1.11", "9.55941, -46.9471, -41.7356, 0.83", "9.68835, -49.4737, -43.6294, 0.83", "10.1882, -59.269, -50.9717, 0.55", "10.3322, -61.5458, -52.8531, 0.55", "10.4844, -63.4268, -54.7, 0.55", "10.5713, -64.3994, -55.8546, 0.55" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-21.1284, 8.1678, 4.92943, 1.11", "-26.2679, 11.6277, 4.46927, 1.11", "-28.6727, 13.2466, 4.25395, 1.11", "-30.7605, 14.6521, 4.06703, 0.83", "-33.0042, 16.1625, 3.86614, 0.83", "-34.8755, 17.4223, 3.69859, 1.11" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-21.1284, 8.1678, 4.92943, 0.83", "-25.6384, 10.5888, 5.47051, 0.83", "-27.3541, 11.5099, 5.67636, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "19.9469, 25.8787, 3.43116, 1.11", "24.5869, 29.9992, 2.11904, 1.11", "26.4883, 31.6877, 1.58136, 1.11", "27.9338, 32.9713, 1.17259, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "19.9469, 25.8787, 3.43116, 1.11", "20.9295, 31.8517, 2.91337, 1.11", "21.5819, 34.2298, 2.85193, 0.83", "22.031, 35.523, 2.89172, 0.83", "22.9635, 37.9292, 2.96346, 0.83", "23.9658, 40.256, 3.04779, 0.83", "24.9054, 42.2872, 3.11865, 1.38", "26.5213, 45.4556, 3.42432, 1.38", "28.3103, 48.7736, 3.65269, 0.83", "29.3981, 50.7792, 3.76059, 0.83", "30.3136, 52.472, 3.86327, 1.11", "31.1263, 54.0364, 3.94111, 0.83", "31.612, 55.1111, 4.02237, 0.83", "32.4374, 57.1779, 4.3743, 1.38", "33.1787, 59.1338, 4.75391, 0.83", "34.0103, 61.47, 5.28463, 1.38", "35.7482, 66.7181, 6.55765, 1.11", "36.4923, 68.9804, 7.1674, 1.38", "37.9476, 73.1579, 8.38264, 1.38" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "10.5713, -64.3994, -55.8546, 0.55", "8.94863, -66.7678, -55.5287, 0.55", "7.60521, -68.5588, -54.7012, 0.55", "6.89645, -69.4615, -54.2252, 0.55", "6.03492, -70.5815, -53.6642, 0.55", "3.97, -73.4866, -52.1061, 0.55", "0.934507, -77.5925, -49.9263, 0.55", "-2.47347, -82.4883, -47.5822, 0.55", "-4.43925, -85.328, -46.5389, 0.55", "-6.54019, -88.3756, -45.7168, 0.55", "-10.2356, -93.6175, -44.4804, 0.55", "-13.5688, -98.4373, -43.5343, 0.55", "-16.2301, -102.609, -42.9666, 0.55", "-19.5783, -107.885, -42.4737, 0.55", "-23.1383, -113.562, -41.8333, 0.55", "-24.8509, -116.232, -41.4592, 0.55", "-27.7726, -120.651, -40.7574, 0.55", "-32.4165, -127.62, -39.2559, 0.55", "-36.0505, -132.834, -37.7979, 0.55", "-38.137, -135.835, -36.7977, 0.55", "-40.2001, -138.705, -35.8517, 0.55", "-42.8875, -142.594, -34.9515, 0.83", "-44.5222, -144.955, -34.5209, 0.55", "-46.8554, -148.55, -34.0618, 0.83", "-48.3955, -150.979, -33.9229, 0.28", "-50.2397, -153.775, -33.9501, 0.83", "-56.7887, -163.507, -34.4271, 0.28", "-58.8565, -166.486, -34.6101, 0.55", "-61.2999, -169.898, -34.8223, 0.55", "-66.8884, -177.55, -35.0288, 0.55", "-68.9282, -180.404, -35.1269, 0.55", "-72.2675, -185.173, -35.1835, 0.55", "-75.1814, -189.402, -35.0475, 1.38", "-77.3993, -192.73, -34.9078, 0.83", "-83.0471, -201.626, -34.5229, 0.28", "-86.8838, -208.306, -34.0614, 0.55", "-89.2978, -212.732, -33.6955, 0.83", "-90.6622, -215.341, -33.5249, 0.28", "-91.7943, -217.562, -33.4217, 0.55", "-93.5579, -221.012, -33.3375, 0.28", "-95.0099, -223.708, -33.3784, 0.55", "-101.647, -233.491, -30.1394, 0.55", "-108.632, -243.307, -27.8909, 0.55", "-114.078, -253.915, -25.4001, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "10.5713, -64.3994, -55.8546, 0.55", "11.1736, -65.762, -56.905, 0.55", "11.4741, -66.6912, -57.3237, 0.55", "11.8824, -68.4915, -57.8449, 0.55", "12.2302, -70.0248, -58.2887, 0.55", "12.8763, -72.8732, -59.1134, 0.55", "13.1166, -73.9327, -59.4201, 0.55", "13.6052, -76.7613, -60.4997, 0.28", "13.8417, -78.0157, -60.957, 0.55", "14.8277, -82.0835, -63.3699, 0.55", "15.5822, -85.9555, -66.1879, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-34.8755, 17.4223, 3.69859, 0.83", "-36.9038, 17.843, 2.61208, 0.83", "-39.2103, 18.4624, 1.36085, 0.55", "-41.2267, 19.0442, 0.232222, 0.55", "-43.4969, 19.7318, -0.994945, 0.55", "-44.6142, 20.052, -1.55404, 0.55", "-45.6277, 20.299, -2.06912, 0.55", "-47.193, 20.6593, -2.82444, 0.55", "-48.8039, 21.023, -3.58305, 0.55", "-50.1246, 21.3429, -4.09649, 0.55", "-51.59, 21.6629, -4.64058, 0.83", "-54.1095, 22.2575, -5.66685, 0.83", "-55.322, 22.5542, -6.17004, 0.55", "-57.0238, 23.0418, -6.84346, 0.83", "-59.385, 23.8233, -7.81118, 0.55", "-60.7274, 24.3058, -8.45456, 0.55", "-63.064, 25.1963, -9.75534, 0.55", "-63.7596, 25.471, -10.1954, 0.55", "-65.233, 26.0575, -11.3287, 0.55", "-65.8573, 26.3022, -11.8842, 0.55", "-67.39, 26.9156, -13.422, 0.83", "-68.7374, 27.565, -14.8176, 0.55", "-70.0222, 28.3487, -16.3436, 0.83", "-70.8836, 28.9998, -17.4845, 0.55", "-71.0456, 29.1632, -17.7313, 0.83", "-71.5105, 29.7211, -18.5023, 0.55", "-71.8001, 30.1017, -18.9983, 0.83", "-72.7447, 31.3151, -20.5409, 0.55", "-73.6238, 32.4191, -21.9088, 0.55", "-75.2017, 34.2667, -24.3005, 0.55", "-76.1704, 35.3419, -25.7129, 0.55", "-77.6125, 36.8786, -27.8096, 0.28", "-78.2738, 37.5619, -28.7615, 0.28", "-79.2767, 38.5502, -30.2059, 0.28", "-80.8485, 40.1166, -32.4648, 0.28", "-81.9458, 41.1761, -33.9992, 0.28", "-83.4033, 42.6213, -36.0669, 0.28", "-84.4206, 43.6324, -37.6116, 0.28", "-85.233, 44.4339, -38.9586, 0.55", "-89.829, 46.7847, -42.1331, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-34.8755, 17.4223, 3.69859, 0.28", "-38.3153, 18.947, 7.29224, 0.28", "-43.8139, 21.3318, 12.851, 0.28", "-47.125, 22.8133, 16.1613, 0.28", "-50.4759, 24.3375, 19.5294, 0.55", "-54.2516, 26.1032, 23.2995, 0.55", "-56.2356, 27.0261, 25.2085, 0.28", "-57.1886, 27.5052, 26.083, 0.55", "-59.647, 28.827, 27.8582, 0.28", "-62.9715, 30.7617, 29.7832, 0.55", "-63.8731, 31.3505, 30.2456, 0.55", "-65.6545, 32.6227, 31.1163, 0.28", "-70.0323, 36.0171, 33.4022, 0.83", "-73.3876, 38.7499, 35.2518, 0.28", "-74.0876, 39.3591, 35.6651, 0.28", "-76.4283, 41.6523, 37.3026, 0.83", "-78.3838, 43.7329, 38.9826, 0.28", "-79.5825, 45.1045, 40.3024, 0.55", "-81.2194, 46.9972, 42.5629, 0.28", "-82.5357, 48.517, 44.5372, 0.55", "-84.1741, 50.494, 47.2233, 0.28", "-85.1805, 51.7699, 49.043, 0.83", "-86.9399, 54.0547, 52.4557, 0.28", "-88.3083, 55.8376, 55.3112, 0.55", "-88.8196, 56.4701, 56.3758, 0.55", "-90.553, 58.4192, 59.6538, 0.28", "-91.6571, 59.4779, 61.4098, 0.55", "-93.4816, 61.1162, 64.1018, 0.28", "-94.8393, 62.2682, 65.9272, 0.55", "-97.3728, 64.2239, 69.1164, 0.28", "-99.3652, 65.585, 71.5791, 1.11", "-103.34, 68.1474, 76.6775, 0.28", "-104.883, 69.1006, 78.6227, 0.55", "-106.468, 70.054, 80.6465, 0.28", "-107.927, 70.9202, 82.5881, 0.55", "-110.375, 72.356, 86.2452, 0.28", "-114.16, 74.536, 92.6109, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-27.3541, 11.5099, 5.67636, 0.55", "-27.2138, 13.6151, 8.98222, 0.55", "-27.2091, 15.2445, 11.3281, 0.55", "-27.4717, 17.6915, 14.7528, 0.55", "-28.0761, 20.4576, 18.4141, 0.55", "-28.778, 22.5718, 21.068, 0.83", "-29.5416, 24.6045, 23.4429, 0.55", "-30.728, 27.2656, 26.4153, 0.83", "-32.2505, 30.4523, 29.6016, 0.55", "-33.8035, 33.4912, 32.0555, 0.83", "-35.3837, 36.411, 34.0757, 0.55", "-36.4777, 38.2944, 35.383, 0.55", "-37.644, 40.2474, 36.6833, 1.38", "-39.1306, 42.8465, 38.3493, 0.83", "-40.2977, 45.1788, 39.7873, 0.83", "-41.1956, 47.1832, 41.0508, 0.55", "-43.0993, 51.5987, 43.9529, 0.83", "-44.4179, 54.4066, 45.9204, 0.83", "-45.4184, 56.4263, 47.3759, 0.55", "-46.2081, 58.0384, 48.5966, 0.55", "-46.3179, 58.3085, 48.806, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-27.3541, 11.5099, 5.67636, 0.55", "-29.7032, 12.4244, 8.61377, 0.55", "-31.1647, 12.8559, 11.0533, 0.83", "-32.3239, 13.1401, 13.5249, 0.83", "-34.2788, 13.7125, 18.1634, 0.55", "-35.2088, 14.04, 20.5225, 0.83", "-35.8011, 14.2788, 22.0358, 0.55", "-38.6346, 15.6669, 30.3689, 0.83", "-41.0042, 17.1232, 38.2858, 0.55", "-41.6318, 17.5892, 40.5767, 0.55", "-42.5347, 18.395, 43.9605, 0.55", "-42.9297, 18.8302, 45.4908, 0.55", "-43.7669, 20.0872, 49.0407, 0.28", "-44.1022, 20.9567, 50.7129, 1.11", "-44.2601, 21.674, 52.0486, 1.11", "-44.5962, 23.201, 55.626, 0.55", "-44.8749, 24.3869, 58.8071, 0.55", "-45.1696, 25.517, 62.1559, 0.55", "-45.5427, 26.7409, 65.989, 0.55", "-46.5619, 29.7998, 76.5677, 1.11", "-47.5563, 32.9844, 88.1859, 0.55", "-47.7406, 33.6234, 90.5822, 0.55", "-48.045, 34.6601, 94.524, 0.55", "-48.3302, 35.5786, 98.006, 1.11", "-49.0787, 37.8512, 106.405, 0.28", "-49.6154, 39.5562, 112.143, 1.11", "-49.9648, 41.0456, 116.481, 0.28", "-50.0331, 41.3186, 117.236, 0.55", "-50.4174, 42.6334, 120.691, 0.28", "-50.735, 43.4324, 122.618, 1.11", "-51.9175, 45.5829, 127.112, 0.28", "-52.295, 46.193, 128.447, 0.83", "-53.4375, 48.2011, 133.02, 0.28", "-53.631, 48.5953, 133.949, 0.55", "-54.3735, 50.3822, 138.187, 0.28", "-54.7756, 51.4954, 140.951, 1.38", "-56.0444, 55.7645, 151.694, 0.28", "-56.5587, 57.68, 156.774, 1.11", "-56.9057, 59.3136, 161.204, 0.28", "-56.9699, 59.7016, 162.303, 0.55", "-57.1556, 61.9234, 168.925, 0.28", "-57.1915, 62.5742, 170.895, 0.55", "-57.4021, 64.2061, 175.468, 0.28" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "27.9338, 32.9713, 1.17259, 0.55", "28.3214, 33.5104, 0.207184, 0.55", "29.6802, 35.4005, -3.17761, 0.55", "30.6433, 36.7402, -5.57684, 0.55", "31.1766, 37.482, -6.90534, 0.55", "32.3538, 39.1195, -9.83776, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "27.9338, 32.9713, 1.17259, 0.83", "28.9645, 33.633, 1.01038, 0.83", "32.1983, 35.7092, 0.501394, 0.83", "35.8051, 38.0248, -0.0662832, 0.83", "37.326, 39.0013, -0.305675, 0.83", "38.9541, 40.0466, -0.561922, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "37.9476, 73.1579, 8.38264, 1.11", "38.4778, 77.6094, 7.24794, 1.11", "39.0089, 81.6277, 6.46891, 1.11", "39.2689, 83.8934, 6.11977, 1.38", "39.7442, 87.5276, 5.51945, 1.11", "40.3587, 92.2272, 4.74312, 1.38", "40.7107, 94.9187, 4.29851, 1.38", "41.2698, 99.6893, 3.85751, 0.83", "41.7864, 103.875, 3.5877, 0.83", "42.3756, 108.526, 3.22962, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "37.9476, 73.1579, 8.38264, 0.55", "39.7143, 73.5939, 10.2623, 0.55", "42.1104, 74.1438, 12.5239, 0.28", "43.1717, 74.4146, 13.5772, 1.11", "44.8313, 74.9997, 14.8639, 0.55", "48.9037, 76.7293, 17.6332, 0.28", "50.3571, 77.416, 18.5175, 0.55", "57.9075, 81.6379, 22.5149, 0.28", "59.9511, 82.9185, 23.3101, 0.55", "67.8722, 88.0743, 24.894, 0.28", "69.1627, 89.0075, 24.5098, 0.55", "70.1166, 89.7343, 23.8, 0.28", "70.6345, 90.1722, 23.2424, 0.55", "72.8654, 92.3632, 20.1406, 0.28", "73.6669, 93.1667, 18.9986, 0.55", "79.0528, 98.6228, 11.6903, 0.28", "80.1363, 99.7223, 10.1899, 0.55", "81.5857, 101.243, 8.16232, 0.28", "83.0918, 102.885, 6.10082, 1.11", "87.2232, 107.962, 0.750452, 0.28", "88.0034, 109.001, -0.215285, 0.55", "96.27, 114.361, -0.403897, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "15.5822, -85.9555, -66.1879, 0.28", "18.5623, -96.8891, -71.4158, 0.28", "22.3345, -107.674, -76.4884, 0.28", "26.4546, -118.814, -80.3035, 0.28", "30.5315, -130.106, -83.6464, 0.28", "33.3777, -141.886, -86.2987, 0.28", "36.8897, -153.738, -87.4006, 0.28", "42.5722, -164.872, -87.4312, 0.28", "47.5955, -176.214, -88.7251, 0.28", "52.5834, -187.274, -91.7044, 0.28" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "15.5822, -85.9555, -66.1879, 1.11", "15.7484, -93.8822, -69.6348, 0.28", "17.0184, -102.053, -72.09, 0.28", "20.0314, -109.923, -74.0872, 0.28" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-89.829, 46.7847, -42.1331, 0.28", "-95.1582, 49.4236, -46.52, 0.28", "-100.819, 50.8773, -51.1352, 0.28", "-107.065, 52.9755, -54.5767, 0.28" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-89.829, 46.7847, -42.1331, 1.11", "-94.4191, 49.2235, -45.9929, 0.28", "-99.024, 51.5608, -49.9044, 0.28", "-103.611, 53.929, -53.8149, 0.28", "-107.724, 56.713, -57.9206, 0.28", "-112.826, 59.5396, -60.7636, 0.28" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-114.16, 74.536, 92.6109, 0.28", "-116.029, 77.9286, 92.536, 0.28", "-117.446, 80.459, 92.4654, 0.83", "-120.197, 85.6359, 92.4793, 0.28", "-121.261, 87.6396, 92.4945, 0.55", "-123.048, 91.0089, 92.5271, 0.28", "-124.615, 93.8166, 92.8306, 0.83", "-126.973, 97.7209, 93.6677, 0.28", "-128.723, 99.9653, 94.561, 0.55", "-130.263, 101.56, 95.5502, 0.28", "-131.058, 102.31, 96.0843, 0.55", "-138.415, 108.452, 101.406, 0.28", "-139.792, 109.447, 102.442, 0.83", "-146.764, 113.831, 108.139, 0.28", "-148.062, 114.525, 109.191, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-114.16, 74.536, 92.6109, 0.28", "-115.84, 75.2328, 96.2541, 0.28", "-116.41, 75.4899, 97.3857, 0.55", "-117.248, 75.9211, 98.9442, 0.28", "-118.166, 76.6219, 100.268, 0.55", "-123.406, 81.0388, 106.744, 0.28", "-125.133, 82.499, 108.648, 0.55", "-126.226, 83.4801, 109.692, 0.28", "-127.043, 84.2177, 110.408, 1.11", "-132.765, 89.3395, 115.019, 0.28", "-134.492, 90.7432, 116.345, 0.83", "-136.32, 92.0925, 117.676, 0.28", "-137.29, 92.7572, 118.427, 0.55", "-139.691, 94.2312, 120.349, 0.28", "-141.861, 95.4603, 122.2, 0.83", "-147.755, 98.4793, 127.495, 0.28", "-149.126, 99.1743, 128.732, 0.55", "-151.752, 100.519, 131.144, 0.28", "-153.975, 101.653, 133.19, 1.11", "-157.187, 103.282, 136.093, 0.28", "-158.335, 103.865, 137.119, 0.55", "-160.49, 105.019, 139.088, 0.28", "-161.938, 105.817, 140.515, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-46.3179, 58.3085, 48.806, 0.28", "-35.612, 58.0453, 66.4576, 0.28", "-33.3406, 57.9797, 69.9308, 1.11", "-28.6297, 57.7981, 76.5906, 0.28", "-27.2678, 57.7455, 78.3949, 0.83", "-22.815, 57.5526, 84.0539, 0.28", "-20.5045, 57.4526, 86.9903, 0.83", "-17.5313, 57.2398, 89.6533, 0.28", "-14.8364, 57.0167, 91.7003, 0.55", "-10.49, 56.5509, 94.1834, 0.28", "-8.18929, 56.3339, 95.7549, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-46.3179, 58.3085, 48.806, 1.11", "-46.7526, 59.1543, 49.3079, 1.11", "-47.5615, 60.5291, 50.4081, 0.55", "-48.4824, 62.1566, 51.8092, 1.11", "-49.2971, 63.6658, 53.2724, 0.83", "-49.9581, 64.91, 54.5627, 0.55", "-50.5121, 65.9369, 55.6766, 1.11", "-51.8276, 68.3256, 58.4744, 0.55", "-52.1579, 68.9482, 59.2499, 0.55", "-52.9789, 70.5211, 61.2899, 0.55", "-53.4939, 71.559, 62.4874, 1.11", "-53.8849, 72.3955, 63.3361, 0.55", "-54.1528, 73.0289, 63.8924, 0.83", "-54.6296, 74.2452, 64.7912, 0.55", "-54.9329, 74.9748, 65.3046, 0.83", "-56.0017, 77.6429, 66.9399, 1.38", "-56.4698, 78.9036, 67.6803, 0.55", "-56.8207, 79.9122, 68.2639, 0.28", "-57.4159, 81.6121, 69.2942, 1.11" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "32.3538, 39.1195, -9.83776, 0.83", "33.9362, 39.4707, -11.8271, 0.83", "37.0375, 40.2333, -15.2318, 0.55", "42.5311, 41.5892, -20.6227, 0.55", "43.3184, 41.8115, -21.3844, 0.55", "45.626, 42.4832, -23.4574, 0.55", "47.2113, 42.9446, -24.8815, 0.55", "48.3296, 43.2496, -25.8568, 0.55", "50.1597, 43.8166, -27.0804, 0.55", "54.237, 45.2972, -28.8756, 0.55", "56.2292, 46.0549, -29.9199, 0.55", "62.8748, 48.3286, -34.7788, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "32.3538, 39.1195, -9.83776, 0.55", "32.0489, 42.1944, -11.7046, 0.55", "31.8202, 45.5213, -14.2751, 0.55", "31.7273, 47.6624, -16.0678, 0.55", "31.6805, 49.7344, -17.8525, 0.55", "31.6145, 52.9095, -20.5795, 0.55", "31.6152, 54.6913, -22.0823, 0.55", "31.8949, 58.0468, -25.1976, 0.83", "31.9679, 58.9338, -26.0396, 0.28", "32.0382, 59.3847, -26.5192, 0.55", "32.3131, 60.3269, -27.8143, 0.55", "32.6678, 61.0168, -29.1086, 0.55", "33.6062, 63.01, -32.2237, 0.83", "33.197, 69.7816, -40.5864, 0.83", "34.2779, 75.5525, -49.6951, 0.83", "37.0679, 82.868, -57.0496, 0.83", "38.126, 90.3892, -64.6139, 0.83", "40.754, 99.2121, -69.9193, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "38.9541, 40.0466, -0.561922, 0.83", "44.1912, 46.5343, 0.421788, 0.83", "46.0713, 48.9204, 0.261193, 0.83", "48.2403, 51.4411, -0.322082, 0.55", "50.2652, 53.61, -0.929618, 0.55", "52.1124, 55.4468, -1.42765, 0.83", "54.2577, 57.4686, -2.10509, 0.83", "56.2921, 59.4186, -3.17441, 0.28", "59.701, 62.5109, -5.4, 0.28", "60.9286, 63.5213, -6.26692, 1.11", "62.6015, 64.8463, -7.79092, 0.55", "65.478, 67.0804, -10.985, 0.83", "68.4781, 69.4648, -14.5908, 0.55", "71.2766, 71.7578, -18.3888, 0.83", "71.9397, 72.3304, -19.4622, 0.83", "75.3127, 75.4, -25.7317, 0.28", "76.653, 76.6765, -28.6641, 0.83", "84.3133, 83.2364, -34.5615, 0.83", "93.3392, 88.6668, -39.7184, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "38.9541, 40.0466, -0.561922, 0.83", "41.5515, 42.1556, -0.104781, 0.83", "43.2318, 43.5772, 0.453355, 0.83", "44.5824, 44.7246, 0.981672, 0.83", "46.4011, 46.3429, 1.78588, 0.83", "48.5699, 48.2863, 2.85129, 1.11", "50.7296, 50.2019, 3.93175, 0.83", "53.3493, 52.5419, 5.38211, 1.11", "54.7416, 53.7918, 6.21133, 0.55", "56.6924, 55.4694, 7.49471, 0.83", "58.3803, 56.768, 8.63761, 0.83", "60.484, 58.2331, 10.1141, 1.11", "62.2229, 59.3288, 11.3389, 0.55", "63.4729, 60.0848, 12.2363, 0.28", "67.3259, 62.2642, 15.1143, 1.38", "70.5956, 63.9463, 17.56, 0.55", "71.797, 64.5082, 18.4774, 0.83", "73.5064, 65.2764, 19.8356, 0.55", "75.9008, 66.315, 21.7519, 0.28", "77.7788, 67.0861, 23.2529, 1.38", "80.4275, 68.0728, 25.2393, 0.55", "82.3964, 68.7122, 26.7222, 1.38" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "42.3756, 108.526, 3.22962, 1.11", "42.3274, 109.057, 3.19739, 1.11", "42.2642, 110.902, 2.9698, 0.83", "42.3997, 113.085, 2.69636, 0.83", "42.8372, 115.623, 2.43179, 1.11", "43.7685, 119.706, 2.0673, 1.11", "44.1331, 121.152, 1.89166, 0.83", "44.7899, 123.656, 1.50437, 0.83", "45.5528, 126.275, 1.0649, 1.38", "46.3698, 128.839, 0.585995, 1.11", "47.1097, 130.979, 0.17037, 1.11", "48.2307, 133.884, -0.389911, 1.11", "50.0267, 138.848, -1.31884, 1.38", "50.5504, 140.715, -1.66448, 0.55", "50.803, 141.907, -1.94377, 0.83", "50.8857, 142.415, -2.079, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "42.3756, 108.526, 3.22962, 0.55", "42.7759, 110.771, -2.70827, 0.55", "42.8507, 111.259, -3.92218, 0.55", "43.2013, 112.688, -7.03154, 0.83", "43.741, 114.89, -11.8196, 0.55", "44.0468, 116.137, -14.532, 0.83", "44.3608, 117.418, -17.3177, 0.28", "44.3753, 118.073, -18.9193, 0.55", "44.3149, 119.052, -21.2673, 0.55", "43.268, 122.731, -31.3282, 0.55", "41.2655, 126.88, -41.0404, 0.55", "39.8177, 130.377, -51.1215, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "96.27, 114.361, -0.403897, 0.28", "102.277, 118.497, -1.06682, 0.28", "109.131, 121.109, -2.05518, 0.28", "116.05, 122.721, -4.22735, 0.28", "123.136, 124.681, -5.27099, 0.28", "129.488, 127.524, -7.706, 0.28", "134.75, 130.813, -11.6051, 0.28" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "96.27, 114.361, -0.403897, 1.11", "102.335, 118.571, -1.18973, 0.28", "108.045, 123.213, -1.93673, 0.28" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "20.0314, -109.923, -74.0872, 0.28", "21.4102, -118.385, -76.8753, 0.28", "20.854, -126.969, -79.4673, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "20.0314, -109.923, -74.0872, 0.28", "21.5379, -117.657, -76.4378, 0.28", "21.8966, -125.58, -78.4422, 0.28", "22.2513, -133.639, -79.7782, 0.28", "23.2181, -141.625, -81.348, 0.28", "23.3871, -149.225, -84.4021, 0.28", "24.3792, -156.383, -88.3624, 0.28", "25.5598, -163.786, -91.7614, 0.28", "28.0357, -171.062, -94.8305, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-57.4159, 81.6121, 69.2942, 0.55", "-58.7236, 83.7632, 71.4682, 0.55", "-59.6749, 85.3066, 73.2016, 0.55", "-60.7676, 87.2261, 75.3915, 1.11", "-62.0867, 89.6767, 78.3978, 0.55", "-62.6163, 90.6548, 79.7746, 0.28", "-63.622, 92.6277, 82.623, 0.55", "-64.1702, 93.9106, 84.6868, 0.28", "-64.4267, 94.4992, 85.7313, 0.83", "-65.2134, 96.1297, 88.8862, 0.28", "-66.0472, 97.775, 92.1181, 0.28", "-66.4299, 98.4947, 93.5989, 0.83", "-66.9841, 99.4843, 95.6761, 0.28", "-68.1808, 101.604, 100.083, 0.28", "-68.878, 102.816, 102.48, 0.83", "-70.3617, 105.454, 107.308, 0.28", "-70.4333, 105.589, 107.54, 0.55", "-71.1211, 106.904, 109.7, 0.28", "-71.6007, 107.869, 111.042, 0.83", "-72.0419, 108.813, 112.068, 0.28", "-72.1278, 108.999, 112.235, 0.55", "-73.206, 111.226, 113.951, 0.28", "-74.1426, 113.118, 115.391, 1.11", "-75.8399, 116.509, 118.093, 0.28", "-76.481, 117.749, 119.137, 0.55", "-77.2697, 119.278, 120.518, 0.83", "-78.2543, 121.786, 122.429, 0.28", "-78.45, 122.502, 122.87, 0.55", "-78.8356, 125.476, 124.372, 0.28", "-78.8265, 126.895, 124.872, 0.28", "-78.6422, 129.815, 125.771, 1.11", "-77.9424, 136.275, 127.001, 0.28", "-77.7564, 137.31, 127.029, 0.55", "-77.3953, 138.951, 126.894, 0.28", "-77.2241, 139.501, 126.747, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-57.4159, 81.6121, 69.2942, 0.28", "-59.4238, 87.8395, 66.789, 0.28", "-60.4407, 90.4434, 65.8455, 0.28", "-61.0401, 91.8475, 65.3842, 0.28", "-62.044, 94.2051, 64.3843, 0.83", "-63.2458, 97.1822, 63.0373, 0.28", "-63.4396, 97.7847, 62.7125, 0.55", "-64.2625, 100.626, 61.0988, 0.28", "-64.7032, 102.299, 59.987, 0.55", "-65.5434, 106.341, 57.0045, 0.28", "-65.7062, 107.901, 55.7119, 0.83", "-65.5859, 111.961, 52.0271, 0.28", "-65.4945, 112.709, 51.2785, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "40.754, 99.2121, -69.9193, 0.28", "41.7108, 105.694, -76.5194, 0.28", "42.3582, 112.653, -82.5977, 0.28", "41.6358, 120.151, -87.8988, 0.28", "41.1165, 128.259, -92.1362, 0.28", "39.2961, 135.934, -96.8543, 0.28", "35.9883, 142.524, -102.473, 0.28", "34.2551, 150.205, -107.213, 0.28", "33.8112, 157.825, -112.355, 0.28", "34.0354, 165.178, -117.928, 0.28", "32.4597, 172.012, -123.971, 0.28", "30.4394, 177.687, -131.11, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "40.754, 99.2121, -69.9193, 1.11", "42.0157, 103.382, -74.9439, 0.28", "43.5087, 108.704, -78.5314, 0.28", "45.7162, 113.458, -82.6058, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "93.3392, 88.6668, -39.7184, 0.28", "101.18, 94.91, -44.9297, 0.28", "110.371, 99.2251, -50.0911, 0.28", "119.184, 104.028, -55.433, 0.28", "127.493, 108.708, -61.626, 0.28", "135.105, 115.27, -66.7415, 0.28", "141.467, 122.156, -72.9553, 0.28", "148.045, 128.909, -79.1061, 0.28", "153.58, 134.068, -87.5429, 0.28", "159.62, 139.558, -95.3864, 0.28", "165.86, 145.276, -102.89, 0.28", "172.591, 151.162, -109.807, 0.28" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "93.3392, 88.6668, -39.7184, 1.11", "98.9254, 92.8802, -43.266, 0.28", "103.861, 97.7183, -46.8961, 0.28", "108.275, 103.242, -50.0878, 0.28" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "82.3964, 68.7122, 26.7222, 1.11", "85.0812, 69.7746, 28.1546, 1.11", "87.2297, 70.71, 29.1756, 0.55", "88.7842, 71.4513, 29.6481, 0.83", "90.8917, 72.5473, 30.1513, 0.28", "94.5631, 74.5765, 30.8464, 1.38", "99.0033, 77.1335, 31.5527, 0.55", "102.4, 79.0983, 32.1243, 1.38", "107.387, 81.9253, 32.8914, 0.28", "108.645, 82.5899, 33.109, 0.55", "111.749, 84.128, 33.7233, 0.28", "114.494, 85.368, 34.3535, 0.83", "121.499, 88.2606, 36.4147, 0.28", "124.184, 89.2459, 37.4237, 1.11", "128.113, 90.5557, 39.2129, 0.28", "131.251, 91.4974, 40.7205, 0.83", "133.75, 92.1785, 42.0227, 0.28", "135.242, 92.5446, 42.8031, 0.55", "136.572, 92.8396, 43.4677, 0.28", "138.005, 93.1672, 44.1563, 0.83", "140.363, 93.7091, 45.2016, 0.28", "141.689, 93.9671, 45.7925, 0.83", "143.855, 94.3405, 46.7544, 0.28", "145.682, 94.6256, 47.5869, 0.55", "148.627, 95.0457, 48.8485, 0.28", "150.178, 95.2491, 49.5145, 0.83", "153.119, 95.7248, 50.6741, 0.28", "154.507, 95.9759, 51.132, 1.11", "158.933, 96.8942, 52.4151, 0.28", "160.536, 97.2467, 52.7866, 0.28", "163.988, 98.0549, 53.4582, 0.83", "168.822, 99.3603, 54.3449, 0.28", "171.839, 100.493, 55.3017, 0.83", "174.147, 101.61, 56.4643, 0.28", "175.148, 102.215, 57.179, 0.83", "177.108, 103.589, 59.0933, 0.28", "177.909, 104.228, 60.1619, 0.83", "182.688, 108.446, 68.6706, 0.28", "183.538, 109.248, 70.5055, 0.55", "183.968, 109.641, 71.5556, 0.83", "184.936, 110.482, 74.2519, 0.28", "185.759, 111.163, 76.6632, 0.83", "187.073, 112.13, 80.5672, 0.28", "188.135, 112.703, 83.564, 0.83", "190.155, 113.81, 89.5915, 0.28", "191.879, 114.787, 95.1488, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "82.3964, 68.7122, 26.7222, 0.28", "84.2965, 67.3332, 26.4007, 0.28", "85.066, 66.7803, 26.3026, 0.55", "90.4706, 63.0178, 25.9799, 0.28", "92.0703, 61.9568, 26.0056, 1.11", "93.8347, 60.8295, 26.127, 0.28", "94.4288, 60.4596, 26.1984, 0.55", "96.0326, 59.5325, 26.5674, 0.28", "98.1578, 58.3305, 27.1719, 1.66", "100.418, 57.1072, 28.0434, 0.28", "101.009, 56.8065, 28.2594, 0.83", "102.643, 55.9938, 28.8746, 0.28", "103.539, 55.5408, 29.1823, 0.83", "108.416, 52.9779, 30.6921, 0.28", "110.142, 52.0607, 31.2203, 1.11", "113.457, 50.3131, 32.2762, 0.28", "114.5, 49.7644, 32.6394, 0.83", "116.937, 48.508, 33.5692, 0.28", "117.528, 48.2159, 33.8212, 0.83", "119.503, 47.2768, 34.706, 0.28", "120.711, 46.6978, 35.2339, 0.83", "122.283, 45.9714, 35.9478, 0.28", "123.089, 45.6505, 36.3075, 0.83", "131.016, 42.8885, 39.9294, 0.28", "132.193, 42.5255, 40.4509, 0.55", "134.183, 41.9936, 41.2998, 0.28", "136.15, 41.4979, 42.1074, 1.11", "140.876, 40.4707, 44.016, 0.28", "141.966, 40.2869, 44.4819, 0.83", "142.989, 40.2797, 44.9904, 0.28", "143.851, 40.3105, 45.4523, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "50.8857, 142.415, -2.079, 0.55", "51.0593, 143.526, -1.75108, 0.55", "51.7584, 147.314, -0.636026, 0.83", "52.4532, 151.027, 0.464639, 0.55", "52.9877, 155.24, 1.55091, 0.83", "53.2957, 157.771, 2.08484, 0.55", "53.7392, 161.625, 2.82292, 0.83", "54.0116, 163.703, 3.20636, 0.55", "54.4596, 166.541, 3.68032, 1.11", "55.434, 171.494, 3.72751, 1.11", "56.0885, 174.901, 3.15265, 0.55", "56.2729, 175.877, 2.85239, 0.83", "56.6377, 177.417, 2.10061, 0.55", "57.2468, 179.986, 0.554811, 0.83", "59.2689, 188.178, -5.44844, 0.55", "60.281, 192.186, -8.78501, 0.55", "60.703, 194.16, -10.5393, 0.83", "61.5956, 198.852, -14.8849, 0.55", "61.8998, 200.789, -16.7449, 0.83", "62.1866, 203.081, -18.9016, 0.28", "62.1987, 203.544, -19.1721, 0.55", "62.2827, 204.63, -19.6256, 0.28", "62.3749, 205.702, -19.9243, 0.55", "62.573, 207.868, -20.2028, 0.28", "62.8414, 210.191, -20.4753, 0.83", "63.6598, 217.375, -21.1917, 0.28", "63.931, 219.562, -21.4109, 0.83", "64.1891, 221.659, -21.6255, 0.28", "64.3468, 222.82, -21.7419, 0.55", "64.8572, 226.204, -22.0282, 0.28", "65.128, 227.698, -22.152, 0.55", "66.4859, 234.872, -22.5264, 0.28", "66.673, 235.974, -22.5247, 0.28", "67.2378, 239.824, -22.3622, 0.83", "67.6859, 243.419, -22.122, 1.11", "68.0422, 246.59, -21.8066, 1.66", "68.5137, 252.082, -21.2853, 1.38", "68.7064, 255.441, -20.958, 1.11", "68.8398, 258.643, -20.6793, 1.38", "69.0267, 268.425, -20.0648, 0.28", "69.0178, 270.03, -20.0063, 0.55", "69.0053, 273.501, -19.999, 0.28", "69.0232, 274.959, -20.0779, 0.55", "69.0711, 279.796, -20.48, 0.28", "69.196, 284.609, -21.1885, 0.83", "69.4075, 291.064, -22.5039, 0.28", "69.5676, 294.689, -23.5463, 1.11", "69.7624, 298.258, -24.8201, 0.28", "69.9055, 300.12, -25.83, 0.83", "70.2945, 303.891, -28.5783, 0.28", "70.3858, 304.596, -29.1972, 0.83", "70.9956, 308.458, -33.3466, 0.28", "71.1366, 309.469, -34.5423, 1.11", "72.0615, 315.445, -42.2495, 0.28", "72.2978, 316.802, -44.152, 0.83", "71.8038, 328.914, -50.0983, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "50.8857, 142.415, -2.079, 0.83", "52.7345, 145.955, -2.95213, 0.83", "54.6052, 149.532, -4.39868, 0.83", "55.7954, 151.808, -5.31908, 0.55", "56.6887, 153.516, -6.00979, 0.55", "58.458, 156.899, -7.378, 0.55", "59.7806, 159.428, -8.40074, 0.83", "61.7723, 162.9, -10.6476, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "39.8177, 130.377, -51.1215, 0.28", "37.8109, 134.278, -61.1769, 0.28", "34.1832, 139.669, -69.9398, 0.28", "29.331, 146.122, -77.1819, 0.28", "22.4316, 150.529, -84.4414, 0.28", "13.4068, 153.84, -89.7302, 0.28", "4.93359, 156.64, -96.1413, 0.28", "-3.61283, 160.33, -101.929, 0.28" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "39.8177, 130.377, -51.1215, 1.11", "42.5479, 133.936, -60.9936, 0.28", "46.8243, 137.755, -70.1896, 0.28", "52.0352, 140.412, -79.3472, 0.28" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "108.045, 123.213, -1.93673, 0.28", "116.671, 129.974, -3.48866, 0.28", "125.889, 136.166, -3.77202, 0.28" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "108.045, 123.213, -1.93673, 0.28", "113.655, 128.154, -3.45258, 0.28", "119.513, 132.81, -5.02783, 0.28", "124.515, 138.211, -6.92488, 0.28", "129.124, 143.557, -9.79388, 0.28", "134.404, 148.59, -12.0403, 0.28", "139.21, 154.234, -13.624, 0.28" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "61.7723, 162.9, -10.6476, 0.55", "63.85, 165.191, -13.1693, 0.55", "64.9251, 166.298, -14.1889, 0.55", "68.6674, 169.731, -17.2569, 0.55", "70.7056, 171.378, -18.909, 0.55", "72.8702, 173.0, -20.5992, 0.28", "75.7897, 175.111, -22.745, 0.28", "78.0266, 176.603, -24.2171, 0.83", "80.1476, 177.912, -25.4589, 0.83", "83.974, 180.049, -27.2304, 0.28", "85.2291, 180.635, -27.9427, 0.55", "86.9972, 181.416, -29.1465, 0.55", "88.3574, 181.974, -30.2029, 0.55", "89.8742, 182.607, -31.4794, 0.55", "92.0004, 183.53, -33.3096, 0.55", "97.3217, 185.826, -37.9805, 0.55", "98.5816, 186.345, -39.1787, 0.55", "101.697, 187.547, -42.3802, 0.28", "103.491, 188.235, -44.3013, 0.83", "111.342, 191.962, -48.3578, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "61.7723, 162.9, -10.6476, 0.28", "60.7188, 164.684, -11.4293, 0.28", "59.9562, 166.024, -12.08, 0.55", "58.6588, 168.334, -13.2029, 0.28", "57.3666, 170.765, -14.4451, 0.83", "56.4203, 172.683, -15.4565, 0.28", "55.687, 174.295, -16.334, 0.55", "55.2654, 175.285, -16.9098, 0.28", "55.1211, 175.748, -17.2055, 0.83", "54.6939, 177.252, -18.2972, 0.28", "54.5383, 177.864, -18.711, 0.55", "54.2452, 178.991, -19.4396, 0.28", "54.1056, 179.493, -19.7473, 0.55", "53.1359, 182.674, -21.7561, 0.28", "52.556, 184.451, -22.8904, 0.55", "51.8709, 186.272, -24.0115, 0.28", "51.4331, 187.31, -24.6484, 0.55", "49.2848, 196.19, -30.6492, 0.55", "47.1727, 205.339, -36.2046, 0.55", "44.9451, 215.443, -39.4465, 0.55", "43.849, 225.281, -43.8971, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-3.61283, 160.33, -101.929, 0.28", "-10.9092, 165.801, -107.507, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-3.61283, 160.33, -101.929, 0.28", "-9.21399, 164.146, -109.4, 0.28", "-13.1289, 169.848, -116.625, 0.28", "-16.0818, 175.773, -124.11, 0.28", "-20.4502, 182.006, -130.544, 0.28", "-25.9234, 187.983, -136.36, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "125.889, 136.166, -3.77202, 0.28", "132.683, 140.616, -9.94451, 0.28", "140.034, 145.632, -14.8709, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "125.889, 136.166, -3.77202, 0.28", "133.411, 143.914, 0.120301, 0.28", "140.247, 151.524, 5.4084, 0.28", "147.257, 157.646, 12.3487, 0.28", "155.108, 161.354, 20.1615, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_52", "dend_35", "dend_0", "dend_62", "dend_53", "dend_37", "dend_36", "dend_2", "dend_1", "dend_64", "dend_63", "dend_61", "dend_54", "dend_45", "dend_38", "dend_22", "dend_3", "dend_60", "dend_55", "dend_49", "dend_46", "dend_40", "dend_39", "dend_30", "dend_23", "dend_11", "dend_4", "dend_59", "dend_56", "dend_51", "dend_50", "dend_48", "dend_47", "dend_44", "dend_41", "dend_34", "dend_31", "dend_27", "dend_24", "dend_17", "dend_12", "dend_10", "dend_5", "dend_58", "dend_57", "dend_43", "dend_42", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25", "dend_21", "dend_18", "dend_14", "dend_13", "dend_7", "dend_6", "dend_20", "dend_19", "dend_16", "dend_15", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_52", "dend_35", "dend_0", "dend_62", "dend_53", "dend_37", "dend_36", "dend_2", "dend_1", "dend_64", "dend_63", "dend_61", "dend_54", "dend_45", "dend_38", "dend_22", "dend_3", "dend_60", "dend_55", "dend_49", "dend_46", "dend_40", "dend_39", "dend_30", "dend_23", "dend_11", "dend_4", "dend_59", "dend_56", "dend_51", "dend_50", "dend_48", "dend_47", "dend_44", "dend_41", "dend_34", "dend_31", "dend_27", "dend_24", "dend_17", "dend_12", "dend_10", "dend_5", "dend_58", "dend_57", "dend_43", "dend_42", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25", "dend_21", "dend_18", "dend_14", "dend_13", "dend_7", "dend_6", "dend_20", "dend_19", "dend_16", "dend_15", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_52", "dend_52", "dend_35", "dend_35", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_53", "dend_53", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_38", "dend_38", "dend_22", "dend_22", "dend_22", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_5", "dend_5", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_NBC_913c40083e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_52, id: dend_52, parent: soma_0
create dend_52
public dend_52
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_52
create dend_62
public dend_62
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_53
create dend_61
public dend_61
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_45, id: dend_45, parent: dend_37
create dend_45
public dend_45
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_22, id: dend_22, parent: dend_2
create dend_22
public dend_22
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_54
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_30, id: dend_30, parent: dend_22
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_4
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_52, dend_35, dend_0, dend_62, dend_53, dend_37, dend_36, dend_2, dend_1, dend_64, dend_63, dend_61, dend_54, dend_45, dend_38, dend_22, dend_3, dend_60, dend_55, dend_49, dend_46, dend_40, dend_39, dend_30, dend_23, dend_11, dend_4, dend_59, dend_56, dend_51, dend_50, dend_48, dend_47, dend_44, dend_41, dend_34, dend_31, dend_27, dend_24, dend_17, dend_12, dend_10, dend_5, dend_58, dend_57, dend_43, dend_42, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25, dend_21, dend_18, dend_14, dend_13, dend_7, dend_6, dend_20, dend_19, dend_16, dend_15, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_52, dend_35, dend_0, dend_62, dend_53, dend_37, dend_36, dend_2, dend_1, dend_64, dend_63, dend_61, dend_54, dend_45, dend_38, dend_22, dend_3, dend_60, dend_55, dend_49, dend_46, dend_40, dend_39, dend_30, dend_23, dend_11, dend_4, dend_59, dend_56, dend_51, dend_50, dend_48, dend_47, dend_44, dend_41, dend_34, dend_31, dend_27, dend_24, dend_17, dend_12, dend_10, dend_5, dend_58, dend_57, dend_43, dend_42, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25, dend_21, dend_18, dend_14, dend_13, dend_7, dend_6, dend_20, dend_19, dend_16, dend_15, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_65
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_52, dend_52, dend_35, dend_35, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_53, dend_53, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_22, dend_22, dend_22, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_52(0), soma_0(0.45000037708019813)
    connect dend_35(0), soma_0(0.45000037708019813)
    connect dend_0(0), soma_0(0.45000037708019813)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_45(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_22(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_30(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.91165, -15.504, 0.0, 2.36095 ) }
    soma_0 { pt3dadd( 1.69225, -14.164, 0.0, 3.77272 ) }
    soma_0 { pt3dadd( 1.47285, -12.824, 0.0, 5.64735 ) }
    soma_0 { pt3dadd( 1.25345, -11.484, 0.0, 7.11092 ) }
    soma_0 { pt3dadd( 1.03406, -10.144, 0.0, 8.31603 ) }
    soma_0 { pt3dadd( 0.814659, -8.80403, 0.0, 9.51462 ) }
    soma_0 { pt3dadd( 0.595262, -7.46404, 0.0, 10.3186 ) }
    soma_0 { pt3dadd( 0.375865, -6.12406, 0.0, 10.9463 ) }
    soma_0 { pt3dadd( 0.156467, -4.78407, 0.0, 11.2263 ) }
    soma_0 { pt3dadd( -0.0629298, -3.44408, 0.0, 11.5062 ) }
    soma_0 { pt3dadd( -0.282327, -2.1041, 0.0, 11.5148 ) }
    soma_0 { pt3dadd( -0.501724, -0.76411, 0.0, 11.4563 ) }
    soma_0 { pt3dadd( -0.721122, 0.575877, 0.0, 12.0569 ) }
    soma_0 { pt3dadd( -0.940519, 1.91586, 0.0, 12.3516 ) }
    soma_0 { pt3dadd( -1.15992, 3.25585, 0.0, 11.8398 ) }
    soma_0 { pt3dadd( -1.37931, 4.59584, 0.0, 10.9681 ) }
    soma_0 { pt3dadd( -1.59871, 5.93582, 0.0, 9.93554 ) }
    soma_0 { pt3dadd( -1.81811, 7.27581, 0.0, 8.23546 ) }
    soma_0 { pt3dadd( -2.03751, 8.6158, 0.0, 6.93545 ) }
    soma_0 { pt3dadd( -2.2569, 9.95578, 0.0, 5.0025 ) }
    soma_0 { pt3dadd( -2.4763, 11.2958, 0.0, 3.14572 ) }
    // Section: dend_52, id: dend_52, parent: soma_0 (entry count 21/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 2.49262, -15.4467, -20.89, 1.66 ) }
    dend_52 { pt3dadd( 3.92691, -25.6285, -23.4744, 1.66 ) }
    dend_52 { pt3dadd( 5.13463, -34.2019, -25.6506, 1.66 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 24/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -8.31738, 1.91933, -1.78, 2.49 ) }
    dend_35 { pt3dadd( -9.95378, 2.413, -1.62074, 2.49 ) }
    dend_35 { pt3dadd( -14.3287, 3.73286, -1.19493, 2.49 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.21262, 10.6023, 2.62, 1.94 ) }
    dend_0 { pt3dadd( 6.67818, 14.5589, 3.09416, 1.94 ) }
    dend_0 { pt3dadd( 10.6998, 18.1222, 3.52119, 1.66 ) }
    dend_0 { pt3dadd( 13.9449, 20.9975, 3.86576, 1.94 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.4763, 11.2958, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -4.89999, 26.0987, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -7.32368, 40.9016, 0.0, 0.55 ) }
    // Section: dend_62, id: dend_62, parent: dend_52 (entry count 34/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 5.13463, -34.2019, -25.6506, 1.66 ) }
    dend_62 { pt3dadd( 5.98903, -36.6183, -17.1282, 1.66 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 36/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 5.13463, -34.2019, -25.6506, 0.83 ) }
    dend_53 { pt3dadd( 8.26651, -38.1795, -33.415, 0.83 ) }
    dend_53 { pt3dadd( 9.31627, -39.5127, -36.0176, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 39/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -14.3287, 3.73286, -1.19493, 1.66 ) }
    dend_37 { pt3dadd( -16.2812, 5.0063, 0.563609, 1.66 ) }
    dend_37 { pt3dadd( -19.0539, 6.81477, 3.06098, 1.38 ) }
    dend_37 { pt3dadd( -21.1284, 8.1678, 4.92943, 1.38 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 43/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -14.3287, 3.73286, -1.19493, 0.83 ) }
    dend_36 { pt3dadd( -21.7963, 3.53819, -7.568, 0.83 ) }
    dend_36 { pt3dadd( -24.2944, 3.52074, -9.45599, 0.83 ) }
    dend_36 { pt3dadd( -27.7429, 3.57514, -11.7442, 0.83 ) }
    dend_36 { pt3dadd( -30.0278, 3.65637, -13.0779, 0.83 ) }
    dend_36 { pt3dadd( -31.9309, 3.75598, -14.0419, 0.83 ) }
    dend_36 { pt3dadd( -33.3908, 3.87984, -14.705, 0.83 ) }
    dend_36 { pt3dadd( -34.8139, 4.11076, -14.9832, 0.55 ) }
    dend_36 { pt3dadd( -36.2897, 4.44158, -15.1775, 0.83 ) }
    dend_36 { pt3dadd( -37.8213, 4.92048, -15.2836, 0.55 ) }
    dend_36 { pt3dadd( -39.3731, 5.43612, -15.4377, 0.83 ) }
    dend_36 { pt3dadd( -41.9962, 6.34053, -15.7397, 0.55 ) }
    dend_36 { pt3dadd( -44.5865, 7.2784, -15.9454, 0.83 ) }
    dend_36 { pt3dadd( -46.9441, 8.16415, -16.0448, 0.83 ) }
    dend_36 { pt3dadd( -49.1243, 8.97526, -16.0425, 0.55 ) }
    dend_36 { pt3dadd( -52.8988, 10.3399, -15.7153, 0.55 ) }
    dend_36 { pt3dadd( -53.9406, 10.6971, -15.5335, 0.55 ) }
    dend_36 { pt3dadd( -56.5066, 11.4659, -14.7991, 0.83 ) }
    dend_36 { pt3dadd( -58.0803, 11.9074, -14.2653, 0.55 ) }
    dend_36 { pt3dadd( -60.4683, 12.4471, -13.4311, 0.83 ) }
    dend_36 { pt3dadd( -62.6486, 12.9005, -12.6922, 0.55 ) }
    dend_36 { pt3dadd( -65.0532, 13.3972, -11.9768, 1.11 ) }
    dend_36 { pt3dadd( -69.7416, 14.3728, -11.3222, 0.55 ) }
    dend_36 { pt3dadd( -72.2965, 14.9366, -11.3436, 0.55 ) }
    dend_36 { pt3dadd( -74.508, 15.4149, -11.5809, 0.55 ) }
    dend_36 { pt3dadd( -77.4386, 16.0905, -12.4574, 0.55 ) }
    dend_36 { pt3dadd( -79.4468, 16.5746, -13.3497, 0.55 ) }
    dend_36 { pt3dadd( -84.1734, 17.7435, -15.8857, 0.55 ) }
    dend_36 { pt3dadd( -86.3331, 18.3461, -17.0903, 0.83 ) }
    dend_36 { pt3dadd( -88.003, 18.8552, -17.9011, 0.83 ) }
    dend_36 { pt3dadd( -93.0468, 20.6183, -19.8273, 0.28 ) }
    dend_36 { pt3dadd( -94.7991, 21.2598, -20.2689, 0.55 ) }
    dend_36 { pt3dadd( -97.7916, 22.4395, -20.7113, 0.55 ) }
    dend_36 { pt3dadd( -101.122, 23.8329, -20.7274, 0.28 ) }
    dend_36 { pt3dadd( -103.215, 24.8072, -20.6088, 0.55 ) }
    dend_36 { pt3dadd( -105.023, 25.7358, -20.374, 0.28 ) }
    dend_36 { pt3dadd( -105.996, 26.2574, -20.2271, 0.83 ) }
    dend_36 { pt3dadd( -108.035, 27.3986, -20.0734, 0.28 ) }
    dend_36 { pt3dadd( -108.732, 27.7703, -20.0734, 0.83 ) }
    dend_36 { pt3dadd( -111.789, 29.2687, -20.2708, 0.28 ) }
    dend_36 { pt3dadd( -114.062, 30.2069, -20.578, 0.83 ) }
    dend_36 { pt3dadd( -117.715, 31.465, -21.15, 0.28 ) }
    dend_36 { pt3dadd( -119.68, 32.0501, -21.4762, 0.55 ) }
    dend_36 { pt3dadd( -124.34, 33.3199, -22.2579, 0.28 ) }
    dend_36 { pt3dadd( -126.527, 33.7872, -22.5783, 0.55 ) }
    dend_36 { pt3dadd( -133.265, 34.8936, -23.3983, 0.28 ) }
    dend_36 { pt3dadd( -136.671, 35.3012, -23.7468, 0.55 ) }
    dend_36 { pt3dadd( -139.61, 35.5565, -23.973, 0.28 ) }
    dend_36 { pt3dadd( -142.33, 35.7055, -24.1825, 0.55 ) }
    dend_36 { pt3dadd( -151.855, 35.9829, -24.6909, 0.28 ) }
    dend_36 { pt3dadd( -153.832, 35.9913, -24.7068, 0.83 ) }
    dend_36 { pt3dadd( -157.177, 35.9168, -24.5768, 0.28 ) }
    dend_36 { pt3dadd( -157.878, 35.8797, -24.5078, 0.55 ) }
    dend_36 { pt3dadd( -160.114, 35.7751, -24.1889, 0.28 ) }
    dend_36 { pt3dadd( -162.004, 35.712, -23.8628, 0.83 ) }
    dend_36 { pt3dadd( -166.699, 35.8819, -22.948, 0.28 ) }
    dend_36 { pt3dadd( -169.165, 36.0981, -22.4277, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_36 { pt3dadd( -176.945, 37.3667, -21.0805, 0.28 ) }
    dend_36 { pt3dadd( -182.668, 38.6495, -20.2398, 0.28 ) }
    dend_36 { pt3dadd( -183.807, 38.9818, -20.1002, 0.83 ) }
    dend_36 { pt3dadd( -188.045, 40.4216, -19.9552, 0.28 ) }
    dend_36 { pt3dadd( -189.938, 41.1944, -19.9964, 0.83 ) }
    dend_36 { pt3dadd( -195.397, 43.7265, -20.9773, 0.28 ) }
    dend_36 { pt3dadd( -196.886, 44.4827, -21.5263, 0.55 ) }
    dend_36 { pt3dadd( -198.063, 45.0666, -22.0624, 0.55 ) }
    dend_36 { pt3dadd( -203.168, 47.385, -24.6388, 0.28 ) }
    dend_36 { pt3dadd( -205.077, 48.0985, -25.7575, 0.55 ) }
    dend_36 { pt3dadd( -210.247, 49.7276, -28.9893, 0.28 ) }
    dend_36 { pt3dadd( -212.844, 50.2276, -30.4236, 0.55 ) }
    dend_36 { pt3dadd( -222.064, 51.7845, -32.3216, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 13/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 13.9449, 20.9975, 3.86576, 1.38 ) }
    dend_2 { pt3dadd( 16.2026, 22.8336, 3.70228, 1.38 ) }
    dend_2 { pt3dadd( 18.1786, 24.4406, 3.5592, 1.11 ) }
    dend_2 { pt3dadd( 19.9469, 25.8787, 3.43116, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 17/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 13.9449, 20.9975, 3.86576, 0.83 ) }
    dend_1 { pt3dadd( 19.5961, 22.7897, 4.40418, 0.83 ) }
    dend_1 { pt3dadd( 23.7136, 24.2171, 5.33169, 0.83 ) }
    dend_1 { pt3dadd( 25.5732, 24.9163, 5.95688, 0.83 ) }
    dend_1 { pt3dadd( 27.8057, 25.836, 6.86646, 0.83 ) }
    dend_1 { pt3dadd( 30.2281, 26.8965, 7.99082, 0.83 ) }
    dend_1 { pt3dadd( 33.6784, 28.4503, 9.7475, 1.11 ) }
    dend_1 { pt3dadd( 35.4874, 29.3155, 10.9894, 0.83 ) }
    dend_1 { pt3dadd( 37.2114, 30.2113, 12.2676, 1.11 ) }
    dend_1 { pt3dadd( 38.3095, 30.8123, 13.0986, 0.55 ) }
    dend_1 { pt3dadd( 39.362, 31.3672, 13.9211, 0.83 ) }
    dend_1 { pt3dadd( 41.0665, 32.2103, 15.2681, 0.28 ) }
    dend_1 { pt3dadd( 42.2168, 32.684, 16.157, 0.55 ) }
    dend_1 { pt3dadd( 43.5951, 33.1226, 17.158, 0.28 ) }
    dend_1 { pt3dadd( 47.2552, 34.0519, 19.7359, 0.55 ) }
    dend_1 { pt3dadd( 48.7785, 34.3594, 20.7825, 0.83 ) }
    dend_1 { pt3dadd( 50.8144, 34.6994, 22.2076, 0.55 ) }
    dend_1 { pt3dadd( 52.187, 34.8783, 23.2406, 0.83 ) }
    dend_1 { pt3dadd( 54.5719, 35.0894, 25.2531, 0.55 ) }
    dend_1 { pt3dadd( 56.9298, 35.2236, 27.339, 0.83 ) }
    dend_1 { pt3dadd( 59.0102, 35.1945, 29.3338, 0.55 ) }
    dend_1 { pt3dadd( 60.6212, 35.1007, 30.9374, 0.55 ) }
    dend_1 { pt3dadd( 62.5035, 34.9163, 32.8315, 0.83 ) }
    dend_1 { pt3dadd( 65.0829, 34.5716, 35.3935, 0.55 ) }
    dend_1 { pt3dadd( 66.2908, 34.3668, 36.5824, 1.38 ) }
    dend_1 { pt3dadd( 71.1132, 33.4965, 41.057, 0.55 ) }
    dend_1 { pt3dadd( 72.4725, 33.2684, 42.2146, 0.55 ) }
    dend_1 { pt3dadd( 73.9388, 33.0572, 43.2545, 1.11 ) }
    dend_1 { pt3dadd( 76.9968, 32.6834, 44.9454, 0.28 ) }
    dend_1 { pt3dadd( 77.7617, 32.5763, 45.2622, 0.83 ) }
    dend_1 { pt3dadd( 79.5289, 32.2703, 45.8485, 0.28 ) }
    dend_1 { pt3dadd( 80.6076, 32.0512, 46.0493, 1.11 ) }
    dend_1 { pt3dadd( 81.9855, 31.6407, 46.3078, 0.28 ) }
    dend_1 { pt3dadd( 82.8942, 31.2674, 46.5043, 0.83 ) }
    dend_1 { pt3dadd( 86.1286, 29.5726, 47.2153, 0.28 ) }
    dend_1 { pt3dadd( 87.7249, 28.6014, 47.6827, 0.28 ) }
    dend_1 { pt3dadd( 88.7291, 27.8968, 48.0758, 1.11 ) }
    dend_1 { pt3dadd( 89.5659, 27.2969, 48.5319, 1.11 ) }
    dend_1 { pt3dadd( 90.7751, 26.4753, 49.3327, 0.28 ) }
    dend_1 { pt3dadd( 91.5005, 26.045, 49.8637, 0.83 ) }
    dend_1 { pt3dadd( 93.2713, 25.1778, 51.1481, 0.28 ) }
    dend_1 { pt3dadd( 94.8033, 24.5858, 52.2527, 0.83 ) }
    dend_1 { pt3dadd( 97.5949, 23.6909, 54.2646, 0.28 ) }
    dend_1 { pt3dadd( 99.2289, 23.2583, 55.3722, 1.11 ) }
    dend_1 { pt3dadd( 101.518, 22.7633, 56.8377, 0.28 ) }
    dend_1 { pt3dadd( 102.982, 22.5097, 57.753, 0.83 ) }
    dend_1 { pt3dadd( 107.003, 22.0013, 60.0865, 0.28 ) }
    dend_1 { pt3dadd( 107.364, 21.9659, 60.2843, 0.83 ) }
    dend_1 { pt3dadd( 109.885, 21.7496, 61.5117, 0.55 ) }
    dend_1 { pt3dadd( 112.092, 21.5482, 62.5258, 0.28 ) }
    dend_1 { pt3dadd( 114.283, 21.3242, 63.478, 1.38 ) }
    dend_1 { pt3dadd( 115.948, 21.121, 64.1779, 0.83 ) }
    dend_1 { pt3dadd( 120.195, 20.5317, 65.7359, 0.28 ) }
    dend_1 { pt3dadd( 122.363, 20.2174, 66.5204, 1.11 ) }
    dend_1 { pt3dadd( 125.362, 19.7656, 67.5704, 0.28 ) }
    dend_1 { pt3dadd( 126.148, 19.643, 67.8427, 1.11 ) }
    dend_1 { pt3dadd( 128.198, 19.3476, 68.4494, 0.28 ) }
    dend_1 { pt3dadd( 129.539, 19.1894, 68.8656, 1.11 ) }
    dend_1 { pt3dadd( 132.487, 18.986, 69.9036, 0.28 ) }
    dend_1 { pt3dadd( 133.043, 18.9795, 70.1451, 0.55 ) }
    dend_1 { pt3dadd( 135.544, 19.1397, 71.3018, 0.28 ) }
    dend_1 { pt3dadd( 138.271, 19.5397, 72.7386, 0.83 ) }
    dend_1 { pt3dadd( 140.308, 20.0317, 73.9089, 0.28 ) }
    dend_1 { pt3dadd( 141.995, 20.5476, 75.1008, 0.83 ) }
    dend_1 { pt3dadd( 144.379, 21.3708, 77.1728, 0.28 ) }
    dend_1 { pt3dadd( 145.377, 21.7391, 78.1104, 0.55 ) }
    dend_1 { pt3dadd( 147.89, 22.751, 80.7311, 0.28 ) }
    dend_1 { pt3dadd( 148.85, 23.1452, 81.86, 0.55 ) }
    dend_1 { pt3dadd( 151.465, 24.2683, 85.0201, 0.28 ) }
    dend_1 { pt3dadd( 152.96, 24.9116, 86.8605, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 87/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.32368, 40.9016, 0.0, 0.55 ) }
    axon_1 { pt3dadd( -9.74737, 55.7045, 0.0, 0.55 ) }
    axon_1 { pt3dadd( -12.1711, 70.5074, 0.0, 0.55 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 90/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 5.98903, -36.6183, -17.1282, 0.55 ) }
    dend_64 { pt3dadd( 5.96036, -36.7331, -17.13, 0.55 ) }
    dend_64 { pt3dadd( 4.73777, -42.1683, -16.9549, 0.55 ) }
    dend_64 { pt3dadd( 3.5756, -48.4885, -16.3197, 0.55 ) }
    dend_64 { pt3dadd( 3.05676, -51.7311, -15.8698, 0.55 ) }
    dend_64 { pt3dadd( 2.72279, -53.6393, -15.5185, 0.55 ) }
    dend_64 { pt3dadd( 2.14459, -56.8975, -14.9431, 0.55 ) }
    dend_64 { pt3dadd( 1.11917, -62.682, -13.6358, 0.55 ) }
    dend_64 { pt3dadd( 0.275531, -68.2959, -12.6627, 0.55 ) }
    dend_64 { pt3dadd( 0.0293681, -70.3099, -12.4595, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_64 { pt3dadd( -0.630054, -77.0873, -12.2014, 0.55 ) }
    dend_64 { pt3dadd( -0.962123, -81.0027, -12.2587, 0.55 ) }
    dend_64 { pt3dadd( -1.29666, -84.958, -12.5675, 0.55 ) }
    dend_64 { pt3dadd( -2.16001, -96.3389, -14.4795, 0.28 ) }
    dend_64 { pt3dadd( -2.33052, -98.6233, -15.0475, 0.55 ) }
    dend_64 { pt3dadd( -2.44248, -100.079, -15.4334, 0.55 ) }
    dend_64 { pt3dadd( -2.62099, -102.628, -16.1617, 0.28 ) }
    dend_64 { pt3dadd( -2.68306, -103.126, -16.2645, 0.55 ) }
    dend_64 { pt3dadd( -3.16877, -105.949, -16.9477, 0.28 ) }
    dend_64 { pt3dadd( -3.71049, -108.415, -17.3154, 0.55 ) }
    dend_64 { pt3dadd( -4.60158, -112.848, -18.0049, 0.28 ) }
    dend_64 { pt3dadd( -5.25511, -116.668, -18.4911, 0.55 ) }
    dend_64 { pt3dadd( -5.7311, -120.438, -18.8647, 0.28 ) }
    dend_64 { pt3dadd( -6.32122, -126.483, -19.2397, 0.83 ) }
    dend_64 { pt3dadd( -6.65629, -131.468, -19.437, 0.55 ) }
    dend_64 { pt3dadd( -6.76696, -134.183, -19.4867, 0.83 ) }
    dend_64 { pt3dadd( -6.85285, -137.179, -19.4075, 0.28 ) }
    dend_64 { pt3dadd( -6.9175, -140.843, -19.0677, 0.83 ) }
    dend_64 { pt3dadd( -6.95582, -144.917, -18.3809, 0.28 ) }
    dend_64 { pt3dadd( -7.00617, -146.867, -17.8328, 0.83 ) }
    dend_64 { pt3dadd( -7.23898, -151.752, -16.3425, 0.28 ) }
    dend_64 { pt3dadd( -7.45912, -154.952, -15.4108, 0.83 ) }
    dend_64 { pt3dadd( -7.76916, -158.828, -14.2424, 0.28 ) }
    dend_64 { pt3dadd( -8.1167, -163.251, -12.8402, 0.83 ) }
    dend_64 { pt3dadd( -8.86526, -172.548, -9.68197, 0.28 ) }
    dend_64 { pt3dadd( -9.11317, -176.81, -8.11731, 0.83 ) }
    dend_64 { pt3dadd( -9.41733, -184.689, -5.14859, 0.28 ) }
    dend_64 { pt3dadd( -9.57356, -189.046, -3.5956, 0.83 ) }
    dend_64 { pt3dadd( -9.8228, -194.902, -1.54395, 0.28 ) }
    dend_64 { pt3dadd( -9.88808, -197.936, -0.571281, 0.83 ) }
    dend_64 { pt3dadd( -9.71768, -214.646, 4.24745, 0.28 ) }
    dend_64 { pt3dadd( -9.54741, -219.069, 5.43252, 0.83 ) }
    dend_64 { pt3dadd( -8.79288, -231.354, 8.54391, 0.28 ) }
    dend_64 { pt3dadd( -8.54556, -234.76, 9.33113, 0.83 ) }
    dend_64 { pt3dadd( -7.95597, -241.805, 10.7708, 0.28 ) }
    dend_64 { pt3dadd( -7.50636, -246.346, 11.5026, 0.83 ) }
    dend_64 { pt3dadd( -6.65124, -253.536, 12.0457, 0.28 ) }
    dend_64 { pt3dadd( -6.38428, -255.145, 12.1108, 0.83 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 38/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 5.98903, -36.6183, -17.1282, 0.55 ) }
    dend_63 { pt3dadd( 6.23721, -46.883, -23.0099, 0.55 ) }
    dend_63 { pt3dadd( 6.24581, -51.8496, -25.4734, 0.55 ) }
    dend_63 { pt3dadd( 6.23455, -54.175, -26.4238, 0.55 ) }
    dend_63 { pt3dadd( 6.07999, -58.7662, -27.6839, 0.55 ) }
    dend_63 { pt3dadd( 5.788, -62.7025, -28.189, 0.55 ) }
    dend_63 { pt3dadd( 5.40782, -66.4473, -28.1338, 0.55 ) }
    dend_63 { pt3dadd( 5.02518, -68.8291, -27.285, 0.28 ) }
    dend_63 { pt3dadd( 4.51613, -72.1845, -25.3537, 0.55 ) }
    dend_63 { pt3dadd( 3.75388, -77.1494, -21.7652, 0.55 ) }
    dend_63 { pt3dadd( 3.13196, -81.4963, -18.5373, 0.55 ) }
    dend_63 { pt3dadd( 2.71041, -84.7123, -15.9925, 0.28 ) }
    dend_63 { pt3dadd( 2.30149, -87.2304, -13.8389, 0.55 ) }
    dend_63 { pt3dadd( 1.14618, -93.7942, -8.0684, 0.28 ) }
    dend_63 { pt3dadd( 0.091937, -98.918, -3.44786, 0.83 ) }
    dend_63 { pt3dadd( -1.01847, -103.945, 1.10591, 0.28 ) }
    dend_63 { pt3dadd( -2.41186, -109.508, 6.06011, 0.83 ) }
    dend_63 { pt3dadd( -3.8554, -114.339, 10.4826, 0.28 ) }
    dend_63 { pt3dadd( -4.67511, -116.674, 12.7655, 0.55 ) }
    dend_63 { pt3dadd( -6.36419, -120.815, 17.2286, 0.28 ) }
    dend_63 { pt3dadd( -7.34771, -123.035, 19.9765, 0.83 ) }
    dend_63 { pt3dadd( -7.96728, -124.323, 21.8175, 0.83 ) }
    dend_63 { pt3dadd( -10.5213, -130.017, 29.8798, 0.28 ) }
    dend_63 { pt3dadd( -11.7465, -132.849, 33.897, 0.55 ) }
    dend_63 { pt3dadd( -13.0166, -135.711, 38.0023, 0.28 ) }
    dend_63 { pt3dadd( -15.246, -140.187, 44.7928, 0.83 ) }
    dend_63 { pt3dadd( -18.1232, -145.453, 52.9528, 0.28 ) }
    dend_63 { pt3dadd( -19.1576, -147.262, 55.4786, 0.83 ) }
    dend_63 { pt3dadd( -21.6292, -151.332, 60.6072, 0.28 ) }
    dend_63 { pt3dadd( -23.6324, -154.579, 64.1599, 0.83 ) }
    dend_63 { pt3dadd( -31.2557, -166.855, 76.1211, 0.28 ) }
    dend_63 { pt3dadd( -32.6065, -169.007, 77.981, 0.83 ) }
    dend_63 { pt3dadd( -38.6315, -178.477, 85.4466, 0.28 ) }
    dend_63 { pt3dadd( -40.5689, -181.441, 87.6895, 0.55 ) }
    dend_63 { pt3dadd( -43.8687, -186.61, 91.1917, 0.28 ) }
    dend_63 { pt3dadd( -44.9699, -188.473, 92.3085, 0.83 ) }
    dend_63 { pt3dadd( -46.2585, -190.929, 93.4953, 0.28 ) }
    dend_63 { pt3dadd( -46.8034, -192.033, 94.1294, 0.55 ) }
    dend_63 { pt3dadd( -48.0405, -194.654, 96.0466, 0.28 ) }
    dend_63 { pt3dadd( -48.6394, -196.022, 96.9951, 0.83 ) }
    dend_63 { pt3dadd( -51.4352, -202.9, 101.484, 0.28 ) }
    dend_63 { pt3dadd( -51.9597, -204.226, 102.286, 0.83 ) }
    dend_63 { pt3dadd( -53.9704, -209.21, 105.147, 0.28 ) }
    dend_63 { pt3dadd( -55.1462, -212.076, 106.697, 0.83 ) }
    dend_63 { pt3dadd( -56.4059, -215.143, 108.259, 0.28 ) }
    dend_63 { pt3dadd( -57.646, -217.961, 109.647, 0.55 ) }
    dend_63 { pt3dadd( -59.9894, -223.053, 111.959, 0.28 ) }
    dend_63 { pt3dadd( -61.3104, -226.043, 113.342, 0.83 ) }
    dend_63 { pt3dadd( -63.2181, -230.635, 115.287, 0.28 ) }
    dend_63 { pt3dadd( -63.8603, -232.358, 115.956, 0.55 ) }
    dend_63 { pt3dadd( -64.9051, -235.399, 117.08, 0.28 ) }
    dend_63 { pt3dadd( -65.6059, -237.755, 117.845, 0.55 ) }
    dend_63 { pt3dadd( -67.8058, -246.302, 120.458, 0.28 ) }
    dend_63 { pt3dadd( -68.6497, -250.18, 121.589, 0.83 ) }
    dend_63 { pt3dadd( -69.1261, -252.73, 122.275, 0.28 ) }
    dend_63 { pt3dadd( -69.381, -254.345, 122.673, 0.55 ) }
    dend_63 { pt3dadd( -69.8121, -257.938, 123.437, 0.28 ) }
    dend_63 { pt3dadd( -70.185, -261.795, 124.097, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_53 (entry count 96/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 9.31627, -39.5127, -36.0176, 0.83 ) }
    dend_61 { pt3dadd( 9.24709, -40.9885, -34.6134, 0.83 ) }
    dend_61 { pt3dadd( 9.14591, -41.7974, -33.5939, 0.28 ) }
    dend_61 { pt3dadd( 8.96466, -42.7051, -32.344, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_61 { pt3dadd( 8.85788, -43.2386, -31.5864, 0.28 ) }
    dend_61 { pt3dadd( 8.50898, -44.7588, -29.1878, 0.83 ) }
    dend_61 { pt3dadd( 8.1331, -46.4811, -26.4653, 0.28 ) }
    dend_61 { pt3dadd( 7.63162, -48.3808, -22.7246, 0.83 ) }
    dend_61 { pt3dadd( 7.18103, -49.8719, -19.2917, 0.28 ) }
    dend_61 { pt3dadd( 6.91073, -50.7251, -17.2424, 0.83 ) }
    dend_61 { pt3dadd( 6.0098, -53.3341, -10.7452, 0.28 ) }
    dend_61 { pt3dadd( 5.82477, -53.8475, -9.4149, 0.55 ) }
    dend_61 { pt3dadd( 4.56433, -57.0473, -0.40166, 0.28 ) }
    dend_61 { pt3dadd( 3.9704, -58.5825, 4.48429, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 10/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 9.31627, -39.5127, -36.0176, 0.83 ) }
    dend_54 { pt3dadd( 9.31416, -39.7733, -36.1875, 0.83 ) }
    dend_54 { pt3dadd( 9.328, -41.7291, -37.7502, 0.83 ) }
    dend_54 { pt3dadd( 9.40846, -43.9892, -39.5184, 1.11 ) }
    dend_54 { pt3dadd( 9.55941, -46.9471, -41.7356, 0.83 ) }
    dend_54 { pt3dadd( 9.68835, -49.4737, -43.6294, 0.83 ) }
    dend_54 { pt3dadd( 10.1882, -59.269, -50.9717, 0.55 ) }
    dend_54 { pt3dadd( 10.3322, -61.5458, -52.8531, 0.55 ) }
    dend_54 { pt3dadd( 10.4844, -63.4268, -54.7, 0.55 ) }
    dend_54 { pt3dadd( 10.5713, -64.3994, -55.8546, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_37 (entry count 20/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -21.1284, 8.1678, 4.92943, 1.11 ) }
    dend_45 { pt3dadd( -26.2679, 11.6277, 4.46927, 1.11 ) }
    dend_45 { pt3dadd( -28.6727, 13.2466, 4.25395, 1.11 ) }
    dend_45 { pt3dadd( -30.7605, 14.6521, 4.06703, 0.83 ) }
    dend_45 { pt3dadd( -33.0042, 16.1625, 3.86614, 0.83 ) }
    dend_45 { pt3dadd( -34.8755, 17.4223, 3.69859, 1.11 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 26/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -21.1284, 8.1678, 4.92943, 0.83 ) }
    dend_38 { pt3dadd( -25.6384, 10.5888, 5.47051, 0.83 ) }
    dend_38 { pt3dadd( -27.3541, 11.5099, 5.67636, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_2 (entry count 29/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 19.9469, 25.8787, 3.43116, 1.11 ) }
    dend_22 { pt3dadd( 24.5869, 29.9992, 2.11904, 1.11 ) }
    dend_22 { pt3dadd( 26.4883, 31.6877, 1.58136, 1.11 ) }
    dend_22 { pt3dadd( 27.9338, 32.9713, 1.17259, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 33/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 19.9469, 25.8787, 3.43116, 1.11 ) }
    dend_3 { pt3dadd( 20.9295, 31.8517, 2.91337, 1.11 ) }
    dend_3 { pt3dadd( 21.5819, 34.2298, 2.85193, 0.83 ) }
    dend_3 { pt3dadd( 22.031, 35.523, 2.89172, 0.83 ) }
    dend_3 { pt3dadd( 22.9635, 37.9292, 2.96346, 0.83 ) }
    dend_3 { pt3dadd( 23.9658, 40.256, 3.04779, 0.83 ) }
    dend_3 { pt3dadd( 24.9054, 42.2872, 3.11865, 1.38 ) }
    dend_3 { pt3dadd( 26.5213, 45.4556, 3.42432, 1.38 ) }
    dend_3 { pt3dadd( 28.3103, 48.7736, 3.65269, 0.83 ) }
    dend_3 { pt3dadd( 29.3981, 50.7792, 3.76059, 0.83 ) }
    dend_3 { pt3dadd( 30.3136, 52.472, 3.86327, 1.11 ) }
    dend_3 { pt3dadd( 31.1263, 54.0364, 3.94111, 0.83 ) }
    dend_3 { pt3dadd( 31.612, 55.1111, 4.02237, 0.83 ) }
    dend_3 { pt3dadd( 32.4374, 57.1779, 4.3743, 1.38 ) }
    dend_3 { pt3dadd( 33.1787, 59.1338, 4.75391, 0.83 ) }
    dend_3 { pt3dadd( 34.0103, 61.47, 5.28463, 1.38 ) }
    dend_3 { pt3dadd( 35.7482, 66.7181, 6.55765, 1.11 ) }
    dend_3 { pt3dadd( 36.4923, 68.9804, 7.1674, 1.38 ) }
    dend_3 { pt3dadd( 37.9476, 73.1579, 8.38264, 1.38 ) }
    // Section: dend_60, id: dend_60, parent: dend_54 (entry count 52/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 10.5713, -64.3994, -55.8546, 0.55 ) }
    dend_60 { pt3dadd( 8.94863, -66.7678, -55.5287, 0.55 ) }
    dend_60 { pt3dadd( 7.60521, -68.5588, -54.7012, 0.55 ) }
    dend_60 { pt3dadd( 6.89645, -69.4615, -54.2252, 0.55 ) }
    dend_60 { pt3dadd( 6.03492, -70.5815, -53.6642, 0.55 ) }
    dend_60 { pt3dadd( 3.97, -73.4866, -52.1061, 0.55 ) }
    dend_60 { pt3dadd( 0.934507, -77.5925, -49.9263, 0.55 ) }
    dend_60 { pt3dadd( -2.47347, -82.4883, -47.5822, 0.55 ) }
    dend_60 { pt3dadd( -4.43925, -85.328, -46.5389, 0.55 ) }
    dend_60 { pt3dadd( -6.54019, -88.3756, -45.7168, 0.55 ) }
    dend_60 { pt3dadd( -10.2356, -93.6175, -44.4804, 0.55 ) }
    dend_60 { pt3dadd( -13.5688, -98.4373, -43.5343, 0.55 ) }
    dend_60 { pt3dadd( -16.2301, -102.609, -42.9666, 0.55 ) }
    dend_60 { pt3dadd( -19.5783, -107.885, -42.4737, 0.55 ) }
    dend_60 { pt3dadd( -23.1383, -113.562, -41.8333, 0.55 ) }
    dend_60 { pt3dadd( -24.8509, -116.232, -41.4592, 0.55 ) }
    dend_60 { pt3dadd( -27.7726, -120.651, -40.7574, 0.55 ) }
    dend_60 { pt3dadd( -32.4165, -127.62, -39.2559, 0.55 ) }
    dend_60 { pt3dadd( -36.0505, -132.834, -37.7979, 0.55 ) }
    dend_60 { pt3dadd( -38.137, -135.835, -36.7977, 0.55 ) }
    dend_60 { pt3dadd( -40.2001, -138.705, -35.8517, 0.55 ) }
    dend_60 { pt3dadd( -42.8875, -142.594, -34.9515, 0.83 ) }
    dend_60 { pt3dadd( -44.5222, -144.955, -34.5209, 0.55 ) }
    dend_60 { pt3dadd( -46.8554, -148.55, -34.0618, 0.83 ) }
    dend_60 { pt3dadd( -48.3955, -150.979, -33.9229, 0.28 ) }
    dend_60 { pt3dadd( -50.2397, -153.775, -33.9501, 0.83 ) }
    dend_60 { pt3dadd( -56.7887, -163.507, -34.4271, 0.28 ) }
    dend_60 { pt3dadd( -58.8565, -166.486, -34.6101, 0.55 ) }
    dend_60 { pt3dadd( -61.2999, -169.898, -34.8223, 0.55 ) }
    dend_60 { pt3dadd( -66.8884, -177.55, -35.0288, 0.55 ) }
    dend_60 { pt3dadd( -68.9282, -180.404, -35.1269, 0.55 ) }
    dend_60 { pt3dadd( -72.2675, -185.173, -35.1835, 0.55 ) }
    dend_60 { pt3dadd( -75.1814, -189.402, -35.0475, 1.38 ) }
    dend_60 { pt3dadd( -77.3993, -192.73, -34.9078, 0.83 ) }
    dend_60 { pt3dadd( -83.0471, -201.626, -34.5229, 0.28 ) }
    dend_60 { pt3dadd( -86.8838, -208.306, -34.0614, 0.55 ) }
    dend_60 { pt3dadd( -89.2978, -212.732, -33.6955, 0.83 ) }
    dend_60 { pt3dadd( -90.6622, -215.341, -33.5249, 0.28 ) }
    dend_60 { pt3dadd( -91.7943, -217.562, -33.4217, 0.55 ) }
    dend_60 { pt3dadd( -93.5579, -221.012, -33.3375, 0.28 ) }
    dend_60 { pt3dadd( -95.0099, -223.708, -33.3784, 0.55 ) }
    dend_60 { pt3dadd( -101.647, -233.491, -30.1394, 0.55 ) }
    dend_60 { pt3dadd( -108.632, -243.307, -27.8909, 0.55 ) }
    dend_60 { pt3dadd( -114.078, -253.915, -25.4001, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 96/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 10.5713, -64.3994, -55.8546, 0.55 ) }
    dend_55 { pt3dadd( 11.1736, -65.762, -56.905, 0.55 ) }
    dend_55 { pt3dadd( 11.4741, -66.6912, -57.3237, 0.55 ) }
    dend_55 { pt3dadd( 11.8824, -68.4915, -57.8449, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_55 { pt3dadd( 12.2302, -70.0248, -58.2887, 0.55 ) }
    dend_55 { pt3dadd( 12.8763, -72.8732, -59.1134, 0.55 ) }
    dend_55 { pt3dadd( 13.1166, -73.9327, -59.4201, 0.55 ) }
    dend_55 { pt3dadd( 13.6052, -76.7613, -60.4997, 0.28 ) }
    dend_55 { pt3dadd( 13.8417, -78.0157, -60.957, 0.55 ) }
    dend_55 { pt3dadd( 14.8277, -82.0835, -63.3699, 0.55 ) }
    dend_55 { pt3dadd( 15.5822, -85.9555, -66.1879, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 7/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -34.8755, 17.4223, 3.69859, 0.83 ) }
    dend_49 { pt3dadd( -36.9038, 17.843, 2.61208, 0.83 ) }
    dend_49 { pt3dadd( -39.2103, 18.4624, 1.36085, 0.55 ) }
    dend_49 { pt3dadd( -41.2267, 19.0442, 0.232222, 0.55 ) }
    dend_49 { pt3dadd( -43.4969, 19.7318, -0.994945, 0.55 ) }
    dend_49 { pt3dadd( -44.6142, 20.052, -1.55404, 0.55 ) }
    dend_49 { pt3dadd( -45.6277, 20.299, -2.06912, 0.55 ) }
    dend_49 { pt3dadd( -47.193, 20.6593, -2.82444, 0.55 ) }
    dend_49 { pt3dadd( -48.8039, 21.023, -3.58305, 0.55 ) }
    dend_49 { pt3dadd( -50.1246, 21.3429, -4.09649, 0.55 ) }
    dend_49 { pt3dadd( -51.59, 21.6629, -4.64058, 0.83 ) }
    dend_49 { pt3dadd( -54.1095, 22.2575, -5.66685, 0.83 ) }
    dend_49 { pt3dadd( -55.322, 22.5542, -6.17004, 0.55 ) }
    dend_49 { pt3dadd( -57.0238, 23.0418, -6.84346, 0.83 ) }
    dend_49 { pt3dadd( -59.385, 23.8233, -7.81118, 0.55 ) }
    dend_49 { pt3dadd( -60.7274, 24.3058, -8.45456, 0.55 ) }
    dend_49 { pt3dadd( -63.064, 25.1963, -9.75534, 0.55 ) }
    dend_49 { pt3dadd( -63.7596, 25.471, -10.1954, 0.55 ) }
    dend_49 { pt3dadd( -65.233, 26.0575, -11.3287, 0.55 ) }
    dend_49 { pt3dadd( -65.8573, 26.3022, -11.8842, 0.55 ) }
    dend_49 { pt3dadd( -67.39, 26.9156, -13.422, 0.83 ) }
    dend_49 { pt3dadd( -68.7374, 27.565, -14.8176, 0.55 ) }
    dend_49 { pt3dadd( -70.0222, 28.3487, -16.3436, 0.83 ) }
    dend_49 { pt3dadd( -70.8836, 28.9998, -17.4845, 0.55 ) }
    dend_49 { pt3dadd( -71.0456, 29.1632, -17.7313, 0.83 ) }
    dend_49 { pt3dadd( -71.5105, 29.7211, -18.5023, 0.55 ) }
    dend_49 { pt3dadd( -71.8001, 30.1017, -18.9983, 0.83 ) }
    dend_49 { pt3dadd( -72.7447, 31.3151, -20.5409, 0.55 ) }
    dend_49 { pt3dadd( -73.6238, 32.4191, -21.9088, 0.55 ) }
    dend_49 { pt3dadd( -75.2017, 34.2667, -24.3005, 0.55 ) }
    dend_49 { pt3dadd( -76.1704, 35.3419, -25.7129, 0.55 ) }
    dend_49 { pt3dadd( -77.6125, 36.8786, -27.8096, 0.28 ) }
    dend_49 { pt3dadd( -78.2738, 37.5619, -28.7615, 0.28 ) }
    dend_49 { pt3dadd( -79.2767, 38.5502, -30.2059, 0.28 ) }
    dend_49 { pt3dadd( -80.8485, 40.1166, -32.4648, 0.28 ) }
    dend_49 { pt3dadd( -81.9458, 41.1761, -33.9992, 0.28 ) }
    dend_49 { pt3dadd( -83.4033, 42.6213, -36.0669, 0.28 ) }
    dend_49 { pt3dadd( -84.4206, 43.6324, -37.6116, 0.28 ) }
    dend_49 { pt3dadd( -85.233, 44.4339, -38.9586, 0.55 ) }
    dend_49 { pt3dadd( -89.829, 46.7847, -42.1331, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 47/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -34.8755, 17.4223, 3.69859, 0.28 ) }
    dend_46 { pt3dadd( -38.3153, 18.947, 7.29224, 0.28 ) }
    dend_46 { pt3dadd( -43.8139, 21.3318, 12.851, 0.28 ) }
    dend_46 { pt3dadd( -47.125, 22.8133, 16.1613, 0.28 ) }
    dend_46 { pt3dadd( -50.4759, 24.3375, 19.5294, 0.55 ) }
    dend_46 { pt3dadd( -54.2516, 26.1032, 23.2995, 0.55 ) }
    dend_46 { pt3dadd( -56.2356, 27.0261, 25.2085, 0.28 ) }
    dend_46 { pt3dadd( -57.1886, 27.5052, 26.083, 0.55 ) }
    dend_46 { pt3dadd( -59.647, 28.827, 27.8582, 0.28 ) }
    dend_46 { pt3dadd( -62.9715, 30.7617, 29.7832, 0.55 ) }
    dend_46 { pt3dadd( -63.8731, 31.3505, 30.2456, 0.55 ) }
    dend_46 { pt3dadd( -65.6545, 32.6227, 31.1163, 0.28 ) }
    dend_46 { pt3dadd( -70.0323, 36.0171, 33.4022, 0.83 ) }
    dend_46 { pt3dadd( -73.3876, 38.7499, 35.2518, 0.28 ) }
    dend_46 { pt3dadd( -74.0876, 39.3591, 35.6651, 0.28 ) }
    dend_46 { pt3dadd( -76.4283, 41.6523, 37.3026, 0.83 ) }
    dend_46 { pt3dadd( -78.3838, 43.7329, 38.9826, 0.28 ) }
    dend_46 { pt3dadd( -79.5825, 45.1045, 40.3024, 0.55 ) }
    dend_46 { pt3dadd( -81.2194, 46.9972, 42.5629, 0.28 ) }
    dend_46 { pt3dadd( -82.5357, 48.517, 44.5372, 0.55 ) }
    dend_46 { pt3dadd( -84.1741, 50.494, 47.2233, 0.28 ) }
    dend_46 { pt3dadd( -85.1805, 51.7699, 49.043, 0.83 ) }
    dend_46 { pt3dadd( -86.9399, 54.0547, 52.4557, 0.28 ) }
    dend_46 { pt3dadd( -88.3083, 55.8376, 55.3112, 0.55 ) }
    dend_46 { pt3dadd( -88.8196, 56.4701, 56.3758, 0.55 ) }
    dend_46 { pt3dadd( -90.553, 58.4192, 59.6538, 0.28 ) }
    dend_46 { pt3dadd( -91.6571, 59.4779, 61.4098, 0.55 ) }
    dend_46 { pt3dadd( -93.4816, 61.1162, 64.1018, 0.28 ) }
    dend_46 { pt3dadd( -94.8393, 62.2682, 65.9272, 0.55 ) }
    dend_46 { pt3dadd( -97.3728, 64.2239, 69.1164, 0.28 ) }
    dend_46 { pt3dadd( -99.3652, 65.585, 71.5791, 1.11 ) }
    dend_46 { pt3dadd( -103.34, 68.1474, 76.6775, 0.28 ) }
    dend_46 { pt3dadd( -104.883, 69.1006, 78.6227, 0.55 ) }
    dend_46 { pt3dadd( -106.468, 70.054, 80.6465, 0.28 ) }
    dend_46 { pt3dadd( -107.927, 70.9202, 82.5881, 0.55 ) }
    dend_46 { pt3dadd( -110.375, 72.356, 86.2452, 0.28 ) }
    dend_46 { pt3dadd( -114.16, 74.536, 92.6109, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 84/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -27.3541, 11.5099, 5.67636, 0.55 ) }
    dend_40 { pt3dadd( -27.2138, 13.6151, 8.98222, 0.55 ) }
    dend_40 { pt3dadd( -27.2091, 15.2445, 11.3281, 0.55 ) }
    dend_40 { pt3dadd( -27.4717, 17.6915, 14.7528, 0.55 ) }
    dend_40 { pt3dadd( -28.0761, 20.4576, 18.4141, 0.55 ) }
    dend_40 { pt3dadd( -28.778, 22.5718, 21.068, 0.83 ) }
    dend_40 { pt3dadd( -29.5416, 24.6045, 23.4429, 0.55 ) }
    dend_40 { pt3dadd( -30.728, 27.2656, 26.4153, 0.83 ) }
    dend_40 { pt3dadd( -32.2505, 30.4523, 29.6016, 0.55 ) }
    dend_40 { pt3dadd( -33.8035, 33.4912, 32.0555, 0.83 ) }
    dend_40 { pt3dadd( -35.3837, 36.411, 34.0757, 0.55 ) }
    dend_40 { pt3dadd( -36.4777, 38.2944, 35.383, 0.55 ) }
    dend_40 { pt3dadd( -37.644, 40.2474, 36.6833, 1.38 ) }
    dend_40 { pt3dadd( -39.1306, 42.8465, 38.3493, 0.83 ) }
    dend_40 { pt3dadd( -40.2977, 45.1788, 39.7873, 0.83 ) }
    dend_40 { pt3dadd( -41.1956, 47.1832, 41.0508, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_40 { pt3dadd( -43.0993, 51.5987, 43.9529, 0.83 ) }
    dend_40 { pt3dadd( -44.4179, 54.4066, 45.9204, 0.83 ) }
    dend_40 { pt3dadd( -45.4184, 56.4263, 47.3759, 0.55 ) }
    dend_40 { pt3dadd( -46.2081, 58.0384, 48.5966, 0.55 ) }
    dend_40 { pt3dadd( -46.3179, 58.3085, 48.806, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 5/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -27.3541, 11.5099, 5.67636, 0.55 ) }
    dend_39 { pt3dadd( -29.7032, 12.4244, 8.61377, 0.55 ) }
    dend_39 { pt3dadd( -31.1647, 12.8559, 11.0533, 0.83 ) }
    dend_39 { pt3dadd( -32.3239, 13.1401, 13.5249, 0.83 ) }
    dend_39 { pt3dadd( -34.2788, 13.7125, 18.1634, 0.55 ) }
    dend_39 { pt3dadd( -35.2088, 14.04, 20.5225, 0.83 ) }
    dend_39 { pt3dadd( -35.8011, 14.2788, 22.0358, 0.55 ) }
    dend_39 { pt3dadd( -38.6346, 15.6669, 30.3689, 0.83 ) }
    dend_39 { pt3dadd( -41.0042, 17.1232, 38.2858, 0.55 ) }
    dend_39 { pt3dadd( -41.6318, 17.5892, 40.5767, 0.55 ) }
    dend_39 { pt3dadd( -42.5347, 18.395, 43.9605, 0.55 ) }
    dend_39 { pt3dadd( -42.9297, 18.8302, 45.4908, 0.55 ) }
    dend_39 { pt3dadd( -43.7669, 20.0872, 49.0407, 0.28 ) }
    dend_39 { pt3dadd( -44.1022, 20.9567, 50.7129, 1.11 ) }
    dend_39 { pt3dadd( -44.2601, 21.674, 52.0486, 1.11 ) }
    dend_39 { pt3dadd( -44.5962, 23.201, 55.626, 0.55 ) }
    dend_39 { pt3dadd( -44.8749, 24.3869, 58.8071, 0.55 ) }
    dend_39 { pt3dadd( -45.1696, 25.517, 62.1559, 0.55 ) }
    dend_39 { pt3dadd( -45.5427, 26.7409, 65.989, 0.55 ) }
    dend_39 { pt3dadd( -46.5619, 29.7998, 76.5677, 1.11 ) }
    dend_39 { pt3dadd( -47.5563, 32.9844, 88.1859, 0.55 ) }
    dend_39 { pt3dadd( -47.7406, 33.6234, 90.5822, 0.55 ) }
    dend_39 { pt3dadd( -48.045, 34.6601, 94.524, 0.55 ) }
    dend_39 { pt3dadd( -48.3302, 35.5786, 98.006, 1.11 ) }
    dend_39 { pt3dadd( -49.0787, 37.8512, 106.405, 0.28 ) }
    dend_39 { pt3dadd( -49.6154, 39.5562, 112.143, 1.11 ) }
    dend_39 { pt3dadd( -49.9648, 41.0456, 116.481, 0.28 ) }
    dend_39 { pt3dadd( -50.0331, 41.3186, 117.236, 0.55 ) }
    dend_39 { pt3dadd( -50.4174, 42.6334, 120.691, 0.28 ) }
    dend_39 { pt3dadd( -50.735, 43.4324, 122.618, 1.11 ) }
    dend_39 { pt3dadd( -51.9175, 45.5829, 127.112, 0.28 ) }
    dend_39 { pt3dadd( -52.295, 46.193, 128.447, 0.83 ) }
    dend_39 { pt3dadd( -53.4375, 48.2011, 133.02, 0.28 ) }
    dend_39 { pt3dadd( -53.631, 48.5953, 133.949, 0.55 ) }
    dend_39 { pt3dadd( -54.3735, 50.3822, 138.187, 0.28 ) }
    dend_39 { pt3dadd( -54.7756, 51.4954, 140.951, 1.38 ) }
    dend_39 { pt3dadd( -56.0444, 55.7645, 151.694, 0.28 ) }
    dend_39 { pt3dadd( -56.5587, 57.68, 156.774, 1.11 ) }
    dend_39 { pt3dadd( -56.9057, 59.3136, 161.204, 0.28 ) }
    dend_39 { pt3dadd( -56.9699, 59.7016, 162.303, 0.55 ) }
    dend_39 { pt3dadd( -57.1556, 61.9234, 168.925, 0.28 ) }
    dend_39 { pt3dadd( -57.1915, 62.5742, 170.895, 0.55 ) }
    dend_39 { pt3dadd( -57.4021, 64.2061, 175.468, 0.28 ) }
    // Section: dend_30, id: dend_30, parent: dend_22 (entry count 48/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 27.9338, 32.9713, 1.17259, 0.55 ) }
    dend_30 { pt3dadd( 28.3214, 33.5104, 0.207184, 0.55 ) }
    dend_30 { pt3dadd( 29.6802, 35.4005, -3.17761, 0.55 ) }
    dend_30 { pt3dadd( 30.6433, 36.7402, -5.57684, 0.55 ) }
    dend_30 { pt3dadd( 31.1766, 37.482, -6.90534, 0.55 ) }
    dend_30 { pt3dadd( 32.3538, 39.1195, -9.83776, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 54/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 27.9338, 32.9713, 1.17259, 0.83 ) }
    dend_23 { pt3dadd( 28.9645, 33.633, 1.01038, 0.83 ) }
    dend_23 { pt3dadd( 32.1983, 35.7092, 0.501394, 0.83 ) }
    dend_23 { pt3dadd( 35.8051, 38.0248, -0.0662832, 0.83 ) }
    dend_23 { pt3dadd( 37.326, 39.0013, -0.305675, 0.83 ) }
    dend_23 { pt3dadd( 38.9541, 40.0466, -0.561922, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 60/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 37.9476, 73.1579, 8.38264, 1.11 ) }
    dend_11 { pt3dadd( 38.4778, 77.6094, 7.24794, 1.11 ) }
    dend_11 { pt3dadd( 39.0089, 81.6277, 6.46891, 1.11 ) }
    dend_11 { pt3dadd( 39.2689, 83.8934, 6.11977, 1.38 ) }
    dend_11 { pt3dadd( 39.7442, 87.5276, 5.51945, 1.11 ) }
    dend_11 { pt3dadd( 40.3587, 92.2272, 4.74312, 1.38 ) }
    dend_11 { pt3dadd( 40.7107, 94.9187, 4.29851, 1.38 ) }
    dend_11 { pt3dadd( 41.2698, 99.6893, 3.85751, 0.83 ) }
    dend_11 { pt3dadd( 41.7864, 103.875, 3.5877, 0.83 ) }
    dend_11 { pt3dadd( 42.3756, 108.526, 3.22962, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 70/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 37.9476, 73.1579, 8.38264, 0.55 ) }
    dend_4 { pt3dadd( 39.7143, 73.5939, 10.2623, 0.55 ) }
    dend_4 { pt3dadd( 42.1104, 74.1438, 12.5239, 0.28 ) }
    dend_4 { pt3dadd( 43.1717, 74.4146, 13.5772, 1.11 ) }
    dend_4 { pt3dadd( 44.8313, 74.9997, 14.8639, 0.55 ) }
    dend_4 { pt3dadd( 48.9037, 76.7293, 17.6332, 0.28 ) }
    dend_4 { pt3dadd( 50.3571, 77.416, 18.5175, 0.55 ) }
    dend_4 { pt3dadd( 57.9075, 81.6379, 22.5149, 0.28 ) }
    dend_4 { pt3dadd( 59.9511, 82.9185, 23.3101, 0.55 ) }
    dend_4 { pt3dadd( 67.8722, 88.0743, 24.894, 0.28 ) }
    dend_4 { pt3dadd( 69.1627, 89.0075, 24.5098, 0.55 ) }
    dend_4 { pt3dadd( 70.1166, 89.7343, 23.8, 0.28 ) }
    dend_4 { pt3dadd( 70.6345, 90.1722, 23.2424, 0.55 ) }
    dend_4 { pt3dadd( 72.8654, 92.3632, 20.1406, 0.28 ) }
    dend_4 { pt3dadd( 73.6669, 93.1667, 18.9986, 0.55 ) }
    dend_4 { pt3dadd( 79.0528, 98.6228, 11.6903, 0.28 ) }
    dend_4 { pt3dadd( 80.1363, 99.7223, 10.1899, 0.55 ) }
    dend_4 { pt3dadd( 81.5857, 101.243, 8.16232, 0.28 ) }
    dend_4 { pt3dadd( 83.0918, 102.885, 6.10082, 1.11 ) }
    dend_4 { pt3dadd( 87.2232, 107.962, 0.750452, 0.28 ) }
    dend_4 { pt3dadd( 88.0034, 109.001, -0.215285, 0.55 ) }
    dend_4 { pt3dadd( 96.27, 114.361, -0.403897, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 92/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 15.5822, -85.9555, -66.1879, 0.28 ) }
    dend_59 { pt3dadd( 18.5623, -96.8891, -71.4158, 0.28 ) }
    dend_59 { pt3dadd( 22.3345, -107.674, -76.4884, 0.28 ) }
    dend_59 { pt3dadd( 26.4546, -118.814, -80.3035, 0.28 ) }
    dend_59 { pt3dadd( 30.5315, -130.106, -83.6464, 0.28 ) }
    dend_59 { pt3dadd( 33.3777, -141.886, -86.2987, 0.28 ) }
    dend_59 { pt3dadd( 36.8897, -153.738, -87.4006, 0.28 ) }
    dend_59 { pt3dadd( 42.5722, -164.872, -87.4312, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_59 { pt3dadd( 47.5955, -176.214, -88.7251, 0.28 ) }
    dend_59 { pt3dadd( 52.5834, -187.274, -91.7044, 0.28 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 2/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 15.5822, -85.9555, -66.1879, 1.11 ) }
    dend_56 { pt3dadd( 15.7484, -93.8822, -69.6348, 0.28 ) }
    dend_56 { pt3dadd( 17.0184, -102.053, -72.09, 0.28 ) }
    dend_56 { pt3dadd( 20.0314, -109.923, -74.0872, 0.28 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 6/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -89.829, 46.7847, -42.1331, 0.28 ) }
    dend_51 { pt3dadd( -95.1582, 49.4236, -46.52, 0.28 ) }
    dend_51 { pt3dadd( -100.819, 50.8773, -51.1352, 0.28 ) }
    dend_51 { pt3dadd( -107.065, 52.9755, -54.5767, 0.28 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 10/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -89.829, 46.7847, -42.1331, 1.11 ) }
    dend_50 { pt3dadd( -94.4191, 49.2235, -45.9929, 0.28 ) }
    dend_50 { pt3dadd( -99.024, 51.5608, -49.9044, 0.28 ) }
    dend_50 { pt3dadd( -103.611, 53.929, -53.8149, 0.28 ) }
    dend_50 { pt3dadd( -107.724, 56.713, -57.9206, 0.28 ) }
    dend_50 { pt3dadd( -112.826, 59.5396, -60.7636, 0.28 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 16/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -114.16, 74.536, 92.6109, 0.28 ) }
    dend_48 { pt3dadd( -116.029, 77.9286, 92.536, 0.28 ) }
    dend_48 { pt3dadd( -117.446, 80.459, 92.4654, 0.83 ) }
    dend_48 { pt3dadd( -120.197, 85.6359, 92.4793, 0.28 ) }
    dend_48 { pt3dadd( -121.261, 87.6396, 92.4945, 0.55 ) }
    dend_48 { pt3dadd( -123.048, 91.0089, 92.5271, 0.28 ) }
    dend_48 { pt3dadd( -124.615, 93.8166, 92.8306, 0.83 ) }
    dend_48 { pt3dadd( -126.973, 97.7209, 93.6677, 0.28 ) }
    dend_48 { pt3dadd( -128.723, 99.9653, 94.561, 0.55 ) }
    dend_48 { pt3dadd( -130.263, 101.56, 95.5502, 0.28 ) }
    dend_48 { pt3dadd( -131.058, 102.31, 96.0843, 0.55 ) }
    dend_48 { pt3dadd( -138.415, 108.452, 101.406, 0.28 ) }
    dend_48 { pt3dadd( -139.792, 109.447, 102.442, 0.83 ) }
    dend_48 { pt3dadd( -146.764, 113.831, 108.139, 0.28 ) }
    dend_48 { pt3dadd( -148.062, 114.525, 109.191, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 31/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -114.16, 74.536, 92.6109, 0.28 ) }
    dend_47 { pt3dadd( -115.84, 75.2328, 96.2541, 0.28 ) }
    dend_47 { pt3dadd( -116.41, 75.4899, 97.3857, 0.55 ) }
    dend_47 { pt3dadd( -117.248, 75.9211, 98.9442, 0.28 ) }
    dend_47 { pt3dadd( -118.166, 76.6219, 100.268, 0.55 ) }
    dend_47 { pt3dadd( -123.406, 81.0388, 106.744, 0.28 ) }
    dend_47 { pt3dadd( -125.133, 82.499, 108.648, 0.55 ) }
    dend_47 { pt3dadd( -126.226, 83.4801, 109.692, 0.28 ) }
    dend_47 { pt3dadd( -127.043, 84.2177, 110.408, 1.11 ) }
    dend_47 { pt3dadd( -132.765, 89.3395, 115.019, 0.28 ) }
    dend_47 { pt3dadd( -134.492, 90.7432, 116.345, 0.83 ) }
    dend_47 { pt3dadd( -136.32, 92.0925, 117.676, 0.28 ) }
    dend_47 { pt3dadd( -137.29, 92.7572, 118.427, 0.55 ) }
    dend_47 { pt3dadd( -139.691, 94.2312, 120.349, 0.28 ) }
    dend_47 { pt3dadd( -141.861, 95.4603, 122.2, 0.83 ) }
    dend_47 { pt3dadd( -147.755, 98.4793, 127.495, 0.28 ) }
    dend_47 { pt3dadd( -149.126, 99.1743, 128.732, 0.55 ) }
    dend_47 { pt3dadd( -151.752, 100.519, 131.144, 0.28 ) }
    dend_47 { pt3dadd( -153.975, 101.653, 133.19, 1.11 ) }
    dend_47 { pt3dadd( -157.187, 103.282, 136.093, 0.28 ) }
    dend_47 { pt3dadd( -158.335, 103.865, 137.119, 0.55 ) }
    dend_47 { pt3dadd( -160.49, 105.019, 139.088, 0.28 ) }
    dend_47 { pt3dadd( -161.938, 105.817, 140.515, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 54/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -46.3179, 58.3085, 48.806, 0.28 ) }
    dend_44 { pt3dadd( -35.612, 58.0453, 66.4576, 0.28 ) }
    dend_44 { pt3dadd( -33.3406, 57.9797, 69.9308, 1.11 ) }
    dend_44 { pt3dadd( -28.6297, 57.7981, 76.5906, 0.28 ) }
    dend_44 { pt3dadd( -27.2678, 57.7455, 78.3949, 0.83 ) }
    dend_44 { pt3dadd( -22.815, 57.5526, 84.0539, 0.28 ) }
    dend_44 { pt3dadd( -20.5045, 57.4526, 86.9903, 0.83 ) }
    dend_44 { pt3dadd( -17.5313, 57.2398, 89.6533, 0.28 ) }
    dend_44 { pt3dadd( -14.8364, 57.0167, 91.7003, 0.55 ) }
    dend_44 { pt3dadd( -10.49, 56.5509, 94.1834, 0.28 ) }
    dend_44 { pt3dadd( -8.18929, 56.3339, 95.7549, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 65/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -46.3179, 58.3085, 48.806, 1.11 ) }
    dend_41 { pt3dadd( -46.7526, 59.1543, 49.3079, 1.11 ) }
    dend_41 { pt3dadd( -47.5615, 60.5291, 50.4081, 0.55 ) }
    dend_41 { pt3dadd( -48.4824, 62.1566, 51.8092, 1.11 ) }
    dend_41 { pt3dadd( -49.2971, 63.6658, 53.2724, 0.83 ) }
    dend_41 { pt3dadd( -49.9581, 64.91, 54.5627, 0.55 ) }
    dend_41 { pt3dadd( -50.5121, 65.9369, 55.6766, 1.11 ) }
    dend_41 { pt3dadd( -51.8276, 68.3256, 58.4744, 0.55 ) }
    dend_41 { pt3dadd( -52.1579, 68.9482, 59.2499, 0.55 ) }
    dend_41 { pt3dadd( -52.9789, 70.5211, 61.2899, 0.55 ) }
    dend_41 { pt3dadd( -53.4939, 71.559, 62.4874, 1.11 ) }
    dend_41 { pt3dadd( -53.8849, 72.3955, 63.3361, 0.55 ) }
    dend_41 { pt3dadd( -54.1528, 73.0289, 63.8924, 0.83 ) }
    dend_41 { pt3dadd( -54.6296, 74.2452, 64.7912, 0.55 ) }
    dend_41 { pt3dadd( -54.9329, 74.9748, 65.3046, 0.83 ) }
    dend_41 { pt3dadd( -56.0017, 77.6429, 66.9399, 1.38 ) }
    dend_41 { pt3dadd( -56.4698, 78.9036, 67.6803, 0.55 ) }
    dend_41 { pt3dadd( -56.8207, 79.9122, 68.2639, 0.28 ) }
    dend_41 { pt3dadd( -57.4159, 81.6121, 69.2942, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 84/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 32.3538, 39.1195, -9.83776, 0.83 ) }
    dend_34 { pt3dadd( 33.9362, 39.4707, -11.8271, 0.83 ) }
    dend_34 { pt3dadd( 37.0375, 40.2333, -15.2318, 0.55 ) }
    dend_34 { pt3dadd( 42.5311, 41.5892, -20.6227, 0.55 ) }
    dend_34 { pt3dadd( 43.3184, 41.8115, -21.3844, 0.55 ) }
    dend_34 { pt3dadd( 45.626, 42.4832, -23.4574, 0.55 ) }
    dend_34 { pt3dadd( 47.2113, 42.9446, -24.8815, 0.55 ) }
    dend_34 { pt3dadd( 48.3296, 43.2496, -25.8568, 0.55 ) }
    dend_34 { pt3dadd( 50.1597, 43.8166, -27.0804, 0.55 ) }
    dend_34 { pt3dadd( 54.237, 45.2972, -28.8756, 0.55 ) }
    dend_34 { pt3dadd( 56.2292, 46.0549, -29.9199, 0.55 ) }
    dend_34 { pt3dadd( 62.8748, 48.3286, -34.7788, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 96/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 32.3538, 39.1195, -9.83776, 0.55 ) }
    dend_31 { pt3dadd( 32.0489, 42.1944, -11.7046, 0.55 ) }
    dend_31 { pt3dadd( 31.8202, 45.5213, -14.2751, 0.55 ) }
    dend_31 { pt3dadd( 31.7273, 47.6624, -16.0678, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_31 { pt3dadd( 31.6805, 49.7344, -17.8525, 0.55 ) }
    dend_31 { pt3dadd( 31.6145, 52.9095, -20.5795, 0.55 ) }
    dend_31 { pt3dadd( 31.6152, 54.6913, -22.0823, 0.55 ) }
    dend_31 { pt3dadd( 31.8949, 58.0468, -25.1976, 0.83 ) }
    dend_31 { pt3dadd( 31.9679, 58.9338, -26.0396, 0.28 ) }
    dend_31 { pt3dadd( 32.0382, 59.3847, -26.5192, 0.55 ) }
    dend_31 { pt3dadd( 32.3131, 60.3269, -27.8143, 0.55 ) }
    dend_31 { pt3dadd( 32.6678, 61.0168, -29.1086, 0.55 ) }
    dend_31 { pt3dadd( 33.6062, 63.01, -32.2237, 0.83 ) }
    dend_31 { pt3dadd( 33.197, 69.7816, -40.5864, 0.83 ) }
    dend_31 { pt3dadd( 34.2779, 75.5525, -49.6951, 0.83 ) }
    dend_31 { pt3dadd( 37.0679, 82.868, -57.0496, 0.83 ) }
    dend_31 { pt3dadd( 38.126, 90.3892, -64.6139, 0.83 ) }
    dend_31 { pt3dadd( 40.754, 99.2121, -69.9193, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 14/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 38.9541, 40.0466, -0.561922, 0.83 ) }
    dend_27 { pt3dadd( 44.1912, 46.5343, 0.421788, 0.83 ) }
    dend_27 { pt3dadd( 46.0713, 48.9204, 0.261193, 0.83 ) }
    dend_27 { pt3dadd( 48.2403, 51.4411, -0.322082, 0.55 ) }
    dend_27 { pt3dadd( 50.2652, 53.61, -0.929618, 0.55 ) }
    dend_27 { pt3dadd( 52.1124, 55.4468, -1.42765, 0.83 ) }
    dend_27 { pt3dadd( 54.2577, 57.4686, -2.10509, 0.83 ) }
    dend_27 { pt3dadd( 56.2921, 59.4186, -3.17441, 0.28 ) }
    dend_27 { pt3dadd( 59.701, 62.5109, -5.4, 0.28 ) }
    dend_27 { pt3dadd( 60.9286, 63.5213, -6.26692, 1.11 ) }
    dend_27 { pt3dadd( 62.6015, 64.8463, -7.79092, 0.55 ) }
    dend_27 { pt3dadd( 65.478, 67.0804, -10.985, 0.83 ) }
    dend_27 { pt3dadd( 68.4781, 69.4648, -14.5908, 0.55 ) }
    dend_27 { pt3dadd( 71.2766, 71.7578, -18.3888, 0.83 ) }
    dend_27 { pt3dadd( 71.9397, 72.3304, -19.4622, 0.83 ) }
    dend_27 { pt3dadd( 75.3127, 75.4, -25.7317, 0.28 ) }
    dend_27 { pt3dadd( 76.653, 76.6765, -28.6641, 0.83 ) }
    dend_27 { pt3dadd( 84.3133, 83.2364, -34.5615, 0.83 ) }
    dend_27 { pt3dadd( 93.3392, 88.6668, -39.7184, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 33/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 38.9541, 40.0466, -0.561922, 0.83 ) }
    dend_24 { pt3dadd( 41.5515, 42.1556, -0.104781, 0.83 ) }
    dend_24 { pt3dadd( 43.2318, 43.5772, 0.453355, 0.83 ) }
    dend_24 { pt3dadd( 44.5824, 44.7246, 0.981672, 0.83 ) }
    dend_24 { pt3dadd( 46.4011, 46.3429, 1.78588, 0.83 ) }
    dend_24 { pt3dadd( 48.5699, 48.2863, 2.85129, 1.11 ) }
    dend_24 { pt3dadd( 50.7296, 50.2019, 3.93175, 0.83 ) }
    dend_24 { pt3dadd( 53.3493, 52.5419, 5.38211, 1.11 ) }
    dend_24 { pt3dadd( 54.7416, 53.7918, 6.21133, 0.55 ) }
    dend_24 { pt3dadd( 56.6924, 55.4694, 7.49471, 0.83 ) }
    dend_24 { pt3dadd( 58.3803, 56.768, 8.63761, 0.83 ) }
    dend_24 { pt3dadd( 60.484, 58.2331, 10.1141, 1.11 ) }
    dend_24 { pt3dadd( 62.2229, 59.3288, 11.3389, 0.55 ) }
    dend_24 { pt3dadd( 63.4729, 60.0848, 12.2363, 0.28 ) }
    dend_24 { pt3dadd( 67.3259, 62.2642, 15.1143, 1.38 ) }
    dend_24 { pt3dadd( 70.5956, 63.9463, 17.56, 0.55 ) }
    dend_24 { pt3dadd( 71.797, 64.5082, 18.4774, 0.83 ) }
    dend_24 { pt3dadd( 73.5064, 65.2764, 19.8356, 0.55 ) }
    dend_24 { pt3dadd( 75.9008, 66.315, 21.7519, 0.28 ) }
    dend_24 { pt3dadd( 77.7788, 67.0861, 23.2529, 1.38 ) }
    dend_24 { pt3dadd( 80.4275, 68.0728, 25.2393, 0.55 ) }
    dend_24 { pt3dadd( 82.3964, 68.7122, 26.7222, 1.38 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 55/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 42.3756, 108.526, 3.22962, 1.11 ) }
    dend_17 { pt3dadd( 42.3274, 109.057, 3.19739, 1.11 ) }
    dend_17 { pt3dadd( 42.2642, 110.902, 2.9698, 0.83 ) }
    dend_17 { pt3dadd( 42.3997, 113.085, 2.69636, 0.83 ) }
    dend_17 { pt3dadd( 42.8372, 115.623, 2.43179, 1.11 ) }
    dend_17 { pt3dadd( 43.7685, 119.706, 2.0673, 1.11 ) }
    dend_17 { pt3dadd( 44.1331, 121.152, 1.89166, 0.83 ) }
    dend_17 { pt3dadd( 44.7899, 123.656, 1.50437, 0.83 ) }
    dend_17 { pt3dadd( 45.5528, 126.275, 1.0649, 1.38 ) }
    dend_17 { pt3dadd( 46.3698, 128.839, 0.585995, 1.11 ) }
    dend_17 { pt3dadd( 47.1097, 130.979, 0.17037, 1.11 ) }
    dend_17 { pt3dadd( 48.2307, 133.884, -0.389911, 1.11 ) }
    dend_17 { pt3dadd( 50.0267, 138.848, -1.31884, 1.38 ) }
    dend_17 { pt3dadd( 50.5504, 140.715, -1.66448, 0.55 ) }
    dend_17 { pt3dadd( 50.803, 141.907, -1.94377, 0.83 ) }
    dend_17 { pt3dadd( 50.8857, 142.415, -2.079, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 71/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 42.3756, 108.526, 3.22962, 0.55 ) }
    dend_12 { pt3dadd( 42.7759, 110.771, -2.70827, 0.55 ) }
    dend_12 { pt3dadd( 42.8507, 111.259, -3.92218, 0.55 ) }
    dend_12 { pt3dadd( 43.2013, 112.688, -7.03154, 0.83 ) }
    dend_12 { pt3dadd( 43.741, 114.89, -11.8196, 0.55 ) }
    dend_12 { pt3dadd( 44.0468, 116.137, -14.532, 0.83 ) }
    dend_12 { pt3dadd( 44.3608, 117.418, -17.3177, 0.28 ) }
    dend_12 { pt3dadd( 44.3753, 118.073, -18.9193, 0.55 ) }
    dend_12 { pt3dadd( 44.3149, 119.052, -21.2673, 0.55 ) }
    dend_12 { pt3dadd( 43.268, 122.731, -31.3282, 0.55 ) }
    dend_12 { pt3dadd( 41.2655, 126.88, -41.0404, 0.55 ) }
    dend_12 { pt3dadd( 39.8177, 130.377, -51.1215, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_4 (entry count 83/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 96.27, 114.361, -0.403897, 0.28 ) }
    dend_10 { pt3dadd( 102.277, 118.497, -1.06682, 0.28 ) }
    dend_10 { pt3dadd( 109.131, 121.109, -2.05518, 0.28 ) }
    dend_10 { pt3dadd( 116.05, 122.721, -4.22735, 0.28 ) }
    dend_10 { pt3dadd( 123.136, 124.681, -5.27099, 0.28 ) }
    dend_10 { pt3dadd( 129.488, 127.524, -7.706, 0.28 ) }
    dend_10 { pt3dadd( 134.75, 130.813, -11.6051, 0.28 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 90/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 96.27, 114.361, -0.403897, 1.11 ) }
    dend_5 { pt3dadd( 102.335, 118.571, -1.18973, 0.28 ) }
    dend_5 { pt3dadd( 108.045, 123.213, -1.93673, 0.28 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 93/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 20.0314, -109.923, -74.0872, 0.28 ) }
    dend_58 { pt3dadd( 21.4102, -118.385, -76.8753, 0.28 ) }
    dend_58 { pt3dadd( 20.854, -126.969, -79.4673, 0.28 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 96/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 20.0314, -109.923, -74.0872, 0.28 ) }
    dend_57 { pt3dadd( 21.5379, -117.657, -76.4378, 0.28 ) }
    dend_57 { pt3dadd( 21.8966, -125.58, -78.4422, 0.28 ) }
    dend_57 { pt3dadd( 22.2513, -133.639, -79.7782, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_57 { pt3dadd( 23.2181, -141.625, -81.348, 0.28 ) }
    dend_57 { pt3dadd( 23.3871, -149.225, -84.4021, 0.28 ) }
    dend_57 { pt3dadd( 24.3792, -156.383, -88.3624, 0.28 ) }
    dend_57 { pt3dadd( 25.5598, -163.786, -91.7614, 0.28 ) }
    dend_57 { pt3dadd( 28.0357, -171.062, -94.8305, 0.28 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 5/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -57.4159, 81.6121, 69.2942, 0.55 ) }
    dend_43 { pt3dadd( -58.7236, 83.7632, 71.4682, 0.55 ) }
    dend_43 { pt3dadd( -59.6749, 85.3066, 73.2016, 0.55 ) }
    dend_43 { pt3dadd( -60.7676, 87.2261, 75.3915, 1.11 ) }
    dend_43 { pt3dadd( -62.0867, 89.6767, 78.3978, 0.55 ) }
    dend_43 { pt3dadd( -62.6163, 90.6548, 79.7746, 0.28 ) }
    dend_43 { pt3dadd( -63.622, 92.6277, 82.623, 0.55 ) }
    dend_43 { pt3dadd( -64.1702, 93.9106, 84.6868, 0.28 ) }
    dend_43 { pt3dadd( -64.4267, 94.4992, 85.7313, 0.83 ) }
    dend_43 { pt3dadd( -65.2134, 96.1297, 88.8862, 0.28 ) }
    dend_43 { pt3dadd( -66.0472, 97.775, 92.1181, 0.28 ) }
    dend_43 { pt3dadd( -66.4299, 98.4947, 93.5989, 0.83 ) }
    dend_43 { pt3dadd( -66.9841, 99.4843, 95.6761, 0.28 ) }
    dend_43 { pt3dadd( -68.1808, 101.604, 100.083, 0.28 ) }
    dend_43 { pt3dadd( -68.878, 102.816, 102.48, 0.83 ) }
    dend_43 { pt3dadd( -70.3617, 105.454, 107.308, 0.28 ) }
    dend_43 { pt3dadd( -70.4333, 105.589, 107.54, 0.55 ) }
    dend_43 { pt3dadd( -71.1211, 106.904, 109.7, 0.28 ) }
    dend_43 { pt3dadd( -71.6007, 107.869, 111.042, 0.83 ) }
    dend_43 { pt3dadd( -72.0419, 108.813, 112.068, 0.28 ) }
    dend_43 { pt3dadd( -72.1278, 108.999, 112.235, 0.55 ) }
    dend_43 { pt3dadd( -73.206, 111.226, 113.951, 0.28 ) }
    dend_43 { pt3dadd( -74.1426, 113.118, 115.391, 1.11 ) }
    dend_43 { pt3dadd( -75.8399, 116.509, 118.093, 0.28 ) }
    dend_43 { pt3dadd( -76.481, 117.749, 119.137, 0.55 ) }
    dend_43 { pt3dadd( -77.2697, 119.278, 120.518, 0.83 ) }
    dend_43 { pt3dadd( -78.2543, 121.786, 122.429, 0.28 ) }
    dend_43 { pt3dadd( -78.45, 122.502, 122.87, 0.55 ) }
    dend_43 { pt3dadd( -78.8356, 125.476, 124.372, 0.28 ) }
    dend_43 { pt3dadd( -78.8265, 126.895, 124.872, 0.28 ) }
    dend_43 { pt3dadd( -78.6422, 129.815, 125.771, 1.11 ) }
    dend_43 { pt3dadd( -77.9424, 136.275, 127.001, 0.28 ) }
    dend_43 { pt3dadd( -77.7564, 137.31, 127.029, 0.55 ) }
    dend_43 { pt3dadd( -77.3953, 138.951, 126.894, 0.28 ) }
    dend_43 { pt3dadd( -77.2241, 139.501, 126.747, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 40/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -57.4159, 81.6121, 69.2942, 0.28 ) }
    dend_42 { pt3dadd( -59.4238, 87.8395, 66.789, 0.28 ) }
    dend_42 { pt3dadd( -60.4407, 90.4434, 65.8455, 0.28 ) }
    dend_42 { pt3dadd( -61.0401, 91.8475, 65.3842, 0.28 ) }
    dend_42 { pt3dadd( -62.044, 94.2051, 64.3843, 0.83 ) }
    dend_42 { pt3dadd( -63.2458, 97.1822, 63.0373, 0.28 ) }
    dend_42 { pt3dadd( -63.4396, 97.7847, 62.7125, 0.55 ) }
    dend_42 { pt3dadd( -64.2625, 100.626, 61.0988, 0.28 ) }
    dend_42 { pt3dadd( -64.7032, 102.299, 59.987, 0.55 ) }
    dend_42 { pt3dadd( -65.5434, 106.341, 57.0045, 0.28 ) }
    dend_42 { pt3dadd( -65.7062, 107.901, 55.7119, 0.83 ) }
    dend_42 { pt3dadd( -65.5859, 111.961, 52.0271, 0.28 ) }
    dend_42 { pt3dadd( -65.4945, 112.709, 51.2785, 0.83 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 53/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 40.754, 99.2121, -69.9193, 0.28 ) }
    dend_33 { pt3dadd( 41.7108, 105.694, -76.5194, 0.28 ) }
    dend_33 { pt3dadd( 42.3582, 112.653, -82.5977, 0.28 ) }
    dend_33 { pt3dadd( 41.6358, 120.151, -87.8988, 0.28 ) }
    dend_33 { pt3dadd( 41.1165, 128.259, -92.1362, 0.28 ) }
    dend_33 { pt3dadd( 39.2961, 135.934, -96.8543, 0.28 ) }
    dend_33 { pt3dadd( 35.9883, 142.524, -102.473, 0.28 ) }
    dend_33 { pt3dadd( 34.2551, 150.205, -107.213, 0.28 ) }
    dend_33 { pt3dadd( 33.8112, 157.825, -112.355, 0.28 ) }
    dend_33 { pt3dadd( 34.0354, 165.178, -117.928, 0.28 ) }
    dend_33 { pt3dadd( 32.4597, 172.012, -123.971, 0.28 ) }
    dend_33 { pt3dadd( 30.4394, 177.687, -131.11, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 65/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 40.754, 99.2121, -69.9193, 1.11 ) }
    dend_32 { pt3dadd( 42.0157, 103.382, -74.9439, 0.28 ) }
    dend_32 { pt3dadd( 43.5087, 108.704, -78.5314, 0.28 ) }
    dend_32 { pt3dadd( 45.7162, 113.458, -82.6058, 0.28 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 69/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 93.3392, 88.6668, -39.7184, 0.28 ) }
    dend_29 { pt3dadd( 101.18, 94.91, -44.9297, 0.28 ) }
    dend_29 { pt3dadd( 110.371, 99.2251, -50.0911, 0.28 ) }
    dend_29 { pt3dadd( 119.184, 104.028, -55.433, 0.28 ) }
    dend_29 { pt3dadd( 127.493, 108.708, -61.626, 0.28 ) }
    dend_29 { pt3dadd( 135.105, 115.27, -66.7415, 0.28 ) }
    dend_29 { pt3dadd( 141.467, 122.156, -72.9553, 0.28 ) }
    dend_29 { pt3dadd( 148.045, 128.909, -79.1061, 0.28 ) }
    dend_29 { pt3dadd( 153.58, 134.068, -87.5429, 0.28 ) }
    dend_29 { pt3dadd( 159.62, 139.558, -95.3864, 0.28 ) }
    dend_29 { pt3dadd( 165.86, 145.276, -102.89, 0.28 ) }
    dend_29 { pt3dadd( 172.591, 151.162, -109.807, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 81/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 93.3392, 88.6668, -39.7184, 1.11 ) }
    dend_28 { pt3dadd( 98.9254, 92.8802, -43.266, 0.28 ) }
    dend_28 { pt3dadd( 103.861, 97.7183, -46.8961, 0.28 ) }
    dend_28 { pt3dadd( 108.275, 103.242, -50.0878, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 82.3964, 68.7122, 26.7222, 1.11 ) }
    dend_26 { pt3dadd( 85.0812, 69.7746, 28.1546, 1.11 ) }
    dend_26 { pt3dadd( 87.2297, 70.71, 29.1756, 0.55 ) }
    dend_26 { pt3dadd( 88.7842, 71.4513, 29.6481, 0.83 ) }
    dend_26 { pt3dadd( 90.8917, 72.5473, 30.1513, 0.28 ) }
    dend_26 { pt3dadd( 94.5631, 74.5765, 30.8464, 1.38 ) }
    dend_26 { pt3dadd( 99.0033, 77.1335, 31.5527, 0.55 ) }
    dend_26 { pt3dadd( 102.4, 79.0983, 32.1243, 1.38 ) }
    dend_26 { pt3dadd( 107.387, 81.9253, 32.8914, 0.28 ) }
    dend_26 { pt3dadd( 108.645, 82.5899, 33.109, 0.55 ) }
    dend_26 { pt3dadd( 111.749, 84.128, 33.7233, 0.28 ) }
    dend_26 { pt3dadd( 114.494, 85.368, 34.3535, 0.83 ) }
    dend_26 { pt3dadd( 121.499, 88.2606, 36.4147, 0.28 ) }
    dend_26 { pt3dadd( 124.184, 89.2459, 37.4237, 1.11 ) }
    dend_26 { pt3dadd( 128.113, 90.5557, 39.2129, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_26 { pt3dadd( 131.251, 91.4974, 40.7205, 0.83 ) }
    dend_26 { pt3dadd( 133.75, 92.1785, 42.0227, 0.28 ) }
    dend_26 { pt3dadd( 135.242, 92.5446, 42.8031, 0.55 ) }
    dend_26 { pt3dadd( 136.572, 92.8396, 43.4677, 0.28 ) }
    dend_26 { pt3dadd( 138.005, 93.1672, 44.1563, 0.83 ) }
    dend_26 { pt3dadd( 140.363, 93.7091, 45.2016, 0.28 ) }
    dend_26 { pt3dadd( 141.689, 93.9671, 45.7925, 0.83 ) }
    dend_26 { pt3dadd( 143.855, 94.3405, 46.7544, 0.28 ) }
    dend_26 { pt3dadd( 145.682, 94.6256, 47.5869, 0.55 ) }
    dend_26 { pt3dadd( 148.627, 95.0457, 48.8485, 0.28 ) }
    dend_26 { pt3dadd( 150.178, 95.2491, 49.5145, 0.83 ) }
    dend_26 { pt3dadd( 153.119, 95.7248, 50.6741, 0.28 ) }
    dend_26 { pt3dadd( 154.507, 95.9759, 51.132, 1.11 ) }
    dend_26 { pt3dadd( 158.933, 96.8942, 52.4151, 0.28 ) }
    dend_26 { pt3dadd( 160.536, 97.2467, 52.7866, 0.28 ) }
    dend_26 { pt3dadd( 163.988, 98.0549, 53.4582, 0.83 ) }
    dend_26 { pt3dadd( 168.822, 99.3603, 54.3449, 0.28 ) }
    dend_26 { pt3dadd( 171.839, 100.493, 55.3017, 0.83 ) }
    dend_26 { pt3dadd( 174.147, 101.61, 56.4643, 0.28 ) }
    dend_26 { pt3dadd( 175.148, 102.215, 57.179, 0.83 ) }
    dend_26 { pt3dadd( 177.108, 103.589, 59.0933, 0.28 ) }
    dend_26 { pt3dadd( 177.909, 104.228, 60.1619, 0.83 ) }
    dend_26 { pt3dadd( 182.688, 108.446, 68.6706, 0.28 ) }
    dend_26 { pt3dadd( 183.538, 109.248, 70.5055, 0.55 ) }
    dend_26 { pt3dadd( 183.968, 109.641, 71.5556, 0.83 ) }
    dend_26 { pt3dadd( 184.936, 110.482, 74.2519, 0.28 ) }
    dend_26 { pt3dadd( 185.759, 111.163, 76.6632, 0.83 ) }
    dend_26 { pt3dadd( 187.073, 112.13, 80.5672, 0.28 ) }
    dend_26 { pt3dadd( 188.135, 112.703, 83.564, 0.83 ) }
    dend_26 { pt3dadd( 190.155, 113.81, 89.5915, 0.28 ) }
    dend_26 { pt3dadd( 191.879, 114.787, 95.1488, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 31/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 82.3964, 68.7122, 26.7222, 0.28 ) }
    dend_25 { pt3dadd( 84.2965, 67.3332, 26.4007, 0.28 ) }
    dend_25 { pt3dadd( 85.066, 66.7803, 26.3026, 0.55 ) }
    dend_25 { pt3dadd( 90.4706, 63.0178, 25.9799, 0.28 ) }
    dend_25 { pt3dadd( 92.0703, 61.9568, 26.0056, 1.11 ) }
    dend_25 { pt3dadd( 93.8347, 60.8295, 26.127, 0.28 ) }
    dend_25 { pt3dadd( 94.4288, 60.4596, 26.1984, 0.55 ) }
    dend_25 { pt3dadd( 96.0326, 59.5325, 26.5674, 0.28 ) }
    dend_25 { pt3dadd( 98.1578, 58.3305, 27.1719, 1.66 ) }
    dend_25 { pt3dadd( 100.418, 57.1072, 28.0434, 0.28 ) }
    dend_25 { pt3dadd( 101.009, 56.8065, 28.2594, 0.83 ) }
    dend_25 { pt3dadd( 102.643, 55.9938, 28.8746, 0.28 ) }
    dend_25 { pt3dadd( 103.539, 55.5408, 29.1823, 0.83 ) }
    dend_25 { pt3dadd( 108.416, 52.9779, 30.6921, 0.28 ) }
    dend_25 { pt3dadd( 110.142, 52.0607, 31.2203, 1.11 ) }
    dend_25 { pt3dadd( 113.457, 50.3131, 32.2762, 0.28 ) }
    dend_25 { pt3dadd( 114.5, 49.7644, 32.6394, 0.83 ) }
    dend_25 { pt3dadd( 116.937, 48.508, 33.5692, 0.28 ) }
    dend_25 { pt3dadd( 117.528, 48.2159, 33.8212, 0.83 ) }
    dend_25 { pt3dadd( 119.503, 47.2768, 34.706, 0.28 ) }
    dend_25 { pt3dadd( 120.711, 46.6978, 35.2339, 0.83 ) }
    dend_25 { pt3dadd( 122.283, 45.9714, 35.9478, 0.28 ) }
    dend_25 { pt3dadd( 123.089, 45.6505, 36.3075, 0.83 ) }
    dend_25 { pt3dadd( 131.016, 42.8885, 39.9294, 0.28 ) }
    dend_25 { pt3dadd( 132.193, 42.5255, 40.4509, 0.55 ) }
    dend_25 { pt3dadd( 134.183, 41.9936, 41.2998, 0.28 ) }
    dend_25 { pt3dadd( 136.15, 41.4979, 42.1074, 1.11 ) }
    dend_25 { pt3dadd( 140.876, 40.4707, 44.016, 0.28 ) }
    dend_25 { pt3dadd( 141.966, 40.2869, 44.4819, 0.83 ) }
    dend_25 { pt3dadd( 142.989, 40.2797, 44.9904, 0.28 ) }
    dend_25 { pt3dadd( 143.851, 40.3105, 45.4523, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 62/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 50.8857, 142.415, -2.079, 0.55 ) }
    dend_21 { pt3dadd( 51.0593, 143.526, -1.75108, 0.55 ) }
    dend_21 { pt3dadd( 51.7584, 147.314, -0.636026, 0.83 ) }
    dend_21 { pt3dadd( 52.4532, 151.027, 0.464639, 0.55 ) }
    dend_21 { pt3dadd( 52.9877, 155.24, 1.55091, 0.83 ) }
    dend_21 { pt3dadd( 53.2957, 157.771, 2.08484, 0.55 ) }
    dend_21 { pt3dadd( 53.7392, 161.625, 2.82292, 0.83 ) }
    dend_21 { pt3dadd( 54.0116, 163.703, 3.20636, 0.55 ) }
    dend_21 { pt3dadd( 54.4596, 166.541, 3.68032, 1.11 ) }
    dend_21 { pt3dadd( 55.434, 171.494, 3.72751, 1.11 ) }
    dend_21 { pt3dadd( 56.0885, 174.901, 3.15265, 0.55 ) }
    dend_21 { pt3dadd( 56.2729, 175.877, 2.85239, 0.83 ) }
    dend_21 { pt3dadd( 56.6377, 177.417, 2.10061, 0.55 ) }
    dend_21 { pt3dadd( 57.2468, 179.986, 0.554811, 0.83 ) }
    dend_21 { pt3dadd( 59.2689, 188.178, -5.44844, 0.55 ) }
    dend_21 { pt3dadd( 60.281, 192.186, -8.78501, 0.55 ) }
    dend_21 { pt3dadd( 60.703, 194.16, -10.5393, 0.83 ) }
    dend_21 { pt3dadd( 61.5956, 198.852, -14.8849, 0.55 ) }
    dend_21 { pt3dadd( 61.8998, 200.789, -16.7449, 0.83 ) }
    dend_21 { pt3dadd( 62.1866, 203.081, -18.9016, 0.28 ) }
    dend_21 { pt3dadd( 62.1987, 203.544, -19.1721, 0.55 ) }
    dend_21 { pt3dadd( 62.2827, 204.63, -19.6256, 0.28 ) }
    dend_21 { pt3dadd( 62.3749, 205.702, -19.9243, 0.55 ) }
    dend_21 { pt3dadd( 62.573, 207.868, -20.2028, 0.28 ) }
    dend_21 { pt3dadd( 62.8414, 210.191, -20.4753, 0.83 ) }
    dend_21 { pt3dadd( 63.6598, 217.375, -21.1917, 0.28 ) }
    dend_21 { pt3dadd( 63.931, 219.562, -21.4109, 0.83 ) }
    dend_21 { pt3dadd( 64.1891, 221.659, -21.6255, 0.28 ) }
    dend_21 { pt3dadd( 64.3468, 222.82, -21.7419, 0.55 ) }
    dend_21 { pt3dadd( 64.8572, 226.204, -22.0282, 0.28 ) }
    dend_21 { pt3dadd( 65.128, 227.698, -22.152, 0.55 ) }
    dend_21 { pt3dadd( 66.4859, 234.872, -22.5264, 0.28 ) }
    dend_21 { pt3dadd( 66.673, 235.974, -22.5247, 0.28 ) }
    dend_21 { pt3dadd( 67.2378, 239.824, -22.3622, 0.83 ) }
    dend_21 { pt3dadd( 67.6859, 243.419, -22.122, 1.11 ) }
    dend_21 { pt3dadd( 68.0422, 246.59, -21.8066, 1.66 ) }
    dend_21 { pt3dadd( 68.5137, 252.082, -21.2853, 1.38 ) }
    dend_21 { pt3dadd( 68.7064, 255.441, -20.958, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( 68.8398, 258.643, -20.6793, 1.38 ) }
    dend_21 { pt3dadd( 69.0267, 268.425, -20.0648, 0.28 ) }
    dend_21 { pt3dadd( 69.0178, 270.03, -20.0063, 0.55 ) }
    dend_21 { pt3dadd( 69.0053, 273.501, -19.999, 0.28 ) }
    dend_21 { pt3dadd( 69.0232, 274.959, -20.0779, 0.55 ) }
    dend_21 { pt3dadd( 69.0711, 279.796, -20.48, 0.28 ) }
    dend_21 { pt3dadd( 69.196, 284.609, -21.1885, 0.83 ) }
    dend_21 { pt3dadd( 69.4075, 291.064, -22.5039, 0.28 ) }
    dend_21 { pt3dadd( 69.5676, 294.689, -23.5463, 1.11 ) }
    dend_21 { pt3dadd( 69.7624, 298.258, -24.8201, 0.28 ) }
    dend_21 { pt3dadd( 69.9055, 300.12, -25.83, 0.83 ) }
    dend_21 { pt3dadd( 70.2945, 303.891, -28.5783, 0.28 ) }
    dend_21 { pt3dadd( 70.3858, 304.596, -29.1972, 0.83 ) }
    dend_21 { pt3dadd( 70.9956, 308.458, -33.3466, 0.28 ) }
    dend_21 { pt3dadd( 71.1366, 309.469, -34.5423, 1.11 ) }
    dend_21 { pt3dadd( 72.0615, 315.445, -42.2495, 0.28 ) }
    dend_21 { pt3dadd( 72.2978, 316.802, -44.152, 0.83 ) }
    dend_21 { pt3dadd( 71.8038, 328.914, -50.0983, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 18/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 50.8857, 142.415, -2.079, 0.83 ) }
    dend_18 { pt3dadd( 52.7345, 145.955, -2.95213, 0.83 ) }
    dend_18 { pt3dadd( 54.6052, 149.532, -4.39868, 0.83 ) }
    dend_18 { pt3dadd( 55.7954, 151.808, -5.31908, 0.55 ) }
    dend_18 { pt3dadd( 56.6887, 153.516, -6.00979, 0.55 ) }
    dend_18 { pt3dadd( 58.458, 156.899, -7.378, 0.55 ) }
    dend_18 { pt3dadd( 59.7806, 159.428, -8.40074, 0.83 ) }
    dend_18 { pt3dadd( 61.7723, 162.9, -10.6476, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 26/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 39.8177, 130.377, -51.1215, 0.28 ) }
    dend_14 { pt3dadd( 37.8109, 134.278, -61.1769, 0.28 ) }
    dend_14 { pt3dadd( 34.1832, 139.669, -69.9398, 0.28 ) }
    dend_14 { pt3dadd( 29.331, 146.122, -77.1819, 0.28 ) }
    dend_14 { pt3dadd( 22.4316, 150.529, -84.4414, 0.28 ) }
    dend_14 { pt3dadd( 13.4068, 153.84, -89.7302, 0.28 ) }
    dend_14 { pt3dadd( 4.93359, 156.64, -96.1413, 0.28 ) }
    dend_14 { pt3dadd( -3.61283, 160.33, -101.929, 0.28 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 34/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 39.8177, 130.377, -51.1215, 1.11 ) }
    dend_13 { pt3dadd( 42.5479, 133.936, -60.9936, 0.28 ) }
    dend_13 { pt3dadd( 46.8243, 137.755, -70.1896, 0.28 ) }
    dend_13 { pt3dadd( 52.0352, 140.412, -79.3472, 0.28 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 38/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 108.045, 123.213, -1.93673, 0.28 ) }
    dend_7 { pt3dadd( 116.671, 129.974, -3.48866, 0.28 ) }
    dend_7 { pt3dadd( 125.889, 136.166, -3.77202, 0.28 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 41/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 108.045, 123.213, -1.93673, 0.28 ) }
    dend_6 { pt3dadd( 113.655, 128.154, -3.45258, 0.28 ) }
    dend_6 { pt3dadd( 119.513, 132.81, -5.02783, 0.28 ) }
    dend_6 { pt3dadd( 124.515, 138.211, -6.92488, 0.28 ) }
    dend_6 { pt3dadd( 129.124, 143.557, -9.79388, 0.28 ) }
    dend_6 { pt3dadd( 134.404, 148.59, -12.0403, 0.28 ) }
    dend_6 { pt3dadd( 139.21, 154.234, -13.624, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 48/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 61.7723, 162.9, -10.6476, 0.55 ) }
    dend_20 { pt3dadd( 63.85, 165.191, -13.1693, 0.55 ) }
    dend_20 { pt3dadd( 64.9251, 166.298, -14.1889, 0.55 ) }
    dend_20 { pt3dadd( 68.6674, 169.731, -17.2569, 0.55 ) }
    dend_20 { pt3dadd( 70.7056, 171.378, -18.909, 0.55 ) }
    dend_20 { pt3dadd( 72.8702, 173.0, -20.5992, 0.28 ) }
    dend_20 { pt3dadd( 75.7897, 175.111, -22.745, 0.28 ) }
    dend_20 { pt3dadd( 78.0266, 176.603, -24.2171, 0.83 ) }
    dend_20 { pt3dadd( 80.1476, 177.912, -25.4589, 0.83 ) }
    dend_20 { pt3dadd( 83.974, 180.049, -27.2304, 0.28 ) }
    dend_20 { pt3dadd( 85.2291, 180.635, -27.9427, 0.55 ) }
    dend_20 { pt3dadd( 86.9972, 181.416, -29.1465, 0.55 ) }
    dend_20 { pt3dadd( 88.3574, 181.974, -30.2029, 0.55 ) }
    dend_20 { pt3dadd( 89.8742, 182.607, -31.4794, 0.55 ) }
    dend_20 { pt3dadd( 92.0004, 183.53, -33.3096, 0.55 ) }
    dend_20 { pt3dadd( 97.3217, 185.826, -37.9805, 0.55 ) }
    dend_20 { pt3dadd( 98.5816, 186.345, -39.1787, 0.55 ) }
    dend_20 { pt3dadd( 101.697, 187.547, -42.3802, 0.28 ) }
    dend_20 { pt3dadd( 103.491, 188.235, -44.3013, 0.83 ) }
    dend_20 { pt3dadd( 111.342, 191.962, -48.3578, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 68/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 61.7723, 162.9, -10.6476, 0.28 ) }
    dend_19 { pt3dadd( 60.7188, 164.684, -11.4293, 0.28 ) }
    dend_19 { pt3dadd( 59.9562, 166.024, -12.08, 0.55 ) }
    dend_19 { pt3dadd( 58.6588, 168.334, -13.2029, 0.28 ) }
    dend_19 { pt3dadd( 57.3666, 170.765, -14.4451, 0.83 ) }
    dend_19 { pt3dadd( 56.4203, 172.683, -15.4565, 0.28 ) }
    dend_19 { pt3dadd( 55.687, 174.295, -16.334, 0.55 ) }
    dend_19 { pt3dadd( 55.2654, 175.285, -16.9098, 0.28 ) }
    dend_19 { pt3dadd( 55.1211, 175.748, -17.2055, 0.83 ) }
    dend_19 { pt3dadd( 54.6939, 177.252, -18.2972, 0.28 ) }
    dend_19 { pt3dadd( 54.5383, 177.864, -18.711, 0.55 ) }
    dend_19 { pt3dadd( 54.2452, 178.991, -19.4396, 0.28 ) }
    dend_19 { pt3dadd( 54.1056, 179.493, -19.7473, 0.55 ) }
    dend_19 { pt3dadd( 53.1359, 182.674, -21.7561, 0.28 ) }
    dend_19 { pt3dadd( 52.556, 184.451, -22.8904, 0.55 ) }
    dend_19 { pt3dadd( 51.8709, 186.272, -24.0115, 0.28 ) }
    dend_19 { pt3dadd( 51.4331, 187.31, -24.6484, 0.55 ) }
    dend_19 { pt3dadd( 49.2848, 196.19, -30.6492, 0.55 ) }
    dend_19 { pt3dadd( 47.1727, 205.339, -36.2046, 0.55 ) }
    dend_19 { pt3dadd( 44.9451, 215.443, -39.4465, 0.55 ) }
    dend_19 { pt3dadd( 43.849, 225.281, -43.8971, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 89/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -3.61283, 160.33, -101.929, 0.28 ) }
    dend_16 { pt3dadd( -10.9092, 165.801, -107.507, 0.28 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 91/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -3.61283, 160.33, -101.929, 0.28 ) }
    dend_15 { pt3dadd( -9.21399, 164.146, -109.4, 0.28 ) }
    dend_15 { pt3dadd( -13.1289, 169.848, -116.625, 0.28 ) }
    dend_15 { pt3dadd( -16.0818, 175.773, -124.11, 0.28 ) }
    dend_15 { pt3dadd( -20.4502, 182.006, -130.544, 0.28 ) }
    dend_15 { pt3dadd( -25.9234, 187.983, -136.36, 0.28 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 97/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 125.889, 136.166, -3.77202, 0.28 ) }
    dend_9 { pt3dadd( 132.683, 140.616, -9.94451, 0.28 ) }
    dend_9 { pt3dadd( 140.034, 145.632, -14.8709, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 0/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 125.889, 136.166, -3.77202, 0.28 ) }
    dend_8 { pt3dadd( 133.411, 143.914, 0.120301, 0.28 ) }
    dend_8 { pt3dadd( 140.247, 151.524, 5.4084, 0.28 ) }
    dend_8 { pt3dadd( 147.257, 157.646, 12.3487, 0.28 ) }
    dend_8 { pt3dadd( 155.108, 161.354, 20.1615, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_52, dend_35, dend_0, dend_62, dend_53, dend_37, dend_36, dend_2, dend_1, dend_64, dend_63, dend_61, dend_54, dend_45, dend_38, dend_22, dend_3, dend_60, dend_55, dend_49, dend_46, dend_40, dend_39, dend_30, dend_23, dend_11, dend_4, dend_59, dend_56, dend_51, dend_50, dend_48, dend_47, dend_44, dend_41, dend_34, dend_31, dend_27, dend_24, dend_17, dend_12, dend_10, dend_5, dend_58, dend_57, dend_43, dend_42, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25, dend_21, dend_18, dend_14, dend_13, dend_7, dend_6, dend_20, dend_19, dend_16, dend_15, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_52 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_52, dend_35, dend_0, dend_62, dend_53, dend_37, dend_36, dend_2, dend_1, dend_64, dend_63, dend_61, dend_54, dend_45, dend_38, dend_22, dend_3, dend_60, dend_55, dend_49, dend_46, dend_40, dend_39, dend_30, dend_23, dend_11, dend_4, dend_59, dend_56, dend_51, dend_50, dend_48, dend_47, dend_44, dend_41, dend_34, dend_31, dend_27, dend_24, dend_17, dend_12, dend_10, dend_5, dend_58, dend_57, dend_43, dend_42, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25, dend_21, dend_18, dend_14, dend_13, dend_7, dend_6, dend_20, dend_19, dend_16, dend_15, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_36 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_64 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_63 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_61 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_3 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_60 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_49 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_46 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_40 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_39 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_4 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_59 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_48 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_47 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_44 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_34 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_31 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_27 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_24 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_10 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_57 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_43 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_33 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_29 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_26 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_25 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_21 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_14 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_6 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_20 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_19 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_15 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_8 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_37 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_52 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_38 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_62 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_53 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_22 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_23 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_30 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_54 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_55 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_11 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_56 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_41 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_58 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_51 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_50 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_17 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_32 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_28 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_42 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_18 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_5 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_7 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_13 OneSecGrp_SectionRef_60.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_9 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_16 OneSecGrp_SectionRef_65.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_52, dend_52, dend_35, dend_35, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_53, dend_53, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_22, dend_22, dend_22, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_53 all.append()
    dend_53 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_23 all.append()
    dend_23 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_36 nseg = 11
    dend_1 nseg = 9
    dend_64 nseg = 11
    dend_63 nseg = 15
    dend_61 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 11
    dend_49 nseg = 5
    dend_46 nseg = 7
    dend_40 nseg = 3
    dend_39 nseg = 9
    dend_4 nseg = 5
    dend_59 nseg = 5
    dend_48 nseg = 3
    dend_47 nseg = 3
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_31 nseg = 5
    dend_27 nseg = 5
    dend_24 nseg = 3
    dend_12 nseg = 3
    dend_10 nseg = 3
    dend_57 nseg = 3
    dend_43 nseg = 5
    dend_33 nseg = 5
    dend_29 nseg = 7
    dend_26 nseg = 7
    dend_25 nseg = 3
    dend_21 nseg = 11
    dend_14 nseg = 3
    dend_6 nseg = 3
    dend_20 nseg = 3
    dend_19 nseg = 3
    dend_15 nseg = 3
    dend_8 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_NBC_913c40083e_0_0


