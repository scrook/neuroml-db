// Cell: bSTUT213_L6_LBC_e36a750de6_0_0
/*
{
  "id" : "bSTUT213_L6_LBC_e36a750de6_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.76517, -12.0581, 0.531895, 5.3331", "-6.09265, -10.9357, 0.485552, 9.91507", "-5.42012, -9.81342, 0.439208, 12.4421", "-4.7476, -8.6911, 0.392865, 14.4326", "-4.07508, -7.56879, 0.346521, 16.7604", "-3.40255, -6.44647, 0.300178, 16.9321", "-2.73003, -5.32415, 0.253834, 16.7444", "-2.0575, -4.20184, 0.207491, 16.5415", "-1.38498, -3.07952, 0.161147, 16.2916", "-0.712455, -1.9572, 0.114803, 15.4348", "-0.0399309, -0.834886, 0.0684599, 14.3733", "0.632593, 0.287431, 0.0221164, 13.1583", "1.30512, 1.40975, -0.0242272, 11.3708", "1.97764, 2.53206, -0.0705707, 9.42664", "2.65017, 3.65438, -0.116914, 7.68722", "3.32269, 4.7767, -0.163258, 6.11754", "3.99521, 5.89901, -0.209601, 3.88362", "4.66774, 7.02133, -0.255945, 3.1359", "5.34026, 8.14365, -0.302288, 2.69333", "6.01279, 9.26596, -0.348632, 2.21532", "6.68531, 10.3883, -0.394975, 1.72126" ]
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "3.92352, -9.93802, 6.19338, 1.47", "4.0865, -10.0833, 6.19338, 1.47", "5.10846, -11.3412, 6.19338, 1.03", "5.95046, -12.7135, 6.19338, 1.03", "6.70548, -14.2261, 6.19338, 1.03", "6.8422, -14.5, 6.19338, 1.03", "7.79763, -16.414, 6.19338, 1.03", "8.7856, -18.568, 6.19338, 1.03", "9.68203, -20.9277, 6.19338, 1.33", "10.2682, -23.063, 6.19338, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500006358590179
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-10.9465, -5.29697, -0.366621, 1.18", "-12.8062, -4.99901, -0.824413, 0.52", "-13.4439, -4.85836, -1.01974, 0.52", "-14.9349, -4.58045, -1.45693, 0.81", "-16.6532, -4.3802, -1.91199, 1.77", "-17.2445, -4.35696, -2.0525, 1.62", "-18.898, -4.4005, -2.40921, 0.74", "-20.3537, -4.54168, -2.702, 0.88", "-22.1196, -4.82964, -2.94243, 1.18", "-23.6925, -5.17994, -3.0373, 1.33", "-25.1164, -5.58592, -3.07534, 0.81", "-26.0547, -5.89767, -3.11826, 0.81", "-27.5078, -6.45902, -3.18722, 0.81", "-28.272, -6.7729, -3.2564, 0.81", "-29.3146, -7.19092, -3.39702, 0.88", "-31.1949, -7.86589, -3.72511, 1.11", "-32.7268, -8.35797, -4.05207, 0.88", "-33.6158, -8.60718, -4.26831, 0.88", "-34.5156, -8.84912, -4.52381, 0.88", "-34.6149, -8.87442, -4.5516, 0.88", "-35.5639, -9.09392, -4.78233, 1.03", "-35.6619, -9.11112, -4.7909, 1.03", "-36.8656, -9.16662, -4.7909, 1.11", "-36.9354, -9.16092, -4.7909, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500006358590179
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "5.10352, 11.7948, -0.746621, 2.14", "7.47352, 15.0026, 0.563379, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500006358590179
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "3.72352, 11.0928, 3.63338, 1.03", "1.8351, 13.2459, 3.71836, 1.03", "0.479024, 14.8432, 3.80656, 0.59", "-0.452783, 16.0608, 3.87859, 0.59", "-1.30196, 17.2582, 3.94971, 0.81", "-3.12028, 19.8467, 4.27816, 0.81", "-4.19238, 21.3098, 4.53276, 0.74", "-5.27446, 22.7307, 4.98192, 0.44", "-6.18773, 23.8399, 5.45384, 0.44", "-6.89061, 24.6311, 5.89181, 0.44", "-8.52599, 26.4031, 7.06367, 0.44", "-9.45008, 27.3849, 7.81004, 0.44", "-11.3461, 29.3989, 9.39044, 0.74", "-12.2081, 30.352, 10.1489, 0.74", "-12.841, 31.111, 10.7249, 0.52", "-13.406, 31.9528, 11.206, 0.52", "-13.8357, 32.6563, 11.5089, 0.52", "-14.6367, 33.934, 12.0742, 0.52", "-15.6757, 35.4357, 12.7311, 0.52", "-16.3112, 36.2452, 13.2404, 0.96", "-18.7289, 39.0671, 15.3576, 0.37", "-19.5752, 39.9694, 16.1559, 0.37", "-20.7148, 41.0719, 17.2718, 0.37", "-21.0607, 41.3935, 17.6183, 0.96", "-23.2621, 43.6794, 20.0324, 0.52", "-23.6117, 44.1393, 20.4899, 0.52", "-23.8867, 44.6239, 20.9648, 0.52", "-24.4182, 45.6806, 21.756, 0.52", "-24.9862, 46.8417, 22.384, 0.52", "-25.6907, 48.1452, 22.9106, 0.52", "-26.0808, 48.8299, 23.0826, 0.52", "-26.9795, 50.4932, 23.5557, 0.52", "-27.7942, 52.1618, 24.1011, 1.25", "-28.4294, 53.5492, 24.616, 0.52", "-29.0348, 54.6897, 25.1317, 0.44", "-29.5182, 55.5034, 25.5404, 0.44", "-30.4428, 57.2187, 26.4159, 0.44", "-30.9917, 58.4557, 27.0368, 0.44", "-31.5661, 59.9174, 27.862, 0.44", "-32.4734, 61.8805, 29.13, 0.44", "-32.8799, 62.5626, 29.6413, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500006358590179,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.68531, 10.3883, -0.394975, 0.771619", "14.3954, 23.2551, -0.394975, 0.771619", "22.1055, 36.1219, -0.394975, 0.771619" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "10.2682, -23.063, 6.19338, 1.03", "9.99385, -26.2507, 10.617, 1.03", "9.91068, -27.2171, 11.9582, 1.03", "9.82684, -28.1912, 13.3099, 1.47" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "10.2682, -23.063, 6.19338, 0.96", "11.8671, -24.3208, 5.83811, 0.96", "13.7279, -25.6667, 5.42071, 1.03", "15.0978, -26.553, 5.12902, 1.03", "16.7358, -27.5435, 4.79106, 1.03", "18.6756, -28.6592, 4.41529, 1.03", "20.2524, -29.5388, 4.12258, 1.03", "20.3144, -29.5698, 4.11055, 1.03", "21.5305, -30.0767, 3.89127, 0.88", "21.5965, -30.0992, 3.88052, 0.88", "22.9338, -30.5138, 3.70292, 0.88", "23.0332, -30.5499, 3.69591, 0.88", "24.6684, -31.2258, 3.56955, 0.88", "24.877, -31.3154, 3.55437, 0.88", "26.4414, -31.9853, 3.45645, 0.88", "26.6362, -32.0637, 3.44651, 0.88", "28.0686, -32.5605, 3.39586, 0.88", "28.1352, -32.5816, 3.39472, 0.88", "29.2427, -32.9144, 3.51082, 0.88", "30.313, -33.2369, 3.64234, 0.88", "30.3787, -33.2581, 3.65297, 0.88", "31.346, -33.5532, 3.83748, 0.88", "31.5056, -33.6005, 3.87968, 0.88", "33.5238, -34.1769, 4.52049, 1.33" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-36.9354, -9.16092, -4.7909, 0.59", "-39.229, -8.79312, -5.33717, 0.59", "-40.1499, -8.70477, -5.62874, 0.59", "-40.916, -8.68528, -5.89096, 0.66", "-42.3456, -8.76032, -6.38175, 0.66", "-43.5834, -8.90742, -6.8022, 0.66", "-44.4825, -9.07582, -7.09265, 0.59", "-45.9774, -9.47132, -7.42486, 0.52", "-46.6947, -9.72022, -7.58482, 0.37", "-47.5607, -10.0758, -7.70973, 0.37", "-48.048, -10.2827, -7.73841, 0.96", "-49.0592, -10.6649, -7.72553, 0.88", "-50.0529, -10.9573, -7.70853, 0.59", "-50.926, -11.1387, -7.668, 0.59", "-52.4576, -11.3855, -7.67728, 0.37", "-53.5952, -11.5451, -7.74128, 0.37", "-53.9576, -11.6095, -7.77567, 0.37", "-55.6774, -12.0303, -7.99156, 0.59", "-55.7345, -12.0463, -7.99966, 0.59", "-57.3102, -12.4831, -8.23397, 0.74", "-58.5288, -12.7984, -8.42342, 0.74", "-59.8657, -13.1226, -8.57573, 0.74", "-61.2538, -13.4126, -8.66179, 0.59", "-62.4991, -13.6229, -8.66739, 0.59", "-63.6412, -13.797, -8.67438, 0.59", "-64.2143, -13.8612, -8.67678, 0.59", "-64.2847, -13.8677, -8.67678, 0.59", "-64.6872, -13.9067, -8.6874, 0.59", "-64.7559, -13.9194, -8.69162, 0.59", "-65.7106, -14.1975, -8.76362, 0.59", "-66.0313, -14.2952, -8.75458, 0.59", "-66.3427, -14.3915, -8.7298, 0.59", "-67.1877, -14.6224, -8.64028, 0.59", "-68.7042, -14.9446, -8.45946, 0.59", "-70.2155, -15.2133, -8.27335, 0.59", "-71.809, -15.47, -8.07264, 0.59", "-72.5775, -15.592, -7.97364, 0.59", "-73.4613, -15.7301, -7.85773, 0.59", "-74.6918, -15.9029, -7.6915, 0.81", "-76.0268, -16.0656, -7.54299, 0.74", "-77.0173, -16.1494, -7.47621, 0.59", "-77.087, -16.1527, -7.48055, 0.59", "-77.8246, -16.1805, -7.56799, 0.59", "-78.544, -16.2412, -7.69077, 0.59", "-79.3495, -16.3296, -7.85176, 0.59", "-79.4869, -16.3384, -7.87894, 0.59", "-81.234, -16.3995, -8.16314, 0.66", "-82.158, -16.4428, -8.27617, 0.66", "-83.0753, -16.5155, -8.35341, 0.66", "-84.7441, -16.7309, -8.50347, 0.52", "-86.2105, -16.9856, -8.62968, 0.52", "-87.2773, -17.2132, -8.70644, 0.74", "-88.3152, -17.4635, -8.7497, 0.59", "-89.9596, -17.8426, -8.84549, 0.59", "-91.1731, -18.104, -8.93442, 0.52", "-91.7235, -18.2241, -8.98283, 0.44", "-92.3776, -18.3619, -9.04477, 0.44", "-93.4809, -18.5576, -9.15076, 0.44", "-94.7542, -18.7262, -9.24051, 0.44", "-96.0497, -18.8484, -9.32362, 0.74", "-97.0776, -18.9071, -9.35024, 0.59", "-97.9767, -18.9374, -9.37014, 0.44", "-98.6621, -18.9619, -9.3832, 0.44", "-100.315, -19.0927, -9.41036, 0.52", "-101.477, -19.236, -9.42459, 0.59", "-102.384, -19.3582, -9.43115, 0.44", "-103.29, -19.4519, -9.4177, 0.44", "-104.253, -19.5034, -9.38673, 0.88", "-105.083, -19.5232, -9.37313, 0.74", "-106.486, -19.5546, -9.36438, 0.74", "-107.584, -19.6272, -9.36671, 0.59", "-109.109, -19.8171, -9.42905, 0.59", "-110.416, -20.0012, -9.50264, 0.52", "-111.623, -20.174, -9.62732, 0.74", "-112.429, -20.304, -9.74197, 0.44", "-113.91, -20.6123, -10.0406, 0.44", "-114.989, -20.9108, -10.3033, 0.44", "-115.658, -21.1094, -10.5087, 0.44", "-116.888, -21.4515, -10.9055, 0.52", "-118.779, -21.8993, -11.5258, 0.52", "-119.947, -22.1495, -11.9216, 0.52", "-121.009, -22.3748, -12.2822, 0.52", "-122.773, -22.8138, -12.8409, 0.52", "-123.793, -23.1401, -13.1298, 0.52", "-124.971, -23.5701, -13.404, 0.52", "-125.934, -23.9547, -13.6086, 0.66", "-126.742, -24.2807, -13.7377, 0.44", "-127.837, -24.7501, -13.8725, 0.44", "-128.912, -25.3042, -13.9334, 0.44", "-129.55, -25.6528, -13.9576, 0.44", "-129.621, -25.69, -13.9576, 0.44", "-130.437, -26.0408, -13.9576, 0.44", "-130.546, -26.0717, -13.9576, 0.44", "-131.236, -26.1498, -13.9576, 0.44", "-131.306, -26.1431, -13.9576, 0.44", "-131.888, -26.0235, -13.9576, 0.44", "-132.083, -25.962, -13.9576, 0.44", "-132.658, -25.7242, -13.9576, 0.44", "-132.722, -25.6955, -13.9576, 0.44", "-133.542, -25.3542, -14.0294, 0.44", "-133.683, -25.2994, -14.0474, 0.44", "-134.179, -25.146, -14.1178, 0.44", "-134.256, -25.1271, -14.1292, 0.44", "-134.945, -25.0629, -14.2239, 0.44", "-136.517, -25.1188, -14.4117, 0.44", "-137.224, -25.2108, -14.4887, 0.44", "-138.318, -25.3899, -14.5942, 0.44", "-138.387, -25.4007, -14.5995, 0.44", "-139.936, -25.5936, -14.6867, 0.44", "-140.951, -25.7185, -14.7161, 0.44", "-141.021, -25.7301, -14.7154, 0.44", "-141.538, -25.8213, -14.7107, 0.44", "-142.907, -26.0216, -14.7758, 0.44", "-143.491, -26.0905, -14.8281, 0.44", "-144.123, -26.1298, -14.9108, 0.44", "-145.087, -26.2189, -15.0562, 0.44", "-145.522, -26.2872, -15.0986, 0.44", "-146.833, -26.5701, -15.2344, 0.52", "-146.934, -26.5975, -15.2508, 0.52", "-147.701, -26.8177, -15.3978, 0.52", "-148.77, -27.1548, -15.6169, 1.55", "-150.289, -27.7114, -15.9356, 0.59", "-151.525, -28.2529, -16.1867, 0.44", "-153.063, -29.0518, -16.4766, 0.44", "-153.192, -29.1227, -16.5032, 0.44", "-154.312, -29.809, -16.7732, 0.44", "-154.834, -30.1659, -16.9264, 0.96", "-155.307, -30.5402, -17.0987, 0.37", "-156.757, -31.8855, -17.4401, 0.15" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-36.9354, -9.16092, -4.7909, 0.52", "-38.4819, -9.41872, -3.86496, 0.52", "-38.6087, -9.44172, -3.80979, 0.52", "-39.585, -9.59862, -3.43503, 0.52", "-40.2642, -9.72602, -3.20156, 0.52", "-41.9404, -10.0583, -2.64616, 0.52", "-42.2193, -10.1129, -2.54631, 0.52", "-43.7208, -10.4444, -1.99483, 0.52", "-44.9992, -10.7123, -1.46993, 0.52", "-46.2382, -10.9164, -0.8819, 0.52", "-46.3005, -10.9216, -0.850509, 0.52", "-47.2333, -10.9472, -0.383744, 0.81", "-48.2164, -10.9897, 0.129089, 0.44", "-48.2872, -10.9926, 0.16622, 0.44", "-49.2667, -10.9998, 0.600235, 0.52", "-49.9764, -10.9488, 0.850336, 0.44", "-50.7684, -10.8524, 1.04498, 0.44", "-51.9602, -10.6616, 1.21743, 0.44", "-52.9194, -10.4338, 1.29087, 0.44", "-54.0102, -10.0758, 1.43852, 0.52", "-55.2001, -9.57652, 1.6371, 0.66", "-55.9237, -9.20482, 1.8235, 0.52", "-56.0987, -9.10072, 1.87997, 0.52", "-57.2041, -8.38325, 2.28308, 0.52", "-59.1125, -7.16428, 3.02995, 0.66", "-60.3906, -6.43001, 3.58566, 0.66", "-61.4399, -5.91005, 4.10302, 0.44", "-61.5322, -5.8704, 4.15421, 0.44", "-62.5943, -5.51212, 4.78366, 0.44", "-63.0278, -5.41195, 5.03679, 0.44", "-64.5484, -5.15091, 5.75651, 0.81", "-65.3113, -5.03822, 6.06113, 0.52", "-65.9006, -4.95972, 6.23625, 0.44", "-67.2526, -4.81364, 6.55165, 0.37", "-68.9906, -4.66127, 6.8545, 0.52", "-70.2966, -4.49762, 7.0209, 0.44", "-71.169, -4.34676, 7.08971, 0.44", "-72.3397, -4.10701, 7.16586, 0.44", "-73.7056, -3.8084, 7.29992, 0.44", "-74.1463, -3.71763, 7.39773, 0.52", "-75.6229, -3.54281, 7.93262, 0.52", "-76.8036, -3.51183, 8.4374, 0.52", "-76.8673, -3.51456, 8.46648, 0.52", "-78.2117, -3.61876, 9.08233, 0.52", "-79.9075, -3.74303, 9.95466, 0.52", "-81.3891, -3.85492, 10.7096, 0.52", "-83.0092, -4.02791, 11.4886, 0.52", "-83.6313, -4.09269, 11.7799, 0.52", "-84.6523, -4.1589, 12.2183, 0.52", "-86.7978, -4.23248, 13.0168, 0.52", "-88.1323, -4.22656, 13.483, 0.52", "-89.1902, -4.18647, 13.8875, 0.52", "-90.5117, -4.10861, 14.4145, 0.52", "-91.8191, -4.04637, 14.9032, 0.52", "-93.9406, -4.07147, 15.6265, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "7.47352, 15.0026, 0.563379, 0.59", "8.87079, 15.0358, 0.087164, 0.59", "9.97764, 15.1548, -0.315772, 0.59", "11.6415, 15.3339, -0.921478, 0.59", "13.2891, 15.5111, -1.52127, 0.66", "14.3631, 15.6267, -1.91225, 0.59", "16.8086, 15.8898, -2.80252, 0.96", "17.9874, 16.0815, -3.28946, 0.96" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "7.47352, 15.0026, 0.563379, 1.33", "7.57645, 16.3615, 0.454369, 1.33", "8.06298, 18.3481, 0.264286, 1.11", "8.69307, 19.9516, 0.106133, 1.25", "9.37319, 21.4178, -0.0299672, 1.25", "10.0744, 22.8861, -0.154041, 1.18", "10.9605, 24.7509, -0.295304, 1.18", "11.8823, 26.4101, -0.429406, 1.18", "12.874, 27.9355, -0.559227, 1.18", "13.9056, 29.3733, -0.679587, 1.18", "14.864, 30.6841, -0.772009, 1.18", "16.2023, 32.6933, -0.835849, 1.69" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-32.8799, 62.5626, 29.6413, 0.52", "-32.8121, 64.3173, 30.2501, 0.52", "-32.7812, 65.6424, 30.6614, 0.52", "-32.7968, 66.9419, 31.0047, 0.52", "-32.8432, 67.9939, 31.2832, 0.52", "-32.8936, 69.2717, 31.6093, 0.52", "-32.9282, 70.2614, 31.8513, 0.52", "-32.9861, 71.076, 31.997, 0.52", "-33.0414, 71.7739, 32.1363, 0.44", "-33.0253, 72.7344, 32.3692, 0.15", "-32.9571, 73.6768, 32.6013, 0.22", "-32.9273, 74.1564, 32.7342, 0.22", "-32.7904, 75.7077, 33.1957, 0.22", "-32.6161, 77.1218, 33.6411, 0.22", "-32.2536, 79.5177, 34.4284, 0.22", "-32.1023, 80.4405, 34.7213, 0.22", "-31.8996, 81.7119, 35.1612, 0.22" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-32.8799, 62.5626, 29.6413, 0.37", "-34.2885, 63.7006, 30.1951, 0.37", "-35.5573, 64.7255, 30.694, 0.37", "-36.2935, 65.3204, 30.9834, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "22.1055, 36.1219, -0.394975, 0.342806", "29.8157, 48.9886, -0.394975, 0.342806", "37.5258, 61.8554, -0.394975, 0.342806" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "9.82684, -28.1912, 13.3099, 0.44", "10.8295, -29.5507, 12.8649, 0.44", "10.9654, -29.7136, 12.8159, 0.44", "11.826, -30.4925, 12.8294, 0.44", "12.5795, -31.04, 13.0154, 0.44", "12.6355, -31.0779, 13.0343, 0.44", "13.3691, -31.6585, 13.3298, 0.44", "13.4451, -31.7485, 13.4032, 0.44", "14.3234, -33.0619, 14.5938, 0.44", "14.5806, -33.5052, 15.0162, 0.44", "14.6579, -33.6615, 15.1471, 0.44", "14.9983, -34.6229, 15.8332, 0.44", "15.223, -36.0736, 16.8948, 0.44", "15.2255, -36.13, 16.9354, 0.44", "15.1315, -36.9841, 17.4874, 0.44", "14.9907, -37.7876, 18.0329, 0.44", "14.767, -38.5911, 18.6171, 0.44", "14.2644, -40.0151, 19.5153, 0.44", "14.246, -40.0667, 19.5366, 0.44", "13.9913, -40.9469, 19.8406, 0.44", "13.791, -41.6843, 20.0413, 0.44", "13.3268, -43.6605, 20.4649, 0.44", "13.1217, -45.0943, 20.7734, 0.44", "13.0487, -46.8749, 21.1535, 0.52", "13.0702, -48.3549, 21.5151, 0.37", "13.1352, -49.8792, 21.9989, 0.37", "13.1402, -49.943, 22.0232, 0.37", "13.4433, -51.824, 22.8446, 0.37", "13.6019, -52.6703, 23.3149, 0.37", "13.6164, -52.7281, 23.3505, 0.37", "14.0713, -54.2155, 24.3087, 0.37", "14.3251, -55.024, 24.9095, 0.37", "14.4815, -55.6379, 25.3716, 0.37", "14.4904, -55.6945, 25.411, 0.37", "14.5101, -56.679, 26.097, 0.37", "14.2184, -58.4121, 27.3586, 0.52", "13.7012, -59.6782, 28.3352, 0.44", "13.6282, -59.7784, 28.4172, 0.44", "12.9126, -60.5584, 29.0471, 0.66", "12.1273, -61.3274, 29.6258, 0.44", "10.7649, -62.4784, 30.3918, 0.44", "9.85256, -63.1802, 30.7395, 0.44", "8.99761, -63.8502, 30.983, 0.44", "8.50718, -64.2514, 31.1106, 0.22", "8.00435, -64.6589, 31.219, 0.29", "7.0643, -65.5099, 31.3586, 0.29", "6.30687, -66.238, 31.3479, 0.15", "5.82591, -66.6285, 31.3001, 0.07", "5.76911, -66.6678, 31.2935, 0.07", "4.93675, -67.1443, 31.1952, 0.07", "4.85383, -67.1823, 31.1849, 0.15", "4.25187, -67.3875, 31.0998, 0.15", "3.11953, -67.6282, 30.9448, 0.15", "2.66892, -67.693, 30.8773, 0.15" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "9.82684, -28.1912, 13.3099, 0.66", "9.99541, -30.2262, 12.7804, 0.66", "10.0955, -31.4833, 12.5569, 0.66", "10.2283, -33.2554, 12.303, 1.03", "10.2225, -34.9085, 12.1236, 0.44", "10.1509, -35.7909, 12.0502, 0.44", "10.0118, -36.898, 11.9766, 0.44", "9.71908, -38.7705, 11.9679, 0.44", "9.7053, -38.8381, 11.9689, 0.44", "9.07337, -41.1852, 12.0555, 0.44", "8.62085, -42.5893, 12.1345, 0.44", "8.3489, -43.4082, 12.1371, 0.44", "8.08047, -44.3001, 12.1165, 0.88", "7.73806, -45.9796, 12.1804, 0.59", "7.52643, -47.4248, 12.3043, 0.59", "7.41094, -48.5895, 12.493, 0.66", "7.22597, -50.7688, 12.9389, 0.52", "7.04983, -52.6515, 13.3671, 0.52", "6.51898, -56.5641, 14.3248, 1.03", "5.93746, -60.1374, 15.2448, 0.52", "5.44561, -62.9202, 15.9961, 0.81", "5.38104, -63.2661, 16.0842, 0.81", "4.94017, -65.4698, 16.6269, 0.66", "4.52173, -67.6367, 16.9681, 0.37", "4.29349, -68.9724, 17.0297, 0.37", "4.28336, -69.0497, 17.0319, 0.37", "4.01106, -71.4608, 17.0856, 0.59", "3.86689, -73.2119, 17.2337, 0.59", "3.71706, -76.9225, 17.7368, 0.59", "3.73314, -79.1739, 18.1314, 0.59", "3.74835, -81.0624, 18.5395, 0.59", "3.78538, -82.5564, 18.9812, 0.59", "3.81753, -84.2236, 19.6878, 0.59", "3.81607, -84.3618, 19.758, 0.59", "3.79219, -85.394, 20.3882, 0.59", "3.78843, -85.4528, 20.4235, 0.59", "3.65134, -87.6377, 21.7307, 0.59", "3.51854, -89.887, 22.9896, 0.59", "3.34174, -92.1117, 24.0906, 0.59", "3.14164, -94.2451, 25.0897, 0.59", "2.95857, -95.6348, 25.7038, 0.59", "2.46141, -98.745, 26.9607, 0.59", "2.12347, -100.649, 27.6046, 0.59", "1.94307, -101.921, 27.9928, 0.59", "1.93554, -101.988, 28.0094, 0.59", "1.77749, -103.078, 28.2191, 0.44", "1.49837, -104.658, 28.4138, 0.44", "1.20099, -105.75, 28.4389, 0.44", "1.1012, -106.091, 28.4544, 0.44", "0.621364, -108.129, 28.5863, 0.52", "0.608552, -108.197, 28.5895, 0.52", "0.427914, -109.979, 28.5579, 0.37", "0.365996, -110.647, 28.5133, 0.37", "0.358013, -110.715, 28.508, 0.37", "0.272704, -111.612, 28.4284, 0.37", "0.272416, -111.69, 28.4192, 0.37", "0.359116, -113.884, 28.1021, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "33.5238, -34.1769, 4.52049, 0.74", "35.1394, -34.5366, 4.29895, 0.74", "36.5542, -34.9004, 4.30044, 0.74", "37.9276, -35.2844, 4.38633, 0.74", "39.5917, -35.7904, 4.53594, 0.74", "40.562, -36.1329, 4.5675, 0.74", "41.1457, -36.355, 4.5686, 1.11", "43.0426, -37.1988, 4.5596, 0.66", "44.2712, -37.8172, 4.58715, 0.66", "45.6627, -38.5911, 4.70713, 0.96", "47.8096, -39.8844, 4.95297, 0.52", "48.8578, -40.5327, 5.06276, 0.52", "50.8447, -41.84, 5.25812, 0.52", "51.4361, -42.2984, 5.2955, 0.52", "52.5888, -43.3709, 5.41165, 0.52", "53.6734, -44.5553, 5.56987, 0.52", "53.7708, -44.6792, 5.5914, 0.52", "54.504, -45.8474, 5.7306, 0.52", "55.2769, -47.6684, 5.85121, 0.52", "55.4812, -48.4781, 5.93218, 0.52", "55.5019, -48.6234, 5.94847, 0.52", "55.511, -48.7, 5.96043, 0.52", "55.7813, -50.404, 6.31765, 0.52", "56.1335, -52.1097, 6.78071, 0.66", "56.6135, -53.8876, 7.33455, 0.37", "56.9188, -54.9146, 7.62859, 0.37", "57.2511, -56.0044, 7.86921, 0.37", "57.5798, -56.9742, 8.02451, 0.66", "57.7655, -57.4603, 8.07186, 0.66", "58.3779, -58.8003, 8.12306, 0.52", "59.0582, -60.0761, 8.10781, 0.52", "60.0281, -61.7287, 8.09558, 0.66", "60.6576, -62.7386, 8.09001, 0.66", "60.6966, -62.7952, 8.08945, 0.66", "61.3008, -63.6248, 8.09543, 0.74", "62.2886, -64.8635, 8.13163, 0.74", "63.2758, -66.0607, 8.19853, 0.88", "64.2138, -67.2018, 8.30038, 0.74", "64.3417, -67.3769, 8.31516, 0.74", "64.9955, -68.3899, 8.39206, 0.74", "65.0995, -68.5796, 8.40371, 0.74", "65.5225, -69.4303, 8.43403, 0.44", "65.5929, -69.561, 8.43403, 0.44", "66.1027, -70.3159, 8.36567, 0.44", "66.1525, -70.377, 8.35572, 0.44", "66.9971, -71.3314, 8.15012, 0.52", "67.7487, -72.3325, 7.89315, 0.52", "67.8273, -72.4659, 7.86003, 0.52", "68.3322, -73.5854, 7.56278, 0.52", "68.3587, -73.6573, 7.54383, 0.52", "68.9119, -75.187, 7.15854, 0.52", "69.6964, -77.5118, 6.59117, 0.52", "70.2549, -79.2012, 6.23724, 0.52", "70.6777, -80.3577, 6.03437, 0.52", "71.1758, -81.5249, 5.87022, 0.52", "71.8515, -82.925, 5.68509, 0.52", "71.8848, -82.9847, 5.67812, 0.52", "73.6339, -85.9209, 5.44031, 0.52", "74.2584, -86.9676, 5.39551, 0.52", "74.79, -88.006, 5.40557, 0.52", "74.8435, -88.1429, 5.40952, 0.52", "75.1836, -89.1866, 5.44231, 0.59", "75.605, -90.4256, 5.50571, 0.59", "75.9109, -91.3524, 5.57536, 0.59", "76.2779, -92.5966, 5.6582, 0.59", "76.2964, -92.6623, 5.66184, 0.59", "77.3138, -95.8279, 5.79636, 0.66", "77.7125, -97.0138, 5.89277, 0.74", "77.7851, -97.2162, 5.91367, 0.74", "78.3552, -98.8942, 6.10871, 0.81", "78.7261, -100.271, 6.30635, 0.66", "79.0768, -102.237, 6.6372, 0.59", "79.0697, -104.077, 7.07566, 0.59", "79.063, -104.153, 7.09519, 0.59", "78.9902, -104.777, 7.27131, 0.59", "78.8086, -105.88, 7.62362, 0.59", "78.7957, -105.954, 7.64568, 0.59", "78.5763, -107.503, 8.001, 0.59", "78.4208, -109.401, 8.30797, 0.66", "78.3821, -110.593, 8.43534, 0.96", "78.3803, -110.661, 8.43755, 0.96", "78.3356, -112.597, 8.39093, 0.66", "78.265, -114.905, 8.235, 0.59", "78.2534, -115.333, 8.18571, 0.59", "78.1686, -117.078, 7.9466, 0.44", "78.0913, -119.329, 7.60532, 0.44", "78.096, -121.084, 7.33701, 0.44", "78.1027, -121.297, 7.30235, 0.44", "78.2047, -122.521, 7.11306, 0.44", "78.2155, -122.598, 7.10406, 0.44", "78.5012, -123.936, 7.05205, 0.44", "78.7707, -124.791, 7.06171, 0.66", "78.814, -124.932, 7.06829, 0.66", "79.1496, -126.104, 7.15268, 0.66", "79.1815, -126.237, 7.16411, 0.66", "79.3909, -127.527, 7.27925, 0.66", "79.4068, -127.741, 7.28777, 0.66", "79.4833, -128.756, 7.28822, 0.44", "79.5852, -130.026, 7.25345, 0.44", "79.6617, -131.598, 7.17467, 0.52", "79.6831, -132.468, 7.11636, 0.44", "79.6996, -133.902, 6.99344, 0.44", "79.6907, -135.025, 6.8778, 0.44", "79.7155, -136.191, 6.74387, 0.44", "79.7201, -137.719, 6.56675, 0.44", "79.7223, -137.787, 6.5595, 0.44", "79.7911, -138.527, 6.50674, 0.52", "79.8005, -138.605, 6.50789, 0.52", "80.0397, -140.776, 6.55278, 0.22" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "33.5238, -34.1769, 4.52049, 0.44", "34.4489, -36.0009, 4.92715, 0.44", "34.5781, -36.2217, 4.95731, 0.44", "35.151, -37.0662, 5.03249, 0.44", "35.7557, -37.9117, 5.34223, 0.96", "36.485, -38.842, 5.78561, 0.59", "36.9725, -39.443, 6.10032, 0.59", "37.568, -40.083, 6.43056, 0.66", "38.2322, -40.7174, 6.79822, 0.66", "40.7845, -42.8218, 8.2321, 0.66", "41.7004, -43.4242, 8.75245, 0.66", "41.8173, -43.4878, 8.82075, 0.66", "42.7853, -43.9069, 9.46114, 0.66", "43.4038, -44.0763, 9.93021, 0.59", "43.9238, -44.1171, 10.3212, 0.74", "44.9945, -43.9862, 11.0047, 0.88", "45.131, -43.9587, 11.1034, 0.88", "46.8389, -43.6388, 12.4807, 0.88", "48.4354, -43.3371, 13.909, 0.81", "49.3811, -43.1797, 14.7719, 0.66", "50.5773, -43.0074, 15.7869, 0.66", "51.9391, -42.8535, 16.8431, 0.66", "53.2353, -42.7607, 17.6774, 0.66", "53.2985, -42.7591, 17.7074, 0.66", "54.279, -42.8592, 18.0595, 0.59", "55.5215, -43.1376, 18.457, 0.59", "55.5861, -43.1545, 18.4778, 0.59", "56.9996, -43.3712, 18.8183, 0.59", "57.0663, -43.3727, 18.8393, 0.59", "58.3255, -43.3714, 19.3808, 0.59", "58.3873, -43.3742, 19.415, 0.59", "59.9337, -43.5217, 20.4273, 0.59", "61.085, -43.6581, 21.1196, 0.59", "61.9672, -43.7472, 21.6601, 0.52", "62.6829, -43.7758, 22.1336, 0.44", "63.5975, -43.8135, 22.7952, 0.44", "63.662, -43.8249, 22.8411, 0.44", "64.6479, -44.1329, 23.4995, 0.44", "65.9559, -44.5619, 24.4413, 0.52", "67.3538, -44.938, 25.4197, 0.52", "68.1966, -45.1316, 26.0719, 0.37", "69.1154, -45.3088, 26.8127, 0.37", "70.303, -45.5061, 27.786, 0.74", "71.795, -45.6976, 28.973, 0.44", "72.5014, -45.7599, 29.4614, 0.44", "73.8206, -45.8197, 30.2723, 0.44", "74.0732, -45.8048, 30.4221, 0.44", "74.7597, -45.6808, 30.8465, 0.44", "75.9303, -45.3458, 31.5654, 0.52", "75.9898, -45.3247, 31.5953, 0.52" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "17.9874, 16.0815, -3.28946, 0.37", "19.1778, 16.3203, -3.72332, 0.37", "20.0567, 16.5243, -4.04805, 0.37", "21.1515, 16.7823, -4.40695, 0.37", "21.904, 16.9552, -4.66153, 0.37", "23.7428, 17.3622, -5.25961, 0.37", "24.7075, 17.5892, -5.58307, 0.66", "25.6387, 17.82, -5.90736, 0.66", "27.0397, 18.1859, -6.40822, 0.66", "28.4431, 18.5668, -6.90525, 0.66", "29.5641, 18.866, -7.3772, 0.66", "30.8603, 19.1916, -7.96836, 0.66", "32.5674, 19.6423, -8.79626, 0.52", "33.9018, 20.0379, -9.43848, 0.52", "34.428, 20.2215, -9.71604, 0.52", "36.4164, 21.0102, -10.8746, 0.44", "37.1166, 21.316, -11.3082, 0.44", "38.315, 21.876, -12.0354, 0.44", "38.9679, 22.2203, -12.41, 0.44", "40.0298, 22.8224, -12.9768, 0.44", "41.8403, 23.8208, -13.7792, 0.44", "42.907, 24.3905, -14.1139, 0.44", "44.0776, 25.0039, -14.4149, 0.44", "45.4263, 25.6553, -14.6676, 0.44", "46.376, 26.0875, -14.8036, 0.44", "47.571, 26.6505, -14.9037, 0.44", "49.0392, 27.3886, -14.9713, 0.44", "50.2104, 27.9796, -15.0304, 0.44", "51.5278, 28.6454, -15.1029, 0.44", "52.7624, 29.2708, -15.1905, 0.44", "54.7557, 30.3452, -15.3772, 0.37", "55.6078, 30.8668, -15.4913, 0.59" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "17.9874, 16.0815, -3.28946, 0.37", "18.8072, 15.6483, -3.37395, 0.37", "19.6824, 15.2923, -3.46345, 0.29", "20.9534, 14.8836, -3.55135, 0.29", "22.2554, 14.5387, -3.61242, 0.29", "23.0838, 14.3183, -3.64045, 0.37", "24.3247, 14.0011, -3.66915, 0.37", "25.1183, 13.8331, -3.67953, 0.37", "25.9916, 13.699, -3.6923, 0.37", "26.9786, 13.626, -3.70511, 0.22", "27.8844, 13.5805, -3.71164, 0.22", "29.3776, 13.4576, -3.70876, 0.37", "29.6784, 13.4171, -3.71288, 0.37", "30.4615, 13.2831, -3.73632, 0.37", "31.489, 13.0631, -3.78354, 0.37", "32.3448, 12.8149, -3.82011, 0.37", "33.4702, 12.4011, -3.82578, 0.37", "33.9847, 12.1656, -3.8106, 0.37", "34.7849, 11.7837, -3.76704, 0.37", "35.9799, 11.1012, -3.70371, 0.37", "36.8982, 10.5209, -3.6684, 0.37", "38.0682, 9.7782, -3.64102, 0.37", "38.9057, 9.2639, -3.65586, 0.37", "39.746, 8.77344, -3.7, 0.37", "41.262, 7.99472, -3.82616, 0.37", "42.1127, 7.63101, -3.9221, 0.66", "43.1408, 7.295, -4.06611, 0.44", "44.0971, 7.02621, -4.22317, 0.44", "45.0893, 6.75297, -4.36909, 0.44", "46.0986, 6.50488, -4.4913, 0.44", "46.4753, 6.43993, -4.51539, 0.44", "48.103, 6.23679, -4.57026, 0.59", "49.1465, 6.12607, -4.48185, 0.37", "50.4605, 5.98574, -4.21009, 0.37", "51.304, 5.88489, -3.96785, 0.37", "52.6824, 5.66732, -3.47128, 0.37", "53.7248, 5.48158, -3.01764, 0.29", "55.985, 5.04439, -1.90527, 0.29", "56.7802, 4.8792, -1.50737, 0.29", "57.713, 4.65213, -1.08235, 0.29", "59.1044, 4.26276, -0.563228, 0.29", "60.0824, 3.96697, -0.283641, 0.29", "61.4149, 3.5351, -0.111094, 0.29", "62.3096, 3.23591, -0.121551, 0.29", "63.7741, 2.68003, -0.224265, 0.29", "65.4044, 2.05658, -0.376354, 0.29", "65.7803, 1.9208, -0.412812, 0.29", "68.239, 1.05562, -0.614985, 0.29", "69.4754, 0.637227, -0.655487, 0.29", "71.2099, 0.0865299, -0.629375, 0.29", "72.7423, -0.36807, -0.526552, 0.29", "74.1345, -0.7453, -0.343897, 0.29", "75.9469, -1.17728, 0.0513381, 0.29", "76.8157, -1.32735, 0.315972, 0.37", "77.5199, -1.40256, 0.541103, 0.52", "77.5856, -1.40602, 0.565124, 0.22", "79.0313, -1.54261, 1.1604, 0.22", "80.233, -1.64247, 1.73306, 0.22" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "16.2023, 32.6933, -0.835849, 0.66", "16.6066, 36.3012, -1.55176, 0.66", "16.8529, 37.9157, -1.88305, 0.66", "17.1514, 40.2824, -2.22292, 0.66", "17.3635, 42.1172, -2.42398, 0.66", "17.5492, 43.5407, -2.54957, 0.66", "17.9747, 46.2327, -2.8391, 0.66", "18.38, 48.1183, -2.96465, 0.66", "18.9983, 50.6873, -3.27466, 0.66", "19.2399, 51.6151, -3.41997, 0.81", "19.5308, 52.775, -3.69909, 0.66", "19.8546, 54.615, -4.25659, 0.66", "20.1053, 56.962, -5.03328, 0.66", "20.2243, 58.0671, -5.39757, 0.66", "20.3804, 59.37, -5.8538, 0.66", "20.5788, 61.1735, -6.39592, 0.66", "20.6801, 62.6054, -6.70102, 0.66", "20.7354, 63.8449, -6.86285, 0.52", "20.8154, 65.4934, -7.01436, 0.74", "20.9262, 66.866, -7.16517, 0.74", "21.1999, 68.8699, -7.45723, 0.74", "21.5827, 71.1171, -7.75538, 0.74", "21.7917, 72.1997, -7.91929, 0.81", "22.1672, 74.2533, -8.28092, 0.74", "22.5731, 76.7876, -8.81419, 0.74", "22.7911, 78.3179, -9.20357, 1.25" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "16.2023, 32.6933, -0.835849, 0.52", "15.8374, 35.4625, 0.195356, 0.52", "15.7185, 36.5423, 0.659677, 0.52", "15.6015, 37.7324, 1.2507, 0.52", "15.542, 38.9421, 1.92201, 0.66", "15.6352, 41.2207, 3.41094, 0.52", "15.7534, 42.0524, 4.07641, 0.52", "16.0842, 43.2718, 5.27591, 0.66", "16.5353, 44.2449, 6.40067, 0.66", "17.1355, 45.1444, 7.53443, 0.66", "18.2657, 46.4933, 9.25576, 0.66", "19.5461, 47.7874, 10.8297, 0.66", "19.9336, 48.1942, 11.2636, 0.52", "20.7683, 49.1418, 12.0659, 0.52", "21.3911, 49.9956, 12.583, 0.81", "22.0081, 51.135, 13.0164, 0.96", "22.3735, 52.015, 13.2059, 0.88", "22.9083, 53.4334, 13.3922, 0.74", "23.4875, 54.8521, 13.5168, 0.74", "24.3766, 56.6495, 13.6011, 0.74", "25.1976, 57.9029, 13.6059, 0.74", "26.1149, 59.0708, 13.6025, 0.74", "27.2132, 60.3546, 13.6282, 0.74", "28.6995, 61.972, 13.7067, 0.74", "30.2622, 63.5332, 13.9016, 0.74", "32.4307, 65.4675, 14.4431, 0.74", "33.4087, 66.3505, 14.8162, 0.52", "34.441, 67.4082, 15.3288, 0.52", "35.1634, 68.3174, 15.7877, 0.52", "36.0313, 69.7695, 16.4804, 0.52", "36.8965, 72.0022, 17.3492, 0.52", "37.4007, 74.2136, 17.9365, 0.66", "37.7217, 76.479, 18.2194, 0.66", "37.79, 77.9423, 18.2028, 0.81", "37.6748, 79.5135, 18.0349, 0.88", "37.3553, 81.5622, 17.7047, 0.81", "37.0027, 83.2003, 17.3588, 0.81", "36.5074, 85.2193, 16.8586, 0.81", "35.9585, 87.3544, 16.3081, 0.81", "35.3861, 89.7147, 15.7228, 0.81", "34.861, 92.1031, 15.2001, 1.03" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "55.6078, 30.8668, -15.4913, 0.37", "56.2483, 32.1299, -15.5492, 0.37", "56.9823, 33.1025, -15.4737, 0.37", "57.8522, 34.2164, -15.3355, 0.22", "58.5657, 35.1768, -15.2017, 0.22", "59.2057, 36.0087, -15.0238, 0.22", "60.1258, 37.0876, -14.7479, 0.44", "61.2503, 38.2609, -14.2861, 0.44", "62.0606, 39.0731, -13.8685, 0.37", "62.4401, 39.4427, -13.6483, 0.37", "63.7143, 40.6042, -12.9521, 0.37", "64.6336, 41.5156, -12.4436, 0.37", "65.0877, 42.0117, -12.1703, 0.37", "65.806, 42.7781, -11.7108, 0.37", "66.3414, 43.2713, -11.3792, 0.37", "66.8239, 43.7094, -11.0599, 0.22", "67.3643, 44.2666, -10.6653, 0.22", "67.9791, 44.9806, -10.1631, 0.22", "68.4458, 45.5333, -9.78943, 0.29", "69.279, 46.5714, -9.14823, 0.29", "70.094, 47.7201, -8.51299, 0.29", "70.4763, 48.2675, -8.21828, 0.29", "70.7829, 48.6999, -7.97344, 0.29", "70.9806, 49.0203, -7.80124, 0.29", "71.3314, 49.6332, -7.48564, 0.29", "71.9075, 50.5672, -6.99387, 0.29", "72.6406, 51.6564, -6.40103, 0.29", "73.4638, 52.807, -5.69184, 0.29", "74.4964, 54.2735, -4.71985, 0.29", "74.7068, 54.6129, -4.47579, 0.29", "75.1266, 55.4274, -3.85706, 0.29", "75.2716, 55.7907, -3.58324, 0.29", "75.4986, 56.4777, -3.12526, 0.29", "75.6471, 56.9404, -2.82709, 0.29", "76.0891, 58.0336, -2.14288, 0.29", "76.265, 58.3799, -1.94756, 0.29", "76.6985, 59.015, -1.6488, 0.29", "77.5412, 59.9396, -1.26782, 0.29", "78.5854, 60.782, -0.958765, 0.29", "79.3723, 61.2989, -0.78886, 0.29", "80.0522, 61.7624, -0.647432, 0.29", "81.0114, 62.4569, -0.430423, 0.29", "81.546, 62.8674, -0.304351, 0.29", "82.8833, 63.9647, 0.0435239, 0.29", "84.1522, 64.9611, 0.395783, 0.29", "85.8616, 66.3464, 0.990574, 0.29", "86.1457, 66.6098, 1.1183, 0.44", "86.5986, 67.1, 1.36632, 0.29", "87.2298, 67.8788, 1.77796, 0.29", "87.9685, 68.9216, 2.28494, 0.29", "88.542, 69.7727, 2.66346, 0.29", "89.338, 71.0529, 3.11893, 0.29", "89.8048, 71.8908, 3.38107, 0.29", "90.4456, 73.0941, 3.69891, 0.29", "91.1438, 74.4343, 3.97083, 0.22", "91.8328, 75.7859, 4.18687, 0.22", "92.7035, 77.4746, 4.41161, 0.29", "93.2789, 78.5893, 4.53529, 0.29", "93.9553, 79.9384, 4.6709, 0.29", "94.6725, 81.4766, 4.79395, 0.29", "95.1357, 82.5096, 4.86332, 0.29", "95.4262, 83.2001, 4.87593, 0.44", "95.8927, 84.404, 4.84476, 0.37", "96.2847, 85.5611, 4.77907, 0.29", "96.7454, 87.1604, 4.66401, 0.29", "97.0483, 88.2669, 4.55846, 0.29", "97.4645, 89.6717, 4.38386, 0.29", "97.6012, 90.0817, 4.32201, 0.52" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "55.6078, 30.8668, -15.4913, 0.59", "57.6016, 31.0055, -15.9998, 0.59", "59.2076, 31.1569, -16.3296, 0.59", "60.4792, 31.3409, -16.6005, 0.59", "61.4868, 31.5218, -16.8358, 0.44", "62.7022, 31.7478, -17.1249, 0.44", "64.2423, 32.0123, -17.4848, 0.44", "65.5947, 32.2441, -17.7369, 0.44", "66.8033, 32.4524, -17.9655, 0.44", "67.8368, 32.6468, -18.1533, 0.59", "68.7286, 32.8417, -18.3055, 0.59", "69.7072, 33.0891, -18.4721, 0.52", "70.7962, 33.3693, -18.6831, 0.44", "71.976, 33.6609, -18.9049, 0.44", "72.8995, 33.8803, -19.0565, 0.44", "74.2336, 34.2245, -19.2617, 0.44", "75.8394, 34.6926, -19.5141, 0.44", "77.3751, 35.1346, -19.75, 0.44", "78.7411, 35.4735, -19.9489, 0.44", "79.7147, 35.659, -20.1078, 0.44", "81.033, 35.8665, -20.329, 0.44", "81.7735, 35.9675, -20.4485, 0.59", "82.8973, 36.1277, -20.6251, 0.44", "83.6749, 36.2526, -20.7406, 0.44", "85.1869, 36.493, -20.9838, 0.44", "86.0583, 36.6376, -21.1238, 0.44", "87.2372, 36.8633, -21.3048, 0.44", "88.5232, 37.1356, -21.5238, 0.44", "89.5576, 37.3647, -21.703, 0.44", "91.2824, 37.7031, -21.9799, 0.44", "92.3155, 37.8453, -22.1193, 0.44", "93.2339, 37.9381, -22.2459, 0.44", "94.5986, 38.0856, -22.4894, 0.44", "95.6454, 38.1609, -22.7778, 0.44", "96.7415, 38.192, -23.1545, 0.44", "97.605, 38.1818, -23.4917, 0.44", "98.8703, 38.205, -23.9981, 0.44", "100.138, 38.2393, -24.5532, 0.44", "102.091, 38.3183, -25.4353, 0.44", "103.259, 38.3787, -25.9905, 0.44", "105.641, 38.5141, -27.122, 0.44", "107.837, 38.6187, -28.1481, 0.44", "110.199, 38.6755, -29.1638, 0.44", "110.553, 38.685, -29.293, 0.44", "110.804, 38.6987, -29.3744, 0.44", "111.993, 38.766, -29.7637, 0.44", "113.884, 38.8988, -30.3553, 0.44", "115.239, 39.025, -30.7231, 0.44", "116.191, 39.1942, -30.9448, 0.44", "118.181, 39.6694, -31.3746, 0.44", "118.776, 39.8274, -31.4634, 0.44", "120.061, 40.2331, -31.5647, 0.44", "121.028, 40.6118, -31.5647, 0.44", "122.251, 41.1834, -31.5122, 0.44", "123.382, 41.7429, -31.4191, 0.44", "125.303, 42.729, -31.1881, 0.44", "126.609, 43.3748, -31.0275, 0.44", "127.727, 43.8803, -30.8868, 0.44", "129.101, 44.4688, -30.7276, 0.44", "130.43, 45.0564, -30.5926, 0.44", "131.701, 45.6135, -30.5275, 0.44", "132.323, 45.8615, -30.5664, 0.44", "133.023, 46.0543, -30.6505, 0.44", "133.737, 46.1891, -30.7648, 0.44", "134.552, 46.3141, -30.9133, 0.44", "135.335, 46.452, -31.0639, 0.44", "137.521, 46.9336, -31.5201, 0.44", "139.064, 47.3432, -31.8447, 0.44", "140.191, 47.6536, -32.074, 0.44", "141.726, 48.066, -32.3591, 0.44", "142.811, 48.3777, -32.5292, 0.44", "143.869, 48.7272, -32.6486, 0.44", "144.75, 49.047, -32.6949, 0.44", "145.701, 49.3901, -32.7435, 0.44", "146.752, 49.7643, -32.7907, 0.44", "147.994, 50.1883, -32.777, 0.44", "149.412, 50.6325, -32.6908, 0.44", "149.91, 50.78, -32.641, 0.44", "150.749, 51.0434, -32.5117, 0.44", "151.62, 51.34, -32.3427, 0.44", "153.235, 51.913, -31.9773, 0.44", "154.325, 52.2847, -31.7129, 0.44", "155.512, 52.6666, -31.4199, 0.44", "156.916, 53.0705, -31.0918, 0.44", "157.625, 53.2541, -30.9382, 0.22", "158.317, 53.4132, -30.8125, 0.22", "159.396, 53.6539, -30.6811, 0.22", "160.125, 53.8215, -30.573, 0.22", "160.802, 53.9965, -30.4685, 0.22", "161.581, 54.1996, -30.363, 0.22", "162.306, 54.3921, -30.2515, 0.22", "162.926, 54.5625, -30.1502, 0.22", "164.352, 55.0, -29.9165, 0.22", "165.533, 55.3983, -29.7376, 0.22", "166.533, 55.744, -29.6045, 0.22", "167.231, 55.9789, -29.5282, 0.22", "167.948, 56.2303, -29.5016, 0.22", "168.949, 56.5964, -29.5369, 0.22", "169.912, 56.9793, -29.728, 0.22", "170.468, 57.205, -29.8923, 0.22", "171.213, 57.5429, -30.1735, 0.22", "172.494, 58.1128, -30.7973, 0.22", "173.463, 58.5135, -31.3078, 0.22", "175.116, 59.1215, -32.1869, 0.22", "175.947, 59.4061, -32.5936, 0.22", "177.333, 59.8775, -33.2043, 0.22", "179.469, 60.5922, -34.028, 0.22", "181.303, 61.2167, -34.6371, 0.22", "183.118, 61.8236, -35.1535, 0.22", "185.142, 62.4812, -35.6397, 0.22", "186.332, 62.8608, -35.9154, 0.22", "187.53, 63.2072, -36.1628, 0.22", "189.505, 63.7459, -36.4999, 0.37", "190.712, 64.0466, -36.7065, 0.29", "192.493, 64.4527, -37.0021, 0.15", "193.188, 64.5849, -37.1193, 0.15", "194.26, 64.7559, -37.2809, 0.15", "195.334, 64.9052, -37.4114, 0.15", "196.158, 64.9955, -37.4288, 0.15", "197.17, 65.1179, -37.4076, 0.15", "197.766, 65.2048, -37.3608, 0.15", "199.134, 65.452, -37.2358, 0.15", "199.7, 65.5742, -37.1731, 0.15", "201.174, 65.8773, -36.9695, 0.15", "202.085, 66.0351, -36.8135, 0.15", "202.306, 66.0596, -36.7643, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "22.7911, 78.3179, -9.20357, 0.66", "23.6397, 79.8772, -9.68653, 0.66", "24.4245, 81.0559, -10.1105, 0.66", "25.5647, 82.5848, -10.6683, 0.66", "26.2002, 83.3996, -10.9594, 0.66", "27.2104, 84.7493, -11.4005, 0.66", "27.8604, 85.68, -11.6624, 0.88", "28.6286, 86.9311, -11.9308, 0.74", "29.2763, 88.0214, -12.1063, 0.74", "29.5537, 88.5231, -12.1472, 0.74", "30.1563, 89.9066, -12.2026, 0.59", "30.3688, 90.9078, -12.2076, 0.59", "30.4683, 91.8672, -12.2454, 0.52", "30.4974, 92.3634, -12.2713, 0.96", "30.555, 93.7196, -12.383, 0.88", "30.5941, 94.9299, -12.5732, 0.88", "30.6331, 96.718, -12.9573, 0.88", "30.7075, 99.2181, -13.6096, 0.59", "30.7725, 100.414, -13.9488, 0.59", "30.9181, 101.917, -14.4267, 0.59", "31.1104, 103.769, -15.1107, 0.59", "31.1848, 104.705, -15.4717, 0.59", "31.1981, 106.033, -15.961, 0.74", "31.0988, 107.144, -16.3324, 0.66", "30.9226, 108.579, -16.7886, 0.66", "30.6636, 111.041, -17.5284, 0.66", "30.5832, 112.466, -17.8881, 0.66", "30.5752, 114.485, -18.3802, 0.66", "30.6127, 115.395, -18.5952, 0.74", "30.7138, 116.32, -18.8326, 0.74", "31.0127, 117.712, -19.1899, 0.74", "31.447, 118.923, -19.5233, 0.74", "31.8997, 119.958, -19.8379, 0.74", "32.3437, 120.898, -20.1231, 0.74", "33.1498, 122.784, -20.6368, 0.74", "33.2696, 123.133, -20.7194, 0.74", "33.5588, 124.269, -20.9321, 0.74", "33.7909, 125.685, -21.1399, 0.74", "33.8356, 126.181, -21.2041, 0.74", "33.8722, 127.301, -21.3296, 0.74", "33.8719, 128.567, -21.5008, 0.88", "33.8719, 129.755, -21.7586, 0.88", "33.8594, 131.359, -22.2377, 0.74", "33.8302, 132.488, -22.5773, 0.74", "33.7864, 133.781, -22.9462, 0.59", "33.7409, 135.2, -23.3667, 0.74", "33.7826, 136.919, -23.9486, 0.74", "33.897, 138.516, -24.5131, 0.74", "34.1813, 140.866, -25.3016, 0.74", "34.4466, 142.303, -25.7128, 0.74", "34.6892, 143.443, -26.0054, 0.74", "35.2778, 146.245, -26.6871, 0.74", "35.4746, 147.196, -26.9115, 0.74", "35.9143, 149.043, -27.3597, 0.74", "36.6172, 151.613, -28.0199, 0.74", "37.0846, 153.219, -28.3794, 0.74", "37.519, 154.774, -28.6587, 0.74", "37.7974, 156.031, -28.8319, 0.74", "38.0321, 157.505, -29.0972, 0.74", "38.1389, 158.415, -29.3006, 0.74", "38.2512, 159.65, -29.4392, 0.52", "38.3696, 160.797, -29.5321, 0.52", "38.6107, 163.048, -29.6407, 0.52", "38.7648, 165.158, -29.7372, 0.74", "38.7759, 166.861, -29.8011, 0.74", "38.6343, 171.383, -29.8595, 0.74" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "22.7911, 78.3179, -9.20357, 0.29", "22.0939, 79.2683, -8.95525, 0.29", "21.1982, 80.5102, -8.7004, 0.29", "20.3221, 81.8069, -8.48893, 0.29", "19.2526, 83.3962, -8.30861, 0.29", "18.5247, 84.5219, -8.21857, 0.29", "18.0013, 85.4018, -8.18861, 0.29", "17.5911, 86.184, -8.21552, 0.29", "17.0684, 87.3572, -8.33404, 0.29", "16.6426, 88.4139, -8.4811, 0.29", "16.2875, 89.3513, -8.61653, 0.29", "15.8407, 90.6034, -8.73274, 0.29", "15.3072, 92.2267, -8.77987, 0.29", "15.0785, 93.0154, -8.74181, 0.81", "14.8973, 93.7008, -8.65043, 0.15", "14.6857, 94.6748, -8.43918, 0.15", "14.535, 95.6296, -8.17526, 0.15", "14.473, 96.3698, -7.92787, 0.15", "14.4863, 97.4742, -7.56278, 0.66", "14.4975, 98.5949, -7.24097, 0.66", "14.475, 99.0904, -7.11696, 0.29", "14.4108, 100.393, -6.86989, 0.29", "14.3899, 100.81, -6.80407, 1.03", "14.3162, 101.705, -6.69366, 0.22", "14.1973, 102.966, -6.58244, 0.22", "14.0548, 104.293, -6.45876, 0.22", "13.8992, 105.439, -6.3522, 0.22", "13.7199, 106.606, -6.24812, 0.22", "13.6561, 107.021, -6.21659, 0.37", "13.6169, 107.37, -6.19191, 0.22", "13.5987, 108.162, -6.14957, 0.22", "13.5966, 108.581, -6.1107, 0.52", "13.5805, 109.362, -5.9903, 0.22", "13.5753, 110.615, -5.73993, 0.22", "13.6042, 111.515, -5.54399, 0.22", "13.6592, 112.622, -5.28079, 0.22", "13.7522, 113.826, -4.95992, 0.44", "13.8176, 114.414, -4.7868, 0.22", "13.9895, 115.416, -4.45066, 0.22", "14.2378, 116.296, -4.12086, 0.29" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "34.861, 92.1031, 15.2001, 0.59", "34.4156, 94.305, 14.7544, 0.59", "34.3224, 94.9363, 14.6476, 0.37", "34.04, 97.0395, 14.3436, 0.37", "33.7228, 98.811, 14.1208, 0.59", "33.4366, 100.17, 13.974, 0.52", "33.2221, 101.146, 13.8726, 0.52", "33.0029, 102.118, 13.8281, 0.52", "32.8621, 103.078, 13.7849, 0.52", "32.7832, 104.511, 13.7255, 0.52", "32.7484, 105.799, 13.6907, 0.44", "32.7524, 106.989, 13.6635, 0.44", "32.7914, 107.883, 13.6472, 0.52", "32.9353, 109.277, 13.6063, 0.52", "33.0442, 110.062, 13.5803, 0.52", "33.2574, 111.436, 13.5347, 0.52", "33.4496, 112.868, 13.4659, 0.52", "33.5058, 113.525, 13.4022, 0.52", "33.5294, 114.629, 13.2523, 0.52", "33.488, 116.742, 12.9033, 0.52", "33.4622, 118.142, 12.6424, 0.52", "33.4455, 119.675, 12.349, 0.52", "33.4915, 121.523, 12.0028, 0.52", "33.5918, 122.785, 11.7851, 0.52", "33.6588, 123.208, 11.7371, 0.52", "33.9266, 124.29, 11.6907, 0.52", "34.1504, 125.16, 11.734, 0.29", "34.4018, 126.222, 11.8463, 0.29", "34.6297, 127.034, 11.9957, 0.29", "35.0227, 128.36, 12.2535, 0.59", "35.3377, 129.68, 12.5036, 0.37", "35.4926, 131.033, 12.7302, 0.37", "35.4668, 132.194, 12.8597, 0.52" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "34.861, 92.1031, 15.2001, 0.44", "33.5149, 93.5834, 16.4382, 0.44", "32.5897, 94.7985, 17.4846, 0.44", "31.8069, 96.1515, 18.7852, 0.44", "31.0227, 97.6745, 20.2366, 0.44", "30.642, 98.4343, 20.9554, 0.44", "30.2271, 99.2162, 21.7313, 0.44", "29.9395, 99.7824, 22.341, 0.44", "29.4388, 100.984, 23.6633, 0.44", "28.9392, 102.673, 25.4093, 0.59", "28.5955, 103.926, 26.6053, 0.59", "28.2058, 105.345, 27.8673, 0.59", "27.818, 106.734, 28.9339, 0.52", "27.508, 107.934, 29.7352, 0.52", "27.221, 109.568, 30.6292, 0.44", "27.1687, 110.62, 31.1015, 0.44", "27.2621, 111.938, 31.7081, 0.44", "27.4231, 113.311, 32.2489, 0.44", "27.5276, 114.133, 32.5488, 0.37", "27.6027, 114.98, 32.8856, 0.37", "27.6425, 115.885, 33.3032, 0.29", "28.1987, 119.235, 35.1534, 0.29" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "38.6343, 171.383, -29.8595, 0.59", "37.9344, 172.673, -29.8237, 0.59", "37.535, 173.503, -29.7553, 0.59", "37.1062, 174.616, -29.6446, 0.59", "36.5911, 176.138, -29.3191, 0.59", "36.296, 177.155, -29.0495, 0.37", "35.9758, 178.29, -28.6802, 0.37", "35.7968, 179.154, -28.3564, 0.29", "35.613, 180.012, -28.0143, 0.29", "35.2629, 181.458, -27.3088, 0.44", "34.9785, 182.413, -26.7351, 0.44", "34.6251, 183.398, -26.062, 0.44", "34.2986, 184.195, -25.4166, 0.44", "33.8036, 185.172, -24.4982, 0.44", "32.9392, 186.582, -23.1861, 0.52", "32.6227, 187.066, -22.8055, 0.52", "32.1388, 187.736, -22.3154, 0.52", "31.3318, 188.809, -21.587, 0.52", "30.3108, 190.122, -20.6791, 0.52", "29.6012, 191.128, -19.9635, 0.44", "28.9383, 192.188, -19.2793, 0.44", "28.2317, 193.452, -18.4043, 0.44", "27.3777, 195.07, -17.2212, 0.44", "27.0142, 195.805, -16.6775, 0.44", "26.5442, 197.057, -15.5133, 0.44", "26.4578, 197.406, -15.1322, 0.44", "26.2771, 198.753, -13.6108, 0.44", "26.2472, 199.426, -12.8753, 0.44", "26.2233, 200.516, -11.678, 0.44", "26.0289, 202.787, -9.48225, 0.59", "25.7905, 204.145, -8.24831, 0.29", "25.5591, 205.058, -7.46314, 0.22", "25.3332, 205.738, -6.93215, 0.29", "24.88, 206.935, -6.11759, 0.29", "23.7436, 209.192, -4.58572, 0.29", "23.0603, 210.34, -3.92064, 0.29", "22.6473, 211.003, -3.54753, 0.37", "22.1107, 211.913, -3.00448, 0.29", "21.3954, 213.193, -2.19618, 0.29", "20.4778, 214.963, -1.05333, 0.37", "19.8317, 216.266, -0.0682315, 0.37", "19.449, 217.081, 0.511866, 0.37", "19.1397, 217.735, 1.00379, 0.37", "18.7271, 218.507, 1.60526, 0.29", "18.4079, 218.983, 2.00552, 0.29" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "38.6343, 171.383, -29.8595, 0.81", "38.8967, 175.826, -32.959, 0.81", "38.9428, 177.034, -33.6747, 0.74", "38.9815, 178.104, -34.2252, 0.74", "39.0239, 179.122, -34.6747, 0.88", "39.0973, 180.154, -35.0547, 0.88", "39.2842, 182.18, -35.7386, 0.66", "39.3926, 183.161, -35.8969, 0.66", "39.4818, 184.113, -36.051, 0.66", "39.5756, 185.369, -36.3138, 0.52", "39.7229, 187.258, -36.7566, 0.52", "39.8088, 188.319, -37.0093, 0.74", "39.8911, 189.297, -37.2214, 0.81", "39.9985, 190.583, -37.5043, 0.81", "40.1153, 192.691, -37.924, 0.81", "40.1864, 194.157, -38.2402, 0.81", "40.2627, 195.425, -38.4587, 0.81", "40.417, 196.977, -38.6517, 0.66", "40.5854, 198.296, -38.841, 0.66", "40.9425, 200.691, -39.1456, 0.74", "41.2553, 202.581, -39.2632, 0.74", "41.5895, 204.601, -39.3549, 0.81", "41.7776, 205.667, -39.3856, 0.88", "42.2531, 208.222, -39.5089, 0.88", "42.5452, 209.703, -39.5984, 0.74", "42.8959, 211.394, -39.7776, 0.74", "43.0971, 212.568, -39.9633, 0.74", "43.2087, 213.414, -40.2185, 0.74", "43.3728, 215.073, -40.8291, 0.74", "43.4492, 216.091, -41.235, 0.74", "43.5272, 217.619, -41.9427, 0.81", "43.6051, 218.894, -42.5628, 0.81", "43.7195, 220.501, -43.2847, 0.66", "43.8093, 221.926, -43.8394, 0.66", "43.8694, 223.285, -44.2483, 0.66", "43.9007, 224.479, -44.5297, 0.66", "43.9484, 225.836, -44.6788, 0.66", "43.9934, 226.957, -44.7187, 0.66", "44.0216, 227.815, -44.7437, 0.66", "43.9925, 228.838, -44.8636, 0.96", "43.8829, 229.884, -45.0602, 0.81", "43.6208, 231.465, -45.4237, 0.44", "43.3942, 232.75, -45.7461, 0.44", "43.1103, 234.797, -46.2142, 0.59", "42.8701, 237.123, -46.7687, 0.59", "42.7581, 238.624, -47.1616, 0.59", "42.6817, 239.867, -47.4977, 0.59", "42.638, 241.322, -47.824, 0.59", "42.7051, 243.124, -48.0651, 0.59", "42.9371, 245.175, -48.2124, 0.59", "43.191, 246.483, -48.2662, 0.59", "43.4937, 247.746, -48.3572, 0.66", "44.1335, 250.27, -48.5992, 0.52", "44.5978, 252.354, -48.8455, 0.52", "44.8808, 253.677, -49.0538, 0.52", "45.1816, 255.005, -49.2348, 0.52", "45.4997, 256.408, -49.4306, 0.52", "45.6549, 257.177, -49.5537, 0.52", "46.076, 259.589, -49.9873, 0.52", "46.3492, 261.276, -50.2572, 0.52", "46.6236, 263.287, -50.5494, 0.88", "46.8502, 265.248, -50.8111, 0.74", "47.1634, 268.215, -51.1406, 0.74", "47.4184, 270.55, -51.4259, 0.74", "47.5698, 271.81, -51.5848, 0.74", "47.7984, 274.03, -51.8629, 0.74", "47.8966, 275.222, -52.0505, 0.74", "48.045, 277.487, -52.4467, 0.74", "48.1616, 279.35, -52.812, 0.74", "48.2653, 280.758, -53.1208, 0.74", "48.3814, 281.792, -53.3642, 0.74", "48.6592, 283.414, -53.7766, 0.74", "48.7998, 284.215, -54.0016, 0.66", "49.1021, 286.15, -54.564, 0.66", "49.3124, 287.688, -55.0001, 0.44", "49.4465, 288.623, -55.2689, 0.44", "49.6139, 289.69, -55.5336, 0.96", "49.843, 291.058, -55.8569, 0.74", "50.0692, 292.453, -56.1791, 0.66", "50.2519, 293.864, -56.4645, 0.37", "50.3647, 294.905, -56.6514, 0.59", "50.5355, 296.474, -56.9096, 0.59", "50.7421, 298.349, -57.2098, 0.74", "50.8209, 299.206, -57.3465, 0.74", "50.8742, 300.988, -57.6567, 0.74", "50.8261, 301.982, -57.8424, 0.74", "50.7485, 302.836, -57.9794, 0.88", "50.5854, 304.629, -58.2144, 0.66", "50.4847, 306.292, -58.3429, 0.74", "50.4583, 307.857, -58.4568, 0.59", "50.4822, 309.501, -58.564, 0.44", "50.5519, 311.61, -58.7299, 0.59", "50.6304, 312.993, -58.8443, 0.74", "50.8101, 314.716, -58.9784, 0.44", "51.2913, 317.669, -59.3233, 0.44", "51.5448, 318.915, -59.5042, 0.59", "51.8217, 320.198, -59.7454, 0.59", "51.9768, 320.943, -59.9245, 0.44", "52.2435, 322.261, -60.2431, 0.74", "52.6699, 324.352, -60.7706, 0.81", "52.9492, 325.438, -61.0409, 0.52", "53.1448, 326.099, -61.1972, 0.52", "53.6874, 327.766, -61.5156, 0.96", "54.0594, 328.941, -61.7371, 0.88" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "35.4668, 132.194, 12.8597, 0.29", "35.6546, 133.116, 12.7959, 0.29", "35.7276, 133.95, 12.7594, 0.22", "35.7624, 134.739, 12.7348, 0.22", "35.7668, 135.541, 12.7296, 0.22", "35.8037, 136.871, 12.6795, 0.22", "35.8066, 137.579, 12.6408, 0.22", "35.7969, 139.782, 12.4482, 0.22", "35.8067, 141.139, 12.2858, 0.22", "35.7815, 142.387, 12.1125, 0.22", "35.7245, 143.75, 11.9068, 0.22", "35.6652, 145.167, 11.6793, 0.22", "35.6084, 147.702, 11.2595, 0.22", "35.6382, 148.883, 11.0616, 0.22", "35.6847, 150.057, 10.8688, 0.22", "35.7334, 151.133, 10.7021, 0.22", "35.7939, 152.939, 10.5008, 0.29", "35.8375, 153.447, 10.4512, 0.44", "35.9163, 154.469, 10.4056, 0.22", "35.9801, 155.024, 10.3728, 0.22" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "35.4668, 132.194, 12.8597, 0.29", "34.7311, 133.651, 13.8446, 0.29", "34.2752, 134.455, 14.4284, 0.29", "33.549, 135.82, 15.4297, 0.29", "32.6987, 137.583, 16.7145, 0.37", "32.337, 138.467, 17.3352, 0.37", "31.8489, 139.801, 18.2539, 0.37", "31.3332, 141.391, 19.2812, 0.37", "30.973, 142.182, 19.7515, 0.37", "30.6965, 142.685, 20.0445, 0.37", "30.2716, 143.522, 20.5698, 0.37", "29.8819, 144.423, 21.2437, 0.37", "29.3932, 145.549, 22.1549, 0.37", "28.2693, 147.815, 23.9532, 0.37", "27.5367, 149.089, 25.0458, 0.37", "26.9589, 150.099, 25.8701, 0.37", "26.3085, 151.226, 26.8243, 0.37", "26.0329, 151.791, 27.3039, 0.37", "25.8507, 152.317, 27.7567, 0.37", "25.6345, 153.2, 28.5494, 0.37", "24.8679, 154.962, 29.8792, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "54.0594, 328.941, -61.7371, 0.59", "54.2272, 331.028, -61.6501, 0.59", "54.363, 332.306, -61.6123, 0.59", "54.5159, 333.439, -61.5875, 0.59", "54.6585, 334.438, -61.5698, 0.59", "54.9379, 336.663, -61.5373, 0.81", "55.1635, 338.525, -61.5145, 0.81", "55.3357, 339.69, -61.5316, 0.52", "55.5759, 341.369, -61.5316, 0.52", "55.6801, 342.28, -61.5316, 0.96", "55.8134, 343.938, -61.5316, 0.74", "55.8792, 345.152, -61.5316, 0.74", "55.9287, 346.326, -61.553, 0.74", "55.9593, 347.685, -61.6005, 0.74", "55.9658, 348.976, -61.6639, 0.52", "55.9946, 350.052, -61.7429, 0.74", "56.0264, 350.623, -61.8156, 0.66", "56.0987, 351.836, -62.0191, 0.44", "56.1944, 353.432, -62.3663, 0.44", "56.2504, 354.539, -62.6457, 0.59", "56.3087, 356.023, -63.0487, 1.03", "56.3333, 357.412, -63.4384, 0.81", "56.3526, 358.243, -63.6647, 0.59", "56.3677, 359.058, -63.8674, 0.44", "56.3752, 360.334, -64.2113, 0.44", "56.3328, 361.102, -64.4093, 0.44", "56.211, 362.117, -64.6273, 0.59", "56.0463, 363.142, -64.8306, 0.88", "55.88, 364.113, -65.0264, 0.88", "55.7118, 365.111, -65.2181, 0.44", "55.4839, 366.461, -65.4806, 0.44", "55.3063, 367.499, -65.6688, 0.44", "55.0684, 368.958, -65.9535, 0.74", "54.932, 369.937, -66.1501, 0.96", "54.8651, 370.582, -66.2705, 1.18", "54.8159, 371.72, -66.4463, 0.59", "54.8311, 372.783, -66.6003, 0.44", "54.8948, 374.071, -66.8446, 0.52", "54.9804, 375.058, -67.1058, 0.74", "55.1109, 376.506, -67.5663, 0.59", "55.2807, 378.02, -68.0888, 0.37", "55.4436, 379.15, -68.4996, 0.37", "55.8841, 381.861, -69.5699, 0.96", "56.2228, 383.715, -70.3133, 0.52", "56.4391, 384.957, -70.8376, 0.52", "56.6193, 386.047, -71.3479, 0.52", "56.7132, 386.733, -71.6823, 0.52", "56.962, 388.508, -72.5195, 0.74", "57.1101, 389.638, -72.9821, 0.74", "57.3324, 391.339, -73.6352, 0.66", "57.5224, 392.806, -74.2275, 0.37", "57.5647, 393.498, -74.5142, 0.37", "57.5589, 394.443, -74.8915, 0.74", "57.5119, 395.184, -75.1684, 0.44", "57.3514, 396.564, -75.6641, 0.44", "57.2712, 397.188, -75.8577, 0.96", "57.0322, 399.074, -76.3822, 1.03", "56.943, 400.04, -76.648, 0.59", "56.8628, 401.473, -77.0575, 0.37", "56.8728, 402.855, -77.4446, 0.37", "56.9751, 404.088, -77.7573, 0.37", "57.2279, 405.51, -78.1374, 0.37", "57.6036, 406.837, -78.4926, 0.37", "57.9202, 407.756, -78.7497, 0.52", "58.2306, 408.567, -78.9803, 1.18", "58.6437, 409.612, -79.2889, 1.18", "59.0946, 410.77, -79.6138, 0.29", "59.3794, 411.543, -79.7949, 0.29", "59.5213, 411.963, -79.8898, 0.59", "59.6369, 412.302, -79.9527, 0.37", "60.0115, 413.346, -80.1404, 0.37", "60.2801, 414.046, -80.2349, 0.52", "60.5194, 414.617, -80.2349, 0.37" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "54.0594, 328.941, -61.7371, 0.29", "55.0698, 329.374, -61.4721, 0.29", "55.9416, 329.769, -61.2941, 0.29", "56.1367, 329.864, -61.2603, 0.37", "56.4582, 330.038, -61.2104, 0.22", "56.8385, 330.252, -61.1598, 0.22", "57.2963, 330.517, -61.109, 0.22", "57.7488, 330.777, -61.109, 0.22", "57.9693, 330.91, -61.109, 0.44", "58.2246, 331.052, -61.0972, 0.15", "58.657, 331.321, -61.0617, 0.15", "59.1422, 331.66, -61.0091, 0.44", "59.3638, 331.829, -60.9331, 0.44", "59.4762, 331.912, -60.8802, 0.22", "60.2422, 332.487, -60.4842, 0.22", "60.7256, 332.865, -60.2178, 0.44", "61.2031, 333.275, -59.9602, 0.22", "62.3917, 334.33, -59.2789, 0.22", "62.9342, 334.829, -58.9574, 0.22", "63.5468, 335.407, -58.5878, 0.22", "63.7246, 335.58, -58.48, 0.44", "64.6837, 336.413, -57.9377, 0.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "60.5194, 414.617, -80.2349, 1.11", "60.4494, 416.578, -81.7499, 1.11", "60.5237, 417.706, -82.5365, 0.66", "60.662, 418.817, -83.2056, 0.44", "60.7455, 419.329, -83.5005, 0.29", "60.9172, 420.448, -84.0886, 0.37", "61.0087, 421.19, -84.4457, 0.15", "61.1258, 421.982, -84.7556, 0.15", "61.2467, 422.917, -85.1172, 0.15", "61.3403, 423.915, -85.444, 0.81", "61.398, 425.03, -85.8179, 1.11", "61.4021, 425.842, -86.0968, 0.52", "61.3877, 427.04, -86.5264, 0.52", "61.3821, 427.587, -86.7171, 0.74", "61.408, 428.825, -87.1133, 0.37", "61.455, 429.95, -87.4621, 0.22", "61.5348, 431.323, -87.929, 0.22", "61.5842, 432.386, -88.2981, 0.22", "61.6087, 433.424, -88.6334, 0.22", "61.6182, 434.485, -88.9724, 0.22", "61.6186, 435.527, -89.2868, 1.18", "61.5896, 437.34, -89.763, 0.29", "61.5659, 438.224, -89.9926, 0.22", "61.5249, 439.633, -90.3634, 0.22", "61.5081, 440.325, -90.5357, 0.22", "61.4879, 441.383, -90.7956, 0.88", "61.4901, 442.083, -90.9475, 0.37", "61.5166, 443.564, -91.253, 0.15", "61.5273, 444.458, -91.4689, 0.15", "61.5148, 445.224, -91.677, 0.74", "61.4608, 446.545, -92.0472, 0.88", "61.4302, 447.034, -92.2191, 0.37", "61.3685, 447.958, -92.5761, 0.37", "61.2813, 449.121, -93.0402, 0.88", "61.2241, 449.854, -93.3104, 1.33", "61.1982, 450.405, -93.4882, 0.81", "61.2118, 452.291, -93.9628, 0.29", "61.2545, 453.203, -94.1461, 0.29", "61.3081, 453.703, -94.2202, 0.88", "61.5604, 455.069, -94.323, 0.37", "61.7051, 455.766, -94.3502, 0.29", "61.8912, 456.656, -94.3451, 0.29", "62.0721, 457.647, -94.2896, 0.29", "62.1956, 458.459, -94.2678, 0.29", "62.3395, 459.638, -94.2722, 0.29", "62.448, 460.747, -94.3169, 1.11", "62.5379, 461.806, -94.3733, 0.59", "62.6286, 462.896, -94.4786, 0.29", "62.7146, 463.741, -94.6075, 0.29", "62.7698, 464.333, -94.7357, 0.29", "62.8321, 465.172, -94.9636, 0.29", "62.9284, 466.678, -95.4718, 1.18", "62.9713, 467.775, -95.9023, 1.4", "62.9898, 468.98, -96.4059, 0.29", "62.9637, 469.918, -96.8196, 0.29", "62.9098, 470.753, -97.2029, 0.29", "62.7894, 471.77, -97.6845, 0.74", "62.7137, 472.168, -97.8672, 0.96", "62.488, 473.138, -98.2536, 0.37", "62.1798, 474.3, -98.6769, 0.59" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "60.5194, 414.617, -80.2349, 0.15", "61.13, 415.566, -80.2007, 0.15", "61.7502, 416.427, -80.1745, 0.15", "62.2, 416.995, -80.1598, 0.59", "62.7112, 417.595, -80.1466, 0.15", "63.4805, 418.48, -80.1294, 0.15", "63.9315, 418.999, -80.1194, 0.59", "64.7384, 419.848, -80.1098, 0.59", "65.4771, 420.579, -80.1022, 0.15", "66.2644, 421.336, -80.0965, 0.15", "66.618, 421.672, -80.0965, 0.44" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "62.1798, 474.3, -98.6769, 0.07", "62.0327, 475.559, -99.04, 0.07", "61.9153, 476.927, -99.4158, 0.07", "61.8812, 477.486, -99.5605, 1.25", "61.8463, 478.555, -99.8624, 0.22", "61.736, 480.515, -100.407, 0.22", "61.6967, 481.074, -100.554, 0.22", "61.6767, 481.508, -100.653, 0.88", "61.6747, 482.022, -100.768, 0.15", "61.7026, 483.951, -101.197, 0.15", "61.7249, 485.303, -101.476, 0.15", "61.7435, 486.297, -101.648, 0.15", "61.7573, 487.12, -101.779, 0.88", "61.7614, 487.949, -101.898, 0.22", "61.732, 489.858, -102.124, 0.22", "61.6577, 491.065, -102.241, 0.22", "61.5776, 492.045, -102.342, 0.22", "61.4539, 493.112, -102.454, 0.96", "61.3625, 493.845, -102.544, 1.4", "61.2663, 494.835, -102.675, 0.15", "61.097, 497.082, -103.013, 0.15", "61.0718, 497.831, -103.152, 0.66", "61.0656, 498.437, -103.286, 0.29", "61.0805, 499.842, -103.673, 0.29", "61.1085, 501.014, -104.033, 0.29", "61.1221, 501.667, -104.243, 0.59", "61.1237, 502.229, -104.426, 0.07", "61.0147, 504.348, -105.096, 0.07", "60.8898, 505.759, -105.458, 1.18", "60.7982, 506.533, -105.606, 0.37", "60.6936, 507.396, -105.738, 0.37", "60.6675, 507.617, -105.762, 0.74", "60.604, 508.189, -105.788, 0.22", "60.2847, 511.118, -105.722, 0.15", "60.1561, 512.23, -105.644, 1.11", "60.0778, 513.008, -105.581, 0.07", "59.985, 514.256, -105.472, 0.07", "59.9229, 515.388, -105.373, 0.37", "59.9058, 516.171, -105.266, 0.59", "59.9171, 516.804, -105.146, 0.15", "59.976, 517.701, -104.98, 0.15", "60.0725, 518.486, -104.851, 0.15", "60.402, 520.297, -104.605, 0.15", "60.6563, 521.635, -104.473, 0.37", "60.7935, 522.334, -104.412, 0.37", "61.0175, 523.494, -104.325, 0.07", "61.242, 524.719, -104.257, 0.07", "61.4287, 525.668, -104.228, 0.07", "61.6341, 526.636, -104.232, 0.07", "61.81, 527.439, -104.267, 0.07", "61.9065, 527.843, -104.277, 1.11", "62.2263, 529.068, -104.277, 0.66", "62.3994, 529.708, -104.277, 0.29", "62.6046, 530.465, -104.295, 0.29", "62.8144, 531.203, -104.327, 0.29", "62.9342, 531.639, -104.351, 0.07", "63.1108, 532.33, -104.396, 0.07", "63.3706, 533.475, -104.475, 0.07", "63.5524, 534.288, -104.53, 1.03", "63.863, 535.639, -104.578, 0.44", "63.9486, 536.061, -104.58, 0.15", "64.1477, 537.064, -104.555, 0.15", "64.3612, 538.115, -104.501, 0.66", "64.5752, 539.001, -104.43, 0.37", "64.7834, 539.757, -104.356, 0.15", "65.1574, 541.062, -104.238, 0.15", "65.3944, 541.823, -104.18, 0.15", "65.587, 542.409, -104.146, 0.66", "65.8674, 543.273, -104.119, 0.29", "66.0722, 543.95, -104.117, 0.22", "66.3729, 544.983, -104.148, 0.15", "66.5697, 545.621, -104.228, 0.74", "66.7866, 546.301, -104.368, 0.07", "67.2087, 547.564, -104.81, 0.07", "67.3295, 547.943, -105.01, 0.96", "67.5154, 548.539, -105.403, 0.07", "67.966, 550.161, -106.629, 0.07", "68.1255, 550.779, -107.182, 1.18", "68.4263, 551.902, -108.32, 0.22", "68.6266, 552.692, -109.226, 0.22", "68.7121, 553.055, -109.678, 0.22", "68.8256, 553.71, -110.449, 0.22", "68.9333, 554.66, -111.437, 0.59", "68.9679, 555.002, -111.816, 0.44", "69.1058, 555.942, -112.814, 0.88", "69.2579, 556.731, -113.654, 0.07", "69.4797, 557.814, -114.806, 0.07", "69.5969, 558.381, -115.402, 1.33", "69.8671, 559.882, -116.797, 0.07", "69.9842, 560.59, -117.417, 0.07", "70.0538, 561.007, -117.738, 0.59", "70.0893, 561.357, -117.974, 0.59", "70.1244, 562.037, -118.412, 0.07", "70.1135, 562.944, -118.88, 0.07", "70.0859, 563.422, -119.068, 0.88", "70.0574, 563.844, -119.223, 0.07", "69.9886, 565.784, -119.859, 0.07", "69.9878, 565.991, -119.92, 0.07", "70.0179, 566.719, -120.095, 1.33", "70.0525, 567.139, -120.185, 0.07", "70.4112, 569.495, -120.622, 0.07", "70.6018, 570.244, -120.745, 1.11", "70.8142, 570.834, -120.823, 0.22", "71.3006, 572.046, -120.98, 0.22", "71.4556, 572.399, -121.024, 0.52", "71.827, 573.191, -121.109, 0.07", "72.4173, 574.383, -121.215, 0.07", "72.8154, 575.266, -121.31, 0.07", "72.8989, 575.472, -121.335, 0.44", "73.0698, 575.947, -121.4, 0.07", "73.3169, 576.764, -121.511, 0.07", "73.4412, 577.33, -121.585, 0.81", "73.5189, 577.768, -121.666, 0.22", "73.6196, 578.292, -121.803, 0.22", "73.6774, 578.572, -121.889, 0.74", "73.7431, 578.872, -121.994, 0.74", "73.8065, 579.162, -122.103, 0.15", "74.0437, 580.327, -122.663, 0.07", "74.1333, 580.902, -122.977, 0.07", "74.1493, 581.093, -123.077, 0.07", "74.1519, 581.361, -123.208, 0.66", "74.1339, 581.683, -123.352, 0.29", "73.9748, 582.918, -123.846, 0.29", "73.8405, 583.582, -124.078, 0.29", "73.6029, 584.642, -124.453, 0.29", "73.4884, 585.111, -124.634, 0.59", "73.4094, 585.386, -124.741, 0.52", "73.3035, 585.705, -124.86, 0.07", "73.023, 586.439, -125.1, 0.07", "72.8774, 586.806, -125.28, 0.07", "72.3671, 588.002, -125.983, 0.22", "72.1469, 588.5, -126.283, 0.66", "72.0338, 588.745, -126.429, 0.66", "71.8604, 589.099, -126.626, 0.15", "71.0441, 590.57, -127.448, 0.15", "70.5999, 591.337, -127.857, 0.15", "70.2692, 591.865, -128.133, 0.66", "70.0446, 592.215, -128.315, 0.07", "69.675, 592.791, -128.598, 0.07", "69.0722, 593.699, -129.032, 1.03", "68.5841, 594.425, -129.368, 0.37", "67.8917, 595.544, -130.003, 0.07", "67.6181, 596.015, -130.3, 0.74", "67.4698, 596.297, -130.482, 0.07", "66.9841, 597.372, -131.153, 0.07", "66.7056, 598.08, -131.549, 0.88", "66.3848, 599.051, -132.058, 0.88", "66.308, 599.364, -132.211, 0.07", "66.151, 600.131, -132.587, 0.07", "66.0116, 600.896, -132.944, 0.07", "65.9112, 601.572, -133.225, 0.07", "65.835, 602.014, -133.406, 0.52", "65.6122, 603.119, -133.856, 0.15", "65.321, 604.521, -134.533, 0.15", "65.2421, 604.889, -134.727, 0.96", "65.1873, 605.145, -134.865, 0.22", "64.9475, 606.34, -135.542, 0.22", "64.8572, 606.783, -135.792, 0.52", "64.477, 608.672, -136.818, 0.07", "64.3773, 609.165, -137.09, 0.88", "64.2912, 609.604, -137.341, 0.15", "64.1119, 610.607, -137.925, 0.15", "64.082, 610.845, -138.061, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "62.1798, 474.3, -98.6769, 0.07", "62.3194, 475.246, -99.0034, 0.07", "62.4186, 475.877, -99.2294, 0.07", "62.525, 476.497, -99.444, 0.81", "62.5834, 476.895, -99.602, 0.07", "62.7547, 478.159, -100.109, 0.07", "62.9198, 479.452, -100.617, 0.07", "62.9831, 479.962, -100.802, 0.88", "63.0426, 480.473, -100.991, 0.29", "63.3202, 482.843, -101.87, 0.29", "63.3848, 483.307, -102.046, 1.18", "63.4702, 483.844, -102.241, 0.44", "63.7015, 485.427, -102.721, 0.44", "63.7584, 485.84, -102.835, 0.66", "63.7922, 486.095, -102.893, 0.15", "64.0148, 487.837, -103.197, 0.15", "64.1101, 488.987, -103.362, 0.15", "64.1706, 490.333, -103.52, 0.15", "64.1792, 491.059, -103.585, 1.33", "64.1462, 492.489, -103.69, 0.37", "64.1146, 493.062, -103.72, 0.15", "63.8373, 495.972, -103.784, 0.15", "63.7722, 496.55, -103.797, 0.88", "63.7097, 497.055, -103.807, 0.07", "63.5771, 498.1, -103.886, 0.07", "63.5096, 498.816, -103.979, 0.07", "63.4871, 499.388, -104.083, 0.74", "63.5192, 500.096, -104.293, 0.07", "63.6155, 501.034, -104.618, 0.07", "63.8527, 502.63, -105.227, 0.88", "63.95, 503.285, -105.479, 0.88", "63.9879, 503.664, -105.629, 0.07", "64.0483, 504.68, -106.016, 0.07", "64.0538, 504.989, -106.116, 0.59", "64.0495, 505.471, -106.247, 0.07", "63.9882, 506.98, -106.533, 0.07", "63.9255, 507.664, -106.657, 0.81", "63.8448, 508.448, -106.776, 0.07", "63.708, 509.662, -106.921, 0.07", "63.6467, 510.12, -106.972, 0.74", "63.5476, 510.753, -107.055, 0.74", "63.4098, 511.532, -107.166, 0.22", "63.1159, 512.85, -107.495, 0.22", "62.9326, 513.465, -107.719, 0.22", "62.7813, 513.92, -107.926, 0.22", "62.4348, 515.093, -108.468, 1.11", "62.3444, 515.43, -108.631, 1.03", "61.9192, 517.326, -109.552, 0.29", "61.7637, 518.225, -109.961, 0.29", "61.7328, 518.721, -110.147, 0.29", "61.7809, 520.532, -110.672, 0.29", "61.8107, 520.81, -110.726, 0.44", "61.9413, 521.521, -110.807, 0.29", "62.2054, 522.558, -110.819, 0.29", "62.6238, 523.811, -110.827, 0.29", "62.7815, 524.223, -110.827, 0.44", "62.9253, 524.554, -110.827, 0.07", "63.2723, 525.403, -110.831, 0.07", "63.3829, 525.69, -110.833, 0.22", "63.5321, 526.115, -110.837, 0.52", "63.7356, 526.732, -110.844, 1.62", "64.0472, 527.628, -110.853, 0.22", "64.3997, 528.639, -110.864, 0.22", "64.7318, 529.58, -110.874, 0.88", "64.9248, 530.092, -110.878, 0.29", "65.3139, 531.091, -110.886, 0.29", "65.6661, 531.951, -110.89, 0.74", "65.8494, 532.369, -110.892, 0.15", "66.1423, 533.018, -110.892, 0.15", "66.7115, 534.375, -110.892, 0.15", "66.8396, 534.715, -110.892, 0.15", "67.1276, 535.7, -110.892, 0.96", "67.2386, 536.203, -110.906, 0.59", "67.3051, 536.549, -110.923, 0.07", "67.3864, 537.04, -110.96, 0.07", "67.4788, 537.672, -111.048, 0.07", "67.6676, 538.716, -111.235, 0.07", "67.8036, 539.34, -111.363, 0.29", "67.965, 540.006, -111.506, 1.11", "68.1497, 540.68, -111.656, 0.15", "68.4294, 541.589, -111.863, 0.07", "68.7776, 542.53, -112.098, 0.07", "69.0683, 543.196, -112.264, 0.07", "69.2426, 543.584, -112.353, 0.07", "69.2682, 543.646, -112.37, 0.52", "69.2958, 543.717, -112.39, 0.07", "69.6984, 544.829, -112.693, 0.07", "69.9167, 545.417, -112.945, 0.07", "70.0418, 545.748, -113.102, 0.07", "70.3129, 546.435, -113.447, 0.07", "70.4807, 546.871, -113.673, 0.07", "70.5325, 547.014, -113.751, 0.22", "70.9456, 548.491, -114.661, 0.07" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "66.618, 421.672, -80.0965, 0.15", "66.9398, 423.324, -79.9134, 0.15", "67.2513, 424.748, -79.7745, 0.15", "67.4912, 425.739, -79.6883, 0.59", "67.6479, 426.392, -79.6371, 0.07", "68.0542, 428.168, -79.5115, 0.07", "68.199, 428.835, -79.4687, 0.81", "68.3254, 429.527, -79.4526, 0.44", "68.4335, 430.185, -79.4403, 0.44", "68.5137, 430.775, -79.4338, 0.44", "68.5984, 431.485, -79.4034, 0.74", "68.648, 432.047, -79.3549, 0.37", "68.7067, 433.242, -79.2183, 0.37", "68.7281, 433.754, -79.1485, 0.74", "68.7455, 434.171, -79.0901, 0.07", "68.8059, 435.257, -78.8871, 0.07", "68.8456, 435.861, -78.7626, 0.07", "68.8963, 436.564, -78.6043, 0.66", "68.9434, 437.139, -78.4626, 0.07", "69.0529, 438.663, -78.0915, 0.07", "69.0986, 439.541, -77.8996, 1.03" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "66.618, 421.672, -80.0965, 0.15", "67.6728, 422.073, -80.0428, 0.15", "68.7115, 422.527, -80.0096, 0.74", "69.0535, 422.68, -80.0001, 0.29", "70.2557, 423.228, -79.9705, 0.29", "71.1502, 423.637, -79.9484, 0.29", "71.5294, 423.81, -79.9391, 0.29", "72.5759, 424.337, -79.9868, 0.29", "73.0369, 424.582, -80.0069, 0.29", "73.4617, 424.818, -80.0197, 0.59" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_31", "dend_28", "dend_3", "dend_0", "dend_35", "dend_32", "dend_30", "dend_29", "dend_23", "dend_4", "dend_2", "dend_1", "dend_37", "dend_36", "dend_34", "dend_33", "dend_25", "dend_24", "dend_10", "dend_5", "dend_27", "dend_26", "dend_12", "dend_11", "dend_7", "dend_6", "dend_22", "dend_13", "dend_9", "dend_8", "dend_15", "dend_14", "dend_19", "dend_16", "dend_21", "dend_20", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_31", "dend_28", "dend_3", "dend_0", "dend_35", "dend_32", "dend_30", "dend_29", "dend_23", "dend_4", "dend_2", "dend_1", "dend_37", "dend_36", "dend_34", "dend_33", "dend_25", "dend_24", "dend_10", "dend_5", "dend_27", "dend_26", "dend_12", "dend_11", "dend_7", "dend_6", "dend_22", "dend_13", "dend_9", "dend_8", "dend_15", "dend_14", "dend_19", "dend_16", "dend_21", "dend_20", "dend_18", "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L6_LBC_e36a750de6_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_3
create dend_23
public dend_23
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_10, id: dend_10, parent: dend_4
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_22, id: dend_22, parent: dend_12
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_31, dend_28, dend_3, dend_0, dend_35, dend_32, dend_30, dend_29, dend_23, dend_4, dend_2, dend_1, dend_37, dend_36, dend_34, dend_33, dend_25, dend_24, dend_10, dend_5, dend_27, dend_26, dend_12, dend_11, dend_7, dend_6, dend_22, dend_13, dend_9, dend_8, dend_15, dend_14, dend_19, dend_16, dend_21, dend_20, dend_18, dend_17]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_31, dend_28, dend_3, dend_0, dend_35, dend_32, dend_30, dend_29, dend_23, dend_4, dend_2, dend_1, dend_37, dend_36, dend_34, dend_33, dend_25, dend_24, dend_10, dend_5, dend_27, dend_26, dend_12, dend_11, dend_7, dend_6, dend_22, dend_13, dend_9, dend_8, dend_15, dend_14, dend_19, dend_16, dend_21, dend_20, dend_18, dend_17]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_40
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_31(0), soma_0(0.4500006358590179)
    connect dend_28(0), soma_0(0.4500006358590179)
    connect dend_3(0), soma_0(0.4500006358590179)
    connect dend_0(0), soma_0(0.4500006358590179)
    connect axon_0(0), soma_0(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_10(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_22(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.76517, -12.0581, 0.531895, 5.3331 ) }
    soma_0 { pt3dadd( -6.09265, -10.9357, 0.485552, 9.91507 ) }
    soma_0 { pt3dadd( -5.42012, -9.81342, 0.439208, 12.4421 ) }
    soma_0 { pt3dadd( -4.7476, -8.6911, 0.392865, 14.4326 ) }
    soma_0 { pt3dadd( -4.07508, -7.56879, 0.346521, 16.7604 ) }
    soma_0 { pt3dadd( -3.40255, -6.44647, 0.300178, 16.9321 ) }
    soma_0 { pt3dadd( -2.73003, -5.32415, 0.253834, 16.7444 ) }
    soma_0 { pt3dadd( -2.0575, -4.20184, 0.207491, 16.5415 ) }
    soma_0 { pt3dadd( -1.38498, -3.07952, 0.161147, 16.2916 ) }
    soma_0 { pt3dadd( -0.712455, -1.9572, 0.114803, 15.4348 ) }
    soma_0 { pt3dadd( -0.0399309, -0.834886, 0.0684599, 14.3733 ) }
    soma_0 { pt3dadd( 0.632593, 0.287431, 0.0221164, 13.1583 ) }
    soma_0 { pt3dadd( 1.30512, 1.40975, -0.0242272, 11.3708 ) }
    soma_0 { pt3dadd( 1.97764, 2.53206, -0.0705707, 9.42664 ) }
    soma_0 { pt3dadd( 2.65017, 3.65438, -0.116914, 7.68722 ) }
    soma_0 { pt3dadd( 3.32269, 4.7767, -0.163258, 6.11754 ) }
    soma_0 { pt3dadd( 3.99521, 5.89901, -0.209601, 3.88362 ) }
    soma_0 { pt3dadd( 4.66774, 7.02133, -0.255945, 3.1359 ) }
    soma_0 { pt3dadd( 5.34026, 8.14365, -0.302288, 2.69333 ) }
    soma_0 { pt3dadd( 6.01279, 9.26596, -0.348632, 2.21532 ) }
    soma_0 { pt3dadd( 6.68531, 10.3883, -0.394975, 1.72126 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 3.92352, -9.93802, 6.19338, 1.47 ) }
    dend_31 { pt3dadd( 4.0865, -10.0833, 6.19338, 1.47 ) }
    dend_31 { pt3dadd( 5.10846, -11.3412, 6.19338, 1.03 ) }
    dend_31 { pt3dadd( 5.95046, -12.7135, 6.19338, 1.03 ) }
    dend_31 { pt3dadd( 6.70548, -14.2261, 6.19338, 1.03 ) }
    dend_31 { pt3dadd( 6.8422, -14.5, 6.19338, 1.03 ) }
    dend_31 { pt3dadd( 7.79763, -16.414, 6.19338, 1.03 ) }
    dend_31 { pt3dadd( 8.7856, -18.568, 6.19338, 1.03 ) }
    dend_31 { pt3dadd( 9.68203, -20.9277, 6.19338, 1.33 ) }
    dend_31 { pt3dadd( 10.2682, -23.063, 6.19338, 2.58 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 31/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -10.9465, -5.29697, -0.366621, 1.18 ) }
    dend_28 { pt3dadd( -12.8062, -4.99901, -0.824413, 0.52 ) }
    dend_28 { pt3dadd( -13.4439, -4.85836, -1.01974, 0.52 ) }
    dend_28 { pt3dadd( -14.9349, -4.58045, -1.45693, 0.81 ) }
    dend_28 { pt3dadd( -16.6532, -4.3802, -1.91199, 1.77 ) }
    dend_28 { pt3dadd( -17.2445, -4.35696, -2.0525, 1.62 ) }
    dend_28 { pt3dadd( -18.898, -4.4005, -2.40921, 0.74 ) }
    dend_28 { pt3dadd( -20.3537, -4.54168, -2.702, 0.88 ) }
    dend_28 { pt3dadd( -22.1196, -4.82964, -2.94243, 1.18 ) }
    dend_28 { pt3dadd( -23.6925, -5.17994, -3.0373, 1.33 ) }
    dend_28 { pt3dadd( -25.1164, -5.58592, -3.07534, 0.81 ) }
    dend_28 { pt3dadd( -26.0547, -5.89767, -3.11826, 0.81 ) }
    dend_28 { pt3dadd( -27.5078, -6.45902, -3.18722, 0.81 ) }
    dend_28 { pt3dadd( -28.272, -6.7729, -3.2564, 0.81 ) }
    dend_28 { pt3dadd( -29.3146, -7.19092, -3.39702, 0.88 ) }
    dend_28 { pt3dadd( -31.1949, -7.86589, -3.72511, 1.11 ) }
    dend_28 { pt3dadd( -32.7268, -8.35797, -4.05207, 0.88 ) }
    dend_28 { pt3dadd( -33.6158, -8.60718, -4.26831, 0.88 ) }
    dend_28 { pt3dadd( -34.5156, -8.84912, -4.52381, 0.88 ) }
    dend_28 { pt3dadd( -34.6149, -8.87442, -4.5516, 0.88 ) }
    dend_28 { pt3dadd( -35.5639, -9.09392, -4.78233, 1.03 ) }
    dend_28 { pt3dadd( -35.6619, -9.11112, -4.7909, 1.03 ) }
    dend_28 { pt3dadd( -36.8656, -9.16662, -4.7909, 1.11 ) }
    dend_28 { pt3dadd( -36.9354, -9.16092, -4.7909, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 55/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 5.10352, 11.7948, -0.746621, 2.14 ) }
    dend_3 { pt3dadd( 7.47352, 15.0026, 0.563379, 2.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 57/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 3.72352, 11.0928, 3.63338, 1.03 ) }
    dend_0 { pt3dadd( 1.8351, 13.2459, 3.71836, 1.03 ) }
    dend_0 { pt3dadd( 0.479024, 14.8432, 3.80656, 0.59 ) }
    dend_0 { pt3dadd( -0.452783, 16.0608, 3.87859, 0.59 ) }
    dend_0 { pt3dadd( -1.30196, 17.2582, 3.94971, 0.81 ) }
    dend_0 { pt3dadd( -3.12028, 19.8467, 4.27816, 0.81 ) }
    dend_0 { pt3dadd( -4.19238, 21.3098, 4.53276, 0.74 ) }
    dend_0 { pt3dadd( -5.27446, 22.7307, 4.98192, 0.44 ) }
    dend_0 { pt3dadd( -6.18773, 23.8399, 5.45384, 0.44 ) }
    dend_0 { pt3dadd( -6.89061, 24.6311, 5.89181, 0.44 ) }
    dend_0 { pt3dadd( -8.52599, 26.4031, 7.06367, 0.44 ) }
    dend_0 { pt3dadd( -9.45008, 27.3849, 7.81004, 0.44 ) }
    dend_0 { pt3dadd( -11.3461, 29.3989, 9.39044, 0.74 ) }
    dend_0 { pt3dadd( -12.2081, 30.352, 10.1489, 0.74 ) }
    dend_0 { pt3dadd( -12.841, 31.111, 10.7249, 0.52 ) }
    dend_0 { pt3dadd( -13.406, 31.9528, 11.206, 0.52 ) }
    dend_0 { pt3dadd( -13.8357, 32.6563, 11.5089, 0.52 ) }
    dend_0 { pt3dadd( -14.6367, 33.934, 12.0742, 0.52 ) }
    dend_0 { pt3dadd( -15.6757, 35.4357, 12.7311, 0.52 ) }
    dend_0 { pt3dadd( -16.3112, 36.2452, 13.2404, 0.96 ) }
    dend_0 { pt3dadd( -18.7289, 39.0671, 15.3576, 0.37 ) }
    dend_0 { pt3dadd( -19.5752, 39.9694, 16.1559, 0.37 ) }
    dend_0 { pt3dadd( -20.7148, 41.0719, 17.2718, 0.37 ) }
    dend_0 { pt3dadd( -21.0607, 41.3935, 17.6183, 0.96 ) }
    dend_0 { pt3dadd( -23.2621, 43.6794, 20.0324, 0.52 ) }
    dend_0 { pt3dadd( -23.6117, 44.1393, 20.4899, 0.52 ) }
    dend_0 { pt3dadd( -23.8867, 44.6239, 20.9648, 0.52 ) }
    dend_0 { pt3dadd( -24.4182, 45.6806, 21.756, 0.52 ) }
    dend_0 { pt3dadd( -24.9862, 46.8417, 22.384, 0.52 ) }
    dend_0 { pt3dadd( -25.6907, 48.1452, 22.9106, 0.52 ) }
    dend_0 { pt3dadd( -26.0808, 48.8299, 23.0826, 0.52 ) }
    dend_0 { pt3dadd( -26.9795, 50.4932, 23.5557, 0.52 ) }
    dend_0 { pt3dadd( -27.7942, 52.1618, 24.1011, 1.25 ) }
    dend_0 { pt3dadd( -28.4294, 53.5492, 24.616, 0.52 ) }
    dend_0 { pt3dadd( -29.0348, 54.6897, 25.1317, 0.44 ) }
    dend_0 { pt3dadd( -29.5182, 55.5034, 25.5404, 0.44 ) }
    dend_0 { pt3dadd( -30.4428, 57.2187, 26.4159, 0.44 ) }
    dend_0 { pt3dadd( -30.9917, 58.4557, 27.0368, 0.44 ) }
    dend_0 { pt3dadd( -31.5661, 59.9174, 27.862, 0.44 ) }
    dend_0 { pt3dadd( -32.4734, 61.8805, 29.13, 0.44 ) }
    dend_0 { pt3dadd( -32.8799, 62.5626, 29.6413, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 98/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.68531, 10.3883, -0.394975, 0.771619 ) }
    axon_0 { pt3dadd( 14.3954, 23.2551, -0.394975, 0.771619 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    axon_0 { pt3dadd( 22.1055, 36.1219, -0.394975, 0.771619 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 1/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 10.2682, -23.063, 6.19338, 1.03 ) }
    dend_35 { pt3dadd( 9.99385, -26.2507, 10.617, 1.03 ) }
    dend_35 { pt3dadd( 9.91068, -27.2171, 11.9582, 1.03 ) }
    dend_35 { pt3dadd( 9.82684, -28.1912, 13.3099, 1.47 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 5/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 10.2682, -23.063, 6.19338, 0.96 ) }
    dend_32 { pt3dadd( 11.8671, -24.3208, 5.83811, 0.96 ) }
    dend_32 { pt3dadd( 13.7279, -25.6667, 5.42071, 1.03 ) }
    dend_32 { pt3dadd( 15.0978, -26.553, 5.12902, 1.03 ) }
    dend_32 { pt3dadd( 16.7358, -27.5435, 4.79106, 1.03 ) }
    dend_32 { pt3dadd( 18.6756, -28.6592, 4.41529, 1.03 ) }
    dend_32 { pt3dadd( 20.2524, -29.5388, 4.12258, 1.03 ) }
    dend_32 { pt3dadd( 20.3144, -29.5698, 4.11055, 1.03 ) }
    dend_32 { pt3dadd( 21.5305, -30.0767, 3.89127, 0.88 ) }
    dend_32 { pt3dadd( 21.5965, -30.0992, 3.88052, 0.88 ) }
    dend_32 { pt3dadd( 22.9338, -30.5138, 3.70292, 0.88 ) }
    dend_32 { pt3dadd( 23.0332, -30.5499, 3.69591, 0.88 ) }
    dend_32 { pt3dadd( 24.6684, -31.2258, 3.56955, 0.88 ) }
    dend_32 { pt3dadd( 24.877, -31.3154, 3.55437, 0.88 ) }
    dend_32 { pt3dadd( 26.4414, -31.9853, 3.45645, 0.88 ) }
    dend_32 { pt3dadd( 26.6362, -32.0637, 3.44651, 0.88 ) }
    dend_32 { pt3dadd( 28.0686, -32.5605, 3.39586, 0.88 ) }
    dend_32 { pt3dadd( 28.1352, -32.5816, 3.39472, 0.88 ) }
    dend_32 { pt3dadd( 29.2427, -32.9144, 3.51082, 0.88 ) }
    dend_32 { pt3dadd( 30.313, -33.2369, 3.64234, 0.88 ) }
    dend_32 { pt3dadd( 30.3787, -33.2581, 3.65297, 0.88 ) }
    dend_32 { pt3dadd( 31.346, -33.5532, 3.83748, 0.88 ) }
    dend_32 { pt3dadd( 31.5056, -33.6005, 3.87968, 0.88 ) }
    dend_32 { pt3dadd( 33.5238, -34.1769, 4.52049, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 29/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -36.9354, -9.16092, -4.7909, 0.59 ) }
    dend_30 { pt3dadd( -39.229, -8.79312, -5.33717, 0.59 ) }
    dend_30 { pt3dadd( -40.1499, -8.70477, -5.62874, 0.59 ) }
    dend_30 { pt3dadd( -40.916, -8.68528, -5.89096, 0.66 ) }
    dend_30 { pt3dadd( -42.3456, -8.76032, -6.38175, 0.66 ) }
    dend_30 { pt3dadd( -43.5834, -8.90742, -6.8022, 0.66 ) }
    dend_30 { pt3dadd( -44.4825, -9.07582, -7.09265, 0.59 ) }
    dend_30 { pt3dadd( -45.9774, -9.47132, -7.42486, 0.52 ) }
    dend_30 { pt3dadd( -46.6947, -9.72022, -7.58482, 0.37 ) }
    dend_30 { pt3dadd( -47.5607, -10.0758, -7.70973, 0.37 ) }
    dend_30 { pt3dadd( -48.048, -10.2827, -7.73841, 0.96 ) }
    dend_30 { pt3dadd( -49.0592, -10.6649, -7.72553, 0.88 ) }
    dend_30 { pt3dadd( -50.0529, -10.9573, -7.70853, 0.59 ) }
    dend_30 { pt3dadd( -50.926, -11.1387, -7.668, 0.59 ) }
    dend_30 { pt3dadd( -52.4576, -11.3855, -7.67728, 0.37 ) }
    dend_30 { pt3dadd( -53.5952, -11.5451, -7.74128, 0.37 ) }
    dend_30 { pt3dadd( -53.9576, -11.6095, -7.77567, 0.37 ) }
    dend_30 { pt3dadd( -55.6774, -12.0303, -7.99156, 0.59 ) }
    dend_30 { pt3dadd( -55.7345, -12.0463, -7.99966, 0.59 ) }
    dend_30 { pt3dadd( -57.3102, -12.4831, -8.23397, 0.74 ) }
    dend_30 { pt3dadd( -58.5288, -12.7984, -8.42342, 0.74 ) }
    dend_30 { pt3dadd( -59.8657, -13.1226, -8.57573, 0.74 ) }
    dend_30 { pt3dadd( -61.2538, -13.4126, -8.66179, 0.59 ) }
    dend_30 { pt3dadd( -62.4991, -13.6229, -8.66739, 0.59 ) }
    dend_30 { pt3dadd( -63.6412, -13.797, -8.67438, 0.59 ) }
    dend_30 { pt3dadd( -64.2143, -13.8612, -8.67678, 0.59 ) }
    dend_30 { pt3dadd( -64.2847, -13.8677, -8.67678, 0.59 ) }
    dend_30 { pt3dadd( -64.6872, -13.9067, -8.6874, 0.59 ) }
    dend_30 { pt3dadd( -64.7559, -13.9194, -8.69162, 0.59 ) }
    dend_30 { pt3dadd( -65.7106, -14.1975, -8.76362, 0.59 ) }
    dend_30 { pt3dadd( -66.0313, -14.2952, -8.75458, 0.59 ) }
    dend_30 { pt3dadd( -66.3427, -14.3915, -8.7298, 0.59 ) }
    dend_30 { pt3dadd( -67.1877, -14.6224, -8.64028, 0.59 ) }
    dend_30 { pt3dadd( -68.7042, -14.9446, -8.45946, 0.59 ) }
    dend_30 { pt3dadd( -70.2155, -15.2133, -8.27335, 0.59 ) }
    dend_30 { pt3dadd( -71.809, -15.47, -8.07264, 0.59 ) }
    dend_30 { pt3dadd( -72.5775, -15.592, -7.97364, 0.59 ) }
    dend_30 { pt3dadd( -73.4613, -15.7301, -7.85773, 0.59 ) }
    dend_30 { pt3dadd( -74.6918, -15.9029, -7.6915, 0.81 ) }
    dend_30 { pt3dadd( -76.0268, -16.0656, -7.54299, 0.74 ) }
    dend_30 { pt3dadd( -77.0173, -16.1494, -7.47621, 0.59 ) }
    dend_30 { pt3dadd( -77.087, -16.1527, -7.48055, 0.59 ) }
    dend_30 { pt3dadd( -77.8246, -16.1805, -7.56799, 0.59 ) }
    dend_30 { pt3dadd( -78.544, -16.2412, -7.69077, 0.59 ) }
    dend_30 { pt3dadd( -79.3495, -16.3296, -7.85176, 0.59 ) }
    dend_30 { pt3dadd( -79.4869, -16.3384, -7.87894, 0.59 ) }
    dend_30 { pt3dadd( -81.234, -16.3995, -8.16314, 0.66 ) }
    dend_30 { pt3dadd( -82.158, -16.4428, -8.27617, 0.66 ) }
    dend_30 { pt3dadd( -83.0753, -16.5155, -8.35341, 0.66 ) }
    dend_30 { pt3dadd( -84.7441, -16.7309, -8.50347, 0.52 ) }
    dend_30 { pt3dadd( -86.2105, -16.9856, -8.62968, 0.52 ) }
    dend_30 { pt3dadd( -87.2773, -17.2132, -8.70644, 0.74 ) }
    dend_30 { pt3dadd( -88.3152, -17.4635, -8.7497, 0.59 ) }
    dend_30 { pt3dadd( -89.9596, -17.8426, -8.84549, 0.59 ) }
    dend_30 { pt3dadd( -91.1731, -18.104, -8.93442, 0.52 ) }
    dend_30 { pt3dadd( -91.7235, -18.2241, -8.98283, 0.44 ) }
    dend_30 { pt3dadd( -92.3776, -18.3619, -9.04477, 0.44 ) }
    dend_30 { pt3dadd( -93.4809, -18.5576, -9.15076, 0.44 ) }
    dend_30 { pt3dadd( -94.7542, -18.7262, -9.24051, 0.44 ) }
    dend_30 { pt3dadd( -96.0497, -18.8484, -9.32362, 0.74 ) }
    dend_30 { pt3dadd( -97.0776, -18.9071, -9.35024, 0.59 ) }
    dend_30 { pt3dadd( -97.9767, -18.9374, -9.37014, 0.44 ) }
    dend_30 { pt3dadd( -98.6621, -18.9619, -9.3832, 0.44 ) }
    dend_30 { pt3dadd( -100.315, -19.0927, -9.41036, 0.52 ) }
    dend_30 { pt3dadd( -101.477, -19.236, -9.42459, 0.59 ) }
    dend_30 { pt3dadd( -102.384, -19.3582, -9.43115, 0.44 ) }
    dend_30 { pt3dadd( -103.29, -19.4519, -9.4177, 0.44 ) }
    dend_30 { pt3dadd( -104.253, -19.5034, -9.38673, 0.88 ) }
    dend_30 { pt3dadd( -105.083, -19.5232, -9.37313, 0.74 ) }
    dend_30 { pt3dadd( -106.486, -19.5546, -9.36438, 0.74 ) }
    dend_30 { pt3dadd( -107.584, -19.6272, -9.36671, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( -109.109, -19.8171, -9.42905, 0.59 ) }
    dend_30 { pt3dadd( -110.416, -20.0012, -9.50264, 0.52 ) }
    dend_30 { pt3dadd( -111.623, -20.174, -9.62732, 0.74 ) }
    dend_30 { pt3dadd( -112.429, -20.304, -9.74197, 0.44 ) }
    dend_30 { pt3dadd( -113.91, -20.6123, -10.0406, 0.44 ) }
    dend_30 { pt3dadd( -114.989, -20.9108, -10.3033, 0.44 ) }
    dend_30 { pt3dadd( -115.658, -21.1094, -10.5087, 0.44 ) }
    dend_30 { pt3dadd( -116.888, -21.4515, -10.9055, 0.52 ) }
    dend_30 { pt3dadd( -118.779, -21.8993, -11.5258, 0.52 ) }
    dend_30 { pt3dadd( -119.947, -22.1495, -11.9216, 0.52 ) }
    dend_30 { pt3dadd( -121.009, -22.3748, -12.2822, 0.52 ) }
    dend_30 { pt3dadd( -122.773, -22.8138, -12.8409, 0.52 ) }
    dend_30 { pt3dadd( -123.793, -23.1401, -13.1298, 0.52 ) }
    dend_30 { pt3dadd( -124.971, -23.5701, -13.404, 0.52 ) }
    dend_30 { pt3dadd( -125.934, -23.9547, -13.6086, 0.66 ) }
    dend_30 { pt3dadd( -126.742, -24.2807, -13.7377, 0.44 ) }
    dend_30 { pt3dadd( -127.837, -24.7501, -13.8725, 0.44 ) }
    dend_30 { pt3dadd( -128.912, -25.3042, -13.9334, 0.44 ) }
    dend_30 { pt3dadd( -129.55, -25.6528, -13.9576, 0.44 ) }
    dend_30 { pt3dadd( -129.621, -25.69, -13.9576, 0.44 ) }
    dend_30 { pt3dadd( -130.437, -26.0408, -13.9576, 0.44 ) }
    dend_30 { pt3dadd( -130.546, -26.0717, -13.9576, 0.44 ) }
    dend_30 { pt3dadd( -131.236, -26.1498, -13.9576, 0.44 ) }
    dend_30 { pt3dadd( -131.306, -26.1431, -13.9576, 0.44 ) }
    dend_30 { pt3dadd( -131.888, -26.0235, -13.9576, 0.44 ) }
    dend_30 { pt3dadd( -132.083, -25.962, -13.9576, 0.44 ) }
    dend_30 { pt3dadd( -132.658, -25.7242, -13.9576, 0.44 ) }
    dend_30 { pt3dadd( -132.722, -25.6955, -13.9576, 0.44 ) }
    dend_30 { pt3dadd( -133.542, -25.3542, -14.0294, 0.44 ) }
    dend_30 { pt3dadd( -133.683, -25.2994, -14.0474, 0.44 ) }
    dend_30 { pt3dadd( -134.179, -25.146, -14.1178, 0.44 ) }
    dend_30 { pt3dadd( -134.256, -25.1271, -14.1292, 0.44 ) }
    dend_30 { pt3dadd( -134.945, -25.0629, -14.2239, 0.44 ) }
    dend_30 { pt3dadd( -136.517, -25.1188, -14.4117, 0.44 ) }
    dend_30 { pt3dadd( -137.224, -25.2108, -14.4887, 0.44 ) }
    dend_30 { pt3dadd( -138.318, -25.3899, -14.5942, 0.44 ) }
    dend_30 { pt3dadd( -138.387, -25.4007, -14.5995, 0.44 ) }
    dend_30 { pt3dadd( -139.936, -25.5936, -14.6867, 0.44 ) }
    dend_30 { pt3dadd( -140.951, -25.7185, -14.7161, 0.44 ) }
    dend_30 { pt3dadd( -141.021, -25.7301, -14.7154, 0.44 ) }
    dend_30 { pt3dadd( -141.538, -25.8213, -14.7107, 0.44 ) }
    dend_30 { pt3dadd( -142.907, -26.0216, -14.7758, 0.44 ) }
    dend_30 { pt3dadd( -143.491, -26.0905, -14.8281, 0.44 ) }
    dend_30 { pt3dadd( -144.123, -26.1298, -14.9108, 0.44 ) }
    dend_30 { pt3dadd( -145.087, -26.2189, -15.0562, 0.44 ) }
    dend_30 { pt3dadd( -145.522, -26.2872, -15.0986, 0.44 ) }
    dend_30 { pt3dadd( -146.833, -26.5701, -15.2344, 0.52 ) }
    dend_30 { pt3dadd( -146.934, -26.5975, -15.2508, 0.52 ) }
    dend_30 { pt3dadd( -147.701, -26.8177, -15.3978, 0.52 ) }
    dend_30 { pt3dadd( -148.77, -27.1548, -15.6169, 1.55 ) }
    dend_30 { pt3dadd( -150.289, -27.7114, -15.9356, 0.59 ) }
    dend_30 { pt3dadd( -151.525, -28.2529, -16.1867, 0.44 ) }
    dend_30 { pt3dadd( -153.063, -29.0518, -16.4766, 0.44 ) }
    dend_30 { pt3dadd( -153.192, -29.1227, -16.5032, 0.44 ) }
    dend_30 { pt3dadd( -154.312, -29.809, -16.7732, 0.44 ) }
    dend_30 { pt3dadd( -154.834, -30.1659, -16.9264, 0.96 ) }
    dend_30 { pt3dadd( -155.307, -30.5402, -17.0987, 0.37 ) }
    dend_30 { pt3dadd( -156.757, -31.8855, -17.4401, 0.15 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 58/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -36.9354, -9.16092, -4.7909, 0.52 ) }
    dend_29 { pt3dadd( -38.4819, -9.41872, -3.86496, 0.52 ) }
    dend_29 { pt3dadd( -38.6087, -9.44172, -3.80979, 0.52 ) }
    dend_29 { pt3dadd( -39.585, -9.59862, -3.43503, 0.52 ) }
    dend_29 { pt3dadd( -40.2642, -9.72602, -3.20156, 0.52 ) }
    dend_29 { pt3dadd( -41.9404, -10.0583, -2.64616, 0.52 ) }
    dend_29 { pt3dadd( -42.2193, -10.1129, -2.54631, 0.52 ) }
    dend_29 { pt3dadd( -43.7208, -10.4444, -1.99483, 0.52 ) }
    dend_29 { pt3dadd( -44.9992, -10.7123, -1.46993, 0.52 ) }
    dend_29 { pt3dadd( -46.2382, -10.9164, -0.8819, 0.52 ) }
    dend_29 { pt3dadd( -46.3005, -10.9216, -0.850509, 0.52 ) }
    dend_29 { pt3dadd( -47.2333, -10.9472, -0.383744, 0.81 ) }
    dend_29 { pt3dadd( -48.2164, -10.9897, 0.129089, 0.44 ) }
    dend_29 { pt3dadd( -48.2872, -10.9926, 0.16622, 0.44 ) }
    dend_29 { pt3dadd( -49.2667, -10.9998, 0.600235, 0.52 ) }
    dend_29 { pt3dadd( -49.9764, -10.9488, 0.850336, 0.44 ) }
    dend_29 { pt3dadd( -50.7684, -10.8524, 1.04498, 0.44 ) }
    dend_29 { pt3dadd( -51.9602, -10.6616, 1.21743, 0.44 ) }
    dend_29 { pt3dadd( -52.9194, -10.4338, 1.29087, 0.44 ) }
    dend_29 { pt3dadd( -54.0102, -10.0758, 1.43852, 0.52 ) }
    dend_29 { pt3dadd( -55.2001, -9.57652, 1.6371, 0.66 ) }
    dend_29 { pt3dadd( -55.9237, -9.20482, 1.8235, 0.52 ) }
    dend_29 { pt3dadd( -56.0987, -9.10072, 1.87997, 0.52 ) }
    dend_29 { pt3dadd( -57.2041, -8.38325, 2.28308, 0.52 ) }
    dend_29 { pt3dadd( -59.1125, -7.16428, 3.02995, 0.66 ) }
    dend_29 { pt3dadd( -60.3906, -6.43001, 3.58566, 0.66 ) }
    dend_29 { pt3dadd( -61.4399, -5.91005, 4.10302, 0.44 ) }
    dend_29 { pt3dadd( -61.5322, -5.8704, 4.15421, 0.44 ) }
    dend_29 { pt3dadd( -62.5943, -5.51212, 4.78366, 0.44 ) }
    dend_29 { pt3dadd( -63.0278, -5.41195, 5.03679, 0.44 ) }
    dend_29 { pt3dadd( -64.5484, -5.15091, 5.75651, 0.81 ) }
    dend_29 { pt3dadd( -65.3113, -5.03822, 6.06113, 0.52 ) }
    dend_29 { pt3dadd( -65.9006, -4.95972, 6.23625, 0.44 ) }
    dend_29 { pt3dadd( -67.2526, -4.81364, 6.55165, 0.37 ) }
    dend_29 { pt3dadd( -68.9906, -4.66127, 6.8545, 0.52 ) }
    dend_29 { pt3dadd( -70.2966, -4.49762, 7.0209, 0.44 ) }
    dend_29 { pt3dadd( -71.169, -4.34676, 7.08971, 0.44 ) }
    dend_29 { pt3dadd( -72.3397, -4.10701, 7.16586, 0.44 ) }
    dend_29 { pt3dadd( -73.7056, -3.8084, 7.29992, 0.44 ) }
    dend_29 { pt3dadd( -74.1463, -3.71763, 7.39773, 0.52 ) }
    dend_29 { pt3dadd( -75.6229, -3.54281, 7.93262, 0.52 ) }
    dend_29 { pt3dadd( -76.8036, -3.51183, 8.4374, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_29 { pt3dadd( -76.8673, -3.51456, 8.46648, 0.52 ) }
    dend_29 { pt3dadd( -78.2117, -3.61876, 9.08233, 0.52 ) }
    dend_29 { pt3dadd( -79.9075, -3.74303, 9.95466, 0.52 ) }
    dend_29 { pt3dadd( -81.3891, -3.85492, 10.7096, 0.52 ) }
    dend_29 { pt3dadd( -83.0092, -4.02791, 11.4886, 0.52 ) }
    dend_29 { pt3dadd( -83.6313, -4.09269, 11.7799, 0.52 ) }
    dend_29 { pt3dadd( -84.6523, -4.1589, 12.2183, 0.52 ) }
    dend_29 { pt3dadd( -86.7978, -4.23248, 13.0168, 0.52 ) }
    dend_29 { pt3dadd( -88.1323, -4.22656, 13.483, 0.52 ) }
    dend_29 { pt3dadd( -89.1902, -4.18647, 13.8875, 0.52 ) }
    dend_29 { pt3dadd( -90.5117, -4.10861, 14.4145, 0.52 ) }
    dend_29 { pt3dadd( -91.8191, -4.04637, 14.9032, 0.52 ) }
    dend_29 { pt3dadd( -93.9406, -4.07147, 15.6265, 0.52 ) }
    // Section: dend_23, id: dend_23, parent: dend_3 (entry count 13/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 7.47352, 15.0026, 0.563379, 0.59 ) }
    dend_23 { pt3dadd( 8.87079, 15.0358, 0.087164, 0.59 ) }
    dend_23 { pt3dadd( 9.97764, 15.1548, -0.315772, 0.59 ) }
    dend_23 { pt3dadd( 11.6415, 15.3339, -0.921478, 0.59 ) }
    dend_23 { pt3dadd( 13.2891, 15.5111, -1.52127, 0.66 ) }
    dend_23 { pt3dadd( 14.3631, 15.6267, -1.91225, 0.59 ) }
    dend_23 { pt3dadd( 16.8086, 15.8898, -2.80252, 0.96 ) }
    dend_23 { pt3dadd( 17.9874, 16.0815, -3.28946, 0.96 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 21/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 7.47352, 15.0026, 0.563379, 1.33 ) }
    dend_4 { pt3dadd( 7.57645, 16.3615, 0.454369, 1.33 ) }
    dend_4 { pt3dadd( 8.06298, 18.3481, 0.264286, 1.11 ) }
    dend_4 { pt3dadd( 8.69307, 19.9516, 0.106133, 1.25 ) }
    dend_4 { pt3dadd( 9.37319, 21.4178, -0.0299672, 1.25 ) }
    dend_4 { pt3dadd( 10.0744, 22.8861, -0.154041, 1.18 ) }
    dend_4 { pt3dadd( 10.9605, 24.7509, -0.295304, 1.18 ) }
    dend_4 { pt3dadd( 11.8823, 26.4101, -0.429406, 1.18 ) }
    dend_4 { pt3dadd( 12.874, 27.9355, -0.559227, 1.18 ) }
    dend_4 { pt3dadd( 13.9056, 29.3733, -0.679587, 1.18 ) }
    dend_4 { pt3dadd( 14.864, 30.6841, -0.772009, 1.18 ) }
    dend_4 { pt3dadd( 16.2023, 32.6933, -0.835849, 1.69 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 33/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -32.8799, 62.5626, 29.6413, 0.52 ) }
    dend_2 { pt3dadd( -32.8121, 64.3173, 30.2501, 0.52 ) }
    dend_2 { pt3dadd( -32.7812, 65.6424, 30.6614, 0.52 ) }
    dend_2 { pt3dadd( -32.7968, 66.9419, 31.0047, 0.52 ) }
    dend_2 { pt3dadd( -32.8432, 67.9939, 31.2832, 0.52 ) }
    dend_2 { pt3dadd( -32.8936, 69.2717, 31.6093, 0.52 ) }
    dend_2 { pt3dadd( -32.9282, 70.2614, 31.8513, 0.52 ) }
    dend_2 { pt3dadd( -32.9861, 71.076, 31.997, 0.52 ) }
    dend_2 { pt3dadd( -33.0414, 71.7739, 32.1363, 0.44 ) }
    dend_2 { pt3dadd( -33.0253, 72.7344, 32.3692, 0.15 ) }
    dend_2 { pt3dadd( -32.9571, 73.6768, 32.6013, 0.22 ) }
    dend_2 { pt3dadd( -32.9273, 74.1564, 32.7342, 0.22 ) }
    dend_2 { pt3dadd( -32.7904, 75.7077, 33.1957, 0.22 ) }
    dend_2 { pt3dadd( -32.6161, 77.1218, 33.6411, 0.22 ) }
    dend_2 { pt3dadd( -32.2536, 79.5177, 34.4284, 0.22 ) }
    dend_2 { pt3dadd( -32.1023, 80.4405, 34.7213, 0.22 ) }
    dend_2 { pt3dadd( -31.8996, 81.7119, 35.1612, 0.22 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 50/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -32.8799, 62.5626, 29.6413, 0.37 ) }
    dend_1 { pt3dadd( -34.2885, 63.7006, 30.1951, 0.37 ) }
    dend_1 { pt3dadd( -35.5573, 64.7255, 30.694, 0.37 ) }
    dend_1 { pt3dadd( -36.2935, 65.3204, 30.9834, 0.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 54/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 22.1055, 36.1219, -0.394975, 0.342806 ) }
    axon_1 { pt3dadd( 29.8157, 48.9886, -0.394975, 0.342806 ) }
    axon_1 { pt3dadd( 37.5258, 61.8554, -0.394975, 0.342806 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 57/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 9.82684, -28.1912, 13.3099, 0.44 ) }
    dend_37 { pt3dadd( 10.8295, -29.5507, 12.8649, 0.44 ) }
    dend_37 { pt3dadd( 10.9654, -29.7136, 12.8159, 0.44 ) }
    dend_37 { pt3dadd( 11.826, -30.4925, 12.8294, 0.44 ) }
    dend_37 { pt3dadd( 12.5795, -31.04, 13.0154, 0.44 ) }
    dend_37 { pt3dadd( 12.6355, -31.0779, 13.0343, 0.44 ) }
    dend_37 { pt3dadd( 13.3691, -31.6585, 13.3298, 0.44 ) }
    dend_37 { pt3dadd( 13.4451, -31.7485, 13.4032, 0.44 ) }
    dend_37 { pt3dadd( 14.3234, -33.0619, 14.5938, 0.44 ) }
    dend_37 { pt3dadd( 14.5806, -33.5052, 15.0162, 0.44 ) }
    dend_37 { pt3dadd( 14.6579, -33.6615, 15.1471, 0.44 ) }
    dend_37 { pt3dadd( 14.9983, -34.6229, 15.8332, 0.44 ) }
    dend_37 { pt3dadd( 15.223, -36.0736, 16.8948, 0.44 ) }
    dend_37 { pt3dadd( 15.2255, -36.13, 16.9354, 0.44 ) }
    dend_37 { pt3dadd( 15.1315, -36.9841, 17.4874, 0.44 ) }
    dend_37 { pt3dadd( 14.9907, -37.7876, 18.0329, 0.44 ) }
    dend_37 { pt3dadd( 14.767, -38.5911, 18.6171, 0.44 ) }
    dend_37 { pt3dadd( 14.2644, -40.0151, 19.5153, 0.44 ) }
    dend_37 { pt3dadd( 14.246, -40.0667, 19.5366, 0.44 ) }
    dend_37 { pt3dadd( 13.9913, -40.9469, 19.8406, 0.44 ) }
    dend_37 { pt3dadd( 13.791, -41.6843, 20.0413, 0.44 ) }
    dend_37 { pt3dadd( 13.3268, -43.6605, 20.4649, 0.44 ) }
    dend_37 { pt3dadd( 13.1217, -45.0943, 20.7734, 0.44 ) }
    dend_37 { pt3dadd( 13.0487, -46.8749, 21.1535, 0.52 ) }
    dend_37 { pt3dadd( 13.0702, -48.3549, 21.5151, 0.37 ) }
    dend_37 { pt3dadd( 13.1352, -49.8792, 21.9989, 0.37 ) }
    dend_37 { pt3dadd( 13.1402, -49.943, 22.0232, 0.37 ) }
    dend_37 { pt3dadd( 13.4433, -51.824, 22.8446, 0.37 ) }
    dend_37 { pt3dadd( 13.6019, -52.6703, 23.3149, 0.37 ) }
    dend_37 { pt3dadd( 13.6164, -52.7281, 23.3505, 0.37 ) }
    dend_37 { pt3dadd( 14.0713, -54.2155, 24.3087, 0.37 ) }
    dend_37 { pt3dadd( 14.3251, -55.024, 24.9095, 0.37 ) }
    dend_37 { pt3dadd( 14.4815, -55.6379, 25.3716, 0.37 ) }
    dend_37 { pt3dadd( 14.4904, -55.6945, 25.411, 0.37 ) }
    dend_37 { pt3dadd( 14.5101, -56.679, 26.097, 0.37 ) }
    dend_37 { pt3dadd( 14.2184, -58.4121, 27.3586, 0.52 ) }
    dend_37 { pt3dadd( 13.7012, -59.6782, 28.3352, 0.44 ) }
    dend_37 { pt3dadd( 13.6282, -59.7784, 28.4172, 0.44 ) }
    dend_37 { pt3dadd( 12.9126, -60.5584, 29.0471, 0.66 ) }
    dend_37 { pt3dadd( 12.1273, -61.3274, 29.6258, 0.44 ) }
    dend_37 { pt3dadd( 10.7649, -62.4784, 30.3918, 0.44 ) }
    dend_37 { pt3dadd( 9.85256, -63.1802, 30.7395, 0.44 ) }
    dend_37 { pt3dadd( 8.99761, -63.8502, 30.983, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_37 { pt3dadd( 8.50718, -64.2514, 31.1106, 0.22 ) }
    dend_37 { pt3dadd( 8.00435, -64.6589, 31.219, 0.29 ) }
    dend_37 { pt3dadd( 7.0643, -65.5099, 31.3586, 0.29 ) }
    dend_37 { pt3dadd( 6.30687, -66.238, 31.3479, 0.15 ) }
    dend_37 { pt3dadd( 5.82591, -66.6285, 31.3001, 0.07 ) }
    dend_37 { pt3dadd( 5.76911, -66.6678, 31.2935, 0.07 ) }
    dend_37 { pt3dadd( 4.93675, -67.1443, 31.1952, 0.07 ) }
    dend_37 { pt3dadd( 4.85383, -67.1823, 31.1849, 0.15 ) }
    dend_37 { pt3dadd( 4.25187, -67.3875, 31.0998, 0.15 ) }
    dend_37 { pt3dadd( 3.11953, -67.6282, 30.9448, 0.15 ) }
    dend_37 { pt3dadd( 2.66892, -67.693, 30.8773, 0.15 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 11/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 9.82684, -28.1912, 13.3099, 0.66 ) }
    dend_36 { pt3dadd( 9.99541, -30.2262, 12.7804, 0.66 ) }
    dend_36 { pt3dadd( 10.0955, -31.4833, 12.5569, 0.66 ) }
    dend_36 { pt3dadd( 10.2283, -33.2554, 12.303, 1.03 ) }
    dend_36 { pt3dadd( 10.2225, -34.9085, 12.1236, 0.44 ) }
    dend_36 { pt3dadd( 10.1509, -35.7909, 12.0502, 0.44 ) }
    dend_36 { pt3dadd( 10.0118, -36.898, 11.9766, 0.44 ) }
    dend_36 { pt3dadd( 9.71908, -38.7705, 11.9679, 0.44 ) }
    dend_36 { pt3dadd( 9.7053, -38.8381, 11.9689, 0.44 ) }
    dend_36 { pt3dadd( 9.07337, -41.1852, 12.0555, 0.44 ) }
    dend_36 { pt3dadd( 8.62085, -42.5893, 12.1345, 0.44 ) }
    dend_36 { pt3dadd( 8.3489, -43.4082, 12.1371, 0.44 ) }
    dend_36 { pt3dadd( 8.08047, -44.3001, 12.1165, 0.88 ) }
    dend_36 { pt3dadd( 7.73806, -45.9796, 12.1804, 0.59 ) }
    dend_36 { pt3dadd( 7.52643, -47.4248, 12.3043, 0.59 ) }
    dend_36 { pt3dadd( 7.41094, -48.5895, 12.493, 0.66 ) }
    dend_36 { pt3dadd( 7.22597, -50.7688, 12.9389, 0.52 ) }
    dend_36 { pt3dadd( 7.04983, -52.6515, 13.3671, 0.52 ) }
    dend_36 { pt3dadd( 6.51898, -56.5641, 14.3248, 1.03 ) }
    dend_36 { pt3dadd( 5.93746, -60.1374, 15.2448, 0.52 ) }
    dend_36 { pt3dadd( 5.44561, -62.9202, 15.9961, 0.81 ) }
    dend_36 { pt3dadd( 5.38104, -63.2661, 16.0842, 0.81 ) }
    dend_36 { pt3dadd( 4.94017, -65.4698, 16.6269, 0.66 ) }
    dend_36 { pt3dadd( 4.52173, -67.6367, 16.9681, 0.37 ) }
    dend_36 { pt3dadd( 4.29349, -68.9724, 17.0297, 0.37 ) }
    dend_36 { pt3dadd( 4.28336, -69.0497, 17.0319, 0.37 ) }
    dend_36 { pt3dadd( 4.01106, -71.4608, 17.0856, 0.59 ) }
    dend_36 { pt3dadd( 3.86689, -73.2119, 17.2337, 0.59 ) }
    dend_36 { pt3dadd( 3.71706, -76.9225, 17.7368, 0.59 ) }
    dend_36 { pt3dadd( 3.73314, -79.1739, 18.1314, 0.59 ) }
    dend_36 { pt3dadd( 3.74835, -81.0624, 18.5395, 0.59 ) }
    dend_36 { pt3dadd( 3.78538, -82.5564, 18.9812, 0.59 ) }
    dend_36 { pt3dadd( 3.81753, -84.2236, 19.6878, 0.59 ) }
    dend_36 { pt3dadd( 3.81607, -84.3618, 19.758, 0.59 ) }
    dend_36 { pt3dadd( 3.79219, -85.394, 20.3882, 0.59 ) }
    dend_36 { pt3dadd( 3.78843, -85.4528, 20.4235, 0.59 ) }
    dend_36 { pt3dadd( 3.65134, -87.6377, 21.7307, 0.59 ) }
    dend_36 { pt3dadd( 3.51854, -89.887, 22.9896, 0.59 ) }
    dend_36 { pt3dadd( 3.34174, -92.1117, 24.0906, 0.59 ) }
    dend_36 { pt3dadd( 3.14164, -94.2451, 25.0897, 0.59 ) }
    dend_36 { pt3dadd( 2.95857, -95.6348, 25.7038, 0.59 ) }
    dend_36 { pt3dadd( 2.46141, -98.745, 26.9607, 0.59 ) }
    dend_36 { pt3dadd( 2.12347, -100.649, 27.6046, 0.59 ) }
    dend_36 { pt3dadd( 1.94307, -101.921, 27.9928, 0.59 ) }
    dend_36 { pt3dadd( 1.93554, -101.988, 28.0094, 0.59 ) }
    dend_36 { pt3dadd( 1.77749, -103.078, 28.2191, 0.44 ) }
    dend_36 { pt3dadd( 1.49837, -104.658, 28.4138, 0.44 ) }
    dend_36 { pt3dadd( 1.20099, -105.75, 28.4389, 0.44 ) }
    dend_36 { pt3dadd( 1.1012, -106.091, 28.4544, 0.44 ) }
    dend_36 { pt3dadd( 0.621364, -108.129, 28.5863, 0.52 ) }
    dend_36 { pt3dadd( 0.608552, -108.197, 28.5895, 0.52 ) }
    dend_36 { pt3dadd( 0.427914, -109.979, 28.5579, 0.37 ) }
    dend_36 { pt3dadd( 0.365996, -110.647, 28.5133, 0.37 ) }
    dend_36 { pt3dadd( 0.358013, -110.715, 28.508, 0.37 ) }
    dend_36 { pt3dadd( 0.272704, -111.612, 28.4284, 0.37 ) }
    dend_36 { pt3dadd( 0.272416, -111.69, 28.4192, 0.37 ) }
    dend_36 { pt3dadd( 0.359116, -113.884, 28.1021, 0.37 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 68/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 33.5238, -34.1769, 4.52049, 0.74 ) }
    dend_34 { pt3dadd( 35.1394, -34.5366, 4.29895, 0.74 ) }
    dend_34 { pt3dadd( 36.5542, -34.9004, 4.30044, 0.74 ) }
    dend_34 { pt3dadd( 37.9276, -35.2844, 4.38633, 0.74 ) }
    dend_34 { pt3dadd( 39.5917, -35.7904, 4.53594, 0.74 ) }
    dend_34 { pt3dadd( 40.562, -36.1329, 4.5675, 0.74 ) }
    dend_34 { pt3dadd( 41.1457, -36.355, 4.5686, 1.11 ) }
    dend_34 { pt3dadd( 43.0426, -37.1988, 4.5596, 0.66 ) }
    dend_34 { pt3dadd( 44.2712, -37.8172, 4.58715, 0.66 ) }
    dend_34 { pt3dadd( 45.6627, -38.5911, 4.70713, 0.96 ) }
    dend_34 { pt3dadd( 47.8096, -39.8844, 4.95297, 0.52 ) }
    dend_34 { pt3dadd( 48.8578, -40.5327, 5.06276, 0.52 ) }
    dend_34 { pt3dadd( 50.8447, -41.84, 5.25812, 0.52 ) }
    dend_34 { pt3dadd( 51.4361, -42.2984, 5.2955, 0.52 ) }
    dend_34 { pt3dadd( 52.5888, -43.3709, 5.41165, 0.52 ) }
    dend_34 { pt3dadd( 53.6734, -44.5553, 5.56987, 0.52 ) }
    dend_34 { pt3dadd( 53.7708, -44.6792, 5.5914, 0.52 ) }
    dend_34 { pt3dadd( 54.504, -45.8474, 5.7306, 0.52 ) }
    dend_34 { pt3dadd( 55.2769, -47.6684, 5.85121, 0.52 ) }
    dend_34 { pt3dadd( 55.4812, -48.4781, 5.93218, 0.52 ) }
    dend_34 { pt3dadd( 55.5019, -48.6234, 5.94847, 0.52 ) }
    dend_34 { pt3dadd( 55.511, -48.7, 5.96043, 0.52 ) }
    dend_34 { pt3dadd( 55.7813, -50.404, 6.31765, 0.52 ) }
    dend_34 { pt3dadd( 56.1335, -52.1097, 6.78071, 0.66 ) }
    dend_34 { pt3dadd( 56.6135, -53.8876, 7.33455, 0.37 ) }
    dend_34 { pt3dadd( 56.9188, -54.9146, 7.62859, 0.37 ) }
    dend_34 { pt3dadd( 57.2511, -56.0044, 7.86921, 0.37 ) }
    dend_34 { pt3dadd( 57.5798, -56.9742, 8.02451, 0.66 ) }
    dend_34 { pt3dadd( 57.7655, -57.4603, 8.07186, 0.66 ) }
    dend_34 { pt3dadd( 58.3779, -58.8003, 8.12306, 0.52 ) }
    dend_34 { pt3dadd( 59.0582, -60.0761, 8.10781, 0.52 ) }
    dend_34 { pt3dadd( 60.0281, -61.7287, 8.09558, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_34 { pt3dadd( 60.6576, -62.7386, 8.09001, 0.66 ) }
    dend_34 { pt3dadd( 60.6966, -62.7952, 8.08945, 0.66 ) }
    dend_34 { pt3dadd( 61.3008, -63.6248, 8.09543, 0.74 ) }
    dend_34 { pt3dadd( 62.2886, -64.8635, 8.13163, 0.74 ) }
    dend_34 { pt3dadd( 63.2758, -66.0607, 8.19853, 0.88 ) }
    dend_34 { pt3dadd( 64.2138, -67.2018, 8.30038, 0.74 ) }
    dend_34 { pt3dadd( 64.3417, -67.3769, 8.31516, 0.74 ) }
    dend_34 { pt3dadd( 64.9955, -68.3899, 8.39206, 0.74 ) }
    dend_34 { pt3dadd( 65.0995, -68.5796, 8.40371, 0.74 ) }
    dend_34 { pt3dadd( 65.5225, -69.4303, 8.43403, 0.44 ) }
    dend_34 { pt3dadd( 65.5929, -69.561, 8.43403, 0.44 ) }
    dend_34 { pt3dadd( 66.1027, -70.3159, 8.36567, 0.44 ) }
    dend_34 { pt3dadd( 66.1525, -70.377, 8.35572, 0.44 ) }
    dend_34 { pt3dadd( 66.9971, -71.3314, 8.15012, 0.52 ) }
    dend_34 { pt3dadd( 67.7487, -72.3325, 7.89315, 0.52 ) }
    dend_34 { pt3dadd( 67.8273, -72.4659, 7.86003, 0.52 ) }
    dend_34 { pt3dadd( 68.3322, -73.5854, 7.56278, 0.52 ) }
    dend_34 { pt3dadd( 68.3587, -73.6573, 7.54383, 0.52 ) }
    dend_34 { pt3dadd( 68.9119, -75.187, 7.15854, 0.52 ) }
    dend_34 { pt3dadd( 69.6964, -77.5118, 6.59117, 0.52 ) }
    dend_34 { pt3dadd( 70.2549, -79.2012, 6.23724, 0.52 ) }
    dend_34 { pt3dadd( 70.6777, -80.3577, 6.03437, 0.52 ) }
    dend_34 { pt3dadd( 71.1758, -81.5249, 5.87022, 0.52 ) }
    dend_34 { pt3dadd( 71.8515, -82.925, 5.68509, 0.52 ) }
    dend_34 { pt3dadd( 71.8848, -82.9847, 5.67812, 0.52 ) }
    dend_34 { pt3dadd( 73.6339, -85.9209, 5.44031, 0.52 ) }
    dend_34 { pt3dadd( 74.2584, -86.9676, 5.39551, 0.52 ) }
    dend_34 { pt3dadd( 74.79, -88.006, 5.40557, 0.52 ) }
    dend_34 { pt3dadd( 74.8435, -88.1429, 5.40952, 0.52 ) }
    dend_34 { pt3dadd( 75.1836, -89.1866, 5.44231, 0.59 ) }
    dend_34 { pt3dadd( 75.605, -90.4256, 5.50571, 0.59 ) }
    dend_34 { pt3dadd( 75.9109, -91.3524, 5.57536, 0.59 ) }
    dend_34 { pt3dadd( 76.2779, -92.5966, 5.6582, 0.59 ) }
    dend_34 { pt3dadd( 76.2964, -92.6623, 5.66184, 0.59 ) }
    dend_34 { pt3dadd( 77.3138, -95.8279, 5.79636, 0.66 ) }
    dend_34 { pt3dadd( 77.7125, -97.0138, 5.89277, 0.74 ) }
    dend_34 { pt3dadd( 77.7851, -97.2162, 5.91367, 0.74 ) }
    dend_34 { pt3dadd( 78.3552, -98.8942, 6.10871, 0.81 ) }
    dend_34 { pt3dadd( 78.7261, -100.271, 6.30635, 0.66 ) }
    dend_34 { pt3dadd( 79.0768, -102.237, 6.6372, 0.59 ) }
    dend_34 { pt3dadd( 79.0697, -104.077, 7.07566, 0.59 ) }
    dend_34 { pt3dadd( 79.063, -104.153, 7.09519, 0.59 ) }
    dend_34 { pt3dadd( 78.9902, -104.777, 7.27131, 0.59 ) }
    dend_34 { pt3dadd( 78.8086, -105.88, 7.62362, 0.59 ) }
    dend_34 { pt3dadd( 78.7957, -105.954, 7.64568, 0.59 ) }
    dend_34 { pt3dadd( 78.5763, -107.503, 8.001, 0.59 ) }
    dend_34 { pt3dadd( 78.4208, -109.401, 8.30797, 0.66 ) }
    dend_34 { pt3dadd( 78.3821, -110.593, 8.43534, 0.96 ) }
    dend_34 { pt3dadd( 78.3803, -110.661, 8.43755, 0.96 ) }
    dend_34 { pt3dadd( 78.3356, -112.597, 8.39093, 0.66 ) }
    dend_34 { pt3dadd( 78.265, -114.905, 8.235, 0.59 ) }
    dend_34 { pt3dadd( 78.2534, -115.333, 8.18571, 0.59 ) }
    dend_34 { pt3dadd( 78.1686, -117.078, 7.9466, 0.44 ) }
    dend_34 { pt3dadd( 78.0913, -119.329, 7.60532, 0.44 ) }
    dend_34 { pt3dadd( 78.096, -121.084, 7.33701, 0.44 ) }
    dend_34 { pt3dadd( 78.1027, -121.297, 7.30235, 0.44 ) }
    dend_34 { pt3dadd( 78.2047, -122.521, 7.11306, 0.44 ) }
    dend_34 { pt3dadd( 78.2155, -122.598, 7.10406, 0.44 ) }
    dend_34 { pt3dadd( 78.5012, -123.936, 7.05205, 0.44 ) }
    dend_34 { pt3dadd( 78.7707, -124.791, 7.06171, 0.66 ) }
    dend_34 { pt3dadd( 78.814, -124.932, 7.06829, 0.66 ) }
    dend_34 { pt3dadd( 79.1496, -126.104, 7.15268, 0.66 ) }
    dend_34 { pt3dadd( 79.1815, -126.237, 7.16411, 0.66 ) }
    dend_34 { pt3dadd( 79.3909, -127.527, 7.27925, 0.66 ) }
    dend_34 { pt3dadd( 79.4068, -127.741, 7.28777, 0.66 ) }
    dend_34 { pt3dadd( 79.4833, -128.756, 7.28822, 0.44 ) }
    dend_34 { pt3dadd( 79.5852, -130.026, 7.25345, 0.44 ) }
    dend_34 { pt3dadd( 79.6617, -131.598, 7.17467, 0.52 ) }
    dend_34 { pt3dadd( 79.6831, -132.468, 7.11636, 0.44 ) }
    dend_34 { pt3dadd( 79.6996, -133.902, 6.99344, 0.44 ) }
    dend_34 { pt3dadd( 79.6907, -135.025, 6.8778, 0.44 ) }
    dend_34 { pt3dadd( 79.7155, -136.191, 6.74387, 0.44 ) }
    dend_34 { pt3dadd( 79.7201, -137.719, 6.56675, 0.44 ) }
    dend_34 { pt3dadd( 79.7223, -137.787, 6.5595, 0.44 ) }
    dend_34 { pt3dadd( 79.7911, -138.527, 6.50674, 0.52 ) }
    dend_34 { pt3dadd( 79.8005, -138.605, 6.50789, 0.52 ) }
    dend_34 { pt3dadd( 80.0397, -140.776, 6.55278, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 77/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 33.5238, -34.1769, 4.52049, 0.44 ) }
    dend_33 { pt3dadd( 34.4489, -36.0009, 4.92715, 0.44 ) }
    dend_33 { pt3dadd( 34.5781, -36.2217, 4.95731, 0.44 ) }
    dend_33 { pt3dadd( 35.151, -37.0662, 5.03249, 0.44 ) }
    dend_33 { pt3dadd( 35.7557, -37.9117, 5.34223, 0.96 ) }
    dend_33 { pt3dadd( 36.485, -38.842, 5.78561, 0.59 ) }
    dend_33 { pt3dadd( 36.9725, -39.443, 6.10032, 0.59 ) }
    dend_33 { pt3dadd( 37.568, -40.083, 6.43056, 0.66 ) }
    dend_33 { pt3dadd( 38.2322, -40.7174, 6.79822, 0.66 ) }
    dend_33 { pt3dadd( 40.7845, -42.8218, 8.2321, 0.66 ) }
    dend_33 { pt3dadd( 41.7004, -43.4242, 8.75245, 0.66 ) }
    dend_33 { pt3dadd( 41.8173, -43.4878, 8.82075, 0.66 ) }
    dend_33 { pt3dadd( 42.7853, -43.9069, 9.46114, 0.66 ) }
    dend_33 { pt3dadd( 43.4038, -44.0763, 9.93021, 0.59 ) }
    dend_33 { pt3dadd( 43.9238, -44.1171, 10.3212, 0.74 ) }
    dend_33 { pt3dadd( 44.9945, -43.9862, 11.0047, 0.88 ) }
    dend_33 { pt3dadd( 45.131, -43.9587, 11.1034, 0.88 ) }
    dend_33 { pt3dadd( 46.8389, -43.6388, 12.4807, 0.88 ) }
    dend_33 { pt3dadd( 48.4354, -43.3371, 13.909, 0.81 ) }
    dend_33 { pt3dadd( 49.3811, -43.1797, 14.7719, 0.66 ) }
    dend_33 { pt3dadd( 50.5773, -43.0074, 15.7869, 0.66 ) }
    dend_33 { pt3dadd( 51.9391, -42.8535, 16.8431, 0.66 ) }
    dend_33 { pt3dadd( 53.2353, -42.7607, 17.6774, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_33 { pt3dadd( 53.2985, -42.7591, 17.7074, 0.66 ) }
    dend_33 { pt3dadd( 54.279, -42.8592, 18.0595, 0.59 ) }
    dend_33 { pt3dadd( 55.5215, -43.1376, 18.457, 0.59 ) }
    dend_33 { pt3dadd( 55.5861, -43.1545, 18.4778, 0.59 ) }
    dend_33 { pt3dadd( 56.9996, -43.3712, 18.8183, 0.59 ) }
    dend_33 { pt3dadd( 57.0663, -43.3727, 18.8393, 0.59 ) }
    dend_33 { pt3dadd( 58.3255, -43.3714, 19.3808, 0.59 ) }
    dend_33 { pt3dadd( 58.3873, -43.3742, 19.415, 0.59 ) }
    dend_33 { pt3dadd( 59.9337, -43.5217, 20.4273, 0.59 ) }
    dend_33 { pt3dadd( 61.085, -43.6581, 21.1196, 0.59 ) }
    dend_33 { pt3dadd( 61.9672, -43.7472, 21.6601, 0.52 ) }
    dend_33 { pt3dadd( 62.6829, -43.7758, 22.1336, 0.44 ) }
    dend_33 { pt3dadd( 63.5975, -43.8135, 22.7952, 0.44 ) }
    dend_33 { pt3dadd( 63.662, -43.8249, 22.8411, 0.44 ) }
    dend_33 { pt3dadd( 64.6479, -44.1329, 23.4995, 0.44 ) }
    dend_33 { pt3dadd( 65.9559, -44.5619, 24.4413, 0.52 ) }
    dend_33 { pt3dadd( 67.3538, -44.938, 25.4197, 0.52 ) }
    dend_33 { pt3dadd( 68.1966, -45.1316, 26.0719, 0.37 ) }
    dend_33 { pt3dadd( 69.1154, -45.3088, 26.8127, 0.37 ) }
    dend_33 { pt3dadd( 70.303, -45.5061, 27.786, 0.74 ) }
    dend_33 { pt3dadd( 71.795, -45.6976, 28.973, 0.44 ) }
    dend_33 { pt3dadd( 72.5014, -45.7599, 29.4614, 0.44 ) }
    dend_33 { pt3dadd( 73.8206, -45.8197, 30.2723, 0.44 ) }
    dend_33 { pt3dadd( 74.0732, -45.8048, 30.4221, 0.44 ) }
    dend_33 { pt3dadd( 74.7597, -45.6808, 30.8465, 0.44 ) }
    dend_33 { pt3dadd( 75.9303, -45.3458, 31.5654, 0.52 ) }
    dend_33 { pt3dadd( 75.9898, -45.3247, 31.5953, 0.52 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 27/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 17.9874, 16.0815, -3.28946, 0.37 ) }
    dend_25 { pt3dadd( 19.1778, 16.3203, -3.72332, 0.37 ) }
    dend_25 { pt3dadd( 20.0567, 16.5243, -4.04805, 0.37 ) }
    dend_25 { pt3dadd( 21.1515, 16.7823, -4.40695, 0.37 ) }
    dend_25 { pt3dadd( 21.904, 16.9552, -4.66153, 0.37 ) }
    dend_25 { pt3dadd( 23.7428, 17.3622, -5.25961, 0.37 ) }
    dend_25 { pt3dadd( 24.7075, 17.5892, -5.58307, 0.66 ) }
    dend_25 { pt3dadd( 25.6387, 17.82, -5.90736, 0.66 ) }
    dend_25 { pt3dadd( 27.0397, 18.1859, -6.40822, 0.66 ) }
    dend_25 { pt3dadd( 28.4431, 18.5668, -6.90525, 0.66 ) }
    dend_25 { pt3dadd( 29.5641, 18.866, -7.3772, 0.66 ) }
    dend_25 { pt3dadd( 30.8603, 19.1916, -7.96836, 0.66 ) }
    dend_25 { pt3dadd( 32.5674, 19.6423, -8.79626, 0.52 ) }
    dend_25 { pt3dadd( 33.9018, 20.0379, -9.43848, 0.52 ) }
    dend_25 { pt3dadd( 34.428, 20.2215, -9.71604, 0.52 ) }
    dend_25 { pt3dadd( 36.4164, 21.0102, -10.8746, 0.44 ) }
    dend_25 { pt3dadd( 37.1166, 21.316, -11.3082, 0.44 ) }
    dend_25 { pt3dadd( 38.315, 21.876, -12.0354, 0.44 ) }
    dend_25 { pt3dadd( 38.9679, 22.2203, -12.41, 0.44 ) }
    dend_25 { pt3dadd( 40.0298, 22.8224, -12.9768, 0.44 ) }
    dend_25 { pt3dadd( 41.8403, 23.8208, -13.7792, 0.44 ) }
    dend_25 { pt3dadd( 42.907, 24.3905, -14.1139, 0.44 ) }
    dend_25 { pt3dadd( 44.0776, 25.0039, -14.4149, 0.44 ) }
    dend_25 { pt3dadd( 45.4263, 25.6553, -14.6676, 0.44 ) }
    dend_25 { pt3dadd( 46.376, 26.0875, -14.8036, 0.44 ) }
    dend_25 { pt3dadd( 47.571, 26.6505, -14.9037, 0.44 ) }
    dend_25 { pt3dadd( 49.0392, 27.3886, -14.9713, 0.44 ) }
    dend_25 { pt3dadd( 50.2104, 27.9796, -15.0304, 0.44 ) }
    dend_25 { pt3dadd( 51.5278, 28.6454, -15.1029, 0.44 ) }
    dend_25 { pt3dadd( 52.7624, 29.2708, -15.1905, 0.44 ) }
    dend_25 { pt3dadd( 54.7557, 30.3452, -15.3772, 0.37 ) }
    dend_25 { pt3dadd( 55.6078, 30.8668, -15.4913, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 59/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 17.9874, 16.0815, -3.28946, 0.37 ) }
    dend_24 { pt3dadd( 18.8072, 15.6483, -3.37395, 0.37 ) }
    dend_24 { pt3dadd( 19.6824, 15.2923, -3.46345, 0.29 ) }
    dend_24 { pt3dadd( 20.9534, 14.8836, -3.55135, 0.29 ) }
    dend_24 { pt3dadd( 22.2554, 14.5387, -3.61242, 0.29 ) }
    dend_24 { pt3dadd( 23.0838, 14.3183, -3.64045, 0.37 ) }
    dend_24 { pt3dadd( 24.3247, 14.0011, -3.66915, 0.37 ) }
    dend_24 { pt3dadd( 25.1183, 13.8331, -3.67953, 0.37 ) }
    dend_24 { pt3dadd( 25.9916, 13.699, -3.6923, 0.37 ) }
    dend_24 { pt3dadd( 26.9786, 13.626, -3.70511, 0.22 ) }
    dend_24 { pt3dadd( 27.8844, 13.5805, -3.71164, 0.22 ) }
    dend_24 { pt3dadd( 29.3776, 13.4576, -3.70876, 0.37 ) }
    dend_24 { pt3dadd( 29.6784, 13.4171, -3.71288, 0.37 ) }
    dend_24 { pt3dadd( 30.4615, 13.2831, -3.73632, 0.37 ) }
    dend_24 { pt3dadd( 31.489, 13.0631, -3.78354, 0.37 ) }
    dend_24 { pt3dadd( 32.3448, 12.8149, -3.82011, 0.37 ) }
    dend_24 { pt3dadd( 33.4702, 12.4011, -3.82578, 0.37 ) }
    dend_24 { pt3dadd( 33.9847, 12.1656, -3.8106, 0.37 ) }
    dend_24 { pt3dadd( 34.7849, 11.7837, -3.76704, 0.37 ) }
    dend_24 { pt3dadd( 35.9799, 11.1012, -3.70371, 0.37 ) }
    dend_24 { pt3dadd( 36.8982, 10.5209, -3.6684, 0.37 ) }
    dend_24 { pt3dadd( 38.0682, 9.7782, -3.64102, 0.37 ) }
    dend_24 { pt3dadd( 38.9057, 9.2639, -3.65586, 0.37 ) }
    dend_24 { pt3dadd( 39.746, 8.77344, -3.7, 0.37 ) }
    dend_24 { pt3dadd( 41.262, 7.99472, -3.82616, 0.37 ) }
    dend_24 { pt3dadd( 42.1127, 7.63101, -3.9221, 0.66 ) }
    dend_24 { pt3dadd( 43.1408, 7.295, -4.06611, 0.44 ) }
    dend_24 { pt3dadd( 44.0971, 7.02621, -4.22317, 0.44 ) }
    dend_24 { pt3dadd( 45.0893, 6.75297, -4.36909, 0.44 ) }
    dend_24 { pt3dadd( 46.0986, 6.50488, -4.4913, 0.44 ) }
    dend_24 { pt3dadd( 46.4753, 6.43993, -4.51539, 0.44 ) }
    dend_24 { pt3dadd( 48.103, 6.23679, -4.57026, 0.59 ) }
    dend_24 { pt3dadd( 49.1465, 6.12607, -4.48185, 0.37 ) }
    dend_24 { pt3dadd( 50.4605, 5.98574, -4.21009, 0.37 ) }
    dend_24 { pt3dadd( 51.304, 5.88489, -3.96785, 0.37 ) }
    dend_24 { pt3dadd( 52.6824, 5.66732, -3.47128, 0.37 ) }
    dend_24 { pt3dadd( 53.7248, 5.48158, -3.01764, 0.29 ) }
    dend_24 { pt3dadd( 55.985, 5.04439, -1.90527, 0.29 ) }
    dend_24 { pt3dadd( 56.7802, 4.8792, -1.50737, 0.29 ) }
    dend_24 { pt3dadd( 57.713, 4.65213, -1.08235, 0.29 ) }
    dend_24 { pt3dadd( 59.1044, 4.26276, -0.563228, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( 60.0824, 3.96697, -0.283641, 0.29 ) }
    dend_24 { pt3dadd( 61.4149, 3.5351, -0.111094, 0.29 ) }
    dend_24 { pt3dadd( 62.3096, 3.23591, -0.121551, 0.29 ) }
    dend_24 { pt3dadd( 63.7741, 2.68003, -0.224265, 0.29 ) }
    dend_24 { pt3dadd( 65.4044, 2.05658, -0.376354, 0.29 ) }
    dend_24 { pt3dadd( 65.7803, 1.9208, -0.412812, 0.29 ) }
    dend_24 { pt3dadd( 68.239, 1.05562, -0.614985, 0.29 ) }
    dend_24 { pt3dadd( 69.4754, 0.637227, -0.655487, 0.29 ) }
    dend_24 { pt3dadd( 71.2099, 0.0865299, -0.629375, 0.29 ) }
    dend_24 { pt3dadd( 72.7423, -0.36807, -0.526552, 0.29 ) }
    dend_24 { pt3dadd( 74.1345, -0.7453, -0.343897, 0.29 ) }
    dend_24 { pt3dadd( 75.9469, -1.17728, 0.0513381, 0.29 ) }
    dend_24 { pt3dadd( 76.8157, -1.32735, 0.315972, 0.37 ) }
    dend_24 { pt3dadd( 77.5199, -1.40256, 0.541103, 0.52 ) }
    dend_24 { pt3dadd( 77.5856, -1.40602, 0.565124, 0.22 ) }
    dend_24 { pt3dadd( 79.0313, -1.54261, 1.1604, 0.22 ) }
    dend_24 { pt3dadd( 80.233, -1.64247, 1.73306, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_4 (entry count 17/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 16.2023, 32.6933, -0.835849, 0.66 ) }
    dend_10 { pt3dadd( 16.6066, 36.3012, -1.55176, 0.66 ) }
    dend_10 { pt3dadd( 16.8529, 37.9157, -1.88305, 0.66 ) }
    dend_10 { pt3dadd( 17.1514, 40.2824, -2.22292, 0.66 ) }
    dend_10 { pt3dadd( 17.3635, 42.1172, -2.42398, 0.66 ) }
    dend_10 { pt3dadd( 17.5492, 43.5407, -2.54957, 0.66 ) }
    dend_10 { pt3dadd( 17.9747, 46.2327, -2.8391, 0.66 ) }
    dend_10 { pt3dadd( 18.38, 48.1183, -2.96465, 0.66 ) }
    dend_10 { pt3dadd( 18.9983, 50.6873, -3.27466, 0.66 ) }
    dend_10 { pt3dadd( 19.2399, 51.6151, -3.41997, 0.81 ) }
    dend_10 { pt3dadd( 19.5308, 52.775, -3.69909, 0.66 ) }
    dend_10 { pt3dadd( 19.8546, 54.615, -4.25659, 0.66 ) }
    dend_10 { pt3dadd( 20.1053, 56.962, -5.03328, 0.66 ) }
    dend_10 { pt3dadd( 20.2243, 58.0671, -5.39757, 0.66 ) }
    dend_10 { pt3dadd( 20.3804, 59.37, -5.8538, 0.66 ) }
    dend_10 { pt3dadd( 20.5788, 61.1735, -6.39592, 0.66 ) }
    dend_10 { pt3dadd( 20.6801, 62.6054, -6.70102, 0.66 ) }
    dend_10 { pt3dadd( 20.7354, 63.8449, -6.86285, 0.52 ) }
    dend_10 { pt3dadd( 20.8154, 65.4934, -7.01436, 0.74 ) }
    dend_10 { pt3dadd( 20.9262, 66.866, -7.16517, 0.74 ) }
    dend_10 { pt3dadd( 21.1999, 68.8699, -7.45723, 0.74 ) }
    dend_10 { pt3dadd( 21.5827, 71.1171, -7.75538, 0.74 ) }
    dend_10 { pt3dadd( 21.7917, 72.1997, -7.91929, 0.81 ) }
    dend_10 { pt3dadd( 22.1672, 74.2533, -8.28092, 0.74 ) }
    dend_10 { pt3dadd( 22.5731, 76.7876, -8.81419, 0.74 ) }
    dend_10 { pt3dadd( 22.7911, 78.3179, -9.20357, 1.25 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 43/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 16.2023, 32.6933, -0.835849, 0.52 ) }
    dend_5 { pt3dadd( 15.8374, 35.4625, 0.195356, 0.52 ) }
    dend_5 { pt3dadd( 15.7185, 36.5423, 0.659677, 0.52 ) }
    dend_5 { pt3dadd( 15.6015, 37.7324, 1.2507, 0.52 ) }
    dend_5 { pt3dadd( 15.542, 38.9421, 1.92201, 0.66 ) }
    dend_5 { pt3dadd( 15.6352, 41.2207, 3.41094, 0.52 ) }
    dend_5 { pt3dadd( 15.7534, 42.0524, 4.07641, 0.52 ) }
    dend_5 { pt3dadd( 16.0842, 43.2718, 5.27591, 0.66 ) }
    dend_5 { pt3dadd( 16.5353, 44.2449, 6.40067, 0.66 ) }
    dend_5 { pt3dadd( 17.1355, 45.1444, 7.53443, 0.66 ) }
    dend_5 { pt3dadd( 18.2657, 46.4933, 9.25576, 0.66 ) }
    dend_5 { pt3dadd( 19.5461, 47.7874, 10.8297, 0.66 ) }
    dend_5 { pt3dadd( 19.9336, 48.1942, 11.2636, 0.52 ) }
    dend_5 { pt3dadd( 20.7683, 49.1418, 12.0659, 0.52 ) }
    dend_5 { pt3dadd( 21.3911, 49.9956, 12.583, 0.81 ) }
    dend_5 { pt3dadd( 22.0081, 51.135, 13.0164, 0.96 ) }
    dend_5 { pt3dadd( 22.3735, 52.015, 13.2059, 0.88 ) }
    dend_5 { pt3dadd( 22.9083, 53.4334, 13.3922, 0.74 ) }
    dend_5 { pt3dadd( 23.4875, 54.8521, 13.5168, 0.74 ) }
    dend_5 { pt3dadd( 24.3766, 56.6495, 13.6011, 0.74 ) }
    dend_5 { pt3dadd( 25.1976, 57.9029, 13.6059, 0.74 ) }
    dend_5 { pt3dadd( 26.1149, 59.0708, 13.6025, 0.74 ) }
    dend_5 { pt3dadd( 27.2132, 60.3546, 13.6282, 0.74 ) }
    dend_5 { pt3dadd( 28.6995, 61.972, 13.7067, 0.74 ) }
    dend_5 { pt3dadd( 30.2622, 63.5332, 13.9016, 0.74 ) }
    dend_5 { pt3dadd( 32.4307, 65.4675, 14.4431, 0.74 ) }
    dend_5 { pt3dadd( 33.4087, 66.3505, 14.8162, 0.52 ) }
    dend_5 { pt3dadd( 34.441, 67.4082, 15.3288, 0.52 ) }
    dend_5 { pt3dadd( 35.1634, 68.3174, 15.7877, 0.52 ) }
    dend_5 { pt3dadd( 36.0313, 69.7695, 16.4804, 0.52 ) }
    dend_5 { pt3dadd( 36.8965, 72.0022, 17.3492, 0.52 ) }
    dend_5 { pt3dadd( 37.4007, 74.2136, 17.9365, 0.66 ) }
    dend_5 { pt3dadd( 37.7217, 76.479, 18.2194, 0.66 ) }
    dend_5 { pt3dadd( 37.79, 77.9423, 18.2028, 0.81 ) }
    dend_5 { pt3dadd( 37.6748, 79.5135, 18.0349, 0.88 ) }
    dend_5 { pt3dadd( 37.3553, 81.5622, 17.7047, 0.81 ) }
    dend_5 { pt3dadd( 37.0027, 83.2003, 17.3588, 0.81 ) }
    dend_5 { pt3dadd( 36.5074, 85.2193, 16.8586, 0.81 ) }
    dend_5 { pt3dadd( 35.9585, 87.3544, 16.3081, 0.81 ) }
    dend_5 { pt3dadd( 35.3861, 89.7147, 15.7228, 0.81 ) }
    dend_5 { pt3dadd( 34.861, 92.1031, 15.2001, 1.03 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 84/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 55.6078, 30.8668, -15.4913, 0.37 ) }
    dend_27 { pt3dadd( 56.2483, 32.1299, -15.5492, 0.37 ) }
    dend_27 { pt3dadd( 56.9823, 33.1025, -15.4737, 0.37 ) }
    dend_27 { pt3dadd( 57.8522, 34.2164, -15.3355, 0.22 ) }
    dend_27 { pt3dadd( 58.5657, 35.1768, -15.2017, 0.22 ) }
    dend_27 { pt3dadd( 59.2057, 36.0087, -15.0238, 0.22 ) }
    dend_27 { pt3dadd( 60.1258, 37.0876, -14.7479, 0.44 ) }
    dend_27 { pt3dadd( 61.2503, 38.2609, -14.2861, 0.44 ) }
    dend_27 { pt3dadd( 62.0606, 39.0731, -13.8685, 0.37 ) }
    dend_27 { pt3dadd( 62.4401, 39.4427, -13.6483, 0.37 ) }
    dend_27 { pt3dadd( 63.7143, 40.6042, -12.9521, 0.37 ) }
    dend_27 { pt3dadd( 64.6336, 41.5156, -12.4436, 0.37 ) }
    dend_27 { pt3dadd( 65.0877, 42.0117, -12.1703, 0.37 ) }
    dend_27 { pt3dadd( 65.806, 42.7781, -11.7108, 0.37 ) }
    dend_27 { pt3dadd( 66.3414, 43.2713, -11.3792, 0.37 ) }
    dend_27 { pt3dadd( 66.8239, 43.7094, -11.0599, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_27 { pt3dadd( 67.3643, 44.2666, -10.6653, 0.22 ) }
    dend_27 { pt3dadd( 67.9791, 44.9806, -10.1631, 0.22 ) }
    dend_27 { pt3dadd( 68.4458, 45.5333, -9.78943, 0.29 ) }
    dend_27 { pt3dadd( 69.279, 46.5714, -9.14823, 0.29 ) }
    dend_27 { pt3dadd( 70.094, 47.7201, -8.51299, 0.29 ) }
    dend_27 { pt3dadd( 70.4763, 48.2675, -8.21828, 0.29 ) }
    dend_27 { pt3dadd( 70.7829, 48.6999, -7.97344, 0.29 ) }
    dend_27 { pt3dadd( 70.9806, 49.0203, -7.80124, 0.29 ) }
    dend_27 { pt3dadd( 71.3314, 49.6332, -7.48564, 0.29 ) }
    dend_27 { pt3dadd( 71.9075, 50.5672, -6.99387, 0.29 ) }
    dend_27 { pt3dadd( 72.6406, 51.6564, -6.40103, 0.29 ) }
    dend_27 { pt3dadd( 73.4638, 52.807, -5.69184, 0.29 ) }
    dend_27 { pt3dadd( 74.4964, 54.2735, -4.71985, 0.29 ) }
    dend_27 { pt3dadd( 74.7068, 54.6129, -4.47579, 0.29 ) }
    dend_27 { pt3dadd( 75.1266, 55.4274, -3.85706, 0.29 ) }
    dend_27 { pt3dadd( 75.2716, 55.7907, -3.58324, 0.29 ) }
    dend_27 { pt3dadd( 75.4986, 56.4777, -3.12526, 0.29 ) }
    dend_27 { pt3dadd( 75.6471, 56.9404, -2.82709, 0.29 ) }
    dend_27 { pt3dadd( 76.0891, 58.0336, -2.14288, 0.29 ) }
    dend_27 { pt3dadd( 76.265, 58.3799, -1.94756, 0.29 ) }
    dend_27 { pt3dadd( 76.6985, 59.015, -1.6488, 0.29 ) }
    dend_27 { pt3dadd( 77.5412, 59.9396, -1.26782, 0.29 ) }
    dend_27 { pt3dadd( 78.5854, 60.782, -0.958765, 0.29 ) }
    dend_27 { pt3dadd( 79.3723, 61.2989, -0.78886, 0.29 ) }
    dend_27 { pt3dadd( 80.0522, 61.7624, -0.647432, 0.29 ) }
    dend_27 { pt3dadd( 81.0114, 62.4569, -0.430423, 0.29 ) }
    dend_27 { pt3dadd( 81.546, 62.8674, -0.304351, 0.29 ) }
    dend_27 { pt3dadd( 82.8833, 63.9647, 0.0435239, 0.29 ) }
    dend_27 { pt3dadd( 84.1522, 64.9611, 0.395783, 0.29 ) }
    dend_27 { pt3dadd( 85.8616, 66.3464, 0.990574, 0.29 ) }
    dend_27 { pt3dadd( 86.1457, 66.6098, 1.1183, 0.44 ) }
    dend_27 { pt3dadd( 86.5986, 67.1, 1.36632, 0.29 ) }
    dend_27 { pt3dadd( 87.2298, 67.8788, 1.77796, 0.29 ) }
    dend_27 { pt3dadd( 87.9685, 68.9216, 2.28494, 0.29 ) }
    dend_27 { pt3dadd( 88.542, 69.7727, 2.66346, 0.29 ) }
    dend_27 { pt3dadd( 89.338, 71.0529, 3.11893, 0.29 ) }
    dend_27 { pt3dadd( 89.8048, 71.8908, 3.38107, 0.29 ) }
    dend_27 { pt3dadd( 90.4456, 73.0941, 3.69891, 0.29 ) }
    dend_27 { pt3dadd( 91.1438, 74.4343, 3.97083, 0.22 ) }
    dend_27 { pt3dadd( 91.8328, 75.7859, 4.18687, 0.22 ) }
    dend_27 { pt3dadd( 92.7035, 77.4746, 4.41161, 0.29 ) }
    dend_27 { pt3dadd( 93.2789, 78.5893, 4.53529, 0.29 ) }
    dend_27 { pt3dadd( 93.9553, 79.9384, 4.6709, 0.29 ) }
    dend_27 { pt3dadd( 94.6725, 81.4766, 4.79395, 0.29 ) }
    dend_27 { pt3dadd( 95.1357, 82.5096, 4.86332, 0.29 ) }
    dend_27 { pt3dadd( 95.4262, 83.2001, 4.87593, 0.44 ) }
    dend_27 { pt3dadd( 95.8927, 84.404, 4.84476, 0.37 ) }
    dend_27 { pt3dadd( 96.2847, 85.5611, 4.77907, 0.29 ) }
    dend_27 { pt3dadd( 96.7454, 87.1604, 4.66401, 0.29 ) }
    dend_27 { pt3dadd( 97.0483, 88.2669, 4.55846, 0.29 ) }
    dend_27 { pt3dadd( 97.4645, 89.6717, 4.38386, 0.29 ) }
    dend_27 { pt3dadd( 97.6012, 90.0817, 4.32201, 0.52 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 52/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 55.6078, 30.8668, -15.4913, 0.59 ) }
    dend_26 { pt3dadd( 57.6016, 31.0055, -15.9998, 0.59 ) }
    dend_26 { pt3dadd( 59.2076, 31.1569, -16.3296, 0.59 ) }
    dend_26 { pt3dadd( 60.4792, 31.3409, -16.6005, 0.59 ) }
    dend_26 { pt3dadd( 61.4868, 31.5218, -16.8358, 0.44 ) }
    dend_26 { pt3dadd( 62.7022, 31.7478, -17.1249, 0.44 ) }
    dend_26 { pt3dadd( 64.2423, 32.0123, -17.4848, 0.44 ) }
    dend_26 { pt3dadd( 65.5947, 32.2441, -17.7369, 0.44 ) }
    dend_26 { pt3dadd( 66.8033, 32.4524, -17.9655, 0.44 ) }
    dend_26 { pt3dadd( 67.8368, 32.6468, -18.1533, 0.59 ) }
    dend_26 { pt3dadd( 68.7286, 32.8417, -18.3055, 0.59 ) }
    dend_26 { pt3dadd( 69.7072, 33.0891, -18.4721, 0.52 ) }
    dend_26 { pt3dadd( 70.7962, 33.3693, -18.6831, 0.44 ) }
    dend_26 { pt3dadd( 71.976, 33.6609, -18.9049, 0.44 ) }
    dend_26 { pt3dadd( 72.8995, 33.8803, -19.0565, 0.44 ) }
    dend_26 { pt3dadd( 74.2336, 34.2245, -19.2617, 0.44 ) }
    dend_26 { pt3dadd( 75.8394, 34.6926, -19.5141, 0.44 ) }
    dend_26 { pt3dadd( 77.3751, 35.1346, -19.75, 0.44 ) }
    dend_26 { pt3dadd( 78.7411, 35.4735, -19.9489, 0.44 ) }
    dend_26 { pt3dadd( 79.7147, 35.659, -20.1078, 0.44 ) }
    dend_26 { pt3dadd( 81.033, 35.8665, -20.329, 0.44 ) }
    dend_26 { pt3dadd( 81.7735, 35.9675, -20.4485, 0.59 ) }
    dend_26 { pt3dadd( 82.8973, 36.1277, -20.6251, 0.44 ) }
    dend_26 { pt3dadd( 83.6749, 36.2526, -20.7406, 0.44 ) }
    dend_26 { pt3dadd( 85.1869, 36.493, -20.9838, 0.44 ) }
    dend_26 { pt3dadd( 86.0583, 36.6376, -21.1238, 0.44 ) }
    dend_26 { pt3dadd( 87.2372, 36.8633, -21.3048, 0.44 ) }
    dend_26 { pt3dadd( 88.5232, 37.1356, -21.5238, 0.44 ) }
    dend_26 { pt3dadd( 89.5576, 37.3647, -21.703, 0.44 ) }
    dend_26 { pt3dadd( 91.2824, 37.7031, -21.9799, 0.44 ) }
    dend_26 { pt3dadd( 92.3155, 37.8453, -22.1193, 0.44 ) }
    dend_26 { pt3dadd( 93.2339, 37.9381, -22.2459, 0.44 ) }
    dend_26 { pt3dadd( 94.5986, 38.0856, -22.4894, 0.44 ) }
    dend_26 { pt3dadd( 95.6454, 38.1609, -22.7778, 0.44 ) }
    dend_26 { pt3dadd( 96.7415, 38.192, -23.1545, 0.44 ) }
    dend_26 { pt3dadd( 97.605, 38.1818, -23.4917, 0.44 ) }
    dend_26 { pt3dadd( 98.8703, 38.205, -23.9981, 0.44 ) }
    dend_26 { pt3dadd( 100.138, 38.2393, -24.5532, 0.44 ) }
    dend_26 { pt3dadd( 102.091, 38.3183, -25.4353, 0.44 ) }
    dend_26 { pt3dadd( 103.259, 38.3787, -25.9905, 0.44 ) }
    dend_26 { pt3dadd( 105.641, 38.5141, -27.122, 0.44 ) }
    dend_26 { pt3dadd( 107.837, 38.6187, -28.1481, 0.44 ) }
    dend_26 { pt3dadd( 110.199, 38.6755, -29.1638, 0.44 ) }
    dend_26 { pt3dadd( 110.553, 38.685, -29.293, 0.44 ) }
    dend_26 { pt3dadd( 110.804, 38.6987, -29.3744, 0.44 ) }
    dend_26 { pt3dadd( 111.993, 38.766, -29.7637, 0.44 ) }
    dend_26 { pt3dadd( 113.884, 38.8988, -30.3553, 0.44 ) }
    dend_26 { pt3dadd( 115.239, 39.025, -30.7231, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_26 { pt3dadd( 116.191, 39.1942, -30.9448, 0.44 ) }
    dend_26 { pt3dadd( 118.181, 39.6694, -31.3746, 0.44 ) }
    dend_26 { pt3dadd( 118.776, 39.8274, -31.4634, 0.44 ) }
    dend_26 { pt3dadd( 120.061, 40.2331, -31.5647, 0.44 ) }
    dend_26 { pt3dadd( 121.028, 40.6118, -31.5647, 0.44 ) }
    dend_26 { pt3dadd( 122.251, 41.1834, -31.5122, 0.44 ) }
    dend_26 { pt3dadd( 123.382, 41.7429, -31.4191, 0.44 ) }
    dend_26 { pt3dadd( 125.303, 42.729, -31.1881, 0.44 ) }
    dend_26 { pt3dadd( 126.609, 43.3748, -31.0275, 0.44 ) }
    dend_26 { pt3dadd( 127.727, 43.8803, -30.8868, 0.44 ) }
    dend_26 { pt3dadd( 129.101, 44.4688, -30.7276, 0.44 ) }
    dend_26 { pt3dadd( 130.43, 45.0564, -30.5926, 0.44 ) }
    dend_26 { pt3dadd( 131.701, 45.6135, -30.5275, 0.44 ) }
    dend_26 { pt3dadd( 132.323, 45.8615, -30.5664, 0.44 ) }
    dend_26 { pt3dadd( 133.023, 46.0543, -30.6505, 0.44 ) }
    dend_26 { pt3dadd( 133.737, 46.1891, -30.7648, 0.44 ) }
    dend_26 { pt3dadd( 134.552, 46.3141, -30.9133, 0.44 ) }
    dend_26 { pt3dadd( 135.335, 46.452, -31.0639, 0.44 ) }
    dend_26 { pt3dadd( 137.521, 46.9336, -31.5201, 0.44 ) }
    dend_26 { pt3dadd( 139.064, 47.3432, -31.8447, 0.44 ) }
    dend_26 { pt3dadd( 140.191, 47.6536, -32.074, 0.44 ) }
    dend_26 { pt3dadd( 141.726, 48.066, -32.3591, 0.44 ) }
    dend_26 { pt3dadd( 142.811, 48.3777, -32.5292, 0.44 ) }
    dend_26 { pt3dadd( 143.869, 48.7272, -32.6486, 0.44 ) }
    dend_26 { pt3dadd( 144.75, 49.047, -32.6949, 0.44 ) }
    dend_26 { pt3dadd( 145.701, 49.3901, -32.7435, 0.44 ) }
    dend_26 { pt3dadd( 146.752, 49.7643, -32.7907, 0.44 ) }
    dend_26 { pt3dadd( 147.994, 50.1883, -32.777, 0.44 ) }
    dend_26 { pt3dadd( 149.412, 50.6325, -32.6908, 0.44 ) }
    dend_26 { pt3dadd( 149.91, 50.78, -32.641, 0.44 ) }
    dend_26 { pt3dadd( 150.749, 51.0434, -32.5117, 0.44 ) }
    dend_26 { pt3dadd( 151.62, 51.34, -32.3427, 0.44 ) }
    dend_26 { pt3dadd( 153.235, 51.913, -31.9773, 0.44 ) }
    dend_26 { pt3dadd( 154.325, 52.2847, -31.7129, 0.44 ) }
    dend_26 { pt3dadd( 155.512, 52.6666, -31.4199, 0.44 ) }
    dend_26 { pt3dadd( 156.916, 53.0705, -31.0918, 0.44 ) }
    dend_26 { pt3dadd( 157.625, 53.2541, -30.9382, 0.22 ) }
    dend_26 { pt3dadd( 158.317, 53.4132, -30.8125, 0.22 ) }
    dend_26 { pt3dadd( 159.396, 53.6539, -30.6811, 0.22 ) }
    dend_26 { pt3dadd( 160.125, 53.8215, -30.573, 0.22 ) }
    dend_26 { pt3dadd( 160.802, 53.9965, -30.4685, 0.22 ) }
    dend_26 { pt3dadd( 161.581, 54.1996, -30.363, 0.22 ) }
    dend_26 { pt3dadd( 162.306, 54.3921, -30.2515, 0.22 ) }
    dend_26 { pt3dadd( 162.926, 54.5625, -30.1502, 0.22 ) }
    dend_26 { pt3dadd( 164.352, 55.0, -29.9165, 0.22 ) }
    dend_26 { pt3dadd( 165.533, 55.3983, -29.7376, 0.22 ) }
    dend_26 { pt3dadd( 166.533, 55.744, -29.6045, 0.22 ) }
    dend_26 { pt3dadd( 167.231, 55.9789, -29.5282, 0.22 ) }
    dend_26 { pt3dadd( 167.948, 56.2303, -29.5016, 0.22 ) }
    dend_26 { pt3dadd( 168.949, 56.5964, -29.5369, 0.22 ) }
    dend_26 { pt3dadd( 169.912, 56.9793, -29.728, 0.22 ) }
    dend_26 { pt3dadd( 170.468, 57.205, -29.8923, 0.22 ) }
    dend_26 { pt3dadd( 171.213, 57.5429, -30.1735, 0.22 ) }
    dend_26 { pt3dadd( 172.494, 58.1128, -30.7973, 0.22 ) }
    dend_26 { pt3dadd( 173.463, 58.5135, -31.3078, 0.22 ) }
    dend_26 { pt3dadd( 175.116, 59.1215, -32.1869, 0.22 ) }
    dend_26 { pt3dadd( 175.947, 59.4061, -32.5936, 0.22 ) }
    dend_26 { pt3dadd( 177.333, 59.8775, -33.2043, 0.22 ) }
    dend_26 { pt3dadd( 179.469, 60.5922, -34.028, 0.22 ) }
    dend_26 { pt3dadd( 181.303, 61.2167, -34.6371, 0.22 ) }
    dend_26 { pt3dadd( 183.118, 61.8236, -35.1535, 0.22 ) }
    dend_26 { pt3dadd( 185.142, 62.4812, -35.6397, 0.22 ) }
    dend_26 { pt3dadd( 186.332, 62.8608, -35.9154, 0.22 ) }
    dend_26 { pt3dadd( 187.53, 63.2072, -36.1628, 0.22 ) }
    dend_26 { pt3dadd( 189.505, 63.7459, -36.4999, 0.37 ) }
    dend_26 { pt3dadd( 190.712, 64.0466, -36.7065, 0.29 ) }
    dend_26 { pt3dadd( 192.493, 64.4527, -37.0021, 0.15 ) }
    dend_26 { pt3dadd( 193.188, 64.5849, -37.1193, 0.15 ) }
    dend_26 { pt3dadd( 194.26, 64.7559, -37.2809, 0.15 ) }
    dend_26 { pt3dadd( 195.334, 64.9052, -37.4114, 0.15 ) }
    dend_26 { pt3dadd( 196.158, 64.9955, -37.4288, 0.15 ) }
    dend_26 { pt3dadd( 197.17, 65.1179, -37.4076, 0.15 ) }
    dend_26 { pt3dadd( 197.766, 65.2048, -37.3608, 0.15 ) }
    dend_26 { pt3dadd( 199.134, 65.452, -37.2358, 0.15 ) }
    dend_26 { pt3dadd( 199.7, 65.5742, -37.1731, 0.15 ) }
    dend_26 { pt3dadd( 201.174, 65.8773, -36.9695, 0.15 ) }
    dend_26 { pt3dadd( 202.085, 66.0351, -36.8135, 0.15 ) }
    dend_26 { pt3dadd( 202.306, 66.0596, -36.7643, 0.15 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 78/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 22.7911, 78.3179, -9.20357, 0.66 ) }
    dend_12 { pt3dadd( 23.6397, 79.8772, -9.68653, 0.66 ) }
    dend_12 { pt3dadd( 24.4245, 81.0559, -10.1105, 0.66 ) }
    dend_12 { pt3dadd( 25.5647, 82.5848, -10.6683, 0.66 ) }
    dend_12 { pt3dadd( 26.2002, 83.3996, -10.9594, 0.66 ) }
    dend_12 { pt3dadd( 27.2104, 84.7493, -11.4005, 0.66 ) }
    dend_12 { pt3dadd( 27.8604, 85.68, -11.6624, 0.88 ) }
    dend_12 { pt3dadd( 28.6286, 86.9311, -11.9308, 0.74 ) }
    dend_12 { pt3dadd( 29.2763, 88.0214, -12.1063, 0.74 ) }
    dend_12 { pt3dadd( 29.5537, 88.5231, -12.1472, 0.74 ) }
    dend_12 { pt3dadd( 30.1563, 89.9066, -12.2026, 0.59 ) }
    dend_12 { pt3dadd( 30.3688, 90.9078, -12.2076, 0.59 ) }
    dend_12 { pt3dadd( 30.4683, 91.8672, -12.2454, 0.52 ) }
    dend_12 { pt3dadd( 30.4974, 92.3634, -12.2713, 0.96 ) }
    dend_12 { pt3dadd( 30.555, 93.7196, -12.383, 0.88 ) }
    dend_12 { pt3dadd( 30.5941, 94.9299, -12.5732, 0.88 ) }
    dend_12 { pt3dadd( 30.6331, 96.718, -12.9573, 0.88 ) }
    dend_12 { pt3dadd( 30.7075, 99.2181, -13.6096, 0.59 ) }
    dend_12 { pt3dadd( 30.7725, 100.414, -13.9488, 0.59 ) }
    dend_12 { pt3dadd( 30.9181, 101.917, -14.4267, 0.59 ) }
    dend_12 { pt3dadd( 31.1104, 103.769, -15.1107, 0.59 ) }
    dend_12 { pt3dadd( 31.1848, 104.705, -15.4717, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_12 { pt3dadd( 31.1981, 106.033, -15.961, 0.74 ) }
    dend_12 { pt3dadd( 31.0988, 107.144, -16.3324, 0.66 ) }
    dend_12 { pt3dadd( 30.9226, 108.579, -16.7886, 0.66 ) }
    dend_12 { pt3dadd( 30.6636, 111.041, -17.5284, 0.66 ) }
    dend_12 { pt3dadd( 30.5832, 112.466, -17.8881, 0.66 ) }
    dend_12 { pt3dadd( 30.5752, 114.485, -18.3802, 0.66 ) }
    dend_12 { pt3dadd( 30.6127, 115.395, -18.5952, 0.74 ) }
    dend_12 { pt3dadd( 30.7138, 116.32, -18.8326, 0.74 ) }
    dend_12 { pt3dadd( 31.0127, 117.712, -19.1899, 0.74 ) }
    dend_12 { pt3dadd( 31.447, 118.923, -19.5233, 0.74 ) }
    dend_12 { pt3dadd( 31.8997, 119.958, -19.8379, 0.74 ) }
    dend_12 { pt3dadd( 32.3437, 120.898, -20.1231, 0.74 ) }
    dend_12 { pt3dadd( 33.1498, 122.784, -20.6368, 0.74 ) }
    dend_12 { pt3dadd( 33.2696, 123.133, -20.7194, 0.74 ) }
    dend_12 { pt3dadd( 33.5588, 124.269, -20.9321, 0.74 ) }
    dend_12 { pt3dadd( 33.7909, 125.685, -21.1399, 0.74 ) }
    dend_12 { pt3dadd( 33.8356, 126.181, -21.2041, 0.74 ) }
    dend_12 { pt3dadd( 33.8722, 127.301, -21.3296, 0.74 ) }
    dend_12 { pt3dadd( 33.8719, 128.567, -21.5008, 0.88 ) }
    dend_12 { pt3dadd( 33.8719, 129.755, -21.7586, 0.88 ) }
    dend_12 { pt3dadd( 33.8594, 131.359, -22.2377, 0.74 ) }
    dend_12 { pt3dadd( 33.8302, 132.488, -22.5773, 0.74 ) }
    dend_12 { pt3dadd( 33.7864, 133.781, -22.9462, 0.59 ) }
    dend_12 { pt3dadd( 33.7409, 135.2, -23.3667, 0.74 ) }
    dend_12 { pt3dadd( 33.7826, 136.919, -23.9486, 0.74 ) }
    dend_12 { pt3dadd( 33.897, 138.516, -24.5131, 0.74 ) }
    dend_12 { pt3dadd( 34.1813, 140.866, -25.3016, 0.74 ) }
    dend_12 { pt3dadd( 34.4466, 142.303, -25.7128, 0.74 ) }
    dend_12 { pt3dadd( 34.6892, 143.443, -26.0054, 0.74 ) }
    dend_12 { pt3dadd( 35.2778, 146.245, -26.6871, 0.74 ) }
    dend_12 { pt3dadd( 35.4746, 147.196, -26.9115, 0.74 ) }
    dend_12 { pt3dadd( 35.9143, 149.043, -27.3597, 0.74 ) }
    dend_12 { pt3dadd( 36.6172, 151.613, -28.0199, 0.74 ) }
    dend_12 { pt3dadd( 37.0846, 153.219, -28.3794, 0.74 ) }
    dend_12 { pt3dadd( 37.519, 154.774, -28.6587, 0.74 ) }
    dend_12 { pt3dadd( 37.7974, 156.031, -28.8319, 0.74 ) }
    dend_12 { pt3dadd( 38.0321, 157.505, -29.0972, 0.74 ) }
    dend_12 { pt3dadd( 38.1389, 158.415, -29.3006, 0.74 ) }
    dend_12 { pt3dadd( 38.2512, 159.65, -29.4392, 0.52 ) }
    dend_12 { pt3dadd( 38.3696, 160.797, -29.5321, 0.52 ) }
    dend_12 { pt3dadd( 38.6107, 163.048, -29.6407, 0.52 ) }
    dend_12 { pt3dadd( 38.7648, 165.158, -29.7372, 0.74 ) }
    dend_12 { pt3dadd( 38.7759, 166.861, -29.8011, 0.74 ) }
    dend_12 { pt3dadd( 38.6343, 171.383, -29.8595, 0.74 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 44/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 22.7911, 78.3179, -9.20357, 0.29 ) }
    dend_11 { pt3dadd( 22.0939, 79.2683, -8.95525, 0.29 ) }
    dend_11 { pt3dadd( 21.1982, 80.5102, -8.7004, 0.29 ) }
    dend_11 { pt3dadd( 20.3221, 81.8069, -8.48893, 0.29 ) }
    dend_11 { pt3dadd( 19.2526, 83.3962, -8.30861, 0.29 ) }
    dend_11 { pt3dadd( 18.5247, 84.5219, -8.21857, 0.29 ) }
    dend_11 { pt3dadd( 18.0013, 85.4018, -8.18861, 0.29 ) }
    dend_11 { pt3dadd( 17.5911, 86.184, -8.21552, 0.29 ) }
    dend_11 { pt3dadd( 17.0684, 87.3572, -8.33404, 0.29 ) }
    dend_11 { pt3dadd( 16.6426, 88.4139, -8.4811, 0.29 ) }
    dend_11 { pt3dadd( 16.2875, 89.3513, -8.61653, 0.29 ) }
    dend_11 { pt3dadd( 15.8407, 90.6034, -8.73274, 0.29 ) }
    dend_11 { pt3dadd( 15.3072, 92.2267, -8.77987, 0.29 ) }
    dend_11 { pt3dadd( 15.0785, 93.0154, -8.74181, 0.81 ) }
    dend_11 { pt3dadd( 14.8973, 93.7008, -8.65043, 0.15 ) }
    dend_11 { pt3dadd( 14.6857, 94.6748, -8.43918, 0.15 ) }
    dend_11 { pt3dadd( 14.535, 95.6296, -8.17526, 0.15 ) }
    dend_11 { pt3dadd( 14.473, 96.3698, -7.92787, 0.15 ) }
    dend_11 { pt3dadd( 14.4863, 97.4742, -7.56278, 0.66 ) }
    dend_11 { pt3dadd( 14.4975, 98.5949, -7.24097, 0.66 ) }
    dend_11 { pt3dadd( 14.475, 99.0904, -7.11696, 0.29 ) }
    dend_11 { pt3dadd( 14.4108, 100.393, -6.86989, 0.29 ) }
    dend_11 { pt3dadd( 14.3899, 100.81, -6.80407, 1.03 ) }
    dend_11 { pt3dadd( 14.3162, 101.705, -6.69366, 0.22 ) }
    dend_11 { pt3dadd( 14.1973, 102.966, -6.58244, 0.22 ) }
    dend_11 { pt3dadd( 14.0548, 104.293, -6.45876, 0.22 ) }
    dend_11 { pt3dadd( 13.8992, 105.439, -6.3522, 0.22 ) }
    dend_11 { pt3dadd( 13.7199, 106.606, -6.24812, 0.22 ) }
    dend_11 { pt3dadd( 13.6561, 107.021, -6.21659, 0.37 ) }
    dend_11 { pt3dadd( 13.6169, 107.37, -6.19191, 0.22 ) }
    dend_11 { pt3dadd( 13.5987, 108.162, -6.14957, 0.22 ) }
    dend_11 { pt3dadd( 13.5966, 108.581, -6.1107, 0.52 ) }
    dend_11 { pt3dadd( 13.5805, 109.362, -5.9903, 0.22 ) }
    dend_11 { pt3dadd( 13.5753, 110.615, -5.73993, 0.22 ) }
    dend_11 { pt3dadd( 13.6042, 111.515, -5.54399, 0.22 ) }
    dend_11 { pt3dadd( 13.6592, 112.622, -5.28079, 0.22 ) }
    dend_11 { pt3dadd( 13.7522, 113.826, -4.95992, 0.44 ) }
    dend_11 { pt3dadd( 13.8176, 114.414, -4.7868, 0.22 ) }
    dend_11 { pt3dadd( 13.9895, 115.416, -4.45066, 0.22 ) }
    dend_11 { pt3dadd( 14.2378, 116.296, -4.12086, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 84/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 34.861, 92.1031, 15.2001, 0.59 ) }
    dend_7 { pt3dadd( 34.4156, 94.305, 14.7544, 0.59 ) }
    dend_7 { pt3dadd( 34.3224, 94.9363, 14.6476, 0.37 ) }
    dend_7 { pt3dadd( 34.04, 97.0395, 14.3436, 0.37 ) }
    dend_7 { pt3dadd( 33.7228, 98.811, 14.1208, 0.59 ) }
    dend_7 { pt3dadd( 33.4366, 100.17, 13.974, 0.52 ) }
    dend_7 { pt3dadd( 33.2221, 101.146, 13.8726, 0.52 ) }
    dend_7 { pt3dadd( 33.0029, 102.118, 13.8281, 0.52 ) }
    dend_7 { pt3dadd( 32.8621, 103.078, 13.7849, 0.52 ) }
    dend_7 { pt3dadd( 32.7832, 104.511, 13.7255, 0.52 ) }
    dend_7 { pt3dadd( 32.7484, 105.799, 13.6907, 0.44 ) }
    dend_7 { pt3dadd( 32.7524, 106.989, 13.6635, 0.44 ) }
    dend_7 { pt3dadd( 32.7914, 107.883, 13.6472, 0.52 ) }
    dend_7 { pt3dadd( 32.9353, 109.277, 13.6063, 0.52 ) }
    dend_7 { pt3dadd( 33.0442, 110.062, 13.5803, 0.52 ) }
    dend_7 { pt3dadd( 33.2574, 111.436, 13.5347, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_7 { pt3dadd( 33.4496, 112.868, 13.4659, 0.52 ) }
    dend_7 { pt3dadd( 33.5058, 113.525, 13.4022, 0.52 ) }
    dend_7 { pt3dadd( 33.5294, 114.629, 13.2523, 0.52 ) }
    dend_7 { pt3dadd( 33.488, 116.742, 12.9033, 0.52 ) }
    dend_7 { pt3dadd( 33.4622, 118.142, 12.6424, 0.52 ) }
    dend_7 { pt3dadd( 33.4455, 119.675, 12.349, 0.52 ) }
    dend_7 { pt3dadd( 33.4915, 121.523, 12.0028, 0.52 ) }
    dend_7 { pt3dadd( 33.5918, 122.785, 11.7851, 0.52 ) }
    dend_7 { pt3dadd( 33.6588, 123.208, 11.7371, 0.52 ) }
    dend_7 { pt3dadd( 33.9266, 124.29, 11.6907, 0.52 ) }
    dend_7 { pt3dadd( 34.1504, 125.16, 11.734, 0.29 ) }
    dend_7 { pt3dadd( 34.4018, 126.222, 11.8463, 0.29 ) }
    dend_7 { pt3dadd( 34.6297, 127.034, 11.9957, 0.29 ) }
    dend_7 { pt3dadd( 35.0227, 128.36, 12.2535, 0.59 ) }
    dend_7 { pt3dadd( 35.3377, 129.68, 12.5036, 0.37 ) }
    dend_7 { pt3dadd( 35.4926, 131.033, 12.7302, 0.37 ) }
    dend_7 { pt3dadd( 35.4668, 132.194, 12.8597, 0.52 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 17/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 34.861, 92.1031, 15.2001, 0.44 ) }
    dend_6 { pt3dadd( 33.5149, 93.5834, 16.4382, 0.44 ) }
    dend_6 { pt3dadd( 32.5897, 94.7985, 17.4846, 0.44 ) }
    dend_6 { pt3dadd( 31.8069, 96.1515, 18.7852, 0.44 ) }
    dend_6 { pt3dadd( 31.0227, 97.6745, 20.2366, 0.44 ) }
    dend_6 { pt3dadd( 30.642, 98.4343, 20.9554, 0.44 ) }
    dend_6 { pt3dadd( 30.2271, 99.2162, 21.7313, 0.44 ) }
    dend_6 { pt3dadd( 29.9395, 99.7824, 22.341, 0.44 ) }
    dend_6 { pt3dadd( 29.4388, 100.984, 23.6633, 0.44 ) }
    dend_6 { pt3dadd( 28.9392, 102.673, 25.4093, 0.59 ) }
    dend_6 { pt3dadd( 28.5955, 103.926, 26.6053, 0.59 ) }
    dend_6 { pt3dadd( 28.2058, 105.345, 27.8673, 0.59 ) }
    dend_6 { pt3dadd( 27.818, 106.734, 28.9339, 0.52 ) }
    dend_6 { pt3dadd( 27.508, 107.934, 29.7352, 0.52 ) }
    dend_6 { pt3dadd( 27.221, 109.568, 30.6292, 0.44 ) }
    dend_6 { pt3dadd( 27.1687, 110.62, 31.1015, 0.44 ) }
    dend_6 { pt3dadd( 27.2621, 111.938, 31.7081, 0.44 ) }
    dend_6 { pt3dadd( 27.4231, 113.311, 32.2489, 0.44 ) }
    dend_6 { pt3dadd( 27.5276, 114.133, 32.5488, 0.37 ) }
    dend_6 { pt3dadd( 27.6027, 114.98, 32.8856, 0.37 ) }
    dend_6 { pt3dadd( 27.6425, 115.885, 33.3032, 0.29 ) }
    dend_6 { pt3dadd( 28.1987, 119.235, 35.1534, 0.29 ) }
    // Section: dend_22, id: dend_22, parent: dend_12 (entry count 39/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 38.6343, 171.383, -29.8595, 0.59 ) }
    dend_22 { pt3dadd( 37.9344, 172.673, -29.8237, 0.59 ) }
    dend_22 { pt3dadd( 37.535, 173.503, -29.7553, 0.59 ) }
    dend_22 { pt3dadd( 37.1062, 174.616, -29.6446, 0.59 ) }
    dend_22 { pt3dadd( 36.5911, 176.138, -29.3191, 0.59 ) }
    dend_22 { pt3dadd( 36.296, 177.155, -29.0495, 0.37 ) }
    dend_22 { pt3dadd( 35.9758, 178.29, -28.6802, 0.37 ) }
    dend_22 { pt3dadd( 35.7968, 179.154, -28.3564, 0.29 ) }
    dend_22 { pt3dadd( 35.613, 180.012, -28.0143, 0.29 ) }
    dend_22 { pt3dadd( 35.2629, 181.458, -27.3088, 0.44 ) }
    dend_22 { pt3dadd( 34.9785, 182.413, -26.7351, 0.44 ) }
    dend_22 { pt3dadd( 34.6251, 183.398, -26.062, 0.44 ) }
    dend_22 { pt3dadd( 34.2986, 184.195, -25.4166, 0.44 ) }
    dend_22 { pt3dadd( 33.8036, 185.172, -24.4982, 0.44 ) }
    dend_22 { pt3dadd( 32.9392, 186.582, -23.1861, 0.52 ) }
    dend_22 { pt3dadd( 32.6227, 187.066, -22.8055, 0.52 ) }
    dend_22 { pt3dadd( 32.1388, 187.736, -22.3154, 0.52 ) }
    dend_22 { pt3dadd( 31.3318, 188.809, -21.587, 0.52 ) }
    dend_22 { pt3dadd( 30.3108, 190.122, -20.6791, 0.52 ) }
    dend_22 { pt3dadd( 29.6012, 191.128, -19.9635, 0.44 ) }
    dend_22 { pt3dadd( 28.9383, 192.188, -19.2793, 0.44 ) }
    dend_22 { pt3dadd( 28.2317, 193.452, -18.4043, 0.44 ) }
    dend_22 { pt3dadd( 27.3777, 195.07, -17.2212, 0.44 ) }
    dend_22 { pt3dadd( 27.0142, 195.805, -16.6775, 0.44 ) }
    dend_22 { pt3dadd( 26.5442, 197.057, -15.5133, 0.44 ) }
    dend_22 { pt3dadd( 26.4578, 197.406, -15.1322, 0.44 ) }
    dend_22 { pt3dadd( 26.2771, 198.753, -13.6108, 0.44 ) }
    dend_22 { pt3dadd( 26.2472, 199.426, -12.8753, 0.44 ) }
    dend_22 { pt3dadd( 26.2233, 200.516, -11.678, 0.44 ) }
    dend_22 { pt3dadd( 26.0289, 202.787, -9.48225, 0.59 ) }
    dend_22 { pt3dadd( 25.7905, 204.145, -8.24831, 0.29 ) }
    dend_22 { pt3dadd( 25.5591, 205.058, -7.46314, 0.22 ) }
    dend_22 { pt3dadd( 25.3332, 205.738, -6.93215, 0.29 ) }
    dend_22 { pt3dadd( 24.88, 206.935, -6.11759, 0.29 ) }
    dend_22 { pt3dadd( 23.7436, 209.192, -4.58572, 0.29 ) }
    dend_22 { pt3dadd( 23.0603, 210.34, -3.92064, 0.29 ) }
    dend_22 { pt3dadd( 22.6473, 211.003, -3.54753, 0.37 ) }
    dend_22 { pt3dadd( 22.1107, 211.913, -3.00448, 0.29 ) }
    dend_22 { pt3dadd( 21.3954, 213.193, -2.19618, 0.29 ) }
    dend_22 { pt3dadd( 20.4778, 214.963, -1.05333, 0.37 ) }
    dend_22 { pt3dadd( 19.8317, 216.266, -0.0682315, 0.37 ) }
    dend_22 { pt3dadd( 19.449, 217.081, 0.511866, 0.37 ) }
    dend_22 { pt3dadd( 19.1397, 217.735, 1.00379, 0.37 ) }
    dend_22 { pt3dadd( 18.7271, 218.507, 1.60526, 0.29 ) }
    dend_22 { pt3dadd( 18.4079, 218.983, 2.00552, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 84/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 38.6343, 171.383, -29.8595, 0.81 ) }
    dend_13 { pt3dadd( 38.8967, 175.826, -32.959, 0.81 ) }
    dend_13 { pt3dadd( 38.9428, 177.034, -33.6747, 0.74 ) }
    dend_13 { pt3dadd( 38.9815, 178.104, -34.2252, 0.74 ) }
    dend_13 { pt3dadd( 39.0239, 179.122, -34.6747, 0.88 ) }
    dend_13 { pt3dadd( 39.0973, 180.154, -35.0547, 0.88 ) }
    dend_13 { pt3dadd( 39.2842, 182.18, -35.7386, 0.66 ) }
    dend_13 { pt3dadd( 39.3926, 183.161, -35.8969, 0.66 ) }
    dend_13 { pt3dadd( 39.4818, 184.113, -36.051, 0.66 ) }
    dend_13 { pt3dadd( 39.5756, 185.369, -36.3138, 0.52 ) }
    dend_13 { pt3dadd( 39.7229, 187.258, -36.7566, 0.52 ) }
    dend_13 { pt3dadd( 39.8088, 188.319, -37.0093, 0.74 ) }
    dend_13 { pt3dadd( 39.8911, 189.297, -37.2214, 0.81 ) }
    dend_13 { pt3dadd( 39.9985, 190.583, -37.5043, 0.81 ) }
    dend_13 { pt3dadd( 40.1153, 192.691, -37.924, 0.81 ) }
    dend_13 { pt3dadd( 40.1864, 194.157, -38.2402, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_13 { pt3dadd( 40.2627, 195.425, -38.4587, 0.81 ) }
    dend_13 { pt3dadd( 40.417, 196.977, -38.6517, 0.66 ) }
    dend_13 { pt3dadd( 40.5854, 198.296, -38.841, 0.66 ) }
    dend_13 { pt3dadd( 40.9425, 200.691, -39.1456, 0.74 ) }
    dend_13 { pt3dadd( 41.2553, 202.581, -39.2632, 0.74 ) }
    dend_13 { pt3dadd( 41.5895, 204.601, -39.3549, 0.81 ) }
    dend_13 { pt3dadd( 41.7776, 205.667, -39.3856, 0.88 ) }
    dend_13 { pt3dadd( 42.2531, 208.222, -39.5089, 0.88 ) }
    dend_13 { pt3dadd( 42.5452, 209.703, -39.5984, 0.74 ) }
    dend_13 { pt3dadd( 42.8959, 211.394, -39.7776, 0.74 ) }
    dend_13 { pt3dadd( 43.0971, 212.568, -39.9633, 0.74 ) }
    dend_13 { pt3dadd( 43.2087, 213.414, -40.2185, 0.74 ) }
    dend_13 { pt3dadd( 43.3728, 215.073, -40.8291, 0.74 ) }
    dend_13 { pt3dadd( 43.4492, 216.091, -41.235, 0.74 ) }
    dend_13 { pt3dadd( 43.5272, 217.619, -41.9427, 0.81 ) }
    dend_13 { pt3dadd( 43.6051, 218.894, -42.5628, 0.81 ) }
    dend_13 { pt3dadd( 43.7195, 220.501, -43.2847, 0.66 ) }
    dend_13 { pt3dadd( 43.8093, 221.926, -43.8394, 0.66 ) }
    dend_13 { pt3dadd( 43.8694, 223.285, -44.2483, 0.66 ) }
    dend_13 { pt3dadd( 43.9007, 224.479, -44.5297, 0.66 ) }
    dend_13 { pt3dadd( 43.9484, 225.836, -44.6788, 0.66 ) }
    dend_13 { pt3dadd( 43.9934, 226.957, -44.7187, 0.66 ) }
    dend_13 { pt3dadd( 44.0216, 227.815, -44.7437, 0.66 ) }
    dend_13 { pt3dadd( 43.9925, 228.838, -44.8636, 0.96 ) }
    dend_13 { pt3dadd( 43.8829, 229.884, -45.0602, 0.81 ) }
    dend_13 { pt3dadd( 43.6208, 231.465, -45.4237, 0.44 ) }
    dend_13 { pt3dadd( 43.3942, 232.75, -45.7461, 0.44 ) }
    dend_13 { pt3dadd( 43.1103, 234.797, -46.2142, 0.59 ) }
    dend_13 { pt3dadd( 42.8701, 237.123, -46.7687, 0.59 ) }
    dend_13 { pt3dadd( 42.7581, 238.624, -47.1616, 0.59 ) }
    dend_13 { pt3dadd( 42.6817, 239.867, -47.4977, 0.59 ) }
    dend_13 { pt3dadd( 42.638, 241.322, -47.824, 0.59 ) }
    dend_13 { pt3dadd( 42.7051, 243.124, -48.0651, 0.59 ) }
    dend_13 { pt3dadd( 42.9371, 245.175, -48.2124, 0.59 ) }
    dend_13 { pt3dadd( 43.191, 246.483, -48.2662, 0.59 ) }
    dend_13 { pt3dadd( 43.4937, 247.746, -48.3572, 0.66 ) }
    dend_13 { pt3dadd( 44.1335, 250.27, -48.5992, 0.52 ) }
    dend_13 { pt3dadd( 44.5978, 252.354, -48.8455, 0.52 ) }
    dend_13 { pt3dadd( 44.8808, 253.677, -49.0538, 0.52 ) }
    dend_13 { pt3dadd( 45.1816, 255.005, -49.2348, 0.52 ) }
    dend_13 { pt3dadd( 45.4997, 256.408, -49.4306, 0.52 ) }
    dend_13 { pt3dadd( 45.6549, 257.177, -49.5537, 0.52 ) }
    dend_13 { pt3dadd( 46.076, 259.589, -49.9873, 0.52 ) }
    dend_13 { pt3dadd( 46.3492, 261.276, -50.2572, 0.52 ) }
    dend_13 { pt3dadd( 46.6236, 263.287, -50.5494, 0.88 ) }
    dend_13 { pt3dadd( 46.8502, 265.248, -50.8111, 0.74 ) }
    dend_13 { pt3dadd( 47.1634, 268.215, -51.1406, 0.74 ) }
    dend_13 { pt3dadd( 47.4184, 270.55, -51.4259, 0.74 ) }
    dend_13 { pt3dadd( 47.5698, 271.81, -51.5848, 0.74 ) }
    dend_13 { pt3dadd( 47.7984, 274.03, -51.8629, 0.74 ) }
    dend_13 { pt3dadd( 47.8966, 275.222, -52.0505, 0.74 ) }
    dend_13 { pt3dadd( 48.045, 277.487, -52.4467, 0.74 ) }
    dend_13 { pt3dadd( 48.1616, 279.35, -52.812, 0.74 ) }
    dend_13 { pt3dadd( 48.2653, 280.758, -53.1208, 0.74 ) }
    dend_13 { pt3dadd( 48.3814, 281.792, -53.3642, 0.74 ) }
    dend_13 { pt3dadd( 48.6592, 283.414, -53.7766, 0.74 ) }
    dend_13 { pt3dadd( 48.7998, 284.215, -54.0016, 0.66 ) }
    dend_13 { pt3dadd( 49.1021, 286.15, -54.564, 0.66 ) }
    dend_13 { pt3dadd( 49.3124, 287.688, -55.0001, 0.44 ) }
    dend_13 { pt3dadd( 49.4465, 288.623, -55.2689, 0.44 ) }
    dend_13 { pt3dadd( 49.6139, 289.69, -55.5336, 0.96 ) }
    dend_13 { pt3dadd( 49.843, 291.058, -55.8569, 0.74 ) }
    dend_13 { pt3dadd( 50.0692, 292.453, -56.1791, 0.66 ) }
    dend_13 { pt3dadd( 50.2519, 293.864, -56.4645, 0.37 ) }
    dend_13 { pt3dadd( 50.3647, 294.905, -56.6514, 0.59 ) }
    dend_13 { pt3dadd( 50.5355, 296.474, -56.9096, 0.59 ) }
    dend_13 { pt3dadd( 50.7421, 298.349, -57.2098, 0.74 ) }
    dend_13 { pt3dadd( 50.8209, 299.206, -57.3465, 0.74 ) }
    dend_13 { pt3dadd( 50.8742, 300.988, -57.6567, 0.74 ) }
    dend_13 { pt3dadd( 50.8261, 301.982, -57.8424, 0.74 ) }
    dend_13 { pt3dadd( 50.7485, 302.836, -57.9794, 0.88 ) }
    dend_13 { pt3dadd( 50.5854, 304.629, -58.2144, 0.66 ) }
    dend_13 { pt3dadd( 50.4847, 306.292, -58.3429, 0.74 ) }
    dend_13 { pt3dadd( 50.4583, 307.857, -58.4568, 0.59 ) }
    dend_13 { pt3dadd( 50.4822, 309.501, -58.564, 0.44 ) }
    dend_13 { pt3dadd( 50.5519, 311.61, -58.7299, 0.59 ) }
    dend_13 { pt3dadd( 50.6304, 312.993, -58.8443, 0.74 ) }
    dend_13 { pt3dadd( 50.8101, 314.716, -58.9784, 0.44 ) }
    dend_13 { pt3dadd( 51.2913, 317.669, -59.3233, 0.44 ) }
    dend_13 { pt3dadd( 51.5448, 318.915, -59.5042, 0.59 ) }
    dend_13 { pt3dadd( 51.8217, 320.198, -59.7454, 0.59 ) }
    dend_13 { pt3dadd( 51.9768, 320.943, -59.9245, 0.44 ) }
    dend_13 { pt3dadd( 52.2435, 322.261, -60.2431, 0.74 ) }
    dend_13 { pt3dadd( 52.6699, 324.352, -60.7706, 0.81 ) }
    dend_13 { pt3dadd( 52.9492, 325.438, -61.0409, 0.52 ) }
    dend_13 { pt3dadd( 53.1448, 326.099, -61.1972, 0.52 ) }
    dend_13 { pt3dadd( 53.6874, 327.766, -61.5156, 0.96 ) }
    dend_13 { pt3dadd( 54.0594, 328.941, -61.7371, 0.88 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 88/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 35.4668, 132.194, 12.8597, 0.29 ) }
    dend_9 { pt3dadd( 35.6546, 133.116, 12.7959, 0.29 ) }
    dend_9 { pt3dadd( 35.7276, 133.95, 12.7594, 0.22 ) }
    dend_9 { pt3dadd( 35.7624, 134.739, 12.7348, 0.22 ) }
    dend_9 { pt3dadd( 35.7668, 135.541, 12.7296, 0.22 ) }
    dend_9 { pt3dadd( 35.8037, 136.871, 12.6795, 0.22 ) }
    dend_9 { pt3dadd( 35.8066, 137.579, 12.6408, 0.22 ) }
    dend_9 { pt3dadd( 35.7969, 139.782, 12.4482, 0.22 ) }
    dend_9 { pt3dadd( 35.8067, 141.139, 12.2858, 0.22 ) }
    dend_9 { pt3dadd( 35.7815, 142.387, 12.1125, 0.22 ) }
    dend_9 { pt3dadd( 35.7245, 143.75, 11.9068, 0.22 ) }
    dend_9 { pt3dadd( 35.6652, 145.167, 11.6793, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_9 { pt3dadd( 35.6084, 147.702, 11.2595, 0.22 ) }
    dend_9 { pt3dadd( 35.6382, 148.883, 11.0616, 0.22 ) }
    dend_9 { pt3dadd( 35.6847, 150.057, 10.8688, 0.22 ) }
    dend_9 { pt3dadd( 35.7334, 151.133, 10.7021, 0.22 ) }
    dend_9 { pt3dadd( 35.7939, 152.939, 10.5008, 0.29 ) }
    dend_9 { pt3dadd( 35.8375, 153.447, 10.4512, 0.44 ) }
    dend_9 { pt3dadd( 35.9163, 154.469, 10.4056, 0.22 ) }
    dend_9 { pt3dadd( 35.9801, 155.024, 10.3728, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 8/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 35.4668, 132.194, 12.8597, 0.29 ) }
    dend_8 { pt3dadd( 34.7311, 133.651, 13.8446, 0.29 ) }
    dend_8 { pt3dadd( 34.2752, 134.455, 14.4284, 0.29 ) }
    dend_8 { pt3dadd( 33.549, 135.82, 15.4297, 0.29 ) }
    dend_8 { pt3dadd( 32.6987, 137.583, 16.7145, 0.37 ) }
    dend_8 { pt3dadd( 32.337, 138.467, 17.3352, 0.37 ) }
    dend_8 { pt3dadd( 31.8489, 139.801, 18.2539, 0.37 ) }
    dend_8 { pt3dadd( 31.3332, 141.391, 19.2812, 0.37 ) }
    dend_8 { pt3dadd( 30.973, 142.182, 19.7515, 0.37 ) }
    dend_8 { pt3dadd( 30.6965, 142.685, 20.0445, 0.37 ) }
    dend_8 { pt3dadd( 30.2716, 143.522, 20.5698, 0.37 ) }
    dend_8 { pt3dadd( 29.8819, 144.423, 21.2437, 0.37 ) }
    dend_8 { pt3dadd( 29.3932, 145.549, 22.1549, 0.37 ) }
    dend_8 { pt3dadd( 28.2693, 147.815, 23.9532, 0.37 ) }
    dend_8 { pt3dadd( 27.5367, 149.089, 25.0458, 0.37 ) }
    dend_8 { pt3dadd( 26.9589, 150.099, 25.8701, 0.37 ) }
    dend_8 { pt3dadd( 26.3085, 151.226, 26.8243, 0.37 ) }
    dend_8 { pt3dadd( 26.0329, 151.791, 27.3039, 0.37 ) }
    dend_8 { pt3dadd( 25.8507, 152.317, 27.7567, 0.37 ) }
    dend_8 { pt3dadd( 25.6345, 153.2, 28.5494, 0.37 ) }
    dend_8 { pt3dadd( 24.8679, 154.962, 29.8792, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 29/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 54.0594, 328.941, -61.7371, 0.59 ) }
    dend_15 { pt3dadd( 54.2272, 331.028, -61.6501, 0.59 ) }
    dend_15 { pt3dadd( 54.363, 332.306, -61.6123, 0.59 ) }
    dend_15 { pt3dadd( 54.5159, 333.439, -61.5875, 0.59 ) }
    dend_15 { pt3dadd( 54.6585, 334.438, -61.5698, 0.59 ) }
    dend_15 { pt3dadd( 54.9379, 336.663, -61.5373, 0.81 ) }
    dend_15 { pt3dadd( 55.1635, 338.525, -61.5145, 0.81 ) }
    dend_15 { pt3dadd( 55.3357, 339.69, -61.5316, 0.52 ) }
    dend_15 { pt3dadd( 55.5759, 341.369, -61.5316, 0.52 ) }
    dend_15 { pt3dadd( 55.6801, 342.28, -61.5316, 0.96 ) }
    dend_15 { pt3dadd( 55.8134, 343.938, -61.5316, 0.74 ) }
    dend_15 { pt3dadd( 55.8792, 345.152, -61.5316, 0.74 ) }
    dend_15 { pt3dadd( 55.9287, 346.326, -61.553, 0.74 ) }
    dend_15 { pt3dadd( 55.9593, 347.685, -61.6005, 0.74 ) }
    dend_15 { pt3dadd( 55.9658, 348.976, -61.6639, 0.52 ) }
    dend_15 { pt3dadd( 55.9946, 350.052, -61.7429, 0.74 ) }
    dend_15 { pt3dadd( 56.0264, 350.623, -61.8156, 0.66 ) }
    dend_15 { pt3dadd( 56.0987, 351.836, -62.0191, 0.44 ) }
    dend_15 { pt3dadd( 56.1944, 353.432, -62.3663, 0.44 ) }
    dend_15 { pt3dadd( 56.2504, 354.539, -62.6457, 0.59 ) }
    dend_15 { pt3dadd( 56.3087, 356.023, -63.0487, 1.03 ) }
    dend_15 { pt3dadd( 56.3333, 357.412, -63.4384, 0.81 ) }
    dend_15 { pt3dadd( 56.3526, 358.243, -63.6647, 0.59 ) }
    dend_15 { pt3dadd( 56.3677, 359.058, -63.8674, 0.44 ) }
    dend_15 { pt3dadd( 56.3752, 360.334, -64.2113, 0.44 ) }
    dend_15 { pt3dadd( 56.3328, 361.102, -64.4093, 0.44 ) }
    dend_15 { pt3dadd( 56.211, 362.117, -64.6273, 0.59 ) }
    dend_15 { pt3dadd( 56.0463, 363.142, -64.8306, 0.88 ) }
    dend_15 { pt3dadd( 55.88, 364.113, -65.0264, 0.88 ) }
    dend_15 { pt3dadd( 55.7118, 365.111, -65.2181, 0.44 ) }
    dend_15 { pt3dadd( 55.4839, 366.461, -65.4806, 0.44 ) }
    dend_15 { pt3dadd( 55.3063, 367.499, -65.6688, 0.44 ) }
    dend_15 { pt3dadd( 55.0684, 368.958, -65.9535, 0.74 ) }
    dend_15 { pt3dadd( 54.932, 369.937, -66.1501, 0.96 ) }
    dend_15 { pt3dadd( 54.8651, 370.582, -66.2705, 1.18 ) }
    dend_15 { pt3dadd( 54.8159, 371.72, -66.4463, 0.59 ) }
    dend_15 { pt3dadd( 54.8311, 372.783, -66.6003, 0.44 ) }
    dend_15 { pt3dadd( 54.8948, 374.071, -66.8446, 0.52 ) }
    dend_15 { pt3dadd( 54.9804, 375.058, -67.1058, 0.74 ) }
    dend_15 { pt3dadd( 55.1109, 376.506, -67.5663, 0.59 ) }
    dend_15 { pt3dadd( 55.2807, 378.02, -68.0888, 0.37 ) }
    dend_15 { pt3dadd( 55.4436, 379.15, -68.4996, 0.37 ) }
    dend_15 { pt3dadd( 55.8841, 381.861, -69.5699, 0.96 ) }
    dend_15 { pt3dadd( 56.2228, 383.715, -70.3133, 0.52 ) }
    dend_15 { pt3dadd( 56.4391, 384.957, -70.8376, 0.52 ) }
    dend_15 { pt3dadd( 56.6193, 386.047, -71.3479, 0.52 ) }
    dend_15 { pt3dadd( 56.7132, 386.733, -71.6823, 0.52 ) }
    dend_15 { pt3dadd( 56.962, 388.508, -72.5195, 0.74 ) }
    dend_15 { pt3dadd( 57.1101, 389.638, -72.9821, 0.74 ) }
    dend_15 { pt3dadd( 57.3324, 391.339, -73.6352, 0.66 ) }
    dend_15 { pt3dadd( 57.5224, 392.806, -74.2275, 0.37 ) }
    dend_15 { pt3dadd( 57.5647, 393.498, -74.5142, 0.37 ) }
    dend_15 { pt3dadd( 57.5589, 394.443, -74.8915, 0.74 ) }
    dend_15 { pt3dadd( 57.5119, 395.184, -75.1684, 0.44 ) }
    dend_15 { pt3dadd( 57.3514, 396.564, -75.6641, 0.44 ) }
    dend_15 { pt3dadd( 57.2712, 397.188, -75.8577, 0.96 ) }
    dend_15 { pt3dadd( 57.0322, 399.074, -76.3822, 1.03 ) }
    dend_15 { pt3dadd( 56.943, 400.04, -76.648, 0.59 ) }
    dend_15 { pt3dadd( 56.8628, 401.473, -77.0575, 0.37 ) }
    dend_15 { pt3dadd( 56.8728, 402.855, -77.4446, 0.37 ) }
    dend_15 { pt3dadd( 56.9751, 404.088, -77.7573, 0.37 ) }
    dend_15 { pt3dadd( 57.2279, 405.51, -78.1374, 0.37 ) }
    dend_15 { pt3dadd( 57.6036, 406.837, -78.4926, 0.37 ) }
    dend_15 { pt3dadd( 57.9202, 407.756, -78.7497, 0.52 ) }
    dend_15 { pt3dadd( 58.2306, 408.567, -78.9803, 1.18 ) }
    dend_15 { pt3dadd( 58.6437, 409.612, -79.2889, 1.18 ) }
    dend_15 { pt3dadd( 59.0946, 410.77, -79.6138, 0.29 ) }
    dend_15 { pt3dadd( 59.3794, 411.543, -79.7949, 0.29 ) }
    dend_15 { pt3dadd( 59.5213, 411.963, -79.8898, 0.59 ) }
    dend_15 { pt3dadd( 59.6369, 412.302, -79.9527, 0.37 ) }
    dend_15 { pt3dadd( 60.0115, 413.346, -80.1404, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_15 { pt3dadd( 60.2801, 414.046, -80.2349, 0.52 ) }
    dend_15 { pt3dadd( 60.5194, 414.617, -80.2349, 0.37 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 2/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 54.0594, 328.941, -61.7371, 0.29 ) }
    dend_14 { pt3dadd( 55.0698, 329.374, -61.4721, 0.29 ) }
    dend_14 { pt3dadd( 55.9416, 329.769, -61.2941, 0.29 ) }
    dend_14 { pt3dadd( 56.1367, 329.864, -61.2603, 0.37 ) }
    dend_14 { pt3dadd( 56.4582, 330.038, -61.2104, 0.22 ) }
    dend_14 { pt3dadd( 56.8385, 330.252, -61.1598, 0.22 ) }
    dend_14 { pt3dadd( 57.2963, 330.517, -61.109, 0.22 ) }
    dend_14 { pt3dadd( 57.7488, 330.777, -61.109, 0.22 ) }
    dend_14 { pt3dadd( 57.9693, 330.91, -61.109, 0.44 ) }
    dend_14 { pt3dadd( 58.2246, 331.052, -61.0972, 0.15 ) }
    dend_14 { pt3dadd( 58.657, 331.321, -61.0617, 0.15 ) }
    dend_14 { pt3dadd( 59.1422, 331.66, -61.0091, 0.44 ) }
    dend_14 { pt3dadd( 59.3638, 331.829, -60.9331, 0.44 ) }
    dend_14 { pt3dadd( 59.4762, 331.912, -60.8802, 0.22 ) }
    dend_14 { pt3dadd( 60.2422, 332.487, -60.4842, 0.22 ) }
    dend_14 { pt3dadd( 60.7256, 332.865, -60.2178, 0.44 ) }
    dend_14 { pt3dadd( 61.2031, 333.275, -59.9602, 0.22 ) }
    dend_14 { pt3dadd( 62.3917, 334.33, -59.2789, 0.22 ) }
    dend_14 { pt3dadd( 62.9342, 334.829, -58.9574, 0.22 ) }
    dend_14 { pt3dadd( 63.5468, 335.407, -58.5878, 0.22 ) }
    dend_14 { pt3dadd( 63.7246, 335.58, -58.48, 0.44 ) }
    dend_14 { pt3dadd( 64.6837, 336.413, -57.9377, 0.59 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 24/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 60.5194, 414.617, -80.2349, 1.11 ) }
    dend_19 { pt3dadd( 60.4494, 416.578, -81.7499, 1.11 ) }
    dend_19 { pt3dadd( 60.5237, 417.706, -82.5365, 0.66 ) }
    dend_19 { pt3dadd( 60.662, 418.817, -83.2056, 0.44 ) }
    dend_19 { pt3dadd( 60.7455, 419.329, -83.5005, 0.29 ) }
    dend_19 { pt3dadd( 60.9172, 420.448, -84.0886, 0.37 ) }
    dend_19 { pt3dadd( 61.0087, 421.19, -84.4457, 0.15 ) }
    dend_19 { pt3dadd( 61.1258, 421.982, -84.7556, 0.15 ) }
    dend_19 { pt3dadd( 61.2467, 422.917, -85.1172, 0.15 ) }
    dend_19 { pt3dadd( 61.3403, 423.915, -85.444, 0.81 ) }
    dend_19 { pt3dadd( 61.398, 425.03, -85.8179, 1.11 ) }
    dend_19 { pt3dadd( 61.4021, 425.842, -86.0968, 0.52 ) }
    dend_19 { pt3dadd( 61.3877, 427.04, -86.5264, 0.52 ) }
    dend_19 { pt3dadd( 61.3821, 427.587, -86.7171, 0.74 ) }
    dend_19 { pt3dadd( 61.408, 428.825, -87.1133, 0.37 ) }
    dend_19 { pt3dadd( 61.455, 429.95, -87.4621, 0.22 ) }
    dend_19 { pt3dadd( 61.5348, 431.323, -87.929, 0.22 ) }
    dend_19 { pt3dadd( 61.5842, 432.386, -88.2981, 0.22 ) }
    dend_19 { pt3dadd( 61.6087, 433.424, -88.6334, 0.22 ) }
    dend_19 { pt3dadd( 61.6182, 434.485, -88.9724, 0.22 ) }
    dend_19 { pt3dadd( 61.6186, 435.527, -89.2868, 1.18 ) }
    dend_19 { pt3dadd( 61.5896, 437.34, -89.763, 0.29 ) }
    dend_19 { pt3dadd( 61.5659, 438.224, -89.9926, 0.22 ) }
    dend_19 { pt3dadd( 61.5249, 439.633, -90.3634, 0.22 ) }
    dend_19 { pt3dadd( 61.5081, 440.325, -90.5357, 0.22 ) }
    dend_19 { pt3dadd( 61.4879, 441.383, -90.7956, 0.88 ) }
    dend_19 { pt3dadd( 61.4901, 442.083, -90.9475, 0.37 ) }
    dend_19 { pt3dadd( 61.5166, 443.564, -91.253, 0.15 ) }
    dend_19 { pt3dadd( 61.5273, 444.458, -91.4689, 0.15 ) }
    dend_19 { pt3dadd( 61.5148, 445.224, -91.677, 0.74 ) }
    dend_19 { pt3dadd( 61.4608, 446.545, -92.0472, 0.88 ) }
    dend_19 { pt3dadd( 61.4302, 447.034, -92.2191, 0.37 ) }
    dend_19 { pt3dadd( 61.3685, 447.958, -92.5761, 0.37 ) }
    dend_19 { pt3dadd( 61.2813, 449.121, -93.0402, 0.88 ) }
    dend_19 { pt3dadd( 61.2241, 449.854, -93.3104, 1.33 ) }
    dend_19 { pt3dadd( 61.1982, 450.405, -93.4882, 0.81 ) }
    dend_19 { pt3dadd( 61.2118, 452.291, -93.9628, 0.29 ) }
    dend_19 { pt3dadd( 61.2545, 453.203, -94.1461, 0.29 ) }
    dend_19 { pt3dadd( 61.3081, 453.703, -94.2202, 0.88 ) }
    dend_19 { pt3dadd( 61.5604, 455.069, -94.323, 0.37 ) }
    dend_19 { pt3dadd( 61.7051, 455.766, -94.3502, 0.29 ) }
    dend_19 { pt3dadd( 61.8912, 456.656, -94.3451, 0.29 ) }
    dend_19 { pt3dadd( 62.0721, 457.647, -94.2896, 0.29 ) }
    dend_19 { pt3dadd( 62.1956, 458.459, -94.2678, 0.29 ) }
    dend_19 { pt3dadd( 62.3395, 459.638, -94.2722, 0.29 ) }
    dend_19 { pt3dadd( 62.448, 460.747, -94.3169, 1.11 ) }
    dend_19 { pt3dadd( 62.5379, 461.806, -94.3733, 0.59 ) }
    dend_19 { pt3dadd( 62.6286, 462.896, -94.4786, 0.29 ) }
    dend_19 { pt3dadd( 62.7146, 463.741, -94.6075, 0.29 ) }
    dend_19 { pt3dadd( 62.7698, 464.333, -94.7357, 0.29 ) }
    dend_19 { pt3dadd( 62.8321, 465.172, -94.9636, 0.29 ) }
    dend_19 { pt3dadd( 62.9284, 466.678, -95.4718, 1.18 ) }
    dend_19 { pt3dadd( 62.9713, 467.775, -95.9023, 1.4 ) }
    dend_19 { pt3dadd( 62.9898, 468.98, -96.4059, 0.29 ) }
    dend_19 { pt3dadd( 62.9637, 469.918, -96.8196, 0.29 ) }
    dend_19 { pt3dadd( 62.9098, 470.753, -97.2029, 0.29 ) }
    dend_19 { pt3dadd( 62.7894, 471.77, -97.6845, 0.74 ) }
    dend_19 { pt3dadd( 62.7137, 472.168, -97.8672, 0.96 ) }
    dend_19 { pt3dadd( 62.488, 473.138, -98.2536, 0.37 ) }
    dend_19 { pt3dadd( 62.1798, 474.3, -98.6769, 0.59 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 84/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 60.5194, 414.617, -80.2349, 0.15 ) }
    dend_16 { pt3dadd( 61.13, 415.566, -80.2007, 0.15 ) }
    dend_16 { pt3dadd( 61.7502, 416.427, -80.1745, 0.15 ) }
    dend_16 { pt3dadd( 62.2, 416.995, -80.1598, 0.59 ) }
    dend_16 { pt3dadd( 62.7112, 417.595, -80.1466, 0.15 ) }
    dend_16 { pt3dadd( 63.4805, 418.48, -80.1294, 0.15 ) }
    dend_16 { pt3dadd( 63.9315, 418.999, -80.1194, 0.59 ) }
    dend_16 { pt3dadd( 64.7384, 419.848, -80.1098, 0.59 ) }
    dend_16 { pt3dadd( 65.4771, 420.579, -80.1022, 0.15 ) }
    dend_16 { pt3dadd( 66.2644, 421.336, -80.0965, 0.15 ) }
    dend_16 { pt3dadd( 66.618, 421.672, -80.0965, 0.44 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 95/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 62.1798, 474.3, -98.6769, 0.07 ) }
    dend_21 { pt3dadd( 62.0327, 475.559, -99.04, 0.07 ) }
    dend_21 { pt3dadd( 61.9153, 476.927, -99.4158, 0.07 ) }
    dend_21 { pt3dadd( 61.8812, 477.486, -99.5605, 1.25 ) }
    dend_21 { pt3dadd( 61.8463, 478.555, -99.8624, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_21 { pt3dadd( 61.736, 480.515, -100.407, 0.22 ) }
    dend_21 { pt3dadd( 61.6967, 481.074, -100.554, 0.22 ) }
    dend_21 { pt3dadd( 61.6767, 481.508, -100.653, 0.88 ) }
    dend_21 { pt3dadd( 61.6747, 482.022, -100.768, 0.15 ) }
    dend_21 { pt3dadd( 61.7026, 483.951, -101.197, 0.15 ) }
    dend_21 { pt3dadd( 61.7249, 485.303, -101.476, 0.15 ) }
    dend_21 { pt3dadd( 61.7435, 486.297, -101.648, 0.15 ) }
    dend_21 { pt3dadd( 61.7573, 487.12, -101.779, 0.88 ) }
    dend_21 { pt3dadd( 61.7614, 487.949, -101.898, 0.22 ) }
    dend_21 { pt3dadd( 61.732, 489.858, -102.124, 0.22 ) }
    dend_21 { pt3dadd( 61.6577, 491.065, -102.241, 0.22 ) }
    dend_21 { pt3dadd( 61.5776, 492.045, -102.342, 0.22 ) }
    dend_21 { pt3dadd( 61.4539, 493.112, -102.454, 0.96 ) }
    dend_21 { pt3dadd( 61.3625, 493.845, -102.544, 1.4 ) }
    dend_21 { pt3dadd( 61.2663, 494.835, -102.675, 0.15 ) }
    dend_21 { pt3dadd( 61.097, 497.082, -103.013, 0.15 ) }
    dend_21 { pt3dadd( 61.0718, 497.831, -103.152, 0.66 ) }
    dend_21 { pt3dadd( 61.0656, 498.437, -103.286, 0.29 ) }
    dend_21 { pt3dadd( 61.0805, 499.842, -103.673, 0.29 ) }
    dend_21 { pt3dadd( 61.1085, 501.014, -104.033, 0.29 ) }
    dend_21 { pt3dadd( 61.1221, 501.667, -104.243, 0.59 ) }
    dend_21 { pt3dadd( 61.1237, 502.229, -104.426, 0.07 ) }
    dend_21 { pt3dadd( 61.0147, 504.348, -105.096, 0.07 ) }
    dend_21 { pt3dadd( 60.8898, 505.759, -105.458, 1.18 ) }
    dend_21 { pt3dadd( 60.7982, 506.533, -105.606, 0.37 ) }
    dend_21 { pt3dadd( 60.6936, 507.396, -105.738, 0.37 ) }
    dend_21 { pt3dadd( 60.6675, 507.617, -105.762, 0.74 ) }
    dend_21 { pt3dadd( 60.604, 508.189, -105.788, 0.22 ) }
    dend_21 { pt3dadd( 60.2847, 511.118, -105.722, 0.15 ) }
    dend_21 { pt3dadd( 60.1561, 512.23, -105.644, 1.11 ) }
    dend_21 { pt3dadd( 60.0778, 513.008, -105.581, 0.07 ) }
    dend_21 { pt3dadd( 59.985, 514.256, -105.472, 0.07 ) }
    dend_21 { pt3dadd( 59.9229, 515.388, -105.373, 0.37 ) }
    dend_21 { pt3dadd( 59.9058, 516.171, -105.266, 0.59 ) }
    dend_21 { pt3dadd( 59.9171, 516.804, -105.146, 0.15 ) }
    dend_21 { pt3dadd( 59.976, 517.701, -104.98, 0.15 ) }
    dend_21 { pt3dadd( 60.0725, 518.486, -104.851, 0.15 ) }
    dend_21 { pt3dadd( 60.402, 520.297, -104.605, 0.15 ) }
    dend_21 { pt3dadd( 60.6563, 521.635, -104.473, 0.37 ) }
    dend_21 { pt3dadd( 60.7935, 522.334, -104.412, 0.37 ) }
    dend_21 { pt3dadd( 61.0175, 523.494, -104.325, 0.07 ) }
    dend_21 { pt3dadd( 61.242, 524.719, -104.257, 0.07 ) }
    dend_21 { pt3dadd( 61.4287, 525.668, -104.228, 0.07 ) }
    dend_21 { pt3dadd( 61.6341, 526.636, -104.232, 0.07 ) }
    dend_21 { pt3dadd( 61.81, 527.439, -104.267, 0.07 ) }
    dend_21 { pt3dadd( 61.9065, 527.843, -104.277, 1.11 ) }
    dend_21 { pt3dadd( 62.2263, 529.068, -104.277, 0.66 ) }
    dend_21 { pt3dadd( 62.3994, 529.708, -104.277, 0.29 ) }
    dend_21 { pt3dadd( 62.6046, 530.465, -104.295, 0.29 ) }
    dend_21 { pt3dadd( 62.8144, 531.203, -104.327, 0.29 ) }
    dend_21 { pt3dadd( 62.9342, 531.639, -104.351, 0.07 ) }
    dend_21 { pt3dadd( 63.1108, 532.33, -104.396, 0.07 ) }
    dend_21 { pt3dadd( 63.3706, 533.475, -104.475, 0.07 ) }
    dend_21 { pt3dadd( 63.5524, 534.288, -104.53, 1.03 ) }
    dend_21 { pt3dadd( 63.863, 535.639, -104.578, 0.44 ) }
    dend_21 { pt3dadd( 63.9486, 536.061, -104.58, 0.15 ) }
    dend_21 { pt3dadd( 64.1477, 537.064, -104.555, 0.15 ) }
    dend_21 { pt3dadd( 64.3612, 538.115, -104.501, 0.66 ) }
    dend_21 { pt3dadd( 64.5752, 539.001, -104.43, 0.37 ) }
    dend_21 { pt3dadd( 64.7834, 539.757, -104.356, 0.15 ) }
    dend_21 { pt3dadd( 65.1574, 541.062, -104.238, 0.15 ) }
    dend_21 { pt3dadd( 65.3944, 541.823, -104.18, 0.15 ) }
    dend_21 { pt3dadd( 65.587, 542.409, -104.146, 0.66 ) }
    dend_21 { pt3dadd( 65.8674, 543.273, -104.119, 0.29 ) }
    dend_21 { pt3dadd( 66.0722, 543.95, -104.117, 0.22 ) }
    dend_21 { pt3dadd( 66.3729, 544.983, -104.148, 0.15 ) }
    dend_21 { pt3dadd( 66.5697, 545.621, -104.228, 0.74 ) }
    dend_21 { pt3dadd( 66.7866, 546.301, -104.368, 0.07 ) }
    dend_21 { pt3dadd( 67.2087, 547.564, -104.81, 0.07 ) }
    dend_21 { pt3dadd( 67.3295, 547.943, -105.01, 0.96 ) }
    dend_21 { pt3dadd( 67.5154, 548.539, -105.403, 0.07 ) }
    dend_21 { pt3dadd( 67.966, 550.161, -106.629, 0.07 ) }
    dend_21 { pt3dadd( 68.1255, 550.779, -107.182, 1.18 ) }
    dend_21 { pt3dadd( 68.4263, 551.902, -108.32, 0.22 ) }
    dend_21 { pt3dadd( 68.6266, 552.692, -109.226, 0.22 ) }
    dend_21 { pt3dadd( 68.7121, 553.055, -109.678, 0.22 ) }
    dend_21 { pt3dadd( 68.8256, 553.71, -110.449, 0.22 ) }
    dend_21 { pt3dadd( 68.9333, 554.66, -111.437, 0.59 ) }
    dend_21 { pt3dadd( 68.9679, 555.002, -111.816, 0.44 ) }
    dend_21 { pt3dadd( 69.1058, 555.942, -112.814, 0.88 ) }
    dend_21 { pt3dadd( 69.2579, 556.731, -113.654, 0.07 ) }
    dend_21 { pt3dadd( 69.4797, 557.814, -114.806, 0.07 ) }
    dend_21 { pt3dadd( 69.5969, 558.381, -115.402, 1.33 ) }
    dend_21 { pt3dadd( 69.8671, 559.882, -116.797, 0.07 ) }
    dend_21 { pt3dadd( 69.9842, 560.59, -117.417, 0.07 ) }
    dend_21 { pt3dadd( 70.0538, 561.007, -117.738, 0.59 ) }
    dend_21 { pt3dadd( 70.0893, 561.357, -117.974, 0.59 ) }
    dend_21 { pt3dadd( 70.1244, 562.037, -118.412, 0.07 ) }
    dend_21 { pt3dadd( 70.1135, 562.944, -118.88, 0.07 ) }
    dend_21 { pt3dadd( 70.0859, 563.422, -119.068, 0.88 ) }
    dend_21 { pt3dadd( 70.0574, 563.844, -119.223, 0.07 ) }
    dend_21 { pt3dadd( 69.9886, 565.784, -119.859, 0.07 ) }
    dend_21 { pt3dadd( 69.9878, 565.991, -119.92, 0.07 ) }
    dend_21 { pt3dadd( 70.0179, 566.719, -120.095, 1.33 ) }
    dend_21 { pt3dadd( 70.0525, 567.139, -120.185, 0.07 ) }
    dend_21 { pt3dadd( 70.4112, 569.495, -120.622, 0.07 ) }
    dend_21 { pt3dadd( 70.6018, 570.244, -120.745, 1.11 ) }
    dend_21 { pt3dadd( 70.8142, 570.834, -120.823, 0.22 ) }
    dend_21 { pt3dadd( 71.3006, 572.046, -120.98, 0.22 ) }
    dend_21 { pt3dadd( 71.4556, 572.399, -121.024, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_21 { pt3dadd( 71.827, 573.191, -121.109, 0.07 ) }
    dend_21 { pt3dadd( 72.4173, 574.383, -121.215, 0.07 ) }
    dend_21 { pt3dadd( 72.8154, 575.266, -121.31, 0.07 ) }
    dend_21 { pt3dadd( 72.8989, 575.472, -121.335, 0.44 ) }
    dend_21 { pt3dadd( 73.0698, 575.947, -121.4, 0.07 ) }
    dend_21 { pt3dadd( 73.3169, 576.764, -121.511, 0.07 ) }
    dend_21 { pt3dadd( 73.4412, 577.33, -121.585, 0.81 ) }
    dend_21 { pt3dadd( 73.5189, 577.768, -121.666, 0.22 ) }
    dend_21 { pt3dadd( 73.6196, 578.292, -121.803, 0.22 ) }
    dend_21 { pt3dadd( 73.6774, 578.572, -121.889, 0.74 ) }
    dend_21 { pt3dadd( 73.7431, 578.872, -121.994, 0.74 ) }
    dend_21 { pt3dadd( 73.8065, 579.162, -122.103, 0.15 ) }
    dend_21 { pt3dadd( 74.0437, 580.327, -122.663, 0.07 ) }
    dend_21 { pt3dadd( 74.1333, 580.902, -122.977, 0.07 ) }
    dend_21 { pt3dadd( 74.1493, 581.093, -123.077, 0.07 ) }
    dend_21 { pt3dadd( 74.1519, 581.361, -123.208, 0.66 ) }
    dend_21 { pt3dadd( 74.1339, 581.683, -123.352, 0.29 ) }
    dend_21 { pt3dadd( 73.9748, 582.918, -123.846, 0.29 ) }
    dend_21 { pt3dadd( 73.8405, 583.582, -124.078, 0.29 ) }
    dend_21 { pt3dadd( 73.6029, 584.642, -124.453, 0.29 ) }
    dend_21 { pt3dadd( 73.4884, 585.111, -124.634, 0.59 ) }
    dend_21 { pt3dadd( 73.4094, 585.386, -124.741, 0.52 ) }
    dend_21 { pt3dadd( 73.3035, 585.705, -124.86, 0.07 ) }
    dend_21 { pt3dadd( 73.023, 586.439, -125.1, 0.07 ) }
    dend_21 { pt3dadd( 72.8774, 586.806, -125.28, 0.07 ) }
    dend_21 { pt3dadd( 72.3671, 588.002, -125.983, 0.22 ) }
    dend_21 { pt3dadd( 72.1469, 588.5, -126.283, 0.66 ) }
    dend_21 { pt3dadd( 72.0338, 588.745, -126.429, 0.66 ) }
    dend_21 { pt3dadd( 71.8604, 589.099, -126.626, 0.15 ) }
    dend_21 { pt3dadd( 71.0441, 590.57, -127.448, 0.15 ) }
    dend_21 { pt3dadd( 70.5999, 591.337, -127.857, 0.15 ) }
    dend_21 { pt3dadd( 70.2692, 591.865, -128.133, 0.66 ) }
    dend_21 { pt3dadd( 70.0446, 592.215, -128.315, 0.07 ) }
    dend_21 { pt3dadd( 69.675, 592.791, -128.598, 0.07 ) }
    dend_21 { pt3dadd( 69.0722, 593.699, -129.032, 1.03 ) }
    dend_21 { pt3dadd( 68.5841, 594.425, -129.368, 0.37 ) }
    dend_21 { pt3dadd( 67.8917, 595.544, -130.003, 0.07 ) }
    dend_21 { pt3dadd( 67.6181, 596.015, -130.3, 0.74 ) }
    dend_21 { pt3dadd( 67.4698, 596.297, -130.482, 0.07 ) }
    dend_21 { pt3dadd( 66.9841, 597.372, -131.153, 0.07 ) }
    dend_21 { pt3dadd( 66.7056, 598.08, -131.549, 0.88 ) }
    dend_21 { pt3dadd( 66.3848, 599.051, -132.058, 0.88 ) }
    dend_21 { pt3dadd( 66.308, 599.364, -132.211, 0.07 ) }
    dend_21 { pt3dadd( 66.151, 600.131, -132.587, 0.07 ) }
    dend_21 { pt3dadd( 66.0116, 600.896, -132.944, 0.07 ) }
    dend_21 { pt3dadd( 65.9112, 601.572, -133.225, 0.07 ) }
    dend_21 { pt3dadd( 65.835, 602.014, -133.406, 0.52 ) }
    dend_21 { pt3dadd( 65.6122, 603.119, -133.856, 0.15 ) }
    dend_21 { pt3dadd( 65.321, 604.521, -134.533, 0.15 ) }
    dend_21 { pt3dadd( 65.2421, 604.889, -134.727, 0.96 ) }
    dend_21 { pt3dadd( 65.1873, 605.145, -134.865, 0.22 ) }
    dend_21 { pt3dadd( 64.9475, 606.34, -135.542, 0.22 ) }
    dend_21 { pt3dadd( 64.8572, 606.783, -135.792, 0.52 ) }
    dend_21 { pt3dadd( 64.477, 608.672, -136.818, 0.07 ) }
    dend_21 { pt3dadd( 64.3773, 609.165, -137.09, 0.88 ) }
    dend_21 { pt3dadd( 64.2912, 609.604, -137.341, 0.15 ) }
    dend_21 { pt3dadd( 64.1119, 610.607, -137.925, 0.15 ) }
    dend_21 { pt3dadd( 64.082, 610.845, -138.061, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 58/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 62.1798, 474.3, -98.6769, 0.07 ) }
    dend_20 { pt3dadd( 62.3194, 475.246, -99.0034, 0.07 ) }
    dend_20 { pt3dadd( 62.4186, 475.877, -99.2294, 0.07 ) }
    dend_20 { pt3dadd( 62.525, 476.497, -99.444, 0.81 ) }
    dend_20 { pt3dadd( 62.5834, 476.895, -99.602, 0.07 ) }
    dend_20 { pt3dadd( 62.7547, 478.159, -100.109, 0.07 ) }
    dend_20 { pt3dadd( 62.9198, 479.452, -100.617, 0.07 ) }
    dend_20 { pt3dadd( 62.9831, 479.962, -100.802, 0.88 ) }
    dend_20 { pt3dadd( 63.0426, 480.473, -100.991, 0.29 ) }
    dend_20 { pt3dadd( 63.3202, 482.843, -101.87, 0.29 ) }
    dend_20 { pt3dadd( 63.3848, 483.307, -102.046, 1.18 ) }
    dend_20 { pt3dadd( 63.4702, 483.844, -102.241, 0.44 ) }
    dend_20 { pt3dadd( 63.7015, 485.427, -102.721, 0.44 ) }
    dend_20 { pt3dadd( 63.7584, 485.84, -102.835, 0.66 ) }
    dend_20 { pt3dadd( 63.7922, 486.095, -102.893, 0.15 ) }
    dend_20 { pt3dadd( 64.0148, 487.837, -103.197, 0.15 ) }
    dend_20 { pt3dadd( 64.1101, 488.987, -103.362, 0.15 ) }
    dend_20 { pt3dadd( 64.1706, 490.333, -103.52, 0.15 ) }
    dend_20 { pt3dadd( 64.1792, 491.059, -103.585, 1.33 ) }
    dend_20 { pt3dadd( 64.1462, 492.489, -103.69, 0.37 ) }
    dend_20 { pt3dadd( 64.1146, 493.062, -103.72, 0.15 ) }
    dend_20 { pt3dadd( 63.8373, 495.972, -103.784, 0.15 ) }
    dend_20 { pt3dadd( 63.7722, 496.55, -103.797, 0.88 ) }
    dend_20 { pt3dadd( 63.7097, 497.055, -103.807, 0.07 ) }
    dend_20 { pt3dadd( 63.5771, 498.1, -103.886, 0.07 ) }
    dend_20 { pt3dadd( 63.5096, 498.816, -103.979, 0.07 ) }
    dend_20 { pt3dadd( 63.4871, 499.388, -104.083, 0.74 ) }
    dend_20 { pt3dadd( 63.5192, 500.096, -104.293, 0.07 ) }
    dend_20 { pt3dadd( 63.6155, 501.034, -104.618, 0.07 ) }
    dend_20 { pt3dadd( 63.8527, 502.63, -105.227, 0.88 ) }
    dend_20 { pt3dadd( 63.95, 503.285, -105.479, 0.88 ) }
    dend_20 { pt3dadd( 63.9879, 503.664, -105.629, 0.07 ) }
    dend_20 { pt3dadd( 64.0483, 504.68, -106.016, 0.07 ) }
    dend_20 { pt3dadd( 64.0538, 504.989, -106.116, 0.59 ) }
    dend_20 { pt3dadd( 64.0495, 505.471, -106.247, 0.07 ) }
    dend_20 { pt3dadd( 63.9882, 506.98, -106.533, 0.07 ) }
    dend_20 { pt3dadd( 63.9255, 507.664, -106.657, 0.81 ) }
    dend_20 { pt3dadd( 63.8448, 508.448, -106.776, 0.07 ) }
    dend_20 { pt3dadd( 63.708, 509.662, -106.921, 0.07 ) }
    dend_20 { pt3dadd( 63.6467, 510.12, -106.972, 0.74 ) }
    dend_20 { pt3dadd( 63.5476, 510.753, -107.055, 0.74 ) }
    dend_20 { pt3dadd( 63.4098, 511.532, -107.166, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_20 { pt3dadd( 63.1159, 512.85, -107.495, 0.22 ) }
    dend_20 { pt3dadd( 62.9326, 513.465, -107.719, 0.22 ) }
    dend_20 { pt3dadd( 62.7813, 513.92, -107.926, 0.22 ) }
    dend_20 { pt3dadd( 62.4348, 515.093, -108.468, 1.11 ) }
    dend_20 { pt3dadd( 62.3444, 515.43, -108.631, 1.03 ) }
    dend_20 { pt3dadd( 61.9192, 517.326, -109.552, 0.29 ) }
    dend_20 { pt3dadd( 61.7637, 518.225, -109.961, 0.29 ) }
    dend_20 { pt3dadd( 61.7328, 518.721, -110.147, 0.29 ) }
    dend_20 { pt3dadd( 61.7809, 520.532, -110.672, 0.29 ) }
    dend_20 { pt3dadd( 61.8107, 520.81, -110.726, 0.44 ) }
    dend_20 { pt3dadd( 61.9413, 521.521, -110.807, 0.29 ) }
    dend_20 { pt3dadd( 62.2054, 522.558, -110.819, 0.29 ) }
    dend_20 { pt3dadd( 62.6238, 523.811, -110.827, 0.29 ) }
    dend_20 { pt3dadd( 62.7815, 524.223, -110.827, 0.44 ) }
    dend_20 { pt3dadd( 62.9253, 524.554, -110.827, 0.07 ) }
    dend_20 { pt3dadd( 63.2723, 525.403, -110.831, 0.07 ) }
    dend_20 { pt3dadd( 63.3829, 525.69, -110.833, 0.22 ) }
    dend_20 { pt3dadd( 63.5321, 526.115, -110.837, 0.52 ) }
    dend_20 { pt3dadd( 63.7356, 526.732, -110.844, 1.62 ) }
    dend_20 { pt3dadd( 64.0472, 527.628, -110.853, 0.22 ) }
    dend_20 { pt3dadd( 64.3997, 528.639, -110.864, 0.22 ) }
    dend_20 { pt3dadd( 64.7318, 529.58, -110.874, 0.88 ) }
    dend_20 { pt3dadd( 64.9248, 530.092, -110.878, 0.29 ) }
    dend_20 { pt3dadd( 65.3139, 531.091, -110.886, 0.29 ) }
    dend_20 { pt3dadd( 65.6661, 531.951, -110.89, 0.74 ) }
    dend_20 { pt3dadd( 65.8494, 532.369, -110.892, 0.15 ) }
    dend_20 { pt3dadd( 66.1423, 533.018, -110.892, 0.15 ) }
    dend_20 { pt3dadd( 66.7115, 534.375, -110.892, 0.15 ) }
    dend_20 { pt3dadd( 66.8396, 534.715, -110.892, 0.15 ) }
    dend_20 { pt3dadd( 67.1276, 535.7, -110.892, 0.96 ) }
    dend_20 { pt3dadd( 67.2386, 536.203, -110.906, 0.59 ) }
    dend_20 { pt3dadd( 67.3051, 536.549, -110.923, 0.07 ) }
    dend_20 { pt3dadd( 67.3864, 537.04, -110.96, 0.07 ) }
    dend_20 { pt3dadd( 67.4788, 537.672, -111.048, 0.07 ) }
    dend_20 { pt3dadd( 67.6676, 538.716, -111.235, 0.07 ) }
    dend_20 { pt3dadd( 67.8036, 539.34, -111.363, 0.29 ) }
    dend_20 { pt3dadd( 67.965, 540.006, -111.506, 1.11 ) }
    dend_20 { pt3dadd( 68.1497, 540.68, -111.656, 0.15 ) }
    dend_20 { pt3dadd( 68.4294, 541.589, -111.863, 0.07 ) }
    dend_20 { pt3dadd( 68.7776, 542.53, -112.098, 0.07 ) }
    dend_20 { pt3dadd( 69.0683, 543.196, -112.264, 0.07 ) }
    dend_20 { pt3dadd( 69.2426, 543.584, -112.353, 0.07 ) }
    dend_20 { pt3dadd( 69.2682, 543.646, -112.37, 0.52 ) }
    dend_20 { pt3dadd( 69.2958, 543.717, -112.39, 0.07 ) }
    dend_20 { pt3dadd( 69.6984, 544.829, -112.693, 0.07 ) }
    dend_20 { pt3dadd( 69.9167, 545.417, -112.945, 0.07 ) }
    dend_20 { pt3dadd( 70.0418, 545.748, -113.102, 0.07 ) }
    dend_20 { pt3dadd( 70.3129, 546.435, -113.447, 0.07 ) }
    dend_20 { pt3dadd( 70.4807, 546.871, -113.673, 0.07 ) }
    dend_20 { pt3dadd( 70.5325, 547.014, -113.751, 0.22 ) }
    dend_20 { pt3dadd( 70.9456, 548.491, -114.661, 0.07 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 51/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 66.618, 421.672, -80.0965, 0.15 ) }
    dend_18 { pt3dadd( 66.9398, 423.324, -79.9134, 0.15 ) }
    dend_18 { pt3dadd( 67.2513, 424.748, -79.7745, 0.15 ) }
    dend_18 { pt3dadd( 67.4912, 425.739, -79.6883, 0.59 ) }
    dend_18 { pt3dadd( 67.6479, 426.392, -79.6371, 0.07 ) }
    dend_18 { pt3dadd( 68.0542, 428.168, -79.5115, 0.07 ) }
    dend_18 { pt3dadd( 68.199, 428.835, -79.4687, 0.81 ) }
    dend_18 { pt3dadd( 68.3254, 429.527, -79.4526, 0.44 ) }
    dend_18 { pt3dadd( 68.4335, 430.185, -79.4403, 0.44 ) }
    dend_18 { pt3dadd( 68.5137, 430.775, -79.4338, 0.44 ) }
    dend_18 { pt3dadd( 68.5984, 431.485, -79.4034, 0.74 ) }
    dend_18 { pt3dadd( 68.648, 432.047, -79.3549, 0.37 ) }
    dend_18 { pt3dadd( 68.7067, 433.242, -79.2183, 0.37 ) }
    dend_18 { pt3dadd( 68.7281, 433.754, -79.1485, 0.74 ) }
    dend_18 { pt3dadd( 68.7455, 434.171, -79.0901, 0.07 ) }
    dend_18 { pt3dadd( 68.8059, 435.257, -78.8871, 0.07 ) }
    dend_18 { pt3dadd( 68.8456, 435.861, -78.7626, 0.07 ) }
    dend_18 { pt3dadd( 68.8963, 436.564, -78.6043, 0.66 ) }
    dend_18 { pt3dadd( 68.9434, 437.139, -78.4626, 0.07 ) }
    dend_18 { pt3dadd( 69.0529, 438.663, -78.0915, 0.07 ) }
    dend_18 { pt3dadd( 69.0986, 439.541, -77.8996, 1.03 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 72/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 66.618, 421.672, -80.0965, 0.15 ) }
    dend_17 { pt3dadd( 67.6728, 422.073, -80.0428, 0.15 ) }
    dend_17 { pt3dadd( 68.7115, 422.527, -80.0096, 0.74 ) }
    dend_17 { pt3dadd( 69.0535, 422.68, -80.0001, 0.29 ) }
    dend_17 { pt3dadd( 70.2557, 423.228, -79.9705, 0.29 ) }
    dend_17 { pt3dadd( 71.1502, 423.637, -79.9484, 0.29 ) }
    dend_17 { pt3dadd( 71.5294, 423.81, -79.9391, 0.29 ) }
    dend_17 { pt3dadd( 72.5759, 424.337, -79.9868, 0.29 ) }
    dend_17 { pt3dadd( 73.0369, 424.582, -80.0069, 0.29 ) }
    dend_17 { pt3dadd( 73.4617, 424.818, -80.0197, 0.59 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_31, dend_28, dend_3, dend_0, dend_35, dend_32, dend_30, dend_29, dend_23, dend_4, dend_2, dend_1, dend_37, dend_36, dend_34, dend_33, dend_25, dend_24, dend_10, dend_5, dend_27, dend_26, dend_12, dend_11, dend_7, dend_6, dend_22, dend_13, dend_9, dend_8, dend_15, dend_14, dend_19, dend_16, dend_21, dend_20, dend_18, dend_17]}
    ModelViewParmSubset_2 = new SectionList()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_31, dend_28, dend_3, dend_0, dend_35, dend_32, dend_30, dend_29, dend_23, dend_4, dend_2, dend_1, dend_37, dend_36, dend_34, dend_33, dend_25, dend_24, dend_10, dend_5, dend_27, dend_26, dend_12, dend_11, dend_7, dend_6, dend_22, dend_13, dend_9, dend_8, dend_15, dend_14, dend_19, dend_16, dend_21, dend_20, dend_18, dend_17]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_30 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_37 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_36 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_34 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_33 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_25 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_24 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_10 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_5 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_26 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_11 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_7 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_22 OneSecGrp_SectionRef_30.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_13 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_15 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_19 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_20 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_3 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_31 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_23 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_35 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_2 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_6 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_9 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_14 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_17 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_18 OneSecGrp_SectionRef_40.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 3
    dend_30 nseg = 7
    dend_29 nseg = 3
    dend_37 nseg = 3
    dend_36 nseg = 5
    dend_34 nseg = 7
    dend_33 nseg = 3
    dend_25 nseg = 3
    dend_24 nseg = 3
    dend_10 nseg = 3
    dend_5 nseg = 3
    dend_27 nseg = 3
    dend_26 nseg = 7
    dend_12 nseg = 5
    dend_11 nseg = 3
    dend_7 nseg = 3
    dend_22 nseg = 3
    dend_13 nseg = 9
    dend_15 nseg = 5
    dend_19 nseg = 3
    dend_21 nseg = 7
    dend_20 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L6_LBC_e36a750de6_0_0


