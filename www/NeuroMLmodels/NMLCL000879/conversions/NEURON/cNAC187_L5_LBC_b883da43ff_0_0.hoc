// Cell: cNAC187_L5_LBC_b883da43ff_0_0
/*
{
  "id" : "cNAC187_L5_LBC_b883da43ff_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.24986, 8.66179, -0.266886, 1.81928", "-1.99773, 7.71094, -0.243919, 3.13771", "-1.74561, 6.7601, -0.220952, 4.2898", "-1.49349, 5.80925, -0.197985, 6.24218", "-1.24137, 4.8584, -0.175018, 7.75134", "-0.989246, 3.90756, -0.152051, 8.81916", "-0.737124, 2.95671, -0.129084, 9.30643", "-0.485002, 2.00586, -0.106117, 9.79367", "-0.23288, 1.05502, -0.0831497, 10.3575", "0.0192416, 0.104171, -0.0601827, 10.6175", "0.271364, -0.846675, -0.0372157, 10.6286", "0.523485, -1.79752, -0.0142487, 10.564", "0.775607, -2.74837, 0.00871831, 10.4925", "1.02773, -3.69921, 0.0316853, 10.2088", "1.27985, -4.65006, 0.0546523, 9.65193", "1.53197, -5.60091, 0.0776193, 9.00896", "1.7841, -6.55175, 0.100586, 8.08521", "2.03622, -7.5026, 0.123553, 6.83318", "2.28834, -8.45345, 0.14652, 5.15146", "2.54046, -9.40429, 0.169487, 3.38897", "2.79258, -10.3551, 0.192454, 2.13858" ]
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-4.45367, 0.250762, 4.43561, 0.96", "-5.05964, -0.361561, 5.28281, 0.96", "-5.53384, -0.741733, 5.88773, 0.88", "-7.07859, -1.78413, 7.6432, 0.81", "-7.74605, -2.20565, 8.32335, 0.74", "-8.79998, -2.89147, 9.32117, 0.66", "-9.44018, -3.33283, 10.0146, 0.59", "-9.96021, -3.74926, 10.6851, 0.81", "-10.3593, -4.05455, 11.2111, 0.81", "-11.1963, -4.58511, 12.3017, 0.59", "-11.9093, -4.98497, 13.2831, 1.33", "-13.6108, -5.84066, 15.7821, 1.55", "-14.8502, -6.43398, 17.7943, 0.74", "-15.2861, -6.60577, 18.5319, 0.59", "-15.8869, -6.79218, 19.5591, 1.03", "-16.1268, -6.83475, 19.966, 1.47", "-16.7913, -6.86374, 21.0667, 1.47", "-18.0923, -6.81977, 23.2586, 0.81", "-18.5603, -6.82714, 24.2176, 0.59", "-18.9995, -6.93182, 25.3298, 0.59", "-19.2806, -7.07977, 26.1252, 0.96", "-19.5442, -7.31225, 26.9723, 0.96", "-20.2594, -8.1666, 29.6326, 0.59", "-20.5704, -8.73866, 31.2453, 0.59", "-20.7304, -9.20477, 32.4932, 0.44", "-20.7993, -9.5205, 33.2744, 1.18", "-20.8491, -9.86878, 33.9561, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-1.51366, 8.37777, 1.68561, 3.24", "-1.51928, 8.98899, 1.79645, 3.24", "-1.53835, 11.0649, 2.17291, 2.58", "-1.55327, 12.6895, 2.46753, 2.36", "-1.56543, 14.0129, 2.70752, 2.36", "-1.57949, 15.5437, 2.98513, 2.36", "-1.58629, 16.2834, 3.11927, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "5.55634, -6.66873, 3.06561, 1.18", "5.81824, -6.76482, 3.30278, 1.18", "7.41832, -7.49413, 4.46375, 0.88", "8.29773, -7.89892, 4.96346, 1.11", "10.7449, -8.95871, 6.0649, 1.33", "11.964, -9.4467, 6.49547, 1.33", "13.3479, -9.98549, 6.98484, 1.25", "15.0193, -10.6195, 7.48937, 0.96", "16.3779, -11.1557, 7.79526, 0.96", "17.5103, -11.628, 7.97877, 1.25", "18.9018, -12.1675, 8.16745, 1.25", "20.8631, -12.8011, 8.54947, 1.47", "22.1718, -13.1427, 8.90273, 0.74", "23.1803, -13.3263, 9.30859, 0.74", "24.6655, -13.532, 10.0234, 0.59", "26.5877, -13.7711, 10.9848, 0.59", "27.3553, -13.8585, 11.3529, 0.81", "28.2378, -13.9571, 11.6966, 0.81", "30.303, -14.1145, 12.5683, 0.52", "31.0912, -14.1282, 12.913, 0.52", "32.3702, -14.0923, 13.4599, 0.52", "33.3669, -14.2103, 13.7614, 0.59", "34.9144, -14.6678, 14.0522, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.77634, -10.3018, 1.87561, 2.43", "1.77634, -10.3018, 1.87561, 2.43", "1.84093, -11.3892, 1.62195, 2.06", "1.93741, -13.0134, 1.24306, 1.33", "2.03214, -14.6083, 0.871033, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.79258, -10.3551, 0.192454, 0.59", "6.63706, -24.8541, 0.192454, 0.59", "10.4816, -39.353, 0.192454, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-1.58629, 16.2834, 3.11927, 2.06", "-1.34376, 16.9088, 4.06607, 2.06", "-0.822121, 18.2241, 5.8277, 1.92", "-0.313598, 19.5439, 7.44645, 1.47", "-0.0847755, 20.1763, 8.15019, 1.47", "0.277268, 21.2408, 9.22017, 1.25", "0.544759, 22.0273, 10.0107, 1.77", "0.81572, 22.8837, 10.822, 1.55", "1.15527, 23.9531, 11.6318, 1.62", "1.38188, 24.7152, 12.1076, 2.21", "1.61559, 25.5726, 12.5892, 2.65" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.58629, 16.2834, 3.11927, 0.59", "-3.41393, 16.3767, 3.3631, 0.59", "-4.39999, 16.3551, 3.52301, 0.59", "-5.26716, 16.2697, 3.61918, 0.59", "-7.07293, 16.0216, 3.67423, 0.52", "-8.29035, 15.8515, 3.65219, 0.81", "-9.23127, 15.7296, 3.61592, 1.18", "-9.93939, 15.6066, 3.58949, 1.18", "-11.6694, 15.2791, 3.49283, 0.66", "-13.1935, 15.0191, 3.4182, 0.66", "-14.1939, 14.881, 3.39861, 1.25", "-14.7565, 14.8218, 3.40981, 1.47", "-16.0261, 14.7309, 3.46352, 0.52", "-16.9412, 14.6914, 3.55472, 0.52", "-18.3771, 14.6611, 3.88689, 0.52", "-19.2551, 14.6232, 4.18748, 1.03", "-19.8738, 14.5672, 4.42542, 1.33" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "34.9144, -14.6678, 14.0522, 0.52", "34.866, -16.594, 13.7278, 0.52", "34.7118, -17.3818, 13.6059, 0.37", "34.1749, -19.1736, 13.2773, 0.37", "33.6798, -20.4417, 12.9043, 0.59", "33.3804, -21.1288, 12.6485, 0.22", "32.6735, -22.6402, 12.0686, 0.22", "32.1372, -23.6299, 11.6219, 0.22", "31.1708, -25.2248, 10.8553, 0.74", "29.6866, -27.3942, 9.78353, 0.29", "28.705, -28.8153, 9.05445, 0.07", "28.2487, -29.5315, 8.64787, 0.07" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "34.9144, -14.6678, 14.0522, 1.03", "36.158, -14.6486, 14.883, 1.03", "36.707, -14.6966, 15.0181, 0.52", "37.5772, -14.7041, 15.1151, 0.52", "39.3328, -14.6479, 15.2375, 0.37", "40.3349, -14.62, 15.2392, 0.37", "42.7576, -14.5648, 15.1434, 0.37", "49.0032, -14.5414, 14.4507, 0.37", "52.6533, -14.5592, 13.8722, 0.66", "53.6073, -14.5636, 13.6731, 0.66", "55.9109, -14.5618, 13.0079, 0.74", "56.9231, -14.5452, 12.6394, 0.74", "58.213, -14.5099, 12.0108, 0.37", "59.004, -14.4936, 11.5342, 0.37", "59.7719, -14.5299, 11.1256, 0.37", "60.5177, -14.5146, 10.8552, 0.81", "61.4848, -14.3851, 10.6995, 0.81", "62.241, -14.2588, 10.6384, 0.81", "63.4434, -14.1157, 10.6481, 0.37", "64.3304, -14.1218, 10.6919, 0.29", "65.3083, -14.2591, 10.7863, 0.29", "66.5044, -14.535, 10.9843, 0.44", "67.4, -14.7901, 11.2209, 0.44", "68.7856, -15.2237, 11.6634, 0.44", "70.0055, -15.6204, 12.0706, 0.88", "70.5267, -15.7659, 12.2669, 0.88", "71.7943, -15.9657, 12.8558, 0.52", "72.9562, -15.9141, 13.5181, 0.74", "73.9172, -15.6787, 14.0889, 0.81", "74.512, -15.4375, 14.4176, 0.81", "75.2686, -15.0728, 14.7938, 0.52", "76.2473, -14.5945, 15.2102, 0.52", "76.7504, -14.3747, 15.3804, 0.74", "77.5465, -14.1113, 15.5893, 0.74", "78.4077, -13.9404, 15.7871, 0.59", "79.2413, -13.8956, 15.9409, 0.59", "80.3084, -13.9752, 16.085, 0.66", "81.098, -14.1392, 16.1357, 0.88", "81.6241, -14.3118, 16.141, 0.88", "82.2351, -14.626, 16.1118, 0.52", "82.9714, -15.1719, 16.0367, 0.52", "83.4584, -15.691, 15.9457, 0.52", "84.1536, -16.7426, 15.7626, 0.44", "84.5772, -17.506, 15.5811, 0.44", "85.1088, -18.5634, 15.2602, 0.59", "85.3265, -19.0115, 15.089, 0.74", "85.6859, -19.6477, 14.7606, 0.52", "86.0433, -19.8735, 14.4763, 0.37", "87.3976, -19.7143, 13.6196, 0.52", "87.937, -19.6177, 13.3129, 0.52", "88.5858, -19.5146, 12.986, 0.52", "89.684, -19.391, 12.5013, 0.52", "90.7336, -19.2694, 12.0897, 0.52", "91.7695, -19.1548, 11.721, 0.66", "92.6274, -19.0931, 11.4652, 0.66", "93.497, -19.0335, 11.2071, 0.37", "94.3118, -18.9972, 10.9757, 0.37", "95.2135, -18.9936, 10.7448, 0.37", "95.8253, -19.0079, 10.5744, 0.66", "96.1376, -19.0271, 10.4684, 0.66", "96.5167, -19.0785, 10.2805, 0.66", "96.8875, -19.1716, 10.0385, 0.66", "97.4523, -19.3793, 9.61126, 0.37", "98.2191, -19.7378, 9.01421, 0.37", "99.0232, -20.0948, 8.44953, 0.37", "99.7139, -20.3491, 8.01808, 0.22", "100.384, -20.5483, 7.6719, 0.37", "100.938, -20.6358, 7.46444, 0.44", "101.493, -20.6176, 7.34375, 0.44", "102.692, -20.3815, 7.25977, 0.52", "103.082, -20.2678, 7.25871, 0.37", "103.697, -20.0577, 7.27645, 0.37", "104.296, -19.8556, 7.27258, 0.52", "104.719, -19.7072, 7.20735, 0.66", "105.061, -19.5875, 7.08645, 0.88", "105.299, -19.4928, 6.95604, 0.88", "105.609, -19.3489, 6.77124, 1.03", "106.001, -19.1361, 6.51664, 1.03", "106.603, -18.8106, 6.11299, 0.52", "107.321, -18.462, 5.6228, 0.29", "107.932, -18.2469, 5.24375, 0.66", "108.406, -18.1223, 4.96326, 0.81", "108.868, -18.0378, 4.70107, 0.81", "109.287, -17.98, 4.46945, 0.81", "109.969, -17.9174, 4.12352, 0.37", "111.277, -17.9029, 3.491, 0.37", "111.928, -17.9304, 3.20549, 0.44", "112.487, -17.945, 2.97296, 0.59", "113.004, -17.9261, 2.76723, 0.59", "113.765, -17.8343, 2.47919, 0.59", "114.466, -17.678, 2.23049, 0.52", "115.259, -17.4383, 1.95632, 0.74", "115.807, -17.2873, 1.79846, 0.74", "116.591, -17.1284, 1.55298, 0.37", "117.186, -17.0492, 1.34729, 0.44", "117.838, -16.9988, 1.10059, 0.66", "118.322, -16.9914, 0.910435, 0.74", "118.854, -17.0385, 0.709635, 0.74", "119.96, -17.2018, 0.287915, 0.59", "120.273, -17.2583, 0.161447, 0.59", "120.731, -17.3328, -0.0422087, 0.59", "121.183, -17.4088, -0.273886, 0.37", "121.883, -17.5013, -0.658569, 0.59", "122.493, -17.5558, -1.02334, 0.81", "122.956, -17.5731, -1.27738, 0.81", "123.667, -17.6034, -1.62466, 0.52", "124.459, -17.6129, -1.96526, 0.37", "125.006, -17.5969, -2.16414, 0.29", "125.42, -17.5651, -2.28006, 0.29", "126.359, -17.4083, -2.45964, 0.52", "127.297, -17.1779, -2.58638, 0.52", "127.927, -17.0203, -2.63775, 0.88", "128.439, -16.9211, -2.68551, 0.88", "128.83, -16.8838, -2.76228, 0.88", "129.677, -16.866, -3.02975, 0.37", "130.255, -16.8846, -3.31569, 0.37", "131.059, -16.9421, -3.8115, 0.37", "132.015, -17.065, -4.40695, 0.29", "132.737, -17.1972, -4.92427, 0.29", "133.18, -17.2694, -5.27142, 0.52", "133.405, -17.2985, -5.46672, 0.74", "133.788, -17.3219, -5.84024, 0.44", "134.556, -17.315, -6.59941, 0.37", "135.818, -17.2446, -7.78119, 0.44", "136.53, -17.2226, -8.44622, 0.44", "137.235, -17.2292, -9.14491, 1.03", "137.933, -17.2588, -9.88068, 1.47" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "2.03214, -14.6083, 0.871033, 1.18", "1.51558, -16.5214, 2.6562, 1.18", "1.19307, -17.3893, 3.43048, 1.18", "0.375034, -19.591, 5.39441, 1.18", "-0.208332, -21.161, 6.79495, 0.88", "-0.57138, -22.1381, 7.66655, 0.74", "-0.888106, -22.9905, 8.42694, 1.03", "-1.67891, -24.5667, 9.58488, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "2.03214, -14.6083, 0.871033, 0.96", "3.99699, -15.8012, -1.65801, 0.96", "5.52021, -16.9342, -3.55426, 0.96", "5.70949, -17.1013, -3.80553, 1.4", "8.07328, -19.284, -6.83531, 0.88", "8.57448, -19.7531, -7.42834, 0.88", "9.47128, -20.5833, -8.40501, 0.52", "10.6573, -21.6948, -9.53033, 0.52", "12.5912, -23.5565, -11.2521, 0.88", "14.9696, -25.9099, -13.2259, 0.52", "16.7867, -27.7177, -14.5738, 0.52", "17.9171, -28.7813, -15.3386, 0.52", "19.1559, -29.9448, -16.1209, 0.52", "20.1558, -30.9191, -16.7176, 0.52", "21.3794, -32.223, -17.3649, 0.88", "22.1533, -33.2299, -17.7888, 1.11", "23.5466, -35.4076, -18.6244, 0.44", "24.3703, -36.8268, -19.1616, 0.74", "24.9291, -37.8441, -19.512, 0.96", "25.4831, -38.8579, -19.8122, 0.96", "26.3785, -40.4409, -20.3037, 0.66", "26.8213, -41.1984, -20.569, 0.66", "27.9736, -43.0429, -21.2623, 0.44", "28.7635, -43.9771, -21.8103, 0.59", "29.7201, -44.8598, -22.4785, 0.44", "31.8853, -46.1971, -24.186, 0.37", "33.4534, -46.8407, -25.5614, 0.96", "34.0771, -47.0403, -26.144, 1.33", "38.1738, -48.1431, -30.3167, 0.81", "39.1912, -48.3964, -31.4228, 1.11", "43.9695, -49.5919, -36.916, 0.66", "47.5043, -50.5752, -41.2242, 1.55", "50.6308, -51.6418, -45.211, 0.96", "53.4112, -52.836, -48.9867, 0.81", "54.3649, -53.4011, -50.4004, 0.96", "55.1925, -54.1437, -51.7924, 0.37", "56.0005, -55.5307, -53.4702, 0.29", "56.4796, -57.2308, -54.8391, 0.29", "56.5969, -58.3005, -55.4299, 0.52", "56.6306, -58.9266, -55.6584, 0.52", "56.8591, -61.6339, -56.5817, 0.29", "56.9536, -62.3791, -56.8412, 0.59", "57.0613, -63.0525, -57.0693, 0.59", "57.2134, -63.9071, -57.3835, 0.29", "57.5719, -65.6406, -58.0935, 0.29", "57.9939, -67.3239, -58.8814, 0.59", "58.1499, -67.894, -59.1972, 0.81", "58.8661, -70.4853, -60.8004, 0.22", "59.2627, -71.7794, -61.6995, 0.22", "59.8685, -73.5669, -63.0536, 0.22", "60.6169, -75.6589, -64.7205, 0.81", "61.3418, -77.5264, -66.3347, 0.44", "61.7905, -78.5934, -67.3148, 0.44", "62.6008, -80.3769, -69.0414, 0.88", "63.1806, -81.6135, -70.1588, 0.74", "63.4194, -82.1297, -70.5886, 0.74", "64.4599, -84.7056, -72.5469, 0.44", "64.8578, -85.85, -73.3207, 0.44", "65.1188, -86.8068, -73.9612, 0.29", "65.3692, -88.2639, -74.8894, 0.29", "65.5688, -90.7104, -76.4502, 0.29", "65.5854, -92.1295, -77.345, 0.74", "65.5068, -93.3184, -78.034, 0.74", "65.279, -95.5858, -79.385, 0.44", "65.1446, -96.6303, -79.9919, 0.44", "64.9756, -97.7741, -80.5995, 0.29", "64.8896, -98.2714, -80.813, 0.66", "64.6474, -99.5923, -81.3451, 0.37", "64.4223, -100.671, -81.7468, 0.88", "64.1716, -101.652, -82.137, 0.88", "63.8058, -102.962, -82.761, 0.59", "63.4186, -104.22, -83.4387, 0.29", "63.0581, -105.45, -84.2894, 0.66", "62.9253, -105.995, -84.7626, 0.66", "62.771, -107.725, -86.5444, 0.22", "62.8225, -108.356, -87.2567, 0.22", "62.9153, -108.846, -87.8479, 0.74", "63.5136, -110.554, -89.9793, 0.44", "64.0398, -111.575, -91.2742, 0.44", "64.9589, -112.947, -93.0556, 0.29", "65.3299, -113.347, -93.5835, 0.44" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "10.4816, -39.353, 0.192454, 0.15", "14.326, -53.852, 0.192454, 0.15", "18.1705, -68.351, 0.192454, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "1.61559, 25.5726, 12.5892, 0.81", "3.00509, 26.543, 12.9497, 0.81", "3.61023, 26.949, 13.0468, 0.81", "4.71721, 27.6016, 13.1635, 0.81", "6.20788, 28.3868, 13.2887, 0.96", "6.99452, 28.7724, 13.347, 1.25", "7.68289, 29.092, 13.3973, 1.25", "8.96657, 29.6739, 13.4589, 0.96", "10.0343, 30.1654, 13.4914, 0.81", "11.0083, 30.6073, 13.5043, 1.33", "11.6519, 30.8845, 13.4835, 1.62", "12.6205, 31.2644, 13.4515, 0.74", "13.5033, 31.5785, 13.4353, 0.59", "14.3962, 31.9056, 13.4134, 0.52", "15.458, 32.35, 13.2897, 0.44", "16.1437, 32.6268, 13.1179, 0.44", "17.4328, 33.0432, 12.6177, 0.74", "18.2264, 33.2196, 12.2225, 0.74", "19.5327, 33.3553, 11.498, 0.52", "20.6442, 33.363, 10.8905, 0.88", "21.8028, 33.3333, 10.2335, 0.88", "22.825, 33.3837, 9.5886, 0.59", "23.3349, 33.4357, 9.24683, 0.59", "23.9413, 33.499, 8.86381, 0.44", "24.8307, 33.6115, 8.47621, 0.44", "25.5385, 33.7777, 8.29195, 0.44", "26.9661, 34.328, 8.14639, 0.44", "28.1307, 34.9398, 8.1149, 0.74", "29.1063, 35.6164, 8.13291, 0.96", "30.9169, 37.2169, 8.27253, 0.44", "31.3262, 37.6464, 8.32291, 0.96", "32.0411, 38.4846, 8.43921, 0.37", "32.7217, 39.4039, 8.57688, 0.37", "33.4386, 40.4805, 8.55344, 0.37", "33.988, 41.376, 8.38231, 0.74", "34.3884, 42.0223, 8.15135, 0.44", "34.8926, 42.8496, 7.81908, 0.52", "35.264, 43.493, 7.53455, 1.11", "36.3329, 45.4128, 6.66003, 0.44", "36.8741, 46.4469, 6.19834, 0.29", "37.3285, 47.4147, 5.76648, 0.29", "37.6355, 48.1388, 5.46518, 0.81", "37.887, 48.766, 5.22634, 0.81", "38.2653, 49.7185, 4.91456, 0.52", "38.7458, 50.9938, 4.57256, 0.52", "39.3021, 52.4752, 4.1155, 0.44", "39.4439, 52.8791, 3.97449, 0.88", "39.6902, 53.5462, 3.7192, 0.88", "40.0835, 54.4714, 3.36429, 0.37", "40.4656, 55.1562, 3.06123, 0.22", "40.8885, 55.8056, 2.7609, 0.22", "41.3592, 56.4458, 2.45826, 0.22", "42.0177, 57.2359, 2.06803, 0.22", "42.9266, 58.2666, 1.61676, 0.22", "44.2959, 59.7131, 1.08946, 0.81", "44.7254, 60.1342, 0.983264, 0.81", "45.5733, 60.9049, 0.857449, 0.81", "46.314, 61.5594, 0.809344, 0.44", "47.2829, 62.4269, 0.805954, 0.44", "47.6303, 62.7552, 0.834561, 0.96", "48.2327, 63.3538, 0.941864, 0.52", "48.9908, 64.0745, 1.08024, 0.37", "49.6583, 64.7128, 1.20782, 0.66", "50.2077, 65.2351, 1.28024, 0.66", "50.7773, 65.7828, 1.32127, 0.29", "51.6142, 66.5863, 1.38328, 0.29", "52.4285, 67.3597, 1.45381, 0.59", "52.9859, 67.8677, 1.51366, 0.37", "53.6695, 68.444, 1.58222, 0.66", "54.2382, 68.9033, 1.63809, 0.66", "55.2383, 69.706, 1.73974, 0.29", "55.9783, 70.3247, 1.82503, 0.29", "56.4515, 70.7213, 1.87771, 0.29", "56.8905, 71.0477, 1.91805, 0.66", "57.215, 71.2718, 1.94431, 0.66", "57.647, 71.5694, 1.93297, 0.66", "58.3803, 72.0881, 1.84736, 0.37", "59.2328, 72.6796, 1.6669, 0.37", "60.2741, 73.3573, 1.35137, 0.96", "60.8569, 73.6945, 1.15249, 0.96", "62.3635, 74.4707, 0.609472, 0.29", "63.3586, 74.9404, 0.226323, 0.29", "64.2719, 75.3647, -0.106025, 0.29", "65.5615, 75.9392, -0.48258, 0.29", "66.2469, 76.2239, -0.627374, 0.74", "66.8539, 76.4679, -0.71882, 0.74", "68.4214, 77.1276, -0.784456, 0.29", "70.2917, 78.01, -0.726995, 0.29", "72.2014, 79.0131, -0.50432, 0.29", "73.0869, 79.5392, -0.339097, 0.29", "73.8727, 80.0509, -0.163777, 0.29", "75.1312, 80.938, 0.208316, 0.66", "75.7457, 81.3526, 0.39828, 0.66", "76.5161, 81.7887, 0.595794, 0.37", "77.3392, 82.1842, 0.71142, 1.03", "78.1171, 82.4833, 0.765865, 1.03", "79.3543, 82.8522, 0.756189, 0.66", "81.8632, 83.4534, 0.531671, 0.22", "83.9953, 83.9113, 0.253931, 0.52", "85.8782, 84.3071, -0.058352, 0.29", "87.1429, 84.5767, -0.316901, 0.29", "88.3293, 84.8824, -0.608642, 0.66", "88.8492, 85.0685, -0.748036, 0.66", "89.8818, 85.6151, -0.887614, 0.22", "90.4925, 86.0189, -0.925403, 0.52", "90.9938, 86.3966, -0.915718, 0.52", "93.1434, 88.18, -0.698505, 0.22", "94.7282, 89.5443, -0.443406, 0.22", "97.0592, 91.587, 0.0230483, 0.22", "98.2602, 92.6638, 0.3035, 0.52", "98.9197, 93.2644, 0.489077, 0.22", "99.7594, 94.0598, 0.813791, 0.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "1.61559, 25.5726, 12.5892, 0.66", "1.26963, 27.6239, 12.7455, 0.66", "1.24513, 28.2612, 12.832, 0.74", "1.26726, 29.1016, 13.0058, 0.74", "1.33603, 29.9166, 13.0746, 1.03", "1.42102, 30.6919, 13.1083, 1.03", "1.52548, 31.6037, 13.1251, 0.74", "1.72288, 32.6685, 13.2233, 1.11", "1.94951, 33.613, 13.2741, 1.47", "2.5, 35.5417, 13.215, 1.62", "2.67604, 36.1363, 13.1358, 1.62", "2.77455, 36.5082, 13.0509, 1.62" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-19.8738, 14.5672, 4.42542, 0.29", "-20.2122, 14.8293, 5.63508, 0.29", "-20.535, 15.0296, 6.49248, 0.88", "-20.9002, 15.218, 7.35893, 1.11", "-22.2042, 15.8149, 10.2151, 1.03", "-22.6221, 15.976, 11.0867, 0.59", "-22.9494, 16.0913, 11.8019, 0.29", "-23.3509, 16.2374, 12.8161, 0.29", "-23.572, 16.3279, 13.3932, 0.52", "-23.7142, 16.3926, 13.7428, 0.74", "-24.0889, 16.5446, 14.4019, 0.74", "-24.8255, 16.8835, 15.7555, 0.37", "-25.1145, 17.0399, 16.3173, 0.59", "-25.3165, 17.1651, 16.6795, 0.59", "-25.7524, 17.4439, 17.3487, 0.29", "-26.371, 17.8341, 18.2044, 0.59", "-26.6795, 18.0047, 18.5435, 0.37", "-27.4606, 18.3452, 19.2125, 0.29", "-28.1872, 18.6097, 19.7623, 1.25", "-28.4952, 18.7018, 19.9672, 1.62", "-28.8489, 18.804, 20.1585, 1.62", "-29.9328, 19.1296, 20.6594, 0.29", "-30.6364, 19.3326, 20.9629, 0.29", "-31.4341, 19.5592, 21.2835, 0.52", "-31.8605, 19.6826, 21.4511, 0.59", "-33.154, 20.0659, 21.9463, 0.22", "-33.789, 20.2637, 22.1792, 0.74", "-34.3712, 20.464, 22.3993, 0.74", "-34.9894, 20.6851, 22.6322, 0.22", "-35.3854, 20.8265, 22.7815, 0.37", "-35.7688, 20.9745, 22.9248, 0.37" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-19.8738, 14.5672, 4.42542, 0.44", "-21.1378, 13.9525, 4.62763, 0.44", "-21.9983, 13.5102, 4.77914, 0.44", "-22.8072, 13.0887, 4.93388, 0.96", "-23.574, 12.6695, 5.06867, 1.25", "-24.6226, 12.0643, 5.26053, 0.74", "-25.3293, 11.6416, 5.40779, 0.59", "-26.0123, 11.2214, 5.54036, 0.59", "-26.6709, 10.8198, 5.63898, 0.59", "-27.7146, 10.2147, 5.74901, 0.44", "-29.1312, 9.44318, 5.84761, 0.81", "-30.9612, 8.52031, 5.84669, 0.81", "-31.874, 8.07162, 5.73845, 0.81", "-32.8178, 7.6096, 5.50728, 0.44", "-33.5544, 7.26949, 5.27416, 0.44", "-34.4937, 6.86952, 4.96883, 0.44", "-35.9985, 6.28827, 4.47171, 0.44", "-37.803, 5.67511, 3.92076, 0.88", "-39.1177, 5.27122, 3.62311, 0.88", "-40.3895, 4.91795, 3.44092, 0.52", "-42.3783, 4.45062, 3.32815, 0.52", "-43.0857, 4.31364, 3.34708, 0.52", "-44.2464, 4.12726, 3.55059, 0.88", "-45.0883, 4.00448, 3.80277, 0.88", "-45.9645, 3.85149, 4.12785, 1.18", "-46.7748, 3.6579, 4.4583, 1.18", "-47.9509, 3.25773, 5.03568, 0.74", "-49.104, 2.74688, 5.76502, 0.52", "-50.1876, 2.18229, 6.58001, 0.52", "-51.0156, 1.75162, 7.25158, 0.88", "-52.1372, 1.22116, 8.18375, 0.88", "-53.3584, 0.697287, 9.20465, 0.88", "-54.8118, 0.136954, 10.4057, 1.03", "-55.6042, -0.171667, 11.0239, 0.96", "-56.6549, -0.584149, 11.8223, 0.74", "-58.1139, -1.12403, 12.8554, 0.52", "-58.7318, -1.35067, 13.2349, 0.81", "-59.459, -1.63417, 13.5912, 0.81", "-60.6156, -2.16811, 14.067, 0.52", "-60.9901, -2.37749, 14.2213, 0.88", "-61.4419, -2.68416, 14.4093, 1.18", "-62.4714, -3.40529, 14.8492, 1.18", "-63.7464, -4.22759, 15.4077, 0.59", "-64.3284, -4.56787, 15.667, 0.74", "-65.0165, -4.92392, 15.9762, 0.74", "-65.963, -5.398, 16.4612, 0.44", "-66.6249, -5.73556, 16.8342, 0.44", "-67.2647, -6.08593, 17.2221, 0.74", "-67.9925, -6.50233, 17.6281, 0.74", "-68.6568, -6.89284, 18.0679, 0.74", "-70.0534, -7.72495, 19.1185, 0.29", "-70.9065, -8.27494, 19.8398, 0.37", "-71.7758, -8.89638, 20.6345, 0.37", "-72.8322, -9.6916, 21.6469, 0.37", "-74.7078, -11.1327, 23.3736, 0.74", "-75.3127, -11.6115, 23.8733, 1.03", "-76.598, -12.6882, 24.8746, 0.59", "-77.6664, -13.6299, 25.7383, 0.44", "-78.3436, -14.2348, 26.288, 0.88", "-79.2963, -15.0774, 27.0317, 0.74", "-80.2837, -15.8906, 27.614, 0.37", "-81.4755, -16.7295, 28.2789, 0.37", "-82.1144, -17.0566, 28.6014, 0.81", "-82.6574, -17.2312, 28.869, 1.03", "-83.1754, -17.3171, 29.1406, 1.03", "-83.8509, -17.3429, 29.5221, 0.66", "-84.8798, -17.3033, 30.0657, 0.37", "-85.8549, -17.2413, 30.493, 0.59", "-86.739, -17.1687, 30.8528, 0.59", "-87.5842, -17.0911, 31.2132, 0.37", "-88.5061, -17.0199, 31.6597, 0.66", "-89.2457, -16.9928, 31.9769, 0.88", "-89.5956, -16.9886, 32.0901, 0.88", "-91.318, -16.9483, 32.4797, 0.29", "-92.4092, -16.9297, 32.6191, 0.29", "-93.8942, -16.9176, 32.6574, 0.29", "-96.2241, -16.9456, 32.5275, 0.44", "-97.9461, -17.0522, 32.3296, 0.44", "-98.6529, -17.1537, 32.1971, 0.44", "-99.068, -17.2568, 32.0808, 0.59", "-99.8569, -17.4906, 31.831, 0.59", "-100.406, -17.666, 31.6779, 0.59", "-101.408, -18.0229, 31.5375, 0.37", "-102.242, -18.3569, 31.415, 0.37", "-102.995, -18.6649, 31.2817, 0.66", "-103.738, -18.9762, 31.0893, 0.66", "-104.458, -19.303, 30.8647, 0.66", "-105.798, -19.9527, 30.3786, 0.44", "-106.958, -20.5368, 29.9266, 0.66", "-107.643, -20.903, 29.6083, 0.66", "-109.382, -21.8456, 28.7194, 0.29", "-110.398, -22.3896, 28.197, 0.29", "-111.307, -22.8747, 27.7423, 0.66", "-111.964, -23.2096, 27.453, 0.88", "-114.3, -24.3082, 26.5598, 0.44", "-115.119, -24.6548, 26.2593, 0.29", "-116.343, -25.1053, 25.9246, 0.29", "-117.29, -25.4372, 25.7161, 0.66", "-118.173, -25.771, 25.5429, 0.66", "-118.811, -26.0528, 25.4731, 0.66", "-120.174, -26.7563, 25.2902, 0.37", "-121.604, -27.5241, 24.9466, 0.29", "-122.182, -27.8157, 24.7616, 0.29", "-123.737, -28.5114, 24.1387, 0.29", "-125.235, -29.0921, 23.4588, 1.25", "-128.513, -30.0863, 21.8854, 0.29", "-129.541, -30.324, 21.3571, 0.29", "-130.14, -30.4204, 21.0313, 0.59", "-131.363, -30.5463, 20.4004, 0.44", "-132.047, -30.5809, 20.0915, 0.22", "-132.821, -30.5903, 19.8005, 0.81", "-134.774, -30.573, 19.4764, 0.44", "-135.808, -30.5884, 19.4151, 0.59", "-136.393, -30.6113, 19.4283, 0.59", "-137.797, -30.6774, 19.663, 0.29", "-138.977, -30.7256, 20.0023, 0.59", "-139.64, -30.7396, 20.3216, 0.59", "-140.807, -30.7311, 21.1026, 0.29", "-141.688, -30.7097, 21.7978, 0.29", "-143.149, -30.6173, 23.1501, 0.74", "-143.796, -30.5462, 23.8446, 0.74", "-144.878, -30.3634, 25.0966, 0.37", "-145.662, -30.1484, 26.0389, 0.37", "-146.314, -29.8661, 26.8513, 0.44", "-147.051, -29.4284, 27.7213, 0.74", "-147.53, -29.0779, 28.2066, 0.74", "-148.094, -28.6021, 28.7117, 0.37", "-148.643, -28.0612, 29.1285, 0.59", "-149.272, -27.3334, 29.5856, 0.37", "-149.772, -26.722, 29.9092, 0.29", "-150.13, -26.2726, 30.1212, 0.52", "-150.609, -25.6973, 30.3938, 0.74", "-151.351, -24.892, 30.8101, 0.29", "-151.751, -24.5081, 31.0296, 0.74", "-152.329, -24.0217, 31.3309, 0.74", "-153.149, -23.4022, 31.716, 0.29", "-154.013, -22.8168, 32.079, 0.29", "-154.908, -22.3017, 32.397, 0.29", "-155.926, -21.7966, 32.7068, 0.29", "-156.963, -21.3336, 32.9549, 0.29", "-158.088, -20.8873, 33.1534, 0.96", "-158.642, -20.7021, 33.2255, 0.96", "-160.312, -20.2162, 33.3937, 0.29", "-160.792, -20.0976, 33.4315, 0.66", "-161.783, -19.8974, 33.5115, 0.66", "-162.876, -19.7161, 33.6292, 0.29", "-163.681, -19.6198, 33.7693, 0.29", "-164.183, -19.5709, 33.8677, 0.66", "-164.729, -19.5232, 33.9896, 0.88", "-165.602, -19.4496, 34.1982, 0.66", "-166.245, -19.3665, 34.3521, 0.15", "-167.165, -19.1901, 34.5594, 0.15", "-168.054, -18.9718, 34.7295, 0.15", "-168.784, -18.7544, 34.8519, 0.81", "-169.411, -18.5433, 34.9123, 1.03", "-171.094, -17.9745, 34.9996, 0.29", "-171.978, -17.6774, 35.0283, 0.81", "-172.663, -17.4392, 35.0245, 0.81", "-173.955, -17.0104, 35.0096, 0.29", "-175.301, -16.633, 34.9242, 0.29", "-176.289, -16.424, 34.8365, 0.29", "-177.503, -16.2709, 34.6872, 0.29", "-178.385, -16.2463, 34.4682, 1.18", "-179.199, -16.3204, 34.157, 1.18", "-180.458, -16.6134, 33.4608, 0.52", "-181.182, -16.8575, 32.9838, 0.88", "-181.864, -17.1419, 32.4434, 0.88", "-183.727, -18.0542, 30.7359, 0.44", "-184.591, -18.4863, 29.9209, 0.44", "-185.31, -18.8155, 29.214, 0.74", "-185.766, -18.9839, 28.7754, 0.74", "-186.953, -19.3248, 27.6861, 0.44", "-187.809, -19.5068, 27.007, 0.44", "-188.537, -19.5986, 26.5642, 0.88", "-189.264, -19.6583, 26.1922, 0.88", "-190.029, -19.7099, 25.846, 0.88", "-191.549, -19.8624, 25.1468, 0.52", "-192.847, -20.0621, 24.5552, 0.52", "-193.63, -20.2427, 24.2065, 0.59", "-194.444, -20.505, 23.8438, 0.44", "-195.299, -20.8302, 23.4885, 0.44", "-196.367, -21.2291, 23.0884, 0.44", "-197.422, -21.578, 22.7384, 0.88", "-198.11, -21.794, 22.5108, 0.88", "-199.014, -22.0695, 22.2023, 0.37", "-199.966, -22.3119, 21.8679, 0.37", "-201.33, -22.596, 21.4217, 0.59", "-203.041, -22.8578, 20.9336, 0.37", "-203.639, -22.9388, 20.7732, 0.74", "-204.689, -23.0441, 20.5042, 0.74", "-206.416, -23.1402, 20.1216, 0.37", "-207.065, -23.1689, 20.0112, 0.59", "-208.565, -23.2095, 19.848, 0.29", "-209.653, -23.2114, 19.8173, 0.29", "-210.632, -23.2454, 19.8406, 0.29", "-212.013, -23.3419, 19.9219, 0.59", "-212.467, -23.3909, 19.9678, 1.11", "-212.824, -23.4351, 20.0054, 1.4", "-213.911, -23.6362, 20.1402, 0.81", "-215.044, -23.898, 20.2746, 0.37", "-216.075, -24.2288, 20.3887, 0.22", "-216.837, -24.5332, 20.4757, 0.22", "-218.095, -25.1227, 20.5794, 0.22", "-219.484, -25.8834, 20.6501, 0.22", "-219.76, -26.0579, 20.6545, 0.44", "-220.25, -26.4118, 20.6447, 0.44", "-220.764, -26.8432, 20.5846, 0.22", "-221.649, -27.6514, 20.3655, 0.44", "-222.067, -28.0224, 20.1934, 0.44", "-222.84, -28.6401, 19.8416, 0.22", "-223.607, -29.1827, 19.5326, 0.22", "-224.683, -29.8412, 19.1651, 0.59", "-224.996, -30.0047, 19.0714, 0.59", "-227.038, -30.8206, 18.4002, 0.29", "-227.765, -31.0881, 18.1625, 0.29", "-228.864, -31.4533, 17.8098, 0.29", "-229.611, -31.681, 17.5963, 0.81", "-230.273, -31.8639, 17.4438, 0.81", "-232.921, -32.4514, 16.7918, 0.59" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "137.933, -17.2588, -9.88068, 0.29", "138.91, -18.3156, -9.6514, 0.29", "139.526, -18.9508, -9.66403, 0.29", "140.41, -19.9061, -9.97593, 0.52", "140.643, -20.1563, -10.0011, 0.52", "140.927, -20.4593, -9.99286, 0.37", "141.459, -21.0267, -9.97743, 0.52", "142.652, -22.1895, -10.0195, 0.37", "143.806, -23.3091, -10.0919, 0.88", "146.073, -25.644, -10.1983, 0.29", "146.368, -25.9652, -10.168, 0.74" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "137.933, -17.2588, -9.88068, 0.29", "138.972, -16.892, -10.7931, 0.29", "139.42, -16.7879, -11.133, 0.44", "140.072, -16.6474, -11.5904, 0.44", "140.764, -16.4809, -12.0437, 0.74", "141.712, -16.2291, -12.637, 0.74", "142.65, -15.9552, -13.2086, 0.44", "143.697, -15.6611, -13.7904, 0.66", "144.242, -15.485, -14.0858, 0.66", "145.141, -15.0914, -14.6286, 0.74", "145.546, -14.8545, -14.8987, 0.29", "145.992, -14.5166, -15.2293, 0.37", "146.534, -14.0566, -15.591, 0.81", "146.837, -13.7889, -15.7639, 1.03", "148.386, -12.4693, -16.4892, 0.29", "149.264, -11.7327, -16.8309, 0.29", "150.556, -10.6471, -17.2553, 0.29", "151.682, -9.70092, -17.6132, 0.29", "152.618, -8.90731, -17.9256, 1.03", "153.144, -8.44945, -18.1289, 1.03", "153.688, -7.97966, -18.3593, 1.03", "154.122, -7.61394, -18.6349, 0.66", "154.971, -6.89155, -19.3875, 0.52", "155.464, -6.36485, -19.9913, 0.52", "155.907, -5.77559, -20.6456, 0.37", "156.33, -5.15689, -21.2797, 0.37", "156.671, -4.69773, -21.7386, 0.29", "157.273, -3.96779, -22.4762, 0.29", "158.103, -3.02907, -23.3725, 0.29", "158.424, -2.6504, -23.7395, 0.29", "158.811, -2.12045, -24.2537, 0.29", "159.279, -1.41563, -24.9643, 0.81", "159.778, -0.715611, -25.716, 1.03", "160.14, -0.345891, -26.1662, 1.03", "160.963, 0.260501, -26.9678, 0.29", "161.644, 0.73092, -27.5062, 0.74", "162.038, 1.01285, -27.7603, 1.11", "162.514, 1.35154, -27.9986, 1.11", "163.75, 2.13977, -28.4607, 0.29", "164.678, 2.63258, -28.7372, 0.29", "165.724, 3.02408, -29.0037, 0.29", "166.544, 3.24638, -29.2172, 0.29", "167.235, 3.38949, -29.4216, 0.74", "168.027, 3.51877, -29.7159, 0.74", "169.074, 3.63427, -30.1813, 0.37", "170.393, 3.70633, -30.8427, 0.96", "170.917, 3.71685, -31.1582, 0.96", "171.835, 3.71698, -31.7782, 0.29", "172.786, 3.73855, -32.546, 0.29", "173.143, 3.7579, -32.8624, 0.59", "173.685, 3.82227, -33.3943, 0.59", "174.667, 4.04626, -34.4236, 0.29", "175.258, 4.19722, -35.0695, 0.29", "176.317, 4.46301, -36.3, 1.18" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-1.67891, -24.5667, 9.58488, 1.03", "-0.891078, -26.6942, 10.1098, 1.03", "-0.29785, -28.0315, 10.4248, 1.03", "0.0987089, -28.8217, 10.6037, 0.74", "0.659328, -29.8259, 10.8137, 0.74", "1.0782, -30.5486, 10.9505, 1.03", "1.4308, -31.1687, 11.0543, 1.25", "1.72742, -31.6718, 11.1617, 1.33", "1.87362, -31.9637, 11.1894, 1.62", "2.13909, -32.6169, 11.224, 1.62", "2.35108, -33.298, 11.2346, 1.62", "2.57903, -34.3041, 11.2373, 1.47", "2.73477, -35.2895, 11.2629, 0.59", "2.82971, -36.2468, 11.2917, 0.59", "2.87893, -37.1208, 11.3182, 0.88", "2.90342, -37.7602, 11.3358, 1.25", "2.93783, -38.3259, 11.3443, 1.55", "3.01373, -39.2491, 11.3453, 1.55", "3.10664, -40.1935, 11.3352, 0.96", "3.19648, -41.0805, 11.3215, 0.74", "3.23711, -41.5704, 11.3126, 0.74", "3.31163, -42.477, 11.2905, 0.74", "3.39298, -43.4724, 11.2563, 1.33", "3.51412, -44.7798, 11.1879, 1.18", "3.62632, -45.884, 11.1544, 1.18", "3.6766, -46.5249, 11.1407, 1.62" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-1.67891, -24.5667, 9.58488, 1.03", "-2.70744, -25.9725, 12.0523, 1.03", "-3.34159, -26.9625, 13.6074, 1.03", "-4.44674, -28.7385, 16.1858, 0.81", "-5.51763, -30.4496, 18.5825, 0.66", "-5.87886, -31.0441, 19.3797, 0.66", "-6.21622, -31.6331, 20.1277, 0.66", "-6.57553, -32.477, 21.0822, 0.52", "-6.85908, -33.4498, 22.0403, 0.52", "-7.07772, -34.7182, 23.0448, 0.81", "-7.14848, -35.6328, 23.6315, 0.66", "-7.1972, -36.4315, 24.0932, 0.96", "-7.28632, -38.2186, 25.0732, 0.52", "-7.26969, -39.2972, 25.6539, 1.11", "-7.17348, -40.2622, 26.1036, 1.03", "-7.06875, -40.9978, 26.3756, 0.88", "-6.99035, -41.6137, 26.5747, 0.88", "-6.94074, -42.6345, 26.8375, 0.52" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "2.77455, 36.5082, 13.0509, 0.74", "2.83644, 38.0582, 14.7552, 0.74", "2.8638, 38.9739, 15.647, 0.59", "2.86339, 39.5979, 16.1959, 0.59", "2.84159, 40.6717, 17.0238, 0.59", "2.82056, 41.4624, 17.5523, 0.59", "2.80578, 42.2772, 18.02, 0.59", "2.85762, 43.7996, 18.625, 0.66", "2.89534, 44.4846, 18.8358, 0.66", "2.91618, 45.5114, 19.0609, 1.03", "2.92184, 46.4846, 19.1955, 1.03", "2.92303, 47.6639, 19.2841, 0.44", "2.93795, 48.2009, 19.2591, 0.59", "3.00261, 49.0376, 19.0586, 0.59", "3.081, 49.7321, 18.8071, 1.11", "3.13276, 50.0458, 18.6608, 1.33", "3.23422, 50.5175, 18.4223, 1.33", "3.50159, 51.5152, 17.9023, 0.81", "3.79362, 52.3141, 17.5513, 0.44", "4.16745, 52.9427, 17.3426, 0.44", "4.7086, 53.5492, 17.1461, 0.74", "5.30928, 54.1166, 16.9804, 0.66", "5.62434, 54.3891, 16.9091, 0.66", "6.27972, 55.0257, 16.7712, 0.52", "6.97735, 55.8159, 16.5702, 0.37", "7.74556, 56.8645, 16.2432, 0.37", "8.02036, 57.336, 16.1203, 0.37", "8.40776, 58.1423, 15.968, 0.37", "8.98067, 59.464, 15.832, 0.37", "9.28424, 60.2784, 15.8934, 0.88", "9.46, 60.8035, 16.068, 0.88", "9.79055, 61.8665, 16.6498, 0.74", "9.98908, 62.5431, 17.1221, 0.59", "10.1801, 63.3137, 17.8049, 0.59", "10.4467, 64.5538, 19.1108, 0.81", "10.5952, 65.4716, 20.1569, 0.59", "10.6307, 65.9148, 20.6633, 0.59", "10.6234, 66.3442, 21.1285, 1.11", "10.5343, 67.0775, 21.8484, 0.88", "10.4003, 67.7355, 22.3866, 0.88", "10.2672, 68.5045, 22.8237, 0.74", "10.1733, 69.2949, 23.1674, 0.59", "10.1472, 69.9046, 23.3982, 0.44", "10.1745, 70.5192, 23.5863, 0.81", "10.2536, 71.1177, 23.7194, 1.03", "10.4224, 72.1626, 23.8958, 0.52", "10.5226, 72.7364, 23.9672, 0.52", "10.6224, 73.3111, 24.0306, 0.96", "10.7218, 73.9726, 24.1009, 0.96", "10.7967, 74.6569, 24.1633, 0.66", "10.8627, 75.6343, 24.2339, 0.37", "10.8832, 76.2512, 24.2664, 0.37", "10.9043, 76.6664, 24.2875, 0.37", "10.9504, 77.3907, 24.3273, 0.37", "11.0025, 77.971, 24.3651, 0.66", "11.0939, 78.5849, 24.4184, 0.66", "11.2352, 79.1619, 24.496, 0.81", "11.4083, 79.7785, 24.611, 0.52", "11.5687, 80.3951, 24.7367, 0.37", "11.6664, 80.9167, 24.8346, 0.37", "11.716, 81.3515, 24.9037, 0.66", "11.7568, 82.0011, 24.988, 0.66", "11.813, 82.7557, 25.079, 0.37", "11.8744, 83.2219, 25.1374, 0.37", "12.0828, 84.1134, 25.2686, 0.96", "12.2131, 84.5556, 25.3424, 1.33", "12.4017, 85.1462, 25.4341, 1.33", "12.6752, 85.9915, 25.5808, 1.03", "12.941, 86.7591, 25.7332, 0.74", "13.2009, 87.481, 25.9044, 0.44", "13.3903, 88.0228, 26.0503, 0.44", "13.568, 88.5457, 26.1849, 0.44", "13.8718, 89.5022, 26.4071, 0.66", "13.9967, 89.959, 26.5131, 0.96", "14.0509, 90.2044, 26.5637, 0.96", "14.2523, 91.1227, 26.7016, 0.52", "14.4347, 91.892, 26.7841, 0.52", "14.666, 92.7693, 26.8521, 0.52", "14.8917, 93.4855, 26.8824, 0.52", "15.2643, 94.6892, 26.9779, 0.74", "15.4711, 95.4611, 27.0774, 0.52", "15.5986, 96.0229, 27.1785, 0.52", "15.7223, 96.6478, 27.3219, 0.52", "15.8976, 97.4111, 27.4831, 0.81", "16.1961, 98.4914, 27.6716, 0.81", "16.4088, 99.1864, 27.788, 0.59", "16.59, 99.7618, 27.8528, 0.37", "16.8151, 100.472, 27.9207, 0.37", "17.1587, 101.574, 28.0025, 0.37", "17.3341, 102.126, 28.0311, 0.52", "17.5759, 102.754, 28.062, 0.52", "18.0071, 103.79, 28.1511, 0.52", "18.4432, 104.891, 28.3026, 0.74", "18.7057, 105.598, 28.4399, 0.96", "18.9621, 106.344, 28.6274, 0.37", "19.2408, 107.176, 28.8498, 0.29", "19.4225, 107.697, 28.9989, 0.29", "19.6904, 108.453, 29.2156, 0.81", "19.8164, 108.782, 29.2753, 0.81", "19.9394, 109.148, 29.3306, 0.96", "20.0096, 109.448, 29.3631, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.77455, 36.5082, 13.0509, 0.66", "3.03178, 38.0945, 10.9341, 0.66", "3.16186, 39.0141, 9.60932, 0.66", "3.2576, 39.4616, 8.95059, 0.66", "3.44753, 40.1479, 7.9286, 0.52", "3.73886, 41.177, 6.40094, 0.81", "3.89309, 41.6726, 5.7032, 0.81", "4.18661, 42.4051, 4.73307, 0.59", "4.5984, 43.1785, 3.64915, 0.59", "4.98657, 43.811, 2.75243, 0.44", "5.23855, 44.2296, 2.21221, 0.44", "5.71844, 45.0346, 1.29926, 0.96", "6.02, 45.4913, 0.770159, 1.18", "6.82258, 46.6162, -0.581156, 0.88", "7.49351, 47.5035, -1.68146, 0.37", "7.98807, 48.074, -2.41206, 1.03", "8.55592, 48.6338, -3.15276, 1.03", "9.62821, 49.5564, -4.50586, 0.52", "10.075, 49.9217, -5.03542, 0.52", "10.4225, 50.1993, -5.4276, 0.81", "10.8491, 50.5495, -5.93382, 0.81", "11.2714, 50.934, -6.5239, 0.74", "12.0518, 51.895, -7.92265, 1.03", "12.3451, 52.4857, -8.74989, 1.03", "12.5322, 53.2951, -9.96432, 0.59", "12.564, 53.8202, -10.7801, 0.81", "12.5162, 54.3577, -11.723, 0.81", "12.4736, 54.5471, -12.0786, 0.66", "12.3712, 54.8666, -12.6922, 0.66", "12.1036, 55.6141, -14.2558, 0.52", "11.932, 56.0906, -15.2914, 0.37", "11.7219, 56.9583, -17.2254, 0.29", "11.6859, 57.1502, -17.668, 0.29", "11.6267, 57.4529, -18.3866, 0.29", "11.5583, 57.7874, -19.1474, 0.29", "11.3885, 58.3476, -20.2623, 0.81", "11.2108, 58.8461, -21.1436, 0.81", "10.914, 59.7436, -22.4171, 0.59", "10.8492, 59.9532, -22.6859, 0.59", "10.6605, 60.5512, -23.3348, 0.29", "10.5736, 61.1484, -24.1841, 0.52", "10.5739, 61.2464, -24.3632, 0.81", "10.5968, 61.5378, -25.0052, 0.81", "10.647, 61.8549, -25.8405, 0.74", "10.6672, 61.9806, -26.2566, 0.88", "10.8372, 63.2202, -31.5588, 0.88", "10.8496, 63.4841, -33.0323, 0.66", "10.8248, 63.6298, -33.9696, 0.88", "10.7456, 63.8163, -35.3429, 0.96", "10.6402, 63.9656, -36.3452, 0.52", "10.5135, 64.0948, -37.0358, 0.74", "9.98178, 64.4728, -38.182, 0.44", "9.65004, 64.7484, -38.7672, 0.29", "9.31835, 65.0529, -39.2711, 0.29", "8.70871, 65.5905, -40.0736, 1.18", "8.43886, 65.8112, -40.43, 1.92", "7.94366, 66.1194, -41.1714, 1.47", "7.22427, 66.4308, -42.3247, 0.37", "6.90409, 66.5033, -42.8493, 0.29", "6.26352, 66.5019, -43.8319, 0.29", "5.50637, 66.3309, -44.9738, 0.29", "4.40217, 65.8022, -46.7485, 0.29", "3.84938, 65.4031, -47.66, 0.29", "3.42528, 65.0516, -48.3752, 0.29", "2.90282, 64.6388, -49.3079, 0.29", "2.55036, 64.4171, -49.9367, 0.29", "1.74283, 64.0506, -51.3581, 0.29", "1.37638, 63.9054, -52.0284, 0.29", "0.84488, 63.7833, -53.1351, 0.29", "0.567832, 63.8238, -53.7448, 0.52", "0.275991, 64.0007, -54.3588, 0.52", "-0.187, 64.4137, -55.2332, 0.52", "-0.724249, 64.9989, -56.1395, 0.66", "-1.00338, 65.3279, -56.5958, 0.96", "-1.27285, 65.6433, -57.0008, 1.18", "-2.06095, 66.649, -58.1452, 0.52", "-2.5551, 67.4081, -58.9384, 0.29", "-2.78589, 67.8772, -59.3905, 0.52", "-2.86219, 68.1086, -59.5878, 0.74", "-2.99049, 68.6152, -60.017, 0.74", "-3.18796, 69.4734, -60.7714, 0.44", "-3.37601, 70.3664, -61.6044, 0.44", "-3.57027, 71.2767, -62.5095, 0.37", "-3.74966, 71.9647, -63.2294, 0.37", "-4.00719, 72.7167, -64.1108, 0.37", "-4.3447, 73.6713, -65.3842, 0.37", "-4.58083, 74.2619, -66.2217, 0.88", "-4.65274, 74.4197, -66.4386, 0.88", "-4.94396, 74.9427, -67.1418, 0.66", "-5.52054, 75.8012, -68.2976, 0.96", "-6.37854, 76.7677, -69.5179, 0.81", "-7.04731, 77.3018, -70.1626, 1.11", "-7.90319, 77.7896, -70.7118, 0.59", "-9.02635, 78.349, -71.29, 0.59", "-9.78902, 78.716, -71.5881, 0.74", "-10.8284, 79.2022, -71.881, 0.52", "-11.4082, 79.4516, -72.0291, 0.52", "-12.2075, 79.8171, -72.2858, 0.52", "-13.0233, 80.2351, -72.5937, 0.52", "-13.6754, 80.6824, -72.9292, 0.52", "-14.6058, 81.4987, -73.5043, 1.33", "-14.9966, 81.9324, -73.7725, 2.28", "-15.4501, 82.481, -74.1011, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "3.6766, -46.5249, 11.1407, 0.59", "5.4215, -47.6024, 11.787, 0.59", "6.2745, -48.2313, 12.0716, 0.59", "8.94882, -50.692, 12.9838, 0.44", "9.42425, -51.2452, 13.1897, 0.44", "10.1026, -52.1672, 13.5206, 0.44", "10.9925, -53.4883, 14.0173, 0.44", "11.463, -54.3777, 14.3439, 0.44", "12.092, -55.6939, 14.8348, 0.44", "12.8838, -57.4497, 15.4657, 0.44", "13.3402, -58.4247, 15.9303, 0.81", "14.1981, -60.1681, 16.9782, 0.59", "14.4543, -60.6586, 17.3221, 0.59", "15.2705, -62.0132, 18.5532, 0.29", "15.6278, -62.6105, 19.1913, 0.29", "16.4667, -64.2338, 20.977, 0.29", "16.8367, -65.2365, 22.0332, 0.29", "17.0601, -66.3493, 23.1499, 1.03", "17.1747, -69.6164, 26.1162, 1.11", "17.0684, -70.9703, 27.3196, 1.33", "16.7937, -72.5096, 28.5663, 0.66", "15.7159, -75.3056, 30.0949, 0.15", "15.0435, -76.1345, 30.0625, 0.15", "14.1384, -76.8917, 29.5831, 0.15" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "3.6766, -46.5249, 11.1407, 1.33", "3.27913, -47.7093, 10.9671, 1.33" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-15.4501, 82.481, -74.1011, 0.37", "-16.8946, 83.005, -75.6837, 0.37", "-17.5485, 83.1768, -76.4055, 0.37", "-18.4501, 83.2781, -77.3974, 0.37", "-19.4185, 83.2153, -78.6244, 0.88", "-19.8216, 83.1637, -79.1747, 0.88", "-20.5029, 83.0971, -80.1307, 0.52", "-20.996, 83.0605, -80.906, 0.29", "-21.571, 83.0681, -81.9597, 0.29", "-22.3144, 83.2462, -83.5751, 0.37", "-22.5484, 83.4276, -84.1208, 0.37", "-22.8893, 83.865, -84.9592, 0.37", "-23.2601, 84.3943, -85.7336, 0.37", "-23.9343, 85.2893, -87.0377, 0.66", "-24.3857, 85.7883, -87.818, 0.66", "-25.1412, 86.3879, -88.8899, 0.37", "-25.6802, 86.688, -89.5708, 0.29", "-26.722, 87.0951, -90.7426, 0.29", "-27.8607, 87.4375, -91.7676, 0.29", "-28.9833, 87.7123, -92.5392, 0.29", "-30.207, 88.0107, -93.3466, 0.29", "-31.0653, 88.247, -93.9166, 0.88", "-31.5081, 88.3961, -94.2278, 1.03", "-32.7327, 88.9966, -95.2363, 0.29", "-33.6725, 89.5856, -96.0861, 0.29", "-34.8886, 90.356, -97.3491, 0.96", "-35.4271, 90.682, -98.0086, 1.25", "-35.6166, 90.7874, -98.3032, 1.47", "-36.4509, 91.1597, -99.6913, 0.96", "-37.0437, 91.4144, -101.155, 0.52", "-37.6557, 91.7549, -103.064, 0.44", "-38.0953, 92.0411, -104.59, 0.44", "-38.7654, 92.5558, -107.197, 1.11", "-39.0064, 92.7892, -108.208, 1.11", "-40.2134, 94.2728, -113.696, 0.29", "-40.4633, 94.6751, -115.086, 0.29", "-40.6068, 94.9568, -116.079, 0.96", "-40.7562, 95.2169, -117.036, 1.18", "-41.0744, 95.6696, -118.527, 0.88", "-41.5136, 96.1591, -120.093, 0.52", "-41.892, 96.3879, -120.995, 0.52", "-42.335, 96.5291, -122.091, 0.52", "-43.1978, 96.6819, -124.485, 0.37", "-43.6654, 96.7427, -125.806, 0.37", "-44.1608, 96.8112, -127.208, 0.37", "-44.847, 96.9428, -129.155, 0.37", "-45.3601, 97.0923, -130.561, 0.37", "-45.9412, 97.2621, -132.086, 0.37", "-46.3432, 97.2494, -133.222, 1.11", "-46.4559, 97.2117, -133.616, 1.47" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-15.4501, 82.481, -74.1011, 0.29", "-15.3718, 85.2184, -76.0786, 0.29", "-15.3968, 86.1237, -76.5952, 0.29", "-15.4187, 86.6899, -76.8705, 0.29", "-15.5214, 87.9852, -77.4849, 0.29", "-15.5695, 88.4015, -77.6701, 0.52", "-15.6725, 89.1325, -77.9645, 0.37", "-15.8397, 89.7705, -78.0981, 0.66", "-15.9591, 90.1427, -78.1581, 0.81", "-16.3795, 91.3806, -78.2863, 0.29", "-16.7214, 92.3088, -78.3457, 0.52", "-16.9559, 92.8795, -78.365, 0.74", "-17.5503, 94.1278, -78.3563, 0.29", "-18.111, 95.1815, -78.2908, 0.29", "-18.4605, 95.753, -78.2067, 1.25", "-18.6814, 96.096, -78.1204, 1.84", "-18.965, 96.5085, -77.9911, 1.84", "-20.0222, 97.8608, -77.5098, 0.29", "-20.3911, 98.2696, -77.3326, 0.29", "-21.6204, 99.3974, -76.6827, 0.29", "-22.1673, 99.8534, -76.3405, 0.52", "-22.4879, 100.111, -76.112, 0.29", "-23.2651, 100.747, -75.4671, 0.29", "-23.6468, 101.077, -75.0983, 0.29", "-24.6379, 101.999, -74.1206, 0.88", "-25.553, 102.817, -73.252, 0.29", "-25.9396, 103.148, -72.9218, 0.29", "-26.6641, 103.806, -72.3373, 0.81", "-27.0191, 104.18, -72.045, 0.81", "-27.5449, 104.808, -71.5943, 0.37", "-28.1748, 105.666, -71.0466, 0.29", "-28.5605, 106.207, -70.7008, 0.29", "-28.9724, 106.819, -70.3081, 0.29", "-29.2858, 107.326, -69.9789, 0.29", "-29.9593, 108.566, -69.1514, 0.88", "-30.1117, 108.884, -68.9253, 1.25", "-30.3734, 109.446, -68.534, 1.25", "-30.74, 110.218, -68.0837, 0.29", "-31.0743, 110.864, -67.7995, 0.22", "-31.4903, 111.592, -67.6462, 0.88", "-32.0433, 112.562, -67.72, 0.88", "-32.4791, 113.314, -67.8114, 0.59", "-33.816, 115.554, -68.1637, 0.59", "-34.0447, 115.937, -68.2383, 0.59", "-34.5636, 116.786, -68.4214, 0.29", "-35.0326, 117.547, -68.567, 0.37", "-35.7877, 118.724, -68.7149, 0.37", "-36.2558, 119.421, -68.7091, 0.37", "-36.4642, 119.726, -68.6736, 0.44", "-36.6501, 119.984, -68.6548, 0.44", "-37.2609, 120.773, -68.6475, 0.22", "-37.7176, 121.347, -68.6916, 0.37", "-38.2418, 121.966, -68.8008, 0.29", "-38.8507, 122.638, -68.9358, 0.29", "-39.5584, 123.37, -69.0885, 0.29", "-40.2828, 124.103, -69.2437, 0.29", "-40.742, 124.6, -69.3448, 0.29", "-41.2625, 125.249, -69.4628, 0.29", "-41.7381, 125.978, -69.5847, 0.52", "-41.907, 126.345, -69.6391, 0.74", "-42.1154, 127.083, -69.6803, 0.52", "-42.338, 128.175, -69.6594, 0.29", "-42.4568, 128.794, -69.6244, 0.29", "-42.5622, 129.306, -69.5967, 0.37", "-42.688, 129.762, -69.5746, 0.37", "-43.1818, 131.039, -69.5282, 0.59", "-43.6157, 131.898, -69.5127, 0.29", "-44.4971, 133.354, -69.5219, 0.29", "-45.5516, 134.92, -69.5822, 0.29", "-46.0395, 135.622, -69.6185, 0.29", "-46.6073, 136.419, -69.6887, 0.29", "-47.078, 137.065, -69.7934, 0.59", "-47.5321, 137.626, -69.8907, 0.59", "-48.4153, 138.476, -70.0578, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "3.27913, -47.7093, 10.9671, 0.74", "3.59499, -49.4294, 10.8544, 0.74", "3.80791, -50.3829, 10.8222, 0.74", "4.05701, -51.496, 10.8387, 0.96", "4.31321, -52.5282, 10.9543, 0.74", "4.62823, -53.7272, 11.1428, 0.59", "4.86723, -54.637, 11.2858, 0.59", "5.25331, -55.9269, 11.5673, 0.59", "5.75102, -57.4785, 11.974, 0.52", "6.43832, -59.4857, 12.5848, 0.52", "6.61757, -60.0317, 12.7777, 1.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "3.27913, -47.7093, 10.9671, 0.59", "2.20565, -48.7828, 11.679, 0.59", "1.54115, -49.4376, 12.33, 0.88", "0.834437, -50.1558, 13.1937, 0.88", "0.0342443, -50.9753, 14.2372, 0.59", "-1.05943, -52.0052, 15.6518, 0.59", "-1.52004, -52.4683, 16.302, 1.4", "-2.27131, -53.2985, 17.5667, 1.4", "-2.91229, -54.0265, 18.6995, 1.03", "-3.35596, -54.5062, 19.463, 1.55", "-3.89898, -55.064, 20.3226, 1.55", "-4.87024, -56.0234, 21.5908, 1.03", "-5.45183, -56.6108, 22.2773, 0.81", "-6.2504, -57.4318, 23.1643, 0.81", "-6.94969, -58.1301, 23.8513, 0.37", "-7.5071, -58.642, 24.3056, 0.37", "-7.651, -58.7636, 24.4057, 0.96", "-8.07526, -59.0952, 24.6604, 1.4", "-9.92962, -60.6524, 25.7364, 0.59", "-11.4285, -61.9545, 26.5945, 0.52", "-12.5965, -62.9514, 27.2578, 0.52", "-13.9516, -64.0122, 28.0212, 0.37", "-15.0948, -64.8035, 28.6108, 0.29", "-16.4948, -65.6367, 29.2048, 1.25", "-16.8796, -65.8352, 29.3308, 1.4", "-18.1766, -66.4847, 29.7628, 0.52", "-19.1602, -66.9413, 30.0701, 0.81", "-20.4469, -67.4222, 30.4085, 1.03", "-22.1994, -67.8663, 30.8725, 0.52", "-23.271, -68.0719, 31.1808, 0.52", "-24.1026, -68.2733, 31.466, 0.37", "-25.2366, -68.7433, 32.0319, 0.29", "-25.5627, -68.9487, 32.2668, 0.74", "-26.1294, -69.3863, 32.8317, 1.03", "-26.4563, -69.6388, 33.218, 0.81", "-27.1859, -70.1504, 34.063, 0.59", "-28.3083, -70.9034, 35.3237, 0.37", "-28.8687, -71.2532, 35.8461, 0.29", "-29.3688, -71.48, 36.2404, 0.29", "-29.8643, -71.6354, 36.5579, 0.96", "-30.4443, -71.7468, 36.8151, 0.96", "-31.2175, -71.8443, 37.0623, 0.81", "-32.6887, -72.0771, 37.4868, 0.44", "-33.498, -72.3289, 37.7515, 0.29", "-34.5061, -72.8413, 38.138, 0.29", "-35.5649, -73.5867, 38.6192, 1.4", "-36.1598, -74.1021, 38.9323, 1.4", "-37.1567, -75.1218, 39.5842, 0.44", "-37.6682, -75.7202, 39.9948, 0.29", "-37.9816, -76.1162, 40.2825, 0.88", "-38.5823, -76.8747, 40.8651, 0.96", "-39.063, -77.4606, 41.3423, 0.59", "-39.9281, -78.4829, 42.1623, 0.44", "-40.7832, -79.4921, 42.9618, 0.37", "-41.639, -80.4639, 43.755, 0.22", "-42.4058, -81.2773, 44.444, 0.59", "-43.1491, -82.0017, 45.0818, 0.29", "-43.3824, -82.2056, 45.2678, 0.74", "-43.8707, -82.5595, 45.6118, 0.96", "-44.4224, -82.8699, 45.9733, 0.59", "-45.3726, -83.2784, 46.5602, 0.44", "-46.0184, -83.5343, 46.9688, 0.74", "-46.5747, -83.7685, 47.3184, 0.96", "-47.7457, -84.3263, 48.0546, 0.37", "-48.6235, -84.8428, 48.6067, 0.29", "-49.2113, -85.2725, 48.9339, 0.29", "-49.9043, -85.8651, 49.2646, 0.52", "-50.3439, -86.2651, 49.4436, 0.52", "-50.7246, -86.6093, 49.624, 0.52", "-51.5904, -87.292, 50.1063, 0.52", "-52.5991, -87.9482, 50.7455, 0.52", "-53.0182, -88.1444, 51.035, 0.88", "-53.8634, -88.4151, 51.6547, 0.88", "-55.4728, -88.7427, 52.7751, 0.37", "-56.6464, -88.9243, 53.4993, 0.29", "-57.2581, -89.0235, 53.8419, 0.96", "-58.3027, -89.2745, 54.3653, 1.03", "-59.5637, -89.7128, 54.8786, 0.52", "-60.7597, -90.2676, 55.177, 0.52", "-62.0423, -91.0043, 55.3221, 0.52", "-63.3279, -91.8969, 55.3627, 0.52", "-64.3652, -92.7135, 55.3464, 0.52", "-65.7601, -93.9415, 55.2779, 0.44", "-67.198, -95.3176, 55.1323, 0.74", "-68.0656, -96.2273, 55.0081, 0.81", "-69.0042, -97.2463, 54.8245, 0.52", "-69.5423, -97.8187, 54.6927, 0.88", "-69.9362, -98.2347, 54.5962, 0.88", "-71.2696, -99.652, 54.3003, 0.44", "-72.4393, -100.789, 54.1067, 0.37", "-72.9741, -101.281, 54.0179, 0.37", "-73.9639, -102.167, 53.8561, 0.37", "-74.7604, -102.871, 53.7507, 0.59", "-75.4749, -103.493, 53.704, 0.59", "-77.3352, -105.018, 53.8168, 0.29", "-78.121, -105.629, 53.9268, 0.29", "-78.8169, -106.172, 54.0338, 0.59", "-79.8517, -107.022, 54.1722, 0.59", "-80.5441, -107.613, 54.2625, 0.37", "-81.5358, -108.485, 54.4391, 0.37", "-82.1501, -109.025, 54.6179, 0.81", "-82.6384, -109.419, 54.7638, 0.81", "-83.313, -109.908, 54.9453, 0.81", "-84.3141, -110.633, 55.0788, 0.37", "-85.0847, -111.225, 55.1093, 0.37", "-86.0592, -111.986, 55.1111, 0.66", "-86.5922, -112.377, 55.1188, 0.96", "-87.6309, -113.062, 55.1589, 0.96", "-89.2917, -113.982, 55.2136, 0.29", "-90.1058, -114.344, 55.1738, 0.29", "-91.2199, -114.822, 55.0471, 0.44", "-91.694, -115.046, 54.9873, 0.81", "-92.4469, -115.446, 54.854, 0.81", "-93.1868, -115.862, 54.6893, 0.81", "-95.1605, -116.938, 54.2626, 0.52", "-96.1359, -117.479, 54.0316, 0.59", "-97.3275, -118.197, 53.7166, 0.59", "-99.2486, -119.427, 53.2647, 0.29", "-100.468, -120.253, 53.0153, 0.96", "-101.18, -120.744, 52.9079, 1.25", "-101.614, -121.029, 52.8771, 1.25", "-103.171, -121.91, 52.8951, 0.37", "-104.221, -122.447, 52.9908, 0.37", "-105.071, -122.864, 53.1769, 1.03", "-105.848, -123.23, 53.3991, 1.25", "-106.641, -123.573, 53.6563, 1.25", "-108.097, -124.116, 54.286, 0.29", "-108.811, -124.325, 54.6962, 0.44", "-109.525, -124.499, 55.1617, 0.59", "-110.439, -124.686, 55.7495, 0.59", "-111.563, -124.882, 56.4368, 0.29", "-113.018, -125.105, 57.2203, 0.29", "-114.487, -125.338, 57.8781, 0.29", "-115.459, -125.513, 58.2623, 0.29", "-117.071, -125.864, 58.8071, 0.81", "-117.607, -125.999, 58.9665, 0.81", "-119.312, -126.493, 59.4214, 0.52", "-120.925, -127.065, 59.8848, 0.52", "-122.264, -127.645, 60.3727, 0.44", "-123.13, -128.105, 60.8255, 0.81", "-124.085, -128.737, 61.5788, 0.81", "-124.611, -129.205, 62.2404, 0.81", "-125.393, -130.127, 63.728, 0.37", "-125.655, -130.54, 64.4575, 0.37", "-125.957, -131.119, 65.511, 0.81", "-126.276, -131.76, 66.7189, 0.81", "-126.889, -132.929, 69.0624, 0.44", "-127.194, -133.366, 70.1248, 0.37", "-127.556, -133.769, 71.2165, 0.29", "-127.863, -134.066, 72.0192, 0.29", "-128.197, -134.386, 72.7823, 0.74", "-128.762, -135.041, 74.0905, 0.29", "-129.545, -136.047, 75.8065, 0.29", "-129.974, -136.639, 76.7413, 0.66", "-130.419, -137.24, 77.6175, 0.81", "-130.879, -137.928, 78.4931, 0.81", "-131.804, -139.366, 80.0965, 0.44", "-132.253, -140.055, 80.7532, 0.29", "-132.953, -141.114, 81.6717, 0.29", "-133.471, -141.82, 82.3228, 0.29", "-134.054, -142.55, 83.0248, 0.29", "-134.522, -143.05, 83.5091, 0.96", "-135.12, -143.569, 83.9196, 1.25" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-46.4559, 97.2117, -133.616, 0.37", "-47.2443, 97.0533, -133.598, 0.37", "-47.8873, 96.9821, -133.557, 0.37", "-48.8972, 96.9851, -133.474, 0.37", "-49.4234, 97.0403, -133.427, 0.22", "-49.9, 97.1291, -133.386, 0.22", "-50.6413, 97.3048, -133.328, 0.37", "-51.0205, 97.4597, -133.298, 0.37", "-51.5296, 97.7285, -133.262, 0.22", "-51.9632, 97.9932, -133.269, 0.22", "-52.3314, 98.2096, -133.312, 0.81", "-52.5383, 98.3132, -133.352, 0.88", "-52.8557, 98.4331, -133.438, 0.66", "-53.4645, 98.6327, -133.611, 0.29", "-54.274, 98.8891, -133.845, 0.29", "-54.8241, 99.0759, -134.009, 0.29", "-55.5653, 99.3431, -134.239, 0.29", "-56.5116, 99.6945, -134.534, 0.29", "-56.9558, 99.8614, -134.673, 0.66", "-57.3053, 99.9917, -134.779, 0.88", "-57.4794, 100.052, -134.833, 0.88", "-57.9709, 100.223, -134.997, 0.29", "-58.4249, 100.365, -135.155, 0.29", "-58.983, 100.521, -135.354, 1.33", "-59.1932, 100.569, -135.432, 1.77", "-60.0659, 100.777, -135.77, 0.29", "-60.6667, 100.925, -136.011, 0.29", "-61.427, 101.12, -136.318, 0.29", "-61.7934, 101.227, -136.463, 0.29", "-62.1651, 101.364, -136.582, 0.74", "-62.7607, 101.619, -136.708, 0.29", "-63.3997, 101.941, -136.731, 0.29", "-63.9601, 102.255, -136.679, 0.81", "-64.2574, 102.427, -136.624, 0.81", "-65.183, 102.984, -136.365, 0.22", "-65.7929, 103.347, -136.16, 0.22", "-66.4606, 103.713, -135.927, 0.88", "-66.8365, 103.907, -135.81, 1.18", "-67.6821, 104.293, -135.625, 0.29", "-68.2182, 104.483, -135.564, 0.29", "-69.0496, 104.695, -135.546, 0.29", "-69.7608, 104.854, -135.573, 0.29", "-70.4371, 105.004, -135.635, 0.81", "-71.2988, 105.234, -135.737, 0.22", "-71.9845, 105.466, -135.842, 0.22", "-72.4049, 105.641, -135.927, 0.29", "-72.9853, 105.979, -136.068, 0.29", "-73.4459, 106.333, -136.157, 0.29", "-73.9344, 106.787, -136.206, 0.52", "-74.245, 107.123, -136.213, 0.59", "-74.646, 107.616, -136.196, 0.29", "-74.8537, 107.893, -136.178, 0.29", "-75.4417, 108.668, -136.072, 0.29", "-75.7955, 109.092, -135.994, 0.29", "-76.2194, 109.537, -135.885, 0.59", "-76.6252, 109.93, -135.801, 0.74", "-77.1863, 110.465, -135.759, 0.44", "-77.6247, 110.882, -135.793, 1.55", "-77.9129, 111.138, -135.875, 1.99", "-78.7257, 111.737, -136.18, 0.29", "-79.3035, 112.056, -136.425, 0.29", "-80.1308, 112.4, -136.822, 0.29", "-80.4445, 112.499, -136.984, 0.29", "-81.1033, 112.661, -137.349, 0.44", "-81.5259, 112.74, -137.586, 0.44", "-82.0344, 112.803, -137.859, 0.29", "-82.7292, 112.871, -138.161, 0.29", "-83.1918, 112.92, -138.341, 0.29", "-83.6511, 112.987, -138.533, 0.37", "-84.0502, 113.073, -138.708, 0.59", "-84.503, 113.193, -138.911, 0.59", "-85.0438, 113.354, -139.141, 0.44", "-85.4923, 113.538, -139.287, 0.29", "-85.6603, 113.635, -139.334, 0.88", "-86.0191, 113.881, -139.42, 0.88", "-86.2388, 114.031, -139.465, 0.88", "-86.7449, 114.34, -139.55, 0.29", "-87.3644, 114.681, -139.647, 0.29", "-87.838, 114.956, -139.724, 0.29", "-88.2485, 115.242, -139.806, 0.29", "-88.5949, 115.528, -139.887, 0.52", "-89.0181, 115.931, -140.004, 0.52", "-89.5732, 116.496, -140.186, 0.29", "-89.9781, 116.92, -140.342, 0.29", "-90.3732, 117.368, -140.505, 0.74", "-90.6039, 117.662, -140.626, 1.03", "-90.8715, 118.059, -140.813, 0.37", "-91.1244, 118.45, -141.029, 0.37", "-91.3494, 118.755, -141.228, 0.96", "-91.5353, 118.962, -141.38, 1.18", "-92.0261, 119.488, -141.77, 0.29", "-92.3083, 119.821, -141.997, 0.29", "-92.6022, 120.182, -142.236, 0.29", "-92.9031, 120.534, -142.458, 0.37", "-93.2714, 120.93, -142.695, 0.37", "-93.7206, 121.408, -142.954, 0.37", "-94.0958, 121.78, -143.142, 0.37", "-94.495, 122.169, -143.342, 0.37", "-95.0038, 122.719, -143.619, 0.37", "-95.3933, 123.174, -143.847, 0.37", "-95.7319, 123.582, -144.05, 0.37", "-96.1591, 124.072, -144.27, 0.37", "-96.6054, 124.558, -144.458, 0.37", "-97.1566, 125.117, -144.636, 1.4", "-97.2653, 125.22, -144.665, 2.06", "-97.543, 125.457, -144.721, 2.28", "-98.2459, 125.983, -144.839, 0.29", "-98.7448, 126.308, -144.89, 0.29", "-99.5609, 126.736, -144.92, 0.29", "-100.122, 126.984, -144.914, 0.29", "-100.771, 127.236, -144.889, 0.29", "-101.447, 127.463, -144.852, 0.29", "-102.112, 127.662, -144.811, 0.29", "-102.578, 127.801, -144.772, 0.29", "-103.041, 127.943, -144.726, 0.44", "-103.706, 128.153, -144.686, 0.44", "-104.224, 128.365, -144.688, 0.29", "-104.552, 128.564, -144.722, 0.29", "-104.843, 128.809, -144.786, 0.74", "-105.119, 129.068, -144.864, 0.74", "-105.704, 129.682, -145.06, 0.29", "-106.181, 130.269, -145.243, 0.29", "-106.668, 130.931, -145.448, 0.29", "-107.03, 131.44, -145.605, 1.18" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-46.4559, 97.2117, -133.616, 0.44", "-47.4142, 97.6437, -134.369, 0.44", "-47.9957, 97.8876, -134.771, 0.44", "-48.7796, 98.2557, -135.276, 0.44", "-49.3078, 98.5476, -135.603, 0.44", "-49.906, 98.9489, -135.96, 0.44", "-50.4051, 99.327, -136.241, 0.44", "-50.7853, 99.663, -136.405, 0.44", "-51.1556, 100.093, -136.558, 0.66", "-51.4559, 100.54, -136.688, 0.66", "-51.8326, 101.208, -136.875, 0.29", "-52.2036, 101.991, -137.089, 0.29", "-52.5358, 102.816, -137.308, 1.11", "-52.6273, 103.07, -137.374, 1.11", "-52.9053, 103.777, -137.569, 0.29", "-53.068, 104.219, -137.688, 0.29", "-53.1603, 104.538, -137.763, 1.03", "-53.2184, 104.822, -137.817, 1.03", "-53.303, 105.25, -137.891, 1.03", "-53.5396, 106.498, -138.083, 0.29", "-53.6757, 107.234, -138.173, 0.29", "-53.8099, 107.896, -138.25, 0.29", "-53.9552, 108.429, -138.315, 0.29", "-54.2543, 109.351, -138.43, 1.33", "-54.3659, 109.661, -138.473, 1.69", "-54.8418, 110.781, -138.66, 0.37", "-55.1463, 111.36, -138.785, 0.37", "-55.7201, 112.283, -139.026, 0.37", "-56.2014, 113.001, -139.234, 0.37", "-56.6845, 113.719, -139.45, 0.37", "-57.0445, 114.3, -139.63, 0.37", "-57.2029, 114.599, -139.726, 0.81", "-57.3896, 115.102, -139.904, 0.81", "-57.5034, 115.723, -140.161, 0.52", "-57.5708, 116.255, -140.402, 0.52", "-57.6839, 116.984, -140.766, 1.03", "-57.7387, 117.333, -140.951, 1.03", "-57.8634, 117.946, -141.299, 0.88", "-58.0915, 118.785, -141.806, 0.37", "-58.409, 119.677, -142.37, 0.37", "-58.8015, 120.614, -142.907, 0.37", "-59.0142, 121.097, -143.148, 0.37", "-59.3902, 121.926, -143.504, 0.37", "-59.6566, 122.496, -143.707, 1.18", "-59.8633, 122.934, -143.838, 1.69", "-60.5895, 124.656, -144.275, 0.44", "-60.9366, 125.683, -144.495, 0.44", "-61.2185, 126.683, -144.689, 0.44", "-61.313, 127.102, -144.768, 0.96", "-61.3969, 127.536, -144.852, 1.33", "-61.5986, 128.595, -145.072, 0.37", "-61.7546, 129.574, -145.288, 0.37", "-61.839, 130.222, -145.425, 0.37", "-61.905, 131.011, -145.58, 0.37", "-61.9847, 131.988, -145.78, 0.37", "-62.0715, 132.847, -145.992, 0.37", "-62.1664, 133.478, -146.152, 0.59", "-62.2803, 134.1, -146.299, 0.59", "-62.4045, 134.925, -146.532, 0.29", "-62.4464, 135.297, -146.65, 0.29", "-62.6149, 136.567, -147.112, 1.33", "-62.6994, 137.049, -147.3, 2.14", "-62.7881, 137.434, -147.465, 2.28", "-63.1383, 138.607, -148.045, 1.11", "-63.433, 139.372, -148.496, 0.29", "-63.8006, 140.262, -149.045, 0.29", "-64.0531, 140.85, -149.417, 0.29", "-64.273, 141.407, -149.774, 0.44", "-64.469, 142.0, -150.15, 0.44", "-64.6813, 142.772, -150.599, 0.44", "-64.8253, 143.558, -151.034, 0.66", "-64.8646, 144.003, -151.249, 0.66", "-64.8892, 144.681, -151.529, 0.29", "-64.9008, 145.494, -151.747, 0.29", "-64.9082, 146.166, -151.846, 0.29", "-64.9097, 146.813, -151.911, 0.29", "-64.9488, 147.746, -151.997, 0.44", "-65.0075, 148.39, -152.043, 0.44", "-65.1652, 149.425, -152.059, 1.03", "-65.2652, 149.958, -152.0, 1.03" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "6.61757, -60.0317, 12.7777, 0.59", "6.62944, -61.6355, 12.5298, 0.59", "6.53782, -62.7278, 12.3818, 0.59", "6.37716, -64.0687, 12.2266, 0.59", "6.2611, -65.0548, 12.1214, 0.59", "6.09001, -66.5399, 12.0183, 0.88", "5.90121, -67.9218, 11.9723, 0.88", "5.70205, -68.9363, 11.9976, 0.66", "5.38392, -70.088, 12.1413, 0.81", "4.9836, -71.2826, 12.4078, 0.74", "4.6617, -72.231, 12.6967, 0.96", "4.39345, -73.1714, 13.042, 0.74", "4.14599, -74.1972, 13.4482, 0.59", "3.90762, -75.3332, 13.8935, 0.52", "3.8383, -75.718, 14.0379, 1.03", "3.70346, -76.7827, 14.349, 0.52", "3.65151, -78.0215, 14.5421, 0.81", "3.68429, -78.7855, 14.5726, 1.03", "3.73307, -79.5212, 14.5364, 1.03", "3.77802, -80.4933, 14.4408, 0.88", "3.78701, -81.5507, 14.3269, 0.74", "3.76739, -82.2373, 14.2529, 0.74", "3.72326, -83.0736, 14.1673, 0.44", "3.65477, -84.4505, 13.9939, 0.44", "3.60892, -85.2974, 13.8838, 0.66", "3.58118, -85.9252, 13.811, 0.66", "3.54495, -86.7577, 13.715, 0.52", "3.4805, -87.7805, 13.5906, 0.81", "3.40385, -88.6912, 13.4477, 1.03", "3.34223, -89.308, 13.3263, 1.03", "3.22545, -90.1583, 13.1541, 0.66", "3.02046, -91.1531, 12.944, 0.52", "2.81084, -91.9576, 12.773, 0.52", "2.60627, -92.6354, 12.653, 0.52", "2.35688, -93.4567, 12.5402, 0.74", "2.16535, -94.087, 12.4698, 0.74", "1.70153, -95.6244, 12.3642, 0.59", "1.46374, -96.5574, 12.3601, 0.59", "1.2947, -97.4511, 12.3734, 0.96", "1.23321, -97.9338, 12.396, 0.96", "1.15157, -98.8971, 12.4927, 0.59", "1.04927, -100.12, 12.6491, 0.44", "0.961178, -101.225, 12.835, 0.44", "0.878654, -102.17, 12.993, 0.44", "0.794663, -103.173, 13.1316, 0.44", "0.730223, -104.2, 13.2338, 0.44", "0.697066, -105.622, 13.3022, 0.59", "0.709495, -106.181, 13.3204, 0.81", "0.759486, -107.088, 13.3275, 0.44", "0.845708, -108.299, 13.3555, 0.44", "0.919355, -109.037, 13.3837, 0.81", "1.02527, -109.77, 13.4313, 0.81", "1.20486, -110.841, 13.487, 0.81", "1.33361, -111.624, 13.4843, 0.52", "1.48083, -112.591, 13.4284, 0.52", "1.54937, -113.357, 13.3466, 0.81", "1.52756, -114.266, 13.2355, 1.03", "1.34715, -115.568, 13.0807, 0.52", "1.14251, -116.502, 12.9671, 0.52", "0.904008, -117.373, 12.8944, 0.88", "0.583375, -118.439, 12.8419, 0.88", "0.172739, -119.69, 12.8401, 0.44", "-0.272646, -120.965, 12.8979, 0.74", "-0.451864, -121.562, 12.986, 0.74", "-0.764265, -122.653, 13.1697, 0.37", "-0.968807, -123.457, 13.3135, 0.66", "-1.11164, -124.234, 13.4489, 0.96", "-1.215, -125.162, 13.5743, 0.96", "-1.35753, -127.223, 13.7674, 0.37", "-1.3784, -128.494, 13.8979, 0.37", "-1.35446, -129.049, 13.9698, 0.88", "-1.32533, -129.534, 14.0346, 0.88", "-1.30107, -130.422, 14.1264, 0.88", "-1.32987, -131.339, 14.1877, 0.52", "-1.41611, -132.616, 14.3312, 0.52", "-1.47977, -133.938, 14.5837, 0.44", "-1.52338, -135.028, 14.8284, 0.52", "-1.5882, -136.56, 15.2091, 0.74", "-1.64875, -137.755, 15.5298, 0.74", "-1.81702, -139.721, 16.073, 0.59", "-1.93549, -140.679, 16.3268, 0.59", "-2.07592, -141.654, 16.6132, 0.44", "-2.20522, -142.52, 16.8771, 0.44", "-2.27769, -142.987, 17.0111, 0.81", "-2.44048, -143.875, 17.1833, 0.81", "-2.60554, -144.596, 17.2376, 0.74", "-2.78368, -145.328, 17.3155, 0.59", "-3.04636, -146.407, 17.4699, 0.29", "-3.17209, -146.942, 17.5712, 0.52", "-3.45969, -148.281, 17.8339, 0.52", "-3.61075, -149.116, 18.0056, 0.52", "-3.82332, -150.445, 18.3172, 0.74", "-3.91778, -151.129, 18.5178, 1.11", "-3.9957, -151.654, 18.7409, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "6.61757, -60.0317, 12.7777, 0.52", "8.24433, -58.9602, 13.3711, 0.52", "9.12833, -58.3779, 13.6936, 0.52", "9.8674, -57.8911, 13.9632, 0.52", "10.5075, -57.4695, 14.1967, 0.52" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-65.2652, 149.958, -152.0, 0.22", "-65.0143, 152.061, -153.389, 0.22", "-64.9801, 152.682, -153.94, 0.22", "-65.0084, 153.091, -154.404, 0.22", "-65.0433, 153.558, -154.914, 0.22", "-65.048, 154.726, -156.048, 0.22", "-64.9529, 155.758, -156.955, 1.25", "-64.9112, 156.17, -157.333, 1.55", "-64.7169, 157.726, -158.628, 0.37", "-64.6312, 158.343, -159.061, 0.37", "-64.4566, 159.491, -159.734, 0.37", "-64.2505, 160.612, -160.228, 0.37", "-64.0344, 161.523, -160.574, 0.66", "-63.8467, 162.2, -160.816, 1.33", "-63.4339, 163.61, -161.26, 0.52", "-63.0986, 164.844, -161.676, 0.52", "-62.8816, 165.74, -161.991, 0.37", "-62.6433, 166.662, -162.284, 0.37", "-62.4034, 167.429, -162.498, 0.37", "-61.8956, 168.898, -162.854, 2.65", "-61.7958, 169.169, -162.91, 3.32", "-61.6624, 169.554, -163.022, 3.32", "-61.0474, 171.802, -163.838, 0.44", "-60.7471, 173.143, -164.386, 0.44", "-60.6079, 173.781, -164.671, 0.59", "-60.4802, 174.334, -164.94, 0.59", "-59.8532, 177.051, -166.37, 0.29", "-59.6063, 178.147, -167.007, 0.29", "-59.4037, 179.127, -167.645, 0.29", "-59.2117, 180.18, -168.333, 0.29", "-59.1199, 180.602, -168.584, 0.29", "-58.8105, 181.818, -169.194, 1.11", "-58.5953, 182.596, -169.482, 1.11", "-58.434, 183.205, -169.714, 0.88", "-58.2071, 184.572, -170.237, 0.52", "-58.14, 186.014, -170.759, 0.29", "-58.1674, 186.878, -171.057, 0.29", "-58.2104, 187.394, -171.211, 0.66", "-58.3518, 188.569, -171.527, 0.66", "-58.5088, 189.491, -171.762, 0.29", "-58.7122, 190.195, -171.939, 0.29", "-59.2876, 191.339, -172.283, 0.88" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-65.2652, 149.958, -152.0, 0.37", "-65.2951, 151.282, -151.021, 0.37", "-65.3787, 152.82, -149.878, 0.37", "-65.4749, 153.874, -149.102, 0.37", "-65.7413, 155.967, -147.575, 0.37", "-65.9669, 157.497, -146.501, 0.52", "-66.2055, 159.052, -145.477, 1.18", "-66.3921, 160.08, -144.822, 1.18", "-66.5083, 160.802, -144.439, 1.18", "-66.5539, 161.264, -144.222, 1.03", "-66.5587, 162.267, -143.821, 0.44", "-66.4696, 163.589, -143.222, 0.88", "-66.2462, 165.585, -142.283, 0.37", "-66.0323, 167.414, -141.397, 0.29", "-65.9155, 168.642, -140.778, 0.29", "-65.8634, 169.567, -140.276, 0.66", "-65.837, 171.943, -138.928, 0.37", "-65.8853, 173.322, -138.136, 0.37", "-65.9954, 174.807, -137.331, 0.29", "-66.1743, 176.235, -136.634, 0.29", "-66.43, 177.52, -136.135, 0.29", "-66.8159, 179.187, -135.649, 0.88", "-66.987, 180.041, -135.469, 0.88", "-67.2585, 181.897, -135.141, 0.37", "-67.4577, 183.799, -134.906, 0.37", "-67.5902, 186.367, -134.693, 0.37", "-67.6301, 188.441, -134.534, 0.37", "-67.6537, 190.402, -134.361, 0.37", "-67.6601, 191.848, -134.218, 0.37", "-67.6735, 194.218, -133.963, 0.37", "-67.6236, 196.926, -133.616, 0.37", "-67.5444, 199.156, -133.296, 1.47", "-67.5504, 200.037, -133.181, 1.69", "-67.5945, 200.956, -133.036, 1.69", "-67.7458, 203.27, -132.603, 0.44", "-67.8842, 205.09, -132.22, 0.44", "-68.0724, 206.798, -131.878, 0.44", "-68.3834, 209.194, -131.443, 0.44", "-68.7118, 211.474, -131.035, 0.37", "-68.9649, 213.177, -130.708, 0.37", "-69.1051, 214.022, -130.532, 0.37", "-69.4041, 215.365, -130.253, 0.96", "-69.7606, 216.686, -129.972, 1.25", "-69.9005, 217.098, -129.897, 1.25" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-3.9957, -151.654, 18.7409, 0.44", "-5.63416, -152.232, 19.4524, 0.44", "-6.92725, -152.459, 19.9379, 0.29", "-8.67553, -152.64, 20.5585, 0.22", "-9.90662, -152.701, 20.9829, 0.59", "-10.6254, -152.709, 21.2267, 0.59", "-12.6882, -152.732, 21.9265, 0.29", "-14.717, -152.527, 22.5881, 0.29", "-15.1621, -152.446, 22.7189, 0.52", "-15.9117, -152.278, 22.8923, 0.52", "-16.5222, -152.116, 23.0288, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-3.9957, -151.654, 18.7409, 0.37", "-4.24588, -153.646, 18.6028, 0.37", "-4.41403, -154.764, 18.5533, 0.81", "-4.53355, -155.405, 18.5481, 0.88", "-4.67633, -156.074, 18.5639, 0.66", "-4.97289, -157.307, 18.6285, 0.37", "-5.08918, -157.769, 18.6609, 0.37", "-5.28715, -158.565, 18.7669, 0.37", "-5.48085, -159.537, 18.8748, 0.37", "-5.62205, -160.423, 18.9512, 0.74", "-5.74789, -161.284, 18.9944, 1.11", "-5.8618, -162.035, 19.0193, 0.81", "-6.04805, -163.459, 19.0349, 0.37", "-6.25238, -165.109, 19.0189, 0.37", "-6.43371, -166.16, 19.0117, 0.37", "-6.68156, -167.232, 19.0152, 0.37", "-6.85948, -167.851, 19.0212, 0.96", "-7.03954, -168.338, 19.0369, 0.96", "-7.48346, -169.308, 19.103, 0.44", "-8.08852, -170.536, 19.2095, 0.37", "-8.37358, -171.227, 19.2321, 0.37", "-8.53351, -171.766, 19.2231, 1.11", "-8.71853, -172.57, 19.179, 0.88", "-8.9396, -173.71, 19.1024, 0.66", "-9.17389, -175.185, 18.995, 0.52", "-9.35728, -176.489, 18.9014, 0.52", "-9.54308, -177.652, 18.8416, 0.52", "-9.81331, -179.045, 18.7963, 0.81", "-9.97745, -179.73, 18.7887, 0.96", "-10.2068, -180.523, 18.8045, 0.96", "-10.4883, -181.369, 18.8474, 0.81", "-10.8602, -182.397, 18.8962, 0.44", "-11.2738, -183.541, 18.9016, 0.29", "-11.4993, -184.221, 18.8627, 0.29", "-11.7419, -184.929, 18.8054, 0.29", "-12.0867, -185.817, 18.7305, 0.29", "-12.5373, -186.841, 18.6115, 1.03", "-12.6731, -187.119, 18.5693, 1.47", "-13.3793, -188.566, 18.3035, 0.44", "-13.8763, -189.592, 18.0868, 0.37", "-14.3912, -190.634, 17.8657, 0.37", "-14.9975, -191.85, 17.6035, 0.29", "-15.5794, -193.023, 17.3439, 0.29", "-15.9147, -193.72, 17.1773, 0.29", "-16.4523, -194.876, 16.875, 0.29", "-17.0577, -196.319, 16.4588, 0.66", "-17.3852, -197.197, 16.2061, 1.18", "-17.6508, -197.971, 16.0177, 1.18", "-17.8284, -198.503, 15.9005, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "10.5075, -57.4695, 14.1967, 0.44", "10.8538, -57.6233, 14.9237, 0.44", "11.5015, -57.9562, 16.4132, 1.11", "12.5775, -58.5445, 18.759, 0.44", "14.6601, -59.6717, 22.9621, 0.88", "15.3759, -60.061, 24.3092, 1.25", "15.8693, -60.3293, 25.2376, 0.88", "16.3669, -60.5904, 26.1839, 0.74", "18.0968, -61.4728, 29.2816, 0.37", "18.5465, -61.7215, 29.9899, 0.66", "18.9261, -61.9927, 30.5112, 0.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "10.5075, -57.4695, 14.1967, 0.44", "10.8919, -57.5649, 14.7827, 0.44", "14.2209, -58.3913, 19.8586, 0.44", "14.6559, -58.4993, 20.5218, 0.37", "14.9286, -58.567, 20.9377, 0.37", "15.1313, -58.6173, 21.2467, 0.74", "15.2951, -58.6579, 21.4965, 0.74" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-59.2876, 191.339, -172.283, 0.59", "-59.4771, 192.19, -172.495, 0.59", "-59.8406, 193.03, -172.779, 0.37", "-60.2426, 193.72, -173.057, 0.37", "-60.6917, 194.432, -173.352, 0.37", "-61.3217, 195.425, -173.753, 0.37", "-61.8247, 196.222, -174.066, 0.37", "-62.4395, 197.126, -174.394, 0.37", "-62.9287, 197.801, -174.649, 0.37", "-63.4751, 198.545, -174.921, 0.37", "-63.8115, 199.065, -175.115, 0.37", "-63.9855, 199.485, -175.253, 1.03", "-64.0574, 199.768, -175.331, 1.33", "-64.1807, 200.452, -175.495, 1.11", "-64.3393, 201.41, -175.723, 0.37", "-64.5104, 202.463, -175.972, 0.37", "-64.7132, 203.812, -176.295, 0.29", "-64.8595, 204.871, -176.548, 0.29", "-64.9733, 205.763, -176.759, 0.52", "-65.0744, 206.653, -176.963, 1.55", "-65.1121, 207.037, -177.042, 1.92" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-59.2876, 191.339, -172.283, 0.52", "-58.8467, 192.146, -173.278, 0.52", "-58.3135, 192.864, -174.28, 0.52", "-57.7711, 193.514, -175.163, 0.52", "-57.2682, 194.103, -175.904, 1.25", "-55.7586, 195.905, -178.014, 2.28", "-55.4265, 196.322, -178.486, 2.28", "-54.2411, 197.766, -180.213, 0.29", "-53.7166, 198.379, -180.984, 0.44", "-53.2584, 198.911, -181.623, 0.44", "-52.8102, 199.467, -182.212, 0.44", "-52.431, 199.997, -182.632, 0.44", "-51.7364, 201.123, -183.538, 0.29", "-51.4631, 201.747, -184.019, 1.03", "-51.2565, 202.332, -184.46, 1.55", "-50.9374, 203.248, -185.13, 0.88", "-50.5253, 204.305, -185.852, 0.52", "-50.1327, 205.242, -186.429, 0.52", "-49.8538, 206.028, -186.839, 0.52", "-49.4663, 207.227, -187.412, 0.52", "-49.1936, 208.033, -187.742, 0.52", "-48.9237, 208.821, -188.029, 0.52", "-48.6336, 209.582, -188.277, 0.52", "-48.0394, 210.923, -188.65, 0.52", "-47.3812, 212.282, -189.011, 0.52", "-46.7871, 213.571, -189.33, 2.21" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-69.9005, 217.098, -129.897, 0.29", "-71.105, 219.024, -130.108, 0.29", "-71.6908, 219.961, -130.211, 0.29", "-72.1193, 220.646, -130.286, 0.29", "-72.4414, 221.161, -130.343, 0.74", "-72.7058, 221.584, -130.389, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-69.9005, 217.098, -129.897, 0.29", "-70.3204, 218.246, -129.618, 0.29", "-70.534, 218.874, -129.474, 0.29", "-70.9103, 220.519, -129.059, 0.29", "-70.9974, 221.129, -128.895, 0.74", "-71.0936, 221.772, -128.744, 0.74", "-71.3375, 223.237, -128.45, 0.37", "-71.4895, 224.273, -128.277, 0.29", "-71.6511, 225.907, -128.018, 0.37", "-71.7118, 227.038, -127.855, 0.37", "-71.8579, 229.055, -127.553, 0.29", "-72.0039, 230.395, -127.346, 0.29", "-72.2683, 231.922, -127.117, 0.29", "-72.6891, 233.421, -126.937, 0.29", "-73.0759, 234.455, -126.837, 0.29", "-73.6485, 235.795, -126.667, 0.29", "-74.1039, 236.805, -126.478, 0.29", "-74.5977, 237.856, -126.232, 0.29", "-74.9998, 238.649, -125.995, 0.29", "-75.52, 239.719, -125.632, 1.03", "-75.8723, 240.609, -125.294, 1.33", "-76.1054, 241.459, -124.948, 1.33", "-76.4528, 243.052, -124.256, 0.29", "-76.786, 244.52, -123.598, 0.29", "-77.1802, 245.87, -122.992, 0.29", "-77.546, 246.831, -122.557, 0.29", "-78.1141, 248.028, -122.022, 0.29", "-78.451, 248.632, -121.741, 0.29", "-79.2437, 249.903, -121.119, 0.29", "-80.0381, 251.117, -120.529, 0.74", "-80.6233, 251.935, -120.09, 0.88", "-81.4708, 253.121, -119.44, 0.44", "-81.9341, 253.808, -119.061, 0.44", "-82.5339, 254.868, -118.486, 0.96", "-82.9417, 255.756, -118.063, 1.25", "-83.7315, 257.73, -117.306, 0.29", "-84.1235, 258.811, -117.007, 0.37", "-84.3792, 259.514, -116.834, 0.37", "-84.8867, 260.723, -116.46, 0.37", "-85.4828, 262.14, -116.041, 0.37", "-85.8247, 262.991, -115.792, 0.37", "-86.2133, 263.959, -115.538, 0.37", "-87.3823, 266.341, -114.801, 1.33", "-88.4359, 268.197, -114.021, 2.06" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-17.8284, -198.503, 15.9005, 0.29", "-18.6335, -199.352, 16.7677, 0.29", "-19.0747, -200.005, 17.3721, 0.29", "-19.2892, -200.458, 17.6987, 0.74", "-19.5494, -201.067, 18.1048, 0.29", "-19.7673, -201.564, 18.3938, 0.29", "-20.2984, -202.775, 19.0981, 0.59", "-20.4176, -203.147, 19.282, 0.74", "-20.7945, -204.555, 19.9603, 0.37", "-21.0047, -205.288, 20.3312, 0.96", "-21.2598, -206.015, 20.7185, 0.81" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-17.8284, -198.503, 15.9005, 0.37", "-16.8777, -198.919, 15.1915, 0.37", "-16.2175, -199.309, 14.7281, 0.37", "-15.416, -199.79, 14.3938, 0.37", "-14.6714, -200.154, 14.3295, 0.29", "-13.6331, -200.542, 14.4024, 0.29", "-12.6551, -200.908, 14.471, 0.52", "-12.0621, -201.106, 14.6078, 0.52", "-10.1326, -201.751, 15.3341, 1.11", "-8.24413, -202.362, 16.3133, 0.59", "-7.5771, -202.517, 16.7547, 0.59" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-65.1121, 207.037, -177.042, 0.37", "-65.2728, 209.18, -176.952, 0.37", "-65.4195, 211.135, -176.869, 0.37", "-65.5279, 212.582, -176.808, 0.37", "-65.7129, 215.047, -176.704, 1.18", "-65.8011, 216.223, -176.654, 1.62" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-65.1121, 207.037, -177.042, 0.29", "-65.664, 207.355, -178.87, 0.29", "-66.1096, 207.636, -180.268, 0.52", "-66.8787, 208.064, -182.326, 1.03", "-67.3251, 208.306, -183.389, 1.03", "-67.7501, 208.554, -184.35, 0.88", "-68.3518, 208.983, -185.69, 0.81", "-68.6877, 209.313, -186.53, 0.29", "-69.0841, 209.757, -187.448, 0.29", "-69.5149, 210.202, -188.278, 0.29", "-69.7205, 210.359, -188.779, 0.52", "-70.1379, 210.654, -190.013, 0.52", "-70.6269, 210.968, -191.565, 1.18", "-70.8073, 211.066, -192.123, 1.47", "-71.0769, 211.218, -192.911, 1.47", "-72.442, 211.939, -196.416, 0.52", "-72.9505, 212.157, -197.482, 0.29", "-73.6326, 212.43, -198.696, 0.29", "-74.7444, 212.971, -200.355, 0.29", "-75.7408, 213.495, -201.642, 0.29", "-76.5065, 213.878, -202.485, 0.29", "-77.8012, 214.457, -203.645, 0.29", "-78.358, 214.683, -204.137, 0.29", "-79.2928, 215.088, -204.945, 0.88", "-79.7892, 215.321, -205.364, 1.25", "-81.3018, 216.02, -206.696, 0.37", "-81.9524, 216.304, -207.456, 0.29", "-82.457, 216.518, -208.225, 0.74", "-82.8177, 216.66, -208.806, 0.74", "-83.512, 216.93, -209.959, 0.37", "-84.1452, 217.174, -211.071, 0.37", "-85.4834, 217.696, -213.609, 0.37", "-85.9216, 217.835, -214.405, 0.37", "-86.8505, 218.069, -215.931, 0.29", "-87.3364, 218.16, -216.625, 0.29", "-88.5821, 218.282, -218.038, 0.66", "-89.7685, 218.349, -219.166, 0.74", "-91.0339, 218.419, -220.184, 0.52", "-91.9437, 218.448, -220.899, 0.96", "-92.78, 218.464, -221.57, 0.96", "-94.3026, 218.521, -222.718, 0.29", "-95.4659, 218.619, -223.497, 0.96", "-96.1476, 218.708, -223.943, 1.11", "-97.2153, 219.002, -224.722, 0.44", "-97.9592, 219.38, -225.31, 0.44", "-98.7855, 220.07, -226.038, 0.44", "-99.4531, 220.809, -226.653, 0.44", "-99.9617, 221.39, -227.098, 0.44", "-100.824, 222.26, -227.843, 0.44", "-101.452, 222.783, -228.412, 0.44", "-102.592, 223.601, -229.432, 0.44", "-103.264, 224.055, -230.046, 0.81", "-104.099, 224.57, -230.815, 0.81", "-105.265, 225.22, -231.877, 0.52", "-106.464, 225.875, -232.975, 0.37", "-107.024, 226.211, -233.534, 0.37", "-107.61, 226.601, -234.183, 1.03", "-108.388, 227.205, -235.208, 1.47", "-108.796, 227.597, -235.854, 1.47", "-109.215, 228.146, -236.677, 0.44", "-109.988, 229.171, -238.458, 0.29", "-110.621, 229.852, -240.066, 0.29", "-111.345, 230.438, -242.16, 0.29", "-111.827, 230.755, -243.69, 0.52", "-112.422, 231.133, -245.567, 0.74", "-113.138, 231.679, -247.862, 0.59", "-113.523, 232.103, -249.264, 0.59", "-114.101, 232.873, -251.473, 0.37", "-114.57, 233.411, -252.928, 0.37", "-115.171, 233.951, -254.365, 0.37", "-115.96, 234.48, -255.809, 0.37", "-117.081, 235.144, -257.426, 0.59", "-117.902, 235.425, -258.339, 0.59", "-119.35, 235.479, -259.469, 2.06", "-119.971, 235.345, -259.85, 2.87", "-121.364, 234.774, -260.55, 2.5", "-122.568, 234.149, -261.019, 1.55", "-123.889, 233.377, -261.412, 0.37", "-124.598, 232.904, -261.602, 0.37", "-125.812, 232.012, -261.901, 0.37", "-127.095, 231.088, -262.224, 0.37", "-128.697, 229.876, -262.63, 0.37", "-129.103, 229.553, -262.745, 0.66", "-129.871, 228.937, -262.984, 0.44", "-130.716, 228.26, -263.267, 0.37", "-131.911, 227.392, -263.619, 0.37", "-132.946, 226.743, -263.909, 0.37", "-134.233, 226.006, -264.242, 0.37", "-135.199, 225.521, -264.471, 0.59", "-136.129, 225.119, -264.688, 0.59", "-137.692, 224.523, -265.033, 0.37", "-138.979, 224.088, -265.29, 0.66", "-139.956, 223.863, -265.463, 0.66", "-140.762, 223.748, -265.558, 0.66", "-141.576, 223.694, -265.627, 0.37", "-142.361, 223.708, -265.683, 0.74", "-143.038, 223.776, -265.736, 0.74", "-144.468, 224.014, -265.786, 0.52", "-146.444, 224.441, -265.865, 0.29", "-147.721, 224.67, -265.929, 0.29", "-148.781, 224.778, -265.998, 1.47", "-149.554, 224.778, -266.073, 1.99", "-150.402, 224.66, -266.186, 1.99", "-152.558, 224.124, -266.564, 0.29", "-154.337, 223.575, -266.975, 0.29", "-155.955, 222.981, -267.378, 0.29", "-157.329, 222.452, -267.743, 0.29", "-159.246, 221.747, -268.305, 0.29", "-160.317, 221.352, -268.676, 0.44", "-161.823, 220.774, -269.322, 0.44", "-163.165, 220.34, -269.995, 0.44", "-164.66, 219.956, -270.807, 0.44", "-166.049, 219.674, -271.583, 0.44", "-167.546, 219.389, -272.423, 0.44", "-169.394, 218.999, -273.421, 0.44", "-170.8, 218.688, -274.154, 0.44", "-172.634, 218.252, -275.178, 0.44", "-173.839, 217.878, -275.889, 1.62", "-174.511, 217.653, -276.286, 2.5", "-174.999, 217.506, -276.567, 2.5", "-177.626, 216.665, -278.085, 0.37", "-178.893, 216.149, -278.848, 0.37", "-180.18, 215.534, -279.674, 0.37", "-181.276, 214.992, -280.324, 0.81", "-182.325, 214.543, -280.86, 0.37", "-183.176, 214.28, -281.212, 0.52", "-183.834, 214.197, -281.374, 0.81", "-184.717, 214.19, -281.513, 0.81", "-186.526, 214.286, -281.815, 0.37", "-188.066, 214.309, -282.101, 0.37", "-189.655, 214.244, -282.423, 0.37", "-190.873, 214.154, -282.639, 0.37", "-192.341, 214.006, -282.878, 0.37", "-194.989, 213.608, -283.288, 0.29", "-196.491, 213.208, -283.534, 0.29", "-197.905, 212.585, -283.73, 0.29", "-199.346, 211.662, -283.843, 0.88", "-200.12, 211.035, -283.833, 0.88", "-201.142, 210.068, -283.716, 0.29", "-202.551, 208.591, -283.432, 0.29", "-204.078, 206.962, -283.103, 0.37", "-206.002, 204.882, -282.699, 0.66", "-207.229, 203.562, -282.5, 0.66", "-208.042, 202.718, -282.377, 0.22", "-208.631, 202.122, -282.288, 0.59", "-209.307, 201.487, -282.204, 0.81", "-209.729, 201.116, -282.17, 0.81", "-211.555, 199.613, -282.042, 0.29", "-212.028, 199.183, -281.992, 0.29", "-213.029, 198.137, -281.811, 0.52", "-213.596, 197.483, -281.622, 0.52", "-214.38, 196.566, -281.301, 0.52", "-216.065, 194.712, -280.58, 0.66", "-217.223, 193.572, -280.1, 0.52", "-218.087, 192.864, -279.741, 0.96", "-219.865, 191.69, -279.046, 0.66", "-221.133, 190.991, -278.578, 0.29", "-222.982, 190.189, -278.002, 0.29", "-224.342, 189.731, -277.681, 0.29", "-226.979, 188.976, -277.139, 0.29", "-227.913, 188.722, -276.977, 1.47", "-228.55, 188.545, -276.888, 1.77", "-230.793, 187.96, -276.553, 0.37", "-233.033, 187.4, -276.256, 0.37", "-234.251, 187.081, -276.101, 0.66", "-235.513, 186.742, -275.915, 0.66", "-236.534, 186.47, -275.694, 0.59", "-238.836, 185.962, -275.064, 0.37", "-240.424, 185.705, -274.539, 0.37", "-242.123, 185.484, -273.911, 0.37", "-244.046, 185.247, -273.106, 0.96", "-245.515, 185.036, -272.398, 0.22", "-247.086, 184.753, -271.575, 0.22", "-247.876, 184.563, -271.144, 0.22", "-249.055, 184.26, -270.523, 0.52", "-250.955, 183.693, -269.677, 0.74", "-252.23, 183.307, -269.245, 0.66", "-254.084, 182.751, -268.717, 0.29", "-255.426, 182.336, -268.401, 0.96", "-256.005, 182.184, -268.298, 1.33", "-258.38, 181.781, -268.008, 0.37", "-260.513, 181.46, -267.789, 0.37", "-261.612, 181.288, -267.66, 0.37", "-263.866, 180.972, -267.304, 0.37", "-265.395, 180.764, -266.996, 0.37", "-268.338, 180.283, -266.261, 0.37", "-270.294, 179.87, -265.68, 0.37", "-271.829, 179.443, -265.08, 0.37", "-273.63, 178.916, -264.18, 1.11", "-274.415, 178.699, -263.722, 1.11", "-275.72, 178.259, -262.893, 0.44", "-276.69, 177.936, -262.268, 0.29", "-278.713, 177.391, -261.077, 0.29", "-280.575, 176.855, -259.933, 0.81", "-282.685, 176.113, -258.606, 0.52", "-284.429, 175.419, -257.55, 0.52", "-285.839, 174.787, -256.649, 0.52", "-286.613, 174.423, -256.085, 0.81", "-288.459, 173.477, -254.679, 0.44", "-289.5, 172.942, -253.832, 0.37", "-290.742, 172.416, -252.743, 0.37", "-292.955, 171.623, -250.853, 0.37", "-295.427, 170.67, -248.781, 1.55", "-296.402, 170.286, -247.98, 2.36", "-296.916, 170.085, -247.569, 2.58", "-299.542, 168.867, -245.345, 0.52", "-300.313, 168.348, -244.585, 0.74", "-301.26, 167.387, -243.583, 0.74", "-302.128, 166.282, -242.518, 0.44", "-302.987, 165.199, -241.316, 0.37", "-303.648, 164.411, -240.377, 0.44", "-304.542, 163.312, -239.067, 0.44", "-305.314, 162.527, -237.926, 0.44", "-306.679, 161.346, -235.959, 0.81", "-307.586, 160.629, -234.74, 1.11", "-308.545, 159.878, -233.667, 0.37", "-309.456, 159.06, -232.743, 0.37", "-311.65, 156.599, -230.583, 1.4", "-312.297, 155.773, -229.936, 1.99", "-312.93, 154.9, -229.344, 1.99", "-314.71, 152.28, -227.726, 0.52", "-315.895, 150.428, -226.651, 0.52", "-316.811, 148.941, -225.895, 0.52", "-318.216, 146.509, -224.968, 0.52", "-318.972, 145.109, -224.445, 0.74", "-319.724, 143.607, -223.8, 0.74", "-320.223, 142.626, -223.326, 0.52", "-320.853, 141.485, -222.791, 0.52", "-321.877, 139.816, -222.043, 0.44", "-323.157, 137.885, -221.238, 0.44", "-324.171, 136.507, -220.6, 0.52", "-325.51, 134.92, -219.786, 0.44", "-326.642, 133.684, -219.088, 0.44", "-327.524, 132.751, -218.501, 2.36", "-328.463, 131.788, -217.86, 3.46" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-46.7871, 213.571, -189.33, 0.37", "-47.0242, 215.504, -189.795, 0.37", "-47.1644, 216.581, -190.048, 0.37", "-47.2584, 217.378, -190.225, 0.59", "-47.3349, 218.32, -190.421, 0.44", "-47.3681, 218.914, -190.539, 0.37", "-47.3864, 219.533, -190.664, 0.37", "-47.3511, 220.657, -190.892, 0.29", "-47.3111, 221.431, -191.045, 0.29", "-47.2464, 222.208, -191.184, 0.29", "-47.1436, 223.221, -191.338, 0.88", "-47.0791, 223.749, -191.423, 1.11", "-47.0063, 224.173, -191.495, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-46.7871, 213.571, -189.33, 0.29", "-45.2742, 215.524, -189.966, 0.29", "-44.5178, 216.576, -190.277, 0.29", "-43.8545, 217.446, -190.647, 0.44", "-43.4985, 217.915, -190.868, 0.44", "-42.8211, 218.849, -191.294, 0.37", "-42.1633, 219.812, -191.708, 0.37", "-41.4198, 220.951, -192.166, 0.37", "-40.1805, 222.89, -192.996, 0.81", "-39.7167, 223.668, -193.335, 0.59", "-38.9514, 225.053, -193.93, 1.33", "-38.4388, 226.074, -194.374, 1.92", "-38.2141, 226.512, -194.567, 1.92" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-88.4359, 268.197, -114.021, 0.52", "-89.5294, 270.903, -113.24, 0.52", "-90.206, 272.417, -112.828, 0.52", "-91.0728, 274.168, -112.37, 0.52", "-91.65, 275.313, -112.076, 0.52", "-92.356, 276.751, -111.706, 0.52", "-92.7709, 277.647, -111.469, 0.66", "-93.2014, 278.531, -111.225, 0.29", "-93.4827, 279.139, -111.075, 0.29", "-94.1266, 280.77, -110.743, 0.29", "-94.5761, 281.898, -110.501, 0.29", "-94.9847, 283.09, -110.26, 0.29", "-95.3767, 284.329, -109.996, 1.25", "-95.5984, 285.043, -109.839, 1.55", "-96.0041, 286.391, -109.556, 0.22", "-96.6169, 287.985, -109.28, 0.22" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-88.4359, 268.197, -114.021, 0.29", "-89.6302, 269.758, -113.471, 0.29", "-90.3184, 270.643, -113.093, 0.29", "-91.025, 271.559, -112.68, 0.29", "-91.8536, 272.689, -112.208, 0.37", "-92.3474, 273.434, -111.933, 0.37", "-92.7212, 274.064, -111.724, 0.29", "-93.3166, 275.304, -111.34, 0.29", "-93.7012, 276.194, -111.087, 0.29", "-94.1963, 277.497, -110.776, 0.29", "-94.7083, 278.922, -110.416, 0.29", "-95.0774, 279.997, -110.138, 0.52", "-95.3155, 280.698, -109.963, 0.29", "-95.7982, 282.156, -109.597, 0.29", "-96.1566, 283.277, -109.278, 0.29", "-96.5999, 284.697, -108.825, 0.59", "-96.935, 285.757, -108.48, 0.74", "-97.256, 286.808, -108.147, 0.22", "-97.4489, 287.51, -107.942, 0.22", "-97.7084, 288.655, -107.668, 0.22", "-97.8993, 289.571, -107.459, 0.22", "-98.058, 290.334, -107.309, 0.74", "-98.1582, 290.763, -107.218, 0.74", "-98.3343, 291.312, -107.095, 0.29", "-98.6992, 292.251, -106.881, 0.59", "-99.1958, 293.28, -106.613, 0.29", "-99.7576, 294.339, -106.314, 0.29", "-100.323, 295.242, -106.052, 0.29", "-100.94, 296.088, -105.805, 0.29", "-101.652, 296.91, -105.529, 0.29", "-102.503, 297.791, -105.192, 0.29", "-103.162, 298.431, -104.908, 0.29", "-104.348, 299.559, -104.333, 0.29", "-105.043, 300.23, -103.964, 0.29", "-106.097, 301.255, -103.367, 1.4", "-106.744, 301.864, -102.988, 1.77", "-107.891, 303.017, -102.227, 0.37", "-108.465, 303.617, -101.786, 0.66", "-108.681, 303.918, -101.556, 0.66" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-65.8011, 216.223, -176.654, 0.29", "-65.1132, 217.528, -175.377, 0.29", "-64.8398, 218.307, -174.642, 0.22", "-64.6591, 219.201, -173.82, 0.22", "-64.6087, 220.429, -172.674, 0.44", "-64.6461, 221.171, -171.994, 0.44", "-64.7076, 222.27, -171.063, 0.44", "-64.8674, 223.086, -170.427, 0.74", "-64.9981, 223.753, -169.894, 0.74", "-65.2116, 224.79, -169.127, 0.44", "-65.3377, 225.626, -168.52, 0.29", "-65.3864, 226.701, -167.739, 0.29", "-65.2771, 227.789, -166.964, 0.29", "-64.6948, 230.04, -165.306, 0.29", "-64.2552, 231.191, -164.421, 0.29", "-63.8575, 231.98, -163.727, 0.29", "-63.4495, 232.728, -163.055, 0.29", "-62.9427, 233.64, -162.304, 0.81", "-62.2982, 234.82, -161.425, 1.47", "-61.8332, 235.676, -160.879, 1.84", "-60.14, 238.736, -159.104, 0.29", "-59.4434, 240.076, -158.418, 0.29", "-58.615, 241.699, -157.557, 0.29", "-57.4601, 243.88, -156.37, 1.84", "-56.5457, 245.545, -155.483, 0.37", "-55.9433, 246.658, -154.895, 0.37", "-55.502, 247.492, -154.452, 0.37", "-54.1477, 250.16, -152.792, 0.66", "-53.643, 251.268, -151.917, 0.37", "-53.4505, 251.86, -151.374, 0.37", "-53.2644, 252.775, -150.477, 0.59", "-53.1898, 253.221, -150.075, 0.59", "-53.0881, 253.987, -149.474, 0.44", "-52.7325, 257.259, -147.417, 0.44", "-52.5447, 258.862, -146.494, 0.29", "-52.3329, 260.345, -145.704, 0.29", "-52.0007, 262.398, -144.755, 0.29", "-51.8357, 263.346, -144.348, 0.29", "-51.5887, 264.629, -143.865, 0.29", "-51.3092, 266.018, -143.431, 1.18", "-51.2001, 266.532, -143.252, 1.55", "-50.9354, 268.122, -142.481, 0.66", "-50.5945, 270.024, -141.148, 1.03", "-50.4469, 270.656, -140.58, 1.03", "-50.0555, 272.028, -139.117, 0.29", "-49.8666, 272.626, -138.435, 0.29", "-49.417, 273.918, -136.974, 0.66", "-48.8049, 275.522, -134.994, 0.37", "-48.4179, 276.532, -133.741, 0.37", "-48.1985, 277.074, -133.025, 0.37", "-47.8553, 277.782, -132.042, 1.47", "-47.4053, 278.535, -131.083, 1.69" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-65.8011, 216.223, -176.654, 0.29", "-64.8585, 218.353, -176.883, 0.29", "-64.2719, 219.632, -176.932, 0.29", "-63.721, 220.865, -176.911, 1.69", "-62.9106, 222.737, -176.801, 0.29", "-62.6189, 223.442, -176.731, 0.29", "-62.2603, 224.422, -176.599, 0.29", "-61.9425, 225.303, -176.375, 0.29", "-61.7368, 225.96, -176.192, 0.29", "-61.4959, 226.878, -175.95, 0.59", "-61.3152, 227.887, -175.736, 0.29", "-61.1925, 229.003, -175.532, 0.29", "-61.1706, 229.562, -175.453, 0.59", "-61.1936, 230.27, -175.397, 0.59", "-61.2995, 231.07, -175.333, 0.29", "-61.4467, 231.737, -175.28, 0.29", "-61.6306, 232.508, -175.22, 0.88", "-61.7394, 232.977, -175.182, 1.03", "-61.9992, 233.986, -175.089, 0.29", "-62.2866, 235.041, -174.988, 0.29", "-62.5295, 235.948, -174.95, 0.29", "-62.696, 236.664, -174.972, 0.29", "-62.866, 237.481, -175.072, 0.29", "-63.034, 238.305, -175.266, 0.66", "-63.1237, 238.741, -175.433, 0.88", "-63.2736, 239.523, -175.852, 0.29", "-63.4158, 240.084, -176.234, 0.29", "-63.627, 240.791, -176.862, 0.29", "-63.8159, 241.446, -177.646, 0.29", "-63.9668, 241.941, -178.365, 0.29", "-64.1471, 242.463, -179.228, 0.59", "-64.3765, 243.0, -180.215, 0.44", "-64.6744, 243.588, -181.352, 0.81", "-65.0516, 244.201, -182.594, 0.37", "-65.3556, 244.633, -183.401, 0.29", "-65.5876, 244.934, -183.891, 0.29", "-65.8566, 245.267, -184.353, 0.29", "-66.267, 245.852, -184.987, 0.59", "-66.8172, 246.629, -185.676, 0.29", "-67.2982, 247.31, -186.186, 0.22", "-67.5552, 247.708, -186.472, 0.22", "-67.9363, 248.365, -186.917, 1.25", "-68.1297, 248.749, -187.165, 1.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-38.2141, 226.512, -194.567, 0.44", "-38.5279, 227.642, -195.108, 0.44", "-38.7921, 228.772, -195.653, 0.37", "-38.9453, 229.519, -195.996, 0.37", "-39.0969, 230.26, -196.324, 0.37", "-39.2181, 230.871, -196.604, 0.37", "-39.4168, 231.834, -197.044, 0.29", "-39.5868, 232.937, -197.515, 1.25", "-39.6441, 233.504, -197.755, 1.62", "-39.668, 234.023, -198.001, 1.62", "-39.6907, 235.445, -198.701, 0.29", "-39.6835, 236.127, -199.027, 0.29", "-39.6223, 237.011, -199.442, 0.29", "-39.4982, 237.838, -199.834, 0.59", "-39.2074, 239.339, -200.536, 0.29", "-39.1036, 239.838, -200.766, 0.29", "-38.9591, 240.547, -201.099, 0.29", "-38.8939, 240.971, -201.305, 0.29", "-38.8432, 241.55, -201.569, 0.59", "-38.8118, 242.24, -201.833, 0.59", "-38.7761, 243.61, -202.305, 0.29", "-38.7463, 244.443, -202.609, 0.29", "-38.7059, 245.385, -202.947, 0.29", "-38.6348, 246.626, -203.384, 0.37", "-38.5909, 247.275, -203.605, 0.37", "-38.4904, 248.429, -203.96, 0.37", "-38.3928, 249.39, -204.219, 0.37", "-38.2612, 250.711, -204.521, 0.44", "-38.1642, 251.596, -204.685, 0.66", "-38.0931, 252.262, -204.785, 0.66", "-37.9754, 253.642, -204.883, 0.29", "-37.9343, 254.262, -204.872, 0.74", "-37.8869, 255.484, -204.783, 0.29", "-37.8801, 256.86, -204.638, 0.37", "-37.8843, 257.663, -204.537, 0.37", "-37.9061, 259.043, -204.373, 0.37", "-37.9337, 259.911, -204.284, 0.37", "-37.9849, 260.904, -204.219, 0.37", "-38.0653, 262.004, -204.196, 0.29", "-38.1624, 263.071, -204.218, 0.29", "-38.2341, 264.576, -204.309, 0.29", "-38.2326, 265.252, -204.381, 0.29", "-38.2085, 266.168, -204.489, 1.03", "-38.1777, 266.861, -204.575, 1.33", "-38.121, 268.3, -204.758, 0.52", "-38.0822, 269.524, -204.909, 0.52", "-38.0297, 270.703, -205.045, 0.52", "-37.9888, 271.671, -205.149, 0.81", "-37.9737, 272.196, -205.203, 0.81", "-37.9919, 273.643, -205.345, 0.37", "-38.051, 274.844, -205.445, 0.37", "-38.131, 275.842, -205.508, 0.96", "-38.1675, 276.288, -205.534, 1.33", "-38.224, 276.857, -205.572, 1.4", "-38.3858, 278.165, -205.677, 0.52", "-38.5271, 279.108, -205.768, 0.44", "-38.7624, 280.327, -205.915, 0.37", "-38.9812, 281.407, -206.054, 0.37", "-39.1566, 282.308, -206.167, 0.37", "-39.2729, 282.916, -206.242, 0.37", "-39.5067, 283.947, -206.389, 0.74", "-39.5793, 284.177, -206.43, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-38.2141, 226.512, -194.567, 0.37", "-37.7201, 227.909, -196.007, 0.37", "-37.3091, 228.906, -196.917, 0.74", "-36.5189, 230.456, -198.313, 0.29", "-36.0307, 231.25, -199.085, 0.29", "-35.4743, 232.061, -199.888, 1.25", "-35.2446, 232.379, -200.206, 1.25", "-34.5898, 233.184, -200.974, 0.29", "-33.8807, 233.957, -201.7, 0.29", "-33.0764, 234.776, -202.495, 0.29", "-32.6186, 235.246, -203.03, 0.29", "-32.2555, 235.653, -203.577, 0.29", "-31.8528, 236.14, -204.29, 0.29", "-31.4848, 236.715, -205.142, 1.03", "-30.8857, 237.896, -206.776, 0.37", "-30.5793, 238.553, -207.638, 0.37", "-30.288, 239.094, -208.414, 0.37", "-30.0376, 239.557, -209.101, 1.03", "-29.6146, 240.345, -210.312, 0.52", "-29.29, 240.896, -211.16, 0.52", "-28.9112, 241.486, -211.927, 0.44", "-27.9642, 242.767, -213.504, 1.62" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_51", "dend_22", "dend_17", "dend_0", "dend_26", "dend_23", "dend_21", "dend_18", "dend_2", "dend_1", "dend_50", "dend_27", "dend_25", "dend_24", "dend_20", "dend_19", "dend_4", "dend_3", "dend_49", "dend_28", "dend_16", "dend_5", "dend_30", "dend_29", "dend_7", "dend_6", "dend_48", "dend_31", "dend_11", "dend_8", "dend_37", "dend_32", "dend_15", "dend_12", "dend_10", "dend_9", "dend_43", "dend_38", "dend_36", "dend_33", "dend_14", "dend_13", "dend_45", "dend_44", "dend_42", "dend_39", "dend_35", "dend_34", "dend_47", "dend_46", "dend_41", "dend_40" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_51", "dend_22", "dend_17", "dend_0", "dend_26", "dend_23", "dend_21", "dend_18", "dend_2", "dend_1", "dend_50", "dend_27", "dend_25", "dend_24", "dend_20", "dend_19", "dend_4", "dend_3", "dend_49", "dend_28", "dend_16", "dend_5", "dend_30", "dend_29", "dend_7", "dend_6", "dend_48", "dend_31", "dend_11", "dend_8", "dend_37", "dend_32", "dend_15", "dend_12", "dend_10", "dend_9", "dend_43", "dend_38", "dend_36", "dend_33", "dend_14", "dend_13", "dend_45", "dend_44", "dend_42", "dend_39", "dend_35", "dend_34", "dend_47", "dend_46", "dend_41", "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_5", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_LBC_b883da43ff_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_50, id: dend_50, parent: dend_26
create dend_50
public dend_50
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_49, id: dend_49, parent: dend_27
create dend_49
public dend_49
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_16, id: dend_16, parent: dend_4
create dend_16
public dend_16
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_48, id: dend_48, parent: dend_30
create dend_48
public dend_48
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_50
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_51(0), soma_0(0.4500009556479821)
    connect dend_22(0), soma_0(0.4500009556479821)
    connect dend_17(0), soma_0(0.4500009556479821)
    connect dend_0(0), soma_0(0.4500009556479821)
    connect axon_0(0), soma_0(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_50(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_49(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_16(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_48(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.24986, 8.66179, -0.266886, 1.81928 ) }
    soma_0 { pt3dadd( -1.99773, 7.71094, -0.243919, 3.13771 ) }
    soma_0 { pt3dadd( -1.74561, 6.7601, -0.220952, 4.2898 ) }
    soma_0 { pt3dadd( -1.49349, 5.80925, -0.197985, 6.24218 ) }
    soma_0 { pt3dadd( -1.24137, 4.8584, -0.175018, 7.75134 ) }
    soma_0 { pt3dadd( -0.989246, 3.90756, -0.152051, 8.81916 ) }
    soma_0 { pt3dadd( -0.737124, 2.95671, -0.129084, 9.30643 ) }
    soma_0 { pt3dadd( -0.485002, 2.00586, -0.106117, 9.79367 ) }
    soma_0 { pt3dadd( -0.23288, 1.05502, -0.0831497, 10.3575 ) }
    soma_0 { pt3dadd( 0.0192416, 0.104171, -0.0601827, 10.6175 ) }
    soma_0 { pt3dadd( 0.271364, -0.846675, -0.0372157, 10.6286 ) }
    soma_0 { pt3dadd( 0.523485, -1.79752, -0.0142487, 10.564 ) }
    soma_0 { pt3dadd( 0.775607, -2.74837, 0.00871831, 10.4925 ) }
    soma_0 { pt3dadd( 1.02773, -3.69921, 0.0316853, 10.2088 ) }
    soma_0 { pt3dadd( 1.27985, -4.65006, 0.0546523, 9.65193 ) }
    soma_0 { pt3dadd( 1.53197, -5.60091, 0.0776193, 9.00896 ) }
    soma_0 { pt3dadd( 1.7841, -6.55175, 0.100586, 8.08521 ) }
    soma_0 { pt3dadd( 2.03622, -7.5026, 0.123553, 6.83318 ) }
    soma_0 { pt3dadd( 2.28834, -8.45345, 0.14652, 5.15146 ) }
    soma_0 { pt3dadd( 2.54046, -9.40429, 0.169487, 3.38897 ) }
    soma_0 { pt3dadd( 2.79258, -10.3551, 0.192454, 2.13858 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 21/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -4.45367, 0.250762, 4.43561, 0.96 ) }
    dend_51 { pt3dadd( -5.05964, -0.361561, 5.28281, 0.96 ) }
    dend_51 { pt3dadd( -5.53384, -0.741733, 5.88773, 0.88 ) }
    dend_51 { pt3dadd( -7.07859, -1.78413, 7.6432, 0.81 ) }
    dend_51 { pt3dadd( -7.74605, -2.20565, 8.32335, 0.74 ) }
    dend_51 { pt3dadd( -8.79998, -2.89147, 9.32117, 0.66 ) }
    dend_51 { pt3dadd( -9.44018, -3.33283, 10.0146, 0.59 ) }
    dend_51 { pt3dadd( -9.96021, -3.74926, 10.6851, 0.81 ) }
    dend_51 { pt3dadd( -10.3593, -4.05455, 11.2111, 0.81 ) }
    dend_51 { pt3dadd( -11.1963, -4.58511, 12.3017, 0.59 ) }
    dend_51 { pt3dadd( -11.9093, -4.98497, 13.2831, 1.33 ) }
    dend_51 { pt3dadd( -13.6108, -5.84066, 15.7821, 1.55 ) }
    dend_51 { pt3dadd( -14.8502, -6.43398, 17.7943, 0.74 ) }
    dend_51 { pt3dadd( -15.2861, -6.60577, 18.5319, 0.59 ) }
    dend_51 { pt3dadd( -15.8869, -6.79218, 19.5591, 1.03 ) }
    dend_51 { pt3dadd( -16.1268, -6.83475, 19.966, 1.47 ) }
    dend_51 { pt3dadd( -16.7913, -6.86374, 21.0667, 1.47 ) }
    dend_51 { pt3dadd( -18.0923, -6.81977, 23.2586, 0.81 ) }
    dend_51 { pt3dadd( -18.5603, -6.82714, 24.2176, 0.59 ) }
    dend_51 { pt3dadd( -18.9995, -6.93182, 25.3298, 0.59 ) }
    dend_51 { pt3dadd( -19.2806, -7.07977, 26.1252, 0.96 ) }
    dend_51 { pt3dadd( -19.5442, -7.31225, 26.9723, 0.96 ) }
    dend_51 { pt3dadd( -20.2594, -8.1666, 29.6326, 0.59 ) }
    dend_51 { pt3dadd( -20.5704, -8.73866, 31.2453, 0.59 ) }
    dend_51 { pt3dadd( -20.7304, -9.20477, 32.4932, 0.44 ) }
    dend_51 { pt3dadd( -20.7993, -9.5205, 33.2744, 1.18 ) }
    dend_51 { pt3dadd( -20.8491, -9.86878, 33.9561, 1.47 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 48/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -1.51366, 8.37777, 1.68561, 3.24 ) }
    dend_22 { pt3dadd( -1.51928, 8.98899, 1.79645, 3.24 ) }
    dend_22 { pt3dadd( -1.53835, 11.0649, 2.17291, 2.58 ) }
    dend_22 { pt3dadd( -1.55327, 12.6895, 2.46753, 2.36 ) }
    dend_22 { pt3dadd( -1.56543, 14.0129, 2.70752, 2.36 ) }
    dend_22 { pt3dadd( -1.57949, 15.5437, 2.98513, 2.36 ) }
    dend_22 { pt3dadd( -1.58629, 16.2834, 3.11927, 2.5 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 55/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 5.55634, -6.66873, 3.06561, 1.18 ) }
    dend_17 { pt3dadd( 5.81824, -6.76482, 3.30278, 1.18 ) }
    dend_17 { pt3dadd( 7.41832, -7.49413, 4.46375, 0.88 ) }
    dend_17 { pt3dadd( 8.29773, -7.89892, 4.96346, 1.11 ) }
    dend_17 { pt3dadd( 10.7449, -8.95871, 6.0649, 1.33 ) }
    dend_17 { pt3dadd( 11.964, -9.4467, 6.49547, 1.33 ) }
    dend_17 { pt3dadd( 13.3479, -9.98549, 6.98484, 1.25 ) }
    dend_17 { pt3dadd( 15.0193, -10.6195, 7.48937, 0.96 ) }
    dend_17 { pt3dadd( 16.3779, -11.1557, 7.79526, 0.96 ) }
    dend_17 { pt3dadd( 17.5103, -11.628, 7.97877, 1.25 ) }
    dend_17 { pt3dadd( 18.9018, -12.1675, 8.16745, 1.25 ) }
    dend_17 { pt3dadd( 20.8631, -12.8011, 8.54947, 1.47 ) }
    dend_17 { pt3dadd( 22.1718, -13.1427, 8.90273, 0.74 ) }
    dend_17 { pt3dadd( 23.1803, -13.3263, 9.30859, 0.74 ) }
    dend_17 { pt3dadd( 24.6655, -13.532, 10.0234, 0.59 ) }
    dend_17 { pt3dadd( 26.5877, -13.7711, 10.9848, 0.59 ) }
    dend_17 { pt3dadd( 27.3553, -13.8585, 11.3529, 0.81 ) }
    dend_17 { pt3dadd( 28.2378, -13.9571, 11.6966, 0.81 ) }
    dend_17 { pt3dadd( 30.303, -14.1145, 12.5683, 0.52 ) }
    dend_17 { pt3dadd( 31.0912, -14.1282, 12.913, 0.52 ) }
    dend_17 { pt3dadd( 32.3702, -14.0923, 13.4599, 0.52 ) }
    dend_17 { pt3dadd( 33.3669, -14.2103, 13.7614, 0.59 ) }
    dend_17 { pt3dadd( 34.9144, -14.6678, 14.0522, 1.47 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 78/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.77634, -10.3018, 1.87561, 2.43 ) }
    dend_0 { pt3dadd( 1.77634, -10.3018, 1.87561, 2.43 ) }
    dend_0 { pt3dadd( 1.84093, -11.3892, 1.62195, 2.06 ) }
    dend_0 { pt3dadd( 1.93741, -13.0134, 1.24306, 1.33 ) }
    dend_0 { pt3dadd( 2.03214, -14.6083, 0.871033, 0.88 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 83/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.79258, -10.3551, 0.192454, 0.59 ) }
    axon_0 { pt3dadd( 6.63706, -24.8541, 0.192454, 0.59 ) }
    axon_0 { pt3dadd( 10.4816, -39.353, 0.192454, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 86/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -1.58629, 16.2834, 3.11927, 2.06 ) }
    dend_26 { pt3dadd( -1.34376, 16.9088, 4.06607, 2.06 ) }
    dend_26 { pt3dadd( -0.822121, 18.2241, 5.8277, 1.92 ) }
    dend_26 { pt3dadd( -0.313598, 19.5439, 7.44645, 1.47 ) }
    dend_26 { pt3dadd( -0.0847755, 20.1763, 8.15019, 1.47 ) }
    dend_26 { pt3dadd( 0.277268, 21.2408, 9.22017, 1.25 ) }
    dend_26 { pt3dadd( 0.544759, 22.0273, 10.0107, 1.77 ) }
    dend_26 { pt3dadd( 0.81572, 22.8837, 10.822, 1.55 ) }
    dend_26 { pt3dadd( 1.15527, 23.9531, 11.6318, 1.62 ) }
    dend_26 { pt3dadd( 1.38188, 24.7152, 12.1076, 2.21 ) }
    dend_26 { pt3dadd( 1.61559, 25.5726, 12.5892, 2.65 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 97/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.58629, 16.2834, 3.11927, 0.59 ) }
    dend_23 { pt3dadd( -3.41393, 16.3767, 3.3631, 0.59 ) }
    dend_23 { pt3dadd( -4.39999, 16.3551, 3.52301, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( -5.26716, 16.2697, 3.61918, 0.59 ) }
    dend_23 { pt3dadd( -7.07293, 16.0216, 3.67423, 0.52 ) }
    dend_23 { pt3dadd( -8.29035, 15.8515, 3.65219, 0.81 ) }
    dend_23 { pt3dadd( -9.23127, 15.7296, 3.61592, 1.18 ) }
    dend_23 { pt3dadd( -9.93939, 15.6066, 3.58949, 1.18 ) }
    dend_23 { pt3dadd( -11.6694, 15.2791, 3.49283, 0.66 ) }
    dend_23 { pt3dadd( -13.1935, 15.0191, 3.4182, 0.66 ) }
    dend_23 { pt3dadd( -14.1939, 14.881, 3.39861, 1.25 ) }
    dend_23 { pt3dadd( -14.7565, 14.8218, 3.40981, 1.47 ) }
    dend_23 { pt3dadd( -16.0261, 14.7309, 3.46352, 0.52 ) }
    dend_23 { pt3dadd( -16.9412, 14.6914, 3.55472, 0.52 ) }
    dend_23 { pt3dadd( -18.3771, 14.6611, 3.88689, 0.52 ) }
    dend_23 { pt3dadd( -19.2551, 14.6232, 4.18748, 1.03 ) }
    dend_23 { pt3dadd( -19.8738, 14.5672, 4.42542, 1.33 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 14/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 34.9144, -14.6678, 14.0522, 0.52 ) }
    dend_21 { pt3dadd( 34.866, -16.594, 13.7278, 0.52 ) }
    dend_21 { pt3dadd( 34.7118, -17.3818, 13.6059, 0.37 ) }
    dend_21 { pt3dadd( 34.1749, -19.1736, 13.2773, 0.37 ) }
    dend_21 { pt3dadd( 33.6798, -20.4417, 12.9043, 0.59 ) }
    dend_21 { pt3dadd( 33.3804, -21.1288, 12.6485, 0.22 ) }
    dend_21 { pt3dadd( 32.6735, -22.6402, 12.0686, 0.22 ) }
    dend_21 { pt3dadd( 32.1372, -23.6299, 11.6219, 0.22 ) }
    dend_21 { pt3dadd( 31.1708, -25.2248, 10.8553, 0.74 ) }
    dend_21 { pt3dadd( 29.6866, -27.3942, 9.78353, 0.29 ) }
    dend_21 { pt3dadd( 28.705, -28.8153, 9.05445, 0.07 ) }
    dend_21 { pt3dadd( 28.2487, -29.5315, 8.64787, 0.07 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 26/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 34.9144, -14.6678, 14.0522, 1.03 ) }
    dend_18 { pt3dadd( 36.158, -14.6486, 14.883, 1.03 ) }
    dend_18 { pt3dadd( 36.707, -14.6966, 15.0181, 0.52 ) }
    dend_18 { pt3dadd( 37.5772, -14.7041, 15.1151, 0.52 ) }
    dend_18 { pt3dadd( 39.3328, -14.6479, 15.2375, 0.37 ) }
    dend_18 { pt3dadd( 40.3349, -14.62, 15.2392, 0.37 ) }
    dend_18 { pt3dadd( 42.7576, -14.5648, 15.1434, 0.37 ) }
    dend_18 { pt3dadd( 49.0032, -14.5414, 14.4507, 0.37 ) }
    dend_18 { pt3dadd( 52.6533, -14.5592, 13.8722, 0.66 ) }
    dend_18 { pt3dadd( 53.6073, -14.5636, 13.6731, 0.66 ) }
    dend_18 { pt3dadd( 55.9109, -14.5618, 13.0079, 0.74 ) }
    dend_18 { pt3dadd( 56.9231, -14.5452, 12.6394, 0.74 ) }
    dend_18 { pt3dadd( 58.213, -14.5099, 12.0108, 0.37 ) }
    dend_18 { pt3dadd( 59.004, -14.4936, 11.5342, 0.37 ) }
    dend_18 { pt3dadd( 59.7719, -14.5299, 11.1256, 0.37 ) }
    dend_18 { pt3dadd( 60.5177, -14.5146, 10.8552, 0.81 ) }
    dend_18 { pt3dadd( 61.4848, -14.3851, 10.6995, 0.81 ) }
    dend_18 { pt3dadd( 62.241, -14.2588, 10.6384, 0.81 ) }
    dend_18 { pt3dadd( 63.4434, -14.1157, 10.6481, 0.37 ) }
    dend_18 { pt3dadd( 64.3304, -14.1218, 10.6919, 0.29 ) }
    dend_18 { pt3dadd( 65.3083, -14.2591, 10.7863, 0.29 ) }
    dend_18 { pt3dadd( 66.5044, -14.535, 10.9843, 0.44 ) }
    dend_18 { pt3dadd( 67.4, -14.7901, 11.2209, 0.44 ) }
    dend_18 { pt3dadd( 68.7856, -15.2237, 11.6634, 0.44 ) }
    dend_18 { pt3dadd( 70.0055, -15.6204, 12.0706, 0.88 ) }
    dend_18 { pt3dadd( 70.5267, -15.7659, 12.2669, 0.88 ) }
    dend_18 { pt3dadd( 71.7943, -15.9657, 12.8558, 0.52 ) }
    dend_18 { pt3dadd( 72.9562, -15.9141, 13.5181, 0.74 ) }
    dend_18 { pt3dadd( 73.9172, -15.6787, 14.0889, 0.81 ) }
    dend_18 { pt3dadd( 74.512, -15.4375, 14.4176, 0.81 ) }
    dend_18 { pt3dadd( 75.2686, -15.0728, 14.7938, 0.52 ) }
    dend_18 { pt3dadd( 76.2473, -14.5945, 15.2102, 0.52 ) }
    dend_18 { pt3dadd( 76.7504, -14.3747, 15.3804, 0.74 ) }
    dend_18 { pt3dadd( 77.5465, -14.1113, 15.5893, 0.74 ) }
    dend_18 { pt3dadd( 78.4077, -13.9404, 15.7871, 0.59 ) }
    dend_18 { pt3dadd( 79.2413, -13.8956, 15.9409, 0.59 ) }
    dend_18 { pt3dadd( 80.3084, -13.9752, 16.085, 0.66 ) }
    dend_18 { pt3dadd( 81.098, -14.1392, 16.1357, 0.88 ) }
    dend_18 { pt3dadd( 81.6241, -14.3118, 16.141, 0.88 ) }
    dend_18 { pt3dadd( 82.2351, -14.626, 16.1118, 0.52 ) }
    dend_18 { pt3dadd( 82.9714, -15.1719, 16.0367, 0.52 ) }
    dend_18 { pt3dadd( 83.4584, -15.691, 15.9457, 0.52 ) }
    dend_18 { pt3dadd( 84.1536, -16.7426, 15.7626, 0.44 ) }
    dend_18 { pt3dadd( 84.5772, -17.506, 15.5811, 0.44 ) }
    dend_18 { pt3dadd( 85.1088, -18.5634, 15.2602, 0.59 ) }
    dend_18 { pt3dadd( 85.3265, -19.0115, 15.089, 0.74 ) }
    dend_18 { pt3dadd( 85.6859, -19.6477, 14.7606, 0.52 ) }
    dend_18 { pt3dadd( 86.0433, -19.8735, 14.4763, 0.37 ) }
    dend_18 { pt3dadd( 87.3976, -19.7143, 13.6196, 0.52 ) }
    dend_18 { pt3dadd( 87.937, -19.6177, 13.3129, 0.52 ) }
    dend_18 { pt3dadd( 88.5858, -19.5146, 12.986, 0.52 ) }
    dend_18 { pt3dadd( 89.684, -19.391, 12.5013, 0.52 ) }
    dend_18 { pt3dadd( 90.7336, -19.2694, 12.0897, 0.52 ) }
    dend_18 { pt3dadd( 91.7695, -19.1548, 11.721, 0.66 ) }
    dend_18 { pt3dadd( 92.6274, -19.0931, 11.4652, 0.66 ) }
    dend_18 { pt3dadd( 93.497, -19.0335, 11.2071, 0.37 ) }
    dend_18 { pt3dadd( 94.3118, -18.9972, 10.9757, 0.37 ) }
    dend_18 { pt3dadd( 95.2135, -18.9936, 10.7448, 0.37 ) }
    dend_18 { pt3dadd( 95.8253, -19.0079, 10.5744, 0.66 ) }
    dend_18 { pt3dadd( 96.1376, -19.0271, 10.4684, 0.66 ) }
    dend_18 { pt3dadd( 96.5167, -19.0785, 10.2805, 0.66 ) }
    dend_18 { pt3dadd( 96.8875, -19.1716, 10.0385, 0.66 ) }
    dend_18 { pt3dadd( 97.4523, -19.3793, 9.61126, 0.37 ) }
    dend_18 { pt3dadd( 98.2191, -19.7378, 9.01421, 0.37 ) }
    dend_18 { pt3dadd( 99.0232, -20.0948, 8.44953, 0.37 ) }
    dend_18 { pt3dadd( 99.7139, -20.3491, 8.01808, 0.22 ) }
    dend_18 { pt3dadd( 100.384, -20.5483, 7.6719, 0.37 ) }
    dend_18 { pt3dadd( 100.938, -20.6358, 7.46444, 0.44 ) }
    dend_18 { pt3dadd( 101.493, -20.6176, 7.34375, 0.44 ) }
    dend_18 { pt3dadd( 102.692, -20.3815, 7.25977, 0.52 ) }
    dend_18 { pt3dadd( 103.082, -20.2678, 7.25871, 0.37 ) }
    dend_18 { pt3dadd( 103.697, -20.0577, 7.27645, 0.37 ) }
    dend_18 { pt3dadd( 104.296, -19.8556, 7.27258, 0.52 ) }
    dend_18 { pt3dadd( 104.719, -19.7072, 7.20735, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_18 { pt3dadd( 105.061, -19.5875, 7.08645, 0.88 ) }
    dend_18 { pt3dadd( 105.299, -19.4928, 6.95604, 0.88 ) }
    dend_18 { pt3dadd( 105.609, -19.3489, 6.77124, 1.03 ) }
    dend_18 { pt3dadd( 106.001, -19.1361, 6.51664, 1.03 ) }
    dend_18 { pt3dadd( 106.603, -18.8106, 6.11299, 0.52 ) }
    dend_18 { pt3dadd( 107.321, -18.462, 5.6228, 0.29 ) }
    dend_18 { pt3dadd( 107.932, -18.2469, 5.24375, 0.66 ) }
    dend_18 { pt3dadd( 108.406, -18.1223, 4.96326, 0.81 ) }
    dend_18 { pt3dadd( 108.868, -18.0378, 4.70107, 0.81 ) }
    dend_18 { pt3dadd( 109.287, -17.98, 4.46945, 0.81 ) }
    dend_18 { pt3dadd( 109.969, -17.9174, 4.12352, 0.37 ) }
    dend_18 { pt3dadd( 111.277, -17.9029, 3.491, 0.37 ) }
    dend_18 { pt3dadd( 111.928, -17.9304, 3.20549, 0.44 ) }
    dend_18 { pt3dadd( 112.487, -17.945, 2.97296, 0.59 ) }
    dend_18 { pt3dadd( 113.004, -17.9261, 2.76723, 0.59 ) }
    dend_18 { pt3dadd( 113.765, -17.8343, 2.47919, 0.59 ) }
    dend_18 { pt3dadd( 114.466, -17.678, 2.23049, 0.52 ) }
    dend_18 { pt3dadd( 115.259, -17.4383, 1.95632, 0.74 ) }
    dend_18 { pt3dadd( 115.807, -17.2873, 1.79846, 0.74 ) }
    dend_18 { pt3dadd( 116.591, -17.1284, 1.55298, 0.37 ) }
    dend_18 { pt3dadd( 117.186, -17.0492, 1.34729, 0.44 ) }
    dend_18 { pt3dadd( 117.838, -16.9988, 1.10059, 0.66 ) }
    dend_18 { pt3dadd( 118.322, -16.9914, 0.910435, 0.74 ) }
    dend_18 { pt3dadd( 118.854, -17.0385, 0.709635, 0.74 ) }
    dend_18 { pt3dadd( 119.96, -17.2018, 0.287915, 0.59 ) }
    dend_18 { pt3dadd( 120.273, -17.2583, 0.161447, 0.59 ) }
    dend_18 { pt3dadd( 120.731, -17.3328, -0.0422087, 0.59 ) }
    dend_18 { pt3dadd( 121.183, -17.4088, -0.273886, 0.37 ) }
    dend_18 { pt3dadd( 121.883, -17.5013, -0.658569, 0.59 ) }
    dend_18 { pt3dadd( 122.493, -17.5558, -1.02334, 0.81 ) }
    dend_18 { pt3dadd( 122.956, -17.5731, -1.27738, 0.81 ) }
    dend_18 { pt3dadd( 123.667, -17.6034, -1.62466, 0.52 ) }
    dend_18 { pt3dadd( 124.459, -17.6129, -1.96526, 0.37 ) }
    dend_18 { pt3dadd( 125.006, -17.5969, -2.16414, 0.29 ) }
    dend_18 { pt3dadd( 125.42, -17.5651, -2.28006, 0.29 ) }
    dend_18 { pt3dadd( 126.359, -17.4083, -2.45964, 0.52 ) }
    dend_18 { pt3dadd( 127.297, -17.1779, -2.58638, 0.52 ) }
    dend_18 { pt3dadd( 127.927, -17.0203, -2.63775, 0.88 ) }
    dend_18 { pt3dadd( 128.439, -16.9211, -2.68551, 0.88 ) }
    dend_18 { pt3dadd( 128.83, -16.8838, -2.76228, 0.88 ) }
    dend_18 { pt3dadd( 129.677, -16.866, -3.02975, 0.37 ) }
    dend_18 { pt3dadd( 130.255, -16.8846, -3.31569, 0.37 ) }
    dend_18 { pt3dadd( 131.059, -16.9421, -3.8115, 0.37 ) }
    dend_18 { pt3dadd( 132.015, -17.065, -4.40695, 0.29 ) }
    dend_18 { pt3dadd( 132.737, -17.1972, -4.92427, 0.29 ) }
    dend_18 { pt3dadd( 133.18, -17.2694, -5.27142, 0.52 ) }
    dend_18 { pt3dadd( 133.405, -17.2985, -5.46672, 0.74 ) }
    dend_18 { pt3dadd( 133.788, -17.3219, -5.84024, 0.44 ) }
    dend_18 { pt3dadd( 134.556, -17.315, -6.59941, 0.37 ) }
    dend_18 { pt3dadd( 135.818, -17.2446, -7.78119, 0.44 ) }
    dend_18 { pt3dadd( 136.53, -17.2226, -8.44622, 0.44 ) }
    dend_18 { pt3dadd( 137.235, -17.2292, -9.14491, 1.03 ) }
    dend_18 { pt3dadd( 137.933, -17.2588, -9.88068, 1.47 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 2.03214, -14.6083, 0.871033, 1.18 ) }
    dend_2 { pt3dadd( 1.51558, -16.5214, 2.6562, 1.18 ) }
    dend_2 { pt3dadd( 1.19307, -17.3893, 3.43048, 1.18 ) }
    dend_2 { pt3dadd( 0.375034, -19.591, 5.39441, 1.18 ) }
    dend_2 { pt3dadd( -0.208332, -21.161, 6.79495, 0.88 ) }
    dend_2 { pt3dadd( -0.57138, -22.1381, 7.66655, 0.74 ) }
    dend_2 { pt3dadd( -0.888106, -22.9905, 8.42694, 1.03 ) }
    dend_2 { pt3dadd( -1.67891, -24.5667, 9.58488, 1.33 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 61/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 2.03214, -14.6083, 0.871033, 0.96 ) }
    dend_1 { pt3dadd( 3.99699, -15.8012, -1.65801, 0.96 ) }
    dend_1 { pt3dadd( 5.52021, -16.9342, -3.55426, 0.96 ) }
    dend_1 { pt3dadd( 5.70949, -17.1013, -3.80553, 1.4 ) }
    dend_1 { pt3dadd( 8.07328, -19.284, -6.83531, 0.88 ) }
    dend_1 { pt3dadd( 8.57448, -19.7531, -7.42834, 0.88 ) }
    dend_1 { pt3dadd( 9.47128, -20.5833, -8.40501, 0.52 ) }
    dend_1 { pt3dadd( 10.6573, -21.6948, -9.53033, 0.52 ) }
    dend_1 { pt3dadd( 12.5912, -23.5565, -11.2521, 0.88 ) }
    dend_1 { pt3dadd( 14.9696, -25.9099, -13.2259, 0.52 ) }
    dend_1 { pt3dadd( 16.7867, -27.7177, -14.5738, 0.52 ) }
    dend_1 { pt3dadd( 17.9171, -28.7813, -15.3386, 0.52 ) }
    dend_1 { pt3dadd( 19.1559, -29.9448, -16.1209, 0.52 ) }
    dend_1 { pt3dadd( 20.1558, -30.9191, -16.7176, 0.52 ) }
    dend_1 { pt3dadd( 21.3794, -32.223, -17.3649, 0.88 ) }
    dend_1 { pt3dadd( 22.1533, -33.2299, -17.7888, 1.11 ) }
    dend_1 { pt3dadd( 23.5466, -35.4076, -18.6244, 0.44 ) }
    dend_1 { pt3dadd( 24.3703, -36.8268, -19.1616, 0.74 ) }
    dend_1 { pt3dadd( 24.9291, -37.8441, -19.512, 0.96 ) }
    dend_1 { pt3dadd( 25.4831, -38.8579, -19.8122, 0.96 ) }
    dend_1 { pt3dadd( 26.3785, -40.4409, -20.3037, 0.66 ) }
    dend_1 { pt3dadd( 26.8213, -41.1984, -20.569, 0.66 ) }
    dend_1 { pt3dadd( 27.9736, -43.0429, -21.2623, 0.44 ) }
    dend_1 { pt3dadd( 28.7635, -43.9771, -21.8103, 0.59 ) }
    dend_1 { pt3dadd( 29.7201, -44.8598, -22.4785, 0.44 ) }
    dend_1 { pt3dadd( 31.8853, -46.1971, -24.186, 0.37 ) }
    dend_1 { pt3dadd( 33.4534, -46.8407, -25.5614, 0.96 ) }
    dend_1 { pt3dadd( 34.0771, -47.0403, -26.144, 1.33 ) }
    dend_1 { pt3dadd( 38.1738, -48.1431, -30.3167, 0.81 ) }
    dend_1 { pt3dadd( 39.1912, -48.3964, -31.4228, 1.11 ) }
    dend_1 { pt3dadd( 43.9695, -49.5919, -36.916, 0.66 ) }
    dend_1 { pt3dadd( 47.5043, -50.5752, -41.2242, 1.55 ) }
    dend_1 { pt3dadd( 50.6308, -51.6418, -45.211, 0.96 ) }
    dend_1 { pt3dadd( 53.4112, -52.836, -48.9867, 0.81 ) }
    dend_1 { pt3dadd( 54.3649, -53.4011, -50.4004, 0.96 ) }
    dend_1 { pt3dadd( 55.1925, -54.1437, -51.7924, 0.37 ) }
    dend_1 { pt3dadd( 56.0005, -55.5307, -53.4702, 0.29 ) }
    dend_1 { pt3dadd( 56.4796, -57.2308, -54.8391, 0.29 ) }
    dend_1 { pt3dadd( 56.5969, -58.3005, -55.4299, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 56.6306, -58.9266, -55.6584, 0.52 ) }
    dend_1 { pt3dadd( 56.8591, -61.6339, -56.5817, 0.29 ) }
    dend_1 { pt3dadd( 56.9536, -62.3791, -56.8412, 0.59 ) }
    dend_1 { pt3dadd( 57.0613, -63.0525, -57.0693, 0.59 ) }
    dend_1 { pt3dadd( 57.2134, -63.9071, -57.3835, 0.29 ) }
    dend_1 { pt3dadd( 57.5719, -65.6406, -58.0935, 0.29 ) }
    dend_1 { pt3dadd( 57.9939, -67.3239, -58.8814, 0.59 ) }
    dend_1 { pt3dadd( 58.1499, -67.894, -59.1972, 0.81 ) }
    dend_1 { pt3dadd( 58.8661, -70.4853, -60.8004, 0.22 ) }
    dend_1 { pt3dadd( 59.2627, -71.7794, -61.6995, 0.22 ) }
    dend_1 { pt3dadd( 59.8685, -73.5669, -63.0536, 0.22 ) }
    dend_1 { pt3dadd( 60.6169, -75.6589, -64.7205, 0.81 ) }
    dend_1 { pt3dadd( 61.3418, -77.5264, -66.3347, 0.44 ) }
    dend_1 { pt3dadd( 61.7905, -78.5934, -67.3148, 0.44 ) }
    dend_1 { pt3dadd( 62.6008, -80.3769, -69.0414, 0.88 ) }
    dend_1 { pt3dadd( 63.1806, -81.6135, -70.1588, 0.74 ) }
    dend_1 { pt3dadd( 63.4194, -82.1297, -70.5886, 0.74 ) }
    dend_1 { pt3dadd( 64.4599, -84.7056, -72.5469, 0.44 ) }
    dend_1 { pt3dadd( 64.8578, -85.85, -73.3207, 0.44 ) }
    dend_1 { pt3dadd( 65.1188, -86.8068, -73.9612, 0.29 ) }
    dend_1 { pt3dadd( 65.3692, -88.2639, -74.8894, 0.29 ) }
    dend_1 { pt3dadd( 65.5688, -90.7104, -76.4502, 0.29 ) }
    dend_1 { pt3dadd( 65.5854, -92.1295, -77.345, 0.74 ) }
    dend_1 { pt3dadd( 65.5068, -93.3184, -78.034, 0.74 ) }
    dend_1 { pt3dadd( 65.279, -95.5858, -79.385, 0.44 ) }
    dend_1 { pt3dadd( 65.1446, -96.6303, -79.9919, 0.44 ) }
    dend_1 { pt3dadd( 64.9756, -97.7741, -80.5995, 0.29 ) }
    dend_1 { pt3dadd( 64.8896, -98.2714, -80.813, 0.66 ) }
    dend_1 { pt3dadd( 64.6474, -99.5923, -81.3451, 0.37 ) }
    dend_1 { pt3dadd( 64.4223, -100.671, -81.7468, 0.88 ) }
    dend_1 { pt3dadd( 64.1716, -101.652, -82.137, 0.88 ) }
    dend_1 { pt3dadd( 63.8058, -102.962, -82.761, 0.59 ) }
    dend_1 { pt3dadd( 63.4186, -104.22, -83.4387, 0.29 ) }
    dend_1 { pt3dadd( 63.0581, -105.45, -84.2894, 0.66 ) }
    dend_1 { pt3dadd( 62.9253, -105.995, -84.7626, 0.66 ) }
    dend_1 { pt3dadd( 62.771, -107.725, -86.5444, 0.22 ) }
    dend_1 { pt3dadd( 62.8225, -108.356, -87.2567, 0.22 ) }
    dend_1 { pt3dadd( 62.9153, -108.846, -87.8479, 0.74 ) }
    dend_1 { pt3dadd( 63.5136, -110.554, -89.9793, 0.44 ) }
    dend_1 { pt3dadd( 64.0398, -111.575, -91.2742, 0.44 ) }
    dend_1 { pt3dadd( 64.9589, -112.947, -93.0556, 0.29 ) }
    dend_1 { pt3dadd( 65.3299, -113.347, -93.5835, 0.44 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 42/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 10.4816, -39.353, 0.192454, 0.15 ) }
    axon_1 { pt3dadd( 14.326, -53.852, 0.192454, 0.15 ) }
    axon_1 { pt3dadd( 18.1705, -68.351, 0.192454, 0.15 ) }
    // Section: dend_50, id: dend_50, parent: dend_26 (entry count 45/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 1.61559, 25.5726, 12.5892, 0.81 ) }
    dend_50 { pt3dadd( 3.00509, 26.543, 12.9497, 0.81 ) }
    dend_50 { pt3dadd( 3.61023, 26.949, 13.0468, 0.81 ) }
    dend_50 { pt3dadd( 4.71721, 27.6016, 13.1635, 0.81 ) }
    dend_50 { pt3dadd( 6.20788, 28.3868, 13.2887, 0.96 ) }
    dend_50 { pt3dadd( 6.99452, 28.7724, 13.347, 1.25 ) }
    dend_50 { pt3dadd( 7.68289, 29.092, 13.3973, 1.25 ) }
    dend_50 { pt3dadd( 8.96657, 29.6739, 13.4589, 0.96 ) }
    dend_50 { pt3dadd( 10.0343, 30.1654, 13.4914, 0.81 ) }
    dend_50 { pt3dadd( 11.0083, 30.6073, 13.5043, 1.33 ) }
    dend_50 { pt3dadd( 11.6519, 30.8845, 13.4835, 1.62 ) }
    dend_50 { pt3dadd( 12.6205, 31.2644, 13.4515, 0.74 ) }
    dend_50 { pt3dadd( 13.5033, 31.5785, 13.4353, 0.59 ) }
    dend_50 { pt3dadd( 14.3962, 31.9056, 13.4134, 0.52 ) }
    dend_50 { pt3dadd( 15.458, 32.35, 13.2897, 0.44 ) }
    dend_50 { pt3dadd( 16.1437, 32.6268, 13.1179, 0.44 ) }
    dend_50 { pt3dadd( 17.4328, 33.0432, 12.6177, 0.74 ) }
    dend_50 { pt3dadd( 18.2264, 33.2196, 12.2225, 0.74 ) }
    dend_50 { pt3dadd( 19.5327, 33.3553, 11.498, 0.52 ) }
    dend_50 { pt3dadd( 20.6442, 33.363, 10.8905, 0.88 ) }
    dend_50 { pt3dadd( 21.8028, 33.3333, 10.2335, 0.88 ) }
    dend_50 { pt3dadd( 22.825, 33.3837, 9.5886, 0.59 ) }
    dend_50 { pt3dadd( 23.3349, 33.4357, 9.24683, 0.59 ) }
    dend_50 { pt3dadd( 23.9413, 33.499, 8.86381, 0.44 ) }
    dend_50 { pt3dadd( 24.8307, 33.6115, 8.47621, 0.44 ) }
    dend_50 { pt3dadd( 25.5385, 33.7777, 8.29195, 0.44 ) }
    dend_50 { pt3dadd( 26.9661, 34.328, 8.14639, 0.44 ) }
    dend_50 { pt3dadd( 28.1307, 34.9398, 8.1149, 0.74 ) }
    dend_50 { pt3dadd( 29.1063, 35.6164, 8.13291, 0.96 ) }
    dend_50 { pt3dadd( 30.9169, 37.2169, 8.27253, 0.44 ) }
    dend_50 { pt3dadd( 31.3262, 37.6464, 8.32291, 0.96 ) }
    dend_50 { pt3dadd( 32.0411, 38.4846, 8.43921, 0.37 ) }
    dend_50 { pt3dadd( 32.7217, 39.4039, 8.57688, 0.37 ) }
    dend_50 { pt3dadd( 33.4386, 40.4805, 8.55344, 0.37 ) }
    dend_50 { pt3dadd( 33.988, 41.376, 8.38231, 0.74 ) }
    dend_50 { pt3dadd( 34.3884, 42.0223, 8.15135, 0.44 ) }
    dend_50 { pt3dadd( 34.8926, 42.8496, 7.81908, 0.52 ) }
    dend_50 { pt3dadd( 35.264, 43.493, 7.53455, 1.11 ) }
    dend_50 { pt3dadd( 36.3329, 45.4128, 6.66003, 0.44 ) }
    dend_50 { pt3dadd( 36.8741, 46.4469, 6.19834, 0.29 ) }
    dend_50 { pt3dadd( 37.3285, 47.4147, 5.76648, 0.29 ) }
    dend_50 { pt3dadd( 37.6355, 48.1388, 5.46518, 0.81 ) }
    dend_50 { pt3dadd( 37.887, 48.766, 5.22634, 0.81 ) }
    dend_50 { pt3dadd( 38.2653, 49.7185, 4.91456, 0.52 ) }
    dend_50 { pt3dadd( 38.7458, 50.9938, 4.57256, 0.52 ) }
    dend_50 { pt3dadd( 39.3021, 52.4752, 4.1155, 0.44 ) }
    dend_50 { pt3dadd( 39.4439, 52.8791, 3.97449, 0.88 ) }
    dend_50 { pt3dadd( 39.6902, 53.5462, 3.7192, 0.88 ) }
    dend_50 { pt3dadd( 40.0835, 54.4714, 3.36429, 0.37 ) }
    dend_50 { pt3dadd( 40.4656, 55.1562, 3.06123, 0.22 ) }
    dend_50 { pt3dadd( 40.8885, 55.8056, 2.7609, 0.22 ) }
    dend_50 { pt3dadd( 41.3592, 56.4458, 2.45826, 0.22 ) }
    dend_50 { pt3dadd( 42.0177, 57.2359, 2.06803, 0.22 ) }
    dend_50 { pt3dadd( 42.9266, 58.2666, 1.61676, 0.22 ) }
    dend_50 { pt3dadd( 44.2959, 59.7131, 1.08946, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_50 { pt3dadd( 44.7254, 60.1342, 0.983264, 0.81 ) }
    dend_50 { pt3dadd( 45.5733, 60.9049, 0.857449, 0.81 ) }
    dend_50 { pt3dadd( 46.314, 61.5594, 0.809344, 0.44 ) }
    dend_50 { pt3dadd( 47.2829, 62.4269, 0.805954, 0.44 ) }
    dend_50 { pt3dadd( 47.6303, 62.7552, 0.834561, 0.96 ) }
    dend_50 { pt3dadd( 48.2327, 63.3538, 0.941864, 0.52 ) }
    dend_50 { pt3dadd( 48.9908, 64.0745, 1.08024, 0.37 ) }
    dend_50 { pt3dadd( 49.6583, 64.7128, 1.20782, 0.66 ) }
    dend_50 { pt3dadd( 50.2077, 65.2351, 1.28024, 0.66 ) }
    dend_50 { pt3dadd( 50.7773, 65.7828, 1.32127, 0.29 ) }
    dend_50 { pt3dadd( 51.6142, 66.5863, 1.38328, 0.29 ) }
    dend_50 { pt3dadd( 52.4285, 67.3597, 1.45381, 0.59 ) }
    dend_50 { pt3dadd( 52.9859, 67.8677, 1.51366, 0.37 ) }
    dend_50 { pt3dadd( 53.6695, 68.444, 1.58222, 0.66 ) }
    dend_50 { pt3dadd( 54.2382, 68.9033, 1.63809, 0.66 ) }
    dend_50 { pt3dadd( 55.2383, 69.706, 1.73974, 0.29 ) }
    dend_50 { pt3dadd( 55.9783, 70.3247, 1.82503, 0.29 ) }
    dend_50 { pt3dadd( 56.4515, 70.7213, 1.87771, 0.29 ) }
    dend_50 { pt3dadd( 56.8905, 71.0477, 1.91805, 0.66 ) }
    dend_50 { pt3dadd( 57.215, 71.2718, 1.94431, 0.66 ) }
    dend_50 { pt3dadd( 57.647, 71.5694, 1.93297, 0.66 ) }
    dend_50 { pt3dadd( 58.3803, 72.0881, 1.84736, 0.37 ) }
    dend_50 { pt3dadd( 59.2328, 72.6796, 1.6669, 0.37 ) }
    dend_50 { pt3dadd( 60.2741, 73.3573, 1.35137, 0.96 ) }
    dend_50 { pt3dadd( 60.8569, 73.6945, 1.15249, 0.96 ) }
    dend_50 { pt3dadd( 62.3635, 74.4707, 0.609472, 0.29 ) }
    dend_50 { pt3dadd( 63.3586, 74.9404, 0.226323, 0.29 ) }
    dend_50 { pt3dadd( 64.2719, 75.3647, -0.106025, 0.29 ) }
    dend_50 { pt3dadd( 65.5615, 75.9392, -0.48258, 0.29 ) }
    dend_50 { pt3dadd( 66.2469, 76.2239, -0.627374, 0.74 ) }
    dend_50 { pt3dadd( 66.8539, 76.4679, -0.71882, 0.74 ) }
    dend_50 { pt3dadd( 68.4214, 77.1276, -0.784456, 0.29 ) }
    dend_50 { pt3dadd( 70.2917, 78.01, -0.726995, 0.29 ) }
    dend_50 { pt3dadd( 72.2014, 79.0131, -0.50432, 0.29 ) }
    dend_50 { pt3dadd( 73.0869, 79.5392, -0.339097, 0.29 ) }
    dend_50 { pt3dadd( 73.8727, 80.0509, -0.163777, 0.29 ) }
    dend_50 { pt3dadd( 75.1312, 80.938, 0.208316, 0.66 ) }
    dend_50 { pt3dadd( 75.7457, 81.3526, 0.39828, 0.66 ) }
    dend_50 { pt3dadd( 76.5161, 81.7887, 0.595794, 0.37 ) }
    dend_50 { pt3dadd( 77.3392, 82.1842, 0.71142, 1.03 ) }
    dend_50 { pt3dadd( 78.1171, 82.4833, 0.765865, 1.03 ) }
    dend_50 { pt3dadd( 79.3543, 82.8522, 0.756189, 0.66 ) }
    dend_50 { pt3dadd( 81.8632, 83.4534, 0.531671, 0.22 ) }
    dend_50 { pt3dadd( 83.9953, 83.9113, 0.253931, 0.52 ) }
    dend_50 { pt3dadd( 85.8782, 84.3071, -0.058352, 0.29 ) }
    dend_50 { pt3dadd( 87.1429, 84.5767, -0.316901, 0.29 ) }
    dend_50 { pt3dadd( 88.3293, 84.8824, -0.608642, 0.66 ) }
    dend_50 { pt3dadd( 88.8492, 85.0685, -0.748036, 0.66 ) }
    dend_50 { pt3dadd( 89.8818, 85.6151, -0.887614, 0.22 ) }
    dend_50 { pt3dadd( 90.4925, 86.0189, -0.925403, 0.52 ) }
    dend_50 { pt3dadd( 90.9938, 86.3966, -0.915718, 0.52 ) }
    dend_50 { pt3dadd( 93.1434, 88.18, -0.698505, 0.22 ) }
    dend_50 { pt3dadd( 94.7282, 89.5443, -0.443406, 0.22 ) }
    dend_50 { pt3dadd( 97.0592, 91.587, 0.0230483, 0.22 ) }
    dend_50 { pt3dadd( 98.2602, 92.6638, 0.3035, 0.52 ) }
    dend_50 { pt3dadd( 98.9197, 93.2644, 0.489077, 0.22 ) }
    dend_50 { pt3dadd( 99.7594, 94.0598, 0.813791, 0.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 57/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 1.61559, 25.5726, 12.5892, 0.66 ) }
    dend_27 { pt3dadd( 1.26963, 27.6239, 12.7455, 0.66 ) }
    dend_27 { pt3dadd( 1.24513, 28.2612, 12.832, 0.74 ) }
    dend_27 { pt3dadd( 1.26726, 29.1016, 13.0058, 0.74 ) }
    dend_27 { pt3dadd( 1.33603, 29.9166, 13.0746, 1.03 ) }
    dend_27 { pt3dadd( 1.42102, 30.6919, 13.1083, 1.03 ) }
    dend_27 { pt3dadd( 1.52548, 31.6037, 13.1251, 0.74 ) }
    dend_27 { pt3dadd( 1.72288, 32.6685, 13.2233, 1.11 ) }
    dend_27 { pt3dadd( 1.94951, 33.613, 13.2741, 1.47 ) }
    dend_27 { pt3dadd( 2.5, 35.5417, 13.215, 1.62 ) }
    dend_27 { pt3dadd( 2.67604, 36.1363, 13.1358, 1.62 ) }
    dend_27 { pt3dadd( 2.77455, 36.5082, 13.0509, 1.62 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 69/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -19.8738, 14.5672, 4.42542, 0.29 ) }
    dend_25 { pt3dadd( -20.2122, 14.8293, 5.63508, 0.29 ) }
    dend_25 { pt3dadd( -20.535, 15.0296, 6.49248, 0.88 ) }
    dend_25 { pt3dadd( -20.9002, 15.218, 7.35893, 1.11 ) }
    dend_25 { pt3dadd( -22.2042, 15.8149, 10.2151, 1.03 ) }
    dend_25 { pt3dadd( -22.6221, 15.976, 11.0867, 0.59 ) }
    dend_25 { pt3dadd( -22.9494, 16.0913, 11.8019, 0.29 ) }
    dend_25 { pt3dadd( -23.3509, 16.2374, 12.8161, 0.29 ) }
    dend_25 { pt3dadd( -23.572, 16.3279, 13.3932, 0.52 ) }
    dend_25 { pt3dadd( -23.7142, 16.3926, 13.7428, 0.74 ) }
    dend_25 { pt3dadd( -24.0889, 16.5446, 14.4019, 0.74 ) }
    dend_25 { pt3dadd( -24.8255, 16.8835, 15.7555, 0.37 ) }
    dend_25 { pt3dadd( -25.1145, 17.0399, 16.3173, 0.59 ) }
    dend_25 { pt3dadd( -25.3165, 17.1651, 16.6795, 0.59 ) }
    dend_25 { pt3dadd( -25.7524, 17.4439, 17.3487, 0.29 ) }
    dend_25 { pt3dadd( -26.371, 17.8341, 18.2044, 0.59 ) }
    dend_25 { pt3dadd( -26.6795, 18.0047, 18.5435, 0.37 ) }
    dend_25 { pt3dadd( -27.4606, 18.3452, 19.2125, 0.29 ) }
    dend_25 { pt3dadd( -28.1872, 18.6097, 19.7623, 1.25 ) }
    dend_25 { pt3dadd( -28.4952, 18.7018, 19.9672, 1.62 ) }
    dend_25 { pt3dadd( -28.8489, 18.804, 20.1585, 1.62 ) }
    dend_25 { pt3dadd( -29.9328, 19.1296, 20.6594, 0.29 ) }
    dend_25 { pt3dadd( -30.6364, 19.3326, 20.9629, 0.29 ) }
    dend_25 { pt3dadd( -31.4341, 19.5592, 21.2835, 0.52 ) }
    dend_25 { pt3dadd( -31.8605, 19.6826, 21.4511, 0.59 ) }
    dend_25 { pt3dadd( -33.154, 20.0659, 21.9463, 0.22 ) }
    dend_25 { pt3dadd( -33.789, 20.2637, 22.1792, 0.74 ) }
    dend_25 { pt3dadd( -34.3712, 20.464, 22.3993, 0.74 ) }
    dend_25 { pt3dadd( -34.9894, 20.6851, 22.6322, 0.22 ) }
    dend_25 { pt3dadd( -35.3854, 20.8265, 22.7815, 0.37 ) }
    dend_25 { pt3dadd( -35.7688, 20.9745, 22.9248, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 0/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -19.8738, 14.5672, 4.42542, 0.44 ) }
    dend_24 { pt3dadd( -21.1378, 13.9525, 4.62763, 0.44 ) }
    dend_24 { pt3dadd( -21.9983, 13.5102, 4.77914, 0.44 ) }
    dend_24 { pt3dadd( -22.8072, 13.0887, 4.93388, 0.96 ) }
    dend_24 { pt3dadd( -23.574, 12.6695, 5.06867, 1.25 ) }
    dend_24 { pt3dadd( -24.6226, 12.0643, 5.26053, 0.74 ) }
    dend_24 { pt3dadd( -25.3293, 11.6416, 5.40779, 0.59 ) }
    dend_24 { pt3dadd( -26.0123, 11.2214, 5.54036, 0.59 ) }
    dend_24 { pt3dadd( -26.6709, 10.8198, 5.63898, 0.59 ) }
    dend_24 { pt3dadd( -27.7146, 10.2147, 5.74901, 0.44 ) }
    dend_24 { pt3dadd( -29.1312, 9.44318, 5.84761, 0.81 ) }
    dend_24 { pt3dadd( -30.9612, 8.52031, 5.84669, 0.81 ) }
    dend_24 { pt3dadd( -31.874, 8.07162, 5.73845, 0.81 ) }
    dend_24 { pt3dadd( -32.8178, 7.6096, 5.50728, 0.44 ) }
    dend_24 { pt3dadd( -33.5544, 7.26949, 5.27416, 0.44 ) }
    dend_24 { pt3dadd( -34.4937, 6.86952, 4.96883, 0.44 ) }
    dend_24 { pt3dadd( -35.9985, 6.28827, 4.47171, 0.44 ) }
    dend_24 { pt3dadd( -37.803, 5.67511, 3.92076, 0.88 ) }
    dend_24 { pt3dadd( -39.1177, 5.27122, 3.62311, 0.88 ) }
    dend_24 { pt3dadd( -40.3895, 4.91795, 3.44092, 0.52 ) }
    dend_24 { pt3dadd( -42.3783, 4.45062, 3.32815, 0.52 ) }
    dend_24 { pt3dadd( -43.0857, 4.31364, 3.34708, 0.52 ) }
    dend_24 { pt3dadd( -44.2464, 4.12726, 3.55059, 0.88 ) }
    dend_24 { pt3dadd( -45.0883, 4.00448, 3.80277, 0.88 ) }
    dend_24 { pt3dadd( -45.9645, 3.85149, 4.12785, 1.18 ) }
    dend_24 { pt3dadd( -46.7748, 3.6579, 4.4583, 1.18 ) }
    dend_24 { pt3dadd( -47.9509, 3.25773, 5.03568, 0.74 ) }
    dend_24 { pt3dadd( -49.104, 2.74688, 5.76502, 0.52 ) }
    dend_24 { pt3dadd( -50.1876, 2.18229, 6.58001, 0.52 ) }
    dend_24 { pt3dadd( -51.0156, 1.75162, 7.25158, 0.88 ) }
    dend_24 { pt3dadd( -52.1372, 1.22116, 8.18375, 0.88 ) }
    dend_24 { pt3dadd( -53.3584, 0.697287, 9.20465, 0.88 ) }
    dend_24 { pt3dadd( -54.8118, 0.136954, 10.4057, 1.03 ) }
    dend_24 { pt3dadd( -55.6042, -0.171667, 11.0239, 0.96 ) }
    dend_24 { pt3dadd( -56.6549, -0.584149, 11.8223, 0.74 ) }
    dend_24 { pt3dadd( -58.1139, -1.12403, 12.8554, 0.52 ) }
    dend_24 { pt3dadd( -58.7318, -1.35067, 13.2349, 0.81 ) }
    dend_24 { pt3dadd( -59.459, -1.63417, 13.5912, 0.81 ) }
    dend_24 { pt3dadd( -60.6156, -2.16811, 14.067, 0.52 ) }
    dend_24 { pt3dadd( -60.9901, -2.37749, 14.2213, 0.88 ) }
    dend_24 { pt3dadd( -61.4419, -2.68416, 14.4093, 1.18 ) }
    dend_24 { pt3dadd( -62.4714, -3.40529, 14.8492, 1.18 ) }
    dend_24 { pt3dadd( -63.7464, -4.22759, 15.4077, 0.59 ) }
    dend_24 { pt3dadd( -64.3284, -4.56787, 15.667, 0.74 ) }
    dend_24 { pt3dadd( -65.0165, -4.92392, 15.9762, 0.74 ) }
    dend_24 { pt3dadd( -65.963, -5.398, 16.4612, 0.44 ) }
    dend_24 { pt3dadd( -66.6249, -5.73556, 16.8342, 0.44 ) }
    dend_24 { pt3dadd( -67.2647, -6.08593, 17.2221, 0.74 ) }
    dend_24 { pt3dadd( -67.9925, -6.50233, 17.6281, 0.74 ) }
    dend_24 { pt3dadd( -68.6568, -6.89284, 18.0679, 0.74 ) }
    dend_24 { pt3dadd( -70.0534, -7.72495, 19.1185, 0.29 ) }
    dend_24 { pt3dadd( -70.9065, -8.27494, 19.8398, 0.37 ) }
    dend_24 { pt3dadd( -71.7758, -8.89638, 20.6345, 0.37 ) }
    dend_24 { pt3dadd( -72.8322, -9.6916, 21.6469, 0.37 ) }
    dend_24 { pt3dadd( -74.7078, -11.1327, 23.3736, 0.74 ) }
    dend_24 { pt3dadd( -75.3127, -11.6115, 23.8733, 1.03 ) }
    dend_24 { pt3dadd( -76.598, -12.6882, 24.8746, 0.59 ) }
    dend_24 { pt3dadd( -77.6664, -13.6299, 25.7383, 0.44 ) }
    dend_24 { pt3dadd( -78.3436, -14.2348, 26.288, 0.88 ) }
    dend_24 { pt3dadd( -79.2963, -15.0774, 27.0317, 0.74 ) }
    dend_24 { pt3dadd( -80.2837, -15.8906, 27.614, 0.37 ) }
    dend_24 { pt3dadd( -81.4755, -16.7295, 28.2789, 0.37 ) }
    dend_24 { pt3dadd( -82.1144, -17.0566, 28.6014, 0.81 ) }
    dend_24 { pt3dadd( -82.6574, -17.2312, 28.869, 1.03 ) }
    dend_24 { pt3dadd( -83.1754, -17.3171, 29.1406, 1.03 ) }
    dend_24 { pt3dadd( -83.8509, -17.3429, 29.5221, 0.66 ) }
    dend_24 { pt3dadd( -84.8798, -17.3033, 30.0657, 0.37 ) }
    dend_24 { pt3dadd( -85.8549, -17.2413, 30.493, 0.59 ) }
    dend_24 { pt3dadd( -86.739, -17.1687, 30.8528, 0.59 ) }
    dend_24 { pt3dadd( -87.5842, -17.0911, 31.2132, 0.37 ) }
    dend_24 { pt3dadd( -88.5061, -17.0199, 31.6597, 0.66 ) }
    dend_24 { pt3dadd( -89.2457, -16.9928, 31.9769, 0.88 ) }
    dend_24 { pt3dadd( -89.5956, -16.9886, 32.0901, 0.88 ) }
    dend_24 { pt3dadd( -91.318, -16.9483, 32.4797, 0.29 ) }
    dend_24 { pt3dadd( -92.4092, -16.9297, 32.6191, 0.29 ) }
    dend_24 { pt3dadd( -93.8942, -16.9176, 32.6574, 0.29 ) }
    dend_24 { pt3dadd( -96.2241, -16.9456, 32.5275, 0.44 ) }
    dend_24 { pt3dadd( -97.9461, -17.0522, 32.3296, 0.44 ) }
    dend_24 { pt3dadd( -98.6529, -17.1537, 32.1971, 0.44 ) }
    dend_24 { pt3dadd( -99.068, -17.2568, 32.0808, 0.59 ) }
    dend_24 { pt3dadd( -99.8569, -17.4906, 31.831, 0.59 ) }
    dend_24 { pt3dadd( -100.406, -17.666, 31.6779, 0.59 ) }
    dend_24 { pt3dadd( -101.408, -18.0229, 31.5375, 0.37 ) }
    dend_24 { pt3dadd( -102.242, -18.3569, 31.415, 0.37 ) }
    dend_24 { pt3dadd( -102.995, -18.6649, 31.2817, 0.66 ) }
    dend_24 { pt3dadd( -103.738, -18.9762, 31.0893, 0.66 ) }
    dend_24 { pt3dadd( -104.458, -19.303, 30.8647, 0.66 ) }
    dend_24 { pt3dadd( -105.798, -19.9527, 30.3786, 0.44 ) }
    dend_24 { pt3dadd( -106.958, -20.5368, 29.9266, 0.66 ) }
    dend_24 { pt3dadd( -107.643, -20.903, 29.6083, 0.66 ) }
    dend_24 { pt3dadd( -109.382, -21.8456, 28.7194, 0.29 ) }
    dend_24 { pt3dadd( -110.398, -22.3896, 28.197, 0.29 ) }
    dend_24 { pt3dadd( -111.307, -22.8747, 27.7423, 0.66 ) }
    dend_24 { pt3dadd( -111.964, -23.2096, 27.453, 0.88 ) }
    dend_24 { pt3dadd( -114.3, -24.3082, 26.5598, 0.44 ) }
    dend_24 { pt3dadd( -115.119, -24.6548, 26.2593, 0.29 ) }
    dend_24 { pt3dadd( -116.343, -25.1053, 25.9246, 0.29 ) }
    dend_24 { pt3dadd( -117.29, -25.4372, 25.7161, 0.66 ) }
    dend_24 { pt3dadd( -118.173, -25.771, 25.5429, 0.66 ) }
    dend_24 { pt3dadd( -118.811, -26.0528, 25.4731, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_24 { pt3dadd( -120.174, -26.7563, 25.2902, 0.37 ) }
    dend_24 { pt3dadd( -121.604, -27.5241, 24.9466, 0.29 ) }
    dend_24 { pt3dadd( -122.182, -27.8157, 24.7616, 0.29 ) }
    dend_24 { pt3dadd( -123.737, -28.5114, 24.1387, 0.29 ) }
    dend_24 { pt3dadd( -125.235, -29.0921, 23.4588, 1.25 ) }
    dend_24 { pt3dadd( -128.513, -30.0863, 21.8854, 0.29 ) }
    dend_24 { pt3dadd( -129.541, -30.324, 21.3571, 0.29 ) }
    dend_24 { pt3dadd( -130.14, -30.4204, 21.0313, 0.59 ) }
    dend_24 { pt3dadd( -131.363, -30.5463, 20.4004, 0.44 ) }
    dend_24 { pt3dadd( -132.047, -30.5809, 20.0915, 0.22 ) }
    dend_24 { pt3dadd( -132.821, -30.5903, 19.8005, 0.81 ) }
    dend_24 { pt3dadd( -134.774, -30.573, 19.4764, 0.44 ) }
    dend_24 { pt3dadd( -135.808, -30.5884, 19.4151, 0.59 ) }
    dend_24 { pt3dadd( -136.393, -30.6113, 19.4283, 0.59 ) }
    dend_24 { pt3dadd( -137.797, -30.6774, 19.663, 0.29 ) }
    dend_24 { pt3dadd( -138.977, -30.7256, 20.0023, 0.59 ) }
    dend_24 { pt3dadd( -139.64, -30.7396, 20.3216, 0.59 ) }
    dend_24 { pt3dadd( -140.807, -30.7311, 21.1026, 0.29 ) }
    dend_24 { pt3dadd( -141.688, -30.7097, 21.7978, 0.29 ) }
    dend_24 { pt3dadd( -143.149, -30.6173, 23.1501, 0.74 ) }
    dend_24 { pt3dadd( -143.796, -30.5462, 23.8446, 0.74 ) }
    dend_24 { pt3dadd( -144.878, -30.3634, 25.0966, 0.37 ) }
    dend_24 { pt3dadd( -145.662, -30.1484, 26.0389, 0.37 ) }
    dend_24 { pt3dadd( -146.314, -29.8661, 26.8513, 0.44 ) }
    dend_24 { pt3dadd( -147.051, -29.4284, 27.7213, 0.74 ) }
    dend_24 { pt3dadd( -147.53, -29.0779, 28.2066, 0.74 ) }
    dend_24 { pt3dadd( -148.094, -28.6021, 28.7117, 0.37 ) }
    dend_24 { pt3dadd( -148.643, -28.0612, 29.1285, 0.59 ) }
    dend_24 { pt3dadd( -149.272, -27.3334, 29.5856, 0.37 ) }
    dend_24 { pt3dadd( -149.772, -26.722, 29.9092, 0.29 ) }
    dend_24 { pt3dadd( -150.13, -26.2726, 30.1212, 0.52 ) }
    dend_24 { pt3dadd( -150.609, -25.6973, 30.3938, 0.74 ) }
    dend_24 { pt3dadd( -151.351, -24.892, 30.8101, 0.29 ) }
    dend_24 { pt3dadd( -151.751, -24.5081, 31.0296, 0.74 ) }
    dend_24 { pt3dadd( -152.329, -24.0217, 31.3309, 0.74 ) }
    dend_24 { pt3dadd( -153.149, -23.4022, 31.716, 0.29 ) }
    dend_24 { pt3dadd( -154.013, -22.8168, 32.079, 0.29 ) }
    dend_24 { pt3dadd( -154.908, -22.3017, 32.397, 0.29 ) }
    dend_24 { pt3dadd( -155.926, -21.7966, 32.7068, 0.29 ) }
    dend_24 { pt3dadd( -156.963, -21.3336, 32.9549, 0.29 ) }
    dend_24 { pt3dadd( -158.088, -20.8873, 33.1534, 0.96 ) }
    dend_24 { pt3dadd( -158.642, -20.7021, 33.2255, 0.96 ) }
    dend_24 { pt3dadd( -160.312, -20.2162, 33.3937, 0.29 ) }
    dend_24 { pt3dadd( -160.792, -20.0976, 33.4315, 0.66 ) }
    dend_24 { pt3dadd( -161.783, -19.8974, 33.5115, 0.66 ) }
    dend_24 { pt3dadd( -162.876, -19.7161, 33.6292, 0.29 ) }
    dend_24 { pt3dadd( -163.681, -19.6198, 33.7693, 0.29 ) }
    dend_24 { pt3dadd( -164.183, -19.5709, 33.8677, 0.66 ) }
    dend_24 { pt3dadd( -164.729, -19.5232, 33.9896, 0.88 ) }
    dend_24 { pt3dadd( -165.602, -19.4496, 34.1982, 0.66 ) }
    dend_24 { pt3dadd( -166.245, -19.3665, 34.3521, 0.15 ) }
    dend_24 { pt3dadd( -167.165, -19.1901, 34.5594, 0.15 ) }
    dend_24 { pt3dadd( -168.054, -18.9718, 34.7295, 0.15 ) }
    dend_24 { pt3dadd( -168.784, -18.7544, 34.8519, 0.81 ) }
    dend_24 { pt3dadd( -169.411, -18.5433, 34.9123, 1.03 ) }
    dend_24 { pt3dadd( -171.094, -17.9745, 34.9996, 0.29 ) }
    dend_24 { pt3dadd( -171.978, -17.6774, 35.0283, 0.81 ) }
    dend_24 { pt3dadd( -172.663, -17.4392, 35.0245, 0.81 ) }
    dend_24 { pt3dadd( -173.955, -17.0104, 35.0096, 0.29 ) }
    dend_24 { pt3dadd( -175.301, -16.633, 34.9242, 0.29 ) }
    dend_24 { pt3dadd( -176.289, -16.424, 34.8365, 0.29 ) }
    dend_24 { pt3dadd( -177.503, -16.2709, 34.6872, 0.29 ) }
    dend_24 { pt3dadd( -178.385, -16.2463, 34.4682, 1.18 ) }
    dend_24 { pt3dadd( -179.199, -16.3204, 34.157, 1.18 ) }
    dend_24 { pt3dadd( -180.458, -16.6134, 33.4608, 0.52 ) }
    dend_24 { pt3dadd( -181.182, -16.8575, 32.9838, 0.88 ) }
    dend_24 { pt3dadd( -181.864, -17.1419, 32.4434, 0.88 ) }
    dend_24 { pt3dadd( -183.727, -18.0542, 30.7359, 0.44 ) }
    dend_24 { pt3dadd( -184.591, -18.4863, 29.9209, 0.44 ) }
    dend_24 { pt3dadd( -185.31, -18.8155, 29.214, 0.74 ) }
    dend_24 { pt3dadd( -185.766, -18.9839, 28.7754, 0.74 ) }
    dend_24 { pt3dadd( -186.953, -19.3248, 27.6861, 0.44 ) }
    dend_24 { pt3dadd( -187.809, -19.5068, 27.007, 0.44 ) }
    dend_24 { pt3dadd( -188.537, -19.5986, 26.5642, 0.88 ) }
    dend_24 { pt3dadd( -189.264, -19.6583, 26.1922, 0.88 ) }
    dend_24 { pt3dadd( -190.029, -19.7099, 25.846, 0.88 ) }
    dend_24 { pt3dadd( -191.549, -19.8624, 25.1468, 0.52 ) }
    dend_24 { pt3dadd( -192.847, -20.0621, 24.5552, 0.52 ) }
    dend_24 { pt3dadd( -193.63, -20.2427, 24.2065, 0.59 ) }
    dend_24 { pt3dadd( -194.444, -20.505, 23.8438, 0.44 ) }
    dend_24 { pt3dadd( -195.299, -20.8302, 23.4885, 0.44 ) }
    dend_24 { pt3dadd( -196.367, -21.2291, 23.0884, 0.44 ) }
    dend_24 { pt3dadd( -197.422, -21.578, 22.7384, 0.88 ) }
    dend_24 { pt3dadd( -198.11, -21.794, 22.5108, 0.88 ) }
    dend_24 { pt3dadd( -199.014, -22.0695, 22.2023, 0.37 ) }
    dend_24 { pt3dadd( -199.966, -22.3119, 21.8679, 0.37 ) }
    dend_24 { pt3dadd( -201.33, -22.596, 21.4217, 0.59 ) }
    dend_24 { pt3dadd( -203.041, -22.8578, 20.9336, 0.37 ) }
    dend_24 { pt3dadd( -203.639, -22.9388, 20.7732, 0.74 ) }
    dend_24 { pt3dadd( -204.689, -23.0441, 20.5042, 0.74 ) }
    dend_24 { pt3dadd( -206.416, -23.1402, 20.1216, 0.37 ) }
    dend_24 { pt3dadd( -207.065, -23.1689, 20.0112, 0.59 ) }
    dend_24 { pt3dadd( -208.565, -23.2095, 19.848, 0.29 ) }
    dend_24 { pt3dadd( -209.653, -23.2114, 19.8173, 0.29 ) }
    dend_24 { pt3dadd( -210.632, -23.2454, 19.8406, 0.29 ) }
    dend_24 { pt3dadd( -212.013, -23.3419, 19.9219, 0.59 ) }
    dend_24 { pt3dadd( -212.467, -23.3909, 19.9678, 1.11 ) }
    dend_24 { pt3dadd( -212.824, -23.4351, 20.0054, 1.4 ) }
    dend_24 { pt3dadd( -213.911, -23.6362, 20.1402, 0.81 ) }
    dend_24 { pt3dadd( -215.044, -23.898, 20.2746, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( -216.075, -24.2288, 20.3887, 0.22 ) }
    dend_24 { pt3dadd( -216.837, -24.5332, 20.4757, 0.22 ) }
    dend_24 { pt3dadd( -218.095, -25.1227, 20.5794, 0.22 ) }
    dend_24 { pt3dadd( -219.484, -25.8834, 20.6501, 0.22 ) }
    dend_24 { pt3dadd( -219.76, -26.0579, 20.6545, 0.44 ) }
    dend_24 { pt3dadd( -220.25, -26.4118, 20.6447, 0.44 ) }
    dend_24 { pt3dadd( -220.764, -26.8432, 20.5846, 0.22 ) }
    dend_24 { pt3dadd( -221.649, -27.6514, 20.3655, 0.44 ) }
    dend_24 { pt3dadd( -222.067, -28.0224, 20.1934, 0.44 ) }
    dend_24 { pt3dadd( -222.84, -28.6401, 19.8416, 0.22 ) }
    dend_24 { pt3dadd( -223.607, -29.1827, 19.5326, 0.22 ) }
    dend_24 { pt3dadd( -224.683, -29.8412, 19.1651, 0.59 ) }
    dend_24 { pt3dadd( -224.996, -30.0047, 19.0714, 0.59 ) }
    dend_24 { pt3dadd( -227.038, -30.8206, 18.4002, 0.29 ) }
    dend_24 { pt3dadd( -227.765, -31.0881, 18.1625, 0.29 ) }
    dend_24 { pt3dadd( -228.864, -31.4533, 17.8098, 0.29 ) }
    dend_24 { pt3dadd( -229.611, -31.681, 17.5963, 0.81 ) }
    dend_24 { pt3dadd( -230.273, -31.8639, 17.4438, 0.81 ) }
    dend_24 { pt3dadd( -232.921, -32.4514, 16.7918, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 19/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 137.933, -17.2588, -9.88068, 0.29 ) }
    dend_20 { pt3dadd( 138.91, -18.3156, -9.6514, 0.29 ) }
    dend_20 { pt3dadd( 139.526, -18.9508, -9.66403, 0.29 ) }
    dend_20 { pt3dadd( 140.41, -19.9061, -9.97593, 0.52 ) }
    dend_20 { pt3dadd( 140.643, -20.1563, -10.0011, 0.52 ) }
    dend_20 { pt3dadd( 140.927, -20.4593, -9.99286, 0.37 ) }
    dend_20 { pt3dadd( 141.459, -21.0267, -9.97743, 0.52 ) }
    dend_20 { pt3dadd( 142.652, -22.1895, -10.0195, 0.37 ) }
    dend_20 { pt3dadd( 143.806, -23.3091, -10.0919, 0.88 ) }
    dend_20 { pt3dadd( 146.073, -25.644, -10.1983, 0.29 ) }
    dend_20 { pt3dadd( 146.368, -25.9652, -10.168, 0.74 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 30/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 137.933, -17.2588, -9.88068, 0.29 ) }
    dend_19 { pt3dadd( 138.972, -16.892, -10.7931, 0.29 ) }
    dend_19 { pt3dadd( 139.42, -16.7879, -11.133, 0.44 ) }
    dend_19 { pt3dadd( 140.072, -16.6474, -11.5904, 0.44 ) }
    dend_19 { pt3dadd( 140.764, -16.4809, -12.0437, 0.74 ) }
    dend_19 { pt3dadd( 141.712, -16.2291, -12.637, 0.74 ) }
    dend_19 { pt3dadd( 142.65, -15.9552, -13.2086, 0.44 ) }
    dend_19 { pt3dadd( 143.697, -15.6611, -13.7904, 0.66 ) }
    dend_19 { pt3dadd( 144.242, -15.485, -14.0858, 0.66 ) }
    dend_19 { pt3dadd( 145.141, -15.0914, -14.6286, 0.74 ) }
    dend_19 { pt3dadd( 145.546, -14.8545, -14.8987, 0.29 ) }
    dend_19 { pt3dadd( 145.992, -14.5166, -15.2293, 0.37 ) }
    dend_19 { pt3dadd( 146.534, -14.0566, -15.591, 0.81 ) }
    dend_19 { pt3dadd( 146.837, -13.7889, -15.7639, 1.03 ) }
    dend_19 { pt3dadd( 148.386, -12.4693, -16.4892, 0.29 ) }
    dend_19 { pt3dadd( 149.264, -11.7327, -16.8309, 0.29 ) }
    dend_19 { pt3dadd( 150.556, -10.6471, -17.2553, 0.29 ) }
    dend_19 { pt3dadd( 151.682, -9.70092, -17.6132, 0.29 ) }
    dend_19 { pt3dadd( 152.618, -8.90731, -17.9256, 1.03 ) }
    dend_19 { pt3dadd( 153.144, -8.44945, -18.1289, 1.03 ) }
    dend_19 { pt3dadd( 153.688, -7.97966, -18.3593, 1.03 ) }
    dend_19 { pt3dadd( 154.122, -7.61394, -18.6349, 0.66 ) }
    dend_19 { pt3dadd( 154.971, -6.89155, -19.3875, 0.52 ) }
    dend_19 { pt3dadd( 155.464, -6.36485, -19.9913, 0.52 ) }
    dend_19 { pt3dadd( 155.907, -5.77559, -20.6456, 0.37 ) }
    dend_19 { pt3dadd( 156.33, -5.15689, -21.2797, 0.37 ) }
    dend_19 { pt3dadd( 156.671, -4.69773, -21.7386, 0.29 ) }
    dend_19 { pt3dadd( 157.273, -3.96779, -22.4762, 0.29 ) }
    dend_19 { pt3dadd( 158.103, -3.02907, -23.3725, 0.29 ) }
    dend_19 { pt3dadd( 158.424, -2.6504, -23.7395, 0.29 ) }
    dend_19 { pt3dadd( 158.811, -2.12045, -24.2537, 0.29 ) }
    dend_19 { pt3dadd( 159.279, -1.41563, -24.9643, 0.81 ) }
    dend_19 { pt3dadd( 159.778, -0.715611, -25.716, 1.03 ) }
    dend_19 { pt3dadd( 160.14, -0.345891, -26.1662, 1.03 ) }
    dend_19 { pt3dadd( 160.963, 0.260501, -26.9678, 0.29 ) }
    dend_19 { pt3dadd( 161.644, 0.73092, -27.5062, 0.74 ) }
    dend_19 { pt3dadd( 162.038, 1.01285, -27.7603, 1.11 ) }
    dend_19 { pt3dadd( 162.514, 1.35154, -27.9986, 1.11 ) }
    dend_19 { pt3dadd( 163.75, 2.13977, -28.4607, 0.29 ) }
    dend_19 { pt3dadd( 164.678, 2.63258, -28.7372, 0.29 ) }
    dend_19 { pt3dadd( 165.724, 3.02408, -29.0037, 0.29 ) }
    dend_19 { pt3dadd( 166.544, 3.24638, -29.2172, 0.29 ) }
    dend_19 { pt3dadd( 167.235, 3.38949, -29.4216, 0.74 ) }
    dend_19 { pt3dadd( 168.027, 3.51877, -29.7159, 0.74 ) }
    dend_19 { pt3dadd( 169.074, 3.63427, -30.1813, 0.37 ) }
    dend_19 { pt3dadd( 170.393, 3.70633, -30.8427, 0.96 ) }
    dend_19 { pt3dadd( 170.917, 3.71685, -31.1582, 0.96 ) }
    dend_19 { pt3dadd( 171.835, 3.71698, -31.7782, 0.29 ) }
    dend_19 { pt3dadd( 172.786, 3.73855, -32.546, 0.29 ) }
    dend_19 { pt3dadd( 173.143, 3.7579, -32.8624, 0.59 ) }
    dend_19 { pt3dadd( 173.685, 3.82227, -33.3943, 0.59 ) }
    dend_19 { pt3dadd( 174.667, 4.04626, -34.4236, 0.29 ) }
    dend_19 { pt3dadd( 175.258, 4.19722, -35.0695, 0.29 ) }
    dend_19 { pt3dadd( 176.317, 4.46301, -36.3, 1.18 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 84/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -1.67891, -24.5667, 9.58488, 1.03 ) }
    dend_4 { pt3dadd( -0.891078, -26.6942, 10.1098, 1.03 ) }
    dend_4 { pt3dadd( -0.29785, -28.0315, 10.4248, 1.03 ) }
    dend_4 { pt3dadd( 0.0987089, -28.8217, 10.6037, 0.74 ) }
    dend_4 { pt3dadd( 0.659328, -29.8259, 10.8137, 0.74 ) }
    dend_4 { pt3dadd( 1.0782, -30.5486, 10.9505, 1.03 ) }
    dend_4 { pt3dadd( 1.4308, -31.1687, 11.0543, 1.25 ) }
    dend_4 { pt3dadd( 1.72742, -31.6718, 11.1617, 1.33 ) }
    dend_4 { pt3dadd( 1.87362, -31.9637, 11.1894, 1.62 ) }
    dend_4 { pt3dadd( 2.13909, -32.6169, 11.224, 1.62 ) }
    dend_4 { pt3dadd( 2.35108, -33.298, 11.2346, 1.62 ) }
    dend_4 { pt3dadd( 2.57903, -34.3041, 11.2373, 1.47 ) }
    dend_4 { pt3dadd( 2.73477, -35.2895, 11.2629, 0.59 ) }
    dend_4 { pt3dadd( 2.82971, -36.2468, 11.2917, 0.59 ) }
    dend_4 { pt3dadd( 2.87893, -37.1208, 11.3182, 0.88 ) }
    dend_4 { pt3dadd( 2.90342, -37.7602, 11.3358, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_4 { pt3dadd( 2.93783, -38.3259, 11.3443, 1.55 ) }
    dend_4 { pt3dadd( 3.01373, -39.2491, 11.3453, 1.55 ) }
    dend_4 { pt3dadd( 3.10664, -40.1935, 11.3352, 0.96 ) }
    dend_4 { pt3dadd( 3.19648, -41.0805, 11.3215, 0.74 ) }
    dend_4 { pt3dadd( 3.23711, -41.5704, 11.3126, 0.74 ) }
    dend_4 { pt3dadd( 3.31163, -42.477, 11.2905, 0.74 ) }
    dend_4 { pt3dadd( 3.39298, -43.4724, 11.2563, 1.33 ) }
    dend_4 { pt3dadd( 3.51412, -44.7798, 11.1879, 1.18 ) }
    dend_4 { pt3dadd( 3.62632, -45.884, 11.1544, 1.18 ) }
    dend_4 { pt3dadd( 3.6766, -46.5249, 11.1407, 1.62 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 10/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -1.67891, -24.5667, 9.58488, 1.03 ) }
    dend_3 { pt3dadd( -2.70744, -25.9725, 12.0523, 1.03 ) }
    dend_3 { pt3dadd( -3.34159, -26.9625, 13.6074, 1.03 ) }
    dend_3 { pt3dadd( -4.44674, -28.7385, 16.1858, 0.81 ) }
    dend_3 { pt3dadd( -5.51763, -30.4496, 18.5825, 0.66 ) }
    dend_3 { pt3dadd( -5.87886, -31.0441, 19.3797, 0.66 ) }
    dend_3 { pt3dadd( -6.21622, -31.6331, 20.1277, 0.66 ) }
    dend_3 { pt3dadd( -6.57553, -32.477, 21.0822, 0.52 ) }
    dend_3 { pt3dadd( -6.85908, -33.4498, 22.0403, 0.52 ) }
    dend_3 { pt3dadd( -7.07772, -34.7182, 23.0448, 0.81 ) }
    dend_3 { pt3dadd( -7.14848, -35.6328, 23.6315, 0.66 ) }
    dend_3 { pt3dadd( -7.1972, -36.4315, 24.0932, 0.96 ) }
    dend_3 { pt3dadd( -7.28632, -38.2186, 25.0732, 0.52 ) }
    dend_3 { pt3dadd( -7.26969, -39.2972, 25.6539, 1.11 ) }
    dend_3 { pt3dadd( -7.17348, -40.2622, 26.1036, 1.03 ) }
    dend_3 { pt3dadd( -7.06875, -40.9978, 26.3756, 0.88 ) }
    dend_3 { pt3dadd( -6.99035, -41.6137, 26.5747, 0.88 ) }
    dend_3 { pt3dadd( -6.94074, -42.6345, 26.8375, 0.52 ) }
    // Section: dend_49, id: dend_49, parent: dend_27 (entry count 28/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 2.77455, 36.5082, 13.0509, 0.74 ) }
    dend_49 { pt3dadd( 2.83644, 38.0582, 14.7552, 0.74 ) }
    dend_49 { pt3dadd( 2.8638, 38.9739, 15.647, 0.59 ) }
    dend_49 { pt3dadd( 2.86339, 39.5979, 16.1959, 0.59 ) }
    dend_49 { pt3dadd( 2.84159, 40.6717, 17.0238, 0.59 ) }
    dend_49 { pt3dadd( 2.82056, 41.4624, 17.5523, 0.59 ) }
    dend_49 { pt3dadd( 2.80578, 42.2772, 18.02, 0.59 ) }
    dend_49 { pt3dadd( 2.85762, 43.7996, 18.625, 0.66 ) }
    dend_49 { pt3dadd( 2.89534, 44.4846, 18.8358, 0.66 ) }
    dend_49 { pt3dadd( 2.91618, 45.5114, 19.0609, 1.03 ) }
    dend_49 { pt3dadd( 2.92184, 46.4846, 19.1955, 1.03 ) }
    dend_49 { pt3dadd( 2.92303, 47.6639, 19.2841, 0.44 ) }
    dend_49 { pt3dadd( 2.93795, 48.2009, 19.2591, 0.59 ) }
    dend_49 { pt3dadd( 3.00261, 49.0376, 19.0586, 0.59 ) }
    dend_49 { pt3dadd( 3.081, 49.7321, 18.8071, 1.11 ) }
    dend_49 { pt3dadd( 3.13276, 50.0458, 18.6608, 1.33 ) }
    dend_49 { pt3dadd( 3.23422, 50.5175, 18.4223, 1.33 ) }
    dend_49 { pt3dadd( 3.50159, 51.5152, 17.9023, 0.81 ) }
    dend_49 { pt3dadd( 3.79362, 52.3141, 17.5513, 0.44 ) }
    dend_49 { pt3dadd( 4.16745, 52.9427, 17.3426, 0.44 ) }
    dend_49 { pt3dadd( 4.7086, 53.5492, 17.1461, 0.74 ) }
    dend_49 { pt3dadd( 5.30928, 54.1166, 16.9804, 0.66 ) }
    dend_49 { pt3dadd( 5.62434, 54.3891, 16.9091, 0.66 ) }
    dend_49 { pt3dadd( 6.27972, 55.0257, 16.7712, 0.52 ) }
    dend_49 { pt3dadd( 6.97735, 55.8159, 16.5702, 0.37 ) }
    dend_49 { pt3dadd( 7.74556, 56.8645, 16.2432, 0.37 ) }
    dend_49 { pt3dadd( 8.02036, 57.336, 16.1203, 0.37 ) }
    dend_49 { pt3dadd( 8.40776, 58.1423, 15.968, 0.37 ) }
    dend_49 { pt3dadd( 8.98067, 59.464, 15.832, 0.37 ) }
    dend_49 { pt3dadd( 9.28424, 60.2784, 15.8934, 0.88 ) }
    dend_49 { pt3dadd( 9.46, 60.8035, 16.068, 0.88 ) }
    dend_49 { pt3dadd( 9.79055, 61.8665, 16.6498, 0.74 ) }
    dend_49 { pt3dadd( 9.98908, 62.5431, 17.1221, 0.59 ) }
    dend_49 { pt3dadd( 10.1801, 63.3137, 17.8049, 0.59 ) }
    dend_49 { pt3dadd( 10.4467, 64.5538, 19.1108, 0.81 ) }
    dend_49 { pt3dadd( 10.5952, 65.4716, 20.1569, 0.59 ) }
    dend_49 { pt3dadd( 10.6307, 65.9148, 20.6633, 0.59 ) }
    dend_49 { pt3dadd( 10.6234, 66.3442, 21.1285, 1.11 ) }
    dend_49 { pt3dadd( 10.5343, 67.0775, 21.8484, 0.88 ) }
    dend_49 { pt3dadd( 10.4003, 67.7355, 22.3866, 0.88 ) }
    dend_49 { pt3dadd( 10.2672, 68.5045, 22.8237, 0.74 ) }
    dend_49 { pt3dadd( 10.1733, 69.2949, 23.1674, 0.59 ) }
    dend_49 { pt3dadd( 10.1472, 69.9046, 23.3982, 0.44 ) }
    dend_49 { pt3dadd( 10.1745, 70.5192, 23.5863, 0.81 ) }
    dend_49 { pt3dadd( 10.2536, 71.1177, 23.7194, 1.03 ) }
    dend_49 { pt3dadd( 10.4224, 72.1626, 23.8958, 0.52 ) }
    dend_49 { pt3dadd( 10.5226, 72.7364, 23.9672, 0.52 ) }
    dend_49 { pt3dadd( 10.6224, 73.3111, 24.0306, 0.96 ) }
    dend_49 { pt3dadd( 10.7218, 73.9726, 24.1009, 0.96 ) }
    dend_49 { pt3dadd( 10.7967, 74.6569, 24.1633, 0.66 ) }
    dend_49 { pt3dadd( 10.8627, 75.6343, 24.2339, 0.37 ) }
    dend_49 { pt3dadd( 10.8832, 76.2512, 24.2664, 0.37 ) }
    dend_49 { pt3dadd( 10.9043, 76.6664, 24.2875, 0.37 ) }
    dend_49 { pt3dadd( 10.9504, 77.3907, 24.3273, 0.37 ) }
    dend_49 { pt3dadd( 11.0025, 77.971, 24.3651, 0.66 ) }
    dend_49 { pt3dadd( 11.0939, 78.5849, 24.4184, 0.66 ) }
    dend_49 { pt3dadd( 11.2352, 79.1619, 24.496, 0.81 ) }
    dend_49 { pt3dadd( 11.4083, 79.7785, 24.611, 0.52 ) }
    dend_49 { pt3dadd( 11.5687, 80.3951, 24.7367, 0.37 ) }
    dend_49 { pt3dadd( 11.6664, 80.9167, 24.8346, 0.37 ) }
    dend_49 { pt3dadd( 11.716, 81.3515, 24.9037, 0.66 ) }
    dend_49 { pt3dadd( 11.7568, 82.0011, 24.988, 0.66 ) }
    dend_49 { pt3dadd( 11.813, 82.7557, 25.079, 0.37 ) }
    dend_49 { pt3dadd( 11.8744, 83.2219, 25.1374, 0.37 ) }
    dend_49 { pt3dadd( 12.0828, 84.1134, 25.2686, 0.96 ) }
    dend_49 { pt3dadd( 12.2131, 84.5556, 25.3424, 1.33 ) }
    dend_49 { pt3dadd( 12.4017, 85.1462, 25.4341, 1.33 ) }
    dend_49 { pt3dadd( 12.6752, 85.9915, 25.5808, 1.03 ) }
    dend_49 { pt3dadd( 12.941, 86.7591, 25.7332, 0.74 ) }
    dend_49 { pt3dadd( 13.2009, 87.481, 25.9044, 0.44 ) }
    dend_49 { pt3dadd( 13.3903, 88.0228, 26.0503, 0.44 ) }
    dend_49 { pt3dadd( 13.568, 88.5457, 26.1849, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_49 { pt3dadd( 13.8718, 89.5022, 26.4071, 0.66 ) }
    dend_49 { pt3dadd( 13.9967, 89.959, 26.5131, 0.96 ) }
    dend_49 { pt3dadd( 14.0509, 90.2044, 26.5637, 0.96 ) }
    dend_49 { pt3dadd( 14.2523, 91.1227, 26.7016, 0.52 ) }
    dend_49 { pt3dadd( 14.4347, 91.892, 26.7841, 0.52 ) }
    dend_49 { pt3dadd( 14.666, 92.7693, 26.8521, 0.52 ) }
    dend_49 { pt3dadd( 14.8917, 93.4855, 26.8824, 0.52 ) }
    dend_49 { pt3dadd( 15.2643, 94.6892, 26.9779, 0.74 ) }
    dend_49 { pt3dadd( 15.4711, 95.4611, 27.0774, 0.52 ) }
    dend_49 { pt3dadd( 15.5986, 96.0229, 27.1785, 0.52 ) }
    dend_49 { pt3dadd( 15.7223, 96.6478, 27.3219, 0.52 ) }
    dend_49 { pt3dadd( 15.8976, 97.4111, 27.4831, 0.81 ) }
    dend_49 { pt3dadd( 16.1961, 98.4914, 27.6716, 0.81 ) }
    dend_49 { pt3dadd( 16.4088, 99.1864, 27.788, 0.59 ) }
    dend_49 { pt3dadd( 16.59, 99.7618, 27.8528, 0.37 ) }
    dend_49 { pt3dadd( 16.8151, 100.472, 27.9207, 0.37 ) }
    dend_49 { pt3dadd( 17.1587, 101.574, 28.0025, 0.37 ) }
    dend_49 { pt3dadd( 17.3341, 102.126, 28.0311, 0.52 ) }
    dend_49 { pt3dadd( 17.5759, 102.754, 28.062, 0.52 ) }
    dend_49 { pt3dadd( 18.0071, 103.79, 28.1511, 0.52 ) }
    dend_49 { pt3dadd( 18.4432, 104.891, 28.3026, 0.74 ) }
    dend_49 { pt3dadd( 18.7057, 105.598, 28.4399, 0.96 ) }
    dend_49 { pt3dadd( 18.9621, 106.344, 28.6274, 0.37 ) }
    dend_49 { pt3dadd( 19.2408, 107.176, 28.8498, 0.29 ) }
    dend_49 { pt3dadd( 19.4225, 107.697, 28.9989, 0.29 ) }
    dend_49 { pt3dadd( 19.6904, 108.453, 29.2156, 0.81 ) }
    dend_49 { pt3dadd( 19.8164, 108.782, 29.2753, 0.81 ) }
    dend_49 { pt3dadd( 19.9394, 109.148, 29.3306, 0.96 ) }
    dend_49 { pt3dadd( 20.0096, 109.448, 29.3631, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.77455, 36.5082, 13.0509, 0.66 ) }
    dend_28 { pt3dadd( 3.03178, 38.0945, 10.9341, 0.66 ) }
    dend_28 { pt3dadd( 3.16186, 39.0141, 9.60932, 0.66 ) }
    dend_28 { pt3dadd( 3.2576, 39.4616, 8.95059, 0.66 ) }
    dend_28 { pt3dadd( 3.44753, 40.1479, 7.9286, 0.52 ) }
    dend_28 { pt3dadd( 3.73886, 41.177, 6.40094, 0.81 ) }
    dend_28 { pt3dadd( 3.89309, 41.6726, 5.7032, 0.81 ) }
    dend_28 { pt3dadd( 4.18661, 42.4051, 4.73307, 0.59 ) }
    dend_28 { pt3dadd( 4.5984, 43.1785, 3.64915, 0.59 ) }
    dend_28 { pt3dadd( 4.98657, 43.811, 2.75243, 0.44 ) }
    dend_28 { pt3dadd( 5.23855, 44.2296, 2.21221, 0.44 ) }
    dend_28 { pt3dadd( 5.71844, 45.0346, 1.29926, 0.96 ) }
    dend_28 { pt3dadd( 6.02, 45.4913, 0.770159, 1.18 ) }
    dend_28 { pt3dadd( 6.82258, 46.6162, -0.581156, 0.88 ) }
    dend_28 { pt3dadd( 7.49351, 47.5035, -1.68146, 0.37 ) }
    dend_28 { pt3dadd( 7.98807, 48.074, -2.41206, 1.03 ) }
    dend_28 { pt3dadd( 8.55592, 48.6338, -3.15276, 1.03 ) }
    dend_28 { pt3dadd( 9.62821, 49.5564, -4.50586, 0.52 ) }
    dend_28 { pt3dadd( 10.075, 49.9217, -5.03542, 0.52 ) }
    dend_28 { pt3dadd( 10.4225, 50.1993, -5.4276, 0.81 ) }
    dend_28 { pt3dadd( 10.8491, 50.5495, -5.93382, 0.81 ) }
    dend_28 { pt3dadd( 11.2714, 50.934, -6.5239, 0.74 ) }
    dend_28 { pt3dadd( 12.0518, 51.895, -7.92265, 1.03 ) }
    dend_28 { pt3dadd( 12.3451, 52.4857, -8.74989, 1.03 ) }
    dend_28 { pt3dadd( 12.5322, 53.2951, -9.96432, 0.59 ) }
    dend_28 { pt3dadd( 12.564, 53.8202, -10.7801, 0.81 ) }
    dend_28 { pt3dadd( 12.5162, 54.3577, -11.723, 0.81 ) }
    dend_28 { pt3dadd( 12.4736, 54.5471, -12.0786, 0.66 ) }
    dend_28 { pt3dadd( 12.3712, 54.8666, -12.6922, 0.66 ) }
    dend_28 { pt3dadd( 12.1036, 55.6141, -14.2558, 0.52 ) }
    dend_28 { pt3dadd( 11.932, 56.0906, -15.2914, 0.37 ) }
    dend_28 { pt3dadd( 11.7219, 56.9583, -17.2254, 0.29 ) }
    dend_28 { pt3dadd( 11.6859, 57.1502, -17.668, 0.29 ) }
    dend_28 { pt3dadd( 11.6267, 57.4529, -18.3866, 0.29 ) }
    dend_28 { pt3dadd( 11.5583, 57.7874, -19.1474, 0.29 ) }
    dend_28 { pt3dadd( 11.3885, 58.3476, -20.2623, 0.81 ) }
    dend_28 { pt3dadd( 11.2108, 58.8461, -21.1436, 0.81 ) }
    dend_28 { pt3dadd( 10.914, 59.7436, -22.4171, 0.59 ) }
    dend_28 { pt3dadd( 10.8492, 59.9532, -22.6859, 0.59 ) }
    dend_28 { pt3dadd( 10.6605, 60.5512, -23.3348, 0.29 ) }
    dend_28 { pt3dadd( 10.5736, 61.1484, -24.1841, 0.52 ) }
    dend_28 { pt3dadd( 10.5739, 61.2464, -24.3632, 0.81 ) }
    dend_28 { pt3dadd( 10.5968, 61.5378, -25.0052, 0.81 ) }
    dend_28 { pt3dadd( 10.647, 61.8549, -25.8405, 0.74 ) }
    dend_28 { pt3dadd( 10.6672, 61.9806, -26.2566, 0.88 ) }
    dend_28 { pt3dadd( 10.8372, 63.2202, -31.5588, 0.88 ) }
    dend_28 { pt3dadd( 10.8496, 63.4841, -33.0323, 0.66 ) }
    dend_28 { pt3dadd( 10.8248, 63.6298, -33.9696, 0.88 ) }
    dend_28 { pt3dadd( 10.7456, 63.8163, -35.3429, 0.96 ) }
    dend_28 { pt3dadd( 10.6402, 63.9656, -36.3452, 0.52 ) }
    dend_28 { pt3dadd( 10.5135, 64.0948, -37.0358, 0.74 ) }
    dend_28 { pt3dadd( 9.98178, 64.4728, -38.182, 0.44 ) }
    dend_28 { pt3dadd( 9.65004, 64.7484, -38.7672, 0.29 ) }
    dend_28 { pt3dadd( 9.31835, 65.0529, -39.2711, 0.29 ) }
    dend_28 { pt3dadd( 8.70871, 65.5905, -40.0736, 1.18 ) }
    dend_28 { pt3dadd( 8.43886, 65.8112, -40.43, 1.92 ) }
    dend_28 { pt3dadd( 7.94366, 66.1194, -41.1714, 1.47 ) }
    dend_28 { pt3dadd( 7.22427, 66.4308, -42.3247, 0.37 ) }
    dend_28 { pt3dadd( 6.90409, 66.5033, -42.8493, 0.29 ) }
    dend_28 { pt3dadd( 6.26352, 66.5019, -43.8319, 0.29 ) }
    dend_28 { pt3dadd( 5.50637, 66.3309, -44.9738, 0.29 ) }
    dend_28 { pt3dadd( 4.40217, 65.8022, -46.7485, 0.29 ) }
    dend_28 { pt3dadd( 3.84938, 65.4031, -47.66, 0.29 ) }
    dend_28 { pt3dadd( 3.42528, 65.0516, -48.3752, 0.29 ) }
    dend_28 { pt3dadd( 2.90282, 64.6388, -49.3079, 0.29 ) }
    dend_28 { pt3dadd( 2.55036, 64.4171, -49.9367, 0.29 ) }
    dend_28 { pt3dadd( 1.74283, 64.0506, -51.3581, 0.29 ) }
    dend_28 { pt3dadd( 1.37638, 63.9054, -52.0284, 0.29 ) }
    dend_28 { pt3dadd( 0.84488, 63.7833, -53.1351, 0.29 ) }
    dend_28 { pt3dadd( 0.567832, 63.8238, -53.7448, 0.52 ) }
    dend_28 { pt3dadd( 0.275991, 64.0007, -54.3588, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( -0.187, 64.4137, -55.2332, 0.52 ) }
    dend_28 { pt3dadd( -0.724249, 64.9989, -56.1395, 0.66 ) }
    dend_28 { pt3dadd( -1.00338, 65.3279, -56.5958, 0.96 ) }
    dend_28 { pt3dadd( -1.27285, 65.6433, -57.0008, 1.18 ) }
    dend_28 { pt3dadd( -2.06095, 66.649, -58.1452, 0.52 ) }
    dend_28 { pt3dadd( -2.5551, 67.4081, -58.9384, 0.29 ) }
    dend_28 { pt3dadd( -2.78589, 67.8772, -59.3905, 0.52 ) }
    dend_28 { pt3dadd( -2.86219, 68.1086, -59.5878, 0.74 ) }
    dend_28 { pt3dadd( -2.99049, 68.6152, -60.017, 0.74 ) }
    dend_28 { pt3dadd( -3.18796, 69.4734, -60.7714, 0.44 ) }
    dend_28 { pt3dadd( -3.37601, 70.3664, -61.6044, 0.44 ) }
    dend_28 { pt3dadd( -3.57027, 71.2767, -62.5095, 0.37 ) }
    dend_28 { pt3dadd( -3.74966, 71.9647, -63.2294, 0.37 ) }
    dend_28 { pt3dadd( -4.00719, 72.7167, -64.1108, 0.37 ) }
    dend_28 { pt3dadd( -4.3447, 73.6713, -65.3842, 0.37 ) }
    dend_28 { pt3dadd( -4.58083, 74.2619, -66.2217, 0.88 ) }
    dend_28 { pt3dadd( -4.65274, 74.4197, -66.4386, 0.88 ) }
    dend_28 { pt3dadd( -4.94396, 74.9427, -67.1418, 0.66 ) }
    dend_28 { pt3dadd( -5.52054, 75.8012, -68.2976, 0.96 ) }
    dend_28 { pt3dadd( -6.37854, 76.7677, -69.5179, 0.81 ) }
    dend_28 { pt3dadd( -7.04731, 77.3018, -70.1626, 1.11 ) }
    dend_28 { pt3dadd( -7.90319, 77.7896, -70.7118, 0.59 ) }
    dend_28 { pt3dadd( -9.02635, 78.349, -71.29, 0.59 ) }
    dend_28 { pt3dadd( -9.78902, 78.716, -71.5881, 0.74 ) }
    dend_28 { pt3dadd( -10.8284, 79.2022, -71.881, 0.52 ) }
    dend_28 { pt3dadd( -11.4082, 79.4516, -72.0291, 0.52 ) }
    dend_28 { pt3dadd( -12.2075, 79.8171, -72.2858, 0.52 ) }
    dend_28 { pt3dadd( -13.0233, 80.2351, -72.5937, 0.52 ) }
    dend_28 { pt3dadd( -13.6754, 80.6824, -72.9292, 0.52 ) }
    dend_28 { pt3dadd( -14.6058, 81.4987, -73.5043, 1.33 ) }
    dend_28 { pt3dadd( -14.9966, 81.9324, -73.7725, 2.28 ) }
    dend_28 { pt3dadd( -15.4501, 82.481, -74.1011, 2.5 ) }
    // Section: dend_16, id: dend_16, parent: dend_4 (entry count 32/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 3.6766, -46.5249, 11.1407, 0.59 ) }
    dend_16 { pt3dadd( 5.4215, -47.6024, 11.787, 0.59 ) }
    dend_16 { pt3dadd( 6.2745, -48.2313, 12.0716, 0.59 ) }
    dend_16 { pt3dadd( 8.94882, -50.692, 12.9838, 0.44 ) }
    dend_16 { pt3dadd( 9.42425, -51.2452, 13.1897, 0.44 ) }
    dend_16 { pt3dadd( 10.1026, -52.1672, 13.5206, 0.44 ) }
    dend_16 { pt3dadd( 10.9925, -53.4883, 14.0173, 0.44 ) }
    dend_16 { pt3dadd( 11.463, -54.3777, 14.3439, 0.44 ) }
    dend_16 { pt3dadd( 12.092, -55.6939, 14.8348, 0.44 ) }
    dend_16 { pt3dadd( 12.8838, -57.4497, 15.4657, 0.44 ) }
    dend_16 { pt3dadd( 13.3402, -58.4247, 15.9303, 0.81 ) }
    dend_16 { pt3dadd( 14.1981, -60.1681, 16.9782, 0.59 ) }
    dend_16 { pt3dadd( 14.4543, -60.6586, 17.3221, 0.59 ) }
    dend_16 { pt3dadd( 15.2705, -62.0132, 18.5532, 0.29 ) }
    dend_16 { pt3dadd( 15.6278, -62.6105, 19.1913, 0.29 ) }
    dend_16 { pt3dadd( 16.4667, -64.2338, 20.977, 0.29 ) }
    dend_16 { pt3dadd( 16.8367, -65.2365, 22.0332, 0.29 ) }
    dend_16 { pt3dadd( 17.0601, -66.3493, 23.1499, 1.03 ) }
    dend_16 { pt3dadd( 17.1747, -69.6164, 26.1162, 1.11 ) }
    dend_16 { pt3dadd( 17.0684, -70.9703, 27.3196, 1.33 ) }
    dend_16 { pt3dadd( 16.7937, -72.5096, 28.5663, 0.66 ) }
    dend_16 { pt3dadd( 15.7159, -75.3056, 30.0949, 0.15 ) }
    dend_16 { pt3dadd( 15.0435, -76.1345, 30.0625, 0.15 ) }
    dend_16 { pt3dadd( 14.1384, -76.8917, 29.5831, 0.15 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 56/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 3.6766, -46.5249, 11.1407, 1.33 ) }
    dend_5 { pt3dadd( 3.27913, -47.7093, 10.9671, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 58/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -15.4501, 82.481, -74.1011, 0.37 ) }
    dend_30 { pt3dadd( -16.8946, 83.005, -75.6837, 0.37 ) }
    dend_30 { pt3dadd( -17.5485, 83.1768, -76.4055, 0.37 ) }
    dend_30 { pt3dadd( -18.4501, 83.2781, -77.3974, 0.37 ) }
    dend_30 { pt3dadd( -19.4185, 83.2153, -78.6244, 0.88 ) }
    dend_30 { pt3dadd( -19.8216, 83.1637, -79.1747, 0.88 ) }
    dend_30 { pt3dadd( -20.5029, 83.0971, -80.1307, 0.52 ) }
    dend_30 { pt3dadd( -20.996, 83.0605, -80.906, 0.29 ) }
    dend_30 { pt3dadd( -21.571, 83.0681, -81.9597, 0.29 ) }
    dend_30 { pt3dadd( -22.3144, 83.2462, -83.5751, 0.37 ) }
    dend_30 { pt3dadd( -22.5484, 83.4276, -84.1208, 0.37 ) }
    dend_30 { pt3dadd( -22.8893, 83.865, -84.9592, 0.37 ) }
    dend_30 { pt3dadd( -23.2601, 84.3943, -85.7336, 0.37 ) }
    dend_30 { pt3dadd( -23.9343, 85.2893, -87.0377, 0.66 ) }
    dend_30 { pt3dadd( -24.3857, 85.7883, -87.818, 0.66 ) }
    dend_30 { pt3dadd( -25.1412, 86.3879, -88.8899, 0.37 ) }
    dend_30 { pt3dadd( -25.6802, 86.688, -89.5708, 0.29 ) }
    dend_30 { pt3dadd( -26.722, 87.0951, -90.7426, 0.29 ) }
    dend_30 { pt3dadd( -27.8607, 87.4375, -91.7676, 0.29 ) }
    dend_30 { pt3dadd( -28.9833, 87.7123, -92.5392, 0.29 ) }
    dend_30 { pt3dadd( -30.207, 88.0107, -93.3466, 0.29 ) }
    dend_30 { pt3dadd( -31.0653, 88.247, -93.9166, 0.88 ) }
    dend_30 { pt3dadd( -31.5081, 88.3961, -94.2278, 1.03 ) }
    dend_30 { pt3dadd( -32.7327, 88.9966, -95.2363, 0.29 ) }
    dend_30 { pt3dadd( -33.6725, 89.5856, -96.0861, 0.29 ) }
    dend_30 { pt3dadd( -34.8886, 90.356, -97.3491, 0.96 ) }
    dend_30 { pt3dadd( -35.4271, 90.682, -98.0086, 1.25 ) }
    dend_30 { pt3dadd( -35.6166, 90.7874, -98.3032, 1.47 ) }
    dend_30 { pt3dadd( -36.4509, 91.1597, -99.6913, 0.96 ) }
    dend_30 { pt3dadd( -37.0437, 91.4144, -101.155, 0.52 ) }
    dend_30 { pt3dadd( -37.6557, 91.7549, -103.064, 0.44 ) }
    dend_30 { pt3dadd( -38.0953, 92.0411, -104.59, 0.44 ) }
    dend_30 { pt3dadd( -38.7654, 92.5558, -107.197, 1.11 ) }
    dend_30 { pt3dadd( -39.0064, 92.7892, -108.208, 1.11 ) }
    dend_30 { pt3dadd( -40.2134, 94.2728, -113.696, 0.29 ) }
    dend_30 { pt3dadd( -40.4633, 94.6751, -115.086, 0.29 ) }
    dend_30 { pt3dadd( -40.6068, 94.9568, -116.079, 0.96 ) }
    dend_30 { pt3dadd( -40.7562, 95.2169, -117.036, 1.18 ) }
    dend_30 { pt3dadd( -41.0744, 95.6696, -118.527, 0.88 ) }
    dend_30 { pt3dadd( -41.5136, 96.1591, -120.093, 0.52 ) }
    dend_30 { pt3dadd( -41.892, 96.3879, -120.995, 0.52 ) }
    dend_30 { pt3dadd( -42.335, 96.5291, -122.091, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_30 { pt3dadd( -43.1978, 96.6819, -124.485, 0.37 ) }
    dend_30 { pt3dadd( -43.6654, 96.7427, -125.806, 0.37 ) }
    dend_30 { pt3dadd( -44.1608, 96.8112, -127.208, 0.37 ) }
    dend_30 { pt3dadd( -44.847, 96.9428, -129.155, 0.37 ) }
    dend_30 { pt3dadd( -45.3601, 97.0923, -130.561, 0.37 ) }
    dend_30 { pt3dadd( -45.9412, 97.2621, -132.086, 0.37 ) }
    dend_30 { pt3dadd( -46.3432, 97.2494, -133.222, 1.11 ) }
    dend_30 { pt3dadd( -46.4559, 97.2117, -133.616, 1.47 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 8/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -15.4501, 82.481, -74.1011, 0.29 ) }
    dend_29 { pt3dadd( -15.3718, 85.2184, -76.0786, 0.29 ) }
    dend_29 { pt3dadd( -15.3968, 86.1237, -76.5952, 0.29 ) }
    dend_29 { pt3dadd( -15.4187, 86.6899, -76.8705, 0.29 ) }
    dend_29 { pt3dadd( -15.5214, 87.9852, -77.4849, 0.29 ) }
    dend_29 { pt3dadd( -15.5695, 88.4015, -77.6701, 0.52 ) }
    dend_29 { pt3dadd( -15.6725, 89.1325, -77.9645, 0.37 ) }
    dend_29 { pt3dadd( -15.8397, 89.7705, -78.0981, 0.66 ) }
    dend_29 { pt3dadd( -15.9591, 90.1427, -78.1581, 0.81 ) }
    dend_29 { pt3dadd( -16.3795, 91.3806, -78.2863, 0.29 ) }
    dend_29 { pt3dadd( -16.7214, 92.3088, -78.3457, 0.52 ) }
    dend_29 { pt3dadd( -16.9559, 92.8795, -78.365, 0.74 ) }
    dend_29 { pt3dadd( -17.5503, 94.1278, -78.3563, 0.29 ) }
    dend_29 { pt3dadd( -18.111, 95.1815, -78.2908, 0.29 ) }
    dend_29 { pt3dadd( -18.4605, 95.753, -78.2067, 1.25 ) }
    dend_29 { pt3dadd( -18.6814, 96.096, -78.1204, 1.84 ) }
    dend_29 { pt3dadd( -18.965, 96.5085, -77.9911, 1.84 ) }
    dend_29 { pt3dadd( -20.0222, 97.8608, -77.5098, 0.29 ) }
    dend_29 { pt3dadd( -20.3911, 98.2696, -77.3326, 0.29 ) }
    dend_29 { pt3dadd( -21.6204, 99.3974, -76.6827, 0.29 ) }
    dend_29 { pt3dadd( -22.1673, 99.8534, -76.3405, 0.52 ) }
    dend_29 { pt3dadd( -22.4879, 100.111, -76.112, 0.29 ) }
    dend_29 { pt3dadd( -23.2651, 100.747, -75.4671, 0.29 ) }
    dend_29 { pt3dadd( -23.6468, 101.077, -75.0983, 0.29 ) }
    dend_29 { pt3dadd( -24.6379, 101.999, -74.1206, 0.88 ) }
    dend_29 { pt3dadd( -25.553, 102.817, -73.252, 0.29 ) }
    dend_29 { pt3dadd( -25.9396, 103.148, -72.9218, 0.29 ) }
    dend_29 { pt3dadd( -26.6641, 103.806, -72.3373, 0.81 ) }
    dend_29 { pt3dadd( -27.0191, 104.18, -72.045, 0.81 ) }
    dend_29 { pt3dadd( -27.5449, 104.808, -71.5943, 0.37 ) }
    dend_29 { pt3dadd( -28.1748, 105.666, -71.0466, 0.29 ) }
    dend_29 { pt3dadd( -28.5605, 106.207, -70.7008, 0.29 ) }
    dend_29 { pt3dadd( -28.9724, 106.819, -70.3081, 0.29 ) }
    dend_29 { pt3dadd( -29.2858, 107.326, -69.9789, 0.29 ) }
    dend_29 { pt3dadd( -29.9593, 108.566, -69.1514, 0.88 ) }
    dend_29 { pt3dadd( -30.1117, 108.884, -68.9253, 1.25 ) }
    dend_29 { pt3dadd( -30.3734, 109.446, -68.534, 1.25 ) }
    dend_29 { pt3dadd( -30.74, 110.218, -68.0837, 0.29 ) }
    dend_29 { pt3dadd( -31.0743, 110.864, -67.7995, 0.22 ) }
    dend_29 { pt3dadd( -31.4903, 111.592, -67.6462, 0.88 ) }
    dend_29 { pt3dadd( -32.0433, 112.562, -67.72, 0.88 ) }
    dend_29 { pt3dadd( -32.4791, 113.314, -67.8114, 0.59 ) }
    dend_29 { pt3dadd( -33.816, 115.554, -68.1637, 0.59 ) }
    dend_29 { pt3dadd( -34.0447, 115.937, -68.2383, 0.59 ) }
    dend_29 { pt3dadd( -34.5636, 116.786, -68.4214, 0.29 ) }
    dend_29 { pt3dadd( -35.0326, 117.547, -68.567, 0.37 ) }
    dend_29 { pt3dadd( -35.7877, 118.724, -68.7149, 0.37 ) }
    dend_29 { pt3dadd( -36.2558, 119.421, -68.7091, 0.37 ) }
    dend_29 { pt3dadd( -36.4642, 119.726, -68.6736, 0.44 ) }
    dend_29 { pt3dadd( -36.6501, 119.984, -68.6548, 0.44 ) }
    dend_29 { pt3dadd( -37.2609, 120.773, -68.6475, 0.22 ) }
    dend_29 { pt3dadd( -37.7176, 121.347, -68.6916, 0.37 ) }
    dend_29 { pt3dadd( -38.2418, 121.966, -68.8008, 0.29 ) }
    dend_29 { pt3dadd( -38.8507, 122.638, -68.9358, 0.29 ) }
    dend_29 { pt3dadd( -39.5584, 123.37, -69.0885, 0.29 ) }
    dend_29 { pt3dadd( -40.2828, 124.103, -69.2437, 0.29 ) }
    dend_29 { pt3dadd( -40.742, 124.6, -69.3448, 0.29 ) }
    dend_29 { pt3dadd( -41.2625, 125.249, -69.4628, 0.29 ) }
    dend_29 { pt3dadd( -41.7381, 125.978, -69.5847, 0.52 ) }
    dend_29 { pt3dadd( -41.907, 126.345, -69.6391, 0.74 ) }
    dend_29 { pt3dadd( -42.1154, 127.083, -69.6803, 0.52 ) }
    dend_29 { pt3dadd( -42.338, 128.175, -69.6594, 0.29 ) }
    dend_29 { pt3dadd( -42.4568, 128.794, -69.6244, 0.29 ) }
    dend_29 { pt3dadd( -42.5622, 129.306, -69.5967, 0.37 ) }
    dend_29 { pt3dadd( -42.688, 129.762, -69.5746, 0.37 ) }
    dend_29 { pt3dadd( -43.1818, 131.039, -69.5282, 0.59 ) }
    dend_29 { pt3dadd( -43.6157, 131.898, -69.5127, 0.29 ) }
    dend_29 { pt3dadd( -44.4971, 133.354, -69.5219, 0.29 ) }
    dend_29 { pt3dadd( -45.5516, 134.92, -69.5822, 0.29 ) }
    dend_29 { pt3dadd( -46.0395, 135.622, -69.6185, 0.29 ) }
    dend_29 { pt3dadd( -46.6073, 136.419, -69.6887, 0.29 ) }
    dend_29 { pt3dadd( -47.078, 137.065, -69.7934, 0.59 ) }
    dend_29 { pt3dadd( -47.5321, 137.626, -69.8907, 0.59 ) }
    dend_29 { pt3dadd( -48.4153, 138.476, -70.0578, 0.96 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 3.27913, -47.7093, 10.9671, 0.74 ) }
    dend_7 { pt3dadd( 3.59499, -49.4294, 10.8544, 0.74 ) }
    dend_7 { pt3dadd( 3.80791, -50.3829, 10.8222, 0.74 ) }
    dend_7 { pt3dadd( 4.05701, -51.496, 10.8387, 0.96 ) }
    dend_7 { pt3dadd( 4.31321, -52.5282, 10.9543, 0.74 ) }
    dend_7 { pt3dadd( 4.62823, -53.7272, 11.1428, 0.59 ) }
    dend_7 { pt3dadd( 4.86723, -54.637, 11.2858, 0.59 ) }
    dend_7 { pt3dadd( 5.25331, -55.9269, 11.5673, 0.59 ) }
    dend_7 { pt3dadd( 5.75102, -57.4785, 11.974, 0.52 ) }
    dend_7 { pt3dadd( 6.43832, -59.4857, 12.5848, 0.52 ) }
    dend_7 { pt3dadd( 6.61757, -60.0317, 12.7777, 1.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 93/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 3.27913, -47.7093, 10.9671, 0.59 ) }
    dend_6 { pt3dadd( 2.20565, -48.7828, 11.679, 0.59 ) }
    dend_6 { pt3dadd( 1.54115, -49.4376, 12.33, 0.88 ) }
    dend_6 { pt3dadd( 0.834437, -50.1558, 13.1937, 0.88 ) }
    dend_6 { pt3dadd( 0.0342443, -50.9753, 14.2372, 0.59 ) }
    dend_6 { pt3dadd( -1.05943, -52.0052, 15.6518, 0.59 ) }
    dend_6 { pt3dadd( -1.52004, -52.4683, 16.302, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_6 { pt3dadd( -2.27131, -53.2985, 17.5667, 1.4 ) }
    dend_6 { pt3dadd( -2.91229, -54.0265, 18.6995, 1.03 ) }
    dend_6 { pt3dadd( -3.35596, -54.5062, 19.463, 1.55 ) }
    dend_6 { pt3dadd( -3.89898, -55.064, 20.3226, 1.55 ) }
    dend_6 { pt3dadd( -4.87024, -56.0234, 21.5908, 1.03 ) }
    dend_6 { pt3dadd( -5.45183, -56.6108, 22.2773, 0.81 ) }
    dend_6 { pt3dadd( -6.2504, -57.4318, 23.1643, 0.81 ) }
    dend_6 { pt3dadd( -6.94969, -58.1301, 23.8513, 0.37 ) }
    dend_6 { pt3dadd( -7.5071, -58.642, 24.3056, 0.37 ) }
    dend_6 { pt3dadd( -7.651, -58.7636, 24.4057, 0.96 ) }
    dend_6 { pt3dadd( -8.07526, -59.0952, 24.6604, 1.4 ) }
    dend_6 { pt3dadd( -9.92962, -60.6524, 25.7364, 0.59 ) }
    dend_6 { pt3dadd( -11.4285, -61.9545, 26.5945, 0.52 ) }
    dend_6 { pt3dadd( -12.5965, -62.9514, 27.2578, 0.52 ) }
    dend_6 { pt3dadd( -13.9516, -64.0122, 28.0212, 0.37 ) }
    dend_6 { pt3dadd( -15.0948, -64.8035, 28.6108, 0.29 ) }
    dend_6 { pt3dadd( -16.4948, -65.6367, 29.2048, 1.25 ) }
    dend_6 { pt3dadd( -16.8796, -65.8352, 29.3308, 1.4 ) }
    dend_6 { pt3dadd( -18.1766, -66.4847, 29.7628, 0.52 ) }
    dend_6 { pt3dadd( -19.1602, -66.9413, 30.0701, 0.81 ) }
    dend_6 { pt3dadd( -20.4469, -67.4222, 30.4085, 1.03 ) }
    dend_6 { pt3dadd( -22.1994, -67.8663, 30.8725, 0.52 ) }
    dend_6 { pt3dadd( -23.271, -68.0719, 31.1808, 0.52 ) }
    dend_6 { pt3dadd( -24.1026, -68.2733, 31.466, 0.37 ) }
    dend_6 { pt3dadd( -25.2366, -68.7433, 32.0319, 0.29 ) }
    dend_6 { pt3dadd( -25.5627, -68.9487, 32.2668, 0.74 ) }
    dend_6 { pt3dadd( -26.1294, -69.3863, 32.8317, 1.03 ) }
    dend_6 { pt3dadd( -26.4563, -69.6388, 33.218, 0.81 ) }
    dend_6 { pt3dadd( -27.1859, -70.1504, 34.063, 0.59 ) }
    dend_6 { pt3dadd( -28.3083, -70.9034, 35.3237, 0.37 ) }
    dend_6 { pt3dadd( -28.8687, -71.2532, 35.8461, 0.29 ) }
    dend_6 { pt3dadd( -29.3688, -71.48, 36.2404, 0.29 ) }
    dend_6 { pt3dadd( -29.8643, -71.6354, 36.5579, 0.96 ) }
    dend_6 { pt3dadd( -30.4443, -71.7468, 36.8151, 0.96 ) }
    dend_6 { pt3dadd( -31.2175, -71.8443, 37.0623, 0.81 ) }
    dend_6 { pt3dadd( -32.6887, -72.0771, 37.4868, 0.44 ) }
    dend_6 { pt3dadd( -33.498, -72.3289, 37.7515, 0.29 ) }
    dend_6 { pt3dadd( -34.5061, -72.8413, 38.138, 0.29 ) }
    dend_6 { pt3dadd( -35.5649, -73.5867, 38.6192, 1.4 ) }
    dend_6 { pt3dadd( -36.1598, -74.1021, 38.9323, 1.4 ) }
    dend_6 { pt3dadd( -37.1567, -75.1218, 39.5842, 0.44 ) }
    dend_6 { pt3dadd( -37.6682, -75.7202, 39.9948, 0.29 ) }
    dend_6 { pt3dadd( -37.9816, -76.1162, 40.2825, 0.88 ) }
    dend_6 { pt3dadd( -38.5823, -76.8747, 40.8651, 0.96 ) }
    dend_6 { pt3dadd( -39.063, -77.4606, 41.3423, 0.59 ) }
    dend_6 { pt3dadd( -39.9281, -78.4829, 42.1623, 0.44 ) }
    dend_6 { pt3dadd( -40.7832, -79.4921, 42.9618, 0.37 ) }
    dend_6 { pt3dadd( -41.639, -80.4639, 43.755, 0.22 ) }
    dend_6 { pt3dadd( -42.4058, -81.2773, 44.444, 0.59 ) }
    dend_6 { pt3dadd( -43.1491, -82.0017, 45.0818, 0.29 ) }
    dend_6 { pt3dadd( -43.3824, -82.2056, 45.2678, 0.74 ) }
    dend_6 { pt3dadd( -43.8707, -82.5595, 45.6118, 0.96 ) }
    dend_6 { pt3dadd( -44.4224, -82.8699, 45.9733, 0.59 ) }
    dend_6 { pt3dadd( -45.3726, -83.2784, 46.5602, 0.44 ) }
    dend_6 { pt3dadd( -46.0184, -83.5343, 46.9688, 0.74 ) }
    dend_6 { pt3dadd( -46.5747, -83.7685, 47.3184, 0.96 ) }
    dend_6 { pt3dadd( -47.7457, -84.3263, 48.0546, 0.37 ) }
    dend_6 { pt3dadd( -48.6235, -84.8428, 48.6067, 0.29 ) }
    dend_6 { pt3dadd( -49.2113, -85.2725, 48.9339, 0.29 ) }
    dend_6 { pt3dadd( -49.9043, -85.8651, 49.2646, 0.52 ) }
    dend_6 { pt3dadd( -50.3439, -86.2651, 49.4436, 0.52 ) }
    dend_6 { pt3dadd( -50.7246, -86.6093, 49.624, 0.52 ) }
    dend_6 { pt3dadd( -51.5904, -87.292, 50.1063, 0.52 ) }
    dend_6 { pt3dadd( -52.5991, -87.9482, 50.7455, 0.52 ) }
    dend_6 { pt3dadd( -53.0182, -88.1444, 51.035, 0.88 ) }
    dend_6 { pt3dadd( -53.8634, -88.4151, 51.6547, 0.88 ) }
    dend_6 { pt3dadd( -55.4728, -88.7427, 52.7751, 0.37 ) }
    dend_6 { pt3dadd( -56.6464, -88.9243, 53.4993, 0.29 ) }
    dend_6 { pt3dadd( -57.2581, -89.0235, 53.8419, 0.96 ) }
    dend_6 { pt3dadd( -58.3027, -89.2745, 54.3653, 1.03 ) }
    dend_6 { pt3dadd( -59.5637, -89.7128, 54.8786, 0.52 ) }
    dend_6 { pt3dadd( -60.7597, -90.2676, 55.177, 0.52 ) }
    dend_6 { pt3dadd( -62.0423, -91.0043, 55.3221, 0.52 ) }
    dend_6 { pt3dadd( -63.3279, -91.8969, 55.3627, 0.52 ) }
    dend_6 { pt3dadd( -64.3652, -92.7135, 55.3464, 0.52 ) }
    dend_6 { pt3dadd( -65.7601, -93.9415, 55.2779, 0.44 ) }
    dend_6 { pt3dadd( -67.198, -95.3176, 55.1323, 0.74 ) }
    dend_6 { pt3dadd( -68.0656, -96.2273, 55.0081, 0.81 ) }
    dend_6 { pt3dadd( -69.0042, -97.2463, 54.8245, 0.52 ) }
    dend_6 { pt3dadd( -69.5423, -97.8187, 54.6927, 0.88 ) }
    dend_6 { pt3dadd( -69.9362, -98.2347, 54.5962, 0.88 ) }
    dend_6 { pt3dadd( -71.2696, -99.652, 54.3003, 0.44 ) }
    dend_6 { pt3dadd( -72.4393, -100.789, 54.1067, 0.37 ) }
    dend_6 { pt3dadd( -72.9741, -101.281, 54.0179, 0.37 ) }
    dend_6 { pt3dadd( -73.9639, -102.167, 53.8561, 0.37 ) }
    dend_6 { pt3dadd( -74.7604, -102.871, 53.7507, 0.59 ) }
    dend_6 { pt3dadd( -75.4749, -103.493, 53.704, 0.59 ) }
    dend_6 { pt3dadd( -77.3352, -105.018, 53.8168, 0.29 ) }
    dend_6 { pt3dadd( -78.121, -105.629, 53.9268, 0.29 ) }
    dend_6 { pt3dadd( -78.8169, -106.172, 54.0338, 0.59 ) }
    dend_6 { pt3dadd( -79.8517, -107.022, 54.1722, 0.59 ) }
    dend_6 { pt3dadd( -80.5441, -107.613, 54.2625, 0.37 ) }
    dend_6 { pt3dadd( -81.5358, -108.485, 54.4391, 0.37 ) }
    dend_6 { pt3dadd( -82.1501, -109.025, 54.6179, 0.81 ) }
    dend_6 { pt3dadd( -82.6384, -109.419, 54.7638, 0.81 ) }
    dend_6 { pt3dadd( -83.313, -109.908, 54.9453, 0.81 ) }
    dend_6 { pt3dadd( -84.3141, -110.633, 55.0788, 0.37 ) }
    dend_6 { pt3dadd( -85.0847, -111.225, 55.1093, 0.37 ) }
    dend_6 { pt3dadd( -86.0592, -111.986, 55.1111, 0.66 ) }
    dend_6 { pt3dadd( -86.5922, -112.377, 55.1188, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_6 { pt3dadd( -87.6309, -113.062, 55.1589, 0.96 ) }
    dend_6 { pt3dadd( -89.2917, -113.982, 55.2136, 0.29 ) }
    dend_6 { pt3dadd( -90.1058, -114.344, 55.1738, 0.29 ) }
    dend_6 { pt3dadd( -91.2199, -114.822, 55.0471, 0.44 ) }
    dend_6 { pt3dadd( -91.694, -115.046, 54.9873, 0.81 ) }
    dend_6 { pt3dadd( -92.4469, -115.446, 54.854, 0.81 ) }
    dend_6 { pt3dadd( -93.1868, -115.862, 54.6893, 0.81 ) }
    dend_6 { pt3dadd( -95.1605, -116.938, 54.2626, 0.52 ) }
    dend_6 { pt3dadd( -96.1359, -117.479, 54.0316, 0.59 ) }
    dend_6 { pt3dadd( -97.3275, -118.197, 53.7166, 0.59 ) }
    dend_6 { pt3dadd( -99.2486, -119.427, 53.2647, 0.29 ) }
    dend_6 { pt3dadd( -100.468, -120.253, 53.0153, 0.96 ) }
    dend_6 { pt3dadd( -101.18, -120.744, 52.9079, 1.25 ) }
    dend_6 { pt3dadd( -101.614, -121.029, 52.8771, 1.25 ) }
    dend_6 { pt3dadd( -103.171, -121.91, 52.8951, 0.37 ) }
    dend_6 { pt3dadd( -104.221, -122.447, 52.9908, 0.37 ) }
    dend_6 { pt3dadd( -105.071, -122.864, 53.1769, 1.03 ) }
    dend_6 { pt3dadd( -105.848, -123.23, 53.3991, 1.25 ) }
    dend_6 { pt3dadd( -106.641, -123.573, 53.6563, 1.25 ) }
    dend_6 { pt3dadd( -108.097, -124.116, 54.286, 0.29 ) }
    dend_6 { pt3dadd( -108.811, -124.325, 54.6962, 0.44 ) }
    dend_6 { pt3dadd( -109.525, -124.499, 55.1617, 0.59 ) }
    dend_6 { pt3dadd( -110.439, -124.686, 55.7495, 0.59 ) }
    dend_6 { pt3dadd( -111.563, -124.882, 56.4368, 0.29 ) }
    dend_6 { pt3dadd( -113.018, -125.105, 57.2203, 0.29 ) }
    dend_6 { pt3dadd( -114.487, -125.338, 57.8781, 0.29 ) }
    dend_6 { pt3dadd( -115.459, -125.513, 58.2623, 0.29 ) }
    dend_6 { pt3dadd( -117.071, -125.864, 58.8071, 0.81 ) }
    dend_6 { pt3dadd( -117.607, -125.999, 58.9665, 0.81 ) }
    dend_6 { pt3dadd( -119.312, -126.493, 59.4214, 0.52 ) }
    dend_6 { pt3dadd( -120.925, -127.065, 59.8848, 0.52 ) }
    dend_6 { pt3dadd( -122.264, -127.645, 60.3727, 0.44 ) }
    dend_6 { pt3dadd( -123.13, -128.105, 60.8255, 0.81 ) }
    dend_6 { pt3dadd( -124.085, -128.737, 61.5788, 0.81 ) }
    dend_6 { pt3dadd( -124.611, -129.205, 62.2404, 0.81 ) }
    dend_6 { pt3dadd( -125.393, -130.127, 63.728, 0.37 ) }
    dend_6 { pt3dadd( -125.655, -130.54, 64.4575, 0.37 ) }
    dend_6 { pt3dadd( -125.957, -131.119, 65.511, 0.81 ) }
    dend_6 { pt3dadd( -126.276, -131.76, 66.7189, 0.81 ) }
    dend_6 { pt3dadd( -126.889, -132.929, 69.0624, 0.44 ) }
    dend_6 { pt3dadd( -127.194, -133.366, 70.1248, 0.37 ) }
    dend_6 { pt3dadd( -127.556, -133.769, 71.2165, 0.29 ) }
    dend_6 { pt3dadd( -127.863, -134.066, 72.0192, 0.29 ) }
    dend_6 { pt3dadd( -128.197, -134.386, 72.7823, 0.74 ) }
    dend_6 { pt3dadd( -128.762, -135.041, 74.0905, 0.29 ) }
    dend_6 { pt3dadd( -129.545, -136.047, 75.8065, 0.29 ) }
    dend_6 { pt3dadd( -129.974, -136.639, 76.7413, 0.66 ) }
    dend_6 { pt3dadd( -130.419, -137.24, 77.6175, 0.81 ) }
    dend_6 { pt3dadd( -130.879, -137.928, 78.4931, 0.81 ) }
    dend_6 { pt3dadd( -131.804, -139.366, 80.0965, 0.44 ) }
    dend_6 { pt3dadd( -132.253, -140.055, 80.7532, 0.29 ) }
    dend_6 { pt3dadd( -132.953, -141.114, 81.6717, 0.29 ) }
    dend_6 { pt3dadd( -133.471, -141.82, 82.3228, 0.29 ) }
    dend_6 { pt3dadd( -134.054, -142.55, 83.0248, 0.29 ) }
    dend_6 { pt3dadd( -134.522, -143.05, 83.5091, 0.96 ) }
    dend_6 { pt3dadd( -135.12, -143.569, 83.9196, 1.25 ) }
    // Section: dend_48, id: dend_48, parent: dend_30 (entry count 56/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -46.4559, 97.2117, -133.616, 0.37 ) }
    dend_48 { pt3dadd( -47.2443, 97.0533, -133.598, 0.37 ) }
    dend_48 { pt3dadd( -47.8873, 96.9821, -133.557, 0.37 ) }
    dend_48 { pt3dadd( -48.8972, 96.9851, -133.474, 0.37 ) }
    dend_48 { pt3dadd( -49.4234, 97.0403, -133.427, 0.22 ) }
    dend_48 { pt3dadd( -49.9, 97.1291, -133.386, 0.22 ) }
    dend_48 { pt3dadd( -50.6413, 97.3048, -133.328, 0.37 ) }
    dend_48 { pt3dadd( -51.0205, 97.4597, -133.298, 0.37 ) }
    dend_48 { pt3dadd( -51.5296, 97.7285, -133.262, 0.22 ) }
    dend_48 { pt3dadd( -51.9632, 97.9932, -133.269, 0.22 ) }
    dend_48 { pt3dadd( -52.3314, 98.2096, -133.312, 0.81 ) }
    dend_48 { pt3dadd( -52.5383, 98.3132, -133.352, 0.88 ) }
    dend_48 { pt3dadd( -52.8557, 98.4331, -133.438, 0.66 ) }
    dend_48 { pt3dadd( -53.4645, 98.6327, -133.611, 0.29 ) }
    dend_48 { pt3dadd( -54.274, 98.8891, -133.845, 0.29 ) }
    dend_48 { pt3dadd( -54.8241, 99.0759, -134.009, 0.29 ) }
    dend_48 { pt3dadd( -55.5653, 99.3431, -134.239, 0.29 ) }
    dend_48 { pt3dadd( -56.5116, 99.6945, -134.534, 0.29 ) }
    dend_48 { pt3dadd( -56.9558, 99.8614, -134.673, 0.66 ) }
    dend_48 { pt3dadd( -57.3053, 99.9917, -134.779, 0.88 ) }
    dend_48 { pt3dadd( -57.4794, 100.052, -134.833, 0.88 ) }
    dend_48 { pt3dadd( -57.9709, 100.223, -134.997, 0.29 ) }
    dend_48 { pt3dadd( -58.4249, 100.365, -135.155, 0.29 ) }
    dend_48 { pt3dadd( -58.983, 100.521, -135.354, 1.33 ) }
    dend_48 { pt3dadd( -59.1932, 100.569, -135.432, 1.77 ) }
    dend_48 { pt3dadd( -60.0659, 100.777, -135.77, 0.29 ) }
    dend_48 { pt3dadd( -60.6667, 100.925, -136.011, 0.29 ) }
    dend_48 { pt3dadd( -61.427, 101.12, -136.318, 0.29 ) }
    dend_48 { pt3dadd( -61.7934, 101.227, -136.463, 0.29 ) }
    dend_48 { pt3dadd( -62.1651, 101.364, -136.582, 0.74 ) }
    dend_48 { pt3dadd( -62.7607, 101.619, -136.708, 0.29 ) }
    dend_48 { pt3dadd( -63.3997, 101.941, -136.731, 0.29 ) }
    dend_48 { pt3dadd( -63.9601, 102.255, -136.679, 0.81 ) }
    dend_48 { pt3dadd( -64.2574, 102.427, -136.624, 0.81 ) }
    dend_48 { pt3dadd( -65.183, 102.984, -136.365, 0.22 ) }
    dend_48 { pt3dadd( -65.7929, 103.347, -136.16, 0.22 ) }
    dend_48 { pt3dadd( -66.4606, 103.713, -135.927, 0.88 ) }
    dend_48 { pt3dadd( -66.8365, 103.907, -135.81, 1.18 ) }
    dend_48 { pt3dadd( -67.6821, 104.293, -135.625, 0.29 ) }
    dend_48 { pt3dadd( -68.2182, 104.483, -135.564, 0.29 ) }
    dend_48 { pt3dadd( -69.0496, 104.695, -135.546, 0.29 ) }
    dend_48 { pt3dadd( -69.7608, 104.854, -135.573, 0.29 ) }
    dend_48 { pt3dadd( -70.4371, 105.004, -135.635, 0.81 ) }
    dend_48 { pt3dadd( -71.2988, 105.234, -135.737, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_48 { pt3dadd( -71.9845, 105.466, -135.842, 0.22 ) }
    dend_48 { pt3dadd( -72.4049, 105.641, -135.927, 0.29 ) }
    dend_48 { pt3dadd( -72.9853, 105.979, -136.068, 0.29 ) }
    dend_48 { pt3dadd( -73.4459, 106.333, -136.157, 0.29 ) }
    dend_48 { pt3dadd( -73.9344, 106.787, -136.206, 0.52 ) }
    dend_48 { pt3dadd( -74.245, 107.123, -136.213, 0.59 ) }
    dend_48 { pt3dadd( -74.646, 107.616, -136.196, 0.29 ) }
    dend_48 { pt3dadd( -74.8537, 107.893, -136.178, 0.29 ) }
    dend_48 { pt3dadd( -75.4417, 108.668, -136.072, 0.29 ) }
    dend_48 { pt3dadd( -75.7955, 109.092, -135.994, 0.29 ) }
    dend_48 { pt3dadd( -76.2194, 109.537, -135.885, 0.59 ) }
    dend_48 { pt3dadd( -76.6252, 109.93, -135.801, 0.74 ) }
    dend_48 { pt3dadd( -77.1863, 110.465, -135.759, 0.44 ) }
    dend_48 { pt3dadd( -77.6247, 110.882, -135.793, 1.55 ) }
    dend_48 { pt3dadd( -77.9129, 111.138, -135.875, 1.99 ) }
    dend_48 { pt3dadd( -78.7257, 111.737, -136.18, 0.29 ) }
    dend_48 { pt3dadd( -79.3035, 112.056, -136.425, 0.29 ) }
    dend_48 { pt3dadd( -80.1308, 112.4, -136.822, 0.29 ) }
    dend_48 { pt3dadd( -80.4445, 112.499, -136.984, 0.29 ) }
    dend_48 { pt3dadd( -81.1033, 112.661, -137.349, 0.44 ) }
    dend_48 { pt3dadd( -81.5259, 112.74, -137.586, 0.44 ) }
    dend_48 { pt3dadd( -82.0344, 112.803, -137.859, 0.29 ) }
    dend_48 { pt3dadd( -82.7292, 112.871, -138.161, 0.29 ) }
    dend_48 { pt3dadd( -83.1918, 112.92, -138.341, 0.29 ) }
    dend_48 { pt3dadd( -83.6511, 112.987, -138.533, 0.37 ) }
    dend_48 { pt3dadd( -84.0502, 113.073, -138.708, 0.59 ) }
    dend_48 { pt3dadd( -84.503, 113.193, -138.911, 0.59 ) }
    dend_48 { pt3dadd( -85.0438, 113.354, -139.141, 0.44 ) }
    dend_48 { pt3dadd( -85.4923, 113.538, -139.287, 0.29 ) }
    dend_48 { pt3dadd( -85.6603, 113.635, -139.334, 0.88 ) }
    dend_48 { pt3dadd( -86.0191, 113.881, -139.42, 0.88 ) }
    dend_48 { pt3dadd( -86.2388, 114.031, -139.465, 0.88 ) }
    dend_48 { pt3dadd( -86.7449, 114.34, -139.55, 0.29 ) }
    dend_48 { pt3dadd( -87.3644, 114.681, -139.647, 0.29 ) }
    dend_48 { pt3dadd( -87.838, 114.956, -139.724, 0.29 ) }
    dend_48 { pt3dadd( -88.2485, 115.242, -139.806, 0.29 ) }
    dend_48 { pt3dadd( -88.5949, 115.528, -139.887, 0.52 ) }
    dend_48 { pt3dadd( -89.0181, 115.931, -140.004, 0.52 ) }
    dend_48 { pt3dadd( -89.5732, 116.496, -140.186, 0.29 ) }
    dend_48 { pt3dadd( -89.9781, 116.92, -140.342, 0.29 ) }
    dend_48 { pt3dadd( -90.3732, 117.368, -140.505, 0.74 ) }
    dend_48 { pt3dadd( -90.6039, 117.662, -140.626, 1.03 ) }
    dend_48 { pt3dadd( -90.8715, 118.059, -140.813, 0.37 ) }
    dend_48 { pt3dadd( -91.1244, 118.45, -141.029, 0.37 ) }
    dend_48 { pt3dadd( -91.3494, 118.755, -141.228, 0.96 ) }
    dend_48 { pt3dadd( -91.5353, 118.962, -141.38, 1.18 ) }
    dend_48 { pt3dadd( -92.0261, 119.488, -141.77, 0.29 ) }
    dend_48 { pt3dadd( -92.3083, 119.821, -141.997, 0.29 ) }
    dend_48 { pt3dadd( -92.6022, 120.182, -142.236, 0.29 ) }
    dend_48 { pt3dadd( -92.9031, 120.534, -142.458, 0.37 ) }
    dend_48 { pt3dadd( -93.2714, 120.93, -142.695, 0.37 ) }
    dend_48 { pt3dadd( -93.7206, 121.408, -142.954, 0.37 ) }
    dend_48 { pt3dadd( -94.0958, 121.78, -143.142, 0.37 ) }
    dend_48 { pt3dadd( -94.495, 122.169, -143.342, 0.37 ) }
    dend_48 { pt3dadd( -95.0038, 122.719, -143.619, 0.37 ) }
    dend_48 { pt3dadd( -95.3933, 123.174, -143.847, 0.37 ) }
    dend_48 { pt3dadd( -95.7319, 123.582, -144.05, 0.37 ) }
    dend_48 { pt3dadd( -96.1591, 124.072, -144.27, 0.37 ) }
    dend_48 { pt3dadd( -96.6054, 124.558, -144.458, 0.37 ) }
    dend_48 { pt3dadd( -97.1566, 125.117, -144.636, 1.4 ) }
    dend_48 { pt3dadd( -97.2653, 125.22, -144.665, 2.06 ) }
    dend_48 { pt3dadd( -97.543, 125.457, -144.721, 2.28 ) }
    dend_48 { pt3dadd( -98.2459, 125.983, -144.839, 0.29 ) }
    dend_48 { pt3dadd( -98.7448, 126.308, -144.89, 0.29 ) }
    dend_48 { pt3dadd( -99.5609, 126.736, -144.92, 0.29 ) }
    dend_48 { pt3dadd( -100.122, 126.984, -144.914, 0.29 ) }
    dend_48 { pt3dadd( -100.771, 127.236, -144.889, 0.29 ) }
    dend_48 { pt3dadd( -101.447, 127.463, -144.852, 0.29 ) }
    dend_48 { pt3dadd( -102.112, 127.662, -144.811, 0.29 ) }
    dend_48 { pt3dadd( -102.578, 127.801, -144.772, 0.29 ) }
    dend_48 { pt3dadd( -103.041, 127.943, -144.726, 0.44 ) }
    dend_48 { pt3dadd( -103.706, 128.153, -144.686, 0.44 ) }
    dend_48 { pt3dadd( -104.224, 128.365, -144.688, 0.29 ) }
    dend_48 { pt3dadd( -104.552, 128.564, -144.722, 0.29 ) }
    dend_48 { pt3dadd( -104.843, 128.809, -144.786, 0.74 ) }
    dend_48 { pt3dadd( -105.119, 129.068, -144.864, 0.74 ) }
    dend_48 { pt3dadd( -105.704, 129.682, -145.06, 0.29 ) }
    dend_48 { pt3dadd( -106.181, 130.269, -145.243, 0.29 ) }
    dend_48 { pt3dadd( -106.668, 130.931, -145.448, 0.29 ) }
    dend_48 { pt3dadd( -107.03, 131.44, -145.605, 1.18 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 80/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -46.4559, 97.2117, -133.616, 0.44 ) }
    dend_31 { pt3dadd( -47.4142, 97.6437, -134.369, 0.44 ) }
    dend_31 { pt3dadd( -47.9957, 97.8876, -134.771, 0.44 ) }
    dend_31 { pt3dadd( -48.7796, 98.2557, -135.276, 0.44 ) }
    dend_31 { pt3dadd( -49.3078, 98.5476, -135.603, 0.44 ) }
    dend_31 { pt3dadd( -49.906, 98.9489, -135.96, 0.44 ) }
    dend_31 { pt3dadd( -50.4051, 99.327, -136.241, 0.44 ) }
    dend_31 { pt3dadd( -50.7853, 99.663, -136.405, 0.44 ) }
    dend_31 { pt3dadd( -51.1556, 100.093, -136.558, 0.66 ) }
    dend_31 { pt3dadd( -51.4559, 100.54, -136.688, 0.66 ) }
    dend_31 { pt3dadd( -51.8326, 101.208, -136.875, 0.29 ) }
    dend_31 { pt3dadd( -52.2036, 101.991, -137.089, 0.29 ) }
    dend_31 { pt3dadd( -52.5358, 102.816, -137.308, 1.11 ) }
    dend_31 { pt3dadd( -52.6273, 103.07, -137.374, 1.11 ) }
    dend_31 { pt3dadd( -52.9053, 103.777, -137.569, 0.29 ) }
    dend_31 { pt3dadd( -53.068, 104.219, -137.688, 0.29 ) }
    dend_31 { pt3dadd( -53.1603, 104.538, -137.763, 1.03 ) }
    dend_31 { pt3dadd( -53.2184, 104.822, -137.817, 1.03 ) }
    dend_31 { pt3dadd( -53.303, 105.25, -137.891, 1.03 ) }
    dend_31 { pt3dadd( -53.5396, 106.498, -138.083, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_31 { pt3dadd( -53.6757, 107.234, -138.173, 0.29 ) }
    dend_31 { pt3dadd( -53.8099, 107.896, -138.25, 0.29 ) }
    dend_31 { pt3dadd( -53.9552, 108.429, -138.315, 0.29 ) }
    dend_31 { pt3dadd( -54.2543, 109.351, -138.43, 1.33 ) }
    dend_31 { pt3dadd( -54.3659, 109.661, -138.473, 1.69 ) }
    dend_31 { pt3dadd( -54.8418, 110.781, -138.66, 0.37 ) }
    dend_31 { pt3dadd( -55.1463, 111.36, -138.785, 0.37 ) }
    dend_31 { pt3dadd( -55.7201, 112.283, -139.026, 0.37 ) }
    dend_31 { pt3dadd( -56.2014, 113.001, -139.234, 0.37 ) }
    dend_31 { pt3dadd( -56.6845, 113.719, -139.45, 0.37 ) }
    dend_31 { pt3dadd( -57.0445, 114.3, -139.63, 0.37 ) }
    dend_31 { pt3dadd( -57.2029, 114.599, -139.726, 0.81 ) }
    dend_31 { pt3dadd( -57.3896, 115.102, -139.904, 0.81 ) }
    dend_31 { pt3dadd( -57.5034, 115.723, -140.161, 0.52 ) }
    dend_31 { pt3dadd( -57.5708, 116.255, -140.402, 0.52 ) }
    dend_31 { pt3dadd( -57.6839, 116.984, -140.766, 1.03 ) }
    dend_31 { pt3dadd( -57.7387, 117.333, -140.951, 1.03 ) }
    dend_31 { pt3dadd( -57.8634, 117.946, -141.299, 0.88 ) }
    dend_31 { pt3dadd( -58.0915, 118.785, -141.806, 0.37 ) }
    dend_31 { pt3dadd( -58.409, 119.677, -142.37, 0.37 ) }
    dend_31 { pt3dadd( -58.8015, 120.614, -142.907, 0.37 ) }
    dend_31 { pt3dadd( -59.0142, 121.097, -143.148, 0.37 ) }
    dend_31 { pt3dadd( -59.3902, 121.926, -143.504, 0.37 ) }
    dend_31 { pt3dadd( -59.6566, 122.496, -143.707, 1.18 ) }
    dend_31 { pt3dadd( -59.8633, 122.934, -143.838, 1.69 ) }
    dend_31 { pt3dadd( -60.5895, 124.656, -144.275, 0.44 ) }
    dend_31 { pt3dadd( -60.9366, 125.683, -144.495, 0.44 ) }
    dend_31 { pt3dadd( -61.2185, 126.683, -144.689, 0.44 ) }
    dend_31 { pt3dadd( -61.313, 127.102, -144.768, 0.96 ) }
    dend_31 { pt3dadd( -61.3969, 127.536, -144.852, 1.33 ) }
    dend_31 { pt3dadd( -61.5986, 128.595, -145.072, 0.37 ) }
    dend_31 { pt3dadd( -61.7546, 129.574, -145.288, 0.37 ) }
    dend_31 { pt3dadd( -61.839, 130.222, -145.425, 0.37 ) }
    dend_31 { pt3dadd( -61.905, 131.011, -145.58, 0.37 ) }
    dend_31 { pt3dadd( -61.9847, 131.988, -145.78, 0.37 ) }
    dend_31 { pt3dadd( -62.0715, 132.847, -145.992, 0.37 ) }
    dend_31 { pt3dadd( -62.1664, 133.478, -146.152, 0.59 ) }
    dend_31 { pt3dadd( -62.2803, 134.1, -146.299, 0.59 ) }
    dend_31 { pt3dadd( -62.4045, 134.925, -146.532, 0.29 ) }
    dend_31 { pt3dadd( -62.4464, 135.297, -146.65, 0.29 ) }
    dend_31 { pt3dadd( -62.6149, 136.567, -147.112, 1.33 ) }
    dend_31 { pt3dadd( -62.6994, 137.049, -147.3, 2.14 ) }
    dend_31 { pt3dadd( -62.7881, 137.434, -147.465, 2.28 ) }
    dend_31 { pt3dadd( -63.1383, 138.607, -148.045, 1.11 ) }
    dend_31 { pt3dadd( -63.433, 139.372, -148.496, 0.29 ) }
    dend_31 { pt3dadd( -63.8006, 140.262, -149.045, 0.29 ) }
    dend_31 { pt3dadd( -64.0531, 140.85, -149.417, 0.29 ) }
    dend_31 { pt3dadd( -64.273, 141.407, -149.774, 0.44 ) }
    dend_31 { pt3dadd( -64.469, 142.0, -150.15, 0.44 ) }
    dend_31 { pt3dadd( -64.6813, 142.772, -150.599, 0.44 ) }
    dend_31 { pt3dadd( -64.8253, 143.558, -151.034, 0.66 ) }
    dend_31 { pt3dadd( -64.8646, 144.003, -151.249, 0.66 ) }
    dend_31 { pt3dadd( -64.8892, 144.681, -151.529, 0.29 ) }
    dend_31 { pt3dadd( -64.9008, 145.494, -151.747, 0.29 ) }
    dend_31 { pt3dadd( -64.9082, 146.166, -151.846, 0.29 ) }
    dend_31 { pt3dadd( -64.9097, 146.813, -151.911, 0.29 ) }
    dend_31 { pt3dadd( -64.9488, 147.746, -151.997, 0.44 ) }
    dend_31 { pt3dadd( -65.0075, 148.39, -152.043, 0.44 ) }
    dend_31 { pt3dadd( -65.1652, 149.425, -152.059, 1.03 ) }
    dend_31 { pt3dadd( -65.2652, 149.958, -152.0, 1.03 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 60/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 6.61757, -60.0317, 12.7777, 0.59 ) }
    dend_11 { pt3dadd( 6.62944, -61.6355, 12.5298, 0.59 ) }
    dend_11 { pt3dadd( 6.53782, -62.7278, 12.3818, 0.59 ) }
    dend_11 { pt3dadd( 6.37716, -64.0687, 12.2266, 0.59 ) }
    dend_11 { pt3dadd( 6.2611, -65.0548, 12.1214, 0.59 ) }
    dend_11 { pt3dadd( 6.09001, -66.5399, 12.0183, 0.88 ) }
    dend_11 { pt3dadd( 5.90121, -67.9218, 11.9723, 0.88 ) }
    dend_11 { pt3dadd( 5.70205, -68.9363, 11.9976, 0.66 ) }
    dend_11 { pt3dadd( 5.38392, -70.088, 12.1413, 0.81 ) }
    dend_11 { pt3dadd( 4.9836, -71.2826, 12.4078, 0.74 ) }
    dend_11 { pt3dadd( 4.6617, -72.231, 12.6967, 0.96 ) }
    dend_11 { pt3dadd( 4.39345, -73.1714, 13.042, 0.74 ) }
    dend_11 { pt3dadd( 4.14599, -74.1972, 13.4482, 0.59 ) }
    dend_11 { pt3dadd( 3.90762, -75.3332, 13.8935, 0.52 ) }
    dend_11 { pt3dadd( 3.8383, -75.718, 14.0379, 1.03 ) }
    dend_11 { pt3dadd( 3.70346, -76.7827, 14.349, 0.52 ) }
    dend_11 { pt3dadd( 3.65151, -78.0215, 14.5421, 0.81 ) }
    dend_11 { pt3dadd( 3.68429, -78.7855, 14.5726, 1.03 ) }
    dend_11 { pt3dadd( 3.73307, -79.5212, 14.5364, 1.03 ) }
    dend_11 { pt3dadd( 3.77802, -80.4933, 14.4408, 0.88 ) }
    dend_11 { pt3dadd( 3.78701, -81.5507, 14.3269, 0.74 ) }
    dend_11 { pt3dadd( 3.76739, -82.2373, 14.2529, 0.74 ) }
    dend_11 { pt3dadd( 3.72326, -83.0736, 14.1673, 0.44 ) }
    dend_11 { pt3dadd( 3.65477, -84.4505, 13.9939, 0.44 ) }
    dend_11 { pt3dadd( 3.60892, -85.2974, 13.8838, 0.66 ) }
    dend_11 { pt3dadd( 3.58118, -85.9252, 13.811, 0.66 ) }
    dend_11 { pt3dadd( 3.54495, -86.7577, 13.715, 0.52 ) }
    dend_11 { pt3dadd( 3.4805, -87.7805, 13.5906, 0.81 ) }
    dend_11 { pt3dadd( 3.40385, -88.6912, 13.4477, 1.03 ) }
    dend_11 { pt3dadd( 3.34223, -89.308, 13.3263, 1.03 ) }
    dend_11 { pt3dadd( 3.22545, -90.1583, 13.1541, 0.66 ) }
    dend_11 { pt3dadd( 3.02046, -91.1531, 12.944, 0.52 ) }
    dend_11 { pt3dadd( 2.81084, -91.9576, 12.773, 0.52 ) }
    dend_11 { pt3dadd( 2.60627, -92.6354, 12.653, 0.52 ) }
    dend_11 { pt3dadd( 2.35688, -93.4567, 12.5402, 0.74 ) }
    dend_11 { pt3dadd( 2.16535, -94.087, 12.4698, 0.74 ) }
    dend_11 { pt3dadd( 1.70153, -95.6244, 12.3642, 0.59 ) }
    dend_11 { pt3dadd( 1.46374, -96.5574, 12.3601, 0.59 ) }
    dend_11 { pt3dadd( 1.2947, -97.4511, 12.3734, 0.96 ) }
    dend_11 { pt3dadd( 1.23321, -97.9338, 12.396, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_11 { pt3dadd( 1.15157, -98.8971, 12.4927, 0.59 ) }
    dend_11 { pt3dadd( 1.04927, -100.12, 12.6491, 0.44 ) }
    dend_11 { pt3dadd( 0.961178, -101.225, 12.835, 0.44 ) }
    dend_11 { pt3dadd( 0.878654, -102.17, 12.993, 0.44 ) }
    dend_11 { pt3dadd( 0.794663, -103.173, 13.1316, 0.44 ) }
    dend_11 { pt3dadd( 0.730223, -104.2, 13.2338, 0.44 ) }
    dend_11 { pt3dadd( 0.697066, -105.622, 13.3022, 0.59 ) }
    dend_11 { pt3dadd( 0.709495, -106.181, 13.3204, 0.81 ) }
    dend_11 { pt3dadd( 0.759486, -107.088, 13.3275, 0.44 ) }
    dend_11 { pt3dadd( 0.845708, -108.299, 13.3555, 0.44 ) }
    dend_11 { pt3dadd( 0.919355, -109.037, 13.3837, 0.81 ) }
    dend_11 { pt3dadd( 1.02527, -109.77, 13.4313, 0.81 ) }
    dend_11 { pt3dadd( 1.20486, -110.841, 13.487, 0.81 ) }
    dend_11 { pt3dadd( 1.33361, -111.624, 13.4843, 0.52 ) }
    dend_11 { pt3dadd( 1.48083, -112.591, 13.4284, 0.52 ) }
    dend_11 { pt3dadd( 1.54937, -113.357, 13.3466, 0.81 ) }
    dend_11 { pt3dadd( 1.52756, -114.266, 13.2355, 1.03 ) }
    dend_11 { pt3dadd( 1.34715, -115.568, 13.0807, 0.52 ) }
    dend_11 { pt3dadd( 1.14251, -116.502, 12.9671, 0.52 ) }
    dend_11 { pt3dadd( 0.904008, -117.373, 12.8944, 0.88 ) }
    dend_11 { pt3dadd( 0.583375, -118.439, 12.8419, 0.88 ) }
    dend_11 { pt3dadd( 0.172739, -119.69, 12.8401, 0.44 ) }
    dend_11 { pt3dadd( -0.272646, -120.965, 12.8979, 0.74 ) }
    dend_11 { pt3dadd( -0.451864, -121.562, 12.986, 0.74 ) }
    dend_11 { pt3dadd( -0.764265, -122.653, 13.1697, 0.37 ) }
    dend_11 { pt3dadd( -0.968807, -123.457, 13.3135, 0.66 ) }
    dend_11 { pt3dadd( -1.11164, -124.234, 13.4489, 0.96 ) }
    dend_11 { pt3dadd( -1.215, -125.162, 13.5743, 0.96 ) }
    dend_11 { pt3dadd( -1.35753, -127.223, 13.7674, 0.37 ) }
    dend_11 { pt3dadd( -1.3784, -128.494, 13.8979, 0.37 ) }
    dend_11 { pt3dadd( -1.35446, -129.049, 13.9698, 0.88 ) }
    dend_11 { pt3dadd( -1.32533, -129.534, 14.0346, 0.88 ) }
    dend_11 { pt3dadd( -1.30107, -130.422, 14.1264, 0.88 ) }
    dend_11 { pt3dadd( -1.32987, -131.339, 14.1877, 0.52 ) }
    dend_11 { pt3dadd( -1.41611, -132.616, 14.3312, 0.52 ) }
    dend_11 { pt3dadd( -1.47977, -133.938, 14.5837, 0.44 ) }
    dend_11 { pt3dadd( -1.52338, -135.028, 14.8284, 0.52 ) }
    dend_11 { pt3dadd( -1.5882, -136.56, 15.2091, 0.74 ) }
    dend_11 { pt3dadd( -1.64875, -137.755, 15.5298, 0.74 ) }
    dend_11 { pt3dadd( -1.81702, -139.721, 16.073, 0.59 ) }
    dend_11 { pt3dadd( -1.93549, -140.679, 16.3268, 0.59 ) }
    dend_11 { pt3dadd( -2.07592, -141.654, 16.6132, 0.44 ) }
    dend_11 { pt3dadd( -2.20522, -142.52, 16.8771, 0.44 ) }
    dend_11 { pt3dadd( -2.27769, -142.987, 17.0111, 0.81 ) }
    dend_11 { pt3dadd( -2.44048, -143.875, 17.1833, 0.81 ) }
    dend_11 { pt3dadd( -2.60554, -144.596, 17.2376, 0.74 ) }
    dend_11 { pt3dadd( -2.78368, -145.328, 17.3155, 0.59 ) }
    dend_11 { pt3dadd( -3.04636, -146.407, 17.4699, 0.29 ) }
    dend_11 { pt3dadd( -3.17209, -146.942, 17.5712, 0.52 ) }
    dend_11 { pt3dadd( -3.45969, -148.281, 17.8339, 0.52 ) }
    dend_11 { pt3dadd( -3.61075, -149.116, 18.0056, 0.52 ) }
    dend_11 { pt3dadd( -3.82332, -150.445, 18.3172, 0.74 ) }
    dend_11 { pt3dadd( -3.91778, -151.129, 18.5178, 1.11 ) }
    dend_11 { pt3dadd( -3.9957, -151.654, 18.7409, 1.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 54/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 6.61757, -60.0317, 12.7777, 0.52 ) }
    dend_8 { pt3dadd( 8.24433, -58.9602, 13.3711, 0.52 ) }
    dend_8 { pt3dadd( 9.12833, -58.3779, 13.6936, 0.52 ) }
    dend_8 { pt3dadd( 9.8674, -57.8911, 13.9632, 0.52 ) }
    dend_8 { pt3dadd( 10.5075, -57.4695, 14.1967, 0.52 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 59/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -65.2652, 149.958, -152.0, 0.22 ) }
    dend_37 { pt3dadd( -65.0143, 152.061, -153.389, 0.22 ) }
    dend_37 { pt3dadd( -64.9801, 152.682, -153.94, 0.22 ) }
    dend_37 { pt3dadd( -65.0084, 153.091, -154.404, 0.22 ) }
    dend_37 { pt3dadd( -65.0433, 153.558, -154.914, 0.22 ) }
    dend_37 { pt3dadd( -65.048, 154.726, -156.048, 0.22 ) }
    dend_37 { pt3dadd( -64.9529, 155.758, -156.955, 1.25 ) }
    dend_37 { pt3dadd( -64.9112, 156.17, -157.333, 1.55 ) }
    dend_37 { pt3dadd( -64.7169, 157.726, -158.628, 0.37 ) }
    dend_37 { pt3dadd( -64.6312, 158.343, -159.061, 0.37 ) }
    dend_37 { pt3dadd( -64.4566, 159.491, -159.734, 0.37 ) }
    dend_37 { pt3dadd( -64.2505, 160.612, -160.228, 0.37 ) }
    dend_37 { pt3dadd( -64.0344, 161.523, -160.574, 0.66 ) }
    dend_37 { pt3dadd( -63.8467, 162.2, -160.816, 1.33 ) }
    dend_37 { pt3dadd( -63.4339, 163.61, -161.26, 0.52 ) }
    dend_37 { pt3dadd( -63.0986, 164.844, -161.676, 0.52 ) }
    dend_37 { pt3dadd( -62.8816, 165.74, -161.991, 0.37 ) }
    dend_37 { pt3dadd( -62.6433, 166.662, -162.284, 0.37 ) }
    dend_37 { pt3dadd( -62.4034, 167.429, -162.498, 0.37 ) }
    dend_37 { pt3dadd( -61.8956, 168.898, -162.854, 2.65 ) }
    dend_37 { pt3dadd( -61.7958, 169.169, -162.91, 3.32 ) }
    dend_37 { pt3dadd( -61.6624, 169.554, -163.022, 3.32 ) }
    dend_37 { pt3dadd( -61.0474, 171.802, -163.838, 0.44 ) }
    dend_37 { pt3dadd( -60.7471, 173.143, -164.386, 0.44 ) }
    dend_37 { pt3dadd( -60.6079, 173.781, -164.671, 0.59 ) }
    dend_37 { pt3dadd( -60.4802, 174.334, -164.94, 0.59 ) }
    dend_37 { pt3dadd( -59.8532, 177.051, -166.37, 0.29 ) }
    dend_37 { pt3dadd( -59.6063, 178.147, -167.007, 0.29 ) }
    dend_37 { pt3dadd( -59.4037, 179.127, -167.645, 0.29 ) }
    dend_37 { pt3dadd( -59.2117, 180.18, -168.333, 0.29 ) }
    dend_37 { pt3dadd( -59.1199, 180.602, -168.584, 0.29 ) }
    dend_37 { pt3dadd( -58.8105, 181.818, -169.194, 1.11 ) }
    dend_37 { pt3dadd( -58.5953, 182.596, -169.482, 1.11 ) }
    dend_37 { pt3dadd( -58.434, 183.205, -169.714, 0.88 ) }
    dend_37 { pt3dadd( -58.2071, 184.572, -170.237, 0.52 ) }
    dend_37 { pt3dadd( -58.14, 186.014, -170.759, 0.29 ) }
    dend_37 { pt3dadd( -58.1674, 186.878, -171.057, 0.29 ) }
    dend_37 { pt3dadd( -58.2104, 187.394, -171.211, 0.66 ) }
    dend_37 { pt3dadd( -58.3518, 188.569, -171.527, 0.66 ) }
    dend_37 { pt3dadd( -58.5088, 189.491, -171.762, 0.29 ) }
    dend_37 { pt3dadd( -58.7122, 190.195, -171.939, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_37 { pt3dadd( -59.2876, 191.339, -172.283, 0.88 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 1/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -65.2652, 149.958, -152.0, 0.37 ) }
    dend_32 { pt3dadd( -65.2951, 151.282, -151.021, 0.37 ) }
    dend_32 { pt3dadd( -65.3787, 152.82, -149.878, 0.37 ) }
    dend_32 { pt3dadd( -65.4749, 153.874, -149.102, 0.37 ) }
    dend_32 { pt3dadd( -65.7413, 155.967, -147.575, 0.37 ) }
    dend_32 { pt3dadd( -65.9669, 157.497, -146.501, 0.52 ) }
    dend_32 { pt3dadd( -66.2055, 159.052, -145.477, 1.18 ) }
    dend_32 { pt3dadd( -66.3921, 160.08, -144.822, 1.18 ) }
    dend_32 { pt3dadd( -66.5083, 160.802, -144.439, 1.18 ) }
    dend_32 { pt3dadd( -66.5539, 161.264, -144.222, 1.03 ) }
    dend_32 { pt3dadd( -66.5587, 162.267, -143.821, 0.44 ) }
    dend_32 { pt3dadd( -66.4696, 163.589, -143.222, 0.88 ) }
    dend_32 { pt3dadd( -66.2462, 165.585, -142.283, 0.37 ) }
    dend_32 { pt3dadd( -66.0323, 167.414, -141.397, 0.29 ) }
    dend_32 { pt3dadd( -65.9155, 168.642, -140.778, 0.29 ) }
    dend_32 { pt3dadd( -65.8634, 169.567, -140.276, 0.66 ) }
    dend_32 { pt3dadd( -65.837, 171.943, -138.928, 0.37 ) }
    dend_32 { pt3dadd( -65.8853, 173.322, -138.136, 0.37 ) }
    dend_32 { pt3dadd( -65.9954, 174.807, -137.331, 0.29 ) }
    dend_32 { pt3dadd( -66.1743, 176.235, -136.634, 0.29 ) }
    dend_32 { pt3dadd( -66.43, 177.52, -136.135, 0.29 ) }
    dend_32 { pt3dadd( -66.8159, 179.187, -135.649, 0.88 ) }
    dend_32 { pt3dadd( -66.987, 180.041, -135.469, 0.88 ) }
    dend_32 { pt3dadd( -67.2585, 181.897, -135.141, 0.37 ) }
    dend_32 { pt3dadd( -67.4577, 183.799, -134.906, 0.37 ) }
    dend_32 { pt3dadd( -67.5902, 186.367, -134.693, 0.37 ) }
    dend_32 { pt3dadd( -67.6301, 188.441, -134.534, 0.37 ) }
    dend_32 { pt3dadd( -67.6537, 190.402, -134.361, 0.37 ) }
    dend_32 { pt3dadd( -67.6601, 191.848, -134.218, 0.37 ) }
    dend_32 { pt3dadd( -67.6735, 194.218, -133.963, 0.37 ) }
    dend_32 { pt3dadd( -67.6236, 196.926, -133.616, 0.37 ) }
    dend_32 { pt3dadd( -67.5444, 199.156, -133.296, 1.47 ) }
    dend_32 { pt3dadd( -67.5504, 200.037, -133.181, 1.69 ) }
    dend_32 { pt3dadd( -67.5945, 200.956, -133.036, 1.69 ) }
    dend_32 { pt3dadd( -67.7458, 203.27, -132.603, 0.44 ) }
    dend_32 { pt3dadd( -67.8842, 205.09, -132.22, 0.44 ) }
    dend_32 { pt3dadd( -68.0724, 206.798, -131.878, 0.44 ) }
    dend_32 { pt3dadd( -68.3834, 209.194, -131.443, 0.44 ) }
    dend_32 { pt3dadd( -68.7118, 211.474, -131.035, 0.37 ) }
    dend_32 { pt3dadd( -68.9649, 213.177, -130.708, 0.37 ) }
    dend_32 { pt3dadd( -69.1051, 214.022, -130.532, 0.37 ) }
    dend_32 { pt3dadd( -69.4041, 215.365, -130.253, 0.96 ) }
    dend_32 { pt3dadd( -69.7606, 216.686, -129.972, 1.25 ) }
    dend_32 { pt3dadd( -69.9005, 217.098, -129.897, 1.25 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 45/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -3.9957, -151.654, 18.7409, 0.44 ) }
    dend_15 { pt3dadd( -5.63416, -152.232, 19.4524, 0.44 ) }
    dend_15 { pt3dadd( -6.92725, -152.459, 19.9379, 0.29 ) }
    dend_15 { pt3dadd( -8.67553, -152.64, 20.5585, 0.22 ) }
    dend_15 { pt3dadd( -9.90662, -152.701, 20.9829, 0.59 ) }
    dend_15 { pt3dadd( -10.6254, -152.709, 21.2267, 0.59 ) }
    dend_15 { pt3dadd( -12.6882, -152.732, 21.9265, 0.29 ) }
    dend_15 { pt3dadd( -14.717, -152.527, 22.5881, 0.29 ) }
    dend_15 { pt3dadd( -15.1621, -152.446, 22.7189, 0.52 ) }
    dend_15 { pt3dadd( -15.9117, -152.278, 22.8923, 0.52 ) }
    dend_15 { pt3dadd( -16.5222, -152.116, 23.0288, 0.52 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 56/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -3.9957, -151.654, 18.7409, 0.37 ) }
    dend_12 { pt3dadd( -4.24588, -153.646, 18.6028, 0.37 ) }
    dend_12 { pt3dadd( -4.41403, -154.764, 18.5533, 0.81 ) }
    dend_12 { pt3dadd( -4.53355, -155.405, 18.5481, 0.88 ) }
    dend_12 { pt3dadd( -4.67633, -156.074, 18.5639, 0.66 ) }
    dend_12 { pt3dadd( -4.97289, -157.307, 18.6285, 0.37 ) }
    dend_12 { pt3dadd( -5.08918, -157.769, 18.6609, 0.37 ) }
    dend_12 { pt3dadd( -5.28715, -158.565, 18.7669, 0.37 ) }
    dend_12 { pt3dadd( -5.48085, -159.537, 18.8748, 0.37 ) }
    dend_12 { pt3dadd( -5.62205, -160.423, 18.9512, 0.74 ) }
    dend_12 { pt3dadd( -5.74789, -161.284, 18.9944, 1.11 ) }
    dend_12 { pt3dadd( -5.8618, -162.035, 19.0193, 0.81 ) }
    dend_12 { pt3dadd( -6.04805, -163.459, 19.0349, 0.37 ) }
    dend_12 { pt3dadd( -6.25238, -165.109, 19.0189, 0.37 ) }
    dend_12 { pt3dadd( -6.43371, -166.16, 19.0117, 0.37 ) }
    dend_12 { pt3dadd( -6.68156, -167.232, 19.0152, 0.37 ) }
    dend_12 { pt3dadd( -6.85948, -167.851, 19.0212, 0.96 ) }
    dend_12 { pt3dadd( -7.03954, -168.338, 19.0369, 0.96 ) }
    dend_12 { pt3dadd( -7.48346, -169.308, 19.103, 0.44 ) }
    dend_12 { pt3dadd( -8.08852, -170.536, 19.2095, 0.37 ) }
    dend_12 { pt3dadd( -8.37358, -171.227, 19.2321, 0.37 ) }
    dend_12 { pt3dadd( -8.53351, -171.766, 19.2231, 1.11 ) }
    dend_12 { pt3dadd( -8.71853, -172.57, 19.179, 0.88 ) }
    dend_12 { pt3dadd( -8.9396, -173.71, 19.1024, 0.66 ) }
    dend_12 { pt3dadd( -9.17389, -175.185, 18.995, 0.52 ) }
    dend_12 { pt3dadd( -9.35728, -176.489, 18.9014, 0.52 ) }
    dend_12 { pt3dadd( -9.54308, -177.652, 18.8416, 0.52 ) }
    dend_12 { pt3dadd( -9.81331, -179.045, 18.7963, 0.81 ) }
    dend_12 { pt3dadd( -9.97745, -179.73, 18.7887, 0.96 ) }
    dend_12 { pt3dadd( -10.2068, -180.523, 18.8045, 0.96 ) }
    dend_12 { pt3dadd( -10.4883, -181.369, 18.8474, 0.81 ) }
    dend_12 { pt3dadd( -10.8602, -182.397, 18.8962, 0.44 ) }
    dend_12 { pt3dadd( -11.2738, -183.541, 18.9016, 0.29 ) }
    dend_12 { pt3dadd( -11.4993, -184.221, 18.8627, 0.29 ) }
    dend_12 { pt3dadd( -11.7419, -184.929, 18.8054, 0.29 ) }
    dend_12 { pt3dadd( -12.0867, -185.817, 18.7305, 0.29 ) }
    dend_12 { pt3dadd( -12.5373, -186.841, 18.6115, 1.03 ) }
    dend_12 { pt3dadd( -12.6731, -187.119, 18.5693, 1.47 ) }
    dend_12 { pt3dadd( -13.3793, -188.566, 18.3035, 0.44 ) }
    dend_12 { pt3dadd( -13.8763, -189.592, 18.0868, 0.37 ) }
    dend_12 { pt3dadd( -14.3912, -190.634, 17.8657, 0.37 ) }
    dend_12 { pt3dadd( -14.9975, -191.85, 17.6035, 0.29 ) }
    dend_12 { pt3dadd( -15.5794, -193.023, 17.3439, 0.29 ) }
    dend_12 { pt3dadd( -15.9147, -193.72, 17.1773, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_12 { pt3dadd( -16.4523, -194.876, 16.875, 0.29 ) }
    dend_12 { pt3dadd( -17.0577, -196.319, 16.4588, 0.66 ) }
    dend_12 { pt3dadd( -17.3852, -197.197, 16.2061, 1.18 ) }
    dend_12 { pt3dadd( -17.6508, -197.971, 16.0177, 1.18 ) }
    dend_12 { pt3dadd( -17.8284, -198.503, 15.9005, 1.18 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 5/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 10.5075, -57.4695, 14.1967, 0.44 ) }
    dend_10 { pt3dadd( 10.8538, -57.6233, 14.9237, 0.44 ) }
    dend_10 { pt3dadd( 11.5015, -57.9562, 16.4132, 1.11 ) }
    dend_10 { pt3dadd( 12.5775, -58.5445, 18.759, 0.44 ) }
    dend_10 { pt3dadd( 14.6601, -59.6717, 22.9621, 0.88 ) }
    dend_10 { pt3dadd( 15.3759, -60.061, 24.3092, 1.25 ) }
    dend_10 { pt3dadd( 15.8693, -60.3293, 25.2376, 0.88 ) }
    dend_10 { pt3dadd( 16.3669, -60.5904, 26.1839, 0.74 ) }
    dend_10 { pt3dadd( 18.0968, -61.4728, 29.2816, 0.37 ) }
    dend_10 { pt3dadd( 18.5465, -61.7215, 29.9899, 0.66 ) }
    dend_10 { pt3dadd( 18.9261, -61.9927, 30.5112, 0.66 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 16/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 10.5075, -57.4695, 14.1967, 0.44 ) }
    dend_9 { pt3dadd( 10.8919, -57.5649, 14.7827, 0.44 ) }
    dend_9 { pt3dadd( 14.2209, -58.3913, 19.8586, 0.44 ) }
    dend_9 { pt3dadd( 14.6559, -58.4993, 20.5218, 0.37 ) }
    dend_9 { pt3dadd( 14.9286, -58.567, 20.9377, 0.37 ) }
    dend_9 { pt3dadd( 15.1313, -58.6173, 21.2467, 0.74 ) }
    dend_9 { pt3dadd( 15.2951, -58.6579, 21.4965, 0.74 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 23/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -59.2876, 191.339, -172.283, 0.59 ) }
    dend_43 { pt3dadd( -59.4771, 192.19, -172.495, 0.59 ) }
    dend_43 { pt3dadd( -59.8406, 193.03, -172.779, 0.37 ) }
    dend_43 { pt3dadd( -60.2426, 193.72, -173.057, 0.37 ) }
    dend_43 { pt3dadd( -60.6917, 194.432, -173.352, 0.37 ) }
    dend_43 { pt3dadd( -61.3217, 195.425, -173.753, 0.37 ) }
    dend_43 { pt3dadd( -61.8247, 196.222, -174.066, 0.37 ) }
    dend_43 { pt3dadd( -62.4395, 197.126, -174.394, 0.37 ) }
    dend_43 { pt3dadd( -62.9287, 197.801, -174.649, 0.37 ) }
    dend_43 { pt3dadd( -63.4751, 198.545, -174.921, 0.37 ) }
    dend_43 { pt3dadd( -63.8115, 199.065, -175.115, 0.37 ) }
    dend_43 { pt3dadd( -63.9855, 199.485, -175.253, 1.03 ) }
    dend_43 { pt3dadd( -64.0574, 199.768, -175.331, 1.33 ) }
    dend_43 { pt3dadd( -64.1807, 200.452, -175.495, 1.11 ) }
    dend_43 { pt3dadd( -64.3393, 201.41, -175.723, 0.37 ) }
    dend_43 { pt3dadd( -64.5104, 202.463, -175.972, 0.37 ) }
    dend_43 { pt3dadd( -64.7132, 203.812, -176.295, 0.29 ) }
    dend_43 { pt3dadd( -64.8595, 204.871, -176.548, 0.29 ) }
    dend_43 { pt3dadd( -64.9733, 205.763, -176.759, 0.52 ) }
    dend_43 { pt3dadd( -65.0744, 206.653, -176.963, 1.55 ) }
    dend_43 { pt3dadd( -65.1121, 207.037, -177.042, 1.92 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 44/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -59.2876, 191.339, -172.283, 0.52 ) }
    dend_38 { pt3dadd( -58.8467, 192.146, -173.278, 0.52 ) }
    dend_38 { pt3dadd( -58.3135, 192.864, -174.28, 0.52 ) }
    dend_38 { pt3dadd( -57.7711, 193.514, -175.163, 0.52 ) }
    dend_38 { pt3dadd( -57.2682, 194.103, -175.904, 1.25 ) }
    dend_38 { pt3dadd( -55.7586, 195.905, -178.014, 2.28 ) }
    dend_38 { pt3dadd( -55.4265, 196.322, -178.486, 2.28 ) }
    dend_38 { pt3dadd( -54.2411, 197.766, -180.213, 0.29 ) }
    dend_38 { pt3dadd( -53.7166, 198.379, -180.984, 0.44 ) }
    dend_38 { pt3dadd( -53.2584, 198.911, -181.623, 0.44 ) }
    dend_38 { pt3dadd( -52.8102, 199.467, -182.212, 0.44 ) }
    dend_38 { pt3dadd( -52.431, 199.997, -182.632, 0.44 ) }
    dend_38 { pt3dadd( -51.7364, 201.123, -183.538, 0.29 ) }
    dend_38 { pt3dadd( -51.4631, 201.747, -184.019, 1.03 ) }
    dend_38 { pt3dadd( -51.2565, 202.332, -184.46, 1.55 ) }
    dend_38 { pt3dadd( -50.9374, 203.248, -185.13, 0.88 ) }
    dend_38 { pt3dadd( -50.5253, 204.305, -185.852, 0.52 ) }
    dend_38 { pt3dadd( -50.1327, 205.242, -186.429, 0.52 ) }
    dend_38 { pt3dadd( -49.8538, 206.028, -186.839, 0.52 ) }
    dend_38 { pt3dadd( -49.4663, 207.227, -187.412, 0.52 ) }
    dend_38 { pt3dadd( -49.1936, 208.033, -187.742, 0.52 ) }
    dend_38 { pt3dadd( -48.9237, 208.821, -188.029, 0.52 ) }
    dend_38 { pt3dadd( -48.6336, 209.582, -188.277, 0.52 ) }
    dend_38 { pt3dadd( -48.0394, 210.923, -188.65, 0.52 ) }
    dend_38 { pt3dadd( -47.3812, 212.282, -189.011, 0.52 ) }
    dend_38 { pt3dadd( -46.7871, 213.571, -189.33, 2.21 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 70/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -69.9005, 217.098, -129.897, 0.29 ) }
    dend_36 { pt3dadd( -71.105, 219.024, -130.108, 0.29 ) }
    dend_36 { pt3dadd( -71.6908, 219.961, -130.211, 0.29 ) }
    dend_36 { pt3dadd( -72.1193, 220.646, -130.286, 0.29 ) }
    dend_36 { pt3dadd( -72.4414, 221.161, -130.343, 0.74 ) }
    dend_36 { pt3dadd( -72.7058, 221.584, -130.389, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 76/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -69.9005, 217.098, -129.897, 0.29 ) }
    dend_33 { pt3dadd( -70.3204, 218.246, -129.618, 0.29 ) }
    dend_33 { pt3dadd( -70.534, 218.874, -129.474, 0.29 ) }
    dend_33 { pt3dadd( -70.9103, 220.519, -129.059, 0.29 ) }
    dend_33 { pt3dadd( -70.9974, 221.129, -128.895, 0.74 ) }
    dend_33 { pt3dadd( -71.0936, 221.772, -128.744, 0.74 ) }
    dend_33 { pt3dadd( -71.3375, 223.237, -128.45, 0.37 ) }
    dend_33 { pt3dadd( -71.4895, 224.273, -128.277, 0.29 ) }
    dend_33 { pt3dadd( -71.6511, 225.907, -128.018, 0.37 ) }
    dend_33 { pt3dadd( -71.7118, 227.038, -127.855, 0.37 ) }
    dend_33 { pt3dadd( -71.8579, 229.055, -127.553, 0.29 ) }
    dend_33 { pt3dadd( -72.0039, 230.395, -127.346, 0.29 ) }
    dend_33 { pt3dadd( -72.2683, 231.922, -127.117, 0.29 ) }
    dend_33 { pt3dadd( -72.6891, 233.421, -126.937, 0.29 ) }
    dend_33 { pt3dadd( -73.0759, 234.455, -126.837, 0.29 ) }
    dend_33 { pt3dadd( -73.6485, 235.795, -126.667, 0.29 ) }
    dend_33 { pt3dadd( -74.1039, 236.805, -126.478, 0.29 ) }
    dend_33 { pt3dadd( -74.5977, 237.856, -126.232, 0.29 ) }
    dend_33 { pt3dadd( -74.9998, 238.649, -125.995, 0.29 ) }
    dend_33 { pt3dadd( -75.52, 239.719, -125.632, 1.03 ) }
    dend_33 { pt3dadd( -75.8723, 240.609, -125.294, 1.33 ) }
    dend_33 { pt3dadd( -76.1054, 241.459, -124.948, 1.33 ) }
    dend_33 { pt3dadd( -76.4528, 243.052, -124.256, 0.29 ) }
    dend_33 { pt3dadd( -76.786, 244.52, -123.598, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_33 { pt3dadd( -77.1802, 245.87, -122.992, 0.29 ) }
    dend_33 { pt3dadd( -77.546, 246.831, -122.557, 0.29 ) }
    dend_33 { pt3dadd( -78.1141, 248.028, -122.022, 0.29 ) }
    dend_33 { pt3dadd( -78.451, 248.632, -121.741, 0.29 ) }
    dend_33 { pt3dadd( -79.2437, 249.903, -121.119, 0.29 ) }
    dend_33 { pt3dadd( -80.0381, 251.117, -120.529, 0.74 ) }
    dend_33 { pt3dadd( -80.6233, 251.935, -120.09, 0.88 ) }
    dend_33 { pt3dadd( -81.4708, 253.121, -119.44, 0.44 ) }
    dend_33 { pt3dadd( -81.9341, 253.808, -119.061, 0.44 ) }
    dend_33 { pt3dadd( -82.5339, 254.868, -118.486, 0.96 ) }
    dend_33 { pt3dadd( -82.9417, 255.756, -118.063, 1.25 ) }
    dend_33 { pt3dadd( -83.7315, 257.73, -117.306, 0.29 ) }
    dend_33 { pt3dadd( -84.1235, 258.811, -117.007, 0.37 ) }
    dend_33 { pt3dadd( -84.3792, 259.514, -116.834, 0.37 ) }
    dend_33 { pt3dadd( -84.8867, 260.723, -116.46, 0.37 ) }
    dend_33 { pt3dadd( -85.4828, 262.14, -116.041, 0.37 ) }
    dend_33 { pt3dadd( -85.8247, 262.991, -115.792, 0.37 ) }
    dend_33 { pt3dadd( -86.2133, 263.959, -115.538, 0.37 ) }
    dend_33 { pt3dadd( -87.3823, 266.341, -114.801, 1.33 ) }
    dend_33 { pt3dadd( -88.4359, 268.197, -114.021, 2.06 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -17.8284, -198.503, 15.9005, 0.29 ) }
    dend_14 { pt3dadd( -18.6335, -199.352, 16.7677, 0.29 ) }
    dend_14 { pt3dadd( -19.0747, -200.005, 17.3721, 0.29 ) }
    dend_14 { pt3dadd( -19.2892, -200.458, 17.6987, 0.74 ) }
    dend_14 { pt3dadd( -19.5494, -201.067, 18.1048, 0.29 ) }
    dend_14 { pt3dadd( -19.7673, -201.564, 18.3938, 0.29 ) }
    dend_14 { pt3dadd( -20.2984, -202.775, 19.0981, 0.59 ) }
    dend_14 { pt3dadd( -20.4176, -203.147, 19.282, 0.74 ) }
    dend_14 { pt3dadd( -20.7945, -204.555, 19.9603, 0.37 ) }
    dend_14 { pt3dadd( -21.0047, -205.288, 20.3312, 0.96 ) }
    dend_14 { pt3dadd( -21.2598, -206.015, 20.7185, 0.81 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 31/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -17.8284, -198.503, 15.9005, 0.37 ) }
    dend_13 { pt3dadd( -16.8777, -198.919, 15.1915, 0.37 ) }
    dend_13 { pt3dadd( -16.2175, -199.309, 14.7281, 0.37 ) }
    dend_13 { pt3dadd( -15.416, -199.79, 14.3938, 0.37 ) }
    dend_13 { pt3dadd( -14.6714, -200.154, 14.3295, 0.29 ) }
    dend_13 { pt3dadd( -13.6331, -200.542, 14.4024, 0.29 ) }
    dend_13 { pt3dadd( -12.6551, -200.908, 14.471, 0.52 ) }
    dend_13 { pt3dadd( -12.0621, -201.106, 14.6078, 0.52 ) }
    dend_13 { pt3dadd( -10.1326, -201.751, 15.3341, 1.11 ) }
    dend_13 { pt3dadd( -8.24413, -202.362, 16.3133, 0.59 ) }
    dend_13 { pt3dadd( -7.5771, -202.517, 16.7547, 0.59 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 42/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -65.1121, 207.037, -177.042, 0.37 ) }
    dend_45 { pt3dadd( -65.2728, 209.18, -176.952, 0.37 ) }
    dend_45 { pt3dadd( -65.4195, 211.135, -176.869, 0.37 ) }
    dend_45 { pt3dadd( -65.5279, 212.582, -176.808, 0.37 ) }
    dend_45 { pt3dadd( -65.7129, 215.047, -176.704, 1.18 ) }
    dend_45 { pt3dadd( -65.8011, 216.223, -176.654, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 48/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -65.1121, 207.037, -177.042, 0.29 ) }
    dend_44 { pt3dadd( -65.664, 207.355, -178.87, 0.29 ) }
    dend_44 { pt3dadd( -66.1096, 207.636, -180.268, 0.52 ) }
    dend_44 { pt3dadd( -66.8787, 208.064, -182.326, 1.03 ) }
    dend_44 { pt3dadd( -67.3251, 208.306, -183.389, 1.03 ) }
    dend_44 { pt3dadd( -67.7501, 208.554, -184.35, 0.88 ) }
    dend_44 { pt3dadd( -68.3518, 208.983, -185.69, 0.81 ) }
    dend_44 { pt3dadd( -68.6877, 209.313, -186.53, 0.29 ) }
    dend_44 { pt3dadd( -69.0841, 209.757, -187.448, 0.29 ) }
    dend_44 { pt3dadd( -69.5149, 210.202, -188.278, 0.29 ) }
    dend_44 { pt3dadd( -69.7205, 210.359, -188.779, 0.52 ) }
    dend_44 { pt3dadd( -70.1379, 210.654, -190.013, 0.52 ) }
    dend_44 { pt3dadd( -70.6269, 210.968, -191.565, 1.18 ) }
    dend_44 { pt3dadd( -70.8073, 211.066, -192.123, 1.47 ) }
    dend_44 { pt3dadd( -71.0769, 211.218, -192.911, 1.47 ) }
    dend_44 { pt3dadd( -72.442, 211.939, -196.416, 0.52 ) }
    dend_44 { pt3dadd( -72.9505, 212.157, -197.482, 0.29 ) }
    dend_44 { pt3dadd( -73.6326, 212.43, -198.696, 0.29 ) }
    dend_44 { pt3dadd( -74.7444, 212.971, -200.355, 0.29 ) }
    dend_44 { pt3dadd( -75.7408, 213.495, -201.642, 0.29 ) }
    dend_44 { pt3dadd( -76.5065, 213.878, -202.485, 0.29 ) }
    dend_44 { pt3dadd( -77.8012, 214.457, -203.645, 0.29 ) }
    dend_44 { pt3dadd( -78.358, 214.683, -204.137, 0.29 ) }
    dend_44 { pt3dadd( -79.2928, 215.088, -204.945, 0.88 ) }
    dend_44 { pt3dadd( -79.7892, 215.321, -205.364, 1.25 ) }
    dend_44 { pt3dadd( -81.3018, 216.02, -206.696, 0.37 ) }
    dend_44 { pt3dadd( -81.9524, 216.304, -207.456, 0.29 ) }
    dend_44 { pt3dadd( -82.457, 216.518, -208.225, 0.74 ) }
    dend_44 { pt3dadd( -82.8177, 216.66, -208.806, 0.74 ) }
    dend_44 { pt3dadd( -83.512, 216.93, -209.959, 0.37 ) }
    dend_44 { pt3dadd( -84.1452, 217.174, -211.071, 0.37 ) }
    dend_44 { pt3dadd( -85.4834, 217.696, -213.609, 0.37 ) }
    dend_44 { pt3dadd( -85.9216, 217.835, -214.405, 0.37 ) }
    dend_44 { pt3dadd( -86.8505, 218.069, -215.931, 0.29 ) }
    dend_44 { pt3dadd( -87.3364, 218.16, -216.625, 0.29 ) }
    dend_44 { pt3dadd( -88.5821, 218.282, -218.038, 0.66 ) }
    dend_44 { pt3dadd( -89.7685, 218.349, -219.166, 0.74 ) }
    dend_44 { pt3dadd( -91.0339, 218.419, -220.184, 0.52 ) }
    dend_44 { pt3dadd( -91.9437, 218.448, -220.899, 0.96 ) }
    dend_44 { pt3dadd( -92.78, 218.464, -221.57, 0.96 ) }
    dend_44 { pt3dadd( -94.3026, 218.521, -222.718, 0.29 ) }
    dend_44 { pt3dadd( -95.4659, 218.619, -223.497, 0.96 ) }
    dend_44 { pt3dadd( -96.1476, 218.708, -223.943, 1.11 ) }
    dend_44 { pt3dadd( -97.2153, 219.002, -224.722, 0.44 ) }
    dend_44 { pt3dadd( -97.9592, 219.38, -225.31, 0.44 ) }
    dend_44 { pt3dadd( -98.7855, 220.07, -226.038, 0.44 ) }
    dend_44 { pt3dadd( -99.4531, 220.809, -226.653, 0.44 ) }
    dend_44 { pt3dadd( -99.9617, 221.39, -227.098, 0.44 ) }
    dend_44 { pt3dadd( -100.824, 222.26, -227.843, 0.44 ) }
    dend_44 { pt3dadd( -101.452, 222.783, -228.412, 0.44 ) }
    dend_44 { pt3dadd( -102.592, 223.601, -229.432, 0.44 ) }
    dend_44 { pt3dadd( -103.264, 224.055, -230.046, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_44 { pt3dadd( -104.099, 224.57, -230.815, 0.81 ) }
    dend_44 { pt3dadd( -105.265, 225.22, -231.877, 0.52 ) }
    dend_44 { pt3dadd( -106.464, 225.875, -232.975, 0.37 ) }
    dend_44 { pt3dadd( -107.024, 226.211, -233.534, 0.37 ) }
    dend_44 { pt3dadd( -107.61, 226.601, -234.183, 1.03 ) }
    dend_44 { pt3dadd( -108.388, 227.205, -235.208, 1.47 ) }
    dend_44 { pt3dadd( -108.796, 227.597, -235.854, 1.47 ) }
    dend_44 { pt3dadd( -109.215, 228.146, -236.677, 0.44 ) }
    dend_44 { pt3dadd( -109.988, 229.171, -238.458, 0.29 ) }
    dend_44 { pt3dadd( -110.621, 229.852, -240.066, 0.29 ) }
    dend_44 { pt3dadd( -111.345, 230.438, -242.16, 0.29 ) }
    dend_44 { pt3dadd( -111.827, 230.755, -243.69, 0.52 ) }
    dend_44 { pt3dadd( -112.422, 231.133, -245.567, 0.74 ) }
    dend_44 { pt3dadd( -113.138, 231.679, -247.862, 0.59 ) }
    dend_44 { pt3dadd( -113.523, 232.103, -249.264, 0.59 ) }
    dend_44 { pt3dadd( -114.101, 232.873, -251.473, 0.37 ) }
    dend_44 { pt3dadd( -114.57, 233.411, -252.928, 0.37 ) }
    dend_44 { pt3dadd( -115.171, 233.951, -254.365, 0.37 ) }
    dend_44 { pt3dadd( -115.96, 234.48, -255.809, 0.37 ) }
    dend_44 { pt3dadd( -117.081, 235.144, -257.426, 0.59 ) }
    dend_44 { pt3dadd( -117.902, 235.425, -258.339, 0.59 ) }
    dend_44 { pt3dadd( -119.35, 235.479, -259.469, 2.06 ) }
    dend_44 { pt3dadd( -119.971, 235.345, -259.85, 2.87 ) }
    dend_44 { pt3dadd( -121.364, 234.774, -260.55, 2.5 ) }
    dend_44 { pt3dadd( -122.568, 234.149, -261.019, 1.55 ) }
    dend_44 { pt3dadd( -123.889, 233.377, -261.412, 0.37 ) }
    dend_44 { pt3dadd( -124.598, 232.904, -261.602, 0.37 ) }
    dend_44 { pt3dadd( -125.812, 232.012, -261.901, 0.37 ) }
    dend_44 { pt3dadd( -127.095, 231.088, -262.224, 0.37 ) }
    dend_44 { pt3dadd( -128.697, 229.876, -262.63, 0.37 ) }
    dend_44 { pt3dadd( -129.103, 229.553, -262.745, 0.66 ) }
    dend_44 { pt3dadd( -129.871, 228.937, -262.984, 0.44 ) }
    dend_44 { pt3dadd( -130.716, 228.26, -263.267, 0.37 ) }
    dend_44 { pt3dadd( -131.911, 227.392, -263.619, 0.37 ) }
    dend_44 { pt3dadd( -132.946, 226.743, -263.909, 0.37 ) }
    dend_44 { pt3dadd( -134.233, 226.006, -264.242, 0.37 ) }
    dend_44 { pt3dadd( -135.199, 225.521, -264.471, 0.59 ) }
    dend_44 { pt3dadd( -136.129, 225.119, -264.688, 0.59 ) }
    dend_44 { pt3dadd( -137.692, 224.523, -265.033, 0.37 ) }
    dend_44 { pt3dadd( -138.979, 224.088, -265.29, 0.66 ) }
    dend_44 { pt3dadd( -139.956, 223.863, -265.463, 0.66 ) }
    dend_44 { pt3dadd( -140.762, 223.748, -265.558, 0.66 ) }
    dend_44 { pt3dadd( -141.576, 223.694, -265.627, 0.37 ) }
    dend_44 { pt3dadd( -142.361, 223.708, -265.683, 0.74 ) }
    dend_44 { pt3dadd( -143.038, 223.776, -265.736, 0.74 ) }
    dend_44 { pt3dadd( -144.468, 224.014, -265.786, 0.52 ) }
    dend_44 { pt3dadd( -146.444, 224.441, -265.865, 0.29 ) }
    dend_44 { pt3dadd( -147.721, 224.67, -265.929, 0.29 ) }
    dend_44 { pt3dadd( -148.781, 224.778, -265.998, 1.47 ) }
    dend_44 { pt3dadd( -149.554, 224.778, -266.073, 1.99 ) }
    dend_44 { pt3dadd( -150.402, 224.66, -266.186, 1.99 ) }
    dend_44 { pt3dadd( -152.558, 224.124, -266.564, 0.29 ) }
    dend_44 { pt3dadd( -154.337, 223.575, -266.975, 0.29 ) }
    dend_44 { pt3dadd( -155.955, 222.981, -267.378, 0.29 ) }
    dend_44 { pt3dadd( -157.329, 222.452, -267.743, 0.29 ) }
    dend_44 { pt3dadd( -159.246, 221.747, -268.305, 0.29 ) }
    dend_44 { pt3dadd( -160.317, 221.352, -268.676, 0.44 ) }
    dend_44 { pt3dadd( -161.823, 220.774, -269.322, 0.44 ) }
    dend_44 { pt3dadd( -163.165, 220.34, -269.995, 0.44 ) }
    dend_44 { pt3dadd( -164.66, 219.956, -270.807, 0.44 ) }
    dend_44 { pt3dadd( -166.049, 219.674, -271.583, 0.44 ) }
    dend_44 { pt3dadd( -167.546, 219.389, -272.423, 0.44 ) }
    dend_44 { pt3dadd( -169.394, 218.999, -273.421, 0.44 ) }
    dend_44 { pt3dadd( -170.8, 218.688, -274.154, 0.44 ) }
    dend_44 { pt3dadd( -172.634, 218.252, -275.178, 0.44 ) }
    dend_44 { pt3dadd( -173.839, 217.878, -275.889, 1.62 ) }
    dend_44 { pt3dadd( -174.511, 217.653, -276.286, 2.5 ) }
    dend_44 { pt3dadd( -174.999, 217.506, -276.567, 2.5 ) }
    dend_44 { pt3dadd( -177.626, 216.665, -278.085, 0.37 ) }
    dend_44 { pt3dadd( -178.893, 216.149, -278.848, 0.37 ) }
    dend_44 { pt3dadd( -180.18, 215.534, -279.674, 0.37 ) }
    dend_44 { pt3dadd( -181.276, 214.992, -280.324, 0.81 ) }
    dend_44 { pt3dadd( -182.325, 214.543, -280.86, 0.37 ) }
    dend_44 { pt3dadd( -183.176, 214.28, -281.212, 0.52 ) }
    dend_44 { pt3dadd( -183.834, 214.197, -281.374, 0.81 ) }
    dend_44 { pt3dadd( -184.717, 214.19, -281.513, 0.81 ) }
    dend_44 { pt3dadd( -186.526, 214.286, -281.815, 0.37 ) }
    dend_44 { pt3dadd( -188.066, 214.309, -282.101, 0.37 ) }
    dend_44 { pt3dadd( -189.655, 214.244, -282.423, 0.37 ) }
    dend_44 { pt3dadd( -190.873, 214.154, -282.639, 0.37 ) }
    dend_44 { pt3dadd( -192.341, 214.006, -282.878, 0.37 ) }
    dend_44 { pt3dadd( -194.989, 213.608, -283.288, 0.29 ) }
    dend_44 { pt3dadd( -196.491, 213.208, -283.534, 0.29 ) }
    dend_44 { pt3dadd( -197.905, 212.585, -283.73, 0.29 ) }
    dend_44 { pt3dadd( -199.346, 211.662, -283.843, 0.88 ) }
    dend_44 { pt3dadd( -200.12, 211.035, -283.833, 0.88 ) }
    dend_44 { pt3dadd( -201.142, 210.068, -283.716, 0.29 ) }
    dend_44 { pt3dadd( -202.551, 208.591, -283.432, 0.29 ) }
    dend_44 { pt3dadd( -204.078, 206.962, -283.103, 0.37 ) }
    dend_44 { pt3dadd( -206.002, 204.882, -282.699, 0.66 ) }
    dend_44 { pt3dadd( -207.229, 203.562, -282.5, 0.66 ) }
    dend_44 { pt3dadd( -208.042, 202.718, -282.377, 0.22 ) }
    dend_44 { pt3dadd( -208.631, 202.122, -282.288, 0.59 ) }
    dend_44 { pt3dadd( -209.307, 201.487, -282.204, 0.81 ) }
    dend_44 { pt3dadd( -209.729, 201.116, -282.17, 0.81 ) }
    dend_44 { pt3dadd( -211.555, 199.613, -282.042, 0.29 ) }
    dend_44 { pt3dadd( -212.028, 199.183, -281.992, 0.29 ) }
    dend_44 { pt3dadd( -213.029, 198.137, -281.811, 0.52 ) }
    dend_44 { pt3dadd( -213.596, 197.483, -281.622, 0.52 ) }
    dend_44 { pt3dadd( -214.38, 196.566, -281.301, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_44 { pt3dadd( -216.065, 194.712, -280.58, 0.66 ) }
    dend_44 { pt3dadd( -217.223, 193.572, -280.1, 0.52 ) }
    dend_44 { pt3dadd( -218.087, 192.864, -279.741, 0.96 ) }
    dend_44 { pt3dadd( -219.865, 191.69, -279.046, 0.66 ) }
    dend_44 { pt3dadd( -221.133, 190.991, -278.578, 0.29 ) }
    dend_44 { pt3dadd( -222.982, 190.189, -278.002, 0.29 ) }
    dend_44 { pt3dadd( -224.342, 189.731, -277.681, 0.29 ) }
    dend_44 { pt3dadd( -226.979, 188.976, -277.139, 0.29 ) }
    dend_44 { pt3dadd( -227.913, 188.722, -276.977, 1.47 ) }
    dend_44 { pt3dadd( -228.55, 188.545, -276.888, 1.77 ) }
    dend_44 { pt3dadd( -230.793, 187.96, -276.553, 0.37 ) }
    dend_44 { pt3dadd( -233.033, 187.4, -276.256, 0.37 ) }
    dend_44 { pt3dadd( -234.251, 187.081, -276.101, 0.66 ) }
    dend_44 { pt3dadd( -235.513, 186.742, -275.915, 0.66 ) }
    dend_44 { pt3dadd( -236.534, 186.47, -275.694, 0.59 ) }
    dend_44 { pt3dadd( -238.836, 185.962, -275.064, 0.37 ) }
    dend_44 { pt3dadd( -240.424, 185.705, -274.539, 0.37 ) }
    dend_44 { pt3dadd( -242.123, 185.484, -273.911, 0.37 ) }
    dend_44 { pt3dadd( -244.046, 185.247, -273.106, 0.96 ) }
    dend_44 { pt3dadd( -245.515, 185.036, -272.398, 0.22 ) }
    dend_44 { pt3dadd( -247.086, 184.753, -271.575, 0.22 ) }
    dend_44 { pt3dadd( -247.876, 184.563, -271.144, 0.22 ) }
    dend_44 { pt3dadd( -249.055, 184.26, -270.523, 0.52 ) }
    dend_44 { pt3dadd( -250.955, 183.693, -269.677, 0.74 ) }
    dend_44 { pt3dadd( -252.23, 183.307, -269.245, 0.66 ) }
    dend_44 { pt3dadd( -254.084, 182.751, -268.717, 0.29 ) }
    dend_44 { pt3dadd( -255.426, 182.336, -268.401, 0.96 ) }
    dend_44 { pt3dadd( -256.005, 182.184, -268.298, 1.33 ) }
    dend_44 { pt3dadd( -258.38, 181.781, -268.008, 0.37 ) }
    dend_44 { pt3dadd( -260.513, 181.46, -267.789, 0.37 ) }
    dend_44 { pt3dadd( -261.612, 181.288, -267.66, 0.37 ) }
    dend_44 { pt3dadd( -263.866, 180.972, -267.304, 0.37 ) }
    dend_44 { pt3dadd( -265.395, 180.764, -266.996, 0.37 ) }
    dend_44 { pt3dadd( -268.338, 180.283, -266.261, 0.37 ) }
    dend_44 { pt3dadd( -270.294, 179.87, -265.68, 0.37 ) }
    dend_44 { pt3dadd( -271.829, 179.443, -265.08, 0.37 ) }
    dend_44 { pt3dadd( -273.63, 178.916, -264.18, 1.11 ) }
    dend_44 { pt3dadd( -274.415, 178.699, -263.722, 1.11 ) }
    dend_44 { pt3dadd( -275.72, 178.259, -262.893, 0.44 ) }
    dend_44 { pt3dadd( -276.69, 177.936, -262.268, 0.29 ) }
    dend_44 { pt3dadd( -278.713, 177.391, -261.077, 0.29 ) }
    dend_44 { pt3dadd( -280.575, 176.855, -259.933, 0.81 ) }
    dend_44 { pt3dadd( -282.685, 176.113, -258.606, 0.52 ) }
    dend_44 { pt3dadd( -284.429, 175.419, -257.55, 0.52 ) }
    dend_44 { pt3dadd( -285.839, 174.787, -256.649, 0.52 ) }
    dend_44 { pt3dadd( -286.613, 174.423, -256.085, 0.81 ) }
    dend_44 { pt3dadd( -288.459, 173.477, -254.679, 0.44 ) }
    dend_44 { pt3dadd( -289.5, 172.942, -253.832, 0.37 ) }
    dend_44 { pt3dadd( -290.742, 172.416, -252.743, 0.37 ) }
    dend_44 { pt3dadd( -292.955, 171.623, -250.853, 0.37 ) }
    dend_44 { pt3dadd( -295.427, 170.67, -248.781, 1.55 ) }
    dend_44 { pt3dadd( -296.402, 170.286, -247.98, 2.36 ) }
    dend_44 { pt3dadd( -296.916, 170.085, -247.569, 2.58 ) }
    dend_44 { pt3dadd( -299.542, 168.867, -245.345, 0.52 ) }
    dend_44 { pt3dadd( -300.313, 168.348, -244.585, 0.74 ) }
    dend_44 { pt3dadd( -301.26, 167.387, -243.583, 0.74 ) }
    dend_44 { pt3dadd( -302.128, 166.282, -242.518, 0.44 ) }
    dend_44 { pt3dadd( -302.987, 165.199, -241.316, 0.37 ) }
    dend_44 { pt3dadd( -303.648, 164.411, -240.377, 0.44 ) }
    dend_44 { pt3dadd( -304.542, 163.312, -239.067, 0.44 ) }
    dend_44 { pt3dadd( -305.314, 162.527, -237.926, 0.44 ) }
    dend_44 { pt3dadd( -306.679, 161.346, -235.959, 0.81 ) }
    dend_44 { pt3dadd( -307.586, 160.629, -234.74, 1.11 ) }
    dend_44 { pt3dadd( -308.545, 159.878, -233.667, 0.37 ) }
    dend_44 { pt3dadd( -309.456, 159.06, -232.743, 0.37 ) }
    dend_44 { pt3dadd( -311.65, 156.599, -230.583, 1.4 ) }
    dend_44 { pt3dadd( -312.297, 155.773, -229.936, 1.99 ) }
    dend_44 { pt3dadd( -312.93, 154.9, -229.344, 1.99 ) }
    dend_44 { pt3dadd( -314.71, 152.28, -227.726, 0.52 ) }
    dend_44 { pt3dadd( -315.895, 150.428, -226.651, 0.52 ) }
    dend_44 { pt3dadd( -316.811, 148.941, -225.895, 0.52 ) }
    dend_44 { pt3dadd( -318.216, 146.509, -224.968, 0.52 ) }
    dend_44 { pt3dadd( -318.972, 145.109, -224.445, 0.74 ) }
    dend_44 { pt3dadd( -319.724, 143.607, -223.8, 0.74 ) }
    dend_44 { pt3dadd( -320.223, 142.626, -223.326, 0.52 ) }
    dend_44 { pt3dadd( -320.853, 141.485, -222.791, 0.52 ) }
    dend_44 { pt3dadd( -321.877, 139.816, -222.043, 0.44 ) }
    dend_44 { pt3dadd( -323.157, 137.885, -221.238, 0.44 ) }
    dend_44 { pt3dadd( -324.171, 136.507, -220.6, 0.52 ) }
    dend_44 { pt3dadd( -325.51, 134.92, -219.786, 0.44 ) }
    dend_44 { pt3dadd( -326.642, 133.684, -219.088, 0.44 ) }
    dend_44 { pt3dadd( -327.524, 132.751, -218.501, 2.36 ) }
    dend_44 { pt3dadd( -328.463, 131.788, -217.86, 3.46 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 83/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -46.7871, 213.571, -189.33, 0.37 ) }
    dend_42 { pt3dadd( -47.0242, 215.504, -189.795, 0.37 ) }
    dend_42 { pt3dadd( -47.1644, 216.581, -190.048, 0.37 ) }
    dend_42 { pt3dadd( -47.2584, 217.378, -190.225, 0.59 ) }
    dend_42 { pt3dadd( -47.3349, 218.32, -190.421, 0.44 ) }
    dend_42 { pt3dadd( -47.3681, 218.914, -190.539, 0.37 ) }
    dend_42 { pt3dadd( -47.3864, 219.533, -190.664, 0.37 ) }
    dend_42 { pt3dadd( -47.3511, 220.657, -190.892, 0.29 ) }
    dend_42 { pt3dadd( -47.3111, 221.431, -191.045, 0.29 ) }
    dend_42 { pt3dadd( -47.2464, 222.208, -191.184, 0.29 ) }
    dend_42 { pt3dadd( -47.1436, 223.221, -191.338, 0.88 ) }
    dend_42 { pt3dadd( -47.0791, 223.749, -191.423, 1.11 ) }
    dend_42 { pt3dadd( -47.0063, 224.173, -191.495, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 96/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -46.7871, 213.571, -189.33, 0.29 ) }
    dend_39 { pt3dadd( -45.2742, 215.524, -189.966, 0.29 ) }
    dend_39 { pt3dadd( -44.5178, 216.576, -190.277, 0.29 ) }
    dend_39 { pt3dadd( -43.8545, 217.446, -190.647, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_39 { pt3dadd( -43.4985, 217.915, -190.868, 0.44 ) }
    dend_39 { pt3dadd( -42.8211, 218.849, -191.294, 0.37 ) }
    dend_39 { pt3dadd( -42.1633, 219.812, -191.708, 0.37 ) }
    dend_39 { pt3dadd( -41.4198, 220.951, -192.166, 0.37 ) }
    dend_39 { pt3dadd( -40.1805, 222.89, -192.996, 0.81 ) }
    dend_39 { pt3dadd( -39.7167, 223.668, -193.335, 0.59 ) }
    dend_39 { pt3dadd( -38.9514, 225.053, -193.93, 1.33 ) }
    dend_39 { pt3dadd( -38.4388, 226.074, -194.374, 1.92 ) }
    dend_39 { pt3dadd( -38.2141, 226.512, -194.567, 1.92 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 9/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -88.4359, 268.197, -114.021, 0.52 ) }
    dend_35 { pt3dadd( -89.5294, 270.903, -113.24, 0.52 ) }
    dend_35 { pt3dadd( -90.206, 272.417, -112.828, 0.52 ) }
    dend_35 { pt3dadd( -91.0728, 274.168, -112.37, 0.52 ) }
    dend_35 { pt3dadd( -91.65, 275.313, -112.076, 0.52 ) }
    dend_35 { pt3dadd( -92.356, 276.751, -111.706, 0.52 ) }
    dend_35 { pt3dadd( -92.7709, 277.647, -111.469, 0.66 ) }
    dend_35 { pt3dadd( -93.2014, 278.531, -111.225, 0.29 ) }
    dend_35 { pt3dadd( -93.4827, 279.139, -111.075, 0.29 ) }
    dend_35 { pt3dadd( -94.1266, 280.77, -110.743, 0.29 ) }
    dend_35 { pt3dadd( -94.5761, 281.898, -110.501, 0.29 ) }
    dend_35 { pt3dadd( -94.9847, 283.09, -110.26, 0.29 ) }
    dend_35 { pt3dadd( -95.3767, 284.329, -109.996, 1.25 ) }
    dend_35 { pt3dadd( -95.5984, 285.043, -109.839, 1.55 ) }
    dend_35 { pt3dadd( -96.0041, 286.391, -109.556, 0.22 ) }
    dend_35 { pt3dadd( -96.6169, 287.985, -109.28, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 25/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -88.4359, 268.197, -114.021, 0.29 ) }
    dend_34 { pt3dadd( -89.6302, 269.758, -113.471, 0.29 ) }
    dend_34 { pt3dadd( -90.3184, 270.643, -113.093, 0.29 ) }
    dend_34 { pt3dadd( -91.025, 271.559, -112.68, 0.29 ) }
    dend_34 { pt3dadd( -91.8536, 272.689, -112.208, 0.37 ) }
    dend_34 { pt3dadd( -92.3474, 273.434, -111.933, 0.37 ) }
    dend_34 { pt3dadd( -92.7212, 274.064, -111.724, 0.29 ) }
    dend_34 { pt3dadd( -93.3166, 275.304, -111.34, 0.29 ) }
    dend_34 { pt3dadd( -93.7012, 276.194, -111.087, 0.29 ) }
    dend_34 { pt3dadd( -94.1963, 277.497, -110.776, 0.29 ) }
    dend_34 { pt3dadd( -94.7083, 278.922, -110.416, 0.29 ) }
    dend_34 { pt3dadd( -95.0774, 279.997, -110.138, 0.52 ) }
    dend_34 { pt3dadd( -95.3155, 280.698, -109.963, 0.29 ) }
    dend_34 { pt3dadd( -95.7982, 282.156, -109.597, 0.29 ) }
    dend_34 { pt3dadd( -96.1566, 283.277, -109.278, 0.29 ) }
    dend_34 { pt3dadd( -96.5999, 284.697, -108.825, 0.59 ) }
    dend_34 { pt3dadd( -96.935, 285.757, -108.48, 0.74 ) }
    dend_34 { pt3dadd( -97.256, 286.808, -108.147, 0.22 ) }
    dend_34 { pt3dadd( -97.4489, 287.51, -107.942, 0.22 ) }
    dend_34 { pt3dadd( -97.7084, 288.655, -107.668, 0.22 ) }
    dend_34 { pt3dadd( -97.8993, 289.571, -107.459, 0.22 ) }
    dend_34 { pt3dadd( -98.058, 290.334, -107.309, 0.74 ) }
    dend_34 { pt3dadd( -98.1582, 290.763, -107.218, 0.74 ) }
    dend_34 { pt3dadd( -98.3343, 291.312, -107.095, 0.29 ) }
    dend_34 { pt3dadd( -98.6992, 292.251, -106.881, 0.59 ) }
    dend_34 { pt3dadd( -99.1958, 293.28, -106.613, 0.29 ) }
    dend_34 { pt3dadd( -99.7576, 294.339, -106.314, 0.29 ) }
    dend_34 { pt3dadd( -100.323, 295.242, -106.052, 0.29 ) }
    dend_34 { pt3dadd( -100.94, 296.088, -105.805, 0.29 ) }
    dend_34 { pt3dadd( -101.652, 296.91, -105.529, 0.29 ) }
    dend_34 { pt3dadd( -102.503, 297.791, -105.192, 0.29 ) }
    dend_34 { pt3dadd( -103.162, 298.431, -104.908, 0.29 ) }
    dend_34 { pt3dadd( -104.348, 299.559, -104.333, 0.29 ) }
    dend_34 { pt3dadd( -105.043, 300.23, -103.964, 0.29 ) }
    dend_34 { pt3dadd( -106.097, 301.255, -103.367, 1.4 ) }
    dend_34 { pt3dadd( -106.744, 301.864, -102.988, 1.77 ) }
    dend_34 { pt3dadd( -107.891, 303.017, -102.227, 0.37 ) }
    dend_34 { pt3dadd( -108.465, 303.617, -101.786, 0.66 ) }
    dend_34 { pt3dadd( -108.681, 303.918, -101.556, 0.66 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 64/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -65.8011, 216.223, -176.654, 0.29 ) }
    dend_47 { pt3dadd( -65.1132, 217.528, -175.377, 0.29 ) }
    dend_47 { pt3dadd( -64.8398, 218.307, -174.642, 0.22 ) }
    dend_47 { pt3dadd( -64.6591, 219.201, -173.82, 0.22 ) }
    dend_47 { pt3dadd( -64.6087, 220.429, -172.674, 0.44 ) }
    dend_47 { pt3dadd( -64.6461, 221.171, -171.994, 0.44 ) }
    dend_47 { pt3dadd( -64.7076, 222.27, -171.063, 0.44 ) }
    dend_47 { pt3dadd( -64.8674, 223.086, -170.427, 0.74 ) }
    dend_47 { pt3dadd( -64.9981, 223.753, -169.894, 0.74 ) }
    dend_47 { pt3dadd( -65.2116, 224.79, -169.127, 0.44 ) }
    dend_47 { pt3dadd( -65.3377, 225.626, -168.52, 0.29 ) }
    dend_47 { pt3dadd( -65.3864, 226.701, -167.739, 0.29 ) }
    dend_47 { pt3dadd( -65.2771, 227.789, -166.964, 0.29 ) }
    dend_47 { pt3dadd( -64.6948, 230.04, -165.306, 0.29 ) }
    dend_47 { pt3dadd( -64.2552, 231.191, -164.421, 0.29 ) }
    dend_47 { pt3dadd( -63.8575, 231.98, -163.727, 0.29 ) }
    dend_47 { pt3dadd( -63.4495, 232.728, -163.055, 0.29 ) }
    dend_47 { pt3dadd( -62.9427, 233.64, -162.304, 0.81 ) }
    dend_47 { pt3dadd( -62.2982, 234.82, -161.425, 1.47 ) }
    dend_47 { pt3dadd( -61.8332, 235.676, -160.879, 1.84 ) }
    dend_47 { pt3dadd( -60.14, 238.736, -159.104, 0.29 ) }
    dend_47 { pt3dadd( -59.4434, 240.076, -158.418, 0.29 ) }
    dend_47 { pt3dadd( -58.615, 241.699, -157.557, 0.29 ) }
    dend_47 { pt3dadd( -57.4601, 243.88, -156.37, 1.84 ) }
    dend_47 { pt3dadd( -56.5457, 245.545, -155.483, 0.37 ) }
    dend_47 { pt3dadd( -55.9433, 246.658, -154.895, 0.37 ) }
    dend_47 { pt3dadd( -55.502, 247.492, -154.452, 0.37 ) }
    dend_47 { pt3dadd( -54.1477, 250.16, -152.792, 0.66 ) }
    dend_47 { pt3dadd( -53.643, 251.268, -151.917, 0.37 ) }
    dend_47 { pt3dadd( -53.4505, 251.86, -151.374, 0.37 ) }
    dend_47 { pt3dadd( -53.2644, 252.775, -150.477, 0.59 ) }
    dend_47 { pt3dadd( -53.1898, 253.221, -150.075, 0.59 ) }
    dend_47 { pt3dadd( -53.0881, 253.987, -149.474, 0.44 ) }
    dend_47 { pt3dadd( -52.7325, 257.259, -147.417, 0.44 ) }
    dend_47 { pt3dadd( -52.5447, 258.862, -146.494, 0.29 ) }
    dend_47 { pt3dadd( -52.3329, 260.345, -145.704, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_47 { pt3dadd( -52.0007, 262.398, -144.755, 0.29 ) }
    dend_47 { pt3dadd( -51.8357, 263.346, -144.348, 0.29 ) }
    dend_47 { pt3dadd( -51.5887, 264.629, -143.865, 0.29 ) }
    dend_47 { pt3dadd( -51.3092, 266.018, -143.431, 1.18 ) }
    dend_47 { pt3dadd( -51.2001, 266.532, -143.252, 1.55 ) }
    dend_47 { pt3dadd( -50.9354, 268.122, -142.481, 0.66 ) }
    dend_47 { pt3dadd( -50.5945, 270.024, -141.148, 1.03 ) }
    dend_47 { pt3dadd( -50.4469, 270.656, -140.58, 1.03 ) }
    dend_47 { pt3dadd( -50.0555, 272.028, -139.117, 0.29 ) }
    dend_47 { pt3dadd( -49.8666, 272.626, -138.435, 0.29 ) }
    dend_47 { pt3dadd( -49.417, 273.918, -136.974, 0.66 ) }
    dend_47 { pt3dadd( -48.8049, 275.522, -134.994, 0.37 ) }
    dend_47 { pt3dadd( -48.4179, 276.532, -133.741, 0.37 ) }
    dend_47 { pt3dadd( -48.1985, 277.074, -133.025, 0.37 ) }
    dend_47 { pt3dadd( -47.8553, 277.782, -132.042, 1.47 ) }
    dend_47 { pt3dadd( -47.4053, 278.535, -131.083, 1.69 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 16/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -65.8011, 216.223, -176.654, 0.29 ) }
    dend_46 { pt3dadd( -64.8585, 218.353, -176.883, 0.29 ) }
    dend_46 { pt3dadd( -64.2719, 219.632, -176.932, 0.29 ) }
    dend_46 { pt3dadd( -63.721, 220.865, -176.911, 1.69 ) }
    dend_46 { pt3dadd( -62.9106, 222.737, -176.801, 0.29 ) }
    dend_46 { pt3dadd( -62.6189, 223.442, -176.731, 0.29 ) }
    dend_46 { pt3dadd( -62.2603, 224.422, -176.599, 0.29 ) }
    dend_46 { pt3dadd( -61.9425, 225.303, -176.375, 0.29 ) }
    dend_46 { pt3dadd( -61.7368, 225.96, -176.192, 0.29 ) }
    dend_46 { pt3dadd( -61.4959, 226.878, -175.95, 0.59 ) }
    dend_46 { pt3dadd( -61.3152, 227.887, -175.736, 0.29 ) }
    dend_46 { pt3dadd( -61.1925, 229.003, -175.532, 0.29 ) }
    dend_46 { pt3dadd( -61.1706, 229.562, -175.453, 0.59 ) }
    dend_46 { pt3dadd( -61.1936, 230.27, -175.397, 0.59 ) }
    dend_46 { pt3dadd( -61.2995, 231.07, -175.333, 0.29 ) }
    dend_46 { pt3dadd( -61.4467, 231.737, -175.28, 0.29 ) }
    dend_46 { pt3dadd( -61.6306, 232.508, -175.22, 0.88 ) }
    dend_46 { pt3dadd( -61.7394, 232.977, -175.182, 1.03 ) }
    dend_46 { pt3dadd( -61.9992, 233.986, -175.089, 0.29 ) }
    dend_46 { pt3dadd( -62.2866, 235.041, -174.988, 0.29 ) }
    dend_46 { pt3dadd( -62.5295, 235.948, -174.95, 0.29 ) }
    dend_46 { pt3dadd( -62.696, 236.664, -174.972, 0.29 ) }
    dend_46 { pt3dadd( -62.866, 237.481, -175.072, 0.29 ) }
    dend_46 { pt3dadd( -63.034, 238.305, -175.266, 0.66 ) }
    dend_46 { pt3dadd( -63.1237, 238.741, -175.433, 0.88 ) }
    dend_46 { pt3dadd( -63.2736, 239.523, -175.852, 0.29 ) }
    dend_46 { pt3dadd( -63.4158, 240.084, -176.234, 0.29 ) }
    dend_46 { pt3dadd( -63.627, 240.791, -176.862, 0.29 ) }
    dend_46 { pt3dadd( -63.8159, 241.446, -177.646, 0.29 ) }
    dend_46 { pt3dadd( -63.9668, 241.941, -178.365, 0.29 ) }
    dend_46 { pt3dadd( -64.1471, 242.463, -179.228, 0.59 ) }
    dend_46 { pt3dadd( -64.3765, 243.0, -180.215, 0.44 ) }
    dend_46 { pt3dadd( -64.6744, 243.588, -181.352, 0.81 ) }
    dend_46 { pt3dadd( -65.0516, 244.201, -182.594, 0.37 ) }
    dend_46 { pt3dadd( -65.3556, 244.633, -183.401, 0.29 ) }
    dend_46 { pt3dadd( -65.5876, 244.934, -183.891, 0.29 ) }
    dend_46 { pt3dadd( -65.8566, 245.267, -184.353, 0.29 ) }
    dend_46 { pt3dadd( -66.267, 245.852, -184.987, 0.59 ) }
    dend_46 { pt3dadd( -66.8172, 246.629, -185.676, 0.29 ) }
    dend_46 { pt3dadd( -67.2982, 247.31, -186.186, 0.22 ) }
    dend_46 { pt3dadd( -67.5552, 247.708, -186.472, 0.22 ) }
    dend_46 { pt3dadd( -67.9363, 248.365, -186.917, 1.25 ) }
    dend_46 { pt3dadd( -68.1297, 248.749, -187.165, 1.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 59/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -38.2141, 226.512, -194.567, 0.44 ) }
    dend_41 { pt3dadd( -38.5279, 227.642, -195.108, 0.44 ) }
    dend_41 { pt3dadd( -38.7921, 228.772, -195.653, 0.37 ) }
    dend_41 { pt3dadd( -38.9453, 229.519, -195.996, 0.37 ) }
    dend_41 { pt3dadd( -39.0969, 230.26, -196.324, 0.37 ) }
    dend_41 { pt3dadd( -39.2181, 230.871, -196.604, 0.37 ) }
    dend_41 { pt3dadd( -39.4168, 231.834, -197.044, 0.29 ) }
    dend_41 { pt3dadd( -39.5868, 232.937, -197.515, 1.25 ) }
    dend_41 { pt3dadd( -39.6441, 233.504, -197.755, 1.62 ) }
    dend_41 { pt3dadd( -39.668, 234.023, -198.001, 1.62 ) }
    dend_41 { pt3dadd( -39.6907, 235.445, -198.701, 0.29 ) }
    dend_41 { pt3dadd( -39.6835, 236.127, -199.027, 0.29 ) }
    dend_41 { pt3dadd( -39.6223, 237.011, -199.442, 0.29 ) }
    dend_41 { pt3dadd( -39.4982, 237.838, -199.834, 0.59 ) }
    dend_41 { pt3dadd( -39.2074, 239.339, -200.536, 0.29 ) }
    dend_41 { pt3dadd( -39.1036, 239.838, -200.766, 0.29 ) }
    dend_41 { pt3dadd( -38.9591, 240.547, -201.099, 0.29 ) }
    dend_41 { pt3dadd( -38.8939, 240.971, -201.305, 0.29 ) }
    dend_41 { pt3dadd( -38.8432, 241.55, -201.569, 0.59 ) }
    dend_41 { pt3dadd( -38.8118, 242.24, -201.833, 0.59 ) }
    dend_41 { pt3dadd( -38.7761, 243.61, -202.305, 0.29 ) }
    dend_41 { pt3dadd( -38.7463, 244.443, -202.609, 0.29 ) }
    dend_41 { pt3dadd( -38.7059, 245.385, -202.947, 0.29 ) }
    dend_41 { pt3dadd( -38.6348, 246.626, -203.384, 0.37 ) }
    dend_41 { pt3dadd( -38.5909, 247.275, -203.605, 0.37 ) }
    dend_41 { pt3dadd( -38.4904, 248.429, -203.96, 0.37 ) }
    dend_41 { pt3dadd( -38.3928, 249.39, -204.219, 0.37 ) }
    dend_41 { pt3dadd( -38.2612, 250.711, -204.521, 0.44 ) }
    dend_41 { pt3dadd( -38.1642, 251.596, -204.685, 0.66 ) }
    dend_41 { pt3dadd( -38.0931, 252.262, -204.785, 0.66 ) }
    dend_41 { pt3dadd( -37.9754, 253.642, -204.883, 0.29 ) }
    dend_41 { pt3dadd( -37.9343, 254.262, -204.872, 0.74 ) }
    dend_41 { pt3dadd( -37.8869, 255.484, -204.783, 0.29 ) }
    dend_41 { pt3dadd( -37.8801, 256.86, -204.638, 0.37 ) }
    dend_41 { pt3dadd( -37.8843, 257.663, -204.537, 0.37 ) }
    dend_41 { pt3dadd( -37.9061, 259.043, -204.373, 0.37 ) }
    dend_41 { pt3dadd( -37.9337, 259.911, -204.284, 0.37 ) }
    dend_41 { pt3dadd( -37.9849, 260.904, -204.219, 0.37 ) }
    dend_41 { pt3dadd( -38.0653, 262.004, -204.196, 0.29 ) }
    dend_41 { pt3dadd( -38.1624, 263.071, -204.218, 0.29 ) }
    dend_41 { pt3dadd( -38.2341, 264.576, -204.309, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_41 { pt3dadd( -38.2326, 265.252, -204.381, 0.29 ) }
    dend_41 { pt3dadd( -38.2085, 266.168, -204.489, 1.03 ) }
    dend_41 { pt3dadd( -38.1777, 266.861, -204.575, 1.33 ) }
    dend_41 { pt3dadd( -38.121, 268.3, -204.758, 0.52 ) }
    dend_41 { pt3dadd( -38.0822, 269.524, -204.909, 0.52 ) }
    dend_41 { pt3dadd( -38.0297, 270.703, -205.045, 0.52 ) }
    dend_41 { pt3dadd( -37.9888, 271.671, -205.149, 0.81 ) }
    dend_41 { pt3dadd( -37.9737, 272.196, -205.203, 0.81 ) }
    dend_41 { pt3dadd( -37.9919, 273.643, -205.345, 0.37 ) }
    dend_41 { pt3dadd( -38.051, 274.844, -205.445, 0.37 ) }
    dend_41 { pt3dadd( -38.131, 275.842, -205.508, 0.96 ) }
    dend_41 { pt3dadd( -38.1675, 276.288, -205.534, 1.33 ) }
    dend_41 { pt3dadd( -38.224, 276.857, -205.572, 1.4 ) }
    dend_41 { pt3dadd( -38.3858, 278.165, -205.677, 0.52 ) }
    dend_41 { pt3dadd( -38.5271, 279.108, -205.768, 0.44 ) }
    dend_41 { pt3dadd( -38.7624, 280.327, -205.915, 0.37 ) }
    dend_41 { pt3dadd( -38.9812, 281.407, -206.054, 0.37 ) }
    dend_41 { pt3dadd( -39.1566, 282.308, -206.167, 0.37 ) }
    dend_41 { pt3dadd( -39.2729, 282.916, -206.242, 0.37 ) }
    dend_41 { pt3dadd( -39.5067, 283.947, -206.389, 0.74 ) }
    dend_41 { pt3dadd( -39.5793, 284.177, -206.43, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -38.2141, 226.512, -194.567, 0.37 ) }
    dend_40 { pt3dadd( -37.7201, 227.909, -196.007, 0.37 ) }
    dend_40 { pt3dadd( -37.3091, 228.906, -196.917, 0.74 ) }
    dend_40 { pt3dadd( -36.5189, 230.456, -198.313, 0.29 ) }
    dend_40 { pt3dadd( -36.0307, 231.25, -199.085, 0.29 ) }
    dend_40 { pt3dadd( -35.4743, 232.061, -199.888, 1.25 ) }
    dend_40 { pt3dadd( -35.2446, 232.379, -200.206, 1.25 ) }
    dend_40 { pt3dadd( -34.5898, 233.184, -200.974, 0.29 ) }
    dend_40 { pt3dadd( -33.8807, 233.957, -201.7, 0.29 ) }
    dend_40 { pt3dadd( -33.0764, 234.776, -202.495, 0.29 ) }
    dend_40 { pt3dadd( -32.6186, 235.246, -203.03, 0.29 ) }
    dend_40 { pt3dadd( -32.2555, 235.653, -203.577, 0.29 ) }
    dend_40 { pt3dadd( -31.8528, 236.14, -204.29, 0.29 ) }
    dend_40 { pt3dadd( -31.4848, 236.715, -205.142, 1.03 ) }
    dend_40 { pt3dadd( -30.8857, 237.896, -206.776, 0.37 ) }
    dend_40 { pt3dadd( -30.5793, 238.553, -207.638, 0.37 ) }
    dend_40 { pt3dadd( -30.288, 239.094, -208.414, 0.37 ) }
    dend_40 { pt3dadd( -30.0376, 239.557, -209.101, 1.03 ) }
    dend_40 { pt3dadd( -29.6146, 240.345, -210.312, 0.52 ) }
    dend_40 { pt3dadd( -29.29, 240.896, -211.16, 0.52 ) }
    dend_40 { pt3dadd( -28.9112, 241.486, -211.927, 0.44 ) }
    dend_40 { pt3dadd( -27.9642, 242.767, -213.504, 1.62 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
    ModelViewParmSubset_2 = new SectionList()
    dend_51 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_18 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_50 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_24 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_49 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_28 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_16 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_6 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_48 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_31 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_37 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_12 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_33 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_44 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_34 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_47 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_46 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_41 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_22 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_2 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_26 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_23 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_27 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_51 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_4 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_5 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_3 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_21 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_25 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_7 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_9 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_10 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_15 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_14 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_13 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_43 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_45 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_36 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_38 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_42 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_39 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_40 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_35 OneSecGrp_SectionRef_50.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_5 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_9 all.append()
    dend_9 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_18 nseg = 5
    dend_1 nseg = 9
    dend_50 nseg = 7
    dend_24 nseg = 13
    dend_19 nseg = 3
    dend_49 nseg = 5
    dend_28 nseg = 5
    dend_16 nseg = 3
    dend_30 nseg = 3
    dend_29 nseg = 3
    dend_6 nseg = 9
    dend_48 nseg = 3
    dend_31 nseg = 3
    dend_11 nseg = 5
    dend_37 nseg = 3
    dend_32 nseg = 3
    dend_12 nseg = 3
    dend_33 nseg = 3
    dend_44 nseg = 19
    dend_34 nseg = 3
    dend_47 nseg = 5
    dend_46 nseg = 3
    dend_41 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_LBC_b883da43ff_0_0


