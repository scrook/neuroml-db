// Cell: cNAC187_L1_DLAC_3a1208130a_0_0
/*
{
  "id" : "cNAC187_L1_DLAC_3a1208130a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "6.08934, -8.10363, 0.0, 1.81741", "5.48621, -7.32546, 0.0, 3.1203", "4.88307, -6.54729, 0.0, 3.95956", "4.27994, -5.76912, 0.0, 4.67598", "3.6768, -4.99095, 0.0, 5.35157", "3.07367, -4.21278, 0.0, 6.241", "2.47053, -3.43461, 0.0, 7.2003", "1.8674, -2.65644, 0.0, 8.27517", "1.26426, -1.87827, 0.0, 9.09786", "0.661129, -1.1001, 0.0, 10.0044", "0.0579941, -0.321931, 0.0, 10.3895", "-0.545141, 0.456239, 0.0, 10.2715", "-1.14828, 1.23441, 0.0, 9.95681", "-1.75141, 2.01258, 0.0, 9.42211", "-2.35455, 2.79075, 0.0, 9.23558", "-2.95768, 3.56892, 0.0, 8.71341", "-3.56082, 4.34709, 0.0, 8.39063", "-4.16395, 5.12526, 0.0, 7.56176", "-4.76709, 5.90343, 0.0, 6.58102", "-5.37022, 6.68159, 0.0, 5.63227", "-5.97336, 7.45976, 0.0, 3.08531" ]
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "5.73576, -8.121, 2.42, 1.76", "6.36456, -9.01912, 2.52812, 1.18", "7.32834, -10.1783, 2.61464, 0.81", "8.61236, -11.5922, 2.68677, 0.73", "9.81882, -12.8085, 2.75411, 1.32", "11.4091, -14.2961, 2.84052, 0.81", "12.8156, -15.4662, 2.95536, 1.03", "13.6125, -15.9984, 3.04633, 1.1", "13.8151, -16.1032, 3.08154, 1.32", "14.7326, -16.4794, 3.25184, 1.03", "15.2934, -16.667, 3.38613, 1.03", "17.1385, -17.1907, 4.10211, 0.51", "18.7444, -17.6337, 4.91708, 1.1", "19.864, -17.9631, 5.54597, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000561855183
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "4.0557, 2.309, 2.24, 1.76", "5.17613, 2.4156, 2.3578, 0.66", "6.82947, 2.54918, 2.543, 0.51", "7.48275, 2.60751, 2.6323, 1.1", "8.36193, 2.69682, 2.7587, 0.88", "9.08291, 2.78739, 2.85797, 0.88", "10.5933, 3.02801, 3.08598, 0.66", "11.5984, 3.22486, 3.26407, 1.25", "12.5807, 3.43054, 3.46904, 0.73", "13.32, 3.58631, 3.62757, 1.1", "14.8698, 3.92132, 3.97062, 0.59", "16.333, 4.23398, 4.29835, 0.59", "17.7984, 4.53236, 4.61919, 0.51", "19.0794, 4.77424, 4.89791, 0.81", "20.2892, 4.97649, 5.18167, 1.03", "20.7743, 5.05311, 5.31919, 1.03", "21.4877, 5.16904, 5.56513, 1.03", "22.0231, 5.26948, 5.76832, 1.03", "23.1166, 5.51735, 6.20557, 0.51", "24.3375, 5.88268, 6.69423, 0.81", "25.9784, 6.49159, 7.3178, 0.37", "27.0568, 6.97795, 7.69056, 0.37", "27.8084, 7.39337, 7.90934, 0.44", "28.8409, 8.07377, 8.14575, 0.59", "29.7797, 8.80223, 8.28208, 0.37", "30.7364, 9.64936, 8.28897, 0.37", "31.5532, 10.5026, 8.19664, 0.37", "32.4051, 11.5292, 8.05027, 0.59", "32.8959, 12.2051, 7.95936, 0.59", "33.3224, 12.8549, 7.89497, 0.37", "33.8744, 13.7203, 7.87349, 1.03", "34.4638, 14.6479, 7.92131, 0.51", "34.9437, 15.3529, 7.99503, 0.51", "35.6012, 16.2871, 8.13655, 0.66", "36.5797, 17.6221, 8.35366, 0.29", "37.2061, 18.4289, 8.48362, 0.73", "37.6507, 18.9584, 8.56702, 1.1", "38.3848, 19.6997, 8.65441, 0.73", "39.154, 20.3722, 8.6819, 0.44", "39.9991, 21.0156, 8.66414, 0.44", "40.6091, 21.4259, 8.61805, 0.44", "41.4967, 21.9746, 8.56488, 0.59", "42.3139, 22.4654, 8.55455, 0.59", "43.2754, 23.0421, 8.58665, 0.44", "44.2384, 23.6126, 8.68945, 0.51", "44.8217, 23.9686, 8.79321, 0.51", "45.8982, 24.6384, 9.0336, 0.51", "46.5807, 25.0735, 9.2052, 1.1", "47.0063, 25.356, 9.31876, 1.1", "47.976, 26.0226, 9.59305, 0.44", "48.5804, 26.4526, 9.74263, 0.44", "49.4267, 27.0588, 9.90229, 0.51", "49.8274, 27.3394, 9.9536, 0.29", "50.42, 27.7433, 10.0272, 0.73", "51.1783, 28.2894, 10.1131, 0.29", "52.1939, 29.0791, 10.2612, 0.29", "52.8257, 29.619, 10.3849, 0.15", "53.5703, 30.2984, 10.5499, 0.66", "53.8018, 30.5152, 10.6059, 0.95", "54.5292, 31.2118, 10.8005, 0.22", "55.4057, 32.0326, 11.0539, 0.51", "55.8836, 32.4924, 11.237, 0.51" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000561855183,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "6.33573, -4.621, -1.69, 2.79", "6.4942, -4.52844, -1.76434, 2.79", "8.73599, -3.21906, -2.81609, 1.54", "9.735, -2.63556, -3.28478, 1.4", "10.3698, -2.26477, -3.5826, 1.69", "11.4175, -1.65284, -4.07414, 2.57" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000561855183
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-5.3243, 2.279, 5.87, 2.13", "-5.87058, 2.27672, 7.41119, 2.13", "-6.8803, 2.05718, 10.2419, 1.62", "-7.205, 1.90482, 11.2309, 1.62", "-7.59054, 1.60889, 12.583, 1.62", "-7.95164, 1.2264, 13.9403, 1.62", "-8.08467, 1.04779, 14.4491, 1.62", "-8.54791, 0.110155, 16.4976, 1.25", "-8.93909, -0.895721, 18.3254, 1.4", "-9.16654, -1.6106, 19.5108, 1.4", "-9.4804, -2.83707, 21.3885, 0.95", "-9.64402, -3.59333, 22.4935, 1.1", "-9.86833, -4.74256, 24.1829, 1.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000561855183
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-2.61428, 7.659, -4.48, 2.06", "-2.52456, 8.09075, -4.41639, 2.06", "-2.25203, 9.60599, -4.19101, 1.4", "-1.98017, 11.1281, -3.9021, 0.95", "-1.69262, 12.6042, -3.60082, 0.95", "-1.36978, 14.1487, -3.26406, 1.1", "-1.06608, 15.4928, -3.0195, 0.95", "-0.77719, 16.7149, -2.84521, 0.66", "-0.414292, 18.2025, -2.70677, 1.47", "-0.145047, 19.2214, -2.69481, 1.03", "0.315809, 20.8965, -2.86778, 0.73", "0.751403, 22.5156, -3.21896, 0.73", "1.00378, 23.5629, -3.58583, 1.18", "1.14192, 24.3328, -3.97041, 1.18", "1.23324, 25.2704, -4.53182, 1.18", "1.31179, 26.75, -5.49607, 0.81", "1.31875, 27.8496, -6.27855, 0.81", "1.27484, 28.794, -6.93364, 1.03", "1.14092, 30.3395, -8.05016, 1.47", "1.03116, 31.1386, -8.64601, 1.76" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000561855183
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.8843, 5.349, -2.77, 1.32", "-7.58956, 5.51677, -2.76501, 1.32", "-8.53421, 5.6884, -2.74783, 0.88", "-9.21043, 5.76875, -2.73253, 1.25", "-11.2128, 5.95735, -2.64221, 0.66", "-12.3367, 6.04366, -2.57824, 0.66", "-13.4319, 6.10638, -2.46464, 0.88", "-14.2496, 6.10863, -2.33873, 0.95", "-15.3219, 6.06267, -2.12452, 0.66", "-16.0486, 6.0, -1.95354, 0.66", "-16.751, 5.9053, -1.74078, 0.66", "-18.1168, 5.70336, -1.31399, 0.44", "-18.7708, 5.60271, -1.06566, 1.1", "-19.3734, 5.5303, -0.797361, 1.1" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000561855183
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-5.97336, 7.45976, 0.0, 0.763499", "-15.1624, 19.3156, 0.0, 0.763499", "-24.3515, 31.1714, 0.0, 0.763499" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "19.864, -17.9631, 5.54597, 0.73", "21.2515, -18.0597, 5.94346, 0.73", "22.2118, -18.1, 6.05638, 0.73", "22.8928, -18.0989, 6.04115, 0.73", "23.6971, -18.0593, 5.92863, 1.1", "25.182, -17.9351, 5.50918, 0.59", "26.2514, -17.8257, 5.04929, 0.51", "27.7362, -17.659, 4.09263, 0.51", "28.6937, -17.5394, 3.28776, 0.81", "29.5339, -17.4212, 2.48357, 1.18", "30.7169, -17.2354, 1.26951, 0.66", "31.9043, -17.0336, -0.0350298, 0.66", "32.907, -16.8676, -1.14204, 0.66", "34.1596, -16.6646, -2.47921, 0.66", "34.6297, -16.5872, -2.95988, 1.32", "36.0997, -16.3502, -4.40971, 0.51", "37.7815, -16.0547, -5.97221, 0.51", "38.6959, -15.8703, -6.78782, 0.59", "39.4915, -15.6857, -7.49083, 0.81", "40.8316, -15.358, -8.63262, 0.95" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "19.864, -17.9631, 5.54597, 0.81", "20.028, -18.2978, 6.5033, 0.81", "20.4086, -18.9294, 8.55782, 0.73", "20.6568, -19.4015, 10.0559, 0.88", "20.8213, -19.8109, 11.2531, 0.44", "20.9463, -20.2916, 12.4882, 0.73", "20.9973, -20.6482, 13.2726, 0.73", "20.9882, -21.5182, 14.8876, 0.73", "20.8746, -21.957, 15.4486, 0.44", "20.6149, -22.4806, 15.9057, 0.73", "20.1338, -23.2204, 16.4114, 0.44", "19.6058, -23.9591, 16.8333, 0.51", "18.9238, -24.8997, 17.2902, 0.15", "18.1048, -26.105, 17.7869, 0.66", "17.7513, -26.6338, 18.0308, 0.81", "17.5433, -26.9449, 18.1948, 0.81", "17.1851, -27.4714, 18.5227, 0.29", "17.0052, -27.734, 18.7112, 0.29", "16.7892, -28.1992, 19.0672, 0.29" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "55.8836, 32.4924, 11.237, 0.37", "56.6162, 32.8705, 11.0796, 0.37", "57.0154, 33.0497, 10.9872, 0.51", "57.7527, 33.3052, 10.8189, 0.37", "58.7248, 33.5591, 10.6611, 0.59", "59.4898, 33.7597, 10.5991, 0.37", "59.9778, 33.9099, 10.5829, 0.37", "60.7037, 34.1835, 10.6416, 0.37", "61.3399, 34.4981, 10.7707, 0.22", "62.2386, 35.1405, 11.0795, 0.88", "62.9511, 35.8588, 11.3359, 0.29", "63.4525, 36.5068, 11.4665, 0.29", "64.0628, 37.479, 11.5632, 0.51", "64.4536, 38.2216, 11.58, 0.73", "65.0542, 39.4, 11.4981, 0.37", "65.6614, 40.4655, 11.2838, 0.59", "66.3152, 41.4158, 10.9947, 0.59", "66.8254, 42.0404, 10.7621, 0.59", "67.2417, 42.4734, 10.5733, 0.95", "68.4529, 43.5204, 10.0977, 0.37", "69.6694, 44.4161, 9.69947, 0.37", "70.5132, 44.9939, 9.48496, 0.22", "71.0052, 45.3134, 9.38358, 0.22", "71.6617, 45.7331, 9.25791, 0.37", "72.2614, 46.1453, 9.15897, 0.37", "73.1386, 46.8399, 9.09045, 0.51", "73.5207, 47.1926, 9.09131, 0.59", "74.2588, 47.9318, 9.11278, 0.44", "74.6414, 48.3402, 9.12916, 0.66", "75.2677, 49.0628, 9.16962, 0.81", "76.0924, 50.0791, 9.24978, 0.37", "76.4279, 50.4822, 9.30071, 0.22", "77.107, 51.251, 9.41662, 0.07" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "55.8836, 32.4924, 11.237, 0.29", "55.1435, 32.0339, 11.8838, 0.29", "54.7179, 31.7669, 12.2102, 0.29", "53.7183, 31.14, 12.9766, 0.15", "52.7552, 30.5359, 13.7151, 0.22", "52.2177, 30.1988, 14.1273, 0.22", "51.9284, 30.0173, 14.3491, 0.22", "51.2867, 29.5779, 14.7714, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "11.4175, -1.65284, -4.07414, 1.91", "11.5261, -1.06739, -5.09214, 1.91", "11.7411, 0.436434, -7.68221, 1.25", "11.8113, 1.23382, -9.25617, 0.73", "11.8237, 1.73014, -10.3897, 1.18", "11.789, 2.33675, -11.9276, 1.18", "11.7088, 2.97198, -13.6064, 1.18", "11.574, 3.38713, -14.783, 1.03", "11.0974, 4.23528, -17.1897, 1.03", "10.6096, 4.77479, -18.6697, 1.03", "10.1778, 5.11797, -19.5314, 1.03", "9.90523, 5.28758, -19.8836, 1.03", "9.15725, 5.68509, -20.4953, 1.1", "8.16254, 6.16812, -21.0454, 1.1", "6.51892, 6.90877, -21.7608, 0.44", "5.37477, 7.32847, -22.3114, 0.44", "4.69322, 7.48616, -22.7464, 0.44", "4.02261, 7.52806, -23.319, 0.95", "2.8778, 7.38449, -24.6142, 0.51", "1.90927, 7.12374, -25.9357, 0.51", "0.88131, 6.73371, -27.657, 0.73", "0.0353784, 6.3933, -29.3052, 0.73", "-0.417218, 6.25025, -30.3185, 0.73", "-0.85879, 6.18972, -31.3966, 0.73", "-1.21426, 6.2608, -32.2253, 0.51", "-1.63989, 6.52908, -32.9947, 0.51", "-2.24302, 7.06841, -33.7272, 0.51", "-3.05029, 7.81808, -34.3867, 0.51", "-3.66943, 8.33825, -34.7597, 0.59", "-4.52028, 8.97379, -35.1363, 0.66", "-5.14649, 9.39402, -35.356, 0.66", "-5.87426, 9.86017, -35.54, 0.66", "-6.67142, 10.3933, -35.6866, 0.51", "-7.63528, 11.1446, -35.8277, 0.51", "-8.35139, 11.8901, -35.9368, 0.59", "-8.83853, 12.631, -36.0677, 0.59", "-9.18652, 13.3367, -36.2599, 0.59", "-9.58348, 14.3131, -36.6391, 0.81", "-9.91583, 15.1527, -37.141, 1.03", "-10.3677, 16.1847, -37.9359, 0.44", "-11.0076, 17.3299, -39.166, 0.81", "-11.6515, 18.2313, -40.4433, 0.95", "-12.3547, 19.0403, -41.8013, 0.95", "-13.4243, 20.0964, -43.7703, 0.59", "-13.8041, 20.4223, -44.4265, 0.88", "-14.8882, 21.2523, -46.1651, 0.51", "-16.1171, 22.1257, -47.8724, 0.44", "-16.4497, 22.3674, -48.2743, 1.1", "-17.043, 22.8297, -48.9275, 0.81", "-17.7656, 23.5245, -49.6808, 0.51", "-18.3793, 24.2405, -50.3493, 0.51", "-18.8532, 24.9012, -50.8502, 0.95", "-19.0464, 25.2171, -51.0699, 1.03", "-19.3075, 25.6905, -51.4032, 1.03", "-20.0509, 27.0882, -52.3566, 0.51", "-20.3605, 27.6513, -52.703, 0.66", "-20.7345, 28.224, -53.0307, 0.66", "-21.1976, 28.7276, -53.3437, 0.66", "-21.7816, 29.1368, -53.691, 0.73", "-22.6364, 29.538, -54.0997, 0.73", "-23.43, 29.8118, -54.4635, 0.73", "-24.2765, 30.0543, -54.8466, 0.73", "-25.592, 30.3723, -55.4298, 0.51", "-27.1648, 30.6839, -56.1557, 0.66", "-27.9626, 30.8161, -56.5803, 0.66", "-28.957, 30.9609, -57.2094, 0.73" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "11.4175, -1.65284, -4.07414, 0.88", "13.0147, -1.45374, -4.27671, 0.88", "13.6983, -1.37417, -4.34046, 0.88", "14.3529, -1.30174, -4.38741, 0.95", "15.336, -1.19157, -4.4439, 1.18", "16.3456, -1.05775, -4.5422, 0.95", "17.4385, -0.907035, -4.6665, 0.73", "18.1652, -0.792597, -4.74648, 1.18", "18.9636, -0.669439, -4.83876, 1.25", "19.6936, -0.547902, -4.92656, 1.25", "21.5166, -0.221246, -5.14591, 0.81", "22.2998, -0.0727229, -5.28928, 1.25", "23.2134, 0.118136, -5.4901, 1.98" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-9.86833, -4.74256, 24.1829, 0.51", "-9.46885, -4.13326, 24.2574, 0.51", "-9.0838, -3.52145, 24.3594, 0.51", "-8.45252, -2.62109, 24.4857, 0.66", "-7.8458, -1.8367, 24.5519, 0.66", "-7.45489, -1.34969, 24.5373, 0.66", "-6.8103, -0.525056, 24.5382, 0.73", "-6.56668, -0.184004, 24.5323, 0.95", "-5.7714, 0.94776, 24.5275, 0.37", "-5.18871, 1.73219, 24.5313, 0.22", "-4.44978, 2.64918, 24.525, 0.22", "-3.32173, 3.86498, 24.5731, 0.22", "-2.82052, 4.3481, 24.5936, 0.22", "-2.45934, 4.03725, 25.0058, 0.22", "-2.02102, 3.51843, 25.4989, 0.22", "-1.54784, 2.90079, 26.0572, 0.22", "-0.267038, 1.09449, 27.5934, 0.22", "0.147767, 0.430713, 28.0427, 0.22", "0.533325, -0.240509, 28.483, 0.22", "0.72396, -0.65461, 28.7583, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-9.86833, -4.74256, 24.1829, 1.47", "-10.1287, -5.48097, 23.2217, 1.47", "-10.2191, -5.73735, 22.8879, 1.47" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "1.03116, 31.1386, -8.64601, 0.44", "0.665596, 32.5787, -9.0059, 0.44", "0.514204, 33.2899, -9.32159, 0.44", "0.310952, 34.4696, -10.0802, 0.51", "0.181334, 35.4435, -10.742, 0.51", "0.0804111, 36.9155, -11.7841, 0.44", "0.0667831, 38.5576, -13.0488, 1.03", "0.184985, 39.7724, -14.0601, 1.47", "0.365053, 40.9507, -15.0926, 1.91", "0.584423, 41.9821, -16.0162, 0.66", "0.839528, 43.0221, -16.8931, 0.51", "1.26862, 44.5612, -18.2169, 0.51", "1.52035, 45.4057, -18.8238, 0.66", "1.85065, 46.4537, -19.4889, 0.66", "2.13157, 47.305, -19.9801, 0.66", "2.42075, 48.1484, -20.4958, 1.03" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "1.03116, 31.1386, -8.64601, 0.51", "2.53884, 31.5943, -9.37525, 0.51", "3.03501, 31.739, -9.57873, 0.37", "3.97619, 32.032, -9.97011, 0.37", "4.86921, 32.3338, -10.3667, 0.37", "5.7976, 32.6642, -10.7709, 0.73", "6.12982, 32.7853, -10.906, 0.81", "7.24234, 33.1855, -11.3397, 0.51", "8.07596, 33.5108, -11.6794, 0.51", "9.22612, 34.0076, -12.0789, 0.95", "10.0564, 34.3784, -12.3696, 0.95", "11.0619, 34.8467, -12.7111, 0.66", "12.5718, 35.5555, -13.2293, 1.4", "14.1259, 36.2827, -13.7551, 0.73", "15.5101, 36.9098, -14.1491, 0.95" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-19.3734, 5.5303, -0.797361, 0.22", "-20.1619, 6.53618, -1.08715, 0.22", "-20.7123, 7.26669, -1.31636, 0.22", "-21.3486, 8.08819, -1.60695, 0.22", "-21.5749, 8.35172, -1.71572, 0.22", "-21.7725, 8.54553, -1.80233, 0.22", "-22.3534, 9.11543, -2.05704, 0.22", "-22.9329, 9.64282, -2.3606, 0.29", "-23.2605, 9.92357, -2.54964, 0.29", "-23.8787, 10.4145, -2.83361, 0.29", "-24.6206, 10.9313, -3.16383, 0.44" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-19.3734, 5.5303, -0.797361, 0.59", "-20.7748, 5.40348, -0.673376, 0.59", "-21.8684, 5.30854, -0.573097, 0.73", "-22.7014, 5.25578, -0.485139, 0.51", "-23.9442, 5.18735, -0.34993, 1.18", "-25.8432, 5.10807, -0.149156, 0.37", "-26.9822, 5.08012, -0.0356813, 0.81", "-27.4968, 5.08175, 0.00625199, 0.51", "-28.7513, 5.11115, 0.109353, 0.73", "-29.6401, 5.14607, 0.185447, 0.66", "-30.8136, 5.20713, 0.287859, 0.44", "-32.0063, 5.30248, 0.382733, 0.44", "-32.8148, 5.38766, 0.422746, 0.73", "-33.3219, 5.43862, 0.441766, 1.03" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-24.3515, 31.1714, 0.0, 0.15", "-33.5406, 43.0272, 0.0, 0.15", "-42.7297, 54.8831, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "40.8316, -15.358, -8.63262, 0.37", "42.0209, -15.6572, -9.55208, 0.37", "42.2898, -15.7264, -9.79664, 0.66", "42.8365, -15.8611, -10.3639, 0.66", "43.7168, -16.0681, -11.3037, 0.15", "44.6642, -16.261, -12.4297, 1.03", "46.2264, -16.5533, -14.428, 0.59", "47.2251, -16.7353, -15.8951, 0.59", "47.8884, -16.8795, -17.0406, 0.59", "48.0748, -16.9342, -17.4353, 0.59", "48.67, -17.2482, -19.0615, 0.59", "48.7591, -17.3369, -19.3297, 0.59", "48.9704, -17.6222, -19.86, 0.59", "49.3099, -18.1203, -20.5612, 0.59", "49.8916, -18.9634, -21.7102, 0.59", "50.3578, -19.6546, -22.6819, 0.59", "50.9461, -20.4942, -23.8355, 0.22", "51.4231, -21.0966, -24.7131, 0.73", "52.1209, -21.8582, -25.9099, 0.88", "53.3665, -23.0534, -27.9441, 0.95", "54.4544, -24.0075, -29.6475, 0.22", "54.6495, -24.155, -29.9279, 0.44", "55.1999, -24.5125, -30.5819, 0.44", "55.6274, -24.7681, -30.9671, 0.95", "56.0899, -25.0235, -31.2496, 0.95", "57.1206, -25.5762, -31.7129, 0.07", "58.1444, -26.2091, -32.2442, 0.88", "58.9236, -26.8029, -32.7493, 0.29", "59.8862, -27.674, -33.4681, 0.59", "60.2895, -28.0882, -33.7964, 0.59", "60.9382, -28.8506, -34.4008, 0.37", "61.8743, -30.1437, -35.3684, 0.44", "62.2532, -30.7379, -35.8146, 0.07", "62.5623, -31.24, -36.1851, 0.81", "62.8606, -31.7122, -36.5319, 0.81", "63.5105, -32.797, -37.3566, 0.37", "63.8881, -33.5358, -37.8873, 0.95", "64.5211, -34.8661, -38.9531, 0.22", "64.6501, -35.1404, -39.2072, 0.22", "64.9792, -35.8461, -39.9154, 0.22", "65.2256, -36.3685, -40.4662, 0.22", "65.4597, -36.8655, -41.028, 1.03", "65.9249, -37.9092, -42.2609, 0.22", "66.0173, -38.1549, -42.5336, 0.22", "66.1607, -38.5253, -42.9349, 0.66", "66.3145, -38.8561, -43.298, 0.59", "66.903, -39.9009, -44.4466, 0.37", "67.2785, -40.4489, -45.1284, 0.81", "67.8474, -41.2194, -46.1837, 0.22", "68.2732, -41.7534, -46.9767, 0.81", "69.0187, -42.5561, -48.2782, 0.15", "69.4404, -42.9315, -48.9695, 1.18", "70.5686, -43.7122, -50.6126, 0.44", "71.6426, -44.2936, -52.1013, 0.22", "71.856, -44.3855, -52.3851, 0.22", "72.2427, -44.5375, -52.8979, 0.81", "72.9345, -44.8519, -53.8414, 0.81", "73.3956, -45.1379, -54.4817, 0.73", "74.0153, -45.6378, -55.1678, 0.15", "74.1601, -45.7485, -55.291, 0.15", "74.5662, -46.026, -55.6243, 0.73", "75.3973, -46.506, -56.3516, 0.15", "75.9013, -46.7596, -56.89, 0.44", "76.3645, -46.9857, -57.4558, 0.95", "77.4049, -47.4682, -58.8107, 0.22", "78.2343, -47.8418, -59.9346, 0.81", "79.5975, -48.4523, -61.8051, 0.73", "81.358, -49.2836, -64.316, 0.29", "81.7136, -49.4857, -64.9017, 0.44", "82.0211, -49.7209, -65.5388, 0.66", "82.1802, -49.909, -66.0046, 0.66", "82.3784, -50.3053, -66.9034, 0.29", "82.4743, -50.71, -67.9467, 0.37", "82.5009, -51.0876, -69.3447, 0.51", "82.4981, -51.3108, -70.7072, 0.51", "82.4708, -51.399, -71.4672, 0.51", "82.4531, -51.4255, -71.726, 0.66", "82.2975, -51.5797, -74.0606, 0.37", "82.2568, -51.6157, -75.1028, 0.37", "82.2662, -51.6413, -76.6679, 0.37", "82.3686, -51.6472, -78.0017, 0.37", "82.6174, -51.6354, -79.7473, 0.37", "82.9857, -51.6085, -81.6743, 0.37", "83.2739, -51.5813, -82.7642, 0.37", "83.6259, -51.5269, -83.77, 0.37", "84.2967, -51.4306, -85.4494, 0.88", "85.0348, -51.3543, -87.1385, 0.29", "85.4943, -51.3299, -88.1049, 0.29", "86.3165, -51.3307, -89.7508, 0.81", "87.1034, -51.333, -91.3561, 0.51", "88.7692, -51.2911, -94.8558, 0.51", "89.1983, -51.2724, -95.8113, 0.29", "89.9324, -51.2318, -97.436, 0.51", "90.2243, -51.2079, -98.0678, 0.73", "90.9912, -51.1215, -99.7201, 0.44", "91.1916, -51.0892, -100.11, 0.81", "92.446, -50.7489, -102.172, 0.37", "92.6462, -50.6541, -102.541, 0.59", "92.9282, -50.4481, -103.132, 0.22", "93.4139, -49.9905, -104.118, 0.22", "93.6057, -49.7853, -104.427, 0.22", "93.9577, -49.3566, -104.934, 0.73", "95.1839, -47.5544, -106.476, 0.37", "95.5307, -46.9768, -106.95, 0.37", "95.9938, -46.0992, -107.617, 0.59", "96.3955, -45.2225, -108.251, 0.29", "96.7077, -44.4359, -108.88, 0.29", "96.9126, -43.8985, -109.336, 0.88", "97.3518, -42.7921, -110.273, 0.44", "97.5142, -42.4306, -110.623, 0.66", "97.8109, -41.8141, -111.484, 0.22", "98.2114, -41.1142, -112.616, 0.22", "98.4635, -40.7998, -113.214, 0.73", "98.6462, -40.6259, -113.583, 0.88", "99.1482, -40.2409, -114.396, 0.29", "101.019, -38.9339, -117.055, 0.29", "101.59, -38.5682, -117.768, 0.88", "102.61, -37.9158, -118.897, 0.37", "102.925, -37.7061, -119.238, 0.37", "103.569, -37.2712, -119.865, 0.07", "104.02, -36.9836, -120.274, 0.07", "104.761, -36.5995, -120.789, 0.29", "105.371, -36.3129, -121.253, 0.88", "106.727, -35.6759, -122.31, 0.07", "107.289, -35.4103, -122.79, 0.07", "109.193, -34.5485, -124.606, 0.88", "110.162, -34.1166, -125.623, 0.29", "111.394, -33.5472, -126.995, 0.81", "111.806, -33.3409, -127.503, 0.07", "112.727, -32.8392, -128.738, 0.88", "113.715, -32.2627, -130.152, 0.22", "114.348, -31.8493, -131.078, 0.44", "114.57, -31.6933, -131.412, 0.66", "115.494, -31.0571, -132.703, 0.29", "115.797, -30.8452, -133.102, 0.29", "116.425, -30.4072, -133.79, 0.59", "116.828, -30.1213, -134.168, 0.29", "117.26, -29.8454, -134.521, 0.29", "117.833, -29.5412, -134.945, 0.29", "118.81, -29.1569, -135.556, 1.18", "119.753, -28.8197, -136.365, 0.22", "120.502, -28.5576, -137.142, 0.22", "120.888, -28.4339, -137.571, 0.22", "121.316, -28.2977, -138.073, 0.22", "122.163, -27.9912, -139.153, 1.1", "124.121, -27.1105, -141.909, 0.07", "124.395, -26.9389, -142.376, 0.07", "124.679, -26.7099, -142.969, 0.07", "124.797, -26.5726, -143.291, 0.37", "125.032, -26.1336, -144.153, 0.22", "125.164, -25.7884, -144.737, 0.37", "125.468, -25.1634, -145.903, 0.37", "125.647, -24.7921, -146.84, 0.37", "125.741, -24.5719, -147.471, 0.37", "125.909, -24.2131, -148.582, 0.81", "126.124, -23.7961, -149.975, 0.37", "126.406, -23.2322, -151.97, 0.66", "126.849, -22.4697, -154.707, 0.37", "126.922, -22.3634, -155.118, 0.37" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "40.8316, -15.358, -8.63262, 0.29", "41.8939, -14.4958, -8.06028, 0.29", "43.1787, -13.4921, -7.67384, 0.29", "43.6089, -13.1892, -7.59793, 0.29", "44.1961, -12.8049, -7.52808, 0.44", "44.621, -12.5271, -7.49012, 0.51", "45.2, -12.1327, -7.46691, 0.95", "46.5601, -11.1796, -7.55708, 0.44", "47.6156, -10.4102, -7.7057, 0.44", "48.1655, -9.99132, -7.78438, 0.81", "48.6883, -9.60381, -7.83899, 0.81", "49.9422, -8.73075, -7.88983, 0.37", "50.3377, -8.48691, -7.87682, 0.59", "51.2414, -8.01973, -7.70102, 0.37", "51.9341, -7.74675, -7.49686, 0.37", "53.0283, -7.42957, -7.10081, 0.59", "53.915, -7.23851, -6.74131, 0.59", "54.8199, -7.10649, -6.32929, 0.37", "56.3619, -6.91488, -5.62153, 0.88", "57.3036, -6.80158, -5.18599, 0.44", "57.6575, -6.74012, -5.02024, 0.44", "58.3473, -6.56525, -4.6855, 0.59", "59.2129, -6.29608, -4.26883, 0.59", "59.9588, -6.04631, -3.89893, 0.37", "60.6214, -5.83794, -3.59112, 0.37", "61.6694, -5.54081, -3.09681, 0.37", "62.8698, -5.27456, -2.55081, 0.59", "63.752, -5.13572, -2.19384, 0.59", "65.5693, -4.92087, -1.57754, 0.37", "66.5737, -4.8432, -1.32157, 0.81", "66.9274, -4.82824, -1.25559, 0.81", "67.8606, -4.81977, -1.15077, 0.22", "68.8267, -4.82808, -1.09487, 0.22", "69.5967, -4.85165, -1.04364, 0.22", "70.7039, -4.92917, -0.895264, 0.22", "71.6073, -5.05484, -0.59251, 0.22", "72.0017, -5.14298, -0.396584, 0.22", "72.5573, -5.29907, -0.0553755, 0.29", "73.4276, -5.58869, 0.567304, 1.03", "74.7093, -6.10635, 1.59636, 0.73", "75.8655, -6.66084, 2.63672, 0.37", "76.3163, -6.89942, 3.05729, 0.59", "77.095, -7.32866, 3.82299, 1.1" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "16.7892, -28.1992, 19.0672, 0.44", "16.7318, -29.3309, 19.9991, 0.44", "16.6215, -30.2296, 20.612, 0.73", "16.5194, -30.9518, 21.0071, 0.44", "16.4033, -31.8566, 21.4152, 0.51", "16.3632, -32.1952, 21.5639, 0.66", "16.3085, -32.6848, 21.7636, 0.51", "16.2087, -33.3162, 21.9795, 0.44", "16.0835, -34.0703, 22.2565, 0.59", "15.9879, -34.6246, 22.4894, 0.22", "15.8242, -35.5816, 22.9037, 0.88", "15.6972, -36.3146, 23.2318, 0.37", "15.497, -37.4609, 23.7522, 0.44", "15.3716, -38.1506, 24.074, 0.44", "15.143, -39.2177, 24.5686, 0.37", "14.9595, -39.9476, 24.8991, 0.29", "14.7504, -40.6734, 25.2173, 0.29", "14.5022, -41.532, 25.6536, 0.29", "14.3524, -42.0924, 25.9512, 0.29", "14.1672, -42.835, 26.3776, 0.73", "13.9969, -43.5496, 26.827, 0.73", "13.6802, -44.5761, 27.5757, 0.15", "13.2049, -45.7722, 28.4988, 0.22", "13.0818, -46.043, 28.7086, 0.22", "12.8542, -46.5238, 29.0605, 0.22", "12.5889, -47.1264, 29.4635, 0.29", "11.9162, -48.8445, 30.4423, 0.07", "11.667, -49.6185, 30.7926, 0.15", "11.5207, -50.0314, 30.948, 0.15", "11.3365, -50.5614, 31.1434, 0.15", "11.1223, -51.3446, 31.4025, 0.15", "11.0429, -52.0546, 31.5795, 0.15", "11.2604, -52.8662, 31.5795, 0.15" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "16.7892, -28.1992, 19.0672, 0.37", "17.0649, -28.0166, 19.4923, 0.37", "17.8218, -27.5568, 20.6645, 0.66", "18.5088, -27.1773, 21.7076, 0.15", "19.0539, -26.9049, 22.5697, 0.07", "19.6012, -26.6607, 23.5046, 0.37", "20.293, -26.4287, 24.7798, 0.22", "21.0098, -26.2878, 26.2596, 0.22", "21.144, -26.2877, 26.541, 0.22", "21.5129, -26.3348, 27.3351, 0.22", "21.87, -26.4134, 28.1103, 0.44", "22.4113, -26.5246, 29.3017, 0.81", "23.1894, -26.5604, 30.9898, 0.15", "23.6852, -26.4623, 32.1896, 0.37", "23.8615, -26.3837, 32.6923, 0.15", "24.0747, -26.2434, 33.3736, 0.15", "24.2901, -26.0649, 34.1293, 0.59", "24.5408, -25.7685, 35.2333, 0.44", "24.7064, -25.4733, 36.3009, 0.44", "24.8443, -25.1981, 37.2065, 0.44", "25.0832, -24.9366, 38.0124, 0.44", "25.4026, -24.7206, 38.695, 0.44", "25.672, -24.6075, 39.1403, 0.44", "26.2132, -24.4489, 39.8507, 0.29", "26.7464, -24.3759, 40.4884, 0.29", "27.702, -24.3646, 41.595, 0.29", "28.4973, -24.4347, 42.5482, 0.29", "29.4055, -24.5767, 43.6649, 0.73", "29.6726, -24.6361, 44.0095, 0.37", "30.5454, -24.9032, 45.2222, 0.29", "31.04, -25.0936, 45.9777, 0.29", "31.128, -25.1379, 46.1166, 0.29", "31.6741, -25.0866, 47.0019, 0.15", "31.9029, -24.5833, 47.4296, 0.22", "32.2169, -23.8937, 47.9648, 0.22", "32.4445, -23.3183, 48.3765, 0.66", "32.577, -23.0159, 48.6393, 0.22", "33.1605, -22.2356, 49.6664, 0.22", "33.5201, -21.9201, 50.2059, 0.22", "33.9611, -21.5977, 50.781, 0.22", "34.4414, -21.2795, 51.4003, 0.22", "34.5597, -21.2022, 51.5689, 0.22", "34.9618, -20.8656, 52.2217, 0.22", "35.2828, -20.5183, 52.712, 0.22", "35.4564, -20.2779, 53.005, 0.29", "35.213, -20.8032, 53.5065, 0.29", "34.9506, -21.3538, 53.8859, 0.22", "34.6886, -21.8911, 54.2124, 0.22", "34.4282, -22.4017, 54.4731, 0.22", "34.0379, -23.1952, 54.8328, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-28.957, 30.9609, -57.2094, 0.44", "-28.5225, 31.0588, -58.3782, 0.44", "-28.2042, 31.1836, -59.577, 0.44", "-27.8822, 31.3751, -61.2639, 0.66", "-27.7207, 31.57, -62.9309, 0.66", "-27.7693, 31.6858, -64.1733, 0.81", "-27.9262, 31.7571, -65.1932, 0.81", "-28.3884, 31.8221, -66.638, 0.81", "-28.6319, 31.8449, -67.1749, 0.81", "-29.3518, 31.894, -68.4576, 0.44", "-30.5409, 31.9532, -70.295, 0.59", "-31.81, 31.9622, -72.1317, 1.03", "-32.537, 31.94, -73.2107, 1.03", "-33.0501, 31.9095, -74.0825, 0.66" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-28.957, 30.9609, -57.2094, 0.29", "-29.374, 30.887, -57.0709, 0.29", "-30.3259, 30.7181, -56.7549, 0.29", "-30.8998, 30.6162, -56.5643, 0.44", "-31.9975, 30.4215, -56.1999, 0.44", "-32.5809, 30.3179, -56.0062, 1.03", "-33.1381, 30.2191, -55.8212, 1.47" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "23.2134, 0.118136, -5.4901, 0.88", "25.1314, -0.290895, -5.21835, 0.88", "26.3434, -0.472117, -5.05233, 0.73", "27.667, -0.585591, -4.89138, 0.73", "28.43, -0.601863, -4.81494, 0.73", "29.3525, -0.569679, -4.73425, 0.88", "30.0111, -0.529434, -4.68231, 1.03", "30.5917, -0.431976, -4.64452, 1.03", "31.8227, -0.181433, -4.58055, 0.66", "33.4215, 0.168429, -4.52114, 0.44", "34.7576, 0.452, -4.50421, 0.66", "35.4041, 0.584366, -4.49511, 0.81", "36.2771, 0.7602, -4.48163, 1.1", "36.8534, 0.88572, -4.47172, 1.1" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "23.2134, 0.118136, -5.4901, 0.73", "23.7467, 1.29073, -4.98387, 0.73", "24.0358, 1.93579, -4.63924, 0.59", "24.3892, 2.69923, -4.20811, 0.59", "24.5828, 3.09299, -3.99023, 0.66", "24.974, 3.83681, -3.5968, 0.51", "25.4975, 4.79121, -3.14932, 0.51", "25.974, 5.69643, -2.78495, 0.51", "26.495, 6.70293, -2.48732, 0.37", "26.8807, 7.4852, -2.3652, 0.37", "27.226, 8.24469, -2.32324, 0.51", "27.6261, 9.27094, -2.35972, 0.66", "27.8883, 10.1389, -2.44587, 0.81", "28.117, 11.1565, -2.58046, 0.51", "28.3273, 12.5502, -2.76175, 0.44", "28.4035, 13.495, -2.86409, 0.44", "28.4377, 14.4547, -2.94036, 0.44", "28.4675, 15.9934, -3.00876, 0.88", "28.5031, 16.8064, -3.0221, 0.88", "28.5842, 17.6954, -3.02592, 1.25", "28.7935, 18.7447, -3.04062, 0.95", "29.133, 19.7411, -3.0764, 0.29", "29.3468, 20.1573, -3.10124, 0.29", "29.8335, 20.8643, -3.16128, 0.29", "30.329, 21.4826, -3.22265, 0.81", "31.3305, 22.5728, -3.33745, 0.51", "31.9301, 23.1753, -3.39969, 0.51", "32.2617, 23.5151, -3.43842, 0.73", "32.5513, 23.8518, -3.4745, 0.51", "32.9074, 24.3434, -3.51998, 0.95", "33.5798, 25.4472, -3.60162, 0.66", "34.0572, 26.3693, -3.64952, 0.51", "34.3438, 26.9655, -3.68094, 0.51", "34.8237, 28.0208, -3.73431, 0.51", "35.2281, 28.9913, -3.79704, 0.51", "35.5021, 29.7514, -3.85414, 0.51", "35.6661, 30.3164, -3.8992, 0.81", "35.7553, 30.6683, -3.92606, 0.95", "35.9391, 31.4381, -3.97801, 0.95", "36.1129, 32.2275, -4.03757, 0.95", "36.1802, 32.5903, -4.06501, 0.95", "36.3498, 33.7923, -4.1481, 0.51", "36.4068, 34.5439, -4.19149, 0.22", "36.4061, 34.9221, -4.20735, 0.66", "36.3835, 35.3832, -4.21942, 0.66", "36.3554, 36.2241, -4.25059, 0.22", "36.3506, 36.8207, -4.24233, 0.73", "36.3681, 37.45, -4.2311, 0.73", "36.4358, 38.2701, -4.26956, 0.44", "36.5591, 39.1671, -4.35121, 0.73", "36.7493, 40.1228, -4.49173, 0.73", "37.1788, 41.606, -4.81915, 0.37", "37.4855, 42.5029, -5.06094, 0.15", "37.9905, 43.9127, -5.48218, 0.81", "38.1836, 44.4645, -5.65177, 0.51", "38.4395, 45.2474, -5.95074, 0.29", "38.817, 46.5173, -6.49383, 0.29", "38.9523, 47.0384, -6.73507, 0.51", "39.1538, 47.9108, -7.08624, 0.51", "39.3809, 49.0248, -7.4712, 0.22", "39.6317, 50.6771, -8.00664, 1.03", "39.6745, 51.182, -8.14828, 1.03", "39.7188, 52.3262, -8.4314, 0.37", "39.7692, 53.1427, -8.6194, 0.37", "39.8515, 53.8663, -8.76813, 0.37", "40.0205, 54.8386, -8.9227, 0.37", "40.2805, 55.7857, -8.99641, 0.37", "40.449, 56.1803, -9.03104, 0.59", "40.8452, 56.8554, -9.09666, 0.22", "41.3816, 57.6545, -9.17051, 0.22", "41.7408, 58.1279, -9.20807, 0.37", "42.1734, 58.6471, -9.24419, 0.37", "42.6987, 59.2389, -9.31861, 0.15", "43.0336, 59.6316, -9.33319, 0.15", "43.6084, 60.3098, -9.29163, 0.22", "43.847, 60.5306, -9.26166, 0.22", "44.2379, 60.7373, -9.22199, 0.22", "45.0061, 61.0286, -9.13694, 0.22", "46.4342, 61.3397, -8.97515, 0.22", "47.0895, 61.424, -8.90094, 0.22", "48.1986, 61.4503, -8.77065, 0.22", "49.4614, 61.4126, -8.61325, 0.15" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-10.2191, -5.73735, 22.8879, 0.37", "-9.35092, -5.69154, 23.5618, 0.37", "-8.3718, -5.28044, 24.2562, 0.37", "-7.93515, -5.05725, 24.5261, 0.37", "-7.28325, -4.75557, 24.8751, 0.37", "-6.45332, -4.42992, 25.2832, 0.37", "-5.73576, -4.18675, 25.6301, 0.37", "-4.48499, -3.7381, 26.2286, 0.51", "-3.88238, -3.55718, 26.5034, 0.07", "-2.95984, -3.56116, 26.9013, 0.59", "-2.44764, -3.83505, 27.1444, 0.95", "-2.15202, -4.07311, 27.302, 0.95", "-1.15606, -4.96417, 27.9299, 0.37", "-0.706316, -5.33994, 28.3283, 0.37", "-0.230042, -5.64466, 28.7874, 0.51", "0.399719, -5.87247, 29.4485, 0.73", "0.943374, -5.95861, 30.0482, 0.44", "1.71398, -5.97443, 30.9879, 0.44", "2.93285, -5.84922, 32.6639, 0.73", "3.3737, -5.78933, 33.359, 0.59", "4.21349, -5.73409, 34.911, 0.59", "4.52434, -5.7578, 35.5148, 0.59", "4.99049, -5.8681, 36.4088, 0.59", "5.28871, -5.96762, 36.9469, 0.59", "5.80557, -6.15567, 37.7066, 0.59", "6.6709, -6.48018, 38.7262, 0.37", "7.49367, -6.80871, 39.3952, 0.29", "8.35857, -7.17582, 39.9607, 0.29", "8.90434, -7.40934, 40.2576, 0.29", "9.53035, -7.68694, 40.5643, 0.29", "10.11, -7.90975, 40.8064, 0.29", "10.6686, -8.09238, 41.0121, 0.29", "11.4096, -8.53356, 41.3415, 0.22", "11.6538, -8.9201, 41.4751, 0.22", "11.8081, -10.061, 41.7642, 0.22" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-10.2191, -5.73735, 22.8879, 0.66", "-10.4426, -5.34478, 23.8301, 0.66", "-10.6491, -4.69074, 24.9435, 0.44", "-10.7603, -4.13738, 25.6966, 0.44", "-10.8577, -3.696, 26.2241, 0.81", "-11.042, -2.99141, 27.0624, 0.44", "-11.2396, -2.42374, 27.7416, 0.44", "-11.3892, -1.96664, 28.2541, 0.51", "-11.5997, -1.37591, 28.9219, 0.73", "-11.8477, -0.937183, 29.5273, 0.44", "-12.311, -0.596589, 30.321, 0.44", "-12.7829, -0.674094, 30.8901, 0.59", "-13.1771, -0.982945, 31.2639, 0.59", "-13.8097, -1.60436, 31.797, 0.59", "-14.3473, -2.13043, 32.2158, 0.88", "-14.583, -2.33868, 32.3992, 0.88", "-15.2322, -2.81984, 32.9622, 0.66", "-16.1382, -3.31965, 33.8896, 0.37", "-16.8361, -3.54289, 34.674, 1.03", "-17.4892, -3.56512, 35.5305, 0.66", "-18.2151, -3.38891, 36.7168, 0.81", "-18.8167, -3.03195, 38.0569, 0.51", "-19.0207, -2.74738, 38.8558, 0.66", "-19.0469, -2.46846, 39.5896, 1.03", "-18.8364, -2.26025, 40.4642, 0.44", "-18.5234, -2.38818, 40.9712, 0.44", "-18.0404, -2.89348, 41.5607, 0.44", "-17.6044, -3.60153, 42.0803, 0.59", "-17.0742, -4.6685, 42.7194, 0.37", "-16.7067, -5.54609, 43.1761, 0.37", "-16.4889, -6.20444, 43.4655, 0.51", "-16.2074, -7.38303, 43.9362, 0.51", "-16.0932, -8.14174, 44.2079, 1.32", "-16.0739, -8.5918, 44.3627, 1.32", "-16.1391, -9.02105, 44.5215, 1.03", "-16.7479, -10.0884, 44.898, 0.29", "-17.2485, -10.4964, 45.0341, 0.22", "-17.7111, -10.7614, 45.1099, 0.22", "-18.3434, -11.1045, 45.1997, 0.22", "-19.2112, -11.5223, 45.3146, 0.22", "-20.3777, -12.021, 45.4557, 0.22", "-20.9629, -12.2446, 45.5163, 0.22", "-21.8461, -12.6672, 45.6134, 0.88", "-22.5453, -13.0942, 45.6899, 0.37" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.42075, 48.1484, -20.4958, 0.44", "2.56661, 49.0201, -20.4776, 0.44", "2.64392, 49.5242, -20.4811, 0.44", "2.73954, 50.2578, -20.4945, 0.44", "2.83153, 51.1498, -20.5708, 0.37", "2.95151, 52.3446, -20.7595, 0.37", "3.13376, 53.7504, -21.0294, 0.37", "3.26018, 54.4161, -21.1914, 0.37", "3.54439, 55.4128, -21.5602, 0.59", "3.94623, 56.5107, -22.1298, 0.37", "4.25174, 57.2612, -22.6238, 0.59", "4.48424, 57.8916, -23.118, 0.51", "4.85412, 58.9582, -24.0179, 0.29", "5.16885, 59.9589, -24.8794, 0.29", "5.335, 60.5686, -25.3854, 0.29", "5.46058, 61.1709, -25.7924, 0.37", "5.5845, 62.0053, -26.2617, 0.37", "5.67187, 62.7016, -26.5833, 0.37", "5.75839, 63.3758, -26.8586, 0.37", "5.95349, 64.4711, -27.3087, 0.81", "6.24428, 65.5006, -27.7749, 0.59", "6.62288, 66.4331, -28.2259, 1.25", "7.07299, 67.2919, -28.6531, 1.25", "7.72864, 68.3926, -29.2798, 0.51", "8.3877, 69.4498, -29.9375, 0.59", "9.09964, 70.534, -30.6952, 0.29", "9.75596, 71.4782, -31.4114, 0.37", "10.3952, 72.3724, -32.1224, 0.59", "11.1244, 73.4, -33.0243, 0.29", "11.5907, 74.1012, -33.6904, 0.66", "11.9762, 74.7627, -34.3938, 0.29", "12.0851, 74.9947, -34.6725, 0.29", "12.2507, 75.4119, -35.2337, 0.29", "12.5474, 76.2638, -36.2992, 0.29", "12.8284, 77.0416, -37.0973, 0.29", "12.9401, 77.3147, -37.3662, 0.29", "13.2186, 77.9428, -37.9327, 0.29", "13.4646, 78.3737, -38.3072, 0.29", "14.2759, 79.3892, -39.224, 0.29", "14.8221, 79.9032, -39.7432, 0.37", "15.6593, 80.5867, -40.4924, 0.37", "15.8387, 80.7309, -40.6688, 0.37", "16.4344, 81.2312, -41.3475, 0.51", "17.2037, 81.8895, -42.2791, 0.44", "17.9058, 82.4767, -43.174, 0.66", "18.1733, 82.711, -43.5191, 0.66", "18.977, 83.4466, -44.5466, 0.73", "19.8783, 84.2251, -45.6495, 0.37", "20.6656, 84.8382, -46.5362, 0.44", "21.5462, 85.3822, -47.3286, 0.44", "22.1526, 85.6363, -47.7963, 0.44", "22.6124, 85.75, -48.148, 0.73", "23.6541, 85.8964, -48.9942, 0.37", "24.6154, 85.9894, -49.8403, 0.51", "25.5112, 86.086, -50.7067, 0.22", "26.7864, 86.2721, -51.9744, 0.88", "28.5404, 86.5769, -53.7119, 0.66", "30.0976, 86.899, -55.26, 0.29", "30.8609, 87.0947, -55.9883, 0.29", "31.9408, 87.3896, -56.9471, 0.29", "32.9597, 87.6782, -57.7437, 0.66", "34.088, 87.9842, -58.395, 0.29", "34.6293, 88.109, -58.6134, 0.44", "36.0567, 88.3492, -59.0747, 0.29", "37.2913, 88.4745, -59.4496, 0.29", "37.8547, 88.5063, -59.6215, 0.29", "38.5544, 88.5298, -59.8743, 0.29", "39.53, 88.5639, -60.2862, 0.29", "40.2194, 88.5622, -60.6056, 0.29", "40.9158, 88.486, -60.9778, 0.51" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "2.42075, 48.1484, -20.4958, 0.37", "1.82761, 49.3081, -20.6382, 0.37", "1.52417, 49.9014, -20.7111, 0.37", "1.09204, 50.7463, -20.8148, 0.81", "0.980699, 50.964, -20.8416, 0.88" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "15.5101, 36.9098, -14.1491, 0.66", "15.6287, 37.4945, -13.8123, 0.66", "15.7339, 38.428, -13.3538, 0.66", "15.828, 39.5915, -12.7975, 0.44", "15.9266, 40.6092, -12.3386, 0.29", "16.0163, 41.5357, -11.9209, 0.29", "16.0854, 42.2499, -11.5989, 0.29", "16.1477, 42.9394, -11.3228, 0.15", "16.172, 43.7352, -11.0841, 0.15", "16.1067, 44.5509, -10.8924, 0.15" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "15.5101, 36.9098, -14.1491, 0.51", "16.7899, 37.4496, -14.7301, 0.51", "18.5447, 38.2251, -15.4773, 0.51", "19.9515, 38.8713, -16.0145, 0.66", "21.118, 39.4158, -16.4212, 0.51", "22.5615, 40.0665, -16.8521, 0.73", "23.4405, 40.4458, -17.0805, 1.18", "24.1021, 40.722, -17.1877, 1.18", "25.4205, 41.224, -17.2772, 0.73", "26.0178, 41.4232, -17.2746, 0.95", "27.0235, 41.6751, -17.2333, 1.03", "27.6731, 41.7877, -17.2022, 1.03", "29.3324, 41.9651, -17.1736, 0.44", "30.1545, 42.0086, -17.2045, 0.44", "31.2036, 42.015, -17.2974, 0.88", "32.6914, 41.9828, -17.5856, 0.44", "33.5097, 41.9648, -17.8668, 0.44", "34.1854, 41.9534, -18.177, 0.44", "35.112, 41.9789, -18.8802, 0.44", "35.4814, 42.0186, -19.2296, 0.88", "36.625, 42.2236, -20.4491, 0.29", "37.5127, 42.454, -21.4034, 0.29", "37.8683, 42.5668, -21.7873, 0.88", "39.9525, 43.3935, -24.0481, 0.44", "40.609, 43.7428, -24.7455, 0.66", "41.0237, 44.0121, -25.1826, 0.66", "41.8763, 44.6679, -26.0044, 0.15", "42.7283, 45.3993, -26.754, 0.15", "43.2852, 45.9287, -27.2718, 0.44", "44.2203, 46.8992, -28.1055, 0.37", "44.9054, 47.6065, -28.8015, 0.37", "45.3756, 48.0846, -29.3044, 0.37", "45.8468, 48.5398, -29.8206, 0.37", "47.2722, 49.7735, -31.2643, 0.73", "47.6779, 50.0872, -31.6799, 0.73", "48.6393, 50.7597, -32.5938, 0.37", "49.0623, 51.0466, -32.9831, 0.37", "49.5299, 51.3443, -33.4097, 0.37", "50.4678, 51.9038, -34.237, 1.32", "51.0399, 52.2457, -34.7129, 1.32", "51.8019, 52.7319, -35.4131, 1.03", "52.9121, 53.5048, -36.5076, 0.15", "53.2353, 53.7491, -36.8897, 0.73", "53.6571, 54.0743, -37.4225, 0.59", "54.2549, 54.5063, -38.1806, 0.59", "54.739, 54.8431, -38.8159, 0.59", "55.2094, 55.1619, -39.4236, 0.59", "56.4996, 56.011, -40.8757, 0.29", "57.0556, 56.3385, -41.4926, 0.51", "57.6241, 56.6394, -42.0984, 0.22", "58.4483, 57.0519, -42.9604, 0.22", "59.1637, 57.3606, -43.7184, 0.59", "59.7695, 57.5742, -44.3588, 0.88", "61.3209, 57.995, -46.0831, 0.51", "61.4889, 58.0304, -46.2794, 0.51", "62.0348, 58.1436, -46.9494, 0.81", "63.1835, 58.3969, -48.3452, 0.51", "63.7783, 58.5401, -49.057, 0.73", "64.8041, 58.8098, -50.2524, 0.29", "65.827, 59.0726, -51.3821, 0.88", "67.4798, 59.4795, -53.1732, 0.44", "68.2467, 59.6664, -53.9842, 0.44", "68.8962, 59.8719, -54.6784, 0.73", "69.8701, 60.2492, -55.7679, 0.22", "70.8312, 60.7089, -56.8461, 0.51" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-33.3219, 5.43862, 0.441766, 0.44", "-34.7119, 4.92527, 0.139778, 0.44", "-35.946, 4.5993, -0.0980849, 0.29", "-37.0297, 4.31304, -0.306977, 0.22", "-37.4532, 4.20118, -0.388601, 0.22", "-38.5357, 3.91526, -0.597248, 0.22", "-39.239, 3.72948, -0.732817, 0.22", "-40.2822, 3.5799, -0.960704, 0.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-33.3219, 5.43862, 0.441766, 0.73", "-34.218, 5.47865, 0.576239, 0.73", "-35.4799, 5.46233, 0.746126, 0.44", "-36.7913, 5.31034, 0.872276, 0.81", "-37.3751, 5.19963, 0.91048, 0.81", "-38.1058, 5.02436, 0.933631, 0.51", "-38.904, 4.82094, 0.943736, 0.73", "-39.4078, 4.66632, 0.94792, 0.81", "-40.581, 4.3113, 0.999643, 0.59", "-41.4899, 4.09419, 1.06003, 0.59", "-42.3629, 3.99606, 1.16613, 0.59", "-42.816, 4.03469, 1.26265, 0.73", "-43.7487, 4.37682, 1.60837, 0.73", "-44.761, 5.01954, 2.15748, 0.88", "-45.1975, 5.37344, 2.44251, 1.03", "-45.7423, 5.86181, 2.84609, 1.03", "-46.4823, 6.55063, 3.43739, 0.66", "-47.3934, 7.42663, 4.19229, 0.66", "-48.1378, 8.19998, 4.87082, 0.59", "-48.5018, 8.60697, 5.24161, 0.66", "-49.0539, 9.24081, 5.87998, 0.51", "-49.5825, 9.86177, 6.53605, 0.37", "-49.9686, 10.2702, 6.97044, 0.37", "-50.7601, 11.0054, 7.75315, 0.37", "-51.2348, 11.4064, 8.16546, 0.37", "-51.7401, 11.7962, 8.5434, 0.37", "-52.1724, 12.0988, 8.7904, 0.88", "-53.3934, 12.8984, 9.28677, 0.29", "-54.3147, 13.4902, 9.54995, 0.66", "-54.8746, 13.8561, 9.65353, 0.66", "-55.3917, 14.2246, 9.71676, 0.66", "-56.1846, 14.8596, 9.76869, 0.66", "-57.1195, 15.7374, 9.81379, 0.37", "-57.5846, 16.2546, 9.80039, 0.37", "-58.0426, 16.7991, 9.74772, 0.37", "-58.4699, 17.3092, 9.68104, 0.37", "-59.2275, 18.1954, 9.53824, 0.95", "-59.8862, 18.9561, 9.39248, 0.29", "-60.6372, 19.8642, 9.19281, 0.29", "-61.1715, 20.5669, 9.03381, 0.51", "-61.5058, 21.0799, 8.92355, 0.51", "-61.7507, 21.4998, 8.84772, 0.22", "-61.9764, 21.9088, 8.78533, 0.22", "-62.3606, 22.5576, 8.70535, 0.22", "-62.7127, 23.0788, 8.67716, 0.66", "-63.2928, 23.7119, 8.62232, 0.29", "-63.7788, 24.1079, 8.56372, 0.29", "-64.5155, 24.5903, 8.41739, 0.73", "-64.9616, 24.8377, 8.2944, 0.51", "-65.4117, 25.065, 8.12585, 0.81", "-66.4153, 25.6182, 7.63711, 0.37", "-66.9218, 25.99, 7.32518, 0.37", "-67.5057, 26.6137, 6.88172, 0.37", "-67.8151, 27.0861, 6.5955, 0.37", "-68.0887, 27.6527, 6.29844, 0.37", "-68.3608, 28.4161, 5.93054, 0.44", "-68.6748, 29.5286, 5.40642, 0.44", "-68.8702, 30.3302, 5.00823, 0.44", "-69.0613, 31.2011, 4.54389, 0.44", "-69.2673, 32.1566, 3.98444, 0.51", "-69.5031, 33.2303, 3.3135, 0.51", "-69.7875, 34.6087, 2.40694, 0.44", "-70.0485, 36.0796, 1.43946, 0.44", "-70.1902, 37.0649, 0.782804, 0.73", "-70.3047, 37.9175, 0.211218, 0.51", "-70.4283, 38.8829, -0.430315, 0.37", "-70.577, 40.1493, -1.22883, 0.37", "-70.6619, 41.1065, -1.77608, 0.73", "-70.7839, 42.5188, -2.46112, 0.81" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "77.095, -7.32866, 3.82299, 0.29", "77.5387, -6.57792, 4.90853, 0.29", "78.0079, -5.79361, 6.02948, 0.22", "78.2319, -5.43194, 6.58679, 0.51", "78.4501, -5.13653, 7.08351, 0.51", "78.7995, -4.79848, 7.70489, 0.51", "79.1889, -4.53854, 8.27321, 0.51", "79.5142, -4.42852, 8.62549, 0.51", "79.9881, -4.38736, 9.03811, 0.51", "80.5717, -4.42775, 9.51792, 0.51", "81.5744, -4.65318, 10.4222, 0.37", "82.3809, -4.94251, 11.312, 0.22", "82.8945, -5.16439, 11.9892, 0.22", "83.5892, -5.45011, 13.0632, 0.22", "84.0336, -5.58742, 13.8198, 0.22", "84.6419, -5.67705, 15.0013, 0.22", "85.1175, -5.61137, 16.0243, 0.22", "85.3945, -5.49917, 16.5292, 0.51", "85.8862, -5.27195, 17.3722, 0.37", "86.2828, -5.13788, 17.9345, 0.22", "86.9197, -5.01645, 18.6745, 0.29", "87.9677, -4.93589, 19.705, 0.29", "88.9476, -4.99996, 20.6066, 0.29", "89.5609, -5.12263, 21.1616, 1.03", "91.2188, -5.65407, 22.6051, 0.44", "92.1245, -6.02173, 23.3579, 0.29", "92.6608, -6.26273, 23.7977, 0.51", "93.7884, -6.77741, 24.6453, 0.29", "94.4792, -7.0609, 25.1207, 0.15", "95.2756, -7.32283, 25.6281, 0.29", "96.3444, -7.53786, 26.3126, 0.29", "97.3368, -7.60925, 27.0302, 0.29", "97.5466, -7.58857, 27.1928, 0.29", "98.2521, -7.31855, 27.695, 0.29", "98.6164, -7.07364, 27.9732, 0.59", "99.5372, -6.16748, 28.68, 0.15", "99.7042, -5.96722, 28.8068, 0.44", "100.08, -5.5132, 29.0975, 0.22", "100.686, -4.82166, 29.6321, 0.22", "101.611, -3.80803, 30.555, 0.22", "102.049, -3.39781, 30.9878, 0.44", "102.597, -2.95834, 31.5153, 0.44", "102.93, -2.71335, 31.8347, 0.44", "103.471, -2.36457, 32.3146, 0.07", "103.825, -2.14315, 32.6073, 0.07", "104.181, -1.94832, 32.828, 0.15", "104.521, -1.8111, 33.0395, 0.15", "104.949, -1.67178, 33.2922, 0.15", "105.957, -1.52032, 33.885, 0.15", "106.651, -1.54836, 34.2956, 0.59", "107.407, -1.62325, 34.7264, 0.59", "108.571, -1.77666, 35.3838, 0.15", "109.03, -1.84876, 35.6094, 0.59", "110.608, -2.13571, 36.2825, 0.29", "111.256, -2.27253, 36.4975, 1.47", "112.628, -2.55628, 36.8596, 0.15", "113.478, -2.7065, 37.0224, 0.15", "114.476, -2.852, 37.1772, 1.18", "114.906, -2.9127, 37.2511, 1.18", "116.149, -3.10428, 37.5141, 0.22", "117.174, -3.35287, 37.796, 0.22", "117.607, -3.52102, 37.9041, 0.22", "118.181, -3.76344, 38.0175, 0.22", "118.604, -3.93558, 38.1012, 0.22", "119.269, -4.17079, 38.1947, 0.22", "119.95, -4.31548, 38.2266, 0.22", "121.37, -4.49728, 38.1229, 0.22", "122.044, -4.53972, 38.013, 0.22", "122.494, -4.54, 37.8783, 0.22", "122.697, -4.52755, 37.7923, 0.66", "123.405, -4.4217, 37.3882, 0.44" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "77.095, -7.32866, 3.82299, 0.22", "77.2158, -5.90618, 3.68864, 0.22", "77.3378, -5.19716, 3.50187, 0.59", "77.481, -4.4217, 3.26358, 0.15", "77.6493, -3.53405, 2.98152, 0.66", "77.7515, -2.97898, 2.80963, 0.29", "77.8604, -2.35053, 2.62606, 0.66", "78.1866, -0.630068, 2.03981, 0.15", "78.3168, 0.198797, 1.76538, 0.15", "78.3584, 0.557719, 1.65934, 0.29", "78.4083, 1.26639, 1.4914, 0.07", "78.4516, 2.05558, 1.31423, 0.37", "78.4724, 2.95917, 1.14392, 0.15", "78.4493, 3.62036, 1.07838, 0.37", "78.4155, 4.49424, 0.980434, 0.07", "78.3778, 5.23132, 0.892237, 0.37" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-33.0501, 31.9095, -74.0825, 0.44", "-33.5594, 32.1527, -75.1054, 0.44", "-34.2959, 32.3839, -76.2712, 0.59", "-35.0505, 32.6007, -77.4014, 0.44", "-35.5588, 32.7706, -78.1845, 0.44", "-35.9926, 32.9425, -78.8569, 0.59", "-36.56, 33.2114, -79.7681, 0.59", "-37.016, 33.4302, -80.4683, 0.44", "-37.5675, 33.7188, -81.2625, 0.73", "-38.0509, 33.9777, -81.992, 0.73", "-38.2975, 34.1016, -82.3709, 0.95", "-38.8618, 34.2732, -83.1992, 0.95", "-39.419, 34.3194, -83.9006, 0.37", "-39.8478, 34.2669, -84.3996, 0.37", "-41.0712, 33.9366, -85.7625, 0.95", "-41.5595, 33.7396, -86.3378, 0.95", "-42.7524, 33.0921, -87.8794, 0.66", "-43.2607, 32.7381, -88.5621, 0.66", "-43.9912, 32.1092, -89.5943, 0.66", "-44.3657, 31.7001, -90.2688, 0.66", "-44.6886, 31.2253, -91.0449, 0.66", "-44.8582, 30.8868, -91.6904, 0.66", "-44.9366, 30.6113, -92.4157, 0.66", "-44.9811, 30.48, -93.0983, 0.73", "-45.1567, 30.3403, -94.8535, 0.59", "-45.2002, 30.3373, -95.0931, 0.59", "-45.5108, 30.3964, -96.2649, 0.59", "-46.0405, 30.5917, -97.9446, 0.59", "-46.6384, 30.9058, -99.6365, 0.81", "-46.8986, 31.0673, -100.221, 0.81", "-47.3125, 31.3372, -100.885, 0.22", "-47.8464, 31.7059, -101.611, 0.22", "-48.1005, 31.8826, -101.88, 0.22", "-48.3968, 32.081, -102.15, 0.22", "-48.998, 32.441, -102.712, 0.66", "-49.5635, 32.6968, -103.392, 0.44", "-50.1695, 32.8312, -104.228, 0.73", "-50.2682, 32.7981, -104.422, 0.73", "-50.9459, 32.429, -105.81, 0.37", "-51.3234, 32.1798, -106.56, 0.07", "-51.7785, 31.8082, -107.5, 0.88", "-52.0219, 31.5618, -108.026, 0.88", "-53.5699, 29.8612, -111.358, 0.44", "-53.8844, 29.5102, -112.023, 0.29", "-54.1226, 29.2639, -112.509, 0.29", "-54.6628, 28.7513, -113.63, 0.29", "-55.0408, 28.3949, -114.41, 0.29", "-55.5009, 27.9844, -115.381, 0.88", "-56.4124, 27.2492, -117.207, 0.22", "-57.0825, 26.7558, -118.644, 0.81", "-58.0211, 26.1835, -120.639, 0.51", "-58.3101, 26.032, -121.23, 0.66", "-59.0244, 25.701, -122.699, 0.66", "-59.3153, 25.5711, -123.354, 0.37", "-59.8813, 25.3508, -124.594, 0.37", "-60.3594, 25.1499, -125.537, 0.37", "-60.8161, 24.9562, -126.297, 0.73", "-61.4912, 24.6653, -127.335, 0.59", "-62.7313, 24.1085, -129.022, 0.37", "-63.1377, 23.9202, -129.53, 0.81", "-63.6047, 23.7051, -130.046, 0.44", "-65.0565, 23.0085, -131.638, 0.44", "-65.4422, 22.8119, -132.133, 0.44", "-65.9257, 22.5351, -132.793, 0.44", "-66.2715, 22.3328, -133.278, 0.44", "-66.5379, 22.1908, -133.695, 0.44", "-67.3092, 21.8118, -134.993, 0.81", "-68.8145, 21.0434, -137.821, 0.59", "-69.1455, 20.847, -138.453, 0.29", "-69.5002, 20.6218, -139.121, 0.37", "-70.0615, 20.2811, -140.066, 0.37", "-70.3837, 20.0962, -140.526, 0.37", "-71.3747, 19.6244, -141.624, 0.37", "-72.727, 19.0299, -142.85, 0.37", "-73.1268, 18.8594, -143.195, 0.37", "-73.8476, 18.5615, -143.76, 0.88", "-74.4742, 18.3283, -144.195, 1.18", "-76.6893, 17.6311, -145.549, 0.37", "-77.1956, 17.4934, -145.819, 0.59", "-77.679, 17.3714, -146.063, 0.59", "-78.2545, 17.2063, -146.346, 0.59", "-79.4201, 16.8093, -146.868, 0.07", "-80.3225, 16.4146, -147.222, 0.59", "-81.0896, 15.9706, -147.476, 0.29", "-81.6823, 15.5955, -147.699, 0.29", "-82.3122, 15.2121, -148.054, 0.44", "-82.9835, 14.8321, -148.516, 0.51", "-83.6708, 14.4864, -149.029, 0.51", "-84.1245, 14.2806, -149.415, 0.51", "-85.0467, 13.8894, -150.303, 0.29", "-86.9171, 13.1328, -152.381, 0.66", "-87.2396, 13.0017, -152.774, 0.37", "-87.7172, 12.8244, -153.391, 0.51", "-88.1893, 12.6672, -154.014, 0.29", "-88.8862, 12.4492, -154.961, 0.29", "-89.4892, 12.2279, -155.766, 0.29", "-89.8083, 12.0165, -156.14, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-33.0501, 31.9095, -74.0825, 0.29", "-34.573, 32.0029, -74.4325, 0.29", "-35.1503, 32.0355, -74.5494, 0.29", "-36.4427, 32.0259, -74.8189, 0.73", "-37.5282, 31.9491, -75.0384, 0.73", "-38.5323, 31.8283, -75.2339, 0.44", "-39.3873, 31.6958, -75.3944, 0.66", "-40.4783, 31.4599, -75.5706, 1.1", "-42.2449, 31.0287, -75.833, 0.44", "-43.2459, 30.7736, -75.99, 0.44", "-43.891, 30.625, -76.1145, 0.44", "-44.3032, 30.5626, -76.2217, 0.44", "-44.7233, 30.5538, -76.352, 0.44", "-45.2629, 30.6318, -76.5345, 0.44", "-46.396, 30.9816, -76.9032, 0.44", "-47.2534, 31.2713, -77.1519, 0.44", "-48.2522, 31.5963, -77.402, 0.88", "-49.3636, 31.9288, -77.6289, 0.51", "-49.9364, 32.0785, -77.7204, 0.51", "-51.168, 32.3542, -77.8552, 1.18", "-52.5359, 32.6405, -77.9387, 0.59", "-53.3263, 32.8318, -77.9721, 0.59", "-54.4923, 33.2039, -77.9939, 0.59", "-55.1792, 33.49, -78.0091, 0.37", "-56.2157, 34.0045, -78.0344, 0.51", "-57.2502, 34.6194, -78.0624, 0.37", "-58.5788, 35.5335, -78.1007, 0.22", "-59.8205, 36.4875, -78.1367, 0.22", "-60.8382, 37.3833, -78.2462, 0.51", "-61.1319, 37.6741, -78.3034, 0.51", "-61.436, 38.0157, -78.3869, 0.51", "-61.6946, 38.3411, -78.4986, 0.51", "-62.0416, 38.8196, -78.7236, 0.66", "-63.0964, 40.3206, -79.5577, 0.66", "-63.3437, 40.6676, -79.7564, 0.66", "-63.8364, 41.2922, -80.0913, 0.07", "-64.5148, 42.096, -80.481, 0.07", "-64.8769, 42.5107, -80.6468, 0.59", "-65.4402, 43.0835, -80.8029, 0.37", "-65.8388, 43.4474, -80.8373, 0.51", "-66.3537, 43.8921, -80.8933, 0.29", "-66.5859, 44.0799, -80.9217, 0.29", "-66.8969, 44.3293, -80.9444, 0.37", "-67.5555, 44.8797, -81.0021, 0.22", "-67.9455, 45.2158, -81.0405, 0.59", "-68.6578, 45.7971, -81.1105, 0.22", "-69.126, 46.1255, -81.1693, 0.22", "-69.5474, 46.3725, -81.2276, 0.22", "-70.1153, 46.6335, -81.3078, 0.22", "-70.5511, 46.7852, -81.3639, 0.22", "-71.1864, 46.9515, -81.4301, 0.66", "-72.0568, 47.148, -81.505, 0.37", "-72.492, 47.2361, -81.5413, 0.66", "-73.3611, 47.4142, -81.6133, 0.66", "-74.6193, 47.7005, -81.7104, 0.15", "-75.5834, 47.9681, -81.7766, 0.15", "-75.9912, 48.1132, -81.8167, 0.66", "-76.2636, 48.2305, -81.8484, 0.66", "-76.984, 48.5628, -81.9581, 0.66", "-77.7621, 48.9258, -82.0521, 0.07", "-78.103, 49.072, -82.0806, 0.07", "-79.1355, 49.4826, -82.1222, 0.81", "-79.5093, 49.6229, -82.1219, 0.73", "-80.4131, 49.9763, -82.0744, 0.37", "-81.5838, 50.4465, -81.9694, 0.22", "-82.116, 50.6678, -81.9048, 0.73", "-82.7405, 50.9233, -81.8112, 0.37", "-83.474, 51.1823, -81.6556, 0.15", "-84.0823, 51.3905, -81.5337, 0.15", "-84.5122, 51.5361, -81.4606, 0.15", "-84.8654, 51.6352, -81.4228, 0.15", "-85.3125, 51.7194, -81.3753, 0.15", "-86.5651, 51.8515, -81.26, 0.07", "-87.1294, 51.8934, -81.2054, 0.07", "-87.6574, 51.9294, -81.1547, 0.66", "-88.6883, 52.0235, -81.0461, 0.29", "-89.3537, 52.1135, -80.9806, 0.66", "-90.7509, 52.3932, -80.8632, 0.15", "-91.6939, 52.6546, -80.8055, 0.22", "-91.8527, 52.7001, -80.7949, 0.73", "-92.3572, 52.8666, -80.7583, 0.22", "-92.938, 53.1125, -80.7111, 0.59", "-93.7468, 53.5306, -80.6436, 0.15", "-94.1464, 53.7885, -80.6157, 0.59" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "36.8534, 0.88572, -4.47172, 0.37", "37.4925, -0.00881886, -4.90795, 0.37", "38.0985, -0.894217, -5.27423, 0.37", "38.6666, -1.72417, -5.61756, 0.37", "39.1124, -2.37556, -5.88703, 0.07", "39.3113, -2.66608, -6.00722, 0.66", "39.7188, -3.26151, -6.25354, 0.07", "39.9854, -3.70672, -6.37322, 0.29" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "36.8534, 0.88572, -4.47172, 0.73", "38.097, 0.73754, -4.19773, 0.73", "39.3968, 0.521149, -3.91296, 0.44", "40.6037, 0.280543, -3.64556, 0.44", "42.2347, -0.0611179, -3.29336, 0.44", "43.8048, -0.371875, -2.9575, 1.03", "44.1612, -0.438221, -2.88351, 1.03", "45.7867, -0.745859, -2.45637, 0.44", "46.8509, -0.893544, -2.11777, 0.44", "47.4734, -0.913993, -1.89966, 0.44", "48.3098, -0.85186, -1.61514, 0.66", "49.0009, -0.752362, -1.40229, 0.95", "50.4078, -0.475855, -1.0254, 0.44", "52.2077, 9.98139E-4, -0.61372, 0.88", "53.6933, 0.435922, -0.340307, 0.37", "55.0377, 0.84311, -0.152888, 0.51", "56.3609, 1.24299, -0.0469156, 0.44", "57.8267, 1.67594, -0.0176568, 0.51", "59.0639, 2.01358, -0.0491592, 0.59", "59.7904, 2.17815, -0.0731731, 0.81", "61.1624, 2.40821, -0.0506101, 0.51", "62.2389, 2.52302, 0.0359659, 0.51", "63.6297, 2.62057, 0.225627, 0.29", "64.8289, 2.67628, 0.434309, 0.51", "66.1619, 2.74599, 0.64269, 0.44", "67.2443, 2.867, 0.785442, 0.59", "68.2921, 3.06858, 0.897355, 0.29", "69.6019, 3.4919, 1.00301, 0.81", "70.3522, 3.8636, 1.07327, 0.81", "71.4602, 4.57113, 1.17212, 0.66", "72.4706, 5.3304, 1.27695, 0.81", "72.9963, 5.75759, 1.34657, 0.81", "73.89, 6.48667, 1.50204, 0.81", "75.2657, 7.48475, 1.83503, 0.29", "75.9563, 7.90987, 2.05142, 0.29", "76.9195, 8.368, 2.41058, 0.59", "78.0917, 8.75032, 2.88257, 0.59", "79.1527, 8.98973, 3.35793, 0.66", "80.4142, 9.17447, 3.94337, 0.59", "81.5062, 9.26214, 4.4544, 0.59", "82.7406, 9.2992, 5.08297, 0.51", "84.0976, 9.27322, 5.75805, 0.51", "85.2295, 9.22732, 6.26608, 0.37", "86.1027, 9.2144, 6.57573, 0.37", "86.4716, 9.22558, 6.65015, 0.37", "87.35, 9.28069, 6.75539, 0.37", "88.7257, 9.37621, 6.93864, 0.37", "89.8645, 9.43976, 7.1129, 0.81", "91.0064, 9.47421, 7.31728, 0.29", "91.8061, 9.49543, 7.51278, 0.29", "93.3585, 9.59194, 8.03914, 0.51", "95.2383, 9.79097, 8.84964, 0.59", "96.4153, 9.95447, 9.4934, 0.66", "97.2781, 10.0963, 10.0844, 1.03", "98.4808, 10.328, 11.0172, 0.37", "99.7354, 10.5869, 12.0542, 0.37", "100.405, 10.7568, 12.616, 0.15", "101.39, 11.047, 13.508, 0.88", "103.03, 11.5461, 15.2095, 0.44", "103.37, 11.6387, 15.6078, 0.66", "104.042, 11.7602, 16.4659, 0.51" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "0.980699, 50.964, -20.8416, 0.37", "-0.140032, 50.7867, -20.7604, 0.37", "-1.36055, 50.5469, -20.6334, 0.22", "-2.05425, 50.3988, -20.5529, 0.22", "-2.80005, 50.2436, -20.4385, 0.37", "-3.54748, 50.0882, -20.3238, 0.15", "-4.86428, 49.8142, -20.1217, 0.15", "-5.3294, 49.7143, -20.0286, 0.37", "-5.81441, 49.5988, -19.9003, 0.07", "-6.73597, 49.346, -19.6526, 0.37" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "0.980699, 50.964, -20.8416, 0.51", "1.2455, 51.4849, -22.1892, 0.51", "1.33766, 51.7353, -22.6942, 0.51", "1.44475, 52.2861, -23.5735, 0.51", "1.49, 52.7478, -24.1932, 0.51", "1.5241, 53.5426, -25.1151, 0.51", "1.54253, 54.1174, -25.7079, 0.59", "1.54577, 54.9086, -26.3992, 0.44", "1.5225, 56.1373, -27.3851, 0.44", "1.50529, 56.8319, -27.8892, 0.44", "1.49938, 57.587, -28.4217, 0.44", "1.53301, 58.4276, -28.9987, 0.51", "1.66957, 59.4235, -29.7002, 0.44", "1.80336, 60.0142, -30.1156, 0.59", "1.98022, 60.603, -30.5665, 0.44", "2.21829, 61.2496, -31.0855, 0.44", "2.48133, 61.8484, -31.5441, 0.37", "2.92882, 62.7426, -32.3417, 0.37", "3.37003, 63.5108, -33.2104, 0.59", "3.91188, 64.3948, -34.4053, 0.59", "4.21007, 64.875, -35.101, 0.37", "4.60941, 65.5239, -36.148, 0.37", "5.43315, 66.8773, -38.5993, 0.51", "6.16494, 68.0272, -40.9292, 0.51", "6.58497, 68.6516, -42.2739, 0.51", "6.8517, 69.0756, -43.1932, 0.22", "7.1428, 69.6382, -44.4488, 0.22", "7.22722, 69.8691, -44.9894, 0.51", "7.31446, 70.4298, -46.1668, 0.51", "7.27973, 71.1258, -47.6132, 0.51", "7.21074, 71.5147, -48.493, 0.51", "7.14136, 71.9537, -49.475, 0.29", "7.1093, 72.8016, -51.1813, 0.29", "7.1305, 73.2384, -51.9982, 0.51", "7.14091, 73.5171, -52.4731, 0.37", "7.14997, 74.1442, -53.5063, 0.37", "7.19237, 74.7875, -54.546, 0.29", "7.28582, 75.3009, -55.4148, 0.29", "7.50691, 75.8636, -56.5108, 0.29", "7.72655, 76.1887, -57.4105, 0.29", "7.90278, 76.407, -58.3489, 0.29", "7.96335, 76.4938, -58.9761, 0.29", "7.97599, 76.5447, -60.0547, 0.29", "7.94026, 76.5026, -61.3115, 0.29", "7.92321, 76.3754, -62.6767, 0.29", "7.96958, 76.2395, -64.1417, 0.29", "8.0382, 76.1996, -65.2016, 0.29", "8.11979, 76.2391, -66.4594, 0.29", "8.14543, 76.3477, -67.6538, 0.29", "8.12001, 76.4237, -68.6638, 0.29", "8.06322, 76.4445, -69.8457, 0.29", "7.98711, 76.3699, -71.273, 0.29", "7.90923, 76.2952, -71.9316, 0.29", "7.65839, 76.1839, -72.6446, 0.29", "6.96723, 76.0125, -73.601, 0.29", "6.11441, 75.8226, -74.6197, 0.29", "5.73665, 75.7314, -75.0659, 0.29", "5.27178, 75.6144, -75.6343, 0.29", "4.38069, 75.3704, -76.7862, 0.29", "3.29447, 75.0459, -78.2864, 0.88", "1.85842, 74.6216, -80.2947, 0.59", "1.0676, 74.3407, -81.4193, 0.59", "0.459578, 74.0526, -82.3111, 0.29", "0.0800802, 73.7923, -82.8821, 0.29", "-0.481563, 73.2303, -83.6839, 0.37", "-0.7603, 72.8896, -83.9667, 0.37", "-1.06287, 72.5096, -84.171, 0.37", "-1.6384, 71.7689, -84.4902, 0.37", "-2.49533, 70.6908, -84.9081, 0.73", "-3.11741, 69.9746, -85.2009, 0.73", "-3.56754, 69.488, -85.3968, 0.73", "-4.29071, 68.7117, -85.742, 0.37" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-70.7839, 42.5188, -2.46112, 0.44", "-73.1135, 42.7407, -5.88884, 0.44", "-73.7827, 42.8615, -6.88702, 0.59", "-74.0335, 42.934, -7.2794, 0.07", "-74.2789, 43.0629, -7.72981, 0.15", "-74.7, 43.4258, -8.64109, 0.07", "-74.8272, 43.6015, -8.94895, 0.07", "-74.8403, 44.1081, -9.22043, 0.37", "-74.779, 44.8013, -9.57244, 0.07", "-74.6408, 45.6861, -9.99629, 0.07", "-74.5529, 46.088, -10.1715, 0.44", "-74.3562, 46.9472, -10.4574, 0.07", "-74.2814, 47.3457, -10.6019, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-70.7839, 42.5188, -2.46112, 0.66", "-70.9088, 43.2852, -3.09607, 0.66", "-71.0453, 44.6774, -4.19858, 0.37", "-71.0973, 45.6661, -5.00383, 0.95", "-71.1223, 46.1151, -5.36192, 0.95", "-71.1692, 46.9998, -6.04729, 0.44", "-71.2344, 48.3776, -7.14669, 0.37", "-71.2476, 49.3705, -7.91503, 0.29", "-71.2131, 50.3465, -8.63918, 0.44", "-71.1694, 50.9811, -9.11988, 0.88", "-71.1405, 51.2766, -9.35144, 0.88", "-70.8724, 53.0627, -10.8956, 0.37", "-70.7726, 53.6225, -11.3535, 0.37", "-70.6746, 54.14, -11.7592, 0.22", "-70.4679, 55.0703, -12.4224, 0.22", "-70.3167, 55.6732, -12.8284, 0.22", "-69.9795, 57.0863, -13.6847, 0.51", "-69.8014, 58.0251, -14.1834, 0.51", "-69.6578, 59.2719, -14.8359, 0.37", "-69.5859, 60.232, -15.3091, 0.22", "-69.5689, 60.5706, -15.4572, 0.22", "-69.5673, 60.9997, -15.6361, 0.37", "-69.6909, 62.3644, -16.1025, 0.22", "-69.7502, 62.7565, -16.27, 0.29", "-69.8806, 63.2152, -16.4507, 0.29" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-89.8083, 12.0165, -156.14, 0.37", "-89.894, 12.1839, -156.637, 0.37", "-89.9225, 12.4241, -157.403, 0.37", "-89.8627, 12.8324, -159.026, 0.37", "-89.7371, 13.0751, -160.278, 0.37", "-89.6428, 13.1319, -160.863, 0.37", "-89.3715, 13.1852, -162.195, 0.37", "-88.9867, 13.1813, -163.59, 0.37", "-88.6506, 13.1502, -164.673, 0.37", "-88.3221, 13.0957, -165.758, 0.37", "-87.7497, 12.9443, -167.621, 0.37", "-87.4395, 12.8273, -168.694, 0.37", "-87.0559, 12.6458, -170.098, 0.37", "-86.7929, 12.527, -171.152, 0.37", "-86.5226, 12.4548, -172.371, 0.37" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-89.8083, 12.0165, -156.14, 0.15", "-90.4694, 11.2986, -156.445, 0.15", "-90.9915, 10.7232, -156.75, 0.59", "-91.3394, 10.3228, -156.971, 0.59", "-91.9458, 9.62481, -157.358, 0.15", "-93.0298, 8.37699, -158.049, 0.15", "-93.5104, 7.82389, -158.355, 0.15", "-93.9252, 7.34629, -158.731, 0.59", "-94.042, 7.20664, -158.873, 0.59" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-94.1464, 53.7885, -80.6157, 0.29", "-95.0579, 54.1572, -80.6157, 0.29", "-95.6022, 54.4244, -80.6157, 0.44", "-95.9937, 54.6406, -80.6157, 0.44", "-96.6832, 55.073, -80.6157, 0.44", "-97.0789, 55.3366, -80.6455, 0.15", "-97.6, 55.6897, -80.6731, 0.73", "-97.9784, 55.9685, -80.6857, 0.81", "-98.3581, 56.2456, -80.6915, 0.81", "-99.1224, 56.7936, -80.6919, 0.29", "-99.8736, 57.2969, -80.6827, 0.29", "-101.108, 58.0651, -80.6398, 0.29", "-101.739, 58.4346, -80.6076, 0.29", "-102.354, 58.757, -80.5617, 0.59", "-102.961, 59.0394, -80.4859, 0.59", "-103.907, 59.4127, -80.3303, 0.37", "-104.811, 59.7164, -80.1556, 0.37", "-105.473, 59.9011, -80.0419, 0.59", "-106.983, 60.2602, -79.7735, 0.15", "-107.798, 60.4315, -79.6258, 0.37", "-108.406, 60.5373, -79.5008, 0.15", "-109.112, 60.6447, -79.3484, 0.37", "-109.702, 60.7395, -79.2309, 0.07", "-109.925, 60.7824, -79.1918, 0.37", "-110.746, 61.0023, -79.0765, 0.07", "-111.668, 61.2767, -78.9679, 0.22", "-112.593, 61.5647, -78.855, 0.07", "-113.739, 61.9348, -78.7137, 0.07", "-114.66, 62.257, -78.5835, 0.07", "-115.379, 62.5396, -78.4743, 0.29", "-115.917, 62.7753, -78.3901, 0.07", "-116.634, 63.1677, -78.2879, 0.07", "-116.906, 63.3584, -78.2384, 0.22", "-117.44, 63.8757, -78.1045, 0.07", "-117.753, 64.2879, -78.0105, 0.29", "-117.942, 64.5964, -77.9516, 0.29", "-118.315, 65.2804, -77.8459, 0.07", "-118.667, 65.909, -77.7391, 0.07", "-119.024, 66.4145, -77.6462, 0.73", "-119.353, 66.743, -77.5517, 0.22", "-119.718, 67.0211, -77.477, 0.66", "-120.028, 67.2209, -77.4699, 0.29", "-120.66, 67.5908, -77.6601, 0.29", "-121.133, 67.9063, -78.0033, 0.59", "-121.865, 68.4251, -78.6736, 0.15", "-122.723, 69.0528, -79.598, 0.29", "-123.394, 69.5985, -80.4809, 0.29", "-123.983, 70.1885, -81.4767, 0.29", "-124.354, 70.6657, -82.3349, 0.66", "-124.518, 70.9668, -82.8811, 0.66" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-94.1464, 53.7885, -80.6157, 0.22", "-93.7944, 54.3863, -81.2662, 0.22", "-93.4175, 55.1921, -82.0454, 1.25", "-92.8879, 56.4912, -83.1395, 0.07", "-92.7412, 56.8519, -83.4138, 0.22", "-92.5579, 57.2895, -83.727, 0.22", "-92.4278, 57.5786, -83.9217, 0.22", "-92.202, 58.0936, -84.1944, 0.37", "-91.984, 58.6419, -84.4155, 0.07", "-91.8745, 59.0656, -84.5724, 0.29", "-91.8214, 59.8886, -85.0214, 0.07", "-91.8891, 60.3051, -85.3371, 0.07", "-91.9328, 60.4811, -85.4852, 0.07", "-92.0823, 60.838, -85.8237, 0.07", "-92.4866, 61.4917, -86.5037, 0.29", "-93.2252, 62.4128, -87.5135, 0.29", "-93.8029, 62.9694, -88.1646, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "104.042, 11.7602, 16.4659, 0.22", "103.73, 10.6457, 16.4659, 0.22", "103.559, 9.92257, 16.4242, 0.22", "103.325, 8.93558, 16.3673, 0.22", "103.233, 8.55127, 16.3451, 0.59", "102.938, 7.30505, 16.2732, 0.29", "102.802, 6.73187, 16.2402, 0.29", "102.571, 5.70688, 16.1593, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "104.042, 11.7602, 16.4659, 0.51", "104.78, 11.7167, 16.4317, 0.51", "106.166, 11.6888, 16.423, 0.66", "107.488, 11.7081, 16.4403, 0.51", "109.278, 11.7774, 16.5262, 0.44", "110.407, 11.828, 16.6646, 0.44", "111.672, 11.8537, 16.9787, 0.44", "112.524, 11.8399, 17.3248, 0.59", "113.092, 11.7964, 17.6535, 0.81", "114.478, 11.6795, 18.6152, 0.37", "115.689, 11.513, 19.6697, 0.59", "117.399, 11.1062, 21.3757, 0.37", "117.892, 10.9167, 21.9936, 0.95", "118.253, 10.7183, 22.5433, 1.03" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-4.29071, 68.7117, -85.742, 0.37", "-4.74897, 69.0666, -86.6356, 0.37", "-5.33059, 69.5041, -87.7105, 0.29", "-5.81599, 69.845, -88.4512, 0.29", "-6.432, 70.2377, -89.2097, 0.29", "-7.16547, 70.6682, -89.97, 0.29", "-7.54591, 70.8914, -90.3644, 0.29", "-7.92572, 71.1382, -90.7426, 0.29", "-8.70989, 71.6552, -91.4127, 0.29", "-9.73668, 72.2112, -92.0359, 0.22", "-10.3223, 72.459, -92.2676, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-4.29071, 68.7117, -85.742, 0.37", "-4.34952, 67.9011, -85.7186, 0.37", "-4.37621, 67.3128, -85.6838, 0.59", "-4.43439, 65.8141, -85.5306, 0.44", "-4.54828, 64.7058, -85.3958, 0.44", "-4.73907, 63.7571, -85.2113, 0.29", "-5.0497, 62.644, -84.9588, 0.29", "-5.1557, 62.3675, -84.9059, 0.51", "-5.51905, 61.6261, -84.8426, 0.22", "-6.06257, 60.6885, -84.9269, 0.66", "-6.93183, 59.3559, -85.2206, 0.44", "-7.49516, 58.5788, -85.5572, 0.44", "-8.32561, 57.5207, -86.2711, 0.44", "-8.98784, 56.7487, -87.1244, 0.44", "-9.63309, 56.071, -88.1259, 1.47", "-10.3323, 55.4179, -89.4443, 0.22", "-10.9312, 54.9693, -90.7531, 0.22", "-11.4766, 54.6946, -92.042, 0.81", "-12.8001, 54.3246, -95.3483, 0.37", "-13.0636, 54.2858, -96.0316, 0.59", "-13.5945, 54.3011, -97.4809, 0.22", "-14.0396, 54.4061, -98.83, 0.44", "-14.5926, 54.6331, -100.532, 0.07", "-15.0893, 54.9274, -102.076, 0.07" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "118.253, 10.7183, 22.5433, 0.29", "119.216, 10.0178, 23.1907, 0.29", "120.432, 9.24808, 24.0133, 0.29", "121.08, 8.84604, 24.4523, 0.29", "121.474, 8.61143, 24.7227, 0.29", "121.794, 8.5042, 24.9931, 0.29", "122.018, 8.54855, 25.2385, 0.29", "122.324, 8.95866, 25.6633, 0.29", "122.661, 9.57906, 26.028, 0.29", "122.936, 10.2504, 26.3793, 0.29", "123.289, 11.2021, 26.8558, 0.29", "123.524, 11.746, 27.1463, 0.29", "123.935, 12.3721, 27.5675, 0.29", "124.511, 12.792, 27.9424, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "118.253, 10.7183, 22.5433, 0.37", "119.125, 11.1311, 22.6839, 0.37", "119.799, 11.4068, 22.825, 0.22", "120.042, 11.484, 22.883, 0.37", "120.976, 11.7017, 23.1184, 0.29", "122.182, 11.8793, 23.4174, 0.22", "122.981, 11.9743, 23.631, 0.22", "123.626, 12.0275, 23.8287, 0.22", "124.314, 12.0277, 24.0642, 0.22", "124.816, 11.9927, 24.2399, 0.59", "125.49, 11.8906, 24.4759, 1.03", "126.358, 11.7079, 24.7215, 0.22", "127.06, 11.5694, 24.8907, 0.81", "128.272, 11.3728, 25.1712, 0.29", "128.977, 11.2818, 25.3166, 0.29", "129.563, 11.214, 25.4105, 0.29", "130.183, 11.1258, 25.4785, 0.29", "131.581, 10.8359, 25.5501, 0.29", "131.868, 10.7553, 25.5504, 0.29", "132.502, 10.5305, 25.5295, 0.29", "133.049, 10.2184, 25.5525, 0.29", "133.454, 9.74647, 25.6654, 0.29", "133.661, 9.35154, 25.7853, 0.29", "133.99, 8.54347, 26.0372, 0.29", "134.372, 7.45527, 26.3898, 0.29", "134.613, 6.52893, 26.7039, 0.29", "134.776, 5.72611, 26.9818, 0.29", "134.976, 4.59308, 27.3433, 0.22", "135.091, 3.89173, 27.5344, 0.22", "135.166, 3.37589, 27.6434, 0.22", "135.214, 2.5627, 27.7223, 0.22", "135.211, 1.81971, 27.7439, 0.22", "135.136, 1.00478, 27.7439, 0.22", "134.957, 0.130203, 27.7439, 0.22", "134.829, -0.419663, 27.7439, 0.22", "134.696, -1.18813, 27.7439, 0.37" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_45", "dend_42", "dend_23", "dend_18", "dend_7", "dend_0", "dend_49", "dend_46", "dend_44", "dend_43", "dend_33", "dend_24", "dend_22", "dend_19", "dend_11", "dend_8", "dend_6", "dend_1", "dend_53", "dend_50", "dend_48", "dend_47", "dend_35", "dend_34", "dend_26", "dend_25", "dend_21", "dend_20", "dend_17", "dend_12", "dend_10", "dend_9", "dend_5", "dend_2", "dend_52", "dend_51", "dend_39", "dend_36", "dend_32", "dend_27", "dend_16", "dend_13", "dend_4", "dend_3", "dend_41", "dend_40", "dend_38", "dend_37", "dend_31", "dend_28", "dend_15", "dend_14", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_45", "dend_42", "dend_23", "dend_18", "dend_7", "dend_0", "dend_49", "dend_46", "dend_44", "dend_43", "dend_33", "dend_24", "dend_22", "dend_19", "dend_11", "dend_8", "dend_6", "dend_1", "dend_53", "dend_50", "dend_48", "dend_47", "dend_35", "dend_34", "dend_26", "dend_25", "dend_21", "dend_20", "dend_17", "dend_12", "dend_10", "dend_9", "dend_5", "dend_2", "dend_52", "dend_51", "dend_39", "dend_36", "dend_32", "dend_27", "dend_16", "dend_13", "dend_4", "dend_3", "dend_41", "dend_40", "dend_38", "dend_37", "dend_31", "dend_28", "dend_15", "dend_14", "dend_30", "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_DLAC_3a1208130a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_33, id: dend_33, parent: dend_23
create dend_33
public dend_33
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_42, dend_23, dend_18, dend_7, dend_0, dend_49, dend_46, dend_44, dend_43, dend_33, dend_24, dend_22, dend_19, dend_11, dend_8, dend_6, dend_1, dend_53, dend_50, dend_48, dend_47, dend_35, dend_34, dend_26, dend_25, dend_21, dend_20, dend_17, dend_12, dend_10, dend_9, dend_5, dend_2, dend_52, dend_51, dend_39, dend_36, dend_32, dend_27, dend_16, dend_13, dend_4, dend_3, dend_41, dend_40, dend_38, dend_37, dend_31, dend_28, dend_15, dend_14, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_45, dend_42, dend_23, dend_18, dend_7, dend_0, dend_49, dend_46, dend_44, dend_43, dend_33, dend_24, dend_22, dend_19, dend_11, dend_8, dend_6, dend_1, dend_53, dend_50, dend_48, dend_47, dend_35, dend_34, dend_26, dend_25, dend_21, dend_20, dend_17, dend_12, dend_10, dend_9, dend_5, dend_2, dend_52, dend_51, dend_39, dend_36, dend_32, dend_27, dend_16, dend_13, dend_4, dend_3, dend_41, dend_40, dend_38, dend_37, dend_31, dend_28, dend_15, dend_14, dend_30, dend_29]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_48
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_45(0), soma_0(0.4500000561855183)
    connect dend_42(0), soma_0(0.4500000561855183)
    connect dend_23(0), soma_0(0.4500000561855183)
    connect dend_18(0), soma_0(0.4500000561855183)
    connect dend_7(0), soma_0(0.4500000561855183)
    connect dend_0(0), soma_0(0.4500000561855183)
    connect axon_0(0), soma_0(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_33(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 6.08934, -8.10363, 0.0, 1.81741 ) }
    soma_0 { pt3dadd( 5.48621, -7.32546, 0.0, 3.1203 ) }
    soma_0 { pt3dadd( 4.88307, -6.54729, 0.0, 3.95956 ) }
    soma_0 { pt3dadd( 4.27994, -5.76912, 0.0, 4.67598 ) }
    soma_0 { pt3dadd( 3.6768, -4.99095, 0.0, 5.35157 ) }
    soma_0 { pt3dadd( 3.07367, -4.21278, 0.0, 6.241 ) }
    soma_0 { pt3dadd( 2.47053, -3.43461, 0.0, 7.2003 ) }
    soma_0 { pt3dadd( 1.8674, -2.65644, 0.0, 8.27517 ) }
    soma_0 { pt3dadd( 1.26426, -1.87827, 0.0, 9.09786 ) }
    soma_0 { pt3dadd( 0.661129, -1.1001, 0.0, 10.0044 ) }
    soma_0 { pt3dadd( 0.0579941, -0.321931, 0.0, 10.3895 ) }
    soma_0 { pt3dadd( -0.545141, 0.456239, 0.0, 10.2715 ) }
    soma_0 { pt3dadd( -1.14828, 1.23441, 0.0, 9.95681 ) }
    soma_0 { pt3dadd( -1.75141, 2.01258, 0.0, 9.42211 ) }
    soma_0 { pt3dadd( -2.35455, 2.79075, 0.0, 9.23558 ) }
    soma_0 { pt3dadd( -2.95768, 3.56892, 0.0, 8.71341 ) }
    soma_0 { pt3dadd( -3.56082, 4.34709, 0.0, 8.39063 ) }
    soma_0 { pt3dadd( -4.16395, 5.12526, 0.0, 7.56176 ) }
    soma_0 { pt3dadd( -4.76709, 5.90343, 0.0, 6.58102 ) }
    soma_0 { pt3dadd( -5.37022, 6.68159, 0.0, 5.63227 ) }
    soma_0 { pt3dadd( -5.97336, 7.45976, 0.0, 3.08531 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 21/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 5.73576, -8.121, 2.42, 1.76 ) }
    dend_45 { pt3dadd( 6.36456, -9.01912, 2.52812, 1.18 ) }
    dend_45 { pt3dadd( 7.32834, -10.1783, 2.61464, 0.81 ) }
    dend_45 { pt3dadd( 8.61236, -11.5922, 2.68677, 0.73 ) }
    dend_45 { pt3dadd( 9.81882, -12.8085, 2.75411, 1.32 ) }
    dend_45 { pt3dadd( 11.4091, -14.2961, 2.84052, 0.81 ) }
    dend_45 { pt3dadd( 12.8156, -15.4662, 2.95536, 1.03 ) }
    dend_45 { pt3dadd( 13.6125, -15.9984, 3.04633, 1.1 ) }
    dend_45 { pt3dadd( 13.8151, -16.1032, 3.08154, 1.32 ) }
    dend_45 { pt3dadd( 14.7326, -16.4794, 3.25184, 1.03 ) }
    dend_45 { pt3dadd( 15.2934, -16.667, 3.38613, 1.03 ) }
    dend_45 { pt3dadd( 17.1385, -17.1907, 4.10211, 0.51 ) }
    dend_45 { pt3dadd( 18.7444, -17.6337, 4.91708, 1.1 ) }
    dend_45 { pt3dadd( 19.864, -17.9631, 5.54597, 1.62 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 35/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 4.0557, 2.309, 2.24, 1.76 ) }
    dend_42 { pt3dadd( 5.17613, 2.4156, 2.3578, 0.66 ) }
    dend_42 { pt3dadd( 6.82947, 2.54918, 2.543, 0.51 ) }
    dend_42 { pt3dadd( 7.48275, 2.60751, 2.6323, 1.1 ) }
    dend_42 { pt3dadd( 8.36193, 2.69682, 2.7587, 0.88 ) }
    dend_42 { pt3dadd( 9.08291, 2.78739, 2.85797, 0.88 ) }
    dend_42 { pt3dadd( 10.5933, 3.02801, 3.08598, 0.66 ) }
    dend_42 { pt3dadd( 11.5984, 3.22486, 3.26407, 1.25 ) }
    dend_42 { pt3dadd( 12.5807, 3.43054, 3.46904, 0.73 ) }
    dend_42 { pt3dadd( 13.32, 3.58631, 3.62757, 1.1 ) }
    dend_42 { pt3dadd( 14.8698, 3.92132, 3.97062, 0.59 ) }
    dend_42 { pt3dadd( 16.333, 4.23398, 4.29835, 0.59 ) }
    dend_42 { pt3dadd( 17.7984, 4.53236, 4.61919, 0.51 ) }
    dend_42 { pt3dadd( 19.0794, 4.77424, 4.89791, 0.81 ) }
    dend_42 { pt3dadd( 20.2892, 4.97649, 5.18167, 1.03 ) }
    dend_42 { pt3dadd( 20.7743, 5.05311, 5.31919, 1.03 ) }
    dend_42 { pt3dadd( 21.4877, 5.16904, 5.56513, 1.03 ) }
    dend_42 { pt3dadd( 22.0231, 5.26948, 5.76832, 1.03 ) }
    dend_42 { pt3dadd( 23.1166, 5.51735, 6.20557, 0.51 ) }
    dend_42 { pt3dadd( 24.3375, 5.88268, 6.69423, 0.81 ) }
    dend_42 { pt3dadd( 25.9784, 6.49159, 7.3178, 0.37 ) }
    dend_42 { pt3dadd( 27.0568, 6.97795, 7.69056, 0.37 ) }
    dend_42 { pt3dadd( 27.8084, 7.39337, 7.90934, 0.44 ) }
    dend_42 { pt3dadd( 28.8409, 8.07377, 8.14575, 0.59 ) }
    dend_42 { pt3dadd( 29.7797, 8.80223, 8.28208, 0.37 ) }
    dend_42 { pt3dadd( 30.7364, 9.64936, 8.28897, 0.37 ) }
    dend_42 { pt3dadd( 31.5532, 10.5026, 8.19664, 0.37 ) }
    dend_42 { pt3dadd( 32.4051, 11.5292, 8.05027, 0.59 ) }
    dend_42 { pt3dadd( 32.8959, 12.2051, 7.95936, 0.59 ) }
    dend_42 { pt3dadd( 33.3224, 12.8549, 7.89497, 0.37 ) }
    dend_42 { pt3dadd( 33.8744, 13.7203, 7.87349, 1.03 ) }
    dend_42 { pt3dadd( 34.4638, 14.6479, 7.92131, 0.51 ) }
    dend_42 { pt3dadd( 34.9437, 15.3529, 7.99503, 0.51 ) }
    dend_42 { pt3dadd( 35.6012, 16.2871, 8.13655, 0.66 ) }
    dend_42 { pt3dadd( 36.5797, 17.6221, 8.35366, 0.29 ) }
    dend_42 { pt3dadd( 37.2061, 18.4289, 8.48362, 0.73 ) }
    dend_42 { pt3dadd( 37.6507, 18.9584, 8.56702, 1.1 ) }
    dend_42 { pt3dadd( 38.3848, 19.6997, 8.65441, 0.73 ) }
    dend_42 { pt3dadd( 39.154, 20.3722, 8.6819, 0.44 ) }
    dend_42 { pt3dadd( 39.9991, 21.0156, 8.66414, 0.44 ) }
    dend_42 { pt3dadd( 40.6091, 21.4259, 8.61805, 0.44 ) }
    dend_42 { pt3dadd( 41.4967, 21.9746, 8.56488, 0.59 ) }
    dend_42 { pt3dadd( 42.3139, 22.4654, 8.55455, 0.59 ) }
    dend_42 { pt3dadd( 43.2754, 23.0421, 8.58665, 0.44 ) }
    dend_42 { pt3dadd( 44.2384, 23.6126, 8.68945, 0.51 ) }
    dend_42 { pt3dadd( 44.8217, 23.9686, 8.79321, 0.51 ) }
    dend_42 { pt3dadd( 45.8982, 24.6384, 9.0336, 0.51 ) }
    dend_42 { pt3dadd( 46.5807, 25.0735, 9.2052, 1.1 ) }
    dend_42 { pt3dadd( 47.0063, 25.356, 9.31876, 1.1 ) }
    dend_42 { pt3dadd( 47.976, 26.0226, 9.59305, 0.44 ) }
    dend_42 { pt3dadd( 48.5804, 26.4526, 9.74263, 0.44 ) }
    dend_42 { pt3dadd( 49.4267, 27.0588, 9.90229, 0.51 ) }
    dend_42 { pt3dadd( 49.8274, 27.3394, 9.9536, 0.29 ) }
    dend_42 { pt3dadd( 50.42, 27.7433, 10.0272, 0.73 ) }
    dend_42 { pt3dadd( 51.1783, 28.2894, 10.1131, 0.29 ) }
    dend_42 { pt3dadd( 52.1939, 29.0791, 10.2612, 0.29 ) }
    dend_42 { pt3dadd( 52.8257, 29.619, 10.3849, 0.15 ) }
    dend_42 { pt3dadd( 53.5703, 30.2984, 10.5499, 0.66 ) }
    dend_42 { pt3dadd( 53.8018, 30.5152, 10.6059, 0.95 ) }
    dend_42 { pt3dadd( 54.5292, 31.2118, 10.8005, 0.22 ) }
    dend_42 { pt3dadd( 55.4057, 32.0326, 11.0539, 0.51 ) }
    dend_42 { pt3dadd( 55.8836, 32.4924, 11.237, 0.51 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 97/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 6.33573, -4.621, -1.69, 2.79 ) }
    dend_23 { pt3dadd( 6.4942, -4.52844, -1.76434, 2.79 ) }
    dend_23 { pt3dadd( 8.73599, -3.21906, -2.81609, 1.54 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( 9.735, -2.63556, -3.28478, 1.4 ) }
    dend_23 { pt3dadd( 10.3698, -2.26477, -3.5826, 1.69 ) }
    dend_23 { pt3dadd( 11.4175, -1.65284, -4.07414, 2.57 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 3/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -5.3243, 2.279, 5.87, 2.13 ) }
    dend_18 { pt3dadd( -5.87058, 2.27672, 7.41119, 2.13 ) }
    dend_18 { pt3dadd( -6.8803, 2.05718, 10.2419, 1.62 ) }
    dend_18 { pt3dadd( -7.205, 1.90482, 11.2309, 1.62 ) }
    dend_18 { pt3dadd( -7.59054, 1.60889, 12.583, 1.62 ) }
    dend_18 { pt3dadd( -7.95164, 1.2264, 13.9403, 1.62 ) }
    dend_18 { pt3dadd( -8.08467, 1.04779, 14.4491, 1.62 ) }
    dend_18 { pt3dadd( -8.54791, 0.110155, 16.4976, 1.25 ) }
    dend_18 { pt3dadd( -8.93909, -0.895721, 18.3254, 1.4 ) }
    dend_18 { pt3dadd( -9.16654, -1.6106, 19.5108, 1.4 ) }
    dend_18 { pt3dadd( -9.4804, -2.83707, 21.3885, 0.95 ) }
    dend_18 { pt3dadd( -9.64402, -3.59333, 22.4935, 1.1 ) }
    dend_18 { pt3dadd( -9.86833, -4.74256, 24.1829, 1.32 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 16/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -2.61428, 7.659, -4.48, 2.06 ) }
    dend_7 { pt3dadd( -2.52456, 8.09075, -4.41639, 2.06 ) }
    dend_7 { pt3dadd( -2.25203, 9.60599, -4.19101, 1.4 ) }
    dend_7 { pt3dadd( -1.98017, 11.1281, -3.9021, 0.95 ) }
    dend_7 { pt3dadd( -1.69262, 12.6042, -3.60082, 0.95 ) }
    dend_7 { pt3dadd( -1.36978, 14.1487, -3.26406, 1.1 ) }
    dend_7 { pt3dadd( -1.06608, 15.4928, -3.0195, 0.95 ) }
    dend_7 { pt3dadd( -0.77719, 16.7149, -2.84521, 0.66 ) }
    dend_7 { pt3dadd( -0.414292, 18.2025, -2.70677, 1.47 ) }
    dend_7 { pt3dadd( -0.145047, 19.2214, -2.69481, 1.03 ) }
    dend_7 { pt3dadd( 0.315809, 20.8965, -2.86778, 0.73 ) }
    dend_7 { pt3dadd( 0.751403, 22.5156, -3.21896, 0.73 ) }
    dend_7 { pt3dadd( 1.00378, 23.5629, -3.58583, 1.18 ) }
    dend_7 { pt3dadd( 1.14192, 24.3328, -3.97041, 1.18 ) }
    dend_7 { pt3dadd( 1.23324, 25.2704, -4.53182, 1.18 ) }
    dend_7 { pt3dadd( 1.31179, 26.75, -5.49607, 0.81 ) }
    dend_7 { pt3dadd( 1.31875, 27.8496, -6.27855, 0.81 ) }
    dend_7 { pt3dadd( 1.27484, 28.794, -6.93364, 1.03 ) }
    dend_7 { pt3dadd( 1.14092, 30.3395, -8.05016, 1.47 ) }
    dend_7 { pt3dadd( 1.03116, 31.1386, -8.64601, 1.76 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 36/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.8843, 5.349, -2.77, 1.32 ) }
    dend_0 { pt3dadd( -7.58956, 5.51677, -2.76501, 1.32 ) }
    dend_0 { pt3dadd( -8.53421, 5.6884, -2.74783, 0.88 ) }
    dend_0 { pt3dadd( -9.21043, 5.76875, -2.73253, 1.25 ) }
    dend_0 { pt3dadd( -11.2128, 5.95735, -2.64221, 0.66 ) }
    dend_0 { pt3dadd( -12.3367, 6.04366, -2.57824, 0.66 ) }
    dend_0 { pt3dadd( -13.4319, 6.10638, -2.46464, 0.88 ) }
    dend_0 { pt3dadd( -14.2496, 6.10863, -2.33873, 0.95 ) }
    dend_0 { pt3dadd( -15.3219, 6.06267, -2.12452, 0.66 ) }
    dend_0 { pt3dadd( -16.0486, 6.0, -1.95354, 0.66 ) }
    dend_0 { pt3dadd( -16.751, 5.9053, -1.74078, 0.66 ) }
    dend_0 { pt3dadd( -18.1168, 5.70336, -1.31399, 0.44 ) }
    dend_0 { pt3dadd( -18.7708, 5.60271, -1.06566, 1.1 ) }
    dend_0 { pt3dadd( -19.3734, 5.5303, -0.797361, 1.1 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 50/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -5.97336, 7.45976, 0.0, 0.763499 ) }
    axon_0 { pt3dadd( -15.1624, 19.3156, 0.0, 0.763499 ) }
    axon_0 { pt3dadd( -24.3515, 31.1714, 0.0, 0.763499 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 53/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 19.864, -17.9631, 5.54597, 0.73 ) }
    dend_49 { pt3dadd( 21.2515, -18.0597, 5.94346, 0.73 ) }
    dend_49 { pt3dadd( 22.2118, -18.1, 6.05638, 0.73 ) }
    dend_49 { pt3dadd( 22.8928, -18.0989, 6.04115, 0.73 ) }
    dend_49 { pt3dadd( 23.6971, -18.0593, 5.92863, 1.1 ) }
    dend_49 { pt3dadd( 25.182, -17.9351, 5.50918, 0.59 ) }
    dend_49 { pt3dadd( 26.2514, -17.8257, 5.04929, 0.51 ) }
    dend_49 { pt3dadd( 27.7362, -17.659, 4.09263, 0.51 ) }
    dend_49 { pt3dadd( 28.6937, -17.5394, 3.28776, 0.81 ) }
    dend_49 { pt3dadd( 29.5339, -17.4212, 2.48357, 1.18 ) }
    dend_49 { pt3dadd( 30.7169, -17.2354, 1.26951, 0.66 ) }
    dend_49 { pt3dadd( 31.9043, -17.0336, -0.0350298, 0.66 ) }
    dend_49 { pt3dadd( 32.907, -16.8676, -1.14204, 0.66 ) }
    dend_49 { pt3dadd( 34.1596, -16.6646, -2.47921, 0.66 ) }
    dend_49 { pt3dadd( 34.6297, -16.5872, -2.95988, 1.32 ) }
    dend_49 { pt3dadd( 36.0997, -16.3502, -4.40971, 0.51 ) }
    dend_49 { pt3dadd( 37.7815, -16.0547, -5.97221, 0.51 ) }
    dend_49 { pt3dadd( 38.6959, -15.8703, -6.78782, 0.59 ) }
    dend_49 { pt3dadd( 39.4915, -15.6857, -7.49083, 0.81 ) }
    dend_49 { pt3dadd( 40.8316, -15.358, -8.63262, 0.95 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 73/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 19.864, -17.9631, 5.54597, 0.81 ) }
    dend_46 { pt3dadd( 20.028, -18.2978, 6.5033, 0.81 ) }
    dend_46 { pt3dadd( 20.4086, -18.9294, 8.55782, 0.73 ) }
    dend_46 { pt3dadd( 20.6568, -19.4015, 10.0559, 0.88 ) }
    dend_46 { pt3dadd( 20.8213, -19.8109, 11.2531, 0.44 ) }
    dend_46 { pt3dadd( 20.9463, -20.2916, 12.4882, 0.73 ) }
    dend_46 { pt3dadd( 20.9973, -20.6482, 13.2726, 0.73 ) }
    dend_46 { pt3dadd( 20.9882, -21.5182, 14.8876, 0.73 ) }
    dend_46 { pt3dadd( 20.8746, -21.957, 15.4486, 0.44 ) }
    dend_46 { pt3dadd( 20.6149, -22.4806, 15.9057, 0.73 ) }
    dend_46 { pt3dadd( 20.1338, -23.2204, 16.4114, 0.44 ) }
    dend_46 { pt3dadd( 19.6058, -23.9591, 16.8333, 0.51 ) }
    dend_46 { pt3dadd( 18.9238, -24.8997, 17.2902, 0.15 ) }
    dend_46 { pt3dadd( 18.1048, -26.105, 17.7869, 0.66 ) }
    dend_46 { pt3dadd( 17.7513, -26.6338, 18.0308, 0.81 ) }
    dend_46 { pt3dadd( 17.5433, -26.9449, 18.1948, 0.81 ) }
    dend_46 { pt3dadd( 17.1851, -27.4714, 18.5227, 0.29 ) }
    dend_46 { pt3dadd( 17.0052, -27.734, 18.7112, 0.29 ) }
    dend_46 { pt3dadd( 16.7892, -28.1992, 19.0672, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 92/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 55.8836, 32.4924, 11.237, 0.37 ) }
    dend_44 { pt3dadd( 56.6162, 32.8705, 11.0796, 0.37 ) }
    dend_44 { pt3dadd( 57.0154, 33.0497, 10.9872, 0.51 ) }
    dend_44 { pt3dadd( 57.7527, 33.3052, 10.8189, 0.37 ) }
    dend_44 { pt3dadd( 58.7248, 33.5591, 10.6611, 0.59 ) }
    dend_44 { pt3dadd( 59.4898, 33.7597, 10.5991, 0.37 ) }
    dend_44 { pt3dadd( 59.9778, 33.9099, 10.5829, 0.37 ) }
    dend_44 { pt3dadd( 60.7037, 34.1835, 10.6416, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_44 { pt3dadd( 61.3399, 34.4981, 10.7707, 0.22 ) }
    dend_44 { pt3dadd( 62.2386, 35.1405, 11.0795, 0.88 ) }
    dend_44 { pt3dadd( 62.9511, 35.8588, 11.3359, 0.29 ) }
    dend_44 { pt3dadd( 63.4525, 36.5068, 11.4665, 0.29 ) }
    dend_44 { pt3dadd( 64.0628, 37.479, 11.5632, 0.51 ) }
    dend_44 { pt3dadd( 64.4536, 38.2216, 11.58, 0.73 ) }
    dend_44 { pt3dadd( 65.0542, 39.4, 11.4981, 0.37 ) }
    dend_44 { pt3dadd( 65.6614, 40.4655, 11.2838, 0.59 ) }
    dend_44 { pt3dadd( 66.3152, 41.4158, 10.9947, 0.59 ) }
    dend_44 { pt3dadd( 66.8254, 42.0404, 10.7621, 0.59 ) }
    dend_44 { pt3dadd( 67.2417, 42.4734, 10.5733, 0.95 ) }
    dend_44 { pt3dadd( 68.4529, 43.5204, 10.0977, 0.37 ) }
    dend_44 { pt3dadd( 69.6694, 44.4161, 9.69947, 0.37 ) }
    dend_44 { pt3dadd( 70.5132, 44.9939, 9.48496, 0.22 ) }
    dend_44 { pt3dadd( 71.0052, 45.3134, 9.38358, 0.22 ) }
    dend_44 { pt3dadd( 71.6617, 45.7331, 9.25791, 0.37 ) }
    dend_44 { pt3dadd( 72.2614, 46.1453, 9.15897, 0.37 ) }
    dend_44 { pt3dadd( 73.1386, 46.8399, 9.09045, 0.51 ) }
    dend_44 { pt3dadd( 73.5207, 47.1926, 9.09131, 0.59 ) }
    dend_44 { pt3dadd( 74.2588, 47.9318, 9.11278, 0.44 ) }
    dend_44 { pt3dadd( 74.6414, 48.3402, 9.12916, 0.66 ) }
    dend_44 { pt3dadd( 75.2677, 49.0628, 9.16962, 0.81 ) }
    dend_44 { pt3dadd( 76.0924, 50.0791, 9.24978, 0.37 ) }
    dend_44 { pt3dadd( 76.4279, 50.4822, 9.30071, 0.22 ) }
    dend_44 { pt3dadd( 77.107, 51.251, 9.41662, 0.07 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 25/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 55.8836, 32.4924, 11.237, 0.29 ) }
    dend_43 { pt3dadd( 55.1435, 32.0339, 11.8838, 0.29 ) }
    dend_43 { pt3dadd( 54.7179, 31.7669, 12.2102, 0.29 ) }
    dend_43 { pt3dadd( 53.7183, 31.14, 12.9766, 0.15 ) }
    dend_43 { pt3dadd( 52.7552, 30.5359, 13.7151, 0.22 ) }
    dend_43 { pt3dadd( 52.2177, 30.1988, 14.1273, 0.22 ) }
    dend_43 { pt3dadd( 51.9284, 30.0173, 14.3491, 0.22 ) }
    dend_43 { pt3dadd( 51.2867, 29.5779, 14.7714, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_23 (entry count 33/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 11.4175, -1.65284, -4.07414, 1.91 ) }
    dend_33 { pt3dadd( 11.5261, -1.06739, -5.09214, 1.91 ) }
    dend_33 { pt3dadd( 11.7411, 0.436434, -7.68221, 1.25 ) }
    dend_33 { pt3dadd( 11.8113, 1.23382, -9.25617, 0.73 ) }
    dend_33 { pt3dadd( 11.8237, 1.73014, -10.3897, 1.18 ) }
    dend_33 { pt3dadd( 11.789, 2.33675, -11.9276, 1.18 ) }
    dend_33 { pt3dadd( 11.7088, 2.97198, -13.6064, 1.18 ) }
    dend_33 { pt3dadd( 11.574, 3.38713, -14.783, 1.03 ) }
    dend_33 { pt3dadd( 11.0974, 4.23528, -17.1897, 1.03 ) }
    dend_33 { pt3dadd( 10.6096, 4.77479, -18.6697, 1.03 ) }
    dend_33 { pt3dadd( 10.1778, 5.11797, -19.5314, 1.03 ) }
    dend_33 { pt3dadd( 9.90523, 5.28758, -19.8836, 1.03 ) }
    dend_33 { pt3dadd( 9.15725, 5.68509, -20.4953, 1.1 ) }
    dend_33 { pt3dadd( 8.16254, 6.16812, -21.0454, 1.1 ) }
    dend_33 { pt3dadd( 6.51892, 6.90877, -21.7608, 0.44 ) }
    dend_33 { pt3dadd( 5.37477, 7.32847, -22.3114, 0.44 ) }
    dend_33 { pt3dadd( 4.69322, 7.48616, -22.7464, 0.44 ) }
    dend_33 { pt3dadd( 4.02261, 7.52806, -23.319, 0.95 ) }
    dend_33 { pt3dadd( 2.8778, 7.38449, -24.6142, 0.51 ) }
    dend_33 { pt3dadd( 1.90927, 7.12374, -25.9357, 0.51 ) }
    dend_33 { pt3dadd( 0.88131, 6.73371, -27.657, 0.73 ) }
    dend_33 { pt3dadd( 0.0353784, 6.3933, -29.3052, 0.73 ) }
    dend_33 { pt3dadd( -0.417218, 6.25025, -30.3185, 0.73 ) }
    dend_33 { pt3dadd( -0.85879, 6.18972, -31.3966, 0.73 ) }
    dend_33 { pt3dadd( -1.21426, 6.2608, -32.2253, 0.51 ) }
    dend_33 { pt3dadd( -1.63989, 6.52908, -32.9947, 0.51 ) }
    dend_33 { pt3dadd( -2.24302, 7.06841, -33.7272, 0.51 ) }
    dend_33 { pt3dadd( -3.05029, 7.81808, -34.3867, 0.51 ) }
    dend_33 { pt3dadd( -3.66943, 8.33825, -34.7597, 0.59 ) }
    dend_33 { pt3dadd( -4.52028, 8.97379, -35.1363, 0.66 ) }
    dend_33 { pt3dadd( -5.14649, 9.39402, -35.356, 0.66 ) }
    dend_33 { pt3dadd( -5.87426, 9.86017, -35.54, 0.66 ) }
    dend_33 { pt3dadd( -6.67142, 10.3933, -35.6866, 0.51 ) }
    dend_33 { pt3dadd( -7.63528, 11.1446, -35.8277, 0.51 ) }
    dend_33 { pt3dadd( -8.35139, 11.8901, -35.9368, 0.59 ) }
    dend_33 { pt3dadd( -8.83853, 12.631, -36.0677, 0.59 ) }
    dend_33 { pt3dadd( -9.18652, 13.3367, -36.2599, 0.59 ) }
    dend_33 { pt3dadd( -9.58348, 14.3131, -36.6391, 0.81 ) }
    dend_33 { pt3dadd( -9.91583, 15.1527, -37.141, 1.03 ) }
    dend_33 { pt3dadd( -10.3677, 16.1847, -37.9359, 0.44 ) }
    dend_33 { pt3dadd( -11.0076, 17.3299, -39.166, 0.81 ) }
    dend_33 { pt3dadd( -11.6515, 18.2313, -40.4433, 0.95 ) }
    dend_33 { pt3dadd( -12.3547, 19.0403, -41.8013, 0.95 ) }
    dend_33 { pt3dadd( -13.4243, 20.0964, -43.7703, 0.59 ) }
    dend_33 { pt3dadd( -13.8041, 20.4223, -44.4265, 0.88 ) }
    dend_33 { pt3dadd( -14.8882, 21.2523, -46.1651, 0.51 ) }
    dend_33 { pt3dadd( -16.1171, 22.1257, -47.8724, 0.44 ) }
    dend_33 { pt3dadd( -16.4497, 22.3674, -48.2743, 1.1 ) }
    dend_33 { pt3dadd( -17.043, 22.8297, -48.9275, 0.81 ) }
    dend_33 { pt3dadd( -17.7656, 23.5245, -49.6808, 0.51 ) }
    dend_33 { pt3dadd( -18.3793, 24.2405, -50.3493, 0.51 ) }
    dend_33 { pt3dadd( -18.8532, 24.9012, -50.8502, 0.95 ) }
    dend_33 { pt3dadd( -19.0464, 25.2171, -51.0699, 1.03 ) }
    dend_33 { pt3dadd( -19.3075, 25.6905, -51.4032, 1.03 ) }
    dend_33 { pt3dadd( -20.0509, 27.0882, -52.3566, 0.51 ) }
    dend_33 { pt3dadd( -20.3605, 27.6513, -52.703, 0.66 ) }
    dend_33 { pt3dadd( -20.7345, 28.224, -53.0307, 0.66 ) }
    dend_33 { pt3dadd( -21.1976, 28.7276, -53.3437, 0.66 ) }
    dend_33 { pt3dadd( -21.7816, 29.1368, -53.691, 0.73 ) }
    dend_33 { pt3dadd( -22.6364, 29.538, -54.0997, 0.73 ) }
    dend_33 { pt3dadd( -23.43, 29.8118, -54.4635, 0.73 ) }
    dend_33 { pt3dadd( -24.2765, 30.0543, -54.8466, 0.73 ) }
    dend_33 { pt3dadd( -25.592, 30.3723, -55.4298, 0.51 ) }
    dend_33 { pt3dadd( -27.1648, 30.6839, -56.1557, 0.66 ) }
    dend_33 { pt3dadd( -27.9626, 30.8161, -56.5803, 0.66 ) }
    dend_33 { pt3dadd( -28.957, 30.9609, -57.2094, 0.73 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 99/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 11.4175, -1.65284, -4.07414, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_24 { pt3dadd( 13.0147, -1.45374, -4.27671, 0.88 ) }
    dend_24 { pt3dadd( 13.6983, -1.37417, -4.34046, 0.88 ) }
    dend_24 { pt3dadd( 14.3529, -1.30174, -4.38741, 0.95 ) }
    dend_24 { pt3dadd( 15.336, -1.19157, -4.4439, 1.18 ) }
    dend_24 { pt3dadd( 16.3456, -1.05775, -4.5422, 0.95 ) }
    dend_24 { pt3dadd( 17.4385, -0.907035, -4.6665, 0.73 ) }
    dend_24 { pt3dadd( 18.1652, -0.792597, -4.74648, 1.18 ) }
    dend_24 { pt3dadd( 18.9636, -0.669439, -4.83876, 1.25 ) }
    dend_24 { pt3dadd( 19.6936, -0.547902, -4.92656, 1.25 ) }
    dend_24 { pt3dadd( 21.5166, -0.221246, -5.14591, 0.81 ) }
    dend_24 { pt3dadd( 22.2998, -0.0727229, -5.28928, 1.25 ) }
    dend_24 { pt3dadd( 23.2134, 0.118136, -5.4901, 1.98 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -9.86833, -4.74256, 24.1829, 0.51 ) }
    dend_22 { pt3dadd( -9.46885, -4.13326, 24.2574, 0.51 ) }
    dend_22 { pt3dadd( -9.0838, -3.52145, 24.3594, 0.51 ) }
    dend_22 { pt3dadd( -8.45252, -2.62109, 24.4857, 0.66 ) }
    dend_22 { pt3dadd( -7.8458, -1.8367, 24.5519, 0.66 ) }
    dend_22 { pt3dadd( -7.45489, -1.34969, 24.5373, 0.66 ) }
    dend_22 { pt3dadd( -6.8103, -0.525056, 24.5382, 0.73 ) }
    dend_22 { pt3dadd( -6.56668, -0.184004, 24.5323, 0.95 ) }
    dend_22 { pt3dadd( -5.7714, 0.94776, 24.5275, 0.37 ) }
    dend_22 { pt3dadd( -5.18871, 1.73219, 24.5313, 0.22 ) }
    dend_22 { pt3dadd( -4.44978, 2.64918, 24.525, 0.22 ) }
    dend_22 { pt3dadd( -3.32173, 3.86498, 24.5731, 0.22 ) }
    dend_22 { pt3dadd( -2.82052, 4.3481, 24.5936, 0.22 ) }
    dend_22 { pt3dadd( -2.45934, 4.03725, 25.0058, 0.22 ) }
    dend_22 { pt3dadd( -2.02102, 3.51843, 25.4989, 0.22 ) }
    dend_22 { pt3dadd( -1.54784, 2.90079, 26.0572, 0.22 ) }
    dend_22 { pt3dadd( -0.267038, 1.09449, 27.5934, 0.22 ) }
    dend_22 { pt3dadd( 0.147767, 0.430713, 28.0427, 0.22 ) }
    dend_22 { pt3dadd( 0.533325, -0.240509, 28.483, 0.22 ) }
    dend_22 { pt3dadd( 0.72396, -0.65461, 28.7583, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 32/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -9.86833, -4.74256, 24.1829, 1.47 ) }
    dend_19 { pt3dadd( -10.1287, -5.48097, 23.2217, 1.47 ) }
    dend_19 { pt3dadd( -10.2191, -5.73735, 22.8879, 1.47 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 35/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 1.03116, 31.1386, -8.64601, 0.44 ) }
    dend_11 { pt3dadd( 0.665596, 32.5787, -9.0059, 0.44 ) }
    dend_11 { pt3dadd( 0.514204, 33.2899, -9.32159, 0.44 ) }
    dend_11 { pt3dadd( 0.310952, 34.4696, -10.0802, 0.51 ) }
    dend_11 { pt3dadd( 0.181334, 35.4435, -10.742, 0.51 ) }
    dend_11 { pt3dadd( 0.0804111, 36.9155, -11.7841, 0.44 ) }
    dend_11 { pt3dadd( 0.0667831, 38.5576, -13.0488, 1.03 ) }
    dend_11 { pt3dadd( 0.184985, 39.7724, -14.0601, 1.47 ) }
    dend_11 { pt3dadd( 0.365053, 40.9507, -15.0926, 1.91 ) }
    dend_11 { pt3dadd( 0.584423, 41.9821, -16.0162, 0.66 ) }
    dend_11 { pt3dadd( 0.839528, 43.0221, -16.8931, 0.51 ) }
    dend_11 { pt3dadd( 1.26862, 44.5612, -18.2169, 0.51 ) }
    dend_11 { pt3dadd( 1.52035, 45.4057, -18.8238, 0.66 ) }
    dend_11 { pt3dadd( 1.85065, 46.4537, -19.4889, 0.66 ) }
    dend_11 { pt3dadd( 2.13157, 47.305, -19.9801, 0.66 ) }
    dend_11 { pt3dadd( 2.42075, 48.1484, -20.4958, 1.03 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 51/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 1.03116, 31.1386, -8.64601, 0.51 ) }
    dend_8 { pt3dadd( 2.53884, 31.5943, -9.37525, 0.51 ) }
    dend_8 { pt3dadd( 3.03501, 31.739, -9.57873, 0.37 ) }
    dend_8 { pt3dadd( 3.97619, 32.032, -9.97011, 0.37 ) }
    dend_8 { pt3dadd( 4.86921, 32.3338, -10.3667, 0.37 ) }
    dend_8 { pt3dadd( 5.7976, 32.6642, -10.7709, 0.73 ) }
    dend_8 { pt3dadd( 6.12982, 32.7853, -10.906, 0.81 ) }
    dend_8 { pt3dadd( 7.24234, 33.1855, -11.3397, 0.51 ) }
    dend_8 { pt3dadd( 8.07596, 33.5108, -11.6794, 0.51 ) }
    dend_8 { pt3dadd( 9.22612, 34.0076, -12.0789, 0.95 ) }
    dend_8 { pt3dadd( 10.0564, 34.3784, -12.3696, 0.95 ) }
    dend_8 { pt3dadd( 11.0619, 34.8467, -12.7111, 0.66 ) }
    dend_8 { pt3dadd( 12.5718, 35.5555, -13.2293, 1.4 ) }
    dend_8 { pt3dadd( 14.1259, 36.2827, -13.7551, 0.73 ) }
    dend_8 { pt3dadd( 15.5101, 36.9098, -14.1491, 0.95 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 66/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -19.3734, 5.5303, -0.797361, 0.22 ) }
    dend_6 { pt3dadd( -20.1619, 6.53618, -1.08715, 0.22 ) }
    dend_6 { pt3dadd( -20.7123, 7.26669, -1.31636, 0.22 ) }
    dend_6 { pt3dadd( -21.3486, 8.08819, -1.60695, 0.22 ) }
    dend_6 { pt3dadd( -21.5749, 8.35172, -1.71572, 0.22 ) }
    dend_6 { pt3dadd( -21.7725, 8.54553, -1.80233, 0.22 ) }
    dend_6 { pt3dadd( -22.3534, 9.11543, -2.05704, 0.22 ) }
    dend_6 { pt3dadd( -22.9329, 9.64282, -2.3606, 0.29 ) }
    dend_6 { pt3dadd( -23.2605, 9.92357, -2.54964, 0.29 ) }
    dend_6 { pt3dadd( -23.8787, 10.4145, -2.83361, 0.29 ) }
    dend_6 { pt3dadd( -24.6206, 10.9313, -3.16383, 0.44 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 77/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -19.3734, 5.5303, -0.797361, 0.59 ) }
    dend_1 { pt3dadd( -20.7748, 5.40348, -0.673376, 0.59 ) }
    dend_1 { pt3dadd( -21.8684, 5.30854, -0.573097, 0.73 ) }
    dend_1 { pt3dadd( -22.7014, 5.25578, -0.485139, 0.51 ) }
    dend_1 { pt3dadd( -23.9442, 5.18735, -0.34993, 1.18 ) }
    dend_1 { pt3dadd( -25.8432, 5.10807, -0.149156, 0.37 ) }
    dend_1 { pt3dadd( -26.9822, 5.08012, -0.0356813, 0.81 ) }
    dend_1 { pt3dadd( -27.4968, 5.08175, 0.00625199, 0.51 ) }
    dend_1 { pt3dadd( -28.7513, 5.11115, 0.109353, 0.73 ) }
    dend_1 { pt3dadd( -29.6401, 5.14607, 0.185447, 0.66 ) }
    dend_1 { pt3dadd( -30.8136, 5.20713, 0.287859, 0.44 ) }
    dend_1 { pt3dadd( -32.0063, 5.30248, 0.382733, 0.44 ) }
    dend_1 { pt3dadd( -32.8148, 5.38766, 0.422746, 0.73 ) }
    dend_1 { pt3dadd( -33.3219, 5.43862, 0.441766, 1.03 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 91/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -24.3515, 31.1714, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -33.5406, 43.0272, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -42.7297, 54.8831, 0.0, 0.15 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 94/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 40.8316, -15.358, -8.63262, 0.37 ) }
    dend_53 { pt3dadd( 42.0209, -15.6572, -9.55208, 0.37 ) }
    dend_53 { pt3dadd( 42.2898, -15.7264, -9.79664, 0.66 ) }
    dend_53 { pt3dadd( 42.8365, -15.8611, -10.3639, 0.66 ) }
    dend_53 { pt3dadd( 43.7168, -16.0681, -11.3037, 0.15 ) }
    dend_53 { pt3dadd( 44.6642, -16.261, -12.4297, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_53 { pt3dadd( 46.2264, -16.5533, -14.428, 0.59 ) }
    dend_53 { pt3dadd( 47.2251, -16.7353, -15.8951, 0.59 ) }
    dend_53 { pt3dadd( 47.8884, -16.8795, -17.0406, 0.59 ) }
    dend_53 { pt3dadd( 48.0748, -16.9342, -17.4353, 0.59 ) }
    dend_53 { pt3dadd( 48.67, -17.2482, -19.0615, 0.59 ) }
    dend_53 { pt3dadd( 48.7591, -17.3369, -19.3297, 0.59 ) }
    dend_53 { pt3dadd( 48.9704, -17.6222, -19.86, 0.59 ) }
    dend_53 { pt3dadd( 49.3099, -18.1203, -20.5612, 0.59 ) }
    dend_53 { pt3dadd( 49.8916, -18.9634, -21.7102, 0.59 ) }
    dend_53 { pt3dadd( 50.3578, -19.6546, -22.6819, 0.59 ) }
    dend_53 { pt3dadd( 50.9461, -20.4942, -23.8355, 0.22 ) }
    dend_53 { pt3dadd( 51.4231, -21.0966, -24.7131, 0.73 ) }
    dend_53 { pt3dadd( 52.1209, -21.8582, -25.9099, 0.88 ) }
    dend_53 { pt3dadd( 53.3665, -23.0534, -27.9441, 0.95 ) }
    dend_53 { pt3dadd( 54.4544, -24.0075, -29.6475, 0.22 ) }
    dend_53 { pt3dadd( 54.6495, -24.155, -29.9279, 0.44 ) }
    dend_53 { pt3dadd( 55.1999, -24.5125, -30.5819, 0.44 ) }
    dend_53 { pt3dadd( 55.6274, -24.7681, -30.9671, 0.95 ) }
    dend_53 { pt3dadd( 56.0899, -25.0235, -31.2496, 0.95 ) }
    dend_53 { pt3dadd( 57.1206, -25.5762, -31.7129, 0.07 ) }
    dend_53 { pt3dadd( 58.1444, -26.2091, -32.2442, 0.88 ) }
    dend_53 { pt3dadd( 58.9236, -26.8029, -32.7493, 0.29 ) }
    dend_53 { pt3dadd( 59.8862, -27.674, -33.4681, 0.59 ) }
    dend_53 { pt3dadd( 60.2895, -28.0882, -33.7964, 0.59 ) }
    dend_53 { pt3dadd( 60.9382, -28.8506, -34.4008, 0.37 ) }
    dend_53 { pt3dadd( 61.8743, -30.1437, -35.3684, 0.44 ) }
    dend_53 { pt3dadd( 62.2532, -30.7379, -35.8146, 0.07 ) }
    dend_53 { pt3dadd( 62.5623, -31.24, -36.1851, 0.81 ) }
    dend_53 { pt3dadd( 62.8606, -31.7122, -36.5319, 0.81 ) }
    dend_53 { pt3dadd( 63.5105, -32.797, -37.3566, 0.37 ) }
    dend_53 { pt3dadd( 63.8881, -33.5358, -37.8873, 0.95 ) }
    dend_53 { pt3dadd( 64.5211, -34.8661, -38.9531, 0.22 ) }
    dend_53 { pt3dadd( 64.6501, -35.1404, -39.2072, 0.22 ) }
    dend_53 { pt3dadd( 64.9792, -35.8461, -39.9154, 0.22 ) }
    dend_53 { pt3dadd( 65.2256, -36.3685, -40.4662, 0.22 ) }
    dend_53 { pt3dadd( 65.4597, -36.8655, -41.028, 1.03 ) }
    dend_53 { pt3dadd( 65.9249, -37.9092, -42.2609, 0.22 ) }
    dend_53 { pt3dadd( 66.0173, -38.1549, -42.5336, 0.22 ) }
    dend_53 { pt3dadd( 66.1607, -38.5253, -42.9349, 0.66 ) }
    dend_53 { pt3dadd( 66.3145, -38.8561, -43.298, 0.59 ) }
    dend_53 { pt3dadd( 66.903, -39.9009, -44.4466, 0.37 ) }
    dend_53 { pt3dadd( 67.2785, -40.4489, -45.1284, 0.81 ) }
    dend_53 { pt3dadd( 67.8474, -41.2194, -46.1837, 0.22 ) }
    dend_53 { pt3dadd( 68.2732, -41.7534, -46.9767, 0.81 ) }
    dend_53 { pt3dadd( 69.0187, -42.5561, -48.2782, 0.15 ) }
    dend_53 { pt3dadd( 69.4404, -42.9315, -48.9695, 1.18 ) }
    dend_53 { pt3dadd( 70.5686, -43.7122, -50.6126, 0.44 ) }
    dend_53 { pt3dadd( 71.6426, -44.2936, -52.1013, 0.22 ) }
    dend_53 { pt3dadd( 71.856, -44.3855, -52.3851, 0.22 ) }
    dend_53 { pt3dadd( 72.2427, -44.5375, -52.8979, 0.81 ) }
    dend_53 { pt3dadd( 72.9345, -44.8519, -53.8414, 0.81 ) }
    dend_53 { pt3dadd( 73.3956, -45.1379, -54.4817, 0.73 ) }
    dend_53 { pt3dadd( 74.0153, -45.6378, -55.1678, 0.15 ) }
    dend_53 { pt3dadd( 74.1601, -45.7485, -55.291, 0.15 ) }
    dend_53 { pt3dadd( 74.5662, -46.026, -55.6243, 0.73 ) }
    dend_53 { pt3dadd( 75.3973, -46.506, -56.3516, 0.15 ) }
    dend_53 { pt3dadd( 75.9013, -46.7596, -56.89, 0.44 ) }
    dend_53 { pt3dadd( 76.3645, -46.9857, -57.4558, 0.95 ) }
    dend_53 { pt3dadd( 77.4049, -47.4682, -58.8107, 0.22 ) }
    dend_53 { pt3dadd( 78.2343, -47.8418, -59.9346, 0.81 ) }
    dend_53 { pt3dadd( 79.5975, -48.4523, -61.8051, 0.73 ) }
    dend_53 { pt3dadd( 81.358, -49.2836, -64.316, 0.29 ) }
    dend_53 { pt3dadd( 81.7136, -49.4857, -64.9017, 0.44 ) }
    dend_53 { pt3dadd( 82.0211, -49.7209, -65.5388, 0.66 ) }
    dend_53 { pt3dadd( 82.1802, -49.909, -66.0046, 0.66 ) }
    dend_53 { pt3dadd( 82.3784, -50.3053, -66.9034, 0.29 ) }
    dend_53 { pt3dadd( 82.4743, -50.71, -67.9467, 0.37 ) }
    dend_53 { pt3dadd( 82.5009, -51.0876, -69.3447, 0.51 ) }
    dend_53 { pt3dadd( 82.4981, -51.3108, -70.7072, 0.51 ) }
    dend_53 { pt3dadd( 82.4708, -51.399, -71.4672, 0.51 ) }
    dend_53 { pt3dadd( 82.4531, -51.4255, -71.726, 0.66 ) }
    dend_53 { pt3dadd( 82.2975, -51.5797, -74.0606, 0.37 ) }
    dend_53 { pt3dadd( 82.2568, -51.6157, -75.1028, 0.37 ) }
    dend_53 { pt3dadd( 82.2662, -51.6413, -76.6679, 0.37 ) }
    dend_53 { pt3dadd( 82.3686, -51.6472, -78.0017, 0.37 ) }
    dend_53 { pt3dadd( 82.6174, -51.6354, -79.7473, 0.37 ) }
    dend_53 { pt3dadd( 82.9857, -51.6085, -81.6743, 0.37 ) }
    dend_53 { pt3dadd( 83.2739, -51.5813, -82.7642, 0.37 ) }
    dend_53 { pt3dadd( 83.6259, -51.5269, -83.77, 0.37 ) }
    dend_53 { pt3dadd( 84.2967, -51.4306, -85.4494, 0.88 ) }
    dend_53 { pt3dadd( 85.0348, -51.3543, -87.1385, 0.29 ) }
    dend_53 { pt3dadd( 85.4943, -51.3299, -88.1049, 0.29 ) }
    dend_53 { pt3dadd( 86.3165, -51.3307, -89.7508, 0.81 ) }
    dend_53 { pt3dadd( 87.1034, -51.333, -91.3561, 0.51 ) }
    dend_53 { pt3dadd( 88.7692, -51.2911, -94.8558, 0.51 ) }
    dend_53 { pt3dadd( 89.1983, -51.2724, -95.8113, 0.29 ) }
    dend_53 { pt3dadd( 89.9324, -51.2318, -97.436, 0.51 ) }
    dend_53 { pt3dadd( 90.2243, -51.2079, -98.0678, 0.73 ) }
    dend_53 { pt3dadd( 90.9912, -51.1215, -99.7201, 0.44 ) }
    dend_53 { pt3dadd( 91.1916, -51.0892, -100.11, 0.81 ) }
    dend_53 { pt3dadd( 92.446, -50.7489, -102.172, 0.37 ) }
    dend_53 { pt3dadd( 92.6462, -50.6541, -102.541, 0.59 ) }
    dend_53 { pt3dadd( 92.9282, -50.4481, -103.132, 0.22 ) }
    dend_53 { pt3dadd( 93.4139, -49.9905, -104.118, 0.22 ) }
    dend_53 { pt3dadd( 93.6057, -49.7853, -104.427, 0.22 ) }
    dend_53 { pt3dadd( 93.9577, -49.3566, -104.934, 0.73 ) }
    dend_53 { pt3dadd( 95.1839, -47.5544, -106.476, 0.37 ) }
    dend_53 { pt3dadd( 95.5307, -46.9768, -106.95, 0.37 ) }
    dend_53 { pt3dadd( 95.9938, -46.0992, -107.617, 0.59 ) }
    dend_53 { pt3dadd( 96.3955, -45.2225, -108.251, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_53 { pt3dadd( 96.7077, -44.4359, -108.88, 0.29 ) }
    dend_53 { pt3dadd( 96.9126, -43.8985, -109.336, 0.88 ) }
    dend_53 { pt3dadd( 97.3518, -42.7921, -110.273, 0.44 ) }
    dend_53 { pt3dadd( 97.5142, -42.4306, -110.623, 0.66 ) }
    dend_53 { pt3dadd( 97.8109, -41.8141, -111.484, 0.22 ) }
    dend_53 { pt3dadd( 98.2114, -41.1142, -112.616, 0.22 ) }
    dend_53 { pt3dadd( 98.4635, -40.7998, -113.214, 0.73 ) }
    dend_53 { pt3dadd( 98.6462, -40.6259, -113.583, 0.88 ) }
    dend_53 { pt3dadd( 99.1482, -40.2409, -114.396, 0.29 ) }
    dend_53 { pt3dadd( 101.019, -38.9339, -117.055, 0.29 ) }
    dend_53 { pt3dadd( 101.59, -38.5682, -117.768, 0.88 ) }
    dend_53 { pt3dadd( 102.61, -37.9158, -118.897, 0.37 ) }
    dend_53 { pt3dadd( 102.925, -37.7061, -119.238, 0.37 ) }
    dend_53 { pt3dadd( 103.569, -37.2712, -119.865, 0.07 ) }
    dend_53 { pt3dadd( 104.02, -36.9836, -120.274, 0.07 ) }
    dend_53 { pt3dadd( 104.761, -36.5995, -120.789, 0.29 ) }
    dend_53 { pt3dadd( 105.371, -36.3129, -121.253, 0.88 ) }
    dend_53 { pt3dadd( 106.727, -35.6759, -122.31, 0.07 ) }
    dend_53 { pt3dadd( 107.289, -35.4103, -122.79, 0.07 ) }
    dend_53 { pt3dadd( 109.193, -34.5485, -124.606, 0.88 ) }
    dend_53 { pt3dadd( 110.162, -34.1166, -125.623, 0.29 ) }
    dend_53 { pt3dadd( 111.394, -33.5472, -126.995, 0.81 ) }
    dend_53 { pt3dadd( 111.806, -33.3409, -127.503, 0.07 ) }
    dend_53 { pt3dadd( 112.727, -32.8392, -128.738, 0.88 ) }
    dend_53 { pt3dadd( 113.715, -32.2627, -130.152, 0.22 ) }
    dend_53 { pt3dadd( 114.348, -31.8493, -131.078, 0.44 ) }
    dend_53 { pt3dadd( 114.57, -31.6933, -131.412, 0.66 ) }
    dend_53 { pt3dadd( 115.494, -31.0571, -132.703, 0.29 ) }
    dend_53 { pt3dadd( 115.797, -30.8452, -133.102, 0.29 ) }
    dend_53 { pt3dadd( 116.425, -30.4072, -133.79, 0.59 ) }
    dend_53 { pt3dadd( 116.828, -30.1213, -134.168, 0.29 ) }
    dend_53 { pt3dadd( 117.26, -29.8454, -134.521, 0.29 ) }
    dend_53 { pt3dadd( 117.833, -29.5412, -134.945, 0.29 ) }
    dend_53 { pt3dadd( 118.81, -29.1569, -135.556, 1.18 ) }
    dend_53 { pt3dadd( 119.753, -28.8197, -136.365, 0.22 ) }
    dend_53 { pt3dadd( 120.502, -28.5576, -137.142, 0.22 ) }
    dend_53 { pt3dadd( 120.888, -28.4339, -137.571, 0.22 ) }
    dend_53 { pt3dadd( 121.316, -28.2977, -138.073, 0.22 ) }
    dend_53 { pt3dadd( 122.163, -27.9912, -139.153, 1.1 ) }
    dend_53 { pt3dadd( 124.121, -27.1105, -141.909, 0.07 ) }
    dend_53 { pt3dadd( 124.395, -26.9389, -142.376, 0.07 ) }
    dend_53 { pt3dadd( 124.679, -26.7099, -142.969, 0.07 ) }
    dend_53 { pt3dadd( 124.797, -26.5726, -143.291, 0.37 ) }
    dend_53 { pt3dadd( 125.032, -26.1336, -144.153, 0.22 ) }
    dend_53 { pt3dadd( 125.164, -25.7884, -144.737, 0.37 ) }
    dend_53 { pt3dadd( 125.468, -25.1634, -145.903, 0.37 ) }
    dend_53 { pt3dadd( 125.647, -24.7921, -146.84, 0.37 ) }
    dend_53 { pt3dadd( 125.741, -24.5719, -147.471, 0.37 ) }
    dend_53 { pt3dadd( 125.909, -24.2131, -148.582, 0.81 ) }
    dend_53 { pt3dadd( 126.124, -23.7961, -149.975, 0.37 ) }
    dend_53 { pt3dadd( 126.406, -23.2322, -151.97, 0.66 ) }
    dend_53 { pt3dadd( 126.849, -22.4697, -154.707, 0.37 ) }
    dend_53 { pt3dadd( 126.922, -22.3634, -155.118, 0.37 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 53/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 40.8316, -15.358, -8.63262, 0.29 ) }
    dend_50 { pt3dadd( 41.8939, -14.4958, -8.06028, 0.29 ) }
    dend_50 { pt3dadd( 43.1787, -13.4921, -7.67384, 0.29 ) }
    dend_50 { pt3dadd( 43.6089, -13.1892, -7.59793, 0.29 ) }
    dend_50 { pt3dadd( 44.1961, -12.8049, -7.52808, 0.44 ) }
    dend_50 { pt3dadd( 44.621, -12.5271, -7.49012, 0.51 ) }
    dend_50 { pt3dadd( 45.2, -12.1327, -7.46691, 0.95 ) }
    dend_50 { pt3dadd( 46.5601, -11.1796, -7.55708, 0.44 ) }
    dend_50 { pt3dadd( 47.6156, -10.4102, -7.7057, 0.44 ) }
    dend_50 { pt3dadd( 48.1655, -9.99132, -7.78438, 0.81 ) }
    dend_50 { pt3dadd( 48.6883, -9.60381, -7.83899, 0.81 ) }
    dend_50 { pt3dadd( 49.9422, -8.73075, -7.88983, 0.37 ) }
    dend_50 { pt3dadd( 50.3377, -8.48691, -7.87682, 0.59 ) }
    dend_50 { pt3dadd( 51.2414, -8.01973, -7.70102, 0.37 ) }
    dend_50 { pt3dadd( 51.9341, -7.74675, -7.49686, 0.37 ) }
    dend_50 { pt3dadd( 53.0283, -7.42957, -7.10081, 0.59 ) }
    dend_50 { pt3dadd( 53.915, -7.23851, -6.74131, 0.59 ) }
    dend_50 { pt3dadd( 54.8199, -7.10649, -6.32929, 0.37 ) }
    dend_50 { pt3dadd( 56.3619, -6.91488, -5.62153, 0.88 ) }
    dend_50 { pt3dadd( 57.3036, -6.80158, -5.18599, 0.44 ) }
    dend_50 { pt3dadd( 57.6575, -6.74012, -5.02024, 0.44 ) }
    dend_50 { pt3dadd( 58.3473, -6.56525, -4.6855, 0.59 ) }
    dend_50 { pt3dadd( 59.2129, -6.29608, -4.26883, 0.59 ) }
    dend_50 { pt3dadd( 59.9588, -6.04631, -3.89893, 0.37 ) }
    dend_50 { pt3dadd( 60.6214, -5.83794, -3.59112, 0.37 ) }
    dend_50 { pt3dadd( 61.6694, -5.54081, -3.09681, 0.37 ) }
    dend_50 { pt3dadd( 62.8698, -5.27456, -2.55081, 0.59 ) }
    dend_50 { pt3dadd( 63.752, -5.13572, -2.19384, 0.59 ) }
    dend_50 { pt3dadd( 65.5693, -4.92087, -1.57754, 0.37 ) }
    dend_50 { pt3dadd( 66.5737, -4.8432, -1.32157, 0.81 ) }
    dend_50 { pt3dadd( 66.9274, -4.82824, -1.25559, 0.81 ) }
    dend_50 { pt3dadd( 67.8606, -4.81977, -1.15077, 0.22 ) }
    dend_50 { pt3dadd( 68.8267, -4.82808, -1.09487, 0.22 ) }
    dend_50 { pt3dadd( 69.5967, -4.85165, -1.04364, 0.22 ) }
    dend_50 { pt3dadd( 70.7039, -4.92917, -0.895264, 0.22 ) }
    dend_50 { pt3dadd( 71.6073, -5.05484, -0.59251, 0.22 ) }
    dend_50 { pt3dadd( 72.0017, -5.14298, -0.396584, 0.22 ) }
    dend_50 { pt3dadd( 72.5573, -5.29907, -0.0553755, 0.29 ) }
    dend_50 { pt3dadd( 73.4276, -5.58869, 0.567304, 1.03 ) }
    dend_50 { pt3dadd( 74.7093, -6.10635, 1.59636, 0.73 ) }
    dend_50 { pt3dadd( 75.8655, -6.66084, 2.63672, 0.37 ) }
    dend_50 { pt3dadd( 76.3163, -6.89942, 3.05729, 0.59 ) }
    dend_50 { pt3dadd( 77.095, -7.32866, 3.82299, 1.1 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 96/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 16.7892, -28.1992, 19.0672, 0.44 ) }
    dend_48 { pt3dadd( 16.7318, -29.3309, 19.9991, 0.44 ) }
    dend_48 { pt3dadd( 16.6215, -30.2296, 20.612, 0.73 ) }
    dend_48 { pt3dadd( 16.5194, -30.9518, 21.0071, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_48 { pt3dadd( 16.4033, -31.8566, 21.4152, 0.51 ) }
    dend_48 { pt3dadd( 16.3632, -32.1952, 21.5639, 0.66 ) }
    dend_48 { pt3dadd( 16.3085, -32.6848, 21.7636, 0.51 ) }
    dend_48 { pt3dadd( 16.2087, -33.3162, 21.9795, 0.44 ) }
    dend_48 { pt3dadd( 16.0835, -34.0703, 22.2565, 0.59 ) }
    dend_48 { pt3dadd( 15.9879, -34.6246, 22.4894, 0.22 ) }
    dend_48 { pt3dadd( 15.8242, -35.5816, 22.9037, 0.88 ) }
    dend_48 { pt3dadd( 15.6972, -36.3146, 23.2318, 0.37 ) }
    dend_48 { pt3dadd( 15.497, -37.4609, 23.7522, 0.44 ) }
    dend_48 { pt3dadd( 15.3716, -38.1506, 24.074, 0.44 ) }
    dend_48 { pt3dadd( 15.143, -39.2177, 24.5686, 0.37 ) }
    dend_48 { pt3dadd( 14.9595, -39.9476, 24.8991, 0.29 ) }
    dend_48 { pt3dadd( 14.7504, -40.6734, 25.2173, 0.29 ) }
    dend_48 { pt3dadd( 14.5022, -41.532, 25.6536, 0.29 ) }
    dend_48 { pt3dadd( 14.3524, -42.0924, 25.9512, 0.29 ) }
    dend_48 { pt3dadd( 14.1672, -42.835, 26.3776, 0.73 ) }
    dend_48 { pt3dadd( 13.9969, -43.5496, 26.827, 0.73 ) }
    dend_48 { pt3dadd( 13.6802, -44.5761, 27.5757, 0.15 ) }
    dend_48 { pt3dadd( 13.2049, -45.7722, 28.4988, 0.22 ) }
    dend_48 { pt3dadd( 13.0818, -46.043, 28.7086, 0.22 ) }
    dend_48 { pt3dadd( 12.8542, -46.5238, 29.0605, 0.22 ) }
    dend_48 { pt3dadd( 12.5889, -47.1264, 29.4635, 0.29 ) }
    dend_48 { pt3dadd( 11.9162, -48.8445, 30.4423, 0.07 ) }
    dend_48 { pt3dadd( 11.667, -49.6185, 30.7926, 0.15 ) }
    dend_48 { pt3dadd( 11.5207, -50.0314, 30.948, 0.15 ) }
    dend_48 { pt3dadd( 11.3365, -50.5614, 31.1434, 0.15 ) }
    dend_48 { pt3dadd( 11.1223, -51.3446, 31.4025, 0.15 ) }
    dend_48 { pt3dadd( 11.0429, -52.0546, 31.5795, 0.15 ) }
    dend_48 { pt3dadd( 11.2604, -52.8662, 31.5795, 0.15 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 29/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 16.7892, -28.1992, 19.0672, 0.37 ) }
    dend_47 { pt3dadd( 17.0649, -28.0166, 19.4923, 0.37 ) }
    dend_47 { pt3dadd( 17.8218, -27.5568, 20.6645, 0.66 ) }
    dend_47 { pt3dadd( 18.5088, -27.1773, 21.7076, 0.15 ) }
    dend_47 { pt3dadd( 19.0539, -26.9049, 22.5697, 0.07 ) }
    dend_47 { pt3dadd( 19.6012, -26.6607, 23.5046, 0.37 ) }
    dend_47 { pt3dadd( 20.293, -26.4287, 24.7798, 0.22 ) }
    dend_47 { pt3dadd( 21.0098, -26.2878, 26.2596, 0.22 ) }
    dend_47 { pt3dadd( 21.144, -26.2877, 26.541, 0.22 ) }
    dend_47 { pt3dadd( 21.5129, -26.3348, 27.3351, 0.22 ) }
    dend_47 { pt3dadd( 21.87, -26.4134, 28.1103, 0.44 ) }
    dend_47 { pt3dadd( 22.4113, -26.5246, 29.3017, 0.81 ) }
    dend_47 { pt3dadd( 23.1894, -26.5604, 30.9898, 0.15 ) }
    dend_47 { pt3dadd( 23.6852, -26.4623, 32.1896, 0.37 ) }
    dend_47 { pt3dadd( 23.8615, -26.3837, 32.6923, 0.15 ) }
    dend_47 { pt3dadd( 24.0747, -26.2434, 33.3736, 0.15 ) }
    dend_47 { pt3dadd( 24.2901, -26.0649, 34.1293, 0.59 ) }
    dend_47 { pt3dadd( 24.5408, -25.7685, 35.2333, 0.44 ) }
    dend_47 { pt3dadd( 24.7064, -25.4733, 36.3009, 0.44 ) }
    dend_47 { pt3dadd( 24.8443, -25.1981, 37.2065, 0.44 ) }
    dend_47 { pt3dadd( 25.0832, -24.9366, 38.0124, 0.44 ) }
    dend_47 { pt3dadd( 25.4026, -24.7206, 38.695, 0.44 ) }
    dend_47 { pt3dadd( 25.672, -24.6075, 39.1403, 0.44 ) }
    dend_47 { pt3dadd( 26.2132, -24.4489, 39.8507, 0.29 ) }
    dend_47 { pt3dadd( 26.7464, -24.3759, 40.4884, 0.29 ) }
    dend_47 { pt3dadd( 27.702, -24.3646, 41.595, 0.29 ) }
    dend_47 { pt3dadd( 28.4973, -24.4347, 42.5482, 0.29 ) }
    dend_47 { pt3dadd( 29.4055, -24.5767, 43.6649, 0.73 ) }
    dend_47 { pt3dadd( 29.6726, -24.6361, 44.0095, 0.37 ) }
    dend_47 { pt3dadd( 30.5454, -24.9032, 45.2222, 0.29 ) }
    dend_47 { pt3dadd( 31.04, -25.0936, 45.9777, 0.29 ) }
    dend_47 { pt3dadd( 31.128, -25.1379, 46.1166, 0.29 ) }
    dend_47 { pt3dadd( 31.6741, -25.0866, 47.0019, 0.15 ) }
    dend_47 { pt3dadd( 31.9029, -24.5833, 47.4296, 0.22 ) }
    dend_47 { pt3dadd( 32.2169, -23.8937, 47.9648, 0.22 ) }
    dend_47 { pt3dadd( 32.4445, -23.3183, 48.3765, 0.66 ) }
    dend_47 { pt3dadd( 32.577, -23.0159, 48.6393, 0.22 ) }
    dend_47 { pt3dadd( 33.1605, -22.2356, 49.6664, 0.22 ) }
    dend_47 { pt3dadd( 33.5201, -21.9201, 50.2059, 0.22 ) }
    dend_47 { pt3dadd( 33.9611, -21.5977, 50.781, 0.22 ) }
    dend_47 { pt3dadd( 34.4414, -21.2795, 51.4003, 0.22 ) }
    dend_47 { pt3dadd( 34.5597, -21.2022, 51.5689, 0.22 ) }
    dend_47 { pt3dadd( 34.9618, -20.8656, 52.2217, 0.22 ) }
    dend_47 { pt3dadd( 35.2828, -20.5183, 52.712, 0.22 ) }
    dend_47 { pt3dadd( 35.4564, -20.2779, 53.005, 0.29 ) }
    dend_47 { pt3dadd( 35.213, -20.8032, 53.5065, 0.29 ) }
    dend_47 { pt3dadd( 34.9506, -21.3538, 53.8859, 0.22 ) }
    dend_47 { pt3dadd( 34.6886, -21.8911, 54.2124, 0.22 ) }
    dend_47 { pt3dadd( 34.4282, -22.4017, 54.4731, 0.22 ) }
    dend_47 { pt3dadd( 34.0379, -23.1952, 54.8328, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 79/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -28.957, 30.9609, -57.2094, 0.44 ) }
    dend_35 { pt3dadd( -28.5225, 31.0588, -58.3782, 0.44 ) }
    dend_35 { pt3dadd( -28.2042, 31.1836, -59.577, 0.44 ) }
    dend_35 { pt3dadd( -27.8822, 31.3751, -61.2639, 0.66 ) }
    dend_35 { pt3dadd( -27.7207, 31.57, -62.9309, 0.66 ) }
    dend_35 { pt3dadd( -27.7693, 31.6858, -64.1733, 0.81 ) }
    dend_35 { pt3dadd( -27.9262, 31.7571, -65.1932, 0.81 ) }
    dend_35 { pt3dadd( -28.3884, 31.8221, -66.638, 0.81 ) }
    dend_35 { pt3dadd( -28.6319, 31.8449, -67.1749, 0.81 ) }
    dend_35 { pt3dadd( -29.3518, 31.894, -68.4576, 0.44 ) }
    dend_35 { pt3dadd( -30.5409, 31.9532, -70.295, 0.59 ) }
    dend_35 { pt3dadd( -31.81, 31.9622, -72.1317, 1.03 ) }
    dend_35 { pt3dadd( -32.537, 31.94, -73.2107, 1.03 ) }
    dend_35 { pt3dadd( -33.0501, 31.9095, -74.0825, 0.66 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 93/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -28.957, 30.9609, -57.2094, 0.29 ) }
    dend_34 { pt3dadd( -29.374, 30.887, -57.0709, 0.29 ) }
    dend_34 { pt3dadd( -30.3259, 30.7181, -56.7549, 0.29 ) }
    dend_34 { pt3dadd( -30.8998, 30.6162, -56.5643, 0.44 ) }
    dend_34 { pt3dadd( -31.9975, 30.4215, -56.1999, 0.44 ) }
    dend_34 { pt3dadd( -32.5809, 30.3179, -56.0062, 1.03 ) }
    dend_34 { pt3dadd( -33.1381, 30.2191, -55.8212, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 0/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 23.2134, 0.118136, -5.4901, 0.88 ) }
    dend_26 { pt3dadd( 25.1314, -0.290895, -5.21835, 0.88 ) }
    dend_26 { pt3dadd( 26.3434, -0.472117, -5.05233, 0.73 ) }
    dend_26 { pt3dadd( 27.667, -0.585591, -4.89138, 0.73 ) }
    dend_26 { pt3dadd( 28.43, -0.601863, -4.81494, 0.73 ) }
    dend_26 { pt3dadd( 29.3525, -0.569679, -4.73425, 0.88 ) }
    dend_26 { pt3dadd( 30.0111, -0.529434, -4.68231, 1.03 ) }
    dend_26 { pt3dadd( 30.5917, -0.431976, -4.64452, 1.03 ) }
    dend_26 { pt3dadd( 31.8227, -0.181433, -4.58055, 0.66 ) }
    dend_26 { pt3dadd( 33.4215, 0.168429, -4.52114, 0.44 ) }
    dend_26 { pt3dadd( 34.7576, 0.452, -4.50421, 0.66 ) }
    dend_26 { pt3dadd( 35.4041, 0.584366, -4.49511, 0.81 ) }
    dend_26 { pt3dadd( 36.2771, 0.7602, -4.48163, 1.1 ) }
    dend_26 { pt3dadd( 36.8534, 0.88572, -4.47172, 1.1 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 14/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 23.2134, 0.118136, -5.4901, 0.73 ) }
    dend_25 { pt3dadd( 23.7467, 1.29073, -4.98387, 0.73 ) }
    dend_25 { pt3dadd( 24.0358, 1.93579, -4.63924, 0.59 ) }
    dend_25 { pt3dadd( 24.3892, 2.69923, -4.20811, 0.59 ) }
    dend_25 { pt3dadd( 24.5828, 3.09299, -3.99023, 0.66 ) }
    dend_25 { pt3dadd( 24.974, 3.83681, -3.5968, 0.51 ) }
    dend_25 { pt3dadd( 25.4975, 4.79121, -3.14932, 0.51 ) }
    dend_25 { pt3dadd( 25.974, 5.69643, -2.78495, 0.51 ) }
    dend_25 { pt3dadd( 26.495, 6.70293, -2.48732, 0.37 ) }
    dend_25 { pt3dadd( 26.8807, 7.4852, -2.3652, 0.37 ) }
    dend_25 { pt3dadd( 27.226, 8.24469, -2.32324, 0.51 ) }
    dend_25 { pt3dadd( 27.6261, 9.27094, -2.35972, 0.66 ) }
    dend_25 { pt3dadd( 27.8883, 10.1389, -2.44587, 0.81 ) }
    dend_25 { pt3dadd( 28.117, 11.1565, -2.58046, 0.51 ) }
    dend_25 { pt3dadd( 28.3273, 12.5502, -2.76175, 0.44 ) }
    dend_25 { pt3dadd( 28.4035, 13.495, -2.86409, 0.44 ) }
    dend_25 { pt3dadd( 28.4377, 14.4547, -2.94036, 0.44 ) }
    dend_25 { pt3dadd( 28.4675, 15.9934, -3.00876, 0.88 ) }
    dend_25 { pt3dadd( 28.5031, 16.8064, -3.0221, 0.88 ) }
    dend_25 { pt3dadd( 28.5842, 17.6954, -3.02592, 1.25 ) }
    dend_25 { pt3dadd( 28.7935, 18.7447, -3.04062, 0.95 ) }
    dend_25 { pt3dadd( 29.133, 19.7411, -3.0764, 0.29 ) }
    dend_25 { pt3dadd( 29.3468, 20.1573, -3.10124, 0.29 ) }
    dend_25 { pt3dadd( 29.8335, 20.8643, -3.16128, 0.29 ) }
    dend_25 { pt3dadd( 30.329, 21.4826, -3.22265, 0.81 ) }
    dend_25 { pt3dadd( 31.3305, 22.5728, -3.33745, 0.51 ) }
    dend_25 { pt3dadd( 31.9301, 23.1753, -3.39969, 0.51 ) }
    dend_25 { pt3dadd( 32.2617, 23.5151, -3.43842, 0.73 ) }
    dend_25 { pt3dadd( 32.5513, 23.8518, -3.4745, 0.51 ) }
    dend_25 { pt3dadd( 32.9074, 24.3434, -3.51998, 0.95 ) }
    dend_25 { pt3dadd( 33.5798, 25.4472, -3.60162, 0.66 ) }
    dend_25 { pt3dadd( 34.0572, 26.3693, -3.64952, 0.51 ) }
    dend_25 { pt3dadd( 34.3438, 26.9655, -3.68094, 0.51 ) }
    dend_25 { pt3dadd( 34.8237, 28.0208, -3.73431, 0.51 ) }
    dend_25 { pt3dadd( 35.2281, 28.9913, -3.79704, 0.51 ) }
    dend_25 { pt3dadd( 35.5021, 29.7514, -3.85414, 0.51 ) }
    dend_25 { pt3dadd( 35.6661, 30.3164, -3.8992, 0.81 ) }
    dend_25 { pt3dadd( 35.7553, 30.6683, -3.92606, 0.95 ) }
    dend_25 { pt3dadd( 35.9391, 31.4381, -3.97801, 0.95 ) }
    dend_25 { pt3dadd( 36.1129, 32.2275, -4.03757, 0.95 ) }
    dend_25 { pt3dadd( 36.1802, 32.5903, -4.06501, 0.95 ) }
    dend_25 { pt3dadd( 36.3498, 33.7923, -4.1481, 0.51 ) }
    dend_25 { pt3dadd( 36.4068, 34.5439, -4.19149, 0.22 ) }
    dend_25 { pt3dadd( 36.4061, 34.9221, -4.20735, 0.66 ) }
    dend_25 { pt3dadd( 36.3835, 35.3832, -4.21942, 0.66 ) }
    dend_25 { pt3dadd( 36.3554, 36.2241, -4.25059, 0.22 ) }
    dend_25 { pt3dadd( 36.3506, 36.8207, -4.24233, 0.73 ) }
    dend_25 { pt3dadd( 36.3681, 37.45, -4.2311, 0.73 ) }
    dend_25 { pt3dadd( 36.4358, 38.2701, -4.26956, 0.44 ) }
    dend_25 { pt3dadd( 36.5591, 39.1671, -4.35121, 0.73 ) }
    dend_25 { pt3dadd( 36.7493, 40.1228, -4.49173, 0.73 ) }
    dend_25 { pt3dadd( 37.1788, 41.606, -4.81915, 0.37 ) }
    dend_25 { pt3dadd( 37.4855, 42.5029, -5.06094, 0.15 ) }
    dend_25 { pt3dadd( 37.9905, 43.9127, -5.48218, 0.81 ) }
    dend_25 { pt3dadd( 38.1836, 44.4645, -5.65177, 0.51 ) }
    dend_25 { pt3dadd( 38.4395, 45.2474, -5.95074, 0.29 ) }
    dend_25 { pt3dadd( 38.817, 46.5173, -6.49383, 0.29 ) }
    dend_25 { pt3dadd( 38.9523, 47.0384, -6.73507, 0.51 ) }
    dend_25 { pt3dadd( 39.1538, 47.9108, -7.08624, 0.51 ) }
    dend_25 { pt3dadd( 39.3809, 49.0248, -7.4712, 0.22 ) }
    dend_25 { pt3dadd( 39.6317, 50.6771, -8.00664, 1.03 ) }
    dend_25 { pt3dadd( 39.6745, 51.182, -8.14828, 1.03 ) }
    dend_25 { pt3dadd( 39.7188, 52.3262, -8.4314, 0.37 ) }
    dend_25 { pt3dadd( 39.7692, 53.1427, -8.6194, 0.37 ) }
    dend_25 { pt3dadd( 39.8515, 53.8663, -8.76813, 0.37 ) }
    dend_25 { pt3dadd( 40.0205, 54.8386, -8.9227, 0.37 ) }
    dend_25 { pt3dadd( 40.2805, 55.7857, -8.99641, 0.37 ) }
    dend_25 { pt3dadd( 40.449, 56.1803, -9.03104, 0.59 ) }
    dend_25 { pt3dadd( 40.8452, 56.8554, -9.09666, 0.22 ) }
    dend_25 { pt3dadd( 41.3816, 57.6545, -9.17051, 0.22 ) }
    dend_25 { pt3dadd( 41.7408, 58.1279, -9.20807, 0.37 ) }
    dend_25 { pt3dadd( 42.1734, 58.6471, -9.24419, 0.37 ) }
    dend_25 { pt3dadd( 42.6987, 59.2389, -9.31861, 0.15 ) }
    dend_25 { pt3dadd( 43.0336, 59.6316, -9.33319, 0.15 ) }
    dend_25 { pt3dadd( 43.6084, 60.3098, -9.29163, 0.22 ) }
    dend_25 { pt3dadd( 43.847, 60.5306, -9.26166, 0.22 ) }
    dend_25 { pt3dadd( 44.2379, 60.7373, -9.22199, 0.22 ) }
    dend_25 { pt3dadd( 45.0061, 61.0286, -9.13694, 0.22 ) }
    dend_25 { pt3dadd( 46.4342, 61.3397, -8.97515, 0.22 ) }
    dend_25 { pt3dadd( 47.0895, 61.424, -8.90094, 0.22 ) }
    dend_25 { pt3dadd( 48.1986, 61.4503, -8.77065, 0.22 ) }
    dend_25 { pt3dadd( 49.4614, 61.4126, -8.61325, 0.15 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 96/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -10.2191, -5.73735, 22.8879, 0.37 ) }
    dend_21 { pt3dadd( -9.35092, -5.69154, 23.5618, 0.37 ) }
    dend_21 { pt3dadd( -8.3718, -5.28044, 24.2562, 0.37 ) }
    dend_21 { pt3dadd( -7.93515, -5.05725, 24.5261, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_21 { pt3dadd( -7.28325, -4.75557, 24.8751, 0.37 ) }
    dend_21 { pt3dadd( -6.45332, -4.42992, 25.2832, 0.37 ) }
    dend_21 { pt3dadd( -5.73576, -4.18675, 25.6301, 0.37 ) }
    dend_21 { pt3dadd( -4.48499, -3.7381, 26.2286, 0.51 ) }
    dend_21 { pt3dadd( -3.88238, -3.55718, 26.5034, 0.07 ) }
    dend_21 { pt3dadd( -2.95984, -3.56116, 26.9013, 0.59 ) }
    dend_21 { pt3dadd( -2.44764, -3.83505, 27.1444, 0.95 ) }
    dend_21 { pt3dadd( -2.15202, -4.07311, 27.302, 0.95 ) }
    dend_21 { pt3dadd( -1.15606, -4.96417, 27.9299, 0.37 ) }
    dend_21 { pt3dadd( -0.706316, -5.33994, 28.3283, 0.37 ) }
    dend_21 { pt3dadd( -0.230042, -5.64466, 28.7874, 0.51 ) }
    dend_21 { pt3dadd( 0.399719, -5.87247, 29.4485, 0.73 ) }
    dend_21 { pt3dadd( 0.943374, -5.95861, 30.0482, 0.44 ) }
    dend_21 { pt3dadd( 1.71398, -5.97443, 30.9879, 0.44 ) }
    dend_21 { pt3dadd( 2.93285, -5.84922, 32.6639, 0.73 ) }
    dend_21 { pt3dadd( 3.3737, -5.78933, 33.359, 0.59 ) }
    dend_21 { pt3dadd( 4.21349, -5.73409, 34.911, 0.59 ) }
    dend_21 { pt3dadd( 4.52434, -5.7578, 35.5148, 0.59 ) }
    dend_21 { pt3dadd( 4.99049, -5.8681, 36.4088, 0.59 ) }
    dend_21 { pt3dadd( 5.28871, -5.96762, 36.9469, 0.59 ) }
    dend_21 { pt3dadd( 5.80557, -6.15567, 37.7066, 0.59 ) }
    dend_21 { pt3dadd( 6.6709, -6.48018, 38.7262, 0.37 ) }
    dend_21 { pt3dadd( 7.49367, -6.80871, 39.3952, 0.29 ) }
    dend_21 { pt3dadd( 8.35857, -7.17582, 39.9607, 0.29 ) }
    dend_21 { pt3dadd( 8.90434, -7.40934, 40.2576, 0.29 ) }
    dend_21 { pt3dadd( 9.53035, -7.68694, 40.5643, 0.29 ) }
    dend_21 { pt3dadd( 10.11, -7.90975, 40.8064, 0.29 ) }
    dend_21 { pt3dadd( 10.6686, -8.09238, 41.0121, 0.29 ) }
    dend_21 { pt3dadd( 11.4096, -8.53356, 41.3415, 0.22 ) }
    dend_21 { pt3dadd( 11.6538, -8.9201, 41.4751, 0.22 ) }
    dend_21 { pt3dadd( 11.8081, -10.061, 41.7642, 0.22 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 31/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -10.2191, -5.73735, 22.8879, 0.66 ) }
    dend_20 { pt3dadd( -10.4426, -5.34478, 23.8301, 0.66 ) }
    dend_20 { pt3dadd( -10.6491, -4.69074, 24.9435, 0.44 ) }
    dend_20 { pt3dadd( -10.7603, -4.13738, 25.6966, 0.44 ) }
    dend_20 { pt3dadd( -10.8577, -3.696, 26.2241, 0.81 ) }
    dend_20 { pt3dadd( -11.042, -2.99141, 27.0624, 0.44 ) }
    dend_20 { pt3dadd( -11.2396, -2.42374, 27.7416, 0.44 ) }
    dend_20 { pt3dadd( -11.3892, -1.96664, 28.2541, 0.51 ) }
    dend_20 { pt3dadd( -11.5997, -1.37591, 28.9219, 0.73 ) }
    dend_20 { pt3dadd( -11.8477, -0.937183, 29.5273, 0.44 ) }
    dend_20 { pt3dadd( -12.311, -0.596589, 30.321, 0.44 ) }
    dend_20 { pt3dadd( -12.7829, -0.674094, 30.8901, 0.59 ) }
    dend_20 { pt3dadd( -13.1771, -0.982945, 31.2639, 0.59 ) }
    dend_20 { pt3dadd( -13.8097, -1.60436, 31.797, 0.59 ) }
    dend_20 { pt3dadd( -14.3473, -2.13043, 32.2158, 0.88 ) }
    dend_20 { pt3dadd( -14.583, -2.33868, 32.3992, 0.88 ) }
    dend_20 { pt3dadd( -15.2322, -2.81984, 32.9622, 0.66 ) }
    dend_20 { pt3dadd( -16.1382, -3.31965, 33.8896, 0.37 ) }
    dend_20 { pt3dadd( -16.8361, -3.54289, 34.674, 1.03 ) }
    dend_20 { pt3dadd( -17.4892, -3.56512, 35.5305, 0.66 ) }
    dend_20 { pt3dadd( -18.2151, -3.38891, 36.7168, 0.81 ) }
    dend_20 { pt3dadd( -18.8167, -3.03195, 38.0569, 0.51 ) }
    dend_20 { pt3dadd( -19.0207, -2.74738, 38.8558, 0.66 ) }
    dend_20 { pt3dadd( -19.0469, -2.46846, 39.5896, 1.03 ) }
    dend_20 { pt3dadd( -18.8364, -2.26025, 40.4642, 0.44 ) }
    dend_20 { pt3dadd( -18.5234, -2.38818, 40.9712, 0.44 ) }
    dend_20 { pt3dadd( -18.0404, -2.89348, 41.5607, 0.44 ) }
    dend_20 { pt3dadd( -17.6044, -3.60153, 42.0803, 0.59 ) }
    dend_20 { pt3dadd( -17.0742, -4.6685, 42.7194, 0.37 ) }
    dend_20 { pt3dadd( -16.7067, -5.54609, 43.1761, 0.37 ) }
    dend_20 { pt3dadd( -16.4889, -6.20444, 43.4655, 0.51 ) }
    dend_20 { pt3dadd( -16.2074, -7.38303, 43.9362, 0.51 ) }
    dend_20 { pt3dadd( -16.0932, -8.14174, 44.2079, 1.32 ) }
    dend_20 { pt3dadd( -16.0739, -8.5918, 44.3627, 1.32 ) }
    dend_20 { pt3dadd( -16.1391, -9.02105, 44.5215, 1.03 ) }
    dend_20 { pt3dadd( -16.7479, -10.0884, 44.898, 0.29 ) }
    dend_20 { pt3dadd( -17.2485, -10.4964, 45.0341, 0.22 ) }
    dend_20 { pt3dadd( -17.7111, -10.7614, 45.1099, 0.22 ) }
    dend_20 { pt3dadd( -18.3434, -11.1045, 45.1997, 0.22 ) }
    dend_20 { pt3dadd( -19.2112, -11.5223, 45.3146, 0.22 ) }
    dend_20 { pt3dadd( -20.3777, -12.021, 45.4557, 0.22 ) }
    dend_20 { pt3dadd( -20.9629, -12.2446, 45.5163, 0.22 ) }
    dend_20 { pt3dadd( -21.8461, -12.6672, 45.6134, 0.88 ) }
    dend_20 { pt3dadd( -22.5453, -13.0942, 45.6899, 0.37 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 75/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.42075, 48.1484, -20.4958, 0.44 ) }
    dend_17 { pt3dadd( 2.56661, 49.0201, -20.4776, 0.44 ) }
    dend_17 { pt3dadd( 2.64392, 49.5242, -20.4811, 0.44 ) }
    dend_17 { pt3dadd( 2.73954, 50.2578, -20.4945, 0.44 ) }
    dend_17 { pt3dadd( 2.83153, 51.1498, -20.5708, 0.37 ) }
    dend_17 { pt3dadd( 2.95151, 52.3446, -20.7595, 0.37 ) }
    dend_17 { pt3dadd( 3.13376, 53.7504, -21.0294, 0.37 ) }
    dend_17 { pt3dadd( 3.26018, 54.4161, -21.1914, 0.37 ) }
    dend_17 { pt3dadd( 3.54439, 55.4128, -21.5602, 0.59 ) }
    dend_17 { pt3dadd( 3.94623, 56.5107, -22.1298, 0.37 ) }
    dend_17 { pt3dadd( 4.25174, 57.2612, -22.6238, 0.59 ) }
    dend_17 { pt3dadd( 4.48424, 57.8916, -23.118, 0.51 ) }
    dend_17 { pt3dadd( 4.85412, 58.9582, -24.0179, 0.29 ) }
    dend_17 { pt3dadd( 5.16885, 59.9589, -24.8794, 0.29 ) }
    dend_17 { pt3dadd( 5.335, 60.5686, -25.3854, 0.29 ) }
    dend_17 { pt3dadd( 5.46058, 61.1709, -25.7924, 0.37 ) }
    dend_17 { pt3dadd( 5.5845, 62.0053, -26.2617, 0.37 ) }
    dend_17 { pt3dadd( 5.67187, 62.7016, -26.5833, 0.37 ) }
    dend_17 { pt3dadd( 5.75839, 63.3758, -26.8586, 0.37 ) }
    dend_17 { pt3dadd( 5.95349, 64.4711, -27.3087, 0.81 ) }
    dend_17 { pt3dadd( 6.24428, 65.5006, -27.7749, 0.59 ) }
    dend_17 { pt3dadd( 6.62288, 66.4331, -28.2259, 1.25 ) }
    dend_17 { pt3dadd( 7.07299, 67.2919, -28.6531, 1.25 ) }
    dend_17 { pt3dadd( 7.72864, 68.3926, -29.2798, 0.51 ) }
    dend_17 { pt3dadd( 8.3877, 69.4498, -29.9375, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_17 { pt3dadd( 9.09964, 70.534, -30.6952, 0.29 ) }
    dend_17 { pt3dadd( 9.75596, 71.4782, -31.4114, 0.37 ) }
    dend_17 { pt3dadd( 10.3952, 72.3724, -32.1224, 0.59 ) }
    dend_17 { pt3dadd( 11.1244, 73.4, -33.0243, 0.29 ) }
    dend_17 { pt3dadd( 11.5907, 74.1012, -33.6904, 0.66 ) }
    dend_17 { pt3dadd( 11.9762, 74.7627, -34.3938, 0.29 ) }
    dend_17 { pt3dadd( 12.0851, 74.9947, -34.6725, 0.29 ) }
    dend_17 { pt3dadd( 12.2507, 75.4119, -35.2337, 0.29 ) }
    dend_17 { pt3dadd( 12.5474, 76.2638, -36.2992, 0.29 ) }
    dend_17 { pt3dadd( 12.8284, 77.0416, -37.0973, 0.29 ) }
    dend_17 { pt3dadd( 12.9401, 77.3147, -37.3662, 0.29 ) }
    dend_17 { pt3dadd( 13.2186, 77.9428, -37.9327, 0.29 ) }
    dend_17 { pt3dadd( 13.4646, 78.3737, -38.3072, 0.29 ) }
    dend_17 { pt3dadd( 14.2759, 79.3892, -39.224, 0.29 ) }
    dend_17 { pt3dadd( 14.8221, 79.9032, -39.7432, 0.37 ) }
    dend_17 { pt3dadd( 15.6593, 80.5867, -40.4924, 0.37 ) }
    dend_17 { pt3dadd( 15.8387, 80.7309, -40.6688, 0.37 ) }
    dend_17 { pt3dadd( 16.4344, 81.2312, -41.3475, 0.51 ) }
    dend_17 { pt3dadd( 17.2037, 81.8895, -42.2791, 0.44 ) }
    dend_17 { pt3dadd( 17.9058, 82.4767, -43.174, 0.66 ) }
    dend_17 { pt3dadd( 18.1733, 82.711, -43.5191, 0.66 ) }
    dend_17 { pt3dadd( 18.977, 83.4466, -44.5466, 0.73 ) }
    dend_17 { pt3dadd( 19.8783, 84.2251, -45.6495, 0.37 ) }
    dend_17 { pt3dadd( 20.6656, 84.8382, -46.5362, 0.44 ) }
    dend_17 { pt3dadd( 21.5462, 85.3822, -47.3286, 0.44 ) }
    dend_17 { pt3dadd( 22.1526, 85.6363, -47.7963, 0.44 ) }
    dend_17 { pt3dadd( 22.6124, 85.75, -48.148, 0.73 ) }
    dend_17 { pt3dadd( 23.6541, 85.8964, -48.9942, 0.37 ) }
    dend_17 { pt3dadd( 24.6154, 85.9894, -49.8403, 0.51 ) }
    dend_17 { pt3dadd( 25.5112, 86.086, -50.7067, 0.22 ) }
    dend_17 { pt3dadd( 26.7864, 86.2721, -51.9744, 0.88 ) }
    dend_17 { pt3dadd( 28.5404, 86.5769, -53.7119, 0.66 ) }
    dend_17 { pt3dadd( 30.0976, 86.899, -55.26, 0.29 ) }
    dend_17 { pt3dadd( 30.8609, 87.0947, -55.9883, 0.29 ) }
    dend_17 { pt3dadd( 31.9408, 87.3896, -56.9471, 0.29 ) }
    dend_17 { pt3dadd( 32.9597, 87.6782, -57.7437, 0.66 ) }
    dend_17 { pt3dadd( 34.088, 87.9842, -58.395, 0.29 ) }
    dend_17 { pt3dadd( 34.6293, 88.109, -58.6134, 0.44 ) }
    dend_17 { pt3dadd( 36.0567, 88.3492, -59.0747, 0.29 ) }
    dend_17 { pt3dadd( 37.2913, 88.4745, -59.4496, 0.29 ) }
    dend_17 { pt3dadd( 37.8547, 88.5063, -59.6215, 0.29 ) }
    dend_17 { pt3dadd( 38.5544, 88.5298, -59.8743, 0.29 ) }
    dend_17 { pt3dadd( 39.53, 88.5639, -60.2862, 0.29 ) }
    dend_17 { pt3dadd( 40.2194, 88.5622, -60.6056, 0.29 ) }
    dend_17 { pt3dadd( 40.9158, 88.486, -60.9778, 0.51 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 45/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 2.42075, 48.1484, -20.4958, 0.37 ) }
    dend_12 { pt3dadd( 1.82761, 49.3081, -20.6382, 0.37 ) }
    dend_12 { pt3dadd( 1.52417, 49.9014, -20.7111, 0.37 ) }
    dend_12 { pt3dadd( 1.09204, 50.7463, -20.8148, 0.81 ) }
    dend_12 { pt3dadd( 0.980699, 50.964, -20.8416, 0.88 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 50/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 15.5101, 36.9098, -14.1491, 0.66 ) }
    dend_10 { pt3dadd( 15.6287, 37.4945, -13.8123, 0.66 ) }
    dend_10 { pt3dadd( 15.7339, 38.428, -13.3538, 0.66 ) }
    dend_10 { pt3dadd( 15.828, 39.5915, -12.7975, 0.44 ) }
    dend_10 { pt3dadd( 15.9266, 40.6092, -12.3386, 0.29 ) }
    dend_10 { pt3dadd( 16.0163, 41.5357, -11.9209, 0.29 ) }
    dend_10 { pt3dadd( 16.0854, 42.2499, -11.5989, 0.29 ) }
    dend_10 { pt3dadd( 16.1477, 42.9394, -11.3228, 0.15 ) }
    dend_10 { pt3dadd( 16.172, 43.7352, -11.0841, 0.15 ) }
    dend_10 { pt3dadd( 16.1067, 44.5509, -10.8924, 0.15 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 60/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 15.5101, 36.9098, -14.1491, 0.51 ) }
    dend_9 { pt3dadd( 16.7899, 37.4496, -14.7301, 0.51 ) }
    dend_9 { pt3dadd( 18.5447, 38.2251, -15.4773, 0.51 ) }
    dend_9 { pt3dadd( 19.9515, 38.8713, -16.0145, 0.66 ) }
    dend_9 { pt3dadd( 21.118, 39.4158, -16.4212, 0.51 ) }
    dend_9 { pt3dadd( 22.5615, 40.0665, -16.8521, 0.73 ) }
    dend_9 { pt3dadd( 23.4405, 40.4458, -17.0805, 1.18 ) }
    dend_9 { pt3dadd( 24.1021, 40.722, -17.1877, 1.18 ) }
    dend_9 { pt3dadd( 25.4205, 41.224, -17.2772, 0.73 ) }
    dend_9 { pt3dadd( 26.0178, 41.4232, -17.2746, 0.95 ) }
    dend_9 { pt3dadd( 27.0235, 41.6751, -17.2333, 1.03 ) }
    dend_9 { pt3dadd( 27.6731, 41.7877, -17.2022, 1.03 ) }
    dend_9 { pt3dadd( 29.3324, 41.9651, -17.1736, 0.44 ) }
    dend_9 { pt3dadd( 30.1545, 42.0086, -17.2045, 0.44 ) }
    dend_9 { pt3dadd( 31.2036, 42.015, -17.2974, 0.88 ) }
    dend_9 { pt3dadd( 32.6914, 41.9828, -17.5856, 0.44 ) }
    dend_9 { pt3dadd( 33.5097, 41.9648, -17.8668, 0.44 ) }
    dend_9 { pt3dadd( 34.1854, 41.9534, -18.177, 0.44 ) }
    dend_9 { pt3dadd( 35.112, 41.9789, -18.8802, 0.44 ) }
    dend_9 { pt3dadd( 35.4814, 42.0186, -19.2296, 0.88 ) }
    dend_9 { pt3dadd( 36.625, 42.2236, -20.4491, 0.29 ) }
    dend_9 { pt3dadd( 37.5127, 42.454, -21.4034, 0.29 ) }
    dend_9 { pt3dadd( 37.8683, 42.5668, -21.7873, 0.88 ) }
    dend_9 { pt3dadd( 39.9525, 43.3935, -24.0481, 0.44 ) }
    dend_9 { pt3dadd( 40.609, 43.7428, -24.7455, 0.66 ) }
    dend_9 { pt3dadd( 41.0237, 44.0121, -25.1826, 0.66 ) }
    dend_9 { pt3dadd( 41.8763, 44.6679, -26.0044, 0.15 ) }
    dend_9 { pt3dadd( 42.7283, 45.3993, -26.754, 0.15 ) }
    dend_9 { pt3dadd( 43.2852, 45.9287, -27.2718, 0.44 ) }
    dend_9 { pt3dadd( 44.2203, 46.8992, -28.1055, 0.37 ) }
    dend_9 { pt3dadd( 44.9054, 47.6065, -28.8015, 0.37 ) }
    dend_9 { pt3dadd( 45.3756, 48.0846, -29.3044, 0.37 ) }
    dend_9 { pt3dadd( 45.8468, 48.5398, -29.8206, 0.37 ) }
    dend_9 { pt3dadd( 47.2722, 49.7735, -31.2643, 0.73 ) }
    dend_9 { pt3dadd( 47.6779, 50.0872, -31.6799, 0.73 ) }
    dend_9 { pt3dadd( 48.6393, 50.7597, -32.5938, 0.37 ) }
    dend_9 { pt3dadd( 49.0623, 51.0466, -32.9831, 0.37 ) }
    dend_9 { pt3dadd( 49.5299, 51.3443, -33.4097, 0.37 ) }
    dend_9 { pt3dadd( 50.4678, 51.9038, -34.237, 1.32 ) }
    dend_9 { pt3dadd( 51.0399, 52.2457, -34.7129, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_9 { pt3dadd( 51.8019, 52.7319, -35.4131, 1.03 ) }
    dend_9 { pt3dadd( 52.9121, 53.5048, -36.5076, 0.15 ) }
    dend_9 { pt3dadd( 53.2353, 53.7491, -36.8897, 0.73 ) }
    dend_9 { pt3dadd( 53.6571, 54.0743, -37.4225, 0.59 ) }
    dend_9 { pt3dadd( 54.2549, 54.5063, -38.1806, 0.59 ) }
    dend_9 { pt3dadd( 54.739, 54.8431, -38.8159, 0.59 ) }
    dend_9 { pt3dadd( 55.2094, 55.1619, -39.4236, 0.59 ) }
    dend_9 { pt3dadd( 56.4996, 56.011, -40.8757, 0.29 ) }
    dend_9 { pt3dadd( 57.0556, 56.3385, -41.4926, 0.51 ) }
    dend_9 { pt3dadd( 57.6241, 56.6394, -42.0984, 0.22 ) }
    dend_9 { pt3dadd( 58.4483, 57.0519, -42.9604, 0.22 ) }
    dend_9 { pt3dadd( 59.1637, 57.3606, -43.7184, 0.59 ) }
    dend_9 { pt3dadd( 59.7695, 57.5742, -44.3588, 0.88 ) }
    dend_9 { pt3dadd( 61.3209, 57.995, -46.0831, 0.51 ) }
    dend_9 { pt3dadd( 61.4889, 58.0304, -46.2794, 0.51 ) }
    dend_9 { pt3dadd( 62.0348, 58.1436, -46.9494, 0.81 ) }
    dend_9 { pt3dadd( 63.1835, 58.3969, -48.3452, 0.51 ) }
    dend_9 { pt3dadd( 63.7783, 58.5401, -49.057, 0.73 ) }
    dend_9 { pt3dadd( 64.8041, 58.8098, -50.2524, 0.29 ) }
    dend_9 { pt3dadd( 65.827, 59.0726, -51.3821, 0.88 ) }
    dend_9 { pt3dadd( 67.4798, 59.4795, -53.1732, 0.44 ) }
    dend_9 { pt3dadd( 68.2467, 59.6664, -53.9842, 0.44 ) }
    dend_9 { pt3dadd( 68.8962, 59.8719, -54.6784, 0.73 ) }
    dend_9 { pt3dadd( 69.8701, 60.2492, -55.7679, 0.22 ) }
    dend_9 { pt3dadd( 70.8312, 60.7089, -56.8461, 0.51 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 25/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -33.3219, 5.43862, 0.441766, 0.44 ) }
    dend_5 { pt3dadd( -34.7119, 4.92527, 0.139778, 0.44 ) }
    dend_5 { pt3dadd( -35.946, 4.5993, -0.0980849, 0.29 ) }
    dend_5 { pt3dadd( -37.0297, 4.31304, -0.306977, 0.22 ) }
    dend_5 { pt3dadd( -37.4532, 4.20118, -0.388601, 0.22 ) }
    dend_5 { pt3dadd( -38.5357, 3.91526, -0.597248, 0.22 ) }
    dend_5 { pt3dadd( -39.239, 3.72948, -0.732817, 0.22 ) }
    dend_5 { pt3dadd( -40.2822, 3.5799, -0.960704, 0.22 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 33/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -33.3219, 5.43862, 0.441766, 0.73 ) }
    dend_2 { pt3dadd( -34.218, 5.47865, 0.576239, 0.73 ) }
    dend_2 { pt3dadd( -35.4799, 5.46233, 0.746126, 0.44 ) }
    dend_2 { pt3dadd( -36.7913, 5.31034, 0.872276, 0.81 ) }
    dend_2 { pt3dadd( -37.3751, 5.19963, 0.91048, 0.81 ) }
    dend_2 { pt3dadd( -38.1058, 5.02436, 0.933631, 0.51 ) }
    dend_2 { pt3dadd( -38.904, 4.82094, 0.943736, 0.73 ) }
    dend_2 { pt3dadd( -39.4078, 4.66632, 0.94792, 0.81 ) }
    dend_2 { pt3dadd( -40.581, 4.3113, 0.999643, 0.59 ) }
    dend_2 { pt3dadd( -41.4899, 4.09419, 1.06003, 0.59 ) }
    dend_2 { pt3dadd( -42.3629, 3.99606, 1.16613, 0.59 ) }
    dend_2 { pt3dadd( -42.816, 4.03469, 1.26265, 0.73 ) }
    dend_2 { pt3dadd( -43.7487, 4.37682, 1.60837, 0.73 ) }
    dend_2 { pt3dadd( -44.761, 5.01954, 2.15748, 0.88 ) }
    dend_2 { pt3dadd( -45.1975, 5.37344, 2.44251, 1.03 ) }
    dend_2 { pt3dadd( -45.7423, 5.86181, 2.84609, 1.03 ) }
    dend_2 { pt3dadd( -46.4823, 6.55063, 3.43739, 0.66 ) }
    dend_2 { pt3dadd( -47.3934, 7.42663, 4.19229, 0.66 ) }
    dend_2 { pt3dadd( -48.1378, 8.19998, 4.87082, 0.59 ) }
    dend_2 { pt3dadd( -48.5018, 8.60697, 5.24161, 0.66 ) }
    dend_2 { pt3dadd( -49.0539, 9.24081, 5.87998, 0.51 ) }
    dend_2 { pt3dadd( -49.5825, 9.86177, 6.53605, 0.37 ) }
    dend_2 { pt3dadd( -49.9686, 10.2702, 6.97044, 0.37 ) }
    dend_2 { pt3dadd( -50.7601, 11.0054, 7.75315, 0.37 ) }
    dend_2 { pt3dadd( -51.2348, 11.4064, 8.16546, 0.37 ) }
    dend_2 { pt3dadd( -51.7401, 11.7962, 8.5434, 0.37 ) }
    dend_2 { pt3dadd( -52.1724, 12.0988, 8.7904, 0.88 ) }
    dend_2 { pt3dadd( -53.3934, 12.8984, 9.28677, 0.29 ) }
    dend_2 { pt3dadd( -54.3147, 13.4902, 9.54995, 0.66 ) }
    dend_2 { pt3dadd( -54.8746, 13.8561, 9.65353, 0.66 ) }
    dend_2 { pt3dadd( -55.3917, 14.2246, 9.71676, 0.66 ) }
    dend_2 { pt3dadd( -56.1846, 14.8596, 9.76869, 0.66 ) }
    dend_2 { pt3dadd( -57.1195, 15.7374, 9.81379, 0.37 ) }
    dend_2 { pt3dadd( -57.5846, 16.2546, 9.80039, 0.37 ) }
    dend_2 { pt3dadd( -58.0426, 16.7991, 9.74772, 0.37 ) }
    dend_2 { pt3dadd( -58.4699, 17.3092, 9.68104, 0.37 ) }
    dend_2 { pt3dadd( -59.2275, 18.1954, 9.53824, 0.95 ) }
    dend_2 { pt3dadd( -59.8862, 18.9561, 9.39248, 0.29 ) }
    dend_2 { pt3dadd( -60.6372, 19.8642, 9.19281, 0.29 ) }
    dend_2 { pt3dadd( -61.1715, 20.5669, 9.03381, 0.51 ) }
    dend_2 { pt3dadd( -61.5058, 21.0799, 8.92355, 0.51 ) }
    dend_2 { pt3dadd( -61.7507, 21.4998, 8.84772, 0.22 ) }
    dend_2 { pt3dadd( -61.9764, 21.9088, 8.78533, 0.22 ) }
    dend_2 { pt3dadd( -62.3606, 22.5576, 8.70535, 0.22 ) }
    dend_2 { pt3dadd( -62.7127, 23.0788, 8.67716, 0.66 ) }
    dend_2 { pt3dadd( -63.2928, 23.7119, 8.62232, 0.29 ) }
    dend_2 { pt3dadd( -63.7788, 24.1079, 8.56372, 0.29 ) }
    dend_2 { pt3dadd( -64.5155, 24.5903, 8.41739, 0.73 ) }
    dend_2 { pt3dadd( -64.9616, 24.8377, 8.2944, 0.51 ) }
    dend_2 { pt3dadd( -65.4117, 25.065, 8.12585, 0.81 ) }
    dend_2 { pt3dadd( -66.4153, 25.6182, 7.63711, 0.37 ) }
    dend_2 { pt3dadd( -66.9218, 25.99, 7.32518, 0.37 ) }
    dend_2 { pt3dadd( -67.5057, 26.6137, 6.88172, 0.37 ) }
    dend_2 { pt3dadd( -67.8151, 27.0861, 6.5955, 0.37 ) }
    dend_2 { pt3dadd( -68.0887, 27.6527, 6.29844, 0.37 ) }
    dend_2 { pt3dadd( -68.3608, 28.4161, 5.93054, 0.44 ) }
    dend_2 { pt3dadd( -68.6748, 29.5286, 5.40642, 0.44 ) }
    dend_2 { pt3dadd( -68.8702, 30.3302, 5.00823, 0.44 ) }
    dend_2 { pt3dadd( -69.0613, 31.2011, 4.54389, 0.44 ) }
    dend_2 { pt3dadd( -69.2673, 32.1566, 3.98444, 0.51 ) }
    dend_2 { pt3dadd( -69.5031, 33.2303, 3.3135, 0.51 ) }
    dend_2 { pt3dadd( -69.7875, 34.6087, 2.40694, 0.44 ) }
    dend_2 { pt3dadd( -70.0485, 36.0796, 1.43946, 0.44 ) }
    dend_2 { pt3dadd( -70.1902, 37.0649, 0.782804, 0.73 ) }
    dend_2 { pt3dadd( -70.3047, 37.9175, 0.211218, 0.51 ) }
    dend_2 { pt3dadd( -70.4283, 38.8829, -0.430315, 0.37 ) }
    dend_2 { pt3dadd( -70.577, 40.1493, -1.22883, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_2 { pt3dadd( -70.6619, 41.1065, -1.77608, 0.73 ) }
    dend_2 { pt3dadd( -70.7839, 42.5188, -2.46112, 0.81 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 2/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 77.095, -7.32866, 3.82299, 0.29 ) }
    dend_52 { pt3dadd( 77.5387, -6.57792, 4.90853, 0.29 ) }
    dend_52 { pt3dadd( 78.0079, -5.79361, 6.02948, 0.22 ) }
    dend_52 { pt3dadd( 78.2319, -5.43194, 6.58679, 0.51 ) }
    dend_52 { pt3dadd( 78.4501, -5.13653, 7.08351, 0.51 ) }
    dend_52 { pt3dadd( 78.7995, -4.79848, 7.70489, 0.51 ) }
    dend_52 { pt3dadd( 79.1889, -4.53854, 8.27321, 0.51 ) }
    dend_52 { pt3dadd( 79.5142, -4.42852, 8.62549, 0.51 ) }
    dend_52 { pt3dadd( 79.9881, -4.38736, 9.03811, 0.51 ) }
    dend_52 { pt3dadd( 80.5717, -4.42775, 9.51792, 0.51 ) }
    dend_52 { pt3dadd( 81.5744, -4.65318, 10.4222, 0.37 ) }
    dend_52 { pt3dadd( 82.3809, -4.94251, 11.312, 0.22 ) }
    dend_52 { pt3dadd( 82.8945, -5.16439, 11.9892, 0.22 ) }
    dend_52 { pt3dadd( 83.5892, -5.45011, 13.0632, 0.22 ) }
    dend_52 { pt3dadd( 84.0336, -5.58742, 13.8198, 0.22 ) }
    dend_52 { pt3dadd( 84.6419, -5.67705, 15.0013, 0.22 ) }
    dend_52 { pt3dadd( 85.1175, -5.61137, 16.0243, 0.22 ) }
    dend_52 { pt3dadd( 85.3945, -5.49917, 16.5292, 0.51 ) }
    dend_52 { pt3dadd( 85.8862, -5.27195, 17.3722, 0.37 ) }
    dend_52 { pt3dadd( 86.2828, -5.13788, 17.9345, 0.22 ) }
    dend_52 { pt3dadd( 86.9197, -5.01645, 18.6745, 0.29 ) }
    dend_52 { pt3dadd( 87.9677, -4.93589, 19.705, 0.29 ) }
    dend_52 { pt3dadd( 88.9476, -4.99996, 20.6066, 0.29 ) }
    dend_52 { pt3dadd( 89.5609, -5.12263, 21.1616, 1.03 ) }
    dend_52 { pt3dadd( 91.2188, -5.65407, 22.6051, 0.44 ) }
    dend_52 { pt3dadd( 92.1245, -6.02173, 23.3579, 0.29 ) }
    dend_52 { pt3dadd( 92.6608, -6.26273, 23.7977, 0.51 ) }
    dend_52 { pt3dadd( 93.7884, -6.77741, 24.6453, 0.29 ) }
    dend_52 { pt3dadd( 94.4792, -7.0609, 25.1207, 0.15 ) }
    dend_52 { pt3dadd( 95.2756, -7.32283, 25.6281, 0.29 ) }
    dend_52 { pt3dadd( 96.3444, -7.53786, 26.3126, 0.29 ) }
    dend_52 { pt3dadd( 97.3368, -7.60925, 27.0302, 0.29 ) }
    dend_52 { pt3dadd( 97.5466, -7.58857, 27.1928, 0.29 ) }
    dend_52 { pt3dadd( 98.2521, -7.31855, 27.695, 0.29 ) }
    dend_52 { pt3dadd( 98.6164, -7.07364, 27.9732, 0.59 ) }
    dend_52 { pt3dadd( 99.5372, -6.16748, 28.68, 0.15 ) }
    dend_52 { pt3dadd( 99.7042, -5.96722, 28.8068, 0.44 ) }
    dend_52 { pt3dadd( 100.08, -5.5132, 29.0975, 0.22 ) }
    dend_52 { pt3dadd( 100.686, -4.82166, 29.6321, 0.22 ) }
    dend_52 { pt3dadd( 101.611, -3.80803, 30.555, 0.22 ) }
    dend_52 { pt3dadd( 102.049, -3.39781, 30.9878, 0.44 ) }
    dend_52 { pt3dadd( 102.597, -2.95834, 31.5153, 0.44 ) }
    dend_52 { pt3dadd( 102.93, -2.71335, 31.8347, 0.44 ) }
    dend_52 { pt3dadd( 103.471, -2.36457, 32.3146, 0.07 ) }
    dend_52 { pt3dadd( 103.825, -2.14315, 32.6073, 0.07 ) }
    dend_52 { pt3dadd( 104.181, -1.94832, 32.828, 0.15 ) }
    dend_52 { pt3dadd( 104.521, -1.8111, 33.0395, 0.15 ) }
    dend_52 { pt3dadd( 104.949, -1.67178, 33.2922, 0.15 ) }
    dend_52 { pt3dadd( 105.957, -1.52032, 33.885, 0.15 ) }
    dend_52 { pt3dadd( 106.651, -1.54836, 34.2956, 0.59 ) }
    dend_52 { pt3dadd( 107.407, -1.62325, 34.7264, 0.59 ) }
    dend_52 { pt3dadd( 108.571, -1.77666, 35.3838, 0.15 ) }
    dend_52 { pt3dadd( 109.03, -1.84876, 35.6094, 0.59 ) }
    dend_52 { pt3dadd( 110.608, -2.13571, 36.2825, 0.29 ) }
    dend_52 { pt3dadd( 111.256, -2.27253, 36.4975, 1.47 ) }
    dend_52 { pt3dadd( 112.628, -2.55628, 36.8596, 0.15 ) }
    dend_52 { pt3dadd( 113.478, -2.7065, 37.0224, 0.15 ) }
    dend_52 { pt3dadd( 114.476, -2.852, 37.1772, 1.18 ) }
    dend_52 { pt3dadd( 114.906, -2.9127, 37.2511, 1.18 ) }
    dend_52 { pt3dadd( 116.149, -3.10428, 37.5141, 0.22 ) }
    dend_52 { pt3dadd( 117.174, -3.35287, 37.796, 0.22 ) }
    dend_52 { pt3dadd( 117.607, -3.52102, 37.9041, 0.22 ) }
    dend_52 { pt3dadd( 118.181, -3.76344, 38.0175, 0.22 ) }
    dend_52 { pt3dadd( 118.604, -3.93558, 38.1012, 0.22 ) }
    dend_52 { pt3dadd( 119.269, -4.17079, 38.1947, 0.22 ) }
    dend_52 { pt3dadd( 119.95, -4.31548, 38.2266, 0.22 ) }
    dend_52 { pt3dadd( 121.37, -4.49728, 38.1229, 0.22 ) }
    dend_52 { pt3dadd( 122.044, -4.53972, 38.013, 0.22 ) }
    dend_52 { pt3dadd( 122.494, -4.54, 37.8783, 0.22 ) }
    dend_52 { pt3dadd( 122.697, -4.52755, 37.7923, 0.66 ) }
    dend_52 { pt3dadd( 123.405, -4.4217, 37.3882, 0.44 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 73/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 77.095, -7.32866, 3.82299, 0.22 ) }
    dend_51 { pt3dadd( 77.2158, -5.90618, 3.68864, 0.22 ) }
    dend_51 { pt3dadd( 77.3378, -5.19716, 3.50187, 0.59 ) }
    dend_51 { pt3dadd( 77.481, -4.4217, 3.26358, 0.15 ) }
    dend_51 { pt3dadd( 77.6493, -3.53405, 2.98152, 0.66 ) }
    dend_51 { pt3dadd( 77.7515, -2.97898, 2.80963, 0.29 ) }
    dend_51 { pt3dadd( 77.8604, -2.35053, 2.62606, 0.66 ) }
    dend_51 { pt3dadd( 78.1866, -0.630068, 2.03981, 0.15 ) }
    dend_51 { pt3dadd( 78.3168, 0.198797, 1.76538, 0.15 ) }
    dend_51 { pt3dadd( 78.3584, 0.557719, 1.65934, 0.29 ) }
    dend_51 { pt3dadd( 78.4083, 1.26639, 1.4914, 0.07 ) }
    dend_51 { pt3dadd( 78.4516, 2.05558, 1.31423, 0.37 ) }
    dend_51 { pt3dadd( 78.4724, 2.95917, 1.14392, 0.15 ) }
    dend_51 { pt3dadd( 78.4493, 3.62036, 1.07838, 0.37 ) }
    dend_51 { pt3dadd( 78.4155, 4.49424, 0.980434, 0.07 ) }
    dend_51 { pt3dadd( 78.3778, 5.23132, 0.892237, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 89/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -33.0501, 31.9095, -74.0825, 0.44 ) }
    dend_39 { pt3dadd( -33.5594, 32.1527, -75.1054, 0.44 ) }
    dend_39 { pt3dadd( -34.2959, 32.3839, -76.2712, 0.59 ) }
    dend_39 { pt3dadd( -35.0505, 32.6007, -77.4014, 0.44 ) }
    dend_39 { pt3dadd( -35.5588, 32.7706, -78.1845, 0.44 ) }
    dend_39 { pt3dadd( -35.9926, 32.9425, -78.8569, 0.59 ) }
    dend_39 { pt3dadd( -36.56, 33.2114, -79.7681, 0.59 ) }
    dend_39 { pt3dadd( -37.016, 33.4302, -80.4683, 0.44 ) }
    dend_39 { pt3dadd( -37.5675, 33.7188, -81.2625, 0.73 ) }
    dend_39 { pt3dadd( -38.0509, 33.9777, -81.992, 0.73 ) }
    dend_39 { pt3dadd( -38.2975, 34.1016, -82.3709, 0.95 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_39 { pt3dadd( -38.8618, 34.2732, -83.1992, 0.95 ) }
    dend_39 { pt3dadd( -39.419, 34.3194, -83.9006, 0.37 ) }
    dend_39 { pt3dadd( -39.8478, 34.2669, -84.3996, 0.37 ) }
    dend_39 { pt3dadd( -41.0712, 33.9366, -85.7625, 0.95 ) }
    dend_39 { pt3dadd( -41.5595, 33.7396, -86.3378, 0.95 ) }
    dend_39 { pt3dadd( -42.7524, 33.0921, -87.8794, 0.66 ) }
    dend_39 { pt3dadd( -43.2607, 32.7381, -88.5621, 0.66 ) }
    dend_39 { pt3dadd( -43.9912, 32.1092, -89.5943, 0.66 ) }
    dend_39 { pt3dadd( -44.3657, 31.7001, -90.2688, 0.66 ) }
    dend_39 { pt3dadd( -44.6886, 31.2253, -91.0449, 0.66 ) }
    dend_39 { pt3dadd( -44.8582, 30.8868, -91.6904, 0.66 ) }
    dend_39 { pt3dadd( -44.9366, 30.6113, -92.4157, 0.66 ) }
    dend_39 { pt3dadd( -44.9811, 30.48, -93.0983, 0.73 ) }
    dend_39 { pt3dadd( -45.1567, 30.3403, -94.8535, 0.59 ) }
    dend_39 { pt3dadd( -45.2002, 30.3373, -95.0931, 0.59 ) }
    dend_39 { pt3dadd( -45.5108, 30.3964, -96.2649, 0.59 ) }
    dend_39 { pt3dadd( -46.0405, 30.5917, -97.9446, 0.59 ) }
    dend_39 { pt3dadd( -46.6384, 30.9058, -99.6365, 0.81 ) }
    dend_39 { pt3dadd( -46.8986, 31.0673, -100.221, 0.81 ) }
    dend_39 { pt3dadd( -47.3125, 31.3372, -100.885, 0.22 ) }
    dend_39 { pt3dadd( -47.8464, 31.7059, -101.611, 0.22 ) }
    dend_39 { pt3dadd( -48.1005, 31.8826, -101.88, 0.22 ) }
    dend_39 { pt3dadd( -48.3968, 32.081, -102.15, 0.22 ) }
    dend_39 { pt3dadd( -48.998, 32.441, -102.712, 0.66 ) }
    dend_39 { pt3dadd( -49.5635, 32.6968, -103.392, 0.44 ) }
    dend_39 { pt3dadd( -50.1695, 32.8312, -104.228, 0.73 ) }
    dend_39 { pt3dadd( -50.2682, 32.7981, -104.422, 0.73 ) }
    dend_39 { pt3dadd( -50.9459, 32.429, -105.81, 0.37 ) }
    dend_39 { pt3dadd( -51.3234, 32.1798, -106.56, 0.07 ) }
    dend_39 { pt3dadd( -51.7785, 31.8082, -107.5, 0.88 ) }
    dend_39 { pt3dadd( -52.0219, 31.5618, -108.026, 0.88 ) }
    dend_39 { pt3dadd( -53.5699, 29.8612, -111.358, 0.44 ) }
    dend_39 { pt3dadd( -53.8844, 29.5102, -112.023, 0.29 ) }
    dend_39 { pt3dadd( -54.1226, 29.2639, -112.509, 0.29 ) }
    dend_39 { pt3dadd( -54.6628, 28.7513, -113.63, 0.29 ) }
    dend_39 { pt3dadd( -55.0408, 28.3949, -114.41, 0.29 ) }
    dend_39 { pt3dadd( -55.5009, 27.9844, -115.381, 0.88 ) }
    dend_39 { pt3dadd( -56.4124, 27.2492, -117.207, 0.22 ) }
    dend_39 { pt3dadd( -57.0825, 26.7558, -118.644, 0.81 ) }
    dend_39 { pt3dadd( -58.0211, 26.1835, -120.639, 0.51 ) }
    dend_39 { pt3dadd( -58.3101, 26.032, -121.23, 0.66 ) }
    dend_39 { pt3dadd( -59.0244, 25.701, -122.699, 0.66 ) }
    dend_39 { pt3dadd( -59.3153, 25.5711, -123.354, 0.37 ) }
    dend_39 { pt3dadd( -59.8813, 25.3508, -124.594, 0.37 ) }
    dend_39 { pt3dadd( -60.3594, 25.1499, -125.537, 0.37 ) }
    dend_39 { pt3dadd( -60.8161, 24.9562, -126.297, 0.73 ) }
    dend_39 { pt3dadd( -61.4912, 24.6653, -127.335, 0.59 ) }
    dend_39 { pt3dadd( -62.7313, 24.1085, -129.022, 0.37 ) }
    dend_39 { pt3dadd( -63.1377, 23.9202, -129.53, 0.81 ) }
    dend_39 { pt3dadd( -63.6047, 23.7051, -130.046, 0.44 ) }
    dend_39 { pt3dadd( -65.0565, 23.0085, -131.638, 0.44 ) }
    dend_39 { pt3dadd( -65.4422, 22.8119, -132.133, 0.44 ) }
    dend_39 { pt3dadd( -65.9257, 22.5351, -132.793, 0.44 ) }
    dend_39 { pt3dadd( -66.2715, 22.3328, -133.278, 0.44 ) }
    dend_39 { pt3dadd( -66.5379, 22.1908, -133.695, 0.44 ) }
    dend_39 { pt3dadd( -67.3092, 21.8118, -134.993, 0.81 ) }
    dend_39 { pt3dadd( -68.8145, 21.0434, -137.821, 0.59 ) }
    dend_39 { pt3dadd( -69.1455, 20.847, -138.453, 0.29 ) }
    dend_39 { pt3dadd( -69.5002, 20.6218, -139.121, 0.37 ) }
    dend_39 { pt3dadd( -70.0615, 20.2811, -140.066, 0.37 ) }
    dend_39 { pt3dadd( -70.3837, 20.0962, -140.526, 0.37 ) }
    dend_39 { pt3dadd( -71.3747, 19.6244, -141.624, 0.37 ) }
    dend_39 { pt3dadd( -72.727, 19.0299, -142.85, 0.37 ) }
    dend_39 { pt3dadd( -73.1268, 18.8594, -143.195, 0.37 ) }
    dend_39 { pt3dadd( -73.8476, 18.5615, -143.76, 0.88 ) }
    dend_39 { pt3dadd( -74.4742, 18.3283, -144.195, 1.18 ) }
    dend_39 { pt3dadd( -76.6893, 17.6311, -145.549, 0.37 ) }
    dend_39 { pt3dadd( -77.1956, 17.4934, -145.819, 0.59 ) }
    dend_39 { pt3dadd( -77.679, 17.3714, -146.063, 0.59 ) }
    dend_39 { pt3dadd( -78.2545, 17.2063, -146.346, 0.59 ) }
    dend_39 { pt3dadd( -79.4201, 16.8093, -146.868, 0.07 ) }
    dend_39 { pt3dadd( -80.3225, 16.4146, -147.222, 0.59 ) }
    dend_39 { pt3dadd( -81.0896, 15.9706, -147.476, 0.29 ) }
    dend_39 { pt3dadd( -81.6823, 15.5955, -147.699, 0.29 ) }
    dend_39 { pt3dadd( -82.3122, 15.2121, -148.054, 0.44 ) }
    dend_39 { pt3dadd( -82.9835, 14.8321, -148.516, 0.51 ) }
    dend_39 { pt3dadd( -83.6708, 14.4864, -149.029, 0.51 ) }
    dend_39 { pt3dadd( -84.1245, 14.2806, -149.415, 0.51 ) }
    dend_39 { pt3dadd( -85.0467, 13.8894, -150.303, 0.29 ) }
    dend_39 { pt3dadd( -86.9171, 13.1328, -152.381, 0.66 ) }
    dend_39 { pt3dadd( -87.2396, 13.0017, -152.774, 0.37 ) }
    dend_39 { pt3dadd( -87.7172, 12.8244, -153.391, 0.51 ) }
    dend_39 { pt3dadd( -88.1893, 12.6672, -154.014, 0.29 ) }
    dend_39 { pt3dadd( -88.8862, 12.4492, -154.961, 0.29 ) }
    dend_39 { pt3dadd( -89.4892, 12.2279, -155.766, 0.29 ) }
    dend_39 { pt3dadd( -89.8083, 12.0165, -156.14, 0.29 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 86/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -33.0501, 31.9095, -74.0825, 0.29 ) }
    dend_36 { pt3dadd( -34.573, 32.0029, -74.4325, 0.29 ) }
    dend_36 { pt3dadd( -35.1503, 32.0355, -74.5494, 0.29 ) }
    dend_36 { pt3dadd( -36.4427, 32.0259, -74.8189, 0.73 ) }
    dend_36 { pt3dadd( -37.5282, 31.9491, -75.0384, 0.73 ) }
    dend_36 { pt3dadd( -38.5323, 31.8283, -75.2339, 0.44 ) }
    dend_36 { pt3dadd( -39.3873, 31.6958, -75.3944, 0.66 ) }
    dend_36 { pt3dadd( -40.4783, 31.4599, -75.5706, 1.1 ) }
    dend_36 { pt3dadd( -42.2449, 31.0287, -75.833, 0.44 ) }
    dend_36 { pt3dadd( -43.2459, 30.7736, -75.99, 0.44 ) }
    dend_36 { pt3dadd( -43.891, 30.625, -76.1145, 0.44 ) }
    dend_36 { pt3dadd( -44.3032, 30.5626, -76.2217, 0.44 ) }
    dend_36 { pt3dadd( -44.7233, 30.5538, -76.352, 0.44 ) }
    dend_36 { pt3dadd( -45.2629, 30.6318, -76.5345, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_36 { pt3dadd( -46.396, 30.9816, -76.9032, 0.44 ) }
    dend_36 { pt3dadd( -47.2534, 31.2713, -77.1519, 0.44 ) }
    dend_36 { pt3dadd( -48.2522, 31.5963, -77.402, 0.88 ) }
    dend_36 { pt3dadd( -49.3636, 31.9288, -77.6289, 0.51 ) }
    dend_36 { pt3dadd( -49.9364, 32.0785, -77.7204, 0.51 ) }
    dend_36 { pt3dadd( -51.168, 32.3542, -77.8552, 1.18 ) }
    dend_36 { pt3dadd( -52.5359, 32.6405, -77.9387, 0.59 ) }
    dend_36 { pt3dadd( -53.3263, 32.8318, -77.9721, 0.59 ) }
    dend_36 { pt3dadd( -54.4923, 33.2039, -77.9939, 0.59 ) }
    dend_36 { pt3dadd( -55.1792, 33.49, -78.0091, 0.37 ) }
    dend_36 { pt3dadd( -56.2157, 34.0045, -78.0344, 0.51 ) }
    dend_36 { pt3dadd( -57.2502, 34.6194, -78.0624, 0.37 ) }
    dend_36 { pt3dadd( -58.5788, 35.5335, -78.1007, 0.22 ) }
    dend_36 { pt3dadd( -59.8205, 36.4875, -78.1367, 0.22 ) }
    dend_36 { pt3dadd( -60.8382, 37.3833, -78.2462, 0.51 ) }
    dend_36 { pt3dadd( -61.1319, 37.6741, -78.3034, 0.51 ) }
    dend_36 { pt3dadd( -61.436, 38.0157, -78.3869, 0.51 ) }
    dend_36 { pt3dadd( -61.6946, 38.3411, -78.4986, 0.51 ) }
    dend_36 { pt3dadd( -62.0416, 38.8196, -78.7236, 0.66 ) }
    dend_36 { pt3dadd( -63.0964, 40.3206, -79.5577, 0.66 ) }
    dend_36 { pt3dadd( -63.3437, 40.6676, -79.7564, 0.66 ) }
    dend_36 { pt3dadd( -63.8364, 41.2922, -80.0913, 0.07 ) }
    dend_36 { pt3dadd( -64.5148, 42.096, -80.481, 0.07 ) }
    dend_36 { pt3dadd( -64.8769, 42.5107, -80.6468, 0.59 ) }
    dend_36 { pt3dadd( -65.4402, 43.0835, -80.8029, 0.37 ) }
    dend_36 { pt3dadd( -65.8388, 43.4474, -80.8373, 0.51 ) }
    dend_36 { pt3dadd( -66.3537, 43.8921, -80.8933, 0.29 ) }
    dend_36 { pt3dadd( -66.5859, 44.0799, -80.9217, 0.29 ) }
    dend_36 { pt3dadd( -66.8969, 44.3293, -80.9444, 0.37 ) }
    dend_36 { pt3dadd( -67.5555, 44.8797, -81.0021, 0.22 ) }
    dend_36 { pt3dadd( -67.9455, 45.2158, -81.0405, 0.59 ) }
    dend_36 { pt3dadd( -68.6578, 45.7971, -81.1105, 0.22 ) }
    dend_36 { pt3dadd( -69.126, 46.1255, -81.1693, 0.22 ) }
    dend_36 { pt3dadd( -69.5474, 46.3725, -81.2276, 0.22 ) }
    dend_36 { pt3dadd( -70.1153, 46.6335, -81.3078, 0.22 ) }
    dend_36 { pt3dadd( -70.5511, 46.7852, -81.3639, 0.22 ) }
    dend_36 { pt3dadd( -71.1864, 46.9515, -81.4301, 0.66 ) }
    dend_36 { pt3dadd( -72.0568, 47.148, -81.505, 0.37 ) }
    dend_36 { pt3dadd( -72.492, 47.2361, -81.5413, 0.66 ) }
    dend_36 { pt3dadd( -73.3611, 47.4142, -81.6133, 0.66 ) }
    dend_36 { pt3dadd( -74.6193, 47.7005, -81.7104, 0.15 ) }
    dend_36 { pt3dadd( -75.5834, 47.9681, -81.7766, 0.15 ) }
    dend_36 { pt3dadd( -75.9912, 48.1132, -81.8167, 0.66 ) }
    dend_36 { pt3dadd( -76.2636, 48.2305, -81.8484, 0.66 ) }
    dend_36 { pt3dadd( -76.984, 48.5628, -81.9581, 0.66 ) }
    dend_36 { pt3dadd( -77.7621, 48.9258, -82.0521, 0.07 ) }
    dend_36 { pt3dadd( -78.103, 49.072, -82.0806, 0.07 ) }
    dend_36 { pt3dadd( -79.1355, 49.4826, -82.1222, 0.81 ) }
    dend_36 { pt3dadd( -79.5093, 49.6229, -82.1219, 0.73 ) }
    dend_36 { pt3dadd( -80.4131, 49.9763, -82.0744, 0.37 ) }
    dend_36 { pt3dadd( -81.5838, 50.4465, -81.9694, 0.22 ) }
    dend_36 { pt3dadd( -82.116, 50.6678, -81.9048, 0.73 ) }
    dend_36 { pt3dadd( -82.7405, 50.9233, -81.8112, 0.37 ) }
    dend_36 { pt3dadd( -83.474, 51.1823, -81.6556, 0.15 ) }
    dend_36 { pt3dadd( -84.0823, 51.3905, -81.5337, 0.15 ) }
    dend_36 { pt3dadd( -84.5122, 51.5361, -81.4606, 0.15 ) }
    dend_36 { pt3dadd( -84.8654, 51.6352, -81.4228, 0.15 ) }
    dend_36 { pt3dadd( -85.3125, 51.7194, -81.3753, 0.15 ) }
    dend_36 { pt3dadd( -86.5651, 51.8515, -81.26, 0.07 ) }
    dend_36 { pt3dadd( -87.1294, 51.8934, -81.2054, 0.07 ) }
    dend_36 { pt3dadd( -87.6574, 51.9294, -81.1547, 0.66 ) }
    dend_36 { pt3dadd( -88.6883, 52.0235, -81.0461, 0.29 ) }
    dend_36 { pt3dadd( -89.3537, 52.1135, -80.9806, 0.66 ) }
    dend_36 { pt3dadd( -90.7509, 52.3932, -80.8632, 0.15 ) }
    dend_36 { pt3dadd( -91.6939, 52.6546, -80.8055, 0.22 ) }
    dend_36 { pt3dadd( -91.8527, 52.7001, -80.7949, 0.73 ) }
    dend_36 { pt3dadd( -92.3572, 52.8666, -80.7583, 0.22 ) }
    dend_36 { pt3dadd( -92.938, 53.1125, -80.7111, 0.59 ) }
    dend_36 { pt3dadd( -93.7468, 53.5306, -80.6436, 0.15 ) }
    dend_36 { pt3dadd( -94.1464, 53.7885, -80.6157, 0.59 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 70/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 36.8534, 0.88572, -4.47172, 0.37 ) }
    dend_32 { pt3dadd( 37.4925, -0.00881886, -4.90795, 0.37 ) }
    dend_32 { pt3dadd( 38.0985, -0.894217, -5.27423, 0.37 ) }
    dend_32 { pt3dadd( 38.6666, -1.72417, -5.61756, 0.37 ) }
    dend_32 { pt3dadd( 39.1124, -2.37556, -5.88703, 0.07 ) }
    dend_32 { pt3dadd( 39.3113, -2.66608, -6.00722, 0.66 ) }
    dend_32 { pt3dadd( 39.7188, -3.26151, -6.25354, 0.07 ) }
    dend_32 { pt3dadd( 39.9854, -3.70672, -6.37322, 0.29 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 78/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 36.8534, 0.88572, -4.47172, 0.73 ) }
    dend_27 { pt3dadd( 38.097, 0.73754, -4.19773, 0.73 ) }
    dend_27 { pt3dadd( 39.3968, 0.521149, -3.91296, 0.44 ) }
    dend_27 { pt3dadd( 40.6037, 0.280543, -3.64556, 0.44 ) }
    dend_27 { pt3dadd( 42.2347, -0.0611179, -3.29336, 0.44 ) }
    dend_27 { pt3dadd( 43.8048, -0.371875, -2.9575, 1.03 ) }
    dend_27 { pt3dadd( 44.1612, -0.438221, -2.88351, 1.03 ) }
    dend_27 { pt3dadd( 45.7867, -0.745859, -2.45637, 0.44 ) }
    dend_27 { pt3dadd( 46.8509, -0.893544, -2.11777, 0.44 ) }
    dend_27 { pt3dadd( 47.4734, -0.913993, -1.89966, 0.44 ) }
    dend_27 { pt3dadd( 48.3098, -0.85186, -1.61514, 0.66 ) }
    dend_27 { pt3dadd( 49.0009, -0.752362, -1.40229, 0.95 ) }
    dend_27 { pt3dadd( 50.4078, -0.475855, -1.0254, 0.44 ) }
    dend_27 { pt3dadd( 52.2077, 9.98139E-4, -0.61372, 0.88 ) }
    dend_27 { pt3dadd( 53.6933, 0.435922, -0.340307, 0.37 ) }
    dend_27 { pt3dadd( 55.0377, 0.84311, -0.152888, 0.51 ) }
    dend_27 { pt3dadd( 56.3609, 1.24299, -0.0469156, 0.44 ) }
    dend_27 { pt3dadd( 57.8267, 1.67594, -0.0176568, 0.51 ) }
    dend_27 { pt3dadd( 59.0639, 2.01358, -0.0491592, 0.59 ) }
    dend_27 { pt3dadd( 59.7904, 2.17815, -0.0731731, 0.81 ) }
    dend_27 { pt3dadd( 61.1624, 2.40821, -0.0506101, 0.51 ) }
    dend_27 { pt3dadd( 62.2389, 2.52302, 0.0359659, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_27 { pt3dadd( 63.6297, 2.62057, 0.225627, 0.29 ) }
    dend_27 { pt3dadd( 64.8289, 2.67628, 0.434309, 0.51 ) }
    dend_27 { pt3dadd( 66.1619, 2.74599, 0.64269, 0.44 ) }
    dend_27 { pt3dadd( 67.2443, 2.867, 0.785442, 0.59 ) }
    dend_27 { pt3dadd( 68.2921, 3.06858, 0.897355, 0.29 ) }
    dend_27 { pt3dadd( 69.6019, 3.4919, 1.00301, 0.81 ) }
    dend_27 { pt3dadd( 70.3522, 3.8636, 1.07327, 0.81 ) }
    dend_27 { pt3dadd( 71.4602, 4.57113, 1.17212, 0.66 ) }
    dend_27 { pt3dadd( 72.4706, 5.3304, 1.27695, 0.81 ) }
    dend_27 { pt3dadd( 72.9963, 5.75759, 1.34657, 0.81 ) }
    dend_27 { pt3dadd( 73.89, 6.48667, 1.50204, 0.81 ) }
    dend_27 { pt3dadd( 75.2657, 7.48475, 1.83503, 0.29 ) }
    dend_27 { pt3dadd( 75.9563, 7.90987, 2.05142, 0.29 ) }
    dend_27 { pt3dadd( 76.9195, 8.368, 2.41058, 0.59 ) }
    dend_27 { pt3dadd( 78.0917, 8.75032, 2.88257, 0.59 ) }
    dend_27 { pt3dadd( 79.1527, 8.98973, 3.35793, 0.66 ) }
    dend_27 { pt3dadd( 80.4142, 9.17447, 3.94337, 0.59 ) }
    dend_27 { pt3dadd( 81.5062, 9.26214, 4.4544, 0.59 ) }
    dend_27 { pt3dadd( 82.7406, 9.2992, 5.08297, 0.51 ) }
    dend_27 { pt3dadd( 84.0976, 9.27322, 5.75805, 0.51 ) }
    dend_27 { pt3dadd( 85.2295, 9.22732, 6.26608, 0.37 ) }
    dend_27 { pt3dadd( 86.1027, 9.2144, 6.57573, 0.37 ) }
    dend_27 { pt3dadd( 86.4716, 9.22558, 6.65015, 0.37 ) }
    dend_27 { pt3dadd( 87.35, 9.28069, 6.75539, 0.37 ) }
    dend_27 { pt3dadd( 88.7257, 9.37621, 6.93864, 0.37 ) }
    dend_27 { pt3dadd( 89.8645, 9.43976, 7.1129, 0.81 ) }
    dend_27 { pt3dadd( 91.0064, 9.47421, 7.31728, 0.29 ) }
    dend_27 { pt3dadd( 91.8061, 9.49543, 7.51278, 0.29 ) }
    dend_27 { pt3dadd( 93.3585, 9.59194, 8.03914, 0.51 ) }
    dend_27 { pt3dadd( 95.2383, 9.79097, 8.84964, 0.59 ) }
    dend_27 { pt3dadd( 96.4153, 9.95447, 9.4934, 0.66 ) }
    dend_27 { pt3dadd( 97.2781, 10.0963, 10.0844, 1.03 ) }
    dend_27 { pt3dadd( 98.4808, 10.328, 11.0172, 0.37 ) }
    dend_27 { pt3dadd( 99.7354, 10.5869, 12.0542, 0.37 ) }
    dend_27 { pt3dadd( 100.405, 10.7568, 12.616, 0.15 ) }
    dend_27 { pt3dadd( 101.39, 11.047, 13.508, 0.88 ) }
    dend_27 { pt3dadd( 103.03, 11.5461, 15.2095, 0.44 ) }
    dend_27 { pt3dadd( 103.37, 11.6387, 15.6078, 0.66 ) }
    dend_27 { pt3dadd( 104.042, 11.7602, 16.4659, 0.51 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 39/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 0.980699, 50.964, -20.8416, 0.37 ) }
    dend_16 { pt3dadd( -0.140032, 50.7867, -20.7604, 0.37 ) }
    dend_16 { pt3dadd( -1.36055, 50.5469, -20.6334, 0.22 ) }
    dend_16 { pt3dadd( -2.05425, 50.3988, -20.5529, 0.22 ) }
    dend_16 { pt3dadd( -2.80005, 50.2436, -20.4385, 0.37 ) }
    dend_16 { pt3dadd( -3.54748, 50.0882, -20.3238, 0.15 ) }
    dend_16 { pt3dadd( -4.86428, 49.8142, -20.1217, 0.15 ) }
    dend_16 { pt3dadd( -5.3294, 49.7143, -20.0286, 0.37 ) }
    dend_16 { pt3dadd( -5.81441, 49.5988, -19.9003, 0.07 ) }
    dend_16 { pt3dadd( -6.73597, 49.346, -19.6526, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 49/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 0.980699, 50.964, -20.8416, 0.51 ) }
    dend_13 { pt3dadd( 1.2455, 51.4849, -22.1892, 0.51 ) }
    dend_13 { pt3dadd( 1.33766, 51.7353, -22.6942, 0.51 ) }
    dend_13 { pt3dadd( 1.44475, 52.2861, -23.5735, 0.51 ) }
    dend_13 { pt3dadd( 1.49, 52.7478, -24.1932, 0.51 ) }
    dend_13 { pt3dadd( 1.5241, 53.5426, -25.1151, 0.51 ) }
    dend_13 { pt3dadd( 1.54253, 54.1174, -25.7079, 0.59 ) }
    dend_13 { pt3dadd( 1.54577, 54.9086, -26.3992, 0.44 ) }
    dend_13 { pt3dadd( 1.5225, 56.1373, -27.3851, 0.44 ) }
    dend_13 { pt3dadd( 1.50529, 56.8319, -27.8892, 0.44 ) }
    dend_13 { pt3dadd( 1.49938, 57.587, -28.4217, 0.44 ) }
    dend_13 { pt3dadd( 1.53301, 58.4276, -28.9987, 0.51 ) }
    dend_13 { pt3dadd( 1.66957, 59.4235, -29.7002, 0.44 ) }
    dend_13 { pt3dadd( 1.80336, 60.0142, -30.1156, 0.59 ) }
    dend_13 { pt3dadd( 1.98022, 60.603, -30.5665, 0.44 ) }
    dend_13 { pt3dadd( 2.21829, 61.2496, -31.0855, 0.44 ) }
    dend_13 { pt3dadd( 2.48133, 61.8484, -31.5441, 0.37 ) }
    dend_13 { pt3dadd( 2.92882, 62.7426, -32.3417, 0.37 ) }
    dend_13 { pt3dadd( 3.37003, 63.5108, -33.2104, 0.59 ) }
    dend_13 { pt3dadd( 3.91188, 64.3948, -34.4053, 0.59 ) }
    dend_13 { pt3dadd( 4.21007, 64.875, -35.101, 0.37 ) }
    dend_13 { pt3dadd( 4.60941, 65.5239, -36.148, 0.37 ) }
    dend_13 { pt3dadd( 5.43315, 66.8773, -38.5993, 0.51 ) }
    dend_13 { pt3dadd( 6.16494, 68.0272, -40.9292, 0.51 ) }
    dend_13 { pt3dadd( 6.58497, 68.6516, -42.2739, 0.51 ) }
    dend_13 { pt3dadd( 6.8517, 69.0756, -43.1932, 0.22 ) }
    dend_13 { pt3dadd( 7.1428, 69.6382, -44.4488, 0.22 ) }
    dend_13 { pt3dadd( 7.22722, 69.8691, -44.9894, 0.51 ) }
    dend_13 { pt3dadd( 7.31446, 70.4298, -46.1668, 0.51 ) }
    dend_13 { pt3dadd( 7.27973, 71.1258, -47.6132, 0.51 ) }
    dend_13 { pt3dadd( 7.21074, 71.5147, -48.493, 0.51 ) }
    dend_13 { pt3dadd( 7.14136, 71.9537, -49.475, 0.29 ) }
    dend_13 { pt3dadd( 7.1093, 72.8016, -51.1813, 0.29 ) }
    dend_13 { pt3dadd( 7.1305, 73.2384, -51.9982, 0.51 ) }
    dend_13 { pt3dadd( 7.14091, 73.5171, -52.4731, 0.37 ) }
    dend_13 { pt3dadd( 7.14997, 74.1442, -53.5063, 0.37 ) }
    dend_13 { pt3dadd( 7.19237, 74.7875, -54.546, 0.29 ) }
    dend_13 { pt3dadd( 7.28582, 75.3009, -55.4148, 0.29 ) }
    dend_13 { pt3dadd( 7.50691, 75.8636, -56.5108, 0.29 ) }
    dend_13 { pt3dadd( 7.72655, 76.1887, -57.4105, 0.29 ) }
    dend_13 { pt3dadd( 7.90278, 76.407, -58.3489, 0.29 ) }
    dend_13 { pt3dadd( 7.96335, 76.4938, -58.9761, 0.29 ) }
    dend_13 { pt3dadd( 7.97599, 76.5447, -60.0547, 0.29 ) }
    dend_13 { pt3dadd( 7.94026, 76.5026, -61.3115, 0.29 ) }
    dend_13 { pt3dadd( 7.92321, 76.3754, -62.6767, 0.29 ) }
    dend_13 { pt3dadd( 7.96958, 76.2395, -64.1417, 0.29 ) }
    dend_13 { pt3dadd( 8.0382, 76.1996, -65.2016, 0.29 ) }
    dend_13 { pt3dadd( 8.11979, 76.2391, -66.4594, 0.29 ) }
    dend_13 { pt3dadd( 8.14543, 76.3477, -67.6538, 0.29 ) }
    dend_13 { pt3dadd( 8.12001, 76.4237, -68.6638, 0.29 ) }
    dend_13 { pt3dadd( 8.06322, 76.4445, -69.8457, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_13 { pt3dadd( 7.98711, 76.3699, -71.273, 0.29 ) }
    dend_13 { pt3dadd( 7.90923, 76.2952, -71.9316, 0.29 ) }
    dend_13 { pt3dadd( 7.65839, 76.1839, -72.6446, 0.29 ) }
    dend_13 { pt3dadd( 6.96723, 76.0125, -73.601, 0.29 ) }
    dend_13 { pt3dadd( 6.11441, 75.8226, -74.6197, 0.29 ) }
    dend_13 { pt3dadd( 5.73665, 75.7314, -75.0659, 0.29 ) }
    dend_13 { pt3dadd( 5.27178, 75.6144, -75.6343, 0.29 ) }
    dend_13 { pt3dadd( 4.38069, 75.3704, -76.7862, 0.29 ) }
    dend_13 { pt3dadd( 3.29447, 75.0459, -78.2864, 0.88 ) }
    dend_13 { pt3dadd( 1.85842, 74.6216, -80.2947, 0.59 ) }
    dend_13 { pt3dadd( 1.0676, 74.3407, -81.4193, 0.59 ) }
    dend_13 { pt3dadd( 0.459578, 74.0526, -82.3111, 0.29 ) }
    dend_13 { pt3dadd( 0.0800802, 73.7923, -82.8821, 0.29 ) }
    dend_13 { pt3dadd( -0.481563, 73.2303, -83.6839, 0.37 ) }
    dend_13 { pt3dadd( -0.7603, 72.8896, -83.9667, 0.37 ) }
    dend_13 { pt3dadd( -1.06287, 72.5096, -84.171, 0.37 ) }
    dend_13 { pt3dadd( -1.6384, 71.7689, -84.4902, 0.37 ) }
    dend_13 { pt3dadd( -2.49533, 70.6908, -84.9081, 0.73 ) }
    dend_13 { pt3dadd( -3.11741, 69.9746, -85.2009, 0.73 ) }
    dend_13 { pt3dadd( -3.56754, 69.488, -85.3968, 0.73 ) }
    dend_13 { pt3dadd( -4.29071, 68.7117, -85.742, 0.37 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 21/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -70.7839, 42.5188, -2.46112, 0.44 ) }
    dend_4 { pt3dadd( -73.1135, 42.7407, -5.88884, 0.44 ) }
    dend_4 { pt3dadd( -73.7827, 42.8615, -6.88702, 0.59 ) }
    dend_4 { pt3dadd( -74.0335, 42.934, -7.2794, 0.07 ) }
    dend_4 { pt3dadd( -74.2789, 43.0629, -7.72981, 0.15 ) }
    dend_4 { pt3dadd( -74.7, 43.4258, -8.64109, 0.07 ) }
    dend_4 { pt3dadd( -74.8272, 43.6015, -8.94895, 0.07 ) }
    dend_4 { pt3dadd( -74.8403, 44.1081, -9.22043, 0.37 ) }
    dend_4 { pt3dadd( -74.779, 44.8013, -9.57244, 0.07 ) }
    dend_4 { pt3dadd( -74.6408, 45.6861, -9.99629, 0.07 ) }
    dend_4 { pt3dadd( -74.5529, 46.088, -10.1715, 0.44 ) }
    dend_4 { pt3dadd( -74.3562, 46.9472, -10.4574, 0.07 ) }
    dend_4 { pt3dadd( -74.2814, 47.3457, -10.6019, 0.66 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 34/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -70.7839, 42.5188, -2.46112, 0.66 ) }
    dend_3 { pt3dadd( -70.9088, 43.2852, -3.09607, 0.66 ) }
    dend_3 { pt3dadd( -71.0453, 44.6774, -4.19858, 0.37 ) }
    dend_3 { pt3dadd( -71.0973, 45.6661, -5.00383, 0.95 ) }
    dend_3 { pt3dadd( -71.1223, 46.1151, -5.36192, 0.95 ) }
    dend_3 { pt3dadd( -71.1692, 46.9998, -6.04729, 0.44 ) }
    dend_3 { pt3dadd( -71.2344, 48.3776, -7.14669, 0.37 ) }
    dend_3 { pt3dadd( -71.2476, 49.3705, -7.91503, 0.29 ) }
    dend_3 { pt3dadd( -71.2131, 50.3465, -8.63918, 0.44 ) }
    dend_3 { pt3dadd( -71.1694, 50.9811, -9.11988, 0.88 ) }
    dend_3 { pt3dadd( -71.1405, 51.2766, -9.35144, 0.88 ) }
    dend_3 { pt3dadd( -70.8724, 53.0627, -10.8956, 0.37 ) }
    dend_3 { pt3dadd( -70.7726, 53.6225, -11.3535, 0.37 ) }
    dend_3 { pt3dadd( -70.6746, 54.14, -11.7592, 0.22 ) }
    dend_3 { pt3dadd( -70.4679, 55.0703, -12.4224, 0.22 ) }
    dend_3 { pt3dadd( -70.3167, 55.6732, -12.8284, 0.22 ) }
    dend_3 { pt3dadd( -69.9795, 57.0863, -13.6847, 0.51 ) }
    dend_3 { pt3dadd( -69.8014, 58.0251, -14.1834, 0.51 ) }
    dend_3 { pt3dadd( -69.6578, 59.2719, -14.8359, 0.37 ) }
    dend_3 { pt3dadd( -69.5859, 60.232, -15.3091, 0.22 ) }
    dend_3 { pt3dadd( -69.5689, 60.5706, -15.4572, 0.22 ) }
    dend_3 { pt3dadd( -69.5673, 60.9997, -15.6361, 0.37 ) }
    dend_3 { pt3dadd( -69.6909, 62.3644, -16.1025, 0.22 ) }
    dend_3 { pt3dadd( -69.7502, 62.7565, -16.27, 0.29 ) }
    dend_3 { pt3dadd( -69.8806, 63.2152, -16.4507, 0.29 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 59/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -89.8083, 12.0165, -156.14, 0.37 ) }
    dend_41 { pt3dadd( -89.894, 12.1839, -156.637, 0.37 ) }
    dend_41 { pt3dadd( -89.9225, 12.4241, -157.403, 0.37 ) }
    dend_41 { pt3dadd( -89.8627, 12.8324, -159.026, 0.37 ) }
    dend_41 { pt3dadd( -89.7371, 13.0751, -160.278, 0.37 ) }
    dend_41 { pt3dadd( -89.6428, 13.1319, -160.863, 0.37 ) }
    dend_41 { pt3dadd( -89.3715, 13.1852, -162.195, 0.37 ) }
    dend_41 { pt3dadd( -88.9867, 13.1813, -163.59, 0.37 ) }
    dend_41 { pt3dadd( -88.6506, 13.1502, -164.673, 0.37 ) }
    dend_41 { pt3dadd( -88.3221, 13.0957, -165.758, 0.37 ) }
    dend_41 { pt3dadd( -87.7497, 12.9443, -167.621, 0.37 ) }
    dend_41 { pt3dadd( -87.4395, 12.8273, -168.694, 0.37 ) }
    dend_41 { pt3dadd( -87.0559, 12.6458, -170.098, 0.37 ) }
    dend_41 { pt3dadd( -86.7929, 12.527, -171.152, 0.37 ) }
    dend_41 { pt3dadd( -86.5226, 12.4548, -172.371, 0.37 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 74/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -89.8083, 12.0165, -156.14, 0.15 ) }
    dend_40 { pt3dadd( -90.4694, 11.2986, -156.445, 0.15 ) }
    dend_40 { pt3dadd( -90.9915, 10.7232, -156.75, 0.59 ) }
    dend_40 { pt3dadd( -91.3394, 10.3228, -156.971, 0.59 ) }
    dend_40 { pt3dadd( -91.9458, 9.62481, -157.358, 0.15 ) }
    dend_40 { pt3dadd( -93.0298, 8.37699, -158.049, 0.15 ) }
    dend_40 { pt3dadd( -93.5104, 7.82389, -158.355, 0.15 ) }
    dend_40 { pt3dadd( -93.9252, 7.34629, -158.731, 0.59 ) }
    dend_40 { pt3dadd( -94.042, 7.20664, -158.873, 0.59 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -94.1464, 53.7885, -80.6157, 0.29 ) }
    dend_38 { pt3dadd( -95.0579, 54.1572, -80.6157, 0.29 ) }
    dend_38 { pt3dadd( -95.6022, 54.4244, -80.6157, 0.44 ) }
    dend_38 { pt3dadd( -95.9937, 54.6406, -80.6157, 0.44 ) }
    dend_38 { pt3dadd( -96.6832, 55.073, -80.6157, 0.44 ) }
    dend_38 { pt3dadd( -97.0789, 55.3366, -80.6455, 0.15 ) }
    dend_38 { pt3dadd( -97.6, 55.6897, -80.6731, 0.73 ) }
    dend_38 { pt3dadd( -97.9784, 55.9685, -80.6857, 0.81 ) }
    dend_38 { pt3dadd( -98.3581, 56.2456, -80.6915, 0.81 ) }
    dend_38 { pt3dadd( -99.1224, 56.7936, -80.6919, 0.29 ) }
    dend_38 { pt3dadd( -99.8736, 57.2969, -80.6827, 0.29 ) }
    dend_38 { pt3dadd( -101.108, 58.0651, -80.6398, 0.29 ) }
    dend_38 { pt3dadd( -101.739, 58.4346, -80.6076, 0.29 ) }
    dend_38 { pt3dadd( -102.354, 58.757, -80.5617, 0.59 ) }
    dend_38 { pt3dadd( -102.961, 59.0394, -80.4859, 0.59 ) }
    dend_38 { pt3dadd( -103.907, 59.4127, -80.3303, 0.37 ) }
    dend_38 { pt3dadd( -104.811, 59.7164, -80.1556, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_38 { pt3dadd( -105.473, 59.9011, -80.0419, 0.59 ) }
    dend_38 { pt3dadd( -106.983, 60.2602, -79.7735, 0.15 ) }
    dend_38 { pt3dadd( -107.798, 60.4315, -79.6258, 0.37 ) }
    dend_38 { pt3dadd( -108.406, 60.5373, -79.5008, 0.15 ) }
    dend_38 { pt3dadd( -109.112, 60.6447, -79.3484, 0.37 ) }
    dend_38 { pt3dadd( -109.702, 60.7395, -79.2309, 0.07 ) }
    dend_38 { pt3dadd( -109.925, 60.7824, -79.1918, 0.37 ) }
    dend_38 { pt3dadd( -110.746, 61.0023, -79.0765, 0.07 ) }
    dend_38 { pt3dadd( -111.668, 61.2767, -78.9679, 0.22 ) }
    dend_38 { pt3dadd( -112.593, 61.5647, -78.855, 0.07 ) }
    dend_38 { pt3dadd( -113.739, 61.9348, -78.7137, 0.07 ) }
    dend_38 { pt3dadd( -114.66, 62.257, -78.5835, 0.07 ) }
    dend_38 { pt3dadd( -115.379, 62.5396, -78.4743, 0.29 ) }
    dend_38 { pt3dadd( -115.917, 62.7753, -78.3901, 0.07 ) }
    dend_38 { pt3dadd( -116.634, 63.1677, -78.2879, 0.07 ) }
    dend_38 { pt3dadd( -116.906, 63.3584, -78.2384, 0.22 ) }
    dend_38 { pt3dadd( -117.44, 63.8757, -78.1045, 0.07 ) }
    dend_38 { pt3dadd( -117.753, 64.2879, -78.0105, 0.29 ) }
    dend_38 { pt3dadd( -117.942, 64.5964, -77.9516, 0.29 ) }
    dend_38 { pt3dadd( -118.315, 65.2804, -77.8459, 0.07 ) }
    dend_38 { pt3dadd( -118.667, 65.909, -77.7391, 0.07 ) }
    dend_38 { pt3dadd( -119.024, 66.4145, -77.6462, 0.73 ) }
    dend_38 { pt3dadd( -119.353, 66.743, -77.5517, 0.22 ) }
    dend_38 { pt3dadd( -119.718, 67.0211, -77.477, 0.66 ) }
    dend_38 { pt3dadd( -120.028, 67.2209, -77.4699, 0.29 ) }
    dend_38 { pt3dadd( -120.66, 67.5908, -77.6601, 0.29 ) }
    dend_38 { pt3dadd( -121.133, 67.9063, -78.0033, 0.59 ) }
    dend_38 { pt3dadd( -121.865, 68.4251, -78.6736, 0.15 ) }
    dend_38 { pt3dadd( -122.723, 69.0528, -79.598, 0.29 ) }
    dend_38 { pt3dadd( -123.394, 69.5985, -80.4809, 0.29 ) }
    dend_38 { pt3dadd( -123.983, 70.1885, -81.4767, 0.29 ) }
    dend_38 { pt3dadd( -124.354, 70.6657, -82.3349, 0.66 ) }
    dend_38 { pt3dadd( -124.518, 70.9668, -82.8811, 0.66 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 33/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -94.1464, 53.7885, -80.6157, 0.22 ) }
    dend_37 { pt3dadd( -93.7944, 54.3863, -81.2662, 0.22 ) }
    dend_37 { pt3dadd( -93.4175, 55.1921, -82.0454, 1.25 ) }
    dend_37 { pt3dadd( -92.8879, 56.4912, -83.1395, 0.07 ) }
    dend_37 { pt3dadd( -92.7412, 56.8519, -83.4138, 0.22 ) }
    dend_37 { pt3dadd( -92.5579, 57.2895, -83.727, 0.22 ) }
    dend_37 { pt3dadd( -92.4278, 57.5786, -83.9217, 0.22 ) }
    dend_37 { pt3dadd( -92.202, 58.0936, -84.1944, 0.37 ) }
    dend_37 { pt3dadd( -91.984, 58.6419, -84.4155, 0.07 ) }
    dend_37 { pt3dadd( -91.8745, 59.0656, -84.5724, 0.29 ) }
    dend_37 { pt3dadd( -91.8214, 59.8886, -85.0214, 0.07 ) }
    dend_37 { pt3dadd( -91.8891, 60.3051, -85.3371, 0.07 ) }
    dend_37 { pt3dadd( -91.9328, 60.4811, -85.4852, 0.07 ) }
    dend_37 { pt3dadd( -92.0823, 60.838, -85.8237, 0.07 ) }
    dend_37 { pt3dadd( -92.4866, 61.4917, -86.5037, 0.29 ) }
    dend_37 { pt3dadd( -93.2252, 62.4128, -87.5135, 0.29 ) }
    dend_37 { pt3dadd( -93.8029, 62.9694, -88.1646, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 50/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 104.042, 11.7602, 16.4659, 0.22 ) }
    dend_31 { pt3dadd( 103.73, 10.6457, 16.4659, 0.22 ) }
    dend_31 { pt3dadd( 103.559, 9.92257, 16.4242, 0.22 ) }
    dend_31 { pt3dadd( 103.325, 8.93558, 16.3673, 0.22 ) }
    dend_31 { pt3dadd( 103.233, 8.55127, 16.3451, 0.59 ) }
    dend_31 { pt3dadd( 102.938, 7.30505, 16.2732, 0.29 ) }
    dend_31 { pt3dadd( 102.802, 6.73187, 16.2402, 0.29 ) }
    dend_31 { pt3dadd( 102.571, 5.70688, 16.1593, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 58/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 104.042, 11.7602, 16.4659, 0.51 ) }
    dend_28 { pt3dadd( 104.78, 11.7167, 16.4317, 0.51 ) }
    dend_28 { pt3dadd( 106.166, 11.6888, 16.423, 0.66 ) }
    dend_28 { pt3dadd( 107.488, 11.7081, 16.4403, 0.51 ) }
    dend_28 { pt3dadd( 109.278, 11.7774, 16.5262, 0.44 ) }
    dend_28 { pt3dadd( 110.407, 11.828, 16.6646, 0.44 ) }
    dend_28 { pt3dadd( 111.672, 11.8537, 16.9787, 0.44 ) }
    dend_28 { pt3dadd( 112.524, 11.8399, 17.3248, 0.59 ) }
    dend_28 { pt3dadd( 113.092, 11.7964, 17.6535, 0.81 ) }
    dend_28 { pt3dadd( 114.478, 11.6795, 18.6152, 0.37 ) }
    dend_28 { pt3dadd( 115.689, 11.513, 19.6697, 0.59 ) }
    dend_28 { pt3dadd( 117.399, 11.1062, 21.3757, 0.37 ) }
    dend_28 { pt3dadd( 117.892, 10.9167, 21.9936, 0.95 ) }
    dend_28 { pt3dadd( 118.253, 10.7183, 22.5433, 1.03 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 72/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -4.29071, 68.7117, -85.742, 0.37 ) }
    dend_15 { pt3dadd( -4.74897, 69.0666, -86.6356, 0.37 ) }
    dend_15 { pt3dadd( -5.33059, 69.5041, -87.7105, 0.29 ) }
    dend_15 { pt3dadd( -5.81599, 69.845, -88.4512, 0.29 ) }
    dend_15 { pt3dadd( -6.432, 70.2377, -89.2097, 0.29 ) }
    dend_15 { pt3dadd( -7.16547, 70.6682, -89.97, 0.29 ) }
    dend_15 { pt3dadd( -7.54591, 70.8914, -90.3644, 0.29 ) }
    dend_15 { pt3dadd( -7.92572, 71.1382, -90.7426, 0.29 ) }
    dend_15 { pt3dadd( -8.70989, 71.6552, -91.4127, 0.29 ) }
    dend_15 { pt3dadd( -9.73668, 72.2112, -92.0359, 0.22 ) }
    dend_15 { pt3dadd( -10.3223, 72.459, -92.2676, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 83/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -4.29071, 68.7117, -85.742, 0.37 ) }
    dend_14 { pt3dadd( -4.34952, 67.9011, -85.7186, 0.37 ) }
    dend_14 { pt3dadd( -4.37621, 67.3128, -85.6838, 0.59 ) }
    dend_14 { pt3dadd( -4.43439, 65.8141, -85.5306, 0.44 ) }
    dend_14 { pt3dadd( -4.54828, 64.7058, -85.3958, 0.44 ) }
    dend_14 { pt3dadd( -4.73907, 63.7571, -85.2113, 0.29 ) }
    dend_14 { pt3dadd( -5.0497, 62.644, -84.9588, 0.29 ) }
    dend_14 { pt3dadd( -5.1557, 62.3675, -84.9059, 0.51 ) }
    dend_14 { pt3dadd( -5.51905, 61.6261, -84.8426, 0.22 ) }
    dend_14 { pt3dadd( -6.06257, 60.6885, -84.9269, 0.66 ) }
    dend_14 { pt3dadd( -6.93183, 59.3559, -85.2206, 0.44 ) }
    dend_14 { pt3dadd( -7.49516, 58.5788, -85.5572, 0.44 ) }
    dend_14 { pt3dadd( -8.32561, 57.5207, -86.2711, 0.44 ) }
    dend_14 { pt3dadd( -8.98784, 56.7487, -87.1244, 0.44 ) }
    dend_14 { pt3dadd( -9.63309, 56.071, -88.1259, 1.47 ) }
    dend_14 { pt3dadd( -10.3323, 55.4179, -89.4443, 0.22 ) }
    dend_14 { pt3dadd( -10.9312, 54.9693, -90.7531, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_14 { pt3dadd( -11.4766, 54.6946, -92.042, 0.81 ) }
    dend_14 { pt3dadd( -12.8001, 54.3246, -95.3483, 0.37 ) }
    dend_14 { pt3dadd( -13.0636, 54.2858, -96.0316, 0.59 ) }
    dend_14 { pt3dadd( -13.5945, 54.3011, -97.4809, 0.22 ) }
    dend_14 { pt3dadd( -14.0396, 54.4061, -98.83, 0.44 ) }
    dend_14 { pt3dadd( -14.5926, 54.6331, -100.532, 0.07 ) }
    dend_14 { pt3dadd( -15.0893, 54.9274, -102.076, 0.07 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 7/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 118.253, 10.7183, 22.5433, 0.29 ) }
    dend_30 { pt3dadd( 119.216, 10.0178, 23.1907, 0.29 ) }
    dend_30 { pt3dadd( 120.432, 9.24808, 24.0133, 0.29 ) }
    dend_30 { pt3dadd( 121.08, 8.84604, 24.4523, 0.29 ) }
    dend_30 { pt3dadd( 121.474, 8.61143, 24.7227, 0.29 ) }
    dend_30 { pt3dadd( 121.794, 8.5042, 24.9931, 0.29 ) }
    dend_30 { pt3dadd( 122.018, 8.54855, 25.2385, 0.29 ) }
    dend_30 { pt3dadd( 122.324, 8.95866, 25.6633, 0.29 ) }
    dend_30 { pt3dadd( 122.661, 9.57906, 26.028, 0.29 ) }
    dend_30 { pt3dadd( 122.936, 10.2504, 26.3793, 0.29 ) }
    dend_30 { pt3dadd( 123.289, 11.2021, 26.8558, 0.29 ) }
    dend_30 { pt3dadd( 123.524, 11.746, 27.1463, 0.29 ) }
    dend_30 { pt3dadd( 123.935, 12.3721, 27.5675, 0.29 ) }
    dend_30 { pt3dadd( 124.511, 12.792, 27.9424, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 118.253, 10.7183, 22.5433, 0.37 ) }
    dend_29 { pt3dadd( 119.125, 11.1311, 22.6839, 0.37 ) }
    dend_29 { pt3dadd( 119.799, 11.4068, 22.825, 0.22 ) }
    dend_29 { pt3dadd( 120.042, 11.484, 22.883, 0.37 ) }
    dend_29 { pt3dadd( 120.976, 11.7017, 23.1184, 0.29 ) }
    dend_29 { pt3dadd( 122.182, 11.8793, 23.4174, 0.22 ) }
    dend_29 { pt3dadd( 122.981, 11.9743, 23.631, 0.22 ) }
    dend_29 { pt3dadd( 123.626, 12.0275, 23.8287, 0.22 ) }
    dend_29 { pt3dadd( 124.314, 12.0277, 24.0642, 0.22 ) }
    dend_29 { pt3dadd( 124.816, 11.9927, 24.2399, 0.59 ) }
    dend_29 { pt3dadd( 125.49, 11.8906, 24.4759, 1.03 ) }
    dend_29 { pt3dadd( 126.358, 11.7079, 24.7215, 0.22 ) }
    dend_29 { pt3dadd( 127.06, 11.5694, 24.8907, 0.81 ) }
    dend_29 { pt3dadd( 128.272, 11.3728, 25.1712, 0.29 ) }
    dend_29 { pt3dadd( 128.977, 11.2818, 25.3166, 0.29 ) }
    dend_29 { pt3dadd( 129.563, 11.214, 25.4105, 0.29 ) }
    dend_29 { pt3dadd( 130.183, 11.1258, 25.4785, 0.29 ) }
    dend_29 { pt3dadd( 131.581, 10.8359, 25.5501, 0.29 ) }
    dend_29 { pt3dadd( 131.868, 10.7553, 25.5504, 0.29 ) }
    dend_29 { pt3dadd( 132.502, 10.5305, 25.5295, 0.29 ) }
    dend_29 { pt3dadd( 133.049, 10.2184, 25.5525, 0.29 ) }
    dend_29 { pt3dadd( 133.454, 9.74647, 25.6654, 0.29 ) }
    dend_29 { pt3dadd( 133.661, 9.35154, 25.7853, 0.29 ) }
    dend_29 { pt3dadd( 133.99, 8.54347, 26.0372, 0.29 ) }
    dend_29 { pt3dadd( 134.372, 7.45527, 26.3898, 0.29 ) }
    dend_29 { pt3dadd( 134.613, 6.52893, 26.7039, 0.29 ) }
    dend_29 { pt3dadd( 134.776, 5.72611, 26.9818, 0.29 ) }
    dend_29 { pt3dadd( 134.976, 4.59308, 27.3433, 0.22 ) }
    dend_29 { pt3dadd( 135.091, 3.89173, 27.5344, 0.22 ) }
    dend_29 { pt3dadd( 135.166, 3.37589, 27.6434, 0.22 ) }
    dend_29 { pt3dadd( 135.214, 2.5627, 27.7223, 0.22 ) }
    dend_29 { pt3dadd( 135.211, 1.81971, 27.7439, 0.22 ) }
    dend_29 { pt3dadd( 135.136, 1.00478, 27.7439, 0.22 ) }
    dend_29 { pt3dadd( 134.957, 0.130203, 27.7439, 0.22 ) }
    dend_29 { pt3dadd( 134.829, -0.419663, 27.7439, 0.22 ) }
    dend_29 { pt3dadd( 134.696, -1.18813, 27.7439, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_42, dend_23, dend_18, dend_7, dend_0, dend_49, dend_46, dend_44, dend_43, dend_33, dend_24, dend_22, dend_19, dend_11, dend_8, dend_6, dend_1, dend_53, dend_50, dend_48, dend_47, dend_35, dend_34, dend_26, dend_25, dend_21, dend_20, dend_17, dend_12, dend_10, dend_9, dend_5, dend_2, dend_52, dend_51, dend_39, dend_36, dend_32, dend_27, dend_16, dend_13, dend_4, dend_3, dend_41, dend_40, dend_38, dend_37, dend_31, dend_28, dend_15, dend_14, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_45, dend_42, dend_23, dend_18, dend_7, dend_0, dend_49, dend_46, dend_44, dend_43, dend_33, dend_24, dend_22, dend_19, dend_11, dend_8, dend_6, dend_1, dend_53, dend_50, dend_48, dend_47, dend_35, dend_34, dend_26, dend_25, dend_21, dend_20, dend_17, dend_12, dend_10, dend_9, dend_5, dend_2, dend_52, dend_51, dend_39, dend_36, dend_32, dend_27, dend_16, dend_13, dend_4, dend_3, dend_41, dend_40, dend_38, dend_37, dend_31, dend_28, dend_15, dend_14, dend_30, dend_29]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_42 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_53 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_50 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_47 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_25 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_17 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_9 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_2 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_52 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_39 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_36 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_27 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_13 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_23 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_45 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_24 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_18 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_6 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_19 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_7 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_26 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_5 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_46 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_32 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_8 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_49 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_11 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_12 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_10 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_21 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_20 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_48 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_43 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_44 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_34 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_51 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_4 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_35 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_31 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_3 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_28 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_30 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_15 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_29 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_14 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_38 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_40 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_41 OneSecGrp_SectionRef_48.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_13 all.append()
    dend_13 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_42 nseg = 3
    dend_33 nseg = 5
    dend_53 nseg = 9
    dend_50 nseg = 3
    dend_47 nseg = 3
    dend_25 nseg = 3
    dend_17 nseg = 3
    dend_9 nseg = 3
    dend_2 nseg = 3
    dend_52 nseg = 3
    dend_39 nseg = 5
    dend_36 nseg = 3
    dend_27 nseg = 3
    dend_13 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_DLAC_3a1208130a_0_0


