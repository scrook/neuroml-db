// Cell: cNAC187_L1_HAC_f7023f0666_0_0
/*
{
  "id" : "cNAC187_L1_HAC_f7023f0666_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.03041, -7.83762, 0.0, 3.24034", "-0.932248, -7.06937, 0.0, 5.80119", "-0.83409, -6.30111, 0.0, 8.91479", "-0.735933, -5.53286, 0.0, 10.9728", "-0.637775, -4.76461, 0.0, 11.8159", "-0.539618, -3.99636, 0.0, 12.5217", "-0.44146, -3.2281, 0.0, 12.9048", "-0.343302, -2.45985, 0.0, 13.2488", "-0.245145, -1.6916, 0.0, 13.4777", "-0.146987, -0.923346, 0.0, 13.4207", "-0.0488296, -0.155094, 0.0, 13.3708", "0.049328, 0.613158, 0.0, 13.1194", "0.147486, 1.38141, 0.0, 12.8066", "0.245643, 2.14966, 0.0, 12.4454", "0.343801, 2.91792, 0.0, 11.6947", "0.441958, 3.68617, 0.0, 10.8939", "0.540116, 4.45442, 0.0, 9.93649", "0.638274, 5.22267, 0.0, 8.97705", "0.736431, 5.99093, 0.0, 7.24774", "0.834589, 6.75918, 0.0, 4.64373", "0.932746, 7.52743, 0.0, 2.74592" ]
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "3.90316, 0.185066, -9.46, 1.38", "4.10923, 0.0866141, -9.49366, 1.38", "5.81731, -0.613254, -9.77909, 1.38", "7.54429, -1.19859, -10.0671, 1.38", "9.1176, -1.58062, -10.4003, 1.15", "10.6633, -1.77767, -10.8366, 1.15", "12.4843, -1.79594, -11.4744, 1.15", "13.3741, -1.39477, -11.9904, 0.92", "13.6704, -0.715975, -12.4815, 0.92", "13.9766, 0.896397, -13.6374, 1.38", "14.1515, 2.69644, -14.9013, 1.15", "14.1652, 3.52965, -15.4671, 1.15", "14.0454, 5.76968, -16.982, 0.92", "13.921, 7.1071, -17.9311, 1.38", "13.7099, 8.93571, -19.2808, 1.61", "13.6105, 9.70166, -19.849, 1.38", "13.5597, 10.2913, -20.3239, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000011896582887
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "7.42318, -3.73493, -2.18, 0.92", "7.72239, -5.19764, -2.13472, 0.92", "8.1658, -6.78612, -1.96848, 0.92", "8.66582, -8.01791, -1.80058, 0.92", "9.40361, -9.4513, -1.65152, 0.92", "10.5817, -11.2813, -1.65838, 0.69", "11.2072, -12.1651, -1.76695, 0.69", "12.3384, -13.5778, -2.08093, 0.92", "13.4589, -14.7387, -2.32833, 1.15", "14.4539, -15.6398, -2.52629, 0.92", "16.1805, -17.1143, -2.74927, 0.92", "17.5208, -18.2568, -2.82747, 0.92", "18.7258, -19.4239, -2.88687, 0.92", "20.238, -21.1008, -2.83388, 1.15", "20.6889, -21.669, -2.72104, 1.15", "21.5763, -22.8253, -2.34699, 0.92", "22.3771, -23.8914, -1.92903, 1.15", "23.4286, -25.2795, -1.34082, 0.92", "24.5215, -26.841, -0.812418, 0.92", "25.2299, -27.9996, -0.489699, 1.38", "25.6845, -28.8045, -0.255563, 1.38", "26.5495, -30.3482, 0.225482, 0.92", "27.5087, -31.9812, 0.779117, 0.92", "28.3476, -33.3154, 1.11163, 0.92", "29.4783, -34.9448, 1.11687, 0.92", "30.0153, -35.6646, 0.915865, 0.92", "30.9644, -36.9717, 0.15349, 0.92", "31.7288, -38.1109, -0.853587, 1.15", "32.6723, -39.7685, -2.77617, 1.15", "33.5287, -41.6438, -5.30645, 1.15", "33.8129, -42.4658, -6.47095, 1.15", "34.079, -43.4802, -7.82579, 1.15", "34.2951, -44.3885, -9.00245, 0.69", "34.59, -45.6289, -10.6067, 0.69", "34.8035, -46.4777, -11.6977, 0.69", "35.0677, -47.4255, -13.0131, 0.69", "35.3849, -48.487, -14.64, 1.15", "35.9239, -50.2297, -17.6298, 0.92", "36.2019, -51.2763, -19.5678, 0.92", "36.3373, -52.1975, -21.4471, 0.92", "36.2468, -53.1658, -23.7103, 0.92", "36.0011, -53.7915, -25.3464, 0.46", "35.7385, -54.1681, -26.3612, 0.46", "35.4163, -54.514, -27.2357, 0.92", "34.4894, -55.4686, -29.5668, 0.46", "33.5677, -56.4906, -32.0507, 0.46", "32.8243, -57.3771, -34.3084, 0.46", "32.2676, -58.0212, -36.0295, 0.92", "31.522, -58.9262, -38.45, 0.69", "30.8747, -59.8325, -40.828, 0.69", "30.4343, -60.6386, -42.7687, 0.92", "29.9121, -61.8015, -45.5622, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000011896582887,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "7.37319, -2.28493, -2.46, 2.06", "7.54278, -2.20041, -2.62308, 2.06", "8.75907, -1.64202, -3.69122, 1.83", "10.2044, -0.978435, -4.96059, 1.83", "11.8765, -0.210799, -6.42898, 1.38", "13.5527, 0.55877, -7.90108, 1.38", "14.2929, 0.898587, -8.55111, 1.61", "15.3736, 1.38603, -9.45304, 2.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000011896582887
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-7.10685, -3.88493, -6.28, 3.21", "-7.10685, -3.88493, -6.28, 3.21", "-9.07143, -4.62487, -6.96429, 2.52", "-10.8983, -5.31293, -7.60062, 2.52", "-13.7182, -6.37502, -8.58284, 2.52", "-16.0037, -7.23581, -9.3789, 2.98", "-18.4047, -8.14013, -10.2152, 2.98" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000011896582887
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.932746, 7.52743, 0.0, 0.856831", "2.83381, 22.4065, 0.0, 0.856831", "4.73487, 37.2855, 0.0, 0.856831" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "13.5597, 10.2913, -20.3239, 0.92", "13.2912, 10.1774, -21.1662, 0.92", "12.4759, 10.0651, -23.7645, 0.92", "11.9078, 10.0853, -25.7308, 0.92", "11.4042, 10.1719, -27.6867, 1.38", "10.6443, 10.4483, -30.8324, 1.38", "10.4823, 10.5321, -31.6545, 1.38", "10.1934, 10.8737, -34.4117, 1.38", "10.1854, 11.0191, -35.2881, 1.15", "10.3321, 11.2654, -37.0651, 1.15", "10.6964, 11.4046, -39.1345, 1.15", "11.2538, 11.341, -41.169, 0.92", "11.8289, 11.2073, -42.9223, 0.92", "12.1538, 11.1062, -43.8127, 0.92", "12.7771, 10.9596, -45.767, 0.92", "13.0005, 10.9573, -46.6428, 0.92", "13.197, 11.1981, -48.6683, 0.92", "13.1437, 11.361, -49.2226, 1.38", "12.9052, 11.9404, -50.6578, 1.38", "12.5901, 12.6022, -52.133, 0.92", "12.2033, 13.3307, -53.7623, 0.92", "11.756, 14.0991, -55.5864, 1.15", "11.2308, 14.9492, -57.6155, 0.92", "10.7442, 15.7053, -59.3301, 0.92", "10.1463, 16.6274, -61.3207, 1.15", "9.52099, 17.802, -63.5824, 0.92", "9.2234, 18.6271, -65.0494, 0.92", "9.05801, 19.4369, -66.4902, 0.69", "8.95063, 20.4468, -68.2191, 0.69", "8.99161, 20.7317, -68.7251, 0.92", "9.52013, 21.6875, -70.5014, 0.92", "10.6465, 22.7606, -72.9153, 0.92", "11.4693, 23.2902, -74.4814, 0.92", "12.0742, 23.6033, -75.7205, 0.69", "12.8002, 23.9675, -77.3815, 0.69", "13.1934, 24.1966, -78.4406, 1.15", "13.6455, 24.608, -80.2942, 1.15", "13.8231, 25.1972, -82.4262, 0.92", "13.6575, 25.9663, -84.817, 0.92", "13.4004, 26.4774, -86.2623, 0.92", "13.2167, 26.7694, -86.9914, 0.69", "12.6102, 27.6856, -89.0057, 0.69", "12.228, 28.2466, -90.1488, 0.92", "11.7398, 28.9569, -91.5132, 1.15", "11.3331, 29.6068, -92.654, 0.69", "10.9459, 30.1702, -93.646, 0.69", "10.5905, 30.6708, -94.5004, 0.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "13.5597, 10.2913, -20.3239, 0.46", "15.1476, 11.3381, -20.2625, 0.46", "16.5163, 12.1722, -20.0774, 0.46", "17.7769, 12.9523, -19.7447, 0.69", "19.1249, 13.8674, -19.232, 0.46", "19.8057, 14.3752, -18.8717, 0.46", "21.5644, 15.7906, -17.7477, 0.69", "23.1531, 17.0916, -16.4829, 0.46", "24.5493, 18.3265, -15.241, 0.46", "25.6584, 19.3958, -14.0139, 0.46", "26.5815, 20.3561, -12.7481, 0.46", "27.0801, 20.9885, -11.8599, 0.46", "27.4647, 21.6837, -10.7186, 0.46" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "15.3736, 1.38603, -9.45304, 1.15", "13.6897, 4.29917, -11.0549, 1.15", "12.6161, 6.56095, -12.2803, 1.15", "11.7081, 9.07215, -13.8009, 0.92", "11.4196, 10.2473, -14.495, 0.92", "11.2678, 11.0347, -14.9754, 0.92", "11.1617, 11.79, -15.4316, 1.38", "11.0674, 13.5383, -16.2715, 1.38", "11.0523, 15.0433, -17.0271, 1.38", "11.0037, 16.3484, -17.7625, 1.38", "10.8074, 17.9403, -18.7266, 1.15", "10.596, 18.7299, -19.2904, 1.15", "9.90135, 20.1399, -20.447, 1.15", "9.32031, 20.9588, -21.1587, 1.15", "8.50285, 21.9612, -22.1175, 0.92", "7.33986, 23.5222, -23.6948, 0.92", "6.6229, 24.7054, -24.8267, 0.92", "6.2104, 25.6103, -25.684, 0.92", "5.9027, 26.6462, -26.6744, 1.15", "5.55174, 28.2241, -27.977, 0.92", "5.29222, 30.1532, -29.3195, 0.92", "5.24796, 31.0111, -29.8178, 1.15", "5.28488, 33.0133, -30.8906, 1.15", "5.35851, 34.4003, -31.6439, 1.15", "5.50183, 36.2734, -32.6747, 0.92", "5.63389, 37.32, -33.2011, 0.92", "5.76826, 38.3841, -33.763, 0.92", "6.06558, 39.5766, -34.375, 0.92", "6.95052, 41.2483, -34.9738, 0.92", "7.80231, 42.317, -35.2908, 1.15", "8.96226, 43.3437, -35.6499, 0.92" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "15.3736, 1.38603, -9.45304, 1.83", "16.3648, 0.836884, -9.60089, 1.83", "18.4569, -0.505279, -10.2851, 1.38", "19.7061, -1.30697, -10.7685, 1.38", "20.5856, -1.87137, -11.1088, 1.61", "22.8641, -3.33361, -11.9904, 1.38", "24.1059, -4.13058, -12.4709, 1.38", "24.7389, -4.62233, -12.8615, 1.38", "25.3786, -5.25654, -13.5647, 1.61" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-18.4047, -8.14013, -10.2152, 2.52", "-19.0042, -8.67719, -9.3721, 2.52", "-20.058, -9.62136, -7.88983, 2.52", "-21.0278, -10.4903, -6.52574, 2.52" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-18.4047, -8.14013, -10.2152, 1.83", "-19.9754, -8.26591, -8.97609, 1.83", "-21.3402, -8.31471, -7.75937, 1.61", "-22.7262, -8.33638, -6.50435, 1.15", "-23.3224, -8.34569, -5.96447, 1.15", "-24.5185, -8.36438, -4.88137, 1.38", "-26.2883, -8.39203, -3.27877, 1.61", "-27.7284, -8.38707, -2.06286, 1.15", "-28.1986, -8.36127, -1.65951, 1.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.73487, 37.2855, 0.0, 0.406519", "6.63593, 52.1646, 0.0, 0.406519", "8.53699, 67.0436, 0.0, 0.406519" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "25.3786, -5.25654, -13.5647, 1.38", "26.3704, -5.79448, -11.8451, 1.38", "27.313, -6.47791, -10.5212, 1.38", "28.616, -7.58876, -9.05835, 1.38", "29.9896, -8.71712, -7.70061, 1.38", "31.2614, -9.66959, -6.52399, 1.15", "33.0428, -10.8027, -4.96972, 1.15", "34.1191, -11.6508, -4.20568, 0.92", "34.7608, -12.2584, -3.95736, 0.92", "35.7607, -13.3352, -4.0273, 0.92", "36.5651, -14.0868, -4.37852, 0.92", "37.068, -13.2375, -3.53493, 0.92" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "25.3786, -5.25654, -13.5647, 0.92", "26.3387, -4.11432, -14.0812, 0.92", "26.9872, -3.22345, -14.4737, 0.92", "27.7531, -2.08249, -15.0722, 0.92", "28.2447, -1.31049, -15.6255, 0.92", "28.9832, -0.152576, -16.7197, 0.92", "29.5214, 0.620345, -17.7916, 0.92", "29.7726, 0.890696, -18.4243, 0.92", "30.2435, 1.09642, -19.7074, 0.92", "30.9076, 1.15893, -21.3831, 0.92", "31.3756, 1.1099, -22.3946, 0.92", "32.3684, 0.835767, -24.3038, 0.92", "32.954, 0.61597, -25.361, 1.15", "33.9721, 0.194094, -27.1061, 1.15", "35.0555, -0.246521, -28.7822, 0.92", "35.9364, -0.635807, -30.1037, 0.92", "36.9125, -1.18081, -31.6243, 0.92", "37.8058, -1.86952, -33.0566, 0.92", "38.5308, -2.5686, -34.1891, 0.92", "38.9845, -3.04748, -34.8834, 1.15", "39.9616, -4.03771, -36.3365, 1.15", "41.3931, -5.15827, -38.2159, 0.69", "42.3169, -5.58789, -39.3779, 0.69", "43.745, -5.81419, -41.2008, 0.69", "45.5077, -5.59461, -43.6437, 0.69", "46.7134, -5.12857, -45.4621, 0.69", "47.6557, -4.53882, -46.9584, 0.46", "48.9748, -3.40813, -49.155, 0.46", "49.6857, -2.70416, -50.4282, 0.69", "50.8278, -1.44247, -52.5826, 0.92", "51.6331, -0.637869, -53.97, 0.69", "52.2976, -0.0957618, -55.0216, 0.69", "52.9528, 0.299378, -55.909, 0.92", "54.4625, 0.818896, -57.5507, 0.92", "55.4464, 0.968341, -58.4694, 0.92", "56.6837, 0.92739, -59.5528, 0.92", "58.2858, 0.644185, -60.9767, 0.69", "59.4679, 0.297383, -62.0146, 0.92", "61.5842, -0.485452, -63.9359, 0.69", "63.3546, -1.24613, -65.5876, 0.69", "64.9766, -2.09587, -67.2918, 0.69", "65.6381, -2.51923, -68.1265, 0.69", "66.6943, -3.3172, -69.8053, 1.15", "68.0178, -4.45226, -72.6419, 0.69", "69.0366, -5.37319, -75.1087, 0.69", "69.9375, -6.28572, -77.6698, 0.69", "70.645, -7.03524, -79.9639, 0.69", "71.3584, -7.90432, -82.8469, 0.69", "71.7348, -8.68948, -85.7793, 0.69" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-21.0278, -10.4903, -6.52574, 1.38", "-20.0094, -12.6875, -7.72506, 1.38", "-19.8159, -13.1997, -8.01561, 1.38", "-19.6111, -14.1069, -8.47823, 0.92", "-19.4768, -15.5047, -8.97087, 1.15", "-19.4649, -17.3354, -9.28249, 1.15", "-19.5265, -18.7072, -9.33012, 1.15", "-19.6377, -19.8446, -9.29947, 1.15", "-19.8526, -21.6906, -9.00393, 1.15", "-20.1254, -23.8188, -8.40945, 0.92", "-20.3568, -25.7807, -7.66871, 0.92", "-20.5305, -27.2512, -6.99533, 0.92", "-20.6412, -28.3878, -6.43735, 0.92", "-20.7113, -29.9153, -5.67207, 1.15", "-20.6875, -31.5875, -4.85599, 1.15", "-20.6438, -32.5134, -4.457, 1.15", "-20.538, -34.2356, -3.81612, 0.92", "-20.4964, -35.09, -3.55483, 0.92", "-20.4337, -36.2971, -3.26645, 0.92", "-20.3077, -38.711, -2.81824, 0.92", "-20.2201, -40.849, -2.47048, 0.92", "-20.2585, -42.9844, -2.16574, 1.15", "-20.3833, -44.6191, -1.9752, 0.92", "-20.7169, -46.7957, -1.76411, 0.92", "-20.8497, -47.3387, -1.71196, 0.92", "-21.3389, -48.8355, -1.5601, 0.92", "-22.1648, -50.991, -1.28798, 1.15", "-22.6587, -52.2248, -1.09601, 0.92", "-23.3744, -54.0917, -0.792879, 0.92", "-23.8139, -55.409, -0.652267, 0.92", "-24.0594, -56.5536, -0.601685, 0.92", "-24.1836, -57.7861, -0.65019, 1.15", "-24.2199, -59.5426, -0.793601, 0.92", "-24.2076, -60.7591, -0.974917, 0.92", "-24.1808, -62.7497, -1.42861, 0.92", "-24.1609, -64.4649, -1.87696, 0.92", "-24.1866, -66.5712, -2.35915, 0.69", "-24.2601, -68.2717, -2.63458, 0.92", "-24.3985, -70.2092, -2.73665, 0.46", "-24.5184, -71.735, -2.64725, 0.46", "-24.6609, -73.309, -2.37068, 0.46", "-24.8346, -75.6629, -1.82762, 0.92", "-24.9572, -77.4336, -1.38616, 0.92", "-25.0898, -79.3195, -0.929971, 0.92", "-25.1693, -81.0625, -0.512977, 0.46", "-25.1683, -82.2784, -0.271439, 0.92", "-25.1064, -84.1674, -0.046046, 0.69", "-25.0294, -86.98, 0.0918299, 0.92", "-25.058, -89.3358, 0.0989371, 0.92", "-25.1789, -91.6294, -0.0114865, 0.23", "-25.32, -93.0906, -0.132484, 0.69", "-25.5656, -95.0854, -0.283826, 0.69", "-25.753, -96.4896, -0.332613, 0.69", "-26.0079, -98.5477, -0.380032, 0.69", "-26.2138, -100.384, -0.411937, 0.46", "-26.4677, -102.94, -0.417463, 0.69", "-26.5469, -104.837, -0.46143, 0.46", "-26.4667, -106.674, -0.586736, 0.69", "-26.2597, -108.099, -0.80381, 0.69", "-25.7095, -110.482, -1.38561, 0.46", "-25.3845, -111.549, -1.73743, 1.15", "-24.4309, -114.131, -2.88571, 0.23", "-23.5355, -116.29, -4.13775, 0.23", "-22.5707, -118.479, -5.5779, 0.23", "-21.6879, -120.36, -6.94437, 0.92", "-20.7532, -122.232, -8.45925, 0.46", "-19.7651, -124.086, -10.0149, 0.46", "-19.0324, -125.359, -11.0663, 0.46" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-21.0278, -10.4903, -6.52574, 2.52", "-24.2178, -10.5403, -6.52574, 2.52" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-28.1986, -8.36127, -1.65951, 0.69", "-28.7959, -7.87681, -4.17468, 0.69", "-29.1705, -7.53708, -5.52548, 0.69", "-29.9586, -6.87672, -7.86471, 0.69", "-30.86, -6.10522, -10.172, 0.69", "-31.0626, -5.92802, -10.6542, 0.92", "-31.549, -5.45159, -11.7867, 0.92", "-32.3056, -4.48523, -13.4761, 0.92", "-32.9523, -3.63336, -14.9148, 0.92", "-33.4096, -3.11069, -15.7708, 0.69", "-33.7968, -2.70978, -16.416, 0.69", "-34.2808, -2.14677, -17.3225, 0.69", "-34.7835, -1.47342, -18.3373, 0.69", "-35.5069, -0.258846, -19.8867, 0.69", "-35.8444, 0.491229, -20.772, 0.69", "-36.1693, 1.36022, -21.756, 0.69", "-36.4027, 1.98676, -22.3954, 0.69", "-36.8847, 3.22491, -23.5008, 0.69", "-37.2142, 4.27149, -24.1806, 0.69", "-37.4653, 5.10711, -24.5762, 0.69", "-37.8984, 6.132, -24.98, 0.69", "-38.5014, 7.08352, -25.2962, 0.69", "-39.1713, 7.93031, -25.4989, 0.46", "-39.9637, 8.78454, -25.6232, 0.46", "-40.6221, 9.42793, -25.6848, 0.23", "-42.0344, 10.9311, -25.7807, 0.46", "-43.0488, 12.0152, -25.8215, 0.46", "-43.6249, 12.656, -25.847, 0.46", "-44.8339, 13.9931, -25.9029, 0.46", "-45.6687, 14.926, -25.942, 0.46", "-46.9842, 16.7519, -26.0082, 0.46" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-28.1986, -8.36127, -1.65951, 0.92", "-29.558, -8.49918, -0.896006, 0.92", "-30.7074, -8.46177, -0.201702, 0.92", "-32.5908, -8.26095, 0.936959, 0.92", "-33.7307, -8.10919, 1.64543, 0.92", "-35.3077, -7.90104, 2.62793, 0.92", "-37.4794, -7.61437, 3.98096, 0.92", "-38.4966, -7.42536, 4.64689, 0.92", "-39.1026, -7.25056, 5.05823, 0.69", "-40.3677, -6.75386, 5.93913, 0.69", "-41.965, -6.09738, 7.0764, 0.69" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "37.068, -13.2375, -3.53493, 0.92", "38.5163, -13.9839, -2.65119, 0.92", "40.0761, -14.7878, -1.69944, 1.15", "41.8264, -15.6898, -0.631401, 0.92" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "37.068, -13.2375, -3.53493, 0.92", "38.2769, -11.9016, -5.4618, 0.92", "38.9763, -11.1721, -6.33176, 0.92", "39.8364, -10.3124, -7.1621, 0.92", "40.8873, -9.19988, -7.95036, 0.92", "42.1335, -7.7957, -8.62951, 0.92", "43.1938, -6.63194, -9.02686, 0.69", "44.464, -5.26601, -9.15408, 0.92", "45.3662, -4.35043, -9.19219, 0.92", "46.6323, -3.18459, -9.22456, 1.15", "48.2875, -1.87061, -9.34108, 0.92", "49.927, -0.6956, -9.63935, 0.69", "51.813, 0.512162, -10.2899, 0.92", "53.2414, 1.33852, -11.0277, 0.92", "54.0429, 1.75119, -11.5514, 0.92", "55.2307, 2.3406, -12.4428, 0.92", "56.5445, 3.042, -13.5313, 0.92", "57.6101, 3.74135, -14.5456, 0.92", "58.3289, 4.34678, -15.2648, 0.92", "59.0817, 5.12759, -15.9099, 0.92", "60.0839, 6.32699, -16.6138, 0.92", "60.7715, 7.14767, -16.9116, 1.15", "61.6126, 7.9976, -17.1548, 0.69", "62.4586, 8.80809, -17.3258, 0.69", "63.4857, 9.63014, -17.412, 0.69", "64.2962, 10.1973, -17.4404, 0.92", "66.0439, 11.357, -17.6229, 0.69", "68.0211, 12.7657, -17.9213, 0.69", "68.9136, 13.5032, -18.1017, 0.92", "69.9226, 14.444, -18.513, 0.92", "70.75, 15.3075, -19.098, 0.92", "71.844, 16.5208, -20.198, 0.92", "72.3268, 17.0733, -20.8339, 0.92", "73.0761, 17.8514, -21.8533, 0.92", "74.3263, 18.9544, -23.7722, 0.92", "75.3039, 19.7453, -25.5161, 0.92", "76.1581, 20.2932, -27.2062, 0.92", "76.7387, 20.5284, -28.4341, 0.92", "78.0146, 20.7953, -31.3031, 0.92", "78.7235, 20.7549, -32.8744, 1.15" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-24.2178, -10.5403, -6.52574, 2.29", "-24.6832, -11.7719, -7.84351, 2.29", "-25.0358, -12.6165, -8.81919, 2.06", "-25.6492, -14.2091, -10.6894, 1.83", "-26.1676, -15.6337, -12.2929, 1.38", "-26.8312, -17.6078, -14.3979, 1.61", "-27.3199, -19.2532, -15.9924, 1.61", "-27.6639, -20.3515, -16.9773, 1.38", "-28.0081, -21.6507, -17.9089, 1.38", "-28.2525, -22.7081, -18.3507, 1.38", "-28.4652, -23.5564, -18.495, 1.38", "-29.0085, -25.1526, -18.4389, 1.38", "-29.9321, -27.2061, -18.0816, 1.15", "-31.0104, -29.2036, -17.7393, 1.38", "-31.774, -30.4515, -17.6472, 1.38", "-32.801, -32.0745, -17.8472, 1.38", "-33.8353, -33.6571, -18.3084, 1.38", "-35.0108, -35.2811, -18.9691, 1.38", "-36.5282, -37.103, -19.9822, 1.15", "-38.2366, -38.8013, -21.2222, 1.38", "-40.1092, -40.3595, -22.596, 1.38", "-41.3154, -41.1911, -23.4583, 1.38", "-43.1888, -42.1215, -24.6394, 1.38", "-45.1032, -42.6742, -25.7012, 1.38", "-46.9725, -42.9387, -26.5358, 1.15", "-48.8992, -42.9449, -27.3054, 1.15", "-49.7437, -42.8479, -27.6622, 1.15", "-51.3268, -42.538, -28.4324, 1.15", "-53.5553, -42.0295, -29.6996, 1.15", "-54.3125, -41.8331, -30.1194, 1.15", "-55.5557, -41.4427, -30.7772, 1.15", "-56.728, -41.0484, -31.3801, 1.15", "-57.9732, -40.66, -31.8683, 1.15", "-59.1572, -40.373, -32.1645, 1.15", "-61.1023, -40.0869, -32.4165, 0.92", "-62.7806, -39.9992, -32.5324, 0.92", "-64.6234, -40.0773, -32.579, 0.92", "-67.2889, -40.3798, -32.5433, 1.15", "-69.2628, -40.7179, -32.5335, 1.15", "-70.1293, -40.9124, -32.5301, 0.92", "-72.3506, -41.5592, -32.5063, 1.15", "-73.5383, -41.9499, -32.464, 1.15", "-76.0013, -42.7785, -32.4021, 0.92", "-78.5283, -43.6086, -32.4896, 0.92", "-79.9074, -43.9921, -32.6432, 0.92", "-81.5457, -44.3692, -32.9606, 0.92", "-84.3146, -44.8897, -33.6938, 0.92", "-85.6535, -45.0947, -34.1143, 0.92", "-88.0427, -45.3761, -35.0464, 0.69", "-90.5681, -45.5477, -36.1391, 0.69", "-92.547, -45.5852, -37.0866, 1.38", "-93.3592, -45.5691, -37.5241, 1.38", "-95.0687, -45.5026, -38.5295, 0.69", "-96.9951, -45.474, -39.5844, 0.92", "-98.2527, -45.4805, -40.2051, 1.15", "-99.6028, -45.4856, -40.8548, 1.15", "-101.28, -45.4882, -41.7419, 0.92", "-102.386, -45.4864, -42.3567, 0.92", "-103.68, -45.4666, -43.0888, 1.15", "-104.158, -45.4763, -43.3354, 1.15", "-105.743, -45.6013, -44.1784, 0.69", "-107.691, -45.8714, -45.1458, 0.69", "-109.776, -46.2636, -46.1322, 0.69", "-111.316, -46.6276, -46.8575, 0.69", "-113.025, -47.0691, -47.6407, 1.15", "-115.387, -47.723, -48.6991, 0.92", "-117.887, -48.3994, -49.7563, 0.92", "-119.22, -48.7106, -50.387, 0.92", "-120.164, -48.8671, -50.9358, 0.92", "-122.05, -48.9975, -52.2704, 0.69", "-123.301, -48.9238, -53.2645, 0.69", "-124.57, -48.6719, -54.346, 0.69", "-126.88, -47.981, -56.4598, 0.69", "-128.516, -47.396, -57.8853, 0.69", "-130.573, -46.5536, -59.5834, 0.46", "-131.692, -46.0583, -60.4552, 0.46", "-133.048, -45.4105, -61.3436, 0.69", "-133.783, -45.0392, -61.7351, 0.69", "-135.739, -43.9969, -62.5701, 0.46", "-137.472, -43.0482, -63.2785, 0.46", "-138.511, -42.4259, -63.7034, 0.69", "-139.958, -41.5647, -64.325, 0.46", "-140.7, -41.1504, -64.654, 0.69", "-142.499, -40.2078, -65.4686, 0.69", "-143.702, -39.6573, -66.0717, 0.69", "-145.431, -39.0403, -66.9234, 0.92", "-147.247, -38.4925, -67.7925, 1.38", "-149.17, -38.0358, -68.6506, 0.69", "-150.444, -37.7582, -69.1338, 0.69", "-152.607, -37.2861, -69.8287, 0.69", "-153.818, -37.0232, -70.1775, 0.69", "-155.392, -36.6711, -70.601, 0.69", "-158.228, -36.0073, -71.2031, 0.46", "-161.015, -35.3199, -71.5349, 0.46", "-162.348, -34.9802, -71.5958, 0.46", "-165.019, -34.2963, -71.4672, 0.69", "-167.307, -33.6969, -71.2242, 0.23", "-169.336, -33.1806, -70.8308, 0.69", "-171.287, -32.6994, -70.2851, 0.23", "-172.416, -32.44, -69.9275, 0.23", "-173.806, -32.1365, -69.4697, 0.23", "-175.006, -31.8954, -69.1037, 0.46", "-176.941, -31.5975, -68.6316, 0.23", "-179.0, -31.4074, -68.3573, 0.69", "-180.919, -31.3447, -68.273, 0.23", "-182.073, -31.3697, -68.2999, 0.23", "-183.324, -31.454, -68.412, 0.23", "-184.92, -31.6138, -68.6365, 0.46", "-186.81, -31.868, -69.0089, 0.23", "-188.136, -32.0724, -69.3013, 0.69", "-189.683, -32.3601, -69.6805, 0.69", "-192.335, -32.8384, -70.3426, 0.23", "-195.253, -33.3125, -71.0614, 0.23", "-196.765, -33.5322, -71.4497, 0.23", "-198.44, -33.7679, -71.8773, 0.23", "-200.696, -34.1386, -72.4796, 0.23" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-24.2178, -10.5403, -6.52574, 1.15", "-25.1683, -9.56137, -7.40674, 1.15", "-27.7398, -6.94348, -9.63386, 1.15", "-29.5612, -5.32164, -11.2893, 1.15", "-30.9271, -4.40273, -12.6128, 1.15", "-31.8471, -3.86157, -13.6451, 1.15", "-32.9548, -3.2347, -15.3004, 1.15", "-33.3004, -2.98413, -16.1531, 1.15", "-33.8574, -2.48669, -17.9828, 1.15", "-34.4228, -1.8837, -20.0927, 1.15", "-34.7567, -1.39104, -21.507, 1.15", "-35.1467, -0.18867, -24.0599, 1.15", "-35.3162, 1.19693, -26.1782, 1.15", "-35.3924, 2.6979, -28.1631, 1.15", "-35.3848, 4.30924, -29.8388, 1.15", "-35.372, 5.55258, -30.8559, 1.15", "-35.4656, 7.70696, -32.2433, 1.15", "-35.519, 8.90217, -32.7302, 1.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-46.9842, 16.7519, -26.0082, 0.46", "-48.3627, 17.654, -25.8366, 0.46", "-49.688, 18.4807, -25.3304, 0.69", "-51.1438, 19.3369, -24.5285, 0.69", "-52.192, 19.9534, -23.9511, 0.69", "-53.6074, 20.7859, -23.1715, 0.69", "-54.7332, 21.4481, -22.5513, 1.15", "-56.0348, 22.3871, -21.6122, 1.15", "-56.5222, 22.7348, -21.0863, 1.38" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-46.9842, 16.7519, -26.0082, 0.23", "-44.6302, 16.7129, -25.224, 0.23", "-43.0448, 16.5961, -24.7389, 0.23", "-41.124, 16.3681, -24.1869, 0.23", "-39.9788, 16.1555, -23.8516, 0.23", "-37.5991, 15.56, -23.1802, 0.23", "-35.6208, 14.9193, -22.6484, 0.23", "-33.8198, 14.1533, -22.0843, 0.23", "-33.0722, 13.7232, -21.8605, 0.23", "-31.7939, 12.8083, -21.4282, 0.23", "-30.4405, 11.6925, -20.9183, 0.23", "-29.2403, 10.5698, -20.4466, 0.23", "-27.9713, 9.30523, -19.8675, 0.23", "-26.4175, 7.73167, -19.0604, 0.23", "-24.6775, 6.03491, -18.1025, 0.23", "-23.6561, 5.11614, -17.5161, 0.23" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "41.8264, -15.6898, -0.631401, 0.69", "43.4037, -16.3479, 1.10287, 0.69", "44.4844, -16.974, 2.46445, 0.69", "45.7362, -17.823, 4.18209, 0.69", "47.3088, -19.0828, 6.50215, 0.69", "48.3679, -19.994, 8.02692, 0.69", "49.0399, -20.6467, 9.06409, 0.69", "49.5807, -21.267, 10.0915, 0.69", "50.1396, -21.9891, 11.332, 0.46", "50.6744, -22.7917, 12.5995, 0.46", "51.0794, -23.4475, 13.638, 0.92", "52.1596, -25.0, 16.2839, 0.92", "53.0246, -26.0668, 18.2758, 0.92", "53.7697, -26.8675, 19.9785, 0.92" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "41.8264, -15.6898, -0.631401, 0.46", "41.7786, -16.4368, 1.03268, 0.46", "41.7195, -17.3602, 3.08996, 0.46", "41.6698, -18.1382, 4.82325, 0.46", "41.6463, -18.5057, 5.64192, 0.46", "41.607, -19.12, 7.01044, 0.46", "41.5546, -19.9386, 8.83418, 0.46" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-35.519, 8.90217, -32.7302, 0.92", "-35.7627, 9.28273, -34.1034, 0.92", "-36.3296, 10.2459, -37.6719, 0.92", "-36.7461, 10.9793, -40.4941, 0.92", "-37.0748, 11.5236, -42.6461, 0.92", "-37.3966, 11.9641, -44.4763, 0.92", "-37.8602, 12.4858, -46.9865, 0.92", "-38.4534, 13.1014, -50.7543, 0.92", "-38.6002, 13.2393, -51.7338, 1.15", "-39.0725, 13.585, -54.5853, 1.15", "-39.5207, 13.8808, -57.0134, 1.15", "-39.9334, 14.1875, -59.2196, 1.15", "-40.1709, 14.4157, -60.6418, 1.15", "-40.2635, 14.5211, -61.269, 0.92", "-40.5961, 15.0178, -63.8294, 0.92", "-40.77, 15.5251, -65.9446, 0.92", "-40.8295, 16.0076, -67.4344, 0.92", "-40.9994, 17.1949, -70.2196, 0.92" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-35.519, 8.90217, -32.7302, 0.92", "-35.6331, 10.1309, -32.7618, 0.92", "-35.9072, 12.2542, -32.7354, 0.92", "-36.0676, 13.4471, -32.6446, 0.92", "-36.4132, 15.7319, -32.6824, 0.92", "-36.7582, 17.4198, -32.8642, 0.92", "-37.1621, 19.2326, -33.1586, 0.92", "-37.7315, 21.118, -33.6147, 0.69", "-38.2666, 22.6107, -33.9846, 0.69", "-39.5427, 26.0149, -34.9888, 0.69", "-40.2288, 27.874, -35.7168, 0.69", "-40.4445, 28.505, -36.0459, 0.92", "-41.0976, 30.3001, -37.0781, 0.92", "-41.8834, 32.3414, -38.3252, 0.69", "-42.3756, 33.6451, -39.0991, 0.69", "-42.9573, 35.5028, -39.816, 0.92", "-43.4892, 37.6824, -40.5701, 0.69", "-43.9239, 39.3052, -41.2189, 0.69" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-43.9239, 39.3052, -41.2189, 0.23", "-44.4832, 40.556, -44.1906, 0.23", "-45.0419, 41.8055, -47.1593, 0.69", "-45.4212, 42.6537, -49.1746, 0.69", "-45.8143, 43.5326, -51.2628, 0.69" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-43.9239, 39.3052, -41.2189, 0.69", "-44.1815, 38.6596, -39.43, 0.69", "-44.4942, 37.8758, -37.2582, 0.69", "-44.717, 37.3174, -35.7111, 0.69", "-44.9443, 36.7476, -34.1324, 0.23", "-45.2104, 36.0806, -32.2842, 0.23" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_25", "dend_24", "dend_15", "dend_0", "dend_27", "dend_26", "dend_23", "dend_16", "dend_6", "dend_1", "dend_18", "dend_17", "dend_14", "dend_7", "dend_3", "dend_2", "dend_20", "dend_19", "dend_13", "dend_8", "dend_5", "dend_4", "dend_22", "dend_21", "dend_12", "dend_9", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_25", "dend_24", "dend_15", "dend_0", "dend_27", "dend_26", "dend_23", "dend_16", "dend_6", "dend_1", "dend_18", "dend_17", "dend_14", "dend_7", "dend_3", "dend_2", "dend_20", "dend_19", "dend_13", "dend_8", "dend_5", "dend_4", "dend_22", "dend_21", "dend_12", "dend_9", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_HAC_f7023f0666_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_15
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_6
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_7
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_25, dend_24, dend_15, dend_0, dend_27, dend_26, dend_23, dend_16, dend_6, dend_1, dend_18, dend_17, dend_14, dend_7, dend_3, dend_2, dend_20, dend_19, dend_13, dend_8, dend_5, dend_4, dend_22, dend_21, dend_12, dend_9, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_25, dend_24, dend_15, dend_0, dend_27, dend_26, dend_23, dend_16, dend_6, dend_1, dend_18, dend_17, dend_14, dend_7, dend_3, dend_2, dend_20, dend_19, dend_13, dend_8, dend_5, dend_4, dend_22, dend_21, dend_12, dend_9, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_30
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_25(0), soma_0(0.45000011896582887)
    connect dend_24(0), soma_0(0.45000011896582887)
    connect dend_15(0), soma_0(0.45000011896582887)
    connect dend_0(0), soma_0(0.45000011896582887)
    connect axon_0(0), soma_0(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_14(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.03041, -7.83762, 0.0, 3.24034 ) }
    soma_0 { pt3dadd( -0.932248, -7.06937, 0.0, 5.80119 ) }
    soma_0 { pt3dadd( -0.83409, -6.30111, 0.0, 8.91479 ) }
    soma_0 { pt3dadd( -0.735933, -5.53286, 0.0, 10.9728 ) }
    soma_0 { pt3dadd( -0.637775, -4.76461, 0.0, 11.8159 ) }
    soma_0 { pt3dadd( -0.539618, -3.99636, 0.0, 12.5217 ) }
    soma_0 { pt3dadd( -0.44146, -3.2281, 0.0, 12.9048 ) }
    soma_0 { pt3dadd( -0.343302, -2.45985, 0.0, 13.2488 ) }
    soma_0 { pt3dadd( -0.245145, -1.6916, 0.0, 13.4777 ) }
    soma_0 { pt3dadd( -0.146987, -0.923346, 0.0, 13.4207 ) }
    soma_0 { pt3dadd( -0.0488296, -0.155094, 0.0, 13.3708 ) }
    soma_0 { pt3dadd( 0.049328, 0.613158, 0.0, 13.1194 ) }
    soma_0 { pt3dadd( 0.147486, 1.38141, 0.0, 12.8066 ) }
    soma_0 { pt3dadd( 0.245643, 2.14966, 0.0, 12.4454 ) }
    soma_0 { pt3dadd( 0.343801, 2.91792, 0.0, 11.6947 ) }
    soma_0 { pt3dadd( 0.441958, 3.68617, 0.0, 10.8939 ) }
    soma_0 { pt3dadd( 0.540116, 4.45442, 0.0, 9.93649 ) }
    soma_0 { pt3dadd( 0.638274, 5.22267, 0.0, 8.97705 ) }
    soma_0 { pt3dadd( 0.736431, 5.99093, 0.0, 7.24774 ) }
    soma_0 { pt3dadd( 0.834589, 6.75918, 0.0, 4.64373 ) }
    soma_0 { pt3dadd( 0.932746, 7.52743, 0.0, 2.74592 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 21/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 3.90316, 0.185066, -9.46, 1.38 ) }
    dend_25 { pt3dadd( 4.10923, 0.0866141, -9.49366, 1.38 ) }
    dend_25 { pt3dadd( 5.81731, -0.613254, -9.77909, 1.38 ) }
    dend_25 { pt3dadd( 7.54429, -1.19859, -10.0671, 1.38 ) }
    dend_25 { pt3dadd( 9.1176, -1.58062, -10.4003, 1.15 ) }
    dend_25 { pt3dadd( 10.6633, -1.77767, -10.8366, 1.15 ) }
    dend_25 { pt3dadd( 12.4843, -1.79594, -11.4744, 1.15 ) }
    dend_25 { pt3dadd( 13.3741, -1.39477, -11.9904, 0.92 ) }
    dend_25 { pt3dadd( 13.6704, -0.715975, -12.4815, 0.92 ) }
    dend_25 { pt3dadd( 13.9766, 0.896397, -13.6374, 1.38 ) }
    dend_25 { pt3dadd( 14.1515, 2.69644, -14.9013, 1.15 ) }
    dend_25 { pt3dadd( 14.1652, 3.52965, -15.4671, 1.15 ) }
    dend_25 { pt3dadd( 14.0454, 5.76968, -16.982, 0.92 ) }
    dend_25 { pt3dadd( 13.921, 7.1071, -17.9311, 1.38 ) }
    dend_25 { pt3dadd( 13.7099, 8.93571, -19.2808, 1.61 ) }
    dend_25 { pt3dadd( 13.6105, 9.70166, -19.849, 1.38 ) }
    dend_25 { pt3dadd( 13.5597, 10.2913, -20.3239, 1.38 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 38/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 7.42318, -3.73493, -2.18, 0.92 ) }
    dend_24 { pt3dadd( 7.72239, -5.19764, -2.13472, 0.92 ) }
    dend_24 { pt3dadd( 8.1658, -6.78612, -1.96848, 0.92 ) }
    dend_24 { pt3dadd( 8.66582, -8.01791, -1.80058, 0.92 ) }
    dend_24 { pt3dadd( 9.40361, -9.4513, -1.65152, 0.92 ) }
    dend_24 { pt3dadd( 10.5817, -11.2813, -1.65838, 0.69 ) }
    dend_24 { pt3dadd( 11.2072, -12.1651, -1.76695, 0.69 ) }
    dend_24 { pt3dadd( 12.3384, -13.5778, -2.08093, 0.92 ) }
    dend_24 { pt3dadd( 13.4589, -14.7387, -2.32833, 1.15 ) }
    dend_24 { pt3dadd( 14.4539, -15.6398, -2.52629, 0.92 ) }
    dend_24 { pt3dadd( 16.1805, -17.1143, -2.74927, 0.92 ) }
    dend_24 { pt3dadd( 17.5208, -18.2568, -2.82747, 0.92 ) }
    dend_24 { pt3dadd( 18.7258, -19.4239, -2.88687, 0.92 ) }
    dend_24 { pt3dadd( 20.238, -21.1008, -2.83388, 1.15 ) }
    dend_24 { pt3dadd( 20.6889, -21.669, -2.72104, 1.15 ) }
    dend_24 { pt3dadd( 21.5763, -22.8253, -2.34699, 0.92 ) }
    dend_24 { pt3dadd( 22.3771, -23.8914, -1.92903, 1.15 ) }
    dend_24 { pt3dadd( 23.4286, -25.2795, -1.34082, 0.92 ) }
    dend_24 { pt3dadd( 24.5215, -26.841, -0.812418, 0.92 ) }
    dend_24 { pt3dadd( 25.2299, -27.9996, -0.489699, 1.38 ) }
    dend_24 { pt3dadd( 25.6845, -28.8045, -0.255563, 1.38 ) }
    dend_24 { pt3dadd( 26.5495, -30.3482, 0.225482, 0.92 ) }
    dend_24 { pt3dadd( 27.5087, -31.9812, 0.779117, 0.92 ) }
    dend_24 { pt3dadd( 28.3476, -33.3154, 1.11163, 0.92 ) }
    dend_24 { pt3dadd( 29.4783, -34.9448, 1.11687, 0.92 ) }
    dend_24 { pt3dadd( 30.0153, -35.6646, 0.915865, 0.92 ) }
    dend_24 { pt3dadd( 30.9644, -36.9717, 0.15349, 0.92 ) }
    dend_24 { pt3dadd( 31.7288, -38.1109, -0.853587, 1.15 ) }
    dend_24 { pt3dadd( 32.6723, -39.7685, -2.77617, 1.15 ) }
    dend_24 { pt3dadd( 33.5287, -41.6438, -5.30645, 1.15 ) }
    dend_24 { pt3dadd( 33.8129, -42.4658, -6.47095, 1.15 ) }
    dend_24 { pt3dadd( 34.079, -43.4802, -7.82579, 1.15 ) }
    dend_24 { pt3dadd( 34.2951, -44.3885, -9.00245, 0.69 ) }
    dend_24 { pt3dadd( 34.59, -45.6289, -10.6067, 0.69 ) }
    dend_24 { pt3dadd( 34.8035, -46.4777, -11.6977, 0.69 ) }
    dend_24 { pt3dadd( 35.0677, -47.4255, -13.0131, 0.69 ) }
    dend_24 { pt3dadd( 35.3849, -48.487, -14.64, 1.15 ) }
    dend_24 { pt3dadd( 35.9239, -50.2297, -17.6298, 0.92 ) }
    dend_24 { pt3dadd( 36.2019, -51.2763, -19.5678, 0.92 ) }
    dend_24 { pt3dadd( 36.3373, -52.1975, -21.4471, 0.92 ) }
    dend_24 { pt3dadd( 36.2468, -53.1658, -23.7103, 0.92 ) }
    dend_24 { pt3dadd( 36.0011, -53.7915, -25.3464, 0.46 ) }
    dend_24 { pt3dadd( 35.7385, -54.1681, -26.3612, 0.46 ) }
    dend_24 { pt3dadd( 35.4163, -54.514, -27.2357, 0.92 ) }
    dend_24 { pt3dadd( 34.4894, -55.4686, -29.5668, 0.46 ) }
    dend_24 { pt3dadd( 33.5677, -56.4906, -32.0507, 0.46 ) }
    dend_24 { pt3dadd( 32.8243, -57.3771, -34.3084, 0.46 ) }
    dend_24 { pt3dadd( 32.2676, -58.0212, -36.0295, 0.92 ) }
    dend_24 { pt3dadd( 31.522, -58.9262, -38.45, 0.69 ) }
    dend_24 { pt3dadd( 30.8747, -59.8325, -40.828, 0.69 ) }
    dend_24 { pt3dadd( 30.4343, -60.6386, -42.7687, 0.92 ) }
    dend_24 { pt3dadd( 29.9121, -61.8015, -45.5622, 0.92 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 90/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 7.37319, -2.28493, -2.46, 2.06 ) }
    dend_15 { pt3dadd( 7.54278, -2.20041, -2.62308, 2.06 ) }
    dend_15 { pt3dadd( 8.75907, -1.64202, -3.69122, 1.83 ) }
    dend_15 { pt3dadd( 10.2044, -0.978435, -4.96059, 1.83 ) }
    dend_15 { pt3dadd( 11.8765, -0.210799, -6.42898, 1.38 ) }
    dend_15 { pt3dadd( 13.5527, 0.55877, -7.90108, 1.38 ) }
    dend_15 { pt3dadd( 14.2929, 0.898587, -8.55111, 1.61 ) }
    dend_15 { pt3dadd( 15.3736, 1.38603, -9.45304, 2.29 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 98/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -7.10685, -3.88493, -6.28, 3.21 ) }
    dend_0 { pt3dadd( -7.10685, -3.88493, -6.28, 3.21 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( -9.07143, -4.62487, -6.96429, 2.52 ) }
    dend_0 { pt3dadd( -10.8983, -5.31293, -7.60062, 2.52 ) }
    dend_0 { pt3dadd( -13.7182, -6.37502, -8.58284, 2.52 ) }
    dend_0 { pt3dadd( -16.0037, -7.23581, -9.3789, 2.98 ) }
    dend_0 { pt3dadd( -18.4047, -8.14013, -10.2152, 2.98 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 5/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.932746, 7.52743, 0.0, 0.856831 ) }
    axon_0 { pt3dadd( 2.83381, 22.4065, 0.0, 0.856831 ) }
    axon_0 { pt3dadd( 4.73487, 37.2855, 0.0, 0.856831 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 8/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 13.5597, 10.2913, -20.3239, 0.92 ) }
    dend_27 { pt3dadd( 13.2912, 10.1774, -21.1662, 0.92 ) }
    dend_27 { pt3dadd( 12.4759, 10.0651, -23.7645, 0.92 ) }
    dend_27 { pt3dadd( 11.9078, 10.0853, -25.7308, 0.92 ) }
    dend_27 { pt3dadd( 11.4042, 10.1719, -27.6867, 1.38 ) }
    dend_27 { pt3dadd( 10.6443, 10.4483, -30.8324, 1.38 ) }
    dend_27 { pt3dadd( 10.4823, 10.5321, -31.6545, 1.38 ) }
    dend_27 { pt3dadd( 10.1934, 10.8737, -34.4117, 1.38 ) }
    dend_27 { pt3dadd( 10.1854, 11.0191, -35.2881, 1.15 ) }
    dend_27 { pt3dadd( 10.3321, 11.2654, -37.0651, 1.15 ) }
    dend_27 { pt3dadd( 10.6964, 11.4046, -39.1345, 1.15 ) }
    dend_27 { pt3dadd( 11.2538, 11.341, -41.169, 0.92 ) }
    dend_27 { pt3dadd( 11.8289, 11.2073, -42.9223, 0.92 ) }
    dend_27 { pt3dadd( 12.1538, 11.1062, -43.8127, 0.92 ) }
    dend_27 { pt3dadd( 12.7771, 10.9596, -45.767, 0.92 ) }
    dend_27 { pt3dadd( 13.0005, 10.9573, -46.6428, 0.92 ) }
    dend_27 { pt3dadd( 13.197, 11.1981, -48.6683, 0.92 ) }
    dend_27 { pt3dadd( 13.1437, 11.361, -49.2226, 1.38 ) }
    dend_27 { pt3dadd( 12.9052, 11.9404, -50.6578, 1.38 ) }
    dend_27 { pt3dadd( 12.5901, 12.6022, -52.133, 0.92 ) }
    dend_27 { pt3dadd( 12.2033, 13.3307, -53.7623, 0.92 ) }
    dend_27 { pt3dadd( 11.756, 14.0991, -55.5864, 1.15 ) }
    dend_27 { pt3dadd( 11.2308, 14.9492, -57.6155, 0.92 ) }
    dend_27 { pt3dadd( 10.7442, 15.7053, -59.3301, 0.92 ) }
    dend_27 { pt3dadd( 10.1463, 16.6274, -61.3207, 1.15 ) }
    dend_27 { pt3dadd( 9.52099, 17.802, -63.5824, 0.92 ) }
    dend_27 { pt3dadd( 9.2234, 18.6271, -65.0494, 0.92 ) }
    dend_27 { pt3dadd( 9.05801, 19.4369, -66.4902, 0.69 ) }
    dend_27 { pt3dadd( 8.95063, 20.4468, -68.2191, 0.69 ) }
    dend_27 { pt3dadd( 8.99161, 20.7317, -68.7251, 0.92 ) }
    dend_27 { pt3dadd( 9.52013, 21.6875, -70.5014, 0.92 ) }
    dend_27 { pt3dadd( 10.6465, 22.7606, -72.9153, 0.92 ) }
    dend_27 { pt3dadd( 11.4693, 23.2902, -74.4814, 0.92 ) }
    dend_27 { pt3dadd( 12.0742, 23.6033, -75.7205, 0.69 ) }
    dend_27 { pt3dadd( 12.8002, 23.9675, -77.3815, 0.69 ) }
    dend_27 { pt3dadd( 13.1934, 24.1966, -78.4406, 1.15 ) }
    dend_27 { pt3dadd( 13.6455, 24.608, -80.2942, 1.15 ) }
    dend_27 { pt3dadd( 13.8231, 25.1972, -82.4262, 0.92 ) }
    dend_27 { pt3dadd( 13.6575, 25.9663, -84.817, 0.92 ) }
    dend_27 { pt3dadd( 13.4004, 26.4774, -86.2623, 0.92 ) }
    dend_27 { pt3dadd( 13.2167, 26.7694, -86.9914, 0.69 ) }
    dend_27 { pt3dadd( 12.6102, 27.6856, -89.0057, 0.69 ) }
    dend_27 { pt3dadd( 12.228, 28.2466, -90.1488, 0.92 ) }
    dend_27 { pt3dadd( 11.7398, 28.9569, -91.5132, 1.15 ) }
    dend_27 { pt3dadd( 11.3331, 29.6068, -92.654, 0.69 ) }
    dend_27 { pt3dadd( 10.9459, 30.1702, -93.646, 0.69 ) }
    dend_27 { pt3dadd( 10.5905, 30.6708, -94.5004, 0.92 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 55/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 13.5597, 10.2913, -20.3239, 0.46 ) }
    dend_26 { pt3dadd( 15.1476, 11.3381, -20.2625, 0.46 ) }
    dend_26 { pt3dadd( 16.5163, 12.1722, -20.0774, 0.46 ) }
    dend_26 { pt3dadd( 17.7769, 12.9523, -19.7447, 0.69 ) }
    dend_26 { pt3dadd( 19.1249, 13.8674, -19.232, 0.46 ) }
    dend_26 { pt3dadd( 19.8057, 14.3752, -18.8717, 0.46 ) }
    dend_26 { pt3dadd( 21.5644, 15.7906, -17.7477, 0.69 ) }
    dend_26 { pt3dadd( 23.1531, 17.0916, -16.4829, 0.46 ) }
    dend_26 { pt3dadd( 24.5493, 18.3265, -15.241, 0.46 ) }
    dend_26 { pt3dadd( 25.6584, 19.3958, -14.0139, 0.46 ) }
    dend_26 { pt3dadd( 26.5815, 20.3561, -12.7481, 0.46 ) }
    dend_26 { pt3dadd( 27.0801, 20.9885, -11.8599, 0.46 ) }
    dend_26 { pt3dadd( 27.4647, 21.6837, -10.7186, 0.46 ) }
    // Section: dend_23, id: dend_23, parent: dend_15 (entry count 68/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 15.3736, 1.38603, -9.45304, 1.15 ) }
    dend_23 { pt3dadd( 13.6897, 4.29917, -11.0549, 1.15 ) }
    dend_23 { pt3dadd( 12.6161, 6.56095, -12.2803, 1.15 ) }
    dend_23 { pt3dadd( 11.7081, 9.07215, -13.8009, 0.92 ) }
    dend_23 { pt3dadd( 11.4196, 10.2473, -14.495, 0.92 ) }
    dend_23 { pt3dadd( 11.2678, 11.0347, -14.9754, 0.92 ) }
    dend_23 { pt3dadd( 11.1617, 11.79, -15.4316, 1.38 ) }
    dend_23 { pt3dadd( 11.0674, 13.5383, -16.2715, 1.38 ) }
    dend_23 { pt3dadd( 11.0523, 15.0433, -17.0271, 1.38 ) }
    dend_23 { pt3dadd( 11.0037, 16.3484, -17.7625, 1.38 ) }
    dend_23 { pt3dadd( 10.8074, 17.9403, -18.7266, 1.15 ) }
    dend_23 { pt3dadd( 10.596, 18.7299, -19.2904, 1.15 ) }
    dend_23 { pt3dadd( 9.90135, 20.1399, -20.447, 1.15 ) }
    dend_23 { pt3dadd( 9.32031, 20.9588, -21.1587, 1.15 ) }
    dend_23 { pt3dadd( 8.50285, 21.9612, -22.1175, 0.92 ) }
    dend_23 { pt3dadd( 7.33986, 23.5222, -23.6948, 0.92 ) }
    dend_23 { pt3dadd( 6.6229, 24.7054, -24.8267, 0.92 ) }
    dend_23 { pt3dadd( 6.2104, 25.6103, -25.684, 0.92 ) }
    dend_23 { pt3dadd( 5.9027, 26.6462, -26.6744, 1.15 ) }
    dend_23 { pt3dadd( 5.55174, 28.2241, -27.977, 0.92 ) }
    dend_23 { pt3dadd( 5.29222, 30.1532, -29.3195, 0.92 ) }
    dend_23 { pt3dadd( 5.24796, 31.0111, -29.8178, 1.15 ) }
    dend_23 { pt3dadd( 5.28488, 33.0133, -30.8906, 1.15 ) }
    dend_23 { pt3dadd( 5.35851, 34.4003, -31.6439, 1.15 ) }
    dend_23 { pt3dadd( 5.50183, 36.2734, -32.6747, 0.92 ) }
    dend_23 { pt3dadd( 5.63389, 37.32, -33.2011, 0.92 ) }
    dend_23 { pt3dadd( 5.76826, 38.3841, -33.763, 0.92 ) }
    dend_23 { pt3dadd( 6.06558, 39.5766, -34.375, 0.92 ) }
    dend_23 { pt3dadd( 6.95052, 41.2483, -34.9738, 0.92 ) }
    dend_23 { pt3dadd( 7.80231, 42.317, -35.2908, 1.15 ) }
    dend_23 { pt3dadd( 8.96226, 43.3437, -35.6499, 0.92 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 99/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 15.3736, 1.38603, -9.45304, 1.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_16 { pt3dadd( 16.3648, 0.836884, -9.60089, 1.83 ) }
    dend_16 { pt3dadd( 18.4569, -0.505279, -10.2851, 1.38 ) }
    dend_16 { pt3dadd( 19.7061, -1.30697, -10.7685, 1.38 ) }
    dend_16 { pt3dadd( 20.5856, -1.87137, -11.1088, 1.61 ) }
    dend_16 { pt3dadd( 22.8641, -3.33361, -11.9904, 1.38 ) }
    dend_16 { pt3dadd( 24.1059, -4.13058, -12.4709, 1.38 ) }
    dend_16 { pt3dadd( 24.7389, -4.62233, -12.8615, 1.38 ) }
    dend_16 { pt3dadd( 25.3786, -5.25654, -13.5647, 1.61 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 8/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -18.4047, -8.14013, -10.2152, 2.52 ) }
    dend_6 { pt3dadd( -19.0042, -8.67719, -9.3721, 2.52 ) }
    dend_6 { pt3dadd( -20.058, -9.62136, -7.88983, 2.52 ) }
    dend_6 { pt3dadd( -21.0278, -10.4903, -6.52574, 2.52 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 12/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -18.4047, -8.14013, -10.2152, 1.83 ) }
    dend_1 { pt3dadd( -19.9754, -8.26591, -8.97609, 1.83 ) }
    dend_1 { pt3dadd( -21.3402, -8.31471, -7.75937, 1.61 ) }
    dend_1 { pt3dadd( -22.7262, -8.33638, -6.50435, 1.15 ) }
    dend_1 { pt3dadd( -23.3224, -8.34569, -5.96447, 1.15 ) }
    dend_1 { pt3dadd( -24.5185, -8.36438, -4.88137, 1.38 ) }
    dend_1 { pt3dadd( -26.2883, -8.39203, -3.27877, 1.61 ) }
    dend_1 { pt3dadd( -27.7284, -8.38707, -2.06286, 1.15 ) }
    dend_1 { pt3dadd( -28.1986, -8.36127, -1.65951, 1.15 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 21/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.73487, 37.2855, 0.0, 0.406519 ) }
    axon_1 { pt3dadd( 6.63593, 52.1646, 0.0, 0.406519 ) }
    axon_1 { pt3dadd( 8.53699, 67.0436, 0.0, 0.406519 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 24/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 25.3786, -5.25654, -13.5647, 1.38 ) }
    dend_18 { pt3dadd( 26.3704, -5.79448, -11.8451, 1.38 ) }
    dend_18 { pt3dadd( 27.313, -6.47791, -10.5212, 1.38 ) }
    dend_18 { pt3dadd( 28.616, -7.58876, -9.05835, 1.38 ) }
    dend_18 { pt3dadd( 29.9896, -8.71712, -7.70061, 1.38 ) }
    dend_18 { pt3dadd( 31.2614, -9.66959, -6.52399, 1.15 ) }
    dend_18 { pt3dadd( 33.0428, -10.8027, -4.96972, 1.15 ) }
    dend_18 { pt3dadd( 34.1191, -11.6508, -4.20568, 0.92 ) }
    dend_18 { pt3dadd( 34.7608, -12.2584, -3.95736, 0.92 ) }
    dend_18 { pt3dadd( 35.7607, -13.3352, -4.0273, 0.92 ) }
    dend_18 { pt3dadd( 36.5651, -14.0868, -4.37852, 0.92 ) }
    dend_18 { pt3dadd( 37.068, -13.2375, -3.53493, 0.92 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 36/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 25.3786, -5.25654, -13.5647, 0.92 ) }
    dend_17 { pt3dadd( 26.3387, -4.11432, -14.0812, 0.92 ) }
    dend_17 { pt3dadd( 26.9872, -3.22345, -14.4737, 0.92 ) }
    dend_17 { pt3dadd( 27.7531, -2.08249, -15.0722, 0.92 ) }
    dend_17 { pt3dadd( 28.2447, -1.31049, -15.6255, 0.92 ) }
    dend_17 { pt3dadd( 28.9832, -0.152576, -16.7197, 0.92 ) }
    dend_17 { pt3dadd( 29.5214, 0.620345, -17.7916, 0.92 ) }
    dend_17 { pt3dadd( 29.7726, 0.890696, -18.4243, 0.92 ) }
    dend_17 { pt3dadd( 30.2435, 1.09642, -19.7074, 0.92 ) }
    dend_17 { pt3dadd( 30.9076, 1.15893, -21.3831, 0.92 ) }
    dend_17 { pt3dadd( 31.3756, 1.1099, -22.3946, 0.92 ) }
    dend_17 { pt3dadd( 32.3684, 0.835767, -24.3038, 0.92 ) }
    dend_17 { pt3dadd( 32.954, 0.61597, -25.361, 1.15 ) }
    dend_17 { pt3dadd( 33.9721, 0.194094, -27.1061, 1.15 ) }
    dend_17 { pt3dadd( 35.0555, -0.246521, -28.7822, 0.92 ) }
    dend_17 { pt3dadd( 35.9364, -0.635807, -30.1037, 0.92 ) }
    dend_17 { pt3dadd( 36.9125, -1.18081, -31.6243, 0.92 ) }
    dend_17 { pt3dadd( 37.8058, -1.86952, -33.0566, 0.92 ) }
    dend_17 { pt3dadd( 38.5308, -2.5686, -34.1891, 0.92 ) }
    dend_17 { pt3dadd( 38.9845, -3.04748, -34.8834, 1.15 ) }
    dend_17 { pt3dadd( 39.9616, -4.03771, -36.3365, 1.15 ) }
    dend_17 { pt3dadd( 41.3931, -5.15827, -38.2159, 0.69 ) }
    dend_17 { pt3dadd( 42.3169, -5.58789, -39.3779, 0.69 ) }
    dend_17 { pt3dadd( 43.745, -5.81419, -41.2008, 0.69 ) }
    dend_17 { pt3dadd( 45.5077, -5.59461, -43.6437, 0.69 ) }
    dend_17 { pt3dadd( 46.7134, -5.12857, -45.4621, 0.69 ) }
    dend_17 { pt3dadd( 47.6557, -4.53882, -46.9584, 0.46 ) }
    dend_17 { pt3dadd( 48.9748, -3.40813, -49.155, 0.46 ) }
    dend_17 { pt3dadd( 49.6857, -2.70416, -50.4282, 0.69 ) }
    dend_17 { pt3dadd( 50.8278, -1.44247, -52.5826, 0.92 ) }
    dend_17 { pt3dadd( 51.6331, -0.637869, -53.97, 0.69 ) }
    dend_17 { pt3dadd( 52.2976, -0.0957618, -55.0216, 0.69 ) }
    dend_17 { pt3dadd( 52.9528, 0.299378, -55.909, 0.92 ) }
    dend_17 { pt3dadd( 54.4625, 0.818896, -57.5507, 0.92 ) }
    dend_17 { pt3dadd( 55.4464, 0.968341, -58.4694, 0.92 ) }
    dend_17 { pt3dadd( 56.6837, 0.92739, -59.5528, 0.92 ) }
    dend_17 { pt3dadd( 58.2858, 0.644185, -60.9767, 0.69 ) }
    dend_17 { pt3dadd( 59.4679, 0.297383, -62.0146, 0.92 ) }
    dend_17 { pt3dadd( 61.5842, -0.485452, -63.9359, 0.69 ) }
    dend_17 { pt3dadd( 63.3546, -1.24613, -65.5876, 0.69 ) }
    dend_17 { pt3dadd( 64.9766, -2.09587, -67.2918, 0.69 ) }
    dend_17 { pt3dadd( 65.6381, -2.51923, -68.1265, 0.69 ) }
    dend_17 { pt3dadd( 66.6943, -3.3172, -69.8053, 1.15 ) }
    dend_17 { pt3dadd( 68.0178, -4.45226, -72.6419, 0.69 ) }
    dend_17 { pt3dadd( 69.0366, -5.37319, -75.1087, 0.69 ) }
    dend_17 { pt3dadd( 69.9375, -6.28572, -77.6698, 0.69 ) }
    dend_17 { pt3dadd( 70.645, -7.03524, -79.9639, 0.69 ) }
    dend_17 { pt3dadd( 71.3584, -7.90432, -82.8469, 0.69 ) }
    dend_17 { pt3dadd( 71.7348, -8.68948, -85.7793, 0.69 ) }
    // Section: dend_14, id: dend_14, parent: dend_6 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -21.0278, -10.4903, -6.52574, 1.38 ) }
    dend_14 { pt3dadd( -20.0094, -12.6875, -7.72506, 1.38 ) }
    dend_14 { pt3dadd( -19.8159, -13.1997, -8.01561, 1.38 ) }
    dend_14 { pt3dadd( -19.6111, -14.1069, -8.47823, 0.92 ) }
    dend_14 { pt3dadd( -19.4768, -15.5047, -8.97087, 1.15 ) }
    dend_14 { pt3dadd( -19.4649, -17.3354, -9.28249, 1.15 ) }
    dend_14 { pt3dadd( -19.5265, -18.7072, -9.33012, 1.15 ) }
    dend_14 { pt3dadd( -19.6377, -19.8446, -9.29947, 1.15 ) }
    dend_14 { pt3dadd( -19.8526, -21.6906, -9.00393, 1.15 ) }
    dend_14 { pt3dadd( -20.1254, -23.8188, -8.40945, 0.92 ) }
    dend_14 { pt3dadd( -20.3568, -25.7807, -7.66871, 0.92 ) }
    dend_14 { pt3dadd( -20.5305, -27.2512, -6.99533, 0.92 ) }
    dend_14 { pt3dadd( -20.6412, -28.3878, -6.43735, 0.92 ) }
    dend_14 { pt3dadd( -20.7113, -29.9153, -5.67207, 1.15 ) }
    dend_14 { pt3dadd( -20.6875, -31.5875, -4.85599, 1.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_14 { pt3dadd( -20.6438, -32.5134, -4.457, 1.15 ) }
    dend_14 { pt3dadd( -20.538, -34.2356, -3.81612, 0.92 ) }
    dend_14 { pt3dadd( -20.4964, -35.09, -3.55483, 0.92 ) }
    dend_14 { pt3dadd( -20.4337, -36.2971, -3.26645, 0.92 ) }
    dend_14 { pt3dadd( -20.3077, -38.711, -2.81824, 0.92 ) }
    dend_14 { pt3dadd( -20.2201, -40.849, -2.47048, 0.92 ) }
    dend_14 { pt3dadd( -20.2585, -42.9844, -2.16574, 1.15 ) }
    dend_14 { pt3dadd( -20.3833, -44.6191, -1.9752, 0.92 ) }
    dend_14 { pt3dadd( -20.7169, -46.7957, -1.76411, 0.92 ) }
    dend_14 { pt3dadd( -20.8497, -47.3387, -1.71196, 0.92 ) }
    dend_14 { pt3dadd( -21.3389, -48.8355, -1.5601, 0.92 ) }
    dend_14 { pt3dadd( -22.1648, -50.991, -1.28798, 1.15 ) }
    dend_14 { pt3dadd( -22.6587, -52.2248, -1.09601, 0.92 ) }
    dend_14 { pt3dadd( -23.3744, -54.0917, -0.792879, 0.92 ) }
    dend_14 { pt3dadd( -23.8139, -55.409, -0.652267, 0.92 ) }
    dend_14 { pt3dadd( -24.0594, -56.5536, -0.601685, 0.92 ) }
    dend_14 { pt3dadd( -24.1836, -57.7861, -0.65019, 1.15 ) }
    dend_14 { pt3dadd( -24.2199, -59.5426, -0.793601, 0.92 ) }
    dend_14 { pt3dadd( -24.2076, -60.7591, -0.974917, 0.92 ) }
    dend_14 { pt3dadd( -24.1808, -62.7497, -1.42861, 0.92 ) }
    dend_14 { pt3dadd( -24.1609, -64.4649, -1.87696, 0.92 ) }
    dend_14 { pt3dadd( -24.1866, -66.5712, -2.35915, 0.69 ) }
    dend_14 { pt3dadd( -24.2601, -68.2717, -2.63458, 0.92 ) }
    dend_14 { pt3dadd( -24.3985, -70.2092, -2.73665, 0.46 ) }
    dend_14 { pt3dadd( -24.5184, -71.735, -2.64725, 0.46 ) }
    dend_14 { pt3dadd( -24.6609, -73.309, -2.37068, 0.46 ) }
    dend_14 { pt3dadd( -24.8346, -75.6629, -1.82762, 0.92 ) }
    dend_14 { pt3dadd( -24.9572, -77.4336, -1.38616, 0.92 ) }
    dend_14 { pt3dadd( -25.0898, -79.3195, -0.929971, 0.92 ) }
    dend_14 { pt3dadd( -25.1693, -81.0625, -0.512977, 0.46 ) }
    dend_14 { pt3dadd( -25.1683, -82.2784, -0.271439, 0.92 ) }
    dend_14 { pt3dadd( -25.1064, -84.1674, -0.046046, 0.69 ) }
    dend_14 { pt3dadd( -25.0294, -86.98, 0.0918299, 0.92 ) }
    dend_14 { pt3dadd( -25.058, -89.3358, 0.0989371, 0.92 ) }
    dend_14 { pt3dadd( -25.1789, -91.6294, -0.0114865, 0.23 ) }
    dend_14 { pt3dadd( -25.32, -93.0906, -0.132484, 0.69 ) }
    dend_14 { pt3dadd( -25.5656, -95.0854, -0.283826, 0.69 ) }
    dend_14 { pt3dadd( -25.753, -96.4896, -0.332613, 0.69 ) }
    dend_14 { pt3dadd( -26.0079, -98.5477, -0.380032, 0.69 ) }
    dend_14 { pt3dadd( -26.2138, -100.384, -0.411937, 0.46 ) }
    dend_14 { pt3dadd( -26.4677, -102.94, -0.417463, 0.69 ) }
    dend_14 { pt3dadd( -26.5469, -104.837, -0.46143, 0.46 ) }
    dend_14 { pt3dadd( -26.4667, -106.674, -0.586736, 0.69 ) }
    dend_14 { pt3dadd( -26.2597, -108.099, -0.80381, 0.69 ) }
    dend_14 { pt3dadd( -25.7095, -110.482, -1.38561, 0.46 ) }
    dend_14 { pt3dadd( -25.3845, -111.549, -1.73743, 1.15 ) }
    dend_14 { pt3dadd( -24.4309, -114.131, -2.88571, 0.23 ) }
    dend_14 { pt3dadd( -23.5355, -116.29, -4.13775, 0.23 ) }
    dend_14 { pt3dadd( -22.5707, -118.479, -5.5779, 0.23 ) }
    dend_14 { pt3dadd( -21.6879, -120.36, -6.94437, 0.92 ) }
    dend_14 { pt3dadd( -20.7532, -122.232, -8.45925, 0.46 ) }
    dend_14 { pt3dadd( -19.7651, -124.086, -10.0149, 0.46 ) }
    dend_14 { pt3dadd( -19.0324, -125.359, -11.0663, 0.46 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 53/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -21.0278, -10.4903, -6.52574, 2.52 ) }
    dend_7 { pt3dadd( -24.2178, -10.5403, -6.52574, 2.52 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 55/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -28.1986, -8.36127, -1.65951, 0.69 ) }
    dend_3 { pt3dadd( -28.7959, -7.87681, -4.17468, 0.69 ) }
    dend_3 { pt3dadd( -29.1705, -7.53708, -5.52548, 0.69 ) }
    dend_3 { pt3dadd( -29.9586, -6.87672, -7.86471, 0.69 ) }
    dend_3 { pt3dadd( -30.86, -6.10522, -10.172, 0.69 ) }
    dend_3 { pt3dadd( -31.0626, -5.92802, -10.6542, 0.92 ) }
    dend_3 { pt3dadd( -31.549, -5.45159, -11.7867, 0.92 ) }
    dend_3 { pt3dadd( -32.3056, -4.48523, -13.4761, 0.92 ) }
    dend_3 { pt3dadd( -32.9523, -3.63336, -14.9148, 0.92 ) }
    dend_3 { pt3dadd( -33.4096, -3.11069, -15.7708, 0.69 ) }
    dend_3 { pt3dadd( -33.7968, -2.70978, -16.416, 0.69 ) }
    dend_3 { pt3dadd( -34.2808, -2.14677, -17.3225, 0.69 ) }
    dend_3 { pt3dadd( -34.7835, -1.47342, -18.3373, 0.69 ) }
    dend_3 { pt3dadd( -35.5069, -0.258846, -19.8867, 0.69 ) }
    dend_3 { pt3dadd( -35.8444, 0.491229, -20.772, 0.69 ) }
    dend_3 { pt3dadd( -36.1693, 1.36022, -21.756, 0.69 ) }
    dend_3 { pt3dadd( -36.4027, 1.98676, -22.3954, 0.69 ) }
    dend_3 { pt3dadd( -36.8847, 3.22491, -23.5008, 0.69 ) }
    dend_3 { pt3dadd( -37.2142, 4.27149, -24.1806, 0.69 ) }
    dend_3 { pt3dadd( -37.4653, 5.10711, -24.5762, 0.69 ) }
    dend_3 { pt3dadd( -37.8984, 6.132, -24.98, 0.69 ) }
    dend_3 { pt3dadd( -38.5014, 7.08352, -25.2962, 0.69 ) }
    dend_3 { pt3dadd( -39.1713, 7.93031, -25.4989, 0.46 ) }
    dend_3 { pt3dadd( -39.9637, 8.78454, -25.6232, 0.46 ) }
    dend_3 { pt3dadd( -40.6221, 9.42793, -25.6848, 0.23 ) }
    dend_3 { pt3dadd( -42.0344, 10.9311, -25.7807, 0.46 ) }
    dend_3 { pt3dadd( -43.0488, 12.0152, -25.8215, 0.46 ) }
    dend_3 { pt3dadd( -43.6249, 12.656, -25.847, 0.46 ) }
    dend_3 { pt3dadd( -44.8339, 13.9931, -25.9029, 0.46 ) }
    dend_3 { pt3dadd( -45.6687, 14.926, -25.942, 0.46 ) }
    dend_3 { pt3dadd( -46.9842, 16.7519, -26.0082, 0.46 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 86/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -28.1986, -8.36127, -1.65951, 0.92 ) }
    dend_2 { pt3dadd( -29.558, -8.49918, -0.896006, 0.92 ) }
    dend_2 { pt3dadd( -30.7074, -8.46177, -0.201702, 0.92 ) }
    dend_2 { pt3dadd( -32.5908, -8.26095, 0.936959, 0.92 ) }
    dend_2 { pt3dadd( -33.7307, -8.10919, 1.64543, 0.92 ) }
    dend_2 { pt3dadd( -35.3077, -7.90104, 2.62793, 0.92 ) }
    dend_2 { pt3dadd( -37.4794, -7.61437, 3.98096, 0.92 ) }
    dend_2 { pt3dadd( -38.4966, -7.42536, 4.64689, 0.92 ) }
    dend_2 { pt3dadd( -39.1026, -7.25056, 5.05823, 0.69 ) }
    dend_2 { pt3dadd( -40.3677, -6.75386, 5.93913, 0.69 ) }
    dend_2 { pt3dadd( -41.965, -6.09738, 7.0764, 0.69 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 97/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 37.068, -13.2375, -3.53493, 0.92 ) }
    dend_20 { pt3dadd( 38.5163, -13.9839, -2.65119, 0.92 ) }
    dend_20 { pt3dadd( 40.0761, -14.7878, -1.69944, 1.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_20 { pt3dadd( 41.8264, -15.6898, -0.631401, 0.92 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 1/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 37.068, -13.2375, -3.53493, 0.92 ) }
    dend_19 { pt3dadd( 38.2769, -11.9016, -5.4618, 0.92 ) }
    dend_19 { pt3dadd( 38.9763, -11.1721, -6.33176, 0.92 ) }
    dend_19 { pt3dadd( 39.8364, -10.3124, -7.1621, 0.92 ) }
    dend_19 { pt3dadd( 40.8873, -9.19988, -7.95036, 0.92 ) }
    dend_19 { pt3dadd( 42.1335, -7.7957, -8.62951, 0.92 ) }
    dend_19 { pt3dadd( 43.1938, -6.63194, -9.02686, 0.69 ) }
    dend_19 { pt3dadd( 44.464, -5.26601, -9.15408, 0.92 ) }
    dend_19 { pt3dadd( 45.3662, -4.35043, -9.19219, 0.92 ) }
    dend_19 { pt3dadd( 46.6323, -3.18459, -9.22456, 1.15 ) }
    dend_19 { pt3dadd( 48.2875, -1.87061, -9.34108, 0.92 ) }
    dend_19 { pt3dadd( 49.927, -0.6956, -9.63935, 0.69 ) }
    dend_19 { pt3dadd( 51.813, 0.512162, -10.2899, 0.92 ) }
    dend_19 { pt3dadd( 53.2414, 1.33852, -11.0277, 0.92 ) }
    dend_19 { pt3dadd( 54.0429, 1.75119, -11.5514, 0.92 ) }
    dend_19 { pt3dadd( 55.2307, 2.3406, -12.4428, 0.92 ) }
    dend_19 { pt3dadd( 56.5445, 3.042, -13.5313, 0.92 ) }
    dend_19 { pt3dadd( 57.6101, 3.74135, -14.5456, 0.92 ) }
    dend_19 { pt3dadd( 58.3289, 4.34678, -15.2648, 0.92 ) }
    dend_19 { pt3dadd( 59.0817, 5.12759, -15.9099, 0.92 ) }
    dend_19 { pt3dadd( 60.0839, 6.32699, -16.6138, 0.92 ) }
    dend_19 { pt3dadd( 60.7715, 7.14767, -16.9116, 1.15 ) }
    dend_19 { pt3dadd( 61.6126, 7.9976, -17.1548, 0.69 ) }
    dend_19 { pt3dadd( 62.4586, 8.80809, -17.3258, 0.69 ) }
    dend_19 { pt3dadd( 63.4857, 9.63014, -17.412, 0.69 ) }
    dend_19 { pt3dadd( 64.2962, 10.1973, -17.4404, 0.92 ) }
    dend_19 { pt3dadd( 66.0439, 11.357, -17.6229, 0.69 ) }
    dend_19 { pt3dadd( 68.0211, 12.7657, -17.9213, 0.69 ) }
    dend_19 { pt3dadd( 68.9136, 13.5032, -18.1017, 0.92 ) }
    dend_19 { pt3dadd( 69.9226, 14.444, -18.513, 0.92 ) }
    dend_19 { pt3dadd( 70.75, 15.3075, -19.098, 0.92 ) }
    dend_19 { pt3dadd( 71.844, 16.5208, -20.198, 0.92 ) }
    dend_19 { pt3dadd( 72.3268, 17.0733, -20.8339, 0.92 ) }
    dend_19 { pt3dadd( 73.0761, 17.8514, -21.8533, 0.92 ) }
    dend_19 { pt3dadd( 74.3263, 18.9544, -23.7722, 0.92 ) }
    dend_19 { pt3dadd( 75.3039, 19.7453, -25.5161, 0.92 ) }
    dend_19 { pt3dadd( 76.1581, 20.2932, -27.2062, 0.92 ) }
    dend_19 { pt3dadd( 76.7387, 20.5284, -28.4341, 0.92 ) }
    dend_19 { pt3dadd( 78.0146, 20.7953, -31.3031, 0.92 ) }
    dend_19 { pt3dadd( 78.7235, 20.7549, -32.8744, 1.15 ) }
    // Section: dend_13, id: dend_13, parent: dend_7 (entry count 41/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -24.2178, -10.5403, -6.52574, 2.29 ) }
    dend_13 { pt3dadd( -24.6832, -11.7719, -7.84351, 2.29 ) }
    dend_13 { pt3dadd( -25.0358, -12.6165, -8.81919, 2.06 ) }
    dend_13 { pt3dadd( -25.6492, -14.2091, -10.6894, 1.83 ) }
    dend_13 { pt3dadd( -26.1676, -15.6337, -12.2929, 1.38 ) }
    dend_13 { pt3dadd( -26.8312, -17.6078, -14.3979, 1.61 ) }
    dend_13 { pt3dadd( -27.3199, -19.2532, -15.9924, 1.61 ) }
    dend_13 { pt3dadd( -27.6639, -20.3515, -16.9773, 1.38 ) }
    dend_13 { pt3dadd( -28.0081, -21.6507, -17.9089, 1.38 ) }
    dend_13 { pt3dadd( -28.2525, -22.7081, -18.3507, 1.38 ) }
    dend_13 { pt3dadd( -28.4652, -23.5564, -18.495, 1.38 ) }
    dend_13 { pt3dadd( -29.0085, -25.1526, -18.4389, 1.38 ) }
    dend_13 { pt3dadd( -29.9321, -27.2061, -18.0816, 1.15 ) }
    dend_13 { pt3dadd( -31.0104, -29.2036, -17.7393, 1.38 ) }
    dend_13 { pt3dadd( -31.774, -30.4515, -17.6472, 1.38 ) }
    dend_13 { pt3dadd( -32.801, -32.0745, -17.8472, 1.38 ) }
    dend_13 { pt3dadd( -33.8353, -33.6571, -18.3084, 1.38 ) }
    dend_13 { pt3dadd( -35.0108, -35.2811, -18.9691, 1.38 ) }
    dend_13 { pt3dadd( -36.5282, -37.103, -19.9822, 1.15 ) }
    dend_13 { pt3dadd( -38.2366, -38.8013, -21.2222, 1.38 ) }
    dend_13 { pt3dadd( -40.1092, -40.3595, -22.596, 1.38 ) }
    dend_13 { pt3dadd( -41.3154, -41.1911, -23.4583, 1.38 ) }
    dend_13 { pt3dadd( -43.1888, -42.1215, -24.6394, 1.38 ) }
    dend_13 { pt3dadd( -45.1032, -42.6742, -25.7012, 1.38 ) }
    dend_13 { pt3dadd( -46.9725, -42.9387, -26.5358, 1.15 ) }
    dend_13 { pt3dadd( -48.8992, -42.9449, -27.3054, 1.15 ) }
    dend_13 { pt3dadd( -49.7437, -42.8479, -27.6622, 1.15 ) }
    dend_13 { pt3dadd( -51.3268, -42.538, -28.4324, 1.15 ) }
    dend_13 { pt3dadd( -53.5553, -42.0295, -29.6996, 1.15 ) }
    dend_13 { pt3dadd( -54.3125, -41.8331, -30.1194, 1.15 ) }
    dend_13 { pt3dadd( -55.5557, -41.4427, -30.7772, 1.15 ) }
    dend_13 { pt3dadd( -56.728, -41.0484, -31.3801, 1.15 ) }
    dend_13 { pt3dadd( -57.9732, -40.66, -31.8683, 1.15 ) }
    dend_13 { pt3dadd( -59.1572, -40.373, -32.1645, 1.15 ) }
    dend_13 { pt3dadd( -61.1023, -40.0869, -32.4165, 0.92 ) }
    dend_13 { pt3dadd( -62.7806, -39.9992, -32.5324, 0.92 ) }
    dend_13 { pt3dadd( -64.6234, -40.0773, -32.579, 0.92 ) }
    dend_13 { pt3dadd( -67.2889, -40.3798, -32.5433, 1.15 ) }
    dend_13 { pt3dadd( -69.2628, -40.7179, -32.5335, 1.15 ) }
    dend_13 { pt3dadd( -70.1293, -40.9124, -32.5301, 0.92 ) }
    dend_13 { pt3dadd( -72.3506, -41.5592, -32.5063, 1.15 ) }
    dend_13 { pt3dadd( -73.5383, -41.9499, -32.464, 1.15 ) }
    dend_13 { pt3dadd( -76.0013, -42.7785, -32.4021, 0.92 ) }
    dend_13 { pt3dadd( -78.5283, -43.6086, -32.4896, 0.92 ) }
    dend_13 { pt3dadd( -79.9074, -43.9921, -32.6432, 0.92 ) }
    dend_13 { pt3dadd( -81.5457, -44.3692, -32.9606, 0.92 ) }
    dend_13 { pt3dadd( -84.3146, -44.8897, -33.6938, 0.92 ) }
    dend_13 { pt3dadd( -85.6535, -45.0947, -34.1143, 0.92 ) }
    dend_13 { pt3dadd( -88.0427, -45.3761, -35.0464, 0.69 ) }
    dend_13 { pt3dadd( -90.5681, -45.5477, -36.1391, 0.69 ) }
    dend_13 { pt3dadd( -92.547, -45.5852, -37.0866, 1.38 ) }
    dend_13 { pt3dadd( -93.3592, -45.5691, -37.5241, 1.38 ) }
    dend_13 { pt3dadd( -95.0687, -45.5026, -38.5295, 0.69 ) }
    dend_13 { pt3dadd( -96.9951, -45.474, -39.5844, 0.92 ) }
    dend_13 { pt3dadd( -98.2527, -45.4805, -40.2051, 1.15 ) }
    dend_13 { pt3dadd( -99.6028, -45.4856, -40.8548, 1.15 ) }
    dend_13 { pt3dadd( -101.28, -45.4882, -41.7419, 0.92 ) }
    dend_13 { pt3dadd( -102.386, -45.4864, -42.3567, 0.92 ) }
    dend_13 { pt3dadd( -103.68, -45.4666, -43.0888, 1.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_13 { pt3dadd( -104.158, -45.4763, -43.3354, 1.15 ) }
    dend_13 { pt3dadd( -105.743, -45.6013, -44.1784, 0.69 ) }
    dend_13 { pt3dadd( -107.691, -45.8714, -45.1458, 0.69 ) }
    dend_13 { pt3dadd( -109.776, -46.2636, -46.1322, 0.69 ) }
    dend_13 { pt3dadd( -111.316, -46.6276, -46.8575, 0.69 ) }
    dend_13 { pt3dadd( -113.025, -47.0691, -47.6407, 1.15 ) }
    dend_13 { pt3dadd( -115.387, -47.723, -48.6991, 0.92 ) }
    dend_13 { pt3dadd( -117.887, -48.3994, -49.7563, 0.92 ) }
    dend_13 { pt3dadd( -119.22, -48.7106, -50.387, 0.92 ) }
    dend_13 { pt3dadd( -120.164, -48.8671, -50.9358, 0.92 ) }
    dend_13 { pt3dadd( -122.05, -48.9975, -52.2704, 0.69 ) }
    dend_13 { pt3dadd( -123.301, -48.9238, -53.2645, 0.69 ) }
    dend_13 { pt3dadd( -124.57, -48.6719, -54.346, 0.69 ) }
    dend_13 { pt3dadd( -126.88, -47.981, -56.4598, 0.69 ) }
    dend_13 { pt3dadd( -128.516, -47.396, -57.8853, 0.69 ) }
    dend_13 { pt3dadd( -130.573, -46.5536, -59.5834, 0.46 ) }
    dend_13 { pt3dadd( -131.692, -46.0583, -60.4552, 0.46 ) }
    dend_13 { pt3dadd( -133.048, -45.4105, -61.3436, 0.69 ) }
    dend_13 { pt3dadd( -133.783, -45.0392, -61.7351, 0.69 ) }
    dend_13 { pt3dadd( -135.739, -43.9969, -62.5701, 0.46 ) }
    dend_13 { pt3dadd( -137.472, -43.0482, -63.2785, 0.46 ) }
    dend_13 { pt3dadd( -138.511, -42.4259, -63.7034, 0.69 ) }
    dend_13 { pt3dadd( -139.958, -41.5647, -64.325, 0.46 ) }
    dend_13 { pt3dadd( -140.7, -41.1504, -64.654, 0.69 ) }
    dend_13 { pt3dadd( -142.499, -40.2078, -65.4686, 0.69 ) }
    dend_13 { pt3dadd( -143.702, -39.6573, -66.0717, 0.69 ) }
    dend_13 { pt3dadd( -145.431, -39.0403, -66.9234, 0.92 ) }
    dend_13 { pt3dadd( -147.247, -38.4925, -67.7925, 1.38 ) }
    dend_13 { pt3dadd( -149.17, -38.0358, -68.6506, 0.69 ) }
    dend_13 { pt3dadd( -150.444, -37.7582, -69.1338, 0.69 ) }
    dend_13 { pt3dadd( -152.607, -37.2861, -69.8287, 0.69 ) }
    dend_13 { pt3dadd( -153.818, -37.0232, -70.1775, 0.69 ) }
    dend_13 { pt3dadd( -155.392, -36.6711, -70.601, 0.69 ) }
    dend_13 { pt3dadd( -158.228, -36.0073, -71.2031, 0.46 ) }
    dend_13 { pt3dadd( -161.015, -35.3199, -71.5349, 0.46 ) }
    dend_13 { pt3dadd( -162.348, -34.9802, -71.5958, 0.46 ) }
    dend_13 { pt3dadd( -165.019, -34.2963, -71.4672, 0.69 ) }
    dend_13 { pt3dadd( -167.307, -33.6969, -71.2242, 0.23 ) }
    dend_13 { pt3dadd( -169.336, -33.1806, -70.8308, 0.69 ) }
    dend_13 { pt3dadd( -171.287, -32.6994, -70.2851, 0.23 ) }
    dend_13 { pt3dadd( -172.416, -32.44, -69.9275, 0.23 ) }
    dend_13 { pt3dadd( -173.806, -32.1365, -69.4697, 0.23 ) }
    dend_13 { pt3dadd( -175.006, -31.8954, -69.1037, 0.46 ) }
    dend_13 { pt3dadd( -176.941, -31.5975, -68.6316, 0.23 ) }
    dend_13 { pt3dadd( -179.0, -31.4074, -68.3573, 0.69 ) }
    dend_13 { pt3dadd( -180.919, -31.3447, -68.273, 0.23 ) }
    dend_13 { pt3dadd( -182.073, -31.3697, -68.2999, 0.23 ) }
    dend_13 { pt3dadd( -183.324, -31.454, -68.412, 0.23 ) }
    dend_13 { pt3dadd( -184.92, -31.6138, -68.6365, 0.46 ) }
    dend_13 { pt3dadd( -186.81, -31.868, -69.0089, 0.23 ) }
    dend_13 { pt3dadd( -188.136, -32.0724, -69.3013, 0.69 ) }
    dend_13 { pt3dadd( -189.683, -32.3601, -69.6805, 0.69 ) }
    dend_13 { pt3dadd( -192.335, -32.8384, -70.3426, 0.23 ) }
    dend_13 { pt3dadd( -195.253, -33.3125, -71.0614, 0.23 ) }
    dend_13 { pt3dadd( -196.765, -33.5322, -71.4497, 0.23 ) }
    dend_13 { pt3dadd( -198.44, -33.7679, -71.8773, 0.23 ) }
    dend_13 { pt3dadd( -200.696, -34.1386, -72.4796, 0.23 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 57/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -24.2178, -10.5403, -6.52574, 1.15 ) }
    dend_8 { pt3dadd( -25.1683, -9.56137, -7.40674, 1.15 ) }
    dend_8 { pt3dadd( -27.7398, -6.94348, -9.63386, 1.15 ) }
    dend_8 { pt3dadd( -29.5612, -5.32164, -11.2893, 1.15 ) }
    dend_8 { pt3dadd( -30.9271, -4.40273, -12.6128, 1.15 ) }
    dend_8 { pt3dadd( -31.8471, -3.86157, -13.6451, 1.15 ) }
    dend_8 { pt3dadd( -32.9548, -3.2347, -15.3004, 1.15 ) }
    dend_8 { pt3dadd( -33.3004, -2.98413, -16.1531, 1.15 ) }
    dend_8 { pt3dadd( -33.8574, -2.48669, -17.9828, 1.15 ) }
    dend_8 { pt3dadd( -34.4228, -1.8837, -20.0927, 1.15 ) }
    dend_8 { pt3dadd( -34.7567, -1.39104, -21.507, 1.15 ) }
    dend_8 { pt3dadd( -35.1467, -0.18867, -24.0599, 1.15 ) }
    dend_8 { pt3dadd( -35.3162, 1.19693, -26.1782, 1.15 ) }
    dend_8 { pt3dadd( -35.3924, 2.6979, -28.1631, 1.15 ) }
    dend_8 { pt3dadd( -35.3848, 4.30924, -29.8388, 1.15 ) }
    dend_8 { pt3dadd( -35.372, 5.55258, -30.8559, 1.15 ) }
    dend_8 { pt3dadd( -35.4656, 7.70696, -32.2433, 1.15 ) }
    dend_8 { pt3dadd( -35.519, 8.90217, -32.7302, 1.15 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 75/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -46.9842, 16.7519, -26.0082, 0.46 ) }
    dend_5 { pt3dadd( -48.3627, 17.654, -25.8366, 0.46 ) }
    dend_5 { pt3dadd( -49.688, 18.4807, -25.3304, 0.69 ) }
    dend_5 { pt3dadd( -51.1438, 19.3369, -24.5285, 0.69 ) }
    dend_5 { pt3dadd( -52.192, 19.9534, -23.9511, 0.69 ) }
    dend_5 { pt3dadd( -53.6074, 20.7859, -23.1715, 0.69 ) }
    dend_5 { pt3dadd( -54.7332, 21.4481, -22.5513, 1.15 ) }
    dend_5 { pt3dadd( -56.0348, 22.3871, -21.6122, 1.15 ) }
    dend_5 { pt3dadd( -56.5222, 22.7348, -21.0863, 1.38 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 84/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -46.9842, 16.7519, -26.0082, 0.23 ) }
    dend_4 { pt3dadd( -44.6302, 16.7129, -25.224, 0.23 ) }
    dend_4 { pt3dadd( -43.0448, 16.5961, -24.7389, 0.23 ) }
    dend_4 { pt3dadd( -41.124, 16.3681, -24.1869, 0.23 ) }
    dend_4 { pt3dadd( -39.9788, 16.1555, -23.8516, 0.23 ) }
    dend_4 { pt3dadd( -37.5991, 15.56, -23.1802, 0.23 ) }
    dend_4 { pt3dadd( -35.6208, 14.9193, -22.6484, 0.23 ) }
    dend_4 { pt3dadd( -33.8198, 14.1533, -22.0843, 0.23 ) }
    dend_4 { pt3dadd( -33.0722, 13.7232, -21.8605, 0.23 ) }
    dend_4 { pt3dadd( -31.7939, 12.8083, -21.4282, 0.23 ) }
    dend_4 { pt3dadd( -30.4405, 11.6925, -20.9183, 0.23 ) }
    dend_4 { pt3dadd( -29.2403, 10.5698, -20.4466, 0.23 ) }
    dend_4 { pt3dadd( -27.9713, 9.30523, -19.8675, 0.23 ) }
    dend_4 { pt3dadd( -26.4175, 7.73167, -19.0604, 0.23 ) }
    dend_4 { pt3dadd( -24.6775, 6.03491, -18.1025, 0.23 ) }
    dend_4 { pt3dadd( -23.6561, 5.11614, -17.5161, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 0/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 41.8264, -15.6898, -0.631401, 0.69 ) }
    dend_22 { pt3dadd( 43.4037, -16.3479, 1.10287, 0.69 ) }
    dend_22 { pt3dadd( 44.4844, -16.974, 2.46445, 0.69 ) }
    dend_22 { pt3dadd( 45.7362, -17.823, 4.18209, 0.69 ) }
    dend_22 { pt3dadd( 47.3088, -19.0828, 6.50215, 0.69 ) }
    dend_22 { pt3dadd( 48.3679, -19.994, 8.02692, 0.69 ) }
    dend_22 { pt3dadd( 49.0399, -20.6467, 9.06409, 0.69 ) }
    dend_22 { pt3dadd( 49.5807, -21.267, 10.0915, 0.69 ) }
    dend_22 { pt3dadd( 50.1396, -21.9891, 11.332, 0.46 ) }
    dend_22 { pt3dadd( 50.6744, -22.7917, 12.5995, 0.46 ) }
    dend_22 { pt3dadd( 51.0794, -23.4475, 13.638, 0.92 ) }
    dend_22 { pt3dadd( 52.1596, -25.0, 16.2839, 0.92 ) }
    dend_22 { pt3dadd( 53.0246, -26.0668, 18.2758, 0.92 ) }
    dend_22 { pt3dadd( 53.7697, -26.8675, 19.9785, 0.92 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 14/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 41.8264, -15.6898, -0.631401, 0.46 ) }
    dend_21 { pt3dadd( 41.7786, -16.4368, 1.03268, 0.46 ) }
    dend_21 { pt3dadd( 41.7195, -17.3602, 3.08996, 0.46 ) }
    dend_21 { pt3dadd( 41.6698, -18.1382, 4.82325, 0.46 ) }
    dend_21 { pt3dadd( 41.6463, -18.5057, 5.64192, 0.46 ) }
    dend_21 { pt3dadd( 41.607, -19.12, 7.01044, 0.46 ) }
    dend_21 { pt3dadd( 41.5546, -19.9386, 8.83418, 0.46 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 21/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -35.519, 8.90217, -32.7302, 0.92 ) }
    dend_12 { pt3dadd( -35.7627, 9.28273, -34.1034, 0.92 ) }
    dend_12 { pt3dadd( -36.3296, 10.2459, -37.6719, 0.92 ) }
    dend_12 { pt3dadd( -36.7461, 10.9793, -40.4941, 0.92 ) }
    dend_12 { pt3dadd( -37.0748, 11.5236, -42.6461, 0.92 ) }
    dend_12 { pt3dadd( -37.3966, 11.9641, -44.4763, 0.92 ) }
    dend_12 { pt3dadd( -37.8602, 12.4858, -46.9865, 0.92 ) }
    dend_12 { pt3dadd( -38.4534, 13.1014, -50.7543, 0.92 ) }
    dend_12 { pt3dadd( -38.6002, 13.2393, -51.7338, 1.15 ) }
    dend_12 { pt3dadd( -39.0725, 13.585, -54.5853, 1.15 ) }
    dend_12 { pt3dadd( -39.5207, 13.8808, -57.0134, 1.15 ) }
    dend_12 { pt3dadd( -39.9334, 14.1875, -59.2196, 1.15 ) }
    dend_12 { pt3dadd( -40.1709, 14.4157, -60.6418, 1.15 ) }
    dend_12 { pt3dadd( -40.2635, 14.5211, -61.269, 0.92 ) }
    dend_12 { pt3dadd( -40.5961, 15.0178, -63.8294, 0.92 ) }
    dend_12 { pt3dadd( -40.77, 15.5251, -65.9446, 0.92 ) }
    dend_12 { pt3dadd( -40.8295, 16.0076, -67.4344, 0.92 ) }
    dend_12 { pt3dadd( -40.9994, 17.1949, -70.2196, 0.92 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 39/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -35.519, 8.90217, -32.7302, 0.92 ) }
    dend_9 { pt3dadd( -35.6331, 10.1309, -32.7618, 0.92 ) }
    dend_9 { pt3dadd( -35.9072, 12.2542, -32.7354, 0.92 ) }
    dend_9 { pt3dadd( -36.0676, 13.4471, -32.6446, 0.92 ) }
    dend_9 { pt3dadd( -36.4132, 15.7319, -32.6824, 0.92 ) }
    dend_9 { pt3dadd( -36.7582, 17.4198, -32.8642, 0.92 ) }
    dend_9 { pt3dadd( -37.1621, 19.2326, -33.1586, 0.92 ) }
    dend_9 { pt3dadd( -37.7315, 21.118, -33.6147, 0.69 ) }
    dend_9 { pt3dadd( -38.2666, 22.6107, -33.9846, 0.69 ) }
    dend_9 { pt3dadd( -39.5427, 26.0149, -34.9888, 0.69 ) }
    dend_9 { pt3dadd( -40.2288, 27.874, -35.7168, 0.69 ) }
    dend_9 { pt3dadd( -40.4445, 28.505, -36.0459, 0.92 ) }
    dend_9 { pt3dadd( -41.0976, 30.3001, -37.0781, 0.92 ) }
    dend_9 { pt3dadd( -41.8834, 32.3414, -38.3252, 0.69 ) }
    dend_9 { pt3dadd( -42.3756, 33.6451, -39.0991, 0.69 ) }
    dend_9 { pt3dadd( -42.9573, 35.5028, -39.816, 0.92 ) }
    dend_9 { pt3dadd( -43.4892, 37.6824, -40.5701, 0.69 ) }
    dend_9 { pt3dadd( -43.9239, 39.3052, -41.2189, 0.69 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 57/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -43.9239, 39.3052, -41.2189, 0.23 ) }
    dend_11 { pt3dadd( -44.4832, 40.556, -44.1906, 0.23 ) }
    dend_11 { pt3dadd( -45.0419, 41.8055, -47.1593, 0.69 ) }
    dend_11 { pt3dadd( -45.4212, 42.6537, -49.1746, 0.69 ) }
    dend_11 { pt3dadd( -45.8143, 43.5326, -51.2628, 0.69 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 62/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -43.9239, 39.3052, -41.2189, 0.69 ) }
    dend_10 { pt3dadd( -44.1815, 38.6596, -39.43, 0.69 ) }
    dend_10 { pt3dadd( -44.4942, 37.8758, -37.2582, 0.69 ) }
    dend_10 { pt3dadd( -44.717, 37.3174, -35.7111, 0.69 ) }
    dend_10 { pt3dadd( -44.9443, 36.7476, -34.1324, 0.23 ) }
    dend_10 { pt3dadd( -45.2104, 36.0806, -32.2842, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_25, dend_24, dend_15, dend_0, dend_27, dend_26, dend_23, dend_16, dend_6, dend_1, dend_18, dend_17, dend_14, dend_7, dend_3, dend_2, dend_20, dend_19, dend_13, dend_8, dend_5, dend_4, dend_22, dend_21, dend_12, dend_9, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_25, dend_24, dend_15, dend_0, dend_27, dend_26, dend_23, dend_16, dend_6, dend_1, dend_18, dend_17, dend_14, dend_7, dend_3, dend_2, dend_20, dend_19, dend_13, dend_8, dend_5, dend_4, dend_22, dend_21, dend_12, dend_9, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_24 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_23 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_17 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_14 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_3 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_19 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_15 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_6 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_7 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_16 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_25 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_18 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_26 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_20 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_8 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_21 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_22 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_5 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_9 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_12 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_4 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_10 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_11 OneSecGrp_SectionRef_30.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_24 nseg = 5
    dend_27 nseg = 5
    dend_23 nseg = 3
    dend_17 nseg = 5
    dend_14 nseg = 7
    dend_3 nseg = 3
    dend_19 nseg = 3
    dend_13 nseg = 11
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_HAC_f7023f0666_0_0


