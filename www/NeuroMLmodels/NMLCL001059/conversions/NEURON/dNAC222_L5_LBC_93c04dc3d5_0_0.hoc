// Cell: dNAC222_L5_LBC_93c04dc3d5_0_0
/*
{
  "id" : "dNAC222_L5_LBC_93c04dc3d5_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.24986, 8.66179, -0.266886, 1.81928", "-1.99773, 7.71094, -0.243919, 3.13771", "-1.74561, 6.7601, -0.220952, 4.2898", "-1.49349, 5.80925, -0.197985, 6.24218", "-1.24137, 4.8584, -0.175018, 7.75134", "-0.989246, 3.90756, -0.152051, 8.81916", "-0.737124, 2.95671, -0.129084, 9.30643", "-0.485002, 2.00586, -0.106117, 9.79367", "-0.23288, 1.05502, -0.0831497, 10.3575", "0.0192416, 0.104171, -0.0601827, 10.6175", "0.271364, -0.846675, -0.0372157, 10.6286", "0.523485, -1.79752, -0.0142487, 10.564", "0.775607, -2.74837, 0.00871831, 10.4925", "1.02773, -3.69921, 0.0316853, 10.2088", "1.27985, -4.65006, 0.0546523, 9.65193", "1.53197, -5.60091, 0.0776193, 9.00896", "1.7841, -6.55175, 0.100586, 8.08521", "2.03622, -7.5026, 0.123553, 6.83318", "2.28834, -8.45345, 0.14652, 5.15146", "2.54046, -9.40429, 0.169487, 3.38897", "2.79258, -10.3551, 0.192454, 2.13858" ]
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-4.45367, 0.250762, 4.43561, 0.96", "-5.06267, -0.398482, 5.42923, 0.96", "-5.54937, -0.804235, 6.13272, 0.88", "-7.15368, -1.93372, 8.1676, 0.81", "-7.84909, -2.39822, 8.95773, 0.74", "-8.94401, -3.16164, 10.1237, 0.66", "-9.60746, -3.64349, 10.9305, 0.59", "-10.1413, -4.08718, 11.7098, 0.81", "-10.5528, -4.4109, 12.3189, 0.81", "-11.4274, -4.97108, 13.5712, 0.59", "-12.1789, -5.38589, 14.6901, 1.33", "-13.9848, -6.2519, 17.5227, 1.55", "-15.3059, -6.83016, 19.7938, 0.74", "-15.7749, -6.99012, 20.6217, 0.59", "-16.427, -7.15442, 21.769, 1.03", "-16.6909, -7.18552, 22.2202, 1.47", "-17.431, -7.17708, 23.432, 1.47", "-18.8917, -7.04659, 25.8345, 0.81", "-19.4167, -7.00743, 26.8886, 0.59", "-19.9012, -7.05581, 28.1213, 0.59", "-20.2034, -7.16671, 29.0104, 0.96", "-20.4778, -7.36283, 29.9652, 0.96", "-21.2023, -8.10225, 32.9767, 0.59", "-21.5009, -8.5962, 34.8082, 0.59", "-21.6408, -8.99523, 36.2278, 0.44", "-21.6915, -9.26777, 37.1192, 1.18", "-21.7163, -9.584, 37.9045, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-1.51366, 8.37777, 1.68561, 3.24", "-1.51916, 8.97599, 1.7941, 3.24", "-1.53782, 11.0077, 2.16255, 2.58", "-1.55243, 12.5978, 2.4509, 2.36", "-1.56433, 13.893, 2.68579, 2.36", "-1.57809, 15.3913, 2.9575, 2.36", "-1.58474, 16.1152, 3.08878, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "5.55634, -6.66873, 3.06561, 1.18", "5.77959, -6.75064, 3.26778, 1.18", "7.14356, -7.37233, 4.25744, 0.88", "7.89319, -7.71739, 4.68341, 1.11", "9.97928, -8.62079, 5.62231, 1.33", "11.0185, -9.03677, 5.98935, 1.33", "12.1982, -9.49609, 6.4065, 1.25", "13.6229, -10.0365, 6.83658, 0.96", "14.781, -10.4936, 7.09733, 0.96", "15.7463, -10.8962, 7.25376, 1.25", "16.9325, -11.356, 7.41459, 1.25", "18.6044, -11.8962, 7.74025, 1.47", "19.7199, -12.1874, 8.04138, 0.74", "20.5796, -12.3438, 8.38735, 0.74", "21.8457, -12.5192, 8.99668, 0.59", "23.4842, -12.723, 9.81622, 0.59", "24.1385, -12.7976, 10.13, 0.81", "24.8908, -12.8816, 10.423, 0.81", "26.6513, -13.0158, 11.166, 0.52", "27.3232, -13.0275, 11.4598, 0.52", "28.4135, -12.9968, 11.926, 0.52", "29.263, -13.0974, 12.1831, 0.59", "30.5822, -13.4875, 12.431, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.77634, -10.3018, 1.87561, 2.43", "1.77634, -10.3018, 1.87561, 2.43", "1.83876, -11.3527, 1.63046, 2.06", "1.932, -12.9224, 1.26428, 1.33", "2.02356, -14.4638, 0.90473, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.79258, -10.3551, 0.192454, 0.59", "6.63706, -24.8541, 0.192454, 0.59", "10.4816, -39.353, 0.192454, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-1.58474, 16.1152, 3.08878, 2.06", "-1.1221, 16.8649, 4.07749, 2.06", "-0.192168, 18.4367, 5.89808, 1.92", "0.688106, 20.0094, 7.56255, 1.47", "1.07587, 20.7603, 8.28359, 1.47", "1.67492, 22.0202, 9.37519, 1.25", "2.11752, 22.951, 10.1817, 1.77", "2.56482, 23.9622, 11.0097, 1.55", "3.07516, 25.2201, 11.8167, 1.62", "3.39707, 26.1131, 12.2826, 2.21", "3.72254, 27.1152, 12.7522, 2.65" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.58474, 16.1152, 3.08878, 0.59", "-3.45897, 16.3473, 2.68715, 0.59", "-4.48518, 16.3976, 2.49661, 0.59", "-5.37657, 16.3724, 2.28367, 0.59", "-7.18637, 16.2467, 1.69555, 0.52", "-8.38582, 16.1589, 1.24077, 0.81", "-9.3054, 16.101, 0.870565, 1.18", "-9.99992, 16.0249, 0.592044, 1.18", "-11.6872, 15.8107, -0.120639, 0.66", "-13.1756, 15.6516, -0.73748, 0.66", "-14.1605, 15.5813, -1.1126, 1.25", "-14.721, 15.561, -1.30124, 1.47", "-15.993, 15.5597, -1.69793, 0.52", "-16.9264, 15.586, -1.93151, 0.52", "-18.4559, 15.6603, -2.11121, 0.52", "-19.4267, 15.6856, -2.12558, 1.03", "-20.1222, 15.6728, -2.11071, 1.33" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "30.5822, -13.4875, 12.431, 0.52", "30.901, -15.114, 11.4844, 0.52", "30.9018, -15.7974, 11.0817, 0.37", "30.7334, -17.3527, 10.0846, 0.37", "30.5238, -18.4153, 9.231, 0.59", "30.388, -18.975, 8.71446, 0.22", "30.0456, -20.2051, 7.55373, 0.22", "29.7606, -20.9943, 6.71971, 0.22", "29.2105, -22.2601, 5.31435, 0.74", "28.3046, -23.9893, 3.34483, 0.29", "27.706, -25.1134, 2.02868, 0.07", "27.4463, -25.6618, 1.33745, 0.07" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "30.5822, -13.4875, 12.431, 1.03", "32.0437, -13.6546, 13.7121, 1.03", "32.7355, -13.6974, 13.9717, 0.52", "33.8362, -13.6307, 14.2683, 0.52", "36.0543, -13.3772, 14.8061, 0.37", "37.3317, -13.2082, 15.0282, 0.37", "40.4374, -12.7714, 15.4381, 0.37", "48.5355, -11.5982, 15.902, 0.37", "53.3009, -10.876, 15.9481, 0.66", "54.5536, -10.6661, 15.9017, 0.66", "57.6044, -10.0647, 15.5698, 0.74", "58.9535, -9.74815, 15.3373, 0.74", "60.6942, -9.25885, 14.8526, 0.37", "61.7767, -8.92585, 14.4421, 0.37", "62.8294, -8.68983, 14.0882, 0.37", "63.8227, -8.45329, 13.9195, 0.81", "65.0594, -8.09678, 13.9836, 0.81", "66.0121, -7.81349, 14.1179, 0.81", "67.5223, -7.47989, 14.4386, 0.37", "68.6524, -7.38629, 14.6742, 0.29", "69.9169, -7.46261, 14.9369, 0.29", "71.4721, -7.72374, 15.315, 0.44", "72.6326, -8.0168, 15.6862, 0.44", "74.4239, -8.55086, 16.3379, 0.44", "76.0012, -9.04681, 16.927, 0.88", "76.6669, -9.23909, 17.2158, 0.88", "78.2391, -9.56634, 18.1171, 0.52", "79.6155, -9.63218, 19.1887, 0.74", "80.7126, -9.46084, 20.182, 0.81", "81.3767, -9.22742, 20.8056, 0.81", "82.2166, -8.84141, 21.5713, 0.52", "83.3125, -8.30398, 22.4788, 0.52", "83.8876, -8.04058, 22.8811, 0.74", "84.8234, -7.70088, 23.4095, 0.74", "85.8624, -7.46077, 23.9001, 0.59", "86.8975, -7.35958, 24.2797, 0.59", "88.2573, -7.37483, 24.6452, 0.66", "89.2926, -7.49042, 24.8046, 0.88", "89.9992, -7.63266, 24.85, 0.88", "90.8474, -7.92165, 24.8133, 0.52", "91.9084, -8.45725, 24.6519, 0.52", "92.6474, -8.98687, 24.4302, 0.52", "93.7714, -10.0999, 23.9219, 0.44", "94.4908, -10.8979, 23.4768, 0.44", "95.4274, -11.9806, 22.7639, 0.59", "95.8201, -12.4252, 22.4172, 0.74", "96.4549, -13.0128, 21.8311, 0.52", "97.0002, -13.1177, 21.4662, 0.37", "98.834, -12.3695, 20.7671, 0.52", "99.5526, -12.0459, 20.5442, 0.52", "100.413, -11.6907, 20.3223, 0.52", "101.869, -11.1814, 20.0095, 0.52", "103.252, -10.7129, 19.7751, 0.52", "104.613, -10.2731, 19.5873, 0.66", "105.738, -9.97098, 19.4787, 0.66", "106.879, -9.66885, 19.369, 0.37", "107.951, -9.41422, 19.2708, 0.37", "109.14, -9.18793, 19.1781, 0.37", "109.952, -9.04902, 19.0916, 0.66", "110.372, -8.98451, 19.0193, 0.66", "110.896, -8.91486, 18.8477, 0.66", "111.426, -8.87391, 18.5915, 0.66", "112.255, -8.86687, 18.1025, 0.37", "113.398, -8.94361, 17.3867, 0.37", "114.584, -9.02743, 16.7188, 0.37", "115.584, -9.05851, 16.232, 0.22", "116.534, -9.06199, 15.8673, 0.37", "117.292, -9.00436, 15.6936, 0.44", "118.018, -8.8548, 15.6693, 0.44", "119.519, -8.36749, 15.9126, 0.52", "119.996, -8.17515, 16.039, 0.37", "120.74, -7.8426, 16.2745, 0.37", "121.468, -7.51265, 16.477, 0.52", "121.991, -7.24566, 16.546, 0.66", "122.423, -7.00088, 16.5183, 0.88", "122.73, -6.79641, 16.4474, 0.88", "123.126, -6.49872, 16.3449, 1.03", "123.625, -6.07537, 16.2025, 1.03", "124.395, -5.42119, 15.9681, 0.52", "125.32, -4.68591, 15.6612, 0.29", "126.119, -4.17631, 15.4135, 0.66", "126.743, -3.83856, 15.2204, 0.81", "127.36, -3.55934, 15.0311, 0.81", "127.92, -3.3319, 14.8591, 0.81", "128.834, -3.0135, 14.6042, 0.37", "130.602, -2.54548, 14.11, 0.37", "131.485, -2.36767, 13.8857, 0.44", "132.239, -2.20929, 13.7122, 0.59", "132.928, -2.02731, 13.5763, 0.59", "133.929, -1.68765, 13.4205, 0.59", "134.834, -1.2941, 13.3266, 0.52", "135.844, -0.775105, 13.2548, 0.74", "136.54, -0.448165, 13.2376, 0.74", "137.551, -0.0415057, 13.1661, 0.37", "138.329, 0.224825, 13.0712, 0.44", "139.19, 0.481191, 12.9261, 0.66", "139.838, 0.637926, 12.7977, 0.74", "140.559, 0.739114, 12.644, 0.74", "142.071, 0.871293, 12.2926, 0.59", "142.504, 0.899226, 12.1804, 0.59", "143.135, 0.958103, 11.9966, 0.59", "143.765, 1.02649, 11.7768, 0.37", "144.737, 1.17414, 11.4149, 0.59", "145.585, 1.3478, 11.0743, 0.81", "146.22, 1.49904, 10.8534, 0.81", "147.19, 1.70826, 10.5651, 0.52", "148.257, 1.95098, 10.3101, 0.37", "148.984, 2.13054, 10.1876, 0.29", "149.526, 2.2755, 10.1453, 0.29", "150.725, 2.67207, 10.1855, 0.52", "151.901, 3.1355, 10.3201, 0.52", "152.684, 3.43573, 10.4528, 0.88", "153.328, 3.64713, 10.5418, 0.88", "153.833, 3.77881, 10.5445, 0.88", "154.955, 4.03074, 10.4016, 0.37", "155.742, 4.20985, 10.1652, 0.37", "156.859, 4.46251, 9.70364, 0.37", "158.198, 4.69889, 9.12545, 0.29", "159.227, 4.85845, 8.59005, 0.29", "159.861, 4.98001, 8.22877, 0.52", "160.185, 5.05928, 8.02531, 0.74", "160.737, 5.24395, 7.63947, 0.44", "161.835, 5.68434, 6.87512, 0.37", "163.618, 6.45201, 5.7237, 0.44", "164.627, 6.86265, 5.06882, 0.44", "165.637, 7.25178, 4.35964, 1.03", "166.65, 7.62807, 3.5946, 1.47" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "2.02356, -14.4638, 0.90473, 1.18", "1.77886, -16.0598, 2.49648, 1.18", "1.58949, -16.7836, 3.19878, 1.18", "1.10917, -18.6193, 4.98015, 1.18", "0.766631, -19.9284, 6.25051, 0.88", "0.55346, -20.7431, 7.04109, 0.74", "0.367488, -21.4539, 7.7308, 1.03", "-0.177789, -22.7695, 8.82083, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "2.02356, -14.4638, 0.90473, 0.96", "2.35022, -15.6989, -1.67952, 0.96", "2.62337, -16.8286, -3.62169, 0.96", "2.6498, -16.9917, -3.87263, 1.4", "3.02225, -19.105, -6.92097, 0.88", "3.12181, -19.5562, -7.53086, 0.88", "3.33588, -20.3525, -8.56118, 0.52", "3.68863, -21.4099, -9.80153, 0.52", "4.30979, -23.1707, -11.7381, 0.88", "5.13205, -25.3838, -14.0106, 0.52", "5.82745, -27.076, -15.6292, 0.52", "6.29319, -28.0744, -16.5867, 0.52", "6.82722, -29.1643, -17.5953, 0.52", "7.27174, -30.0722, -18.3817, 0.52", "7.84664, -31.2735, -19.2758, 0.88", "8.19795, -32.1869, -19.8394, 1.11", "8.78706, -34.141, -20.8819, 0.44", "9.1126, -35.4088, -21.5206, 0.74", "9.33748, -36.314, -21.94, 0.96", "9.58009, -37.214, -22.321, 0.96", "9.97148, -38.622, -22.9452, 0.66", "10.1566, -39.2979, -23.2718, 0.66", "10.6415, -40.9507, -24.1326, 0.44", "10.9546, -41.8093, -24.7984, 0.59", "11.3405, -42.6404, -25.6251, 0.44", "12.1547, -43.975, -27.6839, 0.37", "12.697, -44.6744, -29.2986, 0.96", "12.8998, -44.9068, -29.9706, 1.33", "14.0927, -46.2726, -34.651, 0.81", "14.3602, -46.5974, -35.8658, 1.11", "15.4908, -48.1407, -41.7881, 0.66", "16.2205, -49.3756, -46.3408, 1.55", "16.785, -50.6407, -50.4826, 0.96", "17.1813, -51.9819, -54.3171, 0.81", "17.2619, -52.5776, -55.7081, 0.96", "17.2534, -53.3133, -57.0185, 0.37", "17.0878, -54.6012, -58.4849, 0.29", "16.8016, -56.1178, -59.5671, 0.29", "16.6011, -57.0489, -59.9736, 0.52", "16.5076, -57.5866, -60.1115, 0.52", "16.1914, -59.9144, -60.6947, 0.29", "16.1251, -60.5574, -60.8723, 0.59", "16.0842, -61.1396, -61.0375, 0.59", "16.0332, -61.8806, -61.2716, 0.29", "15.9355, -63.3897, -61.8204, 0.29", "15.8529, -64.864, -62.456, 0.59", "15.814, -65.3663, -62.7124, 0.81", "15.571, -67.6567, -64.0034, 0.22", "15.4367, -68.8072, -64.7362, 0.22", "15.2461, -70.4048, -65.8545, 0.22", "15.0171, -72.2806, -67.2397, 0.81", "14.8011, -73.9639, -68.592, 0.44", "14.6784, -74.9305, -69.4213, 0.44", "14.4802, -76.5535, -70.897, 0.88", "14.3895, -77.6767, -71.8696, 0.74", "14.3647, -78.1438, -72.2475, 0.74", "14.2094, -80.4572, -73.9341, 0.44", "14.134, -81.4767, -74.5863, 0.44", "14.0214, -82.3242, -75.097, 0.29", "13.7623, -83.6035, -75.7787, 0.29", "13.1653, -85.7372, -76.8328, 0.29", "12.751, -86.9681, -77.395, 0.74", "12.362, -87.9908, -77.7832, 0.74", "11.5477, -89.9379, -78.5178, 0.44", "11.1576, -90.8323, -78.8326, 0.44", "10.7385, -91.8078, -79.1267, 0.29", "10.5685, -92.229, -79.2124, 0.66", "10.1216, -93.3455, -79.4086, 0.37", "9.75059, -94.2544, -79.5334, 0.88", "9.36914, -95.0786, -79.6459, 0.88", "8.79371, -96.1817, -79.8583, 0.59", "8.18192, -97.2419, -80.1045, 0.29", "7.51753, -98.288, -80.4899, 0.66", "7.20225, -98.7574, -80.7421, 0.66", "6.27868, -100.276, -81.8587, 0.22", "5.99411, -100.839, -82.3564, 0.22", "5.79563, -101.282, -82.7929, 0.74", "5.27476, -102.845, -84.4804, 0.44", "5.07756, -103.791, -85.5749, 0.44", "4.94989, -105.078, -87.1643, 0.29", "4.98427, -105.46, -87.677, 0.44" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "10.4816, -39.353, 0.192454, 0.15", "14.326, -53.852, 0.192454, 0.15", "18.1705, -68.351, 0.192454, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "3.72254, 27.1152, 12.7522, 0.81", "5.3227, 28.2882, 12.8519, 0.81", "6.00787, 28.7786, 12.8282, 0.81", "7.25232, 29.5708, 12.7175, 0.81", "8.92539, 30.5296, 12.5343, 0.96", "9.80786, 31.0024, 12.4294, 1.25", "10.5807, 31.3957, 12.337, 1.25", "12.0158, 32.1122, 12.1288, 0.96", "13.2052, 32.7163, 11.9344, 0.81", "14.287, 33.2594, 11.7383, 1.33", "14.9965, 33.6007, 11.5759, 1.62", "16.0655, 34.0715, 11.3314, 0.74", "17.0438, 34.4642, 11.1236, 0.59", "18.0318, 34.872, 10.9072, 0.52", "19.1841, 35.4179, 10.5388, 0.44", "19.9097, 35.7565, 10.1974, 0.44", "21.2413, 36.2695, 9.35778, 0.74", "22.0462, 36.4915, 8.74388, 0.74", "23.3623, 36.6779, 7.65278, 0.52", "24.4884, 36.7132, 6.73641, 0.88", "25.6589, 36.7063, 5.75514, 0.88", "26.6749, 36.7862, 4.81438, 0.59", "27.1764, 36.8564, 4.32203, 0.59", "27.7777, 36.9421, 3.76287, 0.44", "28.6948, 37.0946, 3.13878, 0.44", "29.4472, 37.3071, 2.78073, 0.44", "31.0028, 37.9875, 2.30959, 0.44", "32.2832, 38.7315, 2.02069, 0.74", "33.3581, 39.5437, 1.82577, 0.96", "35.3608, 41.4489, 1.57756, 0.44", "35.8147, 41.9576, 1.54145, 0.96", "36.6095, 42.9477, 1.5087, 0.37", "37.3667, 44.03, 1.50575, 0.37", "38.125, 45.2897, 1.31079, 0.37", "38.6714, 46.332, 0.987437, 0.74", "39.0477, 47.0817, 0.632151, 0.44", "39.5125, 48.04, 0.137796, 0.52", "39.8453, 48.7839, -0.271828, 1.11", "40.7886, 51.0015, -1.5146, 0.44", "41.2597, 52.1949, -2.16629, 0.29", "41.6419, 53.3099, -2.76505, 0.29", "41.8952, 54.1434, -3.18161, 0.81", "42.103, 54.8654, -3.51446, 0.81", "42.425, 55.963, -3.96175, 0.52", "42.8426, 57.4334, -4.47019, 0.52", "43.313, 59.14, -5.1278, 0.44", "43.4268, 59.6045, -5.32352, 0.88", "43.6237, 60.3715, -5.67456, 0.88", "43.9548, 61.4374, -6.1731, 0.37", "44.2941, 62.2287, -6.60658, 0.22", "44.6813, 62.981, -7.04481, 0.22", "45.1223, 63.7245, -7.49543, 0.22", "45.7505, 64.6446, -8.0866, 0.22", "46.6383, 65.8482, -8.803, 0.22", "48.0118, 67.5436, -9.70842, 0.81", "48.4562, 68.0396, -9.9251, 0.81", "49.3536, 68.9512, -10.2573, 0.81", "50.151, 69.7277, -10.4774, 0.44", "51.206, 70.7579, -10.6985, 0.44", "51.5897, 71.1477, -10.7445, 0.96", "52.2659, 71.8589, -10.7596, 0.52", "53.1189, 72.7166, -10.7744, 0.37", "53.871, 73.4761, -10.7809, 0.66", "54.4834, 74.097, -10.823, 0.66", "55.111, 74.7469, -10.9052, 0.29", "56.0336, 75.7004, -11.0239, 0.29", "56.9335, 76.6189, -11.1277, 0.59", "57.553, 77.2233, -11.1854, 0.37", "58.3136, 77.9109, -11.2608, 0.66", "58.9469, 78.46, -11.3244, 0.66", "60.0615, 79.4197, -11.4324, 0.29", "60.8873, 80.1585, -11.5014, 0.29", "61.4151, 80.632, -11.5476, 0.29", "61.9046, 81.0235, -11.5994, 0.66", "62.2663, 81.293, -11.6413, 0.66", "62.7383, 81.65, -11.7494, 0.66", "63.5254, 82.2697, -12.0078, 0.37", "64.424, 82.9748, -12.3993, 0.37", "65.5037, 83.7824, -12.984, 0.96", "66.1052, 84.1857, -13.3355, 0.96", "67.658, 85.118, -14.2752, 0.29", "68.6803, 85.6838, -14.9227, 0.29", "69.6228, 86.1959, -15.4951, 0.29", "70.9741, 86.8931, -16.1984, 0.29", "71.7044, 87.2414, -16.5094, 0.74", "72.3593, 87.5415, -16.7432, 0.74", "74.0846, 88.3545, -17.1553, 0.29", "76.1674, 89.4373, -17.4957, 0.29", "78.3238, 90.6639, -17.6602, 0.29", "79.334, 91.3041, -17.6677, 0.29", "80.2345, 91.9243, -17.6428, 0.29", "81.693, 92.9973, -17.5012, 0.66", "82.4076, 93.5001, -17.4224, 0.66", "83.2985, 94.0336, -17.368, 0.37", "84.2336, 94.5206, -17.416, 1.03", "85.109, 94.8939, -17.522, 1.03", "86.4858, 95.3629, -17.797, 0.66", "89.2413, 96.1404, -18.5832, 0.22", "91.5672, 96.7381, -19.3483, 0.52", "93.6077, 97.2546, -20.0994, 0.29", "94.968, 97.6045, -20.659, 0.29", "96.2316, 97.9921, -21.2404, 0.66", "96.7808, 98.2213, -21.509, 0.66", "97.8927, 98.8828, -21.8912, 0.22", "98.5562, 99.3674, -22.0681, 0.52", "99.1074, 99.8192, -22.1683, 0.52", "101.501, 101.949, -22.4029, 0.22", "103.283, 103.578, -22.4697, 0.22", "105.921, 106.018, -22.4657, 0.22", "107.288, 107.303, -22.4189, 0.52", "108.045, 108.021, -22.3577, 0.22", "109.025, 108.972, -22.1807, 0.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "3.72254, 27.1152, 12.7522, 0.66", "3.15806, 29.7115, 13.05, 0.66", "3.0976, 30.5263, 13.1627, 0.74", "3.10446, 31.6072, 13.3677, 0.74", "3.13743, 32.657, 13.4275, 1.03", "3.18276, 33.6564, 13.4388, 1.03", "3.23423, 34.8316, 13.4221, 0.74", "3.41303, 36.2126, 13.4757, 1.11", "3.62362, 37.4411, 13.4615, 1.47", "4.10957, 39.953, 13.2023, 1.62", "4.24752, 40.7264, 13.0447, 1.62", "4.30803, 41.2081, 12.9061, 1.62" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-20.1222, 15.6728, -2.11071, 0.29", "-20.9171, 15.8945, -1.05966, 0.29", "-21.5595, 16.0738, -0.346132, 0.88", "-22.2467, 16.2441, 0.358224, 1.11", "-24.6095, 16.7892, 2.63826, 1.03", "-25.3509, 16.9356, 3.3241, 0.59", "-25.9453, 17.0368, 3.89147, 0.29", "-26.7289, 17.1567, 4.71918, 0.29", "-27.1674, 17.2319, 5.1937, 0.52", "-27.4404, 17.2885, 5.4788, 0.74", "-28.0556, 17.4355, 5.97722, 0.74", "-29.2861, 17.7624, 7.01619, 0.37", "-29.7798, 17.9129, 7.45553, 0.59", "-30.1118, 18.0366, 7.73484, 0.59", "-30.7826, 18.3197, 8.2307, 0.29", "-31.6973, 18.7221, 8.84381, 0.59", "-32.1196, 18.9037, 9.0632, 0.37", "-33.1181, 19.2814, 9.42828, 0.29", "-34.0208, 19.5835, 9.69345, 1.25", "-34.3933, 19.6926, 9.77698, 1.62", "-34.8036, 19.8171, 9.83028, 1.62", "-36.0259, 20.2173, 9.91316, 0.29", "-36.8113, 20.4699, 9.94534, 0.29", "-37.6924, 20.7541, 9.95903, 0.52", "-38.1617, 20.9087, 9.96295, 0.59", "-39.5797, 21.3876, 9.96292, 0.22", "-40.2712, 21.6333, 9.95409, 0.74", "-40.9067, 21.8778, 9.95409, 0.74", "-41.5807, 22.1462, 9.95409, 0.22", "-42.0126, 22.3179, 9.95409, 0.37", "-42.4295, 22.4957, 9.95409, 0.37" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-20.1222, 15.6728, -2.11071, 0.44", "-21.42, 15.1487, -2.39857, 0.44", "-22.31, 14.7676, -2.58275, 0.44", "-23.1514, 14.4032, -2.74463, 0.96", "-23.9459, 14.0385, -2.91025, 1.25", "-25.0372, 13.5074, -3.13139, 0.74", "-25.78, 13.1342, -3.26429, 0.59", "-26.4951, 12.762, -3.40251, 0.59", "-27.1741, 12.4075, -3.56314, 0.59", "-28.2316, 11.8784, -3.85949, 0.44", "-29.6458, 11.2115, -4.30692, 0.81", "-31.4225, 10.4275, -5.00177, 0.81", "-32.2697, 10.051, -5.44919, 0.81", "-33.103, 9.66687, -6.02389, 0.44", "-33.7334, 9.38904, -6.52097, 0.44", "-34.5322, 9.06876, -7.1606, 0.44", "-35.8055, 8.61559, -8.18974, 0.44", "-37.3431, 8.15505, -9.37693, 0.88", "-38.4976, 7.8597, -10.142, 0.88", "-39.6496, 7.60868, -10.7807, 0.52", "-41.507, 7.29688, -11.6129, 0.52", "-42.1869, 7.21372, -11.8518, 0.52", "-43.3612, 7.11112, -12.0795, 0.88", "-44.2494, 7.04632, -12.1456, 0.88", "-45.1976, 6.95193, -12.1569, 1.18", "-46.0885, 6.81156, -12.1419, 1.18", "-47.4236, 6.48566, -12.0344, 0.74", "-48.7983, 6.04287, -11.7817, 0.52", "-50.1414, 5.5385, -11.4267, 0.52", "-51.1851, 5.15252, -11.1094, 0.88", "-52.6035, 4.68219, -10.6557, 0.88", "-54.1466, 4.22376, -10.1533, 0.88", "-55.9742, 3.74188, -9.5651, 1.03", "-56.9578, 3.47701, -9.27909, 0.96", "-58.2545, 3.1231, -8.92011, 0.74", "-60.0264, 2.66668, -8.49089, 0.52", "-60.7561, 2.47697, -8.36365, 0.81", "-61.5836, 2.2393, -8.29975, 0.81", "-62.8728, 1.78045, -8.28811, 0.52", "-63.2927, 1.59527, -8.28602, 0.88", "-63.8031, 1.31757, -8.28456, 1.18", "-64.972, 0.662101, -8.27156, 1.18", "-66.42, -0.0790397, -8.23894, 0.59", "-67.0802, -0.382283, -8.21812, 0.74", "-67.8589, -0.694473, -8.18856, 0.74", "-68.9503, -1.10979, -8.09095, 0.44", "-69.7259, -1.40719, -7.9911, 0.44", "-70.4869, -1.71953, -7.87024, 0.74", "-71.3411, -2.09179, -7.76673, 0.74", "-72.146, -2.44392, -7.60764, 0.74", "-73.8839, -3.19872, -7.15541, 0.29", "-74.9762, -3.70377, -6.80644, 0.37", "-76.1145, -4.2812, -6.39787, 0.37", "-77.5169, -5.0243, -5.8596, 0.37", "-79.9834, -6.37101, -4.97195, 0.74", "-80.7594, -6.81793, -4.74025, 1.03", "-82.3905, -7.82533, -4.30783, 0.59", "-83.7605, -8.71045, -3.92143, 0.44", "-84.6301, -9.27956, -3.67484, 0.88", "-85.8425, -10.071, -3.35526, 0.74", "-87.0282, -10.8259, -3.19822, 0.37", "-88.4369, -11.593, -3.03701, 0.37", "-89.1723, -11.8803, -2.97604, 0.81", "-89.7885, -12.0206, -2.92503, 1.03", "-90.3771, -12.074, -2.85667, 1.03", "-91.1488, -12.0579, -2.73727, 0.66", "-92.3061, -11.9531, -2.58661, 0.37", "-93.37, -11.8271, -2.52527, 0.59", "-94.3239, -11.6955, -2.49471, 0.59", "-95.2411, -11.562, -2.4497, 0.37", "-96.2613, -11.4313, -2.35099, 0.66", "-97.0671, -11.3554, -2.31201, 0.88", "-97.4358, -11.3271, -2.3287, 0.88", "-99.1896, -11.1639, -2.56759, 0.29", "-100.263, -11.0645, -2.82029, 0.29", "-101.67, -10.9386, -3.30744, 0.29", "-103.815, -10.7829, -4.25308, 0.44", "-105.368, -10.7512, -5.05237, 0.44", "-105.991, -10.7948, -5.4318, 0.44", "-106.346, -10.8629, -5.69307, 0.59", "-107.013, -11.0296, -6.21863, 0.59", "-107.486, -11.159, -6.56556, 0.59", "-108.399, -11.4357, -7.06988, 0.37", "-109.16, -11.7028, -7.49696, 0.37", "-109.84, -11.9499, -7.90443, 0.66", "-110.489, -12.1994, -8.36381, 0.66", "-111.106, -12.4655, -8.84622, 0.66", "-112.232, -13.0004, -9.81036, 0.44", "-113.198, -13.4843, -10.6757, 0.66", "-113.751, -13.79, -11.2359, 0.66", "-115.128, -14.5768, -12.7355, 0.29", "-115.93, -15.0299, -13.6139, 0.29", "-116.653, -15.4338, -14.3879, 0.66", "-117.189, -15.711, -14.9097, 0.88", "-119.135, -16.6082, -16.6319, 0.44", "-119.818, -16.8844, -17.2216, 0.29", "-120.878, -17.2325, -17.9922, 0.29", "-121.714, -17.4865, -18.5399, 0.66", "-122.502, -17.7483, -19.0316, 0.66", "-123.095, -17.9797, -19.3373, 0.66", "-124.354, -18.5749, -20.027, 0.37", "-125.624, -19.2251, -20.8954, 0.29", "-126.12, -19.4678, -21.2886, 0.29", "-127.402, -20.0286, -22.4597, 0.29", "-128.604, -20.4768, -23.6584, 1.25", "-131.186, -21.178, -26.3476, 0.29", "-131.978, -21.3227, -27.2197, 0.29", "-132.432, -21.3642, -27.7429, 0.59", "-133.364, -21.3789, -28.7743, 0.44", "-133.899, -21.3523, -29.3084, 0.22", "-134.522, -21.2941, -29.8555, 0.81", "-136.241, -21.1169, -30.8485, 0.44", "-137.191, -21.0506, -31.2717, 0.59", "-137.747, -21.0286, -31.4672, 0.59", "-139.154, -20.9927, -31.7451, 0.29", "-140.386, -20.9588, -31.8446, 0.59", "-141.122, -20.9302, -31.7784, 0.59", "-142.496, -20.8523, -31.4548, 0.29", "-143.569, -20.7814, -31.1103, 0.29", "-145.416, -20.6122, -30.3482, 0.74", "-146.267, -20.5094, -29.9192, 0.74", "-147.717, -20.276, -29.1133, 0.37", "-148.775, -20.0251, -28.4919, 0.37", "-149.659, -19.7133, -27.9426, 0.44", "-150.633, -19.2408, -27.3608, 0.74", "-151.233, -18.8652, -27.0546, 0.74", "-151.913, -18.3579, -26.7536, 0.37", "-152.542, -17.7842, -26.5264, 0.59", "-153.25, -17.0177, -26.2802, 0.37", "-153.796, -16.3746, -26.1198, 0.29", "-154.18, -15.9018, -26.0231, 0.52", "-154.69, -15.2951, -25.9053, 0.74", "-155.484, -14.4411, -25.733, 0.29", "-155.915, -14.031, -25.6476, 0.74", "-156.534, -13.5066, -25.5425, 0.74", "-157.402, -12.8321, -25.4366, 0.29", "-158.306, -12.188, -25.3691, 0.29", "-159.227, -11.6106, -25.3586, 0.29", "-160.262, -11.0336, -25.3997, 0.29", "-161.295, -10.4955, -25.508, 0.29", "-162.394, -9.96628, -25.6944, 0.96", "-162.928, -9.73953, -25.8122, 0.96", "-164.527, -9.12747, -26.2178, 0.29", "-164.984, -8.97238, -26.3453, 0.66", "-165.93, -8.69713, -26.6089, 0.66", "-166.987, -8.43388, -26.8742, 0.29", "-167.787, -8.27864, -27.0215, 0.29", "-168.291, -8.19341, -27.1034, 0.66", "-168.844, -8.10664, -27.1789, 0.88", "-169.733, -7.9709, -27.2864, 0.66", "-170.387, -7.8419, -27.3643, 0.15", "-171.314, -7.59936, -27.4844, 0.15", "-172.195, -7.31621, -27.6265, 0.15", "-172.911, -7.04498, -27.7575, 0.81", "-173.508, -6.78633, -27.9106, 1.03", "-175.084, -6.088, -28.3924, 0.29", "-175.906, -5.72229, -28.6617, 0.81", "-176.533, -5.43031, -28.8943, 0.81", "-177.715, -4.89989, -29.3418, 0.29", "-178.924, -4.41492, -29.8769, 0.29", "-179.809, -4.12641, -30.2973, 0.29", "-180.886, -3.87495, -30.858, 0.29", "-181.635, -3.77611, -31.3737, 1.18", "-182.293, -3.77915, -31.9575, 1.18", "-183.247, -3.95676, -33.0724, 0.52", "-183.773, -4.1327, -33.7894, 0.88", "-184.239, -4.35074, -34.5534, 0.88", "-185.439, -5.07559, -36.8652, 0.44", "-185.988, -5.42018, -37.9598, 0.44", "-186.433, -5.67573, -38.8959, 0.74", "-186.715, -5.79758, -39.4781, 0.74", "-187.464, -6.0183, -40.9398, 0.44", "-188.038, -6.11639, -41.8903, 0.44", "-188.571, -6.14012, -42.5689, 0.88", "-189.125, -6.13376, -43.1784, 0.88", "-189.724, -6.11697, -43.7768, 0.88", "-190.912, -6.1335, -44.9789, 0.52", "-191.934, -6.21744, -46.0041, 0.52", "-192.557, -6.32866, -46.618, 0.59", "-193.209, -6.5189, -47.2602, 0.44", "-193.905, -6.76945, -47.9129, 0.44", "-194.792, -7.0761, -48.6873, 0.44", "-195.68, -7.33502, -49.4069, 0.88", "-196.259, -7.49224, -49.8754, 0.88", "-197.016, -7.69037, -50.4991, 0.37", "-197.807, -7.8508, -51.1622, 0.37", "-198.947, -8.0182, -52.0782, 0.59", "-200.396, -8.13533, -53.1546, 0.37", "-200.907, -8.16595, -53.5209, 0.74", "-201.804, -8.18306, -54.15, 0.74", "-203.296, -8.13557, -55.1242, 0.37", "-203.868, -8.1111, -55.4587, 0.59", "-205.221, -8.03144, -56.1433, 0.29", "-206.233, -7.94831, -56.5562, 0.29", "-207.162, -7.90725, -56.8813, 0.29", "-208.495, -7.89936, -57.2974, 0.59", "-208.941, -7.91455, -57.4168, 1.11", "-209.293, -7.93233, -57.5098, 1.4", "-210.374, -8.05348, -57.7768, 0.81", "-211.503, -8.23205, -58.0638, 0.37", "-212.532, -8.4871, -58.3374, 0.22", "-213.298, -8.7358, -58.5404, 0.22", "-214.554, -9.23254, -58.9174, 0.22", "-215.932, -9.88999, -59.3808, 0.22", "-216.204, -10.0438, -59.4833, 0.44", "-216.682, -10.3605, -59.6838, 0.44", "-217.17, -10.7519, -59.9442, 0.22", "-217.975, -11.4881, -60.505, 0.44", "-218.33, -11.8233, -60.834, 0.44", "-218.97, -12.3735, -61.4702, 0.22", "-219.614, -12.8501, -62.0599, 0.22", "-220.536, -13.4174, -62.82, 0.59", "-220.807, -13.5546, -63.0271, 0.59", "-222.537, -14.1969, -64.4218, 0.29", "-223.152, -14.4026, -64.9159, 0.29", "-224.082, -14.6743, -65.6546, 0.29", "-224.723, -14.8391, -66.1312, 0.81", "-225.301, -14.9673, -66.5176, 0.81", "-227.593, -15.3341, -68.0961, 0.59" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "166.65, 7.62807, 3.5946, 0.29", "167.827, 6.58703, 3.5946, 0.29", "168.583, 6.02393, 3.44992, 0.29", "169.713, 5.28878, 2.93352, 0.52", "170.003, 5.074, 2.8548, 0.52", "170.352, 4.79866, 2.79826, 0.37", "171.005, 4.28318, 2.6924, 0.52", "172.462, 3.26687, 2.42013, 0.37", "173.874, 2.30161, 2.12723, 0.88", "176.666, 0.255892, 1.53633, 0.29", "177.026, -0.0450177, 1.49678, 0.74" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "166.65, 7.62807, 3.5946, 0.29", "167.707, 8.38811, 3.04657, 0.29", "168.165, 8.64742, 2.84131, 0.44", "168.829, 9.00159, 2.57304, 0.44", "169.528, 9.38227, 2.32361, 0.74", "170.477, 9.91561, 2.015, 0.74", "171.412, 10.4607, 1.73222, 0.44", "172.45, 11.0386, 1.46408, 0.66", "172.987, 11.358, 1.33915, 0.66", "173.863, 11.999, 1.11641, 0.74", "174.25, 12.3513, 1.01237, 0.29", "174.671, 12.8218, 0.893375, 0.37", "175.17, 13.4247, 0.801768, 0.81", "175.444, 13.7612, 0.780911, 1.03", "176.834, 15.3805, 0.803417, 0.29", "177.615, 16.2635, 0.875858, 0.29", "178.755, 17.5368, 1.055, 0.29", "179.748, 18.6424, 1.22207, 0.29", "180.573, 19.5732, 1.34966, 1.03", "181.039, 20.117, 1.40002, 1.03", "181.523, 20.6829, 1.43221, 1.03", "181.921, 21.1584, 1.37089, 0.66", "182.724, 22.1699, 1.05766, 0.52", "183.193, 22.9143, 0.758872, 0.52", "183.61, 23.7289, 0.42665, 0.37", "184.002, 24.5615, 0.119513, 0.37", "184.316, 25.1778, -0.093445, 0.29", "184.876, 26.1665, -0.429802, 0.29", "185.644, 27.4252, -0.805562, 0.29", "185.942, 27.9335, -0.964206, 0.29", "186.298, 28.6389, -1.19675, 0.29", "186.728, 29.5819, -1.53799, 0.81", "187.194, 30.5378, -1.91376, 1.03", "187.542, 31.0713, -2.14505, 1.03", "188.342, 31.9909, -2.54606, 0.29", "188.995, 32.6793, -2.77383, 0.74", "189.363, 33.0662, -2.84984, 1.11", "189.802, 33.508, -2.87931, 1.11", "190.937, 34.5161, -2.84291, 0.29", "191.796, 35.1574, -2.78396, 0.29", "192.783, 35.7139, -2.73088, 0.29", "193.569, 36.074, -2.72181, 0.29", "194.241, 36.3456, -2.75119, 0.74", "195.024, 36.646, -2.85147, 0.74", "196.075, 37.0192, -3.0726, 0.37", "197.42, 37.4483, -3.44427, 0.96", "197.963, 37.6207, -3.64627, 0.96", "198.924, 37.9295, -4.06805, 0.29", "199.931, 38.3132, -4.61266, 0.29", "200.311, 38.4774, -4.83916, 0.59", "200.888, 38.7771, -5.21864, 0.59", "201.924, 39.4414, -5.93043, 0.29", "202.55, 39.8655, -6.37751, 0.29", "203.678, 40.6467, -7.24736, 1.18" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-0.177789, -22.7695, 8.82083, 1.03", "1.10997, -25.7954, 9.69225, 1.03", "2.06306, -27.6901, 10.2227, 1.03", "2.69369, -28.8062, 10.5278, 0.74", "3.57858, -30.2207, 10.8927, 0.74", "4.23857, -31.238, 11.1352, 1.03", "4.79561, -32.1117, 11.3231, 1.25", "5.26179, -32.819, 11.51, 1.33", "5.49618, -33.2325, 11.5666, 1.62", "5.93211, -34.1635, 11.6505, 1.62", "6.29339, -35.1398, 11.6978, 1.62", "6.70348, -36.5893, 11.7445, 1.47", "7.00554, -38.0136, 11.8208, 0.59", "7.21664, -39.4015, 11.8978, 0.59", "7.35475, -40.6717, 11.9667, 0.88", "7.43907, -41.6018, 12.0141, 1.25", "7.53261, -42.424, 12.0461, 1.55", "7.71465, -43.7644, 12.0807, 1.55", "7.92368, -45.135, 12.1005, 0.96", "8.12398, -46.4219, 12.113, 0.74", "8.22155, -47.1336, 12.1176, 0.74", "8.40143, -48.4506, 12.1178, 0.74", "8.59873, -49.8971, 12.1034, 1.33", "8.87985, -51.7964, 12.0511, 1.18", "9.13052, -53.3992, 12.0427, 1.18", "9.25408, -54.3304, 12.0456, 1.62" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.177789, -22.7695, 8.82083, 1.03", "-0.289653, -24.1902, 11.7548, 1.03", "-0.358022, -25.1989, 13.6014, 1.03", "-0.539385, -27.0094, 16.6909, 0.81", "-0.757689, -28.7519, 19.5835, 0.66", "-0.83808, -29.3582, 20.5487, 0.66", "-0.915501, -29.9607, 21.4547, 0.66", "-0.95458, -30.8368, 22.5836, 0.52", "-0.932081, -31.8604, 23.688, 0.52", "-0.858996, -33.2094, 24.821, 0.81", "-0.77981, -34.1905, 25.4644, 0.66", "-0.719525, -35.0482, 25.9704, 0.96", "-0.587839, -36.9688, 27.0416, 0.52", "-0.443621, -38.1361, 27.6474, 1.11", "-0.264557, -39.1892, 28.0853, 1.03", "-0.127521, -39.9946, 28.3355, 0.88", "-0.0342072, -40.6675, 28.5206, 0.88", "0.0125242, -41.7725, 28.7952, 0.52" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "4.30803, 41.2081, 12.9061, 0.74", "5.1762, 43.569, 15.2498, 0.74", "5.60413, 44.9582, 16.4849, 0.59", "5.83296, 45.8994, 17.2589, 0.59", "6.12494, 47.5108, 18.4468, 0.59", "6.28202, 48.6937, 19.215, 0.59", "6.4045, 49.9116, 19.8984, 0.59", "6.56974, 52.1935, 20.7618, 0.66", "6.62454, 53.2208, 21.0582, 0.66", "6.60151, 54.7509, 21.4023, 1.03", "6.51103, 56.196, 21.631, 1.03", "6.34674, 57.9434, 21.811, 0.44", "6.24985, 58.7398, 21.7955, 0.59", "6.05227, 59.9832, 21.5272, 0.59", "5.8676, 61.0171, 21.1739, 1.11", "5.78538, 61.4862, 20.9597, 1.33", "5.68168, 62.1955, 20.5979, 1.33", "5.52325, 63.7053, 19.7785, 0.81", "5.54191, 64.9315, 19.1613, 0.44", "5.7921, 65.9262, 18.6762, 0.44", "6.27804, 66.9208, 18.1007, 0.74", "6.87047, 67.8701, 17.5274, 0.66", "7.19577, 68.3313, 17.2464, 0.66", "7.86596, 69.3945, 16.6798, 0.52", "8.52394, 70.6906, 16.0091, 0.37", "9.14808, 72.3785, 15.137, 0.37", "9.34946, 73.1248, 14.8221, 0.37", "9.61999, 74.3867, 14.4137, 0.37", "10.0521, 76.4473, 13.9371, 0.37", "10.3439, 77.7124, 13.8706, 0.88", "10.5907, 78.5286, 14.0229, 0.88", "11.2008, 80.1837, 14.6555, 0.74", "11.6376, 81.2383, 15.2033, 0.59", "12.1797, 82.4374, 16.0452, 0.59", "13.1284, 84.3662, 17.7056, 0.81", "13.8155, 85.7868, 19.0727, 0.59", "14.0996, 86.466, 19.7574, 0.59", "14.3031, 87.1151, 20.4128, 1.11", "14.5007, 88.2064, 21.4796, 0.88", "14.5378, 89.1718, 22.3252, 0.88", "14.4911, 90.2981, 23.0394, 0.74", "14.4339, 91.4605, 23.604, 0.59", "14.4301, 92.3648, 23.9638, 0.44", "14.4699, 93.2854, 24.2325, 0.81", "14.5473, 94.1902, 24.3934, 1.03", "14.688, 95.774, 24.5793, 0.52", "14.7593, 96.6444, 24.6423, 0.52", "14.8248, 97.5158, 24.6947, 0.96", "14.8778, 98.5155, 24.7613, 0.96", "14.8887, 99.5441, 24.8337, 0.66", "14.8378, 101.005, 24.9381, 0.37", "14.7698, 101.923, 25.001, 0.37", "14.7332, 102.541, 25.0376, 0.37", "14.6838, 103.623, 25.0998, 0.37", "14.6682, 104.493, 25.1481, 0.66", "14.7087, 105.42, 25.1942, 0.66", "14.8382, 106.303, 25.2398, 0.81", "15.0266, 107.252, 25.3178, 0.52", "15.2047, 108.199, 25.4184, 0.37", "15.299, 108.993, 25.516, 0.37", "15.3274, 109.648, 25.6006, 0.66", "15.3129, 110.619, 25.7223, 0.66", "15.3037, 111.749, 25.8488, 0.37", "15.3351, 112.452, 25.9131, 0.37", "15.5292, 113.815, 26.0051, 0.96", "15.667, 114.497, 26.0456, 1.33", "15.8663, 115.41, 26.081, 1.33", "16.166, 116.717, 26.1504, 1.03", "16.4736, 117.909, 26.2285, 0.74", "16.7937, 119.032, 26.3333, 0.44", "17.0374, 119.875, 26.4388, 0.44", "17.2619, 120.687, 26.5357, 0.44", "17.629, 122.168, 26.6938, 0.66", "17.7771, 122.871, 26.7818, 0.96", "17.8354, 123.246, 26.8287, 0.96", "18.0193, 124.647, 26.9355, 0.52", "18.171, 125.823, 26.9718, 0.52", "18.3584, 127.167, 26.9632, 0.52", "18.5449, 128.271, 26.8988, 0.52", "18.8773, 130.126, 26.8551, 0.74", "19.0717, 131.311, 26.8991, 0.52", "19.2006, 132.17, 26.9842, 0.52", "19.3392, 133.123, 27.1323, 0.52", "19.532, 134.291, 27.279, 0.81", "19.8473, 135.952, 27.4013, 0.81", "20.0748, 137.025, 27.4605, 0.59", "20.25, 137.913, 27.4634, 0.37", "20.4607, 139.008, 27.45, 0.37", "20.7648, 140.707, 27.4009, 0.37", "20.9137, 141.559, 27.3574, 0.52", "21.1387, 142.536, 27.2791, 0.52", "21.5771, 144.154, 27.1812, 0.52", "22.0494, 145.871, 27.1678, 0.74", "22.3546, 146.971, 27.2242, 0.96", "22.6758, 148.13, 27.3545, 0.37", "23.0328, 149.421, 27.5222, 0.29", "23.2721, 150.232, 27.6361, 0.29", "23.6253, 151.409, 27.7989, 0.81", "23.7697, 151.922, 27.8171, 0.81", "23.9005, 152.489, 27.8333, 0.96", "23.9586, 152.947, 27.8484, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "4.30803, 41.2081, 12.9061, 0.66", "3.64321, 42.9092, 10.6621, 0.66", "3.20332, 43.8913, 9.26765, 0.66", "3.01738, 44.3724, 8.56302, 0.66", "2.7721, 45.1143, 7.45483, 0.52", "2.41269, 46.2278, 5.79571, 0.81", "2.26745, 46.7663, 5.03072, 0.81", "2.14175, 47.5704, 3.93934, 0.59", "2.09181, 48.4289, 2.68921, 0.59", "2.09984, 49.1362, 1.63782, 0.44", "2.11922, 49.6049, 0.998491, 0.44", "2.19683, 50.5084, -0.0998989, 0.96", "2.26682, 51.0238, -0.745031, 1.18", "2.48315, 52.2986, -2.40493, 0.88", "2.68014, 53.3076, -3.76318, 0.37", "2.86312, 53.9623, -4.68294, 1.03", "3.11853, 54.6131, -5.63954, 1.03", "3.63149, 55.6973, -7.40108, 0.52", "3.85949, 56.1289, -8.10015, 0.52", "4.04464, 56.4581, -8.62374, 0.81", "4.26198, 56.8718, -9.29181, 0.81", "4.4413, 57.3205, -10.0441, 0.74", "4.63536, 58.4144, -11.7472, 1.03", "4.57576, 59.0679, -12.6937, 1.03", "4.2455, 59.939, -13.9969, 0.59", "3.92957, 60.494, -14.8388, 0.81", "3.48547, 61.0514, -15.7826, 0.81", "3.29433, 61.2446, -16.1299, 0.66", "2.93553, 61.567, -16.719, 0.66", "2.02177, 62.3157, -18.2187, 0.52", "1.42432, 62.7921, -19.2143, 0.37", "0.423747, 63.6693, -21.1136, 0.29", "0.207819, 63.8641, -21.5526, 0.29", "-0.142524, 64.1707, -22.2653, 0.29", "-0.520775, 64.5098, -23.0177, 0.29", "-1.15374, 65.0754, -24.0942, 0.81", "-1.70455, 65.5781, -24.9287, 0.81", "-2.56011, 66.4923, -26.1175, 0.59", "-2.74503, 66.7069, -26.3674, 0.59", "-3.23433, 67.3212, -26.9577, 0.29", "-3.69116, 67.9411, -27.7903, 0.52", "-3.76549, 68.0435, -27.973, 0.81", "-4.00333, 68.3482, -28.6367, 0.81", "-4.28519, 68.6794, -29.5084, 0.74", "-4.42708, 68.809, -29.9414, 0.88", "-6.28622, 70.0583, -35.433, 0.88", "-6.82988, 70.3145, -36.9478, 0.66", "-7.20685, 70.45, -37.9, 0.88", "-7.80002, 70.6148, -39.2802, 0.96", "-8.283, 70.7444, -40.2702, 0.52", "-8.6739, 70.8564, -40.9326, 0.74", "-9.66863, 71.1858, -41.9141, 0.44", "-10.247, 71.4371, -42.3924, 0.29", "-10.7992, 71.7213, -42.7866, 0.29", "-11.7674, 72.2226, -43.3846, 1.18", "-12.1946, 72.4257, -43.6507, 1.92", "-12.9995, 72.6918, -44.2304, 1.47", "-14.1816, 72.929, -45.1528, 0.37", "-14.7048, 72.9629, -45.576, 0.29", "-15.7118, 72.8731, -46.356, 0.29", "-16.8771, 72.584, -47.2605, 0.29", "-18.586, 71.8574, -48.6961, 0.29", "-19.4355, 71.3476, -49.4404, 0.29", "-20.088, 70.9071, -50.0285, 0.29", "-20.9127, 70.3851, -50.8058, 0.29", "-21.4748, 70.0946, -51.3289, 0.29", "-22.771, 69.5825, -52.5054, 0.29", "-23.3705, 69.3725, -53.065, 0.29", "-24.2977, 69.1608, -54.0135, 0.29", "-24.8039, 69.1627, -54.5401, 0.52", "-25.3412, 69.3107, -55.0637, 0.52", "-26.172, 69.6908, -55.79, 0.52", "-27.1085, 70.2491, -56.5199, 0.66", "-27.5925, 70.5666, -56.8838, 0.96", "-28.0468, 70.8713, -57.1986, 1.18", "-29.37, 71.8536, -58.0769, 0.52", "-30.2404, 72.6071, -58.7034, 0.29", "-30.6884, 73.0815, -59.0782, 0.52", "-30.8618, 73.32, -59.2501, 0.74", "-31.2007, 73.8462, -59.6376, 0.74", "-31.7645, 74.7393, -60.3292, 0.44", "-32.3505, 75.6693, -61.1044, 0.44", "-32.9705, 76.616, -61.9513, 0.37", "-33.4853, 77.3273, -62.6164, 0.37", "-34.1447, 78.0963, -63.4186, 0.37", "-35.0479, 79.068, -64.5919, 0.37", "-35.6525, 79.6653, -65.3591, 0.88", "-35.8205, 79.8241, -65.5537, 0.88", "-36.4261, 80.3453, -66.1642, 0.66", "-37.5214, 81.1902, -67.1323, 0.96", "-38.939, 82.1211, -68.064, 0.81", "-39.9108, 82.6156, -68.4787, 1.11", "-41.0346, 83.0422, -68.7286, 0.59", "-42.4498, 83.5177, -68.9115, 0.59", "-43.3755, 83.8285, -68.9387, 0.74", "-44.595, 84.2394, -68.8595, 0.52", "-45.2674, 84.4455, -68.7999, 0.52", "-46.2156, 84.7517, -68.7714, 0.52", "-47.2046, 85.112, -68.7888, 0.52", "-48.0391, 85.5207, -68.8931, 0.52", "-49.2836, 86.2949, -69.1379, 1.33", "-49.8254, 86.7178, -69.2668, 2.28", "-50.4653, 87.2575, -69.4337, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "9.25408, -54.3304, 12.0456, 0.59", "10.3217, -54.9707, 12.9349, 0.59", "10.8613, -55.3547, 13.3486, 0.59", "12.5927, -56.9041, 14.6562, 0.44", "12.8995, -57.263, 14.9169, 0.44", "13.3395, -57.87, 15.3127, 0.44", "13.9104, -58.7476, 15.8727, 0.44", "14.2128, -59.3487, 16.2099, 0.44", "14.6142, -60.2443, 16.6959, 0.44", "15.1252, -61.442, 17.3159, 0.44", "15.3895, -62.1101, 17.7399, 0.81", "15.8317, -63.3098, 18.6524, 0.59", "15.9528, -63.648, 18.9455, 0.59", "16.2834, -64.584, 19.9693, 0.29", "16.4021, -65.0007, 20.4828, 0.29", "16.6248, -66.1461, 21.8769, 0.29", "16.6779, -66.8642, 22.6674, 0.29", "16.6292, -67.6744, 23.4578, 1.03", "16.2155, -70.0861, 25.4272, 1.11", "15.9504, -71.0972, 26.1851, 1.33", "15.5807, -72.2549, 26.9252, 0.66", "14.7266, -74.3772, 27.6294, 0.15", "14.3717, -75.0167, 27.4234, 0.15", "13.9771, -75.6076, 26.8608, 0.15" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "9.25408, -54.3304, 12.0456, 1.33", "8.95409, -55.6744, 11.7956, 1.33" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-50.4653, 87.2575, -69.4337, 0.37", "-51.9651, 87.4991, -70.307, 0.37", "-52.638, 87.557, -70.7084, 0.37", "-53.5499, 87.5304, -71.2633, 0.37", "-54.5463, 87.3665, -71.9878, 0.88", "-54.9669, 87.2782, -72.3203, 0.88", "-55.686, 87.145, -72.9014, 0.52", "-56.2263, 87.0575, -73.3852, 0.29", "-56.8951, 86.9947, -74.0621, 0.29", "-57.8347, 87.045, -75.1251, 0.37", "-58.1527, 87.1593, -75.4843, 0.37", "-58.6449, 87.4617, -76.0357, 0.37", "-59.1556, 87.8331, -76.5289, 0.37", "-60.0535, 88.4557, -77.3484, 0.66", "-60.6229, 88.794, -77.8293, 0.66", "-61.4978, 89.1756, -78.4626, 0.37", "-62.0892, 89.3478, -78.8543, 0.29", "-63.1809, 89.5449, -79.5065, 0.29", "-64.3058, 89.6803, -80.0273, 0.29", "-65.3549, 89.7652, -80.3604, 0.29", "-66.4908, 89.8569, -80.6978, 0.29", "-67.2914, 89.9424, -80.9365, 0.88", "-67.7112, 90.0079, -81.072, 1.03", "-68.9261, 90.3364, -81.5536, 0.29", "-69.8894, 90.6891, -81.9772, 0.29", "-71.1733, 91.1515, -82.6497, 0.96", "-71.7624, 91.344, -83.0245, 1.25", "-71.9826, 91.4043, -83.2043, 1.47", "-72.9619, 91.5974, -84.0682, 0.96", "-73.7628, 91.7257, -85.0465, 0.52", "-74.6864, 91.9181, -86.3572, 0.44", "-75.3891, 92.0885, -87.4163, 0.44", "-76.531, 92.4094, -89.241, 1.11", "-76.9635, 92.5626, -89.9521, 1.11", "-79.2585, 93.5758, -93.8277, 0.29", "-79.8006, 93.8598, -94.8208, 0.29", "-80.1609, 94.0622, -95.5385, 0.96", "-80.5152, 94.247, -96.2279, 1.18", "-81.1369, 94.5624, -97.2815, 0.88", "-81.8705, 94.8927, -98.3641, 0.52", "-82.3819, 95.0267, -98.962, 0.52", "-82.9755, 95.0839, -99.6965, 0.52", "-84.1753, 95.0987, -101.328, 0.37", "-84.8285, 95.0893, -102.231, 0.37", "-85.5214, 95.0826, -103.189, 0.37", "-86.4864, 95.1021, -104.519, 0.37", "-87.2024, 95.157, -105.473, 0.37", "-87.9987, 95.2198, -106.504, 0.37", "-88.553, 95.1606, -107.282, 1.11", "-88.7213, 95.1171, -107.559, 1.47" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-50.4653, 87.2575, -69.4337, 0.29", "-51.5303, 90.4686, -71.4446, 0.29", "-51.9146, 91.5073, -71.9435, 0.29", "-52.1534, 92.1525, -72.1996, 0.29", "-52.7554, 93.6114, -72.7595, 0.29", "-52.9635, 94.075, -72.9229, 0.52", "-53.344, 94.8817, -73.1716, 0.37", "-53.7402, 95.5554, -73.2345, 0.66", "-53.9923, 95.9408, -73.2472, 0.81", "-54.8444, 97.2114, -73.2033, 0.29", "-55.5064, 98.1541, -73.124, 0.52", "-55.9374, 98.7254, -73.0516, 0.74", "-56.9618, 99.9472, -72.8217, 0.29", "-57.8817, 100.958, -72.5515, 0.29", "-58.4225, 101.489, -72.3419, 1.25", "-58.753, 101.803, -72.173, 1.84", "-59.1659, 102.173, -71.9379, 1.84", "-60.6515, 103.344, -71.0807, 0.29", "-61.1497, 103.682, -70.7773, 0.29", "-62.7312, 104.54, -69.7215, 0.29", "-63.412, 104.867, -69.1954, 0.52", "-63.8031, 105.046, -68.8559, 0.29", "-64.7387, 105.489, -67.9271, 0.29", "-65.194, 105.723, -67.4093, 0.29", "-66.3912, 106.402, -66.0352, 0.88", "-67.4935, 106.996, -64.8089, 0.29", "-67.9614, 107.232, -64.3346, 0.29", "-68.8555, 107.718, -63.4814, 0.81", "-69.3074, 108.014, -63.0513, 0.81", "-69.9955, 108.535, -62.3864, 0.37", "-70.8489, 109.277, -61.5705, 0.29", "-71.3743, 109.748, -61.0572, 0.29", "-71.941, 110.289, -60.4788, 0.29", "-72.379, 110.745, -59.9995, 0.29", "-73.3424, 111.888, -58.8164, 0.88", "-73.5642, 112.186, -58.5002, 1.25", "-73.9493, 112.715, -57.9523, 1.25", "-74.5022, 113.447, -57.2986, 0.29", "-75.0118, 114.055, -56.8538, 0.22", "-75.6599, 114.738, -56.5384, 0.88", "-76.5719, 115.664, -56.4379, 0.88", "-77.2928, 116.382, -56.3981, 0.59", "-79.4979, 118.514, -56.3658, 0.59", "-79.8775, 118.879, -56.3769, 0.59", "-80.7357, 119.686, -56.4197, 0.29", "-81.5061, 120.407, -56.4361, 0.37", "-82.7166, 121.509, -56.368, 0.37", "-83.4402, 122.15, -56.217, 0.37", "-83.7549, 122.427, -56.1124, 0.44", "-84.0337, 122.66, -56.0354, 0.44", "-84.9428, 123.361, -55.8507, 0.22", "-85.6267, 123.87, -55.7712, 0.37", "-86.4104, 124.412, -55.7514, 0.29", "-87.3087, 124.991, -55.7424, 0.29", "-88.3375, 125.607, -55.7321, 0.29", "-89.386, 126.22, -55.7219, 0.29", "-90.0604, 126.645, -55.7154, 0.29", "-90.8506, 127.223, -55.7031, 0.29", "-91.6143, 127.904, -55.6946, 0.52", "-91.9193, 128.269, -55.6934, 0.74", "-92.374, 129.038, -55.6335, 0.52", "-92.9363, 130.195, -55.4644, 0.29", "-93.243, 130.854, -55.3429, 0.29", "-93.5047, 131.395, -55.2428, 0.37", "-93.7737, 131.868, -55.1516, 0.37", "-94.6876, 133.15, -54.8914, 0.59", "-95.4184, 133.983, -54.7184, 0.29", "-96.8261, 135.352, -54.4427, 0.29", "-98.4679, 136.795, -54.1872, 0.29", "-99.2225, 137.438, -54.081, 0.29", "-100.1, 138.166, -53.9914, 0.29", "-100.831, 138.755, -53.9722, 0.59", "-101.517, 139.253, -53.9556, 0.59", "-102.779, 139.949, -53.9222, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "8.95409, -55.6744, 11.7956, 0.74", "9.49048, -57.6113, 11.7421, 0.74", "9.82471, -58.6818, 11.7538, 0.74", "10.2052, -59.9317, 11.8289, 0.96", "10.5673, -61.0892, 12.0167, 0.74", "10.9971, -62.4327, 12.2997, 0.59", "11.3233, -63.4521, 12.5143, 0.59", "11.8239, -64.8936, 12.9166, 0.59", "12.4507, -66.6249, 13.4841, 0.52", "13.2943, -68.8614, 14.3222, 0.52", "13.51, -69.4707, 14.5789, 1.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "8.95409, -55.6744, 11.7956, 0.59", "8.02769, -56.7448, 11.821, 0.59", "7.35983, -57.415, 11.9872, 0.88", "6.57664, -58.1586, 12.2865, 0.88", "5.66176, -59.0106, 12.6722, 0.59", "4.40412, -60.0992, 13.1913, 0.59", "3.85437, -60.5862, 13.4489, 1.4", "2.87755, -61.4579, 14.0148, 1.4", "2.02306, -62.2221, 14.536, 1.03", "1.43738, -62.7294, 14.8821, 1.55", "0.749706, -63.3202, 15.2522, 1.55", "-0.36634, -64.3251, 15.7217, 1.03", "-1.00059, -64.9322, 15.9506, 0.81", "-1.84486, -65.7737, 16.2251, 0.81", "-2.54731, -66.4868, 16.4014, 0.37", "-3.07203, -67.0109, 16.4752, 0.37", "-3.2013, -67.1363, 16.482, 0.96", "-3.56831, -67.4801, 16.4732, 1.4", "-5.14112, -69.0702, 16.4077, 0.59", "-6.40135, -70.3908, 16.3463, 0.52", "-7.38345, -71.4047, 16.2947, 0.52", "-8.53316, -72.5007, 16.2307, 0.37", "-9.49325, -73.335, 16.1379, 0.29", "-10.6308, -74.2339, 15.9328, 1.25", "-10.9311, -74.4527, 15.8499, 1.4", "-11.9493, -75.1748, 15.5756, 0.52", "-12.7174, -75.6909, 15.3532, 0.81", "-13.71, -76.2643, 15.0169, 1.03", "-15.0921, -76.8698, 14.5614, 0.52", "-15.957, -77.1869, 14.3007, 0.52", "-16.6429, -77.4712, 14.1311, 0.37", "-17.6298, -78.0349, 14.0261, 0.29", "-17.9359, -78.2609, 14.0474, 0.74", "-18.5263, -78.7325, 14.1963, 1.03", "-18.8937, -79.009, 14.3254, 0.81", "-19.7129, -79.5817, 14.6015, 0.59", "-20.9605, -80.4314, 14.998, 0.37", "-21.5396, -80.8259, 15.1196, 0.29", "-22.0362, -81.1015, 15.1768, 0.29", "-22.5054, -81.3113, 15.1812, 0.96", "-23.0135, -81.4898, 15.1047, 0.96", "-23.6555, -81.6781, 14.9343, 0.81", "-24.8503, -82.0723, 14.5773, 0.44", "-25.5045, -82.3946, 14.4029, 0.29", "-26.3173, -82.9659, 14.226, 0.29", "-27.1761, -83.7441, 14.0936, 1.4", "-27.6643, -84.2651, 14.0497, 1.4", "-28.5174, -85.2775, 14.0667, 0.44", "-28.9786, -85.8652, 14.1296, 0.29", "-29.2731, -86.2525, 14.1941, 0.88", "-29.8515, -86.9967, 14.3398, 0.96", "-30.3221, -87.5754, 14.4643, 0.59", "-31.1561, -88.5874, 14.6607, 0.44", "-31.9759, -89.5857, 14.8468, 0.37", "-32.7985, -90.5524, 15.0283, 0.22", "-33.5338, -91.3693, 15.1755, 0.59", "-34.2419, -92.1055, 15.2968, 0.29", "-34.4611, -92.316, 15.3247, 0.74", "-34.9098, -92.6924, 15.351, 0.96", "-35.417, -93.0412, 15.3614, 0.59", "-36.2918, -93.5341, 15.354, 0.44", "-36.8936, -93.8516, 15.356, 0.74", "-37.4091, -94.1366, 15.356, 0.96", "-38.4856, -94.7903, 15.356, 0.37", "-39.2792, -95.3623, 15.356, 0.29", "-39.7803, -95.8121, 15.3254, 0.29", "-40.3351, -96.4099, 15.2498, 0.52", "-40.67, -96.807, 15.1798, 0.52", "-40.9717, -97.1508, 15.1374, 0.52", "-41.7031, -97.8547, 15.0925, 0.52", "-42.6086, -98.5647, 15.0958, 0.52", "-43.0059, -98.7977, 15.1144, 0.88", "-43.8399, -99.1662, 15.1778, 0.88", "-45.4274, -99.7069, 15.2564, 0.37", "-46.5518, -100.046, 15.2474, 0.29", "-47.1217, -100.225, 15.2177, 0.96", "-48.0566, -100.592, 15.1229, 1.03", "-49.1142, -101.14, 14.9233, 0.52", "-50.015, -101.762, 14.5989, 0.52", "-50.8842, -102.534, 14.1257, 0.52", "-51.6879, -103.428, 13.5762, 0.52", "-52.3015, -104.226, 13.0974, 0.52", "-53.0884, -105.404, 12.4201, 0.44", "-53.8511, -106.705, 11.6681, 0.74", "-54.2845, -107.554, 11.1882, 0.81", "-54.7267, -108.497, 10.6337, 0.52", "-54.9701, -109.026, 10.2968, 0.88", "-55.1487, -109.41, 10.0503, 0.88", "-55.7656, -110.722, 9.23751, 0.44", "-56.3505, -111.789, 8.57197, 0.37", "-56.6215, -112.255, 8.26752, 0.37", "-57.1278, -113.094, 7.70591, 0.37", "-57.5473, -113.765, 7.27171, 0.59", "-57.9462, -114.361, 6.9165, 0.59", "-59.1014, -115.854, 6.15949, 0.29", "-59.6213, -116.461, 5.88432, 0.29", "-60.0859, -117.001, 5.64753, 0.59", "-60.7615, -117.839, 5.28052, 0.59", "-61.2098, -118.417, 5.0333, 0.37", "-61.869, -119.271, 4.71294, 0.37", "-62.3081, -119.804, 4.56409, 0.81", "-62.6636, -120.199, 4.44856, 0.81", "-63.1534, -120.698, 4.27475, 0.81", "-63.8204, -121.427, 3.9196, 0.37", "-64.2971, -122.011, 3.59445, 0.37", "-64.882, -122.757, 3.15701, 0.66", "-65.2082, -123.144, 2.92254, 0.96", "-65.8659, -123.837, 2.4838, 0.96", "-66.9369, -124.799, 1.77589, 0.29", "-67.4448, -125.19, 1.38133, 0.29", "-68.11, -125.707, 0.789868, 0.44", "-68.3876, -125.944, 0.533904, 0.81", "-68.8056, -126.353, 0.0998642, 0.81", "-69.1983, -126.773, -0.350776, 0.81", "-70.2559, -127.864, -1.54374, 0.52", "-70.7685, -128.41, -2.14776, 0.59", "-71.3723, -129.121, -2.90919, 0.59", "-72.3606, -130.334, -4.09685, 0.29", "-72.9986, -131.143, -4.82422, 0.96", "-73.3864, -131.626, -5.22125, 1.25", "-73.6403, -131.911, -5.43865, 1.25", "-74.6273, -132.825, -6.12631, 0.37", "-75.338, -133.4, -6.53025, 0.37", "-75.9636, -133.859, -6.77938, 1.03", "-76.5603, -134.269, -6.96972, 1.25", "-77.1874, -134.665, -7.14235, 1.25", "-78.4196, -135.332, -7.34614, 0.29", "-79.0767, -135.618, -7.37356, 0.44", "-79.7629, -135.879, -7.36125, 0.59", "-80.6431, -136.183, -7.35146, 0.59", "-81.7141, -136.527, -7.36474, 0.29", "-83.0579, -136.937, -7.45769, 0.29", "-84.3541, -137.349, -7.64677, 0.29", "-85.1866, -137.635, -7.80852, 0.29", "-86.5179, -138.153, -8.14293, 0.81", "-86.9488, -138.338, -8.26984, 0.81", "-88.286, -138.98, -8.71037, 0.52", "-89.5524, -139.675, -9.10413, 0.52", "-90.6344, -140.348, -9.35711, 0.44", "-91.3835, -140.865, -9.42286, 0.81", "-92.3044, -141.557, -9.31346, 0.81", "-92.9049, -142.056, -9.0773, 0.81", "-93.9899, -143.024, -8.3661, 0.37", "-94.441, -143.453, -7.9625, 0.37", "-95.0414, -144.048, -7.34556, 0.81", "-95.7134, -144.708, -6.62573, 0.81", "-97.0243, -145.926, -5.227, 0.44", "-97.6497, -146.404, -4.60452, 0.37", "-98.334, -146.863, -3.98726, 0.29", "-98.8653, -147.205, -3.55128, 0.29", "-99.3948, -147.567, -3.15574, 0.74", "-100.283, -148.274, -2.47482, 0.29", "-101.459, -149.329, -1.60101, 0.29", "-102.094, -149.942, -1.12591, 0.66", "-102.714, -150.558, -0.699929, 0.81", "-103.332, -151.249, -0.281319, 0.81", "-104.499, -152.673, 0.447586, 0.44", "-105.012, -153.347, 0.71466, 0.29", "-105.768, -154.378, 1.05567, 0.29", "-106.326, -155.073, 1.28743, 0.29", "-106.948, -155.801, 1.52676, 0.29", "-107.425, -156.307, 1.662, 0.96", "-107.958, -156.839, 1.68603, 1.25" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-88.7213, 95.1171, -107.559, 0.37", "-89.9977, 94.2848, -107.48, 0.37", "-91.0722, 93.7013, -107.349, 0.37", "-92.8331, 92.9813, -107.073, 0.37", "-93.7861, 92.6992, -106.908, 0.22", "-94.6759, 92.5119, -106.751, 0.22", "-96.0863, 92.2874, -106.504, 0.37", "-96.8516, 92.2863, -106.358, 0.37", "-97.9213, 92.3922, -106.154, 0.22", "-98.8644, 92.5533, -106.038, 0.22", "-99.6674, 92.6839, -106.011, 0.81", "-100.11, 92.7298, -106.033, 0.88", "-100.768, 92.7371, -106.121, 0.66", "-102.011, 92.7, -106.316, 0.29", "-103.659, 92.636, -106.584, 0.29", "-104.788, 92.6154, -106.771, 0.29", "-106.322, 92.6171, -107.037, 0.29", "-108.288, 92.6373, -107.375, 0.29", "-109.212, 92.6503, -107.534, 0.66", "-109.938, 92.6582, -107.656, 0.88", "-110.297, 92.6543, -107.718, 0.88", "-111.313, 92.6472, -107.917, 0.29", "-112.241, 92.6143, -108.118, 0.29", "-113.371, 92.5421, -108.38, 1.33", "-113.791, 92.4975, -108.487, 1.77", "-115.539, 92.327, -108.957, 0.29", "-116.748, 92.2208, -109.295, 0.29", "-118.283, 92.1005, -109.722, 0.29", "-119.032, 92.0652, -109.919, 0.29", "-119.804, 92.0719, -110.059, 0.74", "-121.051, 92.1303, -110.15, 0.29", "-122.398, 92.2523, -110.024, 0.29", "-123.585, 92.3966, -109.771, 0.81", "-124.212, 92.4781, -109.583, 0.81", "-126.161, 92.7446, -108.828, 0.22", "-127.435, 92.9053, -108.267, 0.22", "-128.807, 93.0257, -107.645, 0.88", "-129.575, 93.0762, -107.327, 1.18", "-131.283, 93.116, -106.769, 0.29", "-132.341, 93.0597, -106.537, 0.29", "-133.944, 92.8456, -106.343, 0.29", "-135.308, 92.6322, -106.265, 0.29", "-136.612, 92.4352, -106.257, 0.81", "-138.306, 92.2585, -106.28, 0.22", "-139.692, 92.2085, -106.33, 0.22", "-140.568, 92.2402, -106.387, 0.29", "-141.848, 92.4586, -106.486, 0.29", "-142.917, 92.7754, -106.494, 0.29", "-144.093, 93.2383, -106.396, 0.52", "-144.868, 93.6099, -106.276, 0.59", "-145.903, 94.1877, -106.052, 0.29", "-146.451, 94.5225, -105.913, 0.29", "-147.987, 95.4421, -105.421, 0.29", "-148.879, 95.9191, -105.11, 0.29", "-149.902, 96.3761, -104.726, 0.59", "-150.863, 96.7597, -104.407, 0.74", "-152.203, 97.2933, -104.107, 0.44", "-153.263, 97.7233, -103.997, 1.55", "-153.96, 97.9884, -104.042, 1.99", "-155.861, 98.5377, -104.343, 0.29", "-157.146, 98.747, -104.641, 0.29", "-158.919, 98.8611, -105.186, 0.29", "-159.573, 98.8525, -105.423, 0.29", "-160.92, 98.7575, -105.983, 0.44", "-161.768, 98.6558, -106.353, 0.44", "-162.764, 98.4724, -106.786, 0.29", "-164.097, 98.1737, -107.25, 0.29", "-164.983, 97.9779, -107.517, 0.29", "-165.878, 97.8179, -107.803, 0.37", "-166.676, 97.7293, -108.059, 0.59", "-167.598, 97.6699, -108.352, 0.59", "-168.707, 97.6257, -108.672, 0.44", "-169.652, 97.666, -108.839, 0.29", "-170.023, 97.7301, -108.878, 0.88", "-170.839, 97.9292, -108.926, 0.88", "-171.337, 98.0477, -108.94, 0.88", "-172.454, 98.253, -108.95, 0.29", "-173.795, 98.4378, -108.959, 0.29", "-174.831, 98.6056, -108.968, 0.29", "-175.764, 98.8367, -108.989, 0.29", "-176.584, 99.1148, -109.018, 0.52", "-177.626, 99.549, -109.07, 0.52", "-179.023, 100.191, -109.179, 0.29", "-180.056, 100.686, -109.301, 0.29", "-181.089, 101.23, -109.428, 0.74", "-181.719, 101.61, -109.542, 1.03", "-182.498, 102.159, -109.745, 0.37", "-183.254, 102.716, -110.005, 0.37", "-183.899, 103.138, -110.261, 0.96", "-184.399, 103.404, -110.464, 1.18", "-185.701, 104.07, -110.983, 0.29", "-186.471, 104.507, -111.278, 0.29", "-187.284, 104.987, -111.585, 0.29", "-188.099, 105.443, -111.861, 0.37", "-189.065, 105.932, -112.147, 0.37", "-190.235, 106.514, -112.439, 0.37", "-191.186, 106.945, -112.638, 0.37", "-192.194, 107.391, -112.853, 0.37", "-193.521, 108.062, -113.15, 0.37", "-194.562, 108.636, -113.399, 0.37", "-195.478, 109.16, -113.62, 0.37", "-196.607, 109.768, -113.839, 0.37", "-197.762, 110.349, -113.997, 0.37", "-199.147, 110.982, -114.102, 1.4", "-199.414, 111.092, -114.112, 2.06", "-200.075, 111.324, -114.116, 2.28", "-201.693, 111.781, -114.101, 0.29", "-202.801, 112.012, -114.043, 0.29", "-204.532, 112.195, -113.88, 0.29", "-205.687, 112.235, -113.73, 0.29", "-206.992, 112.217, -113.533, 0.29", "-208.327, 112.133, -113.318, 0.29", "-209.622, 112.005, -113.106, 0.29", "-210.529, 111.914, -112.938, 0.29", "-211.429, 111.829, -112.757, 0.44", "-212.733, 111.722, -112.542, 0.44", "-213.787, 111.729, -112.424, 0.29", "-214.506, 111.857, -112.391, 0.29", "-215.198, 112.095, -112.405, 0.74", "-215.875, 112.374, -112.443, 0.74", "-217.361, 113.083, -112.562, 0.29", "-218.635, 113.817, -112.678, 0.29", "-219.984, 114.683, -112.811, 0.29", "-220.999, 115.355, -112.913, 1.18" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-88.7213, 95.1171, -107.559, 0.44", "-90.388, 95.5151, -108.188, 0.44", "-91.3741, 95.7313, -108.495, 0.44", "-92.6971, 96.0776, -108.858, 0.44", "-93.5926, 96.3722, -109.082, 0.44", "-94.6157, 96.8045, -109.313, 0.44", "-95.4717, 97.2256, -109.48, 0.44", "-96.1142, 97.6133, -109.537, 0.44", "-96.7582, 98.1344, -109.577, 0.66", "-97.3029, 98.6933, -109.612, 0.66", "-98.0175, 99.5446, -109.682, 0.29", "-98.7588, 100.558, -109.785, 0.29", "-99.4583, 101.639, -109.906, 1.11", "-99.6589, 101.973, -109.946, 1.11", "-100.252, 102.901, -110.064, 0.29", "-100.607, 103.483, -110.136, 0.29", "-100.825, 103.908, -110.184, 1.03", "-100.982, 104.291, -110.218, 1.03", "-101.212, 104.87, -110.263, 1.03", "-101.86, 106.561, -110.36, 0.29", "-102.228, 107.559, -110.387, 0.29", "-102.574, 108.454, -110.402, 0.29", "-102.903, 109.168, -110.403, 0.29", "-103.538, 110.39, -110.391, 1.33", "-103.767, 110.798, -110.388, 1.69", "-104.708, 112.259, -110.395, 0.37", "-105.284, 113.003, -110.414, 0.37", "-106.336, 114.168, -110.466, 0.37", "-107.209, 115.067, -110.522, 0.37", "-108.088, 115.965, -110.588, 0.37", "-108.76, 116.699, -110.66, 0.37", "-109.071, 117.083, -110.713, 0.81", "-109.493, 117.745, -110.854, 0.81", "-109.873, 118.587, -111.121, 0.52", "-110.166, 119.314, -111.393, 0.52", "-110.608, 120.307, -111.8, 1.03", "-110.825, 120.782, -112.011, 1.03", "-111.253, 121.611, -112.399, 0.88", "-111.928, 122.732, -112.951, 0.37", "-112.756, 123.908, -113.543, 0.37", "-113.683, 125.132, -114.066, 0.37", "-114.161, 125.76, -114.284, 0.37", "-114.973, 126.836, -114.574, 0.37", "-115.526, 127.575, -114.714, 1.18", "-115.944, 128.142, -114.787, 1.69", "-117.441, 130.389, -115.002, 0.44", "-118.202, 131.748, -115.106, 0.44", "-118.861, 133.084, -115.204, 0.44", "-119.103, 133.647, -115.25, 0.96", "-119.338, 134.235, -115.307, 1.33", "-119.911, 135.669, -115.467, 0.37", "-120.404, 137.002, -115.643, 0.37", "-120.703, 137.888, -115.759, 0.37", "-121.014, 138.975, -115.898, 0.37", "-121.399, 140.32, -116.083, 0.37", "-121.773, 141.5, -116.287, 0.37", "-122.092, 142.36, -116.432, 0.59", "-122.429, 143.204, -116.552, 0.59", "-122.855, 144.328, -116.772, 0.29", "-123.034, 144.838, -116.895, 0.29", "-123.699, 146.574, -117.383, 1.33", "-123.985, 147.228, -117.578, 2.14", "-124.247, 147.746, -117.746, 2.28", "-125.182, 149.308, -118.33, 1.11", "-125.909, 150.312, -118.784, 0.29", "-126.798, 151.475, -119.336, 0.29", "-127.401, 152.241, -119.71, 0.29", "-127.949, 152.971, -120.078, 0.44", "-128.48, 153.757, -120.478, 0.44", "-129.097, 154.788, -120.961, 0.44", "-129.62, 155.853, -121.45, 0.66", "-129.848, 156.465, -121.702, 0.66", "-130.128, 157.407, -122.032, 0.29", "-130.395, 158.537, -122.277, 0.29", "-130.581, 159.474, -122.37, 0.29", "-130.741, 160.376, -122.42, 0.29", "-131.018, 161.67, -122.468, 0.44", "-131.246, 162.555, -122.47, 0.44", "-131.676, 163.965, -122.371, 1.03", "-131.896, 164.688, -122.222, 1.03" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "13.51, -69.4707, 14.5789, 0.59", "13.8951, -71.1915, 14.3099, 0.59", "14.0501, -72.3785, 14.0983, 0.59", "14.1806, -73.8445, 13.8409, 0.59", "14.2743, -74.923, 13.6615, 0.59", "14.3924, -76.5517, 13.4475, 0.88", "14.4493, -78.0757, 13.2829, 0.88", "14.4035, -79.2077, 13.1904, 0.66", "14.2063, -80.515, 13.1535, 0.81", "13.8766, -81.8909, 13.1963, 0.74", "13.5735, -82.9905, 13.3042, 0.96", "13.2942, -84.0791, 13.4941, 0.74", "13.0192, -85.2632, 13.7523, 0.59", "12.7517, -86.5694, 14.0514, 0.52", "12.6754, -87.0097, 14.152, 1.03", "12.5622, -88.2128, 14.3714, 0.52", "12.6144, -89.5839, 14.5118, 0.81", "12.7526, -90.413, 14.5431, 1.03", "12.934, -91.2034, 14.5171, 1.03", "13.1778, -92.2461, 14.4263, 0.88", "13.4089, -93.3849, 14.2982, 0.74", "13.5342, -94.1277, 14.2025, 0.74", "13.6648, -95.0354, 14.0805, 0.44", "13.8997, -96.5267, 13.8498, 0.44", "14.0422, -97.4441, 13.7026, 0.66", "14.1497, -98.1242, 13.6052, 0.66", "14.2924, -99.0259, 13.4769, 0.52", "14.4516, -100.136, 13.3032, 0.81", "14.5899, -101.124, 13.1074, 1.03", "14.6861, -101.792, 12.9459, 1.03", "14.79, -102.717, 12.7028, 0.66", "14.8491, -103.808, 12.3764, 0.52", "14.8547, -104.695, 12.0899, 0.52", "14.8204, -105.449, 11.8585, 0.52", "14.7618, -106.366, 11.6094, 0.74", "14.7089, -107.07, 11.434, 0.74", "14.5511, -108.795, 11.0729, 0.59", "14.469, -109.841, 10.9343, 0.59", "14.4392, -110.836, 10.8472, 0.96", "14.4448, -111.371, 10.8299, 0.96", "14.471, -112.438, 10.8664, 0.59", "14.4894, -113.796, 10.9463, 0.44", "14.4886, -115.025, 11.0646, 0.44", "14.4814, -116.078, 11.1613, 0.44", "14.4915, -117.192, 11.237, 0.44", "14.5419, -118.327, 11.286, 0.44", "14.7015, -119.883, 11.3095, 0.59", "14.7934, -120.491, 11.3226, 0.81", "14.9822, -121.471, 11.3366, 0.44", "15.2443, -122.779, 11.383, 0.44", "15.4193, -123.574, 11.4326, 0.81", "15.6156, -124.362, 11.517, 0.81", "15.9331, -125.507, 11.6391, 0.81", "16.1839, -126.341, 11.6844, 0.52", "16.5075, -127.369, 11.683, 0.52", "16.7349, -128.185, 11.6213, 0.81", "16.9112, -129.167, 11.4837, 1.03", "17.0161, -130.593, 11.2178, 0.52", "17.0193, -131.626, 10.9877, 0.52", "16.9598, -132.599, 10.7823, 0.88", "16.8413, -133.796, 10.5529, 0.88", "16.6399, -135.211, 10.3256, 0.44", "16.3797, -136.662, 10.1394, 0.74", "16.257, -137.343, 10.1266, 0.74", "16.0366, -138.587, 10.1329, 0.37", "15.8951, -139.502, 10.1586, 0.66", "15.8135, -140.377, 10.2066, 0.96", "15.7989, -141.41, 10.2614, 0.96", "15.8931, -143.688, 10.3415, 0.37", "16.0109, -145.085, 10.435, 0.37", "16.0873, -145.691, 10.5067, 0.88", "16.1612, -146.221, 10.5754, 0.88", "16.2811, -147.191, 10.6603, 0.88", "16.3684, -148.197, 10.6887, 0.52", "16.4172, -149.61, 10.7629, 0.52", "16.4425, -151.078, 10.9544, 0.44", "16.4543, -152.291, 11.1526, 0.52", "16.4499, -153.999, 11.4656, 0.74", "16.4251, -155.335, 11.7281, 0.74", "16.31, -157.542, 12.1418, 0.59", "16.2238, -158.623, 12.3148, 0.59", "16.1028, -159.726, 12.5088, 0.44", "15.9866, -160.709, 12.6881, 0.44", "15.9251, -161.238, 12.7754, 0.81", "15.8238, -162.24, 12.8477, 0.81", "15.7509, -163.052, 12.8062, 0.74", "15.6555, -163.878, 12.7813, 0.59", "15.4957, -165.1, 12.7835, 0.29", "15.4089, -165.707, 12.8112, 0.52", "15.2138, -167.225, 12.9026, 0.52", "15.1158, -168.169, 12.9812, 0.52", "14.9685, -169.67, 13.1577, 0.74", "14.8879, -170.444, 13.2955, 1.11", "14.7873, -171.044, 13.4665, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "13.51, -69.4707, 14.5789, 0.52", "14.5728, -68.4504, 15.465, 0.52", "15.1503, -67.8959, 15.9465, 0.52", "15.6331, -67.4324, 16.3491, 0.52", "16.0513, -67.0309, 16.6977, 0.52" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-131.896, 164.688, -122.222, 0.22", "-132.443, 167.1, -123.482, 0.22", "-132.67, 167.814, -124.002, 0.22", "-132.889, 168.278, -124.445, 0.22", "-133.139, 168.806, -124.93, 0.22", "-133.653, 170.136, -126.003, 0.22", "-133.988, 171.332, -126.861, 1.25", "-134.12, 171.812, -127.221, 1.55", "-134.56, 173.624, -128.444, 0.37", "-134.712, 174.338, -128.843, 0.37", "-134.957, 175.658, -129.443, 0.37", "-135.132, 176.943, -129.859, 0.37", "-135.215, 177.996, -130.144, 0.66", "-135.245, 178.785, -130.341, 1.33", "-135.275, 180.43, -130.693, 0.52", "-135.334, 181.865, -131.028, 0.52", "-135.406, 182.9, -131.281, 0.37", "-135.459, 183.966, -131.509, 0.37", "-135.455, 184.863, -131.673, 0.37", "-135.388, 186.59, -131.934, 2.65", "-135.368, 186.91, -131.973, 3.32", "-135.352, 187.364, -132.062, 3.32", "-135.464, 189.984, -132.734, 0.44", "-135.61, 191.533, -133.192, 0.44", "-135.688, 192.271, -133.435, 0.59", "-135.751, 192.914, -133.671, 0.59", "-136.081, 196.087, -134.946, 0.29", "-136.23, 197.37, -135.525, 0.29", "-136.393, 198.518, -136.114, 0.29", "-136.596, 199.745, -136.746, 0.29", "-136.658, 200.239, -136.975, 0.29", "-136.771, 201.665, -137.517, 1.11", "-136.808, 202.572, -137.756, 1.11", "-136.845, 203.281, -137.949, 0.88", "-137.071, 204.833, -138.367, 0.52", "-137.486, 206.418, -138.752, 0.29", "-137.802, 207.347, -138.958, 0.29", "-138.016, 207.892, -139.051, 0.66", "-138.541, 209.115, -139.22, 0.66", "-138.999, 210.062, -139.333, 0.29", "-139.436, 210.76, -139.405, 0.29", "-140.412, 211.827, -139.55, 0.88" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-131.896, 164.688, -122.222, 0.37", "-131.619, 165.783, -121.596, 0.37", "-131.33, 167.056, -120.849, 0.37", "-131.162, 167.927, -120.328, 0.37", "-130.886, 169.658, -119.28, 0.37", "-130.72, 170.92, -118.533, 0.52", "-130.581, 172.199, -117.818, 1.18", "-130.517, 173.043, -117.351, 1.18", "-130.487, 173.631, -117.083, 1.18", "-130.457, 174.006, -116.941, 1.03", "-130.349, 174.815, -116.713, 0.44", "-130.116, 175.884, -116.396, 0.88", "-129.688, 177.5, -115.921, 0.37", "-129.281, 178.984, -115.472, 0.29", "-129.019, 179.981, -115.144, 0.29", "-128.835, 180.735, -114.86, 0.66", "-128.418, 182.674, -114.052, 0.37", "-128.218, 183.801, -113.555, 0.37", "-128.06, 185.011, -113.034, 0.29", "-127.985, 186.171, -112.563, 0.29", "-128.028, 187.207, -112.198, 0.29", "-128.177, 188.54, -111.82, 0.88", "-128.257, 189.22, -111.683, 0.88", "-128.382, 190.692, -111.466, 0.37", "-128.488, 192.194, -111.341, 0.37", "-128.569, 194.214, -111.293, 0.37", "-128.592, 195.846, -111.285, 0.37", "-128.595, 197.389, -111.266, 0.37", "-128.585, 198.527, -111.246, 0.37", "-128.563, 200.396, -111.195, 0.37", "-128.474, 202.533, -111.121, 0.37", "-128.362, 204.296, -111.049, 1.47", "-128.348, 204.992, -111.016, 1.69", "-128.351, 205.719, -110.951, 1.69", "-128.366, 207.554, -110.725, 0.44", "-128.377, 209.002, -110.512, 0.44", "-128.435, 210.358, -110.305, 0.44", "-128.564, 212.259, -110.029, 0.44", "-128.712, 214.067, -109.76, 0.37", "-128.821, 215.419, -109.541, 0.37", "-128.881, 216.091, -109.418, 0.37", "-129.029, 217.159, -109.196, 0.96", "-129.218, 218.209, -108.953, 1.25", "-129.301, 218.537, -108.877, 1.25" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "14.7873, -171.044, 13.4665, 0.44", "13.4357, -171.694, 13.534, 0.44", "12.3653, -172.021, 13.5347, 0.29", "10.9146, -172.363, 13.5112, 0.22", "9.88928, -172.549, 13.4865, 0.59", "9.2888, -172.636, 13.4696, 0.59", "7.56554, -172.886, 13.4211, 0.29", "5.8536, -172.949, 13.3579, 0.29", "5.47808, -172.934, 13.3339, 0.52", "4.855, -172.88, 13.2591, 0.52", "4.34633, -172.816, 13.1951, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "14.7873, -171.044, 13.4665, 0.37", "14.908, -173.274, 13.1666, 0.37", "14.9351, -174.532, 13.0142, 0.81", "14.9168, -175.258, 12.9399, 0.88", "14.8698, -176.02, 12.8759, 0.66", "14.7334, -177.432, 12.7787, 0.37", "14.6735, -177.962, 12.7483, 0.37", "14.5499, -178.88, 12.7483, 0.37", "14.4573, -179.992, 12.7483, 0.37", "14.4186, -181.0, 12.7421, 0.74", "14.4067, -181.975, 12.7094, 1.11", "14.3977, -182.825, 12.666, 0.81", "14.425, -184.429, 12.5651, 0.37", "14.4837, -186.284, 12.4185, 0.37", "14.4679, -187.473, 12.3048, 0.37", "14.3832, -188.695, 12.1711, 0.37", "14.2972, -189.405, 12.0821, 0.96", "14.184, -189.97, 12.0049, 0.96", "13.8566, -191.112, 11.8477, 0.44", "13.3879, -192.563, 11.6525, 0.37", "13.1971, -193.368, 11.5298, 0.37", "13.1236, -193.986, 11.4355, 1.11", "13.082, -194.899, 11.2878, 0.88", "13.071, -196.185, 11.0831, 0.66", "13.1131, -197.843, 10.8333, 0.52", "13.1737, -199.305, 10.6247, 0.52", "13.1946, -200.614, 10.4527, 0.52", "13.1596, -202.191, 10.2517, 0.81", "13.1039, -202.971, 10.1536, 0.96", "12.9887, -203.883, 10.0471, 0.96", "12.8167, -204.862, 9.94339, 0.81", "12.5789, -206.055, 9.80028, 0.44", "12.3367, -207.379, 9.59112, 0.29", "12.2323, -208.16, 9.43311, 0.29", "12.1233, -208.973, 9.24779, 0.29", "11.9467, -209.996, 8.99377, 0.29", "11.7041, -211.182, 8.6432, 1.03", "11.629, -211.505, 8.53178, 1.47", "11.2599, -213.181, 7.90505, 0.44", "11.0146, -214.367, 7.43335, 0.37", "10.7558, -215.573, 6.94868, 0.37", "10.45, -216.98, 6.37642, 0.29", "10.1609, -218.335, 5.81881, 0.29", "10.0054, -219.139, 5.47971, 0.29", "9.77791, -220.467, 4.89913, 0.29", "9.57802, -222.113, 4.16477, 0.66", "9.49741, -223.109, 3.73722, 1.18", "9.43433, -223.986, 3.40596, 1.18", "9.39053, -224.59, 3.19313, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "16.0513, -67.0309, 16.6977, 0.44", "16.0626, -67.2367, 17.6466, 0.44", "16.0242, -67.6884, 19.5572, 1.11", "16.0341, -68.4663, 22.5941, 0.44", "16.2272, -69.9224, 28.1158, 0.88", "16.3448, -70.4145, 29.9104, 1.25", "16.4259, -70.7538, 31.1473, 0.88", "16.5008, -71.0858, 32.4055, 0.74", "16.8568, -72.1898, 36.5773, 0.37", "17.0035, -72.4891, 37.5586, 0.66", "17.1785, -72.8051, 38.3043, 0.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "16.0513, -67.0309, 16.6977, 0.44", "16.2975, -67.1545, 17.6933, 0.44", "18.4294, -68.2244, 26.316, 0.44", "18.7079, -68.3643, 27.4427, 0.37", "18.8826, -68.4519, 28.1492, 0.37", "19.0124, -68.5171, 28.6741, 0.74", "19.1173, -68.5697, 29.0984, 0.74" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-140.412, 211.827, -139.55, 0.59", "-140.943, 212.805, -139.656, 0.59", "-141.692, 213.721, -139.824, 0.37", "-142.439, 214.443, -140.001, 0.37", "-143.253, 215.179, -140.187, 0.37", "-144.389, 216.202, -140.435, 0.37", "-145.297, 217.023, -140.623, 0.37", "-146.374, 217.937, -140.796, 0.37", "-147.216, 218.61, -140.933, 0.37", "-148.151, 219.349, -141.072, 0.37", "-148.751, 219.882, -141.18, 0.37", "-149.115, 220.341, -141.26, 1.03", "-149.304, 220.665, -141.303, 1.33", "-149.696, 221.461, -141.386, 1.11", "-150.227, 222.58, -141.499, 0.37", "-150.806, 223.811, -141.625, 0.37", "-151.529, 225.393, -141.791, 0.29", "-152.082, 226.64, -141.924, 0.29", "-152.535, 227.692, -142.035, 0.52", "-152.972, 228.747, -142.139, 1.55", "-153.151, 229.202, -142.174, 1.92" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-140.412, 211.827, -139.55, 0.52", "-140.321, 212.948, -140.559, 0.52", "-140.105, 214.006, -141.596, 0.52", "-139.843, 214.981, -142.511, 0.52", "-139.586, 215.862, -143.278, 1.25", "-138.814, 218.526, -145.448, 2.28", "-138.651, 219.135, -145.93, 2.28", "-138.062, 221.267, -147.706, 0.29", "-137.794, 222.184, -148.504, 0.44", "-137.555, 222.977, -149.163, 0.44", "-137.327, 223.785, -149.763, 0.44", "-137.145, 224.523, -150.175, 0.44", "-136.877, 226.055, -151.056, 0.29", "-136.844, 226.864, -151.513, 1.03", "-136.865, 227.605, -151.926, 1.55", "-136.9, 228.761, -152.55, 0.88", "-136.888, 230.103, -153.219, 0.52", "-136.841, 231.295, -153.742, 0.52", "-136.846, 232.268, -154.097, 0.52", "-136.887, 233.734, -154.577, 0.52", "-136.896, 234.717, -154.839, 0.52", "-136.897, 235.675, -155.057, 0.52", "-136.862, 236.606, -155.238, 0.52", "-136.706, 238.267, -155.492, 0.52", "-136.487, 239.967, -155.736, 0.52", "-136.308, 241.566, -155.937, 2.21" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-129.301, 218.537, -108.877, 0.29", "-130.595, 220.448, -108.691, 0.29", "-131.225, 221.377, -108.601, 0.29", "-131.685, 222.057, -108.536, 0.29", "-132.031, 222.567, -108.486, 0.74", "-132.315, 222.987, -108.446, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-129.301, 218.537, -108.877, 0.29", "-129.512, 219.55, -108.597, 0.29", "-129.62, 220.103, -108.457, 0.29", "-129.746, 221.548, -108.137, 0.29", "-129.75, 222.083, -108.032, 0.74", "-129.766, 222.645, -107.935, 0.74", "-129.841, 223.923, -107.743, 0.37", "-129.893, 224.823, -107.642, 0.29", "-129.921, 226.24, -107.524, 0.37", "-129.909, 227.217, -107.476, 0.37", "-129.912, 228.961, -107.365, 0.29", "-129.948, 230.123, -107.267, 0.29", "-130.065, 231.448, -107.121, 0.29", "-130.32, 232.753, -106.945, 0.29", "-130.578, 233.654, -106.803, 0.29", "-130.95, 234.826, -106.56, 0.29", "-131.223, 235.716, -106.322, 0.29", "-131.503, 236.647, -106.029, 0.29", "-131.715, 237.354, -105.757, 0.29", "-131.967, 238.31, -105.368, 1.03", "-132.101, 239.107, -105.049, 1.33", "-132.142, 239.865, -104.769, 1.33", "-132.135, 241.287, -104.249, 0.29", "-132.129, 242.6, -103.749, 0.29", "-132.19, 243.81, -103.253, 0.29", "-132.295, 244.675, -102.862, 0.29", "-132.515, 245.755, -102.336, 0.29", "-132.658, 246.303, -102.041, 0.29", "-133.012, 247.461, -101.365, 0.29", "-133.379, 248.568, -100.707, 0.74", "-133.647, 249.319, -100.213, 0.88", "-134.03, 250.409, -99.4862, 0.44", "-134.229, 251.039, -99.0739, 0.44", "-134.455, 252.007, -98.4932, 0.96", "-134.597, 252.81, -98.0883, 1.25", "-134.898, 254.576, -97.3727, 0.29", "-135.08, 255.534, -97.084, 0.37", "-135.207, 256.154, -96.9118, 0.37", "-135.446, 257.23, -96.5315, 0.37", "-135.735, 258.489, -96.099, 0.37", "-135.898, 259.244, -95.8485, 0.37", "-136.094, 260.101, -95.5844, 0.37", "-136.692, 262.227, -94.7662, 1.33", "-137.182, 263.904, -93.9165, 2.06" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "9.39053, -224.59, 3.19313, 0.29", "8.33021, -225.712, 3.72351, 0.29", "7.72389, -226.547, 4.14301, 0.29", "7.43638, -227.105, 4.37725, 0.74", "7.09257, -227.849, 4.67015, 0.29", "6.82415, -228.454, 4.8629, 0.29", "6.17007, -229.927, 5.33257, 0.59", "6.02789, -230.371, 5.46213, 0.74", "5.57378, -232.041, 5.9658, 0.37", "5.31532, -232.913, 6.24049, 0.96", "5.00302, -233.786, 6.513, 0.81" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "9.39053, -224.59, 3.19313, 0.37", "10.5108, -224.809, 3.18569, 0.37", "11.2864, -225.054, 3.20204, 0.37", "12.1078, -225.376, 3.38912, 0.37", "12.7291, -225.618, 3.74298, 0.29", "13.4934, -225.861, 4.35514, 0.29", "14.2132, -226.089, 4.93168, 0.52", "14.5961, -226.214, 5.35091, 0.52", "15.6922, -226.64, 6.92107, 1.11", "16.6197, -227.059, 8.65418, 0.59", "16.8886, -227.16, 9.33614, 0.59" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-153.151, 229.202, -142.174, 0.37", "-153.93, 230.636, -141.822, 0.37", "-154.641, 231.944, -141.501, 0.37", "-155.167, 232.913, -141.263, 0.37", "-156.063, 234.562, -140.859, 1.18", "-156.49, 235.349, -140.666, 1.62" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-153.151, 229.202, -142.174, 0.29", "-153.956, 229.396, -143.418, 0.29", "-154.594, 229.57, -144.362, 0.52", "-155.619, 229.821, -145.731, 1.03", "-156.187, 229.959, -146.428, 1.03", "-156.72, 230.103, -147.052, 0.88", "-157.482, 230.366, -147.916, 0.81", "-157.937, 230.583, -148.462, 0.29", "-158.467, 230.878, -149.049, 0.29", "-159.006, 231.169, -149.563, 0.29", "-159.276, 231.267, -149.89, 0.52", "-159.864, 231.453, -150.717, 0.52", "-160.568, 231.648, -151.767, 1.18", "-160.823, 231.707, -152.144, 1.47", "-161.195, 231.797, -152.674, 1.47", "-162.979, 232.211, -154.995, 0.52", "-163.59, 232.322, -155.683, 0.29", "-164.365, 232.452, -156.446, 0.29", "-165.579, 232.731, -157.446, 0.29", "-166.633, 233.008, -158.192, 0.29", "-167.411, 233.203, -158.656, 0.29", "-168.667, 233.476, -159.247, 0.29", "-169.203, 233.576, -159.497, 0.29", "-170.102, 233.762, -159.903, 0.88", "-170.58, 233.875, -160.109, 1.25", "-172.045, 234.211, -160.781, 0.37", "-172.71, 234.345, -161.211, 0.29", "-173.26, 234.449, -161.679, 0.74", "-173.657, 234.515, -162.037, 0.74", "-174.429, 234.64, -162.753, 0.37", "-175.144, 234.754, -163.45, 0.37", "-176.693, 235.002, -165.065, 0.37", "-177.189, 235.058, -165.569, 0.37", "-178.2, 235.13, -166.521, 0.29", "-178.705, 235.141, -166.943, 0.29", "-179.912, 235.079, -167.757, 0.66", "-181.013, 234.979, -168.371, 0.74", "-182.15, 234.867, -168.89, 0.52", "-182.962, 234.771, -169.25, 0.96", "-183.71, 234.675, -169.593, 0.96", "-185.06, 234.518, -170.16, 0.29", "-186.079, 234.439, -170.517, 0.96", "-186.679, 234.416, -170.717, 1.11", "-187.655, 234.499, -171.081, 0.44", "-188.368, 234.688, -171.36, 0.44", "-189.21, 235.105, -171.711, 0.44", "-189.92, 235.58, -172.004, 0.44", "-190.459, 235.955, -172.209, 0.44", "-191.356, 236.503, -172.557, 0.44", "-191.999, 236.819, -172.835, 0.44", "-193.146, 237.293, -173.338, 0.44", "-193.821, 237.552, -173.645, 0.81", "-194.654, 237.835, -174.034, 0.81", "-195.806, 238.179, -174.573, 0.52", "-196.989, 238.522, -175.131, 0.37", "-197.555, 238.706, -175.425, 0.37", "-198.165, 238.929, -175.778, 1.03", "-199.018, 239.293, -176.365, 1.47", "-199.497, 239.543, -176.749, 1.47", "-200.04, 239.914, -177.255, 0.44", "-201.094, 240.611, -178.384, 0.29", "-201.965, 241.065, -179.429, 0.29", "-202.985, 241.442, -180.824, 0.29", "-203.68, 241.641, -181.858, 0.52", "-204.535, 241.875, -183.128, 0.74", "-205.582, 242.228, -184.677, 0.59", "-206.196, 242.519, -185.628, 0.59", "-207.156, 243.06, -187.128, 0.37", "-207.857, 243.426, -188.096, 0.37", "-208.652, 243.774, -189.027, 0.37", "-209.585, 244.088, -189.928, 0.37", "-210.814, 244.458, -190.889, 0.59", "-211.633, 244.569, -191.4, 0.59", "-212.925, 244.421, -191.969, 2.06", "-213.436, 244.237, -192.143, 2.87", "-214.519, 243.615, -192.434, 2.5", "-215.41, 242.977, -192.591, 1.55", "-216.353, 242.208, -192.677, 0.37", "-216.847, 241.75, -192.71, 0.37", "-217.676, 240.903, -192.753, 0.37", "-218.556, 240.023, -192.802, 0.37", "-219.649, 238.88, -192.869, 0.37", "-219.925, 238.579, -192.896, 0.66", "-220.452, 238.005, -192.962, 0.44", "-221.037, 237.376, -193.051, 0.37", "-221.866, 236.551, -193.135, 0.37", "-222.595, 235.915, -193.192, 0.37", "-223.505, 235.176, -193.237, 0.37", "-224.194, 234.673, -193.252, 0.59", "-224.865, 234.237, -193.26, 0.59", "-226.0, 233.566, -193.256, 0.37", "-226.937, 233.055, -193.229, 0.66", "-227.658, 232.746, -193.186, 0.66", "-228.253, 232.545, -193.111, 0.66", "-228.857, 232.387, -193.012, 0.37", "-229.446, 232.285, -192.906, 0.74", "-229.963, 232.24, -192.813, 0.74", "-231.055, 232.215, -192.568, 0.52", "-232.58, 232.254, -192.233, 0.29", "-233.561, 232.245, -192.027, 0.29", "-234.368, 232.174, -191.873, 1.47", "-234.951, 232.065, -191.784, 1.99", "-235.579, 231.854, -191.714, 1.99", "-237.164, 231.143, -191.619, 0.29", "-238.477, 230.478, -191.62, 0.29", "-239.663, 229.8, -191.648, 0.29", "-240.672, 229.208, -191.69, 0.29", "-242.095, 228.406, -191.787, 0.29", "-242.901, 227.959, -191.883, 0.44", "-244.054, 227.315, -192.113, 0.44", "-245.112, 226.804, -192.386, 0.44", "-246.317, 226.311, -192.731, 0.44", "-247.451, 225.911, -193.064, 0.44", "-248.675, 225.494, -193.424, 0.44", "-250.175, 224.949, -193.842, 0.44", "-251.309, 224.524, -194.141, 0.44", "-252.796, 223.947, -194.583, 0.44", "-253.77, 223.502, -194.908, 1.62", "-254.311, 223.242, -195.09, 2.5", "-254.704, 223.065, -195.215, 2.5", "-256.816, 222.075, -195.899, 0.37", "-257.825, 221.514, -196.257, 0.37", "-258.849, 220.878, -196.665, 0.37", "-259.707, 220.32, -196.972, 0.81", "-260.522, 219.837, -197.2, 0.37", "-261.18, 219.522, -197.316, 0.52", "-261.683, 219.367, -197.317, 0.81", "-262.358, 219.236, -197.255, 0.81", "-263.759, 219.053, -197.134, 0.37", "-264.949, 218.853, -197.057, 0.37", "-266.17, 218.58, -197.001, 0.37", "-267.095, 218.34, -196.938, 0.37", "-268.199, 218.02, -196.848, 0.37", "-270.171, 217.343, -196.676, 0.29", "-271.268, 216.827, -196.598, 0.29", "-272.26, 216.154, -196.511, 0.29", "-273.216, 215.248, -196.374, 0.88", "-273.698, 214.661, -196.254, 0.88", "-274.295, 213.778, -196.026, 0.29", "-275.074, 212.449, -195.628, 0.29", "-275.911, 210.988, -195.183, 0.37", "-276.964, 209.125, -194.63, 0.66", "-277.648, 207.944, -194.322, 0.66", "-278.107, 207.185, -194.122, 0.22", "-278.441, 206.646, -193.977, 0.59", "-278.835, 206.065, -193.82, 0.81", "-279.089, 205.723, -193.736, 0.81", "-280.201, 204.317, -193.377, 0.29", "-280.481, 203.922, -193.274, 0.29", "-281.039, 202.98, -193.006, 0.52", "-281.33, 202.4, -192.793, 0.52", "-281.72, 201.585, -192.455, 0.52", "-282.566, 199.923, -191.699, 0.66", "-283.169, 198.883, -191.184, 0.52", "-283.637, 198.214, -190.791, 0.96", "-284.649, 197.055, -190.0, 0.66", "-285.395, 196.333, -189.45, 0.29", "-286.531, 195.448, -188.714, 0.29", "-287.405, 194.898, -188.243, 0.29", "-289.134, 193.935, -187.382, 0.29", "-289.755, 193.604, -187.098, 1.47", "-290.181, 193.377, -186.922, 1.77", "-291.684, 192.603, -186.28, 0.37", "-293.196, 191.849, -185.666, 0.37", "-294.017, 191.429, -185.338, 0.66", "-294.862, 190.986, -184.98, 0.66", "-295.532, 190.628, -184.637, 0.59", "-297.031, 189.899, -183.76, 0.37", "-298.06, 189.465, -183.082, 0.37", "-299.156, 189.04, -182.305, 0.37", "-300.379, 188.569, -181.355, 0.96", "-301.291, 188.183, -180.56, 0.22", "-302.247, 187.727, -179.665, 0.22", "-302.717, 187.461, -179.204, 0.22", "-303.421, 187.049, -178.535, 0.52", "-304.574, 186.329, -177.576, 0.74", "-305.374, 185.845, -177.034, 0.66", "-306.558, 185.146, -176.32, 0.29", "-307.425, 184.631, -175.854, 0.96", "-307.81, 184.431, -175.676, 1.33", "-309.444, 183.776, -175.034, 0.37", "-310.924, 183.221, -174.485, 0.37", "-311.683, 182.93, -174.191, 0.37", "-313.226, 182.358, -173.517, 0.37", "-314.261, 181.974, -173.011, 0.37", "-316.215, 181.17, -171.933, 0.37", "-317.482, 180.564, -171.153, 0.37", "-318.435, 180.008, -170.438, 0.37", "-319.51, 179.331, -169.455, 1.11", "-319.968, 179.045, -168.978, 1.11", "-320.706, 178.508, -168.136, 0.44", "-321.253, 178.112, -167.504, 0.29", "-322.432, 177.385, -166.263, 0.29", "-323.504, 176.689, -165.087, 0.81", "-324.694, 175.797, -163.738, 0.52", "-325.676, 175.0, -162.658, 0.52", "-326.45, 174.3, -161.754, 0.52", "-326.859, 173.902, -161.207, 0.81", "-327.812, 172.893, -159.859, 0.44", "-328.34, 172.322, -159.06, 0.37", "-328.968, 171.724, -158.041, 0.37", "-330.118, 170.768, -156.255, 0.37", "-331.4, 169.651, -154.294, 1.55", "-331.908, 169.204, -153.533, 2.36", "-332.178, 168.97, -153.14, 2.58", "-333.508, 167.627, -151.05, 0.52", "-333.856, 167.108, -150.365, 0.74", "-334.226, 166.224, -149.49, 0.74", "-334.506, 165.242, -148.591, 0.44", "-334.756, 164.275, -147.59, 0.37", "-334.952, 163.565, -146.806, 0.44", "-335.204, 162.579, -145.718, 0.44", "-335.442, 161.852, -144.764, 0.44", "-335.901, 160.723, -143.101, 0.81", "-336.233, 160.027, -142.059, 1.11", "-336.626, 159.3, -141.117, 0.37", "-337.004, 158.531, -140.299, 0.37", "-337.861, 156.309, -138.406, 1.4", "-338.098, 155.577, -137.845, 1.99", "-338.329, 154.814, -137.331, 1.99", "-338.966, 152.541, -135.928, 0.52", "-339.376, 150.946, -135.001, 0.52", "-339.7, 149.673, -134.345, 0.52", "-340.222, 147.609, -133.519, 0.52", "-340.486, 146.429, -133.06, 0.74", "-340.71, 145.17, -132.519, 0.74", "-340.85, 144.345, -132.123, 0.52", "-341.054, 143.38, -131.666, 0.52", "-341.434, 141.953, -131.005, 0.44", "-341.956, 140.289, -130.266, 0.44", "-342.39, 139.087, -129.673, 0.52", "-343.0, 137.675, -128.898, 0.44", "-343.528, 136.562, -128.23, 0.44", "-343.935, 135.716, -127.676, 2.36", "-344.369, 134.839, -127.072, 3.46" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-136.308, 241.566, -155.937, 0.37", "-137.226, 243.908, -156.2, 0.37", "-137.746, 245.21, -156.336, 0.37", "-138.116, 246.176, -156.428, 0.59", "-138.508, 247.327, -156.526, 0.44", "-138.736, 248.056, -156.586, 0.37", "-138.954, 248.82, -156.653, 0.37", "-139.268, 250.228, -156.794, 0.29", "-139.464, 251.202, -156.89, 0.29", "-139.627, 252.185, -156.975, 0.29", "-139.811, 253.47, -157.055, 0.88", "-139.894, 254.144, -157.105, 1.11", "-139.937, 254.691, -157.155, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-136.308, 241.566, -155.937, 0.29", "-135.517, 243.536, -156.557, 0.29", "-135.133, 244.585, -156.855, 0.29", "-134.805, 245.465, -157.203, 0.44", "-134.633, 245.94, -157.408, 0.44", "-134.316, 246.879, -157.8, 0.37", "-134.017, 247.839, -158.176, 0.37", "-133.686, 248.966, -158.587, 0.37", "-133.155, 250.882, -159.326, 0.81", "-132.97, 251.644, -159.623, 0.59", "-132.69, 252.99, -160.132, 1.33", "-132.527, 253.972, -160.504, 1.92", "-132.454, 254.395, -160.666, 1.92" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-137.182, 263.904, -93.9165, 0.52", "-137.768, 266.378, -93.0771, 0.52", "-138.158, 267.763, -92.6009, 0.52", "-138.682, 269.364, -92.0313, 0.52", "-139.036, 270.411, -91.6588, 0.52", "-139.464, 271.726, -91.198, 0.52", "-139.709, 272.544, -90.9159, 0.66", "-139.963, 273.354, -90.6209, 0.29", "-140.133, 273.91, -90.4382, 0.29", "-140.53, 275.39, -90.0473, 0.29", "-140.803, 276.415, -89.7658, 0.29", "-141.045, 277.496, -89.5061, 0.29", "-141.266, 278.618, -89.2392, 1.25", "-141.387, 279.267, -89.0824, 1.55", "-141.612, 280.488, -88.8037, 0.22", "-142.007, 281.931, -88.4666, 0.22" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-137.182, 263.904, -93.9165, 0.29", "-138.01, 265.62, -92.9948, 0.29", "-138.457, 266.601, -92.4068, 0.29", "-138.904, 267.617, -91.7812, 0.29", "-139.434, 268.866, -91.0656, 0.37", "-139.754, 269.683, -90.6519, 0.37", "-139.996, 270.37, -90.3447, 0.29", "-140.358, 271.712, -89.8352, 0.29", "-140.591, 272.673, -89.5106, 0.29", "-140.898, 274.069, -89.1233, 0.29", "-141.198, 275.598, -88.6958, 0.29", "-141.405, 276.75, -88.3765, 0.52", "-141.541, 277.501, -88.1754, 0.29", "-141.811, 279.063, -87.7609, 0.29", "-141.988, 280.266, -87.4136, 0.29", "-142.18, 281.795, -86.9359, 0.59", "-142.322, 282.937, -86.5704, 0.74", "-142.458, 284.068, -86.2223, 0.22", "-142.538, 284.821, -86.0166, 0.22", "-142.648, 286.04, -85.762, 0.22", "-142.726, 287.015, -85.5764, 0.22", "-142.803, 287.824, -85.4435, 0.74", "-142.852, 288.28, -85.3572, 0.74", "-142.956, 288.865, -85.2168, 0.29", "-143.19, 289.872, -84.9427, 0.59", "-143.518, 290.981, -84.5648, 0.29", "-143.891, 292.128, -84.1294, 0.29", "-144.283, 293.11, -83.709, 0.29", "-144.73, 294.034, -83.2703, 0.29", "-145.249, 294.94, -82.7561, 0.29", "-145.865, 295.92, -82.1242, 0.29", "-146.33, 296.637, -81.6102, 0.29", "-147.135, 297.909, -80.6233, 0.29", "-147.59, 298.668, -80.0175, 0.29", "-148.263, 299.83, -79.0657, 1.4", "-148.67, 300.524, -78.4677, 1.77", "-149.347, 301.838, -77.3345, 0.37", "-149.656, 302.526, -76.7157, 0.66", "-149.742, 302.868, -76.4325, 0.66" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-156.49, 235.349, -140.666, 0.29", "-156.457, 236.478, -139.134, 0.29", "-156.557, 237.103, -138.263, 0.22", "-156.79, 237.776, -137.302, 0.22", "-157.286, 238.621, -135.989, 0.44", "-157.646, 239.108, -135.215, 0.44", "-158.18, 239.843, -134.144, 0.44", "-158.676, 240.357, -133.414, 0.74", "-159.082, 240.775, -132.807, 0.74", "-159.72, 241.432, -131.921, 0.44", "-160.193, 241.983, -131.212, 0.29", "-160.7, 242.734, -130.285, 0.29", "-161.071, 243.558, -129.342, 0.29", "-161.527, 245.388, -127.295, 0.29", "-161.636, 246.371, -126.194, 0.29", "-161.628, 247.062, -125.345, 0.29", "-161.595, 247.727, -124.523, 0.29", "-161.542, 248.555, -123.584, 0.81", "-161.48, 249.641, -122.459, 1.47", "-161.434, 250.449, -121.73, 1.84", "-161.232, 253.384, -119.289, 0.29", "-161.18, 254.672, -118.312, 0.29", "-161.132, 256.218, -117.102, 0.29", "-161.031, 258.308, -115.442, 1.84", "-160.924, 259.918, -114.19, 0.37", "-160.86, 260.992, -113.358, 0.37", "-160.822, 261.793, -112.734, 0.37", "-160.759, 264.282, -110.514, 0.66", "-160.792, 265.254, -109.423, 0.37", "-160.882, 265.727, -108.778, 0.37", "-161.122, 266.405, -107.74, 0.59", "-161.251, 266.736, -107.27, 0.59", "-161.493, 267.314, -106.55, 0.44", "-162.576, 269.861, -103.971, 0.44", "-163.091, 271.132, -102.787, 0.29", "-163.531, 272.336, -101.746, 0.29", "-164.099, 274.05, -100.439, 0.29", "-164.349, 274.851, -99.8639, 0.29", "-164.665, 275.96, -99.1461, 0.29", "-164.992, 277.184, -98.4529, 1.18", "-165.108, 277.635, -98.1777, 1.55", "-165.543, 278.958, -97.1304, 0.66", "-166.06, 280.461, -95.4833, 1.03", "-166.206, 280.946, -94.8137, 1.03", "-166.47, 281.979, -93.131, 0.29", "-166.572, 282.428, -92.3533, 0.29", "-166.752, 283.413, -90.6791, 0.66", "-166.936, 284.623, -88.4372, 0.37", "-167.05, 285.383, -87.0189, 0.37", "-167.103, 285.787, -86.2144, 0.37", "-167.124, 286.326, -85.1117, 1.47", "-167.067, 286.95, -84.0108, 1.69" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-156.49, 235.349, -140.666, 0.29", "-156.339, 238.268, -140.468, 0.29", "-156.222, 240.011, -140.238, 0.29", "-156.124, 241.671, -139.935, 1.69", "-156.003, 244.163, -139.377, 0.29", "-155.972, 245.091, -139.132, 0.29", "-155.983, 246.35, -138.753, 0.29", "-155.995, 247.459, -138.28, 0.29", "-156.04, 248.269, -137.91, 0.29", "-156.158, 249.383, -137.412, 0.59", "-156.387, 250.581, -136.933, 0.29", "-156.732, 251.878, -136.445, 0.29", "-156.952, 252.515, -136.233, 0.59", "-157.291, 253.31, -136.018, 0.59", "-157.768, 254.171, -135.78, 0.29", "-158.234, 254.864, -135.584, 0.29", "-158.789, 255.657, -135.36, 0.88", "-159.124, 256.142, -135.22, 1.03", "-159.872, 257.169, -134.91, 0.29", "-160.673, 258.237, -134.582, 0.29", "-161.358, 259.167, -134.359, 0.29", "-161.871, 259.922, -134.246, 0.29", "-162.436, 260.81, -134.209, 0.29", "-163.004, 261.725, -134.286, 0.66", "-163.307, 262.222, -134.407, 0.88", "-163.843, 263.144, -134.77, 0.29", "-164.27, 263.807, -135.132, 0.29", "-164.851, 264.659, -135.771, 0.29", "-165.387, 265.493, -136.612, 0.29", "-165.805, 266.146, -137.404, 0.29", "-166.275, 266.848, -138.369, 0.59", "-166.813, 267.57, -139.486, 0.44", "-167.458, 268.353, -140.782, 0.81", "-168.21, 269.15, -142.205, 0.37", "-168.782, 269.682, -143.126, 0.29", "-169.203, 270.028, -143.678, 0.29", "-169.68, 270.389, -144.192, 0.29", "-170.439, 271.013, -144.871, 0.59", "-171.449, 271.808, -145.587, 0.29", "-172.33, 272.486, -146.098, 0.22", "-172.816, 272.89, -146.38, 0.22", "-173.567, 273.572, -146.811, 1.25", "-173.972, 273.981, -147.047, 1.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-132.454, 254.395, -160.666, 0.44", "-133.153, 255.763, -161.087, 0.44", "-133.798, 257.133, -161.539, 0.37", "-134.193, 258.042, -161.83, 0.37", "-134.577, 258.942, -162.106, 0.37", "-134.894, 259.685, -162.344, 0.37", "-135.402, 260.855, -162.717, 0.29", "-135.902, 262.199, -163.136, 1.25", "-136.125, 262.892, -163.365, 1.62", "-136.31, 263.527, -163.619, 1.62", "-136.785, 265.272, -164.366, 0.29", "-136.987, 266.108, -164.723, 0.29", "-137.187, 267.197, -165.204, 0.29", "-137.302, 268.219, -165.694, 0.59", "-137.433, 270.078, -166.607, 0.29", "-137.467, 270.697, -166.91, 0.29", "-137.521, 271.576, -167.346, 0.29", "-137.581, 272.1, -167.604, 0.29", "-137.696, 272.813, -167.915, 0.59", "-137.839, 273.663, -168.216, 0.59", "-138.126, 275.349, -168.74, 0.29", "-138.301, 276.373, -169.083, 0.29", "-138.488, 277.533, -169.466, 0.29", "-138.709, 279.062, -169.971, 0.37", "-138.813, 279.862, -170.23, 0.37", "-138.954, 281.286, -170.661, 0.37", "-139.037, 282.473, -170.987, 0.37", "-139.125, 284.105, -171.372, 0.44", "-139.154, 285.199, -171.592, 0.66", "-139.166, 286.023, -171.73, 0.66", "-139.165, 287.729, -171.879, 0.29", "-139.15, 288.495, -171.879, 0.74", "-139.121, 290.005, -171.785, 0.29", "-139.117, 291.703, -171.605, 0.37", "-139.115, 292.693, -171.478, 0.37", "-139.133, 294.393, -171.261, 0.37", "-139.168, 295.462, -171.133, 0.37", "-139.248, 296.684, -171.018, 0.37", "-139.39, 298.034, -170.933, 0.29", "-139.571, 299.343, -170.89, 0.29", "-139.786, 301.191, -170.93, 0.29", "-139.861, 302.024, -171.0, 0.29", "-139.944, 303.153, -171.119, 1.03", "-139.994, 304.008, -171.22, 1.33", "-140.11, 305.782, -171.431, 0.52", "-140.217, 307.291, -171.601, 0.52", "-140.298, 308.746, -171.762, 0.52", "-140.363, 309.939, -171.884, 0.81", "-140.405, 310.586, -171.943, 0.81", "-140.583, 312.367, -172.07, 0.37", "-140.771, 313.841, -172.132, 0.37", "-140.951, 315.066, -172.144, 0.96", "-141.031, 315.613, -172.147, 1.33", "-141.147, 316.311, -172.15, 1.4", "-141.458, 317.912, -172.163, 0.52", "-141.718, 319.064, -172.175, 0.44", "-142.128, 320.55, -172.196, 0.37", "-142.507, 321.867, -172.219, 0.37", "-142.814, 322.965, -172.239, 0.37", "-143.019, 323.707, -172.253, 0.37", "-143.416, 324.962, -172.278, 0.74", "-143.532, 325.241, -172.283, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-132.454, 254.395, -160.666, 0.37", "-132.568, 256.103, -162.111, 0.37", "-132.566, 257.328, -163.026, 0.74", "-132.403, 259.271, -164.455, 0.29", "-132.243, 260.294, -165.262, 0.29", "-132.024, 261.355, -166.111, 1.25", "-131.926, 261.773, -166.449, 1.25", "-131.596, 262.851, -167.279, 0.29", "-131.193, 263.906, -168.077, 0.29", "-130.717, 265.04, -168.958, 0.29", "-130.463, 265.696, -169.548, 0.29", "-130.294, 266.263, -170.142, 0.29", "-130.135, 266.935, -170.908, 0.29", "-130.062, 267.703, -171.807, 1.03", "-130.051, 269.228, -173.501, 0.37", "-130.064, 270.065, -174.39, 0.37", "-130.046, 270.77, -175.198, 0.37", "-130.035, 271.376, -175.915, 1.03", "-130.027, 272.408, -177.179, 0.52", "-129.992, 273.138, -178.069, 0.52", "-129.894, 273.917, -178.877, 0.44", "-129.536, 275.634, -180.557, 1.62" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_51", "dend_22", "dend_17", "dend_0", "dend_26", "dend_23", "dend_21", "dend_18", "dend_2", "dend_1", "dend_50", "dend_27", "dend_25", "dend_24", "dend_20", "dend_19", "dend_4", "dend_3", "dend_49", "dend_28", "dend_16", "dend_5", "dend_30", "dend_29", "dend_7", "dend_6", "dend_48", "dend_31", "dend_11", "dend_8", "dend_37", "dend_32", "dend_15", "dend_12", "dend_10", "dend_9", "dend_43", "dend_38", "dend_36", "dend_33", "dend_14", "dend_13", "dend_45", "dend_44", "dend_42", "dend_39", "dend_35", "dend_34", "dend_47", "dend_46", "dend_41", "dend_40" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_51", "dend_22", "dend_17", "dend_0", "dend_26", "dend_23", "dend_21", "dend_18", "dend_2", "dend_1", "dend_50", "dend_27", "dend_25", "dend_24", "dend_20", "dend_19", "dend_4", "dend_3", "dend_49", "dend_28", "dend_16", "dend_5", "dend_30", "dend_29", "dend_7", "dend_6", "dend_48", "dend_31", "dend_11", "dend_8", "dend_37", "dend_32", "dend_15", "dend_12", "dend_10", "dend_9", "dend_43", "dend_38", "dend_36", "dend_33", "dend_14", "dend_13", "dend_45", "dend_44", "dend_42", "dend_39", "dend_35", "dend_34", "dend_47", "dend_46", "dend_41", "dend_40" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_5", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L5_LBC_93c04dc3d5_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_50, id: dend_50, parent: dend_26
create dend_50
public dend_50
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_49, id: dend_49, parent: dend_27
create dend_49
public dend_49
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_16, id: dend_16, parent: dend_4
create dend_16
public dend_16
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_48, id: dend_48, parent: dend_30
create dend_48
public dend_48
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_51(0), soma_0(0.4500009556479821)
    connect dend_22(0), soma_0(0.4500009556479821)
    connect dend_17(0), soma_0(0.4500009556479821)
    connect dend_0(0), soma_0(0.4500009556479821)
    connect axon_0(0), soma_0(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_50(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_49(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_16(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_48(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.24986, 8.66179, -0.266886, 1.81928 ) }
    soma_0 { pt3dadd( -1.99773, 7.71094, -0.243919, 3.13771 ) }
    soma_0 { pt3dadd( -1.74561, 6.7601, -0.220952, 4.2898 ) }
    soma_0 { pt3dadd( -1.49349, 5.80925, -0.197985, 6.24218 ) }
    soma_0 { pt3dadd( -1.24137, 4.8584, -0.175018, 7.75134 ) }
    soma_0 { pt3dadd( -0.989246, 3.90756, -0.152051, 8.81916 ) }
    soma_0 { pt3dadd( -0.737124, 2.95671, -0.129084, 9.30643 ) }
    soma_0 { pt3dadd( -0.485002, 2.00586, -0.106117, 9.79367 ) }
    soma_0 { pt3dadd( -0.23288, 1.05502, -0.0831497, 10.3575 ) }
    soma_0 { pt3dadd( 0.0192416, 0.104171, -0.0601827, 10.6175 ) }
    soma_0 { pt3dadd( 0.271364, -0.846675, -0.0372157, 10.6286 ) }
    soma_0 { pt3dadd( 0.523485, -1.79752, -0.0142487, 10.564 ) }
    soma_0 { pt3dadd( 0.775607, -2.74837, 0.00871831, 10.4925 ) }
    soma_0 { pt3dadd( 1.02773, -3.69921, 0.0316853, 10.2088 ) }
    soma_0 { pt3dadd( 1.27985, -4.65006, 0.0546523, 9.65193 ) }
    soma_0 { pt3dadd( 1.53197, -5.60091, 0.0776193, 9.00896 ) }
    soma_0 { pt3dadd( 1.7841, -6.55175, 0.100586, 8.08521 ) }
    soma_0 { pt3dadd( 2.03622, -7.5026, 0.123553, 6.83318 ) }
    soma_0 { pt3dadd( 2.28834, -8.45345, 0.14652, 5.15146 ) }
    soma_0 { pt3dadd( 2.54046, -9.40429, 0.169487, 3.38897 ) }
    soma_0 { pt3dadd( 2.79258, -10.3551, 0.192454, 2.13858 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 21/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -4.45367, 0.250762, 4.43561, 0.96 ) }
    dend_51 { pt3dadd( -5.06267, -0.398482, 5.42923, 0.96 ) }
    dend_51 { pt3dadd( -5.54937, -0.804235, 6.13272, 0.88 ) }
    dend_51 { pt3dadd( -7.15368, -1.93372, 8.1676, 0.81 ) }
    dend_51 { pt3dadd( -7.84909, -2.39822, 8.95773, 0.74 ) }
    dend_51 { pt3dadd( -8.94401, -3.16164, 10.1237, 0.66 ) }
    dend_51 { pt3dadd( -9.60746, -3.64349, 10.9305, 0.59 ) }
    dend_51 { pt3dadd( -10.1413, -4.08718, 11.7098, 0.81 ) }
    dend_51 { pt3dadd( -10.5528, -4.4109, 12.3189, 0.81 ) }
    dend_51 { pt3dadd( -11.4274, -4.97108, 13.5712, 0.59 ) }
    dend_51 { pt3dadd( -12.1789, -5.38589, 14.6901, 1.33 ) }
    dend_51 { pt3dadd( -13.9848, -6.2519, 17.5227, 1.55 ) }
    dend_51 { pt3dadd( -15.3059, -6.83016, 19.7938, 0.74 ) }
    dend_51 { pt3dadd( -15.7749, -6.99012, 20.6217, 0.59 ) }
    dend_51 { pt3dadd( -16.427, -7.15442, 21.769, 1.03 ) }
    dend_51 { pt3dadd( -16.6909, -7.18552, 22.2202, 1.47 ) }
    dend_51 { pt3dadd( -17.431, -7.17708, 23.432, 1.47 ) }
    dend_51 { pt3dadd( -18.8917, -7.04659, 25.8345, 0.81 ) }
    dend_51 { pt3dadd( -19.4167, -7.00743, 26.8886, 0.59 ) }
    dend_51 { pt3dadd( -19.9012, -7.05581, 28.1213, 0.59 ) }
    dend_51 { pt3dadd( -20.2034, -7.16671, 29.0104, 0.96 ) }
    dend_51 { pt3dadd( -20.4778, -7.36283, 29.9652, 0.96 ) }
    dend_51 { pt3dadd( -21.2023, -8.10225, 32.9767, 0.59 ) }
    dend_51 { pt3dadd( -21.5009, -8.5962, 34.8082, 0.59 ) }
    dend_51 { pt3dadd( -21.6408, -8.99523, 36.2278, 0.44 ) }
    dend_51 { pt3dadd( -21.6915, -9.26777, 37.1192, 1.18 ) }
    dend_51 { pt3dadd( -21.7163, -9.584, 37.9045, 1.47 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 48/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -1.51366, 8.37777, 1.68561, 3.24 ) }
    dend_22 { pt3dadd( -1.51916, 8.97599, 1.7941, 3.24 ) }
    dend_22 { pt3dadd( -1.53782, 11.0077, 2.16255, 2.58 ) }
    dend_22 { pt3dadd( -1.55243, 12.5978, 2.4509, 2.36 ) }
    dend_22 { pt3dadd( -1.56433, 13.893, 2.68579, 2.36 ) }
    dend_22 { pt3dadd( -1.57809, 15.3913, 2.9575, 2.36 ) }
    dend_22 { pt3dadd( -1.58474, 16.1152, 3.08878, 2.5 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 55/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 5.55634, -6.66873, 3.06561, 1.18 ) }
    dend_17 { pt3dadd( 5.77959, -6.75064, 3.26778, 1.18 ) }
    dend_17 { pt3dadd( 7.14356, -7.37233, 4.25744, 0.88 ) }
    dend_17 { pt3dadd( 7.89319, -7.71739, 4.68341, 1.11 ) }
    dend_17 { pt3dadd( 9.97928, -8.62079, 5.62231, 1.33 ) }
    dend_17 { pt3dadd( 11.0185, -9.03677, 5.98935, 1.33 ) }
    dend_17 { pt3dadd( 12.1982, -9.49609, 6.4065, 1.25 ) }
    dend_17 { pt3dadd( 13.6229, -10.0365, 6.83658, 0.96 ) }
    dend_17 { pt3dadd( 14.781, -10.4936, 7.09733, 0.96 ) }
    dend_17 { pt3dadd( 15.7463, -10.8962, 7.25376, 1.25 ) }
    dend_17 { pt3dadd( 16.9325, -11.356, 7.41459, 1.25 ) }
    dend_17 { pt3dadd( 18.6044, -11.8962, 7.74025, 1.47 ) }
    dend_17 { pt3dadd( 19.7199, -12.1874, 8.04138, 0.74 ) }
    dend_17 { pt3dadd( 20.5796, -12.3438, 8.38735, 0.74 ) }
    dend_17 { pt3dadd( 21.8457, -12.5192, 8.99668, 0.59 ) }
    dend_17 { pt3dadd( 23.4842, -12.723, 9.81622, 0.59 ) }
    dend_17 { pt3dadd( 24.1385, -12.7976, 10.13, 0.81 ) }
    dend_17 { pt3dadd( 24.8908, -12.8816, 10.423, 0.81 ) }
    dend_17 { pt3dadd( 26.6513, -13.0158, 11.166, 0.52 ) }
    dend_17 { pt3dadd( 27.3232, -13.0275, 11.4598, 0.52 ) }
    dend_17 { pt3dadd( 28.4135, -12.9968, 11.926, 0.52 ) }
    dend_17 { pt3dadd( 29.263, -13.0974, 12.1831, 0.59 ) }
    dend_17 { pt3dadd( 30.5822, -13.4875, 12.431, 1.47 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 78/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.77634, -10.3018, 1.87561, 2.43 ) }
    dend_0 { pt3dadd( 1.77634, -10.3018, 1.87561, 2.43 ) }
    dend_0 { pt3dadd( 1.83876, -11.3527, 1.63046, 2.06 ) }
    dend_0 { pt3dadd( 1.932, -12.9224, 1.26428, 1.33 ) }
    dend_0 { pt3dadd( 2.02356, -14.4638, 0.90473, 0.88 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 83/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.79258, -10.3551, 0.192454, 0.59 ) }
    axon_0 { pt3dadd( 6.63706, -24.8541, 0.192454, 0.59 ) }
    axon_0 { pt3dadd( 10.4816, -39.353, 0.192454, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 86/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -1.58474, 16.1152, 3.08878, 2.06 ) }
    dend_26 { pt3dadd( -1.1221, 16.8649, 4.07749, 2.06 ) }
    dend_26 { pt3dadd( -0.192168, 18.4367, 5.89808, 1.92 ) }
    dend_26 { pt3dadd( 0.688106, 20.0094, 7.56255, 1.47 ) }
    dend_26 { pt3dadd( 1.07587, 20.7603, 8.28359, 1.47 ) }
    dend_26 { pt3dadd( 1.67492, 22.0202, 9.37519, 1.25 ) }
    dend_26 { pt3dadd( 2.11752, 22.951, 10.1817, 1.77 ) }
    dend_26 { pt3dadd( 2.56482, 23.9622, 11.0097, 1.55 ) }
    dend_26 { pt3dadd( 3.07516, 25.2201, 11.8167, 1.62 ) }
    dend_26 { pt3dadd( 3.39707, 26.1131, 12.2826, 2.21 ) }
    dend_26 { pt3dadd( 3.72254, 27.1152, 12.7522, 2.65 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 97/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.58474, 16.1152, 3.08878, 0.59 ) }
    dend_23 { pt3dadd( -3.45897, 16.3473, 2.68715, 0.59 ) }
    dend_23 { pt3dadd( -4.48518, 16.3976, 2.49661, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( -5.37657, 16.3724, 2.28367, 0.59 ) }
    dend_23 { pt3dadd( -7.18637, 16.2467, 1.69555, 0.52 ) }
    dend_23 { pt3dadd( -8.38582, 16.1589, 1.24077, 0.81 ) }
    dend_23 { pt3dadd( -9.3054, 16.101, 0.870565, 1.18 ) }
    dend_23 { pt3dadd( -9.99992, 16.0249, 0.592044, 1.18 ) }
    dend_23 { pt3dadd( -11.6872, 15.8107, -0.120639, 0.66 ) }
    dend_23 { pt3dadd( -13.1756, 15.6516, -0.73748, 0.66 ) }
    dend_23 { pt3dadd( -14.1605, 15.5813, -1.1126, 1.25 ) }
    dend_23 { pt3dadd( -14.721, 15.561, -1.30124, 1.47 ) }
    dend_23 { pt3dadd( -15.993, 15.5597, -1.69793, 0.52 ) }
    dend_23 { pt3dadd( -16.9264, 15.586, -1.93151, 0.52 ) }
    dend_23 { pt3dadd( -18.4559, 15.6603, -2.11121, 0.52 ) }
    dend_23 { pt3dadd( -19.4267, 15.6856, -2.12558, 1.03 ) }
    dend_23 { pt3dadd( -20.1222, 15.6728, -2.11071, 1.33 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 14/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 30.5822, -13.4875, 12.431, 0.52 ) }
    dend_21 { pt3dadd( 30.901, -15.114, 11.4844, 0.52 ) }
    dend_21 { pt3dadd( 30.9018, -15.7974, 11.0817, 0.37 ) }
    dend_21 { pt3dadd( 30.7334, -17.3527, 10.0846, 0.37 ) }
    dend_21 { pt3dadd( 30.5238, -18.4153, 9.231, 0.59 ) }
    dend_21 { pt3dadd( 30.388, -18.975, 8.71446, 0.22 ) }
    dend_21 { pt3dadd( 30.0456, -20.2051, 7.55373, 0.22 ) }
    dend_21 { pt3dadd( 29.7606, -20.9943, 6.71971, 0.22 ) }
    dend_21 { pt3dadd( 29.2105, -22.2601, 5.31435, 0.74 ) }
    dend_21 { pt3dadd( 28.3046, -23.9893, 3.34483, 0.29 ) }
    dend_21 { pt3dadd( 27.706, -25.1134, 2.02868, 0.07 ) }
    dend_21 { pt3dadd( 27.4463, -25.6618, 1.33745, 0.07 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 26/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 30.5822, -13.4875, 12.431, 1.03 ) }
    dend_18 { pt3dadd( 32.0437, -13.6546, 13.7121, 1.03 ) }
    dend_18 { pt3dadd( 32.7355, -13.6974, 13.9717, 0.52 ) }
    dend_18 { pt3dadd( 33.8362, -13.6307, 14.2683, 0.52 ) }
    dend_18 { pt3dadd( 36.0543, -13.3772, 14.8061, 0.37 ) }
    dend_18 { pt3dadd( 37.3317, -13.2082, 15.0282, 0.37 ) }
    dend_18 { pt3dadd( 40.4374, -12.7714, 15.4381, 0.37 ) }
    dend_18 { pt3dadd( 48.5355, -11.5982, 15.902, 0.37 ) }
    dend_18 { pt3dadd( 53.3009, -10.876, 15.9481, 0.66 ) }
    dend_18 { pt3dadd( 54.5536, -10.6661, 15.9017, 0.66 ) }
    dend_18 { pt3dadd( 57.6044, -10.0647, 15.5698, 0.74 ) }
    dend_18 { pt3dadd( 58.9535, -9.74815, 15.3373, 0.74 ) }
    dend_18 { pt3dadd( 60.6942, -9.25885, 14.8526, 0.37 ) }
    dend_18 { pt3dadd( 61.7767, -8.92585, 14.4421, 0.37 ) }
    dend_18 { pt3dadd( 62.8294, -8.68983, 14.0882, 0.37 ) }
    dend_18 { pt3dadd( 63.8227, -8.45329, 13.9195, 0.81 ) }
    dend_18 { pt3dadd( 65.0594, -8.09678, 13.9836, 0.81 ) }
    dend_18 { pt3dadd( 66.0121, -7.81349, 14.1179, 0.81 ) }
    dend_18 { pt3dadd( 67.5223, -7.47989, 14.4386, 0.37 ) }
    dend_18 { pt3dadd( 68.6524, -7.38629, 14.6742, 0.29 ) }
    dend_18 { pt3dadd( 69.9169, -7.46261, 14.9369, 0.29 ) }
    dend_18 { pt3dadd( 71.4721, -7.72374, 15.315, 0.44 ) }
    dend_18 { pt3dadd( 72.6326, -8.0168, 15.6862, 0.44 ) }
    dend_18 { pt3dadd( 74.4239, -8.55086, 16.3379, 0.44 ) }
    dend_18 { pt3dadd( 76.0012, -9.04681, 16.927, 0.88 ) }
    dend_18 { pt3dadd( 76.6669, -9.23909, 17.2158, 0.88 ) }
    dend_18 { pt3dadd( 78.2391, -9.56634, 18.1171, 0.52 ) }
    dend_18 { pt3dadd( 79.6155, -9.63218, 19.1887, 0.74 ) }
    dend_18 { pt3dadd( 80.7126, -9.46084, 20.182, 0.81 ) }
    dend_18 { pt3dadd( 81.3767, -9.22742, 20.8056, 0.81 ) }
    dend_18 { pt3dadd( 82.2166, -8.84141, 21.5713, 0.52 ) }
    dend_18 { pt3dadd( 83.3125, -8.30398, 22.4788, 0.52 ) }
    dend_18 { pt3dadd( 83.8876, -8.04058, 22.8811, 0.74 ) }
    dend_18 { pt3dadd( 84.8234, -7.70088, 23.4095, 0.74 ) }
    dend_18 { pt3dadd( 85.8624, -7.46077, 23.9001, 0.59 ) }
    dend_18 { pt3dadd( 86.8975, -7.35958, 24.2797, 0.59 ) }
    dend_18 { pt3dadd( 88.2573, -7.37483, 24.6452, 0.66 ) }
    dend_18 { pt3dadd( 89.2926, -7.49042, 24.8046, 0.88 ) }
    dend_18 { pt3dadd( 89.9992, -7.63266, 24.85, 0.88 ) }
    dend_18 { pt3dadd( 90.8474, -7.92165, 24.8133, 0.52 ) }
    dend_18 { pt3dadd( 91.9084, -8.45725, 24.6519, 0.52 ) }
    dend_18 { pt3dadd( 92.6474, -8.98687, 24.4302, 0.52 ) }
    dend_18 { pt3dadd( 93.7714, -10.0999, 23.9219, 0.44 ) }
    dend_18 { pt3dadd( 94.4908, -10.8979, 23.4768, 0.44 ) }
    dend_18 { pt3dadd( 95.4274, -11.9806, 22.7639, 0.59 ) }
    dend_18 { pt3dadd( 95.8201, -12.4252, 22.4172, 0.74 ) }
    dend_18 { pt3dadd( 96.4549, -13.0128, 21.8311, 0.52 ) }
    dend_18 { pt3dadd( 97.0002, -13.1177, 21.4662, 0.37 ) }
    dend_18 { pt3dadd( 98.834, -12.3695, 20.7671, 0.52 ) }
    dend_18 { pt3dadd( 99.5526, -12.0459, 20.5442, 0.52 ) }
    dend_18 { pt3dadd( 100.413, -11.6907, 20.3223, 0.52 ) }
    dend_18 { pt3dadd( 101.869, -11.1814, 20.0095, 0.52 ) }
    dend_18 { pt3dadd( 103.252, -10.7129, 19.7751, 0.52 ) }
    dend_18 { pt3dadd( 104.613, -10.2731, 19.5873, 0.66 ) }
    dend_18 { pt3dadd( 105.738, -9.97098, 19.4787, 0.66 ) }
    dend_18 { pt3dadd( 106.879, -9.66885, 19.369, 0.37 ) }
    dend_18 { pt3dadd( 107.951, -9.41422, 19.2708, 0.37 ) }
    dend_18 { pt3dadd( 109.14, -9.18793, 19.1781, 0.37 ) }
    dend_18 { pt3dadd( 109.952, -9.04902, 19.0916, 0.66 ) }
    dend_18 { pt3dadd( 110.372, -8.98451, 19.0193, 0.66 ) }
    dend_18 { pt3dadd( 110.896, -8.91486, 18.8477, 0.66 ) }
    dend_18 { pt3dadd( 111.426, -8.87391, 18.5915, 0.66 ) }
    dend_18 { pt3dadd( 112.255, -8.86687, 18.1025, 0.37 ) }
    dend_18 { pt3dadd( 113.398, -8.94361, 17.3867, 0.37 ) }
    dend_18 { pt3dadd( 114.584, -9.02743, 16.7188, 0.37 ) }
    dend_18 { pt3dadd( 115.584, -9.05851, 16.232, 0.22 ) }
    dend_18 { pt3dadd( 116.534, -9.06199, 15.8673, 0.37 ) }
    dend_18 { pt3dadd( 117.292, -9.00436, 15.6936, 0.44 ) }
    dend_18 { pt3dadd( 118.018, -8.8548, 15.6693, 0.44 ) }
    dend_18 { pt3dadd( 119.519, -8.36749, 15.9126, 0.52 ) }
    dend_18 { pt3dadd( 119.996, -8.17515, 16.039, 0.37 ) }
    dend_18 { pt3dadd( 120.74, -7.8426, 16.2745, 0.37 ) }
    dend_18 { pt3dadd( 121.468, -7.51265, 16.477, 0.52 ) }
    dend_18 { pt3dadd( 121.991, -7.24566, 16.546, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_18 { pt3dadd( 122.423, -7.00088, 16.5183, 0.88 ) }
    dend_18 { pt3dadd( 122.73, -6.79641, 16.4474, 0.88 ) }
    dend_18 { pt3dadd( 123.126, -6.49872, 16.3449, 1.03 ) }
    dend_18 { pt3dadd( 123.625, -6.07537, 16.2025, 1.03 ) }
    dend_18 { pt3dadd( 124.395, -5.42119, 15.9681, 0.52 ) }
    dend_18 { pt3dadd( 125.32, -4.68591, 15.6612, 0.29 ) }
    dend_18 { pt3dadd( 126.119, -4.17631, 15.4135, 0.66 ) }
    dend_18 { pt3dadd( 126.743, -3.83856, 15.2204, 0.81 ) }
    dend_18 { pt3dadd( 127.36, -3.55934, 15.0311, 0.81 ) }
    dend_18 { pt3dadd( 127.92, -3.3319, 14.8591, 0.81 ) }
    dend_18 { pt3dadd( 128.834, -3.0135, 14.6042, 0.37 ) }
    dend_18 { pt3dadd( 130.602, -2.54548, 14.11, 0.37 ) }
    dend_18 { pt3dadd( 131.485, -2.36767, 13.8857, 0.44 ) }
    dend_18 { pt3dadd( 132.239, -2.20929, 13.7122, 0.59 ) }
    dend_18 { pt3dadd( 132.928, -2.02731, 13.5763, 0.59 ) }
    dend_18 { pt3dadd( 133.929, -1.68765, 13.4205, 0.59 ) }
    dend_18 { pt3dadd( 134.834, -1.2941, 13.3266, 0.52 ) }
    dend_18 { pt3dadd( 135.844, -0.775105, 13.2548, 0.74 ) }
    dend_18 { pt3dadd( 136.54, -0.448165, 13.2376, 0.74 ) }
    dend_18 { pt3dadd( 137.551, -0.0415057, 13.1661, 0.37 ) }
    dend_18 { pt3dadd( 138.329, 0.224825, 13.0712, 0.44 ) }
    dend_18 { pt3dadd( 139.19, 0.481191, 12.9261, 0.66 ) }
    dend_18 { pt3dadd( 139.838, 0.637926, 12.7977, 0.74 ) }
    dend_18 { pt3dadd( 140.559, 0.739114, 12.644, 0.74 ) }
    dend_18 { pt3dadd( 142.071, 0.871293, 12.2926, 0.59 ) }
    dend_18 { pt3dadd( 142.504, 0.899226, 12.1804, 0.59 ) }
    dend_18 { pt3dadd( 143.135, 0.958103, 11.9966, 0.59 ) }
    dend_18 { pt3dadd( 143.765, 1.02649, 11.7768, 0.37 ) }
    dend_18 { pt3dadd( 144.737, 1.17414, 11.4149, 0.59 ) }
    dend_18 { pt3dadd( 145.585, 1.3478, 11.0743, 0.81 ) }
    dend_18 { pt3dadd( 146.22, 1.49904, 10.8534, 0.81 ) }
    dend_18 { pt3dadd( 147.19, 1.70826, 10.5651, 0.52 ) }
    dend_18 { pt3dadd( 148.257, 1.95098, 10.3101, 0.37 ) }
    dend_18 { pt3dadd( 148.984, 2.13054, 10.1876, 0.29 ) }
    dend_18 { pt3dadd( 149.526, 2.2755, 10.1453, 0.29 ) }
    dend_18 { pt3dadd( 150.725, 2.67207, 10.1855, 0.52 ) }
    dend_18 { pt3dadd( 151.901, 3.1355, 10.3201, 0.52 ) }
    dend_18 { pt3dadd( 152.684, 3.43573, 10.4528, 0.88 ) }
    dend_18 { pt3dadd( 153.328, 3.64713, 10.5418, 0.88 ) }
    dend_18 { pt3dadd( 153.833, 3.77881, 10.5445, 0.88 ) }
    dend_18 { pt3dadd( 154.955, 4.03074, 10.4016, 0.37 ) }
    dend_18 { pt3dadd( 155.742, 4.20985, 10.1652, 0.37 ) }
    dend_18 { pt3dadd( 156.859, 4.46251, 9.70364, 0.37 ) }
    dend_18 { pt3dadd( 158.198, 4.69889, 9.12545, 0.29 ) }
    dend_18 { pt3dadd( 159.227, 4.85845, 8.59005, 0.29 ) }
    dend_18 { pt3dadd( 159.861, 4.98001, 8.22877, 0.52 ) }
    dend_18 { pt3dadd( 160.185, 5.05928, 8.02531, 0.74 ) }
    dend_18 { pt3dadd( 160.737, 5.24395, 7.63947, 0.44 ) }
    dend_18 { pt3dadd( 161.835, 5.68434, 6.87512, 0.37 ) }
    dend_18 { pt3dadd( 163.618, 6.45201, 5.7237, 0.44 ) }
    dend_18 { pt3dadd( 164.627, 6.86265, 5.06882, 0.44 ) }
    dend_18 { pt3dadd( 165.637, 7.25178, 4.35964, 1.03 ) }
    dend_18 { pt3dadd( 166.65, 7.62807, 3.5946, 1.47 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 2.02356, -14.4638, 0.90473, 1.18 ) }
    dend_2 { pt3dadd( 1.77886, -16.0598, 2.49648, 1.18 ) }
    dend_2 { pt3dadd( 1.58949, -16.7836, 3.19878, 1.18 ) }
    dend_2 { pt3dadd( 1.10917, -18.6193, 4.98015, 1.18 ) }
    dend_2 { pt3dadd( 0.766631, -19.9284, 6.25051, 0.88 ) }
    dend_2 { pt3dadd( 0.55346, -20.7431, 7.04109, 0.74 ) }
    dend_2 { pt3dadd( 0.367488, -21.4539, 7.7308, 1.03 ) }
    dend_2 { pt3dadd( -0.177789, -22.7695, 8.82083, 1.33 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 61/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 2.02356, -14.4638, 0.90473, 0.96 ) }
    dend_1 { pt3dadd( 2.35022, -15.6989, -1.67952, 0.96 ) }
    dend_1 { pt3dadd( 2.62337, -16.8286, -3.62169, 0.96 ) }
    dend_1 { pt3dadd( 2.6498, -16.9917, -3.87263, 1.4 ) }
    dend_1 { pt3dadd( 3.02225, -19.105, -6.92097, 0.88 ) }
    dend_1 { pt3dadd( 3.12181, -19.5562, -7.53086, 0.88 ) }
    dend_1 { pt3dadd( 3.33588, -20.3525, -8.56118, 0.52 ) }
    dend_1 { pt3dadd( 3.68863, -21.4099, -9.80153, 0.52 ) }
    dend_1 { pt3dadd( 4.30979, -23.1707, -11.7381, 0.88 ) }
    dend_1 { pt3dadd( 5.13205, -25.3838, -14.0106, 0.52 ) }
    dend_1 { pt3dadd( 5.82745, -27.076, -15.6292, 0.52 ) }
    dend_1 { pt3dadd( 6.29319, -28.0744, -16.5867, 0.52 ) }
    dend_1 { pt3dadd( 6.82722, -29.1643, -17.5953, 0.52 ) }
    dend_1 { pt3dadd( 7.27174, -30.0722, -18.3817, 0.52 ) }
    dend_1 { pt3dadd( 7.84664, -31.2735, -19.2758, 0.88 ) }
    dend_1 { pt3dadd( 8.19795, -32.1869, -19.8394, 1.11 ) }
    dend_1 { pt3dadd( 8.78706, -34.141, -20.8819, 0.44 ) }
    dend_1 { pt3dadd( 9.1126, -35.4088, -21.5206, 0.74 ) }
    dend_1 { pt3dadd( 9.33748, -36.314, -21.94, 0.96 ) }
    dend_1 { pt3dadd( 9.58009, -37.214, -22.321, 0.96 ) }
    dend_1 { pt3dadd( 9.97148, -38.622, -22.9452, 0.66 ) }
    dend_1 { pt3dadd( 10.1566, -39.2979, -23.2718, 0.66 ) }
    dend_1 { pt3dadd( 10.6415, -40.9507, -24.1326, 0.44 ) }
    dend_1 { pt3dadd( 10.9546, -41.8093, -24.7984, 0.59 ) }
    dend_1 { pt3dadd( 11.3405, -42.6404, -25.6251, 0.44 ) }
    dend_1 { pt3dadd( 12.1547, -43.975, -27.6839, 0.37 ) }
    dend_1 { pt3dadd( 12.697, -44.6744, -29.2986, 0.96 ) }
    dend_1 { pt3dadd( 12.8998, -44.9068, -29.9706, 1.33 ) }
    dend_1 { pt3dadd( 14.0927, -46.2726, -34.651, 0.81 ) }
    dend_1 { pt3dadd( 14.3602, -46.5974, -35.8658, 1.11 ) }
    dend_1 { pt3dadd( 15.4908, -48.1407, -41.7881, 0.66 ) }
    dend_1 { pt3dadd( 16.2205, -49.3756, -46.3408, 1.55 ) }
    dend_1 { pt3dadd( 16.785, -50.6407, -50.4826, 0.96 ) }
    dend_1 { pt3dadd( 17.1813, -51.9819, -54.3171, 0.81 ) }
    dend_1 { pt3dadd( 17.2619, -52.5776, -55.7081, 0.96 ) }
    dend_1 { pt3dadd( 17.2534, -53.3133, -57.0185, 0.37 ) }
    dend_1 { pt3dadd( 17.0878, -54.6012, -58.4849, 0.29 ) }
    dend_1 { pt3dadd( 16.8016, -56.1178, -59.5671, 0.29 ) }
    dend_1 { pt3dadd( 16.6011, -57.0489, -59.9736, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 16.5076, -57.5866, -60.1115, 0.52 ) }
    dend_1 { pt3dadd( 16.1914, -59.9144, -60.6947, 0.29 ) }
    dend_1 { pt3dadd( 16.1251, -60.5574, -60.8723, 0.59 ) }
    dend_1 { pt3dadd( 16.0842, -61.1396, -61.0375, 0.59 ) }
    dend_1 { pt3dadd( 16.0332, -61.8806, -61.2716, 0.29 ) }
    dend_1 { pt3dadd( 15.9355, -63.3897, -61.8204, 0.29 ) }
    dend_1 { pt3dadd( 15.8529, -64.864, -62.456, 0.59 ) }
    dend_1 { pt3dadd( 15.814, -65.3663, -62.7124, 0.81 ) }
    dend_1 { pt3dadd( 15.571, -67.6567, -64.0034, 0.22 ) }
    dend_1 { pt3dadd( 15.4367, -68.8072, -64.7362, 0.22 ) }
    dend_1 { pt3dadd( 15.2461, -70.4048, -65.8545, 0.22 ) }
    dend_1 { pt3dadd( 15.0171, -72.2806, -67.2397, 0.81 ) }
    dend_1 { pt3dadd( 14.8011, -73.9639, -68.592, 0.44 ) }
    dend_1 { pt3dadd( 14.6784, -74.9305, -69.4213, 0.44 ) }
    dend_1 { pt3dadd( 14.4802, -76.5535, -70.897, 0.88 ) }
    dend_1 { pt3dadd( 14.3895, -77.6767, -71.8696, 0.74 ) }
    dend_1 { pt3dadd( 14.3647, -78.1438, -72.2475, 0.74 ) }
    dend_1 { pt3dadd( 14.2094, -80.4572, -73.9341, 0.44 ) }
    dend_1 { pt3dadd( 14.134, -81.4767, -74.5863, 0.44 ) }
    dend_1 { pt3dadd( 14.0214, -82.3242, -75.097, 0.29 ) }
    dend_1 { pt3dadd( 13.7623, -83.6035, -75.7787, 0.29 ) }
    dend_1 { pt3dadd( 13.1653, -85.7372, -76.8328, 0.29 ) }
    dend_1 { pt3dadd( 12.751, -86.9681, -77.395, 0.74 ) }
    dend_1 { pt3dadd( 12.362, -87.9908, -77.7832, 0.74 ) }
    dend_1 { pt3dadd( 11.5477, -89.9379, -78.5178, 0.44 ) }
    dend_1 { pt3dadd( 11.1576, -90.8323, -78.8326, 0.44 ) }
    dend_1 { pt3dadd( 10.7385, -91.8078, -79.1267, 0.29 ) }
    dend_1 { pt3dadd( 10.5685, -92.229, -79.2124, 0.66 ) }
    dend_1 { pt3dadd( 10.1216, -93.3455, -79.4086, 0.37 ) }
    dend_1 { pt3dadd( 9.75059, -94.2544, -79.5334, 0.88 ) }
    dend_1 { pt3dadd( 9.36914, -95.0786, -79.6459, 0.88 ) }
    dend_1 { pt3dadd( 8.79371, -96.1817, -79.8583, 0.59 ) }
    dend_1 { pt3dadd( 8.18192, -97.2419, -80.1045, 0.29 ) }
    dend_1 { pt3dadd( 7.51753, -98.288, -80.4899, 0.66 ) }
    dend_1 { pt3dadd( 7.20225, -98.7574, -80.7421, 0.66 ) }
    dend_1 { pt3dadd( 6.27868, -100.276, -81.8587, 0.22 ) }
    dend_1 { pt3dadd( 5.99411, -100.839, -82.3564, 0.22 ) }
    dend_1 { pt3dadd( 5.79563, -101.282, -82.7929, 0.74 ) }
    dend_1 { pt3dadd( 5.27476, -102.845, -84.4804, 0.44 ) }
    dend_1 { pt3dadd( 5.07756, -103.791, -85.5749, 0.44 ) }
    dend_1 { pt3dadd( 4.94989, -105.078, -87.1643, 0.29 ) }
    dend_1 { pt3dadd( 4.98427, -105.46, -87.677, 0.44 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 42/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 10.4816, -39.353, 0.192454, 0.15 ) }
    axon_1 { pt3dadd( 14.326, -53.852, 0.192454, 0.15 ) }
    axon_1 { pt3dadd( 18.1705, -68.351, 0.192454, 0.15 ) }
    // Section: dend_50, id: dend_50, parent: dend_26 (entry count 45/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 3.72254, 27.1152, 12.7522, 0.81 ) }
    dend_50 { pt3dadd( 5.3227, 28.2882, 12.8519, 0.81 ) }
    dend_50 { pt3dadd( 6.00787, 28.7786, 12.8282, 0.81 ) }
    dend_50 { pt3dadd( 7.25232, 29.5708, 12.7175, 0.81 ) }
    dend_50 { pt3dadd( 8.92539, 30.5296, 12.5343, 0.96 ) }
    dend_50 { pt3dadd( 9.80786, 31.0024, 12.4294, 1.25 ) }
    dend_50 { pt3dadd( 10.5807, 31.3957, 12.337, 1.25 ) }
    dend_50 { pt3dadd( 12.0158, 32.1122, 12.1288, 0.96 ) }
    dend_50 { pt3dadd( 13.2052, 32.7163, 11.9344, 0.81 ) }
    dend_50 { pt3dadd( 14.287, 33.2594, 11.7383, 1.33 ) }
    dend_50 { pt3dadd( 14.9965, 33.6007, 11.5759, 1.62 ) }
    dend_50 { pt3dadd( 16.0655, 34.0715, 11.3314, 0.74 ) }
    dend_50 { pt3dadd( 17.0438, 34.4642, 11.1236, 0.59 ) }
    dend_50 { pt3dadd( 18.0318, 34.872, 10.9072, 0.52 ) }
    dend_50 { pt3dadd( 19.1841, 35.4179, 10.5388, 0.44 ) }
    dend_50 { pt3dadd( 19.9097, 35.7565, 10.1974, 0.44 ) }
    dend_50 { pt3dadd( 21.2413, 36.2695, 9.35778, 0.74 ) }
    dend_50 { pt3dadd( 22.0462, 36.4915, 8.74388, 0.74 ) }
    dend_50 { pt3dadd( 23.3623, 36.6779, 7.65278, 0.52 ) }
    dend_50 { pt3dadd( 24.4884, 36.7132, 6.73641, 0.88 ) }
    dend_50 { pt3dadd( 25.6589, 36.7063, 5.75514, 0.88 ) }
    dend_50 { pt3dadd( 26.6749, 36.7862, 4.81438, 0.59 ) }
    dend_50 { pt3dadd( 27.1764, 36.8564, 4.32203, 0.59 ) }
    dend_50 { pt3dadd( 27.7777, 36.9421, 3.76287, 0.44 ) }
    dend_50 { pt3dadd( 28.6948, 37.0946, 3.13878, 0.44 ) }
    dend_50 { pt3dadd( 29.4472, 37.3071, 2.78073, 0.44 ) }
    dend_50 { pt3dadd( 31.0028, 37.9875, 2.30959, 0.44 ) }
    dend_50 { pt3dadd( 32.2832, 38.7315, 2.02069, 0.74 ) }
    dend_50 { pt3dadd( 33.3581, 39.5437, 1.82577, 0.96 ) }
    dend_50 { pt3dadd( 35.3608, 41.4489, 1.57756, 0.44 ) }
    dend_50 { pt3dadd( 35.8147, 41.9576, 1.54145, 0.96 ) }
    dend_50 { pt3dadd( 36.6095, 42.9477, 1.5087, 0.37 ) }
    dend_50 { pt3dadd( 37.3667, 44.03, 1.50575, 0.37 ) }
    dend_50 { pt3dadd( 38.125, 45.2897, 1.31079, 0.37 ) }
    dend_50 { pt3dadd( 38.6714, 46.332, 0.987437, 0.74 ) }
    dend_50 { pt3dadd( 39.0477, 47.0817, 0.632151, 0.44 ) }
    dend_50 { pt3dadd( 39.5125, 48.04, 0.137796, 0.52 ) }
    dend_50 { pt3dadd( 39.8453, 48.7839, -0.271828, 1.11 ) }
    dend_50 { pt3dadd( 40.7886, 51.0015, -1.5146, 0.44 ) }
    dend_50 { pt3dadd( 41.2597, 52.1949, -2.16629, 0.29 ) }
    dend_50 { pt3dadd( 41.6419, 53.3099, -2.76505, 0.29 ) }
    dend_50 { pt3dadd( 41.8952, 54.1434, -3.18161, 0.81 ) }
    dend_50 { pt3dadd( 42.103, 54.8654, -3.51446, 0.81 ) }
    dend_50 { pt3dadd( 42.425, 55.963, -3.96175, 0.52 ) }
    dend_50 { pt3dadd( 42.8426, 57.4334, -4.47019, 0.52 ) }
    dend_50 { pt3dadd( 43.313, 59.14, -5.1278, 0.44 ) }
    dend_50 { pt3dadd( 43.4268, 59.6045, -5.32352, 0.88 ) }
    dend_50 { pt3dadd( 43.6237, 60.3715, -5.67456, 0.88 ) }
    dend_50 { pt3dadd( 43.9548, 61.4374, -6.1731, 0.37 ) }
    dend_50 { pt3dadd( 44.2941, 62.2287, -6.60658, 0.22 ) }
    dend_50 { pt3dadd( 44.6813, 62.981, -7.04481, 0.22 ) }
    dend_50 { pt3dadd( 45.1223, 63.7245, -7.49543, 0.22 ) }
    dend_50 { pt3dadd( 45.7505, 64.6446, -8.0866, 0.22 ) }
    dend_50 { pt3dadd( 46.6383, 65.8482, -8.803, 0.22 ) }
    dend_50 { pt3dadd( 48.0118, 67.5436, -9.70842, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_50 { pt3dadd( 48.4562, 68.0396, -9.9251, 0.81 ) }
    dend_50 { pt3dadd( 49.3536, 68.9512, -10.2573, 0.81 ) }
    dend_50 { pt3dadd( 50.151, 69.7277, -10.4774, 0.44 ) }
    dend_50 { pt3dadd( 51.206, 70.7579, -10.6985, 0.44 ) }
    dend_50 { pt3dadd( 51.5897, 71.1477, -10.7445, 0.96 ) }
    dend_50 { pt3dadd( 52.2659, 71.8589, -10.7596, 0.52 ) }
    dend_50 { pt3dadd( 53.1189, 72.7166, -10.7744, 0.37 ) }
    dend_50 { pt3dadd( 53.871, 73.4761, -10.7809, 0.66 ) }
    dend_50 { pt3dadd( 54.4834, 74.097, -10.823, 0.66 ) }
    dend_50 { pt3dadd( 55.111, 74.7469, -10.9052, 0.29 ) }
    dend_50 { pt3dadd( 56.0336, 75.7004, -11.0239, 0.29 ) }
    dend_50 { pt3dadd( 56.9335, 76.6189, -11.1277, 0.59 ) }
    dend_50 { pt3dadd( 57.553, 77.2233, -11.1854, 0.37 ) }
    dend_50 { pt3dadd( 58.3136, 77.9109, -11.2608, 0.66 ) }
    dend_50 { pt3dadd( 58.9469, 78.46, -11.3244, 0.66 ) }
    dend_50 { pt3dadd( 60.0615, 79.4197, -11.4324, 0.29 ) }
    dend_50 { pt3dadd( 60.8873, 80.1585, -11.5014, 0.29 ) }
    dend_50 { pt3dadd( 61.4151, 80.632, -11.5476, 0.29 ) }
    dend_50 { pt3dadd( 61.9046, 81.0235, -11.5994, 0.66 ) }
    dend_50 { pt3dadd( 62.2663, 81.293, -11.6413, 0.66 ) }
    dend_50 { pt3dadd( 62.7383, 81.65, -11.7494, 0.66 ) }
    dend_50 { pt3dadd( 63.5254, 82.2697, -12.0078, 0.37 ) }
    dend_50 { pt3dadd( 64.424, 82.9748, -12.3993, 0.37 ) }
    dend_50 { pt3dadd( 65.5037, 83.7824, -12.984, 0.96 ) }
    dend_50 { pt3dadd( 66.1052, 84.1857, -13.3355, 0.96 ) }
    dend_50 { pt3dadd( 67.658, 85.118, -14.2752, 0.29 ) }
    dend_50 { pt3dadd( 68.6803, 85.6838, -14.9227, 0.29 ) }
    dend_50 { pt3dadd( 69.6228, 86.1959, -15.4951, 0.29 ) }
    dend_50 { pt3dadd( 70.9741, 86.8931, -16.1984, 0.29 ) }
    dend_50 { pt3dadd( 71.7044, 87.2414, -16.5094, 0.74 ) }
    dend_50 { pt3dadd( 72.3593, 87.5415, -16.7432, 0.74 ) }
    dend_50 { pt3dadd( 74.0846, 88.3545, -17.1553, 0.29 ) }
    dend_50 { pt3dadd( 76.1674, 89.4373, -17.4957, 0.29 ) }
    dend_50 { pt3dadd( 78.3238, 90.6639, -17.6602, 0.29 ) }
    dend_50 { pt3dadd( 79.334, 91.3041, -17.6677, 0.29 ) }
    dend_50 { pt3dadd( 80.2345, 91.9243, -17.6428, 0.29 ) }
    dend_50 { pt3dadd( 81.693, 92.9973, -17.5012, 0.66 ) }
    dend_50 { pt3dadd( 82.4076, 93.5001, -17.4224, 0.66 ) }
    dend_50 { pt3dadd( 83.2985, 94.0336, -17.368, 0.37 ) }
    dend_50 { pt3dadd( 84.2336, 94.5206, -17.416, 1.03 ) }
    dend_50 { pt3dadd( 85.109, 94.8939, -17.522, 1.03 ) }
    dend_50 { pt3dadd( 86.4858, 95.3629, -17.797, 0.66 ) }
    dend_50 { pt3dadd( 89.2413, 96.1404, -18.5832, 0.22 ) }
    dend_50 { pt3dadd( 91.5672, 96.7381, -19.3483, 0.52 ) }
    dend_50 { pt3dadd( 93.6077, 97.2546, -20.0994, 0.29 ) }
    dend_50 { pt3dadd( 94.968, 97.6045, -20.659, 0.29 ) }
    dend_50 { pt3dadd( 96.2316, 97.9921, -21.2404, 0.66 ) }
    dend_50 { pt3dadd( 96.7808, 98.2213, -21.509, 0.66 ) }
    dend_50 { pt3dadd( 97.8927, 98.8828, -21.8912, 0.22 ) }
    dend_50 { pt3dadd( 98.5562, 99.3674, -22.0681, 0.52 ) }
    dend_50 { pt3dadd( 99.1074, 99.8192, -22.1683, 0.52 ) }
    dend_50 { pt3dadd( 101.501, 101.949, -22.4029, 0.22 ) }
    dend_50 { pt3dadd( 103.283, 103.578, -22.4697, 0.22 ) }
    dend_50 { pt3dadd( 105.921, 106.018, -22.4657, 0.22 ) }
    dend_50 { pt3dadd( 107.288, 107.303, -22.4189, 0.52 ) }
    dend_50 { pt3dadd( 108.045, 108.021, -22.3577, 0.22 ) }
    dend_50 { pt3dadd( 109.025, 108.972, -22.1807, 0.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 57/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 3.72254, 27.1152, 12.7522, 0.66 ) }
    dend_27 { pt3dadd( 3.15806, 29.7115, 13.05, 0.66 ) }
    dend_27 { pt3dadd( 3.0976, 30.5263, 13.1627, 0.74 ) }
    dend_27 { pt3dadd( 3.10446, 31.6072, 13.3677, 0.74 ) }
    dend_27 { pt3dadd( 3.13743, 32.657, 13.4275, 1.03 ) }
    dend_27 { pt3dadd( 3.18276, 33.6564, 13.4388, 1.03 ) }
    dend_27 { pt3dadd( 3.23423, 34.8316, 13.4221, 0.74 ) }
    dend_27 { pt3dadd( 3.41303, 36.2126, 13.4757, 1.11 ) }
    dend_27 { pt3dadd( 3.62362, 37.4411, 13.4615, 1.47 ) }
    dend_27 { pt3dadd( 4.10957, 39.953, 13.2023, 1.62 ) }
    dend_27 { pt3dadd( 4.24752, 40.7264, 13.0447, 1.62 ) }
    dend_27 { pt3dadd( 4.30803, 41.2081, 12.9061, 1.62 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 69/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -20.1222, 15.6728, -2.11071, 0.29 ) }
    dend_25 { pt3dadd( -20.9171, 15.8945, -1.05966, 0.29 ) }
    dend_25 { pt3dadd( -21.5595, 16.0738, -0.346132, 0.88 ) }
    dend_25 { pt3dadd( -22.2467, 16.2441, 0.358224, 1.11 ) }
    dend_25 { pt3dadd( -24.6095, 16.7892, 2.63826, 1.03 ) }
    dend_25 { pt3dadd( -25.3509, 16.9356, 3.3241, 0.59 ) }
    dend_25 { pt3dadd( -25.9453, 17.0368, 3.89147, 0.29 ) }
    dend_25 { pt3dadd( -26.7289, 17.1567, 4.71918, 0.29 ) }
    dend_25 { pt3dadd( -27.1674, 17.2319, 5.1937, 0.52 ) }
    dend_25 { pt3dadd( -27.4404, 17.2885, 5.4788, 0.74 ) }
    dend_25 { pt3dadd( -28.0556, 17.4355, 5.97722, 0.74 ) }
    dend_25 { pt3dadd( -29.2861, 17.7624, 7.01619, 0.37 ) }
    dend_25 { pt3dadd( -29.7798, 17.9129, 7.45553, 0.59 ) }
    dend_25 { pt3dadd( -30.1118, 18.0366, 7.73484, 0.59 ) }
    dend_25 { pt3dadd( -30.7826, 18.3197, 8.2307, 0.29 ) }
    dend_25 { pt3dadd( -31.6973, 18.7221, 8.84381, 0.59 ) }
    dend_25 { pt3dadd( -32.1196, 18.9037, 9.0632, 0.37 ) }
    dend_25 { pt3dadd( -33.1181, 19.2814, 9.42828, 0.29 ) }
    dend_25 { pt3dadd( -34.0208, 19.5835, 9.69345, 1.25 ) }
    dend_25 { pt3dadd( -34.3933, 19.6926, 9.77698, 1.62 ) }
    dend_25 { pt3dadd( -34.8036, 19.8171, 9.83028, 1.62 ) }
    dend_25 { pt3dadd( -36.0259, 20.2173, 9.91316, 0.29 ) }
    dend_25 { pt3dadd( -36.8113, 20.4699, 9.94534, 0.29 ) }
    dend_25 { pt3dadd( -37.6924, 20.7541, 9.95903, 0.52 ) }
    dend_25 { pt3dadd( -38.1617, 20.9087, 9.96295, 0.59 ) }
    dend_25 { pt3dadd( -39.5797, 21.3876, 9.96292, 0.22 ) }
    dend_25 { pt3dadd( -40.2712, 21.6333, 9.95409, 0.74 ) }
    dend_25 { pt3dadd( -40.9067, 21.8778, 9.95409, 0.74 ) }
    dend_25 { pt3dadd( -41.5807, 22.1462, 9.95409, 0.22 ) }
    dend_25 { pt3dadd( -42.0126, 22.3179, 9.95409, 0.37 ) }
    dend_25 { pt3dadd( -42.4295, 22.4957, 9.95409, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 0/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -20.1222, 15.6728, -2.11071, 0.44 ) }
    dend_24 { pt3dadd( -21.42, 15.1487, -2.39857, 0.44 ) }
    dend_24 { pt3dadd( -22.31, 14.7676, -2.58275, 0.44 ) }
    dend_24 { pt3dadd( -23.1514, 14.4032, -2.74463, 0.96 ) }
    dend_24 { pt3dadd( -23.9459, 14.0385, -2.91025, 1.25 ) }
    dend_24 { pt3dadd( -25.0372, 13.5074, -3.13139, 0.74 ) }
    dend_24 { pt3dadd( -25.78, 13.1342, -3.26429, 0.59 ) }
    dend_24 { pt3dadd( -26.4951, 12.762, -3.40251, 0.59 ) }
    dend_24 { pt3dadd( -27.1741, 12.4075, -3.56314, 0.59 ) }
    dend_24 { pt3dadd( -28.2316, 11.8784, -3.85949, 0.44 ) }
    dend_24 { pt3dadd( -29.6458, 11.2115, -4.30692, 0.81 ) }
    dend_24 { pt3dadd( -31.4225, 10.4275, -5.00177, 0.81 ) }
    dend_24 { pt3dadd( -32.2697, 10.051, -5.44919, 0.81 ) }
    dend_24 { pt3dadd( -33.103, 9.66687, -6.02389, 0.44 ) }
    dend_24 { pt3dadd( -33.7334, 9.38904, -6.52097, 0.44 ) }
    dend_24 { pt3dadd( -34.5322, 9.06876, -7.1606, 0.44 ) }
    dend_24 { pt3dadd( -35.8055, 8.61559, -8.18974, 0.44 ) }
    dend_24 { pt3dadd( -37.3431, 8.15505, -9.37693, 0.88 ) }
    dend_24 { pt3dadd( -38.4976, 7.8597, -10.142, 0.88 ) }
    dend_24 { pt3dadd( -39.6496, 7.60868, -10.7807, 0.52 ) }
    dend_24 { pt3dadd( -41.507, 7.29688, -11.6129, 0.52 ) }
    dend_24 { pt3dadd( -42.1869, 7.21372, -11.8518, 0.52 ) }
    dend_24 { pt3dadd( -43.3612, 7.11112, -12.0795, 0.88 ) }
    dend_24 { pt3dadd( -44.2494, 7.04632, -12.1456, 0.88 ) }
    dend_24 { pt3dadd( -45.1976, 6.95193, -12.1569, 1.18 ) }
    dend_24 { pt3dadd( -46.0885, 6.81156, -12.1419, 1.18 ) }
    dend_24 { pt3dadd( -47.4236, 6.48566, -12.0344, 0.74 ) }
    dend_24 { pt3dadd( -48.7983, 6.04287, -11.7817, 0.52 ) }
    dend_24 { pt3dadd( -50.1414, 5.5385, -11.4267, 0.52 ) }
    dend_24 { pt3dadd( -51.1851, 5.15252, -11.1094, 0.88 ) }
    dend_24 { pt3dadd( -52.6035, 4.68219, -10.6557, 0.88 ) }
    dend_24 { pt3dadd( -54.1466, 4.22376, -10.1533, 0.88 ) }
    dend_24 { pt3dadd( -55.9742, 3.74188, -9.5651, 1.03 ) }
    dend_24 { pt3dadd( -56.9578, 3.47701, -9.27909, 0.96 ) }
    dend_24 { pt3dadd( -58.2545, 3.1231, -8.92011, 0.74 ) }
    dend_24 { pt3dadd( -60.0264, 2.66668, -8.49089, 0.52 ) }
    dend_24 { pt3dadd( -60.7561, 2.47697, -8.36365, 0.81 ) }
    dend_24 { pt3dadd( -61.5836, 2.2393, -8.29975, 0.81 ) }
    dend_24 { pt3dadd( -62.8728, 1.78045, -8.28811, 0.52 ) }
    dend_24 { pt3dadd( -63.2927, 1.59527, -8.28602, 0.88 ) }
    dend_24 { pt3dadd( -63.8031, 1.31757, -8.28456, 1.18 ) }
    dend_24 { pt3dadd( -64.972, 0.662101, -8.27156, 1.18 ) }
    dend_24 { pt3dadd( -66.42, -0.0790397, -8.23894, 0.59 ) }
    dend_24 { pt3dadd( -67.0802, -0.382283, -8.21812, 0.74 ) }
    dend_24 { pt3dadd( -67.8589, -0.694473, -8.18856, 0.74 ) }
    dend_24 { pt3dadd( -68.9503, -1.10979, -8.09095, 0.44 ) }
    dend_24 { pt3dadd( -69.7259, -1.40719, -7.9911, 0.44 ) }
    dend_24 { pt3dadd( -70.4869, -1.71953, -7.87024, 0.74 ) }
    dend_24 { pt3dadd( -71.3411, -2.09179, -7.76673, 0.74 ) }
    dend_24 { pt3dadd( -72.146, -2.44392, -7.60764, 0.74 ) }
    dend_24 { pt3dadd( -73.8839, -3.19872, -7.15541, 0.29 ) }
    dend_24 { pt3dadd( -74.9762, -3.70377, -6.80644, 0.37 ) }
    dend_24 { pt3dadd( -76.1145, -4.2812, -6.39787, 0.37 ) }
    dend_24 { pt3dadd( -77.5169, -5.0243, -5.8596, 0.37 ) }
    dend_24 { pt3dadd( -79.9834, -6.37101, -4.97195, 0.74 ) }
    dend_24 { pt3dadd( -80.7594, -6.81793, -4.74025, 1.03 ) }
    dend_24 { pt3dadd( -82.3905, -7.82533, -4.30783, 0.59 ) }
    dend_24 { pt3dadd( -83.7605, -8.71045, -3.92143, 0.44 ) }
    dend_24 { pt3dadd( -84.6301, -9.27956, -3.67484, 0.88 ) }
    dend_24 { pt3dadd( -85.8425, -10.071, -3.35526, 0.74 ) }
    dend_24 { pt3dadd( -87.0282, -10.8259, -3.19822, 0.37 ) }
    dend_24 { pt3dadd( -88.4369, -11.593, -3.03701, 0.37 ) }
    dend_24 { pt3dadd( -89.1723, -11.8803, -2.97604, 0.81 ) }
    dend_24 { pt3dadd( -89.7885, -12.0206, -2.92503, 1.03 ) }
    dend_24 { pt3dadd( -90.3771, -12.074, -2.85667, 1.03 ) }
    dend_24 { pt3dadd( -91.1488, -12.0579, -2.73727, 0.66 ) }
    dend_24 { pt3dadd( -92.3061, -11.9531, -2.58661, 0.37 ) }
    dend_24 { pt3dadd( -93.37, -11.8271, -2.52527, 0.59 ) }
    dend_24 { pt3dadd( -94.3239, -11.6955, -2.49471, 0.59 ) }
    dend_24 { pt3dadd( -95.2411, -11.562, -2.4497, 0.37 ) }
    dend_24 { pt3dadd( -96.2613, -11.4313, -2.35099, 0.66 ) }
    dend_24 { pt3dadd( -97.0671, -11.3554, -2.31201, 0.88 ) }
    dend_24 { pt3dadd( -97.4358, -11.3271, -2.3287, 0.88 ) }
    dend_24 { pt3dadd( -99.1896, -11.1639, -2.56759, 0.29 ) }
    dend_24 { pt3dadd( -100.263, -11.0645, -2.82029, 0.29 ) }
    dend_24 { pt3dadd( -101.67, -10.9386, -3.30744, 0.29 ) }
    dend_24 { pt3dadd( -103.815, -10.7829, -4.25308, 0.44 ) }
    dend_24 { pt3dadd( -105.368, -10.7512, -5.05237, 0.44 ) }
    dend_24 { pt3dadd( -105.991, -10.7948, -5.4318, 0.44 ) }
    dend_24 { pt3dadd( -106.346, -10.8629, -5.69307, 0.59 ) }
    dend_24 { pt3dadd( -107.013, -11.0296, -6.21863, 0.59 ) }
    dend_24 { pt3dadd( -107.486, -11.159, -6.56556, 0.59 ) }
    dend_24 { pt3dadd( -108.399, -11.4357, -7.06988, 0.37 ) }
    dend_24 { pt3dadd( -109.16, -11.7028, -7.49696, 0.37 ) }
    dend_24 { pt3dadd( -109.84, -11.9499, -7.90443, 0.66 ) }
    dend_24 { pt3dadd( -110.489, -12.1994, -8.36381, 0.66 ) }
    dend_24 { pt3dadd( -111.106, -12.4655, -8.84622, 0.66 ) }
    dend_24 { pt3dadd( -112.232, -13.0004, -9.81036, 0.44 ) }
    dend_24 { pt3dadd( -113.198, -13.4843, -10.6757, 0.66 ) }
    dend_24 { pt3dadd( -113.751, -13.79, -11.2359, 0.66 ) }
    dend_24 { pt3dadd( -115.128, -14.5768, -12.7355, 0.29 ) }
    dend_24 { pt3dadd( -115.93, -15.0299, -13.6139, 0.29 ) }
    dend_24 { pt3dadd( -116.653, -15.4338, -14.3879, 0.66 ) }
    dend_24 { pt3dadd( -117.189, -15.711, -14.9097, 0.88 ) }
    dend_24 { pt3dadd( -119.135, -16.6082, -16.6319, 0.44 ) }
    dend_24 { pt3dadd( -119.818, -16.8844, -17.2216, 0.29 ) }
    dend_24 { pt3dadd( -120.878, -17.2325, -17.9922, 0.29 ) }
    dend_24 { pt3dadd( -121.714, -17.4865, -18.5399, 0.66 ) }
    dend_24 { pt3dadd( -122.502, -17.7483, -19.0316, 0.66 ) }
    dend_24 { pt3dadd( -123.095, -17.9797, -19.3373, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_24 { pt3dadd( -124.354, -18.5749, -20.027, 0.37 ) }
    dend_24 { pt3dadd( -125.624, -19.2251, -20.8954, 0.29 ) }
    dend_24 { pt3dadd( -126.12, -19.4678, -21.2886, 0.29 ) }
    dend_24 { pt3dadd( -127.402, -20.0286, -22.4597, 0.29 ) }
    dend_24 { pt3dadd( -128.604, -20.4768, -23.6584, 1.25 ) }
    dend_24 { pt3dadd( -131.186, -21.178, -26.3476, 0.29 ) }
    dend_24 { pt3dadd( -131.978, -21.3227, -27.2197, 0.29 ) }
    dend_24 { pt3dadd( -132.432, -21.3642, -27.7429, 0.59 ) }
    dend_24 { pt3dadd( -133.364, -21.3789, -28.7743, 0.44 ) }
    dend_24 { pt3dadd( -133.899, -21.3523, -29.3084, 0.22 ) }
    dend_24 { pt3dadd( -134.522, -21.2941, -29.8555, 0.81 ) }
    dend_24 { pt3dadd( -136.241, -21.1169, -30.8485, 0.44 ) }
    dend_24 { pt3dadd( -137.191, -21.0506, -31.2717, 0.59 ) }
    dend_24 { pt3dadd( -137.747, -21.0286, -31.4672, 0.59 ) }
    dend_24 { pt3dadd( -139.154, -20.9927, -31.7451, 0.29 ) }
    dend_24 { pt3dadd( -140.386, -20.9588, -31.8446, 0.59 ) }
    dend_24 { pt3dadd( -141.122, -20.9302, -31.7784, 0.59 ) }
    dend_24 { pt3dadd( -142.496, -20.8523, -31.4548, 0.29 ) }
    dend_24 { pt3dadd( -143.569, -20.7814, -31.1103, 0.29 ) }
    dend_24 { pt3dadd( -145.416, -20.6122, -30.3482, 0.74 ) }
    dend_24 { pt3dadd( -146.267, -20.5094, -29.9192, 0.74 ) }
    dend_24 { pt3dadd( -147.717, -20.276, -29.1133, 0.37 ) }
    dend_24 { pt3dadd( -148.775, -20.0251, -28.4919, 0.37 ) }
    dend_24 { pt3dadd( -149.659, -19.7133, -27.9426, 0.44 ) }
    dend_24 { pt3dadd( -150.633, -19.2408, -27.3608, 0.74 ) }
    dend_24 { pt3dadd( -151.233, -18.8652, -27.0546, 0.74 ) }
    dend_24 { pt3dadd( -151.913, -18.3579, -26.7536, 0.37 ) }
    dend_24 { pt3dadd( -152.542, -17.7842, -26.5264, 0.59 ) }
    dend_24 { pt3dadd( -153.25, -17.0177, -26.2802, 0.37 ) }
    dend_24 { pt3dadd( -153.796, -16.3746, -26.1198, 0.29 ) }
    dend_24 { pt3dadd( -154.18, -15.9018, -26.0231, 0.52 ) }
    dend_24 { pt3dadd( -154.69, -15.2951, -25.9053, 0.74 ) }
    dend_24 { pt3dadd( -155.484, -14.4411, -25.733, 0.29 ) }
    dend_24 { pt3dadd( -155.915, -14.031, -25.6476, 0.74 ) }
    dend_24 { pt3dadd( -156.534, -13.5066, -25.5425, 0.74 ) }
    dend_24 { pt3dadd( -157.402, -12.8321, -25.4366, 0.29 ) }
    dend_24 { pt3dadd( -158.306, -12.188, -25.3691, 0.29 ) }
    dend_24 { pt3dadd( -159.227, -11.6106, -25.3586, 0.29 ) }
    dend_24 { pt3dadd( -160.262, -11.0336, -25.3997, 0.29 ) }
    dend_24 { pt3dadd( -161.295, -10.4955, -25.508, 0.29 ) }
    dend_24 { pt3dadd( -162.394, -9.96628, -25.6944, 0.96 ) }
    dend_24 { pt3dadd( -162.928, -9.73953, -25.8122, 0.96 ) }
    dend_24 { pt3dadd( -164.527, -9.12747, -26.2178, 0.29 ) }
    dend_24 { pt3dadd( -164.984, -8.97238, -26.3453, 0.66 ) }
    dend_24 { pt3dadd( -165.93, -8.69713, -26.6089, 0.66 ) }
    dend_24 { pt3dadd( -166.987, -8.43388, -26.8742, 0.29 ) }
    dend_24 { pt3dadd( -167.787, -8.27864, -27.0215, 0.29 ) }
    dend_24 { pt3dadd( -168.291, -8.19341, -27.1034, 0.66 ) }
    dend_24 { pt3dadd( -168.844, -8.10664, -27.1789, 0.88 ) }
    dend_24 { pt3dadd( -169.733, -7.9709, -27.2864, 0.66 ) }
    dend_24 { pt3dadd( -170.387, -7.8419, -27.3643, 0.15 ) }
    dend_24 { pt3dadd( -171.314, -7.59936, -27.4844, 0.15 ) }
    dend_24 { pt3dadd( -172.195, -7.31621, -27.6265, 0.15 ) }
    dend_24 { pt3dadd( -172.911, -7.04498, -27.7575, 0.81 ) }
    dend_24 { pt3dadd( -173.508, -6.78633, -27.9106, 1.03 ) }
    dend_24 { pt3dadd( -175.084, -6.088, -28.3924, 0.29 ) }
    dend_24 { pt3dadd( -175.906, -5.72229, -28.6617, 0.81 ) }
    dend_24 { pt3dadd( -176.533, -5.43031, -28.8943, 0.81 ) }
    dend_24 { pt3dadd( -177.715, -4.89989, -29.3418, 0.29 ) }
    dend_24 { pt3dadd( -178.924, -4.41492, -29.8769, 0.29 ) }
    dend_24 { pt3dadd( -179.809, -4.12641, -30.2973, 0.29 ) }
    dend_24 { pt3dadd( -180.886, -3.87495, -30.858, 0.29 ) }
    dend_24 { pt3dadd( -181.635, -3.77611, -31.3737, 1.18 ) }
    dend_24 { pt3dadd( -182.293, -3.77915, -31.9575, 1.18 ) }
    dend_24 { pt3dadd( -183.247, -3.95676, -33.0724, 0.52 ) }
    dend_24 { pt3dadd( -183.773, -4.1327, -33.7894, 0.88 ) }
    dend_24 { pt3dadd( -184.239, -4.35074, -34.5534, 0.88 ) }
    dend_24 { pt3dadd( -185.439, -5.07559, -36.8652, 0.44 ) }
    dend_24 { pt3dadd( -185.988, -5.42018, -37.9598, 0.44 ) }
    dend_24 { pt3dadd( -186.433, -5.67573, -38.8959, 0.74 ) }
    dend_24 { pt3dadd( -186.715, -5.79758, -39.4781, 0.74 ) }
    dend_24 { pt3dadd( -187.464, -6.0183, -40.9398, 0.44 ) }
    dend_24 { pt3dadd( -188.038, -6.11639, -41.8903, 0.44 ) }
    dend_24 { pt3dadd( -188.571, -6.14012, -42.5689, 0.88 ) }
    dend_24 { pt3dadd( -189.125, -6.13376, -43.1784, 0.88 ) }
    dend_24 { pt3dadd( -189.724, -6.11697, -43.7768, 0.88 ) }
    dend_24 { pt3dadd( -190.912, -6.1335, -44.9789, 0.52 ) }
    dend_24 { pt3dadd( -191.934, -6.21744, -46.0041, 0.52 ) }
    dend_24 { pt3dadd( -192.557, -6.32866, -46.618, 0.59 ) }
    dend_24 { pt3dadd( -193.209, -6.5189, -47.2602, 0.44 ) }
    dend_24 { pt3dadd( -193.905, -6.76945, -47.9129, 0.44 ) }
    dend_24 { pt3dadd( -194.792, -7.0761, -48.6873, 0.44 ) }
    dend_24 { pt3dadd( -195.68, -7.33502, -49.4069, 0.88 ) }
    dend_24 { pt3dadd( -196.259, -7.49224, -49.8754, 0.88 ) }
    dend_24 { pt3dadd( -197.016, -7.69037, -50.4991, 0.37 ) }
    dend_24 { pt3dadd( -197.807, -7.8508, -51.1622, 0.37 ) }
    dend_24 { pt3dadd( -198.947, -8.0182, -52.0782, 0.59 ) }
    dend_24 { pt3dadd( -200.396, -8.13533, -53.1546, 0.37 ) }
    dend_24 { pt3dadd( -200.907, -8.16595, -53.5209, 0.74 ) }
    dend_24 { pt3dadd( -201.804, -8.18306, -54.15, 0.74 ) }
    dend_24 { pt3dadd( -203.296, -8.13557, -55.1242, 0.37 ) }
    dend_24 { pt3dadd( -203.868, -8.1111, -55.4587, 0.59 ) }
    dend_24 { pt3dadd( -205.221, -8.03144, -56.1433, 0.29 ) }
    dend_24 { pt3dadd( -206.233, -7.94831, -56.5562, 0.29 ) }
    dend_24 { pt3dadd( -207.162, -7.90725, -56.8813, 0.29 ) }
    dend_24 { pt3dadd( -208.495, -7.89936, -57.2974, 0.59 ) }
    dend_24 { pt3dadd( -208.941, -7.91455, -57.4168, 1.11 ) }
    dend_24 { pt3dadd( -209.293, -7.93233, -57.5098, 1.4 ) }
    dend_24 { pt3dadd( -210.374, -8.05348, -57.7768, 0.81 ) }
    dend_24 { pt3dadd( -211.503, -8.23205, -58.0638, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( -212.532, -8.4871, -58.3374, 0.22 ) }
    dend_24 { pt3dadd( -213.298, -8.7358, -58.5404, 0.22 ) }
    dend_24 { pt3dadd( -214.554, -9.23254, -58.9174, 0.22 ) }
    dend_24 { pt3dadd( -215.932, -9.88999, -59.3808, 0.22 ) }
    dend_24 { pt3dadd( -216.204, -10.0438, -59.4833, 0.44 ) }
    dend_24 { pt3dadd( -216.682, -10.3605, -59.6838, 0.44 ) }
    dend_24 { pt3dadd( -217.17, -10.7519, -59.9442, 0.22 ) }
    dend_24 { pt3dadd( -217.975, -11.4881, -60.505, 0.44 ) }
    dend_24 { pt3dadd( -218.33, -11.8233, -60.834, 0.44 ) }
    dend_24 { pt3dadd( -218.97, -12.3735, -61.4702, 0.22 ) }
    dend_24 { pt3dadd( -219.614, -12.8501, -62.0599, 0.22 ) }
    dend_24 { pt3dadd( -220.536, -13.4174, -62.82, 0.59 ) }
    dend_24 { pt3dadd( -220.807, -13.5546, -63.0271, 0.59 ) }
    dend_24 { pt3dadd( -222.537, -14.1969, -64.4218, 0.29 ) }
    dend_24 { pt3dadd( -223.152, -14.4026, -64.9159, 0.29 ) }
    dend_24 { pt3dadd( -224.082, -14.6743, -65.6546, 0.29 ) }
    dend_24 { pt3dadd( -224.723, -14.8391, -66.1312, 0.81 ) }
    dend_24 { pt3dadd( -225.301, -14.9673, -66.5176, 0.81 ) }
    dend_24 { pt3dadd( -227.593, -15.3341, -68.0961, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 19/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 166.65, 7.62807, 3.5946, 0.29 ) }
    dend_20 { pt3dadd( 167.827, 6.58703, 3.5946, 0.29 ) }
    dend_20 { pt3dadd( 168.583, 6.02393, 3.44992, 0.29 ) }
    dend_20 { pt3dadd( 169.713, 5.28878, 2.93352, 0.52 ) }
    dend_20 { pt3dadd( 170.003, 5.074, 2.8548, 0.52 ) }
    dend_20 { pt3dadd( 170.352, 4.79866, 2.79826, 0.37 ) }
    dend_20 { pt3dadd( 171.005, 4.28318, 2.6924, 0.52 ) }
    dend_20 { pt3dadd( 172.462, 3.26687, 2.42013, 0.37 ) }
    dend_20 { pt3dadd( 173.874, 2.30161, 2.12723, 0.88 ) }
    dend_20 { pt3dadd( 176.666, 0.255892, 1.53633, 0.29 ) }
    dend_20 { pt3dadd( 177.026, -0.0450177, 1.49678, 0.74 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 30/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 166.65, 7.62807, 3.5946, 0.29 ) }
    dend_19 { pt3dadd( 167.707, 8.38811, 3.04657, 0.29 ) }
    dend_19 { pt3dadd( 168.165, 8.64742, 2.84131, 0.44 ) }
    dend_19 { pt3dadd( 168.829, 9.00159, 2.57304, 0.44 ) }
    dend_19 { pt3dadd( 169.528, 9.38227, 2.32361, 0.74 ) }
    dend_19 { pt3dadd( 170.477, 9.91561, 2.015, 0.74 ) }
    dend_19 { pt3dadd( 171.412, 10.4607, 1.73222, 0.44 ) }
    dend_19 { pt3dadd( 172.45, 11.0386, 1.46408, 0.66 ) }
    dend_19 { pt3dadd( 172.987, 11.358, 1.33915, 0.66 ) }
    dend_19 { pt3dadd( 173.863, 11.999, 1.11641, 0.74 ) }
    dend_19 { pt3dadd( 174.25, 12.3513, 1.01237, 0.29 ) }
    dend_19 { pt3dadd( 174.671, 12.8218, 0.893375, 0.37 ) }
    dend_19 { pt3dadd( 175.17, 13.4247, 0.801768, 0.81 ) }
    dend_19 { pt3dadd( 175.444, 13.7612, 0.780911, 1.03 ) }
    dend_19 { pt3dadd( 176.834, 15.3805, 0.803417, 0.29 ) }
    dend_19 { pt3dadd( 177.615, 16.2635, 0.875858, 0.29 ) }
    dend_19 { pt3dadd( 178.755, 17.5368, 1.055, 0.29 ) }
    dend_19 { pt3dadd( 179.748, 18.6424, 1.22207, 0.29 ) }
    dend_19 { pt3dadd( 180.573, 19.5732, 1.34966, 1.03 ) }
    dend_19 { pt3dadd( 181.039, 20.117, 1.40002, 1.03 ) }
    dend_19 { pt3dadd( 181.523, 20.6829, 1.43221, 1.03 ) }
    dend_19 { pt3dadd( 181.921, 21.1584, 1.37089, 0.66 ) }
    dend_19 { pt3dadd( 182.724, 22.1699, 1.05766, 0.52 ) }
    dend_19 { pt3dadd( 183.193, 22.9143, 0.758872, 0.52 ) }
    dend_19 { pt3dadd( 183.61, 23.7289, 0.42665, 0.37 ) }
    dend_19 { pt3dadd( 184.002, 24.5615, 0.119513, 0.37 ) }
    dend_19 { pt3dadd( 184.316, 25.1778, -0.093445, 0.29 ) }
    dend_19 { pt3dadd( 184.876, 26.1665, -0.429802, 0.29 ) }
    dend_19 { pt3dadd( 185.644, 27.4252, -0.805562, 0.29 ) }
    dend_19 { pt3dadd( 185.942, 27.9335, -0.964206, 0.29 ) }
    dend_19 { pt3dadd( 186.298, 28.6389, -1.19675, 0.29 ) }
    dend_19 { pt3dadd( 186.728, 29.5819, -1.53799, 0.81 ) }
    dend_19 { pt3dadd( 187.194, 30.5378, -1.91376, 1.03 ) }
    dend_19 { pt3dadd( 187.542, 31.0713, -2.14505, 1.03 ) }
    dend_19 { pt3dadd( 188.342, 31.9909, -2.54606, 0.29 ) }
    dend_19 { pt3dadd( 188.995, 32.6793, -2.77383, 0.74 ) }
    dend_19 { pt3dadd( 189.363, 33.0662, -2.84984, 1.11 ) }
    dend_19 { pt3dadd( 189.802, 33.508, -2.87931, 1.11 ) }
    dend_19 { pt3dadd( 190.937, 34.5161, -2.84291, 0.29 ) }
    dend_19 { pt3dadd( 191.796, 35.1574, -2.78396, 0.29 ) }
    dend_19 { pt3dadd( 192.783, 35.7139, -2.73088, 0.29 ) }
    dend_19 { pt3dadd( 193.569, 36.074, -2.72181, 0.29 ) }
    dend_19 { pt3dadd( 194.241, 36.3456, -2.75119, 0.74 ) }
    dend_19 { pt3dadd( 195.024, 36.646, -2.85147, 0.74 ) }
    dend_19 { pt3dadd( 196.075, 37.0192, -3.0726, 0.37 ) }
    dend_19 { pt3dadd( 197.42, 37.4483, -3.44427, 0.96 ) }
    dend_19 { pt3dadd( 197.963, 37.6207, -3.64627, 0.96 ) }
    dend_19 { pt3dadd( 198.924, 37.9295, -4.06805, 0.29 ) }
    dend_19 { pt3dadd( 199.931, 38.3132, -4.61266, 0.29 ) }
    dend_19 { pt3dadd( 200.311, 38.4774, -4.83916, 0.59 ) }
    dend_19 { pt3dadd( 200.888, 38.7771, -5.21864, 0.59 ) }
    dend_19 { pt3dadd( 201.924, 39.4414, -5.93043, 0.29 ) }
    dend_19 { pt3dadd( 202.55, 39.8655, -6.37751, 0.29 ) }
    dend_19 { pt3dadd( 203.678, 40.6467, -7.24736, 1.18 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 84/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -0.177789, -22.7695, 8.82083, 1.03 ) }
    dend_4 { pt3dadd( 1.10997, -25.7954, 9.69225, 1.03 ) }
    dend_4 { pt3dadd( 2.06306, -27.6901, 10.2227, 1.03 ) }
    dend_4 { pt3dadd( 2.69369, -28.8062, 10.5278, 0.74 ) }
    dend_4 { pt3dadd( 3.57858, -30.2207, 10.8927, 0.74 ) }
    dend_4 { pt3dadd( 4.23857, -31.238, 11.1352, 1.03 ) }
    dend_4 { pt3dadd( 4.79561, -32.1117, 11.3231, 1.25 ) }
    dend_4 { pt3dadd( 5.26179, -32.819, 11.51, 1.33 ) }
    dend_4 { pt3dadd( 5.49618, -33.2325, 11.5666, 1.62 ) }
    dend_4 { pt3dadd( 5.93211, -34.1635, 11.6505, 1.62 ) }
    dend_4 { pt3dadd( 6.29339, -35.1398, 11.6978, 1.62 ) }
    dend_4 { pt3dadd( 6.70348, -36.5893, 11.7445, 1.47 ) }
    dend_4 { pt3dadd( 7.00554, -38.0136, 11.8208, 0.59 ) }
    dend_4 { pt3dadd( 7.21664, -39.4015, 11.8978, 0.59 ) }
    dend_4 { pt3dadd( 7.35475, -40.6717, 11.9667, 0.88 ) }
    dend_4 { pt3dadd( 7.43907, -41.6018, 12.0141, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_4 { pt3dadd( 7.53261, -42.424, 12.0461, 1.55 ) }
    dend_4 { pt3dadd( 7.71465, -43.7644, 12.0807, 1.55 ) }
    dend_4 { pt3dadd( 7.92368, -45.135, 12.1005, 0.96 ) }
    dend_4 { pt3dadd( 8.12398, -46.4219, 12.113, 0.74 ) }
    dend_4 { pt3dadd( 8.22155, -47.1336, 12.1176, 0.74 ) }
    dend_4 { pt3dadd( 8.40143, -48.4506, 12.1178, 0.74 ) }
    dend_4 { pt3dadd( 8.59873, -49.8971, 12.1034, 1.33 ) }
    dend_4 { pt3dadd( 8.87985, -51.7964, 12.0511, 1.18 ) }
    dend_4 { pt3dadd( 9.13052, -53.3992, 12.0427, 1.18 ) }
    dend_4 { pt3dadd( 9.25408, -54.3304, 12.0456, 1.62 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 10/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.177789, -22.7695, 8.82083, 1.03 ) }
    dend_3 { pt3dadd( -0.289653, -24.1902, 11.7548, 1.03 ) }
    dend_3 { pt3dadd( -0.358022, -25.1989, 13.6014, 1.03 ) }
    dend_3 { pt3dadd( -0.539385, -27.0094, 16.6909, 0.81 ) }
    dend_3 { pt3dadd( -0.757689, -28.7519, 19.5835, 0.66 ) }
    dend_3 { pt3dadd( -0.83808, -29.3582, 20.5487, 0.66 ) }
    dend_3 { pt3dadd( -0.915501, -29.9607, 21.4547, 0.66 ) }
    dend_3 { pt3dadd( -0.95458, -30.8368, 22.5836, 0.52 ) }
    dend_3 { pt3dadd( -0.932081, -31.8604, 23.688, 0.52 ) }
    dend_3 { pt3dadd( -0.858996, -33.2094, 24.821, 0.81 ) }
    dend_3 { pt3dadd( -0.77981, -34.1905, 25.4644, 0.66 ) }
    dend_3 { pt3dadd( -0.719525, -35.0482, 25.9704, 0.96 ) }
    dend_3 { pt3dadd( -0.587839, -36.9688, 27.0416, 0.52 ) }
    dend_3 { pt3dadd( -0.443621, -38.1361, 27.6474, 1.11 ) }
    dend_3 { pt3dadd( -0.264557, -39.1892, 28.0853, 1.03 ) }
    dend_3 { pt3dadd( -0.127521, -39.9946, 28.3355, 0.88 ) }
    dend_3 { pt3dadd( -0.0342072, -40.6675, 28.5206, 0.88 ) }
    dend_3 { pt3dadd( 0.0125242, -41.7725, 28.7952, 0.52 ) }
    // Section: dend_49, id: dend_49, parent: dend_27 (entry count 28/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 4.30803, 41.2081, 12.9061, 0.74 ) }
    dend_49 { pt3dadd( 5.1762, 43.569, 15.2498, 0.74 ) }
    dend_49 { pt3dadd( 5.60413, 44.9582, 16.4849, 0.59 ) }
    dend_49 { pt3dadd( 5.83296, 45.8994, 17.2589, 0.59 ) }
    dend_49 { pt3dadd( 6.12494, 47.5108, 18.4468, 0.59 ) }
    dend_49 { pt3dadd( 6.28202, 48.6937, 19.215, 0.59 ) }
    dend_49 { pt3dadd( 6.4045, 49.9116, 19.8984, 0.59 ) }
    dend_49 { pt3dadd( 6.56974, 52.1935, 20.7618, 0.66 ) }
    dend_49 { pt3dadd( 6.62454, 53.2208, 21.0582, 0.66 ) }
    dend_49 { pt3dadd( 6.60151, 54.7509, 21.4023, 1.03 ) }
    dend_49 { pt3dadd( 6.51103, 56.196, 21.631, 1.03 ) }
    dend_49 { pt3dadd( 6.34674, 57.9434, 21.811, 0.44 ) }
    dend_49 { pt3dadd( 6.24985, 58.7398, 21.7955, 0.59 ) }
    dend_49 { pt3dadd( 6.05227, 59.9832, 21.5272, 0.59 ) }
    dend_49 { pt3dadd( 5.8676, 61.0171, 21.1739, 1.11 ) }
    dend_49 { pt3dadd( 5.78538, 61.4862, 20.9597, 1.33 ) }
    dend_49 { pt3dadd( 5.68168, 62.1955, 20.5979, 1.33 ) }
    dend_49 { pt3dadd( 5.52325, 63.7053, 19.7785, 0.81 ) }
    dend_49 { pt3dadd( 5.54191, 64.9315, 19.1613, 0.44 ) }
    dend_49 { pt3dadd( 5.7921, 65.9262, 18.6762, 0.44 ) }
    dend_49 { pt3dadd( 6.27804, 66.9208, 18.1007, 0.74 ) }
    dend_49 { pt3dadd( 6.87047, 67.8701, 17.5274, 0.66 ) }
    dend_49 { pt3dadd( 7.19577, 68.3313, 17.2464, 0.66 ) }
    dend_49 { pt3dadd( 7.86596, 69.3945, 16.6798, 0.52 ) }
    dend_49 { pt3dadd( 8.52394, 70.6906, 16.0091, 0.37 ) }
    dend_49 { pt3dadd( 9.14808, 72.3785, 15.137, 0.37 ) }
    dend_49 { pt3dadd( 9.34946, 73.1248, 14.8221, 0.37 ) }
    dend_49 { pt3dadd( 9.61999, 74.3867, 14.4137, 0.37 ) }
    dend_49 { pt3dadd( 10.0521, 76.4473, 13.9371, 0.37 ) }
    dend_49 { pt3dadd( 10.3439, 77.7124, 13.8706, 0.88 ) }
    dend_49 { pt3dadd( 10.5907, 78.5286, 14.0229, 0.88 ) }
    dend_49 { pt3dadd( 11.2008, 80.1837, 14.6555, 0.74 ) }
    dend_49 { pt3dadd( 11.6376, 81.2383, 15.2033, 0.59 ) }
    dend_49 { pt3dadd( 12.1797, 82.4374, 16.0452, 0.59 ) }
    dend_49 { pt3dadd( 13.1284, 84.3662, 17.7056, 0.81 ) }
    dend_49 { pt3dadd( 13.8155, 85.7868, 19.0727, 0.59 ) }
    dend_49 { pt3dadd( 14.0996, 86.466, 19.7574, 0.59 ) }
    dend_49 { pt3dadd( 14.3031, 87.1151, 20.4128, 1.11 ) }
    dend_49 { pt3dadd( 14.5007, 88.2064, 21.4796, 0.88 ) }
    dend_49 { pt3dadd( 14.5378, 89.1718, 22.3252, 0.88 ) }
    dend_49 { pt3dadd( 14.4911, 90.2981, 23.0394, 0.74 ) }
    dend_49 { pt3dadd( 14.4339, 91.4605, 23.604, 0.59 ) }
    dend_49 { pt3dadd( 14.4301, 92.3648, 23.9638, 0.44 ) }
    dend_49 { pt3dadd( 14.4699, 93.2854, 24.2325, 0.81 ) }
    dend_49 { pt3dadd( 14.5473, 94.1902, 24.3934, 1.03 ) }
    dend_49 { pt3dadd( 14.688, 95.774, 24.5793, 0.52 ) }
    dend_49 { pt3dadd( 14.7593, 96.6444, 24.6423, 0.52 ) }
    dend_49 { pt3dadd( 14.8248, 97.5158, 24.6947, 0.96 ) }
    dend_49 { pt3dadd( 14.8778, 98.5155, 24.7613, 0.96 ) }
    dend_49 { pt3dadd( 14.8887, 99.5441, 24.8337, 0.66 ) }
    dend_49 { pt3dadd( 14.8378, 101.005, 24.9381, 0.37 ) }
    dend_49 { pt3dadd( 14.7698, 101.923, 25.001, 0.37 ) }
    dend_49 { pt3dadd( 14.7332, 102.541, 25.0376, 0.37 ) }
    dend_49 { pt3dadd( 14.6838, 103.623, 25.0998, 0.37 ) }
    dend_49 { pt3dadd( 14.6682, 104.493, 25.1481, 0.66 ) }
    dend_49 { pt3dadd( 14.7087, 105.42, 25.1942, 0.66 ) }
    dend_49 { pt3dadd( 14.8382, 106.303, 25.2398, 0.81 ) }
    dend_49 { pt3dadd( 15.0266, 107.252, 25.3178, 0.52 ) }
    dend_49 { pt3dadd( 15.2047, 108.199, 25.4184, 0.37 ) }
    dend_49 { pt3dadd( 15.299, 108.993, 25.516, 0.37 ) }
    dend_49 { pt3dadd( 15.3274, 109.648, 25.6006, 0.66 ) }
    dend_49 { pt3dadd( 15.3129, 110.619, 25.7223, 0.66 ) }
    dend_49 { pt3dadd( 15.3037, 111.749, 25.8488, 0.37 ) }
    dend_49 { pt3dadd( 15.3351, 112.452, 25.9131, 0.37 ) }
    dend_49 { pt3dadd( 15.5292, 113.815, 26.0051, 0.96 ) }
    dend_49 { pt3dadd( 15.667, 114.497, 26.0456, 1.33 ) }
    dend_49 { pt3dadd( 15.8663, 115.41, 26.081, 1.33 ) }
    dend_49 { pt3dadd( 16.166, 116.717, 26.1504, 1.03 ) }
    dend_49 { pt3dadd( 16.4736, 117.909, 26.2285, 0.74 ) }
    dend_49 { pt3dadd( 16.7937, 119.032, 26.3333, 0.44 ) }
    dend_49 { pt3dadd( 17.0374, 119.875, 26.4388, 0.44 ) }
    dend_49 { pt3dadd( 17.2619, 120.687, 26.5357, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_49 { pt3dadd( 17.629, 122.168, 26.6938, 0.66 ) }
    dend_49 { pt3dadd( 17.7771, 122.871, 26.7818, 0.96 ) }
    dend_49 { pt3dadd( 17.8354, 123.246, 26.8287, 0.96 ) }
    dend_49 { pt3dadd( 18.0193, 124.647, 26.9355, 0.52 ) }
    dend_49 { pt3dadd( 18.171, 125.823, 26.9718, 0.52 ) }
    dend_49 { pt3dadd( 18.3584, 127.167, 26.9632, 0.52 ) }
    dend_49 { pt3dadd( 18.5449, 128.271, 26.8988, 0.52 ) }
    dend_49 { pt3dadd( 18.8773, 130.126, 26.8551, 0.74 ) }
    dend_49 { pt3dadd( 19.0717, 131.311, 26.8991, 0.52 ) }
    dend_49 { pt3dadd( 19.2006, 132.17, 26.9842, 0.52 ) }
    dend_49 { pt3dadd( 19.3392, 133.123, 27.1323, 0.52 ) }
    dend_49 { pt3dadd( 19.532, 134.291, 27.279, 0.81 ) }
    dend_49 { pt3dadd( 19.8473, 135.952, 27.4013, 0.81 ) }
    dend_49 { pt3dadd( 20.0748, 137.025, 27.4605, 0.59 ) }
    dend_49 { pt3dadd( 20.25, 137.913, 27.4634, 0.37 ) }
    dend_49 { pt3dadd( 20.4607, 139.008, 27.45, 0.37 ) }
    dend_49 { pt3dadd( 20.7648, 140.707, 27.4009, 0.37 ) }
    dend_49 { pt3dadd( 20.9137, 141.559, 27.3574, 0.52 ) }
    dend_49 { pt3dadd( 21.1387, 142.536, 27.2791, 0.52 ) }
    dend_49 { pt3dadd( 21.5771, 144.154, 27.1812, 0.52 ) }
    dend_49 { pt3dadd( 22.0494, 145.871, 27.1678, 0.74 ) }
    dend_49 { pt3dadd( 22.3546, 146.971, 27.2242, 0.96 ) }
    dend_49 { pt3dadd( 22.6758, 148.13, 27.3545, 0.37 ) }
    dend_49 { pt3dadd( 23.0328, 149.421, 27.5222, 0.29 ) }
    dend_49 { pt3dadd( 23.2721, 150.232, 27.6361, 0.29 ) }
    dend_49 { pt3dadd( 23.6253, 151.409, 27.7989, 0.81 ) }
    dend_49 { pt3dadd( 23.7697, 151.922, 27.8171, 0.81 ) }
    dend_49 { pt3dadd( 23.9005, 152.489, 27.8333, 0.96 ) }
    dend_49 { pt3dadd( 23.9586, 152.947, 27.8484, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 4.30803, 41.2081, 12.9061, 0.66 ) }
    dend_28 { pt3dadd( 3.64321, 42.9092, 10.6621, 0.66 ) }
    dend_28 { pt3dadd( 3.20332, 43.8913, 9.26765, 0.66 ) }
    dend_28 { pt3dadd( 3.01738, 44.3724, 8.56302, 0.66 ) }
    dend_28 { pt3dadd( 2.7721, 45.1143, 7.45483, 0.52 ) }
    dend_28 { pt3dadd( 2.41269, 46.2278, 5.79571, 0.81 ) }
    dend_28 { pt3dadd( 2.26745, 46.7663, 5.03072, 0.81 ) }
    dend_28 { pt3dadd( 2.14175, 47.5704, 3.93934, 0.59 ) }
    dend_28 { pt3dadd( 2.09181, 48.4289, 2.68921, 0.59 ) }
    dend_28 { pt3dadd( 2.09984, 49.1362, 1.63782, 0.44 ) }
    dend_28 { pt3dadd( 2.11922, 49.6049, 0.998491, 0.44 ) }
    dend_28 { pt3dadd( 2.19683, 50.5084, -0.0998989, 0.96 ) }
    dend_28 { pt3dadd( 2.26682, 51.0238, -0.745031, 1.18 ) }
    dend_28 { pt3dadd( 2.48315, 52.2986, -2.40493, 0.88 ) }
    dend_28 { pt3dadd( 2.68014, 53.3076, -3.76318, 0.37 ) }
    dend_28 { pt3dadd( 2.86312, 53.9623, -4.68294, 1.03 ) }
    dend_28 { pt3dadd( 3.11853, 54.6131, -5.63954, 1.03 ) }
    dend_28 { pt3dadd( 3.63149, 55.6973, -7.40108, 0.52 ) }
    dend_28 { pt3dadd( 3.85949, 56.1289, -8.10015, 0.52 ) }
    dend_28 { pt3dadd( 4.04464, 56.4581, -8.62374, 0.81 ) }
    dend_28 { pt3dadd( 4.26198, 56.8718, -9.29181, 0.81 ) }
    dend_28 { pt3dadd( 4.4413, 57.3205, -10.0441, 0.74 ) }
    dend_28 { pt3dadd( 4.63536, 58.4144, -11.7472, 1.03 ) }
    dend_28 { pt3dadd( 4.57576, 59.0679, -12.6937, 1.03 ) }
    dend_28 { pt3dadd( 4.2455, 59.939, -13.9969, 0.59 ) }
    dend_28 { pt3dadd( 3.92957, 60.494, -14.8388, 0.81 ) }
    dend_28 { pt3dadd( 3.48547, 61.0514, -15.7826, 0.81 ) }
    dend_28 { pt3dadd( 3.29433, 61.2446, -16.1299, 0.66 ) }
    dend_28 { pt3dadd( 2.93553, 61.567, -16.719, 0.66 ) }
    dend_28 { pt3dadd( 2.02177, 62.3157, -18.2187, 0.52 ) }
    dend_28 { pt3dadd( 1.42432, 62.7921, -19.2143, 0.37 ) }
    dend_28 { pt3dadd( 0.423747, 63.6693, -21.1136, 0.29 ) }
    dend_28 { pt3dadd( 0.207819, 63.8641, -21.5526, 0.29 ) }
    dend_28 { pt3dadd( -0.142524, 64.1707, -22.2653, 0.29 ) }
    dend_28 { pt3dadd( -0.520775, 64.5098, -23.0177, 0.29 ) }
    dend_28 { pt3dadd( -1.15374, 65.0754, -24.0942, 0.81 ) }
    dend_28 { pt3dadd( -1.70455, 65.5781, -24.9287, 0.81 ) }
    dend_28 { pt3dadd( -2.56011, 66.4923, -26.1175, 0.59 ) }
    dend_28 { pt3dadd( -2.74503, 66.7069, -26.3674, 0.59 ) }
    dend_28 { pt3dadd( -3.23433, 67.3212, -26.9577, 0.29 ) }
    dend_28 { pt3dadd( -3.69116, 67.9411, -27.7903, 0.52 ) }
    dend_28 { pt3dadd( -3.76549, 68.0435, -27.973, 0.81 ) }
    dend_28 { pt3dadd( -4.00333, 68.3482, -28.6367, 0.81 ) }
    dend_28 { pt3dadd( -4.28519, 68.6794, -29.5084, 0.74 ) }
    dend_28 { pt3dadd( -4.42708, 68.809, -29.9414, 0.88 ) }
    dend_28 { pt3dadd( -6.28622, 70.0583, -35.433, 0.88 ) }
    dend_28 { pt3dadd( -6.82988, 70.3145, -36.9478, 0.66 ) }
    dend_28 { pt3dadd( -7.20685, 70.45, -37.9, 0.88 ) }
    dend_28 { pt3dadd( -7.80002, 70.6148, -39.2802, 0.96 ) }
    dend_28 { pt3dadd( -8.283, 70.7444, -40.2702, 0.52 ) }
    dend_28 { pt3dadd( -8.6739, 70.8564, -40.9326, 0.74 ) }
    dend_28 { pt3dadd( -9.66863, 71.1858, -41.9141, 0.44 ) }
    dend_28 { pt3dadd( -10.247, 71.4371, -42.3924, 0.29 ) }
    dend_28 { pt3dadd( -10.7992, 71.7213, -42.7866, 0.29 ) }
    dend_28 { pt3dadd( -11.7674, 72.2226, -43.3846, 1.18 ) }
    dend_28 { pt3dadd( -12.1946, 72.4257, -43.6507, 1.92 ) }
    dend_28 { pt3dadd( -12.9995, 72.6918, -44.2304, 1.47 ) }
    dend_28 { pt3dadd( -14.1816, 72.929, -45.1528, 0.37 ) }
    dend_28 { pt3dadd( -14.7048, 72.9629, -45.576, 0.29 ) }
    dend_28 { pt3dadd( -15.7118, 72.8731, -46.356, 0.29 ) }
    dend_28 { pt3dadd( -16.8771, 72.584, -47.2605, 0.29 ) }
    dend_28 { pt3dadd( -18.586, 71.8574, -48.6961, 0.29 ) }
    dend_28 { pt3dadd( -19.4355, 71.3476, -49.4404, 0.29 ) }
    dend_28 { pt3dadd( -20.088, 70.9071, -50.0285, 0.29 ) }
    dend_28 { pt3dadd( -20.9127, 70.3851, -50.8058, 0.29 ) }
    dend_28 { pt3dadd( -21.4748, 70.0946, -51.3289, 0.29 ) }
    dend_28 { pt3dadd( -22.771, 69.5825, -52.5054, 0.29 ) }
    dend_28 { pt3dadd( -23.3705, 69.3725, -53.065, 0.29 ) }
    dend_28 { pt3dadd( -24.2977, 69.1608, -54.0135, 0.29 ) }
    dend_28 { pt3dadd( -24.8039, 69.1627, -54.5401, 0.52 ) }
    dend_28 { pt3dadd( -25.3412, 69.3107, -55.0637, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( -26.172, 69.6908, -55.79, 0.52 ) }
    dend_28 { pt3dadd( -27.1085, 70.2491, -56.5199, 0.66 ) }
    dend_28 { pt3dadd( -27.5925, 70.5666, -56.8838, 0.96 ) }
    dend_28 { pt3dadd( -28.0468, 70.8713, -57.1986, 1.18 ) }
    dend_28 { pt3dadd( -29.37, 71.8536, -58.0769, 0.52 ) }
    dend_28 { pt3dadd( -30.2404, 72.6071, -58.7034, 0.29 ) }
    dend_28 { pt3dadd( -30.6884, 73.0815, -59.0782, 0.52 ) }
    dend_28 { pt3dadd( -30.8618, 73.32, -59.2501, 0.74 ) }
    dend_28 { pt3dadd( -31.2007, 73.8462, -59.6376, 0.74 ) }
    dend_28 { pt3dadd( -31.7645, 74.7393, -60.3292, 0.44 ) }
    dend_28 { pt3dadd( -32.3505, 75.6693, -61.1044, 0.44 ) }
    dend_28 { pt3dadd( -32.9705, 76.616, -61.9513, 0.37 ) }
    dend_28 { pt3dadd( -33.4853, 77.3273, -62.6164, 0.37 ) }
    dend_28 { pt3dadd( -34.1447, 78.0963, -63.4186, 0.37 ) }
    dend_28 { pt3dadd( -35.0479, 79.068, -64.5919, 0.37 ) }
    dend_28 { pt3dadd( -35.6525, 79.6653, -65.3591, 0.88 ) }
    dend_28 { pt3dadd( -35.8205, 79.8241, -65.5537, 0.88 ) }
    dend_28 { pt3dadd( -36.4261, 80.3453, -66.1642, 0.66 ) }
    dend_28 { pt3dadd( -37.5214, 81.1902, -67.1323, 0.96 ) }
    dend_28 { pt3dadd( -38.939, 82.1211, -68.064, 0.81 ) }
    dend_28 { pt3dadd( -39.9108, 82.6156, -68.4787, 1.11 ) }
    dend_28 { pt3dadd( -41.0346, 83.0422, -68.7286, 0.59 ) }
    dend_28 { pt3dadd( -42.4498, 83.5177, -68.9115, 0.59 ) }
    dend_28 { pt3dadd( -43.3755, 83.8285, -68.9387, 0.74 ) }
    dend_28 { pt3dadd( -44.595, 84.2394, -68.8595, 0.52 ) }
    dend_28 { pt3dadd( -45.2674, 84.4455, -68.7999, 0.52 ) }
    dend_28 { pt3dadd( -46.2156, 84.7517, -68.7714, 0.52 ) }
    dend_28 { pt3dadd( -47.2046, 85.112, -68.7888, 0.52 ) }
    dend_28 { pt3dadd( -48.0391, 85.5207, -68.8931, 0.52 ) }
    dend_28 { pt3dadd( -49.2836, 86.2949, -69.1379, 1.33 ) }
    dend_28 { pt3dadd( -49.8254, 86.7178, -69.2668, 2.28 ) }
    dend_28 { pt3dadd( -50.4653, 87.2575, -69.4337, 2.5 ) }
    // Section: dend_16, id: dend_16, parent: dend_4 (entry count 32/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 9.25408, -54.3304, 12.0456, 0.59 ) }
    dend_16 { pt3dadd( 10.3217, -54.9707, 12.9349, 0.59 ) }
    dend_16 { pt3dadd( 10.8613, -55.3547, 13.3486, 0.59 ) }
    dend_16 { pt3dadd( 12.5927, -56.9041, 14.6562, 0.44 ) }
    dend_16 { pt3dadd( 12.8995, -57.263, 14.9169, 0.44 ) }
    dend_16 { pt3dadd( 13.3395, -57.87, 15.3127, 0.44 ) }
    dend_16 { pt3dadd( 13.9104, -58.7476, 15.8727, 0.44 ) }
    dend_16 { pt3dadd( 14.2128, -59.3487, 16.2099, 0.44 ) }
    dend_16 { pt3dadd( 14.6142, -60.2443, 16.6959, 0.44 ) }
    dend_16 { pt3dadd( 15.1252, -61.442, 17.3159, 0.44 ) }
    dend_16 { pt3dadd( 15.3895, -62.1101, 17.7399, 0.81 ) }
    dend_16 { pt3dadd( 15.8317, -63.3098, 18.6524, 0.59 ) }
    dend_16 { pt3dadd( 15.9528, -63.648, 18.9455, 0.59 ) }
    dend_16 { pt3dadd( 16.2834, -64.584, 19.9693, 0.29 ) }
    dend_16 { pt3dadd( 16.4021, -65.0007, 20.4828, 0.29 ) }
    dend_16 { pt3dadd( 16.6248, -66.1461, 21.8769, 0.29 ) }
    dend_16 { pt3dadd( 16.6779, -66.8642, 22.6674, 0.29 ) }
    dend_16 { pt3dadd( 16.6292, -67.6744, 23.4578, 1.03 ) }
    dend_16 { pt3dadd( 16.2155, -70.0861, 25.4272, 1.11 ) }
    dend_16 { pt3dadd( 15.9504, -71.0972, 26.1851, 1.33 ) }
    dend_16 { pt3dadd( 15.5807, -72.2549, 26.9252, 0.66 ) }
    dend_16 { pt3dadd( 14.7266, -74.3772, 27.6294, 0.15 ) }
    dend_16 { pt3dadd( 14.3717, -75.0167, 27.4234, 0.15 ) }
    dend_16 { pt3dadd( 13.9771, -75.6076, 26.8608, 0.15 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 56/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 9.25408, -54.3304, 12.0456, 1.33 ) }
    dend_5 { pt3dadd( 8.95409, -55.6744, 11.7956, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 58/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -50.4653, 87.2575, -69.4337, 0.37 ) }
    dend_30 { pt3dadd( -51.9651, 87.4991, -70.307, 0.37 ) }
    dend_30 { pt3dadd( -52.638, 87.557, -70.7084, 0.37 ) }
    dend_30 { pt3dadd( -53.5499, 87.5304, -71.2633, 0.37 ) }
    dend_30 { pt3dadd( -54.5463, 87.3665, -71.9878, 0.88 ) }
    dend_30 { pt3dadd( -54.9669, 87.2782, -72.3203, 0.88 ) }
    dend_30 { pt3dadd( -55.686, 87.145, -72.9014, 0.52 ) }
    dend_30 { pt3dadd( -56.2263, 87.0575, -73.3852, 0.29 ) }
    dend_30 { pt3dadd( -56.8951, 86.9947, -74.0621, 0.29 ) }
    dend_30 { pt3dadd( -57.8347, 87.045, -75.1251, 0.37 ) }
    dend_30 { pt3dadd( -58.1527, 87.1593, -75.4843, 0.37 ) }
    dend_30 { pt3dadd( -58.6449, 87.4617, -76.0357, 0.37 ) }
    dend_30 { pt3dadd( -59.1556, 87.8331, -76.5289, 0.37 ) }
    dend_30 { pt3dadd( -60.0535, 88.4557, -77.3484, 0.66 ) }
    dend_30 { pt3dadd( -60.6229, 88.794, -77.8293, 0.66 ) }
    dend_30 { pt3dadd( -61.4978, 89.1756, -78.4626, 0.37 ) }
    dend_30 { pt3dadd( -62.0892, 89.3478, -78.8543, 0.29 ) }
    dend_30 { pt3dadd( -63.1809, 89.5449, -79.5065, 0.29 ) }
    dend_30 { pt3dadd( -64.3058, 89.6803, -80.0273, 0.29 ) }
    dend_30 { pt3dadd( -65.3549, 89.7652, -80.3604, 0.29 ) }
    dend_30 { pt3dadd( -66.4908, 89.8569, -80.6978, 0.29 ) }
    dend_30 { pt3dadd( -67.2914, 89.9424, -80.9365, 0.88 ) }
    dend_30 { pt3dadd( -67.7112, 90.0079, -81.072, 1.03 ) }
    dend_30 { pt3dadd( -68.9261, 90.3364, -81.5536, 0.29 ) }
    dend_30 { pt3dadd( -69.8894, 90.6891, -81.9772, 0.29 ) }
    dend_30 { pt3dadd( -71.1733, 91.1515, -82.6497, 0.96 ) }
    dend_30 { pt3dadd( -71.7624, 91.344, -83.0245, 1.25 ) }
    dend_30 { pt3dadd( -71.9826, 91.4043, -83.2043, 1.47 ) }
    dend_30 { pt3dadd( -72.9619, 91.5974, -84.0682, 0.96 ) }
    dend_30 { pt3dadd( -73.7628, 91.7257, -85.0465, 0.52 ) }
    dend_30 { pt3dadd( -74.6864, 91.9181, -86.3572, 0.44 ) }
    dend_30 { pt3dadd( -75.3891, 92.0885, -87.4163, 0.44 ) }
    dend_30 { pt3dadd( -76.531, 92.4094, -89.241, 1.11 ) }
    dend_30 { pt3dadd( -76.9635, 92.5626, -89.9521, 1.11 ) }
    dend_30 { pt3dadd( -79.2585, 93.5758, -93.8277, 0.29 ) }
    dend_30 { pt3dadd( -79.8006, 93.8598, -94.8208, 0.29 ) }
    dend_30 { pt3dadd( -80.1609, 94.0622, -95.5385, 0.96 ) }
    dend_30 { pt3dadd( -80.5152, 94.247, -96.2279, 1.18 ) }
    dend_30 { pt3dadd( -81.1369, 94.5624, -97.2815, 0.88 ) }
    dend_30 { pt3dadd( -81.8705, 94.8927, -98.3641, 0.52 ) }
    dend_30 { pt3dadd( -82.3819, 95.0267, -98.962, 0.52 ) }
    dend_30 { pt3dadd( -82.9755, 95.0839, -99.6965, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_30 { pt3dadd( -84.1753, 95.0987, -101.328, 0.37 ) }
    dend_30 { pt3dadd( -84.8285, 95.0893, -102.231, 0.37 ) }
    dend_30 { pt3dadd( -85.5214, 95.0826, -103.189, 0.37 ) }
    dend_30 { pt3dadd( -86.4864, 95.1021, -104.519, 0.37 ) }
    dend_30 { pt3dadd( -87.2024, 95.157, -105.473, 0.37 ) }
    dend_30 { pt3dadd( -87.9987, 95.2198, -106.504, 0.37 ) }
    dend_30 { pt3dadd( -88.553, 95.1606, -107.282, 1.11 ) }
    dend_30 { pt3dadd( -88.7213, 95.1171, -107.559, 1.47 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 8/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -50.4653, 87.2575, -69.4337, 0.29 ) }
    dend_29 { pt3dadd( -51.5303, 90.4686, -71.4446, 0.29 ) }
    dend_29 { pt3dadd( -51.9146, 91.5073, -71.9435, 0.29 ) }
    dend_29 { pt3dadd( -52.1534, 92.1525, -72.1996, 0.29 ) }
    dend_29 { pt3dadd( -52.7554, 93.6114, -72.7595, 0.29 ) }
    dend_29 { pt3dadd( -52.9635, 94.075, -72.9229, 0.52 ) }
    dend_29 { pt3dadd( -53.344, 94.8817, -73.1716, 0.37 ) }
    dend_29 { pt3dadd( -53.7402, 95.5554, -73.2345, 0.66 ) }
    dend_29 { pt3dadd( -53.9923, 95.9408, -73.2472, 0.81 ) }
    dend_29 { pt3dadd( -54.8444, 97.2114, -73.2033, 0.29 ) }
    dend_29 { pt3dadd( -55.5064, 98.1541, -73.124, 0.52 ) }
    dend_29 { pt3dadd( -55.9374, 98.7254, -73.0516, 0.74 ) }
    dend_29 { pt3dadd( -56.9618, 99.9472, -72.8217, 0.29 ) }
    dend_29 { pt3dadd( -57.8817, 100.958, -72.5515, 0.29 ) }
    dend_29 { pt3dadd( -58.4225, 101.489, -72.3419, 1.25 ) }
    dend_29 { pt3dadd( -58.753, 101.803, -72.173, 1.84 ) }
    dend_29 { pt3dadd( -59.1659, 102.173, -71.9379, 1.84 ) }
    dend_29 { pt3dadd( -60.6515, 103.344, -71.0807, 0.29 ) }
    dend_29 { pt3dadd( -61.1497, 103.682, -70.7773, 0.29 ) }
    dend_29 { pt3dadd( -62.7312, 104.54, -69.7215, 0.29 ) }
    dend_29 { pt3dadd( -63.412, 104.867, -69.1954, 0.52 ) }
    dend_29 { pt3dadd( -63.8031, 105.046, -68.8559, 0.29 ) }
    dend_29 { pt3dadd( -64.7387, 105.489, -67.9271, 0.29 ) }
    dend_29 { pt3dadd( -65.194, 105.723, -67.4093, 0.29 ) }
    dend_29 { pt3dadd( -66.3912, 106.402, -66.0352, 0.88 ) }
    dend_29 { pt3dadd( -67.4935, 106.996, -64.8089, 0.29 ) }
    dend_29 { pt3dadd( -67.9614, 107.232, -64.3346, 0.29 ) }
    dend_29 { pt3dadd( -68.8555, 107.718, -63.4814, 0.81 ) }
    dend_29 { pt3dadd( -69.3074, 108.014, -63.0513, 0.81 ) }
    dend_29 { pt3dadd( -69.9955, 108.535, -62.3864, 0.37 ) }
    dend_29 { pt3dadd( -70.8489, 109.277, -61.5705, 0.29 ) }
    dend_29 { pt3dadd( -71.3743, 109.748, -61.0572, 0.29 ) }
    dend_29 { pt3dadd( -71.941, 110.289, -60.4788, 0.29 ) }
    dend_29 { pt3dadd( -72.379, 110.745, -59.9995, 0.29 ) }
    dend_29 { pt3dadd( -73.3424, 111.888, -58.8164, 0.88 ) }
    dend_29 { pt3dadd( -73.5642, 112.186, -58.5002, 1.25 ) }
    dend_29 { pt3dadd( -73.9493, 112.715, -57.9523, 1.25 ) }
    dend_29 { pt3dadd( -74.5022, 113.447, -57.2986, 0.29 ) }
    dend_29 { pt3dadd( -75.0118, 114.055, -56.8538, 0.22 ) }
    dend_29 { pt3dadd( -75.6599, 114.738, -56.5384, 0.88 ) }
    dend_29 { pt3dadd( -76.5719, 115.664, -56.4379, 0.88 ) }
    dend_29 { pt3dadd( -77.2928, 116.382, -56.3981, 0.59 ) }
    dend_29 { pt3dadd( -79.4979, 118.514, -56.3658, 0.59 ) }
    dend_29 { pt3dadd( -79.8775, 118.879, -56.3769, 0.59 ) }
    dend_29 { pt3dadd( -80.7357, 119.686, -56.4197, 0.29 ) }
    dend_29 { pt3dadd( -81.5061, 120.407, -56.4361, 0.37 ) }
    dend_29 { pt3dadd( -82.7166, 121.509, -56.368, 0.37 ) }
    dend_29 { pt3dadd( -83.4402, 122.15, -56.217, 0.37 ) }
    dend_29 { pt3dadd( -83.7549, 122.427, -56.1124, 0.44 ) }
    dend_29 { pt3dadd( -84.0337, 122.66, -56.0354, 0.44 ) }
    dend_29 { pt3dadd( -84.9428, 123.361, -55.8507, 0.22 ) }
    dend_29 { pt3dadd( -85.6267, 123.87, -55.7712, 0.37 ) }
    dend_29 { pt3dadd( -86.4104, 124.412, -55.7514, 0.29 ) }
    dend_29 { pt3dadd( -87.3087, 124.991, -55.7424, 0.29 ) }
    dend_29 { pt3dadd( -88.3375, 125.607, -55.7321, 0.29 ) }
    dend_29 { pt3dadd( -89.386, 126.22, -55.7219, 0.29 ) }
    dend_29 { pt3dadd( -90.0604, 126.645, -55.7154, 0.29 ) }
    dend_29 { pt3dadd( -90.8506, 127.223, -55.7031, 0.29 ) }
    dend_29 { pt3dadd( -91.6143, 127.904, -55.6946, 0.52 ) }
    dend_29 { pt3dadd( -91.9193, 128.269, -55.6934, 0.74 ) }
    dend_29 { pt3dadd( -92.374, 129.038, -55.6335, 0.52 ) }
    dend_29 { pt3dadd( -92.9363, 130.195, -55.4644, 0.29 ) }
    dend_29 { pt3dadd( -93.243, 130.854, -55.3429, 0.29 ) }
    dend_29 { pt3dadd( -93.5047, 131.395, -55.2428, 0.37 ) }
    dend_29 { pt3dadd( -93.7737, 131.868, -55.1516, 0.37 ) }
    dend_29 { pt3dadd( -94.6876, 133.15, -54.8914, 0.59 ) }
    dend_29 { pt3dadd( -95.4184, 133.983, -54.7184, 0.29 ) }
    dend_29 { pt3dadd( -96.8261, 135.352, -54.4427, 0.29 ) }
    dend_29 { pt3dadd( -98.4679, 136.795, -54.1872, 0.29 ) }
    dend_29 { pt3dadd( -99.2225, 137.438, -54.081, 0.29 ) }
    dend_29 { pt3dadd( -100.1, 138.166, -53.9914, 0.29 ) }
    dend_29 { pt3dadd( -100.831, 138.755, -53.9722, 0.59 ) }
    dend_29 { pt3dadd( -101.517, 139.253, -53.9556, 0.59 ) }
    dend_29 { pt3dadd( -102.779, 139.949, -53.9222, 0.96 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 8.95409, -55.6744, 11.7956, 0.74 ) }
    dend_7 { pt3dadd( 9.49048, -57.6113, 11.7421, 0.74 ) }
    dend_7 { pt3dadd( 9.82471, -58.6818, 11.7538, 0.74 ) }
    dend_7 { pt3dadd( 10.2052, -59.9317, 11.8289, 0.96 ) }
    dend_7 { pt3dadd( 10.5673, -61.0892, 12.0167, 0.74 ) }
    dend_7 { pt3dadd( 10.9971, -62.4327, 12.2997, 0.59 ) }
    dend_7 { pt3dadd( 11.3233, -63.4521, 12.5143, 0.59 ) }
    dend_7 { pt3dadd( 11.8239, -64.8936, 12.9166, 0.59 ) }
    dend_7 { pt3dadd( 12.4507, -66.6249, 13.4841, 0.52 ) }
    dend_7 { pt3dadd( 13.2943, -68.8614, 14.3222, 0.52 ) }
    dend_7 { pt3dadd( 13.51, -69.4707, 14.5789, 1.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 93/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 8.95409, -55.6744, 11.7956, 0.59 ) }
    dend_6 { pt3dadd( 8.02769, -56.7448, 11.821, 0.59 ) }
    dend_6 { pt3dadd( 7.35983, -57.415, 11.9872, 0.88 ) }
    dend_6 { pt3dadd( 6.57664, -58.1586, 12.2865, 0.88 ) }
    dend_6 { pt3dadd( 5.66176, -59.0106, 12.6722, 0.59 ) }
    dend_6 { pt3dadd( 4.40412, -60.0992, 13.1913, 0.59 ) }
    dend_6 { pt3dadd( 3.85437, -60.5862, 13.4489, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_6 { pt3dadd( 2.87755, -61.4579, 14.0148, 1.4 ) }
    dend_6 { pt3dadd( 2.02306, -62.2221, 14.536, 1.03 ) }
    dend_6 { pt3dadd( 1.43738, -62.7294, 14.8821, 1.55 ) }
    dend_6 { pt3dadd( 0.749706, -63.3202, 15.2522, 1.55 ) }
    dend_6 { pt3dadd( -0.36634, -64.3251, 15.7217, 1.03 ) }
    dend_6 { pt3dadd( -1.00059, -64.9322, 15.9506, 0.81 ) }
    dend_6 { pt3dadd( -1.84486, -65.7737, 16.2251, 0.81 ) }
    dend_6 { pt3dadd( -2.54731, -66.4868, 16.4014, 0.37 ) }
    dend_6 { pt3dadd( -3.07203, -67.0109, 16.4752, 0.37 ) }
    dend_6 { pt3dadd( -3.2013, -67.1363, 16.482, 0.96 ) }
    dend_6 { pt3dadd( -3.56831, -67.4801, 16.4732, 1.4 ) }
    dend_6 { pt3dadd( -5.14112, -69.0702, 16.4077, 0.59 ) }
    dend_6 { pt3dadd( -6.40135, -70.3908, 16.3463, 0.52 ) }
    dend_6 { pt3dadd( -7.38345, -71.4047, 16.2947, 0.52 ) }
    dend_6 { pt3dadd( -8.53316, -72.5007, 16.2307, 0.37 ) }
    dend_6 { pt3dadd( -9.49325, -73.335, 16.1379, 0.29 ) }
    dend_6 { pt3dadd( -10.6308, -74.2339, 15.9328, 1.25 ) }
    dend_6 { pt3dadd( -10.9311, -74.4527, 15.8499, 1.4 ) }
    dend_6 { pt3dadd( -11.9493, -75.1748, 15.5756, 0.52 ) }
    dend_6 { pt3dadd( -12.7174, -75.6909, 15.3532, 0.81 ) }
    dend_6 { pt3dadd( -13.71, -76.2643, 15.0169, 1.03 ) }
    dend_6 { pt3dadd( -15.0921, -76.8698, 14.5614, 0.52 ) }
    dend_6 { pt3dadd( -15.957, -77.1869, 14.3007, 0.52 ) }
    dend_6 { pt3dadd( -16.6429, -77.4712, 14.1311, 0.37 ) }
    dend_6 { pt3dadd( -17.6298, -78.0349, 14.0261, 0.29 ) }
    dend_6 { pt3dadd( -17.9359, -78.2609, 14.0474, 0.74 ) }
    dend_6 { pt3dadd( -18.5263, -78.7325, 14.1963, 1.03 ) }
    dend_6 { pt3dadd( -18.8937, -79.009, 14.3254, 0.81 ) }
    dend_6 { pt3dadd( -19.7129, -79.5817, 14.6015, 0.59 ) }
    dend_6 { pt3dadd( -20.9605, -80.4314, 14.998, 0.37 ) }
    dend_6 { pt3dadd( -21.5396, -80.8259, 15.1196, 0.29 ) }
    dend_6 { pt3dadd( -22.0362, -81.1015, 15.1768, 0.29 ) }
    dend_6 { pt3dadd( -22.5054, -81.3113, 15.1812, 0.96 ) }
    dend_6 { pt3dadd( -23.0135, -81.4898, 15.1047, 0.96 ) }
    dend_6 { pt3dadd( -23.6555, -81.6781, 14.9343, 0.81 ) }
    dend_6 { pt3dadd( -24.8503, -82.0723, 14.5773, 0.44 ) }
    dend_6 { pt3dadd( -25.5045, -82.3946, 14.4029, 0.29 ) }
    dend_6 { pt3dadd( -26.3173, -82.9659, 14.226, 0.29 ) }
    dend_6 { pt3dadd( -27.1761, -83.7441, 14.0936, 1.4 ) }
    dend_6 { pt3dadd( -27.6643, -84.2651, 14.0497, 1.4 ) }
    dend_6 { pt3dadd( -28.5174, -85.2775, 14.0667, 0.44 ) }
    dend_6 { pt3dadd( -28.9786, -85.8652, 14.1296, 0.29 ) }
    dend_6 { pt3dadd( -29.2731, -86.2525, 14.1941, 0.88 ) }
    dend_6 { pt3dadd( -29.8515, -86.9967, 14.3398, 0.96 ) }
    dend_6 { pt3dadd( -30.3221, -87.5754, 14.4643, 0.59 ) }
    dend_6 { pt3dadd( -31.1561, -88.5874, 14.6607, 0.44 ) }
    dend_6 { pt3dadd( -31.9759, -89.5857, 14.8468, 0.37 ) }
    dend_6 { pt3dadd( -32.7985, -90.5524, 15.0283, 0.22 ) }
    dend_6 { pt3dadd( -33.5338, -91.3693, 15.1755, 0.59 ) }
    dend_6 { pt3dadd( -34.2419, -92.1055, 15.2968, 0.29 ) }
    dend_6 { pt3dadd( -34.4611, -92.316, 15.3247, 0.74 ) }
    dend_6 { pt3dadd( -34.9098, -92.6924, 15.351, 0.96 ) }
    dend_6 { pt3dadd( -35.417, -93.0412, 15.3614, 0.59 ) }
    dend_6 { pt3dadd( -36.2918, -93.5341, 15.354, 0.44 ) }
    dend_6 { pt3dadd( -36.8936, -93.8516, 15.356, 0.74 ) }
    dend_6 { pt3dadd( -37.4091, -94.1366, 15.356, 0.96 ) }
    dend_6 { pt3dadd( -38.4856, -94.7903, 15.356, 0.37 ) }
    dend_6 { pt3dadd( -39.2792, -95.3623, 15.356, 0.29 ) }
    dend_6 { pt3dadd( -39.7803, -95.8121, 15.3254, 0.29 ) }
    dend_6 { pt3dadd( -40.3351, -96.4099, 15.2498, 0.52 ) }
    dend_6 { pt3dadd( -40.67, -96.807, 15.1798, 0.52 ) }
    dend_6 { pt3dadd( -40.9717, -97.1508, 15.1374, 0.52 ) }
    dend_6 { pt3dadd( -41.7031, -97.8547, 15.0925, 0.52 ) }
    dend_6 { pt3dadd( -42.6086, -98.5647, 15.0958, 0.52 ) }
    dend_6 { pt3dadd( -43.0059, -98.7977, 15.1144, 0.88 ) }
    dend_6 { pt3dadd( -43.8399, -99.1662, 15.1778, 0.88 ) }
    dend_6 { pt3dadd( -45.4274, -99.7069, 15.2564, 0.37 ) }
    dend_6 { pt3dadd( -46.5518, -100.046, 15.2474, 0.29 ) }
    dend_6 { pt3dadd( -47.1217, -100.225, 15.2177, 0.96 ) }
    dend_6 { pt3dadd( -48.0566, -100.592, 15.1229, 1.03 ) }
    dend_6 { pt3dadd( -49.1142, -101.14, 14.9233, 0.52 ) }
    dend_6 { pt3dadd( -50.015, -101.762, 14.5989, 0.52 ) }
    dend_6 { pt3dadd( -50.8842, -102.534, 14.1257, 0.52 ) }
    dend_6 { pt3dadd( -51.6879, -103.428, 13.5762, 0.52 ) }
    dend_6 { pt3dadd( -52.3015, -104.226, 13.0974, 0.52 ) }
    dend_6 { pt3dadd( -53.0884, -105.404, 12.4201, 0.44 ) }
    dend_6 { pt3dadd( -53.8511, -106.705, 11.6681, 0.74 ) }
    dend_6 { pt3dadd( -54.2845, -107.554, 11.1882, 0.81 ) }
    dend_6 { pt3dadd( -54.7267, -108.497, 10.6337, 0.52 ) }
    dend_6 { pt3dadd( -54.9701, -109.026, 10.2968, 0.88 ) }
    dend_6 { pt3dadd( -55.1487, -109.41, 10.0503, 0.88 ) }
    dend_6 { pt3dadd( -55.7656, -110.722, 9.23751, 0.44 ) }
    dend_6 { pt3dadd( -56.3505, -111.789, 8.57197, 0.37 ) }
    dend_6 { pt3dadd( -56.6215, -112.255, 8.26752, 0.37 ) }
    dend_6 { pt3dadd( -57.1278, -113.094, 7.70591, 0.37 ) }
    dend_6 { pt3dadd( -57.5473, -113.765, 7.27171, 0.59 ) }
    dend_6 { pt3dadd( -57.9462, -114.361, 6.9165, 0.59 ) }
    dend_6 { pt3dadd( -59.1014, -115.854, 6.15949, 0.29 ) }
    dend_6 { pt3dadd( -59.6213, -116.461, 5.88432, 0.29 ) }
    dend_6 { pt3dadd( -60.0859, -117.001, 5.64753, 0.59 ) }
    dend_6 { pt3dadd( -60.7615, -117.839, 5.28052, 0.59 ) }
    dend_6 { pt3dadd( -61.2098, -118.417, 5.0333, 0.37 ) }
    dend_6 { pt3dadd( -61.869, -119.271, 4.71294, 0.37 ) }
    dend_6 { pt3dadd( -62.3081, -119.804, 4.56409, 0.81 ) }
    dend_6 { pt3dadd( -62.6636, -120.199, 4.44856, 0.81 ) }
    dend_6 { pt3dadd( -63.1534, -120.698, 4.27475, 0.81 ) }
    dend_6 { pt3dadd( -63.8204, -121.427, 3.9196, 0.37 ) }
    dend_6 { pt3dadd( -64.2971, -122.011, 3.59445, 0.37 ) }
    dend_6 { pt3dadd( -64.882, -122.757, 3.15701, 0.66 ) }
    dend_6 { pt3dadd( -65.2082, -123.144, 2.92254, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_6 { pt3dadd( -65.8659, -123.837, 2.4838, 0.96 ) }
    dend_6 { pt3dadd( -66.9369, -124.799, 1.77589, 0.29 ) }
    dend_6 { pt3dadd( -67.4448, -125.19, 1.38133, 0.29 ) }
    dend_6 { pt3dadd( -68.11, -125.707, 0.789868, 0.44 ) }
    dend_6 { pt3dadd( -68.3876, -125.944, 0.533904, 0.81 ) }
    dend_6 { pt3dadd( -68.8056, -126.353, 0.0998642, 0.81 ) }
    dend_6 { pt3dadd( -69.1983, -126.773, -0.350776, 0.81 ) }
    dend_6 { pt3dadd( -70.2559, -127.864, -1.54374, 0.52 ) }
    dend_6 { pt3dadd( -70.7685, -128.41, -2.14776, 0.59 ) }
    dend_6 { pt3dadd( -71.3723, -129.121, -2.90919, 0.59 ) }
    dend_6 { pt3dadd( -72.3606, -130.334, -4.09685, 0.29 ) }
    dend_6 { pt3dadd( -72.9986, -131.143, -4.82422, 0.96 ) }
    dend_6 { pt3dadd( -73.3864, -131.626, -5.22125, 1.25 ) }
    dend_6 { pt3dadd( -73.6403, -131.911, -5.43865, 1.25 ) }
    dend_6 { pt3dadd( -74.6273, -132.825, -6.12631, 0.37 ) }
    dend_6 { pt3dadd( -75.338, -133.4, -6.53025, 0.37 ) }
    dend_6 { pt3dadd( -75.9636, -133.859, -6.77938, 1.03 ) }
    dend_6 { pt3dadd( -76.5603, -134.269, -6.96972, 1.25 ) }
    dend_6 { pt3dadd( -77.1874, -134.665, -7.14235, 1.25 ) }
    dend_6 { pt3dadd( -78.4196, -135.332, -7.34614, 0.29 ) }
    dend_6 { pt3dadd( -79.0767, -135.618, -7.37356, 0.44 ) }
    dend_6 { pt3dadd( -79.7629, -135.879, -7.36125, 0.59 ) }
    dend_6 { pt3dadd( -80.6431, -136.183, -7.35146, 0.59 ) }
    dend_6 { pt3dadd( -81.7141, -136.527, -7.36474, 0.29 ) }
    dend_6 { pt3dadd( -83.0579, -136.937, -7.45769, 0.29 ) }
    dend_6 { pt3dadd( -84.3541, -137.349, -7.64677, 0.29 ) }
    dend_6 { pt3dadd( -85.1866, -137.635, -7.80852, 0.29 ) }
    dend_6 { pt3dadd( -86.5179, -138.153, -8.14293, 0.81 ) }
    dend_6 { pt3dadd( -86.9488, -138.338, -8.26984, 0.81 ) }
    dend_6 { pt3dadd( -88.286, -138.98, -8.71037, 0.52 ) }
    dend_6 { pt3dadd( -89.5524, -139.675, -9.10413, 0.52 ) }
    dend_6 { pt3dadd( -90.6344, -140.348, -9.35711, 0.44 ) }
    dend_6 { pt3dadd( -91.3835, -140.865, -9.42286, 0.81 ) }
    dend_6 { pt3dadd( -92.3044, -141.557, -9.31346, 0.81 ) }
    dend_6 { pt3dadd( -92.9049, -142.056, -9.0773, 0.81 ) }
    dend_6 { pt3dadd( -93.9899, -143.024, -8.3661, 0.37 ) }
    dend_6 { pt3dadd( -94.441, -143.453, -7.9625, 0.37 ) }
    dend_6 { pt3dadd( -95.0414, -144.048, -7.34556, 0.81 ) }
    dend_6 { pt3dadd( -95.7134, -144.708, -6.62573, 0.81 ) }
    dend_6 { pt3dadd( -97.0243, -145.926, -5.227, 0.44 ) }
    dend_6 { pt3dadd( -97.6497, -146.404, -4.60452, 0.37 ) }
    dend_6 { pt3dadd( -98.334, -146.863, -3.98726, 0.29 ) }
    dend_6 { pt3dadd( -98.8653, -147.205, -3.55128, 0.29 ) }
    dend_6 { pt3dadd( -99.3948, -147.567, -3.15574, 0.74 ) }
    dend_6 { pt3dadd( -100.283, -148.274, -2.47482, 0.29 ) }
    dend_6 { pt3dadd( -101.459, -149.329, -1.60101, 0.29 ) }
    dend_6 { pt3dadd( -102.094, -149.942, -1.12591, 0.66 ) }
    dend_6 { pt3dadd( -102.714, -150.558, -0.699929, 0.81 ) }
    dend_6 { pt3dadd( -103.332, -151.249, -0.281319, 0.81 ) }
    dend_6 { pt3dadd( -104.499, -152.673, 0.447586, 0.44 ) }
    dend_6 { pt3dadd( -105.012, -153.347, 0.71466, 0.29 ) }
    dend_6 { pt3dadd( -105.768, -154.378, 1.05567, 0.29 ) }
    dend_6 { pt3dadd( -106.326, -155.073, 1.28743, 0.29 ) }
    dend_6 { pt3dadd( -106.948, -155.801, 1.52676, 0.29 ) }
    dend_6 { pt3dadd( -107.425, -156.307, 1.662, 0.96 ) }
    dend_6 { pt3dadd( -107.958, -156.839, 1.68603, 1.25 ) }
    // Section: dend_48, id: dend_48, parent: dend_30 (entry count 56/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -88.7213, 95.1171, -107.559, 0.37 ) }
    dend_48 { pt3dadd( -89.9977, 94.2848, -107.48, 0.37 ) }
    dend_48 { pt3dadd( -91.0722, 93.7013, -107.349, 0.37 ) }
    dend_48 { pt3dadd( -92.8331, 92.9813, -107.073, 0.37 ) }
    dend_48 { pt3dadd( -93.7861, 92.6992, -106.908, 0.22 ) }
    dend_48 { pt3dadd( -94.6759, 92.5119, -106.751, 0.22 ) }
    dend_48 { pt3dadd( -96.0863, 92.2874, -106.504, 0.37 ) }
    dend_48 { pt3dadd( -96.8516, 92.2863, -106.358, 0.37 ) }
    dend_48 { pt3dadd( -97.9213, 92.3922, -106.154, 0.22 ) }
    dend_48 { pt3dadd( -98.8644, 92.5533, -106.038, 0.22 ) }
    dend_48 { pt3dadd( -99.6674, 92.6839, -106.011, 0.81 ) }
    dend_48 { pt3dadd( -100.11, 92.7298, -106.033, 0.88 ) }
    dend_48 { pt3dadd( -100.768, 92.7371, -106.121, 0.66 ) }
    dend_48 { pt3dadd( -102.011, 92.7, -106.316, 0.29 ) }
    dend_48 { pt3dadd( -103.659, 92.636, -106.584, 0.29 ) }
    dend_48 { pt3dadd( -104.788, 92.6154, -106.771, 0.29 ) }
    dend_48 { pt3dadd( -106.322, 92.6171, -107.037, 0.29 ) }
    dend_48 { pt3dadd( -108.288, 92.6373, -107.375, 0.29 ) }
    dend_48 { pt3dadd( -109.212, 92.6503, -107.534, 0.66 ) }
    dend_48 { pt3dadd( -109.938, 92.6582, -107.656, 0.88 ) }
    dend_48 { pt3dadd( -110.297, 92.6543, -107.718, 0.88 ) }
    dend_48 { pt3dadd( -111.313, 92.6472, -107.917, 0.29 ) }
    dend_48 { pt3dadd( -112.241, 92.6143, -108.118, 0.29 ) }
    dend_48 { pt3dadd( -113.371, 92.5421, -108.38, 1.33 ) }
    dend_48 { pt3dadd( -113.791, 92.4975, -108.487, 1.77 ) }
    dend_48 { pt3dadd( -115.539, 92.327, -108.957, 0.29 ) }
    dend_48 { pt3dadd( -116.748, 92.2208, -109.295, 0.29 ) }
    dend_48 { pt3dadd( -118.283, 92.1005, -109.722, 0.29 ) }
    dend_48 { pt3dadd( -119.032, 92.0652, -109.919, 0.29 ) }
    dend_48 { pt3dadd( -119.804, 92.0719, -110.059, 0.74 ) }
    dend_48 { pt3dadd( -121.051, 92.1303, -110.15, 0.29 ) }
    dend_48 { pt3dadd( -122.398, 92.2523, -110.024, 0.29 ) }
    dend_48 { pt3dadd( -123.585, 92.3966, -109.771, 0.81 ) }
    dend_48 { pt3dadd( -124.212, 92.4781, -109.583, 0.81 ) }
    dend_48 { pt3dadd( -126.161, 92.7446, -108.828, 0.22 ) }
    dend_48 { pt3dadd( -127.435, 92.9053, -108.267, 0.22 ) }
    dend_48 { pt3dadd( -128.807, 93.0257, -107.645, 0.88 ) }
    dend_48 { pt3dadd( -129.575, 93.0762, -107.327, 1.18 ) }
    dend_48 { pt3dadd( -131.283, 93.116, -106.769, 0.29 ) }
    dend_48 { pt3dadd( -132.341, 93.0597, -106.537, 0.29 ) }
    dend_48 { pt3dadd( -133.944, 92.8456, -106.343, 0.29 ) }
    dend_48 { pt3dadd( -135.308, 92.6322, -106.265, 0.29 ) }
    dend_48 { pt3dadd( -136.612, 92.4352, -106.257, 0.81 ) }
    dend_48 { pt3dadd( -138.306, 92.2585, -106.28, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_48 { pt3dadd( -139.692, 92.2085, -106.33, 0.22 ) }
    dend_48 { pt3dadd( -140.568, 92.2402, -106.387, 0.29 ) }
    dend_48 { pt3dadd( -141.848, 92.4586, -106.486, 0.29 ) }
    dend_48 { pt3dadd( -142.917, 92.7754, -106.494, 0.29 ) }
    dend_48 { pt3dadd( -144.093, 93.2383, -106.396, 0.52 ) }
    dend_48 { pt3dadd( -144.868, 93.6099, -106.276, 0.59 ) }
    dend_48 { pt3dadd( -145.903, 94.1877, -106.052, 0.29 ) }
    dend_48 { pt3dadd( -146.451, 94.5225, -105.913, 0.29 ) }
    dend_48 { pt3dadd( -147.987, 95.4421, -105.421, 0.29 ) }
    dend_48 { pt3dadd( -148.879, 95.9191, -105.11, 0.29 ) }
    dend_48 { pt3dadd( -149.902, 96.3761, -104.726, 0.59 ) }
    dend_48 { pt3dadd( -150.863, 96.7597, -104.407, 0.74 ) }
    dend_48 { pt3dadd( -152.203, 97.2933, -104.107, 0.44 ) }
    dend_48 { pt3dadd( -153.263, 97.7233, -103.997, 1.55 ) }
    dend_48 { pt3dadd( -153.96, 97.9884, -104.042, 1.99 ) }
    dend_48 { pt3dadd( -155.861, 98.5377, -104.343, 0.29 ) }
    dend_48 { pt3dadd( -157.146, 98.747, -104.641, 0.29 ) }
    dend_48 { pt3dadd( -158.919, 98.8611, -105.186, 0.29 ) }
    dend_48 { pt3dadd( -159.573, 98.8525, -105.423, 0.29 ) }
    dend_48 { pt3dadd( -160.92, 98.7575, -105.983, 0.44 ) }
    dend_48 { pt3dadd( -161.768, 98.6558, -106.353, 0.44 ) }
    dend_48 { pt3dadd( -162.764, 98.4724, -106.786, 0.29 ) }
    dend_48 { pt3dadd( -164.097, 98.1737, -107.25, 0.29 ) }
    dend_48 { pt3dadd( -164.983, 97.9779, -107.517, 0.29 ) }
    dend_48 { pt3dadd( -165.878, 97.8179, -107.803, 0.37 ) }
    dend_48 { pt3dadd( -166.676, 97.7293, -108.059, 0.59 ) }
    dend_48 { pt3dadd( -167.598, 97.6699, -108.352, 0.59 ) }
    dend_48 { pt3dadd( -168.707, 97.6257, -108.672, 0.44 ) }
    dend_48 { pt3dadd( -169.652, 97.666, -108.839, 0.29 ) }
    dend_48 { pt3dadd( -170.023, 97.7301, -108.878, 0.88 ) }
    dend_48 { pt3dadd( -170.839, 97.9292, -108.926, 0.88 ) }
    dend_48 { pt3dadd( -171.337, 98.0477, -108.94, 0.88 ) }
    dend_48 { pt3dadd( -172.454, 98.253, -108.95, 0.29 ) }
    dend_48 { pt3dadd( -173.795, 98.4378, -108.959, 0.29 ) }
    dend_48 { pt3dadd( -174.831, 98.6056, -108.968, 0.29 ) }
    dend_48 { pt3dadd( -175.764, 98.8367, -108.989, 0.29 ) }
    dend_48 { pt3dadd( -176.584, 99.1148, -109.018, 0.52 ) }
    dend_48 { pt3dadd( -177.626, 99.549, -109.07, 0.52 ) }
    dend_48 { pt3dadd( -179.023, 100.191, -109.179, 0.29 ) }
    dend_48 { pt3dadd( -180.056, 100.686, -109.301, 0.29 ) }
    dend_48 { pt3dadd( -181.089, 101.23, -109.428, 0.74 ) }
    dend_48 { pt3dadd( -181.719, 101.61, -109.542, 1.03 ) }
    dend_48 { pt3dadd( -182.498, 102.159, -109.745, 0.37 ) }
    dend_48 { pt3dadd( -183.254, 102.716, -110.005, 0.37 ) }
    dend_48 { pt3dadd( -183.899, 103.138, -110.261, 0.96 ) }
    dend_48 { pt3dadd( -184.399, 103.404, -110.464, 1.18 ) }
    dend_48 { pt3dadd( -185.701, 104.07, -110.983, 0.29 ) }
    dend_48 { pt3dadd( -186.471, 104.507, -111.278, 0.29 ) }
    dend_48 { pt3dadd( -187.284, 104.987, -111.585, 0.29 ) }
    dend_48 { pt3dadd( -188.099, 105.443, -111.861, 0.37 ) }
    dend_48 { pt3dadd( -189.065, 105.932, -112.147, 0.37 ) }
    dend_48 { pt3dadd( -190.235, 106.514, -112.439, 0.37 ) }
    dend_48 { pt3dadd( -191.186, 106.945, -112.638, 0.37 ) }
    dend_48 { pt3dadd( -192.194, 107.391, -112.853, 0.37 ) }
    dend_48 { pt3dadd( -193.521, 108.062, -113.15, 0.37 ) }
    dend_48 { pt3dadd( -194.562, 108.636, -113.399, 0.37 ) }
    dend_48 { pt3dadd( -195.478, 109.16, -113.62, 0.37 ) }
    dend_48 { pt3dadd( -196.607, 109.768, -113.839, 0.37 ) }
    dend_48 { pt3dadd( -197.762, 110.349, -113.997, 0.37 ) }
    dend_48 { pt3dadd( -199.147, 110.982, -114.102, 1.4 ) }
    dend_48 { pt3dadd( -199.414, 111.092, -114.112, 2.06 ) }
    dend_48 { pt3dadd( -200.075, 111.324, -114.116, 2.28 ) }
    dend_48 { pt3dadd( -201.693, 111.781, -114.101, 0.29 ) }
    dend_48 { pt3dadd( -202.801, 112.012, -114.043, 0.29 ) }
    dend_48 { pt3dadd( -204.532, 112.195, -113.88, 0.29 ) }
    dend_48 { pt3dadd( -205.687, 112.235, -113.73, 0.29 ) }
    dend_48 { pt3dadd( -206.992, 112.217, -113.533, 0.29 ) }
    dend_48 { pt3dadd( -208.327, 112.133, -113.318, 0.29 ) }
    dend_48 { pt3dadd( -209.622, 112.005, -113.106, 0.29 ) }
    dend_48 { pt3dadd( -210.529, 111.914, -112.938, 0.29 ) }
    dend_48 { pt3dadd( -211.429, 111.829, -112.757, 0.44 ) }
    dend_48 { pt3dadd( -212.733, 111.722, -112.542, 0.44 ) }
    dend_48 { pt3dadd( -213.787, 111.729, -112.424, 0.29 ) }
    dend_48 { pt3dadd( -214.506, 111.857, -112.391, 0.29 ) }
    dend_48 { pt3dadd( -215.198, 112.095, -112.405, 0.74 ) }
    dend_48 { pt3dadd( -215.875, 112.374, -112.443, 0.74 ) }
    dend_48 { pt3dadd( -217.361, 113.083, -112.562, 0.29 ) }
    dend_48 { pt3dadd( -218.635, 113.817, -112.678, 0.29 ) }
    dend_48 { pt3dadd( -219.984, 114.683, -112.811, 0.29 ) }
    dend_48 { pt3dadd( -220.999, 115.355, -112.913, 1.18 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 80/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -88.7213, 95.1171, -107.559, 0.44 ) }
    dend_31 { pt3dadd( -90.388, 95.5151, -108.188, 0.44 ) }
    dend_31 { pt3dadd( -91.3741, 95.7313, -108.495, 0.44 ) }
    dend_31 { pt3dadd( -92.6971, 96.0776, -108.858, 0.44 ) }
    dend_31 { pt3dadd( -93.5926, 96.3722, -109.082, 0.44 ) }
    dend_31 { pt3dadd( -94.6157, 96.8045, -109.313, 0.44 ) }
    dend_31 { pt3dadd( -95.4717, 97.2256, -109.48, 0.44 ) }
    dend_31 { pt3dadd( -96.1142, 97.6133, -109.537, 0.44 ) }
    dend_31 { pt3dadd( -96.7582, 98.1344, -109.577, 0.66 ) }
    dend_31 { pt3dadd( -97.3029, 98.6933, -109.612, 0.66 ) }
    dend_31 { pt3dadd( -98.0175, 99.5446, -109.682, 0.29 ) }
    dend_31 { pt3dadd( -98.7588, 100.558, -109.785, 0.29 ) }
    dend_31 { pt3dadd( -99.4583, 101.639, -109.906, 1.11 ) }
    dend_31 { pt3dadd( -99.6589, 101.973, -109.946, 1.11 ) }
    dend_31 { pt3dadd( -100.252, 102.901, -110.064, 0.29 ) }
    dend_31 { pt3dadd( -100.607, 103.483, -110.136, 0.29 ) }
    dend_31 { pt3dadd( -100.825, 103.908, -110.184, 1.03 ) }
    dend_31 { pt3dadd( -100.982, 104.291, -110.218, 1.03 ) }
    dend_31 { pt3dadd( -101.212, 104.87, -110.263, 1.03 ) }
    dend_31 { pt3dadd( -101.86, 106.561, -110.36, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_31 { pt3dadd( -102.228, 107.559, -110.387, 0.29 ) }
    dend_31 { pt3dadd( -102.574, 108.454, -110.402, 0.29 ) }
    dend_31 { pt3dadd( -102.903, 109.168, -110.403, 0.29 ) }
    dend_31 { pt3dadd( -103.538, 110.39, -110.391, 1.33 ) }
    dend_31 { pt3dadd( -103.767, 110.798, -110.388, 1.69 ) }
    dend_31 { pt3dadd( -104.708, 112.259, -110.395, 0.37 ) }
    dend_31 { pt3dadd( -105.284, 113.003, -110.414, 0.37 ) }
    dend_31 { pt3dadd( -106.336, 114.168, -110.466, 0.37 ) }
    dend_31 { pt3dadd( -107.209, 115.067, -110.522, 0.37 ) }
    dend_31 { pt3dadd( -108.088, 115.965, -110.588, 0.37 ) }
    dend_31 { pt3dadd( -108.76, 116.699, -110.66, 0.37 ) }
    dend_31 { pt3dadd( -109.071, 117.083, -110.713, 0.81 ) }
    dend_31 { pt3dadd( -109.493, 117.745, -110.854, 0.81 ) }
    dend_31 { pt3dadd( -109.873, 118.587, -111.121, 0.52 ) }
    dend_31 { pt3dadd( -110.166, 119.314, -111.393, 0.52 ) }
    dend_31 { pt3dadd( -110.608, 120.307, -111.8, 1.03 ) }
    dend_31 { pt3dadd( -110.825, 120.782, -112.011, 1.03 ) }
    dend_31 { pt3dadd( -111.253, 121.611, -112.399, 0.88 ) }
    dend_31 { pt3dadd( -111.928, 122.732, -112.951, 0.37 ) }
    dend_31 { pt3dadd( -112.756, 123.908, -113.543, 0.37 ) }
    dend_31 { pt3dadd( -113.683, 125.132, -114.066, 0.37 ) }
    dend_31 { pt3dadd( -114.161, 125.76, -114.284, 0.37 ) }
    dend_31 { pt3dadd( -114.973, 126.836, -114.574, 0.37 ) }
    dend_31 { pt3dadd( -115.526, 127.575, -114.714, 1.18 ) }
    dend_31 { pt3dadd( -115.944, 128.142, -114.787, 1.69 ) }
    dend_31 { pt3dadd( -117.441, 130.389, -115.002, 0.44 ) }
    dend_31 { pt3dadd( -118.202, 131.748, -115.106, 0.44 ) }
    dend_31 { pt3dadd( -118.861, 133.084, -115.204, 0.44 ) }
    dend_31 { pt3dadd( -119.103, 133.647, -115.25, 0.96 ) }
    dend_31 { pt3dadd( -119.338, 134.235, -115.307, 1.33 ) }
    dend_31 { pt3dadd( -119.911, 135.669, -115.467, 0.37 ) }
    dend_31 { pt3dadd( -120.404, 137.002, -115.643, 0.37 ) }
    dend_31 { pt3dadd( -120.703, 137.888, -115.759, 0.37 ) }
    dend_31 { pt3dadd( -121.014, 138.975, -115.898, 0.37 ) }
    dend_31 { pt3dadd( -121.399, 140.32, -116.083, 0.37 ) }
    dend_31 { pt3dadd( -121.773, 141.5, -116.287, 0.37 ) }
    dend_31 { pt3dadd( -122.092, 142.36, -116.432, 0.59 ) }
    dend_31 { pt3dadd( -122.429, 143.204, -116.552, 0.59 ) }
    dend_31 { pt3dadd( -122.855, 144.328, -116.772, 0.29 ) }
    dend_31 { pt3dadd( -123.034, 144.838, -116.895, 0.29 ) }
    dend_31 { pt3dadd( -123.699, 146.574, -117.383, 1.33 ) }
    dend_31 { pt3dadd( -123.985, 147.228, -117.578, 2.14 ) }
    dend_31 { pt3dadd( -124.247, 147.746, -117.746, 2.28 ) }
    dend_31 { pt3dadd( -125.182, 149.308, -118.33, 1.11 ) }
    dend_31 { pt3dadd( -125.909, 150.312, -118.784, 0.29 ) }
    dend_31 { pt3dadd( -126.798, 151.475, -119.336, 0.29 ) }
    dend_31 { pt3dadd( -127.401, 152.241, -119.71, 0.29 ) }
    dend_31 { pt3dadd( -127.949, 152.971, -120.078, 0.44 ) }
    dend_31 { pt3dadd( -128.48, 153.757, -120.478, 0.44 ) }
    dend_31 { pt3dadd( -129.097, 154.788, -120.961, 0.44 ) }
    dend_31 { pt3dadd( -129.62, 155.853, -121.45, 0.66 ) }
    dend_31 { pt3dadd( -129.848, 156.465, -121.702, 0.66 ) }
    dend_31 { pt3dadd( -130.128, 157.407, -122.032, 0.29 ) }
    dend_31 { pt3dadd( -130.395, 158.537, -122.277, 0.29 ) }
    dend_31 { pt3dadd( -130.581, 159.474, -122.37, 0.29 ) }
    dend_31 { pt3dadd( -130.741, 160.376, -122.42, 0.29 ) }
    dend_31 { pt3dadd( -131.018, 161.67, -122.468, 0.44 ) }
    dend_31 { pt3dadd( -131.246, 162.555, -122.47, 0.44 ) }
    dend_31 { pt3dadd( -131.676, 163.965, -122.371, 1.03 ) }
    dend_31 { pt3dadd( -131.896, 164.688, -122.222, 1.03 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 60/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 13.51, -69.4707, 14.5789, 0.59 ) }
    dend_11 { pt3dadd( 13.8951, -71.1915, 14.3099, 0.59 ) }
    dend_11 { pt3dadd( 14.0501, -72.3785, 14.0983, 0.59 ) }
    dend_11 { pt3dadd( 14.1806, -73.8445, 13.8409, 0.59 ) }
    dend_11 { pt3dadd( 14.2743, -74.923, 13.6615, 0.59 ) }
    dend_11 { pt3dadd( 14.3924, -76.5517, 13.4475, 0.88 ) }
    dend_11 { pt3dadd( 14.4493, -78.0757, 13.2829, 0.88 ) }
    dend_11 { pt3dadd( 14.4035, -79.2077, 13.1904, 0.66 ) }
    dend_11 { pt3dadd( 14.2063, -80.515, 13.1535, 0.81 ) }
    dend_11 { pt3dadd( 13.8766, -81.8909, 13.1963, 0.74 ) }
    dend_11 { pt3dadd( 13.5735, -82.9905, 13.3042, 0.96 ) }
    dend_11 { pt3dadd( 13.2942, -84.0791, 13.4941, 0.74 ) }
    dend_11 { pt3dadd( 13.0192, -85.2632, 13.7523, 0.59 ) }
    dend_11 { pt3dadd( 12.7517, -86.5694, 14.0514, 0.52 ) }
    dend_11 { pt3dadd( 12.6754, -87.0097, 14.152, 1.03 ) }
    dend_11 { pt3dadd( 12.5622, -88.2128, 14.3714, 0.52 ) }
    dend_11 { pt3dadd( 12.6144, -89.5839, 14.5118, 0.81 ) }
    dend_11 { pt3dadd( 12.7526, -90.413, 14.5431, 1.03 ) }
    dend_11 { pt3dadd( 12.934, -91.2034, 14.5171, 1.03 ) }
    dend_11 { pt3dadd( 13.1778, -92.2461, 14.4263, 0.88 ) }
    dend_11 { pt3dadd( 13.4089, -93.3849, 14.2982, 0.74 ) }
    dend_11 { pt3dadd( 13.5342, -94.1277, 14.2025, 0.74 ) }
    dend_11 { pt3dadd( 13.6648, -95.0354, 14.0805, 0.44 ) }
    dend_11 { pt3dadd( 13.8997, -96.5267, 13.8498, 0.44 ) }
    dend_11 { pt3dadd( 14.0422, -97.4441, 13.7026, 0.66 ) }
    dend_11 { pt3dadd( 14.1497, -98.1242, 13.6052, 0.66 ) }
    dend_11 { pt3dadd( 14.2924, -99.0259, 13.4769, 0.52 ) }
    dend_11 { pt3dadd( 14.4516, -100.136, 13.3032, 0.81 ) }
    dend_11 { pt3dadd( 14.5899, -101.124, 13.1074, 1.03 ) }
    dend_11 { pt3dadd( 14.6861, -101.792, 12.9459, 1.03 ) }
    dend_11 { pt3dadd( 14.79, -102.717, 12.7028, 0.66 ) }
    dend_11 { pt3dadd( 14.8491, -103.808, 12.3764, 0.52 ) }
    dend_11 { pt3dadd( 14.8547, -104.695, 12.0899, 0.52 ) }
    dend_11 { pt3dadd( 14.8204, -105.449, 11.8585, 0.52 ) }
    dend_11 { pt3dadd( 14.7618, -106.366, 11.6094, 0.74 ) }
    dend_11 { pt3dadd( 14.7089, -107.07, 11.434, 0.74 ) }
    dend_11 { pt3dadd( 14.5511, -108.795, 11.0729, 0.59 ) }
    dend_11 { pt3dadd( 14.469, -109.841, 10.9343, 0.59 ) }
    dend_11 { pt3dadd( 14.4392, -110.836, 10.8472, 0.96 ) }
    dend_11 { pt3dadd( 14.4448, -111.371, 10.8299, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_11 { pt3dadd( 14.471, -112.438, 10.8664, 0.59 ) }
    dend_11 { pt3dadd( 14.4894, -113.796, 10.9463, 0.44 ) }
    dend_11 { pt3dadd( 14.4886, -115.025, 11.0646, 0.44 ) }
    dend_11 { pt3dadd( 14.4814, -116.078, 11.1613, 0.44 ) }
    dend_11 { pt3dadd( 14.4915, -117.192, 11.237, 0.44 ) }
    dend_11 { pt3dadd( 14.5419, -118.327, 11.286, 0.44 ) }
    dend_11 { pt3dadd( 14.7015, -119.883, 11.3095, 0.59 ) }
    dend_11 { pt3dadd( 14.7934, -120.491, 11.3226, 0.81 ) }
    dend_11 { pt3dadd( 14.9822, -121.471, 11.3366, 0.44 ) }
    dend_11 { pt3dadd( 15.2443, -122.779, 11.383, 0.44 ) }
    dend_11 { pt3dadd( 15.4193, -123.574, 11.4326, 0.81 ) }
    dend_11 { pt3dadd( 15.6156, -124.362, 11.517, 0.81 ) }
    dend_11 { pt3dadd( 15.9331, -125.507, 11.6391, 0.81 ) }
    dend_11 { pt3dadd( 16.1839, -126.341, 11.6844, 0.52 ) }
    dend_11 { pt3dadd( 16.5075, -127.369, 11.683, 0.52 ) }
    dend_11 { pt3dadd( 16.7349, -128.185, 11.6213, 0.81 ) }
    dend_11 { pt3dadd( 16.9112, -129.167, 11.4837, 1.03 ) }
    dend_11 { pt3dadd( 17.0161, -130.593, 11.2178, 0.52 ) }
    dend_11 { pt3dadd( 17.0193, -131.626, 10.9877, 0.52 ) }
    dend_11 { pt3dadd( 16.9598, -132.599, 10.7823, 0.88 ) }
    dend_11 { pt3dadd( 16.8413, -133.796, 10.5529, 0.88 ) }
    dend_11 { pt3dadd( 16.6399, -135.211, 10.3256, 0.44 ) }
    dend_11 { pt3dadd( 16.3797, -136.662, 10.1394, 0.74 ) }
    dend_11 { pt3dadd( 16.257, -137.343, 10.1266, 0.74 ) }
    dend_11 { pt3dadd( 16.0366, -138.587, 10.1329, 0.37 ) }
    dend_11 { pt3dadd( 15.8951, -139.502, 10.1586, 0.66 ) }
    dend_11 { pt3dadd( 15.8135, -140.377, 10.2066, 0.96 ) }
    dend_11 { pt3dadd( 15.7989, -141.41, 10.2614, 0.96 ) }
    dend_11 { pt3dadd( 15.8931, -143.688, 10.3415, 0.37 ) }
    dend_11 { pt3dadd( 16.0109, -145.085, 10.435, 0.37 ) }
    dend_11 { pt3dadd( 16.0873, -145.691, 10.5067, 0.88 ) }
    dend_11 { pt3dadd( 16.1612, -146.221, 10.5754, 0.88 ) }
    dend_11 { pt3dadd( 16.2811, -147.191, 10.6603, 0.88 ) }
    dend_11 { pt3dadd( 16.3684, -148.197, 10.6887, 0.52 ) }
    dend_11 { pt3dadd( 16.4172, -149.61, 10.7629, 0.52 ) }
    dend_11 { pt3dadd( 16.4425, -151.078, 10.9544, 0.44 ) }
    dend_11 { pt3dadd( 16.4543, -152.291, 11.1526, 0.52 ) }
    dend_11 { pt3dadd( 16.4499, -153.999, 11.4656, 0.74 ) }
    dend_11 { pt3dadd( 16.4251, -155.335, 11.7281, 0.74 ) }
    dend_11 { pt3dadd( 16.31, -157.542, 12.1418, 0.59 ) }
    dend_11 { pt3dadd( 16.2238, -158.623, 12.3148, 0.59 ) }
    dend_11 { pt3dadd( 16.1028, -159.726, 12.5088, 0.44 ) }
    dend_11 { pt3dadd( 15.9866, -160.709, 12.6881, 0.44 ) }
    dend_11 { pt3dadd( 15.9251, -161.238, 12.7754, 0.81 ) }
    dend_11 { pt3dadd( 15.8238, -162.24, 12.8477, 0.81 ) }
    dend_11 { pt3dadd( 15.7509, -163.052, 12.8062, 0.74 ) }
    dend_11 { pt3dadd( 15.6555, -163.878, 12.7813, 0.59 ) }
    dend_11 { pt3dadd( 15.4957, -165.1, 12.7835, 0.29 ) }
    dend_11 { pt3dadd( 15.4089, -165.707, 12.8112, 0.52 ) }
    dend_11 { pt3dadd( 15.2138, -167.225, 12.9026, 0.52 ) }
    dend_11 { pt3dadd( 15.1158, -168.169, 12.9812, 0.52 ) }
    dend_11 { pt3dadd( 14.9685, -169.67, 13.1577, 0.74 ) }
    dend_11 { pt3dadd( 14.8879, -170.444, 13.2955, 1.11 ) }
    dend_11 { pt3dadd( 14.7873, -171.044, 13.4665, 1.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 54/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 13.51, -69.4707, 14.5789, 0.52 ) }
    dend_8 { pt3dadd( 14.5728, -68.4504, 15.465, 0.52 ) }
    dend_8 { pt3dadd( 15.1503, -67.8959, 15.9465, 0.52 ) }
    dend_8 { pt3dadd( 15.6331, -67.4324, 16.3491, 0.52 ) }
    dend_8 { pt3dadd( 16.0513, -67.0309, 16.6977, 0.52 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 59/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -131.896, 164.688, -122.222, 0.22 ) }
    dend_37 { pt3dadd( -132.443, 167.1, -123.482, 0.22 ) }
    dend_37 { pt3dadd( -132.67, 167.814, -124.002, 0.22 ) }
    dend_37 { pt3dadd( -132.889, 168.278, -124.445, 0.22 ) }
    dend_37 { pt3dadd( -133.139, 168.806, -124.93, 0.22 ) }
    dend_37 { pt3dadd( -133.653, 170.136, -126.003, 0.22 ) }
    dend_37 { pt3dadd( -133.988, 171.332, -126.861, 1.25 ) }
    dend_37 { pt3dadd( -134.12, 171.812, -127.221, 1.55 ) }
    dend_37 { pt3dadd( -134.56, 173.624, -128.444, 0.37 ) }
    dend_37 { pt3dadd( -134.712, 174.338, -128.843, 0.37 ) }
    dend_37 { pt3dadd( -134.957, 175.658, -129.443, 0.37 ) }
    dend_37 { pt3dadd( -135.132, 176.943, -129.859, 0.37 ) }
    dend_37 { pt3dadd( -135.215, 177.996, -130.144, 0.66 ) }
    dend_37 { pt3dadd( -135.245, 178.785, -130.341, 1.33 ) }
    dend_37 { pt3dadd( -135.275, 180.43, -130.693, 0.52 ) }
    dend_37 { pt3dadd( -135.334, 181.865, -131.028, 0.52 ) }
    dend_37 { pt3dadd( -135.406, 182.9, -131.281, 0.37 ) }
    dend_37 { pt3dadd( -135.459, 183.966, -131.509, 0.37 ) }
    dend_37 { pt3dadd( -135.455, 184.863, -131.673, 0.37 ) }
    dend_37 { pt3dadd( -135.388, 186.59, -131.934, 2.65 ) }
    dend_37 { pt3dadd( -135.368, 186.91, -131.973, 3.32 ) }
    dend_37 { pt3dadd( -135.352, 187.364, -132.062, 3.32 ) }
    dend_37 { pt3dadd( -135.464, 189.984, -132.734, 0.44 ) }
    dend_37 { pt3dadd( -135.61, 191.533, -133.192, 0.44 ) }
    dend_37 { pt3dadd( -135.688, 192.271, -133.435, 0.59 ) }
    dend_37 { pt3dadd( -135.751, 192.914, -133.671, 0.59 ) }
    dend_37 { pt3dadd( -136.081, 196.087, -134.946, 0.29 ) }
    dend_37 { pt3dadd( -136.23, 197.37, -135.525, 0.29 ) }
    dend_37 { pt3dadd( -136.393, 198.518, -136.114, 0.29 ) }
    dend_37 { pt3dadd( -136.596, 199.745, -136.746, 0.29 ) }
    dend_37 { pt3dadd( -136.658, 200.239, -136.975, 0.29 ) }
    dend_37 { pt3dadd( -136.771, 201.665, -137.517, 1.11 ) }
    dend_37 { pt3dadd( -136.808, 202.572, -137.756, 1.11 ) }
    dend_37 { pt3dadd( -136.845, 203.281, -137.949, 0.88 ) }
    dend_37 { pt3dadd( -137.071, 204.833, -138.367, 0.52 ) }
    dend_37 { pt3dadd( -137.486, 206.418, -138.752, 0.29 ) }
    dend_37 { pt3dadd( -137.802, 207.347, -138.958, 0.29 ) }
    dend_37 { pt3dadd( -138.016, 207.892, -139.051, 0.66 ) }
    dend_37 { pt3dadd( -138.541, 209.115, -139.22, 0.66 ) }
    dend_37 { pt3dadd( -138.999, 210.062, -139.333, 0.29 ) }
    dend_37 { pt3dadd( -139.436, 210.76, -139.405, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_37 { pt3dadd( -140.412, 211.827, -139.55, 0.88 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 1/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -131.896, 164.688, -122.222, 0.37 ) }
    dend_32 { pt3dadd( -131.619, 165.783, -121.596, 0.37 ) }
    dend_32 { pt3dadd( -131.33, 167.056, -120.849, 0.37 ) }
    dend_32 { pt3dadd( -131.162, 167.927, -120.328, 0.37 ) }
    dend_32 { pt3dadd( -130.886, 169.658, -119.28, 0.37 ) }
    dend_32 { pt3dadd( -130.72, 170.92, -118.533, 0.52 ) }
    dend_32 { pt3dadd( -130.581, 172.199, -117.818, 1.18 ) }
    dend_32 { pt3dadd( -130.517, 173.043, -117.351, 1.18 ) }
    dend_32 { pt3dadd( -130.487, 173.631, -117.083, 1.18 ) }
    dend_32 { pt3dadd( -130.457, 174.006, -116.941, 1.03 ) }
    dend_32 { pt3dadd( -130.349, 174.815, -116.713, 0.44 ) }
    dend_32 { pt3dadd( -130.116, 175.884, -116.396, 0.88 ) }
    dend_32 { pt3dadd( -129.688, 177.5, -115.921, 0.37 ) }
    dend_32 { pt3dadd( -129.281, 178.984, -115.472, 0.29 ) }
    dend_32 { pt3dadd( -129.019, 179.981, -115.144, 0.29 ) }
    dend_32 { pt3dadd( -128.835, 180.735, -114.86, 0.66 ) }
    dend_32 { pt3dadd( -128.418, 182.674, -114.052, 0.37 ) }
    dend_32 { pt3dadd( -128.218, 183.801, -113.555, 0.37 ) }
    dend_32 { pt3dadd( -128.06, 185.011, -113.034, 0.29 ) }
    dend_32 { pt3dadd( -127.985, 186.171, -112.563, 0.29 ) }
    dend_32 { pt3dadd( -128.028, 187.207, -112.198, 0.29 ) }
    dend_32 { pt3dadd( -128.177, 188.54, -111.82, 0.88 ) }
    dend_32 { pt3dadd( -128.257, 189.22, -111.683, 0.88 ) }
    dend_32 { pt3dadd( -128.382, 190.692, -111.466, 0.37 ) }
    dend_32 { pt3dadd( -128.488, 192.194, -111.341, 0.37 ) }
    dend_32 { pt3dadd( -128.569, 194.214, -111.293, 0.37 ) }
    dend_32 { pt3dadd( -128.592, 195.846, -111.285, 0.37 ) }
    dend_32 { pt3dadd( -128.595, 197.389, -111.266, 0.37 ) }
    dend_32 { pt3dadd( -128.585, 198.527, -111.246, 0.37 ) }
    dend_32 { pt3dadd( -128.563, 200.396, -111.195, 0.37 ) }
    dend_32 { pt3dadd( -128.474, 202.533, -111.121, 0.37 ) }
    dend_32 { pt3dadd( -128.362, 204.296, -111.049, 1.47 ) }
    dend_32 { pt3dadd( -128.348, 204.992, -111.016, 1.69 ) }
    dend_32 { pt3dadd( -128.351, 205.719, -110.951, 1.69 ) }
    dend_32 { pt3dadd( -128.366, 207.554, -110.725, 0.44 ) }
    dend_32 { pt3dadd( -128.377, 209.002, -110.512, 0.44 ) }
    dend_32 { pt3dadd( -128.435, 210.358, -110.305, 0.44 ) }
    dend_32 { pt3dadd( -128.564, 212.259, -110.029, 0.44 ) }
    dend_32 { pt3dadd( -128.712, 214.067, -109.76, 0.37 ) }
    dend_32 { pt3dadd( -128.821, 215.419, -109.541, 0.37 ) }
    dend_32 { pt3dadd( -128.881, 216.091, -109.418, 0.37 ) }
    dend_32 { pt3dadd( -129.029, 217.159, -109.196, 0.96 ) }
    dend_32 { pt3dadd( -129.218, 218.209, -108.953, 1.25 ) }
    dend_32 { pt3dadd( -129.301, 218.537, -108.877, 1.25 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 45/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 14.7873, -171.044, 13.4665, 0.44 ) }
    dend_15 { pt3dadd( 13.4357, -171.694, 13.534, 0.44 ) }
    dend_15 { pt3dadd( 12.3653, -172.021, 13.5347, 0.29 ) }
    dend_15 { pt3dadd( 10.9146, -172.363, 13.5112, 0.22 ) }
    dend_15 { pt3dadd( 9.88928, -172.549, 13.4865, 0.59 ) }
    dend_15 { pt3dadd( 9.2888, -172.636, 13.4696, 0.59 ) }
    dend_15 { pt3dadd( 7.56554, -172.886, 13.4211, 0.29 ) }
    dend_15 { pt3dadd( 5.8536, -172.949, 13.3579, 0.29 ) }
    dend_15 { pt3dadd( 5.47808, -172.934, 13.3339, 0.52 ) }
    dend_15 { pt3dadd( 4.855, -172.88, 13.2591, 0.52 ) }
    dend_15 { pt3dadd( 4.34633, -172.816, 13.1951, 0.52 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 56/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 14.7873, -171.044, 13.4665, 0.37 ) }
    dend_12 { pt3dadd( 14.908, -173.274, 13.1666, 0.37 ) }
    dend_12 { pt3dadd( 14.9351, -174.532, 13.0142, 0.81 ) }
    dend_12 { pt3dadd( 14.9168, -175.258, 12.9399, 0.88 ) }
    dend_12 { pt3dadd( 14.8698, -176.02, 12.8759, 0.66 ) }
    dend_12 { pt3dadd( 14.7334, -177.432, 12.7787, 0.37 ) }
    dend_12 { pt3dadd( 14.6735, -177.962, 12.7483, 0.37 ) }
    dend_12 { pt3dadd( 14.5499, -178.88, 12.7483, 0.37 ) }
    dend_12 { pt3dadd( 14.4573, -179.992, 12.7483, 0.37 ) }
    dend_12 { pt3dadd( 14.4186, -181.0, 12.7421, 0.74 ) }
    dend_12 { pt3dadd( 14.4067, -181.975, 12.7094, 1.11 ) }
    dend_12 { pt3dadd( 14.3977, -182.825, 12.666, 0.81 ) }
    dend_12 { pt3dadd( 14.425, -184.429, 12.5651, 0.37 ) }
    dend_12 { pt3dadd( 14.4837, -186.284, 12.4185, 0.37 ) }
    dend_12 { pt3dadd( 14.4679, -187.473, 12.3048, 0.37 ) }
    dend_12 { pt3dadd( 14.3832, -188.695, 12.1711, 0.37 ) }
    dend_12 { pt3dadd( 14.2972, -189.405, 12.0821, 0.96 ) }
    dend_12 { pt3dadd( 14.184, -189.97, 12.0049, 0.96 ) }
    dend_12 { pt3dadd( 13.8566, -191.112, 11.8477, 0.44 ) }
    dend_12 { pt3dadd( 13.3879, -192.563, 11.6525, 0.37 ) }
    dend_12 { pt3dadd( 13.1971, -193.368, 11.5298, 0.37 ) }
    dend_12 { pt3dadd( 13.1236, -193.986, 11.4355, 1.11 ) }
    dend_12 { pt3dadd( 13.082, -194.899, 11.2878, 0.88 ) }
    dend_12 { pt3dadd( 13.071, -196.185, 11.0831, 0.66 ) }
    dend_12 { pt3dadd( 13.1131, -197.843, 10.8333, 0.52 ) }
    dend_12 { pt3dadd( 13.1737, -199.305, 10.6247, 0.52 ) }
    dend_12 { pt3dadd( 13.1946, -200.614, 10.4527, 0.52 ) }
    dend_12 { pt3dadd( 13.1596, -202.191, 10.2517, 0.81 ) }
    dend_12 { pt3dadd( 13.1039, -202.971, 10.1536, 0.96 ) }
    dend_12 { pt3dadd( 12.9887, -203.883, 10.0471, 0.96 ) }
    dend_12 { pt3dadd( 12.8167, -204.862, 9.94339, 0.81 ) }
    dend_12 { pt3dadd( 12.5789, -206.055, 9.80028, 0.44 ) }
    dend_12 { pt3dadd( 12.3367, -207.379, 9.59112, 0.29 ) }
    dend_12 { pt3dadd( 12.2323, -208.16, 9.43311, 0.29 ) }
    dend_12 { pt3dadd( 12.1233, -208.973, 9.24779, 0.29 ) }
    dend_12 { pt3dadd( 11.9467, -209.996, 8.99377, 0.29 ) }
    dend_12 { pt3dadd( 11.7041, -211.182, 8.6432, 1.03 ) }
    dend_12 { pt3dadd( 11.629, -211.505, 8.53178, 1.47 ) }
    dend_12 { pt3dadd( 11.2599, -213.181, 7.90505, 0.44 ) }
    dend_12 { pt3dadd( 11.0146, -214.367, 7.43335, 0.37 ) }
    dend_12 { pt3dadd( 10.7558, -215.573, 6.94868, 0.37 ) }
    dend_12 { pt3dadd( 10.45, -216.98, 6.37642, 0.29 ) }
    dend_12 { pt3dadd( 10.1609, -218.335, 5.81881, 0.29 ) }
    dend_12 { pt3dadd( 10.0054, -219.139, 5.47971, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_12 { pt3dadd( 9.77791, -220.467, 4.89913, 0.29 ) }
    dend_12 { pt3dadd( 9.57802, -222.113, 4.16477, 0.66 ) }
    dend_12 { pt3dadd( 9.49741, -223.109, 3.73722, 1.18 ) }
    dend_12 { pt3dadd( 9.43433, -223.986, 3.40596, 1.18 ) }
    dend_12 { pt3dadd( 9.39053, -224.59, 3.19313, 1.18 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 5/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 16.0513, -67.0309, 16.6977, 0.44 ) }
    dend_10 { pt3dadd( 16.0626, -67.2367, 17.6466, 0.44 ) }
    dend_10 { pt3dadd( 16.0242, -67.6884, 19.5572, 1.11 ) }
    dend_10 { pt3dadd( 16.0341, -68.4663, 22.5941, 0.44 ) }
    dend_10 { pt3dadd( 16.2272, -69.9224, 28.1158, 0.88 ) }
    dend_10 { pt3dadd( 16.3448, -70.4145, 29.9104, 1.25 ) }
    dend_10 { pt3dadd( 16.4259, -70.7538, 31.1473, 0.88 ) }
    dend_10 { pt3dadd( 16.5008, -71.0858, 32.4055, 0.74 ) }
    dend_10 { pt3dadd( 16.8568, -72.1898, 36.5773, 0.37 ) }
    dend_10 { pt3dadd( 17.0035, -72.4891, 37.5586, 0.66 ) }
    dend_10 { pt3dadd( 17.1785, -72.8051, 38.3043, 0.66 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 16/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 16.0513, -67.0309, 16.6977, 0.44 ) }
    dend_9 { pt3dadd( 16.2975, -67.1545, 17.6933, 0.44 ) }
    dend_9 { pt3dadd( 18.4294, -68.2244, 26.316, 0.44 ) }
    dend_9 { pt3dadd( 18.7079, -68.3643, 27.4427, 0.37 ) }
    dend_9 { pt3dadd( 18.8826, -68.4519, 28.1492, 0.37 ) }
    dend_9 { pt3dadd( 19.0124, -68.5171, 28.6741, 0.74 ) }
    dend_9 { pt3dadd( 19.1173, -68.5697, 29.0984, 0.74 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 23/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -140.412, 211.827, -139.55, 0.59 ) }
    dend_43 { pt3dadd( -140.943, 212.805, -139.656, 0.59 ) }
    dend_43 { pt3dadd( -141.692, 213.721, -139.824, 0.37 ) }
    dend_43 { pt3dadd( -142.439, 214.443, -140.001, 0.37 ) }
    dend_43 { pt3dadd( -143.253, 215.179, -140.187, 0.37 ) }
    dend_43 { pt3dadd( -144.389, 216.202, -140.435, 0.37 ) }
    dend_43 { pt3dadd( -145.297, 217.023, -140.623, 0.37 ) }
    dend_43 { pt3dadd( -146.374, 217.937, -140.796, 0.37 ) }
    dend_43 { pt3dadd( -147.216, 218.61, -140.933, 0.37 ) }
    dend_43 { pt3dadd( -148.151, 219.349, -141.072, 0.37 ) }
    dend_43 { pt3dadd( -148.751, 219.882, -141.18, 0.37 ) }
    dend_43 { pt3dadd( -149.115, 220.341, -141.26, 1.03 ) }
    dend_43 { pt3dadd( -149.304, 220.665, -141.303, 1.33 ) }
    dend_43 { pt3dadd( -149.696, 221.461, -141.386, 1.11 ) }
    dend_43 { pt3dadd( -150.227, 222.58, -141.499, 0.37 ) }
    dend_43 { pt3dadd( -150.806, 223.811, -141.625, 0.37 ) }
    dend_43 { pt3dadd( -151.529, 225.393, -141.791, 0.29 ) }
    dend_43 { pt3dadd( -152.082, 226.64, -141.924, 0.29 ) }
    dend_43 { pt3dadd( -152.535, 227.692, -142.035, 0.52 ) }
    dend_43 { pt3dadd( -152.972, 228.747, -142.139, 1.55 ) }
    dend_43 { pt3dadd( -153.151, 229.202, -142.174, 1.92 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 44/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -140.412, 211.827, -139.55, 0.52 ) }
    dend_38 { pt3dadd( -140.321, 212.948, -140.559, 0.52 ) }
    dend_38 { pt3dadd( -140.105, 214.006, -141.596, 0.52 ) }
    dend_38 { pt3dadd( -139.843, 214.981, -142.511, 0.52 ) }
    dend_38 { pt3dadd( -139.586, 215.862, -143.278, 1.25 ) }
    dend_38 { pt3dadd( -138.814, 218.526, -145.448, 2.28 ) }
    dend_38 { pt3dadd( -138.651, 219.135, -145.93, 2.28 ) }
    dend_38 { pt3dadd( -138.062, 221.267, -147.706, 0.29 ) }
    dend_38 { pt3dadd( -137.794, 222.184, -148.504, 0.44 ) }
    dend_38 { pt3dadd( -137.555, 222.977, -149.163, 0.44 ) }
    dend_38 { pt3dadd( -137.327, 223.785, -149.763, 0.44 ) }
    dend_38 { pt3dadd( -137.145, 224.523, -150.175, 0.44 ) }
    dend_38 { pt3dadd( -136.877, 226.055, -151.056, 0.29 ) }
    dend_38 { pt3dadd( -136.844, 226.864, -151.513, 1.03 ) }
    dend_38 { pt3dadd( -136.865, 227.605, -151.926, 1.55 ) }
    dend_38 { pt3dadd( -136.9, 228.761, -152.55, 0.88 ) }
    dend_38 { pt3dadd( -136.888, 230.103, -153.219, 0.52 ) }
    dend_38 { pt3dadd( -136.841, 231.295, -153.742, 0.52 ) }
    dend_38 { pt3dadd( -136.846, 232.268, -154.097, 0.52 ) }
    dend_38 { pt3dadd( -136.887, 233.734, -154.577, 0.52 ) }
    dend_38 { pt3dadd( -136.896, 234.717, -154.839, 0.52 ) }
    dend_38 { pt3dadd( -136.897, 235.675, -155.057, 0.52 ) }
    dend_38 { pt3dadd( -136.862, 236.606, -155.238, 0.52 ) }
    dend_38 { pt3dadd( -136.706, 238.267, -155.492, 0.52 ) }
    dend_38 { pt3dadd( -136.487, 239.967, -155.736, 0.52 ) }
    dend_38 { pt3dadd( -136.308, 241.566, -155.937, 2.21 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 70/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -129.301, 218.537, -108.877, 0.29 ) }
    dend_36 { pt3dadd( -130.595, 220.448, -108.691, 0.29 ) }
    dend_36 { pt3dadd( -131.225, 221.377, -108.601, 0.29 ) }
    dend_36 { pt3dadd( -131.685, 222.057, -108.536, 0.29 ) }
    dend_36 { pt3dadd( -132.031, 222.567, -108.486, 0.74 ) }
    dend_36 { pt3dadd( -132.315, 222.987, -108.446, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 76/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -129.301, 218.537, -108.877, 0.29 ) }
    dend_33 { pt3dadd( -129.512, 219.55, -108.597, 0.29 ) }
    dend_33 { pt3dadd( -129.62, 220.103, -108.457, 0.29 ) }
    dend_33 { pt3dadd( -129.746, 221.548, -108.137, 0.29 ) }
    dend_33 { pt3dadd( -129.75, 222.083, -108.032, 0.74 ) }
    dend_33 { pt3dadd( -129.766, 222.645, -107.935, 0.74 ) }
    dend_33 { pt3dadd( -129.841, 223.923, -107.743, 0.37 ) }
    dend_33 { pt3dadd( -129.893, 224.823, -107.642, 0.29 ) }
    dend_33 { pt3dadd( -129.921, 226.24, -107.524, 0.37 ) }
    dend_33 { pt3dadd( -129.909, 227.217, -107.476, 0.37 ) }
    dend_33 { pt3dadd( -129.912, 228.961, -107.365, 0.29 ) }
    dend_33 { pt3dadd( -129.948, 230.123, -107.267, 0.29 ) }
    dend_33 { pt3dadd( -130.065, 231.448, -107.121, 0.29 ) }
    dend_33 { pt3dadd( -130.32, 232.753, -106.945, 0.29 ) }
    dend_33 { pt3dadd( -130.578, 233.654, -106.803, 0.29 ) }
    dend_33 { pt3dadd( -130.95, 234.826, -106.56, 0.29 ) }
    dend_33 { pt3dadd( -131.223, 235.716, -106.322, 0.29 ) }
    dend_33 { pt3dadd( -131.503, 236.647, -106.029, 0.29 ) }
    dend_33 { pt3dadd( -131.715, 237.354, -105.757, 0.29 ) }
    dend_33 { pt3dadd( -131.967, 238.31, -105.368, 1.03 ) }
    dend_33 { pt3dadd( -132.101, 239.107, -105.049, 1.33 ) }
    dend_33 { pt3dadd( -132.142, 239.865, -104.769, 1.33 ) }
    dend_33 { pt3dadd( -132.135, 241.287, -104.249, 0.29 ) }
    dend_33 { pt3dadd( -132.129, 242.6, -103.749, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_33 { pt3dadd( -132.19, 243.81, -103.253, 0.29 ) }
    dend_33 { pt3dadd( -132.295, 244.675, -102.862, 0.29 ) }
    dend_33 { pt3dadd( -132.515, 245.755, -102.336, 0.29 ) }
    dend_33 { pt3dadd( -132.658, 246.303, -102.041, 0.29 ) }
    dend_33 { pt3dadd( -133.012, 247.461, -101.365, 0.29 ) }
    dend_33 { pt3dadd( -133.379, 248.568, -100.707, 0.74 ) }
    dend_33 { pt3dadd( -133.647, 249.319, -100.213, 0.88 ) }
    dend_33 { pt3dadd( -134.03, 250.409, -99.4862, 0.44 ) }
    dend_33 { pt3dadd( -134.229, 251.039, -99.0739, 0.44 ) }
    dend_33 { pt3dadd( -134.455, 252.007, -98.4932, 0.96 ) }
    dend_33 { pt3dadd( -134.597, 252.81, -98.0883, 1.25 ) }
    dend_33 { pt3dadd( -134.898, 254.576, -97.3727, 0.29 ) }
    dend_33 { pt3dadd( -135.08, 255.534, -97.084, 0.37 ) }
    dend_33 { pt3dadd( -135.207, 256.154, -96.9118, 0.37 ) }
    dend_33 { pt3dadd( -135.446, 257.23, -96.5315, 0.37 ) }
    dend_33 { pt3dadd( -135.735, 258.489, -96.099, 0.37 ) }
    dend_33 { pt3dadd( -135.898, 259.244, -95.8485, 0.37 ) }
    dend_33 { pt3dadd( -136.094, 260.101, -95.5844, 0.37 ) }
    dend_33 { pt3dadd( -136.692, 262.227, -94.7662, 1.33 ) }
    dend_33 { pt3dadd( -137.182, 263.904, -93.9165, 2.06 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 9.39053, -224.59, 3.19313, 0.29 ) }
    dend_14 { pt3dadd( 8.33021, -225.712, 3.72351, 0.29 ) }
    dend_14 { pt3dadd( 7.72389, -226.547, 4.14301, 0.29 ) }
    dend_14 { pt3dadd( 7.43638, -227.105, 4.37725, 0.74 ) }
    dend_14 { pt3dadd( 7.09257, -227.849, 4.67015, 0.29 ) }
    dend_14 { pt3dadd( 6.82415, -228.454, 4.8629, 0.29 ) }
    dend_14 { pt3dadd( 6.17007, -229.927, 5.33257, 0.59 ) }
    dend_14 { pt3dadd( 6.02789, -230.371, 5.46213, 0.74 ) }
    dend_14 { pt3dadd( 5.57378, -232.041, 5.9658, 0.37 ) }
    dend_14 { pt3dadd( 5.31532, -232.913, 6.24049, 0.96 ) }
    dend_14 { pt3dadd( 5.00302, -233.786, 6.513, 0.81 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 31/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 9.39053, -224.59, 3.19313, 0.37 ) }
    dend_13 { pt3dadd( 10.5108, -224.809, 3.18569, 0.37 ) }
    dend_13 { pt3dadd( 11.2864, -225.054, 3.20204, 0.37 ) }
    dend_13 { pt3dadd( 12.1078, -225.376, 3.38912, 0.37 ) }
    dend_13 { pt3dadd( 12.7291, -225.618, 3.74298, 0.29 ) }
    dend_13 { pt3dadd( 13.4934, -225.861, 4.35514, 0.29 ) }
    dend_13 { pt3dadd( 14.2132, -226.089, 4.93168, 0.52 ) }
    dend_13 { pt3dadd( 14.5961, -226.214, 5.35091, 0.52 ) }
    dend_13 { pt3dadd( 15.6922, -226.64, 6.92107, 1.11 ) }
    dend_13 { pt3dadd( 16.6197, -227.059, 8.65418, 0.59 ) }
    dend_13 { pt3dadd( 16.8886, -227.16, 9.33614, 0.59 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 42/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -153.151, 229.202, -142.174, 0.37 ) }
    dend_45 { pt3dadd( -153.93, 230.636, -141.822, 0.37 ) }
    dend_45 { pt3dadd( -154.641, 231.944, -141.501, 0.37 ) }
    dend_45 { pt3dadd( -155.167, 232.913, -141.263, 0.37 ) }
    dend_45 { pt3dadd( -156.063, 234.562, -140.859, 1.18 ) }
    dend_45 { pt3dadd( -156.49, 235.349, -140.666, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 48/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -153.151, 229.202, -142.174, 0.29 ) }
    dend_44 { pt3dadd( -153.956, 229.396, -143.418, 0.29 ) }
    dend_44 { pt3dadd( -154.594, 229.57, -144.362, 0.52 ) }
    dend_44 { pt3dadd( -155.619, 229.821, -145.731, 1.03 ) }
    dend_44 { pt3dadd( -156.187, 229.959, -146.428, 1.03 ) }
    dend_44 { pt3dadd( -156.72, 230.103, -147.052, 0.88 ) }
    dend_44 { pt3dadd( -157.482, 230.366, -147.916, 0.81 ) }
    dend_44 { pt3dadd( -157.937, 230.583, -148.462, 0.29 ) }
    dend_44 { pt3dadd( -158.467, 230.878, -149.049, 0.29 ) }
    dend_44 { pt3dadd( -159.006, 231.169, -149.563, 0.29 ) }
    dend_44 { pt3dadd( -159.276, 231.267, -149.89, 0.52 ) }
    dend_44 { pt3dadd( -159.864, 231.453, -150.717, 0.52 ) }
    dend_44 { pt3dadd( -160.568, 231.648, -151.767, 1.18 ) }
    dend_44 { pt3dadd( -160.823, 231.707, -152.144, 1.47 ) }
    dend_44 { pt3dadd( -161.195, 231.797, -152.674, 1.47 ) }
    dend_44 { pt3dadd( -162.979, 232.211, -154.995, 0.52 ) }
    dend_44 { pt3dadd( -163.59, 232.322, -155.683, 0.29 ) }
    dend_44 { pt3dadd( -164.365, 232.452, -156.446, 0.29 ) }
    dend_44 { pt3dadd( -165.579, 232.731, -157.446, 0.29 ) }
    dend_44 { pt3dadd( -166.633, 233.008, -158.192, 0.29 ) }
    dend_44 { pt3dadd( -167.411, 233.203, -158.656, 0.29 ) }
    dend_44 { pt3dadd( -168.667, 233.476, -159.247, 0.29 ) }
    dend_44 { pt3dadd( -169.203, 233.576, -159.497, 0.29 ) }
    dend_44 { pt3dadd( -170.102, 233.762, -159.903, 0.88 ) }
    dend_44 { pt3dadd( -170.58, 233.875, -160.109, 1.25 ) }
    dend_44 { pt3dadd( -172.045, 234.211, -160.781, 0.37 ) }
    dend_44 { pt3dadd( -172.71, 234.345, -161.211, 0.29 ) }
    dend_44 { pt3dadd( -173.26, 234.449, -161.679, 0.74 ) }
    dend_44 { pt3dadd( -173.657, 234.515, -162.037, 0.74 ) }
    dend_44 { pt3dadd( -174.429, 234.64, -162.753, 0.37 ) }
    dend_44 { pt3dadd( -175.144, 234.754, -163.45, 0.37 ) }
    dend_44 { pt3dadd( -176.693, 235.002, -165.065, 0.37 ) }
    dend_44 { pt3dadd( -177.189, 235.058, -165.569, 0.37 ) }
    dend_44 { pt3dadd( -178.2, 235.13, -166.521, 0.29 ) }
    dend_44 { pt3dadd( -178.705, 235.141, -166.943, 0.29 ) }
    dend_44 { pt3dadd( -179.912, 235.079, -167.757, 0.66 ) }
    dend_44 { pt3dadd( -181.013, 234.979, -168.371, 0.74 ) }
    dend_44 { pt3dadd( -182.15, 234.867, -168.89, 0.52 ) }
    dend_44 { pt3dadd( -182.962, 234.771, -169.25, 0.96 ) }
    dend_44 { pt3dadd( -183.71, 234.675, -169.593, 0.96 ) }
    dend_44 { pt3dadd( -185.06, 234.518, -170.16, 0.29 ) }
    dend_44 { pt3dadd( -186.079, 234.439, -170.517, 0.96 ) }
    dend_44 { pt3dadd( -186.679, 234.416, -170.717, 1.11 ) }
    dend_44 { pt3dadd( -187.655, 234.499, -171.081, 0.44 ) }
    dend_44 { pt3dadd( -188.368, 234.688, -171.36, 0.44 ) }
    dend_44 { pt3dadd( -189.21, 235.105, -171.711, 0.44 ) }
    dend_44 { pt3dadd( -189.92, 235.58, -172.004, 0.44 ) }
    dend_44 { pt3dadd( -190.459, 235.955, -172.209, 0.44 ) }
    dend_44 { pt3dadd( -191.356, 236.503, -172.557, 0.44 ) }
    dend_44 { pt3dadd( -191.999, 236.819, -172.835, 0.44 ) }
    dend_44 { pt3dadd( -193.146, 237.293, -173.338, 0.44 ) }
    dend_44 { pt3dadd( -193.821, 237.552, -173.645, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_44 { pt3dadd( -194.654, 237.835, -174.034, 0.81 ) }
    dend_44 { pt3dadd( -195.806, 238.179, -174.573, 0.52 ) }
    dend_44 { pt3dadd( -196.989, 238.522, -175.131, 0.37 ) }
    dend_44 { pt3dadd( -197.555, 238.706, -175.425, 0.37 ) }
    dend_44 { pt3dadd( -198.165, 238.929, -175.778, 1.03 ) }
    dend_44 { pt3dadd( -199.018, 239.293, -176.365, 1.47 ) }
    dend_44 { pt3dadd( -199.497, 239.543, -176.749, 1.47 ) }
    dend_44 { pt3dadd( -200.04, 239.914, -177.255, 0.44 ) }
    dend_44 { pt3dadd( -201.094, 240.611, -178.384, 0.29 ) }
    dend_44 { pt3dadd( -201.965, 241.065, -179.429, 0.29 ) }
    dend_44 { pt3dadd( -202.985, 241.442, -180.824, 0.29 ) }
    dend_44 { pt3dadd( -203.68, 241.641, -181.858, 0.52 ) }
    dend_44 { pt3dadd( -204.535, 241.875, -183.128, 0.74 ) }
    dend_44 { pt3dadd( -205.582, 242.228, -184.677, 0.59 ) }
    dend_44 { pt3dadd( -206.196, 242.519, -185.628, 0.59 ) }
    dend_44 { pt3dadd( -207.156, 243.06, -187.128, 0.37 ) }
    dend_44 { pt3dadd( -207.857, 243.426, -188.096, 0.37 ) }
    dend_44 { pt3dadd( -208.652, 243.774, -189.027, 0.37 ) }
    dend_44 { pt3dadd( -209.585, 244.088, -189.928, 0.37 ) }
    dend_44 { pt3dadd( -210.814, 244.458, -190.889, 0.59 ) }
    dend_44 { pt3dadd( -211.633, 244.569, -191.4, 0.59 ) }
    dend_44 { pt3dadd( -212.925, 244.421, -191.969, 2.06 ) }
    dend_44 { pt3dadd( -213.436, 244.237, -192.143, 2.87 ) }
    dend_44 { pt3dadd( -214.519, 243.615, -192.434, 2.5 ) }
    dend_44 { pt3dadd( -215.41, 242.977, -192.591, 1.55 ) }
    dend_44 { pt3dadd( -216.353, 242.208, -192.677, 0.37 ) }
    dend_44 { pt3dadd( -216.847, 241.75, -192.71, 0.37 ) }
    dend_44 { pt3dadd( -217.676, 240.903, -192.753, 0.37 ) }
    dend_44 { pt3dadd( -218.556, 240.023, -192.802, 0.37 ) }
    dend_44 { pt3dadd( -219.649, 238.88, -192.869, 0.37 ) }
    dend_44 { pt3dadd( -219.925, 238.579, -192.896, 0.66 ) }
    dend_44 { pt3dadd( -220.452, 238.005, -192.962, 0.44 ) }
    dend_44 { pt3dadd( -221.037, 237.376, -193.051, 0.37 ) }
    dend_44 { pt3dadd( -221.866, 236.551, -193.135, 0.37 ) }
    dend_44 { pt3dadd( -222.595, 235.915, -193.192, 0.37 ) }
    dend_44 { pt3dadd( -223.505, 235.176, -193.237, 0.37 ) }
    dend_44 { pt3dadd( -224.194, 234.673, -193.252, 0.59 ) }
    dend_44 { pt3dadd( -224.865, 234.237, -193.26, 0.59 ) }
    dend_44 { pt3dadd( -226.0, 233.566, -193.256, 0.37 ) }
    dend_44 { pt3dadd( -226.937, 233.055, -193.229, 0.66 ) }
    dend_44 { pt3dadd( -227.658, 232.746, -193.186, 0.66 ) }
    dend_44 { pt3dadd( -228.253, 232.545, -193.111, 0.66 ) }
    dend_44 { pt3dadd( -228.857, 232.387, -193.012, 0.37 ) }
    dend_44 { pt3dadd( -229.446, 232.285, -192.906, 0.74 ) }
    dend_44 { pt3dadd( -229.963, 232.24, -192.813, 0.74 ) }
    dend_44 { pt3dadd( -231.055, 232.215, -192.568, 0.52 ) }
    dend_44 { pt3dadd( -232.58, 232.254, -192.233, 0.29 ) }
    dend_44 { pt3dadd( -233.561, 232.245, -192.027, 0.29 ) }
    dend_44 { pt3dadd( -234.368, 232.174, -191.873, 1.47 ) }
    dend_44 { pt3dadd( -234.951, 232.065, -191.784, 1.99 ) }
    dend_44 { pt3dadd( -235.579, 231.854, -191.714, 1.99 ) }
    dend_44 { pt3dadd( -237.164, 231.143, -191.619, 0.29 ) }
    dend_44 { pt3dadd( -238.477, 230.478, -191.62, 0.29 ) }
    dend_44 { pt3dadd( -239.663, 229.8, -191.648, 0.29 ) }
    dend_44 { pt3dadd( -240.672, 229.208, -191.69, 0.29 ) }
    dend_44 { pt3dadd( -242.095, 228.406, -191.787, 0.29 ) }
    dend_44 { pt3dadd( -242.901, 227.959, -191.883, 0.44 ) }
    dend_44 { pt3dadd( -244.054, 227.315, -192.113, 0.44 ) }
    dend_44 { pt3dadd( -245.112, 226.804, -192.386, 0.44 ) }
    dend_44 { pt3dadd( -246.317, 226.311, -192.731, 0.44 ) }
    dend_44 { pt3dadd( -247.451, 225.911, -193.064, 0.44 ) }
    dend_44 { pt3dadd( -248.675, 225.494, -193.424, 0.44 ) }
    dend_44 { pt3dadd( -250.175, 224.949, -193.842, 0.44 ) }
    dend_44 { pt3dadd( -251.309, 224.524, -194.141, 0.44 ) }
    dend_44 { pt3dadd( -252.796, 223.947, -194.583, 0.44 ) }
    dend_44 { pt3dadd( -253.77, 223.502, -194.908, 1.62 ) }
    dend_44 { pt3dadd( -254.311, 223.242, -195.09, 2.5 ) }
    dend_44 { pt3dadd( -254.704, 223.065, -195.215, 2.5 ) }
    dend_44 { pt3dadd( -256.816, 222.075, -195.899, 0.37 ) }
    dend_44 { pt3dadd( -257.825, 221.514, -196.257, 0.37 ) }
    dend_44 { pt3dadd( -258.849, 220.878, -196.665, 0.37 ) }
    dend_44 { pt3dadd( -259.707, 220.32, -196.972, 0.81 ) }
    dend_44 { pt3dadd( -260.522, 219.837, -197.2, 0.37 ) }
    dend_44 { pt3dadd( -261.18, 219.522, -197.316, 0.52 ) }
    dend_44 { pt3dadd( -261.683, 219.367, -197.317, 0.81 ) }
    dend_44 { pt3dadd( -262.358, 219.236, -197.255, 0.81 ) }
    dend_44 { pt3dadd( -263.759, 219.053, -197.134, 0.37 ) }
    dend_44 { pt3dadd( -264.949, 218.853, -197.057, 0.37 ) }
    dend_44 { pt3dadd( -266.17, 218.58, -197.001, 0.37 ) }
    dend_44 { pt3dadd( -267.095, 218.34, -196.938, 0.37 ) }
    dend_44 { pt3dadd( -268.199, 218.02, -196.848, 0.37 ) }
    dend_44 { pt3dadd( -270.171, 217.343, -196.676, 0.29 ) }
    dend_44 { pt3dadd( -271.268, 216.827, -196.598, 0.29 ) }
    dend_44 { pt3dadd( -272.26, 216.154, -196.511, 0.29 ) }
    dend_44 { pt3dadd( -273.216, 215.248, -196.374, 0.88 ) }
    dend_44 { pt3dadd( -273.698, 214.661, -196.254, 0.88 ) }
    dend_44 { pt3dadd( -274.295, 213.778, -196.026, 0.29 ) }
    dend_44 { pt3dadd( -275.074, 212.449, -195.628, 0.29 ) }
    dend_44 { pt3dadd( -275.911, 210.988, -195.183, 0.37 ) }
    dend_44 { pt3dadd( -276.964, 209.125, -194.63, 0.66 ) }
    dend_44 { pt3dadd( -277.648, 207.944, -194.322, 0.66 ) }
    dend_44 { pt3dadd( -278.107, 207.185, -194.122, 0.22 ) }
    dend_44 { pt3dadd( -278.441, 206.646, -193.977, 0.59 ) }
    dend_44 { pt3dadd( -278.835, 206.065, -193.82, 0.81 ) }
    dend_44 { pt3dadd( -279.089, 205.723, -193.736, 0.81 ) }
    dend_44 { pt3dadd( -280.201, 204.317, -193.377, 0.29 ) }
    dend_44 { pt3dadd( -280.481, 203.922, -193.274, 0.29 ) }
    dend_44 { pt3dadd( -281.039, 202.98, -193.006, 0.52 ) }
    dend_44 { pt3dadd( -281.33, 202.4, -192.793, 0.52 ) }
    dend_44 { pt3dadd( -281.72, 201.585, -192.455, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_44 { pt3dadd( -282.566, 199.923, -191.699, 0.66 ) }
    dend_44 { pt3dadd( -283.169, 198.883, -191.184, 0.52 ) }
    dend_44 { pt3dadd( -283.637, 198.214, -190.791, 0.96 ) }
    dend_44 { pt3dadd( -284.649, 197.055, -190.0, 0.66 ) }
    dend_44 { pt3dadd( -285.395, 196.333, -189.45, 0.29 ) }
    dend_44 { pt3dadd( -286.531, 195.448, -188.714, 0.29 ) }
    dend_44 { pt3dadd( -287.405, 194.898, -188.243, 0.29 ) }
    dend_44 { pt3dadd( -289.134, 193.935, -187.382, 0.29 ) }
    dend_44 { pt3dadd( -289.755, 193.604, -187.098, 1.47 ) }
    dend_44 { pt3dadd( -290.181, 193.377, -186.922, 1.77 ) }
    dend_44 { pt3dadd( -291.684, 192.603, -186.28, 0.37 ) }
    dend_44 { pt3dadd( -293.196, 191.849, -185.666, 0.37 ) }
    dend_44 { pt3dadd( -294.017, 191.429, -185.338, 0.66 ) }
    dend_44 { pt3dadd( -294.862, 190.986, -184.98, 0.66 ) }
    dend_44 { pt3dadd( -295.532, 190.628, -184.637, 0.59 ) }
    dend_44 { pt3dadd( -297.031, 189.899, -183.76, 0.37 ) }
    dend_44 { pt3dadd( -298.06, 189.465, -183.082, 0.37 ) }
    dend_44 { pt3dadd( -299.156, 189.04, -182.305, 0.37 ) }
    dend_44 { pt3dadd( -300.379, 188.569, -181.355, 0.96 ) }
    dend_44 { pt3dadd( -301.291, 188.183, -180.56, 0.22 ) }
    dend_44 { pt3dadd( -302.247, 187.727, -179.665, 0.22 ) }
    dend_44 { pt3dadd( -302.717, 187.461, -179.204, 0.22 ) }
    dend_44 { pt3dadd( -303.421, 187.049, -178.535, 0.52 ) }
    dend_44 { pt3dadd( -304.574, 186.329, -177.576, 0.74 ) }
    dend_44 { pt3dadd( -305.374, 185.845, -177.034, 0.66 ) }
    dend_44 { pt3dadd( -306.558, 185.146, -176.32, 0.29 ) }
    dend_44 { pt3dadd( -307.425, 184.631, -175.854, 0.96 ) }
    dend_44 { pt3dadd( -307.81, 184.431, -175.676, 1.33 ) }
    dend_44 { pt3dadd( -309.444, 183.776, -175.034, 0.37 ) }
    dend_44 { pt3dadd( -310.924, 183.221, -174.485, 0.37 ) }
    dend_44 { pt3dadd( -311.683, 182.93, -174.191, 0.37 ) }
    dend_44 { pt3dadd( -313.226, 182.358, -173.517, 0.37 ) }
    dend_44 { pt3dadd( -314.261, 181.974, -173.011, 0.37 ) }
    dend_44 { pt3dadd( -316.215, 181.17, -171.933, 0.37 ) }
    dend_44 { pt3dadd( -317.482, 180.564, -171.153, 0.37 ) }
    dend_44 { pt3dadd( -318.435, 180.008, -170.438, 0.37 ) }
    dend_44 { pt3dadd( -319.51, 179.331, -169.455, 1.11 ) }
    dend_44 { pt3dadd( -319.968, 179.045, -168.978, 1.11 ) }
    dend_44 { pt3dadd( -320.706, 178.508, -168.136, 0.44 ) }
    dend_44 { pt3dadd( -321.253, 178.112, -167.504, 0.29 ) }
    dend_44 { pt3dadd( -322.432, 177.385, -166.263, 0.29 ) }
    dend_44 { pt3dadd( -323.504, 176.689, -165.087, 0.81 ) }
    dend_44 { pt3dadd( -324.694, 175.797, -163.738, 0.52 ) }
    dend_44 { pt3dadd( -325.676, 175.0, -162.658, 0.52 ) }
    dend_44 { pt3dadd( -326.45, 174.3, -161.754, 0.52 ) }
    dend_44 { pt3dadd( -326.859, 173.902, -161.207, 0.81 ) }
    dend_44 { pt3dadd( -327.812, 172.893, -159.859, 0.44 ) }
    dend_44 { pt3dadd( -328.34, 172.322, -159.06, 0.37 ) }
    dend_44 { pt3dadd( -328.968, 171.724, -158.041, 0.37 ) }
    dend_44 { pt3dadd( -330.118, 170.768, -156.255, 0.37 ) }
    dend_44 { pt3dadd( -331.4, 169.651, -154.294, 1.55 ) }
    dend_44 { pt3dadd( -331.908, 169.204, -153.533, 2.36 ) }
    dend_44 { pt3dadd( -332.178, 168.97, -153.14, 2.58 ) }
    dend_44 { pt3dadd( -333.508, 167.627, -151.05, 0.52 ) }
    dend_44 { pt3dadd( -333.856, 167.108, -150.365, 0.74 ) }
    dend_44 { pt3dadd( -334.226, 166.224, -149.49, 0.74 ) }
    dend_44 { pt3dadd( -334.506, 165.242, -148.591, 0.44 ) }
    dend_44 { pt3dadd( -334.756, 164.275, -147.59, 0.37 ) }
    dend_44 { pt3dadd( -334.952, 163.565, -146.806, 0.44 ) }
    dend_44 { pt3dadd( -335.204, 162.579, -145.718, 0.44 ) }
    dend_44 { pt3dadd( -335.442, 161.852, -144.764, 0.44 ) }
    dend_44 { pt3dadd( -335.901, 160.723, -143.101, 0.81 ) }
    dend_44 { pt3dadd( -336.233, 160.027, -142.059, 1.11 ) }
    dend_44 { pt3dadd( -336.626, 159.3, -141.117, 0.37 ) }
    dend_44 { pt3dadd( -337.004, 158.531, -140.299, 0.37 ) }
    dend_44 { pt3dadd( -337.861, 156.309, -138.406, 1.4 ) }
    dend_44 { pt3dadd( -338.098, 155.577, -137.845, 1.99 ) }
    dend_44 { pt3dadd( -338.329, 154.814, -137.331, 1.99 ) }
    dend_44 { pt3dadd( -338.966, 152.541, -135.928, 0.52 ) }
    dend_44 { pt3dadd( -339.376, 150.946, -135.001, 0.52 ) }
    dend_44 { pt3dadd( -339.7, 149.673, -134.345, 0.52 ) }
    dend_44 { pt3dadd( -340.222, 147.609, -133.519, 0.52 ) }
    dend_44 { pt3dadd( -340.486, 146.429, -133.06, 0.74 ) }
    dend_44 { pt3dadd( -340.71, 145.17, -132.519, 0.74 ) }
    dend_44 { pt3dadd( -340.85, 144.345, -132.123, 0.52 ) }
    dend_44 { pt3dadd( -341.054, 143.38, -131.666, 0.52 ) }
    dend_44 { pt3dadd( -341.434, 141.953, -131.005, 0.44 ) }
    dend_44 { pt3dadd( -341.956, 140.289, -130.266, 0.44 ) }
    dend_44 { pt3dadd( -342.39, 139.087, -129.673, 0.52 ) }
    dend_44 { pt3dadd( -343.0, 137.675, -128.898, 0.44 ) }
    dend_44 { pt3dadd( -343.528, 136.562, -128.23, 0.44 ) }
    dend_44 { pt3dadd( -343.935, 135.716, -127.676, 2.36 ) }
    dend_44 { pt3dadd( -344.369, 134.839, -127.072, 3.46 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 83/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -136.308, 241.566, -155.937, 0.37 ) }
    dend_42 { pt3dadd( -137.226, 243.908, -156.2, 0.37 ) }
    dend_42 { pt3dadd( -137.746, 245.21, -156.336, 0.37 ) }
    dend_42 { pt3dadd( -138.116, 246.176, -156.428, 0.59 ) }
    dend_42 { pt3dadd( -138.508, 247.327, -156.526, 0.44 ) }
    dend_42 { pt3dadd( -138.736, 248.056, -156.586, 0.37 ) }
    dend_42 { pt3dadd( -138.954, 248.82, -156.653, 0.37 ) }
    dend_42 { pt3dadd( -139.268, 250.228, -156.794, 0.29 ) }
    dend_42 { pt3dadd( -139.464, 251.202, -156.89, 0.29 ) }
    dend_42 { pt3dadd( -139.627, 252.185, -156.975, 0.29 ) }
    dend_42 { pt3dadd( -139.811, 253.47, -157.055, 0.88 ) }
    dend_42 { pt3dadd( -139.894, 254.144, -157.105, 1.11 ) }
    dend_42 { pt3dadd( -139.937, 254.691, -157.155, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 96/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -136.308, 241.566, -155.937, 0.29 ) }
    dend_39 { pt3dadd( -135.517, 243.536, -156.557, 0.29 ) }
    dend_39 { pt3dadd( -135.133, 244.585, -156.855, 0.29 ) }
    dend_39 { pt3dadd( -134.805, 245.465, -157.203, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_39 { pt3dadd( -134.633, 245.94, -157.408, 0.44 ) }
    dend_39 { pt3dadd( -134.316, 246.879, -157.8, 0.37 ) }
    dend_39 { pt3dadd( -134.017, 247.839, -158.176, 0.37 ) }
    dend_39 { pt3dadd( -133.686, 248.966, -158.587, 0.37 ) }
    dend_39 { pt3dadd( -133.155, 250.882, -159.326, 0.81 ) }
    dend_39 { pt3dadd( -132.97, 251.644, -159.623, 0.59 ) }
    dend_39 { pt3dadd( -132.69, 252.99, -160.132, 1.33 ) }
    dend_39 { pt3dadd( -132.527, 253.972, -160.504, 1.92 ) }
    dend_39 { pt3dadd( -132.454, 254.395, -160.666, 1.92 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 9/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -137.182, 263.904, -93.9165, 0.52 ) }
    dend_35 { pt3dadd( -137.768, 266.378, -93.0771, 0.52 ) }
    dend_35 { pt3dadd( -138.158, 267.763, -92.6009, 0.52 ) }
    dend_35 { pt3dadd( -138.682, 269.364, -92.0313, 0.52 ) }
    dend_35 { pt3dadd( -139.036, 270.411, -91.6588, 0.52 ) }
    dend_35 { pt3dadd( -139.464, 271.726, -91.198, 0.52 ) }
    dend_35 { pt3dadd( -139.709, 272.544, -90.9159, 0.66 ) }
    dend_35 { pt3dadd( -139.963, 273.354, -90.6209, 0.29 ) }
    dend_35 { pt3dadd( -140.133, 273.91, -90.4382, 0.29 ) }
    dend_35 { pt3dadd( -140.53, 275.39, -90.0473, 0.29 ) }
    dend_35 { pt3dadd( -140.803, 276.415, -89.7658, 0.29 ) }
    dend_35 { pt3dadd( -141.045, 277.496, -89.5061, 0.29 ) }
    dend_35 { pt3dadd( -141.266, 278.618, -89.2392, 1.25 ) }
    dend_35 { pt3dadd( -141.387, 279.267, -89.0824, 1.55 ) }
    dend_35 { pt3dadd( -141.612, 280.488, -88.8037, 0.22 ) }
    dend_35 { pt3dadd( -142.007, 281.931, -88.4666, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 25/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -137.182, 263.904, -93.9165, 0.29 ) }
    dend_34 { pt3dadd( -138.01, 265.62, -92.9948, 0.29 ) }
    dend_34 { pt3dadd( -138.457, 266.601, -92.4068, 0.29 ) }
    dend_34 { pt3dadd( -138.904, 267.617, -91.7812, 0.29 ) }
    dend_34 { pt3dadd( -139.434, 268.866, -91.0656, 0.37 ) }
    dend_34 { pt3dadd( -139.754, 269.683, -90.6519, 0.37 ) }
    dend_34 { pt3dadd( -139.996, 270.37, -90.3447, 0.29 ) }
    dend_34 { pt3dadd( -140.358, 271.712, -89.8352, 0.29 ) }
    dend_34 { pt3dadd( -140.591, 272.673, -89.5106, 0.29 ) }
    dend_34 { pt3dadd( -140.898, 274.069, -89.1233, 0.29 ) }
    dend_34 { pt3dadd( -141.198, 275.598, -88.6958, 0.29 ) }
    dend_34 { pt3dadd( -141.405, 276.75, -88.3765, 0.52 ) }
    dend_34 { pt3dadd( -141.541, 277.501, -88.1754, 0.29 ) }
    dend_34 { pt3dadd( -141.811, 279.063, -87.7609, 0.29 ) }
    dend_34 { pt3dadd( -141.988, 280.266, -87.4136, 0.29 ) }
    dend_34 { pt3dadd( -142.18, 281.795, -86.9359, 0.59 ) }
    dend_34 { pt3dadd( -142.322, 282.937, -86.5704, 0.74 ) }
    dend_34 { pt3dadd( -142.458, 284.068, -86.2223, 0.22 ) }
    dend_34 { pt3dadd( -142.538, 284.821, -86.0166, 0.22 ) }
    dend_34 { pt3dadd( -142.648, 286.04, -85.762, 0.22 ) }
    dend_34 { pt3dadd( -142.726, 287.015, -85.5764, 0.22 ) }
    dend_34 { pt3dadd( -142.803, 287.824, -85.4435, 0.74 ) }
    dend_34 { pt3dadd( -142.852, 288.28, -85.3572, 0.74 ) }
    dend_34 { pt3dadd( -142.956, 288.865, -85.2168, 0.29 ) }
    dend_34 { pt3dadd( -143.19, 289.872, -84.9427, 0.59 ) }
    dend_34 { pt3dadd( -143.518, 290.981, -84.5648, 0.29 ) }
    dend_34 { pt3dadd( -143.891, 292.128, -84.1294, 0.29 ) }
    dend_34 { pt3dadd( -144.283, 293.11, -83.709, 0.29 ) }
    dend_34 { pt3dadd( -144.73, 294.034, -83.2703, 0.29 ) }
    dend_34 { pt3dadd( -145.249, 294.94, -82.7561, 0.29 ) }
    dend_34 { pt3dadd( -145.865, 295.92, -82.1242, 0.29 ) }
    dend_34 { pt3dadd( -146.33, 296.637, -81.6102, 0.29 ) }
    dend_34 { pt3dadd( -147.135, 297.909, -80.6233, 0.29 ) }
    dend_34 { pt3dadd( -147.59, 298.668, -80.0175, 0.29 ) }
    dend_34 { pt3dadd( -148.263, 299.83, -79.0657, 1.4 ) }
    dend_34 { pt3dadd( -148.67, 300.524, -78.4677, 1.77 ) }
    dend_34 { pt3dadd( -149.347, 301.838, -77.3345, 0.37 ) }
    dend_34 { pt3dadd( -149.656, 302.526, -76.7157, 0.66 ) }
    dend_34 { pt3dadd( -149.742, 302.868, -76.4325, 0.66 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 64/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -156.49, 235.349, -140.666, 0.29 ) }
    dend_47 { pt3dadd( -156.457, 236.478, -139.134, 0.29 ) }
    dend_47 { pt3dadd( -156.557, 237.103, -138.263, 0.22 ) }
    dend_47 { pt3dadd( -156.79, 237.776, -137.302, 0.22 ) }
    dend_47 { pt3dadd( -157.286, 238.621, -135.989, 0.44 ) }
    dend_47 { pt3dadd( -157.646, 239.108, -135.215, 0.44 ) }
    dend_47 { pt3dadd( -158.18, 239.843, -134.144, 0.44 ) }
    dend_47 { pt3dadd( -158.676, 240.357, -133.414, 0.74 ) }
    dend_47 { pt3dadd( -159.082, 240.775, -132.807, 0.74 ) }
    dend_47 { pt3dadd( -159.72, 241.432, -131.921, 0.44 ) }
    dend_47 { pt3dadd( -160.193, 241.983, -131.212, 0.29 ) }
    dend_47 { pt3dadd( -160.7, 242.734, -130.285, 0.29 ) }
    dend_47 { pt3dadd( -161.071, 243.558, -129.342, 0.29 ) }
    dend_47 { pt3dadd( -161.527, 245.388, -127.295, 0.29 ) }
    dend_47 { pt3dadd( -161.636, 246.371, -126.194, 0.29 ) }
    dend_47 { pt3dadd( -161.628, 247.062, -125.345, 0.29 ) }
    dend_47 { pt3dadd( -161.595, 247.727, -124.523, 0.29 ) }
    dend_47 { pt3dadd( -161.542, 248.555, -123.584, 0.81 ) }
    dend_47 { pt3dadd( -161.48, 249.641, -122.459, 1.47 ) }
    dend_47 { pt3dadd( -161.434, 250.449, -121.73, 1.84 ) }
    dend_47 { pt3dadd( -161.232, 253.384, -119.289, 0.29 ) }
    dend_47 { pt3dadd( -161.18, 254.672, -118.312, 0.29 ) }
    dend_47 { pt3dadd( -161.132, 256.218, -117.102, 0.29 ) }
    dend_47 { pt3dadd( -161.031, 258.308, -115.442, 1.84 ) }
    dend_47 { pt3dadd( -160.924, 259.918, -114.19, 0.37 ) }
    dend_47 { pt3dadd( -160.86, 260.992, -113.358, 0.37 ) }
    dend_47 { pt3dadd( -160.822, 261.793, -112.734, 0.37 ) }
    dend_47 { pt3dadd( -160.759, 264.282, -110.514, 0.66 ) }
    dend_47 { pt3dadd( -160.792, 265.254, -109.423, 0.37 ) }
    dend_47 { pt3dadd( -160.882, 265.727, -108.778, 0.37 ) }
    dend_47 { pt3dadd( -161.122, 266.405, -107.74, 0.59 ) }
    dend_47 { pt3dadd( -161.251, 266.736, -107.27, 0.59 ) }
    dend_47 { pt3dadd( -161.493, 267.314, -106.55, 0.44 ) }
    dend_47 { pt3dadd( -162.576, 269.861, -103.971, 0.44 ) }
    dend_47 { pt3dadd( -163.091, 271.132, -102.787, 0.29 ) }
    dend_47 { pt3dadd( -163.531, 272.336, -101.746, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_47 { pt3dadd( -164.099, 274.05, -100.439, 0.29 ) }
    dend_47 { pt3dadd( -164.349, 274.851, -99.8639, 0.29 ) }
    dend_47 { pt3dadd( -164.665, 275.96, -99.1461, 0.29 ) }
    dend_47 { pt3dadd( -164.992, 277.184, -98.4529, 1.18 ) }
    dend_47 { pt3dadd( -165.108, 277.635, -98.1777, 1.55 ) }
    dend_47 { pt3dadd( -165.543, 278.958, -97.1304, 0.66 ) }
    dend_47 { pt3dadd( -166.06, 280.461, -95.4833, 1.03 ) }
    dend_47 { pt3dadd( -166.206, 280.946, -94.8137, 1.03 ) }
    dend_47 { pt3dadd( -166.47, 281.979, -93.131, 0.29 ) }
    dend_47 { pt3dadd( -166.572, 282.428, -92.3533, 0.29 ) }
    dend_47 { pt3dadd( -166.752, 283.413, -90.6791, 0.66 ) }
    dend_47 { pt3dadd( -166.936, 284.623, -88.4372, 0.37 ) }
    dend_47 { pt3dadd( -167.05, 285.383, -87.0189, 0.37 ) }
    dend_47 { pt3dadd( -167.103, 285.787, -86.2144, 0.37 ) }
    dend_47 { pt3dadd( -167.124, 286.326, -85.1117, 1.47 ) }
    dend_47 { pt3dadd( -167.067, 286.95, -84.0108, 1.69 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 16/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -156.49, 235.349, -140.666, 0.29 ) }
    dend_46 { pt3dadd( -156.339, 238.268, -140.468, 0.29 ) }
    dend_46 { pt3dadd( -156.222, 240.011, -140.238, 0.29 ) }
    dend_46 { pt3dadd( -156.124, 241.671, -139.935, 1.69 ) }
    dend_46 { pt3dadd( -156.003, 244.163, -139.377, 0.29 ) }
    dend_46 { pt3dadd( -155.972, 245.091, -139.132, 0.29 ) }
    dend_46 { pt3dadd( -155.983, 246.35, -138.753, 0.29 ) }
    dend_46 { pt3dadd( -155.995, 247.459, -138.28, 0.29 ) }
    dend_46 { pt3dadd( -156.04, 248.269, -137.91, 0.29 ) }
    dend_46 { pt3dadd( -156.158, 249.383, -137.412, 0.59 ) }
    dend_46 { pt3dadd( -156.387, 250.581, -136.933, 0.29 ) }
    dend_46 { pt3dadd( -156.732, 251.878, -136.445, 0.29 ) }
    dend_46 { pt3dadd( -156.952, 252.515, -136.233, 0.59 ) }
    dend_46 { pt3dadd( -157.291, 253.31, -136.018, 0.59 ) }
    dend_46 { pt3dadd( -157.768, 254.171, -135.78, 0.29 ) }
    dend_46 { pt3dadd( -158.234, 254.864, -135.584, 0.29 ) }
    dend_46 { pt3dadd( -158.789, 255.657, -135.36, 0.88 ) }
    dend_46 { pt3dadd( -159.124, 256.142, -135.22, 1.03 ) }
    dend_46 { pt3dadd( -159.872, 257.169, -134.91, 0.29 ) }
    dend_46 { pt3dadd( -160.673, 258.237, -134.582, 0.29 ) }
    dend_46 { pt3dadd( -161.358, 259.167, -134.359, 0.29 ) }
    dend_46 { pt3dadd( -161.871, 259.922, -134.246, 0.29 ) }
    dend_46 { pt3dadd( -162.436, 260.81, -134.209, 0.29 ) }
    dend_46 { pt3dadd( -163.004, 261.725, -134.286, 0.66 ) }
    dend_46 { pt3dadd( -163.307, 262.222, -134.407, 0.88 ) }
    dend_46 { pt3dadd( -163.843, 263.144, -134.77, 0.29 ) }
    dend_46 { pt3dadd( -164.27, 263.807, -135.132, 0.29 ) }
    dend_46 { pt3dadd( -164.851, 264.659, -135.771, 0.29 ) }
    dend_46 { pt3dadd( -165.387, 265.493, -136.612, 0.29 ) }
    dend_46 { pt3dadd( -165.805, 266.146, -137.404, 0.29 ) }
    dend_46 { pt3dadd( -166.275, 266.848, -138.369, 0.59 ) }
    dend_46 { pt3dadd( -166.813, 267.57, -139.486, 0.44 ) }
    dend_46 { pt3dadd( -167.458, 268.353, -140.782, 0.81 ) }
    dend_46 { pt3dadd( -168.21, 269.15, -142.205, 0.37 ) }
    dend_46 { pt3dadd( -168.782, 269.682, -143.126, 0.29 ) }
    dend_46 { pt3dadd( -169.203, 270.028, -143.678, 0.29 ) }
    dend_46 { pt3dadd( -169.68, 270.389, -144.192, 0.29 ) }
    dend_46 { pt3dadd( -170.439, 271.013, -144.871, 0.59 ) }
    dend_46 { pt3dadd( -171.449, 271.808, -145.587, 0.29 ) }
    dend_46 { pt3dadd( -172.33, 272.486, -146.098, 0.22 ) }
    dend_46 { pt3dadd( -172.816, 272.89, -146.38, 0.22 ) }
    dend_46 { pt3dadd( -173.567, 273.572, -146.811, 1.25 ) }
    dend_46 { pt3dadd( -173.972, 273.981, -147.047, 1.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 59/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -132.454, 254.395, -160.666, 0.44 ) }
    dend_41 { pt3dadd( -133.153, 255.763, -161.087, 0.44 ) }
    dend_41 { pt3dadd( -133.798, 257.133, -161.539, 0.37 ) }
    dend_41 { pt3dadd( -134.193, 258.042, -161.83, 0.37 ) }
    dend_41 { pt3dadd( -134.577, 258.942, -162.106, 0.37 ) }
    dend_41 { pt3dadd( -134.894, 259.685, -162.344, 0.37 ) }
    dend_41 { pt3dadd( -135.402, 260.855, -162.717, 0.29 ) }
    dend_41 { pt3dadd( -135.902, 262.199, -163.136, 1.25 ) }
    dend_41 { pt3dadd( -136.125, 262.892, -163.365, 1.62 ) }
    dend_41 { pt3dadd( -136.31, 263.527, -163.619, 1.62 ) }
    dend_41 { pt3dadd( -136.785, 265.272, -164.366, 0.29 ) }
    dend_41 { pt3dadd( -136.987, 266.108, -164.723, 0.29 ) }
    dend_41 { pt3dadd( -137.187, 267.197, -165.204, 0.29 ) }
    dend_41 { pt3dadd( -137.302, 268.219, -165.694, 0.59 ) }
    dend_41 { pt3dadd( -137.433, 270.078, -166.607, 0.29 ) }
    dend_41 { pt3dadd( -137.467, 270.697, -166.91, 0.29 ) }
    dend_41 { pt3dadd( -137.521, 271.576, -167.346, 0.29 ) }
    dend_41 { pt3dadd( -137.581, 272.1, -167.604, 0.29 ) }
    dend_41 { pt3dadd( -137.696, 272.813, -167.915, 0.59 ) }
    dend_41 { pt3dadd( -137.839, 273.663, -168.216, 0.59 ) }
    dend_41 { pt3dadd( -138.126, 275.349, -168.74, 0.29 ) }
    dend_41 { pt3dadd( -138.301, 276.373, -169.083, 0.29 ) }
    dend_41 { pt3dadd( -138.488, 277.533, -169.466, 0.29 ) }
    dend_41 { pt3dadd( -138.709, 279.062, -169.971, 0.37 ) }
    dend_41 { pt3dadd( -138.813, 279.862, -170.23, 0.37 ) }
    dend_41 { pt3dadd( -138.954, 281.286, -170.661, 0.37 ) }
    dend_41 { pt3dadd( -139.037, 282.473, -170.987, 0.37 ) }
    dend_41 { pt3dadd( -139.125, 284.105, -171.372, 0.44 ) }
    dend_41 { pt3dadd( -139.154, 285.199, -171.592, 0.66 ) }
    dend_41 { pt3dadd( -139.166, 286.023, -171.73, 0.66 ) }
    dend_41 { pt3dadd( -139.165, 287.729, -171.879, 0.29 ) }
    dend_41 { pt3dadd( -139.15, 288.495, -171.879, 0.74 ) }
    dend_41 { pt3dadd( -139.121, 290.005, -171.785, 0.29 ) }
    dend_41 { pt3dadd( -139.117, 291.703, -171.605, 0.37 ) }
    dend_41 { pt3dadd( -139.115, 292.693, -171.478, 0.37 ) }
    dend_41 { pt3dadd( -139.133, 294.393, -171.261, 0.37 ) }
    dend_41 { pt3dadd( -139.168, 295.462, -171.133, 0.37 ) }
    dend_41 { pt3dadd( -139.248, 296.684, -171.018, 0.37 ) }
    dend_41 { pt3dadd( -139.39, 298.034, -170.933, 0.29 ) }
    dend_41 { pt3dadd( -139.571, 299.343, -170.89, 0.29 ) }
    dend_41 { pt3dadd( -139.786, 301.191, -170.93, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_41 { pt3dadd( -139.861, 302.024, -171.0, 0.29 ) }
    dend_41 { pt3dadd( -139.944, 303.153, -171.119, 1.03 ) }
    dend_41 { pt3dadd( -139.994, 304.008, -171.22, 1.33 ) }
    dend_41 { pt3dadd( -140.11, 305.782, -171.431, 0.52 ) }
    dend_41 { pt3dadd( -140.217, 307.291, -171.601, 0.52 ) }
    dend_41 { pt3dadd( -140.298, 308.746, -171.762, 0.52 ) }
    dend_41 { pt3dadd( -140.363, 309.939, -171.884, 0.81 ) }
    dend_41 { pt3dadd( -140.405, 310.586, -171.943, 0.81 ) }
    dend_41 { pt3dadd( -140.583, 312.367, -172.07, 0.37 ) }
    dend_41 { pt3dadd( -140.771, 313.841, -172.132, 0.37 ) }
    dend_41 { pt3dadd( -140.951, 315.066, -172.144, 0.96 ) }
    dend_41 { pt3dadd( -141.031, 315.613, -172.147, 1.33 ) }
    dend_41 { pt3dadd( -141.147, 316.311, -172.15, 1.4 ) }
    dend_41 { pt3dadd( -141.458, 317.912, -172.163, 0.52 ) }
    dend_41 { pt3dadd( -141.718, 319.064, -172.175, 0.44 ) }
    dend_41 { pt3dadd( -142.128, 320.55, -172.196, 0.37 ) }
    dend_41 { pt3dadd( -142.507, 321.867, -172.219, 0.37 ) }
    dend_41 { pt3dadd( -142.814, 322.965, -172.239, 0.37 ) }
    dend_41 { pt3dadd( -143.019, 323.707, -172.253, 0.37 ) }
    dend_41 { pt3dadd( -143.416, 324.962, -172.278, 0.74 ) }
    dend_41 { pt3dadd( -143.532, 325.241, -172.283, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -132.454, 254.395, -160.666, 0.37 ) }
    dend_40 { pt3dadd( -132.568, 256.103, -162.111, 0.37 ) }
    dend_40 { pt3dadd( -132.566, 257.328, -163.026, 0.74 ) }
    dend_40 { pt3dadd( -132.403, 259.271, -164.455, 0.29 ) }
    dend_40 { pt3dadd( -132.243, 260.294, -165.262, 0.29 ) }
    dend_40 { pt3dadd( -132.024, 261.355, -166.111, 1.25 ) }
    dend_40 { pt3dadd( -131.926, 261.773, -166.449, 1.25 ) }
    dend_40 { pt3dadd( -131.596, 262.851, -167.279, 0.29 ) }
    dend_40 { pt3dadd( -131.193, 263.906, -168.077, 0.29 ) }
    dend_40 { pt3dadd( -130.717, 265.04, -168.958, 0.29 ) }
    dend_40 { pt3dadd( -130.463, 265.696, -169.548, 0.29 ) }
    dend_40 { pt3dadd( -130.294, 266.263, -170.142, 0.29 ) }
    dend_40 { pt3dadd( -130.135, 266.935, -170.908, 0.29 ) }
    dend_40 { pt3dadd( -130.062, 267.703, -171.807, 1.03 ) }
    dend_40 { pt3dadd( -130.051, 269.228, -173.501, 0.37 ) }
    dend_40 { pt3dadd( -130.064, 270.065, -174.39, 0.37 ) }
    dend_40 { pt3dadd( -130.046, 270.77, -175.198, 0.37 ) }
    dend_40 { pt3dadd( -130.035, 271.376, -175.915, 1.03 ) }
    dend_40 { pt3dadd( -130.027, 272.408, -177.179, 0.52 ) }
    dend_40 { pt3dadd( -129.992, 273.138, -178.069, 0.52 ) }
    dend_40 { pt3dadd( -129.894, 273.917, -178.877, 0.44 ) }
    dend_40 { pt3dadd( -129.536, 275.634, -180.557, 1.62 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
    ModelViewParmSubset_2 = new SectionList()
    dend_51 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_42 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_51 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_18 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_50 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_24 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_49 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_28 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_6 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_48 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_31 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_37 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_12 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_33 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_44 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_34 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_47 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_46 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_41 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_22 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_2 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_26 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_23 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_27 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_3 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_21 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_4 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_5 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_25 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_7 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_16 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_9 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_10 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_15 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_14 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_13 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_36 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_43 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_45 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_38 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_42 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_39 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_35 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_40 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_5 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_9 all.append()
    dend_9 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_51 nseg = 3
    dend_18 nseg = 7
    dend_1 nseg = 7
    dend_50 nseg = 7
    dend_24 nseg = 13
    dend_19 nseg = 3
    dend_49 nseg = 7
    dend_28 nseg = 7
    dend_30 nseg = 3
    dend_29 nseg = 5
    dend_6 nseg = 9
    dend_48 nseg = 7
    dend_31 nseg = 5
    dend_11 nseg = 5
    dend_37 nseg = 3
    dend_32 nseg = 3
    dend_12 nseg = 3
    dend_33 nseg = 3
    dend_44 nseg = 15
    dend_34 nseg = 3
    dend_47 nseg = 3
    dend_46 nseg = 3
    dend_41 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L5_LBC_93c04dc3d5_0_0


