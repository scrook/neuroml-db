// Cell: bNAC219_L1_DAC_56906d7a99_0_0
/*
{
  "id" : "bNAC219_L1_DAC_56906d7a99_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-9.62751, -4.05177, 0.0, 3.56887", "-8.71603, -3.74604, 0.0, 6.42125", "-7.80455, -3.44032, 0.0, 9.26753", "-6.89307, -3.1346, 0.0, 10.6041", "-5.98159, -2.82887, 0.0, 11.4397", "-5.07011, -2.52315, 0.0, 11.8423", "-4.15863, -2.21743, 0.0, 12.0273", "-3.24715, -1.91171, 0.0, 11.98", "-2.33567, -1.60598, 0.0, 12.084", "-1.42419, -1.30026, 0.0, 12.2195", "-0.51271, -0.994538, 0.0, 12.0939", "0.39877, -0.688815, 0.0, 11.7876", "1.31025, -0.383092, 0.0, 11.7278", "2.22173, -0.0773693, 0.0, 12.0466", "3.13321, 0.228354, 0.0, 12.0335", "4.04469, 0.534076, 0.0, 11.0031", "4.95617, 0.839799, 0.0, 9.33458", "5.86765, 1.14552, 0.0, 8.15859", "6.77913, 1.45124, 0.0, 6.11155", "7.69061, 1.75697, 0.0, 4.38007", "8.60209, 2.06269, 0.0, 2.67949" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-8.21352, -4.1703, 8.11, 1.18", "-7.47226, -3.09689, 10.8437, 1.18", "-6.41343, -1.61733, 14.2817, 0.96", "-4.93665, 0.467681, 18.7128, 0.52", "-4.02184, 1.75928, 21.4578, 0.52", "-3.34054, 2.72118, 23.502, 0.52", "-2.70181, 3.62297, 25.4185, 0.52", "-2.27542, 4.2625, 26.6438, 0.52", "-1.96571, 4.7406, 27.5022, 0.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004961815715
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "4.28648, -4.9578, 11.45, 1.4", "4.28648, -4.9578, 11.45, 1.4", "5.07518, -5.54748, 11.8966, 1.18", "5.84498, -6.19214, 12.3616, 1.11", "6.47005, -6.79186, 12.7802, 1.11", "7.00104, -7.36673, 13.1437, 1.11", "7.70874, -8.18498, 13.5952, 0.88", "8.08402, -8.65369, 13.824, 0.74", "8.52539, -9.25945, 14.0586, 1.03", "9.00116, -9.96123, 14.3026, 1.03", "9.54557, -10.7871, 14.5999, 0.96", "10.0495, -11.53, 14.928, 0.59", "10.4881, -12.1461, 15.2647, 0.66", "10.8836, -12.7068, 15.638, 1.03", "11.2735, -13.3146, 16.0969, 1.11", "11.6533, -13.9853, 16.6926, 0.88", "11.9524, -14.6509, 17.3806, 0.74", "12.161, -15.2801, 18.0799, 0.59", "12.3091, -15.9508, 18.8216, 0.44", "12.4023, -16.547, 19.5088, 0.44", "12.4483, -17.0067, 20.0288, 0.44", "12.4739, -17.485, 20.5595, 0.44", "12.4792, -17.6087, 20.6858, 0.44", "12.5011, -17.9241, 21.0091, 0.59", "12.5725, -18.5171, 21.6356, 0.59", "12.6293, -18.8266, 21.9711, 0.59", "12.6913, -19.1273, 22.2879, 0.59", "12.8362, -19.7228, 22.912, 0.22", "12.975, -20.2543, 23.4875, 0.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004961815715
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-6.27352, -5.4198, -12.0, 0.74", "-6.88402, -4.58764, -12.9235, 0.74", "-7.45265, -3.91789, -13.8582, 0.74", "-8.28444, -3.07556, -15.3625, 0.74", "-9.07069, -2.38767, -17.0301, 0.81", "-9.70036, -1.84525, -18.7159, 0.81", "-10.1741, -1.39313, -20.3678, 0.81", "-10.4578, -1.06832, -22.2213, 0.81", "-10.5301, -0.89996, -23.8484, 0.81", "-10.4533, -0.771664, -25.9231, 0.96", "-10.2767, -0.665319, -27.7122, 0.81", "-10.0559, -0.54316, -29.2812, 0.81", "-9.62613, -0.26322, -31.6129, 0.81", "-9.22861, 0.0730401, -33.6362, 0.81", "-8.80527, 0.537785, -35.8437, 0.81", "-8.41335, 1.11333, -38.1308, 0.81", "-8.13507, 1.72287, -40.2704, 0.81", "-7.9599, 2.30304, -42.1503, 0.44", "-7.82812, 3.05086, -44.3815, 0.44", "-7.77517, 3.53411, -45.8285, 0.44", "-7.76615, 3.75204, -46.5163, 0.44", "-7.78482, 4.42838, -48.8589, 0.44", "-7.81677, 4.74013, -49.8793, 0.44", "-7.83142, 4.93213, -50.4844, 0.44", "-7.74731, 5.22187, -51.2589, 0.44", "-7.2029, 6.06484, -52.9931, 0.44", "-6.5786, 6.79772, -54.1754, 0.44", "-5.80815, 7.59751, -55.1301, 0.66", "-4.71371, 8.7113, -56.2244, 0.88", "-3.47845, 10.0491, -57.3349, 0.66", "-2.00745, 11.8023, -58.5665, 0.59", "-1.09986, 12.9738, -59.2509, 0.52", "-3.38078E-4, 14.5085, -60.0351, 0.44", "0.311377, 14.9771, -60.2655, 0.59", "0.938029, 16.1015, -60.7266, 0.37", "1.44983, 17.2566, -61.1654, 0.81", "1.65884, 17.8495, -61.3612, 0.81", "1.92782, 18.9717, -61.7049, 0.59", "2.1983, 21.2578, -62.3575, 0.66", "2.32819, 22.5602, -62.7117, 0.29", "2.47513, 24.0955, -63.0857, 0.29", "2.54822, 25.0556, -63.31, 0.29", "2.59981, 26.3163, -63.6166, 0.29", "2.52249, 27.7055, -63.9411, 0.66", "4.93184, 33.6991, -73.303, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004961815715,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-7.00352, 1.0902, -3.56, 2.88", "-7.00352, 1.0902, -3.56, 2.88", "-7.88361, 1.1861, -4.4816, 2.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004961815715
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-8.02352, -4.3803, 4.81, 3.61", "-8.02352, -4.3803, 4.81, 3.61", "-9.02477, -4.50932, 5.22258, 2.95", "-10.3103, -4.60299, 5.717, 2.21", "-11.7561, -4.6067, 6.20193, 1.55", "-12.8944, -4.60962, 6.58374, 1.55", "-14.154, -4.61285, 7.00622, 1.25", "-15.1545, -4.58431, 7.31877, 1.03", "-15.8541, -4.51651, 7.50211, 1.03", "-17.1922, -4.24734, 7.80092, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004961815715
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-4.69352, -7.9083, -7.1, 3.83", "-4.69352, -7.9083, -7.1, 3.83", "-4.98966, -9.54482, -7.59142, 2.73", "-5.25567, -11.0148, -8.03283, 2.58", "-5.56191, -12.7071, -8.54101, 2.06", "-5.84243, -14.2573, -9.00649, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004961815715
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "8.23648, 4.1877, -1.29, 2.58", "8.23648, 4.1877, -1.29, 2.58", "9.82617, 4.78141, -1.99149, 1.47", "10.6331, 5.08397, -2.33924, 1.33", "11.8669, 5.52155, -2.82392, 0.96", "13.1891, 5.98432, -3.30227, 1.11", "14.6265, 6.46563, -3.78448, 0.96", "16.0179, 6.89928, -4.21659, 0.81", "16.8373, 7.12842, -4.45138, 0.59", "17.9177, 7.43755, -4.65322, 0.59", "18.6256, 7.66326, -4.70065, 0.88", "19.2512, 7.89987, -4.67342, 0.88", "20.1623, 8.29271, -4.48869, 0.81", "21.1611, 8.77121, -4.23199, 1.03", "22.2059, 9.33199, -3.97042, 0.52", "22.7859, 9.70577, -3.8328, 0.52", "23.6482, 10.3481, -3.68508, 0.52", "25.3516, 11.8167, -3.62757, 0.52", "26.1597, 12.5992, -3.80055, 0.74", "26.7892, 13.3048, -4.17924, 0.74", "27.1929, 13.8042, -4.68608, 0.74", "27.6087, 14.371, -5.45675, 0.37", "27.9627, 14.9451, -6.34648, 0.37", "28.241, 15.4673, -7.17966, 0.37", "28.5112, 15.9847, -7.97419, 0.37", "28.9402, 16.7354, -9.02356, 0.59", "29.1307, 17.0404, -9.40687, 0.59", "29.3403, 17.3861, -9.77469, 0.59", "29.6329, 17.9155, -10.2475, 0.44", "30.008, 18.6732, -10.8709, 0.44", "30.371, 19.5598, -11.5992, 0.29", "30.5998, 20.2701, -12.2018, 0.37", "30.7736, 20.865, -12.7156, 0.74", "30.8758, 21.2658, -13.0871, 0.74", "30.9926, 21.8945, -13.7061, 0.74", "31.073, 22.8694, -14.6743, 0.44", "31.0734, 23.4753, -15.313, 0.44", "31.0976, 24.2467, -16.0615, 0.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004961815715
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "8.60209, 2.06269, 0.0, 0.679432", "22.8234, 6.83273, 0.0, 0.679432", "37.0448, 11.6028, 0.0, 0.679432" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-1.96571, 4.7406, 27.5022, 0.29", "-2.88256, 6.57115, 27.5965, 0.29", "-3.63831, 8.09809, 28.0721, 0.29", "-3.97113, 8.82562, 28.3612, 0.29", "-4.46352, 9.96698, 28.8905, 0.29", "-4.98382, 11.2169, 29.5667, 0.37", "-5.62188, 12.6868, 30.3831, 0.37", "-6.09168, 13.7573, 31.0993, 0.37", "-6.55487, 14.7096, 31.8582, 0.22", "-7.0169, 15.5703, 32.6165, 0.15", "-7.47394, 16.4056, 33.3916, 0.15", "-7.98097, 17.3488, 34.3243, 0.52", "-8.2452, 17.8783, 34.8524, 0.29", "-8.77391, 18.9286, 35.9905, 0.29", "-9.29749, 19.8709, 37.0282, 0.29", "-9.80556, 20.7477, 37.9123, 0.29", "-10.2811, 21.5544, 38.6788, 0.29", "-10.6715, 22.1751, 39.3, 0.44", "-11.3204, 23.0896, 40.2133, 0.44", "-12.1794, 24.1399, 41.1835, 0.59", "-12.8645, 24.9031, 41.8703, 0.29", "-13.8012, 25.8775, 42.7806, 0.29", "-14.9385, 27.032, 43.9469, 0.29", "-15.7948, 27.9193, 44.9454, 0.29", "-16.3038, 28.4969, 45.6484, 0.29", "-16.9005, 29.2995, 46.6241, 0.44", "-17.3682, 30.0652, 47.5095, 0.59", "-18.0301, 31.3817, 48.8369, 0.22", "-18.5296, 32.5753, 49.8369, 0.22", "-18.9314, 33.6652, 50.6817, 0.22", "-19.4902, 35.3257, 51.8513, 0.22", "-20.0856, 37.2099, 53.0531, 0.15", "-20.3954, 38.2342, 53.6234, 0.15", "-20.7924, 39.6362, 54.335, 0.15", "-21.2767, 41.4299, 55.2369, 0.15", "-21.5524, 42.5122, 55.7769, 0.15", "-21.8199, 43.7159, 56.5257, 0.15", "-21.952, 44.4934, 57.1162, 0.22", "-22.0164, 45.1058, 57.7457, 0.22", "-22.0835, 46.0817, 58.858, 0.22", "-22.1149, 46.8679, 59.7894, 0.22", "-22.1399, 48.361, 61.7507, 0.22", "-22.1221, 49.5871, 63.453, 0.22", "-22.0578, 50.9528, 65.5781, 0.22" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-1.96571, 4.7406, 27.5022, 0.29", "-1.8518, 4.94348, 26.8505, 0.29", "-1.58334, 5.46263, 25.18, 0.37", "-1.45889, 5.67145, 24.4675, 0.52", "-1.19036, 6.01728, 23.0069, 0.52", "-0.927193, 6.3005, 21.7894, 0.37", "-0.606917, 6.57336, 20.5559, 0.37", "-0.30013, 6.74828, 19.5495, 0.37", "0.064346, 6.90441, 18.4919, 0.22", "1.28071, 6.55913, 19.2608, 0.22", "3.87333, 5.99649, 20.8094, 0.22", "4.83197, 5.81991, 21.4638, 0.37", "6.31022, 5.58483, 22.6296, 0.22", "7.28063, 5.44244, 23.5123, 0.22", "7.87578, 5.37428, 24.1243, 0.22", "8.48814, 5.35118, 24.8088, 0.22", "9.06687, 5.37625, 25.4388, 0.22", "9.46172, 5.42039, 25.9541, 0.22", "9.91418, 5.48099, 26.6969, 0.22", "10.1341, 5.49251, 27.1352, 0.22", "10.5346, 5.49003, 27.9969, 0.22", "10.78, 5.46392, 28.6138, 0.22", "11.1478, 5.40625, 29.625, 0.22", "11.4565, 5.34963, 30.5374, 0.22", "11.6752, 5.30712, 31.2998, 0.22" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "12.975, -20.2543, 23.4875, 0.29", "13.5524, -20.572, 25.9972, 0.29", "14.0083, -20.8086, 27.6419, 0.29", "14.7337, -21.1142, 29.8153, 0.44", "15.3599, -21.3318, 31.4362, 0.44", "15.6338, -21.4253, 32.1025, 0.44", "15.9893, -21.5584, 32.9581, 0.44", "16.343, -21.7045, 33.7551, 0.44", "16.696, -21.8741, 34.4869, 0.37", "17.2604, -22.1623, 35.5974, 0.29", "17.7598, -22.4128, 36.652, 0.29", "18.1557, -22.6325, 37.6024, 0.29", "18.5461, -22.9302, 38.706, 0.29", "18.7343, -23.1233, 39.3208, 0.29", "18.972, -23.4065, 40.0761, 0.29", "19.1315, -23.6104, 40.4709, 0.29", "19.3481, -23.9024, 40.9097, 0.29", "19.6126, -24.2591, 41.3465, 0.29", "20.1406, -25.0085, 42.1851, 0.29", "20.5942, -25.6993, 42.958, 0.29", "21.2437, -26.6435, 44.0284, 0.22", "21.8455, -27.4265, 44.9732, 0.22", "22.2583, -27.9092, 45.5981, 0.22", "22.975, -28.691, 46.6688, 0.22", "23.5532, -29.3004, 47.5075, 0.22", "24.2861, -30.0016, 48.5697, 0.22", "25.1931, -30.7401, 49.858, 0.15", "26.151, -31.4759, 51.2146, 0.15", "26.5735, -31.8122, 51.8261, 0.15", "27.0219, -32.2099, 52.5305, 0.29", "27.5946, -32.8318, 53.6869, 0.29", "27.9413, -33.3554, 54.7688, 0.15", "28.2362, -34.0421, 56.3997, 0.15", "28.2926, -34.2563, 56.9877, 0.15", "28.4443, -34.8799, 58.8678, 0.15", "28.5698, -35.4654, 60.9127, 0.15", "28.6655, -35.89, 62.5315, 0.15", "28.8124, -36.4277, 64.5977, 0.29", "29.0488, -36.9965, 66.876, 0.29", "29.3382, -37.4875, 68.953, 0.29", "29.7788, -38.0507, 71.3259, 0.29", "30.1571, -38.4805, 73.0029, 0.07", "30.6549, -38.9913, 74.8622, 0.07", "31.4593, -39.7514, 77.4638, 0.07", "32.8215, -40.9678, 81.4373, 0.15", "33.021, -41.1491, 81.9957, 0.15", "33.2335, -41.362, 82.6222, 0.15", "33.4988, -41.6855, 83.6342, 0.15", "33.8003, -42.1517, 85.184, 0.15", "34.0134, -42.6375, 86.723, 0.15", "34.0631, -42.8406, 87.3141, 0.15", "34.1772, -43.9053, 90.4561, 0.15", "34.1923, -44.7355, 92.8156, 0.15", "34.1691, -45.2142, 94.0932, 0.15", "34.1034, -45.9211, 95.8902, 0.15", "34.0668, -46.2085, 96.6106, 0.15", "33.9818, -46.9545, 98.4501, 0.15", "33.9571, -47.5926, 99.8614, 0.15", "33.9784, -48.2065, 101.089, 0.15", "34.0069, -48.7193, 102.089, 0.15" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "12.975, -20.2543, 23.4875, 0.29", "13.0844, -20.6456, 24.1641, 0.29", "13.1315, -20.8763, 24.5874, 0.29", "13.1664, -21.6092, 26.0443, 0.29", "13.1303, -22.1036, 27.0438, 0.22", "13.0955, -22.3787, 27.5982, 0.22", "13.0634, -22.6583, 28.145, 0.22", "13.0622, -22.8889, 28.5677, 0.22", "13.081, -23.4411, 29.469, 0.22", "13.0848, -23.8588, 30.0354, 0.22", "13.0861, -24.5613, 30.9113, 0.22", "13.089, -24.9353, 31.3118, 0.29", "13.1251, -25.8499, 32.2173, 0.29", "13.2017, -26.6076, 32.9408, 0.29", "13.3316, -27.3167, 33.5914, 0.52", "13.4988, -28.0015, 34.1812, 0.52", "13.6881, -28.6265, 34.7022, 0.52", "14.1894, -29.9631, 35.81, 0.22", "14.5942, -30.8524, 36.5378, 0.22", "14.8842, -31.373, 36.9437, 0.29", "15.393, -32.1793, 37.5409, 0.29", "16.1364, -33.3173, 38.2847, 0.22", "16.722, -34.2384, 38.8284, 0.22", "17.1457, -34.9496, 39.1809, 0.22", "17.4498, -35.483, 39.4548, 0.22", "17.8324, -36.1619, 39.8562, 0.22", "18.185, -36.7464, 40.2408, 0.22", "18.6337, -37.4565, 40.7646, 0.22", "19.2201, -38.3848, 41.5216, 0.22", "19.6215, -39.0151, 42.0753, 0.22", "19.9934, -39.6473, 42.6338, 0.22", "20.3231, -40.2598, 43.1566, 0.29", "20.7575, -41.07, 43.8037, 0.29", "21.0182, -41.5372, 44.173, 0.22", "21.5414, -42.4197, 44.8592, 0.22", "22.0917, -43.2535, 45.4995, 0.22", "22.8172, -44.2613, 46.2984, 0.22", "23.5787, -45.2388, 47.1451, 0.15", "24.4367, -46.2885, 48.1332, 0.15", "24.8987, -46.8575, 48.7102, 0.22", "25.3257, -47.4338, 49.2667, 0.22", "25.892, -48.228, 49.9718, 0.22", "26.2923, -48.8446, 50.482, 0.22", "26.7889, -49.7244, 51.1661, 0.22", "27.2097, -50.53, 51.784, 0.22", "27.9093, -51.8948, 52.8469, 0.22", "28.3668, -52.7681, 53.5797, 0.22", "29.1278, -54.0666, 54.7608, 0.22", "29.8746, -55.2051, 55.9172, 0.22", "30.4552, -55.9855, 56.8073, 0.22", "30.8788, -56.4665, 57.4635, 0.15", "31.7907, -57.454, 58.9488, 0.15", "32.518, -58.2576, 60.1893, 0.15", "33.2434, -59.0377, 61.3795, 0.15", "34.3042, -60.0925, 63.0417, 0.15", "35.5621, -61.2538, 64.9028, 0.15" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-7.88361, 1.1861, -4.4816, 1.11", "-8.57759, 2.26638, -4.31796, 1.11", "-9.2535, 3.31853, -4.15858, 0.74", "-9.78486, 4.1457, -4.03328, 0.74", "-10.211, 4.80894, -3.93281, 0.74", "-10.3979, 5.09993, -3.88873, 0.74" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-7.88361, 1.1861, -4.4816, 0.81", "-9.64092, 1.57413, -5.7017, 0.81", "-10.7076, 1.89562, -6.33857, 0.52", "-11.2484, 2.12449, -6.61945, 0.66", "-12.0319, 2.59205, -6.98781, 0.37", "-13.1437, 3.38918, -7.51384, 0.22", "-13.7137, 3.83979, -7.77786, 0.44", "-14.4065, 4.4916, -8.03837, 0.37", "-15.3422, 5.47422, -8.35874, 0.96", "-16.4082, 6.69482, -8.72925, 0.37", "-17.035, 7.50108, -8.95633, 0.37", "-17.6691, 8.45778, -9.17437, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-17.1922, -4.24734, 7.80092, 0.59", "-18.2783, -4.35702, 7.40474, 0.59", "-20.0811, -4.62907, 6.77078, 0.52", "-22.0646, -5.06389, 6.18176, 0.66", "-23.3041, -5.36551, 5.80283, 0.52", "-24.1278, -5.55189, 5.56086, 0.52", "-25.389, -5.82267, 5.2124, 0.66", "-26.6455, -6.10747, 4.9074, 0.44", "-28.6988, -6.61989, 4.45844, 0.37", "-30.1021, -6.97966, 4.19271, 0.52", "-31.1793, -7.2776, 3.94916, 0.59", "-32.3953, -7.63992, 3.62869, 0.52", "-33.5493, -7.99193, 3.30416, 0.66", "-34.5254, -8.28796, 2.95927, 0.44", "-35.8483, -8.70008, 2.37773, 0.59", "-37.0496, -9.10811, 1.85207, 0.59", "-38.3207, -9.56527, 1.26349, 0.37", "-39.208, -9.85235, 0.847308, 0.37", "-40.6975, -10.2648, 0.173281, 0.37", "-42.1663, -10.5988, -0.414399, 0.29", "-43.5212, -10.8268, -0.931512, 0.22", "-44.7481, -11.0064, -1.34295, 0.22", "-45.807, -11.1489, -1.67065, 0.22", "-46.566, -11.2103, -1.89853, 0.22", "-47.3814, -11.2472, -2.11192, 0.22", "-48.6003, -11.2882, -2.44129, 0.22", "-49.5388, -11.3206, -2.78641, 0.29", "-50.5923, -11.3827, -3.21367, 0.29", "-51.961, -11.4857, -3.83484, 0.22", "-52.6468, -11.5493, -4.17338, 0.22", "-53.8818, -11.6721, -4.80794, 0.22", "-55.1993, -11.8742, -5.44713, 0.22", "-56.0034, -12.0367, -5.86859, 0.22", "-56.793, -12.2279, -6.30076, 0.22", "-57.8367, -12.5181, -6.90963, 0.22", "-58.2536, -12.6204, -7.17262, 0.22", "-59.5933, -12.854, -7.93544, 0.22", "-61.3855, -13.1038, -8.86647, 0.15", "-63.5615, -13.3965, -9.94195, 0.15", "-64.7413, -13.5516, -10.4736, 0.29", "-66.4721, -13.7903, -11.213, 0.37", "-68.6689, -14.1291, -12.1027, 0.07", "-69.9943, -14.3375, -12.612, 0.15", "-71.0357, -14.5293, -12.9417, 0.29", "-72.2799, -14.8115, -13.2849, 0.29", "-73.4287, -15.1082, -13.5898, 0.29", "-74.7167, -15.5326, -13.9852, 0.52", "-76.1884, -16.1186, -14.5925, 0.22", "-77.0751, -16.4624, -14.9916, 0.22", "-78.2465, -16.9023, -15.5283, 0.29", "-79.1934, -17.2457, -15.9322, 0.29", "-80.6549, -17.7551, -16.4505, 0.22", "-81.4228, -18.0359, -16.6918, 0.22", "-82.648, -18.5008, -17.029, 0.22", "-83.8309, -18.9857, -17.3122, 0.29", "-84.9867, -19.4908, -17.525, 0.29", "-86.3701, -20.1165, -17.7043, 0.37", "-87.8542, -20.7878, -17.823, 0.22", "-88.8992, -21.2894, -17.9011, 0.22", "-89.8934, -21.8016, -18.0083, 0.22", "-90.8281, -22.2983, -18.116, 0.22", "-91.2324, -22.5266, -18.169, 0.22", "-92.1541, -23.045, -18.2972, 0.29", "-93.2839, -23.6661, -18.4735, 0.22", "-94.1024, -24.0548, -18.6769, 0.22", "-94.9888, -24.4044, -18.9412, 0.22", "-96.5666, -24.9363, -19.4659, 0.29", "-98.158, -25.4262, -20.0417, 0.22", "-99.2526, -25.7292, -20.4578, 0.22", "-101.354, -26.1724, -21.3034, 0.22", "-103.071, -26.4558, -22.0358, 0.22", "-105.126, -26.6611, -22.9483, 0.22", "-106.018, -26.7013, -23.3323, 0.22", "-107.197, -26.7142, -23.8351, 0.29", "-109.499, -26.6793, -24.796, 0.22", "-110.531, -26.6504, -25.2238, 0.22", "-112.169, -26.5779, -25.944, 0.22", "-113.677, -26.537, -26.5783, 0.15", "-115.055, -26.5437, -27.1512, 0.15", "-115.855, -26.5889, -27.4926, 0.15", "-116.85, -26.7056, -27.9111, 0.15", "-117.949, -26.8707, -28.3677, 0.15", "-119.479, -27.1882, -29.0226, 0.15", "-120.228, -27.3566, -29.3363, 0.15", "-121.701, -27.6904, -29.9459, 0.15", "-122.899, -27.9577, -30.4931, 0.66", "-123.824, -28.1577, -30.9707, 0.22", "-125.333, -28.5021, -31.7858, 0.22", "-126.496, -28.7593, -32.4354, 0.29", "-127.603, -29.0077, -33.0533, 0.37", "-128.926, -29.3482, -33.8505, 0.22", "-129.802, -29.5863, -34.4293, 0.22", "-130.993, -29.9177, -35.2571, 0.22", "-132.081, -30.2215, -36.0255, 0.15", "-133.241, -30.5603, -36.8211, 0.22", "-134.13, -30.8375, -37.3944, 0.15", "-135.459, -31.2226, -38.1332, 0.15", "-136.148, -31.4067, -38.4944, 0.22", "-136.523, -31.5149, -38.7134, 0.22", "-137.689, -31.9114, -39.4475, 0.22", "-138.334, -32.1732, -39.8847, 0.22", "-139.992, -32.8944, -41.0752, 0.52", "-141.171, -33.4453, -41.9949, 0.22", "-142.615, -34.1421, -43.1671, 0.29", "-143.695, -34.6806, -44.0664, 0.22", "-144.903, -35.3255, -45.0725, 0.22", "-146.162, -36.0421, -46.0812, 0.22", "-147.099, -36.6322, -46.8287, 0.22", "-147.861, -37.137, -47.3432, 0.22", "-148.141, -37.3261, -47.4946, 0.22", "-149.194, -38.0593, -47.9986, 0.22", "-150.297, -38.8735, -48.4764, 0.22", "-151.07, -39.4837, -48.7937, 0.22", "-151.907, -40.182, -49.1478, 0.22", "-152.69, -40.8727, -49.5484, 0.22", "-153.472, -41.5956, -50.0177, 0.22", "-153.647, -41.7574, -50.1458, 0.22", "-154.425, -42.4479, -50.7657, 0.22", "-155.173, -43.109, -51.365, 0.29", "-155.975, -43.8259, -52.0755, 0.29", "-156.741, -44.5148, -52.7442, 0.22", "-157.747, -45.4232, -53.6751, 0.22", "-158.613, -46.1275, -54.4675, 0.22", "-159.33, -46.6206, -55.1115, 0.22", "-160.34, -47.1744, -55.9869, 0.22", "-161.23, -47.5561, -56.7436, 0.15", "-162.667, -48.0932, -58.0369, 0.15", "-163.786, -48.5046, -59.082, 0.15", "-164.728, -48.8296, -60.0025, 0.22", "-165.618, -49.1003, -60.8632, 0.22", "-167.435, -49.6155, -62.585, 0.15", "-168.591, -49.9459, -63.6897, 0.22", "-169.76, -50.3044, -64.7836, 0.22", "-171.227, -50.8009, -66.1246, 0.15", "-172.197, -51.1457, -66.9577, 0.22", "-173.37, -51.5708, -67.8819, 0.29", "-174.756, -52.0963, -68.8748, 0.15", "-175.786, -52.4842, -69.5319, 0.15", "-177.302, -53.0764, -70.4222, 0.15", "-178.597, -53.5923, -71.0951, 0.07", "-179.699, -54.0265, -71.6145, 0.07", "-180.444, -54.2909, -71.8846, 0.74", "-181.691, -54.6708, -72.2253, 0.15", "-182.674, -54.9297, -72.4247, 0.15", "-184.188, -55.3052, -72.6976, 0.15", "-184.759, -55.4384, -72.7852, 0.15", "-186.833, -55.8961, -73.0909, 0.15", "-188.216, -56.1982, -73.3224, 0.22", "-189.461, -56.458, -73.5363, 0.22", "-190.49, -56.6602, -73.7515, 0.22", "-191.215, -56.785, -73.942, 0.22", "-191.663, -56.8025, -74.0895, 0.22", "-192.539, -56.7195, -74.4744, 0.22", "-193.705, -56.4203, -75.0037, 0.15", "-194.878, -55.9514, -75.5249, 0.15", "-195.754, -55.5312, -75.8699, 0.15", "-197.895, -54.367, -76.669, 0.15", "-198.655, -53.9234, -76.9069, 0.15", "-200.205, -53.0384, -77.4033, 0.29", "-201.056, -52.5628, -77.687, 0.37", "-202.946, -51.5164, -78.2999, 0.07", "-204.035, -50.9141, -78.6395, 0.15", "-205.243, -50.2505, -79.0231, 0.15", "-207.343, -49.1536, -79.696, 0.52", "-208.255, -48.731, -80.0442, 0.29", "-209.576, -48.1248, -80.5798, 0.15", "-211.161, -47.3575, -81.3138, 0.22", "-222.144, -47.8905, -87.4857, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-17.1922, -4.24734, 7.80092, 0.66", "-18.2913, -2.97872, 6.39621, 0.66", "-18.9816, -2.09112, 5.50804, 0.66", "-19.9593, -0.750781, 4.28877, 0.44", "-20.6636, 0.179164, 3.52312, 0.44", "-21.0395, 0.719687, 3.10276, 0.44", "-21.2804, 1.11213, 2.81249, 0.44", "-21.6477, 1.86255, 2.23514, 0.44", "-21.8518, 2.46707, 1.87043, 0.29", "-22.1605, 3.74237, 1.25582, 0.44", "-22.4217, 5.20085, 0.585804, 0.29", "-22.534, 6.02352, 0.225221, 0.29", "-22.6319, 6.77713, -0.12559, 0.29", "-22.7378, 7.40271, -0.43381, 0.29", "-22.8948, 8.18021, -0.823501, 0.22", "-23.2133, 9.07876, -1.27017, 0.22", "-23.8357, 10.0078, -1.7023, 0.22", "-24.464, 10.7932, -2.05708, 0.22", "-24.9466, 11.4027, -2.30507, 0.29", "-25.1829, 11.7235, -2.41797, 0.29", "-25.9031, 12.8727, -2.739, 0.22", "-26.2369, 13.4439, -2.83098, 0.22", "-26.6879, 14.2298, -2.87124, 0.22", "-27.3959, 15.4788, -2.78204, 0.22", "-27.5093, 15.6814, -2.75794, 0.22", "-28.0606, 16.692, -2.563, 0.29", "-29.0502, 18.5608, -2.10165, 0.22", "-29.703, 19.6993, -1.70758, 0.22", "-30.2477, 20.5619, -1.37166, 0.22", "-30.9258, 21.6467, -0.93345, 0.15", "-31.5416, 22.6594, -0.573668, 0.15", "-31.9761, 23.3768, -0.339549, 0.22", "-32.7416, 24.7252, 0.0961692, 0.22", "-33.6263, 26.4675, 0.631883, 0.15", "-34.4173, 28.1914, 1.16394, 0.15", "-35.0746, 29.7683, 1.63718, 0.15", "-35.547, 30.9889, 1.95048, 0.15", "-36.2129, 32.8722, 2.38333, 0.15", "-36.5561, 33.9508, 2.56177, 0.22", "-36.7822, 34.756, 2.68363, 0.15", "-37.0521, 35.7626, 2.80341, 0.15", "-37.2699, 36.6509, 2.87203, 0.15", "-37.4291, 37.3332, 2.90111, 0.15", "-37.8243, 38.7779, 2.9646, 0.15", "-38.0215, 39.4265, 3.02011, 0.15", "-38.534, 41.0285, 3.19361, 0.29", "-38.8033, 41.8932, 3.28554, 0.15", "-39.2204, 43.3789, 3.47168, 0.37", "-39.5391, 44.6005, 3.6692, 0.37", "-39.7707, 45.5323, 3.84682, 0.37", "-40.0498, 46.5505, 4.04415, 0.37", "-40.4274, 47.8352, 4.28146, 0.44", "-41.1177, 50.0454, 4.70114, 0.22", "-41.6001, 51.503, 4.95952, 0.22", "-41.8316, 52.2328, 5.09472, 0.22", "-42.1773, 53.3678, 5.36411, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-5.84243, -14.2573, -9.00649, 0.66", "-7.71204, -15.2122, -9.89085, 0.66", "-9.47809, -16.3862, -10.9961, 0.59", "-10.202, -17.0128, -11.553, 0.66", "-11.0336, -17.9658, -12.3498, 0.66", "-11.488, -18.6376, -12.8974, 0.66", "-11.9011, -19.4052, -13.4831, 0.74", "-12.4286, -21.2731, -14.8117, 0.44", "-12.6251, -22.4726, -15.5822, 0.66", "-12.7902, -23.9029, -16.4422, 0.59", "-12.8673, -25.0758, -17.084, 0.59", "-12.8886, -26.1137, -17.5947, 0.37", "-12.8992, -27.1781, -18.0513, 0.37", "-12.9439, -28.4195, -18.5152, 0.44", "-13.0292, -29.2001, -18.8041, 0.29", "-13.2896, -30.4349, -19.225, 0.29", "-13.5901, -31.4074, -19.5244, 0.22", "-13.7468, -31.8062, -19.6383, 0.29", "-14.2618, -32.8494, -19.9253, 0.29", "-14.8617, -33.9724, -20.2245, 0.22", "-15.2648, -34.6667, -20.3912, 0.37", "-15.7169, -35.4366, -20.5374, 0.59", "-16.0918, -36.1421, -20.6403, 0.52", "-16.8999, -37.9008, -20.6986, 0.22", "-17.3798, -39.0628, -20.6851, 0.15", "-17.5939, -39.648, -20.7007, 0.15", "-17.8428, -40.3767, -20.7476, 0.22", "-18.1951, -41.5494, -20.8673, 0.22", "-18.602, -43.2385, -21.1398, 0.22", "-18.8223, -44.615, -21.4795, 0.29", "-18.9303, -45.6164, -21.9387, 0.29", "-18.92, -46.2229, -22.3521, 0.52", "-18.8564, -46.8093, -22.8531, 0.52", "-18.7747, -47.6365, -23.6169, 0.52", "-18.7153, -48.4351, -24.3428, 0.52", "-18.6868, -49.1488, -24.8981, 0.37", "-18.6992, -50.6663, -25.9256, 0.22", "-18.7409, -52.0036, -26.7192, 0.15", "-18.8102, -53.5616, -27.4645, 0.29", "-18.9048, -55.278, -28.0898, 0.15", "-18.9504, -56.6802, -28.4776, 0.15", "-18.9444, -57.4161, -28.6435, 0.22", "-18.8913, -58.3675, -28.829, 0.22", "-18.7189, -59.6431, -29.0953, 0.22", "-18.44, -60.8302, -29.4179, 0.22", "-17.9845, -62.4405, -29.8318, 0.29", "-17.6309, -63.6084, -30.167, 0.52", "-17.2509, -64.8215, -30.5708, 0.44", "-16.8418, -66.139, -31.0928, 0.22", "-16.3867, -67.4396, -31.7269, 0.22", "-15.6588, -69.0662, -32.6849, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-5.84243, -14.2573, -9.00649, 1.11", "-5.79672, -15.6587, -9.32104, 1.11", "-5.74857, -16.5698, -9.54293, 1.11", "-5.72369, -17.051, -9.65567, 1.33", "-5.66667, -18.4029, -9.94146, 1.55", "-5.61396, -19.4919, -10.1436, 0.81", "-5.54294, -20.6097, -10.3005, 0.88", "-5.48557, -21.4005, -10.4032, 0.96", "-5.34485, -22.4378, -10.5523, 0.81", "-5.07029, -23.6678, -10.7399, 1.18", "-4.62375, -24.9691, -10.9633, 0.88", "-4.25466, -25.8074, -11.1949, 0.81", "-3.85924, -26.5658, -11.5324, 0.81", "-3.34343, -27.4359, -12.07, 0.59", "-2.89687, -28.0908, -12.5647, 0.74", "-2.36275, -28.7883, -13.2124, 0.88", "-1.69581, -29.6266, -14.1368, 0.66", "-0.982993, -30.5836, -15.2794, 0.96", "-0.676873, -31.0641, -15.8364, 1.11" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "31.0976, 24.2467, -16.0615, 0.29", "31.2861, 24.5223, -16.7126, 0.29", "31.5387, 25.0011, -17.8833, 0.29", "31.7947, 25.5092, -19.0461, 0.29", "31.9735, 25.8764, -19.7919, 0.22", "32.2224, 26.4116, -20.7463, 0.29", "32.6178, 27.2535, -22.0606, 0.37", "32.9758, 28.0248, -23.1108, 0.52", "33.1706, 28.4538, -23.5825, 0.81", "33.6676, 29.5955, -24.6194, 0.22", "33.9017, 30.1818, -25.0657, 0.22", "34.2402, 31.0439, -25.5939, 0.22", "34.6595, 32.2023, -26.1418, 0.22", "34.8893, 32.9729, -26.4493, 0.29", "35.1873, 34.369, -27.0221, 0.22", "35.2993, 35.2249, -27.387, 0.22", "35.3611, 36.0217, -27.749, 0.22", "35.3926, 36.827, -28.0711, 0.37", "35.4178, 37.6373, -28.3589, 0.37", "35.4758, 38.9153, -28.8176, 0.44", "35.5359, 39.9341, -29.147, 0.44", "35.5973, 40.6436, -29.3504, 0.29", "35.7397, 42.0405, -29.6815, 0.29", "35.8816, 43.3858, -29.9241, 0.37", "35.9566, 44.3716, -30.04, 0.37", "35.9859, 45.806, -30.1166, 0.29", "35.8579, 47.2807, -30.1465, 0.22", "35.6521, 48.1127, -30.1582, 0.22", "35.1872, 49.1795, -30.183, 0.22", "34.7194, 49.9283, -30.1723, 0.22", "33.9728, 50.8104, -30.1613, 0.15", "32.9496, 51.7339, -30.163, 0.15", "31.7893, 52.5406, -30.168, 0.15", "30.789, 53.1053, -30.1707, 0.15", "29.8184, 53.5946, -30.1729, 0.15", "28.4353, 54.2847, -30.1656, 0.15", "27.7314, 54.6129, -30.1599, 0.15", "26.545, 55.1459, -30.1415, 0.15", "25.1171, 55.7248, -30.0975, 0.15", "24.1892, 56.0735, -30.0415, 0.15", "22.8886, 56.541, -29.9528, 0.15", "20.6486, 66.2758, -33.6992, 0.15", "20.2657, 76.718, -36.1606, 0.15", "20.8173, 87.0302, -39.0508, 0.15", "19.9798, 97.6569, -40.471, 0.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "31.0976, 24.2467, -16.0615, 0.29", "31.3689, 25.0105, -15.7654, 0.29", "31.5102, 25.4022, -15.5966, 0.29", "31.766, 26.0845, -15.3057, 0.22", "31.9718, 26.5758, -15.1263, 0.22", "32.2987, 27.2664, -14.851, 0.29", "32.5226, 27.7463, -14.6604, 0.29", "32.6295, 27.9701, -14.5628, 0.29", "32.8796, 28.4427, -14.3528, 0.29", "33.2092, 28.9727, -14.1022, 0.22", "33.695, 29.6673, -13.7398, 0.22", "34.1117, 30.2459, -13.4031, 0.37", "34.4674, 30.779, -13.0873, 0.22", "34.9034, 31.4668, -12.637, 0.44", "35.3677, 32.2423, -12.0865, 0.29", "35.6392, 32.7546, -11.7097, 0.29", "35.808, 33.1405, -11.4309, 0.29", "35.9343, 33.5039, -11.1534, 0.22", "36.0211, 33.9043, -10.8482, 0.22", "36.044, 34.096, -10.7202, 0.22", "36.0702, 34.4609, -10.4923, 0.29", "36.1237, 35.036, -10.155, 0.29", "36.167, 35.424, -9.94153, 0.22", "36.2249, 35.9705, -9.67189, 0.22", "36.2651, 36.4676, -9.47373, 0.22", "36.296, 36.8374, -9.32274, 0.22", "36.344, 37.3202, -9.09233, 0.52", "36.4226, 37.9405, -8.75059, 0.52", "36.4807, 38.4214, -8.42597, 0.44", "36.529, 38.8716, -8.0705, 0.44", "36.5819, 39.4869, -7.51747, 0.37", "36.6381, 40.1367, -6.87258, 0.37", "36.7072, 40.7829, -6.16374, 0.29", "36.7732, 41.2328, -5.64359, 0.29", "36.8545, 41.6925, -5.08474, 0.29", "36.9551, 42.1804, -4.48536, 0.22", "37.0607, 42.6471, -3.96088, 0.22", "37.1517, 43.0077, -3.57247, 0.22", "37.2379, 43.3294, -3.21512, 0.22", "37.3688, 43.7694, -2.71126, 0.22", "37.4868, 44.1261, -2.26398, 0.22", "37.5815, 44.3959, -1.89309, 0.29", "37.7052, 44.777, -1.36225, 0.29", "37.8537, 45.3088, -0.639781, 0.44", "37.9757, 45.7531, -0.0284934, 0.44", "38.1477, 46.3105, 0.730524, 0.22", "38.2964, 46.7181, 1.28115, 0.22", "38.479, 47.1343, 1.83679, 0.29", "38.7666, 47.7157, 2.58032, 0.15", "39.067, 48.2726, 3.23605, 0.15", "39.3317, 48.732, 3.75918, 0.15", "39.5068, 49.0173, 4.0724, 0.15", "39.893, 49.6108, 4.71756, 0.15", "40.2069, 50.0632, 5.23056, 0.15", "40.522, 50.5066, 5.71569, 0.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "37.0448, 11.6028, 0.0, 0.44", "51.2661, 16.3728, 0.0, 0.44", "65.4875, 21.1428, 0.0, 0.44" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-10.3979, 5.09993, -3.88873, 0.74", "-11.6282, 6.08951, -4.66313, 0.74", "-12.9634, 7.16344, -5.50355, 0.81", "-13.9727, 7.97526, -6.13884, 0.29", "-15.1113, 8.89103, -6.85548, 0.15", "-22.1042, 18.7479, -13.5756, 0.15" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-10.3979, 5.09993, -3.88873, 0.44", "-10.1408, 5.72512, -3.34229, 0.44", "-9.77256, 6.65655, -2.69936, 0.44", "-9.471, 7.41943, -2.17278, 0.44", "-9.15839, 8.2102, -1.62695, 0.44", "-8.71369, 9.33513, -0.850461, 0.52", "-8.41013, 10.103, -0.320413, 0.74", "-8.04528, 10.903, 0.188249, 0.81" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-17.6691, 8.45778, -9.17437, 0.66", "-18.4325, 9.43054, -9.24975, 0.66", "-19.1815, 10.3761, -9.32367, 0.29", "-20.2904, 11.6743, -9.42296, 0.29", "-20.9442, 12.4556, -9.38348, 0.29", "-22.0226, 13.8537, -9.14194, 0.22", "-22.6672, 14.7493, -8.89676, 0.29", "-23.1308, 15.4309, -8.63422, 0.29", "-23.7129, 16.2361, -8.21006, 0.22", "-24.9134, 17.691, -7.26959, 0.07", "-25.6531, 18.584, -6.59612, 0.07", "-26.1701, 19.2393, -6.04749, 0.07", "-26.9704, 20.2932, -5.1923, 0.15", "-27.6567, 21.2032, -4.51415, 0.15", "-28.4788, 22.2371, -3.84293, 0.22", "-29.1732, 23.0164, -3.41987, 0.22", "-29.6973, 23.541, -3.13003, 0.22", "-30.2954, 24.1238, -2.80179, 0.44", "-30.7249, 24.5451, -2.565, 0.44", "-31.8544, 25.6604, -1.95678, 0.15", "-33.1438, 26.8963, -1.26492, 0.15", "-34.4636, 28.1084, -0.562899, 0.15", "-35.2207, 28.8005, -0.161558, 0.15", "-35.8177, 29.3651, 0.159163, 0.15", "-36.4738, 30.0127, 0.494155, 0.15", "-37.2455, 30.8157, 0.87541, 0.15", "-38.0332, 31.6572, 1.2547, 0.15", "-38.5332, 32.216, 1.55995, 0.15", "-39.1767, 32.922, 2.09258, 0.15", "-40.0496, 33.8268, 2.90073, 0.15", "-41.0874, 34.8335, 3.79698, 0.15", "-41.9567, 35.7154, 4.56865, 0.15", "-43.2056, 37.0422, 5.76326, 0.15", "-44.1934, 38.0974, 6.79606, 0.15", "-45.0136, 38.9744, 7.73638, 0.15", "-46.2374, 40.3803, 9.30276, 0.07", "-47.3567, 41.7168, 10.6897, 0.07", "-48.2927, 42.8354, 11.6396, 0.07" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-17.6691, 8.45778, -9.17437, 0.37", "-17.3081, 8.38772, -11.3037, 0.37", "-16.8914, 8.43133, -12.737, 0.37", "-16.4911, 8.50257, -13.9102, 0.37", "-16.1616, 8.56451, -14.8429, 0.37", "-15.7983, 8.65686, -16.0173, 0.37", "-15.5677, 8.74891, -16.8316, 0.37", "-15.2088, 8.99245, -18.0726, 0.37", "-14.9022, 9.32424, -19.3605, 0.37", "-14.7236, 9.72493, -20.4983, 0.29", "-14.6667, 10.3703, -22.0508, 0.29", "-14.7451, 10.8193, -23.1714, 0.29", "-14.8965, 11.1899, -24.1526, 0.22", "-15.1184, 11.5285, -24.9538, 0.22", "-15.4728, 11.9898, -25.9791, 0.22", "-16.0589, 12.7757, -27.6168, 0.37", "-16.6522, 13.6924, -29.5648, 0.29", "-17.0579, 14.4518, -31.1253, 0.29", "-17.3097, 15.1879, -32.509, 0.22", "-17.4221, 15.7641, -33.5087, 0.22", "-17.487, 16.3812, -34.5306, 0.29", "-17.5016, 17.513, -36.0567, 0.37", "-17.4861, 18.4512, -37.1592, 0.29", "-17.4536, 19.358, -38.1641, 0.22", "-17.3843, 20.4368, -39.2907, 0.22", "-17.3757, 21.0691, -39.8855, 0.22", "-17.4286, 21.8148, -40.5469, 0.29", "-17.5488, 22.7833, -41.312, 0.44", "-17.6965, 23.5553, -41.9005, 0.88", "-18.056, 25.215, -43.0493, 0.22", "-18.1932, 25.8371, -43.4261, 0.22", "-18.3883, 26.8118, -43.9867, 0.29", "-18.6066, 27.9576, -44.5971, 0.22", "-18.8849, 29.5781, -45.3797, 0.15", "-19.0959, 30.8124, -45.9525, 0.15", "-19.3089, 31.8266, -46.4067, 0.15", "-19.5629, 33.0638, -46.9357, 0.22", "-19.8245, 34.4425, -47.4964, 0.22", "-20.1438, 36.122, -48.1598, 0.22", "-20.2498, 36.6742, -48.4019, 0.22", "-20.4788, 37.8254, -48.8942, 0.22", "-20.698, 38.9339, -49.4202, 0.29", "-20.818, 39.4793, -49.6988, 0.22", "-20.962, 40.1518, -50.0693, 0.29", "-21.3294, 41.6974, -50.9358, 0.29", "-21.874, 43.9925, -52.1874, 0.22", "-22.2007, 45.3721, -52.9082, 0.22", "-22.5178, 46.5129, -53.4681, 0.15", "-22.8203, 47.4964, -53.9212, 0.15", "-23.13, 48.5016, -54.353, 0.15", "-23.5889, 49.9937, -54.9392, 0.15", "-24.0669, 51.4823, -55.4927, 0.15", "-24.5723, 53.2178, -55.9989, 0.22", "-24.723, 53.8056, -56.1501, 0.22", "-24.9222, 54.7735, -56.3338, 0.22", "-25.0616, 55.6761, -56.4446, 0.22", "-25.2573, 57.3012, -56.5631, 0.15", "-25.2992, 57.8261, -56.5853, 0.15", "-25.3616, 58.6954, -56.6232, 0.22", "-25.5504, 60.117, -56.7043, 0.22", "-25.7827, 61.11, -56.7784, 0.22", "-26.0804, 62.0549, -56.8448, 0.29", "-26.3612, 62.8213, -56.8802, 0.29", "-26.9539, 64.3438, -56.8489, 0.22", "-27.3495, 65.3648, -56.7276, 0.22", "-27.7674, 66.4861, -56.4921, 0.22", "-28.3304, 68.3468, -55.8048, 0.15", "-28.6224, 69.5301, -55.2074, 0.15", "-28.808, 70.5363, -54.5872, 0.15", "-28.9256, 71.8955, -53.5656, 0.15", "-28.8775, 72.9736, -52.6815, 0.22", "-28.5655, 74.6444, -51.1711, 0.29", "-28.4227, 75.1118, -50.7337, 0.29", "-28.2506, 75.5588, -50.3421, 0.22", "-27.8094, 76.5359, -49.5424, 0.22", "-27.4862, 77.1727, -49.0664, 0.22", "-26.7868, 78.5013, -48.1785, 0.22", "-26.0247, 79.9927, -47.2759, 0.15", "-25.3373, 81.4187, -46.438, 0.15", "-25.0362, 82.1104, -46.0441, 0.15", "-24.6239, 83.1341, -45.4986, 0.15", "-24.3355, 83.8937, -45.0827, 0.22", "-26.4647, 97.0446, -49.005, 0.22", "-26.0194, 110.511, -52.5763, 0.22", "-25.6693, 123.786, -56.8286, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-42.1773, 53.3678, 5.36411, 0.15", "-42.2659, 54.2632, 5.96529, 0.15", "-42.4806, 55.7762, 6.93909, 0.15", "-42.6234, 56.4735, 7.41594, 0.15", "-42.813, 57.2525, 7.96976, 0.22", "-43.2102, 58.7148, 8.98221, 0.15", "-43.4396, 59.4812, 9.52081, 0.22", "-43.9631, 61.0048, 10.5682, 0.15", "-44.5148, 62.4626, 11.5955, 0.15", "-44.8522, 63.3, 12.1903, 0.15", "-45.1997, 64.1232, 12.7937, 0.22", "-45.739, 65.271, 13.6233, 0.22", "-46.108, 65.9874, 14.1422, 0.15", "-46.8075, 67.2528, 15.0065, 0.15", "-47.3389, 68.1726, 15.6186, 0.15", "-48.1592, 69.5137, 16.5207, 0.15", "-49.0051, 70.838, 17.4301, 0.15", "-49.7101, 71.936, 18.179, 0.22", "-50.5623, 73.2362, 19.1114, 0.22", "-51.1129, 74.1063, 19.7043, 0.22", "-51.5892, 74.8549, 20.2189, 0.22", "-52.3288, 75.9877, 20.969, 0.15", "-53.3418, 77.5163, 21.9828, 0.15", "-54.0975, 78.6592, 22.7221, 0.15", "-55.0971, 80.1485, 23.6729, 0.22", "-56.0603, 81.5517, 24.5367, 0.22", "-57.2227, 83.1838, 25.5176, 0.15", "-57.8381, 83.9792, 25.973, 0.15" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-42.1773, 53.3678, 5.36411, 0.15", "-42.7463, 54.2166, 5.85786, 0.15", "-43.1647, 54.9551, 6.35906, 0.15", "-43.712, 55.978, 7.12737, 0.22", "-44.0876, 56.6716, 7.66992, 0.22", "-44.3778, 57.1981, 8.05844, 0.15", "-44.7843, 57.9217, 8.58555, 0.22", "-45.5882, 59.4281, 9.69141, 0.15", "-46.2795, 60.6691, 10.5698, 0.15", "-46.7315, 61.4618, 11.146, 0.15", "-47.203, 62.2688, 11.7443, 0.15", "-47.8438, 63.2761, 12.4919, 0.15", "-48.1362, 63.7417, 12.8211, 0.15", "-48.487, 64.3153, 13.1971, 0.22", "-49.125, 65.4681, 14.0041, 0.22", "-49.4039, 66.0405, 14.4118, 0.15", "-49.939, 67.2375, 15.2881, 0.15", "-50.3405, 68.2088, 16.0027, 0.15", "-50.7296, 69.1407, 16.731, 0.15", "-51.2159, 70.3003, 17.7468, 0.15", "-51.7668, 71.5648, 18.955, 0.15", "-52.2335, 72.5957, 20.0467, 0.15", "-52.8434, 73.7024, 21.3409, 0.15", "-53.4119, 74.5188, 22.4182, 0.15", "-54.1822, 75.4481, 23.783, 0.15", "-54.8711, 76.0778, 24.8579, 0.15", "-55.5209, 76.5358, 25.7732, 0.15", "-56.6811, 77.2767, 27.232, 0.07", "-57.8897, 77.9834, 28.6466, 0.07", "-59.0114, 78.6141, 29.8747, 0.07", "-60.4963, 79.3968, 31.3574, 0.07", "-61.7486, 80.0215, 32.5575, 0.07", "-63.1393, 80.7318, 33.8777, 0.07" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-15.6588, -69.0662, -32.6849, 0.15", "-16.3832, -70.3437, -32.6949, 0.15", "-16.682, -70.7824, -32.5768, 0.15", "-16.8738, -71.0579, -32.4401, 0.15", "-17.1997, -71.4721, -32.1813, 0.22", "-17.4375, -71.7614, -31.9892, 0.22", "-18.0009, -72.4395, -31.5144, 0.44", "-18.9564, -73.5603, -30.6266, 0.22", "-19.7963, -74.533, -29.8166, 0.15", "-20.552, -75.4019, -29.0642, 0.15", "-21.1332, -76.0517, -28.4776, 0.22", "-21.8985, -76.8972, -27.7039, 0.15", "-22.3671, -77.4438, -27.2167, 0.22" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-15.6588, -69.0662, -32.6849, 0.22", "-15.7298, -69.0755, -33.5163, 0.22", "-15.7936, -69.0947, -34.2992, 0.22", "-15.8303, -69.1114, -34.7683, 0.29", "-15.8962, -69.146, -35.6864, 0.29", "-15.9816, -69.1807, -36.885, 0.29", "-16.0727, -69.2119, -38.1472, 0.29", "-16.0882, -69.2151, -38.4346, 0.22", "-16.1232, -69.2181, -39.2423, 0.22", "-16.132, -69.2144, -39.6964, 0.22", "-16.1335, -69.2042, -40.1614, 0.22", "-16.143, -69.1682, -41.1625, 0.22", "-16.1819, -69.1157, -42.2336, 0.15", "-16.2489, -69.07, -43.056, 0.15", "-16.2813, -69.0563, -43.2931, 0.22", "-16.474, -68.997, -44.3548, 0.22", "-16.7088, -68.9495, -45.3347, 0.22", "-16.978, -68.901, -46.1994, 0.22", "-17.2525, -68.8639, -46.9525, 0.22", "-17.8301, -68.8159, -48.4714, 0.22", "-18.0105, -68.8109, -48.9418, 0.22", "-18.5652, -68.8065, -50.3278, 0.15", "-19.294, -68.8044, -52.1262, 0.22", "-19.6732, -68.8079, -53.0534, 0.22", "-20.2707, -68.8313, -54.5031, 0.15", "-20.6194, -68.8635, -55.3512, 0.15", "-20.8394, -68.8956, -55.9042, 0.15", "-21.1605, -68.9761, -56.7559, 0.15", "-21.5886, -69.1931, -57.9654, 0.15", "-22.0148, -69.508, -59.2723, 0.15", "-22.2081, -69.7125, -60.042, 0.15", "-22.2941, -69.8229, -60.4933, 0.15", "-22.3366, -69.8732, -60.7672, 0.15", "-22.4679, -70.0236, -61.6553, 0.07", "-22.6206, -70.1715, -62.708, 0.07", "-22.8392, -70.342, -64.1415, 0.15", "-22.9211, -70.3858, -64.6718, 0.15", "-23.021, -70.4042, -65.3151, 0.37", "-25.2005, -69.937, -71.9806, 0.37", "-26.2886, -69.9984, -78.9225, 0.37", "-26.8268, -68.9345, -85.8531, 0.37", "-27.3235, -69.0633, -92.8615, 0.37" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-0.676873, -31.0641, -15.8364, 0.44", "-1.39075, -32.0231, -15.478, 0.44", "-1.83958, -32.7241, -15.3319, 0.44", "-2.75336, -34.2858, -15.1874, 0.44", "-3.21917, -35.1692, -15.135, 0.66", "-3.83564, -36.3528, -15.0149, 0.29", "-4.55986, -37.6882, -14.7729, 0.37", "-5.17858, -38.7284, -14.5362, 0.37", "-5.56507, -39.354, -14.3745, 0.37", "-6.21653, -40.3649, -14.0369, 0.66", "-6.9398, -41.4067, -13.552, 0.44", "-7.87488, -42.603, -12.7961, 0.44", "-8.53105, -43.3457, -12.2752, 0.22", "-9.23084, -44.0946, -11.7301, 0.22", "-10.0562, -45.0091, -11.0663, 0.22", "-10.4777, -45.5206, -10.7299, 0.44", "-11.2068, -46.5995, -10.1177, 0.81", "-12.0823, -48.2013, -9.31299, 0.29", "-12.706, -49.5531, -8.65449, 0.22", "-13.1729, -50.7451, -8.06439, 0.22", "-13.4799, -51.6989, -7.60632, 0.22", "-13.7701, -52.761, -7.10646, 0.22", "-13.9049, -53.344, -6.84448, 0.22", "-14.2074, -54.9044, -6.09258, 0.29", "-14.4307, -56.1037, -5.50418, 0.59", "-14.5771, -56.8025, -5.15926, 0.59", "-14.8004, -57.696, -4.74751, 0.29", "-15.0156, -58.4126, -4.46446, 0.29", "-15.3286, -59.4219, -4.1315, 0.22", "-15.6332, -60.3176, -3.90508, 0.22", "-15.9469, -61.073, -3.71311, 0.29", "-16.5285, -62.2636, -3.36797, 0.22", "-17.0029, -63.1204, -3.07483, 0.22", "-17.6467, -64.0982, -2.70448, 0.29", "-18.6604, -65.4828, -2.13794, 0.22", "-19.2945, -66.3155, -1.74708, 0.22", "-19.7911, -66.9713, -1.39235, 0.29", "-20.6327, -68.1538, -0.700698, 0.22", "-21.3988, -69.339, 0.021923, 0.29", "-21.9338, -70.2214, 0.55084, 0.15", "-22.3853, -71.0417, 1.02366, 0.15", "-22.6285, -71.5513, 1.30539, 0.29", "-22.8984, -72.1926, 1.67666, 0.29", "-23.5143, -73.8763, 2.60536, 0.15", "-23.7314, -74.5505, 2.96973, 0.15", "-23.9652, -75.3041, 3.34701, 0.22", "-24.22, -76.1374, 3.7572, 0.22", "-24.4923, -77.0769, 4.22248, 0.22", "-24.9984, -78.8535, 5.10306, 0.15", "-25.2825, -80.0775, 5.6841, 0.15", "-25.5828, -81.663, 6.4516, 0.15", "-25.746, -82.6932, 6.98349, 0.15", "-25.8422, -83.4302, 7.39111, 0.15", "-25.9125, -84.5228, 8.01255, 0.15", "-25.9141, -85.6902, 8.70554, 0.15", "-25.9055, -86.1948, 9.01511, 0.22", "-25.8776, -87.7947, 10.0044, 0.07", "-25.8744, -88.8714, 10.6749, 0.07", "-25.9121, -90.0578, 11.4543, 0.07", "-25.9898, -90.9816, 12.1153, 0.15", "-26.2505, -92.4386, 13.2348, 0.07", "-26.3464, -92.8669, 13.5628, 0.15", "-26.6949, -94.1251, 14.5486, 0.15", "-27.0581, -95.2168, 15.437, 0.29", "-27.4793, -96.2601, 16.3404, 0.22", "-27.9813, -97.3652, 17.2942, 0.22", "-28.5126, -98.4845, 18.2184, 0.15", "-29.0063, -99.5425, 19.0812, 0.15", "-29.4341, -100.461, 19.7921, 0.15", "-29.9523, -101.593, 20.6446, 0.15", "-30.7224, -103.321, 21.9143, 0.15", "-31.1622, -104.268, 22.6423, 0.15", "-31.6922, -105.292, 23.4697, 0.15" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.676873, -31.0641, -15.8364, 0.44", "1.00029, -31.5822, -15.2828, 0.44", "1.88017, -31.8597, -15.1546, 0.52", "2.77201, -32.1442, -15.1225, 0.29", "3.35757, -32.3488, -15.1331, 0.22", "4.25772, -32.7014, -15.1766, 0.59", "4.88829, -32.95, -15.215, 1.18", "5.6034, -33.2028, -15.336, 0.29", "6.59291, -33.4793, -15.5278, 0.29", "7.39843, -33.6581, -15.7352, 0.37", "8.11625, -33.8023, -15.9715, 0.59", "8.44232, -33.8613, -16.0846, 0.59", "9.31655, -33.978, -16.4129, 0.29", "9.98551, -34.0354, -16.6621, 0.22", "10.8738, -34.1282, -16.9721, 0.22", "11.517, -34.2102, -17.1606, 0.22", "11.9238, -34.2668, -17.2665, 0.44", "12.532, -34.3715, -17.3993, 0.44", "13.3849, -34.5437, -17.506, 0.29", "14.5231, -34.777, -17.5528, 0.22", "15.1891, -34.9014, -17.5379, 0.29", "16.2425, -35.0907, -17.4887, 0.22", "16.9556, -35.2305, -17.4508, 0.22", "17.8414, -35.4273, -17.3995, 0.22", "18.5078, -35.6108, -17.3586, 0.59", "19.0961, -35.7918, -17.3252, 0.59", "20.0481, -36.125, -17.3153, 0.22", "20.6727, -36.3748, -17.3517, 0.44", "21.6196, -36.8005, -17.4803, 0.59", "22.9554, -37.4624, -17.7348, 0.22", "23.514, -37.7793, -17.8551, 0.22", "24.4648, -38.4009, -18.1043, 0.29", "25.3808, -39.0638, -18.4292, 0.22", "25.9786, -39.5579, -18.7038, 0.22", "26.5669, -40.1283, -19.0763, 0.44", "27.0172, -40.6469, -19.4629, 0.44", "27.3142, -41.0428, -19.7593, 0.59", "27.9002, -41.91, -20.4041, 0.66", "28.2033, -42.3667, -20.7655, 0.22", "28.892, -43.3156, -21.5999, 0.22", "29.4301, -44.0028, -22.2361, 0.22", "29.8545, -44.5194, -22.7023, 0.22", "30.3107, -45.1083, -23.1624, 0.22", "30.5327, -45.4493, -23.3577, 0.22", "30.9114, -46.1075, -23.6553, 0.29", "31.0991, -46.484, -23.7794, 0.29", "31.3176, -46.9771, -23.9551, 0.29", "31.5463, -47.5183, -24.2131, 0.29", "31.8799, -48.3973, -24.6989, 0.29", "32.2187, -49.3873, -25.3614, 0.29", "32.3202, -49.7436, -25.5951, 0.44", "32.6078, -50.6999, -26.2411, 0.37", "32.9315, -51.5673, -26.8761, 0.37", "33.0753, -51.8927, -27.1155, 0.37", "33.5598, -52.8654, -27.7907, 0.37", "34.4797, -54.5862, -28.831, 0.22", "34.8385, -55.2353, -29.1672, 0.22", "35.407, -56.2847, -29.5601, 0.22", "35.7992, -57.0412, -29.7873, 0.22", "36.1407, -57.6838, -29.9707, 0.29", "36.476, -58.2646, -30.1393, 0.29", "36.7039, -58.6203, -30.2755, 0.29", "37.2135, -59.4616, -30.6152, 0.22", "37.6909, -60.3149, -31.0112, 0.29", "38.1631, -61.1555, -31.4994, 0.22", "38.5934, -61.8504, -31.9463, 0.22", "38.7967, -62.147, -32.1369, 0.22", "39.1368, -62.5758, -32.3961, 0.29", "39.6508, -63.1618, -32.7308, 0.29", "40.1107, -63.6643, -32.9626, 0.29", "40.5648, -64.1479, -33.1568, 0.29", "41.0261, -64.6661, -33.3317, 0.22", "41.7717, -65.5274, -33.6327, 0.29", "42.4458, -66.3099, -33.8915, 0.22", "42.9144, -66.857, -34.0661, 0.22", "43.4698, -67.5491, -34.2865, 0.22", "43.9382, -68.1599, -34.4949, 0.29", "44.3341, -68.6957, -34.6896, 0.29", "44.9045, -69.5553, -35.008, 0.15", "45.4467, -70.426, -35.2988, 0.15", "45.7786, -71.0038, -35.4949, 0.22" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-8.04528, 10.903, 0.188249, 0.44", "-8.64088, 11.6862, 0.20447, 0.44", "-9.12683, 12.309, 0.1408, 0.37", "-9.94116, 13.3935, 0.00764722, 0.52", "-10.9909, 14.815, -0.185481, 0.37", "-12.0535, 16.2472, -0.34904, 0.29", "-12.9836, 17.4655, -0.462338, 0.29", "-14.2897, 19.0567, -0.637805, 0.66", "-15.1668, 20.0653, -0.793628, 0.29", "-16.0222, 21.0177, -1.01525, 0.29", "-16.6268, 21.6955, -1.2291, 0.29", "-17.4416, 22.5837, -1.56466, 0.52", "-18.1435, 23.3009, -1.86267, 0.44", "-19.3447, 24.421, -2.37435, 0.44", "-20.5019, 25.4772, -2.87207, 0.44", "-21.719, 26.6387, -3.40939, 0.29", "-22.9007, 27.8271, -3.95102, 0.22", "-23.4419, 28.4049, -4.19903, 0.22", "-24.6118, 29.6492, -4.75949, 0.22", "-25.1607, 30.2147, -5.01333, 0.22", "-26.0804, 31.1174, -5.38754, 0.22", "-26.7484, 31.7193, -5.67202, 0.29", "-27.5248, 32.3372, -5.99536, 0.29", "-29.1332, 33.4374, -6.56249, 0.22", "-30.122, 34.0279, -6.81198, 0.22", "-31.8992, 34.9903, -6.98829, 0.15", "-32.9992, 35.5408, -6.91032, 0.15", "-34.4484, 36.2708, -6.56557, 0.22", "-35.6795, 36.9046, -6.08994, 0.22", "-36.8032, 37.5146, -5.51055, 0.22", "-37.8574, 38.0764, -4.92219, 0.22", "-38.3892, 38.3647, -4.6204, 0.22", "-39.6722, 39.1564, -3.89265, 0.37", "-40.4984, 39.7092, -3.46798, 0.37", "-41.3322, 40.2805, -3.0632, 0.22", "-42.9104, 41.3573, -2.28753, 0.15", "-43.4509, 41.7417, -1.99835, 0.22", "-44.4726, 42.5128, -1.37482, 0.29", "-45.2166, 43.0996, -0.794376, 0.15", "-46.1477, 43.8328, 0.0834967, 0.15", "-46.7488, 44.2567, 0.705283, 0.29", "-47.5402, 44.8073, 1.6327, 0.29", "-48.2708, 45.2531, 2.52354, 0.37", "-49.1546, 45.6902, 3.61439, 0.37", "-49.7356, 45.9618, 4.32312, 0.15", "-50.5473, 46.3265, 5.18279, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-8.04528, 10.903, 0.188249, 0.37", "-7.83617, 11.9753, 0.36468, 0.37", "-7.70512, 13.3288, 0.628669, 0.29", "-7.66856, 14.4938, 0.821237, 0.52", "-7.7021, 15.236, 0.929972, 0.29", "-7.82014, 16.3196, 1.02259, 0.15", "-7.93749, 17.1886, 1.04029, 0.15", "-8.05278, 17.7319, 1.02586, 0.15", "-8.23719, 18.4724, 0.960529, 0.15", "-8.43864, 19.3841, 0.746109, 0.66", "-8.65541, 20.7241, 0.291052, 0.22", "-8.77496, 21.7639, -0.131768, 0.22", "-8.81856, 22.2654, -0.350075, 0.37", "-8.91734, 23.2497, -0.760277, 0.44", "-9.06243, 24.6305, -1.28921, 0.59", "-9.19388, 25.6784, -1.69018, 0.44", "-9.37867, 26.6984, -2.08578, 0.22", "-9.58348, 27.5901, -2.42665, 0.22", "-9.86226, 28.6307, -2.78908, 0.29", "-10.2242, 29.8659, -3.1271, 0.22", "-10.6214, 31.1101, -3.3711, 0.29", "-11.0901, 32.5549, -3.58036, 0.22", "-11.2388, 33.0354, -3.62258, 0.22", "-11.5949, 34.1664, -3.64634, 0.29", "-11.85, 34.99, -3.60099, 0.15", "-12.1743, 36.0245, -3.46199, 0.15", "-12.3727, 36.6977, -3.32543, 0.22", "-12.5607, 37.3044, -3.18347, 0.44", "-12.747, 37.8563, -3.07083, 0.22", "-12.9565, 38.4431, -2.99065, 0.22", "-13.3852, 39.6245, -2.8974, 0.22", "-13.6401, 40.3637, -2.8893, 0.22", "-13.9054, 41.1666, -2.90499, 0.22", "-14.0854, 41.7747, -2.94799, 0.29", "-14.2541, 42.4196, -2.9757, 0.29", "-14.4397, 43.1428, -3.00799, 0.29", "-14.662, 44.0307, -3.02841, 0.29", "-14.808, 44.7457, -3.05936, 0.29", "-15.0075, 46.0635, -3.12874, 0.22", "-15.1763, 47.2115, -3.18467, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-22.3671, -77.4438, -27.2167, 0.15", "-22.9569, -77.7086, -26.6115, 0.15", "-23.7699, -78.0895, -25.7514, 0.22", "-24.4818, -78.4497, -25.0218, 0.22", "-25.2779, -78.8699, -24.1887, 0.15", "-26.0587, -79.2835, -23.3599, 0.15", "-27.045, -79.8335, -22.3217, 0.15", "-27.7002, -80.2148, -21.6591, 0.15", "-28.2667, -80.5778, -21.1405, 0.15", "-29.0026, -81.115, -20.5227, 0.15", "-29.6703, -81.6565, -19.9932, 0.15", "-30.2621, -82.1534, -19.5485, 0.22", "-31.0182, -82.7574, -19.02, 0.22", "-31.9505, -83.5266, -18.3552, 0.22", "-32.5915, -84.0521, -17.8735, 0.15", "-33.1369, -84.4878, -17.4242, 0.29", "-33.983, -85.1123, -16.6321, 0.29", "-34.6197, -85.5327, -16.003, 0.15", "-35.1493, -85.862, -15.4667, 0.15", "-35.8786, -86.2892, -14.7409, 0.15", "-37.0634, -86.9658, -13.6606, 0.15", "-38.0158, -87.4974, -12.8615, 0.15", "-39.0268, -88.0493, -12.0693, 0.15", "-39.7953, -88.4846, -11.4934, 0.15", "-41.0097, -89.1914, -10.6942, 0.15", "-41.6947, -89.6141, -10.2875, 0.29", "-42.8706, -90.3924, -9.62135, 0.22", "-43.7399, -90.9975, -9.06813, 0.22", "-44.2311, -91.3542, -8.70567, 0.22", "-45.4006, -92.2458, -7.79366, 0.15", "-46.1391, -92.8635, -7.21008, 0.15", "-46.8982, -93.5623, -6.5958, 0.15", "-47.8711, -94.5518, -5.82282, 0.15", "-48.4747, -95.2069, -5.37619, 0.15", "-49.0553, -95.857, -4.97553, 0.22", "-50.148, -97.1107, -4.31948, 0.15", "-51.0142, -98.1388, -3.95284, 0.15", "-52.2036, -99.5849, -3.69927, 0.15", "-53.2363, -100.839, -3.67576, 0.15", "-53.7482, -101.449, -3.73876, 0.22", "-54.5297, -102.34, -3.94038, 0.15", "-55.5725, -103.476, -4.36378, 0.15", "-56.4756, -104.436, -4.82602, 0.15", "-57.1296, -105.106, -5.22627, 0.15", "-57.7607, -105.734, -5.63384, 0.15", "-58.7434, -106.711, -6.26711, 0.15", "-59.0419, -107.01, -6.445, 0.15", "-59.9465, -107.803, -6.81753, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-22.3671, -77.4438, -27.2167, 0.15", "-22.1999, -77.8151, -26.5742, 0.15", "-21.9737, -78.3171, -25.7054, 0.15", "-21.7594, -78.7929, -24.8821, 0.15", "-21.5803, -79.1906, -24.1938, 0.15", "-21.3386, -79.7271, -23.2653, 0.07", "-20.5152, -82.8457, -16.394, 0.07", "-18.6245, -85.837, -9.69468, 0.07", "-17.7969, -90.0922, -3.40153, 0.07", "-16.4243, -95.075, 2.26966, 0.07", "-15.3635, -99.6715, 8.30016, 0.07", "-13.0772, -104.168, 14.0325, 0.07", "-10.4601, -108.534, 19.7096, 0.07" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "45.7786, -71.0038, -35.4949, 0.15", "45.8249, -71.4889, -35.2564, 0.15", "45.8616, -71.8745, -35.0668, 0.15", "45.8998, -72.2753, -34.8697, 0.15", "45.9207, -72.4942, -34.762, 0.22", "46.6306, -76.1949, -32.5505, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "45.7786, -71.0038, -35.4949, 0.29", "46.3977, -71.4791, -35.8127, 0.29", "46.9983, -71.921, -36.0958, 0.37", "47.7384, -72.4585, -36.429, 0.29", "48.3973, -72.89, -36.7133, 0.07", "49.011, -73.2581, -36.9695, 0.15", "49.4711, -73.4805, -37.2026, 0.15", "49.8145, -73.6232, -37.3988, 0.22", "50.5198, -73.8812, -37.8336, 0.22", "51.382, -74.1349, -38.4323, 0.15", "52.0439, -74.3141, -38.9409, 0.29", "53.9767, -74.8293, -40.4776, 0.15", "54.6983, -75.0289, -41.0633, 0.15", "54.9404, -75.0994, -41.2621, 0.22", "55.6782, -75.3222, -41.8638, 0.15", "56.3929, -75.5683, -42.4312, 0.15", "56.9834, -75.8002, -42.873, 0.15", "57.6343, -76.1121, -43.3288, 0.22", "58.1708, -76.3734, -43.7531, 0.22", "58.7519, -76.673, -44.2549, 0.22", "59.0291, -76.8209, -44.5132, 0.37", "59.459, -77.0435, -44.9317, 0.37", "60.3931, -77.5309, -45.8757, 0.15", "61.2389, -78.0064, -46.7312, 0.15", "61.7368, -78.2774, -47.2182, 0.22", "62.3822, -78.591, -47.8092, 0.22", "62.6596, -78.695, -48.0296, 0.29", "63.1146, -78.8137, -48.3298, 0.15", "63.4882, -78.8759, -48.5351, 0.29", "64.5055, -79.0119, -49.0709, 0.15", "65.3697, -79.1143, -49.6149, 0.15", "65.9382, -79.1997, -50.0334, 0.15", "66.4976, -79.2956, -50.5593, 0.15", "66.8543, -79.3693, -50.9715, 0.15", "67.3372, -79.5022, -51.6163, 0.15", "67.749, -79.6887, -52.2193, 0.22", "68.0494, -79.8695, -52.6659, 0.37", "68.5856, -80.25, -53.4665, 0.37", "68.8571, -80.4404, -53.8246, 0.37", "69.2457, -80.7365, -54.2376, 0.37", "69.7626, -81.1976, -54.6293, 0.22", "70.4022, -81.9099, -54.9186, 0.22", "70.6064, -82.162, -54.9673, 0.22", "71.2813, -83.0205, -55.0307, 0.22", "72.8682, -84.9511, -55.1451, 0.15", "73.5376, -85.6825, -55.2119, 0.15", "74.1688, -86.2658, -55.3352, 0.15", "74.9795, -86.8887, -55.5258, 0.15", "75.8589, -87.4234, -55.8283, 0.22", "76.4208, -87.6899, -56.101, 0.22", "77.1831, -87.9918, -56.5491, 0.15", "78.0387, -88.2996, -57.0656, 0.15", "78.4082, -88.4415, -57.3083, 0.15", "79.1288, -88.767, -57.8063, 0.22", "79.9163, -89.1583, -58.3429, 0.22", "80.6929, -89.5869, -58.8348, 0.37", "81.6401, -90.1453, -59.4114, 0.15", "82.274, -90.5048, -59.7549, 0.22", "83.1024, -90.9645, -60.1437, 0.22", "83.662, -91.2761, -60.3652, 0.22", "84.3108, -91.625, -60.5972, 0.22", "85.4351, -92.1885, -60.9886, 0.15", "86.7552, -92.8211, -61.4116, 0.15", "87.6568, -93.2273, -61.7, 0.15", "88.3408, -93.5465, -61.9399, 0.15", "94.872, -97.5141, -65.6608, 0.15" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-50.5473, 46.3265, 5.18279, 0.22", "-50.8613, 46.5588, 5.9213, 0.22", "-51.6727, 47.2269, 7.28855, 0.22", "-52.6626, 48.1487, 8.65182, 0.22", "-53.4493, 48.9761, 9.59548, 0.22", "-53.9414, 49.5358, 10.1667, 0.66", "-54.3977, 50.0882, 10.6914, 0.66", "-55.2203, 51.2256, 11.5042, 0.22", "-55.6827, 51.9956, 11.9498, 0.22", "-56.0483, 52.81, 12.4011, 0.22", "-56.4395, 54.0417, 13.1269, 0.22", "-56.5594, 54.5732, 13.4791, 0.22", "-56.6766, 55.4693, 14.1072, 0.22", "-56.7332, 56.7384, 15.0877, 0.22", "-56.7342, 58.2188, 16.355, 0.15", "-56.7257, 58.8633, 16.9037, 0.22", "-56.6837, 59.9214, 17.7666, 0.22", "-56.6358, 60.672, 18.401, 0.15", "-56.5563, 61.8087, 19.392, 0.15", "-56.4969, 62.725, 20.1759, 0.15", "-56.4194, 63.6584, 21.0007, 0.22", "-56.3141, 64.6072, 21.8782, 0.22", "-56.1835, 65.5923, 22.779, 0.22", "-56.1315, 65.946, 23.1106, 0.22", "-56.0208, 66.8118, 23.841, 0.22", "-55.948, 67.5769, 24.4533, 0.22", "-55.9251, 68.1229, 24.9116, 0.22", "-55.934, 68.4823, 25.199, 0.22", "-55.9857, 69.2279, 25.7737, 0.22", "-56.1098, 70.4206, 26.6713, 0.44", "-56.1662, 70.8417, 26.9855, 0.22", "-56.5685, 72.9476, 28.5557, 0.15", "-56.8537, 73.9699, 29.3415, 0.15", "-57.1024, 74.672, 29.9156, 0.15", "-57.3947, 75.3586, 30.4916, 0.15", "-57.7166, 76.0275, 31.0756, 0.15", "-57.9419, 76.4486, 31.4443, 0.15", "-58.7126, 77.5851, 32.3925, 0.15", "-59.1365, 78.1268, 32.8482, 0.15", "-59.6271, 78.7197, 33.3555, 0.15", "-60.3537, 79.5553, 34.1086, 0.07" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-50.5473, 46.3265, 5.18279, 0.22", "-51.2758, 46.7015, 6.35841, 0.22", "-51.9738, 47.009, 7.22881, 0.22", "-53.1898, 47.5753, 8.48917, 0.15", "-54.3618, 48.1629, 9.53666, 0.15", "-55.1934, 48.5976, 10.2074, 0.22", "-55.9402, 48.9906, 10.7571, 0.15", "-56.8686, 49.4638, 11.2651, 0.15", "-57.7783, 49.9314, 11.6446, 0.15", "-58.5545, 50.3497, 11.8631, 0.15", "-59.206, 50.7334, 12.0064, 0.15", "-59.8711, 51.1857, 12.203, 0.15", "-60.7338, 51.7836, 12.5248, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-15.1763, 47.2115, -3.18467, 0.15", "-15.6929, 48.3709, -3.82304, 0.15", "-16.1172, 49.3232, -4.34736, 0.22", "-16.7683, 50.7842, -5.15178, 0.15", "-17.2966, 51.97, -5.80462, 0.15", "-17.838, 53.1848, -6.47349, 0.15", "-20.1543, 63.4462, -13.7356, 0.15", "-25.41, 72.709, -20.7753, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-15.1763, 47.2115, -3.18467, 0.22", "-14.9141, 48.8738, -3.26279, 0.22", "-14.6179, 50.6834, -3.17756, 0.15", "-14.4697, 51.651, -3.10402, 0.15", "-14.3183, 52.882, -2.98017, 0.22", "-14.2427, 53.7487, -2.87327, 0.15", "-14.2006, 54.6202, -2.75262, 0.15", "-14.2218, 55.6282, -2.52268, 0.22", "-14.329, 56.422, -2.3137, 0.22", "-14.5132, 57.1218, -2.14777, 0.22", "-14.7714, 57.8195, -2.01934, 0.29", "-15.0209, 58.3522, -1.92642, 0.29", "-15.2835, 58.8385, -1.85232, 0.29", "-15.765, 59.6152, -1.72265, 0.29", "-16.5656, 60.6761, -1.48226, 0.22", "-17.0773, 61.1821, -1.31464, 0.22", "-17.8277, 61.6813, -1.05485, 0.22", "-18.5221, 62.0856, -0.801702, 0.22", "-18.9138, 62.2728, -0.650422, 0.22", "-20.3861, 62.7686, -0.0757047, 0.15", "-22.0291, 63.0487, 0.537594, 0.15", "-23.3293, 63.1179, 1.00401, 0.15", "-26.8496, 71.8906, 4.34294, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-60.7338, 51.7836, 12.5248, 0.15", "-62.2709, 52.2071, 13.9405, 0.15", "-64.0435, 52.7655, 15.4258, 0.15", "-64.8027, 53.0225, 16.0894, 0.15", "-65.7189, 53.3156, 16.9123, 0.15", "-66.6779, 53.6067, 17.8079, 0.29", "-67.5037, 53.8713, 18.5725, 0.15", "-68.8519, 54.3347, 19.6919, 0.22", "-71.19, 55.1483, 21.5315, 0.15", "-72.6735, 55.6371, 22.7461, 0.15", "-73.5167, 55.9222, 23.4419, 0.15", "-74.6872, 56.345, 24.4484, 0.22", "-75.568, 56.6865, 25.225, 0.22", "-76.341, 57.0093, 25.9175, 0.15", "-77.2628, 57.4181, 26.8085, 0.15", "-78.1347, 57.8141, 27.8018, 0.37", "-79.005, 58.1696, 29.0497, 0.22", "-79.8306, 58.4369, 30.4905, 0.15", "-80.7053, 58.6595, 32.2325, 0.15", "-81.3749, 58.8081, 33.6495, 0.15", "-82.1964, 58.9611, 35.4535, 0.07", "-83.3421, 59.0956, 38.0662, 0.07", "-84.1297, 59.1265, 39.8278, 0.15", "-85.3793, 59.1018, 42.7105, 0.15", "-85.861, 59.0904, 43.8701, 0.22" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-60.7338, 51.7836, 12.5248, 0.22", "-61.4337, 51.6226, 12.1331, 0.22", "-62.075, 51.4497, 11.8212, 0.22", "-63.1065, 51.1582, 11.4066, 0.22", "-64.1788, 50.8762, 11.0543, 0.22", "-65.01, 50.7001, 10.8242, 0.22", "-66.3098, 50.4954, 10.5373, 0.29", "-67.1439, 50.3979, 10.4086, 0.22", "-67.8247, 50.3688, 10.3665, 0.44", "-68.4942, 50.3957, 10.4002, 0.44", "-69.3315, 50.4764, 10.5221, 0.29", "-70.5004, 50.6402, 10.7624, 0.29", "-71.1173, 50.7467, 10.9308, 0.22", "-71.6679, 50.8406, 11.1098, 0.22", "-72.6004, 50.9966, 11.4416, 0.29", "-73.4443, 51.1235, 11.8224, 0.22", "-74.2063, 51.2277, 12.2318, 0.22", "-74.6737, 51.2915, 12.5062, 0.22", "-75.0653, 51.356, 12.7405, 0.22", "-75.7544, 51.5055, 13.1425, 0.37", "-76.7663, 51.7844, 13.7493, 0.37", "-77.3106, 51.9519, 14.0577, 0.22", "-78.4553, 52.3061, 14.7176, 0.15", "-79.2906, 52.5513, 15.1808, 0.15", "-80.0927, 52.7753, 15.6305, 0.22", "-80.826, 52.9892, 16.0518, 0.22", "-81.4428, 53.1836, 16.431, 0.29", "-82.3158, 53.4581, 17.0343, 0.29", "-83.1466, 53.7208, 17.6323, 0.22", "-84.0625, 53.9775, 18.2579, 0.15", "-84.8816, 54.1877, 18.7613, 0.22", "-86.1227, 54.5071, 19.4311, 0.15", "-86.9592, 54.7211, 19.8344, 0.15", "-87.4658, 54.8413, 20.0449, 0.15", "-88.6044, 55.0931, 20.4994, 0.29", "-89.5185, 55.2845, 20.8344, 0.22", "-90.5736, 55.5168, 21.2247, 0.66", "-91.3506, 55.7076, 21.5284, 0.22", "-92.0303, 55.8924, 21.8369, 0.15", "-92.6872, 56.076, 22.1832, 0.15", "-93.6291, 56.3312, 22.7407, 0.15", "-94.585, 56.5743, 23.2752, 0.15", "-95.3673, 56.7543, 23.6552, 0.15", "-96.5015, 57.0158, 24.0959, 0.15", "-97.1347, 57.1445, 24.2912, 0.15", "-97.8098, 57.2626, 24.4675, 0.22", "-99.2625, 57.4809, 24.7878, 0.52", "-99.916, 57.5751, 24.9138, 0.52", "-101.548, 57.8372, 25.2132, 0.15", "-102.981, 58.0597, 25.4868, 0.15", "-103.822, 58.1816, 25.6781, 0.15", "-104.647, 58.2992, 25.8912, 0.37", "-105.235, 58.3683, 26.0756, 0.37", "-105.608, 58.4015, 26.158, 0.37", "-106.336, 58.4633, 26.1871, 0.22", "-106.873, 58.5235, 26.1153, 0.22", "-107.514, 58.5873, 25.9649, 0.44", "-108.128, 58.6389, 25.78, 0.59", "-109.535, 58.7417, 25.3746, 0.22", "-110.645, 58.8396, 25.0714, 0.22", "-111.455, 58.9379, 24.8748, 0.52", "-111.929, 59.0061, 24.7784, 0.52", "-112.805, 59.1372, 24.6643, 0.37", "-113.913, 59.3184, 24.6072, 0.29", "-114.59, 59.4588, 24.6202, 0.29", "-115.504, 59.7173, 24.6601, 0.59", "-116.164, 59.9935, 24.6542, 0.59", "-117.07, 60.4888, 24.5435, 0.22", "-117.688, 60.8908, 24.3697, 0.37", "-118.557, 61.5242, 23.9725, 0.22", "-119.143, 61.9979, 23.5789, 0.22", "-119.99, 62.7498, 22.9447, 0.15", "-120.777, 63.5017, 22.2583, 0.15", "-121.284, 64.0252, 21.7386, 0.15", "-121.767, 64.5335, 21.1811, 0.29", "-122.547, 65.3064, 20.219, 0.44", "-123.573, 66.1703, 18.9415, 0.15", "-132.256, 68.1312, 19.7382, 0.15" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_35", "dend_34", "dend_19", "dend_14", "dend_3", "dend_0", "dend_40", "dend_39", "dend_37", "dend_36", "dend_23", "dend_20", "dend_18", "dend_15", "dend_9", "dend_4", "dend_2", "dend_1", "dend_33", "dend_24", "dend_22", "dend_21", "dend_17", "dend_16", "dend_11", "dend_10", "dend_8", "dend_5", "dend_28", "dend_25", "dend_13", "dend_12", "dend_7", "dend_6", "dend_32", "dend_29", "dend_27", "dend_26", "dend_31", "dend_30" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_35", "dend_34", "dend_19", "dend_14", "dend_3", "dend_0", "dend_40", "dend_39", "dend_37", "dend_36", "dend_23", "dend_20", "dend_18", "dend_15", "dend_9", "dend_4", "dend_2", "dend_1", "dend_33", "dend_24", "dend_22", "dend_21", "dend_17", "dend_16", "dend_11", "dend_10", "dend_8", "dend_5", "dend_28", "dend_25", "dend_13", "dend_12", "dend_7", "dend_6", "dend_32", "dend_29", "dend_27", "dend_26", "dend_31", "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L1_DAC_56906d7a99_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_33, id: dend_33, parent: dend_23
create dend_33
public dend_33
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_35, dend_34, dend_19, dend_14, dend_3, dend_0, dend_40, dend_39, dend_37, dend_36, dend_23, dend_20, dend_18, dend_15, dend_9, dend_4, dend_2, dend_1, dend_33, dend_24, dend_22, dend_21, dend_17, dend_16, dend_11, dend_10, dend_8, dend_5, dend_28, dend_25, dend_13, dend_12, dend_7, dend_6, dend_32, dend_29, dend_27, dend_26, dend_31, dend_30]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_35, dend_34, dend_19, dend_14, dend_3, dend_0, dend_40, dend_39, dend_37, dend_36, dend_23, dend_20, dend_18, dend_15, dend_9, dend_4, dend_2, dend_1, dend_33, dend_24, dend_22, dend_21, dend_17, dend_16, dend_11, dend_10, dend_8, dend_5, dend_28, dend_25, dend_13, dend_12, dend_7, dend_6, dend_32, dend_29, dend_27, dend_26, dend_31, dend_30]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_37
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.45000004961815715)
    connect dend_35(0), soma_0(0.45000004961815715)
    connect dend_34(0), soma_0(0.45000004961815715)
    connect dend_19(0), soma_0(0.45000004961815715)
    connect dend_14(0), soma_0(0.45000004961815715)
    connect dend_3(0), soma_0(0.45000004961815715)
    connect dend_0(0), soma_0(0.45000004961815715)
    connect axon_0(0), soma_0(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_33(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -9.62751, -4.05177, 0.0, 3.56887 ) }
    soma_0 { pt3dadd( -8.71603, -3.74604, 0.0, 6.42125 ) }
    soma_0 { pt3dadd( -7.80455, -3.44032, 0.0, 9.26753 ) }
    soma_0 { pt3dadd( -6.89307, -3.1346, 0.0, 10.6041 ) }
    soma_0 { pt3dadd( -5.98159, -2.82887, 0.0, 11.4397 ) }
    soma_0 { pt3dadd( -5.07011, -2.52315, 0.0, 11.8423 ) }
    soma_0 { pt3dadd( -4.15863, -2.21743, 0.0, 12.0273 ) }
    soma_0 { pt3dadd( -3.24715, -1.91171, 0.0, 11.98 ) }
    soma_0 { pt3dadd( -2.33567, -1.60598, 0.0, 12.084 ) }
    soma_0 { pt3dadd( -1.42419, -1.30026, 0.0, 12.2195 ) }
    soma_0 { pt3dadd( -0.51271, -0.994538, 0.0, 12.0939 ) }
    soma_0 { pt3dadd( 0.39877, -0.688815, 0.0, 11.7876 ) }
    soma_0 { pt3dadd( 1.31025, -0.383092, 0.0, 11.7278 ) }
    soma_0 { pt3dadd( 2.22173, -0.0773693, 0.0, 12.0466 ) }
    soma_0 { pt3dadd( 3.13321, 0.228354, 0.0, 12.0335 ) }
    soma_0 { pt3dadd( 4.04469, 0.534076, 0.0, 11.0031 ) }
    soma_0 { pt3dadd( 4.95617, 0.839799, 0.0, 9.33458 ) }
    soma_0 { pt3dadd( 5.86765, 1.14552, 0.0, 8.15859 ) }
    soma_0 { pt3dadd( 6.77913, 1.45124, 0.0, 6.11155 ) }
    soma_0 { pt3dadd( 7.69061, 1.75697, 0.0, 4.38007 ) }
    soma_0 { pt3dadd( 8.60209, 2.06269, 0.0, 2.67949 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -8.21352, -4.1703, 8.11, 1.18 ) }
    dend_38 { pt3dadd( -7.47226, -3.09689, 10.8437, 1.18 ) }
    dend_38 { pt3dadd( -6.41343, -1.61733, 14.2817, 0.96 ) }
    dend_38 { pt3dadd( -4.93665, 0.467681, 18.7128, 0.52 ) }
    dend_38 { pt3dadd( -4.02184, 1.75928, 21.4578, 0.52 ) }
    dend_38 { pt3dadd( -3.34054, 2.72118, 23.502, 0.52 ) }
    dend_38 { pt3dadd( -2.70181, 3.62297, 25.4185, 0.52 ) }
    dend_38 { pt3dadd( -2.27542, 4.2625, 26.6438, 0.52 ) }
    dend_38 { pt3dadd( -1.96571, 4.7406, 27.5022, 0.52 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 30/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 4.28648, -4.9578, 11.45, 1.4 ) }
    dend_35 { pt3dadd( 4.28648, -4.9578, 11.45, 1.4 ) }
    dend_35 { pt3dadd( 5.07518, -5.54748, 11.8966, 1.18 ) }
    dend_35 { pt3dadd( 5.84498, -6.19214, 12.3616, 1.11 ) }
    dend_35 { pt3dadd( 6.47005, -6.79186, 12.7802, 1.11 ) }
    dend_35 { pt3dadd( 7.00104, -7.36673, 13.1437, 1.11 ) }
    dend_35 { pt3dadd( 7.70874, -8.18498, 13.5952, 0.88 ) }
    dend_35 { pt3dadd( 8.08402, -8.65369, 13.824, 0.74 ) }
    dend_35 { pt3dadd( 8.52539, -9.25945, 14.0586, 1.03 ) }
    dend_35 { pt3dadd( 9.00116, -9.96123, 14.3026, 1.03 ) }
    dend_35 { pt3dadd( 9.54557, -10.7871, 14.5999, 0.96 ) }
    dend_35 { pt3dadd( 10.0495, -11.53, 14.928, 0.59 ) }
    dend_35 { pt3dadd( 10.4881, -12.1461, 15.2647, 0.66 ) }
    dend_35 { pt3dadd( 10.8836, -12.7068, 15.638, 1.03 ) }
    dend_35 { pt3dadd( 11.2735, -13.3146, 16.0969, 1.11 ) }
    dend_35 { pt3dadd( 11.6533, -13.9853, 16.6926, 0.88 ) }
    dend_35 { pt3dadd( 11.9524, -14.6509, 17.3806, 0.74 ) }
    dend_35 { pt3dadd( 12.161, -15.2801, 18.0799, 0.59 ) }
    dend_35 { pt3dadd( 12.3091, -15.9508, 18.8216, 0.44 ) }
    dend_35 { pt3dadd( 12.4023, -16.547, 19.5088, 0.44 ) }
    dend_35 { pt3dadd( 12.4483, -17.0067, 20.0288, 0.44 ) }
    dend_35 { pt3dadd( 12.4739, -17.485, 20.5595, 0.44 ) }
    dend_35 { pt3dadd( 12.4792, -17.6087, 20.6858, 0.44 ) }
    dend_35 { pt3dadd( 12.5011, -17.9241, 21.0091, 0.59 ) }
    dend_35 { pt3dadd( 12.5725, -18.5171, 21.6356, 0.59 ) }
    dend_35 { pt3dadd( 12.6293, -18.8266, 21.9711, 0.59 ) }
    dend_35 { pt3dadd( 12.6913, -19.1273, 22.2879, 0.59 ) }
    dend_35 { pt3dadd( 12.8362, -19.7228, 22.912, 0.22 ) }
    dend_35 { pt3dadd( 12.975, -20.2543, 23.4875, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -6.27352, -5.4198, -12.0, 0.74 ) }
    dend_34 { pt3dadd( -6.88402, -4.58764, -12.9235, 0.74 ) }
    dend_34 { pt3dadd( -7.45265, -3.91789, -13.8582, 0.74 ) }
    dend_34 { pt3dadd( -8.28444, -3.07556, -15.3625, 0.74 ) }
    dend_34 { pt3dadd( -9.07069, -2.38767, -17.0301, 0.81 ) }
    dend_34 { pt3dadd( -9.70036, -1.84525, -18.7159, 0.81 ) }
    dend_34 { pt3dadd( -10.1741, -1.39313, -20.3678, 0.81 ) }
    dend_34 { pt3dadd( -10.4578, -1.06832, -22.2213, 0.81 ) }
    dend_34 { pt3dadd( -10.5301, -0.89996, -23.8484, 0.81 ) }
    dend_34 { pt3dadd( -10.4533, -0.771664, -25.9231, 0.96 ) }
    dend_34 { pt3dadd( -10.2767, -0.665319, -27.7122, 0.81 ) }
    dend_34 { pt3dadd( -10.0559, -0.54316, -29.2812, 0.81 ) }
    dend_34 { pt3dadd( -9.62613, -0.26322, -31.6129, 0.81 ) }
    dend_34 { pt3dadd( -9.22861, 0.0730401, -33.6362, 0.81 ) }
    dend_34 { pt3dadd( -8.80527, 0.537785, -35.8437, 0.81 ) }
    dend_34 { pt3dadd( -8.41335, 1.11333, -38.1308, 0.81 ) }
    dend_34 { pt3dadd( -8.13507, 1.72287, -40.2704, 0.81 ) }
    dend_34 { pt3dadd( -7.9599, 2.30304, -42.1503, 0.44 ) }
    dend_34 { pt3dadd( -7.82812, 3.05086, -44.3815, 0.44 ) }
    dend_34 { pt3dadd( -7.77517, 3.53411, -45.8285, 0.44 ) }
    dend_34 { pt3dadd( -7.76615, 3.75204, -46.5163, 0.44 ) }
    dend_34 { pt3dadd( -7.78482, 4.42838, -48.8589, 0.44 ) }
    dend_34 { pt3dadd( -7.81677, 4.74013, -49.8793, 0.44 ) }
    dend_34 { pt3dadd( -7.83142, 4.93213, -50.4844, 0.44 ) }
    dend_34 { pt3dadd( -7.74731, 5.22187, -51.2589, 0.44 ) }
    dend_34 { pt3dadd( -7.2029, 6.06484, -52.9931, 0.44 ) }
    dend_34 { pt3dadd( -6.5786, 6.79772, -54.1754, 0.44 ) }
    dend_34 { pt3dadd( -5.80815, 7.59751, -55.1301, 0.66 ) }
    dend_34 { pt3dadd( -4.71371, 8.7113, -56.2244, 0.88 ) }
    dend_34 { pt3dadd( -3.47845, 10.0491, -57.3349, 0.66 ) }
    dend_34 { pt3dadd( -2.00745, 11.8023, -58.5665, 0.59 ) }
    dend_34 { pt3dadd( -1.09986, 12.9738, -59.2509, 0.52 ) }
    dend_34 { pt3dadd( -3.38078E-4, 14.5085, -60.0351, 0.44 ) }
    dend_34 { pt3dadd( 0.311377, 14.9771, -60.2655, 0.59 ) }
    dend_34 { pt3dadd( 0.938029, 16.1015, -60.7266, 0.37 ) }
    dend_34 { pt3dadd( 1.44983, 17.2566, -61.1654, 0.81 ) }
    dend_34 { pt3dadd( 1.65884, 17.8495, -61.3612, 0.81 ) }
    dend_34 { pt3dadd( 1.92782, 18.9717, -61.7049, 0.59 ) }
    dend_34 { pt3dadd( 2.1983, 21.2578, -62.3575, 0.66 ) }
    dend_34 { pt3dadd( 2.32819, 22.5602, -62.7117, 0.29 ) }
    dend_34 { pt3dadd( 2.47513, 24.0955, -63.0857, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_34 { pt3dadd( 2.54822, 25.0556, -63.31, 0.29 ) }
    dend_34 { pt3dadd( 2.59981, 26.3163, -63.6166, 0.29 ) }
    dend_34 { pt3dadd( 2.52249, 27.7055, -63.9411, 0.66 ) }
    dend_34 { pt3dadd( 4.93184, 33.6991, -73.303, 0.66 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 4/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -7.00352, 1.0902, -3.56, 2.88 ) }
    dend_19 { pt3dadd( -7.00352, 1.0902, -3.56, 2.88 ) }
    dend_19 { pt3dadd( -7.88361, 1.1861, -4.4816, 2.88 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 7/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -8.02352, -4.3803, 4.81, 3.61 ) }
    dend_14 { pt3dadd( -8.02352, -4.3803, 4.81, 3.61 ) }
    dend_14 { pt3dadd( -9.02477, -4.50932, 5.22258, 2.95 ) }
    dend_14 { pt3dadd( -10.3103, -4.60299, 5.717, 2.21 ) }
    dend_14 { pt3dadd( -11.7561, -4.6067, 6.20193, 1.55 ) }
    dend_14 { pt3dadd( -12.8944, -4.60962, 6.58374, 1.55 ) }
    dend_14 { pt3dadd( -14.154, -4.61285, 7.00622, 1.25 ) }
    dend_14 { pt3dadd( -15.1545, -4.58431, 7.31877, 1.03 ) }
    dend_14 { pt3dadd( -15.8541, -4.51651, 7.50211, 1.03 ) }
    dend_14 { pt3dadd( -17.1922, -4.24734, 7.80092, 0.88 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 17/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -4.69352, -7.9083, -7.1, 3.83 ) }
    dend_3 { pt3dadd( -4.69352, -7.9083, -7.1, 3.83 ) }
    dend_3 { pt3dadd( -4.98966, -9.54482, -7.59142, 2.73 ) }
    dend_3 { pt3dadd( -5.25567, -11.0148, -8.03283, 2.58 ) }
    dend_3 { pt3dadd( -5.56191, -12.7071, -8.54101, 2.06 ) }
    dend_3 { pt3dadd( -5.84243, -14.2573, -9.00649, 1.92 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 23/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 8.23648, 4.1877, -1.29, 2.58 ) }
    dend_0 { pt3dadd( 8.23648, 4.1877, -1.29, 2.58 ) }
    dend_0 { pt3dadd( 9.82617, 4.78141, -1.99149, 1.47 ) }
    dend_0 { pt3dadd( 10.6331, 5.08397, -2.33924, 1.33 ) }
    dend_0 { pt3dadd( 11.8669, 5.52155, -2.82392, 0.96 ) }
    dend_0 { pt3dadd( 13.1891, 5.98432, -3.30227, 1.11 ) }
    dend_0 { pt3dadd( 14.6265, 6.46563, -3.78448, 0.96 ) }
    dend_0 { pt3dadd( 16.0179, 6.89928, -4.21659, 0.81 ) }
    dend_0 { pt3dadd( 16.8373, 7.12842, -4.45138, 0.59 ) }
    dend_0 { pt3dadd( 17.9177, 7.43755, -4.65322, 0.59 ) }
    dend_0 { pt3dadd( 18.6256, 7.66326, -4.70065, 0.88 ) }
    dend_0 { pt3dadd( 19.2512, 7.89987, -4.67342, 0.88 ) }
    dend_0 { pt3dadd( 20.1623, 8.29271, -4.48869, 0.81 ) }
    dend_0 { pt3dadd( 21.1611, 8.77121, -4.23199, 1.03 ) }
    dend_0 { pt3dadd( 22.2059, 9.33199, -3.97042, 0.52 ) }
    dend_0 { pt3dadd( 22.7859, 9.70577, -3.8328, 0.52 ) }
    dend_0 { pt3dadd( 23.6482, 10.3481, -3.68508, 0.52 ) }
    dend_0 { pt3dadd( 25.3516, 11.8167, -3.62757, 0.52 ) }
    dend_0 { pt3dadd( 26.1597, 12.5992, -3.80055, 0.74 ) }
    dend_0 { pt3dadd( 26.7892, 13.3048, -4.17924, 0.74 ) }
    dend_0 { pt3dadd( 27.1929, 13.8042, -4.68608, 0.74 ) }
    dend_0 { pt3dadd( 27.6087, 14.371, -5.45675, 0.37 ) }
    dend_0 { pt3dadd( 27.9627, 14.9451, -6.34648, 0.37 ) }
    dend_0 { pt3dadd( 28.241, 15.4673, -7.17966, 0.37 ) }
    dend_0 { pt3dadd( 28.5112, 15.9847, -7.97419, 0.37 ) }
    dend_0 { pt3dadd( 28.9402, 16.7354, -9.02356, 0.59 ) }
    dend_0 { pt3dadd( 29.1307, 17.0404, -9.40687, 0.59 ) }
    dend_0 { pt3dadd( 29.3403, 17.3861, -9.77469, 0.59 ) }
    dend_0 { pt3dadd( 29.6329, 17.9155, -10.2475, 0.44 ) }
    dend_0 { pt3dadd( 30.008, 18.6732, -10.8709, 0.44 ) }
    dend_0 { pt3dadd( 30.371, 19.5598, -11.5992, 0.29 ) }
    dend_0 { pt3dadd( 30.5998, 20.2701, -12.2018, 0.37 ) }
    dend_0 { pt3dadd( 30.7736, 20.865, -12.7156, 0.74 ) }
    dend_0 { pt3dadd( 30.8758, 21.2658, -13.0871, 0.74 ) }
    dend_0 { pt3dadd( 30.9926, 21.8945, -13.7061, 0.74 ) }
    dend_0 { pt3dadd( 31.073, 22.8694, -14.6743, 0.44 ) }
    dend_0 { pt3dadd( 31.0734, 23.4753, -15.313, 0.44 ) }
    dend_0 { pt3dadd( 31.0976, 24.2467, -16.0615, 0.44 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 61/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 8.60209, 2.06269, 0.0, 0.679432 ) }
    axon_0 { pt3dadd( 22.8234, 6.83273, 0.0, 0.679432 ) }
    axon_0 { pt3dadd( 37.0448, 11.6028, 0.0, 0.679432 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 64/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -1.96571, 4.7406, 27.5022, 0.29 ) }
    dend_40 { pt3dadd( -2.88256, 6.57115, 27.5965, 0.29 ) }
    dend_40 { pt3dadd( -3.63831, 8.09809, 28.0721, 0.29 ) }
    dend_40 { pt3dadd( -3.97113, 8.82562, 28.3612, 0.29 ) }
    dend_40 { pt3dadd( -4.46352, 9.96698, 28.8905, 0.29 ) }
    dend_40 { pt3dadd( -4.98382, 11.2169, 29.5667, 0.37 ) }
    dend_40 { pt3dadd( -5.62188, 12.6868, 30.3831, 0.37 ) }
    dend_40 { pt3dadd( -6.09168, 13.7573, 31.0993, 0.37 ) }
    dend_40 { pt3dadd( -6.55487, 14.7096, 31.8582, 0.22 ) }
    dend_40 { pt3dadd( -7.0169, 15.5703, 32.6165, 0.15 ) }
    dend_40 { pt3dadd( -7.47394, 16.4056, 33.3916, 0.15 ) }
    dend_40 { pt3dadd( -7.98097, 17.3488, 34.3243, 0.52 ) }
    dend_40 { pt3dadd( -8.2452, 17.8783, 34.8524, 0.29 ) }
    dend_40 { pt3dadd( -8.77391, 18.9286, 35.9905, 0.29 ) }
    dend_40 { pt3dadd( -9.29749, 19.8709, 37.0282, 0.29 ) }
    dend_40 { pt3dadd( -9.80556, 20.7477, 37.9123, 0.29 ) }
    dend_40 { pt3dadd( -10.2811, 21.5544, 38.6788, 0.29 ) }
    dend_40 { pt3dadd( -10.6715, 22.1751, 39.3, 0.44 ) }
    dend_40 { pt3dadd( -11.3204, 23.0896, 40.2133, 0.44 ) }
    dend_40 { pt3dadd( -12.1794, 24.1399, 41.1835, 0.59 ) }
    dend_40 { pt3dadd( -12.8645, 24.9031, 41.8703, 0.29 ) }
    dend_40 { pt3dadd( -13.8012, 25.8775, 42.7806, 0.29 ) }
    dend_40 { pt3dadd( -14.9385, 27.032, 43.9469, 0.29 ) }
    dend_40 { pt3dadd( -15.7948, 27.9193, 44.9454, 0.29 ) }
    dend_40 { pt3dadd( -16.3038, 28.4969, 45.6484, 0.29 ) }
    dend_40 { pt3dadd( -16.9005, 29.2995, 46.6241, 0.44 ) }
    dend_40 { pt3dadd( -17.3682, 30.0652, 47.5095, 0.59 ) }
    dend_40 { pt3dadd( -18.0301, 31.3817, 48.8369, 0.22 ) }
    dend_40 { pt3dadd( -18.5296, 32.5753, 49.8369, 0.22 ) }
    dend_40 { pt3dadd( -18.9314, 33.6652, 50.6817, 0.22 ) }
    dend_40 { pt3dadd( -19.4902, 35.3257, 51.8513, 0.22 ) }
    dend_40 { pt3dadd( -20.0856, 37.2099, 53.0531, 0.15 ) }
    dend_40 { pt3dadd( -20.3954, 38.2342, 53.6234, 0.15 ) }
    dend_40 { pt3dadd( -20.7924, 39.6362, 54.335, 0.15 ) }
    dend_40 { pt3dadd( -21.2767, 41.4299, 55.2369, 0.15 ) }
    dend_40 { pt3dadd( -21.5524, 42.5122, 55.7769, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_40 { pt3dadd( -21.8199, 43.7159, 56.5257, 0.15 ) }
    dend_40 { pt3dadd( -21.952, 44.4934, 57.1162, 0.22 ) }
    dend_40 { pt3dadd( -22.0164, 45.1058, 57.7457, 0.22 ) }
    dend_40 { pt3dadd( -22.0835, 46.0817, 58.858, 0.22 ) }
    dend_40 { pt3dadd( -22.1149, 46.8679, 59.7894, 0.22 ) }
    dend_40 { pt3dadd( -22.1399, 48.361, 61.7507, 0.22 ) }
    dend_40 { pt3dadd( -22.1221, 49.5871, 63.453, 0.22 ) }
    dend_40 { pt3dadd( -22.0578, 50.9528, 65.5781, 0.22 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 8/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -1.96571, 4.7406, 27.5022, 0.29 ) }
    dend_39 { pt3dadd( -1.8518, 4.94348, 26.8505, 0.29 ) }
    dend_39 { pt3dadd( -1.58334, 5.46263, 25.18, 0.37 ) }
    dend_39 { pt3dadd( -1.45889, 5.67145, 24.4675, 0.52 ) }
    dend_39 { pt3dadd( -1.19036, 6.01728, 23.0069, 0.52 ) }
    dend_39 { pt3dadd( -0.927193, 6.3005, 21.7894, 0.37 ) }
    dend_39 { pt3dadd( -0.606917, 6.57336, 20.5559, 0.37 ) }
    dend_39 { pt3dadd( -0.30013, 6.74828, 19.5495, 0.37 ) }
    dend_39 { pt3dadd( 0.064346, 6.90441, 18.4919, 0.22 ) }
    dend_39 { pt3dadd( 1.28071, 6.55913, 19.2608, 0.22 ) }
    dend_39 { pt3dadd( 3.87333, 5.99649, 20.8094, 0.22 ) }
    dend_39 { pt3dadd( 4.83197, 5.81991, 21.4638, 0.37 ) }
    dend_39 { pt3dadd( 6.31022, 5.58483, 22.6296, 0.22 ) }
    dend_39 { pt3dadd( 7.28063, 5.44244, 23.5123, 0.22 ) }
    dend_39 { pt3dadd( 7.87578, 5.37428, 24.1243, 0.22 ) }
    dend_39 { pt3dadd( 8.48814, 5.35118, 24.8088, 0.22 ) }
    dend_39 { pt3dadd( 9.06687, 5.37625, 25.4388, 0.22 ) }
    dend_39 { pt3dadd( 9.46172, 5.42039, 25.9541, 0.22 ) }
    dend_39 { pt3dadd( 9.91418, 5.48099, 26.6969, 0.22 ) }
    dend_39 { pt3dadd( 10.1341, 5.49251, 27.1352, 0.22 ) }
    dend_39 { pt3dadd( 10.5346, 5.49003, 27.9969, 0.22 ) }
    dend_39 { pt3dadd( 10.78, 5.46392, 28.6138, 0.22 ) }
    dend_39 { pt3dadd( 11.1478, 5.40625, 29.625, 0.22 ) }
    dend_39 { pt3dadd( 11.4565, 5.34963, 30.5374, 0.22 ) }
    dend_39 { pt3dadd( 11.6752, 5.30712, 31.2998, 0.22 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 33/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 12.975, -20.2543, 23.4875, 0.29 ) }
    dend_37 { pt3dadd( 13.5524, -20.572, 25.9972, 0.29 ) }
    dend_37 { pt3dadd( 14.0083, -20.8086, 27.6419, 0.29 ) }
    dend_37 { pt3dadd( 14.7337, -21.1142, 29.8153, 0.44 ) }
    dend_37 { pt3dadd( 15.3599, -21.3318, 31.4362, 0.44 ) }
    dend_37 { pt3dadd( 15.6338, -21.4253, 32.1025, 0.44 ) }
    dend_37 { pt3dadd( 15.9893, -21.5584, 32.9581, 0.44 ) }
    dend_37 { pt3dadd( 16.343, -21.7045, 33.7551, 0.44 ) }
    dend_37 { pt3dadd( 16.696, -21.8741, 34.4869, 0.37 ) }
    dend_37 { pt3dadd( 17.2604, -22.1623, 35.5974, 0.29 ) }
    dend_37 { pt3dadd( 17.7598, -22.4128, 36.652, 0.29 ) }
    dend_37 { pt3dadd( 18.1557, -22.6325, 37.6024, 0.29 ) }
    dend_37 { pt3dadd( 18.5461, -22.9302, 38.706, 0.29 ) }
    dend_37 { pt3dadd( 18.7343, -23.1233, 39.3208, 0.29 ) }
    dend_37 { pt3dadd( 18.972, -23.4065, 40.0761, 0.29 ) }
    dend_37 { pt3dadd( 19.1315, -23.6104, 40.4709, 0.29 ) }
    dend_37 { pt3dadd( 19.3481, -23.9024, 40.9097, 0.29 ) }
    dend_37 { pt3dadd( 19.6126, -24.2591, 41.3465, 0.29 ) }
    dend_37 { pt3dadd( 20.1406, -25.0085, 42.1851, 0.29 ) }
    dend_37 { pt3dadd( 20.5942, -25.6993, 42.958, 0.29 ) }
    dend_37 { pt3dadd( 21.2437, -26.6435, 44.0284, 0.22 ) }
    dend_37 { pt3dadd( 21.8455, -27.4265, 44.9732, 0.22 ) }
    dend_37 { pt3dadd( 22.2583, -27.9092, 45.5981, 0.22 ) }
    dend_37 { pt3dadd( 22.975, -28.691, 46.6688, 0.22 ) }
    dend_37 { pt3dadd( 23.5532, -29.3004, 47.5075, 0.22 ) }
    dend_37 { pt3dadd( 24.2861, -30.0016, 48.5697, 0.22 ) }
    dend_37 { pt3dadd( 25.1931, -30.7401, 49.858, 0.15 ) }
    dend_37 { pt3dadd( 26.151, -31.4759, 51.2146, 0.15 ) }
    dend_37 { pt3dadd( 26.5735, -31.8122, 51.8261, 0.15 ) }
    dend_37 { pt3dadd( 27.0219, -32.2099, 52.5305, 0.29 ) }
    dend_37 { pt3dadd( 27.5946, -32.8318, 53.6869, 0.29 ) }
    dend_37 { pt3dadd( 27.9413, -33.3554, 54.7688, 0.15 ) }
    dend_37 { pt3dadd( 28.2362, -34.0421, 56.3997, 0.15 ) }
    dend_37 { pt3dadd( 28.2926, -34.2563, 56.9877, 0.15 ) }
    dend_37 { pt3dadd( 28.4443, -34.8799, 58.8678, 0.15 ) }
    dend_37 { pt3dadd( 28.5698, -35.4654, 60.9127, 0.15 ) }
    dend_37 { pt3dadd( 28.6655, -35.89, 62.5315, 0.15 ) }
    dend_37 { pt3dadd( 28.8124, -36.4277, 64.5977, 0.29 ) }
    dend_37 { pt3dadd( 29.0488, -36.9965, 66.876, 0.29 ) }
    dend_37 { pt3dadd( 29.3382, -37.4875, 68.953, 0.29 ) }
    dend_37 { pt3dadd( 29.7788, -38.0507, 71.3259, 0.29 ) }
    dend_37 { pt3dadd( 30.1571, -38.4805, 73.0029, 0.07 ) }
    dend_37 { pt3dadd( 30.6549, -38.9913, 74.8622, 0.07 ) }
    dend_37 { pt3dadd( 31.4593, -39.7514, 77.4638, 0.07 ) }
    dend_37 { pt3dadd( 32.8215, -40.9678, 81.4373, 0.15 ) }
    dend_37 { pt3dadd( 33.021, -41.1491, 81.9957, 0.15 ) }
    dend_37 { pt3dadd( 33.2335, -41.362, 82.6222, 0.15 ) }
    dend_37 { pt3dadd( 33.4988, -41.6855, 83.6342, 0.15 ) }
    dend_37 { pt3dadd( 33.8003, -42.1517, 85.184, 0.15 ) }
    dend_37 { pt3dadd( 34.0134, -42.6375, 86.723, 0.15 ) }
    dend_37 { pt3dadd( 34.0631, -42.8406, 87.3141, 0.15 ) }
    dend_37 { pt3dadd( 34.1772, -43.9053, 90.4561, 0.15 ) }
    dend_37 { pt3dadd( 34.1923, -44.7355, 92.8156, 0.15 ) }
    dend_37 { pt3dadd( 34.1691, -45.2142, 94.0932, 0.15 ) }
    dend_37 { pt3dadd( 34.1034, -45.9211, 95.8902, 0.15 ) }
    dend_37 { pt3dadd( 34.0668, -46.2085, 96.6106, 0.15 ) }
    dend_37 { pt3dadd( 33.9818, -46.9545, 98.4501, 0.15 ) }
    dend_37 { pt3dadd( 33.9571, -47.5926, 99.8614, 0.15 ) }
    dend_37 { pt3dadd( 33.9784, -48.2065, 101.089, 0.15 ) }
    dend_37 { pt3dadd( 34.0069, -48.7193, 102.089, 0.15 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 93/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 12.975, -20.2543, 23.4875, 0.29 ) }
    dend_36 { pt3dadd( 13.0844, -20.6456, 24.1641, 0.29 ) }
    dend_36 { pt3dadd( 13.1315, -20.8763, 24.5874, 0.29 ) }
    dend_36 { pt3dadd( 13.1664, -21.6092, 26.0443, 0.29 ) }
    dend_36 { pt3dadd( 13.1303, -22.1036, 27.0438, 0.22 ) }
    dend_36 { pt3dadd( 13.0955, -22.3787, 27.5982, 0.22 ) }
    dend_36 { pt3dadd( 13.0634, -22.6583, 28.145, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_36 { pt3dadd( 13.0622, -22.8889, 28.5677, 0.22 ) }
    dend_36 { pt3dadd( 13.081, -23.4411, 29.469, 0.22 ) }
    dend_36 { pt3dadd( 13.0848, -23.8588, 30.0354, 0.22 ) }
    dend_36 { pt3dadd( 13.0861, -24.5613, 30.9113, 0.22 ) }
    dend_36 { pt3dadd( 13.089, -24.9353, 31.3118, 0.29 ) }
    dend_36 { pt3dadd( 13.1251, -25.8499, 32.2173, 0.29 ) }
    dend_36 { pt3dadd( 13.2017, -26.6076, 32.9408, 0.29 ) }
    dend_36 { pt3dadd( 13.3316, -27.3167, 33.5914, 0.52 ) }
    dend_36 { pt3dadd( 13.4988, -28.0015, 34.1812, 0.52 ) }
    dend_36 { pt3dadd( 13.6881, -28.6265, 34.7022, 0.52 ) }
    dend_36 { pt3dadd( 14.1894, -29.9631, 35.81, 0.22 ) }
    dend_36 { pt3dadd( 14.5942, -30.8524, 36.5378, 0.22 ) }
    dend_36 { pt3dadd( 14.8842, -31.373, 36.9437, 0.29 ) }
    dend_36 { pt3dadd( 15.393, -32.1793, 37.5409, 0.29 ) }
    dend_36 { pt3dadd( 16.1364, -33.3173, 38.2847, 0.22 ) }
    dend_36 { pt3dadd( 16.722, -34.2384, 38.8284, 0.22 ) }
    dend_36 { pt3dadd( 17.1457, -34.9496, 39.1809, 0.22 ) }
    dend_36 { pt3dadd( 17.4498, -35.483, 39.4548, 0.22 ) }
    dend_36 { pt3dadd( 17.8324, -36.1619, 39.8562, 0.22 ) }
    dend_36 { pt3dadd( 18.185, -36.7464, 40.2408, 0.22 ) }
    dend_36 { pt3dadd( 18.6337, -37.4565, 40.7646, 0.22 ) }
    dend_36 { pt3dadd( 19.2201, -38.3848, 41.5216, 0.22 ) }
    dend_36 { pt3dadd( 19.6215, -39.0151, 42.0753, 0.22 ) }
    dend_36 { pt3dadd( 19.9934, -39.6473, 42.6338, 0.22 ) }
    dend_36 { pt3dadd( 20.3231, -40.2598, 43.1566, 0.29 ) }
    dend_36 { pt3dadd( 20.7575, -41.07, 43.8037, 0.29 ) }
    dend_36 { pt3dadd( 21.0182, -41.5372, 44.173, 0.22 ) }
    dend_36 { pt3dadd( 21.5414, -42.4197, 44.8592, 0.22 ) }
    dend_36 { pt3dadd( 22.0917, -43.2535, 45.4995, 0.22 ) }
    dend_36 { pt3dadd( 22.8172, -44.2613, 46.2984, 0.22 ) }
    dend_36 { pt3dadd( 23.5787, -45.2388, 47.1451, 0.15 ) }
    dend_36 { pt3dadd( 24.4367, -46.2885, 48.1332, 0.15 ) }
    dend_36 { pt3dadd( 24.8987, -46.8575, 48.7102, 0.22 ) }
    dend_36 { pt3dadd( 25.3257, -47.4338, 49.2667, 0.22 ) }
    dend_36 { pt3dadd( 25.892, -48.228, 49.9718, 0.22 ) }
    dend_36 { pt3dadd( 26.2923, -48.8446, 50.482, 0.22 ) }
    dend_36 { pt3dadd( 26.7889, -49.7244, 51.1661, 0.22 ) }
    dend_36 { pt3dadd( 27.2097, -50.53, 51.784, 0.22 ) }
    dend_36 { pt3dadd( 27.9093, -51.8948, 52.8469, 0.22 ) }
    dend_36 { pt3dadd( 28.3668, -52.7681, 53.5797, 0.22 ) }
    dend_36 { pt3dadd( 29.1278, -54.0666, 54.7608, 0.22 ) }
    dend_36 { pt3dadd( 29.8746, -55.2051, 55.9172, 0.22 ) }
    dend_36 { pt3dadd( 30.4552, -55.9855, 56.8073, 0.22 ) }
    dend_36 { pt3dadd( 30.8788, -56.4665, 57.4635, 0.15 ) }
    dend_36 { pt3dadd( 31.7907, -57.454, 58.9488, 0.15 ) }
    dend_36 { pt3dadd( 32.518, -58.2576, 60.1893, 0.15 ) }
    dend_36 { pt3dadd( 33.2434, -59.0377, 61.3795, 0.15 ) }
    dend_36 { pt3dadd( 34.3042, -60.0925, 63.0417, 0.15 ) }
    dend_36 { pt3dadd( 35.5621, -61.2538, 64.9028, 0.15 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 49/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -7.88361, 1.1861, -4.4816, 1.11 ) }
    dend_23 { pt3dadd( -8.57759, 2.26638, -4.31796, 1.11 ) }
    dend_23 { pt3dadd( -9.2535, 3.31853, -4.15858, 0.74 ) }
    dend_23 { pt3dadd( -9.78486, 4.1457, -4.03328, 0.74 ) }
    dend_23 { pt3dadd( -10.211, 4.80894, -3.93281, 0.74 ) }
    dend_23 { pt3dadd( -10.3979, 5.09993, -3.88873, 0.74 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 55/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -7.88361, 1.1861, -4.4816, 0.81 ) }
    dend_20 { pt3dadd( -9.64092, 1.57413, -5.7017, 0.81 ) }
    dend_20 { pt3dadd( -10.7076, 1.89562, -6.33857, 0.52 ) }
    dend_20 { pt3dadd( -11.2484, 2.12449, -6.61945, 0.66 ) }
    dend_20 { pt3dadd( -12.0319, 2.59205, -6.98781, 0.37 ) }
    dend_20 { pt3dadd( -13.1437, 3.38918, -7.51384, 0.22 ) }
    dend_20 { pt3dadd( -13.7137, 3.83979, -7.77786, 0.44 ) }
    dend_20 { pt3dadd( -14.4065, 4.4916, -8.03837, 0.37 ) }
    dend_20 { pt3dadd( -15.3422, 5.47422, -8.35874, 0.96 ) }
    dend_20 { pt3dadd( -16.4082, 6.69482, -8.72925, 0.37 ) }
    dend_20 { pt3dadd( -17.035, 7.50108, -8.95633, 0.37 ) }
    dend_20 { pt3dadd( -17.6691, 8.45778, -9.17437, 0.66 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 67/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -17.1922, -4.24734, 7.80092, 0.59 ) }
    dend_18 { pt3dadd( -18.2783, -4.35702, 7.40474, 0.59 ) }
    dend_18 { pt3dadd( -20.0811, -4.62907, 6.77078, 0.52 ) }
    dend_18 { pt3dadd( -22.0646, -5.06389, 6.18176, 0.66 ) }
    dend_18 { pt3dadd( -23.3041, -5.36551, 5.80283, 0.52 ) }
    dend_18 { pt3dadd( -24.1278, -5.55189, 5.56086, 0.52 ) }
    dend_18 { pt3dadd( -25.389, -5.82267, 5.2124, 0.66 ) }
    dend_18 { pt3dadd( -26.6455, -6.10747, 4.9074, 0.44 ) }
    dend_18 { pt3dadd( -28.6988, -6.61989, 4.45844, 0.37 ) }
    dend_18 { pt3dadd( -30.1021, -6.97966, 4.19271, 0.52 ) }
    dend_18 { pt3dadd( -31.1793, -7.2776, 3.94916, 0.59 ) }
    dend_18 { pt3dadd( -32.3953, -7.63992, 3.62869, 0.52 ) }
    dend_18 { pt3dadd( -33.5493, -7.99193, 3.30416, 0.66 ) }
    dend_18 { pt3dadd( -34.5254, -8.28796, 2.95927, 0.44 ) }
    dend_18 { pt3dadd( -35.8483, -8.70008, 2.37773, 0.59 ) }
    dend_18 { pt3dadd( -37.0496, -9.10811, 1.85207, 0.59 ) }
    dend_18 { pt3dadd( -38.3207, -9.56527, 1.26349, 0.37 ) }
    dend_18 { pt3dadd( -39.208, -9.85235, 0.847308, 0.37 ) }
    dend_18 { pt3dadd( -40.6975, -10.2648, 0.173281, 0.37 ) }
    dend_18 { pt3dadd( -42.1663, -10.5988, -0.414399, 0.29 ) }
    dend_18 { pt3dadd( -43.5212, -10.8268, -0.931512, 0.22 ) }
    dend_18 { pt3dadd( -44.7481, -11.0064, -1.34295, 0.22 ) }
    dend_18 { pt3dadd( -45.807, -11.1489, -1.67065, 0.22 ) }
    dend_18 { pt3dadd( -46.566, -11.2103, -1.89853, 0.22 ) }
    dend_18 { pt3dadd( -47.3814, -11.2472, -2.11192, 0.22 ) }
    dend_18 { pt3dadd( -48.6003, -11.2882, -2.44129, 0.22 ) }
    dend_18 { pt3dadd( -49.5388, -11.3206, -2.78641, 0.29 ) }
    dend_18 { pt3dadd( -50.5923, -11.3827, -3.21367, 0.29 ) }
    dend_18 { pt3dadd( -51.961, -11.4857, -3.83484, 0.22 ) }
    dend_18 { pt3dadd( -52.6468, -11.5493, -4.17338, 0.22 ) }
    dend_18 { pt3dadd( -53.8818, -11.6721, -4.80794, 0.22 ) }
    dend_18 { pt3dadd( -55.1993, -11.8742, -5.44713, 0.22 ) }
    dend_18 { pt3dadd( -56.0034, -12.0367, -5.86859, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_18 { pt3dadd( -56.793, -12.2279, -6.30076, 0.22 ) }
    dend_18 { pt3dadd( -57.8367, -12.5181, -6.90963, 0.22 ) }
    dend_18 { pt3dadd( -58.2536, -12.6204, -7.17262, 0.22 ) }
    dend_18 { pt3dadd( -59.5933, -12.854, -7.93544, 0.22 ) }
    dend_18 { pt3dadd( -61.3855, -13.1038, -8.86647, 0.15 ) }
    dend_18 { pt3dadd( -63.5615, -13.3965, -9.94195, 0.15 ) }
    dend_18 { pt3dadd( -64.7413, -13.5516, -10.4736, 0.29 ) }
    dend_18 { pt3dadd( -66.4721, -13.7903, -11.213, 0.37 ) }
    dend_18 { pt3dadd( -68.6689, -14.1291, -12.1027, 0.07 ) }
    dend_18 { pt3dadd( -69.9943, -14.3375, -12.612, 0.15 ) }
    dend_18 { pt3dadd( -71.0357, -14.5293, -12.9417, 0.29 ) }
    dend_18 { pt3dadd( -72.2799, -14.8115, -13.2849, 0.29 ) }
    dend_18 { pt3dadd( -73.4287, -15.1082, -13.5898, 0.29 ) }
    dend_18 { pt3dadd( -74.7167, -15.5326, -13.9852, 0.52 ) }
    dend_18 { pt3dadd( -76.1884, -16.1186, -14.5925, 0.22 ) }
    dend_18 { pt3dadd( -77.0751, -16.4624, -14.9916, 0.22 ) }
    dend_18 { pt3dadd( -78.2465, -16.9023, -15.5283, 0.29 ) }
    dend_18 { pt3dadd( -79.1934, -17.2457, -15.9322, 0.29 ) }
    dend_18 { pt3dadd( -80.6549, -17.7551, -16.4505, 0.22 ) }
    dend_18 { pt3dadd( -81.4228, -18.0359, -16.6918, 0.22 ) }
    dend_18 { pt3dadd( -82.648, -18.5008, -17.029, 0.22 ) }
    dend_18 { pt3dadd( -83.8309, -18.9857, -17.3122, 0.29 ) }
    dend_18 { pt3dadd( -84.9867, -19.4908, -17.525, 0.29 ) }
    dend_18 { pt3dadd( -86.3701, -20.1165, -17.7043, 0.37 ) }
    dend_18 { pt3dadd( -87.8542, -20.7878, -17.823, 0.22 ) }
    dend_18 { pt3dadd( -88.8992, -21.2894, -17.9011, 0.22 ) }
    dend_18 { pt3dadd( -89.8934, -21.8016, -18.0083, 0.22 ) }
    dend_18 { pt3dadd( -90.8281, -22.2983, -18.116, 0.22 ) }
    dend_18 { pt3dadd( -91.2324, -22.5266, -18.169, 0.22 ) }
    dend_18 { pt3dadd( -92.1541, -23.045, -18.2972, 0.29 ) }
    dend_18 { pt3dadd( -93.2839, -23.6661, -18.4735, 0.22 ) }
    dend_18 { pt3dadd( -94.1024, -24.0548, -18.6769, 0.22 ) }
    dend_18 { pt3dadd( -94.9888, -24.4044, -18.9412, 0.22 ) }
    dend_18 { pt3dadd( -96.5666, -24.9363, -19.4659, 0.29 ) }
    dend_18 { pt3dadd( -98.158, -25.4262, -20.0417, 0.22 ) }
    dend_18 { pt3dadd( -99.2526, -25.7292, -20.4578, 0.22 ) }
    dend_18 { pt3dadd( -101.354, -26.1724, -21.3034, 0.22 ) }
    dend_18 { pt3dadd( -103.071, -26.4558, -22.0358, 0.22 ) }
    dend_18 { pt3dadd( -105.126, -26.6611, -22.9483, 0.22 ) }
    dend_18 { pt3dadd( -106.018, -26.7013, -23.3323, 0.22 ) }
    dend_18 { pt3dadd( -107.197, -26.7142, -23.8351, 0.29 ) }
    dend_18 { pt3dadd( -109.499, -26.6793, -24.796, 0.22 ) }
    dend_18 { pt3dadd( -110.531, -26.6504, -25.2238, 0.22 ) }
    dend_18 { pt3dadd( -112.169, -26.5779, -25.944, 0.22 ) }
    dend_18 { pt3dadd( -113.677, -26.537, -26.5783, 0.15 ) }
    dend_18 { pt3dadd( -115.055, -26.5437, -27.1512, 0.15 ) }
    dend_18 { pt3dadd( -115.855, -26.5889, -27.4926, 0.15 ) }
    dend_18 { pt3dadd( -116.85, -26.7056, -27.9111, 0.15 ) }
    dend_18 { pt3dadd( -117.949, -26.8707, -28.3677, 0.15 ) }
    dend_18 { pt3dadd( -119.479, -27.1882, -29.0226, 0.15 ) }
    dend_18 { pt3dadd( -120.228, -27.3566, -29.3363, 0.15 ) }
    dend_18 { pt3dadd( -121.701, -27.6904, -29.9459, 0.15 ) }
    dend_18 { pt3dadd( -122.899, -27.9577, -30.4931, 0.66 ) }
    dend_18 { pt3dadd( -123.824, -28.1577, -30.9707, 0.22 ) }
    dend_18 { pt3dadd( -125.333, -28.5021, -31.7858, 0.22 ) }
    dend_18 { pt3dadd( -126.496, -28.7593, -32.4354, 0.29 ) }
    dend_18 { pt3dadd( -127.603, -29.0077, -33.0533, 0.37 ) }
    dend_18 { pt3dadd( -128.926, -29.3482, -33.8505, 0.22 ) }
    dend_18 { pt3dadd( -129.802, -29.5863, -34.4293, 0.22 ) }
    dend_18 { pt3dadd( -130.993, -29.9177, -35.2571, 0.22 ) }
    dend_18 { pt3dadd( -132.081, -30.2215, -36.0255, 0.15 ) }
    dend_18 { pt3dadd( -133.241, -30.5603, -36.8211, 0.22 ) }
    dend_18 { pt3dadd( -134.13, -30.8375, -37.3944, 0.15 ) }
    dend_18 { pt3dadd( -135.459, -31.2226, -38.1332, 0.15 ) }
    dend_18 { pt3dadd( -136.148, -31.4067, -38.4944, 0.22 ) }
    dend_18 { pt3dadd( -136.523, -31.5149, -38.7134, 0.22 ) }
    dend_18 { pt3dadd( -137.689, -31.9114, -39.4475, 0.22 ) }
    dend_18 { pt3dadd( -138.334, -32.1732, -39.8847, 0.22 ) }
    dend_18 { pt3dadd( -139.992, -32.8944, -41.0752, 0.52 ) }
    dend_18 { pt3dadd( -141.171, -33.4453, -41.9949, 0.22 ) }
    dend_18 { pt3dadd( -142.615, -34.1421, -43.1671, 0.29 ) }
    dend_18 { pt3dadd( -143.695, -34.6806, -44.0664, 0.22 ) }
    dend_18 { pt3dadd( -144.903, -35.3255, -45.0725, 0.22 ) }
    dend_18 { pt3dadd( -146.162, -36.0421, -46.0812, 0.22 ) }
    dend_18 { pt3dadd( -147.099, -36.6322, -46.8287, 0.22 ) }
    dend_18 { pt3dadd( -147.861, -37.137, -47.3432, 0.22 ) }
    dend_18 { pt3dadd( -148.141, -37.3261, -47.4946, 0.22 ) }
    dend_18 { pt3dadd( -149.194, -38.0593, -47.9986, 0.22 ) }
    dend_18 { pt3dadd( -150.297, -38.8735, -48.4764, 0.22 ) }
    dend_18 { pt3dadd( -151.07, -39.4837, -48.7937, 0.22 ) }
    dend_18 { pt3dadd( -151.907, -40.182, -49.1478, 0.22 ) }
    dend_18 { pt3dadd( -152.69, -40.8727, -49.5484, 0.22 ) }
    dend_18 { pt3dadd( -153.472, -41.5956, -50.0177, 0.22 ) }
    dend_18 { pt3dadd( -153.647, -41.7574, -50.1458, 0.22 ) }
    dend_18 { pt3dadd( -154.425, -42.4479, -50.7657, 0.22 ) }
    dend_18 { pt3dadd( -155.173, -43.109, -51.365, 0.29 ) }
    dend_18 { pt3dadd( -155.975, -43.8259, -52.0755, 0.29 ) }
    dend_18 { pt3dadd( -156.741, -44.5148, -52.7442, 0.22 ) }
    dend_18 { pt3dadd( -157.747, -45.4232, -53.6751, 0.22 ) }
    dend_18 { pt3dadd( -158.613, -46.1275, -54.4675, 0.22 ) }
    dend_18 { pt3dadd( -159.33, -46.6206, -55.1115, 0.22 ) }
    dend_18 { pt3dadd( -160.34, -47.1744, -55.9869, 0.22 ) }
    dend_18 { pt3dadd( -161.23, -47.5561, -56.7436, 0.15 ) }
    dend_18 { pt3dadd( -162.667, -48.0932, -58.0369, 0.15 ) }
    dend_18 { pt3dadd( -163.786, -48.5046, -59.082, 0.15 ) }
    dend_18 { pt3dadd( -164.728, -48.8296, -60.0025, 0.22 ) }
    dend_18 { pt3dadd( -165.618, -49.1003, -60.8632, 0.22 ) }
    dend_18 { pt3dadd( -167.435, -49.6155, -62.585, 0.15 ) }
    dend_18 { pt3dadd( -168.591, -49.9459, -63.6897, 0.22 ) }
    dend_18 { pt3dadd( -169.76, -50.3044, -64.7836, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_18 { pt3dadd( -171.227, -50.8009, -66.1246, 0.15 ) }
    dend_18 { pt3dadd( -172.197, -51.1457, -66.9577, 0.22 ) }
    dend_18 { pt3dadd( -173.37, -51.5708, -67.8819, 0.29 ) }
    dend_18 { pt3dadd( -174.756, -52.0963, -68.8748, 0.15 ) }
    dend_18 { pt3dadd( -175.786, -52.4842, -69.5319, 0.15 ) }
    dend_18 { pt3dadd( -177.302, -53.0764, -70.4222, 0.15 ) }
    dend_18 { pt3dadd( -178.597, -53.5923, -71.0951, 0.07 ) }
    dend_18 { pt3dadd( -179.699, -54.0265, -71.6145, 0.07 ) }
    dend_18 { pt3dadd( -180.444, -54.2909, -71.8846, 0.74 ) }
    dend_18 { pt3dadd( -181.691, -54.6708, -72.2253, 0.15 ) }
    dend_18 { pt3dadd( -182.674, -54.9297, -72.4247, 0.15 ) }
    dend_18 { pt3dadd( -184.188, -55.3052, -72.6976, 0.15 ) }
    dend_18 { pt3dadd( -184.759, -55.4384, -72.7852, 0.15 ) }
    dend_18 { pt3dadd( -186.833, -55.8961, -73.0909, 0.15 ) }
    dend_18 { pt3dadd( -188.216, -56.1982, -73.3224, 0.22 ) }
    dend_18 { pt3dadd( -189.461, -56.458, -73.5363, 0.22 ) }
    dend_18 { pt3dadd( -190.49, -56.6602, -73.7515, 0.22 ) }
    dend_18 { pt3dadd( -191.215, -56.785, -73.942, 0.22 ) }
    dend_18 { pt3dadd( -191.663, -56.8025, -74.0895, 0.22 ) }
    dend_18 { pt3dadd( -192.539, -56.7195, -74.4744, 0.22 ) }
    dend_18 { pt3dadd( -193.705, -56.4203, -75.0037, 0.15 ) }
    dend_18 { pt3dadd( -194.878, -55.9514, -75.5249, 0.15 ) }
    dend_18 { pt3dadd( -195.754, -55.5312, -75.8699, 0.15 ) }
    dend_18 { pt3dadd( -197.895, -54.367, -76.669, 0.15 ) }
    dend_18 { pt3dadd( -198.655, -53.9234, -76.9069, 0.15 ) }
    dend_18 { pt3dadd( -200.205, -53.0384, -77.4033, 0.29 ) }
    dend_18 { pt3dadd( -201.056, -52.5628, -77.687, 0.37 ) }
    dend_18 { pt3dadd( -202.946, -51.5164, -78.2999, 0.07 ) }
    dend_18 { pt3dadd( -204.035, -50.9141, -78.6395, 0.15 ) }
    dend_18 { pt3dadd( -205.243, -50.2505, -79.0231, 0.15 ) }
    dend_18 { pt3dadd( -207.343, -49.1536, -79.696, 0.52 ) }
    dend_18 { pt3dadd( -208.255, -48.731, -80.0442, 0.29 ) }
    dend_18 { pt3dadd( -209.576, -48.1248, -80.5798, 0.15 ) }
    dend_18 { pt3dadd( -211.161, -47.3575, -81.3138, 0.22 ) }
    dend_18 { pt3dadd( -222.144, -47.8905, -87.4857, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 35/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -17.1922, -4.24734, 7.80092, 0.66 ) }
    dend_15 { pt3dadd( -18.2913, -2.97872, 6.39621, 0.66 ) }
    dend_15 { pt3dadd( -18.9816, -2.09112, 5.50804, 0.66 ) }
    dend_15 { pt3dadd( -19.9593, -0.750781, 4.28877, 0.44 ) }
    dend_15 { pt3dadd( -20.6636, 0.179164, 3.52312, 0.44 ) }
    dend_15 { pt3dadd( -21.0395, 0.719687, 3.10276, 0.44 ) }
    dend_15 { pt3dadd( -21.2804, 1.11213, 2.81249, 0.44 ) }
    dend_15 { pt3dadd( -21.6477, 1.86255, 2.23514, 0.44 ) }
    dend_15 { pt3dadd( -21.8518, 2.46707, 1.87043, 0.29 ) }
    dend_15 { pt3dadd( -22.1605, 3.74237, 1.25582, 0.44 ) }
    dend_15 { pt3dadd( -22.4217, 5.20085, 0.585804, 0.29 ) }
    dend_15 { pt3dadd( -22.534, 6.02352, 0.225221, 0.29 ) }
    dend_15 { pt3dadd( -22.6319, 6.77713, -0.12559, 0.29 ) }
    dend_15 { pt3dadd( -22.7378, 7.40271, -0.43381, 0.29 ) }
    dend_15 { pt3dadd( -22.8948, 8.18021, -0.823501, 0.22 ) }
    dend_15 { pt3dadd( -23.2133, 9.07876, -1.27017, 0.22 ) }
    dend_15 { pt3dadd( -23.8357, 10.0078, -1.7023, 0.22 ) }
    dend_15 { pt3dadd( -24.464, 10.7932, -2.05708, 0.22 ) }
    dend_15 { pt3dadd( -24.9466, 11.4027, -2.30507, 0.29 ) }
    dend_15 { pt3dadd( -25.1829, 11.7235, -2.41797, 0.29 ) }
    dend_15 { pt3dadd( -25.9031, 12.8727, -2.739, 0.22 ) }
    dend_15 { pt3dadd( -26.2369, 13.4439, -2.83098, 0.22 ) }
    dend_15 { pt3dadd( -26.6879, 14.2298, -2.87124, 0.22 ) }
    dend_15 { pt3dadd( -27.3959, 15.4788, -2.78204, 0.22 ) }
    dend_15 { pt3dadd( -27.5093, 15.6814, -2.75794, 0.22 ) }
    dend_15 { pt3dadd( -28.0606, 16.692, -2.563, 0.29 ) }
    dend_15 { pt3dadd( -29.0502, 18.5608, -2.10165, 0.22 ) }
    dend_15 { pt3dadd( -29.703, 19.6993, -1.70758, 0.22 ) }
    dend_15 { pt3dadd( -30.2477, 20.5619, -1.37166, 0.22 ) }
    dend_15 { pt3dadd( -30.9258, 21.6467, -0.93345, 0.15 ) }
    dend_15 { pt3dadd( -31.5416, 22.6594, -0.573668, 0.15 ) }
    dend_15 { pt3dadd( -31.9761, 23.3768, -0.339549, 0.22 ) }
    dend_15 { pt3dadd( -32.7416, 24.7252, 0.0961692, 0.22 ) }
    dend_15 { pt3dadd( -33.6263, 26.4675, 0.631883, 0.15 ) }
    dend_15 { pt3dadd( -34.4173, 28.1914, 1.16394, 0.15 ) }
    dend_15 { pt3dadd( -35.0746, 29.7683, 1.63718, 0.15 ) }
    dend_15 { pt3dadd( -35.547, 30.9889, 1.95048, 0.15 ) }
    dend_15 { pt3dadd( -36.2129, 32.8722, 2.38333, 0.15 ) }
    dend_15 { pt3dadd( -36.5561, 33.9508, 2.56177, 0.22 ) }
    dend_15 { pt3dadd( -36.7822, 34.756, 2.68363, 0.15 ) }
    dend_15 { pt3dadd( -37.0521, 35.7626, 2.80341, 0.15 ) }
    dend_15 { pt3dadd( -37.2699, 36.6509, 2.87203, 0.15 ) }
    dend_15 { pt3dadd( -37.4291, 37.3332, 2.90111, 0.15 ) }
    dend_15 { pt3dadd( -37.8243, 38.7779, 2.9646, 0.15 ) }
    dend_15 { pt3dadd( -38.0215, 39.4265, 3.02011, 0.15 ) }
    dend_15 { pt3dadd( -38.534, 41.0285, 3.19361, 0.29 ) }
    dend_15 { pt3dadd( -38.8033, 41.8932, 3.28554, 0.15 ) }
    dend_15 { pt3dadd( -39.2204, 43.3789, 3.47168, 0.37 ) }
    dend_15 { pt3dadd( -39.5391, 44.6005, 3.6692, 0.37 ) }
    dend_15 { pt3dadd( -39.7707, 45.5323, 3.84682, 0.37 ) }
    dend_15 { pt3dadd( -40.0498, 46.5505, 4.04415, 0.37 ) }
    dend_15 { pt3dadd( -40.4274, 47.8352, 4.28146, 0.44 ) }
    dend_15 { pt3dadd( -41.1177, 50.0454, 4.70114, 0.22 ) }
    dend_15 { pt3dadd( -41.6001, 51.503, 4.95952, 0.22 ) }
    dend_15 { pt3dadd( -41.8316, 52.2328, 5.09472, 0.22 ) }
    dend_15 { pt3dadd( -42.1773, 53.3678, 5.36411, 0.22 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 91/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -5.84243, -14.2573, -9.00649, 0.66 ) }
    dend_9 { pt3dadd( -7.71204, -15.2122, -9.89085, 0.66 ) }
    dend_9 { pt3dadd( -9.47809, -16.3862, -10.9961, 0.59 ) }
    dend_9 { pt3dadd( -10.202, -17.0128, -11.553, 0.66 ) }
    dend_9 { pt3dadd( -11.0336, -17.9658, -12.3498, 0.66 ) }
    dend_9 { pt3dadd( -11.488, -18.6376, -12.8974, 0.66 ) }
    dend_9 { pt3dadd( -11.9011, -19.4052, -13.4831, 0.74 ) }
    dend_9 { pt3dadd( -12.4286, -21.2731, -14.8117, 0.44 ) }
    dend_9 { pt3dadd( -12.6251, -22.4726, -15.5822, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_9 { pt3dadd( -12.7902, -23.9029, -16.4422, 0.59 ) }
    dend_9 { pt3dadd( -12.8673, -25.0758, -17.084, 0.59 ) }
    dend_9 { pt3dadd( -12.8886, -26.1137, -17.5947, 0.37 ) }
    dend_9 { pt3dadd( -12.8992, -27.1781, -18.0513, 0.37 ) }
    dend_9 { pt3dadd( -12.9439, -28.4195, -18.5152, 0.44 ) }
    dend_9 { pt3dadd( -13.0292, -29.2001, -18.8041, 0.29 ) }
    dend_9 { pt3dadd( -13.2896, -30.4349, -19.225, 0.29 ) }
    dend_9 { pt3dadd( -13.5901, -31.4074, -19.5244, 0.22 ) }
    dend_9 { pt3dadd( -13.7468, -31.8062, -19.6383, 0.29 ) }
    dend_9 { pt3dadd( -14.2618, -32.8494, -19.9253, 0.29 ) }
    dend_9 { pt3dadd( -14.8617, -33.9724, -20.2245, 0.22 ) }
    dend_9 { pt3dadd( -15.2648, -34.6667, -20.3912, 0.37 ) }
    dend_9 { pt3dadd( -15.7169, -35.4366, -20.5374, 0.59 ) }
    dend_9 { pt3dadd( -16.0918, -36.1421, -20.6403, 0.52 ) }
    dend_9 { pt3dadd( -16.8999, -37.9008, -20.6986, 0.22 ) }
    dend_9 { pt3dadd( -17.3798, -39.0628, -20.6851, 0.15 ) }
    dend_9 { pt3dadd( -17.5939, -39.648, -20.7007, 0.15 ) }
    dend_9 { pt3dadd( -17.8428, -40.3767, -20.7476, 0.22 ) }
    dend_9 { pt3dadd( -18.1951, -41.5494, -20.8673, 0.22 ) }
    dend_9 { pt3dadd( -18.602, -43.2385, -21.1398, 0.22 ) }
    dend_9 { pt3dadd( -18.8223, -44.615, -21.4795, 0.29 ) }
    dend_9 { pt3dadd( -18.9303, -45.6164, -21.9387, 0.29 ) }
    dend_9 { pt3dadd( -18.92, -46.2229, -22.3521, 0.52 ) }
    dend_9 { pt3dadd( -18.8564, -46.8093, -22.8531, 0.52 ) }
    dend_9 { pt3dadd( -18.7747, -47.6365, -23.6169, 0.52 ) }
    dend_9 { pt3dadd( -18.7153, -48.4351, -24.3428, 0.52 ) }
    dend_9 { pt3dadd( -18.6868, -49.1488, -24.8981, 0.37 ) }
    dend_9 { pt3dadd( -18.6992, -50.6663, -25.9256, 0.22 ) }
    dend_9 { pt3dadd( -18.7409, -52.0036, -26.7192, 0.15 ) }
    dend_9 { pt3dadd( -18.8102, -53.5616, -27.4645, 0.29 ) }
    dend_9 { pt3dadd( -18.9048, -55.278, -28.0898, 0.15 ) }
    dend_9 { pt3dadd( -18.9504, -56.6802, -28.4776, 0.15 ) }
    dend_9 { pt3dadd( -18.9444, -57.4161, -28.6435, 0.22 ) }
    dend_9 { pt3dadd( -18.8913, -58.3675, -28.829, 0.22 ) }
    dend_9 { pt3dadd( -18.7189, -59.6431, -29.0953, 0.22 ) }
    dend_9 { pt3dadd( -18.44, -60.8302, -29.4179, 0.22 ) }
    dend_9 { pt3dadd( -17.9845, -62.4405, -29.8318, 0.29 ) }
    dend_9 { pt3dadd( -17.6309, -63.6084, -30.167, 0.52 ) }
    dend_9 { pt3dadd( -17.2509, -64.8215, -30.5708, 0.44 ) }
    dend_9 { pt3dadd( -16.8418, -66.139, -31.0928, 0.22 ) }
    dend_9 { pt3dadd( -16.3867, -67.4396, -31.7269, 0.22 ) }
    dend_9 { pt3dadd( -15.6588, -69.0662, -32.6849, 0.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 42/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -5.84243, -14.2573, -9.00649, 1.11 ) }
    dend_4 { pt3dadd( -5.79672, -15.6587, -9.32104, 1.11 ) }
    dend_4 { pt3dadd( -5.74857, -16.5698, -9.54293, 1.11 ) }
    dend_4 { pt3dadd( -5.72369, -17.051, -9.65567, 1.33 ) }
    dend_4 { pt3dadd( -5.66667, -18.4029, -9.94146, 1.55 ) }
    dend_4 { pt3dadd( -5.61396, -19.4919, -10.1436, 0.81 ) }
    dend_4 { pt3dadd( -5.54294, -20.6097, -10.3005, 0.88 ) }
    dend_4 { pt3dadd( -5.48557, -21.4005, -10.4032, 0.96 ) }
    dend_4 { pt3dadd( -5.34485, -22.4378, -10.5523, 0.81 ) }
    dend_4 { pt3dadd( -5.07029, -23.6678, -10.7399, 1.18 ) }
    dend_4 { pt3dadd( -4.62375, -24.9691, -10.9633, 0.88 ) }
    dend_4 { pt3dadd( -4.25466, -25.8074, -11.1949, 0.81 ) }
    dend_4 { pt3dadd( -3.85924, -26.5658, -11.5324, 0.81 ) }
    dend_4 { pt3dadd( -3.34343, -27.4359, -12.07, 0.59 ) }
    dend_4 { pt3dadd( -2.89687, -28.0908, -12.5647, 0.74 ) }
    dend_4 { pt3dadd( -2.36275, -28.7883, -13.2124, 0.88 ) }
    dend_4 { pt3dadd( -1.69581, -29.6266, -14.1368, 0.66 ) }
    dend_4 { pt3dadd( -0.982993, -30.5836, -15.2794, 0.96 ) }
    dend_4 { pt3dadd( -0.676873, -31.0641, -15.8364, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 61/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 31.0976, 24.2467, -16.0615, 0.29 ) }
    dend_2 { pt3dadd( 31.2861, 24.5223, -16.7126, 0.29 ) }
    dend_2 { pt3dadd( 31.5387, 25.0011, -17.8833, 0.29 ) }
    dend_2 { pt3dadd( 31.7947, 25.5092, -19.0461, 0.29 ) }
    dend_2 { pt3dadd( 31.9735, 25.8764, -19.7919, 0.22 ) }
    dend_2 { pt3dadd( 32.2224, 26.4116, -20.7463, 0.29 ) }
    dend_2 { pt3dadd( 32.6178, 27.2535, -22.0606, 0.37 ) }
    dend_2 { pt3dadd( 32.9758, 28.0248, -23.1108, 0.52 ) }
    dend_2 { pt3dadd( 33.1706, 28.4538, -23.5825, 0.81 ) }
    dend_2 { pt3dadd( 33.6676, 29.5955, -24.6194, 0.22 ) }
    dend_2 { pt3dadd( 33.9017, 30.1818, -25.0657, 0.22 ) }
    dend_2 { pt3dadd( 34.2402, 31.0439, -25.5939, 0.22 ) }
    dend_2 { pt3dadd( 34.6595, 32.2023, -26.1418, 0.22 ) }
    dend_2 { pt3dadd( 34.8893, 32.9729, -26.4493, 0.29 ) }
    dend_2 { pt3dadd( 35.1873, 34.369, -27.0221, 0.22 ) }
    dend_2 { pt3dadd( 35.2993, 35.2249, -27.387, 0.22 ) }
    dend_2 { pt3dadd( 35.3611, 36.0217, -27.749, 0.22 ) }
    dend_2 { pt3dadd( 35.3926, 36.827, -28.0711, 0.37 ) }
    dend_2 { pt3dadd( 35.4178, 37.6373, -28.3589, 0.37 ) }
    dend_2 { pt3dadd( 35.4758, 38.9153, -28.8176, 0.44 ) }
    dend_2 { pt3dadd( 35.5359, 39.9341, -29.147, 0.44 ) }
    dend_2 { pt3dadd( 35.5973, 40.6436, -29.3504, 0.29 ) }
    dend_2 { pt3dadd( 35.7397, 42.0405, -29.6815, 0.29 ) }
    dend_2 { pt3dadd( 35.8816, 43.3858, -29.9241, 0.37 ) }
    dend_2 { pt3dadd( 35.9566, 44.3716, -30.04, 0.37 ) }
    dend_2 { pt3dadd( 35.9859, 45.806, -30.1166, 0.29 ) }
    dend_2 { pt3dadd( 35.8579, 47.2807, -30.1465, 0.22 ) }
    dend_2 { pt3dadd( 35.6521, 48.1127, -30.1582, 0.22 ) }
    dend_2 { pt3dadd( 35.1872, 49.1795, -30.183, 0.22 ) }
    dend_2 { pt3dadd( 34.7194, 49.9283, -30.1723, 0.22 ) }
    dend_2 { pt3dadd( 33.9728, 50.8104, -30.1613, 0.15 ) }
    dend_2 { pt3dadd( 32.9496, 51.7339, -30.163, 0.15 ) }
    dend_2 { pt3dadd( 31.7893, 52.5406, -30.168, 0.15 ) }
    dend_2 { pt3dadd( 30.789, 53.1053, -30.1707, 0.15 ) }
    dend_2 { pt3dadd( 29.8184, 53.5946, -30.1729, 0.15 ) }
    dend_2 { pt3dadd( 28.4353, 54.2847, -30.1656, 0.15 ) }
    dend_2 { pt3dadd( 27.7314, 54.6129, -30.1599, 0.15 ) }
    dend_2 { pt3dadd( 26.545, 55.1459, -30.1415, 0.15 ) }
    dend_2 { pt3dadd( 25.1171, 55.7248, -30.0975, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_2 { pt3dadd( 24.1892, 56.0735, -30.0415, 0.15 ) }
    dend_2 { pt3dadd( 22.8886, 56.541, -29.9528, 0.15 ) }
    dend_2 { pt3dadd( 20.6486, 66.2758, -33.6992, 0.15 ) }
    dend_2 { pt3dadd( 20.2657, 76.718, -36.1606, 0.15 ) }
    dend_2 { pt3dadd( 20.8173, 87.0302, -39.0508, 0.15 ) }
    dend_2 { pt3dadd( 19.9798, 97.6569, -40.471, 0.15 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 6/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 31.0976, 24.2467, -16.0615, 0.29 ) }
    dend_1 { pt3dadd( 31.3689, 25.0105, -15.7654, 0.29 ) }
    dend_1 { pt3dadd( 31.5102, 25.4022, -15.5966, 0.29 ) }
    dend_1 { pt3dadd( 31.766, 26.0845, -15.3057, 0.22 ) }
    dend_1 { pt3dadd( 31.9718, 26.5758, -15.1263, 0.22 ) }
    dend_1 { pt3dadd( 32.2987, 27.2664, -14.851, 0.29 ) }
    dend_1 { pt3dadd( 32.5226, 27.7463, -14.6604, 0.29 ) }
    dend_1 { pt3dadd( 32.6295, 27.9701, -14.5628, 0.29 ) }
    dend_1 { pt3dadd( 32.8796, 28.4427, -14.3528, 0.29 ) }
    dend_1 { pt3dadd( 33.2092, 28.9727, -14.1022, 0.22 ) }
    dend_1 { pt3dadd( 33.695, 29.6673, -13.7398, 0.22 ) }
    dend_1 { pt3dadd( 34.1117, 30.2459, -13.4031, 0.37 ) }
    dend_1 { pt3dadd( 34.4674, 30.779, -13.0873, 0.22 ) }
    dend_1 { pt3dadd( 34.9034, 31.4668, -12.637, 0.44 ) }
    dend_1 { pt3dadd( 35.3677, 32.2423, -12.0865, 0.29 ) }
    dend_1 { pt3dadd( 35.6392, 32.7546, -11.7097, 0.29 ) }
    dend_1 { pt3dadd( 35.808, 33.1405, -11.4309, 0.29 ) }
    dend_1 { pt3dadd( 35.9343, 33.5039, -11.1534, 0.22 ) }
    dend_1 { pt3dadd( 36.0211, 33.9043, -10.8482, 0.22 ) }
    dend_1 { pt3dadd( 36.044, 34.096, -10.7202, 0.22 ) }
    dend_1 { pt3dadd( 36.0702, 34.4609, -10.4923, 0.29 ) }
    dend_1 { pt3dadd( 36.1237, 35.036, -10.155, 0.29 ) }
    dend_1 { pt3dadd( 36.167, 35.424, -9.94153, 0.22 ) }
    dend_1 { pt3dadd( 36.2249, 35.9705, -9.67189, 0.22 ) }
    dend_1 { pt3dadd( 36.2651, 36.4676, -9.47373, 0.22 ) }
    dend_1 { pt3dadd( 36.296, 36.8374, -9.32274, 0.22 ) }
    dend_1 { pt3dadd( 36.344, 37.3202, -9.09233, 0.52 ) }
    dend_1 { pt3dadd( 36.4226, 37.9405, -8.75059, 0.52 ) }
    dend_1 { pt3dadd( 36.4807, 38.4214, -8.42597, 0.44 ) }
    dend_1 { pt3dadd( 36.529, 38.8716, -8.0705, 0.44 ) }
    dend_1 { pt3dadd( 36.5819, 39.4869, -7.51747, 0.37 ) }
    dend_1 { pt3dadd( 36.6381, 40.1367, -6.87258, 0.37 ) }
    dend_1 { pt3dadd( 36.7072, 40.7829, -6.16374, 0.29 ) }
    dend_1 { pt3dadd( 36.7732, 41.2328, -5.64359, 0.29 ) }
    dend_1 { pt3dadd( 36.8545, 41.6925, -5.08474, 0.29 ) }
    dend_1 { pt3dadd( 36.9551, 42.1804, -4.48536, 0.22 ) }
    dend_1 { pt3dadd( 37.0607, 42.6471, -3.96088, 0.22 ) }
    dend_1 { pt3dadd( 37.1517, 43.0077, -3.57247, 0.22 ) }
    dend_1 { pt3dadd( 37.2379, 43.3294, -3.21512, 0.22 ) }
    dend_1 { pt3dadd( 37.3688, 43.7694, -2.71126, 0.22 ) }
    dend_1 { pt3dadd( 37.4868, 44.1261, -2.26398, 0.22 ) }
    dend_1 { pt3dadd( 37.5815, 44.3959, -1.89309, 0.29 ) }
    dend_1 { pt3dadd( 37.7052, 44.777, -1.36225, 0.29 ) }
    dend_1 { pt3dadd( 37.8537, 45.3088, -0.639781, 0.44 ) }
    dend_1 { pt3dadd( 37.9757, 45.7531, -0.0284934, 0.44 ) }
    dend_1 { pt3dadd( 38.1477, 46.3105, 0.730524, 0.22 ) }
    dend_1 { pt3dadd( 38.2964, 46.7181, 1.28115, 0.22 ) }
    dend_1 { pt3dadd( 38.479, 47.1343, 1.83679, 0.29 ) }
    dend_1 { pt3dadd( 38.7666, 47.7157, 2.58032, 0.15 ) }
    dend_1 { pt3dadd( 39.067, 48.2726, 3.23605, 0.15 ) }
    dend_1 { pt3dadd( 39.3317, 48.732, 3.75918, 0.15 ) }
    dend_1 { pt3dadd( 39.5068, 49.0173, 4.0724, 0.15 ) }
    dend_1 { pt3dadd( 39.893, 49.6108, 4.71756, 0.15 ) }
    dend_1 { pt3dadd( 40.2069, 50.0632, 5.23056, 0.15 ) }
    dend_1 { pt3dadd( 40.522, 50.5066, 5.71569, 0.15 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 61/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 37.0448, 11.6028, 0.0, 0.44 ) }
    axon_1 { pt3dadd( 51.2661, 16.3728, 0.0, 0.44 ) }
    axon_1 { pt3dadd( 65.4875, 21.1428, 0.0, 0.44 ) }
    // Section: dend_33, id: dend_33, parent: dend_23 (entry count 64/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -10.3979, 5.09993, -3.88873, 0.74 ) }
    dend_33 { pt3dadd( -11.6282, 6.08951, -4.66313, 0.74 ) }
    dend_33 { pt3dadd( -12.9634, 7.16344, -5.50355, 0.81 ) }
    dend_33 { pt3dadd( -13.9727, 7.97526, -6.13884, 0.29 ) }
    dend_33 { pt3dadd( -15.1113, 8.89103, -6.85548, 0.15 ) }
    dend_33 { pt3dadd( -22.1042, 18.7479, -13.5756, 0.15 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 70/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -10.3979, 5.09993, -3.88873, 0.44 ) }
    dend_24 { pt3dadd( -10.1408, 5.72512, -3.34229, 0.44 ) }
    dend_24 { pt3dadd( -9.77256, 6.65655, -2.69936, 0.44 ) }
    dend_24 { pt3dadd( -9.471, 7.41943, -2.17278, 0.44 ) }
    dend_24 { pt3dadd( -9.15839, 8.2102, -1.62695, 0.44 ) }
    dend_24 { pt3dadd( -8.71369, 9.33513, -0.850461, 0.52 ) }
    dend_24 { pt3dadd( -8.41013, 10.103, -0.320413, 0.74 ) }
    dend_24 { pt3dadd( -8.04528, 10.903, 0.188249, 0.81 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 78/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -17.6691, 8.45778, -9.17437, 0.66 ) }
    dend_22 { pt3dadd( -18.4325, 9.43054, -9.24975, 0.66 ) }
    dend_22 { pt3dadd( -19.1815, 10.3761, -9.32367, 0.29 ) }
    dend_22 { pt3dadd( -20.2904, 11.6743, -9.42296, 0.29 ) }
    dend_22 { pt3dadd( -20.9442, 12.4556, -9.38348, 0.29 ) }
    dend_22 { pt3dadd( -22.0226, 13.8537, -9.14194, 0.22 ) }
    dend_22 { pt3dadd( -22.6672, 14.7493, -8.89676, 0.29 ) }
    dend_22 { pt3dadd( -23.1308, 15.4309, -8.63422, 0.29 ) }
    dend_22 { pt3dadd( -23.7129, 16.2361, -8.21006, 0.22 ) }
    dend_22 { pt3dadd( -24.9134, 17.691, -7.26959, 0.07 ) }
    dend_22 { pt3dadd( -25.6531, 18.584, -6.59612, 0.07 ) }
    dend_22 { pt3dadd( -26.1701, 19.2393, -6.04749, 0.07 ) }
    dend_22 { pt3dadd( -26.9704, 20.2932, -5.1923, 0.15 ) }
    dend_22 { pt3dadd( -27.6567, 21.2032, -4.51415, 0.15 ) }
    dend_22 { pt3dadd( -28.4788, 22.2371, -3.84293, 0.22 ) }
    dend_22 { pt3dadd( -29.1732, 23.0164, -3.41987, 0.22 ) }
    dend_22 { pt3dadd( -29.6973, 23.541, -3.13003, 0.22 ) }
    dend_22 { pt3dadd( -30.2954, 24.1238, -2.80179, 0.44 ) }
    dend_22 { pt3dadd( -30.7249, 24.5451, -2.565, 0.44 ) }
    dend_22 { pt3dadd( -31.8544, 25.6604, -1.95678, 0.15 ) }
    dend_22 { pt3dadd( -33.1438, 26.8963, -1.26492, 0.15 ) }
    dend_22 { pt3dadd( -34.4636, 28.1084, -0.562899, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_22 { pt3dadd( -35.2207, 28.8005, -0.161558, 0.15 ) }
    dend_22 { pt3dadd( -35.8177, 29.3651, 0.159163, 0.15 ) }
    dend_22 { pt3dadd( -36.4738, 30.0127, 0.494155, 0.15 ) }
    dend_22 { pt3dadd( -37.2455, 30.8157, 0.87541, 0.15 ) }
    dend_22 { pt3dadd( -38.0332, 31.6572, 1.2547, 0.15 ) }
    dend_22 { pt3dadd( -38.5332, 32.216, 1.55995, 0.15 ) }
    dend_22 { pt3dadd( -39.1767, 32.922, 2.09258, 0.15 ) }
    dend_22 { pt3dadd( -40.0496, 33.8268, 2.90073, 0.15 ) }
    dend_22 { pt3dadd( -41.0874, 34.8335, 3.79698, 0.15 ) }
    dend_22 { pt3dadd( -41.9567, 35.7154, 4.56865, 0.15 ) }
    dend_22 { pt3dadd( -43.2056, 37.0422, 5.76326, 0.15 ) }
    dend_22 { pt3dadd( -44.1934, 38.0974, 6.79606, 0.15 ) }
    dend_22 { pt3dadd( -45.0136, 38.9744, 7.73638, 0.15 ) }
    dend_22 { pt3dadd( -46.2374, 40.3803, 9.30276, 0.07 ) }
    dend_22 { pt3dadd( -47.3567, 41.7168, 10.6897, 0.07 ) }
    dend_22 { pt3dadd( -48.2927, 42.8354, 11.6396, 0.07 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 16/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -17.6691, 8.45778, -9.17437, 0.37 ) }
    dend_21 { pt3dadd( -17.3081, 8.38772, -11.3037, 0.37 ) }
    dend_21 { pt3dadd( -16.8914, 8.43133, -12.737, 0.37 ) }
    dend_21 { pt3dadd( -16.4911, 8.50257, -13.9102, 0.37 ) }
    dend_21 { pt3dadd( -16.1616, 8.56451, -14.8429, 0.37 ) }
    dend_21 { pt3dadd( -15.7983, 8.65686, -16.0173, 0.37 ) }
    dend_21 { pt3dadd( -15.5677, 8.74891, -16.8316, 0.37 ) }
    dend_21 { pt3dadd( -15.2088, 8.99245, -18.0726, 0.37 ) }
    dend_21 { pt3dadd( -14.9022, 9.32424, -19.3605, 0.37 ) }
    dend_21 { pt3dadd( -14.7236, 9.72493, -20.4983, 0.29 ) }
    dend_21 { pt3dadd( -14.6667, 10.3703, -22.0508, 0.29 ) }
    dend_21 { pt3dadd( -14.7451, 10.8193, -23.1714, 0.29 ) }
    dend_21 { pt3dadd( -14.8965, 11.1899, -24.1526, 0.22 ) }
    dend_21 { pt3dadd( -15.1184, 11.5285, -24.9538, 0.22 ) }
    dend_21 { pt3dadd( -15.4728, 11.9898, -25.9791, 0.22 ) }
    dend_21 { pt3dadd( -16.0589, 12.7757, -27.6168, 0.37 ) }
    dend_21 { pt3dadd( -16.6522, 13.6924, -29.5648, 0.29 ) }
    dend_21 { pt3dadd( -17.0579, 14.4518, -31.1253, 0.29 ) }
    dend_21 { pt3dadd( -17.3097, 15.1879, -32.509, 0.22 ) }
    dend_21 { pt3dadd( -17.4221, 15.7641, -33.5087, 0.22 ) }
    dend_21 { pt3dadd( -17.487, 16.3812, -34.5306, 0.29 ) }
    dend_21 { pt3dadd( -17.5016, 17.513, -36.0567, 0.37 ) }
    dend_21 { pt3dadd( -17.4861, 18.4512, -37.1592, 0.29 ) }
    dend_21 { pt3dadd( -17.4536, 19.358, -38.1641, 0.22 ) }
    dend_21 { pt3dadd( -17.3843, 20.4368, -39.2907, 0.22 ) }
    dend_21 { pt3dadd( -17.3757, 21.0691, -39.8855, 0.22 ) }
    dend_21 { pt3dadd( -17.4286, 21.8148, -40.5469, 0.29 ) }
    dend_21 { pt3dadd( -17.5488, 22.7833, -41.312, 0.44 ) }
    dend_21 { pt3dadd( -17.6965, 23.5553, -41.9005, 0.88 ) }
    dend_21 { pt3dadd( -18.056, 25.215, -43.0493, 0.22 ) }
    dend_21 { pt3dadd( -18.1932, 25.8371, -43.4261, 0.22 ) }
    dend_21 { pt3dadd( -18.3883, 26.8118, -43.9867, 0.29 ) }
    dend_21 { pt3dadd( -18.6066, 27.9576, -44.5971, 0.22 ) }
    dend_21 { pt3dadd( -18.8849, 29.5781, -45.3797, 0.15 ) }
    dend_21 { pt3dadd( -19.0959, 30.8124, -45.9525, 0.15 ) }
    dend_21 { pt3dadd( -19.3089, 31.8266, -46.4067, 0.15 ) }
    dend_21 { pt3dadd( -19.5629, 33.0638, -46.9357, 0.22 ) }
    dend_21 { pt3dadd( -19.8245, 34.4425, -47.4964, 0.22 ) }
    dend_21 { pt3dadd( -20.1438, 36.122, -48.1598, 0.22 ) }
    dend_21 { pt3dadd( -20.2498, 36.6742, -48.4019, 0.22 ) }
    dend_21 { pt3dadd( -20.4788, 37.8254, -48.8942, 0.22 ) }
    dend_21 { pt3dadd( -20.698, 38.9339, -49.4202, 0.29 ) }
    dend_21 { pt3dadd( -20.818, 39.4793, -49.6988, 0.22 ) }
    dend_21 { pt3dadd( -20.962, 40.1518, -50.0693, 0.29 ) }
    dend_21 { pt3dadd( -21.3294, 41.6974, -50.9358, 0.29 ) }
    dend_21 { pt3dadd( -21.874, 43.9925, -52.1874, 0.22 ) }
    dend_21 { pt3dadd( -22.2007, 45.3721, -52.9082, 0.22 ) }
    dend_21 { pt3dadd( -22.5178, 46.5129, -53.4681, 0.15 ) }
    dend_21 { pt3dadd( -22.8203, 47.4964, -53.9212, 0.15 ) }
    dend_21 { pt3dadd( -23.13, 48.5016, -54.353, 0.15 ) }
    dend_21 { pt3dadd( -23.5889, 49.9937, -54.9392, 0.15 ) }
    dend_21 { pt3dadd( -24.0669, 51.4823, -55.4927, 0.15 ) }
    dend_21 { pt3dadd( -24.5723, 53.2178, -55.9989, 0.22 ) }
    dend_21 { pt3dadd( -24.723, 53.8056, -56.1501, 0.22 ) }
    dend_21 { pt3dadd( -24.9222, 54.7735, -56.3338, 0.22 ) }
    dend_21 { pt3dadd( -25.0616, 55.6761, -56.4446, 0.22 ) }
    dend_21 { pt3dadd( -25.2573, 57.3012, -56.5631, 0.15 ) }
    dend_21 { pt3dadd( -25.2992, 57.8261, -56.5853, 0.15 ) }
    dend_21 { pt3dadd( -25.3616, 58.6954, -56.6232, 0.22 ) }
    dend_21 { pt3dadd( -25.5504, 60.117, -56.7043, 0.22 ) }
    dend_21 { pt3dadd( -25.7827, 61.11, -56.7784, 0.22 ) }
    dend_21 { pt3dadd( -26.0804, 62.0549, -56.8448, 0.29 ) }
    dend_21 { pt3dadd( -26.3612, 62.8213, -56.8802, 0.29 ) }
    dend_21 { pt3dadd( -26.9539, 64.3438, -56.8489, 0.22 ) }
    dend_21 { pt3dadd( -27.3495, 65.3648, -56.7276, 0.22 ) }
    dend_21 { pt3dadd( -27.7674, 66.4861, -56.4921, 0.22 ) }
    dend_21 { pt3dadd( -28.3304, 68.3468, -55.8048, 0.15 ) }
    dend_21 { pt3dadd( -28.6224, 69.5301, -55.2074, 0.15 ) }
    dend_21 { pt3dadd( -28.808, 70.5363, -54.5872, 0.15 ) }
    dend_21 { pt3dadd( -28.9256, 71.8955, -53.5656, 0.15 ) }
    dend_21 { pt3dadd( -28.8775, 72.9736, -52.6815, 0.22 ) }
    dend_21 { pt3dadd( -28.5655, 74.6444, -51.1711, 0.29 ) }
    dend_21 { pt3dadd( -28.4227, 75.1118, -50.7337, 0.29 ) }
    dend_21 { pt3dadd( -28.2506, 75.5588, -50.3421, 0.22 ) }
    dend_21 { pt3dadd( -27.8094, 76.5359, -49.5424, 0.22 ) }
    dend_21 { pt3dadd( -27.4862, 77.1727, -49.0664, 0.22 ) }
    dend_21 { pt3dadd( -26.7868, 78.5013, -48.1785, 0.22 ) }
    dend_21 { pt3dadd( -26.0247, 79.9927, -47.2759, 0.15 ) }
    dend_21 { pt3dadd( -25.3373, 81.4187, -46.438, 0.15 ) }
    dend_21 { pt3dadd( -25.0362, 82.1104, -46.0441, 0.15 ) }
    dend_21 { pt3dadd( -24.6239, 83.1341, -45.4986, 0.15 ) }
    dend_21 { pt3dadd( -24.3355, 83.8937, -45.0827, 0.22 ) }
    dend_21 { pt3dadd( -26.4647, 97.0446, -49.005, 0.22 ) }
    dend_21 { pt3dadd( -26.0194, 110.511, -52.5763, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_21 { pt3dadd( -25.6693, 123.786, -56.8286, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 1/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -42.1773, 53.3678, 5.36411, 0.15 ) }
    dend_17 { pt3dadd( -42.2659, 54.2632, 5.96529, 0.15 ) }
    dend_17 { pt3dadd( -42.4806, 55.7762, 6.93909, 0.15 ) }
    dend_17 { pt3dadd( -42.6234, 56.4735, 7.41594, 0.15 ) }
    dend_17 { pt3dadd( -42.813, 57.2525, 7.96976, 0.22 ) }
    dend_17 { pt3dadd( -43.2102, 58.7148, 8.98221, 0.15 ) }
    dend_17 { pt3dadd( -43.4396, 59.4812, 9.52081, 0.22 ) }
    dend_17 { pt3dadd( -43.9631, 61.0048, 10.5682, 0.15 ) }
    dend_17 { pt3dadd( -44.5148, 62.4626, 11.5955, 0.15 ) }
    dend_17 { pt3dadd( -44.8522, 63.3, 12.1903, 0.15 ) }
    dend_17 { pt3dadd( -45.1997, 64.1232, 12.7937, 0.22 ) }
    dend_17 { pt3dadd( -45.739, 65.271, 13.6233, 0.22 ) }
    dend_17 { pt3dadd( -46.108, 65.9874, 14.1422, 0.15 ) }
    dend_17 { pt3dadd( -46.8075, 67.2528, 15.0065, 0.15 ) }
    dend_17 { pt3dadd( -47.3389, 68.1726, 15.6186, 0.15 ) }
    dend_17 { pt3dadd( -48.1592, 69.5137, 16.5207, 0.15 ) }
    dend_17 { pt3dadd( -49.0051, 70.838, 17.4301, 0.15 ) }
    dend_17 { pt3dadd( -49.7101, 71.936, 18.179, 0.22 ) }
    dend_17 { pt3dadd( -50.5623, 73.2362, 19.1114, 0.22 ) }
    dend_17 { pt3dadd( -51.1129, 74.1063, 19.7043, 0.22 ) }
    dend_17 { pt3dadd( -51.5892, 74.8549, 20.2189, 0.22 ) }
    dend_17 { pt3dadd( -52.3288, 75.9877, 20.969, 0.15 ) }
    dend_17 { pt3dadd( -53.3418, 77.5163, 21.9828, 0.15 ) }
    dend_17 { pt3dadd( -54.0975, 78.6592, 22.7221, 0.15 ) }
    dend_17 { pt3dadd( -55.0971, 80.1485, 23.6729, 0.22 ) }
    dend_17 { pt3dadd( -56.0603, 81.5517, 24.5367, 0.22 ) }
    dend_17 { pt3dadd( -57.2227, 83.1838, 25.5176, 0.15 ) }
    dend_17 { pt3dadd( -57.8381, 83.9792, 25.973, 0.15 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 29/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -42.1773, 53.3678, 5.36411, 0.15 ) }
    dend_16 { pt3dadd( -42.7463, 54.2166, 5.85786, 0.15 ) }
    dend_16 { pt3dadd( -43.1647, 54.9551, 6.35906, 0.15 ) }
    dend_16 { pt3dadd( -43.712, 55.978, 7.12737, 0.22 ) }
    dend_16 { pt3dadd( -44.0876, 56.6716, 7.66992, 0.22 ) }
    dend_16 { pt3dadd( -44.3778, 57.1981, 8.05844, 0.15 ) }
    dend_16 { pt3dadd( -44.7843, 57.9217, 8.58555, 0.22 ) }
    dend_16 { pt3dadd( -45.5882, 59.4281, 9.69141, 0.15 ) }
    dend_16 { pt3dadd( -46.2795, 60.6691, 10.5698, 0.15 ) }
    dend_16 { pt3dadd( -46.7315, 61.4618, 11.146, 0.15 ) }
    dend_16 { pt3dadd( -47.203, 62.2688, 11.7443, 0.15 ) }
    dend_16 { pt3dadd( -47.8438, 63.2761, 12.4919, 0.15 ) }
    dend_16 { pt3dadd( -48.1362, 63.7417, 12.8211, 0.15 ) }
    dend_16 { pt3dadd( -48.487, 64.3153, 13.1971, 0.22 ) }
    dend_16 { pt3dadd( -49.125, 65.4681, 14.0041, 0.22 ) }
    dend_16 { pt3dadd( -49.4039, 66.0405, 14.4118, 0.15 ) }
    dend_16 { pt3dadd( -49.939, 67.2375, 15.2881, 0.15 ) }
    dend_16 { pt3dadd( -50.3405, 68.2088, 16.0027, 0.15 ) }
    dend_16 { pt3dadd( -50.7296, 69.1407, 16.731, 0.15 ) }
    dend_16 { pt3dadd( -51.2159, 70.3003, 17.7468, 0.15 ) }
    dend_16 { pt3dadd( -51.7668, 71.5648, 18.955, 0.15 ) }
    dend_16 { pt3dadd( -52.2335, 72.5957, 20.0467, 0.15 ) }
    dend_16 { pt3dadd( -52.8434, 73.7024, 21.3409, 0.15 ) }
    dend_16 { pt3dadd( -53.4119, 74.5188, 22.4182, 0.15 ) }
    dend_16 { pt3dadd( -54.1822, 75.4481, 23.783, 0.15 ) }
    dend_16 { pt3dadd( -54.8711, 76.0778, 24.8579, 0.15 ) }
    dend_16 { pt3dadd( -55.5209, 76.5358, 25.7732, 0.15 ) }
    dend_16 { pt3dadd( -56.6811, 77.2767, 27.232, 0.07 ) }
    dend_16 { pt3dadd( -57.8897, 77.9834, 28.6466, 0.07 ) }
    dend_16 { pt3dadd( -59.0114, 78.6141, 29.8747, 0.07 ) }
    dend_16 { pt3dadd( -60.4963, 79.3968, 31.3574, 0.07 ) }
    dend_16 { pt3dadd( -61.7486, 80.0215, 32.5575, 0.07 ) }
    dend_16 { pt3dadd( -63.1393, 80.7318, 33.8777, 0.07 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 62/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -15.6588, -69.0662, -32.6849, 0.15 ) }
    dend_11 { pt3dadd( -16.3832, -70.3437, -32.6949, 0.15 ) }
    dend_11 { pt3dadd( -16.682, -70.7824, -32.5768, 0.15 ) }
    dend_11 { pt3dadd( -16.8738, -71.0579, -32.4401, 0.15 ) }
    dend_11 { pt3dadd( -17.1997, -71.4721, -32.1813, 0.22 ) }
    dend_11 { pt3dadd( -17.4375, -71.7614, -31.9892, 0.22 ) }
    dend_11 { pt3dadd( -18.0009, -72.4395, -31.5144, 0.44 ) }
    dend_11 { pt3dadd( -18.9564, -73.5603, -30.6266, 0.22 ) }
    dend_11 { pt3dadd( -19.7963, -74.533, -29.8166, 0.15 ) }
    dend_11 { pt3dadd( -20.552, -75.4019, -29.0642, 0.15 ) }
    dend_11 { pt3dadd( -21.1332, -76.0517, -28.4776, 0.22 ) }
    dend_11 { pt3dadd( -21.8985, -76.8972, -27.7039, 0.15 ) }
    dend_11 { pt3dadd( -22.3671, -77.4438, -27.2167, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 75/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -15.6588, -69.0662, -32.6849, 0.22 ) }
    dend_10 { pt3dadd( -15.7298, -69.0755, -33.5163, 0.22 ) }
    dend_10 { pt3dadd( -15.7936, -69.0947, -34.2992, 0.22 ) }
    dend_10 { pt3dadd( -15.8303, -69.1114, -34.7683, 0.29 ) }
    dend_10 { pt3dadd( -15.8962, -69.146, -35.6864, 0.29 ) }
    dend_10 { pt3dadd( -15.9816, -69.1807, -36.885, 0.29 ) }
    dend_10 { pt3dadd( -16.0727, -69.2119, -38.1472, 0.29 ) }
    dend_10 { pt3dadd( -16.0882, -69.2151, -38.4346, 0.22 ) }
    dend_10 { pt3dadd( -16.1232, -69.2181, -39.2423, 0.22 ) }
    dend_10 { pt3dadd( -16.132, -69.2144, -39.6964, 0.22 ) }
    dend_10 { pt3dadd( -16.1335, -69.2042, -40.1614, 0.22 ) }
    dend_10 { pt3dadd( -16.143, -69.1682, -41.1625, 0.22 ) }
    dend_10 { pt3dadd( -16.1819, -69.1157, -42.2336, 0.15 ) }
    dend_10 { pt3dadd( -16.2489, -69.07, -43.056, 0.15 ) }
    dend_10 { pt3dadd( -16.2813, -69.0563, -43.2931, 0.22 ) }
    dend_10 { pt3dadd( -16.474, -68.997, -44.3548, 0.22 ) }
    dend_10 { pt3dadd( -16.7088, -68.9495, -45.3347, 0.22 ) }
    dend_10 { pt3dadd( -16.978, -68.901, -46.1994, 0.22 ) }
    dend_10 { pt3dadd( -17.2525, -68.8639, -46.9525, 0.22 ) }
    dend_10 { pt3dadd( -17.8301, -68.8159, -48.4714, 0.22 ) }
    dend_10 { pt3dadd( -18.0105, -68.8109, -48.9418, 0.22 ) }
    dend_10 { pt3dadd( -18.5652, -68.8065, -50.3278, 0.15 ) }
    dend_10 { pt3dadd( -19.294, -68.8044, -52.1262, 0.22 ) }
    dend_10 { pt3dadd( -19.6732, -68.8079, -53.0534, 0.22 ) }
    dend_10 { pt3dadd( -20.2707, -68.8313, -54.5031, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( -20.6194, -68.8635, -55.3512, 0.15 ) }
    dend_10 { pt3dadd( -20.8394, -68.8956, -55.9042, 0.15 ) }
    dend_10 { pt3dadd( -21.1605, -68.9761, -56.7559, 0.15 ) }
    dend_10 { pt3dadd( -21.5886, -69.1931, -57.9654, 0.15 ) }
    dend_10 { pt3dadd( -22.0148, -69.508, -59.2723, 0.15 ) }
    dend_10 { pt3dadd( -22.2081, -69.7125, -60.042, 0.15 ) }
    dend_10 { pt3dadd( -22.2941, -69.8229, -60.4933, 0.15 ) }
    dend_10 { pt3dadd( -22.3366, -69.8732, -60.7672, 0.15 ) }
    dend_10 { pt3dadd( -22.4679, -70.0236, -61.6553, 0.07 ) }
    dend_10 { pt3dadd( -22.6206, -70.1715, -62.708, 0.07 ) }
    dend_10 { pt3dadd( -22.8392, -70.342, -64.1415, 0.15 ) }
    dend_10 { pt3dadd( -22.9211, -70.3858, -64.6718, 0.15 ) }
    dend_10 { pt3dadd( -23.021, -70.4042, -65.3151, 0.37 ) }
    dend_10 { pt3dadd( -25.2005, -69.937, -71.9806, 0.37 ) }
    dend_10 { pt3dadd( -26.2886, -69.9984, -78.9225, 0.37 ) }
    dend_10 { pt3dadd( -26.8268, -68.9345, -85.8531, 0.37 ) }
    dend_10 { pt3dadd( -27.3235, -69.0633, -92.8615, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 17/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -0.676873, -31.0641, -15.8364, 0.44 ) }
    dend_8 { pt3dadd( -1.39075, -32.0231, -15.478, 0.44 ) }
    dend_8 { pt3dadd( -1.83958, -32.7241, -15.3319, 0.44 ) }
    dend_8 { pt3dadd( -2.75336, -34.2858, -15.1874, 0.44 ) }
    dend_8 { pt3dadd( -3.21917, -35.1692, -15.135, 0.66 ) }
    dend_8 { pt3dadd( -3.83564, -36.3528, -15.0149, 0.29 ) }
    dend_8 { pt3dadd( -4.55986, -37.6882, -14.7729, 0.37 ) }
    dend_8 { pt3dadd( -5.17858, -38.7284, -14.5362, 0.37 ) }
    dend_8 { pt3dadd( -5.56507, -39.354, -14.3745, 0.37 ) }
    dend_8 { pt3dadd( -6.21653, -40.3649, -14.0369, 0.66 ) }
    dend_8 { pt3dadd( -6.9398, -41.4067, -13.552, 0.44 ) }
    dend_8 { pt3dadd( -7.87488, -42.603, -12.7961, 0.44 ) }
    dend_8 { pt3dadd( -8.53105, -43.3457, -12.2752, 0.22 ) }
    dend_8 { pt3dadd( -9.23084, -44.0946, -11.7301, 0.22 ) }
    dend_8 { pt3dadd( -10.0562, -45.0091, -11.0663, 0.22 ) }
    dend_8 { pt3dadd( -10.4777, -45.5206, -10.7299, 0.44 ) }
    dend_8 { pt3dadd( -11.2068, -46.5995, -10.1177, 0.81 ) }
    dend_8 { pt3dadd( -12.0823, -48.2013, -9.31299, 0.29 ) }
    dend_8 { pt3dadd( -12.706, -49.5531, -8.65449, 0.22 ) }
    dend_8 { pt3dadd( -13.1729, -50.7451, -8.06439, 0.22 ) }
    dend_8 { pt3dadd( -13.4799, -51.6989, -7.60632, 0.22 ) }
    dend_8 { pt3dadd( -13.7701, -52.761, -7.10646, 0.22 ) }
    dend_8 { pt3dadd( -13.9049, -53.344, -6.84448, 0.22 ) }
    dend_8 { pt3dadd( -14.2074, -54.9044, -6.09258, 0.29 ) }
    dend_8 { pt3dadd( -14.4307, -56.1037, -5.50418, 0.59 ) }
    dend_8 { pt3dadd( -14.5771, -56.8025, -5.15926, 0.59 ) }
    dend_8 { pt3dadd( -14.8004, -57.696, -4.74751, 0.29 ) }
    dend_8 { pt3dadd( -15.0156, -58.4126, -4.46446, 0.29 ) }
    dend_8 { pt3dadd( -15.3286, -59.4219, -4.1315, 0.22 ) }
    dend_8 { pt3dadd( -15.6332, -60.3176, -3.90508, 0.22 ) }
    dend_8 { pt3dadd( -15.9469, -61.073, -3.71311, 0.29 ) }
    dend_8 { pt3dadd( -16.5285, -62.2636, -3.36797, 0.22 ) }
    dend_8 { pt3dadd( -17.0029, -63.1204, -3.07483, 0.22 ) }
    dend_8 { pt3dadd( -17.6467, -64.0982, -2.70448, 0.29 ) }
    dend_8 { pt3dadd( -18.6604, -65.4828, -2.13794, 0.22 ) }
    dend_8 { pt3dadd( -19.2945, -66.3155, -1.74708, 0.22 ) }
    dend_8 { pt3dadd( -19.7911, -66.9713, -1.39235, 0.29 ) }
    dend_8 { pt3dadd( -20.6327, -68.1538, -0.700698, 0.22 ) }
    dend_8 { pt3dadd( -21.3988, -69.339, 0.021923, 0.29 ) }
    dend_8 { pt3dadd( -21.9338, -70.2214, 0.55084, 0.15 ) }
    dend_8 { pt3dadd( -22.3853, -71.0417, 1.02366, 0.15 ) }
    dend_8 { pt3dadd( -22.6285, -71.5513, 1.30539, 0.29 ) }
    dend_8 { pt3dadd( -22.8984, -72.1926, 1.67666, 0.29 ) }
    dend_8 { pt3dadd( -23.5143, -73.8763, 2.60536, 0.15 ) }
    dend_8 { pt3dadd( -23.7314, -74.5505, 2.96973, 0.15 ) }
    dend_8 { pt3dadd( -23.9652, -75.3041, 3.34701, 0.22 ) }
    dend_8 { pt3dadd( -24.22, -76.1374, 3.7572, 0.22 ) }
    dend_8 { pt3dadd( -24.4923, -77.0769, 4.22248, 0.22 ) }
    dend_8 { pt3dadd( -24.9984, -78.8535, 5.10306, 0.15 ) }
    dend_8 { pt3dadd( -25.2825, -80.0775, 5.6841, 0.15 ) }
    dend_8 { pt3dadd( -25.5828, -81.663, 6.4516, 0.15 ) }
    dend_8 { pt3dadd( -25.746, -82.6932, 6.98349, 0.15 ) }
    dend_8 { pt3dadd( -25.8422, -83.4302, 7.39111, 0.15 ) }
    dend_8 { pt3dadd( -25.9125, -84.5228, 8.01255, 0.15 ) }
    dend_8 { pt3dadd( -25.9141, -85.6902, 8.70554, 0.15 ) }
    dend_8 { pt3dadd( -25.9055, -86.1948, 9.01511, 0.22 ) }
    dend_8 { pt3dadd( -25.8776, -87.7947, 10.0044, 0.07 ) }
    dend_8 { pt3dadd( -25.8744, -88.8714, 10.6749, 0.07 ) }
    dend_8 { pt3dadd( -25.9121, -90.0578, 11.4543, 0.07 ) }
    dend_8 { pt3dadd( -25.9898, -90.9816, 12.1153, 0.15 ) }
    dend_8 { pt3dadd( -26.2505, -92.4386, 13.2348, 0.07 ) }
    dend_8 { pt3dadd( -26.3464, -92.8669, 13.5628, 0.15 ) }
    dend_8 { pt3dadd( -26.6949, -94.1251, 14.5486, 0.15 ) }
    dend_8 { pt3dadd( -27.0581, -95.2168, 15.437, 0.29 ) }
    dend_8 { pt3dadd( -27.4793, -96.2601, 16.3404, 0.22 ) }
    dend_8 { pt3dadd( -27.9813, -97.3652, 17.2942, 0.22 ) }
    dend_8 { pt3dadd( -28.5126, -98.4845, 18.2184, 0.15 ) }
    dend_8 { pt3dadd( -29.0063, -99.5425, 19.0812, 0.15 ) }
    dend_8 { pt3dadd( -29.4341, -100.461, 19.7921, 0.15 ) }
    dend_8 { pt3dadd( -29.9523, -101.593, 20.6446, 0.15 ) }
    dend_8 { pt3dadd( -30.7224, -103.321, 21.9143, 0.15 ) }
    dend_8 { pt3dadd( -31.1622, -104.268, 22.6423, 0.15 ) }
    dend_8 { pt3dadd( -31.6922, -105.292, 23.4697, 0.15 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 90/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.676873, -31.0641, -15.8364, 0.44 ) }
    dend_5 { pt3dadd( 1.00029, -31.5822, -15.2828, 0.44 ) }
    dend_5 { pt3dadd( 1.88017, -31.8597, -15.1546, 0.52 ) }
    dend_5 { pt3dadd( 2.77201, -32.1442, -15.1225, 0.29 ) }
    dend_5 { pt3dadd( 3.35757, -32.3488, -15.1331, 0.22 ) }
    dend_5 { pt3dadd( 4.25772, -32.7014, -15.1766, 0.59 ) }
    dend_5 { pt3dadd( 4.88829, -32.95, -15.215, 1.18 ) }
    dend_5 { pt3dadd( 5.6034, -33.2028, -15.336, 0.29 ) }
    dend_5 { pt3dadd( 6.59291, -33.4793, -15.5278, 0.29 ) }
    dend_5 { pt3dadd( 7.39843, -33.6581, -15.7352, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_5 { pt3dadd( 8.11625, -33.8023, -15.9715, 0.59 ) }
    dend_5 { pt3dadd( 8.44232, -33.8613, -16.0846, 0.59 ) }
    dend_5 { pt3dadd( 9.31655, -33.978, -16.4129, 0.29 ) }
    dend_5 { pt3dadd( 9.98551, -34.0354, -16.6621, 0.22 ) }
    dend_5 { pt3dadd( 10.8738, -34.1282, -16.9721, 0.22 ) }
    dend_5 { pt3dadd( 11.517, -34.2102, -17.1606, 0.22 ) }
    dend_5 { pt3dadd( 11.9238, -34.2668, -17.2665, 0.44 ) }
    dend_5 { pt3dadd( 12.532, -34.3715, -17.3993, 0.44 ) }
    dend_5 { pt3dadd( 13.3849, -34.5437, -17.506, 0.29 ) }
    dend_5 { pt3dadd( 14.5231, -34.777, -17.5528, 0.22 ) }
    dend_5 { pt3dadd( 15.1891, -34.9014, -17.5379, 0.29 ) }
    dend_5 { pt3dadd( 16.2425, -35.0907, -17.4887, 0.22 ) }
    dend_5 { pt3dadd( 16.9556, -35.2305, -17.4508, 0.22 ) }
    dend_5 { pt3dadd( 17.8414, -35.4273, -17.3995, 0.22 ) }
    dend_5 { pt3dadd( 18.5078, -35.6108, -17.3586, 0.59 ) }
    dend_5 { pt3dadd( 19.0961, -35.7918, -17.3252, 0.59 ) }
    dend_5 { pt3dadd( 20.0481, -36.125, -17.3153, 0.22 ) }
    dend_5 { pt3dadd( 20.6727, -36.3748, -17.3517, 0.44 ) }
    dend_5 { pt3dadd( 21.6196, -36.8005, -17.4803, 0.59 ) }
    dend_5 { pt3dadd( 22.9554, -37.4624, -17.7348, 0.22 ) }
    dend_5 { pt3dadd( 23.514, -37.7793, -17.8551, 0.22 ) }
    dend_5 { pt3dadd( 24.4648, -38.4009, -18.1043, 0.29 ) }
    dend_5 { pt3dadd( 25.3808, -39.0638, -18.4292, 0.22 ) }
    dend_5 { pt3dadd( 25.9786, -39.5579, -18.7038, 0.22 ) }
    dend_5 { pt3dadd( 26.5669, -40.1283, -19.0763, 0.44 ) }
    dend_5 { pt3dadd( 27.0172, -40.6469, -19.4629, 0.44 ) }
    dend_5 { pt3dadd( 27.3142, -41.0428, -19.7593, 0.59 ) }
    dend_5 { pt3dadd( 27.9002, -41.91, -20.4041, 0.66 ) }
    dend_5 { pt3dadd( 28.2033, -42.3667, -20.7655, 0.22 ) }
    dend_5 { pt3dadd( 28.892, -43.3156, -21.5999, 0.22 ) }
    dend_5 { pt3dadd( 29.4301, -44.0028, -22.2361, 0.22 ) }
    dend_5 { pt3dadd( 29.8545, -44.5194, -22.7023, 0.22 ) }
    dend_5 { pt3dadd( 30.3107, -45.1083, -23.1624, 0.22 ) }
    dend_5 { pt3dadd( 30.5327, -45.4493, -23.3577, 0.22 ) }
    dend_5 { pt3dadd( 30.9114, -46.1075, -23.6553, 0.29 ) }
    dend_5 { pt3dadd( 31.0991, -46.484, -23.7794, 0.29 ) }
    dend_5 { pt3dadd( 31.3176, -46.9771, -23.9551, 0.29 ) }
    dend_5 { pt3dadd( 31.5463, -47.5183, -24.2131, 0.29 ) }
    dend_5 { pt3dadd( 31.8799, -48.3973, -24.6989, 0.29 ) }
    dend_5 { pt3dadd( 32.2187, -49.3873, -25.3614, 0.29 ) }
    dend_5 { pt3dadd( 32.3202, -49.7436, -25.5951, 0.44 ) }
    dend_5 { pt3dadd( 32.6078, -50.6999, -26.2411, 0.37 ) }
    dend_5 { pt3dadd( 32.9315, -51.5673, -26.8761, 0.37 ) }
    dend_5 { pt3dadd( 33.0753, -51.8927, -27.1155, 0.37 ) }
    dend_5 { pt3dadd( 33.5598, -52.8654, -27.7907, 0.37 ) }
    dend_5 { pt3dadd( 34.4797, -54.5862, -28.831, 0.22 ) }
    dend_5 { pt3dadd( 34.8385, -55.2353, -29.1672, 0.22 ) }
    dend_5 { pt3dadd( 35.407, -56.2847, -29.5601, 0.22 ) }
    dend_5 { pt3dadd( 35.7992, -57.0412, -29.7873, 0.22 ) }
    dend_5 { pt3dadd( 36.1407, -57.6838, -29.9707, 0.29 ) }
    dend_5 { pt3dadd( 36.476, -58.2646, -30.1393, 0.29 ) }
    dend_5 { pt3dadd( 36.7039, -58.6203, -30.2755, 0.29 ) }
    dend_5 { pt3dadd( 37.2135, -59.4616, -30.6152, 0.22 ) }
    dend_5 { pt3dadd( 37.6909, -60.3149, -31.0112, 0.29 ) }
    dend_5 { pt3dadd( 38.1631, -61.1555, -31.4994, 0.22 ) }
    dend_5 { pt3dadd( 38.5934, -61.8504, -31.9463, 0.22 ) }
    dend_5 { pt3dadd( 38.7967, -62.147, -32.1369, 0.22 ) }
    dend_5 { pt3dadd( 39.1368, -62.5758, -32.3961, 0.29 ) }
    dend_5 { pt3dadd( 39.6508, -63.1618, -32.7308, 0.29 ) }
    dend_5 { pt3dadd( 40.1107, -63.6643, -32.9626, 0.29 ) }
    dend_5 { pt3dadd( 40.5648, -64.1479, -33.1568, 0.29 ) }
    dend_5 { pt3dadd( 41.0261, -64.6661, -33.3317, 0.22 ) }
    dend_5 { pt3dadd( 41.7717, -65.5274, -33.6327, 0.29 ) }
    dend_5 { pt3dadd( 42.4458, -66.3099, -33.8915, 0.22 ) }
    dend_5 { pt3dadd( 42.9144, -66.857, -34.0661, 0.22 ) }
    dend_5 { pt3dadd( 43.4698, -67.5491, -34.2865, 0.22 ) }
    dend_5 { pt3dadd( 43.9382, -68.1599, -34.4949, 0.29 ) }
    dend_5 { pt3dadd( 44.3341, -68.6957, -34.6896, 0.29 ) }
    dend_5 { pt3dadd( 44.9045, -69.5553, -35.008, 0.15 ) }
    dend_5 { pt3dadd( 45.4467, -70.426, -35.2988, 0.15 ) }
    dend_5 { pt3dadd( 45.7786, -71.0038, -35.4949, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 71/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -8.04528, 10.903, 0.188249, 0.44 ) }
    dend_28 { pt3dadd( -8.64088, 11.6862, 0.20447, 0.44 ) }
    dend_28 { pt3dadd( -9.12683, 12.309, 0.1408, 0.37 ) }
    dend_28 { pt3dadd( -9.94116, 13.3935, 0.00764722, 0.52 ) }
    dend_28 { pt3dadd( -10.9909, 14.815, -0.185481, 0.37 ) }
    dend_28 { pt3dadd( -12.0535, 16.2472, -0.34904, 0.29 ) }
    dend_28 { pt3dadd( -12.9836, 17.4655, -0.462338, 0.29 ) }
    dend_28 { pt3dadd( -14.2897, 19.0567, -0.637805, 0.66 ) }
    dend_28 { pt3dadd( -15.1668, 20.0653, -0.793628, 0.29 ) }
    dend_28 { pt3dadd( -16.0222, 21.0177, -1.01525, 0.29 ) }
    dend_28 { pt3dadd( -16.6268, 21.6955, -1.2291, 0.29 ) }
    dend_28 { pt3dadd( -17.4416, 22.5837, -1.56466, 0.52 ) }
    dend_28 { pt3dadd( -18.1435, 23.3009, -1.86267, 0.44 ) }
    dend_28 { pt3dadd( -19.3447, 24.421, -2.37435, 0.44 ) }
    dend_28 { pt3dadd( -20.5019, 25.4772, -2.87207, 0.44 ) }
    dend_28 { pt3dadd( -21.719, 26.6387, -3.40939, 0.29 ) }
    dend_28 { pt3dadd( -22.9007, 27.8271, -3.95102, 0.22 ) }
    dend_28 { pt3dadd( -23.4419, 28.4049, -4.19903, 0.22 ) }
    dend_28 { pt3dadd( -24.6118, 29.6492, -4.75949, 0.22 ) }
    dend_28 { pt3dadd( -25.1607, 30.2147, -5.01333, 0.22 ) }
    dend_28 { pt3dadd( -26.0804, 31.1174, -5.38754, 0.22 ) }
    dend_28 { pt3dadd( -26.7484, 31.7193, -5.67202, 0.29 ) }
    dend_28 { pt3dadd( -27.5248, 32.3372, -5.99536, 0.29 ) }
    dend_28 { pt3dadd( -29.1332, 33.4374, -6.56249, 0.22 ) }
    dend_28 { pt3dadd( -30.122, 34.0279, -6.81198, 0.22 ) }
    dend_28 { pt3dadd( -31.8992, 34.9903, -6.98829, 0.15 ) }
    dend_28 { pt3dadd( -32.9992, 35.5408, -6.91032, 0.15 ) }
    dend_28 { pt3dadd( -34.4484, 36.2708, -6.56557, 0.22 ) }
    dend_28 { pt3dadd( -35.6795, 36.9046, -6.08994, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_28 { pt3dadd( -36.8032, 37.5146, -5.51055, 0.22 ) }
    dend_28 { pt3dadd( -37.8574, 38.0764, -4.92219, 0.22 ) }
    dend_28 { pt3dadd( -38.3892, 38.3647, -4.6204, 0.22 ) }
    dend_28 { pt3dadd( -39.6722, 39.1564, -3.89265, 0.37 ) }
    dend_28 { pt3dadd( -40.4984, 39.7092, -3.46798, 0.37 ) }
    dend_28 { pt3dadd( -41.3322, 40.2805, -3.0632, 0.22 ) }
    dend_28 { pt3dadd( -42.9104, 41.3573, -2.28753, 0.15 ) }
    dend_28 { pt3dadd( -43.4509, 41.7417, -1.99835, 0.22 ) }
    dend_28 { pt3dadd( -44.4726, 42.5128, -1.37482, 0.29 ) }
    dend_28 { pt3dadd( -45.2166, 43.0996, -0.794376, 0.15 ) }
    dend_28 { pt3dadd( -46.1477, 43.8328, 0.0834967, 0.15 ) }
    dend_28 { pt3dadd( -46.7488, 44.2567, 0.705283, 0.29 ) }
    dend_28 { pt3dadd( -47.5402, 44.8073, 1.6327, 0.29 ) }
    dend_28 { pt3dadd( -48.2708, 45.2531, 2.52354, 0.37 ) }
    dend_28 { pt3dadd( -49.1546, 45.6902, 3.61439, 0.37 ) }
    dend_28 { pt3dadd( -49.7356, 45.9618, 4.32312, 0.15 ) }
    dend_28 { pt3dadd( -50.5473, 46.3265, 5.18279, 0.22 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 17/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -8.04528, 10.903, 0.188249, 0.37 ) }
    dend_25 { pt3dadd( -7.83617, 11.9753, 0.36468, 0.37 ) }
    dend_25 { pt3dadd( -7.70512, 13.3288, 0.628669, 0.29 ) }
    dend_25 { pt3dadd( -7.66856, 14.4938, 0.821237, 0.52 ) }
    dend_25 { pt3dadd( -7.7021, 15.236, 0.929972, 0.29 ) }
    dend_25 { pt3dadd( -7.82014, 16.3196, 1.02259, 0.15 ) }
    dend_25 { pt3dadd( -7.93749, 17.1886, 1.04029, 0.15 ) }
    dend_25 { pt3dadd( -8.05278, 17.7319, 1.02586, 0.15 ) }
    dend_25 { pt3dadd( -8.23719, 18.4724, 0.960529, 0.15 ) }
    dend_25 { pt3dadd( -8.43864, 19.3841, 0.746109, 0.66 ) }
    dend_25 { pt3dadd( -8.65541, 20.7241, 0.291052, 0.22 ) }
    dend_25 { pt3dadd( -8.77496, 21.7639, -0.131768, 0.22 ) }
    dend_25 { pt3dadd( -8.81856, 22.2654, -0.350075, 0.37 ) }
    dend_25 { pt3dadd( -8.91734, 23.2497, -0.760277, 0.44 ) }
    dend_25 { pt3dadd( -9.06243, 24.6305, -1.28921, 0.59 ) }
    dend_25 { pt3dadd( -9.19388, 25.6784, -1.69018, 0.44 ) }
    dend_25 { pt3dadd( -9.37867, 26.6984, -2.08578, 0.22 ) }
    dend_25 { pt3dadd( -9.58348, 27.5901, -2.42665, 0.22 ) }
    dend_25 { pt3dadd( -9.86226, 28.6307, -2.78908, 0.29 ) }
    dend_25 { pt3dadd( -10.2242, 29.8659, -3.1271, 0.22 ) }
    dend_25 { pt3dadd( -10.6214, 31.1101, -3.3711, 0.29 ) }
    dend_25 { pt3dadd( -11.0901, 32.5549, -3.58036, 0.22 ) }
    dend_25 { pt3dadd( -11.2388, 33.0354, -3.62258, 0.22 ) }
    dend_25 { pt3dadd( -11.5949, 34.1664, -3.64634, 0.29 ) }
    dend_25 { pt3dadd( -11.85, 34.99, -3.60099, 0.15 ) }
    dend_25 { pt3dadd( -12.1743, 36.0245, -3.46199, 0.15 ) }
    dend_25 { pt3dadd( -12.3727, 36.6977, -3.32543, 0.22 ) }
    dend_25 { pt3dadd( -12.5607, 37.3044, -3.18347, 0.44 ) }
    dend_25 { pt3dadd( -12.747, 37.8563, -3.07083, 0.22 ) }
    dend_25 { pt3dadd( -12.9565, 38.4431, -2.99065, 0.22 ) }
    dend_25 { pt3dadd( -13.3852, 39.6245, -2.8974, 0.22 ) }
    dend_25 { pt3dadd( -13.6401, 40.3637, -2.8893, 0.22 ) }
    dend_25 { pt3dadd( -13.9054, 41.1666, -2.90499, 0.22 ) }
    dend_25 { pt3dadd( -14.0854, 41.7747, -2.94799, 0.29 ) }
    dend_25 { pt3dadd( -14.2541, 42.4196, -2.9757, 0.29 ) }
    dend_25 { pt3dadd( -14.4397, 43.1428, -3.00799, 0.29 ) }
    dend_25 { pt3dadd( -14.662, 44.0307, -3.02841, 0.29 ) }
    dend_25 { pt3dadd( -14.808, 44.7457, -3.05936, 0.29 ) }
    dend_25 { pt3dadd( -15.0075, 46.0635, -3.12874, 0.22 ) }
    dend_25 { pt3dadd( -15.1763, 47.2115, -3.18467, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 57/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -22.3671, -77.4438, -27.2167, 0.15 ) }
    dend_13 { pt3dadd( -22.9569, -77.7086, -26.6115, 0.15 ) }
    dend_13 { pt3dadd( -23.7699, -78.0895, -25.7514, 0.22 ) }
    dend_13 { pt3dadd( -24.4818, -78.4497, -25.0218, 0.22 ) }
    dend_13 { pt3dadd( -25.2779, -78.8699, -24.1887, 0.15 ) }
    dend_13 { pt3dadd( -26.0587, -79.2835, -23.3599, 0.15 ) }
    dend_13 { pt3dadd( -27.045, -79.8335, -22.3217, 0.15 ) }
    dend_13 { pt3dadd( -27.7002, -80.2148, -21.6591, 0.15 ) }
    dend_13 { pt3dadd( -28.2667, -80.5778, -21.1405, 0.15 ) }
    dend_13 { pt3dadd( -29.0026, -81.115, -20.5227, 0.15 ) }
    dend_13 { pt3dadd( -29.6703, -81.6565, -19.9932, 0.15 ) }
    dend_13 { pt3dadd( -30.2621, -82.1534, -19.5485, 0.22 ) }
    dend_13 { pt3dadd( -31.0182, -82.7574, -19.02, 0.22 ) }
    dend_13 { pt3dadd( -31.9505, -83.5266, -18.3552, 0.22 ) }
    dend_13 { pt3dadd( -32.5915, -84.0521, -17.8735, 0.15 ) }
    dend_13 { pt3dadd( -33.1369, -84.4878, -17.4242, 0.29 ) }
    dend_13 { pt3dadd( -33.983, -85.1123, -16.6321, 0.29 ) }
    dend_13 { pt3dadd( -34.6197, -85.5327, -16.003, 0.15 ) }
    dend_13 { pt3dadd( -35.1493, -85.862, -15.4667, 0.15 ) }
    dend_13 { pt3dadd( -35.8786, -86.2892, -14.7409, 0.15 ) }
    dend_13 { pt3dadd( -37.0634, -86.9658, -13.6606, 0.15 ) }
    dend_13 { pt3dadd( -38.0158, -87.4974, -12.8615, 0.15 ) }
    dend_13 { pt3dadd( -39.0268, -88.0493, -12.0693, 0.15 ) }
    dend_13 { pt3dadd( -39.7953, -88.4846, -11.4934, 0.15 ) }
    dend_13 { pt3dadd( -41.0097, -89.1914, -10.6942, 0.15 ) }
    dend_13 { pt3dadd( -41.6947, -89.6141, -10.2875, 0.29 ) }
    dend_13 { pt3dadd( -42.8706, -90.3924, -9.62135, 0.22 ) }
    dend_13 { pt3dadd( -43.7399, -90.9975, -9.06813, 0.22 ) }
    dend_13 { pt3dadd( -44.2311, -91.3542, -8.70567, 0.22 ) }
    dend_13 { pt3dadd( -45.4006, -92.2458, -7.79366, 0.15 ) }
    dend_13 { pt3dadd( -46.1391, -92.8635, -7.21008, 0.15 ) }
    dend_13 { pt3dadd( -46.8982, -93.5623, -6.5958, 0.15 ) }
    dend_13 { pt3dadd( -47.8711, -94.5518, -5.82282, 0.15 ) }
    dend_13 { pt3dadd( -48.4747, -95.2069, -5.37619, 0.15 ) }
    dend_13 { pt3dadd( -49.0553, -95.857, -4.97553, 0.22 ) }
    dend_13 { pt3dadd( -50.148, -97.1107, -4.31948, 0.15 ) }
    dend_13 { pt3dadd( -51.0142, -98.1388, -3.95284, 0.15 ) }
    dend_13 { pt3dadd( -52.2036, -99.5849, -3.69927, 0.15 ) }
    dend_13 { pt3dadd( -53.2363, -100.839, -3.67576, 0.15 ) }
    dend_13 { pt3dadd( -53.7482, -101.449, -3.73876, 0.22 ) }
    dend_13 { pt3dadd( -54.5297, -102.34, -3.94038, 0.15 ) }
    dend_13 { pt3dadd( -55.5725, -103.476, -4.36378, 0.15 ) }
    dend_13 { pt3dadd( -56.4756, -104.436, -4.82602, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_13 { pt3dadd( -57.1296, -105.106, -5.22627, 0.15 ) }
    dend_13 { pt3dadd( -57.7607, -105.734, -5.63384, 0.15 ) }
    dend_13 { pt3dadd( -58.7434, -106.711, -6.26711, 0.15 ) }
    dend_13 { pt3dadd( -59.0419, -107.01, -6.445, 0.15 ) }
    dend_13 { pt3dadd( -59.9465, -107.803, -6.81753, 0.22 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 5/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -22.3671, -77.4438, -27.2167, 0.15 ) }
    dend_12 { pt3dadd( -22.1999, -77.8151, -26.5742, 0.15 ) }
    dend_12 { pt3dadd( -21.9737, -78.3171, -25.7054, 0.15 ) }
    dend_12 { pt3dadd( -21.7594, -78.7929, -24.8821, 0.15 ) }
    dend_12 { pt3dadd( -21.5803, -79.1906, -24.1938, 0.15 ) }
    dend_12 { pt3dadd( -21.3386, -79.7271, -23.2653, 0.07 ) }
    dend_12 { pt3dadd( -20.5152, -82.8457, -16.394, 0.07 ) }
    dend_12 { pt3dadd( -18.6245, -85.837, -9.69468, 0.07 ) }
    dend_12 { pt3dadd( -17.7969, -90.0922, -3.40153, 0.07 ) }
    dend_12 { pt3dadd( -16.4243, -95.075, 2.26966, 0.07 ) }
    dend_12 { pt3dadd( -15.3635, -99.6715, 8.30016, 0.07 ) }
    dend_12 { pt3dadd( -13.0772, -104.168, 14.0325, 0.07 ) }
    dend_12 { pt3dadd( -10.4601, -108.534, 19.7096, 0.07 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 18/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 45.7786, -71.0038, -35.4949, 0.15 ) }
    dend_7 { pt3dadd( 45.8249, -71.4889, -35.2564, 0.15 ) }
    dend_7 { pt3dadd( 45.8616, -71.8745, -35.0668, 0.15 ) }
    dend_7 { pt3dadd( 45.8998, -72.2753, -34.8697, 0.15 ) }
    dend_7 { pt3dadd( 45.9207, -72.4942, -34.762, 0.22 ) }
    dend_7 { pt3dadd( 46.6306, -76.1949, -32.5505, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 24/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 45.7786, -71.0038, -35.4949, 0.29 ) }
    dend_6 { pt3dadd( 46.3977, -71.4791, -35.8127, 0.29 ) }
    dend_6 { pt3dadd( 46.9983, -71.921, -36.0958, 0.37 ) }
    dend_6 { pt3dadd( 47.7384, -72.4585, -36.429, 0.29 ) }
    dend_6 { pt3dadd( 48.3973, -72.89, -36.7133, 0.07 ) }
    dend_6 { pt3dadd( 49.011, -73.2581, -36.9695, 0.15 ) }
    dend_6 { pt3dadd( 49.4711, -73.4805, -37.2026, 0.15 ) }
    dend_6 { pt3dadd( 49.8145, -73.6232, -37.3988, 0.22 ) }
    dend_6 { pt3dadd( 50.5198, -73.8812, -37.8336, 0.22 ) }
    dend_6 { pt3dadd( 51.382, -74.1349, -38.4323, 0.15 ) }
    dend_6 { pt3dadd( 52.0439, -74.3141, -38.9409, 0.29 ) }
    dend_6 { pt3dadd( 53.9767, -74.8293, -40.4776, 0.15 ) }
    dend_6 { pt3dadd( 54.6983, -75.0289, -41.0633, 0.15 ) }
    dend_6 { pt3dadd( 54.9404, -75.0994, -41.2621, 0.22 ) }
    dend_6 { pt3dadd( 55.6782, -75.3222, -41.8638, 0.15 ) }
    dend_6 { pt3dadd( 56.3929, -75.5683, -42.4312, 0.15 ) }
    dend_6 { pt3dadd( 56.9834, -75.8002, -42.873, 0.15 ) }
    dend_6 { pt3dadd( 57.6343, -76.1121, -43.3288, 0.22 ) }
    dend_6 { pt3dadd( 58.1708, -76.3734, -43.7531, 0.22 ) }
    dend_6 { pt3dadd( 58.7519, -76.673, -44.2549, 0.22 ) }
    dend_6 { pt3dadd( 59.0291, -76.8209, -44.5132, 0.37 ) }
    dend_6 { pt3dadd( 59.459, -77.0435, -44.9317, 0.37 ) }
    dend_6 { pt3dadd( 60.3931, -77.5309, -45.8757, 0.15 ) }
    dend_6 { pt3dadd( 61.2389, -78.0064, -46.7312, 0.15 ) }
    dend_6 { pt3dadd( 61.7368, -78.2774, -47.2182, 0.22 ) }
    dend_6 { pt3dadd( 62.3822, -78.591, -47.8092, 0.22 ) }
    dend_6 { pt3dadd( 62.6596, -78.695, -48.0296, 0.29 ) }
    dend_6 { pt3dadd( 63.1146, -78.8137, -48.3298, 0.15 ) }
    dend_6 { pt3dadd( 63.4882, -78.8759, -48.5351, 0.29 ) }
    dend_6 { pt3dadd( 64.5055, -79.0119, -49.0709, 0.15 ) }
    dend_6 { pt3dadd( 65.3697, -79.1143, -49.6149, 0.15 ) }
    dend_6 { pt3dadd( 65.9382, -79.1997, -50.0334, 0.15 ) }
    dend_6 { pt3dadd( 66.4976, -79.2956, -50.5593, 0.15 ) }
    dend_6 { pt3dadd( 66.8543, -79.3693, -50.9715, 0.15 ) }
    dend_6 { pt3dadd( 67.3372, -79.5022, -51.6163, 0.15 ) }
    dend_6 { pt3dadd( 67.749, -79.6887, -52.2193, 0.22 ) }
    dend_6 { pt3dadd( 68.0494, -79.8695, -52.6659, 0.37 ) }
    dend_6 { pt3dadd( 68.5856, -80.25, -53.4665, 0.37 ) }
    dend_6 { pt3dadd( 68.8571, -80.4404, -53.8246, 0.37 ) }
    dend_6 { pt3dadd( 69.2457, -80.7365, -54.2376, 0.37 ) }
    dend_6 { pt3dadd( 69.7626, -81.1976, -54.6293, 0.22 ) }
    dend_6 { pt3dadd( 70.4022, -81.9099, -54.9186, 0.22 ) }
    dend_6 { pt3dadd( 70.6064, -82.162, -54.9673, 0.22 ) }
    dend_6 { pt3dadd( 71.2813, -83.0205, -55.0307, 0.22 ) }
    dend_6 { pt3dadd( 72.8682, -84.9511, -55.1451, 0.15 ) }
    dend_6 { pt3dadd( 73.5376, -85.6825, -55.2119, 0.15 ) }
    dend_6 { pt3dadd( 74.1688, -86.2658, -55.3352, 0.15 ) }
    dend_6 { pt3dadd( 74.9795, -86.8887, -55.5258, 0.15 ) }
    dend_6 { pt3dadd( 75.8589, -87.4234, -55.8283, 0.22 ) }
    dend_6 { pt3dadd( 76.4208, -87.6899, -56.101, 0.22 ) }
    dend_6 { pt3dadd( 77.1831, -87.9918, -56.5491, 0.15 ) }
    dend_6 { pt3dadd( 78.0387, -88.2996, -57.0656, 0.15 ) }
    dend_6 { pt3dadd( 78.4082, -88.4415, -57.3083, 0.15 ) }
    dend_6 { pt3dadd( 79.1288, -88.767, -57.8063, 0.22 ) }
    dend_6 { pt3dadd( 79.9163, -89.1583, -58.3429, 0.22 ) }
    dend_6 { pt3dadd( 80.6929, -89.5869, -58.8348, 0.37 ) }
    dend_6 { pt3dadd( 81.6401, -90.1453, -59.4114, 0.15 ) }
    dend_6 { pt3dadd( 82.274, -90.5048, -59.7549, 0.22 ) }
    dend_6 { pt3dadd( 83.1024, -90.9645, -60.1437, 0.22 ) }
    dend_6 { pt3dadd( 83.662, -91.2761, -60.3652, 0.22 ) }
    dend_6 { pt3dadd( 84.3108, -91.625, -60.5972, 0.22 ) }
    dend_6 { pt3dadd( 85.4351, -92.1885, -60.9886, 0.15 ) }
    dend_6 { pt3dadd( 86.7552, -92.8211, -61.4116, 0.15 ) }
    dend_6 { pt3dadd( 87.6568, -93.2273, -61.7, 0.15 ) }
    dend_6 { pt3dadd( 88.3408, -93.5465, -61.9399, 0.15 ) }
    dend_6 { pt3dadd( 94.872, -97.5141, -65.6608, 0.15 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 90/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -50.5473, 46.3265, 5.18279, 0.22 ) }
    dend_32 { pt3dadd( -50.8613, 46.5588, 5.9213, 0.22 ) }
    dend_32 { pt3dadd( -51.6727, 47.2269, 7.28855, 0.22 ) }
    dend_32 { pt3dadd( -52.6626, 48.1487, 8.65182, 0.22 ) }
    dend_32 { pt3dadd( -53.4493, 48.9761, 9.59548, 0.22 ) }
    dend_32 { pt3dadd( -53.9414, 49.5358, 10.1667, 0.66 ) }
    dend_32 { pt3dadd( -54.3977, 50.0882, 10.6914, 0.66 ) }
    dend_32 { pt3dadd( -55.2203, 51.2256, 11.5042, 0.22 ) }
    dend_32 { pt3dadd( -55.6827, 51.9956, 11.9498, 0.22 ) }
    dend_32 { pt3dadd( -56.0483, 52.81, 12.4011, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_32 { pt3dadd( -56.4395, 54.0417, 13.1269, 0.22 ) }
    dend_32 { pt3dadd( -56.5594, 54.5732, 13.4791, 0.22 ) }
    dend_32 { pt3dadd( -56.6766, 55.4693, 14.1072, 0.22 ) }
    dend_32 { pt3dadd( -56.7332, 56.7384, 15.0877, 0.22 ) }
    dend_32 { pt3dadd( -56.7342, 58.2188, 16.355, 0.15 ) }
    dend_32 { pt3dadd( -56.7257, 58.8633, 16.9037, 0.22 ) }
    dend_32 { pt3dadd( -56.6837, 59.9214, 17.7666, 0.22 ) }
    dend_32 { pt3dadd( -56.6358, 60.672, 18.401, 0.15 ) }
    dend_32 { pt3dadd( -56.5563, 61.8087, 19.392, 0.15 ) }
    dend_32 { pt3dadd( -56.4969, 62.725, 20.1759, 0.15 ) }
    dend_32 { pt3dadd( -56.4194, 63.6584, 21.0007, 0.22 ) }
    dend_32 { pt3dadd( -56.3141, 64.6072, 21.8782, 0.22 ) }
    dend_32 { pt3dadd( -56.1835, 65.5923, 22.779, 0.22 ) }
    dend_32 { pt3dadd( -56.1315, 65.946, 23.1106, 0.22 ) }
    dend_32 { pt3dadd( -56.0208, 66.8118, 23.841, 0.22 ) }
    dend_32 { pt3dadd( -55.948, 67.5769, 24.4533, 0.22 ) }
    dend_32 { pt3dadd( -55.9251, 68.1229, 24.9116, 0.22 ) }
    dend_32 { pt3dadd( -55.934, 68.4823, 25.199, 0.22 ) }
    dend_32 { pt3dadd( -55.9857, 69.2279, 25.7737, 0.22 ) }
    dend_32 { pt3dadd( -56.1098, 70.4206, 26.6713, 0.44 ) }
    dend_32 { pt3dadd( -56.1662, 70.8417, 26.9855, 0.22 ) }
    dend_32 { pt3dadd( -56.5685, 72.9476, 28.5557, 0.15 ) }
    dend_32 { pt3dadd( -56.8537, 73.9699, 29.3415, 0.15 ) }
    dend_32 { pt3dadd( -57.1024, 74.672, 29.9156, 0.15 ) }
    dend_32 { pt3dadd( -57.3947, 75.3586, 30.4916, 0.15 ) }
    dend_32 { pt3dadd( -57.7166, 76.0275, 31.0756, 0.15 ) }
    dend_32 { pt3dadd( -57.9419, 76.4486, 31.4443, 0.15 ) }
    dend_32 { pt3dadd( -58.7126, 77.5851, 32.3925, 0.15 ) }
    dend_32 { pt3dadd( -59.1365, 78.1268, 32.8482, 0.15 ) }
    dend_32 { pt3dadd( -59.6271, 78.7197, 33.3555, 0.15 ) }
    dend_32 { pt3dadd( -60.3537, 79.5553, 34.1086, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -50.5473, 46.3265, 5.18279, 0.22 ) }
    dend_29 { pt3dadd( -51.2758, 46.7015, 6.35841, 0.22 ) }
    dend_29 { pt3dadd( -51.9738, 47.009, 7.22881, 0.22 ) }
    dend_29 { pt3dadd( -53.1898, 47.5753, 8.48917, 0.15 ) }
    dend_29 { pt3dadd( -54.3618, 48.1629, 9.53666, 0.15 ) }
    dend_29 { pt3dadd( -55.1934, 48.5976, 10.2074, 0.22 ) }
    dend_29 { pt3dadd( -55.9402, 48.9906, 10.7571, 0.15 ) }
    dend_29 { pt3dadd( -56.8686, 49.4638, 11.2651, 0.15 ) }
    dend_29 { pt3dadd( -57.7783, 49.9314, 11.6446, 0.15 ) }
    dend_29 { pt3dadd( -58.5545, 50.3497, 11.8631, 0.15 ) }
    dend_29 { pt3dadd( -59.206, 50.7334, 12.0064, 0.15 ) }
    dend_29 { pt3dadd( -59.8711, 51.1857, 12.203, 0.15 ) }
    dend_29 { pt3dadd( -60.7338, 51.7836, 12.5248, 0.29 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 44/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -15.1763, 47.2115, -3.18467, 0.15 ) }
    dend_27 { pt3dadd( -15.6929, 48.3709, -3.82304, 0.15 ) }
    dend_27 { pt3dadd( -16.1172, 49.3232, -4.34736, 0.22 ) }
    dend_27 { pt3dadd( -16.7683, 50.7842, -5.15178, 0.15 ) }
    dend_27 { pt3dadd( -17.2966, 51.97, -5.80462, 0.15 ) }
    dend_27 { pt3dadd( -17.838, 53.1848, -6.47349, 0.15 ) }
    dend_27 { pt3dadd( -20.1543, 63.4462, -13.7356, 0.15 ) }
    dend_27 { pt3dadd( -25.41, 72.709, -20.7753, 0.15 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 52/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -15.1763, 47.2115, -3.18467, 0.22 ) }
    dend_26 { pt3dadd( -14.9141, 48.8738, -3.26279, 0.22 ) }
    dend_26 { pt3dadd( -14.6179, 50.6834, -3.17756, 0.15 ) }
    dend_26 { pt3dadd( -14.4697, 51.651, -3.10402, 0.15 ) }
    dend_26 { pt3dadd( -14.3183, 52.882, -2.98017, 0.22 ) }
    dend_26 { pt3dadd( -14.2427, 53.7487, -2.87327, 0.15 ) }
    dend_26 { pt3dadd( -14.2006, 54.6202, -2.75262, 0.15 ) }
    dend_26 { pt3dadd( -14.2218, 55.6282, -2.52268, 0.22 ) }
    dend_26 { pt3dadd( -14.329, 56.422, -2.3137, 0.22 ) }
    dend_26 { pt3dadd( -14.5132, 57.1218, -2.14777, 0.22 ) }
    dend_26 { pt3dadd( -14.7714, 57.8195, -2.01934, 0.29 ) }
    dend_26 { pt3dadd( -15.0209, 58.3522, -1.92642, 0.29 ) }
    dend_26 { pt3dadd( -15.2835, 58.8385, -1.85232, 0.29 ) }
    dend_26 { pt3dadd( -15.765, 59.6152, -1.72265, 0.29 ) }
    dend_26 { pt3dadd( -16.5656, 60.6761, -1.48226, 0.22 ) }
    dend_26 { pt3dadd( -17.0773, 61.1821, -1.31464, 0.22 ) }
    dend_26 { pt3dadd( -17.8277, 61.6813, -1.05485, 0.22 ) }
    dend_26 { pt3dadd( -18.5221, 62.0856, -0.801702, 0.22 ) }
    dend_26 { pt3dadd( -18.9138, 62.2728, -0.650422, 0.22 ) }
    dend_26 { pt3dadd( -20.3861, 62.7686, -0.0757047, 0.15 ) }
    dend_26 { pt3dadd( -22.0291, 63.0487, 0.537594, 0.15 ) }
    dend_26 { pt3dadd( -23.3293, 63.1179, 1.00401, 0.15 ) }
    dend_26 { pt3dadd( -26.8496, 71.8906, 4.34294, 0.15 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 75/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -60.7338, 51.7836, 12.5248, 0.15 ) }
    dend_31 { pt3dadd( -62.2709, 52.2071, 13.9405, 0.15 ) }
    dend_31 { pt3dadd( -64.0435, 52.7655, 15.4258, 0.15 ) }
    dend_31 { pt3dadd( -64.8027, 53.0225, 16.0894, 0.15 ) }
    dend_31 { pt3dadd( -65.7189, 53.3156, 16.9123, 0.15 ) }
    dend_31 { pt3dadd( -66.6779, 53.6067, 17.8079, 0.29 ) }
    dend_31 { pt3dadd( -67.5037, 53.8713, 18.5725, 0.15 ) }
    dend_31 { pt3dadd( -68.8519, 54.3347, 19.6919, 0.22 ) }
    dend_31 { pt3dadd( -71.19, 55.1483, 21.5315, 0.15 ) }
    dend_31 { pt3dadd( -72.6735, 55.6371, 22.7461, 0.15 ) }
    dend_31 { pt3dadd( -73.5167, 55.9222, 23.4419, 0.15 ) }
    dend_31 { pt3dadd( -74.6872, 56.345, 24.4484, 0.22 ) }
    dend_31 { pt3dadd( -75.568, 56.6865, 25.225, 0.22 ) }
    dend_31 { pt3dadd( -76.341, 57.0093, 25.9175, 0.15 ) }
    dend_31 { pt3dadd( -77.2628, 57.4181, 26.8085, 0.15 ) }
    dend_31 { pt3dadd( -78.1347, 57.8141, 27.8018, 0.37 ) }
    dend_31 { pt3dadd( -79.005, 58.1696, 29.0497, 0.22 ) }
    dend_31 { pt3dadd( -79.8306, 58.4369, 30.4905, 0.15 ) }
    dend_31 { pt3dadd( -80.7053, 58.6595, 32.2325, 0.15 ) }
    dend_31 { pt3dadd( -81.3749, 58.8081, 33.6495, 0.15 ) }
    dend_31 { pt3dadd( -82.1964, 58.9611, 35.4535, 0.07 ) }
    dend_31 { pt3dadd( -83.3421, 59.0956, 38.0662, 0.07 ) }
    dend_31 { pt3dadd( -84.1297, 59.1265, 39.8278, 0.15 ) }
    dend_31 { pt3dadd( -85.3793, 59.1018, 42.7105, 0.15 ) }
    dend_31 { pt3dadd( -85.861, 59.0904, 43.8701, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 0/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -60.7338, 51.7836, 12.5248, 0.22 ) }
    dend_30 { pt3dadd( -61.4337, 51.6226, 12.1331, 0.22 ) }
    dend_30 { pt3dadd( -62.075, 51.4497, 11.8212, 0.22 ) }
    dend_30 { pt3dadd( -63.1065, 51.1582, 11.4066, 0.22 ) }
    dend_30 { pt3dadd( -64.1788, 50.8762, 11.0543, 0.22 ) }
    dend_30 { pt3dadd( -65.01, 50.7001, 10.8242, 0.22 ) }
    dend_30 { pt3dadd( -66.3098, 50.4954, 10.5373, 0.29 ) }
    dend_30 { pt3dadd( -67.1439, 50.3979, 10.4086, 0.22 ) }
    dend_30 { pt3dadd( -67.8247, 50.3688, 10.3665, 0.44 ) }
    dend_30 { pt3dadd( -68.4942, 50.3957, 10.4002, 0.44 ) }
    dend_30 { pt3dadd( -69.3315, 50.4764, 10.5221, 0.29 ) }
    dend_30 { pt3dadd( -70.5004, 50.6402, 10.7624, 0.29 ) }
    dend_30 { pt3dadd( -71.1173, 50.7467, 10.9308, 0.22 ) }
    dend_30 { pt3dadd( -71.6679, 50.8406, 11.1098, 0.22 ) }
    dend_30 { pt3dadd( -72.6004, 50.9966, 11.4416, 0.29 ) }
    dend_30 { pt3dadd( -73.4443, 51.1235, 11.8224, 0.22 ) }
    dend_30 { pt3dadd( -74.2063, 51.2277, 12.2318, 0.22 ) }
    dend_30 { pt3dadd( -74.6737, 51.2915, 12.5062, 0.22 ) }
    dend_30 { pt3dadd( -75.0653, 51.356, 12.7405, 0.22 ) }
    dend_30 { pt3dadd( -75.7544, 51.5055, 13.1425, 0.37 ) }
    dend_30 { pt3dadd( -76.7663, 51.7844, 13.7493, 0.37 ) }
    dend_30 { pt3dadd( -77.3106, 51.9519, 14.0577, 0.22 ) }
    dend_30 { pt3dadd( -78.4553, 52.3061, 14.7176, 0.15 ) }
    dend_30 { pt3dadd( -79.2906, 52.5513, 15.1808, 0.15 ) }
    dend_30 { pt3dadd( -80.0927, 52.7753, 15.6305, 0.22 ) }
    dend_30 { pt3dadd( -80.826, 52.9892, 16.0518, 0.22 ) }
    dend_30 { pt3dadd( -81.4428, 53.1836, 16.431, 0.29 ) }
    dend_30 { pt3dadd( -82.3158, 53.4581, 17.0343, 0.29 ) }
    dend_30 { pt3dadd( -83.1466, 53.7208, 17.6323, 0.22 ) }
    dend_30 { pt3dadd( -84.0625, 53.9775, 18.2579, 0.15 ) }
    dend_30 { pt3dadd( -84.8816, 54.1877, 18.7613, 0.22 ) }
    dend_30 { pt3dadd( -86.1227, 54.5071, 19.4311, 0.15 ) }
    dend_30 { pt3dadd( -86.9592, 54.7211, 19.8344, 0.15 ) }
    dend_30 { pt3dadd( -87.4658, 54.8413, 20.0449, 0.15 ) }
    dend_30 { pt3dadd( -88.6044, 55.0931, 20.4994, 0.29 ) }
    dend_30 { pt3dadd( -89.5185, 55.2845, 20.8344, 0.22 ) }
    dend_30 { pt3dadd( -90.5736, 55.5168, 21.2247, 0.66 ) }
    dend_30 { pt3dadd( -91.3506, 55.7076, 21.5284, 0.22 ) }
    dend_30 { pt3dadd( -92.0303, 55.8924, 21.8369, 0.15 ) }
    dend_30 { pt3dadd( -92.6872, 56.076, 22.1832, 0.15 ) }
    dend_30 { pt3dadd( -93.6291, 56.3312, 22.7407, 0.15 ) }
    dend_30 { pt3dadd( -94.585, 56.5743, 23.2752, 0.15 ) }
    dend_30 { pt3dadd( -95.3673, 56.7543, 23.6552, 0.15 ) }
    dend_30 { pt3dadd( -96.5015, 57.0158, 24.0959, 0.15 ) }
    dend_30 { pt3dadd( -97.1347, 57.1445, 24.2912, 0.15 ) }
    dend_30 { pt3dadd( -97.8098, 57.2626, 24.4675, 0.22 ) }
    dend_30 { pt3dadd( -99.2625, 57.4809, 24.7878, 0.52 ) }
    dend_30 { pt3dadd( -99.916, 57.5751, 24.9138, 0.52 ) }
    dend_30 { pt3dadd( -101.548, 57.8372, 25.2132, 0.15 ) }
    dend_30 { pt3dadd( -102.981, 58.0597, 25.4868, 0.15 ) }
    dend_30 { pt3dadd( -103.822, 58.1816, 25.6781, 0.15 ) }
    dend_30 { pt3dadd( -104.647, 58.2992, 25.8912, 0.37 ) }
    dend_30 { pt3dadd( -105.235, 58.3683, 26.0756, 0.37 ) }
    dend_30 { pt3dadd( -105.608, 58.4015, 26.158, 0.37 ) }
    dend_30 { pt3dadd( -106.336, 58.4633, 26.1871, 0.22 ) }
    dend_30 { pt3dadd( -106.873, 58.5235, 26.1153, 0.22 ) }
    dend_30 { pt3dadd( -107.514, 58.5873, 25.9649, 0.44 ) }
    dend_30 { pt3dadd( -108.128, 58.6389, 25.78, 0.59 ) }
    dend_30 { pt3dadd( -109.535, 58.7417, 25.3746, 0.22 ) }
    dend_30 { pt3dadd( -110.645, 58.8396, 25.0714, 0.22 ) }
    dend_30 { pt3dadd( -111.455, 58.9379, 24.8748, 0.52 ) }
    dend_30 { pt3dadd( -111.929, 59.0061, 24.7784, 0.52 ) }
    dend_30 { pt3dadd( -112.805, 59.1372, 24.6643, 0.37 ) }
    dend_30 { pt3dadd( -113.913, 59.3184, 24.6072, 0.29 ) }
    dend_30 { pt3dadd( -114.59, 59.4588, 24.6202, 0.29 ) }
    dend_30 { pt3dadd( -115.504, 59.7173, 24.6601, 0.59 ) }
    dend_30 { pt3dadd( -116.164, 59.9935, 24.6542, 0.59 ) }
    dend_30 { pt3dadd( -117.07, 60.4888, 24.5435, 0.22 ) }
    dend_30 { pt3dadd( -117.688, 60.8908, 24.3697, 0.37 ) }
    dend_30 { pt3dadd( -118.557, 61.5242, 23.9725, 0.22 ) }
    dend_30 { pt3dadd( -119.143, 61.9979, 23.5789, 0.22 ) }
    dend_30 { pt3dadd( -119.99, 62.7498, 22.9447, 0.15 ) }
    dend_30 { pt3dadd( -120.777, 63.5017, 22.2583, 0.15 ) }
    dend_30 { pt3dadd( -121.284, 64.0252, 21.7386, 0.15 ) }
    dend_30 { pt3dadd( -121.767, 64.5335, 21.1811, 0.29 ) }
    dend_30 { pt3dadd( -122.547, 65.3064, 20.219, 0.44 ) }
    dend_30 { pt3dadd( -123.573, 66.1703, 18.9415, 0.15 ) }
    dend_30 { pt3dadd( -132.256, 68.1312, 19.7382, 0.15 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_35, dend_34, dend_19, dend_14, dend_3, dend_0, dend_40, dend_39, dend_37, dend_36, dend_23, dend_20, dend_18, dend_15, dend_9, dend_4, dend_2, dend_1, dend_33, dend_24, dend_22, dend_21, dend_17, dend_16, dend_11, dend_10, dend_8, dend_5, dend_28, dend_25, dend_13, dend_12, dend_7, dend_6, dend_32, dend_29, dend_27, dend_26, dend_31, dend_30]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_35, dend_34, dend_19, dend_14, dend_3, dend_0, dend_40, dend_39, dend_37, dend_36, dend_23, dend_20, dend_18, dend_15, dend_9, dend_4, dend_2, dend_1, dend_33, dend_24, dend_22, dend_21, dend_17, dend_16, dend_11, dend_10, dend_8, dend_5, dend_28, dend_25, dend_13, dend_12, dend_7, dend_6, dend_32, dend_29, dend_27, dend_26, dend_31, dend_30]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_34 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_40 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_37 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_36 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_18 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_15 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_9 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_2 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_22 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_21 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_17 OneSecGrp_SectionRef_27.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_16 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_10 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_5 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_28 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_13 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_12 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_6 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_32 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_31 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_30 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_19 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_23 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_3 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_14 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_24 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_20 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_33 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_4 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_39 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_25 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_26 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_11 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_27 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_29 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_7 OneSecGrp_SectionRef_37.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_34 nseg = 5
    dend_40 nseg = 3
    dend_37 nseg = 5
    dend_36 nseg = 3
    dend_18 nseg = 13
    dend_15 nseg = 3
    dend_9 nseg = 3
    dend_2 nseg = 5
    dend_22 nseg = 3
    dend_21 nseg = 7
    dend_17 nseg = 3
    dend_16 nseg = 3
    dend_10 nseg = 3
    dend_8 nseg = 5
    dend_5 nseg = 3
    dend_28 nseg = 3
    dend_13 nseg = 3
    dend_12 nseg = 3
    dend_6 nseg = 3
    dend_32 nseg = 3
    dend_31 nseg = 3
    dend_30 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L1_DAC_56906d7a99_0_0


