// Cell: dNAC222_L4_SBC_1bad5bb92b_0_0
/*
{
  "id" : "dNAC222_L4_SBC_1bad5bb92b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-5.8534, -3.68898, 0.0, 3.87803", "-5.27984, -3.22888, 0.0, 6.96449", "-4.70627, -2.76878, 0.0, 8.7585", "-4.1327, -2.30868, 0.0, 10.0498", "-3.55914, -1.84858, 0.0, 11.0032", "-2.98557, -1.38848, 0.0, 12.0695", "-2.41201, -0.928385, 0.0, 12.4861", "-1.83844, -0.468287, 0.0, 12.8863", "-1.26487, -0.0081878, 0.0, 13.1702", "-0.691307, 0.451911, 0.0, 13.2491", "-0.117741, 0.91201, 0.0, 13.2672", "0.455825, 1.37211, 0.0, 13.2354", "1.02939, 1.83221, 0.0, 13.09", "1.60296, 2.29231, 0.0, 12.7829", "2.17652, 2.75241, 0.0, 12.3841", "2.75009, 3.2125, 0.0, 11.4175", "3.32366, 3.6726, 0.0, 10.2262", "3.89722, 4.1327, 0.0, 8.70811", "4.47079, 4.5928, 0.0, 6.9837", "5.04435, 5.0529, 0.0, 4.97808", "5.61792, 5.513, 0.0, 2.90913" ]
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-3.59355, 4.51989, 7.71, 0.96", "-3.2793, 6.90693, 9.24973, 0.96", "-3.23548, 7.76172, 9.78031, 0.96", "-3.23166, 9.25935, 10.7915, 0.74", "-3.24755, 10.3246, 11.5714, 1.03", "-3.25604, 11.4962, 12.5876, 0.81", "-3.22964, 12.2678, 13.4566, 0.59", "-3.16743, 12.9584, 14.5702, 0.59", "-3.06501, 13.2801, 15.5021, 0.59", "-2.96989, 13.3633, 16.1573, 0.59", "-2.67849, 13.3431, 17.8267, 0.59", "-2.26411, 13.0596, 19.7626, 0.88", "-1.8974, 12.7557, 21.0793, 1.18", "-1.39076, 12.3917, 22.4212, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-4.04355, -3.75186, 15.73, 0.66", "-4.26616, -4.5707, 16.1823, 0.66", "-4.37676, -4.9373, 16.3948, 0.66", "-4.57291, -5.4811, 16.7049, 0.66", "-4.92047, -6.35695, 17.1967, 0.96", "-5.54721, -7.91314, 18.0465, 0.66", "-5.76579, -8.48854, 18.3621, 0.66", "-5.9872, -9.2684, 18.7989, 0.66", "-6.17163, -10.0966, 19.2748, 0.66", "-6.27673, -10.6586, 19.5993, 0.88", "-6.42422, -11.3336, 19.982, 0.88", "-6.75196, -12.5511, 20.6165, 0.29", "-6.99656, -13.4013, 21.0356, 0.29", "-7.0983, -13.7331, 21.2038, 0.29", "-7.32067, -14.4293, 21.529, 0.66", "-7.54355, -15.304, 21.8942, 0.22", "-7.63769, -15.8017, 22.0597, 0.22", "-7.7741, -16.744, 22.3334, 1.03", "-7.87246, -17.5576, 22.5597, 1.03", "-7.98259, -19.0002, 22.9707, 0.37", "-8.00697, -20.6235, 23.4243, 0.07", "-7.95805, -21.5621, 23.701, 0.29", "-7.85553, -22.5055, 23.9771, 0.29", "-7.73544, -23.22, 24.1967, 0.37", "-7.54516, -24.0089, 24.4407, 0.52", "-7.40443, -24.4918, 24.624, 0.52", "-7.16574, -25.2898, 24.9826, 0.52", "-6.8716, -26.1689, 25.4598, 0.52", "-6.6534, -26.6813, 25.7608, 0.66", "-6.11956, -27.7347, 26.3943, 0.22", "-5.55686, -28.6789, 26.9597, 0.88", "-5.05505, -29.4363, 27.4055, 0.88", "-4.44222, -30.3293, 27.9044, 0.22", "-4.03499, -30.9177, 28.2271, 0.22", "-3.26882, -31.9762, 28.7624, 0.29", "-2.7154, -32.6806, 29.0843, 0.29", "-2.12034, -33.3842, 29.3694, 0.22", "-1.27271, -34.4161, 29.7349, 0.59", "-0.597919, -35.2753, 30.04, 0.22", "0.00882885, -36.0817, 30.3212, 0.22", "0.404931, -36.6204, 30.5468, 0.52", "1.13418, -37.7221, 31.0658, 0.15", "1.63532, -38.5455, 31.481, 0.15", "2.17085, -39.4912, 31.983, 0.15", "2.58686, -40.2859, 32.4327, 0.22", "3.14445, -41.4418, 33.147, 0.22", "3.55373, -42.2218, 33.6574, 0.22", "3.7639, -42.5515, 33.9049, 0.22", "4.13436, -43.0649, 34.3157, 0.22", "4.40251, -43.4496, 34.6126, 0.44", "4.64477, -43.7887, 34.8975, 0.44", "5.12405, -44.4106, 35.4297, 0.44", "5.66408, -45.0173, 36.0177, 0.44", "6.3301, -45.7164, 36.7372, 0.15", "6.83632, -46.2469, 37.2686, 0.15", "7.40835, -46.8584, 37.8327, 0.15", "8.12328, -47.7024, 38.4784, 0.59", "8.72094, -48.4456, 38.9518, 0.15", "9.26865, -49.149, 39.306, 0.15", "9.7387, -49.8027, 39.5857, 0.15", "10.2109, -50.5433, 39.856, 0.74", "11.2815, -52.4617, 40.4499, 0.15", "11.9408, -53.8071, 40.7684, 0.15", "12.3691, -54.8061, 40.9637, 0.37", "12.9743, -56.3132, 41.2592, 0.15", "13.664, -58.1173, 41.6368, 0.22", "14.1084, -59.3257, 41.9328, 0.22", "14.7754, -61.1324, 42.424, 0.07", "15.0571, -61.9199, 42.6521, 0.96", "15.6696, -63.5681, 43.1543, 0.22", "15.9555, -64.3285, 43.3997, 0.37", "16.403, -65.5526, 43.8449, 0.07", "16.5599, -65.9916, 44.0292, 0.22", "16.9298, -67.0304, 44.5553, 0.07", "17.1556, -67.6746, 44.8789, 0.22", "17.6129, -68.9801, 45.4508, 0.07", "17.8803, -69.7041, 45.7524, 0.66", "18.27, -70.713, 46.1328, 0.66", "18.8778, -72.1911, 46.7023, 0.22", "19.0039, -72.455, 46.8214, 0.22", "19.6792, -73.683, 47.4735, 0.07", "19.9615, -74.162, 47.7282, 0.29", "20.6412, -75.3314, 48.324, 0.07", "20.9103, -75.8221, 48.5721, 0.22", "21.6137, -77.2061, 49.227, 0.07", "22.2194, -78.5041, 49.8418, 0.74", "22.9868, -80.3332, 50.6971, 0.15", "23.335, -81.263, 51.0936, 0.29", "23.7773, -82.5542, 51.6175, 0.15", "24.1583, -83.7441, 52.069, 0.37", "24.6583, -85.4671, 52.6555, 0.22", "24.9107, -86.4029, 52.9975, 0.74", "25.1821, -87.4203, 53.4397, 0.22", "25.4881, -88.5246, 53.9175, 0.07", "25.6898, -89.2035, 54.2107, 0.07", "25.8697, -89.7453, 54.4728, 0.66", "26.8325, -92.3154, 55.7855, 0.15", "27.0781, -92.9285, 56.0985, 0.15", "27.4957, -93.9951, 56.6488, 0.52", "28.0122, -95.3774, 57.3155, 0.66", "28.7132, -97.2907, 58.1937, 0.15", "28.951, -97.9677, 58.4967, 0.15", "29.3411, -99.0809, 59.0592, 0.29", "29.5871, -99.8571, 59.4929, 0.29", "29.8286, -100.733, 60.017, 0.07", "29.9354, -101.127, 60.2412, 0.22", "30.2981, -102.503, 61.0469, 0.22", "30.8142, -104.402, 62.2109, 0.59", "31.3449, -106.143, 63.3216, 0.07", "31.5441, -106.7, 63.6701, 0.66", "31.9611, -107.722, 64.3402, 0.07", "32.5699, -109.039, 65.2466, 0.07", "32.955, -109.755, 65.7556, 0.22", "33.3459, -110.408, 66.2249, 0.07", "33.8013, -111.104, 66.8044, 0.52", "34.713, -112.486, 68.0888, 0.15", "35.4608, -113.628, 69.2288, 0.59", "36.0573, -114.539, 70.1677, 0.07", "36.3528, -115.027, 70.685, 0.29", "37.0115, -116.129, 71.8688, 0.07", "37.4899, -116.906, 72.7262, 0.07", "37.703, -117.234, 73.1061, 0.44", "38.1474, -117.893, 73.9083, 0.44", "38.8504, -118.952, 75.2266, 0.15", "39.3937, -119.764, 76.2608, 0.15", "39.8536, -120.384, 77.1345, 0.22", "40.5582, -121.291, 78.5111, 0.22", "40.775, -121.578, 78.9804, 0.15", "41.0572, -121.99, 79.6801, 0.29", "41.5044, -122.731, 80.9789, 0.29", "42.0221, -123.695, 82.566, 0.52", "42.2866, -124.173, 83.3254, 0.07", "42.7278, -124.917, 84.426, 0.07", "43.1364, -125.598, 85.3167, 0.22", "43.4993, -126.198, 86.0172, 0.22", "43.9681, -126.984, 86.7766, 0.22", "44.2127, -127.388, 87.0982, 0.22", "44.799, -128.322, 87.7859, 0.22", "45.5127, -129.476, 88.5601, 0.15", "46.2053, -130.72, 89.3426, 0.15", "46.5743, -131.529, 89.8369, 0.15", "46.8323, -132.236, 90.2697, 0.29", "47.0672, -133.039, 90.7693, 0.29", "47.2574, -134.067, 91.4535, 0.07", "47.3265, -134.677, 91.881, 0.07", "47.3612, -135.554, 92.4386, 0.07", "47.3591, -135.943, 92.6759, 0.22", "47.3131, -137.314, 93.4957, 0.07", "47.2533, -138.814, 94.4211, 0.07", "47.2309, -139.498, 94.8865, 0.07", "47.2141, -140.585, 95.6855, 0.07", "47.2187, -141.176, 96.1703, 0.74", "47.2319, -141.729, 96.6656, 0.29", "47.2687, -143.034, 97.9192, 0.07", "47.2803, -144.153, 99.0182, 0.07", "47.2658, -144.538, 99.3932, 0.59", "47.1171, -146.532, 101.429, 0.07", "47.0735, -147.076, 101.994, 0.07", "47.0118, -147.791, 102.728, 0.07", "46.8675, -149.127, 104.007, 0.07", "46.7773, -149.713, 104.533, 0.07", "46.4557, -151.142, 105.762, 0.07" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "5.16645, 6.60064, 4.66, 1.99", "5.16645, 6.60064, 4.66, 1.99", "5.52266, 7.2118, 4.71101, 1.99", "6.21095, 8.36912, 4.83904, 1.18", "7.02473, 9.75797, 5.0398, 1.11", "7.74616, 11.0206, 5.28212, 1.33", "8.40801, 12.2676, 5.53562, 1.55", "9.10989, 13.7022, 5.83868, 1.11", "9.72927, 15.1049, 6.10054, 1.11", "10.2602, 16.3973, 6.26805, 0.74", "10.6103, 17.3196, 6.29818, 0.74", "10.9858, 18.3526, 6.20714, 0.66", "11.2404, 19.0172, 6.05575, 0.66", "11.8567, 20.3175, 5.60147, 0.96", "12.5239, 21.5195, 5.09279, 1.4", "13.1145, 22.5481, 4.64932, 1.62", "13.7856, 23.7455, 4.21353, 1.25", "14.6619, 25.4773, 3.769, 0.81", "15.2352, 26.8875, 3.57139, 0.81", "15.5381, 27.9926, 3.5542, 0.59", "15.7708, 29.3064, 3.63141, 0.59", "15.8827, 31.1247, 3.86065, 0.59", "15.734, 32.7245, 4.18152, 0.44", "15.4745, 33.6988, 4.48158, 0.29", "15.2321, 34.281, 4.68432, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "6.61645, -2.45011, -6.09, 2.95", "6.61645, -2.45011, -6.09, 2.95", "7.80205, -3.00352, -6.82956, 1.7", "8.77991, -3.45324, -7.42065, 1.33", "9.9606, -4.02514, -8.15253, 1.33", "10.5506, -4.32751, -8.4984, 1.33", "11.5252, -4.90218, -9.02135, 1.47", "12.4478, -5.53597, -9.48842, 1.33", "13.4271, -6.3173, -9.94331, 1.77", "14.4973, -7.30745, -10.3676, 1.99", "15.6767, -8.48796, -10.7956, 1.62", "17.211, -10.102, -11.2906, 1.4", "18.4071, -11.4736, -11.6251, 1.25", "19.0159, -12.2446, -11.7677, 1.62", "19.5588, -13.0196, -11.867, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-7.25355, -0.0413571, -0.42, 2.8", "-7.25355, -0.0413571, -0.42, 2.8", "-8.54527, -0.441861, 0.162819, 1.92", "-9.32975, -0.685092, 0.516772, 1.47", "-10.8377, -1.15266, 1.19718, 1.18", "-12.1387, -1.55603, 1.78417, 1.18", "-13.4272, -1.95553, 2.36554, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.47645, -5.90436, -0.0300001, 0.74", "1.56206, -7.1448, -0.241248, 0.52", "1.67565, -8.17259, -0.378878, 0.74", "1.77487, -8.92115, -0.460867, 0.96", "1.94072, -9.98193, -0.53495, 1.18", "2.10453, -10.7926, -0.595723, 1.18", "2.35094, -11.7851, -0.67303, 0.96", "2.73684, -12.8481, -0.745404, 0.88", "3.13724, -13.6748, -0.808046, 0.52", "3.53886, -14.3035, -0.895895, 0.22", "4.12848, -15.0421, -1.05401, 0.22", "4.43324, -15.3973, -1.16363, 0.44", "4.91253, -15.9653, -1.37927, 0.88", "5.41224, -16.5767, -1.63577, 0.29", "5.98341, -17.395, -1.94872, 0.59", "6.35946, -18.0425, -2.16265, 0.22", "6.78875, -18.9443, -2.38324, 0.22", "7.03302, -19.4844, -2.48693, 0.74", "7.25444, -19.9749, -2.55454, 1.25", "7.84943, -21.2559, -2.69529, 0.44", "8.08088, -21.7389, -2.7411, 0.44", "8.41878, -22.3938, -2.79766, 0.74", "8.98747, -23.4154, -2.86977, 0.29", "9.19351, -23.8028, -2.87683, 0.22", "9.36208, -24.1673, -2.86744, 0.29", "9.6681, -25.0338, -2.812, 0.29", "9.788, -25.5464, -2.76654, 0.74", "9.9051, -26.4171, -2.67424, 1.25", "10.009, -27.9621, -2.49315, 0.66", "10.0569, -28.7869, -2.38728, 0.44", "10.121, -29.7702, -2.24686, 0.29", "10.1935, -30.5035, -2.1311, 0.22", "10.3036, -31.3289, -2.00796, 0.22", "10.3975, -31.9303, -1.92208, 0.44", "10.5059, -32.5105, -1.84181, 0.81", "10.5891, -32.9292, -1.77043, 1.11", "10.7609, -33.9182, -1.56053, 1.11", "10.8979, -34.9455, -1.32162, 0.81", "11.0341, -36.5959, -0.914637, 0.44", "11.0651, -37.3558, -0.725333, 0.22", "11.0729, -37.8313, -0.617339, 0.22", "11.0979, -39.051, -0.390023, 0.22", "11.1264, -39.7451, -0.294703, 0.37", "11.2115, -40.5646, -0.22428, 0.59", "11.3192, -41.1004, -0.211444, 0.66", "11.5457, -41.9396, -0.22215, 0.22", "11.7747, -42.7315, -0.227745, 0.15", "11.917, -43.2326, -0.231144, 0.29", "12.0799, -43.9391, -0.212818, 0.59", "12.2214, -44.7963, -0.166031, 0.15", "12.2823, -45.3189, -0.12858, 0.15", "12.3773, -46.4892, -0.0341785, 0.22", "12.4261, -47.1102, 0.0340792, 0.59", "12.5006, -47.9347, 0.12574, 0.59", "12.6017, -48.7829, 0.223213, 0.22", "12.7801, -50.0839, 0.35976, 0.22", "12.8514, -50.5347, 0.404547, 0.07", "13.007, -51.5468, 0.468639, 0.07", "13.0512, -51.9494, 0.486732, 0.22", "13.0907, -52.5467, 0.498688, 0.22", "13.1127, -53.4961, 0.492278, 0.59", "13.0984, -54.5545, 0.461869, 0.59", "13.0688, -55.6077, 0.393922, 0.81", "13.0611, -56.2127, 0.32545, 0.81", "13.1131, -57.7653, 0.1196, 0.15", "13.1913, -58.588, -0.00565521, 0.15", "13.3154, -59.2478, -0.116726, 0.59", "13.5852, -60.0908, -0.289602, 0.15", "13.9171, -60.7684, -0.440721, 0.15", "14.1759, -61.1866, -0.533364, 0.15", "14.5417, -61.677, -0.621978, 0.66", "14.8548, -62.0583, -0.664231, 0.81", "15.7273, -63.0982, -0.672198, 0.22", "16.3554, -63.892, -0.573347, 0.29", "16.9054, -64.64, -0.412383, 0.37", "17.2629, -65.1162, -0.273384, 0.81", "17.8398, -65.8302, 0.0165175, 1.03", "18.464, -66.5262, 0.391276, 0.22", "19.0647, -67.1206, 0.804313, 0.22", "19.5076, -67.5152, 1.08227, 0.22", "19.9606, -67.8645, 1.31842, 0.74", "20.495, -68.2163, 1.54257, 1.03", "21.3714, -68.6869, 1.83341, 0.96", "22.1561, -69.055, 2.00025, 0.22", "22.9269, -69.4197, 2.12526, 0.15", "23.2585, -69.5987, 2.17934, 0.22", "23.7558, -69.9282, 2.25883, 0.22", "24.2239, -70.3157, 2.35345, 0.22", "24.9257, -71.0118, 2.55408, 0.22", "25.5628, -71.6822, 2.78298, 0.88", "25.9664, -72.1372, 2.96113, 0.81", "26.3708, -72.6329, 3.15686, 0.52", "26.9125, -73.3883, 3.43696, 0.15", "27.1855, -73.801, 3.56625, 0.15", "27.6302, -74.4862, 3.75716, 0.44", "28.1067, -75.2032, 3.9174, 0.22", "28.3551, -75.5743, 3.98693, 0.66", "28.8858, -76.3091, 4.12573, 1.11", "29.7774, -77.5138, 4.33114, 0.22", "30.3512, -78.3312, 4.47588, 0.22", "30.6686, -78.8151, 4.56778, 0.74", "31.0793, -79.4562, 4.70436, 0.66", "31.6428, -80.3756, 4.90425, 0.22", "31.9332, -80.8801, 5.01744, 0.29", "32.2521, -81.5419, 5.15637, 0.52", "32.8114, -82.9298, 5.43865, 0.15", "33.0478, -83.7269, 5.59774, 0.96", "33.2118, -84.6442, 5.77292, 0.07", "33.2453, -85.1034, 5.84784, 0.07", "33.2515, -85.9972, 5.98514, 0.22", "33.2174, -86.7026, 6.07879, 0.59", "33.0865, -87.7408, 6.17458, 0.66", "32.9288, -88.6892, 6.23064, 0.22", "32.6796, -90.0297, 6.28244, 0.22", "32.5822, -90.5266, 6.28072, 0.22", "32.4216, -91.2753, 6.2474, 0.81", "32.1925, -92.1437, 6.20017, 0.66", "31.9227, -93.0265, 6.17731, 0.15", "31.6683, -93.7278, 6.17895, 0.15", "31.2394, -94.6401, 6.22127, 0.15", "31.0076, -95.058, 6.25399, 0.96", "30.2709, -96.2654, 6.37646, 0.15", "29.951, -96.795, 6.42081, 0.15", "29.7585, -97.1261, 6.44069, 0.66", "28.8954, -98.6645, 6.4996, 0.29", "28.306, -99.7323, 6.51657, 0.15", "27.9577, -100.405, 6.48124, 0.22", "27.41, -101.594, 6.33458, 0.07", "27.2161, -102.08, 6.26957, 0.88", "27.0723, -102.535, 6.22837, 0.88", "26.8045, -103.62, 6.20886, 0.15", "26.59, -104.546, 6.25436, 0.22", "26.3445, -105.492, 6.37562, 0.66", "26.0495, -106.564, 6.60797, 0.15", "25.7635, -107.73, 6.94876, 0.07", "25.5326, -108.861, 7.36519, 0.07", "25.4692, -109.248, 7.53116, 0.22", "25.3299, -110.147, 7.98553, 0.15", "25.2567, -110.775, 8.33982, 0.81", "25.1904, -112.036, 9.16013, 0.15", "25.2175, -112.693, 9.64373, 0.15", "25.2984, -113.207, 10.0717, 0.59", "25.4789, -114.031, 10.8118, 0.07", "25.6742, -114.752, 11.5021, 0.29", "26.0308, -115.964, 12.6954, 0.07", "26.2201, -116.56, 13.317, 0.29", "26.4867, -117.4, 14.1994, 0.15", "26.5767, -117.735, 14.5513, 0.22", "26.6966, -118.364, 15.153, 0.07", "26.7393, -118.715, 15.4553, 0.22", "26.8446, -119.739, 16.2538, 0.07", "26.8909, -120.105, 16.5197, 0.29", "27.0899, -121.304, 17.3213, 0.07", "27.3013, -122.279, 17.9308, 0.96", "27.5676, -123.325, 18.5517, 0.07", "27.6546, -123.641, 18.7365, 0.22", "27.8989, -124.531, 19.2577, 0.07", "28.1529, -125.4, 19.7858, 0.07", "28.3092, -125.905, 20.0937, 0.15", "28.6156, -126.852, 20.675, 0.07", "28.8064, -127.447, 21.047, 0.81", "29.2418, -128.836, 21.9345, 0.07", "29.5746, -129.883, 22.6165, 0.07", "29.7164, -130.302, 22.8947, 0.22", "30.0551, -131.207, 23.4727, 0.44", "30.4539, -132.124, 23.9869, 0.07", "30.8886, -133.012, 24.4423, 0.07", "31.1278, -133.444, 24.644, 0.29", "31.6365, -134.294, 25.0385, 0.07", "31.9877, -134.842, 25.29, 0.44", "32.8596, -136.12, 25.915, 0.15", "33.0309, -136.358, 26.0238, 0.15", "33.3689, -136.789, 26.2278, 0.29", "34.0351, -137.603, 26.6312, 0.07", "34.2365, -137.822, 26.7442, 0.44", "34.7717, -138.357, 27.0909, 0.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.763546, 6.90814, -3.9, 0.96", "-0.763546, 6.90814, -3.9, 0.96", "-0.702946, 7.76303, -3.72446, 0.29", "-0.750696, 8.49948, -3.71459, 0.29", "-0.811396, 8.89729, -3.78591, 0.29", "-0.899486, 9.26704, -3.91005, 0.29", "-1.13349, 10.0342, -4.27289, 0.88", "-1.38313, 10.7589, -4.71325, 0.88", "-1.64608, 11.5273, -5.23043, 0.29", "-1.88339, 12.3093, -5.72567, 0.66", "-2.04811, 13.0222, -6.10581, 0.66", "-2.20087, 14.064, -6.55933, 0.29", "-2.25041, 15.1091, -6.926, 0.59", "-2.19077, 16.0834, -7.18588, 0.88", "-2.04701, 17.2255, -7.42806, 0.66", "-1.84372, 18.4797, -7.66398, 0.22", "-1.73615, 19.0012, -7.77458, 0.22", "-1.55228, 19.6832, -7.95915, 0.22", "-1.29458, 20.5113, -8.27884, 0.44", "-1.02715, 21.2634, -8.70186, 0.96", "-0.777316, 21.8874, -9.13822, 0.96", "-0.416533, 22.7701, -9.82231, 0.22", "-0.135186, 23.4286, -10.3204, 0.22", "-0.0222202, 23.6886, -10.505, 0.37", "0.250547, 24.3131, -10.9426, 0.52", "0.447703, 24.7853, -11.2733, 0.29", "0.695689, 25.5358, -11.8084, 0.22", "0.855345, 26.1988, -12.2761, 0.37", "0.98059, 26.8595, -12.7113, 0.37", "1.10926, 27.5159, -13.1293, 0.52", "1.28806, 28.3622, -13.6887, 0.88", "1.46443, 29.1017, -14.1911, 0.88", "1.74048, 30.0808, -14.8445, 0.29", "1.95537, 30.76, -15.2909, 0.29", "2.20904, 31.4673, -15.7399, 0.15", "2.5169, 32.2913, -16.2481, 0.22", "2.77579, 32.9765, -16.6702, 0.96", "3.16299, 33.9884, -17.3013, 0.22", "3.30389, 34.403, -17.5548, 0.22", "3.4107, 34.8038, -17.7825, 0.15", "3.51964, 35.4132, -18.0653, 0.15", "3.55635, 35.7544, -18.1855, 0.15", "3.61473, 36.7504, -18.4769, 0.15", "3.65361, 37.4928, -18.6444, 0.66", "3.69058, 38.0186, -18.7413, 0.81", "3.74504, 39.0411, -18.9025, 0.15", "3.76137, 39.8053, -19.0072, 0.22", "3.71814, 40.4886, -19.1021, 0.66", "3.61128, 41.4243, -19.2195, 0.81", "3.54471, 41.9673, -19.2901, 0.52", "3.41135, 43.1084, -19.4393, 0.15", "3.28938, 43.8182, -19.5295, 0.22", "3.07638, 44.6308, -19.6664, 0.29", "2.08702, 54.2488, -22.9789, 0.29", "-0.400475, 64.0038, -24.7786, 0.29", "-3.3619, 73.684, -26.2061, 0.29", "-6.03148, 83.425, -27.8055, 0.29", "-8.88763, 93.1929, -28.8196, 0.29", "-10.6445, 102.882, -31.5705, 0.29", "-11.0236, 113.08, -32.4985, 0.29", "-9.6346, 123.199, -31.7221, 0.29", "-7.59643, 133.217, -32.2985, 0.29", "-3.5022, 142.568, -32.355, 0.29", "1.47142, 151.428, -31.6157, 0.29", "6.36573, 160.323, -32.4751, 0.29", "12.203, 168.639, -32.7927, 0.29", "19.5512, 175.59, -32.9104, 0.29", "26.1066, 183.327, -32.6733, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994695550876,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "5.61792, 5.513, 0.0, 0.777284", "17.3185, 14.8989, 0.0, 0.777284", "29.0192, 24.2848, 0.0, 0.777284" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-1.39076, 12.3917, 22.4212, 0.15", "-1.74992, 13.7434, 23.2363, 0.15", "-1.93229, 14.8547, 23.9089, 0.15", "-2.14705, 16.0944, 24.612, 0.15", "-2.31887, 16.9475, 25.0641, 0.15", "-2.38137, 17.2333, 25.2042, 0.37", "-2.55001, 17.9767, 25.5402, 0.88", "-2.77092, 18.8114, 25.8132, 0.22", "-3.15039, 19.8869, 26.0909, 0.22", "-3.51467, 20.6912, 26.2939, 0.22", "-3.81474, 21.22, 26.4138, 0.29", "-4.31796, 21.9858, 26.5734, 0.66", "-5.25711, 23.2626, 26.7982, 0.81", "-6.06825, 24.3069, 26.9989, 0.22", "-6.80734, 25.2558, 27.2199, 0.22", "-7.26569, 25.8259, 27.3688, 0.81", "-7.82075, 26.5057, 27.5579, 0.81", "-8.58842, 27.4945, 27.8558, 0.22", "-9.26001, 28.4792, 28.1665, 0.44", "-9.89405, 29.5625, 28.5264, 0.81", "-10.2161, 30.2006, 28.758, 0.81", "-10.7144, 31.2698, 29.1833, 0.37", "-11.1311, 32.2114, 29.5675, 0.37", "-11.4195, 32.8675, 29.8124, 0.37", "-11.8801, 33.8334, 30.1332, 0.37", "-12.2775, 34.622, 30.381, 0.59", "-12.7662, 35.5931, 30.6774, 0.74", "-13.2116, 36.5249, 30.9364, 0.88", "-13.7511, 37.7186, 31.2303, 0.22", "-14.2079, 38.792, 31.4854, 0.22", "-14.5183, 39.5772, 31.6347, 0.22", "-14.9174, 40.7026, 31.8583, 0.44", "-15.441, 42.4006, 32.2546, 0.52", "-15.7844, 43.5904, 32.5734, 0.74", "-16.1439, 44.9452, 32.9575, 0.37", "-16.5881, 46.7198, 33.4555, 0.22", "-16.8847, 47.8163, 33.7794, 0.22", "-17.2722, 49.054, 34.1595, 0.81", "-17.6923, 50.2214, 34.5641, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-1.39076, 12.3917, 22.4212, 0.52", "0.0577928, 12.4706, 24.0166, 0.52", "1.25557, 12.9365, 25.3815, 0.52", "2.05296, 13.3931, 26.2454, 0.37", "2.60356, 13.8312, 26.8032, 0.22", "3.19954, 14.3413, 27.4066, 0.22", "4.03329, 15.0575, 28.215, 0.44", "5.00389, 16.1023, 29.1058, 0.44", "5.45248, 16.6241, 29.5036, 0.44", "6.30584, 17.682, 30.2737, 0.22", "6.86011, 18.3481, 30.7846, 0.22", "7.24954, 18.806, 31.1318, 0.22", "7.76214, 19.4498, 31.6322, 0.22", "8.09702, 19.9458, 31.9909, 0.22", "8.75208, 21.0221, 32.7858, 0.88", "9.45075, 22.2106, 33.7342, 0.15", "9.87436, 22.9275, 34.3026, 0.37", "10.2679, 23.5523, 34.857, 0.15", "10.7116, 24.1901, 35.5126, 0.29", "11.2681, 24.8885, 36.3635, 0.15", "11.8665, 25.5281, 37.3025, 0.15", "12.3022, 25.9566, 37.9601, 0.66", "13.2845, 26.9009, 39.3836, 0.29", "13.9589, 27.542, 40.3648, 0.29", "14.2846, 27.8788, 40.8638, 0.29", "14.6926, 28.3911, 41.5875, 0.29", "15.0323, 28.9138, 42.2762, 0.07", "15.3737, 29.5198, 43.046, 0.59", "16.0623, 30.8523, 44.6541, 0.22", "16.5655, 31.8065, 45.8529, 0.66", "17.3655, 33.2151, 47.7441, 0.15", "17.7379, 33.8159, 48.5732, 0.15", "18.0388, 34.2392, 49.2027, 0.15", "18.4748, 34.7664, 50.0592, 0.59", "19.331, 35.6739, 51.609, 0.22", "19.9975, 36.2404, 52.7361, 0.81", "20.7293, 36.7265, 53.8961, 0.15", "21.6821, 37.2468, 55.4519, 0.37", "22.2931, 37.517, 56.4694, 0.37", "23.1487, 37.8374, 57.9333, 0.22", "23.7448, 38.0609, 58.9752, 0.22", "24.4087, 38.3237, 60.1707, 0.59", "25.2387, 38.675, 61.627, 0.22", "25.882, 39.0077, 62.6355, 0.74", "27.1828, 39.7892, 64.4122, 0.07", "28.0865, 40.4062, 65.5108, 0.07", "28.5909, 40.8073, 66.0314, 0.07", "29.2494, 41.3474, 66.588, 0.22", "30.3854, 42.2618, 67.3788, 0.07", "31.0774, 42.8129, 67.8006, 0.22", "32.4149, 43.8469, 68.5095, 0.07", "33.8539, 44.9245, 69.2212, 0.22", "35.5082, 46.1352, 70.0357, 0.07", "36.0257, 46.5404, 70.2803, 0.07", "36.9759, 47.3517, 70.7045, 0.07", "37.2383, 47.5912, 70.8097, 0.22", "38.1213, 48.4646, 71.107, 0.29", "39.5493, 50.0894, 71.5588, 0.07", "40.7186, 51.5996, 71.938, 0.07", "41.6392, 52.8627, 72.3274, 0.15", "42.122, 53.5749, 72.6469, 0.29", "42.7313, 54.5244, 73.2203, 0.29", "43.4777, 55.765, 74.1544, 0.07", "44.1181, 56.8461, 75.1836, 0.22", "44.811, 57.9055, 76.4793, 0.22", "45.9751, 59.5817, 78.8044, 0.44", "46.401, 60.1814, 79.7282, 0.44", "46.8331, 60.741, 80.7219, 0.15", "47.4656, 61.4577, 82.2052, 0.15", "48.1013, 62.1163, 83.6447, 0.15", "48.432, 62.4077, 84.247, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "15.2321, 34.281, 4.68432, 0.44", "15.6246, 35.5887, 3.55645, 0.44", "15.9315, 36.5344, 2.82558, 0.44", "16.3069, 37.7489, 2.01622, 0.44", "16.4542, 38.3066, 1.66778, 0.74", "16.599, 39.0079, 1.25621, 1.33", "16.7868, 40.3592, 0.518045, 0.66", "16.8065, 40.8714, 0.302512, 0.88", "16.7001, 41.9253, -0.0781635, 0.29", "16.5312, 42.6451, -0.310022, 0.29", "16.3235, 43.3382, -0.515038, 0.44", "16.0017, 44.2415, -0.745274, 0.52", "15.5035, 45.5496, -1.0068, 0.66", "15.2177, 46.3445, -1.15831, 0.22", "15.033, 46.9297, -1.26289, 0.22", "14.7817, 47.8138, -1.4453, 0.29", "14.599, 48.4418, -1.62343, 0.29", "14.3117, 49.3306, -1.95044, 0.66", "14.048, 50.017, -2.26115, 0.81", "13.6427, 50.9299, -2.74687, 0.88", "12.9052, 52.3911, -3.58987, 0.59", "12.4403, 53.2041, -4.10539, 0.37", "12.1818, 53.6298, -4.40585, 0.22", "11.757, 54.2735, -4.90945, 0.22", "11.4142, 54.775, -5.32328, 0.37", "10.9468, 55.4207, -5.88335, 0.37", "10.378, 56.195, -6.55815, 0.66", "9.80942, 56.9456, -7.21499, 1.11", "9.16643, 57.7353, -7.96576, 0.29", "8.72144, 58.2358, -8.53458, 0.29", "8.5427, 58.4321, -8.79756, 0.29", "8.28789, 58.7363, -9.23104, 0.29", "8.21402, 58.9206, -9.41328, 0.29", "8.21551, 59.3213, -9.62728, 0.29", "8.33682, 60.0852, -9.91238, 0.29", "8.54421, 61.1344, -10.2613, 0.29", "8.73043, 62.0539, -10.5481, 0.74", "8.97529, 63.4578, -10.9551, 1.25", "9.14342, 64.8065, -11.3146, 0.81", "9.23149, 66.1718, -11.6436, 0.29", "9.23981, 67.1991, -11.8642, 0.29", "9.22171, 68.2652, -12.0827, 0.52", "9.19839, 69.6151, -12.2948, 0.66", "9.15165, 70.8978, -12.428, 0.22", "9.06439, 71.8368, -12.4818, 0.22", "8.88541, 72.8849, -12.4886, 0.37", "8.62948, 74.0227, -12.4567, 0.96", "8.19147, 75.7352, -12.3705, 0.22", "8.01567, 76.4582, -12.3241, 0.37", "7.87399, 77.1363, -12.3019, 0.52", "7.65506, 78.1682, -12.3356, 0.22", "7.42124, 79.0532, -12.4255, 0.22", "7.25244, 79.5681, -12.5356, 0.81", "6.98275, 80.4243, -12.8178, 0.81", "6.72709, 81.527, -13.1893, 0.22", "6.61138, 82.3747, -13.4688, 0.44", "6.5661, 82.8233, -13.612, 0.74", "6.42059, 83.8109, -13.9263, 0.22", "6.34111, 84.2586, -14.0655, 0.22", "6.20413, 85.0093, -14.2685, 0.29", "6.13759, 85.7032, -14.4182, 0.29", "6.13001, 86.4154, -14.5336, 0.22", "6.14676, 87.1504, -14.6394, 0.22", "6.14883, 88.0568, -14.7682, 0.59", "6.10782, 89.0281, -14.9169, 0.88", "6.01078, 90.3803, -15.1855, 0.81", "5.90442, 91.8361, -15.5561, 0.37", "5.87846, 92.5754, -15.7599, 0.22", "5.88302, 93.4317, -16.0053, 0.22", "5.89312, 94.0454, -16.2156, 0.22", "5.9111, 94.9966, -16.6449, 0.22", "5.88268, 95.7577, -17.074, 0.22", "5.82034, 96.442, -17.5179, 0.44", "5.7344, 97.1674, -17.9699, 0.88", "5.63747, 97.9624, -18.4019, 0.66", "5.44915, 99.0594, -18.8922, 0.22", "5.27387, 99.9193, -19.189, 0.15", "5.12599, 100.711, -19.4152, 0.22", "4.92841, 101.639, -19.6873, 0.29", "4.7517, 102.429, -19.877, 0.74", "4.59494, 103.415, -20.0131, 0.81", "4.56194, 103.899, -20.03, 0.52", "4.61798, 104.92, -20.046, 0.66" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "15.2321, 34.281, 4.68432, 0.29", "15.3905, 34.3613, 4.64841, 0.29", "16.1072, 34.8248, 4.44572, 0.29", "16.56, 35.2071, 4.31805, 0.29", "17.0189, 35.6684, 4.1681, 0.29", "17.2395, 35.92, 4.10834, 0.29", "17.7799, 36.6197, 3.94801, 0.59", "18.2744, 37.4205, 3.76747, 1.11", "18.8159, 38.5578, 3.53127, 0.74", "19.2331, 39.7172, 3.29401, 0.74", "19.5709, 41.0292, 3.08057, 0.74", "19.8116, 42.4188, 2.93199, 0.52", "19.9449, 43.7688, 2.91403, 0.74", "20.0146, 44.7477, 2.98327, 0.52", "20.0813, 45.508, 3.10784, 0.88", "20.2673, 46.683, 3.42464, 0.96", "20.5124, 47.5593, 3.74145, 0.52", "21.0759, 48.8219, 4.32183, 0.44", "21.4934, 49.5039, 4.65948, 0.44", "22.3051, 50.6642, 5.13126, 0.66", "22.8603, 51.3685, 5.39436, 0.44", "23.4681, 52.064, 5.59623, 0.74", "24.0681, 52.7158, 5.74214, 0.88", "24.6432, 53.3751, 5.82996, 1.03", "25.472, 54.6072, 5.96389, 1.18" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "19.5588, -13.0196, -11.867, 0.59", "21.0364, -13.4054, -11.7573, 0.59", "22.0237, -13.2089, -12.0631, 0.59", "22.7977, -12.7964, -12.5395, 0.44", "23.4347, -12.3768, -13.0525, 0.44", "24.4113, -11.6621, -13.8262, 0.81", "25.2629, -11.039, -14.4664, 0.81", "26.0497, -10.3737, -15.0833, 1.11", "26.9161, -9.65007, -15.7131, 0.88", "27.6232, -9.11989, -16.1588, 1.03", "28.7617, -8.45694, -16.6811, 0.37", "29.2298, -8.25214, -16.7878, 0.37", "30.0623, -8.01817, -16.7883, 0.74", "31.1391, -7.91825, -16.55, 1.03", "32.3818, -7.98635, -16.0111, 1.25", "32.788, -8.05692, -15.772, 1.4" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "19.5588, -13.0196, -11.867, 0.29", "19.2439, -14.2334, -11.1163, 0.29", "18.9424, -15.0404, -10.6375, 0.22", "18.7139, -15.3774, -10.4147, 0.22", "18.2374, -15.8671, -10.0223, 0.22", "17.9213, -16.1811, -9.75068, 0.22", "17.7396, -16.3866, -9.57373, 0.22", "17.2212, -17.0521, -9.00648, 0.96", "16.6219, -17.9731, -8.29114, 0.59", "16.2442, -18.7351, -7.70066, 0.22", "15.972, -19.4499, -7.16246, 0.22", "15.7679, -20.2846, -6.53486, 0.22", "15.707, -20.9792, -6.02095, 1.03", "15.7598, -21.6501, -5.52528, 1.03", "15.9553, -22.7418, -4.75807, 0.15", "16.032, -23.1489, -4.47809, 0.74", "16.1272, -23.8847, -3.95597, 0.37", "16.1626, -24.5329, -3.49096, 0.44", "16.1587, -25.5122, -2.8071, 0.22", "16.1407, -25.9487, -2.51593, 0.29", "16.0885, -26.8977, -1.91688, 0.22", "16.0609, -27.7323, -1.38649, 0.74", "16.0633, -28.1908, -1.09936, 0.74", "16.0921, -29.4644, -0.281322, 0.37", "16.1284, -30.4207, 0.342283, 0.22", "16.1684, -31.1653, 0.835446, 0.15", "16.2364, -31.908, 1.3244, 0.74", "16.3515, -32.9665, 2.02215, 0.22", "16.4129, -33.7407, 2.5243, 0.74", "16.4307, -34.3776, 2.91531, 0.88", "16.3585, -35.5457, 3.52421, 0.22", "16.2193, -36.4254, 3.89846, 0.22", "16.0882, -36.948, 4.07679, 0.29", "15.8143, -37.8279, 4.31924, 0.81", "15.602, -38.519, 4.47144, 0.44", "15.2457, -39.7817, 4.68034, 0.52", "15.016, -40.7097, 4.78036, 0.22", "14.7672, -41.7878, 4.849, 0.74", "14.6194, -42.5616, 4.87501, 0.15", "14.5185, -43.2074, 4.88774, 0.15", "14.3854, -44.0237, 4.9287, 0.15", "14.2992, -44.5573, 4.99963, 0.81", "14.1822, -45.1793, 5.12025, 0.52", "13.928, -46.4717, 5.43939, 0.15", "13.8011, -47.0855, 5.6133, 0.37", "13.5974, -48.2314, 5.97049, 0.22", "13.4348, -49.4432, 6.37455, 0.37", "13.3746, -50.1606, 6.60841, 0.22", "13.3638, -51.0363, 6.87298, 0.74", "13.4048, -51.7742, 7.09705, 0.29", "13.5545, -53.1506, 7.49519, 0.07", "13.6395, -53.6623, 7.63243, 0.29", "13.7867, -54.4596, 7.85362, 0.07", "13.9345, -55.3258, 8.09461, 0.22", "14.1062, -56.5054, 8.40172, 0.22", "14.2102, -57.3388, 8.5777, 0.96", "14.3547, -58.8026, 8.77982, 0.22", "14.4544, -59.9822, 8.86285, 0.15", "14.5207, -60.7558, 8.86428, 0.29", "14.6275, -61.9237, 8.78574, 0.66", "14.7894, -63.5245, 8.5459, 0.22", "14.878, -64.5099, 8.35063, 0.15", "14.9542, -65.5441, 8.11932, 0.15", "14.9864, -66.322, 7.95073, 0.74", "14.9923, -67.19, 7.79549, 0.88", "14.9685, -68.1683, 7.67881, 0.15", "14.9255, -68.9047, 7.63696, 0.22", "14.8359, -69.8549, 7.64507, 0.07", "14.6432, -71.0801, 7.70348, 0.22", "14.4339, -72.0248, 7.79269, 0.15", "14.2695, -72.6574, 7.87232, 0.15", "14.1177, -73.2083, 7.95459, 0.15", "13.9537, -73.8993, 8.06668, 0.88", "13.8475, -74.4217, 8.15085, 0.88", "13.5772, -75.8884, 8.38419, 0.07", "13.4216, -76.6356, 8.505, 0.74", "13.25, -77.4462, 8.62803, 0.22", "13.0213, -78.6224, 8.82163, 0.15", "12.8989, -79.3617, 8.95329, 0.29", "12.7786, -80.2239, 9.12091, 0.81", "12.6375, -81.2679, 9.33294, 0.22", "12.4885, -82.2892, 9.54475, 0.15", "12.3908, -82.8929, 9.66663, 0.15", "12.2495, -83.6363, 9.78677, 0.74", "11.9771, -85.0133, 9.91009, 0.15", "11.8591, -85.5979, 9.92093, 0.15", "11.6902, -86.248, 9.88192, 0.88", "11.4972, -86.8621, 9.81336, 0.96", "11.1165, -87.9733, 9.65521, 0.22", "10.629, -89.4055, 9.40403, 0.15", "10.3008, -90.4098, 9.18964, 0.29", "9.8773, -91.8217, 8.87642, 0.15", "9.72737, -92.3664, 8.75841, 0.66", "9.51143, -93.1793, 8.58883, 0.74", "9.16792, -94.4065, 8.35915, 0.15", "8.94783, -95.1657, 8.23001, 0.15", "8.76592, -95.8787, 8.10377, 0.66", "8.54506, -97.0594, 7.90594, 0.15", "8.50635, -97.3301, 7.85919, 0.15", "8.41853, -98.1841, 7.72756, 0.29", "8.34086, -99.177, 7.58629, 0.15", "8.26402, -100.234, 7.43782, 0.59", "8.19613, -101.173, 7.2954, 0.22", "8.13828, -101.951, 7.1756, 0.22", "8.09663, -102.603, 7.12016, 0.07", "8.06134, -103.451, 7.10718, 0.07", "8.01079, -104.202, 7.15119, 0.15", "7.94275, -104.903, 7.259, 0.81", "7.86847, -105.554, 7.41145, 0.22", "7.72446, -106.842, 7.77533, 0.22", "7.61172, -107.799, 8.07684, 0.59", "7.51794, -108.513, 8.32617, 0.59", "7.34766, -109.695, 8.77095, 0.88", "7.16157, -110.837, 9.23492, 0.07", "7.02261, -111.595, 9.54931, 0.15", "6.85608, -112.38, 9.86617, 0.59", "6.73489, -112.925, 10.1071, 0.74", "6.47794, -114.033, 10.6243, 0.22", "6.23306, -114.922, 11.0685, 0.22", "5.96551, -115.778, 11.5377, 0.96", "5.4613, -117.18, 12.3439, 0.15", "5.18074, -117.884, 12.7527, 0.15", "4.87158, -118.551, 13.1527, 0.88", "4.25035, -119.634, 13.8072, 0.15", "3.84219, -120.238, 14.1793, 0.15", "3.43341, -120.767, 14.5084, 0.74", "3.01091, -121.262, 14.8091, 0.74", "2.53535, -121.851, 15.1585, 0.15", "2.06576, -122.479, 15.5211, 0.29", "1.77212, -122.914, 15.7515, 0.29", "1.23952, -123.765, 16.1815, 0.15", "0.779737, -124.559, 16.5838, 0.74", "-0.0176888, -126.008, 17.3005, 0.22", "-0.356511, -126.636, 17.6012, 0.22", "-0.796906, -127.444, 17.9954, 0.44", "-1.052, -127.884, 18.2102, 0.96", "-1.78632, -129.098, 18.7719, 0.07", "-1.99564, -129.432, 18.9006, 0.07", "-2.3528, -129.965, 19.0759, 0.88", "-2.96697, -130.851, 19.3418, 0.15", "-3.43738, -131.494, 19.4958, 0.52", "-4.13234, -132.385, 19.6308, 0.07", "-4.82014, -133.206, 19.662, 0.07", "-5.3781, -133.84, 19.6448, 0.66", "-5.8551, -134.373, 19.597, 0.22", "-6.55495, -135.12, 19.4883, 0.22", "-7.24342, -135.817, 19.4209, 0.44", "-7.82117, -136.379, 19.4157, 0.15", "-8.45415, -136.975, 19.4655, 0.15", "-9.03952, -137.53, 19.5473, 0.81", "-9.68615, -138.181, 19.7137, 0.22", "-10.5215, -139.121, 20.064, 0.22", "-11.1443, -139.922, 20.4214, 0.22", "-11.511, -140.462, 20.6925, 0.15", "-11.7591, -140.879, 20.9099, 0.59", "-12.0881, -141.44, 21.2023, 0.15", "-12.4061, -141.992, 21.4664, 0.15", "-12.7034, -142.472, 21.6489, 0.74", "-13.2465, -143.262, 21.9307, 0.22", "-13.5224, -143.636, 22.0628, 0.22", "-14.0585, -144.261, 22.2758, 0.22", "-14.413, -144.632, 22.4088, 0.22", "-14.9487, -145.176, 22.6082, 0.52", "-15.6906, -145.929, 22.8901, 0.15", "-16.2267, -146.464, 23.0865, 0.15", "-16.7775, -146.982, 23.2831, 0.81", "-17.8775, -148.0, 23.6656, 0.07", "-18.1957, -148.284, 23.7672, 0.52", "-19.0956, -149.064, 24.01, 0.15", "-19.597, -149.487, 24.1122, 0.59", "-20.2153, -150.029, 24.2124, 0.15", "-20.7991, -150.557, 24.2604, 0.81", "-21.2717, -150.997, 24.2569, 0.29", "-22.2707, -151.939, 24.2095, 0.07", "-22.7973, -152.465, 24.1702, 0.44", "-23.4941, -153.207, 24.109, 0.15", "-24.059, -153.85, 24.0731, 0.52", "-24.574, -154.439, 24.0544, 0.81", "-25.6273, -155.606, 24.0968, 0.07", "-26.2319, -156.234, 24.1886, 0.07", "-26.6499, -156.643, 24.291, 0.59", "-27.4538, -157.364, 24.548, 0.15", "-28.033, -157.857, 24.7818, 0.74", "-29.1515, -158.788, 25.3148, 0.07", "-30.0471, -159.553, 25.7971, 0.22", "-30.3023, -159.771, 25.9336, 0.22", "-30.692, -160.133, 26.1394, 0.44", "-30.9426, -160.397, 26.2589, 0.44", "-31.6013, -161.229, 26.5691, 0.22", "-32.1626, -162.039, 26.8071, 0.88", "-32.5782, -162.666, 26.9659, 0.66", "-33.1566, -163.509, 27.1764, 0.15", "-33.8707, -164.482, 27.4177, 0.15", "-34.3663, -165.061, 27.568, 0.59", "-34.952, -165.609, 27.724, 0.07", "-35.2526, -165.831, 27.8013, 0.15", "-35.8325, -166.145, 27.9399, 0.07", "-36.3262, -166.354, 28.0272, 0.22", "-37.1455, -166.659, 28.1573, 0.07", "-37.9098, -166.9, 28.2864, 0.07", "-38.2699, -167.01, 28.331, 0.37", "-39.4122, -167.376, 28.4362, 0.15", "-40.1751, -167.644, 28.4784, 0.59", "-41.4196, -168.103, 28.5157, 0.07", "-42.7794, -168.641, 28.5587, 0.07", "-43.9438, -169.127, 28.6087, 0.07", "-44.4752, -169.352, 28.6345, 0.66", "-45.8272, -169.942, 28.6806, 0.07", "-46.5674, -170.29, 28.718, 0.52", "-47.3339, -170.709, 28.7431, 0.07", "-47.929, -171.08, 28.7451, 0.22", "-48.883, -171.681, 28.7365, 0.07", "-49.4806, -172.067, 28.6753, 0.29", "-50.2455, -172.601, 28.5176, 0.07", "-50.7628, -173.012, 28.359, 0.59", "-51.7449, -173.886, 27.9506, 0.15", "-52.3389, -174.48, 27.6383, 0.66", "-52.8734, -175.055, 27.2742, 0.07", "-53.105, -175.302, 27.0889, 0.07", "-53.5106, -175.762, 26.6553, 0.07", "-53.6969, -176.012, 26.4047, 0.22", "-53.9929, -176.488, 25.8998, 0.22", "-54.3921, -177.129, 25.1765, 0.15", "-54.7523, -177.655, 24.5272, 0.81", "-55.336, -178.445, 23.4976, 0.07", "-55.6118, -178.816, 22.9745, 0.15", "-55.9413, -179.284, 22.2622, 0.29", "-56.4227, -180.083, 21.0563, 0.15", "-56.5952, -180.413, 20.5411, 0.15", "-56.7893, -180.788, 19.9056, 0.74", "-57.1188, -181.336, 18.7515, 0.37", "-57.4553, -181.888, 17.3788, 0.81", "-57.6573, -182.252, 16.3502, 0.59", "-57.8426, -182.616, 15.132, 0.59", "-57.939, -182.779, 14.5108, 0.59", "-58.2822, -183.155, 12.4496, 0.44", "-58.379, -183.206, 11.9367, 0.44", "-58.4841, -183.233, 11.3896, 0.44", "-58.6009, -183.227, 10.7846, 0.44", "-58.8684, -183.179, 9.48411, 0.66", "-59.2167, -183.107, 7.87854, 0.07", "-59.3847, -183.07, 7.28074, 0.15" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-13.4272, -1.95553, 2.36554, 0.37", "-13.7648, -0.858878, 1.36943, 0.37", "-13.9162, -0.389739, 0.97637, 0.37", "-14.2124, 0.252993, 0.447752, 0.44", "-14.4347, 0.634149, 0.124018, 0.44", "-14.6298, 0.900089, -0.127447, 0.44", "-14.9848, 1.31587, -0.536695, 0.59", "-15.5391, 1.93991, -1.13233, 1.03", "-16.2039, 2.61892, -1.70303, 0.74", "-16.7327, 3.16346, -2.05845, 0.74", "-17.4986, 4.00822, -2.48053, 1.03", "-17.8386, 4.40759, -2.63089, 1.25", "-18.4871, 5.27884, -2.82761, 0.37", "-18.9039, 5.95331, -2.88803, 0.74", "-19.391, 6.90571, -2.88448, 0.37", "-19.6559, 7.5243, -2.84966, 0.37", "-19.8367, 8.02987, -2.8081, 0.74", "-20.1573, 9.13372, -2.72375, 0.66", "-20.431, 10.1873, -2.63032, 0.52", "-20.5778, 10.8137, -2.56714, 0.52", "-20.8571, 12.2309, -2.41392, 0.66", "-20.9889, 13.2042, -2.31917, 1.25", "-21.0881, 14.888, -2.21319, 1.33", "-21.0678, 15.9572, -2.1908, 1.03", "-20.9768, 17.059, -2.23476, 0.66", "-20.8399, 18.2774, -2.37297, 0.29", "-20.7157, 19.2954, -2.59704, 0.15", "-20.6254, 20.3488, -2.92671, 0.52", "-20.6101, 20.8227, -3.11495, 0.52", "-20.6344, 21.4392, -3.37039, 0.74", "-20.8048, 22.7546, -3.84987, 0.37", "-20.9808, 23.697, -4.12981, 0.59", "-21.2374, 24.8127, -4.39696, 0.29", "-21.3899, 25.3514, -4.50466, 0.74", "-21.7688, 26.4845, -4.732, 1.03", "-22.1666, 27.5439, -4.96427, 0.74", "-22.5253, 28.4245, -5.20877, 0.22", "-22.7449, 28.9642, -5.38459, 0.22", "-23.0808, 29.8188, -5.70616, 0.22", "-23.4086, 30.78, -6.09985, 0.22", "-23.6134, 31.5596, -6.45586, 0.29", "-23.7318, 32.3798, -6.86045, 0.59", "-23.7036, 33.1532, -7.23661, 1.18", "-23.6419, 33.4845, -7.39231, 1.18", "-23.4185, 34.3092, -7.77287, 0.52", "-23.24, 34.9392, -8.04315, 0.52", "-23.0596, 35.6734, -8.33639, 0.52", "-22.8789, 36.8329, -8.77807, 0.22", "-22.8678, 37.1929, -8.90473, 0.22", "-22.9495, 38.0301, -9.1561, 0.22", "-23.1079, 38.9002, -9.36017, 0.59", "-23.1767, 39.2177, -9.40359, 0.59", "-23.4424, 40.3653, -9.47104, 1.03", "-23.6744, 41.3461, -9.49283, 1.47", "-23.9656, 42.6804, -9.53639, 0.22", "-24.2064, 43.7574, -9.60362, 0.37", "-24.488, 44.8913, -9.72172, 0.37", "-24.7965, 45.9275, -9.89421, 0.52", "-25.0785, 46.7168, -10.0862, 0.29", "-25.4292, 47.6035, -10.3974, 0.59", "-25.8213, 48.5104, -10.7851, 0.44", "-26.1022, 49.1062, -11.0653, 0.29", "-26.5348, 49.986, -11.4994, 0.52", "-26.799, 50.5572, -11.7615, 0.88", "-27.0685, 51.2302, -12.019, 1.03", "-27.5473, 52.6405, -12.4501, 1.33", "-27.921, 53.8176, -12.7332, 0.29", "-28.0284, 54.1111, -12.79, 0.29", "-28.2386, 54.5989, -12.8725, 0.29", "-28.453, 54.9824, -12.9482, 0.29", "-28.8428, 55.549, -13.1003, 0.29", "-29.4857, 56.342, -13.3828, 0.37", "-30.1952, 57.154, -13.7017, 0.81", "-30.8964, 57.9437, -14.0371, 1.18", "-31.9614, 59.1395, -14.5678, 0.88", "-32.5287, 59.7916, -14.875, 0.59", "-33.1386, 60.5297, -15.2364, 0.37", "-33.3978, 60.8705, -15.4333, 0.29", "-33.7667, 61.3681, -15.7335, 0.29", "-34.099, 61.7979, -15.9745, 0.29", "-34.3951, 62.2079, -16.1582, 0.29", "-34.9127, 62.9239, -16.4074, 0.66", "-35.6299, 63.9155, -16.6838, 1.47", "-36.8966, 65.5914, -17.1425, 0.52", "-37.6718, 66.5725, -17.3997, 0.37", "-38.5218, 67.6191, -17.6592, 0.37", "-39.0391, 68.2781, -17.7975, 0.88", "-39.6179, 69.0828, -17.9283, 1.47" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-13.4272, -1.95553, 2.36554, 0.81", "-13.5417, -2.65459, 1.99642, 0.81", "-13.6632, -2.93614, 1.85716, 0.81", "-14.2823, -3.86411, 1.50955, 0.22", "-14.6447, -4.29207, 1.41282, 0.22", "-15.1448, -4.81071, 1.35326, 0.44", "-15.7488, -5.38308, 1.32763, 0.88", "-16.6755, -6.12473, 1.34318, 0.44", "-17.5998, -6.74298, 1.3791, 0.59", "-18.5481, -7.25207, 1.41552, 0.52", "-19.6052, -7.75224, 1.44969, 0.22", "-20.7424, -8.21984, 1.4893, 0.22", "-21.3288, -8.41599, 1.52625, 0.66", "-22.2733, -8.64746, 1.62316, 0.96", "-23.3066, -8.84048, 1.75789, 1.11", "-23.6617, -8.89408, 1.81879, 0.96", "-24.7272, -9.01481, 2.07433, 0.22", "-26.1469, -9.17602, 2.52225, 0.66", "-26.8371, -9.29335, 2.77429, 0.15", "-27.2331, -9.37663, 2.94713, 0.15", "-27.9941, -9.56037, 3.31964, 0.52", "-28.6717, -9.72765, 3.63785, 0.22", "-29.4442, -9.95413, 3.93894, 0.66", "-30.2133, -10.2375, 4.12356, 1.03" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "29.0192, 24.2848, 0.0, 0.15573", "40.7198, 33.6708, 0.0, 0.15573", "52.4204, 43.0567, 0.0, 0.15573" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-17.6923, 50.2214, 34.5641, 0.29", "-18.3478, 51.1419, 34.7742, 0.29", "-18.7732, 51.7995, 34.9656, 0.29", "-19.2233, 52.5827, 35.2683, 0.29", "-19.6505, 53.4509, 35.6648, 0.22", "-20.0513, 54.4219, 36.1138, 0.22", "-20.4139, 55.3547, 36.5449, 0.22", "-20.8379, 56.6388, 37.1913, 0.22", "-21.1054, 57.5932, 37.6652, 0.52", "-21.3563, 58.6153, 38.1638, 0.81", "-21.5674, 59.5305, 38.6387, 0.44", "-21.8759, 60.8963, 39.3963, 0.22", "-22.0382, 61.6302, 39.7861, 0.22", "-22.24, 62.4555, 40.1517, 0.29", "-22.4637, 63.3174, 40.4956, 0.29", "-22.726, 64.1359, 40.8043, 0.29", "-22.9352, 64.698, 41.0065, 0.66", "-23.3124, 65.6499, 41.2839, 0.66", "-23.5905, 66.3259, 41.4273, 0.37", "-24.0247, 67.4158, 41.6036, 0.15", "-24.523, 68.7797, 41.7492, 0.15", "-24.7502, 69.4526, 41.7978, 1.11", "-25.2057, 70.9043, 41.8802, 0.59", "-25.7227, 72.7384, 41.96, 0.22", "-25.9147, 73.5447, 41.9821, 0.37", "-26.2076, 75.0403, 41.9935, 0.22", "-26.342, 75.9451, 41.9982, 0.74", "-26.4373, 76.6319, 41.9953, 0.74", "-26.6104, 77.9203, 42.0042, 0.22", "-26.7542, 78.9768, 41.9866, 0.22", "-26.9493, 80.3771, 41.9075, 0.22", "-27.1646, 81.7189, 41.7895, 0.29", "-27.365, 82.8864, 41.6637, 0.29", "-27.647, 84.4714, 41.47, 0.44", "-27.906, 85.9244, 41.272, 0.22", "-28.1538, 87.329, 41.0654, 0.15", "-28.3375, 88.4278, 40.9214, 0.15", "-28.5746, 89.7671, 40.8157, 0.15", "-28.7435, 90.662, 40.7771, 0.52", "-28.945, 91.5721, 40.7654, 0.74", "-29.0075, 91.803, 40.7779, 0.74", "-29.3387, 92.8324, 40.8606, 0.22", "-29.8398, 94.1603, 40.9588, 0.37", "-30.5196, 95.6566, 41.0545, 0.22", "-30.9217, 96.4643, 41.0887, 0.22", "-31.4124, 97.4116, 41.1059, 0.29", "-31.9148, 98.368, 41.1262, 0.15", "-32.2521, 98.9926, 41.1326, 0.74", "-32.5092, 99.4805, 41.1491, 0.22", "-33.2035, 100.87, 41.34, 0.15", "-33.4958, 101.515, 41.4633, 0.15", "-33.9193, 102.501, 41.6897, 0.37", "-34.2104, 103.198, 41.8638, 0.37", "-34.7239, 104.412, 42.1782, 0.15", "-35.3301, 105.696, 42.5061, 0.66", "-35.6792, 106.322, 42.6571, 0.15", "-36.0735, 106.948, 42.7708, 0.15", "-36.7322, 107.933, 42.8796, 0.07", "-36.9741, 108.297, 42.9084, 0.15", "-37.4502, 109.032, 42.9407, 0.15", "-38.0342, 110.009, 42.9431, 0.37", "-38.8825, 111.612, 42.9432, 0.15", "-39.2286, 112.388, 42.9774, 0.29", "-39.736, 113.791, 43.0862, 0.07", "-39.899, 114.37, 43.1477, 0.37", "-40.0351, 115.033, 43.2191, 0.15", "-40.156, 115.864, 43.2994, 0.37", "-40.3544, 117.673, 43.453, 0.15", "-40.4264, 118.341, 43.4971, 0.29", "-40.484, 118.972, 43.5227, 0.29", "-40.5838, 120.442, 43.6039, 0.15", "-40.6281, 121.576, 43.6756, 0.15", "-40.6211, 122.113, 43.7092, 0.37", "-40.5644, 122.802, 43.7249, 0.37", "-40.4548, 123.824, 43.7319, 0.07", "-40.2615, 125.151, 43.7285, 0.29", "-40.1019, 125.98, 43.7289, 0.07", "-39.9124, 126.84, 43.7366, 0.15", "-39.5729, 128.307, 43.7631, 0.07", "-39.4017, 129.051, 43.7782, 0.22", "-39.2414, 129.713, 43.7928, 0.66", "-39.1355, 130.126, 43.8162, 0.66", "-38.5801, 132.096, 44.0622, 0.07", "-38.1881, 133.434, 44.2931, 0.07", "-37.9762, 134.147, 44.4483, 0.66", "-37.5539, 135.622, 44.7901, 0.22", "-37.2459, 136.848, 45.0703, 0.81", "-37.0643, 137.761, 45.2668, 0.59", "-36.8479, 139.859, 45.6538, 0.07", "-36.8469, 140.347, 45.7352, 0.07", "-36.9336, 141.178, 45.845, 0.22", "-37.1219, 142.068, 45.9275, 0.07", "-37.3388, 142.849, 45.9856, 0.22", "-37.8902, 144.521, 46.1187, 0.15", "-38.2389, 145.496, 46.2127, 0.74", "-38.8455, 147.269, 46.3885, 0.15", "-39.0985, 148.042, 46.4661, 0.29", "-39.6548, 149.807, 46.6457, 0.07", "-39.7804, 150.232, 46.6881, 0.22", "-40.0713, 151.258, 46.8135, 0.22", "-40.3297, 152.206, 46.9617, 0.44", "-40.594, 153.303, 47.2171, 1.03", "-40.7955, 154.223, 47.5013, 0.44", "-41.045, 155.421, 47.896, 0.44", "-41.3795, 157.082, 48.4999, 0.15", "-41.5671, 158.022, 48.8934, 0.52", "-41.8629, 159.583, 49.665, 0.15", "-42.0231, 160.557, 50.2422, 0.66" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-17.6923, 50.2214, 34.5641, 0.15", "-17.4011, 51.1655, 34.9771, 0.15", "-17.1951, 51.7535, 35.2956, 0.15", "-16.8765, 52.5922, 35.7841, 0.22", "-16.7102, 53.0476, 36.0085, 0.22", "-16.4701, 53.7963, 36.3259, 0.22", "-16.3248, 54.3056, 36.5426, 0.22", "-16.0975, 55.2881, 37.0061, 0.22", "-15.9422, 56.2114, 37.4593, 0.22", "-15.8428, 57.235, 37.9191, 0.22", "-15.797, 58.1709, 38.3112, 0.59", "-15.7951, 59.6875, 38.8799, 0.07", "-15.8467, 60.8507, 39.2299, 0.15", "-15.9331, 61.6558, 39.4434, 0.15", "-16.1615, 63.2092, 39.8798, 0.29", "-16.3503, 64.2953, 40.2171, 0.07", "-16.5214, 65.1694, 40.484, 0.59", "-16.8512, 66.4802, 40.8433, 0.07", "-17.1953, 67.6217, 41.1443, 0.22", "-17.4836, 68.5085, 41.4082, 0.22", "-17.7119, 69.198, 41.6693, 0.37", "-18.013, 70.1342, 42.0927, 0.29", "-18.3609, 71.2839, 42.6713, 0.29", "-18.6196, 72.1981, 43.1812, 0.22", "-18.8099, 73.1199, 43.6638, 0.59", "-18.9998, 74.3905, 44.301, 0.37", "-19.0636, 75.0882, 44.6444, 0.37", "-19.079, 75.6079, 44.8924, 0.44", "-19.0511, 76.2626, 45.1893, 0.44", "-18.8727, 78.4984, 46.1775, 0.15", "-18.7471, 79.6977, 46.6786, 0.15", "-18.6659, 80.2274, 46.8913, 0.15", "-18.5148, 80.9431, 47.1839, 0.29", "-18.2467, 81.9026, 47.5909, 0.15", "-17.8493, 82.9819, 48.0736, 0.52", "-17.5839, 83.5653, 48.3597, 0.52", "-17.0445, 84.688, 48.9289, 0.15", "-16.7279, 85.4238, 49.3054, 0.15", "-16.4845, 86.059, 49.6304, 0.44", "-16.1146, 87.1438, 50.1771, 0.44", "-15.6382, 88.7339, 50.9744, 0.29", "-15.3958, 89.6694, 51.4966, 0.44", "-15.0107, 91.2804, 52.5659, 0.15", "-14.806, 92.1423, 53.2275, 0.15", "-14.6782, 92.6718, 53.7085, 0.37", "-14.3743, 93.8707, 55.0269, 0.15", "-14.0969, 94.7785, 56.2104, 0.15", "-13.7199, 95.7333, 57.7338, 0.66", "-13.5237, 96.1582, 58.5402, 0.88", "-13.1223, 97.0219, 60.3137, 0.15", "-12.8723, 97.7385, 61.7039, 0.15", "-12.7403, 98.3368, 62.7647, 0.29", "-12.6704, 99.5443, 64.5677, 0.29", "-12.6926, 100.591, 66.0384, 0.29", "-12.7232, 100.895, 66.4443, 0.29", "-13.0428, 102.363, 68.1544, 0.07", "-13.2052, 102.842, 68.5938, 0.15", "-13.7687, 104.008, 69.4095, 0.15" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "4.61798, 104.92, -20.046, 0.74", "4.43412, 105.588, -20.5518, 0.74", "4.39778, 106.223, -21.0991, 0.22", "4.44504, 106.929, -21.7737, 0.22", "4.47335, 107.346, -22.1777, 0.22", "4.49961, 107.936, -22.7532, 0.22", "4.48704, 108.542, -23.3324, 0.59", "4.39301, 109.252, -24.0164, 0.22", "4.22569, 109.89, -24.5488, 0.22", "4.02374, 110.372, -24.8277, 0.22", "3.77104, 110.853, -24.9958, 0.59", "3.36383, 111.501, -25.1095, 0.88", "2.35919, 112.867, -25.288, 0.22", "1.81612, 113.55, -25.3742, 0.22", "1.27095, 114.254, -25.4899, 0.96", "0.623866, 115.161, -25.7205, 0.15", "0.150922, 115.882, -25.9825, 0.15", "-0.476051, 116.92, -26.5545, 0.15", "-0.885726, 117.577, -27.072, 0.37", "-1.32842, 118.194, -27.7056, 0.81", "-1.68225, 118.661, -28.2739, 0.81", "-1.9055, 118.979, -28.7177, 0.22", "-2.10606, 119.467, -29.4203, 0.22", "-2.13377, 119.992, -30.0513, 0.22", "-2.09168, 120.32, -30.3942, 0.22", "-2.03564, 120.705, -30.7665, 0.59", "-1.94338, 121.484, -31.4344, 0.37", "-1.8098, 122.575, -32.3425, 0.81", "-1.72603, 123.431, -33.0327, 0.22", "-1.69968, 124.162, -33.631, 0.22", "-1.78405, 124.937, -34.2933, 0.22", "-1.9828, 125.701, -34.9587, 1.03", "-2.34557, 126.65, -35.7713, 0.22", "-2.55033, 127.155, -36.2204, 0.22", "-2.74326, 127.65, -36.6892, 0.37", "-3.00783, 128.453, -37.4577, 0.15", "-3.20725, 129.161, -38.122, 1.03", "-3.4131, 130.001, -38.8961, 0.15", "-3.66208, 131.187, -39.8883, 0.15", "-3.74461, 131.77, -40.3679, 0.22", "-3.78244, 132.219, -40.7321, 0.22", "-3.8205, 132.715, -41.1398, 0.81", "-3.86827, 133.341, -41.6556, 1.25", "-3.9452, 134.132, -42.2908, 0.15", "-4.06358, 135.012, -42.9622, 0.29", "-4.13389, 135.78, -43.5536, 0.07", "-4.18228, 136.408, -44.0639, 0.22", "-8.37284, 143.527, -49.9116, 0.22", "-12.9995, 148.626, -57.2495, 0.22", "-19.9477, 152.908, -63.1041, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "4.61798, 104.92, -20.046, 0.15", "5.76865, 104.438, -19.8311, 0.15", "6.22672, 104.241, -19.7428, 0.15", "6.72254, 104.081, -19.7303, 0.29", "7.02665, 104.003, -19.7858, 0.29", "8.18752, 103.775, -20.1943, 0.15", "8.74043, 103.69, -20.4744, 0.37", "9.00564, 103.674, -20.6861, 0.37", "10.0583, 103.734, -21.7633, 0.15", "10.7013, 103.849, -22.6142, 0.15", "11.0953, 103.946, -23.2381, 0.15", "11.443, 104.023, -23.9064, 0.22", "11.7151, 104.087, -24.4968, 0.22", "11.8373, 104.102, -24.7792, 0.22", "12.0341, 104.07, -25.3685, 0.22", "12.2025, 103.981, -26.2124, 0.22", "12.3516, 103.548, -27.0913, 0.44", "19.3162, 104.152, -34.2431, 0.44", "26.06, 105.792, -41.4515, 0.44", "32.9715, 107.049, -48.5739, 0.44", "41.5425, 106.327, -53.6771, 0.44" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "25.472, 54.6072, 5.96389, 0.22", "26.7857, 55.227, 6.46844, 0.22", "27.5413, 55.5757, 6.73103, 0.22", "28.1248, 55.858, 6.92131, 0.37", "28.8796, 56.2391, 7.15038, 0.96", "29.6641, 56.6688, 7.35257, 0.96", "30.8942, 57.4017, 7.62624, 0.59", "31.5972, 57.8495, 7.74589, 0.37", "32.639, 58.5359, 7.86306, 0.59", "33.2463, 58.9569, 7.92856, 0.29", "33.9869, 59.5048, 8.02402, 0.29", "34.593, 60.016, 8.13871, 0.29", "35.2577, 60.6425, 8.32642, 0.44", "35.8661, 61.2431, 8.56097, 0.74", "36.6893, 62.0662, 8.94056, 0.81", "37.3849, 62.7799, 9.29333, 0.29", "38.0945, 63.5412, 9.67759, 0.22", "38.5802, 64.1197, 9.90934, 0.22", "38.9524, 64.6304, 10.0484, 0.59", "39.5616, 65.5958, 10.1699, 0.81", "40.1242, 66.5966, 10.1709, 0.22", "40.416, 67.1335, 10.147, 0.22", "41.039, 68.3073, 10.0996, 0.29", "41.4154, 69.074, 10.087, 0.52", "41.6984, 69.7444, 10.1055, 0.74", "42.0527, 70.7489, 10.1988, 1.11", "42.4616, 71.9131, 10.4093, 0.52", "42.753, 72.6949, 10.6361, 0.22", "42.9281, 73.1336, 10.7995, 0.22", "43.2926, 73.9036, 11.1075, 0.29", "43.6664, 74.5981, 11.3735, 0.29", "44.4369, 75.9046, 11.8185, 0.22", "45.0073, 76.8198, 12.0815, 0.81", "45.5954, 77.6802, 12.315, 0.66", "46.3972, 78.7781, 12.6013, 0.29", "47.0883, 79.6915, 12.8776, 0.22", "47.5438, 80.2694, 13.0654, 0.59", "47.7866, 80.5712, 13.1695, 0.59", "48.6105, 81.6294, 13.534, 0.81", "48.9265, 82.0708, 13.717, 0.37", "49.5961, 83.1244, 14.1941, 0.22", "49.9032, 83.663, 14.4494, 0.22", "50.1744, 84.2075, 14.6763, 0.22", "50.4561, 84.869, 14.9205, 0.22", "50.7001, 85.5877, 15.1307, 0.22", "50.9791, 86.4728, 15.2997, 0.81", "51.4145, 87.8588, 15.461, 0.81", "51.8228, 89.1033, 15.5689, 0.29", "52.2506, 90.2566, 15.6344, 0.59", "52.8387, 91.6568, 15.663, 0.22", "53.4391, 92.9865, 15.6282, 0.22", "53.8728, 93.8644, 15.5785, 0.44", "54.3582, 94.7546, 15.4968, 0.52", "54.9566, 95.8292, 15.3875, 0.15", "55.1227, 96.1298, 15.3552, 0.15", "55.6781, 97.1854, 15.2767, 0.59", "55.9765, 97.8302, 15.2607, 0.59", "56.3175, 98.6381, 15.2087, 0.22", "56.7212, 99.6083, 15.1262, 0.22", "56.9672, 100.161, 15.0846, 0.22", "57.2554, 100.766, 15.0641, 0.44", "57.7311, 101.737, 15.083, 0.52", "58.1003, 102.482, 15.1334, 0.52", "58.6144, 103.47, 15.2396, 0.74", "59.3688, 104.822, 15.431, 0.22", "59.7651, 105.48, 15.5423, 0.22", "60.1968, 106.167, 15.6796, 0.29", "60.7219, 107.017, 15.8703, 0.37", "61.1243, 107.688, 16.0308, 0.81", "61.2981, 107.977, 16.0873, 0.81", "61.8523, 108.857, 16.2017, 0.15", "62.3663, 109.68, 16.2984, 0.22", "62.8174, 110.361, 16.4083, 0.22", "63.2561, 110.936, 16.5348, 0.29", "64.0646, 111.902, 16.7915, 0.59", "64.6432, 112.582, 17.0003, 0.44", "65.2354, 113.291, 17.2415, 0.66", "66.0545, 114.256, 17.5927, 0.22", "67.0001, 115.356, 17.9968, 0.22", "67.2512, 115.678, 18.1095, 0.29", "67.8813, 116.623, 18.4276, 0.29", "68.2807, 117.329, 18.6374, 0.29", "68.6594, 118.149, 18.8328, 0.88", "68.9673, 119.055, 19.0339, 0.74", "69.4725, 120.99, 19.465, 0.22", "69.6913, 121.944, 19.6747, 0.22", "69.8356, 122.605, 19.823, 0.81", "70.0894, 123.686, 20.0707, 0.74", "70.3591, 124.827, 20.33, 0.22", "70.5121, 125.432, 20.4662, 0.22", "70.6966, 126.072, 20.5987, 0.22", "70.9809, 126.872, 20.7655, 0.22", "71.415, 127.874, 20.9776, 0.22", "71.7427, 128.545, 21.1146, 0.37", "72.1917, 129.381, 21.2647, 0.88", "72.3842, 129.71, 21.3222, 0.74", "73.2357, 131.03, 21.5485, 0.15", "73.9011, 131.988, 21.7021, 0.15", "74.4767, 132.77, 21.8488, 0.52", "74.9785, 133.376, 21.976, 0.22", "75.3274, 133.761, 22.0629, 0.22", "75.9283, 134.36, 22.2258, 0.29", "76.3733, 134.727, 22.3602, 0.29", "77.0673, 135.238, 22.6074, 0.29", "77.7964, 135.727, 22.8812, 0.29", "78.2588, 136.033, 23.0656, 0.59", "79.0468, 136.536, 23.3823, 1.11", "80.3196, 137.277, 23.89, 0.15", "80.6548, 137.45, 24.0145, 0.15", "81.1084, 137.634, 24.161, 0.15", "81.673, 137.836, 24.3294, 0.15", "82.0962, 137.97, 24.4703, 0.15", "82.7104, 138.158, 24.6936, 0.15", "83.5341, 138.424, 25.0161, 0.44", "85.0279, 138.952, 25.6307, 0.22", "85.5636, 139.163, 25.8773, 0.15", "86.8662, 139.766, 26.5182, 0.29", "87.4554, 140.075, 26.8279, 0.29", "87.8749, 140.308, 27.0638, 0.29", "88.5309, 140.695, 27.4454, 0.22", "89.0823, 141.055, 27.7339, 0.22", "89.7136, 141.455, 27.9933, 0.22", "90.338, 141.846, 28.1188, 0.37", "90.9104, 142.154, 28.1666, 0.37", "91.808, 142.566, 28.1687, 0.22", "92.5771, 142.889, 28.1091, 0.59", "93.1279, 143.117, 28.0182, 0.96", "94.1639, 143.596, 27.7964, 0.22", "94.9453, 144.03, 27.5714, 0.15", "95.46, 144.358, 27.4011, 0.15", "96.0476, 144.785, 27.2102, 0.37", "96.7756, 145.363, 27.0065, 0.66", "97.5763, 146.064, 26.8306, 0.74", "98.3709, 146.832, 26.7154, 0.52", "98.6717, 147.147, 26.6958, 0.52", "99.3464, 147.875, 26.7219, 0.15", "100.091, 148.684, 26.7962, 0.22", "100.567, 149.196, 26.8888, 0.22", "101.068, 149.709, 27.0287, 0.66", "101.843, 150.475, 27.3385, 0.96", "102.271, 150.887, 27.5289, 0.96" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "25.472, 54.6072, 5.96389, 0.22", "25.2334, 56.0439, 4.93786, 0.22", "25.0911, 56.8801, 4.40334, 0.22", "24.9659, 57.623, 3.97038, 0.44", "24.8139, 58.5897, 3.46849, 0.37", "24.6225, 59.6108, 2.97039, 0.37", "24.3929, 60.6963, 2.42518, 0.29", "24.1837, 61.4815, 2.05301, 0.29", "23.8026, 62.5957, 1.5375, 0.52", "23.5234, 63.3062, 1.20012, 0.15", "23.2757, 63.9457, 0.881363, 0.37", "23.0684, 64.5835, 0.516401, 0.37", "22.8743, 65.3199, 0.072157, 0.22", "22.7252, 65.9698, -0.275077, 0.22", "22.6323, 66.5168, -0.558414, 0.59", "22.5357, 67.3349, -1.00302, 0.22", "22.4766, 68.2409, -1.47878, 0.37", "22.4043, 69.117, -1.94394, 0.81", "22.3572, 69.5986, -2.21, 0.81", "22.1885, 70.7837, -2.85877, 0.52", "22.0241, 71.7601, -3.42242, 0.52", "21.8075, 72.9947, -4.16165, 0.22", "21.6339, 73.9564, -4.74032, 0.15", "21.4816, 74.7431, -5.20761, 0.37", "21.3711, 75.2991, -5.50764, 0.37", "21.2318, 76.0946, -5.88988, 0.15", "21.1569, 76.6376, -6.12571, 0.15", "21.0892, 77.2558, -6.37908, 0.15", "20.9886, 78.2013, -6.72331, 0.74", "20.853, 79.0903, -7.03359, 0.22", "20.6423, 80.0793, -7.36229, 0.22", "20.4656, 80.7086, -7.54909, 0.22", "20.0985, 81.8408, -7.85325, 0.96", "19.7829, 82.7886, -8.07569, 0.96", "19.5969, 83.3725, -8.17954, 0.15", "19.3819, 84.0186, -8.28037, 0.15", "19.1624, 84.6173, -8.36486, 0.15", "18.9017, 85.3353, -8.47197, 0.44", "18.7836, 85.6898, -8.52967, 0.44", "18.3189, 87.191, -8.74524, 0.22", "18.0819, 88.0151, -8.82188, 0.22", "17.8586, 88.784, -8.857, 0.22", "17.6722, 89.3045, -8.8417, 0.59", "17.3981, 89.9334, -8.78159, 0.74", "16.9903, 90.7596, -8.66421, 0.22", "16.6244, 91.4478, -8.5287, 0.22", "16.2973, 92.1075, -8.377, 0.88", "15.6224, 93.6105, -8.02875, 0.15", "15.2801, 94.4347, -7.85798, 0.15", "14.8959, 95.402, -7.68958, 0.15", "14.5685, 96.2108, -7.58533, 0.66", "14.0925, 97.2523, -7.45449, 0.07", "13.8137, 97.828, -7.37147, 0.15", "13.4986, 98.434, -7.27334, 0.15", "13.1886, 98.9201, -7.17565, 0.15", "12.647, 99.5186, -7.02809, 0.22", "11.6836, 100.259, -6.83382, 0.07", "11.4038, 100.426, -6.79277, 0.07", "10.6725, 100.861, -6.71149, 0.07", "10.2479, 101.114, -6.68964, 0.52", "9.72775, 101.439, -6.68799, 0.96", "9.27511, 101.737, -6.70489, 0.96", "8.41763, 102.353, -6.79678, 0.52", "7.48673, 103.023, -6.93211, 0.22", "6.76641, 103.558, -7.07968, 0.29", "6.11281, 104.075, -7.2439, 0.74", "5.46578, 104.617, -7.45166, 0.22", "4.72347, 105.217, -7.72844, 0.15", "4.0967, 105.677, -7.98801, 0.15", "3.28428, 106.222, -8.34205, 0.15", "2.77898, 106.552, -8.56308, 0.59", "2.09129, 106.991, -8.9034, 0.15", "1.41127, 107.409, -9.25847, 0.15", "0.940949, 107.694, -9.52444, 0.15", "0.428066, 108.024, -9.86661, 0.37", "-0.116954, 108.393, -10.2708, 0.22", "-0.662554, 108.797, -10.7511, 0.22", "-1.26156, 109.31, -11.3594, 1.03", "-1.89283, 109.944, -12.0785, 0.22", "-2.38333, 110.462, -12.6564, 0.52", "-2.69253, 110.775, -13.0103, 0.74", "-3.34884, 111.381, -13.6703, 0.22", "-3.71964, 111.703, -13.9759, 0.22", "-4.16621, 112.108, -14.2964, 0.22", "-4.69085, 112.656, -14.6249, 0.22", "-4.92301, 112.954, -14.7698, 0.22", "-5.34966, 113.583, -15.0505, 0.22", "-5.65112, 114.056, -15.2522, 0.74", "-5.95639, 114.54, -15.4738, 0.15", "-6.35836, 115.161, -15.7527, 0.15", "-6.80417, 115.85, -16.0617, 0.15", "-7.11574, 116.321, -16.2472, 0.15", "-7.45696, 116.838, -16.4071, 0.74", "-7.89534, 117.501, -16.5608, 0.96", "-8.81778, 118.909, -16.778, 0.15", "-9.01868, 119.234, -16.8013, 0.15", "-9.46794, 120.08, -16.8128, 0.37", "-10.0619, 121.394, -16.7416, 0.15", "-10.3134, 122.006, -16.6604, 0.22", "-10.4733, 122.418, -16.5819, 0.22", "-10.7767, 123.273, -16.3503, 0.81", "-11.0149, 123.96, -16.1296, 0.29", "-11.2796, 124.733, -15.8468, 0.07", "-11.614, 125.595, -15.4662, 0.07", "-11.8475, 126.11, -15.234, 0.52", "-12.1896, 126.816, -14.9292, 0.15", "-12.4589, 127.335, -14.7266, 0.15", "-12.6481, 127.674, -14.6159, 0.15", "-12.9544, 128.286, -14.5063, 0.59", "-13.3176, 129.124, -14.4458, 0.15", "-13.5338, 129.614, -14.4514, 0.29", "-13.8051, 130.13, -14.5052, 0.15", "-14.2621, 130.855, -14.6131, 0.15", "-14.7833, 131.593, -14.7446, 0.22", "-15.0063, 131.911, -14.8029, 0.22", "-15.374, 132.453, -14.8946, 0.22", "-15.7906, 133.061, -14.9837, 0.66", "-16.2351, 133.721, -15.062, 0.74", "-16.8015, 134.617, -15.139, 0.15", "-17.181, 135.268, -15.1615, 0.15", "-17.5864, 136.198, -15.1502, 0.15", "-17.8275, 136.857, -15.1292, 0.22", "-18.0228, 137.542, -15.1029, 0.07", "-18.1912, 138.353, -15.0638, 0.07", "-18.2637, 138.936, -15.026, 0.15", "-18.3577, 140.329, -14.9026, 0.07", "-21.1655, 149.775, -17.5819, 0.07", "-24.3897, 159.455, -18.2381, 0.07", "-26.7076, 169.389, -19.0656, 0.07" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "32.788, -8.05692, -15.772, 0.37", "33.2603, -9.00123, -16.5437, 0.37", "33.5798, -9.64589, -17.0997, 0.44", "33.9481, -10.3306, -17.7511, 0.44", "34.3745, -11.0295, -18.5137, 0.81", "34.8862, -11.7574, -19.4575, 1.03", "35.3585, -12.3243, -20.3499, 1.18", "35.796, -12.7744, -21.2691, 0.44", "36.1111, -12.9597, -21.8841, 0.81", "36.6305, -12.9289, -22.5939, 1.11", "37.3104, -12.5981, -23.1336, 1.03", "37.933, -12.2187, -23.4681, 0.74", "38.7645, -11.7306, -23.8626, 0.15", "39.6006, -11.2937, -24.2673, 0.44", "40.474, -10.9046, -24.647, 0.22", "41.2267, -10.6502, -24.9543, 0.59", "42.2432, -10.4092, -25.3882, 0.74", "43.4627, -10.2293, -26.0628, 1.25", "44.1386, -10.1722, -26.6073, 1.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "32.788, -8.05692, -15.772, 0.29", "34.0214, -8.33649, -15.0404, 0.29", "35.287, -8.62335, -14.2897, 0.29", "36.4442, -8.88566, -13.6033, 0.81", "37.4752, -9.11934, -12.9918, 0.96", "38.3665, -9.32138, -12.4631, 0.88", "39.234, -9.51802, -11.9486, 0.74" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-39.6179, 69.0828, -17.9283, 0.66", "-40.7027, 68.8612, -17.5662, 0.66", "-42.186, 68.5564, -17.1648, 0.44", "-42.9646, 68.3908, -16.9909, 0.44", "-44.1052, 68.122, -16.7853, 0.59", "-45.111, 67.8904, -16.6416, 0.74", "-46.1413, 67.6806, -16.5177, 0.44", "-47.0933, 67.5161, -16.4878, 0.44", "-47.732, 67.4491, -16.522, 0.22", "-48.7505, 67.4065, -16.5959, 0.15", "-49.256, 67.462, -16.6468, 0.15", "-49.9002, 67.6483, -16.7234, 0.29", "-50.5919, 67.9282, -16.7759, 0.15", "-51.0427, 68.1411, -16.762, 0.15", "-51.3174, 68.2781, -16.7222, 0.15", "-52.0555, 68.6261, -16.5656, 0.88", "-53.0383, 68.9931, -16.3273, 0.74", "-54.3301, 69.3409, -16.0175, 0.29", "-55.3484, 69.5223, -15.8117, 0.22", "-55.9627, 69.5746, -15.7161, 0.22", "-56.4002, 69.5804, -15.6699, 0.22", "-56.9382, 69.5526, -15.6183, 0.66", "-57.7678, 69.4488, -15.5401, 1.03", "-59.1066, 69.1614, -15.4379, 0.52", "-60.3481, 68.8347, -15.363, 0.37", "-61.004, 68.671, -15.3108, 0.22", "-61.928, 68.4958, -15.1753, 0.15", "-62.6942, 68.3667, -15.0301, 0.15", "-63.2631, 68.2937, -14.8742, 0.15", "-63.5059, 68.2828, -14.7653, 0.81", "-64.2114, 68.3727, -14.3323, 1.11", "-64.9248, 68.5559, -13.864, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-39.6179, 69.0828, -17.9283, 0.88", "-39.5343, 70.2373, -17.8587, 0.88", "-39.4261, 71.073, -17.8124, 0.29", "-39.3051, 71.9281, -17.6239, 0.29", "-39.2471, 72.54, -17.4198, 0.29", "-39.2201, 73.294, -17.1104, 0.88", "-39.2322, 73.5651, -16.992, 0.88", "-39.3476, 74.496, -16.5184, 0.74", "-39.5777, 76.2162, -15.5746, 0.52", "-39.7193, 77.2855, -14.9705, 0.37", "-39.8442, 77.9738, -14.5802, 0.37", "-40.0963, 78.9697, -14.0279, 0.37", "-40.2567, 79.5, -13.7639, 0.29", "-40.6432, 80.6455, -13.3038, 0.66", "-40.8028, 81.1521, -13.1814, 0.22", "-40.9922, 81.793, -13.0605, 0.22", "-41.2281, 82.5531, -12.9471, 0.44", "-41.4295, 83.2935, -12.8588, 0.15", "-41.6488, 83.9671, -12.7956, 0.29", "-41.873, 84.5375, -12.7402, 0.15", "-42.047, 84.9753, -12.6821, 0.15", "-42.3958, 85.8075, -12.5293, 0.96", "-43.1187, 87.3536, -12.1696, 0.15", "-43.5561, 88.2411, -11.9265, 0.22", "-44.0039, 89.1045, -11.6751, 0.22", "-44.3589, 89.7909, -11.4555, 0.59", "-44.8354, 90.7092, -11.1287, 0.37", "-45.4437, 91.8439, -10.6619, 0.74", "-46.1946, 93.176, -10.0391, 0.74", "-46.8843, 94.5177, -9.40104, 0.22", "-47.1694, 95.1533, -9.1065, 0.74", "-47.3651, 95.6714, -8.88354, 1.03", "-47.767, 96.9674, -8.36965, 0.22", "-47.9596, 97.7423, -8.08787, 0.22", "-48.0899, 98.449, -7.87374, 0.81", "-48.1813, 99.2273, -7.6901, 0.81", "-48.3419, 100.889, -7.41831, 0.15", "-48.4261, 101.603, -7.34525, 0.37", "-48.5662, 102.45, -7.3047, 0.15", "-48.7714, 103.411, -7.27946, 0.22", "-48.9014, 103.94, -7.2663, 0.37", "-49.0578, 104.528, -7.24158, 0.74", "-49.4094, 105.921, -7.13667, 0.29", "-49.6555, 106.977, -7.02913, 0.22", "-49.8178, 107.715, -6.9436, 0.22", "-49.9998, 108.601, -6.83005, 0.37", "-50.1395, 109.427, -6.71479, 0.22", "-50.2636, 110.545, -6.54322, 0.22", "-50.2877, 111.608, -6.36112, 0.81", "-50.28, 113.049, -6.09914, 0.22", "-51.3165, 122.753, -3.04882, 0.22", "-52.2408, 132.489, -0.0645092, 0.22", "-54.8165, 141.306, 4.33681, 0.22", "-56.5924, 149.651, 9.86588, 0.22", "-58.9339, 158.704, 13.9282, 0.22" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-30.2133, -10.2375, 4.12356, 0.07", "-30.7568, -11.1993, 5.01245, 0.07", "-31.0238, -11.7043, 5.48967, 0.59", "-31.3712, -12.3644, 6.09493, 0.07", "-31.6448, -12.8628, 6.53488, 0.29", "-31.8794, -13.2859, 6.89706, 0.29", "-32.3513, -14.0792, 7.57918, 0.15", "-32.6889, -14.5757, 8.06408, 0.22", "-33.1228, -15.1859, 8.72842, 0.88", "-33.546, -15.7798, 9.39567, 0.22", "-33.9158, -16.3041, 9.99368, 0.37", "-34.3821, -16.9184, 10.669, 0.59", "-34.9879, -17.6377, 11.4578, 0.22", "-35.5941, -18.3026, 12.1941, 0.22", "-35.966, -18.6964, 12.6134, 0.22", "-36.2495, -19.0066, 12.9102, 0.22", "-37.0377, -19.8215, 13.5912, 0.15", "-37.5341, -20.2901, 13.946, 0.15", "-38.1919, -20.8301, 14.3388, 0.59", "-39.1737, -21.5556, 14.9011, 0.15", "-39.847, -22.009, 15.3147, 0.59", "-40.6591, -22.5114, 15.8775, 0.07", "-41.5147, -23.0214, 16.5133, 0.15", "-42.027, -23.3181, 16.8996, 0.66", "-42.8987, -23.7961, 17.5827, 0.29", "-43.7979, -24.2056, 18.3054, 0.29", "-44.6958, -24.5895, 19.0824, 0.29" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-30.2133, -10.2375, 4.12356, 0.22", "-30.9722, -10.9154, 4.32752, 0.22", "-31.8032, -11.6889, 4.54685, 0.22", "-32.4678, -12.392, 4.72161, 0.22", "-32.942, -12.9487, 4.86961, 0.15", "-33.3922, -13.4887, 5.03655, 0.15", "-33.8254, -14.0201, 5.20575, 0.59", "-34.0912, -14.3875, 5.32444, 0.66", "-34.5333, -15.054, 5.53092, 0.29", "-34.9794, -15.7899, 5.78027, 0.22", "-35.4661, -16.6858, 6.0948, 0.22", "-35.8585, -17.4752, 6.3616, 0.59", "-36.1615, -18.1341, 6.57973, 0.59", "-36.5002, -18.9423, 6.83571, 0.22", "-36.7796, -19.6829, 7.06663, 0.22", "-36.9838, -20.3077, 7.25554, 0.74", "-37.1618, -20.9582, 7.47819, 0.74", "-37.3996, -21.8312, 7.85202, 0.59", "-37.5746, -22.439, 8.15096, 0.37", "-37.812, -23.1968, 8.53096, 0.22", "-38.1221, -24.0151, 8.96007, 0.59", "-38.5121, -24.8691, 9.42721, 0.52", "-38.853, -25.4732, 9.77165, 0.52", "-39.2226, -26.0333, 10.0912, 0.52", "-39.9134, -27.0156, 10.6044, 0.22", "-40.3748, -27.6899, 10.8896, 0.66", "-40.6904, -28.173, 11.0393, 0.66", "-41.0758, -28.7601, 11.1834, 0.22", "-41.515, -29.4405, 11.337, 0.22", "-41.7624, -29.811, 11.4193, 0.22", "-42.3091, -30.598, 11.6144, 0.74", "-42.9013, -31.3958, 11.8328, 0.22", "-43.7567, -32.4387, 12.1548, 0.15", "-44.3926, -33.0834, 12.3887, 0.81", "-45.576, -33.9334, 12.816, 0.07", "-46.3535, -34.302, 13.103, 0.22", "-47.0546, -34.456, 13.3447, 0.59", "-47.6205, -34.4536, 13.5116, 0.81", "-48.679, -34.2253, 13.7303, 0.22", "-50.1638, -33.6574, 13.8942, 0.15", "-51.0158, -33.1965, 13.9013, 0.81", "-52.2444, -32.3496, 13.7398, 0.22", "-53.1195, -31.5998, 13.4745, 0.66", "-53.7635, -30.9166, 13.1649, 0.22", "-54.2668, -30.2455, 12.79, 0.22", "-54.6143, -29.6767, 12.4154, 0.59", "-55.0656, -28.7518, 11.7848, 0.15", "-55.4055, -27.8762, 11.1985, 0.15", "-55.5816, -27.3956, 10.8759, 0.66", "-55.8051, -26.7946, 10.4725, 0.66", "-56.1218, -26.0045, 9.94074, 0.15", "-56.4479, -25.3443, 9.48101, 0.15", "-56.7529, -24.8961, 9.19216, 0.52", "-57.4093, -24.2309, 8.85875, 0.15", "-58.1218, -23.8052, 8.75259, 0.22", "-58.5362, -23.6557, 8.77277, 0.59", "-59.2109, -23.5238, 8.90256, 0.59", "-60.4976, -23.4104, 9.2567, 0.15", "-61.9317, -23.4086, 9.75197, 0.66", "-63.6999, -23.5296, 10.4883, 0.15", "-64.6427, -23.6604, 10.9245, 0.59", "-66.0597, -23.9881, 11.6131, 0.15", "-66.8989, -24.3094, 12.0233, 0.22", "-67.5387, -24.6637, 12.3208, 0.22", "-67.9916, -24.9905, 12.5308, 0.52", "-68.4362, -25.3913, 12.7351, 0.22", "-69.0536, -26.011, 12.9819, 0.81", "-70.2102, -27.2354, 13.3267, 0.07", "-70.7214, -27.7105, 13.4208, 0.22", "-71.2158, -28.0929, 13.4667, 0.07", "-71.8284, -28.4964, 13.4835, 0.66", "-72.6981, -29.0065, 13.472, 0.07", "-73.0302, -29.1771, 13.4516, 0.44", "-74.7382, -29.9393, 13.3009, 0.15", "-75.4409, -30.2372, 13.2196, 0.37", "-76.5407, -30.6764, 13.0525, 0.07", "-77.3091, -30.9624, 12.9246, 0.22", "-78.3936, -31.3602, 12.7248, 0.07" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "102.271, 150.887, 27.5289, 0.52", "102.707, 151.635, 27.6747, 0.52", "103.563, 152.945, 27.967, 0.22", "104.056, 153.655, 28.1762, 0.66", "104.339, 154.031, 28.3292, 0.96", "104.97, 154.841, 28.7024, 0.22", "105.477, 155.51, 29.0204, 0.22", "106.165, 156.401, 29.454, 0.52", "106.582, 156.921, 29.6914, 0.96", "107.567, 158.166, 30.1684, 0.52", "108.457, 159.239, 30.4908, 0.22", "109.056, 159.921, 30.6374, 0.66", "110.012, 160.868, 30.7311, 0.15", "110.61, 161.376, 30.7198, 0.15", "111.295, 161.87, 30.6558, 0.44", "112.427, 162.545, 30.4946, 0.15", "113.137, 162.884, 30.3968, 0.74", "115.23, 163.706, 30.1646, 0.15", "115.859, 163.934, 30.1067, 0.59", "116.888, 164.33, 30.0221, 0.15", "117.257, 164.482, 29.9866, 0.22", "117.928, 164.794, 29.9155, 0.15", "118.971, 165.343, 29.7452, 0.66", "120.123, 166.05, 29.4758, 0.15", "120.977, 166.645, 29.2482, 0.37", "121.533, 167.061, 29.0472, 0.07", "121.926, 167.362, 28.8657, 0.22", "122.878, 168.112, 28.2837, 0.07", "123.425, 168.517, 27.8609, 0.59", "124.041, 168.943, 27.2405, 0.07", "124.861, 169.469, 26.2082, 0.15", "125.243, 169.694, 25.6618, 0.37", "125.871, 170.01, 24.6454, 0.22", "126.346, 170.235, 23.7637, 0.52", "126.984, 170.519, 22.4582, 0.22", "127.296, 170.654, 21.7825, 0.22", "127.5, 170.744, 21.3565, 0.44", "128.007, 170.981, 20.2217, 0.22", "128.417, 171.199, 19.1829, 0.22", "128.795, 171.461, 18.0812, 0.22", "128.976, 171.598, 17.5355, 0.37", "129.113, 171.72, 17.0714, 0.37", "129.317, 171.946, 16.2252, 0.22", "129.418, 172.084, 15.7194, 0.37", "129.509, 172.21, 15.2764, 0.37", "129.603, 172.412, 14.6715, 0.37", "129.643, 172.569, 14.2473, 0.37", "129.672, 172.899, 13.5161, 0.22", "129.64, 173.714, 12.1622, 0.44", "129.542, 174.3, 11.3864, 0.59", "129.353, 175.121, 10.3819, 0.15", "129.166, 175.736, 9.71412, 0.37", "128.831, 176.623, 8.86604, 0.07", "128.354, 177.653, 8.07565, 0.07", "128.185, 177.953, 7.9188, 0.15" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "102.271, 150.887, 27.5289, 0.15", "103.727, 150.462, 28.2387, 0.15", "104.889, 150.067, 28.8064, 0.15", "105.829, 149.71, 29.2678, 0.37", "106.571, 149.395, 29.6176, 0.37", "107.917, 148.804, 30.2486, 0.15", "109.415, 148.15, 30.9569, 0.15", "110.013, 147.874, 31.2556, 0.15", "110.684, 147.561, 31.5676, 0.15", "111.518, 147.184, 31.957, 0.66", "113.084, 146.506, 32.6755, 0.07", "114.11, 146.07, 33.1611, 0.07", "114.571, 145.886, 33.3606, 0.07", "115.171, 145.648, 33.6325, 0.52", "115.856, 145.361, 33.9564, 0.74", "116.91, 144.874, 34.4816, 0.07", "117.979, 144.278, 35.0666, 0.07", "118.715, 143.815, 35.4965, 0.22", "119.448, 143.309, 35.9677, 0.22", "120.693, 142.37, 36.8614, 0.07", "121.633, 141.612, 37.6016, 0.52", "122.983, 140.456, 38.819, 0.15", "123.494, 139.995, 39.359, 0.59", "124.308, 139.238, 40.3458, 0.07", "124.989, 138.579, 41.2229, 0.07", "125.371, 138.201, 41.7696, 0.29", "125.865, 137.705, 42.5609, 0.29", "126.574, 137.017, 43.8162, 0.15", "127.096, 136.53, 44.8396, 0.52" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "44.1386, -10.1722, -26.6073, 0.15", "44.1263, -8.9623, -26.7977, 0.15", "44.1842, -8.14272, -26.8765, 0.15", "44.2782, -7.18793, -26.937, 0.81", "44.3537, -6.4129, -26.97, 0.22", "44.4308, -5.58272, -26.9937, 0.15", "44.5115, -4.7679, -27.0092, 0.15", "44.6062, -3.74891, -27.0045, 0.15", "44.7024, -3.30305, -26.9982, 0.37", "44.9167, -2.71905, -26.991, 0.66", "45.2165, -2.19919, -27.0227, 0.22", "45.6465, -1.6468, -27.1156, 0.22", "45.9012, -1.37313, -27.2, 0.22", "46.644, -0.704541, -27.5522, 0.88", "46.9588, -0.449466, -27.7326, 0.88", "47.6475, 0.0666753, -28.2053, 0.22", "48.1644, 0.460001, -28.6338, 0.22", "48.5809, 0.826475, -29.0521, 0.22", "49.022, 1.29348, -29.574, 0.22", "49.3692, 1.76407, -30.0636, 0.59", "49.7847, 2.52952, -30.7603, 0.88", "50.0408, 3.20717, -31.3169, 0.88", "50.3211, 4.26187, -32.1414, 0.15", "50.379, 4.55903, -32.3574, 0.29", "50.4628, 5.16362, -32.7634, 0.81", "50.5362, 6.28364, -33.4632, 0.22", "50.5339, 7.17166, -33.9773, 0.22", "50.505, 7.84317, -34.3522, 0.22", "50.4678, 8.36502, -34.6567, 0.81", "50.4547, 8.89529, -35.0057, 0.59", "50.5111, 9.47606, -35.5005, 0.59", "53.8607, 18.6779, -38.3618, 0.59", "55.6479, 28.5385, -40.4256, 0.59" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "44.1386, -10.1722, -26.6073, 0.29", "45.9158, -11.0981, -25.6833, 0.29", "46.7386, -11.4396, -25.3112, 0.22", "47.4613, -11.3709, -25.2251, 0.22", "47.7477, -11.2811, -25.2536, 0.22", "48.2521, -11.159, -25.3776, 0.44", "48.8908, -11.0977, -25.6046, 0.66", "49.7057, -11.0773, -26.1805, 0.22", "50.0614, -11.1221, -26.4487, 0.22", "50.5321, -11.2997, -26.8008, 0.52", "51.2728, -11.7428, -27.356, 0.81", "51.8826, -12.1503, -27.7999, 0.59", "52.6097, -12.6517, -28.3568, 0.88", "53.1992, -13.0416, -28.8236, 0.96", "53.9901, -13.473, -29.4914, 0.66", "55.1635, -13.9952, -30.5252, 0.22", "56.0223, -14.2893, -31.2911, 0.15", "56.8067, -14.4821, -31.963, 0.15", "57.3966, -14.5653, -32.4489, 1.4", "58.501, -14.5996, -33.2815, 0.22", "59.3488, -14.5554, -33.8303, 0.22", "59.7795, -14.5183, -34.0558, 0.22", "60.6803, -14.534, -34.4062, 0.66", "61.3444, -14.6705, -34.5335, 0.66", "62.1351, -15.1498, -34.5296, 0.22", "62.4879, -15.6787, -34.4282, 0.22", "62.6954, -16.178, -34.3708, 0.22", "62.9937, -16.9816, -34.3435, 0.22", "63.3345, -17.8724, -34.3779, 0.96", "63.693, -18.6385, -34.4432, 1.25", "64.257, -19.5137, -34.5796, 0.22", "64.9918, -20.3187, -34.7625, 0.22", "65.5687, -20.8264, -34.8995, 0.29", "66.1631, -21.269, -35.05, 0.81", "66.9318, -21.7722, -35.2608, 0.88", "67.8854, -22.3241, -35.5139, 1.03", "68.6878, -22.7274, -35.7368, 0.66", "69.7079, -23.2113, -36.0099, 0.22", "70.5131, -23.5656, -36.2261, 0.44", "71.2575, -23.8646, -36.4136, 0.88", "72.104, -24.1813, -36.5962, 0.96", "73.087, -24.5603, -36.7737, 1.55", "74.1563, -25.0109, -36.9533, 0.29", "75.0697, -25.4611, -37.1304, 0.15", "75.681, -25.8992, -37.2665, 0.22", "76.3003, -26.55, -37.4713, 0.66", "77.0214, -27.5583, -37.8179, 0.22", "77.5446, -28.4436, -38.1427, 0.59", "77.9102, -29.1098, -38.4242, 0.88", "78.4695, -30.1089, -38.8801, 0.22", "78.9743, -30.8617, -39.2484, 0.29", "79.48, -31.4366, -39.5385, 0.29", "79.8486, -31.7349, -39.6903, 0.74", "80.6312, -32.1607, -39.9, 1.18", "81.3638, -32.415, -40.0047, 1.25", "82.7116, -32.7041, -40.0961, 0.52", "83.5816, -32.857, -40.1017, 0.22", "84.5957, -33.0422, -40.0742, 0.22", "85.6529, -33.3325, -40.0268, 0.29", "86.7789, -33.7848, -39.9544, 0.22", "87.4614, -34.1529, -39.8982, 1.25", "87.977, -34.5204, -39.8479, 1.03", "88.6442, -35.0736, -39.7797, 1.18", "90.0263, -36.3139, -39.6227, 0.22", "90.6432, -36.8757, -39.5602, 0.22", "90.8911, -37.0677, -39.5411, 0.22", "91.6986, -37.5557, -39.4703, 0.29", "92.5775, -37.972, -39.3842, 0.22", "93.4114, -38.2954, -39.2955, 0.81", "93.8991, -38.4634, -39.2205, 1.11", "95.1287, -38.9146, -39.0284, 0.22", "95.7131, -39.1497, -38.9404, 0.22", "96.4657, -39.4723, -38.8518, 0.88", "96.9478, -39.6872, -38.8163, 0.88", "98.0622, -40.1887, -38.8444, 0.22", "98.7392, -40.5226, -38.9662, 0.22", "99.3059, -40.8194, -39.1976, 0.88", "100.205, -41.246, -39.772, 1.03", "100.639, -41.4058, -40.1774, 0.59", "101.235, -41.5584, -40.8833, 0.22", "101.927, -41.6565, -41.8694, 0.22", "102.246, -41.6852, -42.3689, 0.22", "102.486, -41.6997, -42.7123, 0.22", "103.09, -41.7395, -43.5232, 0.22", "103.347, -41.7727, -43.837, 0.22", "103.693, -41.845, -44.1909, 0.81", "104.185, -42.0186, -44.6039, 1.18", "105.648, -42.6835, -45.7013, 0.15", "106.188, -42.9638, -46.0679, 0.15", "106.883, -43.3237, -46.5038, 1.03", "107.398, -43.5961, -46.8269, 1.33", "108.551, -44.2144, -47.5231, 0.07", "109.032, -44.4697, -47.8038, 0.22", "109.305, -44.6035, -47.948, 0.22", "110.413, -45.0162, -48.4437, 0.15", "111.041, -45.1727, -48.6932, 0.15", "111.964, -45.3109, -49.0654, 0.15", "121.034, -48.8578, -51.4661, 0.15" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "39.234, -9.51802, -11.9486, 0.22", "39.9722, -8.91772, -11.4642, 0.22", "40.4477, -8.59531, -11.128, 0.22", "41.0265, -8.26048, -10.7121, 0.22", "41.6178, -7.96795, -10.3225, 0.66", "42.3358, -7.68714, -9.90368, 0.66", "43.1868, -7.42321, -9.48161, 0.22", "43.7792, -7.3265, -9.23737, 0.22", "44.0474, -7.32431, -9.16, 0.22", "44.9586, -7.45218, -9.02262, 0.44", "45.913, -7.69134, -8.95591, 0.88", "46.909, -7.96952, -8.91346, 0.22", "47.6271, -8.13415, -8.88781, 0.22", "48.5515, -8.27964, -8.85597, 0.29", "49.4232, -8.33813, -8.82052, 0.15", "50.11, -8.32391, -8.76031, 0.52", "51.6485, -8.13571, -8.52957, 0.37", "52.7065, -7.91772, -8.31276, 0.22", "53.5124, -7.69237, -8.11444, 1.03", "54.551, -7.30559, -7.81264, 0.29", "55.3088, -6.95758, -7.55897, 0.22", "56.2055, -6.48871, -7.2321, 0.22", "56.5811, -6.27993, -7.1059, 0.22", "57.2322, -5.91904, -6.9015, 0.22", "58.0296, -5.50105, -6.72832, 0.22", "58.7639, -5.15454, -6.66681, 0.66", "59.7117, -4.75231, -6.63991, 0.22", "60.8622, -4.30713, -6.59278, 0.66", "61.488, -4.10469, -6.55273, 0.81", "62.8063, -3.77007, -6.47531, 0.22", "63.4506, -3.63463, -6.40775, 0.22", "64.7254, -3.39974, -6.23569, 0.37", "65.5903, -3.23458, -6.06801, 0.74", "66.3059, -3.08667, -5.88298, 0.74", "67.1107, -2.9012, -5.66736, 0.59", "68.5192, -2.5318, -5.34618, 0.74", "69.6084, -2.23469, -5.21797, 0.07", "70.7732, -1.92597, -5.22988, 0.07", "71.1408, -1.83493, -5.26822, 0.59", "71.8086, -1.69671, -5.41322, 0.59", "72.8983, -1.49028, -5.78683, 0.15", "73.6262, -1.3716, -6.16737, 0.15", "74.2111, -1.27964, -6.52845, 0.37", "74.9436, -1.20315, -6.99379, 0.81", "76.27, -1.09623, -7.86459, 0.07", "77.0192, -1.07044, -8.35348, 0.44", "77.9853, -1.04249, -8.97954, 0.22", "78.8904, -1.00186, -9.58008, 0.96", "80.2274, -0.951488, -10.5206, 0.15", "80.8951, -0.957898, -11.0019, 0.15", "81.5584, -0.989888, -11.4929, 0.44", "82.4368, -1.05708, -12.2046, 0.29", "82.6792, -1.06473, -12.4276, 0.29", "82.9229, -1.04937, -12.725, 0.29", "83.307, -0.960368, -13.2723, 0.22", "83.7547, -0.842778, -13.8158, 0.22", "84.3658, -0.682266, -14.3564, 0.22", "84.7998, -0.583012, -14.6456, 0.22", "85.1788, -0.514992, -14.866, 0.22", "85.9818, -0.415599, -15.254, 0.07", "87.0088, -0.347699, -15.6702, 0.96", "88.5857, -0.414836, -16.1745, 0.07", "88.8969, -0.480787, -16.2501, 0.07", "89.7489, -0.795238, -16.4254, 0.07", "90.6578, -1.33059, -16.584, 0.07", "91.0513, -1.67942, -16.6434, 0.88", "91.6586, -2.35009, -16.7233, 0.37", "92.6821, -3.75956, -16.8745, 0.22", "92.9763, -4.20345, -16.909, 0.29", "93.5898, -5.2388, -16.9341, 0.07", "93.8587, -5.79843, -16.9478, 0.07", "103.54, -4.90792, -19.2952, 0.07", "113.431, -3.42559, -19.5699, 0.07", "123.283, -3.74634, -21.2575, 0.07", "132.589, -5.7888, -24.328, 0.07", "142.311, -7.35556, -26.1016, 0.07", "151.795, -7.11527, -29.2625, 0.07", "160.215, -5.01294, -34.2515, 0.07" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "39.234, -9.51802, -11.9486, 0.74", "39.5005, -10.5824, -11.2289, 0.74", "39.7405, -11.4443, -10.6549, 0.44", "40.0186, -12.1815, -10.1446, 0.22", "40.2437, -12.6455, -9.8054, 0.22", "40.3881, -12.8623, -9.62962, 0.22", "40.7835, -13.3455, -9.22665, 0.22", "41.142, -13.6701, -8.96632, 0.22", "41.722, -14.0706, -8.632, 0.88", "42.0595, -14.2555, -8.4665, 0.81", "43.0715, -14.7178, -8.01599, 0.22", "43.8199, -15.0392, -7.75098, 0.74", "44.3812, -15.2957, -7.61365, 0.81", "45.2609, -15.7787, -7.46394, 0.15", "45.7253, -16.1054, -7.42463, 0.15", "46.067, -16.3926, -7.41635, 0.22", "46.7353, -17.0395, -7.4064, 0.22", "47.5229, -17.816, -7.30854, 0.22", "48.1271, -18.3673, -7.18241, 0.66", "48.8154, -18.9136, -6.99268, 0.88", "49.5065, -19.4174, -6.76245, 0.74", "50.2659, -19.9451, -6.46559, 0.74", "51.2474, -20.5576, -6.0197, 0.22", "52.0584, -20.9921, -5.65826, 0.15", "52.6537, -21.2834, -5.43661, 0.15", "53.2506, -21.5653, -5.26066, 0.22", "53.992, -21.9102, -5.07996, 0.15", "54.3596, -22.0819, -5.00919, 0.15", "55.0206, -22.3804, -4.87823, 0.59", "56.3692, -22.9489, -4.57445, 0.22", "57.0592, -23.1984, -4.42182, 0.22", "57.9883, -23.4982, -4.19511, 0.22", "58.5559, -23.671, -4.0535, 0.37", "59.6785, -24.0051, -3.77049, 0.88", "60.3546, -24.193, -3.60003, 0.74", "61.8253, -24.5496, -3.24671, 0.22", "62.7801, -24.7605, -3.03787, 0.29", "63.4864, -24.9128, -2.89356, 0.59", "64.1889, -25.0547, -2.73503, 0.07", "64.638, -25.1527, -2.60831, 0.07", "65.1936, -25.2708, -2.42794, 0.59", "66.24, -25.5173, -2.10152, 0.15", "66.9723, -25.7273, -1.91507, 0.66", "68.0049, -26.0931, -1.70243, 0.96", "69.4416, -26.7044, -1.48047, 0.29", "70.3906, -27.1805, -1.3866, 0.29", "71.6928, -27.9182, -1.27726, 0.66", "72.911, -28.6843, -1.18055, 0.22", "73.6466, -29.1927, -1.12416, 0.22", "74.4903, -29.8449, -1.05492, 0.37", "75.4078, -30.6368, -0.948171, 0.29", "76.284, -31.5071, -0.765625, 0.22", "77.2434, -32.6143, -0.411417, 0.74", "77.8015, -33.3522, -0.125575, 0.44", "78.3899, -34.1891, 0.222539, 0.15", "78.866, -34.8971, 0.512841, 0.44", "79.131, -35.2869, 0.677663, 0.44", "79.885, -36.3764, 1.13421, 0.22", "80.7319, -37.5371, 1.64734, 1.11", "82.0326, -39.2051, 2.41659, 0.15", "82.4816, -39.7376, 2.67998, 0.29", "83.3243, -40.6617, 3.14599, 0.15", "83.7155, -41.0699, 3.36354, 0.29", "84.4299, -41.7558, 3.76238, 0.74", "85.0267, -42.2673, 4.14311, 0.22", "85.6693, -42.766, 4.63238, 0.22", "86.4228, -43.2878, 5.28281, 0.29", "87.0051, -43.6363, 5.84115, 0.22", "87.6437, -43.9501, 6.53988, 0.59", "88.3207, -44.1798, 7.39826, 0.22", "89.0969, -44.3363, 8.47492, 0.74", "89.8075, -44.4064, 9.55727, 0.59", "90.4527, -44.4196, 10.6151, 0.37", "91.0366, -44.4002, 11.6081, 0.15", "91.7073, -44.3868, 12.7073, 0.22", "91.8599, -44.3823, 12.9503, 0.22", "92.4139, -44.3507, 13.7954, 0.22", "93.0583, -44.3064, 14.7654, 0.59", "93.5423, -44.2623, 15.479, 1.03", "94.4587, -44.1836, 16.8466, 0.22", "95.097, -44.1408, 17.7974, 0.22", "95.7208, -44.0932, 18.7364, 0.22", "96.411, -44.0219, 19.7682, 0.15", "96.8858, -43.9808, 20.4537, 0.44", "97.7869, -43.9634, 21.6775, 0.37", "98.979, -44.0016, 23.2437, 0.15", "99.6049, -44.064, 23.9638, 0.29", "100.531, -44.2093, 24.9102, 0.81", "101.779, -44.4636, 26.0127, 0.22", "102.466, -44.6168, 26.5309, 0.15", "103.308, -44.7988, 27.0605, 0.15", "104.332, -45.013, 27.6095, 0.15", "104.819, -45.1347, 27.8234, 0.52", "105.449, -45.3159, 28.0623, 0.52", "107.117, -45.845, 28.6354, 0.07", "108.008, -46.1576, 28.9194, 0.22", "109.159, -46.6233, 29.2657, 0.29", "111.632, -47.7548, 30.0654, 0.07", "112.201, -48.0345, 30.2518, 0.07", "112.74, -48.3181, 30.427, 0.37", "113.416, -48.6944, 30.6675, 0.37", "115.025, -49.5572, 31.4369, 0.07", "115.838, -49.9711, 31.9567, 0.07", "116.456, -50.2597, 32.452, 0.52", "116.771, -50.4022, 32.7327, 0.52", "118.003, -50.9743, 33.9152, 0.22", "119.334, -51.6807, 35.2971, 0.07", "120.207, -52.2047, 36.253, 0.07", "120.603, -52.463, 36.697, 0.29", "121.674, -53.1655, 37.7782, 0.07", "122.51, -53.704, 38.478, 0.29", "124.102, -54.7392, 39.4721, 0.07", "124.882, -55.2342, 39.7919, 0.22", "125.664, -55.6993, 39.9583, 0.22", "127.588, -56.8539, 39.961, 0.07", "128.584, -57.4872, 39.6908, 0.07", "129.048, -57.8216, 39.4841, 0.07", "129.861, -58.5325, 38.9699, 0.15", "130.604, -59.4493, 38.3248, 0.07", "131.061, -60.273, 37.7704, 0.22", "131.33, -61.0353, 37.3118, 0.22", "131.604, -62.1094, 36.6461, 0.07", "131.768, -63.0363, 36.049, 0.44", "131.926, -64.5483, 35.0258, 0.15", "131.986, -65.601, 34.3076, 0.52", "132.004, -66.1516, 33.9143, 0.52", "132.027, -66.9637, 33.3296, 0.52", "132.063, -68.0018, 32.5722, 0.15", "132.136, -69.1237, 31.7995, 0.15", "132.18, -69.5027, 31.5649, 0.29", "132.405, -70.9939, 30.6975, 0.15", "132.513, -71.6704, 30.3118, 0.37", "132.699, -72.6088, 29.7872, 0.22", "132.867, -73.3381, 29.3617, 0.07", "133.1, -74.2722, 28.8132, 0.22", "133.471, -75.7459, 27.9233, 0.07", "133.847, -77.2164, 27.0378, 0.07", "134.213, -78.6307, 26.1735, 0.07", "134.424, -79.4405, 25.6825, 0.22", "134.657, -80.3234, 25.153, 0.07", "134.834, -80.9802, 24.7396, 0.15" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-64.9248, 68.5559, -13.864, 0.22", "-65.9522, 69.3181, -13.2632, 0.22", "-66.347, 69.5401, -13.0853, 0.22", "-67.0431, 69.8929, -12.8411, 0.52", "-67.4576, 70.098, -12.7163, 0.52", "-68.5109, 70.6386, -12.4354, 0.15", "-69.2209, 70.9928, -12.2551, 0.66", "-70.0159, 71.3503, -12.0951, 0.22", "-71.0695, 71.8347, -11.9013, 0.07", "-71.8008, 72.1523, -11.7774, 0.07", "-72.5175, 72.459, -11.6543, 0.52", "-73.6013, 72.9346, -11.4589, 0.07", "-74.5321, 73.3287, -11.2517, 0.07", "-75.0068, 73.5055, -11.1147, 0.59", "-75.8177, 73.7405, -10.8266, 0.07", "-76.5027, 73.9165, -10.5373, 0.15", "-77.1491, 74.0687, -10.1952, 0.37", "-77.7526, 74.221, -9.76731, 0.59", "-78.3283, 74.3553, -9.20474, 0.22", "-78.7129, 74.4524, -8.7529, 0.22", "-79.2481, 74.5832, -8.07092, 0.22", "-79.6408, 74.6316, -7.52284, 0.22", "-80.201, 74.6088, -6.69979, 0.44", "-80.6155, 74.5198, -6.10814, 0.44", "-81.0972, 74.3675, -5.53531, 0.22", "-81.8986, 74.0574, -4.74438, 0.07", "-82.489, 73.8343, -4.27684, 0.07", "-82.9805, 73.6609, -3.96454, 0.07", "-83.4402, 73.559, -3.76086, 0.07", "-84.2616, 73.4388, -3.47768, 0.07", "-84.8218, 73.3826, -3.31623, 0.29", "-85.8024, 73.3557, -3.07724, 0.66", "-86.5345, 73.3637, -2.90843, 0.88", "-88.2978, 73.4236, -2.51235, 0.22", "-89.3724, 73.4704, -2.27882, 0.15", "-90.3132, 73.5264, -2.07919, 0.22", "-91.055, 73.5967, -1.96825, 0.07", "-91.6046, 73.664, -1.92077, 0.07", "-92.2606, 73.7582, -1.89862, 0.59", "-92.9147, 73.8739, -1.89975, 0.07", "-93.6227, 74.0474, -1.94689, 0.52", "-94.9526, 74.4062, -2.12491, 0.07", "-95.376, 74.5144, -2.22287, 0.07", "-96.0659, 74.7136, -2.46043, 0.22", "-105.191, 75.6525, 1.52772, 0.22", "-114.089, 76.4995, 6.01555, 0.22", "-122.047, 78.9221, 11.5905, 0.22", "-129.653, 80.0515, 17.9887, 0.22", "-137.107, 79.6393, 24.6424, 0.22", "-145.774, 78.7936, 29.5629, 0.22", "-153.622, 76.6667, 35.403, 0.22", "-160.888, 73.7848, 41.672, 0.22" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-64.9248, 68.5559, -13.864, 0.15", "-65.9669, 68.4979, -13.939, 0.15", "-66.8624, 68.4388, -14.0029, 0.15", "-67.7187, 68.4107, -14.0821, 0.15", "-68.2456, 68.3999, -14.1333, 0.15", "-69.3295, 68.4012, -14.2466, 0.15", "-70.0648, 68.3868, -14.3287, 0.15", "-70.9394, 68.3417, -14.4401, 0.81", "-72.0028, 68.2345, -14.5791, 0.15", "-72.8844, 68.1397, -14.6913, 0.44", "-74.0888, 68.0237, -14.8399, 0.15", "-75.0307, 67.9519, -14.9493, 0.15", "-75.5995, 67.9014, -15.0174, 0.15", "-76.1164, 67.8464, -15.0785, 0.15", "-77.5854, 67.6409, -15.2293, 0.07", "-78.27, 67.5548, -15.3011, 0.07", "-78.9614, 67.4977, -15.3627, 0.15", "-88.8802, 66.1968, -15.4494, 0.15" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-44.6958, -24.5895, 19.0824, 0.15", "-44.3647, -25.7731, 19.8697, 0.15", "-44.0897, -26.7565, 20.5237, 0.66", "-43.8511, -27.6097, 21.0911, 0.44", "-43.408, -29.194, 22.1448, 0.15", "-43.0669, -30.4135, 22.9558, 0.15", "-42.6304, -31.9745, 23.9939, 0.07" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-44.6958, -24.5895, 19.0824, 0.29", "-46.1111, -25.2263, 18.9423, 0.29", "-46.944, -25.6194, 18.8479, 0.15", "-47.7557, -26.0459, 18.7553, 0.22", "-48.7107, -26.5477, 18.6463, 0.07", "-49.4762, -26.9499, 18.559, 0.52", "-50.2168, -27.339, 18.4745, 0.15", "-51.1338, -27.8078, 18.3472, 0.29", "-52.0128, -28.2803, 18.2076, 0.07" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "55.6479, 28.5385, -40.4256, 0.15", "58.2343, 37.7378, -43.9979, 0.15", "60.1618, 47.0259, -47.7626, 0.15", "61.4178, 56.3584, -51.7026, 0.15", "61.3005, 65.3241, -56.5478, 0.15", "60.0746, 73.6995, -62.1808, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "55.6479, 28.5385, -40.4256, 0.29", "58.5774, 37.8425, -43.4298, 0.15", "60.7391, 46.9433, -47.4911, 0.15", "61.7602, 56.1279, -51.8114, 0.15", "61.5147, 64.9923, -56.8262, 0.15", "61.2539, 74.8091, -59.6909, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_34", "dend_33", "dend_24", "dend_13", "dend_2", "dend_1", "dend_0", "dend_36", "dend_35", "dend_30", "dend_25", "dend_15", "dend_14", "dend_8", "dend_3", "dend_38", "dend_37", "dend_32", "dend_31", "dend_27", "dend_26", "dend_19", "dend_16", "dend_10", "dend_9", "dend_5", "dend_4", "dend_29", "dend_28", "dend_21", "dend_20", "dend_18", "dend_17", "dend_12", "dend_11", "dend_7", "dend_6", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_34", "dend_33", "dend_24", "dend_13", "dend_2", "dend_1", "dend_0", "dend_36", "dend_35", "dend_30", "dend_25", "dend_15", "dend_14", "dend_8", "dend_3", "dend_38", "dend_37", "dend_32", "dend_31", "dend_27", "dend_26", "dend_19", "dend_16", "dend_10", "dend_9", "dend_5", "dend_4", "dend_29", "dend_28", "dend_21", "dend_20", "dend_18", "dend_17", "dend_12", "dend_11", "dend_7", "dend_6", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "axon_1", "axon_1", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L4_SBC_1bad5bb92b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: soma_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: dend_24
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_34, dend_33, dend_24, dend_13, dend_2, dend_1, dend_0, dend_36, dend_35, dend_30, dend_25, dend_15, dend_14, dend_8, dend_3, dend_38, dend_37, dend_32, dend_31, dend_27, dend_26, dend_19, dend_16, dend_10, dend_9, dend_5, dend_4, dend_29, dend_28, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_6, dend_23, dend_22]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_34, dend_33, dend_24, dend_13, dend_2, dend_1, dend_0, dend_36, dend_35, dend_30, dend_25, dend_15, dend_14, dend_8, dend_3, dend_38, dend_37, dend_32, dend_31, dend_27, dend_26, dend_19, dend_16, dend_10, dend_9, dend_5, dend_4, dend_29, dend_28, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_6, dend_23, dend_22]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_32
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_34(0), soma_0(0.49999994695550876)
    connect dend_33(0), soma_0(0.49999994695550876)
    connect dend_24(0), soma_0(0.49999994695550876)
    connect dend_13(0), soma_0(0.49999994695550876)
    connect dend_2(0), soma_0(0.49999994695550876)
    connect dend_1(0), soma_0(0.49999994695550876)
    connect dend_0(0), soma_0(0.49999994695550876)
    connect axon_0(0), soma_0(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_30(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -5.8534, -3.68898, 0.0, 3.87803 ) }
    soma_0 { pt3dadd( -5.27984, -3.22888, 0.0, 6.96449 ) }
    soma_0 { pt3dadd( -4.70627, -2.76878, 0.0, 8.7585 ) }
    soma_0 { pt3dadd( -4.1327, -2.30868, 0.0, 10.0498 ) }
    soma_0 { pt3dadd( -3.55914, -1.84858, 0.0, 11.0032 ) }
    soma_0 { pt3dadd( -2.98557, -1.38848, 0.0, 12.0695 ) }
    soma_0 { pt3dadd( -2.41201, -0.928385, 0.0, 12.4861 ) }
    soma_0 { pt3dadd( -1.83844, -0.468287, 0.0, 12.8863 ) }
    soma_0 { pt3dadd( -1.26487, -0.0081878, 0.0, 13.1702 ) }
    soma_0 { pt3dadd( -0.691307, 0.451911, 0.0, 13.2491 ) }
    soma_0 { pt3dadd( -0.117741, 0.91201, 0.0, 13.2672 ) }
    soma_0 { pt3dadd( 0.455825, 1.37211, 0.0, 13.2354 ) }
    soma_0 { pt3dadd( 1.02939, 1.83221, 0.0, 13.09 ) }
    soma_0 { pt3dadd( 1.60296, 2.29231, 0.0, 12.7829 ) }
    soma_0 { pt3dadd( 2.17652, 2.75241, 0.0, 12.3841 ) }
    soma_0 { pt3dadd( 2.75009, 3.2125, 0.0, 11.4175 ) }
    soma_0 { pt3dadd( 3.32366, 3.6726, 0.0, 10.2262 ) }
    soma_0 { pt3dadd( 3.89722, 4.1327, 0.0, 8.70811 ) }
    soma_0 { pt3dadd( 4.47079, 4.5928, 0.0, 6.9837 ) }
    soma_0 { pt3dadd( 5.04435, 5.0529, 0.0, 4.97808 ) }
    soma_0 { pt3dadd( 5.61792, 5.513, 0.0, 2.90913 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 21/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -3.59355, 4.51989, 7.71, 0.96 ) }
    dend_34 { pt3dadd( -3.2793, 6.90693, 9.24973, 0.96 ) }
    dend_34 { pt3dadd( -3.23548, 7.76172, 9.78031, 0.96 ) }
    dend_34 { pt3dadd( -3.23166, 9.25935, 10.7915, 0.74 ) }
    dend_34 { pt3dadd( -3.24755, 10.3246, 11.5714, 1.03 ) }
    dend_34 { pt3dadd( -3.25604, 11.4962, 12.5876, 0.81 ) }
    dend_34 { pt3dadd( -3.22964, 12.2678, 13.4566, 0.59 ) }
    dend_34 { pt3dadd( -3.16743, 12.9584, 14.5702, 0.59 ) }
    dend_34 { pt3dadd( -3.06501, 13.2801, 15.5021, 0.59 ) }
    dend_34 { pt3dadd( -2.96989, 13.3633, 16.1573, 0.59 ) }
    dend_34 { pt3dadd( -2.67849, 13.3431, 17.8267, 0.59 ) }
    dend_34 { pt3dadd( -2.26411, 13.0596, 19.7626, 0.88 ) }
    dend_34 { pt3dadd( -1.8974, 12.7557, 21.0793, 1.18 ) }
    dend_34 { pt3dadd( -1.39076, 12.3917, 22.4212, 0.66 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 35/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -4.04355, -3.75186, 15.73, 0.66 ) }
    dend_33 { pt3dadd( -4.26616, -4.5707, 16.1823, 0.66 ) }
    dend_33 { pt3dadd( -4.37676, -4.9373, 16.3948, 0.66 ) }
    dend_33 { pt3dadd( -4.57291, -5.4811, 16.7049, 0.66 ) }
    dend_33 { pt3dadd( -4.92047, -6.35695, 17.1967, 0.96 ) }
    dend_33 { pt3dadd( -5.54721, -7.91314, 18.0465, 0.66 ) }
    dend_33 { pt3dadd( -5.76579, -8.48854, 18.3621, 0.66 ) }
    dend_33 { pt3dadd( -5.9872, -9.2684, 18.7989, 0.66 ) }
    dend_33 { pt3dadd( -6.17163, -10.0966, 19.2748, 0.66 ) }
    dend_33 { pt3dadd( -6.27673, -10.6586, 19.5993, 0.88 ) }
    dend_33 { pt3dadd( -6.42422, -11.3336, 19.982, 0.88 ) }
    dend_33 { pt3dadd( -6.75196, -12.5511, 20.6165, 0.29 ) }
    dend_33 { pt3dadd( -6.99656, -13.4013, 21.0356, 0.29 ) }
    dend_33 { pt3dadd( -7.0983, -13.7331, 21.2038, 0.29 ) }
    dend_33 { pt3dadd( -7.32067, -14.4293, 21.529, 0.66 ) }
    dend_33 { pt3dadd( -7.54355, -15.304, 21.8942, 0.22 ) }
    dend_33 { pt3dadd( -7.63769, -15.8017, 22.0597, 0.22 ) }
    dend_33 { pt3dadd( -7.7741, -16.744, 22.3334, 1.03 ) }
    dend_33 { pt3dadd( -7.87246, -17.5576, 22.5597, 1.03 ) }
    dend_33 { pt3dadd( -7.98259, -19.0002, 22.9707, 0.37 ) }
    dend_33 { pt3dadd( -8.00697, -20.6235, 23.4243, 0.07 ) }
    dend_33 { pt3dadd( -7.95805, -21.5621, 23.701, 0.29 ) }
    dend_33 { pt3dadd( -7.85553, -22.5055, 23.9771, 0.29 ) }
    dend_33 { pt3dadd( -7.73544, -23.22, 24.1967, 0.37 ) }
    dend_33 { pt3dadd( -7.54516, -24.0089, 24.4407, 0.52 ) }
    dend_33 { pt3dadd( -7.40443, -24.4918, 24.624, 0.52 ) }
    dend_33 { pt3dadd( -7.16574, -25.2898, 24.9826, 0.52 ) }
    dend_33 { pt3dadd( -6.8716, -26.1689, 25.4598, 0.52 ) }
    dend_33 { pt3dadd( -6.6534, -26.6813, 25.7608, 0.66 ) }
    dend_33 { pt3dadd( -6.11956, -27.7347, 26.3943, 0.22 ) }
    dend_33 { pt3dadd( -5.55686, -28.6789, 26.9597, 0.88 ) }
    dend_33 { pt3dadd( -5.05505, -29.4363, 27.4055, 0.88 ) }
    dend_33 { pt3dadd( -4.44222, -30.3293, 27.9044, 0.22 ) }
    dend_33 { pt3dadd( -4.03499, -30.9177, 28.2271, 0.22 ) }
    dend_33 { pt3dadd( -3.26882, -31.9762, 28.7624, 0.29 ) }
    dend_33 { pt3dadd( -2.7154, -32.6806, 29.0843, 0.29 ) }
    dend_33 { pt3dadd( -2.12034, -33.3842, 29.3694, 0.22 ) }
    dend_33 { pt3dadd( -1.27271, -34.4161, 29.7349, 0.59 ) }
    dend_33 { pt3dadd( -0.597919, -35.2753, 30.04, 0.22 ) }
    dend_33 { pt3dadd( 0.00882885, -36.0817, 30.3212, 0.22 ) }
    dend_33 { pt3dadd( 0.404931, -36.6204, 30.5468, 0.52 ) }
    dend_33 { pt3dadd( 1.13418, -37.7221, 31.0658, 0.15 ) }
    dend_33 { pt3dadd( 1.63532, -38.5455, 31.481, 0.15 ) }
    dend_33 { pt3dadd( 2.17085, -39.4912, 31.983, 0.15 ) }
    dend_33 { pt3dadd( 2.58686, -40.2859, 32.4327, 0.22 ) }
    dend_33 { pt3dadd( 3.14445, -41.4418, 33.147, 0.22 ) }
    dend_33 { pt3dadd( 3.55373, -42.2218, 33.6574, 0.22 ) }
    dend_33 { pt3dadd( 3.7639, -42.5515, 33.9049, 0.22 ) }
    dend_33 { pt3dadd( 4.13436, -43.0649, 34.3157, 0.22 ) }
    dend_33 { pt3dadd( 4.40251, -43.4496, 34.6126, 0.44 ) }
    dend_33 { pt3dadd( 4.64477, -43.7887, 34.8975, 0.44 ) }
    dend_33 { pt3dadd( 5.12405, -44.4106, 35.4297, 0.44 ) }
    dend_33 { pt3dadd( 5.66408, -45.0173, 36.0177, 0.44 ) }
    dend_33 { pt3dadd( 6.3301, -45.7164, 36.7372, 0.15 ) }
    dend_33 { pt3dadd( 6.83632, -46.2469, 37.2686, 0.15 ) }
    dend_33 { pt3dadd( 7.40835, -46.8584, 37.8327, 0.15 ) }
    dend_33 { pt3dadd( 8.12328, -47.7024, 38.4784, 0.59 ) }
    dend_33 { pt3dadd( 8.72094, -48.4456, 38.9518, 0.15 ) }
    dend_33 { pt3dadd( 9.26865, -49.149, 39.306, 0.15 ) }
    dend_33 { pt3dadd( 9.7387, -49.8027, 39.5857, 0.15 ) }
    dend_33 { pt3dadd( 10.2109, -50.5433, 39.856, 0.74 ) }
    dend_33 { pt3dadd( 11.2815, -52.4617, 40.4499, 0.15 ) }
    dend_33 { pt3dadd( 11.9408, -53.8071, 40.7684, 0.15 ) }
    dend_33 { pt3dadd( 12.3691, -54.8061, 40.9637, 0.37 ) }
    dend_33 { pt3dadd( 12.9743, -56.3132, 41.2592, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_33 { pt3dadd( 13.664, -58.1173, 41.6368, 0.22 ) }
    dend_33 { pt3dadd( 14.1084, -59.3257, 41.9328, 0.22 ) }
    dend_33 { pt3dadd( 14.7754, -61.1324, 42.424, 0.07 ) }
    dend_33 { pt3dadd( 15.0571, -61.9199, 42.6521, 0.96 ) }
    dend_33 { pt3dadd( 15.6696, -63.5681, 43.1543, 0.22 ) }
    dend_33 { pt3dadd( 15.9555, -64.3285, 43.3997, 0.37 ) }
    dend_33 { pt3dadd( 16.403, -65.5526, 43.8449, 0.07 ) }
    dend_33 { pt3dadd( 16.5599, -65.9916, 44.0292, 0.22 ) }
    dend_33 { pt3dadd( 16.9298, -67.0304, 44.5553, 0.07 ) }
    dend_33 { pt3dadd( 17.1556, -67.6746, 44.8789, 0.22 ) }
    dend_33 { pt3dadd( 17.6129, -68.9801, 45.4508, 0.07 ) }
    dend_33 { pt3dadd( 17.8803, -69.7041, 45.7524, 0.66 ) }
    dend_33 { pt3dadd( 18.27, -70.713, 46.1328, 0.66 ) }
    dend_33 { pt3dadd( 18.8778, -72.1911, 46.7023, 0.22 ) }
    dend_33 { pt3dadd( 19.0039, -72.455, 46.8214, 0.22 ) }
    dend_33 { pt3dadd( 19.6792, -73.683, 47.4735, 0.07 ) }
    dend_33 { pt3dadd( 19.9615, -74.162, 47.7282, 0.29 ) }
    dend_33 { pt3dadd( 20.6412, -75.3314, 48.324, 0.07 ) }
    dend_33 { pt3dadd( 20.9103, -75.8221, 48.5721, 0.22 ) }
    dend_33 { pt3dadd( 21.6137, -77.2061, 49.227, 0.07 ) }
    dend_33 { pt3dadd( 22.2194, -78.5041, 49.8418, 0.74 ) }
    dend_33 { pt3dadd( 22.9868, -80.3332, 50.6971, 0.15 ) }
    dend_33 { pt3dadd( 23.335, -81.263, 51.0936, 0.29 ) }
    dend_33 { pt3dadd( 23.7773, -82.5542, 51.6175, 0.15 ) }
    dend_33 { pt3dadd( 24.1583, -83.7441, 52.069, 0.37 ) }
    dend_33 { pt3dadd( 24.6583, -85.4671, 52.6555, 0.22 ) }
    dend_33 { pt3dadd( 24.9107, -86.4029, 52.9975, 0.74 ) }
    dend_33 { pt3dadd( 25.1821, -87.4203, 53.4397, 0.22 ) }
    dend_33 { pt3dadd( 25.4881, -88.5246, 53.9175, 0.07 ) }
    dend_33 { pt3dadd( 25.6898, -89.2035, 54.2107, 0.07 ) }
    dend_33 { pt3dadd( 25.8697, -89.7453, 54.4728, 0.66 ) }
    dend_33 { pt3dadd( 26.8325, -92.3154, 55.7855, 0.15 ) }
    dend_33 { pt3dadd( 27.0781, -92.9285, 56.0985, 0.15 ) }
    dend_33 { pt3dadd( 27.4957, -93.9951, 56.6488, 0.52 ) }
    dend_33 { pt3dadd( 28.0122, -95.3774, 57.3155, 0.66 ) }
    dend_33 { pt3dadd( 28.7132, -97.2907, 58.1937, 0.15 ) }
    dend_33 { pt3dadd( 28.951, -97.9677, 58.4967, 0.15 ) }
    dend_33 { pt3dadd( 29.3411, -99.0809, 59.0592, 0.29 ) }
    dend_33 { pt3dadd( 29.5871, -99.8571, 59.4929, 0.29 ) }
    dend_33 { pt3dadd( 29.8286, -100.733, 60.017, 0.07 ) }
    dend_33 { pt3dadd( 29.9354, -101.127, 60.2412, 0.22 ) }
    dend_33 { pt3dadd( 30.2981, -102.503, 61.0469, 0.22 ) }
    dend_33 { pt3dadd( 30.8142, -104.402, 62.2109, 0.59 ) }
    dend_33 { pt3dadd( 31.3449, -106.143, 63.3216, 0.07 ) }
    dend_33 { pt3dadd( 31.5441, -106.7, 63.6701, 0.66 ) }
    dend_33 { pt3dadd( 31.9611, -107.722, 64.3402, 0.07 ) }
    dend_33 { pt3dadd( 32.5699, -109.039, 65.2466, 0.07 ) }
    dend_33 { pt3dadd( 32.955, -109.755, 65.7556, 0.22 ) }
    dend_33 { pt3dadd( 33.3459, -110.408, 66.2249, 0.07 ) }
    dend_33 { pt3dadd( 33.8013, -111.104, 66.8044, 0.52 ) }
    dend_33 { pt3dadd( 34.713, -112.486, 68.0888, 0.15 ) }
    dend_33 { pt3dadd( 35.4608, -113.628, 69.2288, 0.59 ) }
    dend_33 { pt3dadd( 36.0573, -114.539, 70.1677, 0.07 ) }
    dend_33 { pt3dadd( 36.3528, -115.027, 70.685, 0.29 ) }
    dend_33 { pt3dadd( 37.0115, -116.129, 71.8688, 0.07 ) }
    dend_33 { pt3dadd( 37.4899, -116.906, 72.7262, 0.07 ) }
    dend_33 { pt3dadd( 37.703, -117.234, 73.1061, 0.44 ) }
    dend_33 { pt3dadd( 38.1474, -117.893, 73.9083, 0.44 ) }
    dend_33 { pt3dadd( 38.8504, -118.952, 75.2266, 0.15 ) }
    dend_33 { pt3dadd( 39.3937, -119.764, 76.2608, 0.15 ) }
    dend_33 { pt3dadd( 39.8536, -120.384, 77.1345, 0.22 ) }
    dend_33 { pt3dadd( 40.5582, -121.291, 78.5111, 0.22 ) }
    dend_33 { pt3dadd( 40.775, -121.578, 78.9804, 0.15 ) }
    dend_33 { pt3dadd( 41.0572, -121.99, 79.6801, 0.29 ) }
    dend_33 { pt3dadd( 41.5044, -122.731, 80.9789, 0.29 ) }
    dend_33 { pt3dadd( 42.0221, -123.695, 82.566, 0.52 ) }
    dend_33 { pt3dadd( 42.2866, -124.173, 83.3254, 0.07 ) }
    dend_33 { pt3dadd( 42.7278, -124.917, 84.426, 0.07 ) }
    dend_33 { pt3dadd( 43.1364, -125.598, 85.3167, 0.22 ) }
    dend_33 { pt3dadd( 43.4993, -126.198, 86.0172, 0.22 ) }
    dend_33 { pt3dadd( 43.9681, -126.984, 86.7766, 0.22 ) }
    dend_33 { pt3dadd( 44.2127, -127.388, 87.0982, 0.22 ) }
    dend_33 { pt3dadd( 44.799, -128.322, 87.7859, 0.22 ) }
    dend_33 { pt3dadd( 45.5127, -129.476, 88.5601, 0.15 ) }
    dend_33 { pt3dadd( 46.2053, -130.72, 89.3426, 0.15 ) }
    dend_33 { pt3dadd( 46.5743, -131.529, 89.8369, 0.15 ) }
    dend_33 { pt3dadd( 46.8323, -132.236, 90.2697, 0.29 ) }
    dend_33 { pt3dadd( 47.0672, -133.039, 90.7693, 0.29 ) }
    dend_33 { pt3dadd( 47.2574, -134.067, 91.4535, 0.07 ) }
    dend_33 { pt3dadd( 47.3265, -134.677, 91.881, 0.07 ) }
    dend_33 { pt3dadd( 47.3612, -135.554, 92.4386, 0.07 ) }
    dend_33 { pt3dadd( 47.3591, -135.943, 92.6759, 0.22 ) }
    dend_33 { pt3dadd( 47.3131, -137.314, 93.4957, 0.07 ) }
    dend_33 { pt3dadd( 47.2533, -138.814, 94.4211, 0.07 ) }
    dend_33 { pt3dadd( 47.2309, -139.498, 94.8865, 0.07 ) }
    dend_33 { pt3dadd( 47.2141, -140.585, 95.6855, 0.07 ) }
    dend_33 { pt3dadd( 47.2187, -141.176, 96.1703, 0.74 ) }
    dend_33 { pt3dadd( 47.2319, -141.729, 96.6656, 0.29 ) }
    dend_33 { pt3dadd( 47.2687, -143.034, 97.9192, 0.07 ) }
    dend_33 { pt3dadd( 47.2803, -144.153, 99.0182, 0.07 ) }
    dend_33 { pt3dadd( 47.2658, -144.538, 99.3932, 0.59 ) }
    dend_33 { pt3dadd( 47.1171, -146.532, 101.429, 0.07 ) }
    dend_33 { pt3dadd( 47.0735, -147.076, 101.994, 0.07 ) }
    dend_33 { pt3dadd( 47.0118, -147.791, 102.728, 0.07 ) }
    dend_33 { pt3dadd( 46.8675, -149.127, 104.007, 0.07 ) }
    dend_33 { pt3dadd( 46.7773, -149.713, 104.533, 0.07 ) }
    dend_33 { pt3dadd( 46.4557, -151.142, 105.762, 0.07 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 97/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 5.16645, 6.60064, 4.66, 1.99 ) }
    dend_24 { pt3dadd( 5.16645, 6.60064, 4.66, 1.99 ) }
    dend_24 { pt3dadd( 5.52266, 7.2118, 4.71101, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_24 { pt3dadd( 6.21095, 8.36912, 4.83904, 1.18 ) }
    dend_24 { pt3dadd( 7.02473, 9.75797, 5.0398, 1.11 ) }
    dend_24 { pt3dadd( 7.74616, 11.0206, 5.28212, 1.33 ) }
    dend_24 { pt3dadd( 8.40801, 12.2676, 5.53562, 1.55 ) }
    dend_24 { pt3dadd( 9.10989, 13.7022, 5.83868, 1.11 ) }
    dend_24 { pt3dadd( 9.72927, 15.1049, 6.10054, 1.11 ) }
    dend_24 { pt3dadd( 10.2602, 16.3973, 6.26805, 0.74 ) }
    dend_24 { pt3dadd( 10.6103, 17.3196, 6.29818, 0.74 ) }
    dend_24 { pt3dadd( 10.9858, 18.3526, 6.20714, 0.66 ) }
    dend_24 { pt3dadd( 11.2404, 19.0172, 6.05575, 0.66 ) }
    dend_24 { pt3dadd( 11.8567, 20.3175, 5.60147, 0.96 ) }
    dend_24 { pt3dadd( 12.5239, 21.5195, 5.09279, 1.4 ) }
    dend_24 { pt3dadd( 13.1145, 22.5481, 4.64932, 1.62 ) }
    dend_24 { pt3dadd( 13.7856, 23.7455, 4.21353, 1.25 ) }
    dend_24 { pt3dadd( 14.6619, 25.4773, 3.769, 0.81 ) }
    dend_24 { pt3dadd( 15.2352, 26.8875, 3.57139, 0.81 ) }
    dend_24 { pt3dadd( 15.5381, 27.9926, 3.5542, 0.59 ) }
    dend_24 { pt3dadd( 15.7708, 29.3064, 3.63141, 0.59 ) }
    dend_24 { pt3dadd( 15.8827, 31.1247, 3.86065, 0.59 ) }
    dend_24 { pt3dadd( 15.734, 32.7245, 4.18152, 0.44 ) }
    dend_24 { pt3dadd( 15.4745, 33.6988, 4.48158, 0.29 ) }
    dend_24 { pt3dadd( 15.2321, 34.281, 4.68432, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 22/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 6.61645, -2.45011, -6.09, 2.95 ) }
    dend_13 { pt3dadd( 6.61645, -2.45011, -6.09, 2.95 ) }
    dend_13 { pt3dadd( 7.80205, -3.00352, -6.82956, 1.7 ) }
    dend_13 { pt3dadd( 8.77991, -3.45324, -7.42065, 1.33 ) }
    dend_13 { pt3dadd( 9.9606, -4.02514, -8.15253, 1.33 ) }
    dend_13 { pt3dadd( 10.5506, -4.32751, -8.4984, 1.33 ) }
    dend_13 { pt3dadd( 11.5252, -4.90218, -9.02135, 1.47 ) }
    dend_13 { pt3dadd( 12.4478, -5.53597, -9.48842, 1.33 ) }
    dend_13 { pt3dadd( 13.4271, -6.3173, -9.94331, 1.77 ) }
    dend_13 { pt3dadd( 14.4973, -7.30745, -10.3676, 1.99 ) }
    dend_13 { pt3dadd( 15.6767, -8.48796, -10.7956, 1.62 ) }
    dend_13 { pt3dadd( 17.211, -10.102, -11.2906, 1.4 ) }
    dend_13 { pt3dadd( 18.4071, -11.4736, -11.6251, 1.25 ) }
    dend_13 { pt3dadd( 19.0159, -12.2446, -11.7677, 1.62 ) }
    dend_13 { pt3dadd( 19.5588, -13.0196, -11.867, 2.14 ) }
    // Section: dend_2, id: dend_2, parent: soma_0 (entry count 37/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -7.25355, -0.0413571, -0.42, 2.8 ) }
    dend_2 { pt3dadd( -7.25355, -0.0413571, -0.42, 2.8 ) }
    dend_2 { pt3dadd( -8.54527, -0.441861, 0.162819, 1.92 ) }
    dend_2 { pt3dadd( -9.32975, -0.685092, 0.516772, 1.47 ) }
    dend_2 { pt3dadd( -10.8377, -1.15266, 1.19718, 1.18 ) }
    dend_2 { pt3dadd( -12.1387, -1.55603, 1.78417, 1.18 ) }
    dend_2 { pt3dadd( -13.4272, -1.95553, 2.36554, 1.92 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.47645, -5.90436, -0.0300001, 0.74 ) }
    dend_1 { pt3dadd( 1.56206, -7.1448, -0.241248, 0.52 ) }
    dend_1 { pt3dadd( 1.67565, -8.17259, -0.378878, 0.74 ) }
    dend_1 { pt3dadd( 1.77487, -8.92115, -0.460867, 0.96 ) }
    dend_1 { pt3dadd( 1.94072, -9.98193, -0.53495, 1.18 ) }
    dend_1 { pt3dadd( 2.10453, -10.7926, -0.595723, 1.18 ) }
    dend_1 { pt3dadd( 2.35094, -11.7851, -0.67303, 0.96 ) }
    dend_1 { pt3dadd( 2.73684, -12.8481, -0.745404, 0.88 ) }
    dend_1 { pt3dadd( 3.13724, -13.6748, -0.808046, 0.52 ) }
    dend_1 { pt3dadd( 3.53886, -14.3035, -0.895895, 0.22 ) }
    dend_1 { pt3dadd( 4.12848, -15.0421, -1.05401, 0.22 ) }
    dend_1 { pt3dadd( 4.43324, -15.3973, -1.16363, 0.44 ) }
    dend_1 { pt3dadd( 4.91253, -15.9653, -1.37927, 0.88 ) }
    dend_1 { pt3dadd( 5.41224, -16.5767, -1.63577, 0.29 ) }
    dend_1 { pt3dadd( 5.98341, -17.395, -1.94872, 0.59 ) }
    dend_1 { pt3dadd( 6.35946, -18.0425, -2.16265, 0.22 ) }
    dend_1 { pt3dadd( 6.78875, -18.9443, -2.38324, 0.22 ) }
    dend_1 { pt3dadd( 7.03302, -19.4844, -2.48693, 0.74 ) }
    dend_1 { pt3dadd( 7.25444, -19.9749, -2.55454, 1.25 ) }
    dend_1 { pt3dadd( 7.84943, -21.2559, -2.69529, 0.44 ) }
    dend_1 { pt3dadd( 8.08088, -21.7389, -2.7411, 0.44 ) }
    dend_1 { pt3dadd( 8.41878, -22.3938, -2.79766, 0.74 ) }
    dend_1 { pt3dadd( 8.98747, -23.4154, -2.86977, 0.29 ) }
    dend_1 { pt3dadd( 9.19351, -23.8028, -2.87683, 0.22 ) }
    dend_1 { pt3dadd( 9.36208, -24.1673, -2.86744, 0.29 ) }
    dend_1 { pt3dadd( 9.6681, -25.0338, -2.812, 0.29 ) }
    dend_1 { pt3dadd( 9.788, -25.5464, -2.76654, 0.74 ) }
    dend_1 { pt3dadd( 9.9051, -26.4171, -2.67424, 1.25 ) }
    dend_1 { pt3dadd( 10.009, -27.9621, -2.49315, 0.66 ) }
    dend_1 { pt3dadd( 10.0569, -28.7869, -2.38728, 0.44 ) }
    dend_1 { pt3dadd( 10.121, -29.7702, -2.24686, 0.29 ) }
    dend_1 { pt3dadd( 10.1935, -30.5035, -2.1311, 0.22 ) }
    dend_1 { pt3dadd( 10.3036, -31.3289, -2.00796, 0.22 ) }
    dend_1 { pt3dadd( 10.3975, -31.9303, -1.92208, 0.44 ) }
    dend_1 { pt3dadd( 10.5059, -32.5105, -1.84181, 0.81 ) }
    dend_1 { pt3dadd( 10.5891, -32.9292, -1.77043, 1.11 ) }
    dend_1 { pt3dadd( 10.7609, -33.9182, -1.56053, 1.11 ) }
    dend_1 { pt3dadd( 10.8979, -34.9455, -1.32162, 0.81 ) }
    dend_1 { pt3dadd( 11.0341, -36.5959, -0.914637, 0.44 ) }
    dend_1 { pt3dadd( 11.0651, -37.3558, -0.725333, 0.22 ) }
    dend_1 { pt3dadd( 11.0729, -37.8313, -0.617339, 0.22 ) }
    dend_1 { pt3dadd( 11.0979, -39.051, -0.390023, 0.22 ) }
    dend_1 { pt3dadd( 11.1264, -39.7451, -0.294703, 0.37 ) }
    dend_1 { pt3dadd( 11.2115, -40.5646, -0.22428, 0.59 ) }
    dend_1 { pt3dadd( 11.3192, -41.1004, -0.211444, 0.66 ) }
    dend_1 { pt3dadd( 11.5457, -41.9396, -0.22215, 0.22 ) }
    dend_1 { pt3dadd( 11.7747, -42.7315, -0.227745, 0.15 ) }
    dend_1 { pt3dadd( 11.917, -43.2326, -0.231144, 0.29 ) }
    dend_1 { pt3dadd( 12.0799, -43.9391, -0.212818, 0.59 ) }
    dend_1 { pt3dadd( 12.2214, -44.7963, -0.166031, 0.15 ) }
    dend_1 { pt3dadd( 12.2823, -45.3189, -0.12858, 0.15 ) }
    dend_1 { pt3dadd( 12.3773, -46.4892, -0.0341785, 0.22 ) }
    dend_1 { pt3dadd( 12.4261, -47.1102, 0.0340792, 0.59 ) }
    dend_1 { pt3dadd( 12.5006, -47.9347, 0.12574, 0.59 ) }
    dend_1 { pt3dadd( 12.6017, -48.7829, 0.223213, 0.22 ) }
    dend_1 { pt3dadd( 12.7801, -50.0839, 0.35976, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 12.8514, -50.5347, 0.404547, 0.07 ) }
    dend_1 { pt3dadd( 13.007, -51.5468, 0.468639, 0.07 ) }
    dend_1 { pt3dadd( 13.0512, -51.9494, 0.486732, 0.22 ) }
    dend_1 { pt3dadd( 13.0907, -52.5467, 0.498688, 0.22 ) }
    dend_1 { pt3dadd( 13.1127, -53.4961, 0.492278, 0.59 ) }
    dend_1 { pt3dadd( 13.0984, -54.5545, 0.461869, 0.59 ) }
    dend_1 { pt3dadd( 13.0688, -55.6077, 0.393922, 0.81 ) }
    dend_1 { pt3dadd( 13.0611, -56.2127, 0.32545, 0.81 ) }
    dend_1 { pt3dadd( 13.1131, -57.7653, 0.1196, 0.15 ) }
    dend_1 { pt3dadd( 13.1913, -58.588, -0.00565521, 0.15 ) }
    dend_1 { pt3dadd( 13.3154, -59.2478, -0.116726, 0.59 ) }
    dend_1 { pt3dadd( 13.5852, -60.0908, -0.289602, 0.15 ) }
    dend_1 { pt3dadd( 13.9171, -60.7684, -0.440721, 0.15 ) }
    dend_1 { pt3dadd( 14.1759, -61.1866, -0.533364, 0.15 ) }
    dend_1 { pt3dadd( 14.5417, -61.677, -0.621978, 0.66 ) }
    dend_1 { pt3dadd( 14.8548, -62.0583, -0.664231, 0.81 ) }
    dend_1 { pt3dadd( 15.7273, -63.0982, -0.672198, 0.22 ) }
    dend_1 { pt3dadd( 16.3554, -63.892, -0.573347, 0.29 ) }
    dend_1 { pt3dadd( 16.9054, -64.64, -0.412383, 0.37 ) }
    dend_1 { pt3dadd( 17.2629, -65.1162, -0.273384, 0.81 ) }
    dend_1 { pt3dadd( 17.8398, -65.8302, 0.0165175, 1.03 ) }
    dend_1 { pt3dadd( 18.464, -66.5262, 0.391276, 0.22 ) }
    dend_1 { pt3dadd( 19.0647, -67.1206, 0.804313, 0.22 ) }
    dend_1 { pt3dadd( 19.5076, -67.5152, 1.08227, 0.22 ) }
    dend_1 { pt3dadd( 19.9606, -67.8645, 1.31842, 0.74 ) }
    dend_1 { pt3dadd( 20.495, -68.2163, 1.54257, 1.03 ) }
    dend_1 { pt3dadd( 21.3714, -68.6869, 1.83341, 0.96 ) }
    dend_1 { pt3dadd( 22.1561, -69.055, 2.00025, 0.22 ) }
    dend_1 { pt3dadd( 22.9269, -69.4197, 2.12526, 0.15 ) }
    dend_1 { pt3dadd( 23.2585, -69.5987, 2.17934, 0.22 ) }
    dend_1 { pt3dadd( 23.7558, -69.9282, 2.25883, 0.22 ) }
    dend_1 { pt3dadd( 24.2239, -70.3157, 2.35345, 0.22 ) }
    dend_1 { pt3dadd( 24.9257, -71.0118, 2.55408, 0.22 ) }
    dend_1 { pt3dadd( 25.5628, -71.6822, 2.78298, 0.88 ) }
    dend_1 { pt3dadd( 25.9664, -72.1372, 2.96113, 0.81 ) }
    dend_1 { pt3dadd( 26.3708, -72.6329, 3.15686, 0.52 ) }
    dend_1 { pt3dadd( 26.9125, -73.3883, 3.43696, 0.15 ) }
    dend_1 { pt3dadd( 27.1855, -73.801, 3.56625, 0.15 ) }
    dend_1 { pt3dadd( 27.6302, -74.4862, 3.75716, 0.44 ) }
    dend_1 { pt3dadd( 28.1067, -75.2032, 3.9174, 0.22 ) }
    dend_1 { pt3dadd( 28.3551, -75.5743, 3.98693, 0.66 ) }
    dend_1 { pt3dadd( 28.8858, -76.3091, 4.12573, 1.11 ) }
    dend_1 { pt3dadd( 29.7774, -77.5138, 4.33114, 0.22 ) }
    dend_1 { pt3dadd( 30.3512, -78.3312, 4.47588, 0.22 ) }
    dend_1 { pt3dadd( 30.6686, -78.8151, 4.56778, 0.74 ) }
    dend_1 { pt3dadd( 31.0793, -79.4562, 4.70436, 0.66 ) }
    dend_1 { pt3dadd( 31.6428, -80.3756, 4.90425, 0.22 ) }
    dend_1 { pt3dadd( 31.9332, -80.8801, 5.01744, 0.29 ) }
    dend_1 { pt3dadd( 32.2521, -81.5419, 5.15637, 0.52 ) }
    dend_1 { pt3dadd( 32.8114, -82.9298, 5.43865, 0.15 ) }
    dend_1 { pt3dadd( 33.0478, -83.7269, 5.59774, 0.96 ) }
    dend_1 { pt3dadd( 33.2118, -84.6442, 5.77292, 0.07 ) }
    dend_1 { pt3dadd( 33.2453, -85.1034, 5.84784, 0.07 ) }
    dend_1 { pt3dadd( 33.2515, -85.9972, 5.98514, 0.22 ) }
    dend_1 { pt3dadd( 33.2174, -86.7026, 6.07879, 0.59 ) }
    dend_1 { pt3dadd( 33.0865, -87.7408, 6.17458, 0.66 ) }
    dend_1 { pt3dadd( 32.9288, -88.6892, 6.23064, 0.22 ) }
    dend_1 { pt3dadd( 32.6796, -90.0297, 6.28244, 0.22 ) }
    dend_1 { pt3dadd( 32.5822, -90.5266, 6.28072, 0.22 ) }
    dend_1 { pt3dadd( 32.4216, -91.2753, 6.2474, 0.81 ) }
    dend_1 { pt3dadd( 32.1925, -92.1437, 6.20017, 0.66 ) }
    dend_1 { pt3dadd( 31.9227, -93.0265, 6.17731, 0.15 ) }
    dend_1 { pt3dadd( 31.6683, -93.7278, 6.17895, 0.15 ) }
    dend_1 { pt3dadd( 31.2394, -94.6401, 6.22127, 0.15 ) }
    dend_1 { pt3dadd( 31.0076, -95.058, 6.25399, 0.96 ) }
    dend_1 { pt3dadd( 30.2709, -96.2654, 6.37646, 0.15 ) }
    dend_1 { pt3dadd( 29.951, -96.795, 6.42081, 0.15 ) }
    dend_1 { pt3dadd( 29.7585, -97.1261, 6.44069, 0.66 ) }
    dend_1 { pt3dadd( 28.8954, -98.6645, 6.4996, 0.29 ) }
    dend_1 { pt3dadd( 28.306, -99.7323, 6.51657, 0.15 ) }
    dend_1 { pt3dadd( 27.9577, -100.405, 6.48124, 0.22 ) }
    dend_1 { pt3dadd( 27.41, -101.594, 6.33458, 0.07 ) }
    dend_1 { pt3dadd( 27.2161, -102.08, 6.26957, 0.88 ) }
    dend_1 { pt3dadd( 27.0723, -102.535, 6.22837, 0.88 ) }
    dend_1 { pt3dadd( 26.8045, -103.62, 6.20886, 0.15 ) }
    dend_1 { pt3dadd( 26.59, -104.546, 6.25436, 0.22 ) }
    dend_1 { pt3dadd( 26.3445, -105.492, 6.37562, 0.66 ) }
    dend_1 { pt3dadd( 26.0495, -106.564, 6.60797, 0.15 ) }
    dend_1 { pt3dadd( 25.7635, -107.73, 6.94876, 0.07 ) }
    dend_1 { pt3dadd( 25.5326, -108.861, 7.36519, 0.07 ) }
    dend_1 { pt3dadd( 25.4692, -109.248, 7.53116, 0.22 ) }
    dend_1 { pt3dadd( 25.3299, -110.147, 7.98553, 0.15 ) }
    dend_1 { pt3dadd( 25.2567, -110.775, 8.33982, 0.81 ) }
    dend_1 { pt3dadd( 25.1904, -112.036, 9.16013, 0.15 ) }
    dend_1 { pt3dadd( 25.2175, -112.693, 9.64373, 0.15 ) }
    dend_1 { pt3dadd( 25.2984, -113.207, 10.0717, 0.59 ) }
    dend_1 { pt3dadd( 25.4789, -114.031, 10.8118, 0.07 ) }
    dend_1 { pt3dadd( 25.6742, -114.752, 11.5021, 0.29 ) }
    dend_1 { pt3dadd( 26.0308, -115.964, 12.6954, 0.07 ) }
    dend_1 { pt3dadd( 26.2201, -116.56, 13.317, 0.29 ) }
    dend_1 { pt3dadd( 26.4867, -117.4, 14.1994, 0.15 ) }
    dend_1 { pt3dadd( 26.5767, -117.735, 14.5513, 0.22 ) }
    dend_1 { pt3dadd( 26.6966, -118.364, 15.153, 0.07 ) }
    dend_1 { pt3dadd( 26.7393, -118.715, 15.4553, 0.22 ) }
    dend_1 { pt3dadd( 26.8446, -119.739, 16.2538, 0.07 ) }
    dend_1 { pt3dadd( 26.8909, -120.105, 16.5197, 0.29 ) }
    dend_1 { pt3dadd( 27.0899, -121.304, 17.3213, 0.07 ) }
    dend_1 { pt3dadd( 27.3013, -122.279, 17.9308, 0.96 ) }
    dend_1 { pt3dadd( 27.5676, -123.325, 18.5517, 0.07 ) }
    dend_1 { pt3dadd( 27.6546, -123.641, 18.7365, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 27.8989, -124.531, 19.2577, 0.07 ) }
    dend_1 { pt3dadd( 28.1529, -125.4, 19.7858, 0.07 ) }
    dend_1 { pt3dadd( 28.3092, -125.905, 20.0937, 0.15 ) }
    dend_1 { pt3dadd( 28.6156, -126.852, 20.675, 0.07 ) }
    dend_1 { pt3dadd( 28.8064, -127.447, 21.047, 0.81 ) }
    dend_1 { pt3dadd( 29.2418, -128.836, 21.9345, 0.07 ) }
    dend_1 { pt3dadd( 29.5746, -129.883, 22.6165, 0.07 ) }
    dend_1 { pt3dadd( 29.7164, -130.302, 22.8947, 0.22 ) }
    dend_1 { pt3dadd( 30.0551, -131.207, 23.4727, 0.44 ) }
    dend_1 { pt3dadd( 30.4539, -132.124, 23.9869, 0.07 ) }
    dend_1 { pt3dadd( 30.8886, -133.012, 24.4423, 0.07 ) }
    dend_1 { pt3dadd( 31.1278, -133.444, 24.644, 0.29 ) }
    dend_1 { pt3dadd( 31.6365, -134.294, 25.0385, 0.07 ) }
    dend_1 { pt3dadd( 31.9877, -134.842, 25.29, 0.44 ) }
    dend_1 { pt3dadd( 32.8596, -136.12, 25.915, 0.15 ) }
    dend_1 { pt3dadd( 33.0309, -136.358, 26.0238, 0.15 ) }
    dend_1 { pt3dadd( 33.3689, -136.789, 26.2278, 0.29 ) }
    dend_1 { pt3dadd( 34.0351, -137.603, 26.6312, 0.07 ) }
    dend_1 { pt3dadd( 34.2365, -137.822, 26.7442, 0.44 ) }
    dend_1 { pt3dadd( 34.7717, -138.357, 27.0909, 0.44 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 20/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.763546, 6.90814, -3.9, 0.96 ) }
    dend_0 { pt3dadd( -0.763546, 6.90814, -3.9, 0.96 ) }
    dend_0 { pt3dadd( -0.702946, 7.76303, -3.72446, 0.29 ) }
    dend_0 { pt3dadd( -0.750696, 8.49948, -3.71459, 0.29 ) }
    dend_0 { pt3dadd( -0.811396, 8.89729, -3.78591, 0.29 ) }
    dend_0 { pt3dadd( -0.899486, 9.26704, -3.91005, 0.29 ) }
    dend_0 { pt3dadd( -1.13349, 10.0342, -4.27289, 0.88 ) }
    dend_0 { pt3dadd( -1.38313, 10.7589, -4.71325, 0.88 ) }
    dend_0 { pt3dadd( -1.64608, 11.5273, -5.23043, 0.29 ) }
    dend_0 { pt3dadd( -1.88339, 12.3093, -5.72567, 0.66 ) }
    dend_0 { pt3dadd( -2.04811, 13.0222, -6.10581, 0.66 ) }
    dend_0 { pt3dadd( -2.20087, 14.064, -6.55933, 0.29 ) }
    dend_0 { pt3dadd( -2.25041, 15.1091, -6.926, 0.59 ) }
    dend_0 { pt3dadd( -2.19077, 16.0834, -7.18588, 0.88 ) }
    dend_0 { pt3dadd( -2.04701, 17.2255, -7.42806, 0.66 ) }
    dend_0 { pt3dadd( -1.84372, 18.4797, -7.66398, 0.22 ) }
    dend_0 { pt3dadd( -1.73615, 19.0012, -7.77458, 0.22 ) }
    dend_0 { pt3dadd( -1.55228, 19.6832, -7.95915, 0.22 ) }
    dend_0 { pt3dadd( -1.29458, 20.5113, -8.27884, 0.44 ) }
    dend_0 { pt3dadd( -1.02715, 21.2634, -8.70186, 0.96 ) }
    dend_0 { pt3dadd( -0.777316, 21.8874, -9.13822, 0.96 ) }
    dend_0 { pt3dadd( -0.416533, 22.7701, -9.82231, 0.22 ) }
    dend_0 { pt3dadd( -0.135186, 23.4286, -10.3204, 0.22 ) }
    dend_0 { pt3dadd( -0.0222202, 23.6886, -10.505, 0.37 ) }
    dend_0 { pt3dadd( 0.250547, 24.3131, -10.9426, 0.52 ) }
    dend_0 { pt3dadd( 0.447703, 24.7853, -11.2733, 0.29 ) }
    dend_0 { pt3dadd( 0.695689, 25.5358, -11.8084, 0.22 ) }
    dend_0 { pt3dadd( 0.855345, 26.1988, -12.2761, 0.37 ) }
    dend_0 { pt3dadd( 0.98059, 26.8595, -12.7113, 0.37 ) }
    dend_0 { pt3dadd( 1.10926, 27.5159, -13.1293, 0.52 ) }
    dend_0 { pt3dadd( 1.28806, 28.3622, -13.6887, 0.88 ) }
    dend_0 { pt3dadd( 1.46443, 29.1017, -14.1911, 0.88 ) }
    dend_0 { pt3dadd( 1.74048, 30.0808, -14.8445, 0.29 ) }
    dend_0 { pt3dadd( 1.95537, 30.76, -15.2909, 0.29 ) }
    dend_0 { pt3dadd( 2.20904, 31.4673, -15.7399, 0.15 ) }
    dend_0 { pt3dadd( 2.5169, 32.2913, -16.2481, 0.22 ) }
    dend_0 { pt3dadd( 2.77579, 32.9765, -16.6702, 0.96 ) }
    dend_0 { pt3dadd( 3.16299, 33.9884, -17.3013, 0.22 ) }
    dend_0 { pt3dadd( 3.30389, 34.403, -17.5548, 0.22 ) }
    dend_0 { pt3dadd( 3.4107, 34.8038, -17.7825, 0.15 ) }
    dend_0 { pt3dadd( 3.51964, 35.4132, -18.0653, 0.15 ) }
    dend_0 { pt3dadd( 3.55635, 35.7544, -18.1855, 0.15 ) }
    dend_0 { pt3dadd( 3.61473, 36.7504, -18.4769, 0.15 ) }
    dend_0 { pt3dadd( 3.65361, 37.4928, -18.6444, 0.66 ) }
    dend_0 { pt3dadd( 3.69058, 38.0186, -18.7413, 0.81 ) }
    dend_0 { pt3dadd( 3.74504, 39.0411, -18.9025, 0.15 ) }
    dend_0 { pt3dadd( 3.76137, 39.8053, -19.0072, 0.22 ) }
    dend_0 { pt3dadd( 3.71814, 40.4886, -19.1021, 0.66 ) }
    dend_0 { pt3dadd( 3.61128, 41.4243, -19.2195, 0.81 ) }
    dend_0 { pt3dadd( 3.54471, 41.9673, -19.2901, 0.52 ) }
    dend_0 { pt3dadd( 3.41135, 43.1084, -19.4393, 0.15 ) }
    dend_0 { pt3dadd( 3.28938, 43.8182, -19.5295, 0.22 ) }
    dend_0 { pt3dadd( 3.07638, 44.6308, -19.6664, 0.29 ) }
    dend_0 { pt3dadd( 2.08702, 54.2488, -22.9789, 0.29 ) }
    dend_0 { pt3dadd( -0.400475, 64.0038, -24.7786, 0.29 ) }
    dend_0 { pt3dadd( -3.3619, 73.684, -26.2061, 0.29 ) }
    dend_0 { pt3dadd( -6.03148, 83.425, -27.8055, 0.29 ) }
    dend_0 { pt3dadd( -8.88763, 93.1929, -28.8196, 0.29 ) }
    dend_0 { pt3dadd( -10.6445, 102.882, -31.5705, 0.29 ) }
    dend_0 { pt3dadd( -11.0236, 113.08, -32.4985, 0.29 ) }
    dend_0 { pt3dadd( -9.6346, 123.199, -31.7221, 0.29 ) }
    dend_0 { pt3dadd( -7.59643, 133.217, -32.2985, 0.29 ) }
    dend_0 { pt3dadd( -3.5022, 142.568, -32.355, 0.29 ) }
    dend_0 { pt3dadd( 1.47142, 151.428, -31.6157, 0.29 ) }
    dend_0 { pt3dadd( 6.36573, 160.323, -32.4751, 0.29 ) }
    dend_0 { pt3dadd( 12.203, 168.639, -32.7927, 0.29 ) }
    dend_0 { pt3dadd( 19.5512, 175.59, -32.9104, 0.29 ) }
    dend_0 { pt3dadd( 26.1066, 183.327, -32.6733, 0.29 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 5.61792, 5.513, 0.0, 0.777284 ) }
    axon_0 { pt3dadd( 17.3185, 14.8989, 0.0, 0.777284 ) }
    axon_0 { pt3dadd( 29.0192, 24.2848, 0.0, 0.777284 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 91/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -1.39076, 12.3917, 22.4212, 0.15 ) }
    dend_36 { pt3dadd( -1.74992, 13.7434, 23.2363, 0.15 ) }
    dend_36 { pt3dadd( -1.93229, 14.8547, 23.9089, 0.15 ) }
    dend_36 { pt3dadd( -2.14705, 16.0944, 24.612, 0.15 ) }
    dend_36 { pt3dadd( -2.31887, 16.9475, 25.0641, 0.15 ) }
    dend_36 { pt3dadd( -2.38137, 17.2333, 25.2042, 0.37 ) }
    dend_36 { pt3dadd( -2.55001, 17.9767, 25.5402, 0.88 ) }
    dend_36 { pt3dadd( -2.77092, 18.8114, 25.8132, 0.22 ) }
    dend_36 { pt3dadd( -3.15039, 19.8869, 26.0909, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_36 { pt3dadd( -3.51467, 20.6912, 26.2939, 0.22 ) }
    dend_36 { pt3dadd( -3.81474, 21.22, 26.4138, 0.29 ) }
    dend_36 { pt3dadd( -4.31796, 21.9858, 26.5734, 0.66 ) }
    dend_36 { pt3dadd( -5.25711, 23.2626, 26.7982, 0.81 ) }
    dend_36 { pt3dadd( -6.06825, 24.3069, 26.9989, 0.22 ) }
    dend_36 { pt3dadd( -6.80734, 25.2558, 27.2199, 0.22 ) }
    dend_36 { pt3dadd( -7.26569, 25.8259, 27.3688, 0.81 ) }
    dend_36 { pt3dadd( -7.82075, 26.5057, 27.5579, 0.81 ) }
    dend_36 { pt3dadd( -8.58842, 27.4945, 27.8558, 0.22 ) }
    dend_36 { pt3dadd( -9.26001, 28.4792, 28.1665, 0.44 ) }
    dend_36 { pt3dadd( -9.89405, 29.5625, 28.5264, 0.81 ) }
    dend_36 { pt3dadd( -10.2161, 30.2006, 28.758, 0.81 ) }
    dend_36 { pt3dadd( -10.7144, 31.2698, 29.1833, 0.37 ) }
    dend_36 { pt3dadd( -11.1311, 32.2114, 29.5675, 0.37 ) }
    dend_36 { pt3dadd( -11.4195, 32.8675, 29.8124, 0.37 ) }
    dend_36 { pt3dadd( -11.8801, 33.8334, 30.1332, 0.37 ) }
    dend_36 { pt3dadd( -12.2775, 34.622, 30.381, 0.59 ) }
    dend_36 { pt3dadd( -12.7662, 35.5931, 30.6774, 0.74 ) }
    dend_36 { pt3dadd( -13.2116, 36.5249, 30.9364, 0.88 ) }
    dend_36 { pt3dadd( -13.7511, 37.7186, 31.2303, 0.22 ) }
    dend_36 { pt3dadd( -14.2079, 38.792, 31.4854, 0.22 ) }
    dend_36 { pt3dadd( -14.5183, 39.5772, 31.6347, 0.22 ) }
    dend_36 { pt3dadd( -14.9174, 40.7026, 31.8583, 0.44 ) }
    dend_36 { pt3dadd( -15.441, 42.4006, 32.2546, 0.52 ) }
    dend_36 { pt3dadd( -15.7844, 43.5904, 32.5734, 0.74 ) }
    dend_36 { pt3dadd( -16.1439, 44.9452, 32.9575, 0.37 ) }
    dend_36 { pt3dadd( -16.5881, 46.7198, 33.4555, 0.22 ) }
    dend_36 { pt3dadd( -16.8847, 47.8163, 33.7794, 0.22 ) }
    dend_36 { pt3dadd( -17.2722, 49.054, 34.1595, 0.81 ) }
    dend_36 { pt3dadd( -17.6923, 50.2214, 34.5641, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 30/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -1.39076, 12.3917, 22.4212, 0.52 ) }
    dend_35 { pt3dadd( 0.0577928, 12.4706, 24.0166, 0.52 ) }
    dend_35 { pt3dadd( 1.25557, 12.9365, 25.3815, 0.52 ) }
    dend_35 { pt3dadd( 2.05296, 13.3931, 26.2454, 0.37 ) }
    dend_35 { pt3dadd( 2.60356, 13.8312, 26.8032, 0.22 ) }
    dend_35 { pt3dadd( 3.19954, 14.3413, 27.4066, 0.22 ) }
    dend_35 { pt3dadd( 4.03329, 15.0575, 28.215, 0.44 ) }
    dend_35 { pt3dadd( 5.00389, 16.1023, 29.1058, 0.44 ) }
    dend_35 { pt3dadd( 5.45248, 16.6241, 29.5036, 0.44 ) }
    dend_35 { pt3dadd( 6.30584, 17.682, 30.2737, 0.22 ) }
    dend_35 { pt3dadd( 6.86011, 18.3481, 30.7846, 0.22 ) }
    dend_35 { pt3dadd( 7.24954, 18.806, 31.1318, 0.22 ) }
    dend_35 { pt3dadd( 7.76214, 19.4498, 31.6322, 0.22 ) }
    dend_35 { pt3dadd( 8.09702, 19.9458, 31.9909, 0.22 ) }
    dend_35 { pt3dadd( 8.75208, 21.0221, 32.7858, 0.88 ) }
    dend_35 { pt3dadd( 9.45075, 22.2106, 33.7342, 0.15 ) }
    dend_35 { pt3dadd( 9.87436, 22.9275, 34.3026, 0.37 ) }
    dend_35 { pt3dadd( 10.2679, 23.5523, 34.857, 0.15 ) }
    dend_35 { pt3dadd( 10.7116, 24.1901, 35.5126, 0.29 ) }
    dend_35 { pt3dadd( 11.2681, 24.8885, 36.3635, 0.15 ) }
    dend_35 { pt3dadd( 11.8665, 25.5281, 37.3025, 0.15 ) }
    dend_35 { pt3dadd( 12.3022, 25.9566, 37.9601, 0.66 ) }
    dend_35 { pt3dadd( 13.2845, 26.9009, 39.3836, 0.29 ) }
    dend_35 { pt3dadd( 13.9589, 27.542, 40.3648, 0.29 ) }
    dend_35 { pt3dadd( 14.2846, 27.8788, 40.8638, 0.29 ) }
    dend_35 { pt3dadd( 14.6926, 28.3911, 41.5875, 0.29 ) }
    dend_35 { pt3dadd( 15.0323, 28.9138, 42.2762, 0.07 ) }
    dend_35 { pt3dadd( 15.3737, 29.5198, 43.046, 0.59 ) }
    dend_35 { pt3dadd( 16.0623, 30.8523, 44.6541, 0.22 ) }
    dend_35 { pt3dadd( 16.5655, 31.8065, 45.8529, 0.66 ) }
    dend_35 { pt3dadd( 17.3655, 33.2151, 47.7441, 0.15 ) }
    dend_35 { pt3dadd( 17.7379, 33.8159, 48.5732, 0.15 ) }
    dend_35 { pt3dadd( 18.0388, 34.2392, 49.2027, 0.15 ) }
    dend_35 { pt3dadd( 18.4748, 34.7664, 50.0592, 0.59 ) }
    dend_35 { pt3dadd( 19.331, 35.6739, 51.609, 0.22 ) }
    dend_35 { pt3dadd( 19.9975, 36.2404, 52.7361, 0.81 ) }
    dend_35 { pt3dadd( 20.7293, 36.7265, 53.8961, 0.15 ) }
    dend_35 { pt3dadd( 21.6821, 37.2468, 55.4519, 0.37 ) }
    dend_35 { pt3dadd( 22.2931, 37.517, 56.4694, 0.37 ) }
    dend_35 { pt3dadd( 23.1487, 37.8374, 57.9333, 0.22 ) }
    dend_35 { pt3dadd( 23.7448, 38.0609, 58.9752, 0.22 ) }
    dend_35 { pt3dadd( 24.4087, 38.3237, 60.1707, 0.59 ) }
    dend_35 { pt3dadd( 25.2387, 38.675, 61.627, 0.22 ) }
    dend_35 { pt3dadd( 25.882, 39.0077, 62.6355, 0.74 ) }
    dend_35 { pt3dadd( 27.1828, 39.7892, 64.4122, 0.07 ) }
    dend_35 { pt3dadd( 28.0865, 40.4062, 65.5108, 0.07 ) }
    dend_35 { pt3dadd( 28.5909, 40.8073, 66.0314, 0.07 ) }
    dend_35 { pt3dadd( 29.2494, 41.3474, 66.588, 0.22 ) }
    dend_35 { pt3dadd( 30.3854, 42.2618, 67.3788, 0.07 ) }
    dend_35 { pt3dadd( 31.0774, 42.8129, 67.8006, 0.22 ) }
    dend_35 { pt3dadd( 32.4149, 43.8469, 68.5095, 0.07 ) }
    dend_35 { pt3dadd( 33.8539, 44.9245, 69.2212, 0.22 ) }
    dend_35 { pt3dadd( 35.5082, 46.1352, 70.0357, 0.07 ) }
    dend_35 { pt3dadd( 36.0257, 46.5404, 70.2803, 0.07 ) }
    dend_35 { pt3dadd( 36.9759, 47.3517, 70.7045, 0.07 ) }
    dend_35 { pt3dadd( 37.2383, 47.5912, 70.8097, 0.22 ) }
    dend_35 { pt3dadd( 38.1213, 48.4646, 71.107, 0.29 ) }
    dend_35 { pt3dadd( 39.5493, 50.0894, 71.5588, 0.07 ) }
    dend_35 { pt3dadd( 40.7186, 51.5996, 71.938, 0.07 ) }
    dend_35 { pt3dadd( 41.6392, 52.8627, 72.3274, 0.15 ) }
    dend_35 { pt3dadd( 42.122, 53.5749, 72.6469, 0.29 ) }
    dend_35 { pt3dadd( 42.7313, 54.5244, 73.2203, 0.29 ) }
    dend_35 { pt3dadd( 43.4777, 55.765, 74.1544, 0.07 ) }
    dend_35 { pt3dadd( 44.1181, 56.8461, 75.1836, 0.22 ) }
    dend_35 { pt3dadd( 44.811, 57.9055, 76.4793, 0.22 ) }
    dend_35 { pt3dadd( 45.9751, 59.5817, 78.8044, 0.44 ) }
    dend_35 { pt3dadd( 46.401, 60.1814, 79.7282, 0.44 ) }
    dend_35 { pt3dadd( 46.8331, 60.741, 80.7219, 0.15 ) }
    dend_35 { pt3dadd( 47.4656, 61.4577, 82.2052, 0.15 ) }
    dend_35 { pt3dadd( 48.1013, 62.1163, 83.6447, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_35 { pt3dadd( 48.432, 62.4077, 84.247, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_24 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 15.2321, 34.281, 4.68432, 0.44 ) }
    dend_30 { pt3dadd( 15.6246, 35.5887, 3.55645, 0.44 ) }
    dend_30 { pt3dadd( 15.9315, 36.5344, 2.82558, 0.44 ) }
    dend_30 { pt3dadd( 16.3069, 37.7489, 2.01622, 0.44 ) }
    dend_30 { pt3dadd( 16.4542, 38.3066, 1.66778, 0.74 ) }
    dend_30 { pt3dadd( 16.599, 39.0079, 1.25621, 1.33 ) }
    dend_30 { pt3dadd( 16.7868, 40.3592, 0.518045, 0.66 ) }
    dend_30 { pt3dadd( 16.8065, 40.8714, 0.302512, 0.88 ) }
    dend_30 { pt3dadd( 16.7001, 41.9253, -0.0781635, 0.29 ) }
    dend_30 { pt3dadd( 16.5312, 42.6451, -0.310022, 0.29 ) }
    dend_30 { pt3dadd( 16.3235, 43.3382, -0.515038, 0.44 ) }
    dend_30 { pt3dadd( 16.0017, 44.2415, -0.745274, 0.52 ) }
    dend_30 { pt3dadd( 15.5035, 45.5496, -1.0068, 0.66 ) }
    dend_30 { pt3dadd( 15.2177, 46.3445, -1.15831, 0.22 ) }
    dend_30 { pt3dadd( 15.033, 46.9297, -1.26289, 0.22 ) }
    dend_30 { pt3dadd( 14.7817, 47.8138, -1.4453, 0.29 ) }
    dend_30 { pt3dadd( 14.599, 48.4418, -1.62343, 0.29 ) }
    dend_30 { pt3dadd( 14.3117, 49.3306, -1.95044, 0.66 ) }
    dend_30 { pt3dadd( 14.048, 50.017, -2.26115, 0.81 ) }
    dend_30 { pt3dadd( 13.6427, 50.9299, -2.74687, 0.88 ) }
    dend_30 { pt3dadd( 12.9052, 52.3911, -3.58987, 0.59 ) }
    dend_30 { pt3dadd( 12.4403, 53.2041, -4.10539, 0.37 ) }
    dend_30 { pt3dadd( 12.1818, 53.6298, -4.40585, 0.22 ) }
    dend_30 { pt3dadd( 11.757, 54.2735, -4.90945, 0.22 ) }
    dend_30 { pt3dadd( 11.4142, 54.775, -5.32328, 0.37 ) }
    dend_30 { pt3dadd( 10.9468, 55.4207, -5.88335, 0.37 ) }
    dend_30 { pt3dadd( 10.378, 56.195, -6.55815, 0.66 ) }
    dend_30 { pt3dadd( 9.80942, 56.9456, -7.21499, 1.11 ) }
    dend_30 { pt3dadd( 9.16643, 57.7353, -7.96576, 0.29 ) }
    dend_30 { pt3dadd( 8.72144, 58.2358, -8.53458, 0.29 ) }
    dend_30 { pt3dadd( 8.5427, 58.4321, -8.79756, 0.29 ) }
    dend_30 { pt3dadd( 8.28789, 58.7363, -9.23104, 0.29 ) }
    dend_30 { pt3dadd( 8.21402, 58.9206, -9.41328, 0.29 ) }
    dend_30 { pt3dadd( 8.21551, 59.3213, -9.62728, 0.29 ) }
    dend_30 { pt3dadd( 8.33682, 60.0852, -9.91238, 0.29 ) }
    dend_30 { pt3dadd( 8.54421, 61.1344, -10.2613, 0.29 ) }
    dend_30 { pt3dadd( 8.73043, 62.0539, -10.5481, 0.74 ) }
    dend_30 { pt3dadd( 8.97529, 63.4578, -10.9551, 1.25 ) }
    dend_30 { pt3dadd( 9.14342, 64.8065, -11.3146, 0.81 ) }
    dend_30 { pt3dadd( 9.23149, 66.1718, -11.6436, 0.29 ) }
    dend_30 { pt3dadd( 9.23981, 67.1991, -11.8642, 0.29 ) }
    dend_30 { pt3dadd( 9.22171, 68.2652, -12.0827, 0.52 ) }
    dend_30 { pt3dadd( 9.19839, 69.6151, -12.2948, 0.66 ) }
    dend_30 { pt3dadd( 9.15165, 70.8978, -12.428, 0.22 ) }
    dend_30 { pt3dadd( 9.06439, 71.8368, -12.4818, 0.22 ) }
    dend_30 { pt3dadd( 8.88541, 72.8849, -12.4886, 0.37 ) }
    dend_30 { pt3dadd( 8.62948, 74.0227, -12.4567, 0.96 ) }
    dend_30 { pt3dadd( 8.19147, 75.7352, -12.3705, 0.22 ) }
    dend_30 { pt3dadd( 8.01567, 76.4582, -12.3241, 0.37 ) }
    dend_30 { pt3dadd( 7.87399, 77.1363, -12.3019, 0.52 ) }
    dend_30 { pt3dadd( 7.65506, 78.1682, -12.3356, 0.22 ) }
    dend_30 { pt3dadd( 7.42124, 79.0532, -12.4255, 0.22 ) }
    dend_30 { pt3dadd( 7.25244, 79.5681, -12.5356, 0.81 ) }
    dend_30 { pt3dadd( 6.98275, 80.4243, -12.8178, 0.81 ) }
    dend_30 { pt3dadd( 6.72709, 81.527, -13.1893, 0.22 ) }
    dend_30 { pt3dadd( 6.61138, 82.3747, -13.4688, 0.44 ) }
    dend_30 { pt3dadd( 6.5661, 82.8233, -13.612, 0.74 ) }
    dend_30 { pt3dadd( 6.42059, 83.8109, -13.9263, 0.22 ) }
    dend_30 { pt3dadd( 6.34111, 84.2586, -14.0655, 0.22 ) }
    dend_30 { pt3dadd( 6.20413, 85.0093, -14.2685, 0.29 ) }
    dend_30 { pt3dadd( 6.13759, 85.7032, -14.4182, 0.29 ) }
    dend_30 { pt3dadd( 6.13001, 86.4154, -14.5336, 0.22 ) }
    dend_30 { pt3dadd( 6.14676, 87.1504, -14.6394, 0.22 ) }
    dend_30 { pt3dadd( 6.14883, 88.0568, -14.7682, 0.59 ) }
    dend_30 { pt3dadd( 6.10782, 89.0281, -14.9169, 0.88 ) }
    dend_30 { pt3dadd( 6.01078, 90.3803, -15.1855, 0.81 ) }
    dend_30 { pt3dadd( 5.90442, 91.8361, -15.5561, 0.37 ) }
    dend_30 { pt3dadd( 5.87846, 92.5754, -15.7599, 0.22 ) }
    dend_30 { pt3dadd( 5.88302, 93.4317, -16.0053, 0.22 ) }
    dend_30 { pt3dadd( 5.89312, 94.0454, -16.2156, 0.22 ) }
    dend_30 { pt3dadd( 5.9111, 94.9966, -16.6449, 0.22 ) }
    dend_30 { pt3dadd( 5.88268, 95.7577, -17.074, 0.22 ) }
    dend_30 { pt3dadd( 5.82034, 96.442, -17.5179, 0.44 ) }
    dend_30 { pt3dadd( 5.7344, 97.1674, -17.9699, 0.88 ) }
    dend_30 { pt3dadd( 5.63747, 97.9624, -18.4019, 0.66 ) }
    dend_30 { pt3dadd( 5.44915, 99.0594, -18.8922, 0.22 ) }
    dend_30 { pt3dadd( 5.27387, 99.9193, -19.189, 0.15 ) }
    dend_30 { pt3dadd( 5.12599, 100.711, -19.4152, 0.22 ) }
    dend_30 { pt3dadd( 4.92841, 101.639, -19.6873, 0.29 ) }
    dend_30 { pt3dadd( 4.7517, 102.429, -19.877, 0.74 ) }
    dend_30 { pt3dadd( 4.59494, 103.415, -20.0131, 0.81 ) }
    dend_30 { pt3dadd( 4.56194, 103.899, -20.03, 0.52 ) }
    dend_30 { pt3dadd( 4.61798, 104.92, -20.046, 0.66 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 84/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 15.2321, 34.281, 4.68432, 0.29 ) }
    dend_25 { pt3dadd( 15.3905, 34.3613, 4.64841, 0.29 ) }
    dend_25 { pt3dadd( 16.1072, 34.8248, 4.44572, 0.29 ) }
    dend_25 { pt3dadd( 16.56, 35.2071, 4.31805, 0.29 ) }
    dend_25 { pt3dadd( 17.0189, 35.6684, 4.1681, 0.29 ) }
    dend_25 { pt3dadd( 17.2395, 35.92, 4.10834, 0.29 ) }
    dend_25 { pt3dadd( 17.7799, 36.6197, 3.94801, 0.59 ) }
    dend_25 { pt3dadd( 18.2744, 37.4205, 3.76747, 1.11 ) }
    dend_25 { pt3dadd( 18.8159, 38.5578, 3.53127, 0.74 ) }
    dend_25 { pt3dadd( 19.2331, 39.7172, 3.29401, 0.74 ) }
    dend_25 { pt3dadd( 19.5709, 41.0292, 3.08057, 0.74 ) }
    dend_25 { pt3dadd( 19.8116, 42.4188, 2.93199, 0.52 ) }
    dend_25 { pt3dadd( 19.9449, 43.7688, 2.91403, 0.74 ) }
    dend_25 { pt3dadd( 20.0146, 44.7477, 2.98327, 0.52 ) }
    dend_25 { pt3dadd( 20.0813, 45.508, 3.10784, 0.88 ) }
    dend_25 { pt3dadd( 20.2673, 46.683, 3.42464, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_25 { pt3dadd( 20.5124, 47.5593, 3.74145, 0.52 ) }
    dend_25 { pt3dadd( 21.0759, 48.8219, 4.32183, 0.44 ) }
    dend_25 { pt3dadd( 21.4934, 49.5039, 4.65948, 0.44 ) }
    dend_25 { pt3dadd( 22.3051, 50.6642, 5.13126, 0.66 ) }
    dend_25 { pt3dadd( 22.8603, 51.3685, 5.39436, 0.44 ) }
    dend_25 { pt3dadd( 23.4681, 52.064, 5.59623, 0.74 ) }
    dend_25 { pt3dadd( 24.0681, 52.7158, 5.74214, 0.88 ) }
    dend_25 { pt3dadd( 24.6432, 53.3751, 5.82996, 1.03 ) }
    dend_25 { pt3dadd( 25.472, 54.6072, 5.96389, 1.18 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 9/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 19.5588, -13.0196, -11.867, 0.59 ) }
    dend_15 { pt3dadd( 21.0364, -13.4054, -11.7573, 0.59 ) }
    dend_15 { pt3dadd( 22.0237, -13.2089, -12.0631, 0.59 ) }
    dend_15 { pt3dadd( 22.7977, -12.7964, -12.5395, 0.44 ) }
    dend_15 { pt3dadd( 23.4347, -12.3768, -13.0525, 0.44 ) }
    dend_15 { pt3dadd( 24.4113, -11.6621, -13.8262, 0.81 ) }
    dend_15 { pt3dadd( 25.2629, -11.039, -14.4664, 0.81 ) }
    dend_15 { pt3dadd( 26.0497, -10.3737, -15.0833, 1.11 ) }
    dend_15 { pt3dadd( 26.9161, -9.65007, -15.7131, 0.88 ) }
    dend_15 { pt3dadd( 27.6232, -9.11989, -16.1588, 1.03 ) }
    dend_15 { pt3dadd( 28.7617, -8.45694, -16.6811, 0.37 ) }
    dend_15 { pt3dadd( 29.2298, -8.25214, -16.7878, 0.37 ) }
    dend_15 { pt3dadd( 30.0623, -8.01817, -16.7883, 0.74 ) }
    dend_15 { pt3dadd( 31.1391, -7.91825, -16.55, 1.03 ) }
    dend_15 { pt3dadd( 32.3818, -7.98635, -16.0111, 1.25 ) }
    dend_15 { pt3dadd( 32.788, -8.05692, -15.772, 1.4 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 25/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 19.5588, -13.0196, -11.867, 0.29 ) }
    dend_14 { pt3dadd( 19.2439, -14.2334, -11.1163, 0.29 ) }
    dend_14 { pt3dadd( 18.9424, -15.0404, -10.6375, 0.22 ) }
    dend_14 { pt3dadd( 18.7139, -15.3774, -10.4147, 0.22 ) }
    dend_14 { pt3dadd( 18.2374, -15.8671, -10.0223, 0.22 ) }
    dend_14 { pt3dadd( 17.9213, -16.1811, -9.75068, 0.22 ) }
    dend_14 { pt3dadd( 17.7396, -16.3866, -9.57373, 0.22 ) }
    dend_14 { pt3dadd( 17.2212, -17.0521, -9.00648, 0.96 ) }
    dend_14 { pt3dadd( 16.6219, -17.9731, -8.29114, 0.59 ) }
    dend_14 { pt3dadd( 16.2442, -18.7351, -7.70066, 0.22 ) }
    dend_14 { pt3dadd( 15.972, -19.4499, -7.16246, 0.22 ) }
    dend_14 { pt3dadd( 15.7679, -20.2846, -6.53486, 0.22 ) }
    dend_14 { pt3dadd( 15.707, -20.9792, -6.02095, 1.03 ) }
    dend_14 { pt3dadd( 15.7598, -21.6501, -5.52528, 1.03 ) }
    dend_14 { pt3dadd( 15.9553, -22.7418, -4.75807, 0.15 ) }
    dend_14 { pt3dadd( 16.032, -23.1489, -4.47809, 0.74 ) }
    dend_14 { pt3dadd( 16.1272, -23.8847, -3.95597, 0.37 ) }
    dend_14 { pt3dadd( 16.1626, -24.5329, -3.49096, 0.44 ) }
    dend_14 { pt3dadd( 16.1587, -25.5122, -2.8071, 0.22 ) }
    dend_14 { pt3dadd( 16.1407, -25.9487, -2.51593, 0.29 ) }
    dend_14 { pt3dadd( 16.0885, -26.8977, -1.91688, 0.22 ) }
    dend_14 { pt3dadd( 16.0609, -27.7323, -1.38649, 0.74 ) }
    dend_14 { pt3dadd( 16.0633, -28.1908, -1.09936, 0.74 ) }
    dend_14 { pt3dadd( 16.0921, -29.4644, -0.281322, 0.37 ) }
    dend_14 { pt3dadd( 16.1284, -30.4207, 0.342283, 0.22 ) }
    dend_14 { pt3dadd( 16.1684, -31.1653, 0.835446, 0.15 ) }
    dend_14 { pt3dadd( 16.2364, -31.908, 1.3244, 0.74 ) }
    dend_14 { pt3dadd( 16.3515, -32.9665, 2.02215, 0.22 ) }
    dend_14 { pt3dadd( 16.4129, -33.7407, 2.5243, 0.74 ) }
    dend_14 { pt3dadd( 16.4307, -34.3776, 2.91531, 0.88 ) }
    dend_14 { pt3dadd( 16.3585, -35.5457, 3.52421, 0.22 ) }
    dend_14 { pt3dadd( 16.2193, -36.4254, 3.89846, 0.22 ) }
    dend_14 { pt3dadd( 16.0882, -36.948, 4.07679, 0.29 ) }
    dend_14 { pt3dadd( 15.8143, -37.8279, 4.31924, 0.81 ) }
    dend_14 { pt3dadd( 15.602, -38.519, 4.47144, 0.44 ) }
    dend_14 { pt3dadd( 15.2457, -39.7817, 4.68034, 0.52 ) }
    dend_14 { pt3dadd( 15.016, -40.7097, 4.78036, 0.22 ) }
    dend_14 { pt3dadd( 14.7672, -41.7878, 4.849, 0.74 ) }
    dend_14 { pt3dadd( 14.6194, -42.5616, 4.87501, 0.15 ) }
    dend_14 { pt3dadd( 14.5185, -43.2074, 4.88774, 0.15 ) }
    dend_14 { pt3dadd( 14.3854, -44.0237, 4.9287, 0.15 ) }
    dend_14 { pt3dadd( 14.2992, -44.5573, 4.99963, 0.81 ) }
    dend_14 { pt3dadd( 14.1822, -45.1793, 5.12025, 0.52 ) }
    dend_14 { pt3dadd( 13.928, -46.4717, 5.43939, 0.15 ) }
    dend_14 { pt3dadd( 13.8011, -47.0855, 5.6133, 0.37 ) }
    dend_14 { pt3dadd( 13.5974, -48.2314, 5.97049, 0.22 ) }
    dend_14 { pt3dadd( 13.4348, -49.4432, 6.37455, 0.37 ) }
    dend_14 { pt3dadd( 13.3746, -50.1606, 6.60841, 0.22 ) }
    dend_14 { pt3dadd( 13.3638, -51.0363, 6.87298, 0.74 ) }
    dend_14 { pt3dadd( 13.4048, -51.7742, 7.09705, 0.29 ) }
    dend_14 { pt3dadd( 13.5545, -53.1506, 7.49519, 0.07 ) }
    dend_14 { pt3dadd( 13.6395, -53.6623, 7.63243, 0.29 ) }
    dend_14 { pt3dadd( 13.7867, -54.4596, 7.85362, 0.07 ) }
    dend_14 { pt3dadd( 13.9345, -55.3258, 8.09461, 0.22 ) }
    dend_14 { pt3dadd( 14.1062, -56.5054, 8.40172, 0.22 ) }
    dend_14 { pt3dadd( 14.2102, -57.3388, 8.5777, 0.96 ) }
    dend_14 { pt3dadd( 14.3547, -58.8026, 8.77982, 0.22 ) }
    dend_14 { pt3dadd( 14.4544, -59.9822, 8.86285, 0.15 ) }
    dend_14 { pt3dadd( 14.5207, -60.7558, 8.86428, 0.29 ) }
    dend_14 { pt3dadd( 14.6275, -61.9237, 8.78574, 0.66 ) }
    dend_14 { pt3dadd( 14.7894, -63.5245, 8.5459, 0.22 ) }
    dend_14 { pt3dadd( 14.878, -64.5099, 8.35063, 0.15 ) }
    dend_14 { pt3dadd( 14.9542, -65.5441, 8.11932, 0.15 ) }
    dend_14 { pt3dadd( 14.9864, -66.322, 7.95073, 0.74 ) }
    dend_14 { pt3dadd( 14.9923, -67.19, 7.79549, 0.88 ) }
    dend_14 { pt3dadd( 14.9685, -68.1683, 7.67881, 0.15 ) }
    dend_14 { pt3dadd( 14.9255, -68.9047, 7.63696, 0.22 ) }
    dend_14 { pt3dadd( 14.8359, -69.8549, 7.64507, 0.07 ) }
    dend_14 { pt3dadd( 14.6432, -71.0801, 7.70348, 0.22 ) }
    dend_14 { pt3dadd( 14.4339, -72.0248, 7.79269, 0.15 ) }
    dend_14 { pt3dadd( 14.2695, -72.6574, 7.87232, 0.15 ) }
    dend_14 { pt3dadd( 14.1177, -73.2083, 7.95459, 0.15 ) }
    dend_14 { pt3dadd( 13.9537, -73.8993, 8.06668, 0.88 ) }
    dend_14 { pt3dadd( 13.8475, -74.4217, 8.15085, 0.88 ) }
    dend_14 { pt3dadd( 13.5772, -75.8884, 8.38419, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_14 { pt3dadd( 13.4216, -76.6356, 8.505, 0.74 ) }
    dend_14 { pt3dadd( 13.25, -77.4462, 8.62803, 0.22 ) }
    dend_14 { pt3dadd( 13.0213, -78.6224, 8.82163, 0.15 ) }
    dend_14 { pt3dadd( 12.8989, -79.3617, 8.95329, 0.29 ) }
    dend_14 { pt3dadd( 12.7786, -80.2239, 9.12091, 0.81 ) }
    dend_14 { pt3dadd( 12.6375, -81.2679, 9.33294, 0.22 ) }
    dend_14 { pt3dadd( 12.4885, -82.2892, 9.54475, 0.15 ) }
    dend_14 { pt3dadd( 12.3908, -82.8929, 9.66663, 0.15 ) }
    dend_14 { pt3dadd( 12.2495, -83.6363, 9.78677, 0.74 ) }
    dend_14 { pt3dadd( 11.9771, -85.0133, 9.91009, 0.15 ) }
    dend_14 { pt3dadd( 11.8591, -85.5979, 9.92093, 0.15 ) }
    dend_14 { pt3dadd( 11.6902, -86.248, 9.88192, 0.88 ) }
    dend_14 { pt3dadd( 11.4972, -86.8621, 9.81336, 0.96 ) }
    dend_14 { pt3dadd( 11.1165, -87.9733, 9.65521, 0.22 ) }
    dend_14 { pt3dadd( 10.629, -89.4055, 9.40403, 0.15 ) }
    dend_14 { pt3dadd( 10.3008, -90.4098, 9.18964, 0.29 ) }
    dend_14 { pt3dadd( 9.8773, -91.8217, 8.87642, 0.15 ) }
    dend_14 { pt3dadd( 9.72737, -92.3664, 8.75841, 0.66 ) }
    dend_14 { pt3dadd( 9.51143, -93.1793, 8.58883, 0.74 ) }
    dend_14 { pt3dadd( 9.16792, -94.4065, 8.35915, 0.15 ) }
    dend_14 { pt3dadd( 8.94783, -95.1657, 8.23001, 0.15 ) }
    dend_14 { pt3dadd( 8.76592, -95.8787, 8.10377, 0.66 ) }
    dend_14 { pt3dadd( 8.54506, -97.0594, 7.90594, 0.15 ) }
    dend_14 { pt3dadd( 8.50635, -97.3301, 7.85919, 0.15 ) }
    dend_14 { pt3dadd( 8.41853, -98.1841, 7.72756, 0.29 ) }
    dend_14 { pt3dadd( 8.34086, -99.177, 7.58629, 0.15 ) }
    dend_14 { pt3dadd( 8.26402, -100.234, 7.43782, 0.59 ) }
    dend_14 { pt3dadd( 8.19613, -101.173, 7.2954, 0.22 ) }
    dend_14 { pt3dadd( 8.13828, -101.951, 7.1756, 0.22 ) }
    dend_14 { pt3dadd( 8.09663, -102.603, 7.12016, 0.07 ) }
    dend_14 { pt3dadd( 8.06134, -103.451, 7.10718, 0.07 ) }
    dend_14 { pt3dadd( 8.01079, -104.202, 7.15119, 0.15 ) }
    dend_14 { pt3dadd( 7.94275, -104.903, 7.259, 0.81 ) }
    dend_14 { pt3dadd( 7.86847, -105.554, 7.41145, 0.22 ) }
    dend_14 { pt3dadd( 7.72446, -106.842, 7.77533, 0.22 ) }
    dend_14 { pt3dadd( 7.61172, -107.799, 8.07684, 0.59 ) }
    dend_14 { pt3dadd( 7.51794, -108.513, 8.32617, 0.59 ) }
    dend_14 { pt3dadd( 7.34766, -109.695, 8.77095, 0.88 ) }
    dend_14 { pt3dadd( 7.16157, -110.837, 9.23492, 0.07 ) }
    dend_14 { pt3dadd( 7.02261, -111.595, 9.54931, 0.15 ) }
    dend_14 { pt3dadd( 6.85608, -112.38, 9.86617, 0.59 ) }
    dend_14 { pt3dadd( 6.73489, -112.925, 10.1071, 0.74 ) }
    dend_14 { pt3dadd( 6.47794, -114.033, 10.6243, 0.22 ) }
    dend_14 { pt3dadd( 6.23306, -114.922, 11.0685, 0.22 ) }
    dend_14 { pt3dadd( 5.96551, -115.778, 11.5377, 0.96 ) }
    dend_14 { pt3dadd( 5.4613, -117.18, 12.3439, 0.15 ) }
    dend_14 { pt3dadd( 5.18074, -117.884, 12.7527, 0.15 ) }
    dend_14 { pt3dadd( 4.87158, -118.551, 13.1527, 0.88 ) }
    dend_14 { pt3dadd( 4.25035, -119.634, 13.8072, 0.15 ) }
    dend_14 { pt3dadd( 3.84219, -120.238, 14.1793, 0.15 ) }
    dend_14 { pt3dadd( 3.43341, -120.767, 14.5084, 0.74 ) }
    dend_14 { pt3dadd( 3.01091, -121.262, 14.8091, 0.74 ) }
    dend_14 { pt3dadd( 2.53535, -121.851, 15.1585, 0.15 ) }
    dend_14 { pt3dadd( 2.06576, -122.479, 15.5211, 0.29 ) }
    dend_14 { pt3dadd( 1.77212, -122.914, 15.7515, 0.29 ) }
    dend_14 { pt3dadd( 1.23952, -123.765, 16.1815, 0.15 ) }
    dend_14 { pt3dadd( 0.779737, -124.559, 16.5838, 0.74 ) }
    dend_14 { pt3dadd( -0.0176888, -126.008, 17.3005, 0.22 ) }
    dend_14 { pt3dadd( -0.356511, -126.636, 17.6012, 0.22 ) }
    dend_14 { pt3dadd( -0.796906, -127.444, 17.9954, 0.44 ) }
    dend_14 { pt3dadd( -1.052, -127.884, 18.2102, 0.96 ) }
    dend_14 { pt3dadd( -1.78632, -129.098, 18.7719, 0.07 ) }
    dend_14 { pt3dadd( -1.99564, -129.432, 18.9006, 0.07 ) }
    dend_14 { pt3dadd( -2.3528, -129.965, 19.0759, 0.88 ) }
    dend_14 { pt3dadd( -2.96697, -130.851, 19.3418, 0.15 ) }
    dend_14 { pt3dadd( -3.43738, -131.494, 19.4958, 0.52 ) }
    dend_14 { pt3dadd( -4.13234, -132.385, 19.6308, 0.07 ) }
    dend_14 { pt3dadd( -4.82014, -133.206, 19.662, 0.07 ) }
    dend_14 { pt3dadd( -5.3781, -133.84, 19.6448, 0.66 ) }
    dend_14 { pt3dadd( -5.8551, -134.373, 19.597, 0.22 ) }
    dend_14 { pt3dadd( -6.55495, -135.12, 19.4883, 0.22 ) }
    dend_14 { pt3dadd( -7.24342, -135.817, 19.4209, 0.44 ) }
    dend_14 { pt3dadd( -7.82117, -136.379, 19.4157, 0.15 ) }
    dend_14 { pt3dadd( -8.45415, -136.975, 19.4655, 0.15 ) }
    dend_14 { pt3dadd( -9.03952, -137.53, 19.5473, 0.81 ) }
    dend_14 { pt3dadd( -9.68615, -138.181, 19.7137, 0.22 ) }
    dend_14 { pt3dadd( -10.5215, -139.121, 20.064, 0.22 ) }
    dend_14 { pt3dadd( -11.1443, -139.922, 20.4214, 0.22 ) }
    dend_14 { pt3dadd( -11.511, -140.462, 20.6925, 0.15 ) }
    dend_14 { pt3dadd( -11.7591, -140.879, 20.9099, 0.59 ) }
    dend_14 { pt3dadd( -12.0881, -141.44, 21.2023, 0.15 ) }
    dend_14 { pt3dadd( -12.4061, -141.992, 21.4664, 0.15 ) }
    dend_14 { pt3dadd( -12.7034, -142.472, 21.6489, 0.74 ) }
    dend_14 { pt3dadd( -13.2465, -143.262, 21.9307, 0.22 ) }
    dend_14 { pt3dadd( -13.5224, -143.636, 22.0628, 0.22 ) }
    dend_14 { pt3dadd( -14.0585, -144.261, 22.2758, 0.22 ) }
    dend_14 { pt3dadd( -14.413, -144.632, 22.4088, 0.22 ) }
    dend_14 { pt3dadd( -14.9487, -145.176, 22.6082, 0.52 ) }
    dend_14 { pt3dadd( -15.6906, -145.929, 22.8901, 0.15 ) }
    dend_14 { pt3dadd( -16.2267, -146.464, 23.0865, 0.15 ) }
    dend_14 { pt3dadd( -16.7775, -146.982, 23.2831, 0.81 ) }
    dend_14 { pt3dadd( -17.8775, -148.0, 23.6656, 0.07 ) }
    dend_14 { pt3dadd( -18.1957, -148.284, 23.7672, 0.52 ) }
    dend_14 { pt3dadd( -19.0956, -149.064, 24.01, 0.15 ) }
    dend_14 { pt3dadd( -19.597, -149.487, 24.1122, 0.59 ) }
    dend_14 { pt3dadd( -20.2153, -150.029, 24.2124, 0.15 ) }
    dend_14 { pt3dadd( -20.7991, -150.557, 24.2604, 0.81 ) }
    dend_14 { pt3dadd( -21.2717, -150.997, 24.2569, 0.29 ) }
    dend_14 { pt3dadd( -22.2707, -151.939, 24.2095, 0.07 ) }
    dend_14 { pt3dadd( -22.7973, -152.465, 24.1702, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -23.4941, -153.207, 24.109, 0.15 ) }
    dend_14 { pt3dadd( -24.059, -153.85, 24.0731, 0.52 ) }
    dend_14 { pt3dadd( -24.574, -154.439, 24.0544, 0.81 ) }
    dend_14 { pt3dadd( -25.6273, -155.606, 24.0968, 0.07 ) }
    dend_14 { pt3dadd( -26.2319, -156.234, 24.1886, 0.07 ) }
    dend_14 { pt3dadd( -26.6499, -156.643, 24.291, 0.59 ) }
    dend_14 { pt3dadd( -27.4538, -157.364, 24.548, 0.15 ) }
    dend_14 { pt3dadd( -28.033, -157.857, 24.7818, 0.74 ) }
    dend_14 { pt3dadd( -29.1515, -158.788, 25.3148, 0.07 ) }
    dend_14 { pt3dadd( -30.0471, -159.553, 25.7971, 0.22 ) }
    dend_14 { pt3dadd( -30.3023, -159.771, 25.9336, 0.22 ) }
    dend_14 { pt3dadd( -30.692, -160.133, 26.1394, 0.44 ) }
    dend_14 { pt3dadd( -30.9426, -160.397, 26.2589, 0.44 ) }
    dend_14 { pt3dadd( -31.6013, -161.229, 26.5691, 0.22 ) }
    dend_14 { pt3dadd( -32.1626, -162.039, 26.8071, 0.88 ) }
    dend_14 { pt3dadd( -32.5782, -162.666, 26.9659, 0.66 ) }
    dend_14 { pt3dadd( -33.1566, -163.509, 27.1764, 0.15 ) }
    dend_14 { pt3dadd( -33.8707, -164.482, 27.4177, 0.15 ) }
    dend_14 { pt3dadd( -34.3663, -165.061, 27.568, 0.59 ) }
    dend_14 { pt3dadd( -34.952, -165.609, 27.724, 0.07 ) }
    dend_14 { pt3dadd( -35.2526, -165.831, 27.8013, 0.15 ) }
    dend_14 { pt3dadd( -35.8325, -166.145, 27.9399, 0.07 ) }
    dend_14 { pt3dadd( -36.3262, -166.354, 28.0272, 0.22 ) }
    dend_14 { pt3dadd( -37.1455, -166.659, 28.1573, 0.07 ) }
    dend_14 { pt3dadd( -37.9098, -166.9, 28.2864, 0.07 ) }
    dend_14 { pt3dadd( -38.2699, -167.01, 28.331, 0.37 ) }
    dend_14 { pt3dadd( -39.4122, -167.376, 28.4362, 0.15 ) }
    dend_14 { pt3dadd( -40.1751, -167.644, 28.4784, 0.59 ) }
    dend_14 { pt3dadd( -41.4196, -168.103, 28.5157, 0.07 ) }
    dend_14 { pt3dadd( -42.7794, -168.641, 28.5587, 0.07 ) }
    dend_14 { pt3dadd( -43.9438, -169.127, 28.6087, 0.07 ) }
    dend_14 { pt3dadd( -44.4752, -169.352, 28.6345, 0.66 ) }
    dend_14 { pt3dadd( -45.8272, -169.942, 28.6806, 0.07 ) }
    dend_14 { pt3dadd( -46.5674, -170.29, 28.718, 0.52 ) }
    dend_14 { pt3dadd( -47.3339, -170.709, 28.7431, 0.07 ) }
    dend_14 { pt3dadd( -47.929, -171.08, 28.7451, 0.22 ) }
    dend_14 { pt3dadd( -48.883, -171.681, 28.7365, 0.07 ) }
    dend_14 { pt3dadd( -49.4806, -172.067, 28.6753, 0.29 ) }
    dend_14 { pt3dadd( -50.2455, -172.601, 28.5176, 0.07 ) }
    dend_14 { pt3dadd( -50.7628, -173.012, 28.359, 0.59 ) }
    dend_14 { pt3dadd( -51.7449, -173.886, 27.9506, 0.15 ) }
    dend_14 { pt3dadd( -52.3389, -174.48, 27.6383, 0.66 ) }
    dend_14 { pt3dadd( -52.8734, -175.055, 27.2742, 0.07 ) }
    dend_14 { pt3dadd( -53.105, -175.302, 27.0889, 0.07 ) }
    dend_14 { pt3dadd( -53.5106, -175.762, 26.6553, 0.07 ) }
    dend_14 { pt3dadd( -53.6969, -176.012, 26.4047, 0.22 ) }
    dend_14 { pt3dadd( -53.9929, -176.488, 25.8998, 0.22 ) }
    dend_14 { pt3dadd( -54.3921, -177.129, 25.1765, 0.15 ) }
    dend_14 { pt3dadd( -54.7523, -177.655, 24.5272, 0.81 ) }
    dend_14 { pt3dadd( -55.336, -178.445, 23.4976, 0.07 ) }
    dend_14 { pt3dadd( -55.6118, -178.816, 22.9745, 0.15 ) }
    dend_14 { pt3dadd( -55.9413, -179.284, 22.2622, 0.29 ) }
    dend_14 { pt3dadd( -56.4227, -180.083, 21.0563, 0.15 ) }
    dend_14 { pt3dadd( -56.5952, -180.413, 20.5411, 0.15 ) }
    dend_14 { pt3dadd( -56.7893, -180.788, 19.9056, 0.74 ) }
    dend_14 { pt3dadd( -57.1188, -181.336, 18.7515, 0.37 ) }
    dend_14 { pt3dadd( -57.4553, -181.888, 17.3788, 0.81 ) }
    dend_14 { pt3dadd( -57.6573, -182.252, 16.3502, 0.59 ) }
    dend_14 { pt3dadd( -57.8426, -182.616, 15.132, 0.59 ) }
    dend_14 { pt3dadd( -57.939, -182.779, 14.5108, 0.59 ) }
    dend_14 { pt3dadd( -58.2822, -183.155, 12.4496, 0.44 ) }
    dend_14 { pt3dadd( -58.379, -183.206, 11.9367, 0.44 ) }
    dend_14 { pt3dadd( -58.4841, -183.233, 11.3896, 0.44 ) }
    dend_14 { pt3dadd( -58.6009, -183.227, 10.7846, 0.44 ) }
    dend_14 { pt3dadd( -58.8684, -183.179, 9.48411, 0.66 ) }
    dend_14 { pt3dadd( -59.2167, -183.107, 7.87854, 0.07 ) }
    dend_14 { pt3dadd( -59.3847, -183.07, 7.28074, 0.15 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 67/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -13.4272, -1.95553, 2.36554, 0.37 ) }
    dend_8 { pt3dadd( -13.7648, -0.858878, 1.36943, 0.37 ) }
    dend_8 { pt3dadd( -13.9162, -0.389739, 0.97637, 0.37 ) }
    dend_8 { pt3dadd( -14.2124, 0.252993, 0.447752, 0.44 ) }
    dend_8 { pt3dadd( -14.4347, 0.634149, 0.124018, 0.44 ) }
    dend_8 { pt3dadd( -14.6298, 0.900089, -0.127447, 0.44 ) }
    dend_8 { pt3dadd( -14.9848, 1.31587, -0.536695, 0.59 ) }
    dend_8 { pt3dadd( -15.5391, 1.93991, -1.13233, 1.03 ) }
    dend_8 { pt3dadd( -16.2039, 2.61892, -1.70303, 0.74 ) }
    dend_8 { pt3dadd( -16.7327, 3.16346, -2.05845, 0.74 ) }
    dend_8 { pt3dadd( -17.4986, 4.00822, -2.48053, 1.03 ) }
    dend_8 { pt3dadd( -17.8386, 4.40759, -2.63089, 1.25 ) }
    dend_8 { pt3dadd( -18.4871, 5.27884, -2.82761, 0.37 ) }
    dend_8 { pt3dadd( -18.9039, 5.95331, -2.88803, 0.74 ) }
    dend_8 { pt3dadd( -19.391, 6.90571, -2.88448, 0.37 ) }
    dend_8 { pt3dadd( -19.6559, 7.5243, -2.84966, 0.37 ) }
    dend_8 { pt3dadd( -19.8367, 8.02987, -2.8081, 0.74 ) }
    dend_8 { pt3dadd( -20.1573, 9.13372, -2.72375, 0.66 ) }
    dend_8 { pt3dadd( -20.431, 10.1873, -2.63032, 0.52 ) }
    dend_8 { pt3dadd( -20.5778, 10.8137, -2.56714, 0.52 ) }
    dend_8 { pt3dadd( -20.8571, 12.2309, -2.41392, 0.66 ) }
    dend_8 { pt3dadd( -20.9889, 13.2042, -2.31917, 1.25 ) }
    dend_8 { pt3dadd( -21.0881, 14.888, -2.21319, 1.33 ) }
    dend_8 { pt3dadd( -21.0678, 15.9572, -2.1908, 1.03 ) }
    dend_8 { pt3dadd( -20.9768, 17.059, -2.23476, 0.66 ) }
    dend_8 { pt3dadd( -20.8399, 18.2774, -2.37297, 0.29 ) }
    dend_8 { pt3dadd( -20.7157, 19.2954, -2.59704, 0.15 ) }
    dend_8 { pt3dadd( -20.6254, 20.3488, -2.92671, 0.52 ) }
    dend_8 { pt3dadd( -20.6101, 20.8227, -3.11495, 0.52 ) }
    dend_8 { pt3dadd( -20.6344, 21.4392, -3.37039, 0.74 ) }
    dend_8 { pt3dadd( -20.8048, 22.7546, -3.84987, 0.37 ) }
    dend_8 { pt3dadd( -20.9808, 23.697, -4.12981, 0.59 ) }
    dend_8 { pt3dadd( -21.2374, 24.8127, -4.39696, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_8 { pt3dadd( -21.3899, 25.3514, -4.50466, 0.74 ) }
    dend_8 { pt3dadd( -21.7688, 26.4845, -4.732, 1.03 ) }
    dend_8 { pt3dadd( -22.1666, 27.5439, -4.96427, 0.74 ) }
    dend_8 { pt3dadd( -22.5253, 28.4245, -5.20877, 0.22 ) }
    dend_8 { pt3dadd( -22.7449, 28.9642, -5.38459, 0.22 ) }
    dend_8 { pt3dadd( -23.0808, 29.8188, -5.70616, 0.22 ) }
    dend_8 { pt3dadd( -23.4086, 30.78, -6.09985, 0.22 ) }
    dend_8 { pt3dadd( -23.6134, 31.5596, -6.45586, 0.29 ) }
    dend_8 { pt3dadd( -23.7318, 32.3798, -6.86045, 0.59 ) }
    dend_8 { pt3dadd( -23.7036, 33.1532, -7.23661, 1.18 ) }
    dend_8 { pt3dadd( -23.6419, 33.4845, -7.39231, 1.18 ) }
    dend_8 { pt3dadd( -23.4185, 34.3092, -7.77287, 0.52 ) }
    dend_8 { pt3dadd( -23.24, 34.9392, -8.04315, 0.52 ) }
    dend_8 { pt3dadd( -23.0596, 35.6734, -8.33639, 0.52 ) }
    dend_8 { pt3dadd( -22.8789, 36.8329, -8.77807, 0.22 ) }
    dend_8 { pt3dadd( -22.8678, 37.1929, -8.90473, 0.22 ) }
    dend_8 { pt3dadd( -22.9495, 38.0301, -9.1561, 0.22 ) }
    dend_8 { pt3dadd( -23.1079, 38.9002, -9.36017, 0.59 ) }
    dend_8 { pt3dadd( -23.1767, 39.2177, -9.40359, 0.59 ) }
    dend_8 { pt3dadd( -23.4424, 40.3653, -9.47104, 1.03 ) }
    dend_8 { pt3dadd( -23.6744, 41.3461, -9.49283, 1.47 ) }
    dend_8 { pt3dadd( -23.9656, 42.6804, -9.53639, 0.22 ) }
    dend_8 { pt3dadd( -24.2064, 43.7574, -9.60362, 0.37 ) }
    dend_8 { pt3dadd( -24.488, 44.8913, -9.72172, 0.37 ) }
    dend_8 { pt3dadd( -24.7965, 45.9275, -9.89421, 0.52 ) }
    dend_8 { pt3dadd( -25.0785, 46.7168, -10.0862, 0.29 ) }
    dend_8 { pt3dadd( -25.4292, 47.6035, -10.3974, 0.59 ) }
    dend_8 { pt3dadd( -25.8213, 48.5104, -10.7851, 0.44 ) }
    dend_8 { pt3dadd( -26.1022, 49.1062, -11.0653, 0.29 ) }
    dend_8 { pt3dadd( -26.5348, 49.986, -11.4994, 0.52 ) }
    dend_8 { pt3dadd( -26.799, 50.5572, -11.7615, 0.88 ) }
    dend_8 { pt3dadd( -27.0685, 51.2302, -12.019, 1.03 ) }
    dend_8 { pt3dadd( -27.5473, 52.6405, -12.4501, 1.33 ) }
    dend_8 { pt3dadd( -27.921, 53.8176, -12.7332, 0.29 ) }
    dend_8 { pt3dadd( -28.0284, 54.1111, -12.79, 0.29 ) }
    dend_8 { pt3dadd( -28.2386, 54.5989, -12.8725, 0.29 ) }
    dend_8 { pt3dadd( -28.453, 54.9824, -12.9482, 0.29 ) }
    dend_8 { pt3dadd( -28.8428, 55.549, -13.1003, 0.29 ) }
    dend_8 { pt3dadd( -29.4857, 56.342, -13.3828, 0.37 ) }
    dend_8 { pt3dadd( -30.1952, 57.154, -13.7017, 0.81 ) }
    dend_8 { pt3dadd( -30.8964, 57.9437, -14.0371, 1.18 ) }
    dend_8 { pt3dadd( -31.9614, 59.1395, -14.5678, 0.88 ) }
    dend_8 { pt3dadd( -32.5287, 59.7916, -14.875, 0.59 ) }
    dend_8 { pt3dadd( -33.1386, 60.5297, -15.2364, 0.37 ) }
    dend_8 { pt3dadd( -33.3978, 60.8705, -15.4333, 0.29 ) }
    dend_8 { pt3dadd( -33.7667, 61.3681, -15.7335, 0.29 ) }
    dend_8 { pt3dadd( -34.099, 61.7979, -15.9745, 0.29 ) }
    dend_8 { pt3dadd( -34.3951, 62.2079, -16.1582, 0.29 ) }
    dend_8 { pt3dadd( -34.9127, 62.9239, -16.4074, 0.66 ) }
    dend_8 { pt3dadd( -35.6299, 63.9155, -16.6838, 1.47 ) }
    dend_8 { pt3dadd( -36.8966, 65.5914, -17.1425, 0.52 ) }
    dend_8 { pt3dadd( -37.6718, 66.5725, -17.3997, 0.37 ) }
    dend_8 { pt3dadd( -38.5218, 67.6191, -17.6592, 0.37 ) }
    dend_8 { pt3dadd( -39.0391, 68.2781, -17.7975, 0.88 ) }
    dend_8 { pt3dadd( -39.6179, 69.0828, -17.9283, 1.47 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 55/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -13.4272, -1.95553, 2.36554, 0.81 ) }
    dend_3 { pt3dadd( -13.5417, -2.65459, 1.99642, 0.81 ) }
    dend_3 { pt3dadd( -13.6632, -2.93614, 1.85716, 0.81 ) }
    dend_3 { pt3dadd( -14.2823, -3.86411, 1.50955, 0.22 ) }
    dend_3 { pt3dadd( -14.6447, -4.29207, 1.41282, 0.22 ) }
    dend_3 { pt3dadd( -15.1448, -4.81071, 1.35326, 0.44 ) }
    dend_3 { pt3dadd( -15.7488, -5.38308, 1.32763, 0.88 ) }
    dend_3 { pt3dadd( -16.6755, -6.12473, 1.34318, 0.44 ) }
    dend_3 { pt3dadd( -17.5998, -6.74298, 1.3791, 0.59 ) }
    dend_3 { pt3dadd( -18.5481, -7.25207, 1.41552, 0.52 ) }
    dend_3 { pt3dadd( -19.6052, -7.75224, 1.44969, 0.22 ) }
    dend_3 { pt3dadd( -20.7424, -8.21984, 1.4893, 0.22 ) }
    dend_3 { pt3dadd( -21.3288, -8.41599, 1.52625, 0.66 ) }
    dend_3 { pt3dadd( -22.2733, -8.64746, 1.62316, 0.96 ) }
    dend_3 { pt3dadd( -23.3066, -8.84048, 1.75789, 1.11 ) }
    dend_3 { pt3dadd( -23.6617, -8.89408, 1.81879, 0.96 ) }
    dend_3 { pt3dadd( -24.7272, -9.01481, 2.07433, 0.22 ) }
    dend_3 { pt3dadd( -26.1469, -9.17602, 2.52225, 0.66 ) }
    dend_3 { pt3dadd( -26.8371, -9.29335, 2.77429, 0.15 ) }
    dend_3 { pt3dadd( -27.2331, -9.37663, 2.94713, 0.15 ) }
    dend_3 { pt3dadd( -27.9941, -9.56037, 3.31964, 0.52 ) }
    dend_3 { pt3dadd( -28.6717, -9.72765, 3.63785, 0.22 ) }
    dend_3 { pt3dadd( -29.4442, -9.95413, 3.93894, 0.66 ) }
    dend_3 { pt3dadd( -30.2133, -10.2375, 4.12356, 1.03 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 79/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 29.0192, 24.2848, 0.0, 0.15573 ) }
    axon_1 { pt3dadd( 40.7198, 33.6708, 0.0, 0.15573 ) }
    axon_1 { pt3dadd( 52.4204, 43.0567, 0.0, 0.15573 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 82/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -17.6923, 50.2214, 34.5641, 0.29 ) }
    dend_38 { pt3dadd( -18.3478, 51.1419, 34.7742, 0.29 ) }
    dend_38 { pt3dadd( -18.7732, 51.7995, 34.9656, 0.29 ) }
    dend_38 { pt3dadd( -19.2233, 52.5827, 35.2683, 0.29 ) }
    dend_38 { pt3dadd( -19.6505, 53.4509, 35.6648, 0.22 ) }
    dend_38 { pt3dadd( -20.0513, 54.4219, 36.1138, 0.22 ) }
    dend_38 { pt3dadd( -20.4139, 55.3547, 36.5449, 0.22 ) }
    dend_38 { pt3dadd( -20.8379, 56.6388, 37.1913, 0.22 ) }
    dend_38 { pt3dadd( -21.1054, 57.5932, 37.6652, 0.52 ) }
    dend_38 { pt3dadd( -21.3563, 58.6153, 38.1638, 0.81 ) }
    dend_38 { pt3dadd( -21.5674, 59.5305, 38.6387, 0.44 ) }
    dend_38 { pt3dadd( -21.8759, 60.8963, 39.3963, 0.22 ) }
    dend_38 { pt3dadd( -22.0382, 61.6302, 39.7861, 0.22 ) }
    dend_38 { pt3dadd( -22.24, 62.4555, 40.1517, 0.29 ) }
    dend_38 { pt3dadd( -22.4637, 63.3174, 40.4956, 0.29 ) }
    dend_38 { pt3dadd( -22.726, 64.1359, 40.8043, 0.29 ) }
    dend_38 { pt3dadd( -22.9352, 64.698, 41.0065, 0.66 ) }
    dend_38 { pt3dadd( -23.3124, 65.6499, 41.2839, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_38 { pt3dadd( -23.5905, 66.3259, 41.4273, 0.37 ) }
    dend_38 { pt3dadd( -24.0247, 67.4158, 41.6036, 0.15 ) }
    dend_38 { pt3dadd( -24.523, 68.7797, 41.7492, 0.15 ) }
    dend_38 { pt3dadd( -24.7502, 69.4526, 41.7978, 1.11 ) }
    dend_38 { pt3dadd( -25.2057, 70.9043, 41.8802, 0.59 ) }
    dend_38 { pt3dadd( -25.7227, 72.7384, 41.96, 0.22 ) }
    dend_38 { pt3dadd( -25.9147, 73.5447, 41.9821, 0.37 ) }
    dend_38 { pt3dadd( -26.2076, 75.0403, 41.9935, 0.22 ) }
    dend_38 { pt3dadd( -26.342, 75.9451, 41.9982, 0.74 ) }
    dend_38 { pt3dadd( -26.4373, 76.6319, 41.9953, 0.74 ) }
    dend_38 { pt3dadd( -26.6104, 77.9203, 42.0042, 0.22 ) }
    dend_38 { pt3dadd( -26.7542, 78.9768, 41.9866, 0.22 ) }
    dend_38 { pt3dadd( -26.9493, 80.3771, 41.9075, 0.22 ) }
    dend_38 { pt3dadd( -27.1646, 81.7189, 41.7895, 0.29 ) }
    dend_38 { pt3dadd( -27.365, 82.8864, 41.6637, 0.29 ) }
    dend_38 { pt3dadd( -27.647, 84.4714, 41.47, 0.44 ) }
    dend_38 { pt3dadd( -27.906, 85.9244, 41.272, 0.22 ) }
    dend_38 { pt3dadd( -28.1538, 87.329, 41.0654, 0.15 ) }
    dend_38 { pt3dadd( -28.3375, 88.4278, 40.9214, 0.15 ) }
    dend_38 { pt3dadd( -28.5746, 89.7671, 40.8157, 0.15 ) }
    dend_38 { pt3dadd( -28.7435, 90.662, 40.7771, 0.52 ) }
    dend_38 { pt3dadd( -28.945, 91.5721, 40.7654, 0.74 ) }
    dend_38 { pt3dadd( -29.0075, 91.803, 40.7779, 0.74 ) }
    dend_38 { pt3dadd( -29.3387, 92.8324, 40.8606, 0.22 ) }
    dend_38 { pt3dadd( -29.8398, 94.1603, 40.9588, 0.37 ) }
    dend_38 { pt3dadd( -30.5196, 95.6566, 41.0545, 0.22 ) }
    dend_38 { pt3dadd( -30.9217, 96.4643, 41.0887, 0.22 ) }
    dend_38 { pt3dadd( -31.4124, 97.4116, 41.1059, 0.29 ) }
    dend_38 { pt3dadd( -31.9148, 98.368, 41.1262, 0.15 ) }
    dend_38 { pt3dadd( -32.2521, 98.9926, 41.1326, 0.74 ) }
    dend_38 { pt3dadd( -32.5092, 99.4805, 41.1491, 0.22 ) }
    dend_38 { pt3dadd( -33.2035, 100.87, 41.34, 0.15 ) }
    dend_38 { pt3dadd( -33.4958, 101.515, 41.4633, 0.15 ) }
    dend_38 { pt3dadd( -33.9193, 102.501, 41.6897, 0.37 ) }
    dend_38 { pt3dadd( -34.2104, 103.198, 41.8638, 0.37 ) }
    dend_38 { pt3dadd( -34.7239, 104.412, 42.1782, 0.15 ) }
    dend_38 { pt3dadd( -35.3301, 105.696, 42.5061, 0.66 ) }
    dend_38 { pt3dadd( -35.6792, 106.322, 42.6571, 0.15 ) }
    dend_38 { pt3dadd( -36.0735, 106.948, 42.7708, 0.15 ) }
    dend_38 { pt3dadd( -36.7322, 107.933, 42.8796, 0.07 ) }
    dend_38 { pt3dadd( -36.9741, 108.297, 42.9084, 0.15 ) }
    dend_38 { pt3dadd( -37.4502, 109.032, 42.9407, 0.15 ) }
    dend_38 { pt3dadd( -38.0342, 110.009, 42.9431, 0.37 ) }
    dend_38 { pt3dadd( -38.8825, 111.612, 42.9432, 0.15 ) }
    dend_38 { pt3dadd( -39.2286, 112.388, 42.9774, 0.29 ) }
    dend_38 { pt3dadd( -39.736, 113.791, 43.0862, 0.07 ) }
    dend_38 { pt3dadd( -39.899, 114.37, 43.1477, 0.37 ) }
    dend_38 { pt3dadd( -40.0351, 115.033, 43.2191, 0.15 ) }
    dend_38 { pt3dadd( -40.156, 115.864, 43.2994, 0.37 ) }
    dend_38 { pt3dadd( -40.3544, 117.673, 43.453, 0.15 ) }
    dend_38 { pt3dadd( -40.4264, 118.341, 43.4971, 0.29 ) }
    dend_38 { pt3dadd( -40.484, 118.972, 43.5227, 0.29 ) }
    dend_38 { pt3dadd( -40.5838, 120.442, 43.6039, 0.15 ) }
    dend_38 { pt3dadd( -40.6281, 121.576, 43.6756, 0.15 ) }
    dend_38 { pt3dadd( -40.6211, 122.113, 43.7092, 0.37 ) }
    dend_38 { pt3dadd( -40.5644, 122.802, 43.7249, 0.37 ) }
    dend_38 { pt3dadd( -40.4548, 123.824, 43.7319, 0.07 ) }
    dend_38 { pt3dadd( -40.2615, 125.151, 43.7285, 0.29 ) }
    dend_38 { pt3dadd( -40.1019, 125.98, 43.7289, 0.07 ) }
    dend_38 { pt3dadd( -39.9124, 126.84, 43.7366, 0.15 ) }
    dend_38 { pt3dadd( -39.5729, 128.307, 43.7631, 0.07 ) }
    dend_38 { pt3dadd( -39.4017, 129.051, 43.7782, 0.22 ) }
    dend_38 { pt3dadd( -39.2414, 129.713, 43.7928, 0.66 ) }
    dend_38 { pt3dadd( -39.1355, 130.126, 43.8162, 0.66 ) }
    dend_38 { pt3dadd( -38.5801, 132.096, 44.0622, 0.07 ) }
    dend_38 { pt3dadd( -38.1881, 133.434, 44.2931, 0.07 ) }
    dend_38 { pt3dadd( -37.9762, 134.147, 44.4483, 0.66 ) }
    dend_38 { pt3dadd( -37.5539, 135.622, 44.7901, 0.22 ) }
    dend_38 { pt3dadd( -37.2459, 136.848, 45.0703, 0.81 ) }
    dend_38 { pt3dadd( -37.0643, 137.761, 45.2668, 0.59 ) }
    dend_38 { pt3dadd( -36.8479, 139.859, 45.6538, 0.07 ) }
    dend_38 { pt3dadd( -36.8469, 140.347, 45.7352, 0.07 ) }
    dend_38 { pt3dadd( -36.9336, 141.178, 45.845, 0.22 ) }
    dend_38 { pt3dadd( -37.1219, 142.068, 45.9275, 0.07 ) }
    dend_38 { pt3dadd( -37.3388, 142.849, 45.9856, 0.22 ) }
    dend_38 { pt3dadd( -37.8902, 144.521, 46.1187, 0.15 ) }
    dend_38 { pt3dadd( -38.2389, 145.496, 46.2127, 0.74 ) }
    dend_38 { pt3dadd( -38.8455, 147.269, 46.3885, 0.15 ) }
    dend_38 { pt3dadd( -39.0985, 148.042, 46.4661, 0.29 ) }
    dend_38 { pt3dadd( -39.6548, 149.807, 46.6457, 0.07 ) }
    dend_38 { pt3dadd( -39.7804, 150.232, 46.6881, 0.22 ) }
    dend_38 { pt3dadd( -40.0713, 151.258, 46.8135, 0.22 ) }
    dend_38 { pt3dadd( -40.3297, 152.206, 46.9617, 0.44 ) }
    dend_38 { pt3dadd( -40.594, 153.303, 47.2171, 1.03 ) }
    dend_38 { pt3dadd( -40.7955, 154.223, 47.5013, 0.44 ) }
    dend_38 { pt3dadd( -41.045, 155.421, 47.896, 0.44 ) }
    dend_38 { pt3dadd( -41.3795, 157.082, 48.4999, 0.15 ) }
    dend_38 { pt3dadd( -41.5671, 158.022, 48.8934, 0.52 ) }
    dend_38 { pt3dadd( -41.8629, 159.583, 49.665, 0.15 ) }
    dend_38 { pt3dadd( -42.0231, 160.557, 50.2422, 0.66 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 90/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -17.6923, 50.2214, 34.5641, 0.15 ) }
    dend_37 { pt3dadd( -17.4011, 51.1655, 34.9771, 0.15 ) }
    dend_37 { pt3dadd( -17.1951, 51.7535, 35.2956, 0.15 ) }
    dend_37 { pt3dadd( -16.8765, 52.5922, 35.7841, 0.22 ) }
    dend_37 { pt3dadd( -16.7102, 53.0476, 36.0085, 0.22 ) }
    dend_37 { pt3dadd( -16.4701, 53.7963, 36.3259, 0.22 ) }
    dend_37 { pt3dadd( -16.3248, 54.3056, 36.5426, 0.22 ) }
    dend_37 { pt3dadd( -16.0975, 55.2881, 37.0061, 0.22 ) }
    dend_37 { pt3dadd( -15.9422, 56.2114, 37.4593, 0.22 ) }
    dend_37 { pt3dadd( -15.8428, 57.235, 37.9191, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_37 { pt3dadd( -15.797, 58.1709, 38.3112, 0.59 ) }
    dend_37 { pt3dadd( -15.7951, 59.6875, 38.8799, 0.07 ) }
    dend_37 { pt3dadd( -15.8467, 60.8507, 39.2299, 0.15 ) }
    dend_37 { pt3dadd( -15.9331, 61.6558, 39.4434, 0.15 ) }
    dend_37 { pt3dadd( -16.1615, 63.2092, 39.8798, 0.29 ) }
    dend_37 { pt3dadd( -16.3503, 64.2953, 40.2171, 0.07 ) }
    dend_37 { pt3dadd( -16.5214, 65.1694, 40.484, 0.59 ) }
    dend_37 { pt3dadd( -16.8512, 66.4802, 40.8433, 0.07 ) }
    dend_37 { pt3dadd( -17.1953, 67.6217, 41.1443, 0.22 ) }
    dend_37 { pt3dadd( -17.4836, 68.5085, 41.4082, 0.22 ) }
    dend_37 { pt3dadd( -17.7119, 69.198, 41.6693, 0.37 ) }
    dend_37 { pt3dadd( -18.013, 70.1342, 42.0927, 0.29 ) }
    dend_37 { pt3dadd( -18.3609, 71.2839, 42.6713, 0.29 ) }
    dend_37 { pt3dadd( -18.6196, 72.1981, 43.1812, 0.22 ) }
    dend_37 { pt3dadd( -18.8099, 73.1199, 43.6638, 0.59 ) }
    dend_37 { pt3dadd( -18.9998, 74.3905, 44.301, 0.37 ) }
    dend_37 { pt3dadd( -19.0636, 75.0882, 44.6444, 0.37 ) }
    dend_37 { pt3dadd( -19.079, 75.6079, 44.8924, 0.44 ) }
    dend_37 { pt3dadd( -19.0511, 76.2626, 45.1893, 0.44 ) }
    dend_37 { pt3dadd( -18.8727, 78.4984, 46.1775, 0.15 ) }
    dend_37 { pt3dadd( -18.7471, 79.6977, 46.6786, 0.15 ) }
    dend_37 { pt3dadd( -18.6659, 80.2274, 46.8913, 0.15 ) }
    dend_37 { pt3dadd( -18.5148, 80.9431, 47.1839, 0.29 ) }
    dend_37 { pt3dadd( -18.2467, 81.9026, 47.5909, 0.15 ) }
    dend_37 { pt3dadd( -17.8493, 82.9819, 48.0736, 0.52 ) }
    dend_37 { pt3dadd( -17.5839, 83.5653, 48.3597, 0.52 ) }
    dend_37 { pt3dadd( -17.0445, 84.688, 48.9289, 0.15 ) }
    dend_37 { pt3dadd( -16.7279, 85.4238, 49.3054, 0.15 ) }
    dend_37 { pt3dadd( -16.4845, 86.059, 49.6304, 0.44 ) }
    dend_37 { pt3dadd( -16.1146, 87.1438, 50.1771, 0.44 ) }
    dend_37 { pt3dadd( -15.6382, 88.7339, 50.9744, 0.29 ) }
    dend_37 { pt3dadd( -15.3958, 89.6694, 51.4966, 0.44 ) }
    dend_37 { pt3dadd( -15.0107, 91.2804, 52.5659, 0.15 ) }
    dend_37 { pt3dadd( -14.806, 92.1423, 53.2275, 0.15 ) }
    dend_37 { pt3dadd( -14.6782, 92.6718, 53.7085, 0.37 ) }
    dend_37 { pt3dadd( -14.3743, 93.8707, 55.0269, 0.15 ) }
    dend_37 { pt3dadd( -14.0969, 94.7785, 56.2104, 0.15 ) }
    dend_37 { pt3dadd( -13.7199, 95.7333, 57.7338, 0.66 ) }
    dend_37 { pt3dadd( -13.5237, 96.1582, 58.5402, 0.88 ) }
    dend_37 { pt3dadd( -13.1223, 97.0219, 60.3137, 0.15 ) }
    dend_37 { pt3dadd( -12.8723, 97.7385, 61.7039, 0.15 ) }
    dend_37 { pt3dadd( -12.7403, 98.3368, 62.7647, 0.29 ) }
    dend_37 { pt3dadd( -12.6704, 99.5443, 64.5677, 0.29 ) }
    dend_37 { pt3dadd( -12.6926, 100.591, 66.0384, 0.29 ) }
    dend_37 { pt3dadd( -12.7232, 100.895, 66.4443, 0.29 ) }
    dend_37 { pt3dadd( -13.0428, 102.363, 68.1544, 0.07 ) }
    dend_37 { pt3dadd( -13.2052, 102.842, 68.5938, 0.15 ) }
    dend_37 { pt3dadd( -13.7687, 104.008, 69.4095, 0.15 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 48/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 4.61798, 104.92, -20.046, 0.74 ) }
    dend_32 { pt3dadd( 4.43412, 105.588, -20.5518, 0.74 ) }
    dend_32 { pt3dadd( 4.39778, 106.223, -21.0991, 0.22 ) }
    dend_32 { pt3dadd( 4.44504, 106.929, -21.7737, 0.22 ) }
    dend_32 { pt3dadd( 4.47335, 107.346, -22.1777, 0.22 ) }
    dend_32 { pt3dadd( 4.49961, 107.936, -22.7532, 0.22 ) }
    dend_32 { pt3dadd( 4.48704, 108.542, -23.3324, 0.59 ) }
    dend_32 { pt3dadd( 4.39301, 109.252, -24.0164, 0.22 ) }
    dend_32 { pt3dadd( 4.22569, 109.89, -24.5488, 0.22 ) }
    dend_32 { pt3dadd( 4.02374, 110.372, -24.8277, 0.22 ) }
    dend_32 { pt3dadd( 3.77104, 110.853, -24.9958, 0.59 ) }
    dend_32 { pt3dadd( 3.36383, 111.501, -25.1095, 0.88 ) }
    dend_32 { pt3dadd( 2.35919, 112.867, -25.288, 0.22 ) }
    dend_32 { pt3dadd( 1.81612, 113.55, -25.3742, 0.22 ) }
    dend_32 { pt3dadd( 1.27095, 114.254, -25.4899, 0.96 ) }
    dend_32 { pt3dadd( 0.623866, 115.161, -25.7205, 0.15 ) }
    dend_32 { pt3dadd( 0.150922, 115.882, -25.9825, 0.15 ) }
    dend_32 { pt3dadd( -0.476051, 116.92, -26.5545, 0.15 ) }
    dend_32 { pt3dadd( -0.885726, 117.577, -27.072, 0.37 ) }
    dend_32 { pt3dadd( -1.32842, 118.194, -27.7056, 0.81 ) }
    dend_32 { pt3dadd( -1.68225, 118.661, -28.2739, 0.81 ) }
    dend_32 { pt3dadd( -1.9055, 118.979, -28.7177, 0.22 ) }
    dend_32 { pt3dadd( -2.10606, 119.467, -29.4203, 0.22 ) }
    dend_32 { pt3dadd( -2.13377, 119.992, -30.0513, 0.22 ) }
    dend_32 { pt3dadd( -2.09168, 120.32, -30.3942, 0.22 ) }
    dend_32 { pt3dadd( -2.03564, 120.705, -30.7665, 0.59 ) }
    dend_32 { pt3dadd( -1.94338, 121.484, -31.4344, 0.37 ) }
    dend_32 { pt3dadd( -1.8098, 122.575, -32.3425, 0.81 ) }
    dend_32 { pt3dadd( -1.72603, 123.431, -33.0327, 0.22 ) }
    dend_32 { pt3dadd( -1.69968, 124.162, -33.631, 0.22 ) }
    dend_32 { pt3dadd( -1.78405, 124.937, -34.2933, 0.22 ) }
    dend_32 { pt3dadd( -1.9828, 125.701, -34.9587, 1.03 ) }
    dend_32 { pt3dadd( -2.34557, 126.65, -35.7713, 0.22 ) }
    dend_32 { pt3dadd( -2.55033, 127.155, -36.2204, 0.22 ) }
    dend_32 { pt3dadd( -2.74326, 127.65, -36.6892, 0.37 ) }
    dend_32 { pt3dadd( -3.00783, 128.453, -37.4577, 0.15 ) }
    dend_32 { pt3dadd( -3.20725, 129.161, -38.122, 1.03 ) }
    dend_32 { pt3dadd( -3.4131, 130.001, -38.8961, 0.15 ) }
    dend_32 { pt3dadd( -3.66208, 131.187, -39.8883, 0.15 ) }
    dend_32 { pt3dadd( -3.74461, 131.77, -40.3679, 0.22 ) }
    dend_32 { pt3dadd( -3.78244, 132.219, -40.7321, 0.22 ) }
    dend_32 { pt3dadd( -3.8205, 132.715, -41.1398, 0.81 ) }
    dend_32 { pt3dadd( -3.86827, 133.341, -41.6556, 1.25 ) }
    dend_32 { pt3dadd( -3.9452, 134.132, -42.2908, 0.15 ) }
    dend_32 { pt3dadd( -4.06358, 135.012, -42.9622, 0.29 ) }
    dend_32 { pt3dadd( -4.13389, 135.78, -43.5536, 0.07 ) }
    dend_32 { pt3dadd( -4.18228, 136.408, -44.0639, 0.22 ) }
    dend_32 { pt3dadd( -8.37284, 143.527, -49.9116, 0.22 ) }
    dend_32 { pt3dadd( -12.9995, 148.626, -57.2495, 0.22 ) }
    dend_32 { pt3dadd( -19.9477, 152.908, -63.1041, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 98/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 4.61798, 104.92, -20.046, 0.15 ) }
    dend_31 { pt3dadd( 5.76865, 104.438, -19.8311, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_31 { pt3dadd( 6.22672, 104.241, -19.7428, 0.15 ) }
    dend_31 { pt3dadd( 6.72254, 104.081, -19.7303, 0.29 ) }
    dend_31 { pt3dadd( 7.02665, 104.003, -19.7858, 0.29 ) }
    dend_31 { pt3dadd( 8.18752, 103.775, -20.1943, 0.15 ) }
    dend_31 { pt3dadd( 8.74043, 103.69, -20.4744, 0.37 ) }
    dend_31 { pt3dadd( 9.00564, 103.674, -20.6861, 0.37 ) }
    dend_31 { pt3dadd( 10.0583, 103.734, -21.7633, 0.15 ) }
    dend_31 { pt3dadd( 10.7013, 103.849, -22.6142, 0.15 ) }
    dend_31 { pt3dadd( 11.0953, 103.946, -23.2381, 0.15 ) }
    dend_31 { pt3dadd( 11.443, 104.023, -23.9064, 0.22 ) }
    dend_31 { pt3dadd( 11.7151, 104.087, -24.4968, 0.22 ) }
    dend_31 { pt3dadd( 11.8373, 104.102, -24.7792, 0.22 ) }
    dend_31 { pt3dadd( 12.0341, 104.07, -25.3685, 0.22 ) }
    dend_31 { pt3dadd( 12.2025, 103.981, -26.2124, 0.22 ) }
    dend_31 { pt3dadd( 12.3516, 103.548, -27.0913, 0.44 ) }
    dend_31 { pt3dadd( 19.3162, 104.152, -34.2431, 0.44 ) }
    dend_31 { pt3dadd( 26.06, 105.792, -41.4515, 0.44 ) }
    dend_31 { pt3dadd( 32.9715, 107.049, -48.5739, 0.44 ) }
    dend_31 { pt3dadd( 41.5425, 106.327, -53.6771, 0.44 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 19/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 25.472, 54.6072, 5.96389, 0.22 ) }
    dend_27 { pt3dadd( 26.7857, 55.227, 6.46844, 0.22 ) }
    dend_27 { pt3dadd( 27.5413, 55.5757, 6.73103, 0.22 ) }
    dend_27 { pt3dadd( 28.1248, 55.858, 6.92131, 0.37 ) }
    dend_27 { pt3dadd( 28.8796, 56.2391, 7.15038, 0.96 ) }
    dend_27 { pt3dadd( 29.6641, 56.6688, 7.35257, 0.96 ) }
    dend_27 { pt3dadd( 30.8942, 57.4017, 7.62624, 0.59 ) }
    dend_27 { pt3dadd( 31.5972, 57.8495, 7.74589, 0.37 ) }
    dend_27 { pt3dadd( 32.639, 58.5359, 7.86306, 0.59 ) }
    dend_27 { pt3dadd( 33.2463, 58.9569, 7.92856, 0.29 ) }
    dend_27 { pt3dadd( 33.9869, 59.5048, 8.02402, 0.29 ) }
    dend_27 { pt3dadd( 34.593, 60.016, 8.13871, 0.29 ) }
    dend_27 { pt3dadd( 35.2577, 60.6425, 8.32642, 0.44 ) }
    dend_27 { pt3dadd( 35.8661, 61.2431, 8.56097, 0.74 ) }
    dend_27 { pt3dadd( 36.6893, 62.0662, 8.94056, 0.81 ) }
    dend_27 { pt3dadd( 37.3849, 62.7799, 9.29333, 0.29 ) }
    dend_27 { pt3dadd( 38.0945, 63.5412, 9.67759, 0.22 ) }
    dend_27 { pt3dadd( 38.5802, 64.1197, 9.90934, 0.22 ) }
    dend_27 { pt3dadd( 38.9524, 64.6304, 10.0484, 0.59 ) }
    dend_27 { pt3dadd( 39.5616, 65.5958, 10.1699, 0.81 ) }
    dend_27 { pt3dadd( 40.1242, 66.5966, 10.1709, 0.22 ) }
    dend_27 { pt3dadd( 40.416, 67.1335, 10.147, 0.22 ) }
    dend_27 { pt3dadd( 41.039, 68.3073, 10.0996, 0.29 ) }
    dend_27 { pt3dadd( 41.4154, 69.074, 10.087, 0.52 ) }
    dend_27 { pt3dadd( 41.6984, 69.7444, 10.1055, 0.74 ) }
    dend_27 { pt3dadd( 42.0527, 70.7489, 10.1988, 1.11 ) }
    dend_27 { pt3dadd( 42.4616, 71.9131, 10.4093, 0.52 ) }
    dend_27 { pt3dadd( 42.753, 72.6949, 10.6361, 0.22 ) }
    dend_27 { pt3dadd( 42.9281, 73.1336, 10.7995, 0.22 ) }
    dend_27 { pt3dadd( 43.2926, 73.9036, 11.1075, 0.29 ) }
    dend_27 { pt3dadd( 43.6664, 74.5981, 11.3735, 0.29 ) }
    dend_27 { pt3dadd( 44.4369, 75.9046, 11.8185, 0.22 ) }
    dend_27 { pt3dadd( 45.0073, 76.8198, 12.0815, 0.81 ) }
    dend_27 { pt3dadd( 45.5954, 77.6802, 12.315, 0.66 ) }
    dend_27 { pt3dadd( 46.3972, 78.7781, 12.6013, 0.29 ) }
    dend_27 { pt3dadd( 47.0883, 79.6915, 12.8776, 0.22 ) }
    dend_27 { pt3dadd( 47.5438, 80.2694, 13.0654, 0.59 ) }
    dend_27 { pt3dadd( 47.7866, 80.5712, 13.1695, 0.59 ) }
    dend_27 { pt3dadd( 48.6105, 81.6294, 13.534, 0.81 ) }
    dend_27 { pt3dadd( 48.9265, 82.0708, 13.717, 0.37 ) }
    dend_27 { pt3dadd( 49.5961, 83.1244, 14.1941, 0.22 ) }
    dend_27 { pt3dadd( 49.9032, 83.663, 14.4494, 0.22 ) }
    dend_27 { pt3dadd( 50.1744, 84.2075, 14.6763, 0.22 ) }
    dend_27 { pt3dadd( 50.4561, 84.869, 14.9205, 0.22 ) }
    dend_27 { pt3dadd( 50.7001, 85.5877, 15.1307, 0.22 ) }
    dend_27 { pt3dadd( 50.9791, 86.4728, 15.2997, 0.81 ) }
    dend_27 { pt3dadd( 51.4145, 87.8588, 15.461, 0.81 ) }
    dend_27 { pt3dadd( 51.8228, 89.1033, 15.5689, 0.29 ) }
    dend_27 { pt3dadd( 52.2506, 90.2566, 15.6344, 0.59 ) }
    dend_27 { pt3dadd( 52.8387, 91.6568, 15.663, 0.22 ) }
    dend_27 { pt3dadd( 53.4391, 92.9865, 15.6282, 0.22 ) }
    dend_27 { pt3dadd( 53.8728, 93.8644, 15.5785, 0.44 ) }
    dend_27 { pt3dadd( 54.3582, 94.7546, 15.4968, 0.52 ) }
    dend_27 { pt3dadd( 54.9566, 95.8292, 15.3875, 0.15 ) }
    dend_27 { pt3dadd( 55.1227, 96.1298, 15.3552, 0.15 ) }
    dend_27 { pt3dadd( 55.6781, 97.1854, 15.2767, 0.59 ) }
    dend_27 { pt3dadd( 55.9765, 97.8302, 15.2607, 0.59 ) }
    dend_27 { pt3dadd( 56.3175, 98.6381, 15.2087, 0.22 ) }
    dend_27 { pt3dadd( 56.7212, 99.6083, 15.1262, 0.22 ) }
    dend_27 { pt3dadd( 56.9672, 100.161, 15.0846, 0.22 ) }
    dend_27 { pt3dadd( 57.2554, 100.766, 15.0641, 0.44 ) }
    dend_27 { pt3dadd( 57.7311, 101.737, 15.083, 0.52 ) }
    dend_27 { pt3dadd( 58.1003, 102.482, 15.1334, 0.52 ) }
    dend_27 { pt3dadd( 58.6144, 103.47, 15.2396, 0.74 ) }
    dend_27 { pt3dadd( 59.3688, 104.822, 15.431, 0.22 ) }
    dend_27 { pt3dadd( 59.7651, 105.48, 15.5423, 0.22 ) }
    dend_27 { pt3dadd( 60.1968, 106.167, 15.6796, 0.29 ) }
    dend_27 { pt3dadd( 60.7219, 107.017, 15.8703, 0.37 ) }
    dend_27 { pt3dadd( 61.1243, 107.688, 16.0308, 0.81 ) }
    dend_27 { pt3dadd( 61.2981, 107.977, 16.0873, 0.81 ) }
    dend_27 { pt3dadd( 61.8523, 108.857, 16.2017, 0.15 ) }
    dend_27 { pt3dadd( 62.3663, 109.68, 16.2984, 0.22 ) }
    dend_27 { pt3dadd( 62.8174, 110.361, 16.4083, 0.22 ) }
    dend_27 { pt3dadd( 63.2561, 110.936, 16.5348, 0.29 ) }
    dend_27 { pt3dadd( 64.0646, 111.902, 16.7915, 0.59 ) }
    dend_27 { pt3dadd( 64.6432, 112.582, 17.0003, 0.44 ) }
    dend_27 { pt3dadd( 65.2354, 113.291, 17.2415, 0.66 ) }
    dend_27 { pt3dadd( 66.0545, 114.256, 17.5927, 0.22 ) }
    dend_27 { pt3dadd( 67.0001, 115.356, 17.9968, 0.22 ) }
    dend_27 { pt3dadd( 67.2512, 115.678, 18.1095, 0.29 ) }
    dend_27 { pt3dadd( 67.8813, 116.623, 18.4276, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_27 { pt3dadd( 68.2807, 117.329, 18.6374, 0.29 ) }
    dend_27 { pt3dadd( 68.6594, 118.149, 18.8328, 0.88 ) }
    dend_27 { pt3dadd( 68.9673, 119.055, 19.0339, 0.74 ) }
    dend_27 { pt3dadd( 69.4725, 120.99, 19.465, 0.22 ) }
    dend_27 { pt3dadd( 69.6913, 121.944, 19.6747, 0.22 ) }
    dend_27 { pt3dadd( 69.8356, 122.605, 19.823, 0.81 ) }
    dend_27 { pt3dadd( 70.0894, 123.686, 20.0707, 0.74 ) }
    dend_27 { pt3dadd( 70.3591, 124.827, 20.33, 0.22 ) }
    dend_27 { pt3dadd( 70.5121, 125.432, 20.4662, 0.22 ) }
    dend_27 { pt3dadd( 70.6966, 126.072, 20.5987, 0.22 ) }
    dend_27 { pt3dadd( 70.9809, 126.872, 20.7655, 0.22 ) }
    dend_27 { pt3dadd( 71.415, 127.874, 20.9776, 0.22 ) }
    dend_27 { pt3dadd( 71.7427, 128.545, 21.1146, 0.37 ) }
    dend_27 { pt3dadd( 72.1917, 129.381, 21.2647, 0.88 ) }
    dend_27 { pt3dadd( 72.3842, 129.71, 21.3222, 0.74 ) }
    dend_27 { pt3dadd( 73.2357, 131.03, 21.5485, 0.15 ) }
    dend_27 { pt3dadd( 73.9011, 131.988, 21.7021, 0.15 ) }
    dend_27 { pt3dadd( 74.4767, 132.77, 21.8488, 0.52 ) }
    dend_27 { pt3dadd( 74.9785, 133.376, 21.976, 0.22 ) }
    dend_27 { pt3dadd( 75.3274, 133.761, 22.0629, 0.22 ) }
    dend_27 { pt3dadd( 75.9283, 134.36, 22.2258, 0.29 ) }
    dend_27 { pt3dadd( 76.3733, 134.727, 22.3602, 0.29 ) }
    dend_27 { pt3dadd( 77.0673, 135.238, 22.6074, 0.29 ) }
    dend_27 { pt3dadd( 77.7964, 135.727, 22.8812, 0.29 ) }
    dend_27 { pt3dadd( 78.2588, 136.033, 23.0656, 0.59 ) }
    dend_27 { pt3dadd( 79.0468, 136.536, 23.3823, 1.11 ) }
    dend_27 { pt3dadd( 80.3196, 137.277, 23.89, 0.15 ) }
    dend_27 { pt3dadd( 80.6548, 137.45, 24.0145, 0.15 ) }
    dend_27 { pt3dadd( 81.1084, 137.634, 24.161, 0.15 ) }
    dend_27 { pt3dadd( 81.673, 137.836, 24.3294, 0.15 ) }
    dend_27 { pt3dadd( 82.0962, 137.97, 24.4703, 0.15 ) }
    dend_27 { pt3dadd( 82.7104, 138.158, 24.6936, 0.15 ) }
    dend_27 { pt3dadd( 83.5341, 138.424, 25.0161, 0.44 ) }
    dend_27 { pt3dadd( 85.0279, 138.952, 25.6307, 0.22 ) }
    dend_27 { pt3dadd( 85.5636, 139.163, 25.8773, 0.15 ) }
    dend_27 { pt3dadd( 86.8662, 139.766, 26.5182, 0.29 ) }
    dend_27 { pt3dadd( 87.4554, 140.075, 26.8279, 0.29 ) }
    dend_27 { pt3dadd( 87.8749, 140.308, 27.0638, 0.29 ) }
    dend_27 { pt3dadd( 88.5309, 140.695, 27.4454, 0.22 ) }
    dend_27 { pt3dadd( 89.0823, 141.055, 27.7339, 0.22 ) }
    dend_27 { pt3dadd( 89.7136, 141.455, 27.9933, 0.22 ) }
    dend_27 { pt3dadd( 90.338, 141.846, 28.1188, 0.37 ) }
    dend_27 { pt3dadd( 90.9104, 142.154, 28.1666, 0.37 ) }
    dend_27 { pt3dadd( 91.808, 142.566, 28.1687, 0.22 ) }
    dend_27 { pt3dadd( 92.5771, 142.889, 28.1091, 0.59 ) }
    dend_27 { pt3dadd( 93.1279, 143.117, 28.0182, 0.96 ) }
    dend_27 { pt3dadd( 94.1639, 143.596, 27.7964, 0.22 ) }
    dend_27 { pt3dadd( 94.9453, 144.03, 27.5714, 0.15 ) }
    dend_27 { pt3dadd( 95.46, 144.358, 27.4011, 0.15 ) }
    dend_27 { pt3dadd( 96.0476, 144.785, 27.2102, 0.37 ) }
    dend_27 { pt3dadd( 96.7756, 145.363, 27.0065, 0.66 ) }
    dend_27 { pt3dadd( 97.5763, 146.064, 26.8306, 0.74 ) }
    dend_27 { pt3dadd( 98.3709, 146.832, 26.7154, 0.52 ) }
    dend_27 { pt3dadd( 98.6717, 147.147, 26.6958, 0.52 ) }
    dend_27 { pt3dadd( 99.3464, 147.875, 26.7219, 0.15 ) }
    dend_27 { pt3dadd( 100.091, 148.684, 26.7962, 0.22 ) }
    dend_27 { pt3dadd( 100.567, 149.196, 26.8888, 0.22 ) }
    dend_27 { pt3dadd( 101.068, 149.709, 27.0287, 0.66 ) }
    dend_27 { pt3dadd( 101.843, 150.475, 27.3385, 0.96 ) }
    dend_27 { pt3dadd( 102.271, 150.887, 27.5289, 0.96 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 60/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 25.472, 54.6072, 5.96389, 0.22 ) }
    dend_26 { pt3dadd( 25.2334, 56.0439, 4.93786, 0.22 ) }
    dend_26 { pt3dadd( 25.0911, 56.8801, 4.40334, 0.22 ) }
    dend_26 { pt3dadd( 24.9659, 57.623, 3.97038, 0.44 ) }
    dend_26 { pt3dadd( 24.8139, 58.5897, 3.46849, 0.37 ) }
    dend_26 { pt3dadd( 24.6225, 59.6108, 2.97039, 0.37 ) }
    dend_26 { pt3dadd( 24.3929, 60.6963, 2.42518, 0.29 ) }
    dend_26 { pt3dadd( 24.1837, 61.4815, 2.05301, 0.29 ) }
    dend_26 { pt3dadd( 23.8026, 62.5957, 1.5375, 0.52 ) }
    dend_26 { pt3dadd( 23.5234, 63.3062, 1.20012, 0.15 ) }
    dend_26 { pt3dadd( 23.2757, 63.9457, 0.881363, 0.37 ) }
    dend_26 { pt3dadd( 23.0684, 64.5835, 0.516401, 0.37 ) }
    dend_26 { pt3dadd( 22.8743, 65.3199, 0.072157, 0.22 ) }
    dend_26 { pt3dadd( 22.7252, 65.9698, -0.275077, 0.22 ) }
    dend_26 { pt3dadd( 22.6323, 66.5168, -0.558414, 0.59 ) }
    dend_26 { pt3dadd( 22.5357, 67.3349, -1.00302, 0.22 ) }
    dend_26 { pt3dadd( 22.4766, 68.2409, -1.47878, 0.37 ) }
    dend_26 { pt3dadd( 22.4043, 69.117, -1.94394, 0.81 ) }
    dend_26 { pt3dadd( 22.3572, 69.5986, -2.21, 0.81 ) }
    dend_26 { pt3dadd( 22.1885, 70.7837, -2.85877, 0.52 ) }
    dend_26 { pt3dadd( 22.0241, 71.7601, -3.42242, 0.52 ) }
    dend_26 { pt3dadd( 21.8075, 72.9947, -4.16165, 0.22 ) }
    dend_26 { pt3dadd( 21.6339, 73.9564, -4.74032, 0.15 ) }
    dend_26 { pt3dadd( 21.4816, 74.7431, -5.20761, 0.37 ) }
    dend_26 { pt3dadd( 21.3711, 75.2991, -5.50764, 0.37 ) }
    dend_26 { pt3dadd( 21.2318, 76.0946, -5.88988, 0.15 ) }
    dend_26 { pt3dadd( 21.1569, 76.6376, -6.12571, 0.15 ) }
    dend_26 { pt3dadd( 21.0892, 77.2558, -6.37908, 0.15 ) }
    dend_26 { pt3dadd( 20.9886, 78.2013, -6.72331, 0.74 ) }
    dend_26 { pt3dadd( 20.853, 79.0903, -7.03359, 0.22 ) }
    dend_26 { pt3dadd( 20.6423, 80.0793, -7.36229, 0.22 ) }
    dend_26 { pt3dadd( 20.4656, 80.7086, -7.54909, 0.22 ) }
    dend_26 { pt3dadd( 20.0985, 81.8408, -7.85325, 0.96 ) }
    dend_26 { pt3dadd( 19.7829, 82.7886, -8.07569, 0.96 ) }
    dend_26 { pt3dadd( 19.5969, 83.3725, -8.17954, 0.15 ) }
    dend_26 { pt3dadd( 19.3819, 84.0186, -8.28037, 0.15 ) }
    dend_26 { pt3dadd( 19.1624, 84.6173, -8.36486, 0.15 ) }
    dend_26 { pt3dadd( 18.9017, 85.3353, -8.47197, 0.44 ) }
    dend_26 { pt3dadd( 18.7836, 85.6898, -8.52967, 0.44 ) }
    dend_26 { pt3dadd( 18.3189, 87.191, -8.74524, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_26 { pt3dadd( 18.0819, 88.0151, -8.82188, 0.22 ) }
    dend_26 { pt3dadd( 17.8586, 88.784, -8.857, 0.22 ) }
    dend_26 { pt3dadd( 17.6722, 89.3045, -8.8417, 0.59 ) }
    dend_26 { pt3dadd( 17.3981, 89.9334, -8.78159, 0.74 ) }
    dend_26 { pt3dadd( 16.9903, 90.7596, -8.66421, 0.22 ) }
    dend_26 { pt3dadd( 16.6244, 91.4478, -8.5287, 0.22 ) }
    dend_26 { pt3dadd( 16.2973, 92.1075, -8.377, 0.88 ) }
    dend_26 { pt3dadd( 15.6224, 93.6105, -8.02875, 0.15 ) }
    dend_26 { pt3dadd( 15.2801, 94.4347, -7.85798, 0.15 ) }
    dend_26 { pt3dadd( 14.8959, 95.402, -7.68958, 0.15 ) }
    dend_26 { pt3dadd( 14.5685, 96.2108, -7.58533, 0.66 ) }
    dend_26 { pt3dadd( 14.0925, 97.2523, -7.45449, 0.07 ) }
    dend_26 { pt3dadd( 13.8137, 97.828, -7.37147, 0.15 ) }
    dend_26 { pt3dadd( 13.4986, 98.434, -7.27334, 0.15 ) }
    dend_26 { pt3dadd( 13.1886, 98.9201, -7.17565, 0.15 ) }
    dend_26 { pt3dadd( 12.647, 99.5186, -7.02809, 0.22 ) }
    dend_26 { pt3dadd( 11.6836, 100.259, -6.83382, 0.07 ) }
    dend_26 { pt3dadd( 11.4038, 100.426, -6.79277, 0.07 ) }
    dend_26 { pt3dadd( 10.6725, 100.861, -6.71149, 0.07 ) }
    dend_26 { pt3dadd( 10.2479, 101.114, -6.68964, 0.52 ) }
    dend_26 { pt3dadd( 9.72775, 101.439, -6.68799, 0.96 ) }
    dend_26 { pt3dadd( 9.27511, 101.737, -6.70489, 0.96 ) }
    dend_26 { pt3dadd( 8.41763, 102.353, -6.79678, 0.52 ) }
    dend_26 { pt3dadd( 7.48673, 103.023, -6.93211, 0.22 ) }
    dend_26 { pt3dadd( 6.76641, 103.558, -7.07968, 0.29 ) }
    dend_26 { pt3dadd( 6.11281, 104.075, -7.2439, 0.74 ) }
    dend_26 { pt3dadd( 5.46578, 104.617, -7.45166, 0.22 ) }
    dend_26 { pt3dadd( 4.72347, 105.217, -7.72844, 0.15 ) }
    dend_26 { pt3dadd( 4.0967, 105.677, -7.98801, 0.15 ) }
    dend_26 { pt3dadd( 3.28428, 106.222, -8.34205, 0.15 ) }
    dend_26 { pt3dadd( 2.77898, 106.552, -8.56308, 0.59 ) }
    dend_26 { pt3dadd( 2.09129, 106.991, -8.9034, 0.15 ) }
    dend_26 { pt3dadd( 1.41127, 107.409, -9.25847, 0.15 ) }
    dend_26 { pt3dadd( 0.940949, 107.694, -9.52444, 0.15 ) }
    dend_26 { pt3dadd( 0.428066, 108.024, -9.86661, 0.37 ) }
    dend_26 { pt3dadd( -0.116954, 108.393, -10.2708, 0.22 ) }
    dend_26 { pt3dadd( -0.662554, 108.797, -10.7511, 0.22 ) }
    dend_26 { pt3dadd( -1.26156, 109.31, -11.3594, 1.03 ) }
    dend_26 { pt3dadd( -1.89283, 109.944, -12.0785, 0.22 ) }
    dend_26 { pt3dadd( -2.38333, 110.462, -12.6564, 0.52 ) }
    dend_26 { pt3dadd( -2.69253, 110.775, -13.0103, 0.74 ) }
    dend_26 { pt3dadd( -3.34884, 111.381, -13.6703, 0.22 ) }
    dend_26 { pt3dadd( -3.71964, 111.703, -13.9759, 0.22 ) }
    dend_26 { pt3dadd( -4.16621, 112.108, -14.2964, 0.22 ) }
    dend_26 { pt3dadd( -4.69085, 112.656, -14.6249, 0.22 ) }
    dend_26 { pt3dadd( -4.92301, 112.954, -14.7698, 0.22 ) }
    dend_26 { pt3dadd( -5.34966, 113.583, -15.0505, 0.22 ) }
    dend_26 { pt3dadd( -5.65112, 114.056, -15.2522, 0.74 ) }
    dend_26 { pt3dadd( -5.95639, 114.54, -15.4738, 0.15 ) }
    dend_26 { pt3dadd( -6.35836, 115.161, -15.7527, 0.15 ) }
    dend_26 { pt3dadd( -6.80417, 115.85, -16.0617, 0.15 ) }
    dend_26 { pt3dadd( -7.11574, 116.321, -16.2472, 0.15 ) }
    dend_26 { pt3dadd( -7.45696, 116.838, -16.4071, 0.74 ) }
    dend_26 { pt3dadd( -7.89534, 117.501, -16.5608, 0.96 ) }
    dend_26 { pt3dadd( -8.81778, 118.909, -16.778, 0.15 ) }
    dend_26 { pt3dadd( -9.01868, 119.234, -16.8013, 0.15 ) }
    dend_26 { pt3dadd( -9.46794, 120.08, -16.8128, 0.37 ) }
    dend_26 { pt3dadd( -10.0619, 121.394, -16.7416, 0.15 ) }
    dend_26 { pt3dadd( -10.3134, 122.006, -16.6604, 0.22 ) }
    dend_26 { pt3dadd( -10.4733, 122.418, -16.5819, 0.22 ) }
    dend_26 { pt3dadd( -10.7767, 123.273, -16.3503, 0.81 ) }
    dend_26 { pt3dadd( -11.0149, 123.96, -16.1296, 0.29 ) }
    dend_26 { pt3dadd( -11.2796, 124.733, -15.8468, 0.07 ) }
    dend_26 { pt3dadd( -11.614, 125.595, -15.4662, 0.07 ) }
    dend_26 { pt3dadd( -11.8475, 126.11, -15.234, 0.52 ) }
    dend_26 { pt3dadd( -12.1896, 126.816, -14.9292, 0.15 ) }
    dend_26 { pt3dadd( -12.4589, 127.335, -14.7266, 0.15 ) }
    dend_26 { pt3dadd( -12.6481, 127.674, -14.6159, 0.15 ) }
    dend_26 { pt3dadd( -12.9544, 128.286, -14.5063, 0.59 ) }
    dend_26 { pt3dadd( -13.3176, 129.124, -14.4458, 0.15 ) }
    dend_26 { pt3dadd( -13.5338, 129.614, -14.4514, 0.29 ) }
    dend_26 { pt3dadd( -13.8051, 130.13, -14.5052, 0.15 ) }
    dend_26 { pt3dadd( -14.2621, 130.855, -14.6131, 0.15 ) }
    dend_26 { pt3dadd( -14.7833, 131.593, -14.7446, 0.22 ) }
    dend_26 { pt3dadd( -15.0063, 131.911, -14.8029, 0.22 ) }
    dend_26 { pt3dadd( -15.374, 132.453, -14.8946, 0.22 ) }
    dend_26 { pt3dadd( -15.7906, 133.061, -14.9837, 0.66 ) }
    dend_26 { pt3dadd( -16.2351, 133.721, -15.062, 0.74 ) }
    dend_26 { pt3dadd( -16.8015, 134.617, -15.139, 0.15 ) }
    dend_26 { pt3dadd( -17.181, 135.268, -15.1615, 0.15 ) }
    dend_26 { pt3dadd( -17.5864, 136.198, -15.1502, 0.15 ) }
    dend_26 { pt3dadd( -17.8275, 136.857, -15.1292, 0.22 ) }
    dend_26 { pt3dadd( -18.0228, 137.542, -15.1029, 0.07 ) }
    dend_26 { pt3dadd( -18.1912, 138.353, -15.0638, 0.07 ) }
    dend_26 { pt3dadd( -18.2637, 138.936, -15.026, 0.15 ) }
    dend_26 { pt3dadd( -18.3577, 140.329, -14.9026, 0.07 ) }
    dend_26 { pt3dadd( -21.1655, 149.775, -17.5819, 0.07 ) }
    dend_26 { pt3dadd( -24.3897, 159.455, -18.2381, 0.07 ) }
    dend_26 { pt3dadd( -26.7076, 169.389, -19.0656, 0.07 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 89/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 32.788, -8.05692, -15.772, 0.37 ) }
    dend_19 { pt3dadd( 33.2603, -9.00123, -16.5437, 0.37 ) }
    dend_19 { pt3dadd( 33.5798, -9.64589, -17.0997, 0.44 ) }
    dend_19 { pt3dadd( 33.9481, -10.3306, -17.7511, 0.44 ) }
    dend_19 { pt3dadd( 34.3745, -11.0295, -18.5137, 0.81 ) }
    dend_19 { pt3dadd( 34.8862, -11.7574, -19.4575, 1.03 ) }
    dend_19 { pt3dadd( 35.3585, -12.3243, -20.3499, 1.18 ) }
    dend_19 { pt3dadd( 35.796, -12.7744, -21.2691, 0.44 ) }
    dend_19 { pt3dadd( 36.1111, -12.9597, -21.8841, 0.81 ) }
    dend_19 { pt3dadd( 36.6305, -12.9289, -22.5939, 1.11 ) }
    dend_19 { pt3dadd( 37.3104, -12.5981, -23.1336, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_19 { pt3dadd( 37.933, -12.2187, -23.4681, 0.74 ) }
    dend_19 { pt3dadd( 38.7645, -11.7306, -23.8626, 0.15 ) }
    dend_19 { pt3dadd( 39.6006, -11.2937, -24.2673, 0.44 ) }
    dend_19 { pt3dadd( 40.474, -10.9046, -24.647, 0.22 ) }
    dend_19 { pt3dadd( 41.2267, -10.6502, -24.9543, 0.59 ) }
    dend_19 { pt3dadd( 42.2432, -10.4092, -25.3882, 0.74 ) }
    dend_19 { pt3dadd( 43.4627, -10.2293, -26.0628, 1.25 ) }
    dend_19 { pt3dadd( 44.1386, -10.1722, -26.6073, 1.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 8/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 32.788, -8.05692, -15.772, 0.29 ) }
    dend_16 { pt3dadd( 34.0214, -8.33649, -15.0404, 0.29 ) }
    dend_16 { pt3dadd( 35.287, -8.62335, -14.2897, 0.29 ) }
    dend_16 { pt3dadd( 36.4442, -8.88566, -13.6033, 0.81 ) }
    dend_16 { pt3dadd( 37.4752, -9.11934, -12.9918, 0.96 ) }
    dend_16 { pt3dadd( 38.3665, -9.32138, -12.4631, 0.88 ) }
    dend_16 { pt3dadd( 39.234, -9.51802, -11.9486, 0.74 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 15/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -39.6179, 69.0828, -17.9283, 0.66 ) }
    dend_10 { pt3dadd( -40.7027, 68.8612, -17.5662, 0.66 ) }
    dend_10 { pt3dadd( -42.186, 68.5564, -17.1648, 0.44 ) }
    dend_10 { pt3dadd( -42.9646, 68.3908, -16.9909, 0.44 ) }
    dend_10 { pt3dadd( -44.1052, 68.122, -16.7853, 0.59 ) }
    dend_10 { pt3dadd( -45.111, 67.8904, -16.6416, 0.74 ) }
    dend_10 { pt3dadd( -46.1413, 67.6806, -16.5177, 0.44 ) }
    dend_10 { pt3dadd( -47.0933, 67.5161, -16.4878, 0.44 ) }
    dend_10 { pt3dadd( -47.732, 67.4491, -16.522, 0.22 ) }
    dend_10 { pt3dadd( -48.7505, 67.4065, -16.5959, 0.15 ) }
    dend_10 { pt3dadd( -49.256, 67.462, -16.6468, 0.15 ) }
    dend_10 { pt3dadd( -49.9002, 67.6483, -16.7234, 0.29 ) }
    dend_10 { pt3dadd( -50.5919, 67.9282, -16.7759, 0.15 ) }
    dend_10 { pt3dadd( -51.0427, 68.1411, -16.762, 0.15 ) }
    dend_10 { pt3dadd( -51.3174, 68.2781, -16.7222, 0.15 ) }
    dend_10 { pt3dadd( -52.0555, 68.6261, -16.5656, 0.88 ) }
    dend_10 { pt3dadd( -53.0383, 68.9931, -16.3273, 0.74 ) }
    dend_10 { pt3dadd( -54.3301, 69.3409, -16.0175, 0.29 ) }
    dend_10 { pt3dadd( -55.3484, 69.5223, -15.8117, 0.22 ) }
    dend_10 { pt3dadd( -55.9627, 69.5746, -15.7161, 0.22 ) }
    dend_10 { pt3dadd( -56.4002, 69.5804, -15.6699, 0.22 ) }
    dend_10 { pt3dadd( -56.9382, 69.5526, -15.6183, 0.66 ) }
    dend_10 { pt3dadd( -57.7678, 69.4488, -15.5401, 1.03 ) }
    dend_10 { pt3dadd( -59.1066, 69.1614, -15.4379, 0.52 ) }
    dend_10 { pt3dadd( -60.3481, 68.8347, -15.363, 0.37 ) }
    dend_10 { pt3dadd( -61.004, 68.671, -15.3108, 0.22 ) }
    dend_10 { pt3dadd( -61.928, 68.4958, -15.1753, 0.15 ) }
    dend_10 { pt3dadd( -62.6942, 68.3667, -15.0301, 0.15 ) }
    dend_10 { pt3dadd( -63.2631, 68.2937, -14.8742, 0.15 ) }
    dend_10 { pt3dadd( -63.5059, 68.2828, -14.7653, 0.81 ) }
    dend_10 { pt3dadd( -64.2114, 68.3727, -14.3323, 1.11 ) }
    dend_10 { pt3dadd( -64.9248, 68.5559, -13.864, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 47/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -39.6179, 69.0828, -17.9283, 0.88 ) }
    dend_9 { pt3dadd( -39.5343, 70.2373, -17.8587, 0.88 ) }
    dend_9 { pt3dadd( -39.4261, 71.073, -17.8124, 0.29 ) }
    dend_9 { pt3dadd( -39.3051, 71.9281, -17.6239, 0.29 ) }
    dend_9 { pt3dadd( -39.2471, 72.54, -17.4198, 0.29 ) }
    dend_9 { pt3dadd( -39.2201, 73.294, -17.1104, 0.88 ) }
    dend_9 { pt3dadd( -39.2322, 73.5651, -16.992, 0.88 ) }
    dend_9 { pt3dadd( -39.3476, 74.496, -16.5184, 0.74 ) }
    dend_9 { pt3dadd( -39.5777, 76.2162, -15.5746, 0.52 ) }
    dend_9 { pt3dadd( -39.7193, 77.2855, -14.9705, 0.37 ) }
    dend_9 { pt3dadd( -39.8442, 77.9738, -14.5802, 0.37 ) }
    dend_9 { pt3dadd( -40.0963, 78.9697, -14.0279, 0.37 ) }
    dend_9 { pt3dadd( -40.2567, 79.5, -13.7639, 0.29 ) }
    dend_9 { pt3dadd( -40.6432, 80.6455, -13.3038, 0.66 ) }
    dend_9 { pt3dadd( -40.8028, 81.1521, -13.1814, 0.22 ) }
    dend_9 { pt3dadd( -40.9922, 81.793, -13.0605, 0.22 ) }
    dend_9 { pt3dadd( -41.2281, 82.5531, -12.9471, 0.44 ) }
    dend_9 { pt3dadd( -41.4295, 83.2935, -12.8588, 0.15 ) }
    dend_9 { pt3dadd( -41.6488, 83.9671, -12.7956, 0.29 ) }
    dend_9 { pt3dadd( -41.873, 84.5375, -12.7402, 0.15 ) }
    dend_9 { pt3dadd( -42.047, 84.9753, -12.6821, 0.15 ) }
    dend_9 { pt3dadd( -42.3958, 85.8075, -12.5293, 0.96 ) }
    dend_9 { pt3dadd( -43.1187, 87.3536, -12.1696, 0.15 ) }
    dend_9 { pt3dadd( -43.5561, 88.2411, -11.9265, 0.22 ) }
    dend_9 { pt3dadd( -44.0039, 89.1045, -11.6751, 0.22 ) }
    dend_9 { pt3dadd( -44.3589, 89.7909, -11.4555, 0.59 ) }
    dend_9 { pt3dadd( -44.8354, 90.7092, -11.1287, 0.37 ) }
    dend_9 { pt3dadd( -45.4437, 91.8439, -10.6619, 0.74 ) }
    dend_9 { pt3dadd( -46.1946, 93.176, -10.0391, 0.74 ) }
    dend_9 { pt3dadd( -46.8843, 94.5177, -9.40104, 0.22 ) }
    dend_9 { pt3dadd( -47.1694, 95.1533, -9.1065, 0.74 ) }
    dend_9 { pt3dadd( -47.3651, 95.6714, -8.88354, 1.03 ) }
    dend_9 { pt3dadd( -47.767, 96.9674, -8.36965, 0.22 ) }
    dend_9 { pt3dadd( -47.9596, 97.7423, -8.08787, 0.22 ) }
    dend_9 { pt3dadd( -48.0899, 98.449, -7.87374, 0.81 ) }
    dend_9 { pt3dadd( -48.1813, 99.2273, -7.6901, 0.81 ) }
    dend_9 { pt3dadd( -48.3419, 100.889, -7.41831, 0.15 ) }
    dend_9 { pt3dadd( -48.4261, 101.603, -7.34525, 0.37 ) }
    dend_9 { pt3dadd( -48.5662, 102.45, -7.3047, 0.15 ) }
    dend_9 { pt3dadd( -48.7714, 103.411, -7.27946, 0.22 ) }
    dend_9 { pt3dadd( -48.9014, 103.94, -7.2663, 0.37 ) }
    dend_9 { pt3dadd( -49.0578, 104.528, -7.24158, 0.74 ) }
    dend_9 { pt3dadd( -49.4094, 105.921, -7.13667, 0.29 ) }
    dend_9 { pt3dadd( -49.6555, 106.977, -7.02913, 0.22 ) }
    dend_9 { pt3dadd( -49.8178, 107.715, -6.9436, 0.22 ) }
    dend_9 { pt3dadd( -49.9998, 108.601, -6.83005, 0.37 ) }
    dend_9 { pt3dadd( -50.1395, 109.427, -6.71479, 0.22 ) }
    dend_9 { pt3dadd( -50.2636, 110.545, -6.54322, 0.22 ) }
    dend_9 { pt3dadd( -50.2877, 111.608, -6.36112, 0.81 ) }
    dend_9 { pt3dadd( -50.28, 113.049, -6.09914, 0.22 ) }
    dend_9 { pt3dadd( -51.3165, 122.753, -3.04882, 0.22 ) }
    dend_9 { pt3dadd( -52.2408, 132.489, -0.0645092, 0.22 ) }
    dend_9 { pt3dadd( -54.8165, 141.306, 4.33681, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_9 { pt3dadd( -56.5924, 149.651, 9.86588, 0.22 ) }
    dend_9 { pt3dadd( -58.9339, 158.704, 13.9282, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 2/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -30.2133, -10.2375, 4.12356, 0.07 ) }
    dend_5 { pt3dadd( -30.7568, -11.1993, 5.01245, 0.07 ) }
    dend_5 { pt3dadd( -31.0238, -11.7043, 5.48967, 0.59 ) }
    dend_5 { pt3dadd( -31.3712, -12.3644, 6.09493, 0.07 ) }
    dend_5 { pt3dadd( -31.6448, -12.8628, 6.53488, 0.29 ) }
    dend_5 { pt3dadd( -31.8794, -13.2859, 6.89706, 0.29 ) }
    dend_5 { pt3dadd( -32.3513, -14.0792, 7.57918, 0.15 ) }
    dend_5 { pt3dadd( -32.6889, -14.5757, 8.06408, 0.22 ) }
    dend_5 { pt3dadd( -33.1228, -15.1859, 8.72842, 0.88 ) }
    dend_5 { pt3dadd( -33.546, -15.7798, 9.39567, 0.22 ) }
    dend_5 { pt3dadd( -33.9158, -16.3041, 9.99368, 0.37 ) }
    dend_5 { pt3dadd( -34.3821, -16.9184, 10.669, 0.59 ) }
    dend_5 { pt3dadd( -34.9879, -17.6377, 11.4578, 0.22 ) }
    dend_5 { pt3dadd( -35.5941, -18.3026, 12.1941, 0.22 ) }
    dend_5 { pt3dadd( -35.966, -18.6964, 12.6134, 0.22 ) }
    dend_5 { pt3dadd( -36.2495, -19.0066, 12.9102, 0.22 ) }
    dend_5 { pt3dadd( -37.0377, -19.8215, 13.5912, 0.15 ) }
    dend_5 { pt3dadd( -37.5341, -20.2901, 13.946, 0.15 ) }
    dend_5 { pt3dadd( -38.1919, -20.8301, 14.3388, 0.59 ) }
    dend_5 { pt3dadd( -39.1737, -21.5556, 14.9011, 0.15 ) }
    dend_5 { pt3dadd( -39.847, -22.009, 15.3147, 0.59 ) }
    dend_5 { pt3dadd( -40.6591, -22.5114, 15.8775, 0.07 ) }
    dend_5 { pt3dadd( -41.5147, -23.0214, 16.5133, 0.15 ) }
    dend_5 { pt3dadd( -42.027, -23.3181, 16.8996, 0.66 ) }
    dend_5 { pt3dadd( -42.8987, -23.7961, 17.5827, 0.29 ) }
    dend_5 { pt3dadd( -43.7979, -24.2056, 18.3054, 0.29 ) }
    dend_5 { pt3dadd( -44.6958, -24.5895, 19.0824, 0.29 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 29/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -30.2133, -10.2375, 4.12356, 0.22 ) }
    dend_4 { pt3dadd( -30.9722, -10.9154, 4.32752, 0.22 ) }
    dend_4 { pt3dadd( -31.8032, -11.6889, 4.54685, 0.22 ) }
    dend_4 { pt3dadd( -32.4678, -12.392, 4.72161, 0.22 ) }
    dend_4 { pt3dadd( -32.942, -12.9487, 4.86961, 0.15 ) }
    dend_4 { pt3dadd( -33.3922, -13.4887, 5.03655, 0.15 ) }
    dend_4 { pt3dadd( -33.8254, -14.0201, 5.20575, 0.59 ) }
    dend_4 { pt3dadd( -34.0912, -14.3875, 5.32444, 0.66 ) }
    dend_4 { pt3dadd( -34.5333, -15.054, 5.53092, 0.29 ) }
    dend_4 { pt3dadd( -34.9794, -15.7899, 5.78027, 0.22 ) }
    dend_4 { pt3dadd( -35.4661, -16.6858, 6.0948, 0.22 ) }
    dend_4 { pt3dadd( -35.8585, -17.4752, 6.3616, 0.59 ) }
    dend_4 { pt3dadd( -36.1615, -18.1341, 6.57973, 0.59 ) }
    dend_4 { pt3dadd( -36.5002, -18.9423, 6.83571, 0.22 ) }
    dend_4 { pt3dadd( -36.7796, -19.6829, 7.06663, 0.22 ) }
    dend_4 { pt3dadd( -36.9838, -20.3077, 7.25554, 0.74 ) }
    dend_4 { pt3dadd( -37.1618, -20.9582, 7.47819, 0.74 ) }
    dend_4 { pt3dadd( -37.3996, -21.8312, 7.85202, 0.59 ) }
    dend_4 { pt3dadd( -37.5746, -22.439, 8.15096, 0.37 ) }
    dend_4 { pt3dadd( -37.812, -23.1968, 8.53096, 0.22 ) }
    dend_4 { pt3dadd( -38.1221, -24.0151, 8.96007, 0.59 ) }
    dend_4 { pt3dadd( -38.5121, -24.8691, 9.42721, 0.52 ) }
    dend_4 { pt3dadd( -38.853, -25.4732, 9.77165, 0.52 ) }
    dend_4 { pt3dadd( -39.2226, -26.0333, 10.0912, 0.52 ) }
    dend_4 { pt3dadd( -39.9134, -27.0156, 10.6044, 0.22 ) }
    dend_4 { pt3dadd( -40.3748, -27.6899, 10.8896, 0.66 ) }
    dend_4 { pt3dadd( -40.6904, -28.173, 11.0393, 0.66 ) }
    dend_4 { pt3dadd( -41.0758, -28.7601, 11.1834, 0.22 ) }
    dend_4 { pt3dadd( -41.515, -29.4405, 11.337, 0.22 ) }
    dend_4 { pt3dadd( -41.7624, -29.811, 11.4193, 0.22 ) }
    dend_4 { pt3dadd( -42.3091, -30.598, 11.6144, 0.74 ) }
    dend_4 { pt3dadd( -42.9013, -31.3958, 11.8328, 0.22 ) }
    dend_4 { pt3dadd( -43.7567, -32.4387, 12.1548, 0.15 ) }
    dend_4 { pt3dadd( -44.3926, -33.0834, 12.3887, 0.81 ) }
    dend_4 { pt3dadd( -45.576, -33.9334, 12.816, 0.07 ) }
    dend_4 { pt3dadd( -46.3535, -34.302, 13.103, 0.22 ) }
    dend_4 { pt3dadd( -47.0546, -34.456, 13.3447, 0.59 ) }
    dend_4 { pt3dadd( -47.6205, -34.4536, 13.5116, 0.81 ) }
    dend_4 { pt3dadd( -48.679, -34.2253, 13.7303, 0.22 ) }
    dend_4 { pt3dadd( -50.1638, -33.6574, 13.8942, 0.15 ) }
    dend_4 { pt3dadd( -51.0158, -33.1965, 13.9013, 0.81 ) }
    dend_4 { pt3dadd( -52.2444, -32.3496, 13.7398, 0.22 ) }
    dend_4 { pt3dadd( -53.1195, -31.5998, 13.4745, 0.66 ) }
    dend_4 { pt3dadd( -53.7635, -30.9166, 13.1649, 0.22 ) }
    dend_4 { pt3dadd( -54.2668, -30.2455, 12.79, 0.22 ) }
    dend_4 { pt3dadd( -54.6143, -29.6767, 12.4154, 0.59 ) }
    dend_4 { pt3dadd( -55.0656, -28.7518, 11.7848, 0.15 ) }
    dend_4 { pt3dadd( -55.4055, -27.8762, 11.1985, 0.15 ) }
    dend_4 { pt3dadd( -55.5816, -27.3956, 10.8759, 0.66 ) }
    dend_4 { pt3dadd( -55.8051, -26.7946, 10.4725, 0.66 ) }
    dend_4 { pt3dadd( -56.1218, -26.0045, 9.94074, 0.15 ) }
    dend_4 { pt3dadd( -56.4479, -25.3443, 9.48101, 0.15 ) }
    dend_4 { pt3dadd( -56.7529, -24.8961, 9.19216, 0.52 ) }
    dend_4 { pt3dadd( -57.4093, -24.2309, 8.85875, 0.15 ) }
    dend_4 { pt3dadd( -58.1218, -23.8052, 8.75259, 0.22 ) }
    dend_4 { pt3dadd( -58.5362, -23.6557, 8.77277, 0.59 ) }
    dend_4 { pt3dadd( -59.2109, -23.5238, 8.90256, 0.59 ) }
    dend_4 { pt3dadd( -60.4976, -23.4104, 9.2567, 0.15 ) }
    dend_4 { pt3dadd( -61.9317, -23.4086, 9.75197, 0.66 ) }
    dend_4 { pt3dadd( -63.6999, -23.5296, 10.4883, 0.15 ) }
    dend_4 { pt3dadd( -64.6427, -23.6604, 10.9245, 0.59 ) }
    dend_4 { pt3dadd( -66.0597, -23.9881, 11.6131, 0.15 ) }
    dend_4 { pt3dadd( -66.8989, -24.3094, 12.0233, 0.22 ) }
    dend_4 { pt3dadd( -67.5387, -24.6637, 12.3208, 0.22 ) }
    dend_4 { pt3dadd( -67.9916, -24.9905, 12.5308, 0.52 ) }
    dend_4 { pt3dadd( -68.4362, -25.3913, 12.7351, 0.22 ) }
    dend_4 { pt3dadd( -69.0536, -26.011, 12.9819, 0.81 ) }
    dend_4 { pt3dadd( -70.2102, -27.2354, 13.3267, 0.07 ) }
    dend_4 { pt3dadd( -70.7214, -27.7105, 13.4208, 0.22 ) }
    dend_4 { pt3dadd( -71.2158, -28.0929, 13.4667, 0.07 ) }
    dend_4 { pt3dadd( -71.8284, -28.4964, 13.4835, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_4 { pt3dadd( -72.6981, -29.0065, 13.472, 0.07 ) }
    dend_4 { pt3dadd( -73.0302, -29.1771, 13.4516, 0.44 ) }
    dend_4 { pt3dadd( -74.7382, -29.9393, 13.3009, 0.15 ) }
    dend_4 { pt3dadd( -75.4409, -30.2372, 13.2196, 0.37 ) }
    dend_4 { pt3dadd( -76.5407, -30.6764, 13.0525, 0.07 ) }
    dend_4 { pt3dadd( -77.3091, -30.9624, 12.9246, 0.22 ) }
    dend_4 { pt3dadd( -78.3936, -31.3602, 12.7248, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 7/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 102.271, 150.887, 27.5289, 0.52 ) }
    dend_29 { pt3dadd( 102.707, 151.635, 27.6747, 0.52 ) }
    dend_29 { pt3dadd( 103.563, 152.945, 27.967, 0.22 ) }
    dend_29 { pt3dadd( 104.056, 153.655, 28.1762, 0.66 ) }
    dend_29 { pt3dadd( 104.339, 154.031, 28.3292, 0.96 ) }
    dend_29 { pt3dadd( 104.97, 154.841, 28.7024, 0.22 ) }
    dend_29 { pt3dadd( 105.477, 155.51, 29.0204, 0.22 ) }
    dend_29 { pt3dadd( 106.165, 156.401, 29.454, 0.52 ) }
    dend_29 { pt3dadd( 106.582, 156.921, 29.6914, 0.96 ) }
    dend_29 { pt3dadd( 107.567, 158.166, 30.1684, 0.52 ) }
    dend_29 { pt3dadd( 108.457, 159.239, 30.4908, 0.22 ) }
    dend_29 { pt3dadd( 109.056, 159.921, 30.6374, 0.66 ) }
    dend_29 { pt3dadd( 110.012, 160.868, 30.7311, 0.15 ) }
    dend_29 { pt3dadd( 110.61, 161.376, 30.7198, 0.15 ) }
    dend_29 { pt3dadd( 111.295, 161.87, 30.6558, 0.44 ) }
    dend_29 { pt3dadd( 112.427, 162.545, 30.4946, 0.15 ) }
    dend_29 { pt3dadd( 113.137, 162.884, 30.3968, 0.74 ) }
    dend_29 { pt3dadd( 115.23, 163.706, 30.1646, 0.15 ) }
    dend_29 { pt3dadd( 115.859, 163.934, 30.1067, 0.59 ) }
    dend_29 { pt3dadd( 116.888, 164.33, 30.0221, 0.15 ) }
    dend_29 { pt3dadd( 117.257, 164.482, 29.9866, 0.22 ) }
    dend_29 { pt3dadd( 117.928, 164.794, 29.9155, 0.15 ) }
    dend_29 { pt3dadd( 118.971, 165.343, 29.7452, 0.66 ) }
    dend_29 { pt3dadd( 120.123, 166.05, 29.4758, 0.15 ) }
    dend_29 { pt3dadd( 120.977, 166.645, 29.2482, 0.37 ) }
    dend_29 { pt3dadd( 121.533, 167.061, 29.0472, 0.07 ) }
    dend_29 { pt3dadd( 121.926, 167.362, 28.8657, 0.22 ) }
    dend_29 { pt3dadd( 122.878, 168.112, 28.2837, 0.07 ) }
    dend_29 { pt3dadd( 123.425, 168.517, 27.8609, 0.59 ) }
    dend_29 { pt3dadd( 124.041, 168.943, 27.2405, 0.07 ) }
    dend_29 { pt3dadd( 124.861, 169.469, 26.2082, 0.15 ) }
    dend_29 { pt3dadd( 125.243, 169.694, 25.6618, 0.37 ) }
    dend_29 { pt3dadd( 125.871, 170.01, 24.6454, 0.22 ) }
    dend_29 { pt3dadd( 126.346, 170.235, 23.7637, 0.52 ) }
    dend_29 { pt3dadd( 126.984, 170.519, 22.4582, 0.22 ) }
    dend_29 { pt3dadd( 127.296, 170.654, 21.7825, 0.22 ) }
    dend_29 { pt3dadd( 127.5, 170.744, 21.3565, 0.44 ) }
    dend_29 { pt3dadd( 128.007, 170.981, 20.2217, 0.22 ) }
    dend_29 { pt3dadd( 128.417, 171.199, 19.1829, 0.22 ) }
    dend_29 { pt3dadd( 128.795, 171.461, 18.0812, 0.22 ) }
    dend_29 { pt3dadd( 128.976, 171.598, 17.5355, 0.37 ) }
    dend_29 { pt3dadd( 129.113, 171.72, 17.0714, 0.37 ) }
    dend_29 { pt3dadd( 129.317, 171.946, 16.2252, 0.22 ) }
    dend_29 { pt3dadd( 129.418, 172.084, 15.7194, 0.37 ) }
    dend_29 { pt3dadd( 129.509, 172.21, 15.2764, 0.37 ) }
    dend_29 { pt3dadd( 129.603, 172.412, 14.6715, 0.37 ) }
    dend_29 { pt3dadd( 129.643, 172.569, 14.2473, 0.37 ) }
    dend_29 { pt3dadd( 129.672, 172.899, 13.5161, 0.22 ) }
    dend_29 { pt3dadd( 129.64, 173.714, 12.1622, 0.44 ) }
    dend_29 { pt3dadd( 129.542, 174.3, 11.3864, 0.59 ) }
    dend_29 { pt3dadd( 129.353, 175.121, 10.3819, 0.15 ) }
    dend_29 { pt3dadd( 129.166, 175.736, 9.71412, 0.37 ) }
    dend_29 { pt3dadd( 128.831, 176.623, 8.86604, 0.07 ) }
    dend_29 { pt3dadd( 128.354, 177.653, 8.07565, 0.07 ) }
    dend_29 { pt3dadd( 128.185, 177.953, 7.9188, 0.15 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 62/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 102.271, 150.887, 27.5289, 0.15 ) }
    dend_28 { pt3dadd( 103.727, 150.462, 28.2387, 0.15 ) }
    dend_28 { pt3dadd( 104.889, 150.067, 28.8064, 0.15 ) }
    dend_28 { pt3dadd( 105.829, 149.71, 29.2678, 0.37 ) }
    dend_28 { pt3dadd( 106.571, 149.395, 29.6176, 0.37 ) }
    dend_28 { pt3dadd( 107.917, 148.804, 30.2486, 0.15 ) }
    dend_28 { pt3dadd( 109.415, 148.15, 30.9569, 0.15 ) }
    dend_28 { pt3dadd( 110.013, 147.874, 31.2556, 0.15 ) }
    dend_28 { pt3dadd( 110.684, 147.561, 31.5676, 0.15 ) }
    dend_28 { pt3dadd( 111.518, 147.184, 31.957, 0.66 ) }
    dend_28 { pt3dadd( 113.084, 146.506, 32.6755, 0.07 ) }
    dend_28 { pt3dadd( 114.11, 146.07, 33.1611, 0.07 ) }
    dend_28 { pt3dadd( 114.571, 145.886, 33.3606, 0.07 ) }
    dend_28 { pt3dadd( 115.171, 145.648, 33.6325, 0.52 ) }
    dend_28 { pt3dadd( 115.856, 145.361, 33.9564, 0.74 ) }
    dend_28 { pt3dadd( 116.91, 144.874, 34.4816, 0.07 ) }
    dend_28 { pt3dadd( 117.979, 144.278, 35.0666, 0.07 ) }
    dend_28 { pt3dadd( 118.715, 143.815, 35.4965, 0.22 ) }
    dend_28 { pt3dadd( 119.448, 143.309, 35.9677, 0.22 ) }
    dend_28 { pt3dadd( 120.693, 142.37, 36.8614, 0.07 ) }
    dend_28 { pt3dadd( 121.633, 141.612, 37.6016, 0.52 ) }
    dend_28 { pt3dadd( 122.983, 140.456, 38.819, 0.15 ) }
    dend_28 { pt3dadd( 123.494, 139.995, 39.359, 0.59 ) }
    dend_28 { pt3dadd( 124.308, 139.238, 40.3458, 0.07 ) }
    dend_28 { pt3dadd( 124.989, 138.579, 41.2229, 0.07 ) }
    dend_28 { pt3dadd( 125.371, 138.201, 41.7696, 0.29 ) }
    dend_28 { pt3dadd( 125.865, 137.705, 42.5609, 0.29 ) }
    dend_28 { pt3dadd( 126.574, 137.017, 43.8162, 0.15 ) }
    dend_28 { pt3dadd( 127.096, 136.53, 44.8396, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 91/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 44.1386, -10.1722, -26.6073, 0.15 ) }
    dend_21 { pt3dadd( 44.1263, -8.9623, -26.7977, 0.15 ) }
    dend_21 { pt3dadd( 44.1842, -8.14272, -26.8765, 0.15 ) }
    dend_21 { pt3dadd( 44.2782, -7.18793, -26.937, 0.81 ) }
    dend_21 { pt3dadd( 44.3537, -6.4129, -26.97, 0.22 ) }
    dend_21 { pt3dadd( 44.4308, -5.58272, -26.9937, 0.15 ) }
    dend_21 { pt3dadd( 44.5115, -4.7679, -27.0092, 0.15 ) }
    dend_21 { pt3dadd( 44.6062, -3.74891, -27.0045, 0.15 ) }
    dend_21 { pt3dadd( 44.7024, -3.30305, -26.9982, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_21 { pt3dadd( 44.9167, -2.71905, -26.991, 0.66 ) }
    dend_21 { pt3dadd( 45.2165, -2.19919, -27.0227, 0.22 ) }
    dend_21 { pt3dadd( 45.6465, -1.6468, -27.1156, 0.22 ) }
    dend_21 { pt3dadd( 45.9012, -1.37313, -27.2, 0.22 ) }
    dend_21 { pt3dadd( 46.644, -0.704541, -27.5522, 0.88 ) }
    dend_21 { pt3dadd( 46.9588, -0.449466, -27.7326, 0.88 ) }
    dend_21 { pt3dadd( 47.6475, 0.0666753, -28.2053, 0.22 ) }
    dend_21 { pt3dadd( 48.1644, 0.460001, -28.6338, 0.22 ) }
    dend_21 { pt3dadd( 48.5809, 0.826475, -29.0521, 0.22 ) }
    dend_21 { pt3dadd( 49.022, 1.29348, -29.574, 0.22 ) }
    dend_21 { pt3dadd( 49.3692, 1.76407, -30.0636, 0.59 ) }
    dend_21 { pt3dadd( 49.7847, 2.52952, -30.7603, 0.88 ) }
    dend_21 { pt3dadd( 50.0408, 3.20717, -31.3169, 0.88 ) }
    dend_21 { pt3dadd( 50.3211, 4.26187, -32.1414, 0.15 ) }
    dend_21 { pt3dadd( 50.379, 4.55903, -32.3574, 0.29 ) }
    dend_21 { pt3dadd( 50.4628, 5.16362, -32.7634, 0.81 ) }
    dend_21 { pt3dadd( 50.5362, 6.28364, -33.4632, 0.22 ) }
    dend_21 { pt3dadd( 50.5339, 7.17166, -33.9773, 0.22 ) }
    dend_21 { pt3dadd( 50.505, 7.84317, -34.3522, 0.22 ) }
    dend_21 { pt3dadd( 50.4678, 8.36502, -34.6567, 0.81 ) }
    dend_21 { pt3dadd( 50.4547, 8.89529, -35.0057, 0.59 ) }
    dend_21 { pt3dadd( 50.5111, 9.47606, -35.5005, 0.59 ) }
    dend_21 { pt3dadd( 53.8607, 18.6779, -38.3618, 0.59 ) }
    dend_21 { pt3dadd( 55.6479, 28.5385, -40.4256, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 24/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 44.1386, -10.1722, -26.6073, 0.29 ) }
    dend_20 { pt3dadd( 45.9158, -11.0981, -25.6833, 0.29 ) }
    dend_20 { pt3dadd( 46.7386, -11.4396, -25.3112, 0.22 ) }
    dend_20 { pt3dadd( 47.4613, -11.3709, -25.2251, 0.22 ) }
    dend_20 { pt3dadd( 47.7477, -11.2811, -25.2536, 0.22 ) }
    dend_20 { pt3dadd( 48.2521, -11.159, -25.3776, 0.44 ) }
    dend_20 { pt3dadd( 48.8908, -11.0977, -25.6046, 0.66 ) }
    dend_20 { pt3dadd( 49.7057, -11.0773, -26.1805, 0.22 ) }
    dend_20 { pt3dadd( 50.0614, -11.1221, -26.4487, 0.22 ) }
    dend_20 { pt3dadd( 50.5321, -11.2997, -26.8008, 0.52 ) }
    dend_20 { pt3dadd( 51.2728, -11.7428, -27.356, 0.81 ) }
    dend_20 { pt3dadd( 51.8826, -12.1503, -27.7999, 0.59 ) }
    dend_20 { pt3dadd( 52.6097, -12.6517, -28.3568, 0.88 ) }
    dend_20 { pt3dadd( 53.1992, -13.0416, -28.8236, 0.96 ) }
    dend_20 { pt3dadd( 53.9901, -13.473, -29.4914, 0.66 ) }
    dend_20 { pt3dadd( 55.1635, -13.9952, -30.5252, 0.22 ) }
    dend_20 { pt3dadd( 56.0223, -14.2893, -31.2911, 0.15 ) }
    dend_20 { pt3dadd( 56.8067, -14.4821, -31.963, 0.15 ) }
    dend_20 { pt3dadd( 57.3966, -14.5653, -32.4489, 1.4 ) }
    dend_20 { pt3dadd( 58.501, -14.5996, -33.2815, 0.22 ) }
    dend_20 { pt3dadd( 59.3488, -14.5554, -33.8303, 0.22 ) }
    dend_20 { pt3dadd( 59.7795, -14.5183, -34.0558, 0.22 ) }
    dend_20 { pt3dadd( 60.6803, -14.534, -34.4062, 0.66 ) }
    dend_20 { pt3dadd( 61.3444, -14.6705, -34.5335, 0.66 ) }
    dend_20 { pt3dadd( 62.1351, -15.1498, -34.5296, 0.22 ) }
    dend_20 { pt3dadd( 62.4879, -15.6787, -34.4282, 0.22 ) }
    dend_20 { pt3dadd( 62.6954, -16.178, -34.3708, 0.22 ) }
    dend_20 { pt3dadd( 62.9937, -16.9816, -34.3435, 0.22 ) }
    dend_20 { pt3dadd( 63.3345, -17.8724, -34.3779, 0.96 ) }
    dend_20 { pt3dadd( 63.693, -18.6385, -34.4432, 1.25 ) }
    dend_20 { pt3dadd( 64.257, -19.5137, -34.5796, 0.22 ) }
    dend_20 { pt3dadd( 64.9918, -20.3187, -34.7625, 0.22 ) }
    dend_20 { pt3dadd( 65.5687, -20.8264, -34.8995, 0.29 ) }
    dend_20 { pt3dadd( 66.1631, -21.269, -35.05, 0.81 ) }
    dend_20 { pt3dadd( 66.9318, -21.7722, -35.2608, 0.88 ) }
    dend_20 { pt3dadd( 67.8854, -22.3241, -35.5139, 1.03 ) }
    dend_20 { pt3dadd( 68.6878, -22.7274, -35.7368, 0.66 ) }
    dend_20 { pt3dadd( 69.7079, -23.2113, -36.0099, 0.22 ) }
    dend_20 { pt3dadd( 70.5131, -23.5656, -36.2261, 0.44 ) }
    dend_20 { pt3dadd( 71.2575, -23.8646, -36.4136, 0.88 ) }
    dend_20 { pt3dadd( 72.104, -24.1813, -36.5962, 0.96 ) }
    dend_20 { pt3dadd( 73.087, -24.5603, -36.7737, 1.55 ) }
    dend_20 { pt3dadd( 74.1563, -25.0109, -36.9533, 0.29 ) }
    dend_20 { pt3dadd( 75.0697, -25.4611, -37.1304, 0.15 ) }
    dend_20 { pt3dadd( 75.681, -25.8992, -37.2665, 0.22 ) }
    dend_20 { pt3dadd( 76.3003, -26.55, -37.4713, 0.66 ) }
    dend_20 { pt3dadd( 77.0214, -27.5583, -37.8179, 0.22 ) }
    dend_20 { pt3dadd( 77.5446, -28.4436, -38.1427, 0.59 ) }
    dend_20 { pt3dadd( 77.9102, -29.1098, -38.4242, 0.88 ) }
    dend_20 { pt3dadd( 78.4695, -30.1089, -38.8801, 0.22 ) }
    dend_20 { pt3dadd( 78.9743, -30.8617, -39.2484, 0.29 ) }
    dend_20 { pt3dadd( 79.48, -31.4366, -39.5385, 0.29 ) }
    dend_20 { pt3dadd( 79.8486, -31.7349, -39.6903, 0.74 ) }
    dend_20 { pt3dadd( 80.6312, -32.1607, -39.9, 1.18 ) }
    dend_20 { pt3dadd( 81.3638, -32.415, -40.0047, 1.25 ) }
    dend_20 { pt3dadd( 82.7116, -32.7041, -40.0961, 0.52 ) }
    dend_20 { pt3dadd( 83.5816, -32.857, -40.1017, 0.22 ) }
    dend_20 { pt3dadd( 84.5957, -33.0422, -40.0742, 0.22 ) }
    dend_20 { pt3dadd( 85.6529, -33.3325, -40.0268, 0.29 ) }
    dend_20 { pt3dadd( 86.7789, -33.7848, -39.9544, 0.22 ) }
    dend_20 { pt3dadd( 87.4614, -34.1529, -39.8982, 1.25 ) }
    dend_20 { pt3dadd( 87.977, -34.5204, -39.8479, 1.03 ) }
    dend_20 { pt3dadd( 88.6442, -35.0736, -39.7797, 1.18 ) }
    dend_20 { pt3dadd( 90.0263, -36.3139, -39.6227, 0.22 ) }
    dend_20 { pt3dadd( 90.6432, -36.8757, -39.5602, 0.22 ) }
    dend_20 { pt3dadd( 90.8911, -37.0677, -39.5411, 0.22 ) }
    dend_20 { pt3dadd( 91.6986, -37.5557, -39.4703, 0.29 ) }
    dend_20 { pt3dadd( 92.5775, -37.972, -39.3842, 0.22 ) }
    dend_20 { pt3dadd( 93.4114, -38.2954, -39.2955, 0.81 ) }
    dend_20 { pt3dadd( 93.8991, -38.4634, -39.2205, 1.11 ) }
    dend_20 { pt3dadd( 95.1287, -38.9146, -39.0284, 0.22 ) }
    dend_20 { pt3dadd( 95.7131, -39.1497, -38.9404, 0.22 ) }
    dend_20 { pt3dadd( 96.4657, -39.4723, -38.8518, 0.88 ) }
    dend_20 { pt3dadd( 96.9478, -39.6872, -38.8163, 0.88 ) }
    dend_20 { pt3dadd( 98.0622, -40.1887, -38.8444, 0.22 ) }
    dend_20 { pt3dadd( 98.7392, -40.5226, -38.9662, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_20 { pt3dadd( 99.3059, -40.8194, -39.1976, 0.88 ) }
    dend_20 { pt3dadd( 100.205, -41.246, -39.772, 1.03 ) }
    dend_20 { pt3dadd( 100.639, -41.4058, -40.1774, 0.59 ) }
    dend_20 { pt3dadd( 101.235, -41.5584, -40.8833, 0.22 ) }
    dend_20 { pt3dadd( 101.927, -41.6565, -41.8694, 0.22 ) }
    dend_20 { pt3dadd( 102.246, -41.6852, -42.3689, 0.22 ) }
    dend_20 { pt3dadd( 102.486, -41.6997, -42.7123, 0.22 ) }
    dend_20 { pt3dadd( 103.09, -41.7395, -43.5232, 0.22 ) }
    dend_20 { pt3dadd( 103.347, -41.7727, -43.837, 0.22 ) }
    dend_20 { pt3dadd( 103.693, -41.845, -44.1909, 0.81 ) }
    dend_20 { pt3dadd( 104.185, -42.0186, -44.6039, 1.18 ) }
    dend_20 { pt3dadd( 105.648, -42.6835, -45.7013, 0.15 ) }
    dend_20 { pt3dadd( 106.188, -42.9638, -46.0679, 0.15 ) }
    dend_20 { pt3dadd( 106.883, -43.3237, -46.5038, 1.03 ) }
    dend_20 { pt3dadd( 107.398, -43.5961, -46.8269, 1.33 ) }
    dend_20 { pt3dadd( 108.551, -44.2144, -47.5231, 0.07 ) }
    dend_20 { pt3dadd( 109.032, -44.4697, -47.8038, 0.22 ) }
    dend_20 { pt3dadd( 109.305, -44.6035, -47.948, 0.22 ) }
    dend_20 { pt3dadd( 110.413, -45.0162, -48.4437, 0.15 ) }
    dend_20 { pt3dadd( 111.041, -45.1727, -48.6932, 0.15 ) }
    dend_20 { pt3dadd( 111.964, -45.3109, -49.0654, 0.15 ) }
    dend_20 { pt3dadd( 121.034, -48.8578, -51.4661, 0.15 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 39.234, -9.51802, -11.9486, 0.22 ) }
    dend_18 { pt3dadd( 39.9722, -8.91772, -11.4642, 0.22 ) }
    dend_18 { pt3dadd( 40.4477, -8.59531, -11.128, 0.22 ) }
    dend_18 { pt3dadd( 41.0265, -8.26048, -10.7121, 0.22 ) }
    dend_18 { pt3dadd( 41.6178, -7.96795, -10.3225, 0.66 ) }
    dend_18 { pt3dadd( 42.3358, -7.68714, -9.90368, 0.66 ) }
    dend_18 { pt3dadd( 43.1868, -7.42321, -9.48161, 0.22 ) }
    dend_18 { pt3dadd( 43.7792, -7.3265, -9.23737, 0.22 ) }
    dend_18 { pt3dadd( 44.0474, -7.32431, -9.16, 0.22 ) }
    dend_18 { pt3dadd( 44.9586, -7.45218, -9.02262, 0.44 ) }
    dend_18 { pt3dadd( 45.913, -7.69134, -8.95591, 0.88 ) }
    dend_18 { pt3dadd( 46.909, -7.96952, -8.91346, 0.22 ) }
    dend_18 { pt3dadd( 47.6271, -8.13415, -8.88781, 0.22 ) }
    dend_18 { pt3dadd( 48.5515, -8.27964, -8.85597, 0.29 ) }
    dend_18 { pt3dadd( 49.4232, -8.33813, -8.82052, 0.15 ) }
    dend_18 { pt3dadd( 50.11, -8.32391, -8.76031, 0.52 ) }
    dend_18 { pt3dadd( 51.6485, -8.13571, -8.52957, 0.37 ) }
    dend_18 { pt3dadd( 52.7065, -7.91772, -8.31276, 0.22 ) }
    dend_18 { pt3dadd( 53.5124, -7.69237, -8.11444, 1.03 ) }
    dend_18 { pt3dadd( 54.551, -7.30559, -7.81264, 0.29 ) }
    dend_18 { pt3dadd( 55.3088, -6.95758, -7.55897, 0.22 ) }
    dend_18 { pt3dadd( 56.2055, -6.48871, -7.2321, 0.22 ) }
    dend_18 { pt3dadd( 56.5811, -6.27993, -7.1059, 0.22 ) }
    dend_18 { pt3dadd( 57.2322, -5.91904, -6.9015, 0.22 ) }
    dend_18 { pt3dadd( 58.0296, -5.50105, -6.72832, 0.22 ) }
    dend_18 { pt3dadd( 58.7639, -5.15454, -6.66681, 0.66 ) }
    dend_18 { pt3dadd( 59.7117, -4.75231, -6.63991, 0.22 ) }
    dend_18 { pt3dadd( 60.8622, -4.30713, -6.59278, 0.66 ) }
    dend_18 { pt3dadd( 61.488, -4.10469, -6.55273, 0.81 ) }
    dend_18 { pt3dadd( 62.8063, -3.77007, -6.47531, 0.22 ) }
    dend_18 { pt3dadd( 63.4506, -3.63463, -6.40775, 0.22 ) }
    dend_18 { pt3dadd( 64.7254, -3.39974, -6.23569, 0.37 ) }
    dend_18 { pt3dadd( 65.5903, -3.23458, -6.06801, 0.74 ) }
    dend_18 { pt3dadd( 66.3059, -3.08667, -5.88298, 0.74 ) }
    dend_18 { pt3dadd( 67.1107, -2.9012, -5.66736, 0.59 ) }
    dend_18 { pt3dadd( 68.5192, -2.5318, -5.34618, 0.74 ) }
    dend_18 { pt3dadd( 69.6084, -2.23469, -5.21797, 0.07 ) }
    dend_18 { pt3dadd( 70.7732, -1.92597, -5.22988, 0.07 ) }
    dend_18 { pt3dadd( 71.1408, -1.83493, -5.26822, 0.59 ) }
    dend_18 { pt3dadd( 71.8086, -1.69671, -5.41322, 0.59 ) }
    dend_18 { pt3dadd( 72.8983, -1.49028, -5.78683, 0.15 ) }
    dend_18 { pt3dadd( 73.6262, -1.3716, -6.16737, 0.15 ) }
    dend_18 { pt3dadd( 74.2111, -1.27964, -6.52845, 0.37 ) }
    dend_18 { pt3dadd( 74.9436, -1.20315, -6.99379, 0.81 ) }
    dend_18 { pt3dadd( 76.27, -1.09623, -7.86459, 0.07 ) }
    dend_18 { pt3dadd( 77.0192, -1.07044, -8.35348, 0.44 ) }
    dend_18 { pt3dadd( 77.9853, -1.04249, -8.97954, 0.22 ) }
    dend_18 { pt3dadd( 78.8904, -1.00186, -9.58008, 0.96 ) }
    dend_18 { pt3dadd( 80.2274, -0.951488, -10.5206, 0.15 ) }
    dend_18 { pt3dadd( 80.8951, -0.957898, -11.0019, 0.15 ) }
    dend_18 { pt3dadd( 81.5584, -0.989888, -11.4929, 0.44 ) }
    dend_18 { pt3dadd( 82.4368, -1.05708, -12.2046, 0.29 ) }
    dend_18 { pt3dadd( 82.6792, -1.06473, -12.4276, 0.29 ) }
    dend_18 { pt3dadd( 82.9229, -1.04937, -12.725, 0.29 ) }
    dend_18 { pt3dadd( 83.307, -0.960368, -13.2723, 0.22 ) }
    dend_18 { pt3dadd( 83.7547, -0.842778, -13.8158, 0.22 ) }
    dend_18 { pt3dadd( 84.3658, -0.682266, -14.3564, 0.22 ) }
    dend_18 { pt3dadd( 84.7998, -0.583012, -14.6456, 0.22 ) }
    dend_18 { pt3dadd( 85.1788, -0.514992, -14.866, 0.22 ) }
    dend_18 { pt3dadd( 85.9818, -0.415599, -15.254, 0.07 ) }
    dend_18 { pt3dadd( 87.0088, -0.347699, -15.6702, 0.96 ) }
    dend_18 { pt3dadd( 88.5857, -0.414836, -16.1745, 0.07 ) }
    dend_18 { pt3dadd( 88.8969, -0.480787, -16.2501, 0.07 ) }
    dend_18 { pt3dadd( 89.7489, -0.795238, -16.4254, 0.07 ) }
    dend_18 { pt3dadd( 90.6578, -1.33059, -16.584, 0.07 ) }
    dend_18 { pt3dadd( 91.0513, -1.67942, -16.6434, 0.88 ) }
    dend_18 { pt3dadd( 91.6586, -2.35009, -16.7233, 0.37 ) }
    dend_18 { pt3dadd( 92.6821, -3.75956, -16.8745, 0.22 ) }
    dend_18 { pt3dadd( 92.9763, -4.20345, -16.909, 0.29 ) }
    dend_18 { pt3dadd( 93.5898, -5.2388, -16.9341, 0.07 ) }
    dend_18 { pt3dadd( 93.8587, -5.79843, -16.9478, 0.07 ) }
    dend_18 { pt3dadd( 103.54, -4.90792, -19.2952, 0.07 ) }
    dend_18 { pt3dadd( 113.431, -3.42559, -19.5699, 0.07 ) }
    dend_18 { pt3dadd( 123.283, -3.74634, -21.2575, 0.07 ) }
    dend_18 { pt3dadd( 132.589, -5.7888, -24.328, 0.07 ) }
    dend_18 { pt3dadd( 142.311, -7.35556, -26.1016, 0.07 ) }
    dend_18 { pt3dadd( 151.795, -7.11527, -29.2625, 0.07 ) }
    dend_18 { pt3dadd( 160.215, -5.01294, -34.2515, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 0/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 39.234, -9.51802, -11.9486, 0.74 ) }
    dend_17 { pt3dadd( 39.5005, -10.5824, -11.2289, 0.74 ) }
    dend_17 { pt3dadd( 39.7405, -11.4443, -10.6549, 0.44 ) }
    dend_17 { pt3dadd( 40.0186, -12.1815, -10.1446, 0.22 ) }
    dend_17 { pt3dadd( 40.2437, -12.6455, -9.8054, 0.22 ) }
    dend_17 { pt3dadd( 40.3881, -12.8623, -9.62962, 0.22 ) }
    dend_17 { pt3dadd( 40.7835, -13.3455, -9.22665, 0.22 ) }
    dend_17 { pt3dadd( 41.142, -13.6701, -8.96632, 0.22 ) }
    dend_17 { pt3dadd( 41.722, -14.0706, -8.632, 0.88 ) }
    dend_17 { pt3dadd( 42.0595, -14.2555, -8.4665, 0.81 ) }
    dend_17 { pt3dadd( 43.0715, -14.7178, -8.01599, 0.22 ) }
    dend_17 { pt3dadd( 43.8199, -15.0392, -7.75098, 0.74 ) }
    dend_17 { pt3dadd( 44.3812, -15.2957, -7.61365, 0.81 ) }
    dend_17 { pt3dadd( 45.2609, -15.7787, -7.46394, 0.15 ) }
    dend_17 { pt3dadd( 45.7253, -16.1054, -7.42463, 0.15 ) }
    dend_17 { pt3dadd( 46.067, -16.3926, -7.41635, 0.22 ) }
    dend_17 { pt3dadd( 46.7353, -17.0395, -7.4064, 0.22 ) }
    dend_17 { pt3dadd( 47.5229, -17.816, -7.30854, 0.22 ) }
    dend_17 { pt3dadd( 48.1271, -18.3673, -7.18241, 0.66 ) }
    dend_17 { pt3dadd( 48.8154, -18.9136, -6.99268, 0.88 ) }
    dend_17 { pt3dadd( 49.5065, -19.4174, -6.76245, 0.74 ) }
    dend_17 { pt3dadd( 50.2659, -19.9451, -6.46559, 0.74 ) }
    dend_17 { pt3dadd( 51.2474, -20.5576, -6.0197, 0.22 ) }
    dend_17 { pt3dadd( 52.0584, -20.9921, -5.65826, 0.15 ) }
    dend_17 { pt3dadd( 52.6537, -21.2834, -5.43661, 0.15 ) }
    dend_17 { pt3dadd( 53.2506, -21.5653, -5.26066, 0.22 ) }
    dend_17 { pt3dadd( 53.992, -21.9102, -5.07996, 0.15 ) }
    dend_17 { pt3dadd( 54.3596, -22.0819, -5.00919, 0.15 ) }
    dend_17 { pt3dadd( 55.0206, -22.3804, -4.87823, 0.59 ) }
    dend_17 { pt3dadd( 56.3692, -22.9489, -4.57445, 0.22 ) }
    dend_17 { pt3dadd( 57.0592, -23.1984, -4.42182, 0.22 ) }
    dend_17 { pt3dadd( 57.9883, -23.4982, -4.19511, 0.22 ) }
    dend_17 { pt3dadd( 58.5559, -23.671, -4.0535, 0.37 ) }
    dend_17 { pt3dadd( 59.6785, -24.0051, -3.77049, 0.88 ) }
    dend_17 { pt3dadd( 60.3546, -24.193, -3.60003, 0.74 ) }
    dend_17 { pt3dadd( 61.8253, -24.5496, -3.24671, 0.22 ) }
    dend_17 { pt3dadd( 62.7801, -24.7605, -3.03787, 0.29 ) }
    dend_17 { pt3dadd( 63.4864, -24.9128, -2.89356, 0.59 ) }
    dend_17 { pt3dadd( 64.1889, -25.0547, -2.73503, 0.07 ) }
    dend_17 { pt3dadd( 64.638, -25.1527, -2.60831, 0.07 ) }
    dend_17 { pt3dadd( 65.1936, -25.2708, -2.42794, 0.59 ) }
    dend_17 { pt3dadd( 66.24, -25.5173, -2.10152, 0.15 ) }
    dend_17 { pt3dadd( 66.9723, -25.7273, -1.91507, 0.66 ) }
    dend_17 { pt3dadd( 68.0049, -26.0931, -1.70243, 0.96 ) }
    dend_17 { pt3dadd( 69.4416, -26.7044, -1.48047, 0.29 ) }
    dend_17 { pt3dadd( 70.3906, -27.1805, -1.3866, 0.29 ) }
    dend_17 { pt3dadd( 71.6928, -27.9182, -1.27726, 0.66 ) }
    dend_17 { pt3dadd( 72.911, -28.6843, -1.18055, 0.22 ) }
    dend_17 { pt3dadd( 73.6466, -29.1927, -1.12416, 0.22 ) }
    dend_17 { pt3dadd( 74.4903, -29.8449, -1.05492, 0.37 ) }
    dend_17 { pt3dadd( 75.4078, -30.6368, -0.948171, 0.29 ) }
    dend_17 { pt3dadd( 76.284, -31.5071, -0.765625, 0.22 ) }
    dend_17 { pt3dadd( 77.2434, -32.6143, -0.411417, 0.74 ) }
    dend_17 { pt3dadd( 77.8015, -33.3522, -0.125575, 0.44 ) }
    dend_17 { pt3dadd( 78.3899, -34.1891, 0.222539, 0.15 ) }
    dend_17 { pt3dadd( 78.866, -34.8971, 0.512841, 0.44 ) }
    dend_17 { pt3dadd( 79.131, -35.2869, 0.677663, 0.44 ) }
    dend_17 { pt3dadd( 79.885, -36.3764, 1.13421, 0.22 ) }
    dend_17 { pt3dadd( 80.7319, -37.5371, 1.64734, 1.11 ) }
    dend_17 { pt3dadd( 82.0326, -39.2051, 2.41659, 0.15 ) }
    dend_17 { pt3dadd( 82.4816, -39.7376, 2.67998, 0.29 ) }
    dend_17 { pt3dadd( 83.3243, -40.6617, 3.14599, 0.15 ) }
    dend_17 { pt3dadd( 83.7155, -41.0699, 3.36354, 0.29 ) }
    dend_17 { pt3dadd( 84.4299, -41.7558, 3.76238, 0.74 ) }
    dend_17 { pt3dadd( 85.0267, -42.2673, 4.14311, 0.22 ) }
    dend_17 { pt3dadd( 85.6693, -42.766, 4.63238, 0.22 ) }
    dend_17 { pt3dadd( 86.4228, -43.2878, 5.28281, 0.29 ) }
    dend_17 { pt3dadd( 87.0051, -43.6363, 5.84115, 0.22 ) }
    dend_17 { pt3dadd( 87.6437, -43.9501, 6.53988, 0.59 ) }
    dend_17 { pt3dadd( 88.3207, -44.1798, 7.39826, 0.22 ) }
    dend_17 { pt3dadd( 89.0969, -44.3363, 8.47492, 0.74 ) }
    dend_17 { pt3dadd( 89.8075, -44.4064, 9.55727, 0.59 ) }
    dend_17 { pt3dadd( 90.4527, -44.4196, 10.6151, 0.37 ) }
    dend_17 { pt3dadd( 91.0366, -44.4002, 11.6081, 0.15 ) }
    dend_17 { pt3dadd( 91.7073, -44.3868, 12.7073, 0.22 ) }
    dend_17 { pt3dadd( 91.8599, -44.3823, 12.9503, 0.22 ) }
    dend_17 { pt3dadd( 92.4139, -44.3507, 13.7954, 0.22 ) }
    dend_17 { pt3dadd( 93.0583, -44.3064, 14.7654, 0.59 ) }
    dend_17 { pt3dadd( 93.5423, -44.2623, 15.479, 1.03 ) }
    dend_17 { pt3dadd( 94.4587, -44.1836, 16.8466, 0.22 ) }
    dend_17 { pt3dadd( 95.097, -44.1408, 17.7974, 0.22 ) }
    dend_17 { pt3dadd( 95.7208, -44.0932, 18.7364, 0.22 ) }
    dend_17 { pt3dadd( 96.411, -44.0219, 19.7682, 0.15 ) }
    dend_17 { pt3dadd( 96.8858, -43.9808, 20.4537, 0.44 ) }
    dend_17 { pt3dadd( 97.7869, -43.9634, 21.6775, 0.37 ) }
    dend_17 { pt3dadd( 98.979, -44.0016, 23.2437, 0.15 ) }
    dend_17 { pt3dadd( 99.6049, -44.064, 23.9638, 0.29 ) }
    dend_17 { pt3dadd( 100.531, -44.2093, 24.9102, 0.81 ) }
    dend_17 { pt3dadd( 101.779, -44.4636, 26.0127, 0.22 ) }
    dend_17 { pt3dadd( 102.466, -44.6168, 26.5309, 0.15 ) }
    dend_17 { pt3dadd( 103.308, -44.7988, 27.0605, 0.15 ) }
    dend_17 { pt3dadd( 104.332, -45.013, 27.6095, 0.15 ) }
    dend_17 { pt3dadd( 104.819, -45.1347, 27.8234, 0.52 ) }
    dend_17 { pt3dadd( 105.449, -45.3159, 28.0623, 0.52 ) }
    dend_17 { pt3dadd( 107.117, -45.845, 28.6354, 0.07 ) }
    dend_17 { pt3dadd( 108.008, -46.1576, 28.9194, 0.22 ) }
    dend_17 { pt3dadd( 109.159, -46.6233, 29.2657, 0.29 ) }
    dend_17 { pt3dadd( 111.632, -47.7548, 30.0654, 0.07 ) }
    dend_17 { pt3dadd( 112.201, -48.0345, 30.2518, 0.07 ) }
    dend_17 { pt3dadd( 112.74, -48.3181, 30.427, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_17 { pt3dadd( 113.416, -48.6944, 30.6675, 0.37 ) }
    dend_17 { pt3dadd( 115.025, -49.5572, 31.4369, 0.07 ) }
    dend_17 { pt3dadd( 115.838, -49.9711, 31.9567, 0.07 ) }
    dend_17 { pt3dadd( 116.456, -50.2597, 32.452, 0.52 ) }
    dend_17 { pt3dadd( 116.771, -50.4022, 32.7327, 0.52 ) }
    dend_17 { pt3dadd( 118.003, -50.9743, 33.9152, 0.22 ) }
    dend_17 { pt3dadd( 119.334, -51.6807, 35.2971, 0.07 ) }
    dend_17 { pt3dadd( 120.207, -52.2047, 36.253, 0.07 ) }
    dend_17 { pt3dadd( 120.603, -52.463, 36.697, 0.29 ) }
    dend_17 { pt3dadd( 121.674, -53.1655, 37.7782, 0.07 ) }
    dend_17 { pt3dadd( 122.51, -53.704, 38.478, 0.29 ) }
    dend_17 { pt3dadd( 124.102, -54.7392, 39.4721, 0.07 ) }
    dend_17 { pt3dadd( 124.882, -55.2342, 39.7919, 0.22 ) }
    dend_17 { pt3dadd( 125.664, -55.6993, 39.9583, 0.22 ) }
    dend_17 { pt3dadd( 127.588, -56.8539, 39.961, 0.07 ) }
    dend_17 { pt3dadd( 128.584, -57.4872, 39.6908, 0.07 ) }
    dend_17 { pt3dadd( 129.048, -57.8216, 39.4841, 0.07 ) }
    dend_17 { pt3dadd( 129.861, -58.5325, 38.9699, 0.15 ) }
    dend_17 { pt3dadd( 130.604, -59.4493, 38.3248, 0.07 ) }
    dend_17 { pt3dadd( 131.061, -60.273, 37.7704, 0.22 ) }
    dend_17 { pt3dadd( 131.33, -61.0353, 37.3118, 0.22 ) }
    dend_17 { pt3dadd( 131.604, -62.1094, 36.6461, 0.07 ) }
    dend_17 { pt3dadd( 131.768, -63.0363, 36.049, 0.44 ) }
    dend_17 { pt3dadd( 131.926, -64.5483, 35.0258, 0.15 ) }
    dend_17 { pt3dadd( 131.986, -65.601, 34.3076, 0.52 ) }
    dend_17 { pt3dadd( 132.004, -66.1516, 33.9143, 0.52 ) }
    dend_17 { pt3dadd( 132.027, -66.9637, 33.3296, 0.52 ) }
    dend_17 { pt3dadd( 132.063, -68.0018, 32.5722, 0.15 ) }
    dend_17 { pt3dadd( 132.136, -69.1237, 31.7995, 0.15 ) }
    dend_17 { pt3dadd( 132.18, -69.5027, 31.5649, 0.29 ) }
    dend_17 { pt3dadd( 132.405, -70.9939, 30.6975, 0.15 ) }
    dend_17 { pt3dadd( 132.513, -71.6704, 30.3118, 0.37 ) }
    dend_17 { pt3dadd( 132.699, -72.6088, 29.7872, 0.22 ) }
    dend_17 { pt3dadd( 132.867, -73.3381, 29.3617, 0.07 ) }
    dend_17 { pt3dadd( 133.1, -74.2722, 28.8132, 0.22 ) }
    dend_17 { pt3dadd( 133.471, -75.7459, 27.9233, 0.07 ) }
    dend_17 { pt3dadd( 133.847, -77.2164, 27.0378, 0.07 ) }
    dend_17 { pt3dadd( 134.213, -78.6307, 26.1735, 0.07 ) }
    dend_17 { pt3dadd( 134.424, -79.4405, 25.6825, 0.22 ) }
    dend_17 { pt3dadd( 134.657, -80.3234, 25.153, 0.07 ) }
    dend_17 { pt3dadd( 134.834, -80.9802, 24.7396, 0.15 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 41/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -64.9248, 68.5559, -13.864, 0.22 ) }
    dend_12 { pt3dadd( -65.9522, 69.3181, -13.2632, 0.22 ) }
    dend_12 { pt3dadd( -66.347, 69.5401, -13.0853, 0.22 ) }
    dend_12 { pt3dadd( -67.0431, 69.8929, -12.8411, 0.52 ) }
    dend_12 { pt3dadd( -67.4576, 70.098, -12.7163, 0.52 ) }
    dend_12 { pt3dadd( -68.5109, 70.6386, -12.4354, 0.15 ) }
    dend_12 { pt3dadd( -69.2209, 70.9928, -12.2551, 0.66 ) }
    dend_12 { pt3dadd( -70.0159, 71.3503, -12.0951, 0.22 ) }
    dend_12 { pt3dadd( -71.0695, 71.8347, -11.9013, 0.07 ) }
    dend_12 { pt3dadd( -71.8008, 72.1523, -11.7774, 0.07 ) }
    dend_12 { pt3dadd( -72.5175, 72.459, -11.6543, 0.52 ) }
    dend_12 { pt3dadd( -73.6013, 72.9346, -11.4589, 0.07 ) }
    dend_12 { pt3dadd( -74.5321, 73.3287, -11.2517, 0.07 ) }
    dend_12 { pt3dadd( -75.0068, 73.5055, -11.1147, 0.59 ) }
    dend_12 { pt3dadd( -75.8177, 73.7405, -10.8266, 0.07 ) }
    dend_12 { pt3dadd( -76.5027, 73.9165, -10.5373, 0.15 ) }
    dend_12 { pt3dadd( -77.1491, 74.0687, -10.1952, 0.37 ) }
    dend_12 { pt3dadd( -77.7526, 74.221, -9.76731, 0.59 ) }
    dend_12 { pt3dadd( -78.3283, 74.3553, -9.20474, 0.22 ) }
    dend_12 { pt3dadd( -78.7129, 74.4524, -8.7529, 0.22 ) }
    dend_12 { pt3dadd( -79.2481, 74.5832, -8.07092, 0.22 ) }
    dend_12 { pt3dadd( -79.6408, 74.6316, -7.52284, 0.22 ) }
    dend_12 { pt3dadd( -80.201, 74.6088, -6.69979, 0.44 ) }
    dend_12 { pt3dadd( -80.6155, 74.5198, -6.10814, 0.44 ) }
    dend_12 { pt3dadd( -81.0972, 74.3675, -5.53531, 0.22 ) }
    dend_12 { pt3dadd( -81.8986, 74.0574, -4.74438, 0.07 ) }
    dend_12 { pt3dadd( -82.489, 73.8343, -4.27684, 0.07 ) }
    dend_12 { pt3dadd( -82.9805, 73.6609, -3.96454, 0.07 ) }
    dend_12 { pt3dadd( -83.4402, 73.559, -3.76086, 0.07 ) }
    dend_12 { pt3dadd( -84.2616, 73.4388, -3.47768, 0.07 ) }
    dend_12 { pt3dadd( -84.8218, 73.3826, -3.31623, 0.29 ) }
    dend_12 { pt3dadd( -85.8024, 73.3557, -3.07724, 0.66 ) }
    dend_12 { pt3dadd( -86.5345, 73.3637, -2.90843, 0.88 ) }
    dend_12 { pt3dadd( -88.2978, 73.4236, -2.51235, 0.22 ) }
    dend_12 { pt3dadd( -89.3724, 73.4704, -2.27882, 0.15 ) }
    dend_12 { pt3dadd( -90.3132, 73.5264, -2.07919, 0.22 ) }
    dend_12 { pt3dadd( -91.055, 73.5967, -1.96825, 0.07 ) }
    dend_12 { pt3dadd( -91.6046, 73.664, -1.92077, 0.07 ) }
    dend_12 { pt3dadd( -92.2606, 73.7582, -1.89862, 0.59 ) }
    dend_12 { pt3dadd( -92.9147, 73.8739, -1.89975, 0.07 ) }
    dend_12 { pt3dadd( -93.6227, 74.0474, -1.94689, 0.52 ) }
    dend_12 { pt3dadd( -94.9526, 74.4062, -2.12491, 0.07 ) }
    dend_12 { pt3dadd( -95.376, 74.5144, -2.22287, 0.07 ) }
    dend_12 { pt3dadd( -96.0659, 74.7136, -2.46043, 0.22 ) }
    dend_12 { pt3dadd( -105.191, 75.6525, 1.52772, 0.22 ) }
    dend_12 { pt3dadd( -114.089, 76.4995, 6.01555, 0.22 ) }
    dend_12 { pt3dadd( -122.047, 78.9221, 11.5905, 0.22 ) }
    dend_12 { pt3dadd( -129.653, 80.0515, 17.9887, 0.22 ) }
    dend_12 { pt3dadd( -137.107, 79.6393, 24.6424, 0.22 ) }
    dend_12 { pt3dadd( -145.774, 78.7936, 29.5629, 0.22 ) }
    dend_12 { pt3dadd( -153.622, 76.6667, 35.403, 0.22 ) }
    dend_12 { pt3dadd( -160.888, 73.7848, 41.672, 0.22 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 93/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -64.9248, 68.5559, -13.864, 0.15 ) }
    dend_11 { pt3dadd( -65.9669, 68.4979, -13.939, 0.15 ) }
    dend_11 { pt3dadd( -66.8624, 68.4388, -14.0029, 0.15 ) }
    dend_11 { pt3dadd( -67.7187, 68.4107, -14.0821, 0.15 ) }
    dend_11 { pt3dadd( -68.2456, 68.3999, -14.1333, 0.15 ) }
    dend_11 { pt3dadd( -69.3295, 68.4012, -14.2466, 0.15 ) }
    dend_11 { pt3dadd( -70.0648, 68.3868, -14.3287, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_11 { pt3dadd( -70.9394, 68.3417, -14.4401, 0.81 ) }
    dend_11 { pt3dadd( -72.0028, 68.2345, -14.5791, 0.15 ) }
    dend_11 { pt3dadd( -72.8844, 68.1397, -14.6913, 0.44 ) }
    dend_11 { pt3dadd( -74.0888, 68.0237, -14.8399, 0.15 ) }
    dend_11 { pt3dadd( -75.0307, 67.9519, -14.9493, 0.15 ) }
    dend_11 { pt3dadd( -75.5995, 67.9014, -15.0174, 0.15 ) }
    dend_11 { pt3dadd( -76.1164, 67.8464, -15.0785, 0.15 ) }
    dend_11 { pt3dadd( -77.5854, 67.6409, -15.2293, 0.07 ) }
    dend_11 { pt3dadd( -78.27, 67.5548, -15.3011, 0.07 ) }
    dend_11 { pt3dadd( -78.9614, 67.4977, -15.3627, 0.15 ) }
    dend_11 { pt3dadd( -88.8802, 66.1968, -15.4494, 0.15 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 11/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -44.6958, -24.5895, 19.0824, 0.15 ) }
    dend_7 { pt3dadd( -44.3647, -25.7731, 19.8697, 0.15 ) }
    dend_7 { pt3dadd( -44.0897, -26.7565, 20.5237, 0.66 ) }
    dend_7 { pt3dadd( -43.8511, -27.6097, 21.0911, 0.44 ) }
    dend_7 { pt3dadd( -43.408, -29.194, 22.1448, 0.15 ) }
    dend_7 { pt3dadd( -43.0669, -30.4135, 22.9558, 0.15 ) }
    dend_7 { pt3dadd( -42.6304, -31.9745, 23.9939, 0.07 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 18/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -44.6958, -24.5895, 19.0824, 0.29 ) }
    dend_6 { pt3dadd( -46.1111, -25.2263, 18.9423, 0.29 ) }
    dend_6 { pt3dadd( -46.944, -25.6194, 18.8479, 0.15 ) }
    dend_6 { pt3dadd( -47.7557, -26.0459, 18.7553, 0.22 ) }
    dend_6 { pt3dadd( -48.7107, -26.5477, 18.6463, 0.07 ) }
    dend_6 { pt3dadd( -49.4762, -26.9499, 18.559, 0.52 ) }
    dend_6 { pt3dadd( -50.2168, -27.339, 18.4745, 0.15 ) }
    dend_6 { pt3dadd( -51.1338, -27.8078, 18.3472, 0.29 ) }
    dend_6 { pt3dadd( -52.0128, -28.2803, 18.2076, 0.07 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 27/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 55.6479, 28.5385, -40.4256, 0.15 ) }
    dend_23 { pt3dadd( 58.2343, 37.7378, -43.9979, 0.15 ) }
    dend_23 { pt3dadd( 60.1618, 47.0259, -47.7626, 0.15 ) }
    dend_23 { pt3dadd( 61.4178, 56.3584, -51.7026, 0.15 ) }
    dend_23 { pt3dadd( 61.3005, 65.3241, -56.5478, 0.15 ) }
    dend_23 { pt3dadd( 60.0746, 73.6995, -62.1808, 0.15 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 33/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 55.6479, 28.5385, -40.4256, 0.29 ) }
    dend_22 { pt3dadd( 58.5774, 37.8425, -43.4298, 0.15 ) }
    dend_22 { pt3dadd( 60.7391, 46.9433, -47.4911, 0.15 ) }
    dend_22 { pt3dadd( 61.7602, 56.1279, -51.8114, 0.15 ) }
    dend_22 { pt3dadd( 61.5147, 64.9923, -56.8262, 0.15 ) }
    dend_22 { pt3dadd( 61.2539, 74.8091, -59.6909, 0.15 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_34, dend_33, dend_24, dend_13, dend_2, dend_1, dend_0, dend_36, dend_35, dend_30, dend_25, dend_15, dend_14, dend_8, dend_3, dend_38, dend_37, dend_32, dend_31, dend_27, dend_26, dend_19, dend_16, dend_10, dend_9, dend_5, dend_4, dend_29, dend_28, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_6, dend_23, dend_22]}
    ModelViewParmSubset_2 = new SectionList()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_34, dend_33, dend_24, dend_13, dend_2, dend_1, dend_0, dend_36, dend_35, dend_30, dend_25, dend_15, dend_14, dend_8, dend_3, dend_38, dend_37, dend_32, dend_31, dend_27, dend_26, dend_19, dend_16, dend_10, dend_9, dend_5, dend_4, dend_29, dend_28, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_6, dend_23, dend_22]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_33 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_1 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_36 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_35 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_30 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_14 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_8 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_38 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_32 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_31 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_27 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_26 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_9 OneSecGrp_SectionRef_28.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_4 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_29 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_21 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_20 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_18 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_12 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_23 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_22 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_2 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_13 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_34 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_3 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_24 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_15 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_16 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_19 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_5 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_25 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_6 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_7 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_10 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_11 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_28 OneSecGrp_SectionRef_32.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_33 nseg = 9
    dend_1 nseg = 7
    dend_0 nseg = 9
    dend_36 nseg = 3
    dend_35 nseg = 5
    dend_30 nseg = 3
    dend_14 nseg = 11
    dend_8 nseg = 5
    dend_38 nseg = 5
    dend_37 nseg = 3
    dend_32 nseg = 3
    dend_31 nseg = 3
    dend_27 nseg = 7
    dend_26 nseg = 7
    dend_9 nseg = 5
    dend_4 nseg = 3
    dend_29 nseg = 3
    dend_21 nseg = 3
    dend_20 nseg = 5
    dend_18 nseg = 7
    dend_17 nseg = 7
    dend_12 nseg = 5
    dend_23 nseg = 3
    dend_22 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L4_SBC_1bad5bb92b_0_0


