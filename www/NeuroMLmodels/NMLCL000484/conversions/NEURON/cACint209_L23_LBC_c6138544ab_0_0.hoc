// Cell: cACint209_L23_LBC_c6138544ab_0_0
/*
{
  "id" : "cACint209_L23_LBC_c6138544ab_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.14355, -7.38643, 0.0, 3.00626", "-1.94813, -6.57976, 0.0, 3.91171", "-1.75271, -5.7731, 0.0, 5.48682", "-1.55728, -4.96644, 0.0, 7.76121", "-1.36186, -4.15978, 0.0, 8.36238", "-1.16644, -3.35311, 0.0, 8.81706", "-0.971019, -2.54645, 0.0, 9.16666", "-0.775597, -1.73979, 0.0, 9.47967", "-0.580175, -0.933125, 0.0, 9.69737", "-0.384753, -0.126463, 0.0, 9.91023", "-0.189331, 0.6802, 0.0, 10.2136", "0.00609047, 1.48686, 0.0, 10.5121", "0.201512, 2.29352, 0.0, 10.3333", "0.396934, 3.10019, 0.0, 10.1326", "0.592356, 3.90685, 0.0, 9.93193", "0.787778, 4.71351, 0.0, 9.69022", "0.9832, 5.52018, 0.0, 8.92901", "1.17862, 6.32684, 0.0, 8.02961", "1.37404, 7.1335, 0.0, 6.7633", "1.56947, 7.94016, 0.0, 3.32024", "1.76489, 8.74683, 0.0, 2.02537" ]
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "0.809262, 7.80544, 5.02, 1.94", "0.21855, 14.0003, 7.56697, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999858164011
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.39926, -2.27406, 14.6, 1.94", "1.53406, -5.31802, 14.6, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999858164011
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.680737, -5.86506, -1.0, 1.66", "0.712617, -7.35023, -0.971865, 1.66", "3.60084, -10.4288, -0.913545, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999858164011
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.56074, -7.01456, -2.14, 3.05", "-2.93393, -8.24886, -2.14, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999858164011
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-6.40074, 0.82294, -0.63, 1.38", "-8.7576, 2.00569, 0.00113218, 1.38", "-11.6361, 3.41004, 1.00415, 1.38", "-14.7825, 4.86348, 2.23167, 1.11", "-17.9799, 6.34047, 3.47909, 1.11", "-22.7051, 8.52322, 5.32257, 1.11", "-27.546, 10.7594, 7.21118, 1.11", "-30.783, 12.2046, 8.65326, 0.83", "-32.1432, 12.7407, 9.34818, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999858164011
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.33926, 3.61594, 5.79, 1.38", "7.60171, 4.2425, 6.38729, 1.38", "10.9363, 5.16599, 7.26764, 1.38", "14.0731, 6.03467, 8.09574, 1.11", "16.6067, 6.73633, 8.76462, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999858164011
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.76489, 8.74683, 0.0, 0.55", "5.29663, 23.3251, 0.0, 0.55", "8.82836, 37.9034, 0.0, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "0.21855, 14.0003, 7.56697, 1.11", "1.25066, 14.8118, 7.49383, 1.11" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "0.21855, 14.0003, 7.56697, 0.83", "-1.00659, 15.5406, 7.72011, 0.83", "-2.30504, 17.2433, 7.96281, 0.83", "-3.96764, 19.3259, 8.31056, 0.83", "-4.8936, 20.4881, 8.52998, 1.11", "-6.09854, 21.959, 8.82102, 0.83", "-7.51846, 23.649, 9.15673, 1.11", "-9.17738, 25.5978, 9.53283, 0.55", "-10.8981, 27.5483, 9.91539, 0.83", "-13.2472, 30.2843, 10.371, 0.83", "-15.2119, 32.7148, 10.6608, 0.83", "-17.2962, 35.4014, 10.8777, 0.83", "-18.574, 37.1151, 10.95, 0.55", "-19.2524, 38.0286, 10.9538, 1.11", "-21.3811, 40.9407, 10.9121, 0.83", "-23.3169, 43.5654, 10.8283, 0.55", "-23.9246, 44.4104, 10.8029, 0.83", "-25.2103, 46.2057, 10.7504, 0.55", "-26.5018, 47.9661, 10.7247, 0.83", "-28.3869, 50.4388, 10.7218, 0.83", "-30.2165, 52.5266, 10.841, 0.83", "-31.5052, 53.8742, 10.9724, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "1.53406, -5.31802, 14.6, 1.11", "0.447452, -7.9676, 11.6501, 1.11", "-0.00900576, -9.14473, 10.5784, 1.11", "-0.486392, -10.5397, 9.50029, 0.83", "-1.21195, -12.8008, 8.00669, 1.38", "-3.45592, -20.7516, 3.53008, 0.83", "-4.35633, -24.3043, 1.91529, 0.83", "-5.28617, -28.5237, 0.692328, 0.83", "-5.70694, -30.7869, 0.371703, 0.83", "-6.17531, -33.6898, 0.377455, 0.83", "-6.65351, -36.9544, 0.962695, 0.83", "-7.30419, -41.5785, 2.44962, 0.83", "-7.9394, -46.1573, 4.02235, 0.83", "-8.31521, -49.0517, 5.06049, 0.83", "-8.87332, -53.062, 6.2855, 1.11", "-9.61917, -58.5811, 7.71703, 1.11", "-10.0978, -62.0509, 8.48162, 1.11", "-10.7449, -66.7624, 9.26057, 1.38", "-11.5175, -72.8866, 9.91601, 1.38", "-12.314, -78.9572, 10.3543, 1.11", "-12.8463, -82.7609, 10.5828, 1.11", "-13.5259, -87.4868, 10.7605, 0.55", "-14.3061, -92.9255, 11.081, 0.83", "-14.942, -97.5295, 11.4489, 0.83", "-15.2958, -100.235, 11.7465, 0.83", "-15.5488, -102.358, 12.0964, 0.83", "-15.7202, -103.954, 12.2949, 0.83", "-16.1066, -108.236, 12.6326, 0.55", "-16.3843, -112.079, 12.9398, 1.11", "-16.5891, -115.739, 13.1958, 0.83", "-16.8156, -121.504, 13.7383, 0.83", "-16.9577, -127.059, 14.3243, 0.55", "-17.0728, -130.574, 14.7496, 0.83", "-17.1952, -135.446, 15.4074, 1.11", "-17.2454, -141.913, 16.2472, 1.11", "-17.2501, -147.16, 16.8815, 0.83", "-17.2443, -148.513, 17.0932, 0.83", "-17.2175, -150.793, 17.5623, 1.11", "-17.1828, -153.076, 17.9991, 1.11", "-17.1336, -156.435, 18.3409, 0.83", "-17.138, -159.01, 18.2501, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "1.53406, -5.31802, 14.6, 1.38", "3.21575, -8.86603, 14.5951, 1.38" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "3.60084, -10.4288, -0.913545, 1.38", "7.35436, -11.4379, -3.26052, 1.38", "12.0565, -12.273, -6.41693, 1.11", "14.2004, -12.6372, -7.97425, 1.11", "16.287, -13.1523, -9.55542, 1.11", "19.3087, -14.0183, -11.9294, 1.11", "25.2309, -15.4353, -16.5651, 0.83", "26.5469, -15.4173, -17.613, 0.83", "28.7435, -14.931, -19.5644, 0.83", "30.5571, -14.3175, -21.4482, 0.83", "30.9721, -14.1433, -21.9231, 0.83", "33.3818, -12.7988, -24.8178, 0.83", "35.9295, -10.9344, -28.1565, 0.83", "38.0352, -9.25933, -30.9756, 0.55", "38.6791, -8.71727, -31.8433, 0.55", "40.4267, -7.23787, -34.2061, 1.66", "44.8167, -3.83695, -40.2228, 1.11", "48.6851, -1.2712, -45.8417, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "3.60084, -10.4288, -0.913545, 0.55", "0.867473, -1.5744, -10.6458, 0.55", "0.667282, -0.942572, -11.2384, 1.11", "0.0804769, 0.90742, -12.7596, 0.83", "-0.601031, 3.19307, -14.5293, 0.83", "-1.62165, 6.85852, -17.5291, 0.83", "-2.43167, 9.86369, -20.0578, 0.83", "-3.21411, 12.6036, -21.7408, 0.55", "-3.67607, 14.3164, -22.8633, 0.83", "-4.0805, 15.874, -23.997, 0.83", "-4.92421, 19.7105, -26.9709, 0.28", "-5.16348, 21.3791, -28.736, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-2.93393, -8.24886, -2.14, 1.38", "-4.73734, -10.0829, -2.09834, 1.38", "-7.88117, -13.2801, -2.02572, 1.38" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-2.93393, -8.24886, -2.14, 1.38", "-2.53108, -18.5849, -1.37229, 1.38", "-2.17189, -27.8009, -0.687765, 1.38", "-1.97935, -32.7408, -0.320854, 2.77" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-32.1432, 12.7407, 9.34818, 0.83", "-35.379, 14.6013, 8.05113, 0.83", "-37.5852, 15.8735, 7.00022, 1.11", "-38.5553, 16.4329, 6.53815, 0.83", "-40.2485, 17.4094, 5.73159, 1.11", "-41.5422, 18.1554, 5.11539, 0.83", "-44.7806, 20.0229, 3.57281, 0.83", "-45.4719, 20.3881, 3.31076, 1.66" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-32.1432, 12.7407, 9.34818, 0.55", "-33.1597, 12.1617, 8.17174, 0.55", "-34.2446, 11.5926, 6.896, 0.83", "-36.4002, 10.5434, 4.43574, 0.83", "-37.5809, 9.94109, 3.20319, 0.28", "-38.2862, 9.58492, 2.56365, 0.28", "-39.8552, 8.89948, 1.08881, 0.83", "-40.7346, 8.62084, 0.251474, 0.28", "-41.2997, 8.4912, -0.253347, 0.28", "-42.7928, 8.32807, -1.61662, 0.55", "-44.1703, 8.2352, -2.88742, 0.28", "-47.7239, 8.10986, -6.19414, 1.11", "-48.6902, 8.09432, -7.10697, 0.83", "-49.5559, 8.08269, -7.95793, 0.83", "-52.5101, 7.99988, -11.1689, 0.28", "-53.562, 7.96537, -12.3986, 0.28", "-54.3871, 7.87797, -13.417, 0.55", "-55.4142, 7.65715, -14.5914, 0.28", "-56.0246, 7.51164, -15.392, 0.55", "-57.5878, 7.1029, -17.5531, 0.28", "-57.9038, 7.00416, -17.9808, 0.55", "-59.1286, 6.58901, -19.639, 0.28", "-59.7376, 6.35892, -20.3782, 0.55", "-62.2863, 5.30185, -23.1946, 0.28", "-63.2683, 4.8526, -24.2863, 0.28", "-63.8194, 4.56777, -24.9004, 0.28", "-65.0447, 3.83434, -26.4063, 0.83", "-67.3354, 2.25301, -29.3688, 0.28", "-67.5895, 2.05376, -29.7208, 0.83", "-68.7603, 1.02244, -31.356, 0.28", "-69.5591, 0.31937, -32.6667, 0.55", "-70.6365, -0.616235, -34.6007, 0.28", "-70.8513, -0.781123, -35.053, 0.55", "-71.4351, -1.20157, -36.3264, 0.28", "-71.8049, -1.44963, -37.0665, 0.55", "-73.1407, -2.25025, -39.5766, 0.28", "-73.5391, -2.47901, -40.3121, 0.55", "-75.3044, -3.45489, -43.5991, 0.28", "-76.1221, -3.89679, -45.181, 0.28", "-76.4322, -4.06389, -45.8073, 0.55", "-77.9439, -4.91379, -48.9723, 0.28", "-78.1754, -5.07192, -49.4417, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "16.6067, 6.73633, 8.76462, 1.11", "18.5951, 5.97727, 8.96663, 1.11", "20.8251, 5.12599, 9.19319, 1.11", "23.1619, 4.23396, 9.43059, 1.11", "25.7319, 3.25289, 9.69168, 0.83", "29.4471, 1.83468, 10.0691, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "16.6067, 6.73633, 8.76462, 0.83", "18.0892, 8.84796, 9.3089, 0.83", "18.8883, 10.0707, 9.82896, 0.83", "19.5612, 11.1889, 10.3283, 0.55", "20.4399, 12.7656, 11.0244, 0.83", "21.6465, 15.1392, 12.0032, 1.11", "23.2572, 18.3875, 13.2582, 0.83", "24.8054, 21.7708, 14.5999, 1.11", "26.1061, 24.787, 15.8046, 0.83", "27.0207, 26.9278, 16.6616, 0.83", "28.4743, 30.3998, 18.0924, 1.38", "28.7966, 31.2048, 18.4166, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "8.82836, 37.9034, 0.0, 0.28", "12.3601, 52.4817, 0.0, 0.28", "15.8918, 67.06, 0.0, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "1.25066, 14.8118, 7.49383, 0.83", "1.05401, 16.1369, 8.95265, 0.83", "0.784467, 17.4643, 10.39, 0.83", "0.501857, 21.2802, 13.8076, 0.55", "0.411625, 22.6506, 14.9619, 0.55", "0.378032, 23.6346, 15.6736, 0.55", "0.296311, 25.3246, 16.7548, 0.55", "0.181828, 27.9664, 18.1936, 0.55", "-0.0254958, 32.1073, 20.3069, 0.83", "-0.258901, 34.809, 21.4902, 0.55", "-0.591481, 37.6115, 22.735, 0.55", "-0.824334, 39.2515, 23.449, 0.55", "-1.37041, 42.7186, 24.8651, 0.55", "-1.85395, 46.1604, 26.1527, 0.55", "-2.41754, 48.3636, 27.0394, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "1.25066, 14.8118, 7.49383, 0.83", "1.25047, 17.2649, 6.84213, 0.83", "1.27051, 18.63, 6.5362, 1.11", "1.32197, 21.6401, 5.95949, 1.11", "1.42072, 24.7938, 5.42697, 1.11", "1.60237, 28.2028, 4.91823, 1.11", "1.71388, 29.9034, 4.63258, 1.11", "2.02565, 33.4529, 4.0382, 1.11", "2.3009, 35.8873, 3.62095, 1.11", "2.63165, 38.3674, 3.23354, 1.11", "3.13431, 41.8083, 2.72614, 1.11", "3.60051, 45.0797, 2.30886, 1.11", "4.01789, 47.9015, 1.92593, 1.11", "4.44175, 50.5778, 1.53382, 1.11", "4.68509, 52.0799, 1.3104, 1.11", "4.82045, 53.0122, 1.18551, 1.11", "5.36418, 57.3661, 0.830616, 1.11" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-31.5052, 53.8742, 10.9724, 0.28", "-34.2199, 57.7776, 10.7529, 0.28", "-34.6905, 58.9667, 10.7807, 0.28", "-34.9172, 59.8509, 10.8582, 0.55", "-35.2946, 61.2613, 11.0373, 0.28", "-35.6936, 62.7523, 11.2267, 0.55", "-36.1412, 64.4248, 11.4392, 0.28", "-36.207, 65.6854, 11.6692, 0.55", "-36.2183, 66.9236, 11.9095, 0.28", "-36.2505, 68.407, 12.2383, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-31.5052, 53.8742, 10.9724, 0.83", "-32.0427, 55.3944, 10.8201, 0.83", "-33.1231, 58.3685, 10.6145, 0.55", "-33.4583, 59.2986, 10.5707, 0.83", "-34.1805, 61.1338, 10.5501, 0.83", "-34.9972, 63.1829, 10.8722, 0.83", "-36.1276, 65.8836, 11.5667, 0.83", "-37.0457, 67.9548, 12.3577, 0.83", "-37.7063, 69.4165, 13.0898, 0.55", "-38.7072, 71.5529, 14.289, 0.83", "-40.9516, 76.386, 17.278, 0.55", "-41.5603, 77.778, 18.2085, 0.55", "-41.6934, 78.0828, 18.446, 0.83", "-42.3489, 79.5228, 19.616, 0.55", "-42.7883, 80.4594, 20.3404, 0.55", "-43.5125, 82.0231, 21.3146, 0.55", "-43.8683, 82.7706, 21.6135, 0.83", "-45.07, 85.3325, 22.7285, 0.55", "-45.9027, 87.0037, 23.51, 0.55", "-46.1776, 87.4865, 23.7665, 0.83", "-46.9188, 88.7594, 24.4888, 0.55", "-47.653, 89.7826, 25.1134, 0.83" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "3.21575, -8.86603, 14.5951, 0.55", "3.40628, -10.5823, 14.7579, 0.55", "3.39103, -11.6364, 14.9682, 1.38", "3.09832, -13.5591, 15.3817, 1.38", "2.36102, -16.7179, 15.9399, 0.83", "1.85206, -18.8984, 16.3253, 0.83", "1.42056, -20.747, 16.652, 1.11", "0.714565, -23.4841, 17.2058, 0.55", "-0.110841, -25.9582, 17.7668, 0.83", "-1.04024, -27.7344, 18.2328, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "3.21575, -8.86603, 14.5951, 0.83", "5.38118, -8.01863, 15.1333, 0.83", "6.11192, -7.11128, 15.4908, 0.83", "6.59021, -6.0116, 15.7275, 0.83", "7.07637, -4.75401, 16.0826, 1.38", "7.55204, -3.52359, 16.4299, 1.38", "8.27066, -1.66471, 16.9547, 0.83", "9.0427, 1.21097, 17.6054, 0.83", "9.42506, 3.0381, 18.0513, 0.83", "9.67436, 5.56493, 18.6852, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "48.6851, -1.2712, -45.8417, 0.28", "50.7534, -0.467746, -52.0839, 0.28", "51.0774, -0.280712, -52.4349, 0.55", "52.2235, 0.583575, -52.9858, 0.28", "53.153, 1.35546, -53.4411, 0.28", "55.805, 3.62833, -54.6198, 0.83", "58.5489, 6.06029, -55.7765, 0.28", "60.2577, 7.64465, -56.7721, 0.83", "61.908, 9.20358, -57.9057, 1.11", "64.1889, 11.4856, -59.6167, 0.55", "64.6896, 12.0149, -60.0823, 0.83", "65.7267, 13.1981, -61.1516, 0.28", "66.2583, 13.7868, -61.7273, 0.83", "68.5506, 16.1778, -64.525, 0.28", "69.3994, 17.046, -65.6129, 0.83", "72.2833, 20.0443, -69.329, 0.28", "73.1779, 20.9694, -70.4958, 0.55", "73.98, 21.741, -71.5077, 1.11", "76.0153, 23.4779, -73.8141, 0.28", "76.5069, 23.805, -74.3872, 0.55", "77.4332, 24.2508, -75.5153, 0.28", "77.9604, 24.4106, -76.1395, 0.55", "79.4237, 24.652, -77.9327, 0.28", "80.1072, 24.6423, -79.0972, 0.83", "83.8388, 24.0307, -86.0707, 0.28", "84.3393, 23.907, -87.0412, 0.83", "85.423, 23.5676, -89.1787, 0.28", "86.0785, 23.3162, -90.4827, 0.83", "91.3561, 20.9777, -100.993, 0.28", "91.935, 20.7003, -102.169, 0.55", "93.2658, 19.9657, -104.775, 0.28", "93.627, 19.774, -105.496, 0.83", "95.0482, 18.9692, -108.444, 0.28", "95.407, 18.7849, -109.158, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "48.6851, -1.2712, -45.8417, 0.55", "48.8613, -1.65015, -47.1011, 0.55", "49.7849, -3.42044, -52.845, 0.28", "50.0315, -3.86772, -54.2718, 0.83", "50.558, -4.70207, -56.758, 0.28", "50.8152, -5.07942, -57.8246, 0.83", "52.845, -8.11422, -65.4204, 0.55", "53.6168, -9.2638, -67.6975, 0.28", "54.1323, -10.007, -68.8085, 0.83", "55.8632, -12.5576, -71.8391, 0.28", "56.2207, -13.107, -72.325, 0.83", "57.4763, -15.2959, -73.5137, 0.28", "59.9281, -19.7989, -74.5992, 0.28", "60.1539, -20.2663, -74.6715, 0.83", "60.5131, -21.0971, -74.7495, 0.28", "60.8004, -21.8518, -74.7738, 0.55", "62.7978, -27.4926, -74.9879, 0.28", "62.9187, -27.8586, -74.9988, 0.55", "63.4037, -29.4771, -75.0332, 0.28", "63.6723, -30.3331, -75.0316, 0.55", "64.6772, -33.4087, -75.448, 0.28", "64.814, -33.8266, -75.5549, 0.55", "65.9546, -37.2091, -76.8524, 0.28", "66.261, -38.1825, -77.3037, 0.55", "66.5295, -39.1457, -77.8039, 0.55", "68.0658, -45.442, -81.5057, 0.28", "68.1729, -46.019, -81.898, 0.55", "68.3659, -47.4932, -82.9387, 0.28", "68.3717, -47.8957, -83.2466, 0.55", "68.2573, -49.3591, -84.2236, 0.28", "68.2412, -49.5457, -84.3394, 0.55", "68.1926, -50.156, -84.643, 0.28", "68.17, -51.0234, -85.1066, 0.83", "68.2255, -54.825, -87.2668, 0.28", "68.2797, -55.7182, -87.7178, 0.55", "68.7914, -61.0042, -90.2377, 0.28", "68.9457, -62.4077, -90.8996, 0.55", "69.262, -64.8115, -92.0035, 0.28", "69.3303, -65.2176, -92.1748, 0.55", "70.2176, -69.318, -93.4341, 0.28", "70.3938, -70.0329, -93.5975, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-5.16348, 21.3791, -28.736, 0.28", "-6.57413, 20.8476, -29.8889, 0.28", "-7.12948, 20.6167, -30.3424, 0.83", "-8.18049, 20.1869, -31.1435, 0.28", "-9.08061, 19.8286, -31.7899, 1.11", "-14.2395, 17.7749, -35.4942, 0.28", "-15.3635, 17.3274, -36.3014, 0.28", "-15.5109, 17.2646, -36.4288, 0.83", "-16.6498, 16.7319, -37.5419, 0.28", "-16.9357, 16.5801, -37.8655, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-5.16348, 21.3791, -28.736, 0.28", "-3.19953, 24.4215, -30.8958, 0.28", "-2.7629, 25.1583, -31.3633, 0.83", "-1.68682, 27.5468, -33.0969, 0.28", "-1.12089, 29.0519, -34.152, 0.28", "-0.688425, 30.4467, -35.1774, 0.83", "0.259181, 33.6415, -37.5732, 0.28", "0.697881, 35.3942, -38.9317, 1.11", "1.68897, 39.3653, -41.6866, 0.28", "2.27935, 41.501, -42.9998, 1.11", "3.48019, 45.7294, -45.4006, 0.28", "3.68902, 46.3952, -45.7363, 0.28", "4.4778, 48.5244, -46.667, 0.83", "5.89094, 51.7058, -47.8438, 0.28", "6.9013, 53.6086, -48.3518, 0.83", "8.34038, 56.3072, -49.2008, 0.28", "9.33414, 58.1938, -49.8206, 0.83", "10.1622, 59.9314, -50.4304, 0.28", "10.8672, 61.5654, -51.0537, 0.28", "11.7098, 63.6829, -51.8819, 0.83", "13.5515, 68.8395, -53.7036, 0.28", "13.9339, 70.0868, -54.0662, 0.55", "14.5884, 73.0842, -55.0238, 0.28", "14.7491, 74.0091, -55.2996, 0.55", "14.9886, 75.6526, -55.949, 0.28", "15.1684, 76.9544, -56.5358, 0.55", "15.3884, 78.4168, -57.2846, 0.83", "16.0438, 83.1506, -60.4711, 0.28", "16.3101, 84.8691, -61.7592, 0.55", "17.1658, 89.4808, -65.5113, 0.28", "17.4511, 90.7518, -66.5463, 0.28", "17.7534, 91.8164, -67.4028, 0.55", "18.4249, 93.8167, -68.9322, 0.28", "19.3423, 96.1477, -70.5051, 0.83", "22.0096, 101.526, -73.5358, 0.28", "23.7354, 104.372, -74.6214, 0.28", "24.1086, 104.849, -74.7516, 0.83", "24.9247, 105.724, -74.9637, 0.83", "25.7608, 106.458, -75.2226, 0.83", "29.6533, 109.61, -77.159, 0.28", "29.8446, 109.75, -77.2652, 0.83", "33.1559, 112.19, -79.6495, 0.28", "35.4159, 113.934, -81.9934, 0.83", "39.0492, 116.717, -85.7412, 0.28", "41.799, 118.945, -88.7986, 0.55", "42.7108, 119.761, -89.9516, 0.83", "43.4818, 120.468, -90.8485, 0.83", "47.2222, 124.052, -93.0809, 0.83", "54.8688, 130.925, -92.2262, 0.55", "55.4614, 131.526, -92.1123, 0.83", "57.09, 133.403, -92.0362, 0.28", "57.433, 133.892, -92.1465, 0.55", "59.4094, 137.482, -93.5309, 0.28", "61.873, 142.776, -96.3738, 0.55", "63.294, 146.069, -98.7491, 0.28", "63.6731, 146.959, -99.4633, 0.55", "64.3092, 148.351, -100.648, 0.28", "64.9644, 149.616, -101.621, 0.55", "66.3478, 151.786, -102.941, 0.28", "67.4095, 153.191, -103.38, 0.28", "69.2324, 155.428, -103.837, 0.55", "71.1409, 157.671, -104.097, 0.28", "73.3967, 160.292, -104.162, 0.83", "76.0712, 163.512, -103.978, 0.28", "77.8785, 165.861, -103.661, 0.28", "78.8312, 167.164, -103.456, 0.55", "80.7525, 169.927, -102.966, 0.28", "81.2849, 170.801, -102.858, 0.83", "82.7464, 173.506, -102.719, 0.28", "83.3942, 174.803, -102.764, 0.55", "84.4082, 176.789, -102.962, 0.28", "85.0145, 177.994, -103.142, 0.28", "86.1132, 180.254, -103.613, 0.55", "87.9091, 183.579, -104.555, 0.28", "89.2406, 185.694, -105.3, 0.28", "89.8368, 186.607, -105.638, 0.55", "90.8337, 188.124, -106.211, 0.28", "91.5992, 189.176, -106.671, 0.55", "93.6626, 191.584, -107.994, 0.28", "94.7461, 192.717, -108.774, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-7.88117, -13.2801, -2.02572, 0.55", "-9.86144, -13.1479, -5.35951, 0.55", "-11.8583, -13.0408, -9.14019, 1.11", "-14.013, -12.8918, -13.2062, 0.83", "-15.2983, -12.7551, -15.5117, 0.83", "-17.3119, -12.4739, -19.1593, 1.11", "-18.4334, -12.2437, -21.1721, 1.11", "-20.4755, -11.4024, -25.0653, 0.28", "-21.2613, -11.0526, -26.4865, 0.83", "-22.0601, -10.7148, -27.8487, 0.55", "-23.4608, -10.2476, -30.3147, 1.38", "-24.9841, -9.8788, -32.7877, 0.55", "-26.5719, -9.65265, -35.3565, 0.83", "-29.1017, -9.33994, -39.6791, 0.55", "-30.0719, -9.30054, -41.7873, 0.83", "-31.5788, -9.3614, -45.5857, 0.55", "-32.4765, -9.44356, -48.0517, 0.55", "-33.9646, -9.61154, -52.505, 0.55", "-35.3397, -9.6314, -56.9364, 1.11", "-37.3514, -9.01415, -63.3581, 1.11", "-37.8788, -8.69847, -64.9793, 0.28", "-38.1453, -8.45788, -65.6402, 0.55", "-39.1245, -7.46732, -67.2922, 0.28", "-40.629, -5.88411, -68.6817, 0.55", "-43.0509, -3.47011, -70.0804, 0.28", "-44.8775, -1.70294, -71.1391, 0.55", "-47.6026, 0.87071, -73.0156, 1.38", "-49.3191, 2.46, -74.3545, 1.11", "-51.6291, 4.54661, -76.5478, 0.28", "-53.04, 5.86245, -78.161, 0.83", "-55.8315, 8.6586, -81.8756, 0.28", "-56.1708, 8.99438, -82.4096, 0.55", "-57.3265, 10.1032, -84.4033, 0.28", "-59.175, 11.8152, -87.4722, 0.83", "-61.265, 13.5487, -91.0951, 0.28", "-62.1931, 14.2144, -92.5872, 0.83", "-65.3071, 16.1797, -97.0522, 0.28", "-66.1105, 16.601, -98.1834, 0.83", "-67.1672, 17.0468, -99.6312, 0.83", "-71.4775, 18.5986, -105.058, 0.28", "-74.5377, 19.5294, -108.693, 0.28", "-75.5868, 19.8508, -109.922, 1.11", "-77.5094, 20.452, -112.027, 0.28", "-77.9411, 20.582, -112.492, 0.55", "-79.7821, 21.0289, -114.332, 0.28", "-80.316, 21.124, -114.835, 0.55", "-82.7272, 21.3516, -117.396, 0.28", "-83.4995, 21.3964, -118.292, 0.83", "-85.7517, 21.4708, -121.039, 0.28", "-86.5193, 21.4537, -121.965, 0.83", "-88.6628, 21.2609, -124.645, 0.28", "-89.1418, 21.2454, -125.189, 0.55", "-90.9858, 21.2676, -127.096, 0.28", "-91.6189, 21.3291, -127.742, 0.55", "-94.6526, 21.8013, -130.694, 0.28", "-96.3996, 22.1519, -132.368, 0.83", "-100.112, 22.9886, -135.751, 0.28", "-100.599, 23.1046, -136.19, 0.83", "-106.003, 24.46, -140.933, 0.28", "-107.001, 24.7183, -141.822, 0.83", "-110.04, 25.5397, -144.686, 0.28", "-110.779, 25.7359, -145.376, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-7.88117, -13.2801, -2.02572, 0.83", "-7.72834, -14.4775, -3.77822, 0.83", "-7.45744, -16.7547, -7.42395, 1.11", "-7.29878, -18.364, -9.96788, 1.11", "-7.19759, -20.3815, -13.0917, 1.11", "-7.18328, -22.1971, -15.9494, 1.11", "-7.2821, -25.4861, -21.1311, 1.11", "-7.28469, -26.6212, -23.1084, 0.83", "-7.29049, -27.3095, -24.3259, 1.38", "-7.45148, -29.6095, -28.4199, 0.83", "-7.80521, -31.9323, -32.2881, 0.83", "-8.12912, -33.6599, -34.9346, 1.11", "-8.60466, -36.0929, -38.4269, 0.83", "-8.82731, -37.3335, -40.1193, 0.55", "-9.01661, -38.5445, -41.6671, 1.38", "-9.16752, -39.72, -42.9907, 0.83", "-9.28507, -40.8748, -44.0855, 1.11", "-9.54702, -43.7465, -46.577, 1.11", "-9.69887, -45.3356, -47.7558, 0.28", "-9.74697, -46.4173, -48.4941, 0.83", "-9.70027, -48.6365, -50.0085, 0.28", "-9.69655, -49.3102, -50.468, 0.55", "-9.82159, -51.4779, -51.7957, 0.28", "-10.0715, -53.0711, -52.7449, 1.38", "-10.4492, -54.8446, -53.8543, 1.38", "-11.1309, -57.5704, -55.708, 0.55", "-11.5577, -59.2384, -56.8144, 0.55", "-12.2344, -61.7465, -58.5471, 1.38", "-13.314, -65.8316, -61.3953, 0.28", "-13.9988, -68.8751, -63.8689, 0.83", "-14.5823, -71.8368, -66.4613, 0.28", "-14.8954, -73.7931, -68.2286, 0.28", "-15.0339, -75.2778, -69.6416, 0.83", "-15.0487, -76.2092, -70.5813, 0.83", "-14.7757, -81.3704, -75.7555, 0.28", "-14.7202, -81.9594, -76.3635, 0.55", "-14.5714, -84.0183, -78.449, 0.28", "-14.5768, -84.2739, -78.7232, 0.55", "-14.823, -86.9578, -81.5264, 0.28", "-15.0165, -88.0338, -82.7048, 1.11", "-16.0268, -91.9909, -86.9832, 0.28", "-16.6539, -94.2718, -89.5011, 0.83", "-17.9844, -98.7572, -94.4679, 0.28", "-18.1965, -99.4618, -95.2784, 0.83", "-19.3331, -103.175, -99.7557, 0.28", "-19.4705, -103.682, -100.424, 0.83", "-19.6947, -104.637, -101.807, 0.28", "-19.7753, -105.167, -102.614, 0.55", "-19.9181, -108.04, -106.907, 0.28", "-19.9271, -109.197, -108.723, 0.55", "-19.8564, -110.503, -110.814, 0.28", "-19.7912, -111.542, -112.69, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-1.97935, -32.7408, -0.320854, 2.49", "-2.24275, -36.3758, -0.28049, 2.49" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.97935, -32.7408, -0.320854, 0.83", "-0.698058, -33.5818, -0.153879, 0.83", "0.225025, -34.1294, 0.12761, 0.55", "1.06279, -34.6723, 0.440364, 0.55", "2.3599, -35.6126, 0.933958, 0.55", "3.22531, -36.2755, 1.38253, 0.83", "4.63168, -37.3627, 2.10611, 0.55", "6.23948, -38.6052, 3.02566, 0.55", "7.41273, -39.5452, 3.71867, 0.83", "9.11389, -41.0, 4.72519, 0.83", "11.35, -42.7643, 6.06218, 0.83", "13.01, -43.9635, 6.97283, 0.83", "14.8453, -45.1916, 7.89399, 0.83", "16.7187, -46.3999, 8.77129, 0.83", "18.3058, -47.2818, 9.46519, 0.83", "20.6042, -48.4592, 10.3692, 0.83", "22.4391, -49.4116, 10.9753, 0.83", "23.673, -50.0606, 11.3942, 0.55", "25.4306, -50.9985, 11.9183, 0.83", "27.5961, -52.1216, 12.5593, 0.55", "29.0982, -52.9454, 12.9866, 0.55", "30.3085, -53.7381, 13.2965, 0.55", "30.8392, -54.1004, 13.43, 0.55", "32.2624, -55.0487, 13.7631, 0.83", "34.6599, -56.5767, 14.3225, 0.55", "35.0465, -56.7988, 14.4152, 0.55", "37.1901, -57.9075, 15.0062, 0.55", "38.0898, -58.3312, 15.2741, 0.55", "39.1163, -58.7987, 15.5855, 0.55", "40.4412, -59.3581, 15.9946, 0.55", "42.1457, -59.9721, 16.4836, 0.55", "44.2571, -60.63, 17.1721, 0.55", "44.8473, -60.7415, 17.4228, 1.11" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-45.4719, 20.3881, 3.31076, 0.55", "-47.8355, 21.8533, 3.73966, 0.55", "-51.1624, 23.9368, 4.27064, 0.83", "-53.5783, 25.504, 5.41076, 0.55", "-56.109, 27.2443, 7.20839, 0.55", "-59.5909, 29.6842, 10.0569, 1.38", "-61.9694, 31.3433, 12.0936, 0.28", "-63.3087, 32.274, 13.2783, 0.55", "-69.9138, 36.5583, 18.7818, 0.55", "-71.8526, 37.8008, 20.3693, 0.28", "-73.3807, 38.8033, 21.5743, 0.83", "-76.3957, 40.8585, 23.8363, 0.55", "-79.369, 42.9809, 25.5733, 0.55", "-81.9406, 44.8914, 26.5437, 0.55", "-84.2559, 46.7174, 27.0467, 0.28", "-86.6625, 48.71, 27.4946, 0.55", "-89.5082, 51.2141, 27.7754, 0.28", "-93.1561, 54.6411, 27.8437, 0.55", "-96.2717, 57.7914, 27.7473, 0.55", "-98.4707, 60.154, 27.5042, 0.28", "-99.7443, 61.5632, 27.2302, 0.55", "-103.44, 65.85, 26.0294, 0.28", "-103.65, 66.0989, 25.9355, 0.55", "-105.531, 68.4984, 24.8591, 0.28", "-106.407, 69.7148, 24.3741, 0.55", "-107.47, 71.3031, 23.8923, 0.28", "-108.111, 72.2862, 23.7983, 0.55", "-110.321, 75.5469, 24.0277, 0.28", "-111.57, 77.204, 24.1997, 0.83", "-113.26, 79.2248, 24.4712, 0.28", "-114.675, 80.7737, 24.6617, 0.55", "-117.833, 83.882, 24.9807, 0.28", "-119.815, 85.6741, 25.1154, 0.55", "-122.644, 87.8778, 25.1492, 0.28", "-124.744, 89.2901, 25.0651, 0.55", "-128.199, 91.2705, 24.6703, 0.28", "-130.017, 92.1506, 24.3745, 0.28", "-130.716, 92.4159, 24.1948, 0.83", "-134.668, 93.6448, 23.0522, 0.28", "-136.221, 94.0212, 22.411, 0.83", "-138.917, 94.5588, 21.2303, 0.28", "-139.86, 94.6627, 20.7368, 0.55", "-143.856, 94.8367, 18.2254, 0.28", "-144.987, 94.7785, 17.3757, 0.55", "-149.576, 94.1575, 13.3813, 0.28", "-152.049, 93.6286, 10.9895, 0.55", "-157.21, 92.0625, 5.79205, 0.28", "-158.633, 91.5596, 4.18215, 0.83", "-161.423, 90.4134, 0.804641, 0.28", "-161.423, 90.4134, 0.804641, 0.55", "-163.367, 89.44, -1.50392, 0.28", "-164.631, 88.7784, -3.14305, 0.83", "-168.414, 86.8666, -8.07228, 0.28", "-169.004, 86.6078, -8.83485, 0.55", "-169.851, 86.3261, -9.90848, 0.28", "-170.87, 86.0331, -11.2396, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-45.4719, 20.3881, 3.31076, 0.28", "-44.4419, 23.0668, 2.59515, 0.28", "-44.0694, 24.0236, 2.46533, 0.55", "-43.5282, 25.489, 2.33018, 0.28", "-43.1084, 26.6893, 2.28107, 0.55", "-42.6808, 27.9712, 2.2394, 0.28", "-42.3861, 29.1443, 1.92926, 0.55", "-42.1986, 30.8736, 0.888454, 0.28", "-42.2088, 31.4736, 0.399761, 0.55", "-42.3674, 33.4599, -1.41935, 0.28", "-42.4356, 34.1606, -2.08294, 0.83", "-42.969, 40.3132, -7.77452, 0.28", "-43.0327, 41.2245, -8.595, 1.11", "-43.1596, 43.7872, -10.9761, 0.28", "-43.1937, 45.9924, -12.9299, 0.28", "-43.1561, 47.3026, -14.0649, 0.55", "-42.9576, 48.9573, -15.2392, 0.28", "-42.7698, 49.8361, -15.651, 0.55", "-42.4373, 51.7109, -16.8397, 0.28", "-42.3612, 52.3263, -17.3088, 0.55", "-42.3067, 53.5454, -18.2376, 0.28", "-42.3078, 54.2349, -18.6146, 0.55", "-42.3763, 56.5934, -19.6114, 0.28", "-42.3608, 59.2083, -20.087, 0.55", "-42.3024, 62.4655, -20.221, 0.28", "-42.3158, 63.4734, -20.2918, 0.55", "-42.4892, 67.8645, -20.6556, 0.28", "-42.5385, 68.8788, -20.7475, 0.83", "-42.7197, 73.2478, -21.1521, 0.28", "-42.7372, 74.0205, -21.2246, 0.83", "-43.0994, 79.5484, -22.361, 0.28", "-43.1689, 80.2698, -22.5306, 0.55", "-43.5393, 82.6773, -23.3375, 0.28", "-43.6586, 83.3855, -23.6021, 0.55", "-44.0189, 85.0636, -24.4355, 0.28", "-44.0447, 85.6124, -24.5024, 0.55", "-43.9809, 86.7218, -24.3745, 0.28", "-43.9493, 87.2701, -24.3037, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "29.4471, 1.83468, 10.0691, 0.55", "30.6707, 0.76404, 12.3173, 0.55", "30.9441, 0.517425, 12.8089, 1.38", "31.8169, -0.339705, 14.281, 0.55", "33.134, -1.72345, 16.3441, 0.83", "35.0898, -3.77837, 19.4079, 0.55", "35.7037, -4.42336, 20.3696, 0.55", "35.9455, -4.65708, 20.7312, 0.55", "36.7786, -5.46276, 22.0318, 0.55", "37.287, -5.96776, 22.8443, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "29.4471, 1.83468, 10.0691, 0.83", "31.7325, 1.83517, 10.2658, 0.83", "33.3344, 1.88097, 10.3551, 0.83", "34.5801, 1.97171, 10.4912, 0.83", "36.8117, 2.18116, 10.8149, 0.83", "39.1632, 2.44186, 11.1757, 0.83", "41.6654, 2.71126, 11.5406, 0.83", "43.7563, 2.88515, 11.8732, 0.83", "45.9614, 2.95747, 12.2305, 0.55", "48.031, 3.00936, 12.4585, 0.83", "51.1437, 3.01538, 12.5896, 0.83", "53.9205, 2.9627, 12.4917, 0.83", "56.1856, 2.86502, 12.298, 0.55", "57.8125, 2.75311, 12.0871, 0.83", "61.7541, 2.48081, 11.3408, 0.83", "63.1815, 2.40739, 11.0309, 0.83", "65.4377, 2.33355, 10.5226, 0.55", "66.9429, 2.34466, 10.1969, 0.55", "69.4549, 2.5531, 9.71628, 0.83", "71.8362, 2.82607, 9.41613, 0.55", "73.1029, 2.9874, 9.38206, 0.55", "73.9661, 3.10782, 9.41871, 0.55", "75.478, 3.36413, 9.5516, 0.55", "77.5147, 3.71026, 9.81884, 0.55", "79.1753, 3.91492, 10.1465, 0.83", "80.2135, 3.95207, 10.3941, 0.83", "82.3518, 3.87676, 10.9081, 0.55", "84.7453, 3.5626, 11.4786, 0.55", "85.7614, 3.33314, 11.7244, 0.55", "87.7251, 2.6534, 12.2157, 0.28", "89.3135, 1.98629, 12.6137, 0.28", "89.962, 1.65899, 12.7839, 0.55", "91.5865, 0.73597, 13.2082, 0.28", "91.9921, 0.458925, 13.3247, 0.55", "93.9135, -0.918945, 13.8733, 0.28", "94.6253, -1.41277, 14.0715, 0.28", "95.3783, -1.92036, 14.3276, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "28.7966, 31.2048, 18.4166, 0.55", "26.5348, 32.6451, 17.6942, 0.55", "24.3793, 33.9216, 16.8867, 0.55", "23.622, 34.3677, 16.5932, 0.55", "22.6857, 34.9842, 16.216, 0.83", "19.7314, 37.1469, 14.9981, 0.28", "19.3956, 37.4241, 14.8489, 0.55", "17.6254, 39.0896, 13.9315, 0.28", "17.0713, 39.7928, 13.5657, 1.11", "15.2678, 42.87, 12.2013, 0.28", "14.8598, 43.8598, 11.8034, 0.55", "14.3912, 45.5497, 11.2173, 0.28", "14.2132, 46.4205, 10.9434, 0.55", "13.7141, 49.8288, 10.0211, 0.28", "13.5737, 51.0677, 9.72927, 0.55", "13.4017, 53.0904, 9.3454, 0.28", "13.3754, 53.4264, 9.2944, 0.83", "13.2272, 56.0237, 9.02447, 0.28", "13.2249, 57.9158, 8.73835, 0.28", "13.3081, 59.9293, 8.46141, 0.28", "13.4367, 61.0321, 8.30702, 0.55", "13.9629, 63.9478, 8.10758, 0.28", "14.2486, 65.0553, 8.0623, 0.55", "15.5339, 68.5481, 8.18291, 0.28", "16.5376, 70.7247, 8.46059, 0.83", "17.705, 73.0495, 8.88926, 0.83", "18.9526, 75.3106, 9.52317, 0.28", "19.3984, 76.0395, 9.88857, 0.55", "20.5068, 77.7583, 11.1722, 0.28", "20.6439, 77.9602, 11.4048, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "28.7966, 31.2048, 18.4166, 0.55", "29.6114, 32.7437, 19.2089, 0.55", "30.1356, 33.7451, 19.7472, 1.11", "31.0161, 35.5064, 20.6973, 0.83", "32.261, 38.0964, 21.8508, 0.83", "33.8851, 41.5594, 23.2628, 0.83", "34.6783, 43.1798, 23.8644, 0.83", "35.302, 44.421, 24.3411, 0.28", "35.7024, 45.2334, 24.6365, 0.55", "36.9833, 48.0088, 25.5584, 0.83", "37.6147, 49.3929, 25.9677, 0.83", "38.5173, 51.46, 26.4431, 0.55", "39.2405, 53.157, 26.9464, 0.83", "40.2938, 55.641, 27.8891, 0.83", "40.5764, 56.3379, 28.2205, 0.83", "40.9388, 57.394, 28.906, 0.83", "41.2559, 58.5603, 29.713, 0.83", "41.5727, 59.8729, 30.7666, 0.55", "41.8801, 60.9559, 31.6932, 0.28", "42.0698, 61.5805, 32.2673, 0.55", "42.5736, 63.067, 33.5941, 0.28", "42.7535, 63.6272, 34.0345, 0.55", "43.3645, 65.4732, 35.2776, 0.28", "43.4955, 65.9709, 35.5323, 0.83", "43.7811, 67.0075, 35.9725, 0.28", "43.8752, 67.3365, 36.0783, 0.55", "44.2105, 68.6932, 36.4795, 0.28", "44.4461, 69.8157, 36.8045, 0.55", "44.6957, 71.3921, 37.2496, 0.28", "44.9205, 72.7601, 37.694, 0.28", "45.2371, 74.4725, 38.3361, 0.28", "45.611, 76.5143, 39.1428, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "5.36418, 57.3661, 0.830616, 0.83", "4.70199, 59.2614, 0.991333, 0.83", "3.68725, 62.5021, 1.24524, 0.83", "2.86906, 65.6582, 1.4565, 0.83", "2.24355, 68.2763, 1.49402, 0.83", "1.35294, 72.4827, 1.44443, 0.83", "0.833471, 75.2983, 1.36015, 0.55", "0.438254, 77.9224, 1.13731, 0.83", "-0.18553, 83.1719, 0.364576, 0.83", "-0.654964, 88.7231, -0.666373, 0.83", "-0.824141, 91.0807, -1.24035, 1.11", "-1.02615, 94.32, -2.13473, 0.83", "-1.30876, 99.8452, -3.68805, 0.83", "-1.6549, 105.557, -5.24183, 0.83", "-2.00772, 110.389, -6.57911, 0.83", "-2.42983, 115.718, -7.97808, 0.83", "-2.89178, 120.564, -9.16726, 0.83", "-3.39579, 125.132, -10.1915, 0.83", "-3.7654, 128.454, -10.7933, 0.83", "-4.26221, 132.407, -11.4029, 0.83", "-4.51696, 134.371, -11.6546, 0.83", "-4.78525, 136.796, -11.8537, 0.55", "-5.0758, 139.404, -12.1881, 0.55", "-5.45004, 142.708, -12.7148, 0.55", "-5.60062, 144.66, -13.0486, 0.55", "-5.84643, 148.028, -13.5279, 0.28", "-5.94404, 149.502, -13.7506, 0.55", "-6.20141, 152.949, -14.5616, 0.28", "-6.4101, 155.554, -15.2814, 0.28", "-6.59255, 157.375, -15.9399, 0.28", "-6.87846, 159.807, -16.9011, 0.55", "-7.23317, 162.361, -17.9259, 0.55", "-7.95378, 167.327, -19.743, 0.28", "-8.34553, 169.875, -20.552, 1.38", "-8.99717, 174.023, -21.9715, 0.55", "-9.43488, 176.392, -22.8091, 0.55", "-9.66938, 177.609, -23.255, 0.55", "-10.4516, 181.081, -24.3368, 0.55", "-10.9457, 183.424, -24.6373, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "5.36418, 57.3661, 0.830616, 0.83", "5.58388, 60.8789, 1.09402, 0.83", "5.78183, 63.5074, 1.36616, 0.83", "5.92515, 65.5145, 1.58749, 0.83", "6.1123, 68.1983, 1.9703, 0.83", "6.33028, 70.9481, 2.38452, 0.83", "6.63589, 74.6214, 2.93633, 0.83", "7.01468, 78.8856, 3.60428, 0.83", "7.34061, 82.2863, 4.12661, 0.83", "7.81044, 86.5747, 4.75125, 0.83", "8.08224, 88.8683, 5.06532, 0.83", "8.3611, 91.2928, 5.34651, 0.83", "8.6796, 94.2159, 5.64942, 0.83", "8.87682, 96.5394, 5.79366, 0.83", "8.90951, 97.3132, 5.82438, 0.83", "8.82618, 99.9752, 5.91478, 0.83", "8.4793, 102.898, 5.94105, 0.83", "7.91671, 106.122, 5.89523, 0.83", "7.04977, 110.523, 5.72024, 0.83", "6.47894, 113.267, 5.53763, 0.83", "5.7525, 116.999, 5.13964, 0.83", "4.81485, 121.62, 4.57401, 0.83", "3.74247, 126.88, 3.85688, 0.83", "2.74298, 131.925, 3.08856, 0.83", "1.67657, 137.595, 2.14745, 0.83", "0.550796, 145.215, 0.696934, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-2.24275, -36.3758, -0.28049, 1.38", "-2.01181, -38.6984, -0.511162, 1.38", "-1.84373, -40.3888, -0.679051, 1.38" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-2.24275, -36.3758, -0.28049, 0.83", "-3.59689, -39.7611, -0.844915, 0.83", "-4.76455, -42.6968, -1.5197, 1.11", "-5.67229, -44.9985, -2.10657, 0.28", "-7.42993, -49.478, -3.21247, 0.83", "-9.4603, -54.6701, -4.38953, 0.28", "-10.6019, -57.534, -5.01534, 0.83", "-11.8335, -60.5505, -5.75551, 0.28", "-12.0223, -60.9831, -5.86434, 0.83", "-13.7948, -64.7131, -6.79654, 0.83", "-15.2039, -67.5693, -7.33229, 0.83", "-15.9455, -68.9828, -7.53752, 0.83", "-17.3886, -71.6076, -7.8678, 0.28", "-18.3001, -73.2636, -7.99201, 1.11", "-20.6916, -77.5704, -8.25981, 0.28", "-22.2478, -80.406, -8.3655, 0.83", "-23.4645, -82.7144, -8.35062, 0.28", "-23.8067, -83.3953, -8.36036, 0.83", "-24.5034, -84.8169, -8.428, 0.28", "-24.8427, -85.4997, -8.53717, 0.55", "-25.5207, -86.6847, -8.82888, 0.28", "-25.9336, -87.303, -9.02278, 1.11", "-29.1298, -91.901, -10.3132, 0.28", "-29.8487, -92.8742, -10.5429, 0.55", "-31.9128, -95.7901, -11.0004, 0.28", "-33.2721, -97.7901, -11.1601, 0.28", "-34.5915, -99.8414, -11.157, 0.83", "-35.9899, -102.242, -10.911, 0.28", "-36.7306, -103.784, -10.5047, 0.55", "-38.1314, -107.437, -9.42115, 0.28", "-38.4092, -108.335, -9.15507, 0.55", "-39.2221, -111.643, -8.30997, 0.28", "-39.4464, -112.816, -8.07082, 0.83", "-40.0867, -116.793, -7.48401, 0.28", "-40.5064, -120.113, -7.08368, 0.28", "-40.6971, -121.696, -6.97257, 0.83", "-41.1077, -125.092, -7.09526, 0.28", "-41.484, -128.433, -7.57683, 0.28", "-41.5729, -129.238, -7.77757, 0.83", "-41.8399, -131.633, -8.66896, 0.28", "-41.9999, -133.293, -9.38782, 0.55", "-42.3614, -137.827, -11.5528, 0.28", "-42.4046, -138.495, -11.9255, 0.55", "-42.5252, -140.731, -13.2614, 0.28", "-42.5494, -141.212, -13.5244, 0.55", "-42.5804, -141.823, -13.8358, 0.28", "-42.6003, -142.511, -14.0597, 0.55", "-42.6547, -144.502, -14.4626, 0.28", "-42.6958, -145.548, -14.5846, 0.55", "-42.786, -148.601, -14.7622, 0.28", "-42.8052, -149.601, -14.8191, 0.83", "-42.8948, -153.698, -15.0059, 0.28", "-42.9137, -154.695, -15.0362, 0.83", "-43.0205, -160.458, -15.1321, 0.28", "-43.0747, -166.097, -15.0561, 0.28", "-43.0419, -168.402, -14.9615, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "45.611, 76.5143, 39.1428, 0.28", "45.5045, 78.8051, 40.3116, 0.28", "45.4317, 81.4725, 41.7574, 0.28", "45.4224, 83.47, 42.8563, 0.28", "45.3838, 84.2164, 43.1641, 0.55", "45.2098, 85.9432, 43.6869, 0.28", "45.0678, 86.9466, 43.9306, 0.55", "44.9079, 88.0449, 44.0576, 0.28", "44.7394, 88.8204, 44.0729, 0.55", "43.6186, 92.7137, 43.7205, 0.28", "43.0477, 94.4537, 43.3855, 0.28", "42.7978, 95.0987, 43.1815, 0.28", "42.0996, 96.666, 42.5786, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "45.611, 76.5143, 39.1428, 0.55", "46.9703, 77.0505, 36.5008, 0.55", "48.0192, 77.2828, 34.2302, 0.55", "48.8411, 77.3067, 32.0549, 0.55", "50.6862, 77.1168, 26.9746, 0.28", "51.269, 76.9792, 25.5628, 0.55", "52.8759, 76.4645, 22.0921, 0.28", "53.6629, 76.0774, 20.4166, 0.55", "55.1074, 75.287, 17.8423, 0.28", "55.8189, 74.9617, 16.9593, 0.55", "58.1102, 74.0313, 14.9519, 0.28", "59.1202, 73.6446, 14.1352, 0.83", "62.0036, 72.5255, 12.0384, 0.28", "63.8344, 71.7813, 10.7458, 0.55", "66.8157, 70.3904, 8.68952, 0.28", "67.7452, 69.905, 8.06986, 0.55", "70.0427, 68.7449, 6.29237, 0.28", "71.4665, 68.0377, 5.26555, 0.55", "73.6089, 67.0609, 3.94206, 0.28", "75.0964, 66.8242, 3.23243, 0.55", "77.979, 67.9982, 1.55207, 0.28", "82.1919, 70.9055, -1.56033, 0.28", "84.0646, 72.7862, -4.04019, 0.55", "85.3743, 74.4231, -6.93689, 0.28", "85.7688, 75.1186, -8.20349, 0.83", "86.8767, 77.8762, -14.2456, 0.28", "86.893, 77.9871, -14.6357, 0.55", "86.6354, 78.2305, -19.9583, 0.28", "86.5386, 78.2423, -21.078, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-10.9457, 183.424, -24.6373, 0.83", "-12.9332, 188.498, -25.7158, 0.83", "-13.7702, 190.591, -26.2714, 0.83", "-14.7054, 192.98, -26.9439, 0.55", "-15.4231, 194.799, -27.4555, 0.83", "-16.2061, 196.849, -28.0212, 0.83", "-17.07, 199.145, -28.7002, 0.83", "-18.107, 202.189, -29.4873, 0.55", "-18.3613, 203.012, -29.7643, 0.83", "-18.65, 204.035, -30.168, 0.55", "-18.9412, 205.048, -30.6109, 0.83", "-19.4213, 206.732, -31.5014, 0.28", "-19.8354, 208.335, -32.3826, 0.55", "-20.4753, 210.605, -33.832, 0.55", "-20.8875, 212.006, -34.839, 0.28", "-21.4443, 213.871, -36.3153, 0.55", "-22.225, 216.24, -38.3395, 0.55", "-22.7433, 217.611, -39.6263, 0.55", "-24.2439, 220.679, -43.1077, 0.28", "-24.5025, 221.095, -43.6578, 0.55", "-25.1748, 221.906, -44.9582, 0.28", "-25.7911, 222.518, -46.0699, 0.83", "-26.7069, 223.311, -47.5612, 0.55", "-28.1214, 224.392, -49.759, 0.83", "-29.0966, 225.072, -51.1095, 0.83", "-31.9363, 226.923, -54.833, 0.83", "-33.0112, 227.579, -56.1883, 0.55", "-33.5002, 227.887, -56.8078, 0.83", "-35.232, 229.048, -58.9871, 0.28", "-35.6537, 229.337, -59.5025, 0.55", "-37.4719, 230.44, -61.6789, 0.28", "-38.3146, 230.934, -62.5114, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-10.9457, 183.424, -24.6373, 0.55", "-10.3898, 184.056, -24.673, 0.55", "-10.0553, 184.435, -24.6944, 0.28", "-9.50301, 185.063, -24.7299, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "0.550796, 145.215, 0.696934, 0.55", "2.35758, 146.554, -1.81749, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "0.550796, 145.215, 0.696934, 0.83", "0.0656282, 147.723, -0.136183, 0.83", "-0.604073, 153.403, -2.08927, 0.55", "-0.759973, 155.964, -2.89557, 1.11", "-0.90041, 159.775, -3.98666, 0.55", "-0.920917, 162.184, -4.6464, 0.83", "-0.909794, 165.439, -5.51642, 0.55", "-0.726247, 170.569, -6.84834, 0.83", "-0.40758, 175.636, -8.05352, 0.83", "-0.225455, 178.519, -8.74018, 0.83", "-0.120365, 180.299, -9.12371, 0.83", "-0.0801181, 182.057, -9.44878, 0.55", "-0.105533, 183.343, -9.66199, 0.83", "-0.312025, 185.742, -10.0582, 0.55", "-0.500976, 187.369, -10.3088, 0.55", "-0.945982, 190.265, -10.6731, 0.83", "-1.58809, 193.619, -10.9857, 0.28", "-1.97739, 195.64, -11.1806, 0.55", "-2.36257, 197.576, -11.3572, 0.28", "-3.45397, 202.728, -11.8236, 0.55", "-4.43462, 207.031, -12.2165, 0.28", "-5.21429, 210.142, -12.4926, 0.55", "-6.36549, 214.597, -12.8624, 0.28", "-7.11492, 217.263, -13.0769, 0.55", "-8.84416, 222.972, -13.4984, 0.28", "-10.0107, 226.746, -13.7808, 0.55", "-11.4237, 231.448, -14.0827, 0.28", "-11.9164, 233.029, -14.1684, 0.55", "-12.5164, 234.84, -14.2174, 0.28", "-13.2879, 237.25, -14.3294, 0.55", "-14.1609, 240.168, -14.5237, 0.28", "-14.7187, 242.025, -14.8442, 0.55", "-15.2459, 243.989, -15.3776, 0.28", "-16.0563, 247.152, -16.3697, 0.55", "-16.691, 249.91, -17.3863, 0.28", "-17.0141, 251.495, -18.0877, 0.55", "-17.8116, 255.306, -20.0716, 0.28", "-18.1336, 256.975, -21.1255, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-1.84373, -40.3888, -0.679051, 0.83", "-1.61137, -43.7597, -0.223515, 0.83", "-1.30109, -47.3667, 0.260528, 0.83", "-0.80991, -52.7819, 0.977101, 0.83", "-0.427493, -56.934, 1.52047, 0.83", "0.217267, -62.9704, 2.36525, 0.83", "0.553037, -65.802, 2.76741, 0.83", "0.821502, -67.4028, 3.03782, 1.11", "1.1448, -68.9048, 3.35991, 0.28", "1.25861, -69.393, 3.4768, 0.55", "1.57458, -71.7352, 4.01143, 0.28", "1.5589, -72.8878, 4.2151, 0.55", "1.37305, -75.1126, 4.61392, 0.28", "1.2134, -76.475, 4.835, 0.55", "0.680811, -80.1883, 5.37187, 0.28", "0.0149439, -84.0894, 5.84628, 0.83", "-0.595021, -87.1373, 6.1427, 0.28", "-1.22304, -90.038, 6.37667, 0.28", "-2.18152, -94.3891, 6.59513, 0.28", "-2.40522, -95.7038, 6.66554, 0.55", "-2.50233, -97.0779, 6.8189, 0.28", "-2.47817, -98.3646, 6.99095, 0.55", "-2.36169, -99.7973, 7.21833, 0.28", "-2.13564, -101.404, 7.48969, 0.55", "-1.2643, -106.444, 8.36967, 0.28", "-0.433937, -110.534, 9.07713, 0.83", "0.407602, -114.331, 9.74298, 0.28", "0.635395, -115.35, 9.92051, 0.83", "1.17607, -117.731, 10.3289, 0.28", "1.76895, -120.545, 10.8435, 0.28", "2.27385, -122.874, 11.3624, 0.83", "2.81691, -125.464, 11.9857, 0.55", "3.09213, -126.989, 12.34, 0.55", "3.35733, -128.699, 12.6761, 0.83", "3.78648, -132.022, 13.2536, 0.55", "4.31332, -136.757, 13.829, 0.28", "4.54081, -139.651, 14.0512, 0.55", "4.85055, -144.881, 14.1876, 0.28", "4.96352, -147.55, 14.159, 0.28", "4.98004, -148.592, 14.0999, 0.55", "4.91967, -152.049, 13.6317, 0.28", "4.8231, -153.533, 13.3253, 0.28", "4.69749, -156.947, 12.7253, 0.28", "4.80376, -158.658, 12.6312, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-1.84373, -40.3888, -0.679051, 0.83", "0.0719189, -43.1185, -0.526372, 0.83", "2.79962, -46.5995, -0.394622, 0.83", "4.88933, -48.9869, -0.387031, 0.83", "7.59715, -51.744, -0.547415, 1.11", "10.2685, -54.2969, -0.863996, 0.83", "12.6045, -56.4426, -1.22374, 0.83", "15.6534, -59.1327, -1.85075, 0.83", "19.3582, -62.3071, -2.80153, 0.83", "22.5134, -64.8968, -3.6833, 0.83", "25.7449, -67.5095, -4.69656, 0.83", "28.1656, -69.577, -5.52578, 0.83", "31.588, -72.7378, -6.7052, 0.83", "33.6889, -74.8796, -7.47218, 0.83", "35.4401, -76.883, -8.04867, 0.83", "38.1034, -80.36, -8.80344, 0.83", "40.0791, -83.1891, -9.2945, 0.83", "41.0932, -84.7175, -9.54508, 0.83", "42.505, -86.9687, -9.90252, 0.83", "44.9503, -91.0618, -10.6307, 0.83", "46.9115, -94.3882, -11.2733, 0.83", "48.972, -97.7162, -12.0526, 0.83", "50.2495, -99.6813, -12.601, 0.83", "52.3327, -102.586, -13.427, 0.83", "55.2697, -106.45, -14.5615, 0.83", "59.1177, -111.236, -16.0823, 0.83", "62.1703, -114.87, -17.2499, 0.83", "66.6503, -120.125, -18.9422, 0.83", "70.0887, -124.152, -20.2191, 0.55", "71.8061, -126.175, -20.8568, 0.55", "73.991, -128.814, -21.667, 0.55", "75.7167, -131.058, -22.3217, 0.55", "77.4631, -133.514, -23.0127, 0.55", "78.7979, -135.521, -23.6155, 0.55", "80.9389, -139.077, -24.7629, 0.55", "82.6064, -141.878, -25.6325, 0.55", "84.0886, -144.425, -26.3769, 0.28", "85.3004, -146.526, -26.9612, 0.55", "87.2094, -149.828, -27.8393, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-38.3146, 230.934, -62.5114, 0.28", "-39.3263, 232.527, -63.0847, 0.28", "-39.8034, 233.278, -63.3551, 0.83", "-40.8393, 234.909, -63.9421, 0.55", "-41.1685, 235.428, -64.1287, 0.83", "-42.1246, 236.933, -64.6705, 0.55", "-42.617, 237.709, -64.9496, 0.83" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-38.3146, 230.934, -62.5114, 0.55", "-37.1403, 232.317, -62.0905, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-42.617, 237.709, -64.9496, 0.55", "-43.8417, 240.019, -64.5339, 0.55", "-44.6094, 241.457, -64.2602, 0.83", "-46.3207, 244.5, -63.6791, 0.28", "-47.2158, 245.968, -63.4116, 0.55", "-48.7557, 248.37, -62.9953, 0.28", "-49.2596, 249.198, -62.9443, 0.55", "-50.4175, 251.108, -62.8963, 0.28", "-50.9996, 252.058, -63.0006, 0.55", "-52.056, 253.917, -63.4134, 0.28", "-52.5413, 254.844, -63.7466, 0.83", "-54.8141, 259.285, -65.7573, 0.28", "-55.339, 260.378, -66.2583, 0.83", "-56.7807, 263.5, -67.6502, 0.28", "-57.488, 265.109, -68.3814, 0.83", "-59.2657, 269.325, -70.3333, 0.28", "-59.5851, 270.075, -70.6754, 0.55", "-61.4634, 274.244, -72.4088, 0.28", "-62.0246, 275.544, -72.9489, 1.11" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-42.617, 237.709, -64.9496, 0.28", "-42.4197, 239.156, -66.0849, 0.28", "-42.2978, 240.05, -66.7864, 0.55", "-42.1863, 240.868, -67.4279, 0.28", "-41.9376, 242.691, -68.8586, 0.83", "-41.7696, 243.923, -69.8249, 0.28", "-41.6455, 244.833, -70.5392, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_37", "dend_32", "dend_25", "dend_14", "dend_9", "dend_0", "dend_41", "dend_38", "dend_36", "dend_33", "dend_29", "dend_26", "dend_22", "dend_15", "dend_11", "dend_10", "dend_6", "dend_1", "dend_53", "dend_42", "dend_40", "dend_39", "dend_35", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_24", "dend_23", "dend_17", "dend_16", "dend_13", "dend_12", "dend_8", "dend_7", "dend_5", "dend_2", "dend_46", "dend_43", "dend_19", "dend_18", "dend_4", "dend_3", "dend_48", "dend_47", "dend_45", "dend_44", "dend_21", "dend_20", "dend_50", "dend_49", "dend_52", "dend_51" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_37", "dend_32", "dend_25", "dend_14", "dend_9", "dend_0", "dend_41", "dend_38", "dend_36", "dend_33", "dend_29", "dend_26", "dend_22", "dend_15", "dend_11", "dend_10", "dend_6", "dend_1", "dend_53", "dend_42", "dend_40", "dend_39", "dend_35", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_24", "dend_23", "dend_17", "dend_16", "dend_13", "dend_12", "dend_8", "dend_7", "dend_5", "dend_2", "dend_46", "dend_43", "dend_19", "dend_18", "dend_4", "dend_3", "dend_48", "dend_47", "dend_45", "dend_44", "dend_21", "dend_20", "dend_50", "dend_49", "dend_52", "dend_51" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_37", "dend_32", "dend_25", "dend_14", "dend_9", "dend_0", "axon_0", "dend_41", "dend_38", "dend_36", "dend_33", "dend_29", "dend_26", "dend_22", "dend_15", "dend_11", "dend_10", "dend_6", "dend_1", "axon_1", "dend_53", "dend_42", "dend_40", "dend_39", "dend_35", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_24", "dend_23", "dend_17", "dend_16", "dend_13", "dend_12", "dend_8", "dend_7", "dend_5", "dend_2", "dend_46", "dend_43", "dend_19", "dend_18", "dend_4", "dend_3", "dend_48", "dend_47", "dend_45", "dend_44", "dend_21", "dend_20", "dend_50", "dend_49", "dend_52", "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_37", "dend_32", "dend_25", "dend_25", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_LBC_c6138544ab_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_41, id: dend_41, parent: dend_37
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_14
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_41
create dend_53
public dend_53
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_37, dend_32, dend_25, dend_14, dend_9, dend_0, dend_41, dend_38, dend_36, dend_33, dend_29, dend_26, dend_22, dend_15, dend_11, dend_10, dend_6, dend_1, dend_53, dend_42, dend_40, dend_39, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_24, dend_23, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_5, dend_2, dend_46, dend_43, dend_19, dend_18, dend_4, dend_3, dend_48, dend_47, dend_45, dend_44, dend_21, dend_20, dend_50, dend_49, dend_52, dend_51]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_37, dend_32, dend_25, dend_14, dend_9, dend_0, dend_41, dend_38, dend_36, dend_33, dend_29, dend_26, dend_22, dend_15, dend_11, dend_10, dend_6, dend_1, dend_53, dend_42, dend_40, dend_39, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_24, dend_23, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_5, dend_2, dend_46, dend_43, dend_19, dend_18, dend_4, dend_3, dend_48, dend_47, dend_45, dend_44, dend_21, dend_20, dend_50, dend_49, dend_52, dend_51]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_37, dend_32, dend_25, dend_14, dend_9, dend_0, axon_0, dend_41, dend_38, dend_36, dend_33, dend_29, dend_26, dend_22, dend_15, dend_11, dend_10, dend_6, dend_1, axon_1, dend_53, dend_42, dend_40, dend_39, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_24, dend_23, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_5, dend_2, dend_46, dend_43, dend_19, dend_18, dend_4, dend_3, dend_48, dend_47, dend_45, dend_44, dend_21, dend_20, dend_50, dend_49, dend_52, dend_51]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_57
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_37, dend_32, dend_25, dend_25, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_37(0), soma_0(0.4999999858164011)
    connect dend_32(0), soma_0(0.4999999858164011)
    connect dend_25(0), soma_0(0.4999999858164011)
    connect dend_14(0), soma_0(0.4999999858164011)
    connect dend_9(0), soma_0(0.4999999858164011)
    connect dend_0(0), soma_0(0.4999999858164011)
    connect axon_0(0), soma_0(1.0)
    connect dend_41(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.14355, -7.38643, 0.0, 3.00626 ) }
    soma_0 { pt3dadd( -1.94813, -6.57976, 0.0, 3.91171 ) }
    soma_0 { pt3dadd( -1.75271, -5.7731, 0.0, 5.48682 ) }
    soma_0 { pt3dadd( -1.55728, -4.96644, 0.0, 7.76121 ) }
    soma_0 { pt3dadd( -1.36186, -4.15978, 0.0, 8.36238 ) }
    soma_0 { pt3dadd( -1.16644, -3.35311, 0.0, 8.81706 ) }
    soma_0 { pt3dadd( -0.971019, -2.54645, 0.0, 9.16666 ) }
    soma_0 { pt3dadd( -0.775597, -1.73979, 0.0, 9.47967 ) }
    soma_0 { pt3dadd( -0.580175, -0.933125, 0.0, 9.69737 ) }
    soma_0 { pt3dadd( -0.384753, -0.126463, 0.0, 9.91023 ) }
    soma_0 { pt3dadd( -0.189331, 0.6802, 0.0, 10.2136 ) }
    soma_0 { pt3dadd( 0.00609047, 1.48686, 0.0, 10.5121 ) }
    soma_0 { pt3dadd( 0.201512, 2.29352, 0.0, 10.3333 ) }
    soma_0 { pt3dadd( 0.396934, 3.10019, 0.0, 10.1326 ) }
    soma_0 { pt3dadd( 0.592356, 3.90685, 0.0, 9.93193 ) }
    soma_0 { pt3dadd( 0.787778, 4.71351, 0.0, 9.69022 ) }
    soma_0 { pt3dadd( 0.9832, 5.52018, 0.0, 8.92901 ) }
    soma_0 { pt3dadd( 1.17862, 6.32684, 0.0, 8.02961 ) }
    soma_0 { pt3dadd( 1.37404, 7.1335, 0.0, 6.7633 ) }
    soma_0 { pt3dadd( 1.56947, 7.94016, 0.0, 3.32024 ) }
    soma_0 { pt3dadd( 1.76489, 8.74683, 0.0, 2.02537 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 21/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 0.809262, 7.80544, 5.02, 1.94 ) }
    dend_37 { pt3dadd( 0.21855, 14.0003, 7.56697, 1.94 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 23/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.39926, -2.27406, 14.6, 1.94 ) }
    dend_32 { pt3dadd( 1.53406, -5.31802, 14.6, 1.94 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 25/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.680737, -5.86506, -1.0, 1.66 ) }
    dend_25 { pt3dadd( 0.712617, -7.35023, -0.971865, 1.66 ) }
    dend_25 { pt3dadd( 3.60084, -10.4288, -0.913545, 1.66 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 28/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.56074, -7.01456, -2.14, 3.05 ) }
    dend_14 { pt3dadd( -2.93393, -8.24886, -2.14, 3.05 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 30/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -6.40074, 0.82294, -0.63, 1.38 ) }
    dend_9 { pt3dadd( -8.7576, 2.00569, 0.00113218, 1.38 ) }
    dend_9 { pt3dadd( -11.6361, 3.41004, 1.00415, 1.38 ) }
    dend_9 { pt3dadd( -14.7825, 4.86348, 2.23167, 1.11 ) }
    dend_9 { pt3dadd( -17.9799, 6.34047, 3.47909, 1.11 ) }
    dend_9 { pt3dadd( -22.7051, 8.52322, 5.32257, 1.11 ) }
    dend_9 { pt3dadd( -27.546, 10.7594, 7.21118, 1.11 ) }
    dend_9 { pt3dadd( -30.783, 12.2046, 8.65326, 0.83 ) }
    dend_9 { pt3dadd( -32.1432, 12.7407, 9.34818, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 39/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.33926, 3.61594, 5.79, 1.38 ) }
    dend_0 { pt3dadd( 7.60171, 4.2425, 6.38729, 1.38 ) }
    dend_0 { pt3dadd( 10.9363, 5.16599, 7.26764, 1.38 ) }
    dend_0 { pt3dadd( 14.0731, 6.03467, 8.09574, 1.11 ) }
    dend_0 { pt3dadd( 16.6067, 6.73633, 8.76462, 1.66 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 44/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.76489, 8.74683, 0.0, 0.55 ) }
    axon_0 { pt3dadd( 5.29663, 23.3251, 0.0, 0.55 ) }
    axon_0 { pt3dadd( 8.82836, 37.9034, 0.0, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_37 (entry count 47/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 0.21855, 14.0003, 7.56697, 1.11 ) }
    dend_41 { pt3dadd( 1.25066, 14.8118, 7.49383, 1.11 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 49/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 0.21855, 14.0003, 7.56697, 0.83 ) }
    dend_38 { pt3dadd( -1.00659, 15.5406, 7.72011, 0.83 ) }
    dend_38 { pt3dadd( -2.30504, 17.2433, 7.96281, 0.83 ) }
    dend_38 { pt3dadd( -3.96764, 19.3259, 8.31056, 0.83 ) }
    dend_38 { pt3dadd( -4.8936, 20.4881, 8.52998, 1.11 ) }
    dend_38 { pt3dadd( -6.09854, 21.959, 8.82102, 0.83 ) }
    dend_38 { pt3dadd( -7.51846, 23.649, 9.15673, 1.11 ) }
    dend_38 { pt3dadd( -9.17738, 25.5978, 9.53283, 0.55 ) }
    dend_38 { pt3dadd( -10.8981, 27.5483, 9.91539, 0.83 ) }
    dend_38 { pt3dadd( -13.2472, 30.2843, 10.371, 0.83 ) }
    dend_38 { pt3dadd( -15.2119, 32.7148, 10.6608, 0.83 ) }
    dend_38 { pt3dadd( -17.2962, 35.4014, 10.8777, 0.83 ) }
    dend_38 { pt3dadd( -18.574, 37.1151, 10.95, 0.55 ) }
    dend_38 { pt3dadd( -19.2524, 38.0286, 10.9538, 1.11 ) }
    dend_38 { pt3dadd( -21.3811, 40.9407, 10.9121, 0.83 ) }
    dend_38 { pt3dadd( -23.3169, 43.5654, 10.8283, 0.55 ) }
    dend_38 { pt3dadd( -23.9246, 44.4104, 10.8029, 0.83 ) }
    dend_38 { pt3dadd( -25.2103, 46.2057, 10.7504, 0.55 ) }
    dend_38 { pt3dadd( -26.5018, 47.9661, 10.7247, 0.83 ) }
    dend_38 { pt3dadd( -28.3869, 50.4388, 10.7218, 0.83 ) }
    dend_38 { pt3dadd( -30.2165, 52.5266, 10.841, 0.83 ) }
    dend_38 { pt3dadd( -31.5052, 53.8742, 10.9724, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 71/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 1.53406, -5.31802, 14.6, 1.11 ) }
    dend_36 { pt3dadd( 0.447452, -7.9676, 11.6501, 1.11 ) }
    dend_36 { pt3dadd( -0.00900576, -9.14473, 10.5784, 1.11 ) }
    dend_36 { pt3dadd( -0.486392, -10.5397, 9.50029, 0.83 ) }
    dend_36 { pt3dadd( -1.21195, -12.8008, 8.00669, 1.38 ) }
    dend_36 { pt3dadd( -3.45592, -20.7516, 3.53008, 0.83 ) }
    dend_36 { pt3dadd( -4.35633, -24.3043, 1.91529, 0.83 ) }
    dend_36 { pt3dadd( -5.28617, -28.5237, 0.692328, 0.83 ) }
    dend_36 { pt3dadd( -5.70694, -30.7869, 0.371703, 0.83 ) }
    dend_36 { pt3dadd( -6.17531, -33.6898, 0.377455, 0.83 ) }
    dend_36 { pt3dadd( -6.65351, -36.9544, 0.962695, 0.83 ) }
    dend_36 { pt3dadd( -7.30419, -41.5785, 2.44962, 0.83 ) }
    dend_36 { pt3dadd( -7.9394, -46.1573, 4.02235, 0.83 ) }
    dend_36 { pt3dadd( -8.31521, -49.0517, 5.06049, 0.83 ) }
    dend_36 { pt3dadd( -8.87332, -53.062, 6.2855, 1.11 ) }
    dend_36 { pt3dadd( -9.61917, -58.5811, 7.71703, 1.11 ) }
    dend_36 { pt3dadd( -10.0978, -62.0509, 8.48162, 1.11 ) }
    dend_36 { pt3dadd( -10.7449, -66.7624, 9.26057, 1.38 ) }
    dend_36 { pt3dadd( -11.5175, -72.8866, 9.91601, 1.38 ) }
    dend_36 { pt3dadd( -12.314, -78.9572, 10.3543, 1.11 ) }
    dend_36 { pt3dadd( -12.8463, -82.7609, 10.5828, 1.11 ) }
    dend_36 { pt3dadd( -13.5259, -87.4868, 10.7605, 0.55 ) }
    dend_36 { pt3dadd( -14.3061, -92.9255, 11.081, 0.83 ) }
    dend_36 { pt3dadd( -14.942, -97.5295, 11.4489, 0.83 ) }
    dend_36 { pt3dadd( -15.2958, -100.235, 11.7465, 0.83 ) }
    dend_36 { pt3dadd( -15.5488, -102.358, 12.0964, 0.83 ) }
    dend_36 { pt3dadd( -15.7202, -103.954, 12.2949, 0.83 ) }
    dend_36 { pt3dadd( -16.1066, -108.236, 12.6326, 0.55 ) }
    dend_36 { pt3dadd( -16.3843, -112.079, 12.9398, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_36 { pt3dadd( -16.5891, -115.739, 13.1958, 0.83 ) }
    dend_36 { pt3dadd( -16.8156, -121.504, 13.7383, 0.83 ) }
    dend_36 { pt3dadd( -16.9577, -127.059, 14.3243, 0.55 ) }
    dend_36 { pt3dadd( -17.0728, -130.574, 14.7496, 0.83 ) }
    dend_36 { pt3dadd( -17.1952, -135.446, 15.4074, 1.11 ) }
    dend_36 { pt3dadd( -17.2454, -141.913, 16.2472, 1.11 ) }
    dend_36 { pt3dadd( -17.2501, -147.16, 16.8815, 0.83 ) }
    dend_36 { pt3dadd( -17.2443, -148.513, 17.0932, 0.83 ) }
    dend_36 { pt3dadd( -17.2175, -150.793, 17.5623, 1.11 ) }
    dend_36 { pt3dadd( -17.1828, -153.076, 17.9991, 1.11 ) }
    dend_36 { pt3dadd( -17.1336, -156.435, 18.3409, 0.83 ) }
    dend_36 { pt3dadd( -17.138, -159.01, 18.2501, 0.83 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 12/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 1.53406, -5.31802, 14.6, 1.38 ) }
    dend_33 { pt3dadd( 3.21575, -8.86603, 14.5951, 1.38 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 14/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 3.60084, -10.4288, -0.913545, 1.38 ) }
    dend_29 { pt3dadd( 7.35436, -11.4379, -3.26052, 1.38 ) }
    dend_29 { pt3dadd( 12.0565, -12.273, -6.41693, 1.11 ) }
    dend_29 { pt3dadd( 14.2004, -12.6372, -7.97425, 1.11 ) }
    dend_29 { pt3dadd( 16.287, -13.1523, -9.55542, 1.11 ) }
    dend_29 { pt3dadd( 19.3087, -14.0183, -11.9294, 1.11 ) }
    dend_29 { pt3dadd( 25.2309, -15.4353, -16.5651, 0.83 ) }
    dend_29 { pt3dadd( 26.5469, -15.4173, -17.613, 0.83 ) }
    dend_29 { pt3dadd( 28.7435, -14.931, -19.5644, 0.83 ) }
    dend_29 { pt3dadd( 30.5571, -14.3175, -21.4482, 0.83 ) }
    dend_29 { pt3dadd( 30.9721, -14.1433, -21.9231, 0.83 ) }
    dend_29 { pt3dadd( 33.3818, -12.7988, -24.8178, 0.83 ) }
    dend_29 { pt3dadd( 35.9295, -10.9344, -28.1565, 0.83 ) }
    dend_29 { pt3dadd( 38.0352, -9.25933, -30.9756, 0.55 ) }
    dend_29 { pt3dadd( 38.6791, -8.71727, -31.8433, 0.55 ) }
    dend_29 { pt3dadd( 40.4267, -7.23787, -34.2061, 1.66 ) }
    dend_29 { pt3dadd( 44.8167, -3.83695, -40.2228, 1.11 ) }
    dend_29 { pt3dadd( 48.6851, -1.2712, -45.8417, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 32/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 3.60084, -10.4288, -0.913545, 0.55 ) }
    dend_26 { pt3dadd( 0.867473, -1.5744, -10.6458, 0.55 ) }
    dend_26 { pt3dadd( 0.667282, -0.942572, -11.2384, 1.11 ) }
    dend_26 { pt3dadd( 0.0804769, 0.90742, -12.7596, 0.83 ) }
    dend_26 { pt3dadd( -0.601031, 3.19307, -14.5293, 0.83 ) }
    dend_26 { pt3dadd( -1.62165, 6.85852, -17.5291, 0.83 ) }
    dend_26 { pt3dadd( -2.43167, 9.86369, -20.0578, 0.83 ) }
    dend_26 { pt3dadd( -3.21411, 12.6036, -21.7408, 0.55 ) }
    dend_26 { pt3dadd( -3.67607, 14.3164, -22.8633, 0.83 ) }
    dend_26 { pt3dadd( -4.0805, 15.874, -23.997, 0.83 ) }
    dend_26 { pt3dadd( -4.92421, 19.7105, -26.9709, 0.28 ) }
    dend_26 { pt3dadd( -5.16348, 21.3791, -28.736, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: dend_14 (entry count 44/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -2.93393, -8.24886, -2.14, 1.38 ) }
    dend_22 { pt3dadd( -4.73734, -10.0829, -2.09834, 1.38 ) }
    dend_22 { pt3dadd( -7.88117, -13.2801, -2.02572, 1.38 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 47/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -2.93393, -8.24886, -2.14, 1.38 ) }
    dend_15 { pt3dadd( -2.53108, -18.5849, -1.37229, 1.38 ) }
    dend_15 { pt3dadd( -2.17189, -27.8009, -0.687765, 1.38 ) }
    dend_15 { pt3dadd( -1.97935, -32.7408, -0.320854, 2.77 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 51/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -32.1432, 12.7407, 9.34818, 0.83 ) }
    dend_11 { pt3dadd( -35.379, 14.6013, 8.05113, 0.83 ) }
    dend_11 { pt3dadd( -37.5852, 15.8735, 7.00022, 1.11 ) }
    dend_11 { pt3dadd( -38.5553, 16.4329, 6.53815, 0.83 ) }
    dend_11 { pt3dadd( -40.2485, 17.4094, 5.73159, 1.11 ) }
    dend_11 { pt3dadd( -41.5422, 18.1554, 5.11539, 0.83 ) }
    dend_11 { pt3dadd( -44.7806, 20.0229, 3.57281, 0.83 ) }
    dend_11 { pt3dadd( -45.4719, 20.3881, 3.31076, 1.66 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 59/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -32.1432, 12.7407, 9.34818, 0.55 ) }
    dend_10 { pt3dadd( -33.1597, 12.1617, 8.17174, 0.55 ) }
    dend_10 { pt3dadd( -34.2446, 11.5926, 6.896, 0.83 ) }
    dend_10 { pt3dadd( -36.4002, 10.5434, 4.43574, 0.83 ) }
    dend_10 { pt3dadd( -37.5809, 9.94109, 3.20319, 0.28 ) }
    dend_10 { pt3dadd( -38.2862, 9.58492, 2.56365, 0.28 ) }
    dend_10 { pt3dadd( -39.8552, 8.89948, 1.08881, 0.83 ) }
    dend_10 { pt3dadd( -40.7346, 8.62084, 0.251474, 0.28 ) }
    dend_10 { pt3dadd( -41.2997, 8.4912, -0.253347, 0.28 ) }
    dend_10 { pt3dadd( -42.7928, 8.32807, -1.61662, 0.55 ) }
    dend_10 { pt3dadd( -44.1703, 8.2352, -2.88742, 0.28 ) }
    dend_10 { pt3dadd( -47.7239, 8.10986, -6.19414, 1.11 ) }
    dend_10 { pt3dadd( -48.6902, 8.09432, -7.10697, 0.83 ) }
    dend_10 { pt3dadd( -49.5559, 8.08269, -7.95793, 0.83 ) }
    dend_10 { pt3dadd( -52.5101, 7.99988, -11.1689, 0.28 ) }
    dend_10 { pt3dadd( -53.562, 7.96537, -12.3986, 0.28 ) }
    dend_10 { pt3dadd( -54.3871, 7.87797, -13.417, 0.55 ) }
    dend_10 { pt3dadd( -55.4142, 7.65715, -14.5914, 0.28 ) }
    dend_10 { pt3dadd( -56.0246, 7.51164, -15.392, 0.55 ) }
    dend_10 { pt3dadd( -57.5878, 7.1029, -17.5531, 0.28 ) }
    dend_10 { pt3dadd( -57.9038, 7.00416, -17.9808, 0.55 ) }
    dend_10 { pt3dadd( -59.1286, 6.58901, -19.639, 0.28 ) }
    dend_10 { pt3dadd( -59.7376, 6.35892, -20.3782, 0.55 ) }
    dend_10 { pt3dadd( -62.2863, 5.30185, -23.1946, 0.28 ) }
    dend_10 { pt3dadd( -63.2683, 4.8526, -24.2863, 0.28 ) }
    dend_10 { pt3dadd( -63.8194, 4.56777, -24.9004, 0.28 ) }
    dend_10 { pt3dadd( -65.0447, 3.83434, -26.4063, 0.83 ) }
    dend_10 { pt3dadd( -67.3354, 2.25301, -29.3688, 0.28 ) }
    dend_10 { pt3dadd( -67.5895, 2.05376, -29.7208, 0.83 ) }
    dend_10 { pt3dadd( -68.7603, 1.02244, -31.356, 0.28 ) }
    dend_10 { pt3dadd( -69.5591, 0.31937, -32.6667, 0.55 ) }
    dend_10 { pt3dadd( -70.6365, -0.616235, -34.6007, 0.28 ) }
    dend_10 { pt3dadd( -70.8513, -0.781123, -35.053, 0.55 ) }
    dend_10 { pt3dadd( -71.4351, -1.20157, -36.3264, 0.28 ) }
    dend_10 { pt3dadd( -71.8049, -1.44963, -37.0665, 0.55 ) }
    dend_10 { pt3dadd( -73.1407, -2.25025, -39.5766, 0.28 ) }
    dend_10 { pt3dadd( -73.5391, -2.47901, -40.3121, 0.55 ) }
    dend_10 { pt3dadd( -75.3044, -3.45489, -43.5991, 0.28 ) }
    dend_10 { pt3dadd( -76.1221, -3.89679, -45.181, 0.28 ) }
    dend_10 { pt3dadd( -76.4322, -4.06389, -45.8073, 0.55 ) }
    dend_10 { pt3dadd( -77.9439, -4.91379, -48.9723, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_10 { pt3dadd( -78.1754, -5.07192, -49.4417, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 1/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 16.6067, 6.73633, 8.76462, 1.11 ) }
    dend_6 { pt3dadd( 18.5951, 5.97727, 8.96663, 1.11 ) }
    dend_6 { pt3dadd( 20.8251, 5.12599, 9.19319, 1.11 ) }
    dend_6 { pt3dadd( 23.1619, 4.23396, 9.43059, 1.11 ) }
    dend_6 { pt3dadd( 25.7319, 3.25289, 9.69168, 0.83 ) }
    dend_6 { pt3dadd( 29.4471, 1.83468, 10.0691, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 7/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 16.6067, 6.73633, 8.76462, 0.83 ) }
    dend_1 { pt3dadd( 18.0892, 8.84796, 9.3089, 0.83 ) }
    dend_1 { pt3dadd( 18.8883, 10.0707, 9.82896, 0.83 ) }
    dend_1 { pt3dadd( 19.5612, 11.1889, 10.3283, 0.55 ) }
    dend_1 { pt3dadd( 20.4399, 12.7656, 11.0244, 0.83 ) }
    dend_1 { pt3dadd( 21.6465, 15.1392, 12.0032, 1.11 ) }
    dend_1 { pt3dadd( 23.2572, 18.3875, 13.2582, 0.83 ) }
    dend_1 { pt3dadd( 24.8054, 21.7708, 14.5999, 1.11 ) }
    dend_1 { pt3dadd( 26.1061, 24.787, 15.8046, 0.83 ) }
    dend_1 { pt3dadd( 27.0207, 26.9278, 16.6616, 0.83 ) }
    dend_1 { pt3dadd( 28.4743, 30.3998, 18.0924, 1.38 ) }
    dend_1 { pt3dadd( 28.7966, 31.2048, 18.4166, 1.38 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 19/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 8.82836, 37.9034, 0.0, 0.28 ) }
    axon_1 { pt3dadd( 12.3601, 52.4817, 0.0, 0.28 ) }
    axon_1 { pt3dadd( 15.8918, 67.06, 0.0, 0.28 ) }
    // Section: dend_53, id: dend_53, parent: dend_41 (entry count 22/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 1.25066, 14.8118, 7.49383, 0.83 ) }
    dend_53 { pt3dadd( 1.05401, 16.1369, 8.95265, 0.83 ) }
    dend_53 { pt3dadd( 0.784467, 17.4643, 10.39, 0.83 ) }
    dend_53 { pt3dadd( 0.501857, 21.2802, 13.8076, 0.55 ) }
    dend_53 { pt3dadd( 0.411625, 22.6506, 14.9619, 0.55 ) }
    dend_53 { pt3dadd( 0.378032, 23.6346, 15.6736, 0.55 ) }
    dend_53 { pt3dadd( 0.296311, 25.3246, 16.7548, 0.55 ) }
    dend_53 { pt3dadd( 0.181828, 27.9664, 18.1936, 0.55 ) }
    dend_53 { pt3dadd( -0.0254958, 32.1073, 20.3069, 0.83 ) }
    dend_53 { pt3dadd( -0.258901, 34.809, 21.4902, 0.55 ) }
    dend_53 { pt3dadd( -0.591481, 37.6115, 22.735, 0.55 ) }
    dend_53 { pt3dadd( -0.824334, 39.2515, 23.449, 0.55 ) }
    dend_53 { pt3dadd( -1.37041, 42.7186, 24.8651, 0.55 ) }
    dend_53 { pt3dadd( -1.85395, 46.1604, 26.1527, 0.55 ) }
    dend_53 { pt3dadd( -2.41754, 48.3636, 27.0394, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 37/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 1.25066, 14.8118, 7.49383, 0.83 ) }
    dend_42 { pt3dadd( 1.25047, 17.2649, 6.84213, 0.83 ) }
    dend_42 { pt3dadd( 1.27051, 18.63, 6.5362, 1.11 ) }
    dend_42 { pt3dadd( 1.32197, 21.6401, 5.95949, 1.11 ) }
    dend_42 { pt3dadd( 1.42072, 24.7938, 5.42697, 1.11 ) }
    dend_42 { pt3dadd( 1.60237, 28.2028, 4.91823, 1.11 ) }
    dend_42 { pt3dadd( 1.71388, 29.9034, 4.63258, 1.11 ) }
    dend_42 { pt3dadd( 2.02565, 33.4529, 4.0382, 1.11 ) }
    dend_42 { pt3dadd( 2.3009, 35.8873, 3.62095, 1.11 ) }
    dend_42 { pt3dadd( 2.63165, 38.3674, 3.23354, 1.11 ) }
    dend_42 { pt3dadd( 3.13431, 41.8083, 2.72614, 1.11 ) }
    dend_42 { pt3dadd( 3.60051, 45.0797, 2.30886, 1.11 ) }
    dend_42 { pt3dadd( 4.01789, 47.9015, 1.92593, 1.11 ) }
    dend_42 { pt3dadd( 4.44175, 50.5778, 1.53382, 1.11 ) }
    dend_42 { pt3dadd( 4.68509, 52.0799, 1.3104, 1.11 ) }
    dend_42 { pt3dadd( 4.82045, 53.0122, 1.18551, 1.11 ) }
    dend_42 { pt3dadd( 5.36418, 57.3661, 0.830616, 1.11 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 54/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -31.5052, 53.8742, 10.9724, 0.28 ) }
    dend_40 { pt3dadd( -34.2199, 57.7776, 10.7529, 0.28 ) }
    dend_40 { pt3dadd( -34.6905, 58.9667, 10.7807, 0.28 ) }
    dend_40 { pt3dadd( -34.9172, 59.8509, 10.8582, 0.55 ) }
    dend_40 { pt3dadd( -35.2946, 61.2613, 11.0373, 0.28 ) }
    dend_40 { pt3dadd( -35.6936, 62.7523, 11.2267, 0.55 ) }
    dend_40 { pt3dadd( -36.1412, 64.4248, 11.4392, 0.28 ) }
    dend_40 { pt3dadd( -36.207, 65.6854, 11.6692, 0.55 ) }
    dend_40 { pt3dadd( -36.2183, 66.9236, 11.9095, 0.28 ) }
    dend_40 { pt3dadd( -36.2505, 68.407, 12.2383, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 64/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -31.5052, 53.8742, 10.9724, 0.83 ) }
    dend_39 { pt3dadd( -32.0427, 55.3944, 10.8201, 0.83 ) }
    dend_39 { pt3dadd( -33.1231, 58.3685, 10.6145, 0.55 ) }
    dend_39 { pt3dadd( -33.4583, 59.2986, 10.5707, 0.83 ) }
    dend_39 { pt3dadd( -34.1805, 61.1338, 10.5501, 0.83 ) }
    dend_39 { pt3dadd( -34.9972, 63.1829, 10.8722, 0.83 ) }
    dend_39 { pt3dadd( -36.1276, 65.8836, 11.5667, 0.83 ) }
    dend_39 { pt3dadd( -37.0457, 67.9548, 12.3577, 0.83 ) }
    dend_39 { pt3dadd( -37.7063, 69.4165, 13.0898, 0.55 ) }
    dend_39 { pt3dadd( -38.7072, 71.5529, 14.289, 0.83 ) }
    dend_39 { pt3dadd( -40.9516, 76.386, 17.278, 0.55 ) }
    dend_39 { pt3dadd( -41.5603, 77.778, 18.2085, 0.55 ) }
    dend_39 { pt3dadd( -41.6934, 78.0828, 18.446, 0.83 ) }
    dend_39 { pt3dadd( -42.3489, 79.5228, 19.616, 0.55 ) }
    dend_39 { pt3dadd( -42.7883, 80.4594, 20.3404, 0.55 ) }
    dend_39 { pt3dadd( -43.5125, 82.0231, 21.3146, 0.55 ) }
    dend_39 { pt3dadd( -43.8683, 82.7706, 21.6135, 0.83 ) }
    dend_39 { pt3dadd( -45.07, 85.3325, 22.7285, 0.55 ) }
    dend_39 { pt3dadd( -45.9027, 87.0037, 23.51, 0.55 ) }
    dend_39 { pt3dadd( -46.1776, 87.4865, 23.7665, 0.83 ) }
    dend_39 { pt3dadd( -46.9188, 88.7594, 24.4888, 0.55 ) }
    dend_39 { pt3dadd( -47.653, 89.7826, 25.1134, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 86/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 3.21575, -8.86603, 14.5951, 0.55 ) }
    dend_35 { pt3dadd( 3.40628, -10.5823, 14.7579, 0.55 ) }
    dend_35 { pt3dadd( 3.39103, -11.6364, 14.9682, 1.38 ) }
    dend_35 { pt3dadd( 3.09832, -13.5591, 15.3817, 1.38 ) }
    dend_35 { pt3dadd( 2.36102, -16.7179, 15.9399, 0.83 ) }
    dend_35 { pt3dadd( 1.85206, -18.8984, 16.3253, 0.83 ) }
    dend_35 { pt3dadd( 1.42056, -20.747, 16.652, 1.11 ) }
    dend_35 { pt3dadd( 0.714565, -23.4841, 17.2058, 0.55 ) }
    dend_35 { pt3dadd( -0.110841, -25.9582, 17.7668, 0.83 ) }
    dend_35 { pt3dadd( -1.04024, -27.7344, 18.2328, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 96/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 3.21575, -8.86603, 14.5951, 0.83 ) }
    dend_34 { pt3dadd( 5.38118, -8.01863, 15.1333, 0.83 ) }
    dend_34 { pt3dadd( 6.11192, -7.11128, 15.4908, 0.83 ) }
    dend_34 { pt3dadd( 6.59021, -6.0116, 15.7275, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_34 { pt3dadd( 7.07637, -4.75401, 16.0826, 1.38 ) }
    dend_34 { pt3dadd( 7.55204, -3.52359, 16.4299, 1.38 ) }
    dend_34 { pt3dadd( 8.27066, -1.66471, 16.9547, 0.83 ) }
    dend_34 { pt3dadd( 9.0427, 1.21097, 17.6054, 0.83 ) }
    dend_34 { pt3dadd( 9.42506, 3.0381, 18.0513, 0.83 ) }
    dend_34 { pt3dadd( 9.67436, 5.56493, 18.6852, 0.83 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 6/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 48.6851, -1.2712, -45.8417, 0.28 ) }
    dend_31 { pt3dadd( 50.7534, -0.467746, -52.0839, 0.28 ) }
    dend_31 { pt3dadd( 51.0774, -0.280712, -52.4349, 0.55 ) }
    dend_31 { pt3dadd( 52.2235, 0.583575, -52.9858, 0.28 ) }
    dend_31 { pt3dadd( 53.153, 1.35546, -53.4411, 0.28 ) }
    dend_31 { pt3dadd( 55.805, 3.62833, -54.6198, 0.83 ) }
    dend_31 { pt3dadd( 58.5489, 6.06029, -55.7765, 0.28 ) }
    dend_31 { pt3dadd( 60.2577, 7.64465, -56.7721, 0.83 ) }
    dend_31 { pt3dadd( 61.908, 9.20358, -57.9057, 1.11 ) }
    dend_31 { pt3dadd( 64.1889, 11.4856, -59.6167, 0.55 ) }
    dend_31 { pt3dadd( 64.6896, 12.0149, -60.0823, 0.83 ) }
    dend_31 { pt3dadd( 65.7267, 13.1981, -61.1516, 0.28 ) }
    dend_31 { pt3dadd( 66.2583, 13.7868, -61.7273, 0.83 ) }
    dend_31 { pt3dadd( 68.5506, 16.1778, -64.525, 0.28 ) }
    dend_31 { pt3dadd( 69.3994, 17.046, -65.6129, 0.83 ) }
    dend_31 { pt3dadd( 72.2833, 20.0443, -69.329, 0.28 ) }
    dend_31 { pt3dadd( 73.1779, 20.9694, -70.4958, 0.55 ) }
    dend_31 { pt3dadd( 73.98, 21.741, -71.5077, 1.11 ) }
    dend_31 { pt3dadd( 76.0153, 23.4779, -73.8141, 0.28 ) }
    dend_31 { pt3dadd( 76.5069, 23.805, -74.3872, 0.55 ) }
    dend_31 { pt3dadd( 77.4332, 24.2508, -75.5153, 0.28 ) }
    dend_31 { pt3dadd( 77.9604, 24.4106, -76.1395, 0.55 ) }
    dend_31 { pt3dadd( 79.4237, 24.652, -77.9327, 0.28 ) }
    dend_31 { pt3dadd( 80.1072, 24.6423, -79.0972, 0.83 ) }
    dend_31 { pt3dadd( 83.8388, 24.0307, -86.0707, 0.28 ) }
    dend_31 { pt3dadd( 84.3393, 23.907, -87.0412, 0.83 ) }
    dend_31 { pt3dadd( 85.423, 23.5676, -89.1787, 0.28 ) }
    dend_31 { pt3dadd( 86.0785, 23.3162, -90.4827, 0.83 ) }
    dend_31 { pt3dadd( 91.3561, 20.9777, -100.993, 0.28 ) }
    dend_31 { pt3dadd( 91.935, 20.7003, -102.169, 0.55 ) }
    dend_31 { pt3dadd( 93.2658, 19.9657, -104.775, 0.28 ) }
    dend_31 { pt3dadd( 93.627, 19.774, -105.496, 0.83 ) }
    dend_31 { pt3dadd( 95.0482, 18.9692, -108.444, 0.28 ) }
    dend_31 { pt3dadd( 95.407, 18.7849, -109.158, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 40/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 48.6851, -1.2712, -45.8417, 0.55 ) }
    dend_30 { pt3dadd( 48.8613, -1.65015, -47.1011, 0.55 ) }
    dend_30 { pt3dadd( 49.7849, -3.42044, -52.845, 0.28 ) }
    dend_30 { pt3dadd( 50.0315, -3.86772, -54.2718, 0.83 ) }
    dend_30 { pt3dadd( 50.558, -4.70207, -56.758, 0.28 ) }
    dend_30 { pt3dadd( 50.8152, -5.07942, -57.8246, 0.83 ) }
    dend_30 { pt3dadd( 52.845, -8.11422, -65.4204, 0.55 ) }
    dend_30 { pt3dadd( 53.6168, -9.2638, -67.6975, 0.28 ) }
    dend_30 { pt3dadd( 54.1323, -10.007, -68.8085, 0.83 ) }
    dend_30 { pt3dadd( 55.8632, -12.5576, -71.8391, 0.28 ) }
    dend_30 { pt3dadd( 56.2207, -13.107, -72.325, 0.83 ) }
    dend_30 { pt3dadd( 57.4763, -15.2959, -73.5137, 0.28 ) }
    dend_30 { pt3dadd( 59.9281, -19.7989, -74.5992, 0.28 ) }
    dend_30 { pt3dadd( 60.1539, -20.2663, -74.6715, 0.83 ) }
    dend_30 { pt3dadd( 60.5131, -21.0971, -74.7495, 0.28 ) }
    dend_30 { pt3dadd( 60.8004, -21.8518, -74.7738, 0.55 ) }
    dend_30 { pt3dadd( 62.7978, -27.4926, -74.9879, 0.28 ) }
    dend_30 { pt3dadd( 62.9187, -27.8586, -74.9988, 0.55 ) }
    dend_30 { pt3dadd( 63.4037, -29.4771, -75.0332, 0.28 ) }
    dend_30 { pt3dadd( 63.6723, -30.3331, -75.0316, 0.55 ) }
    dend_30 { pt3dadd( 64.6772, -33.4087, -75.448, 0.28 ) }
    dend_30 { pt3dadd( 64.814, -33.8266, -75.5549, 0.55 ) }
    dend_30 { pt3dadd( 65.9546, -37.2091, -76.8524, 0.28 ) }
    dend_30 { pt3dadd( 66.261, -38.1825, -77.3037, 0.55 ) }
    dend_30 { pt3dadd( 66.5295, -39.1457, -77.8039, 0.55 ) }
    dend_30 { pt3dadd( 68.0658, -45.442, -81.5057, 0.28 ) }
    dend_30 { pt3dadd( 68.1729, -46.019, -81.898, 0.55 ) }
    dend_30 { pt3dadd( 68.3659, -47.4932, -82.9387, 0.28 ) }
    dend_30 { pt3dadd( 68.3717, -47.8957, -83.2466, 0.55 ) }
    dend_30 { pt3dadd( 68.2573, -49.3591, -84.2236, 0.28 ) }
    dend_30 { pt3dadd( 68.2412, -49.5457, -84.3394, 0.55 ) }
    dend_30 { pt3dadd( 68.1926, -50.156, -84.643, 0.28 ) }
    dend_30 { pt3dadd( 68.17, -51.0234, -85.1066, 0.83 ) }
    dend_30 { pt3dadd( 68.2255, -54.825, -87.2668, 0.28 ) }
    dend_30 { pt3dadd( 68.2797, -55.7182, -87.7178, 0.55 ) }
    dend_30 { pt3dadd( 68.7914, -61.0042, -90.2377, 0.28 ) }
    dend_30 { pt3dadd( 68.9457, -62.4077, -90.8996, 0.55 ) }
    dend_30 { pt3dadd( 69.262, -64.8115, -92.0035, 0.28 ) }
    dend_30 { pt3dadd( 69.3303, -65.2176, -92.1748, 0.55 ) }
    dend_30 { pt3dadd( 70.2176, -69.318, -93.4341, 0.28 ) }
    dend_30 { pt3dadd( 70.3938, -70.0329, -93.5975, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 81/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -5.16348, 21.3791, -28.736, 0.28 ) }
    dend_28 { pt3dadd( -6.57413, 20.8476, -29.8889, 0.28 ) }
    dend_28 { pt3dadd( -7.12948, 20.6167, -30.3424, 0.83 ) }
    dend_28 { pt3dadd( -8.18049, 20.1869, -31.1435, 0.28 ) }
    dend_28 { pt3dadd( -9.08061, 19.8286, -31.7899, 1.11 ) }
    dend_28 { pt3dadd( -14.2395, 17.7749, -35.4942, 0.28 ) }
    dend_28 { pt3dadd( -15.3635, 17.3274, -36.3014, 0.28 ) }
    dend_28 { pt3dadd( -15.5109, 17.2646, -36.4288, 0.83 ) }
    dend_28 { pt3dadd( -16.6498, 16.7319, -37.5419, 0.28 ) }
    dend_28 { pt3dadd( -16.9357, 16.5801, -37.8655, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 91/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -5.16348, 21.3791, -28.736, 0.28 ) }
    dend_27 { pt3dadd( -3.19953, 24.4215, -30.8958, 0.28 ) }
    dend_27 { pt3dadd( -2.7629, 25.1583, -31.3633, 0.83 ) }
    dend_27 { pt3dadd( -1.68682, 27.5468, -33.0969, 0.28 ) }
    dend_27 { pt3dadd( -1.12089, 29.0519, -34.152, 0.28 ) }
    dend_27 { pt3dadd( -0.688425, 30.4467, -35.1774, 0.83 ) }
    dend_27 { pt3dadd( 0.259181, 33.6415, -37.5732, 0.28 ) }
    dend_27 { pt3dadd( 0.697881, 35.3942, -38.9317, 1.11 ) }
    dend_27 { pt3dadd( 1.68897, 39.3653, -41.6866, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_27 { pt3dadd( 2.27935, 41.501, -42.9998, 1.11 ) }
    dend_27 { pt3dadd( 3.48019, 45.7294, -45.4006, 0.28 ) }
    dend_27 { pt3dadd( 3.68902, 46.3952, -45.7363, 0.28 ) }
    dend_27 { pt3dadd( 4.4778, 48.5244, -46.667, 0.83 ) }
    dend_27 { pt3dadd( 5.89094, 51.7058, -47.8438, 0.28 ) }
    dend_27 { pt3dadd( 6.9013, 53.6086, -48.3518, 0.83 ) }
    dend_27 { pt3dadd( 8.34038, 56.3072, -49.2008, 0.28 ) }
    dend_27 { pt3dadd( 9.33414, 58.1938, -49.8206, 0.83 ) }
    dend_27 { pt3dadd( 10.1622, 59.9314, -50.4304, 0.28 ) }
    dend_27 { pt3dadd( 10.8672, 61.5654, -51.0537, 0.28 ) }
    dend_27 { pt3dadd( 11.7098, 63.6829, -51.8819, 0.83 ) }
    dend_27 { pt3dadd( 13.5515, 68.8395, -53.7036, 0.28 ) }
    dend_27 { pt3dadd( 13.9339, 70.0868, -54.0662, 0.55 ) }
    dend_27 { pt3dadd( 14.5884, 73.0842, -55.0238, 0.28 ) }
    dend_27 { pt3dadd( 14.7491, 74.0091, -55.2996, 0.55 ) }
    dend_27 { pt3dadd( 14.9886, 75.6526, -55.949, 0.28 ) }
    dend_27 { pt3dadd( 15.1684, 76.9544, -56.5358, 0.55 ) }
    dend_27 { pt3dadd( 15.3884, 78.4168, -57.2846, 0.83 ) }
    dend_27 { pt3dadd( 16.0438, 83.1506, -60.4711, 0.28 ) }
    dend_27 { pt3dadd( 16.3101, 84.8691, -61.7592, 0.55 ) }
    dend_27 { pt3dadd( 17.1658, 89.4808, -65.5113, 0.28 ) }
    dend_27 { pt3dadd( 17.4511, 90.7518, -66.5463, 0.28 ) }
    dend_27 { pt3dadd( 17.7534, 91.8164, -67.4028, 0.55 ) }
    dend_27 { pt3dadd( 18.4249, 93.8167, -68.9322, 0.28 ) }
    dend_27 { pt3dadd( 19.3423, 96.1477, -70.5051, 0.83 ) }
    dend_27 { pt3dadd( 22.0096, 101.526, -73.5358, 0.28 ) }
    dend_27 { pt3dadd( 23.7354, 104.372, -74.6214, 0.28 ) }
    dend_27 { pt3dadd( 24.1086, 104.849, -74.7516, 0.83 ) }
    dend_27 { pt3dadd( 24.9247, 105.724, -74.9637, 0.83 ) }
    dend_27 { pt3dadd( 25.7608, 106.458, -75.2226, 0.83 ) }
    dend_27 { pt3dadd( 29.6533, 109.61, -77.159, 0.28 ) }
    dend_27 { pt3dadd( 29.8446, 109.75, -77.2652, 0.83 ) }
    dend_27 { pt3dadd( 33.1559, 112.19, -79.6495, 0.28 ) }
    dend_27 { pt3dadd( 35.4159, 113.934, -81.9934, 0.83 ) }
    dend_27 { pt3dadd( 39.0492, 116.717, -85.7412, 0.28 ) }
    dend_27 { pt3dadd( 41.799, 118.945, -88.7986, 0.55 ) }
    dend_27 { pt3dadd( 42.7108, 119.761, -89.9516, 0.83 ) }
    dend_27 { pt3dadd( 43.4818, 120.468, -90.8485, 0.83 ) }
    dend_27 { pt3dadd( 47.2222, 124.052, -93.0809, 0.83 ) }
    dend_27 { pt3dadd( 54.8688, 130.925, -92.2262, 0.55 ) }
    dend_27 { pt3dadd( 55.4614, 131.526, -92.1123, 0.83 ) }
    dend_27 { pt3dadd( 57.09, 133.403, -92.0362, 0.28 ) }
    dend_27 { pt3dadd( 57.433, 133.892, -92.1465, 0.55 ) }
    dend_27 { pt3dadd( 59.4094, 137.482, -93.5309, 0.28 ) }
    dend_27 { pt3dadd( 61.873, 142.776, -96.3738, 0.55 ) }
    dend_27 { pt3dadd( 63.294, 146.069, -98.7491, 0.28 ) }
    dend_27 { pt3dadd( 63.6731, 146.959, -99.4633, 0.55 ) }
    dend_27 { pt3dadd( 64.3092, 148.351, -100.648, 0.28 ) }
    dend_27 { pt3dadd( 64.9644, 149.616, -101.621, 0.55 ) }
    dend_27 { pt3dadd( 66.3478, 151.786, -102.941, 0.28 ) }
    dend_27 { pt3dadd( 67.4095, 153.191, -103.38, 0.28 ) }
    dend_27 { pt3dadd( 69.2324, 155.428, -103.837, 0.55 ) }
    dend_27 { pt3dadd( 71.1409, 157.671, -104.097, 0.28 ) }
    dend_27 { pt3dadd( 73.3967, 160.292, -104.162, 0.83 ) }
    dend_27 { pt3dadd( 76.0712, 163.512, -103.978, 0.28 ) }
    dend_27 { pt3dadd( 77.8785, 165.861, -103.661, 0.28 ) }
    dend_27 { pt3dadd( 78.8312, 167.164, -103.456, 0.55 ) }
    dend_27 { pt3dadd( 80.7525, 169.927, -102.966, 0.28 ) }
    dend_27 { pt3dadd( 81.2849, 170.801, -102.858, 0.83 ) }
    dend_27 { pt3dadd( 82.7464, 173.506, -102.719, 0.28 ) }
    dend_27 { pt3dadd( 83.3942, 174.803, -102.764, 0.55 ) }
    dend_27 { pt3dadd( 84.4082, 176.789, -102.962, 0.28 ) }
    dend_27 { pt3dadd( 85.0145, 177.994, -103.142, 0.28 ) }
    dend_27 { pt3dadd( 86.1132, 180.254, -103.613, 0.55 ) }
    dend_27 { pt3dadd( 87.9091, 183.579, -104.555, 0.28 ) }
    dend_27 { pt3dadd( 89.2406, 185.694, -105.3, 0.28 ) }
    dend_27 { pt3dadd( 89.8368, 186.607, -105.638, 0.55 ) }
    dend_27 { pt3dadd( 90.8337, 188.124, -106.211, 0.28 ) }
    dend_27 { pt3dadd( 91.5992, 189.176, -106.671, 0.55 ) }
    dend_27 { pt3dadd( 93.6626, 191.584, -107.994, 0.28 ) }
    dend_27 { pt3dadd( 94.7461, 192.717, -108.774, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 71/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -7.88117, -13.2801, -2.02572, 0.55 ) }
    dend_24 { pt3dadd( -9.86144, -13.1479, -5.35951, 0.55 ) }
    dend_24 { pt3dadd( -11.8583, -13.0408, -9.14019, 1.11 ) }
    dend_24 { pt3dadd( -14.013, -12.8918, -13.2062, 0.83 ) }
    dend_24 { pt3dadd( -15.2983, -12.7551, -15.5117, 0.83 ) }
    dend_24 { pt3dadd( -17.3119, -12.4739, -19.1593, 1.11 ) }
    dend_24 { pt3dadd( -18.4334, -12.2437, -21.1721, 1.11 ) }
    dend_24 { pt3dadd( -20.4755, -11.4024, -25.0653, 0.28 ) }
    dend_24 { pt3dadd( -21.2613, -11.0526, -26.4865, 0.83 ) }
    dend_24 { pt3dadd( -22.0601, -10.7148, -27.8487, 0.55 ) }
    dend_24 { pt3dadd( -23.4608, -10.2476, -30.3147, 1.38 ) }
    dend_24 { pt3dadd( -24.9841, -9.8788, -32.7877, 0.55 ) }
    dend_24 { pt3dadd( -26.5719, -9.65265, -35.3565, 0.83 ) }
    dend_24 { pt3dadd( -29.1017, -9.33994, -39.6791, 0.55 ) }
    dend_24 { pt3dadd( -30.0719, -9.30054, -41.7873, 0.83 ) }
    dend_24 { pt3dadd( -31.5788, -9.3614, -45.5857, 0.55 ) }
    dend_24 { pt3dadd( -32.4765, -9.44356, -48.0517, 0.55 ) }
    dend_24 { pt3dadd( -33.9646, -9.61154, -52.505, 0.55 ) }
    dend_24 { pt3dadd( -35.3397, -9.6314, -56.9364, 1.11 ) }
    dend_24 { pt3dadd( -37.3514, -9.01415, -63.3581, 1.11 ) }
    dend_24 { pt3dadd( -37.8788, -8.69847, -64.9793, 0.28 ) }
    dend_24 { pt3dadd( -38.1453, -8.45788, -65.6402, 0.55 ) }
    dend_24 { pt3dadd( -39.1245, -7.46732, -67.2922, 0.28 ) }
    dend_24 { pt3dadd( -40.629, -5.88411, -68.6817, 0.55 ) }
    dend_24 { pt3dadd( -43.0509, -3.47011, -70.0804, 0.28 ) }
    dend_24 { pt3dadd( -44.8775, -1.70294, -71.1391, 0.55 ) }
    dend_24 { pt3dadd( -47.6026, 0.87071, -73.0156, 1.38 ) }
    dend_24 { pt3dadd( -49.3191, 2.46, -74.3545, 1.11 ) }
    dend_24 { pt3dadd( -51.6291, 4.54661, -76.5478, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_24 { pt3dadd( -53.04, 5.86245, -78.161, 0.83 ) }
    dend_24 { pt3dadd( -55.8315, 8.6586, -81.8756, 0.28 ) }
    dend_24 { pt3dadd( -56.1708, 8.99438, -82.4096, 0.55 ) }
    dend_24 { pt3dadd( -57.3265, 10.1032, -84.4033, 0.28 ) }
    dend_24 { pt3dadd( -59.175, 11.8152, -87.4722, 0.83 ) }
    dend_24 { pt3dadd( -61.265, 13.5487, -91.0951, 0.28 ) }
    dend_24 { pt3dadd( -62.1931, 14.2144, -92.5872, 0.83 ) }
    dend_24 { pt3dadd( -65.3071, 16.1797, -97.0522, 0.28 ) }
    dend_24 { pt3dadd( -66.1105, 16.601, -98.1834, 0.83 ) }
    dend_24 { pt3dadd( -67.1672, 17.0468, -99.6312, 0.83 ) }
    dend_24 { pt3dadd( -71.4775, 18.5986, -105.058, 0.28 ) }
    dend_24 { pt3dadd( -74.5377, 19.5294, -108.693, 0.28 ) }
    dend_24 { pt3dadd( -75.5868, 19.8508, -109.922, 1.11 ) }
    dend_24 { pt3dadd( -77.5094, 20.452, -112.027, 0.28 ) }
    dend_24 { pt3dadd( -77.9411, 20.582, -112.492, 0.55 ) }
    dend_24 { pt3dadd( -79.7821, 21.0289, -114.332, 0.28 ) }
    dend_24 { pt3dadd( -80.316, 21.124, -114.835, 0.55 ) }
    dend_24 { pt3dadd( -82.7272, 21.3516, -117.396, 0.28 ) }
    dend_24 { pt3dadd( -83.4995, 21.3964, -118.292, 0.83 ) }
    dend_24 { pt3dadd( -85.7517, 21.4708, -121.039, 0.28 ) }
    dend_24 { pt3dadd( -86.5193, 21.4537, -121.965, 0.83 ) }
    dend_24 { pt3dadd( -88.6628, 21.2609, -124.645, 0.28 ) }
    dend_24 { pt3dadd( -89.1418, 21.2454, -125.189, 0.55 ) }
    dend_24 { pt3dadd( -90.9858, 21.2676, -127.096, 0.28 ) }
    dend_24 { pt3dadd( -91.6189, 21.3291, -127.742, 0.55 ) }
    dend_24 { pt3dadd( -94.6526, 21.8013, -130.694, 0.28 ) }
    dend_24 { pt3dadd( -96.3996, 22.1519, -132.368, 0.83 ) }
    dend_24 { pt3dadd( -100.112, 22.9886, -135.751, 0.28 ) }
    dend_24 { pt3dadd( -100.599, 23.1046, -136.19, 0.83 ) }
    dend_24 { pt3dadd( -106.003, 24.46, -140.933, 0.28 ) }
    dend_24 { pt3dadd( -107.001, 24.7183, -141.822, 0.83 ) }
    dend_24 { pt3dadd( -110.04, 25.5397, -144.686, 0.28 ) }
    dend_24 { pt3dadd( -110.779, 25.7359, -145.376, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 33/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -7.88117, -13.2801, -2.02572, 0.83 ) }
    dend_23 { pt3dadd( -7.72834, -14.4775, -3.77822, 0.83 ) }
    dend_23 { pt3dadd( -7.45744, -16.7547, -7.42395, 1.11 ) }
    dend_23 { pt3dadd( -7.29878, -18.364, -9.96788, 1.11 ) }
    dend_23 { pt3dadd( -7.19759, -20.3815, -13.0917, 1.11 ) }
    dend_23 { pt3dadd( -7.18328, -22.1971, -15.9494, 1.11 ) }
    dend_23 { pt3dadd( -7.2821, -25.4861, -21.1311, 1.11 ) }
    dend_23 { pt3dadd( -7.28469, -26.6212, -23.1084, 0.83 ) }
    dend_23 { pt3dadd( -7.29049, -27.3095, -24.3259, 1.38 ) }
    dend_23 { pt3dadd( -7.45148, -29.6095, -28.4199, 0.83 ) }
    dend_23 { pt3dadd( -7.80521, -31.9323, -32.2881, 0.83 ) }
    dend_23 { pt3dadd( -8.12912, -33.6599, -34.9346, 1.11 ) }
    dend_23 { pt3dadd( -8.60466, -36.0929, -38.4269, 0.83 ) }
    dend_23 { pt3dadd( -8.82731, -37.3335, -40.1193, 0.55 ) }
    dend_23 { pt3dadd( -9.01661, -38.5445, -41.6671, 1.38 ) }
    dend_23 { pt3dadd( -9.16752, -39.72, -42.9907, 0.83 ) }
    dend_23 { pt3dadd( -9.28507, -40.8748, -44.0855, 1.11 ) }
    dend_23 { pt3dadd( -9.54702, -43.7465, -46.577, 1.11 ) }
    dend_23 { pt3dadd( -9.69887, -45.3356, -47.7558, 0.28 ) }
    dend_23 { pt3dadd( -9.74697, -46.4173, -48.4941, 0.83 ) }
    dend_23 { pt3dadd( -9.70027, -48.6365, -50.0085, 0.28 ) }
    dend_23 { pt3dadd( -9.69655, -49.3102, -50.468, 0.55 ) }
    dend_23 { pt3dadd( -9.82159, -51.4779, -51.7957, 0.28 ) }
    dend_23 { pt3dadd( -10.0715, -53.0711, -52.7449, 1.38 ) }
    dend_23 { pt3dadd( -10.4492, -54.8446, -53.8543, 1.38 ) }
    dend_23 { pt3dadd( -11.1309, -57.5704, -55.708, 0.55 ) }
    dend_23 { pt3dadd( -11.5577, -59.2384, -56.8144, 0.55 ) }
    dend_23 { pt3dadd( -12.2344, -61.7465, -58.5471, 1.38 ) }
    dend_23 { pt3dadd( -13.314, -65.8316, -61.3953, 0.28 ) }
    dend_23 { pt3dadd( -13.9988, -68.8751, -63.8689, 0.83 ) }
    dend_23 { pt3dadd( -14.5823, -71.8368, -66.4613, 0.28 ) }
    dend_23 { pt3dadd( -14.8954, -73.7931, -68.2286, 0.28 ) }
    dend_23 { pt3dadd( -15.0339, -75.2778, -69.6416, 0.83 ) }
    dend_23 { pt3dadd( -15.0487, -76.2092, -70.5813, 0.83 ) }
    dend_23 { pt3dadd( -14.7757, -81.3704, -75.7555, 0.28 ) }
    dend_23 { pt3dadd( -14.7202, -81.9594, -76.3635, 0.55 ) }
    dend_23 { pt3dadd( -14.5714, -84.0183, -78.449, 0.28 ) }
    dend_23 { pt3dadd( -14.5768, -84.2739, -78.7232, 0.55 ) }
    dend_23 { pt3dadd( -14.823, -86.9578, -81.5264, 0.28 ) }
    dend_23 { pt3dadd( -15.0165, -88.0338, -82.7048, 1.11 ) }
    dend_23 { pt3dadd( -16.0268, -91.9909, -86.9832, 0.28 ) }
    dend_23 { pt3dadd( -16.6539, -94.2718, -89.5011, 0.83 ) }
    dend_23 { pt3dadd( -17.9844, -98.7572, -94.4679, 0.28 ) }
    dend_23 { pt3dadd( -18.1965, -99.4618, -95.2784, 0.83 ) }
    dend_23 { pt3dadd( -19.3331, -103.175, -99.7557, 0.28 ) }
    dend_23 { pt3dadd( -19.4705, -103.682, -100.424, 0.83 ) }
    dend_23 { pt3dadd( -19.6947, -104.637, -101.807, 0.28 ) }
    dend_23 { pt3dadd( -19.7753, -105.167, -102.614, 0.55 ) }
    dend_23 { pt3dadd( -19.9181, -108.04, -106.907, 0.28 ) }
    dend_23 { pt3dadd( -19.9271, -109.197, -108.723, 0.55 ) }
    dend_23 { pt3dadd( -19.8564, -110.503, -110.814, 0.28 ) }
    dend_23 { pt3dadd( -19.7912, -111.542, -112.69, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 85/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -1.97935, -32.7408, -0.320854, 2.49 ) }
    dend_17 { pt3dadd( -2.24275, -36.3758, -0.28049, 2.49 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 87/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.97935, -32.7408, -0.320854, 0.83 ) }
    dend_16 { pt3dadd( -0.698058, -33.5818, -0.153879, 0.83 ) }
    dend_16 { pt3dadd( 0.225025, -34.1294, 0.12761, 0.55 ) }
    dend_16 { pt3dadd( 1.06279, -34.6723, 0.440364, 0.55 ) }
    dend_16 { pt3dadd( 2.3599, -35.6126, 0.933958, 0.55 ) }
    dend_16 { pt3dadd( 3.22531, -36.2755, 1.38253, 0.83 ) }
    dend_16 { pt3dadd( 4.63168, -37.3627, 2.10611, 0.55 ) }
    dend_16 { pt3dadd( 6.23948, -38.6052, 3.02566, 0.55 ) }
    dend_16 { pt3dadd( 7.41273, -39.5452, 3.71867, 0.83 ) }
    dend_16 { pt3dadd( 9.11389, -41.0, 4.72519, 0.83 ) }
    dend_16 { pt3dadd( 11.35, -42.7643, 6.06218, 0.83 ) }
    dend_16 { pt3dadd( 13.01, -43.9635, 6.97283, 0.83 ) }
    dend_16 { pt3dadd( 14.8453, -45.1916, 7.89399, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_16 { pt3dadd( 16.7187, -46.3999, 8.77129, 0.83 ) }
    dend_16 { pt3dadd( 18.3058, -47.2818, 9.46519, 0.83 ) }
    dend_16 { pt3dadd( 20.6042, -48.4592, 10.3692, 0.83 ) }
    dend_16 { pt3dadd( 22.4391, -49.4116, 10.9753, 0.83 ) }
    dend_16 { pt3dadd( 23.673, -50.0606, 11.3942, 0.55 ) }
    dend_16 { pt3dadd( 25.4306, -50.9985, 11.9183, 0.83 ) }
    dend_16 { pt3dadd( 27.5961, -52.1216, 12.5593, 0.55 ) }
    dend_16 { pt3dadd( 29.0982, -52.9454, 12.9866, 0.55 ) }
    dend_16 { pt3dadd( 30.3085, -53.7381, 13.2965, 0.55 ) }
    dend_16 { pt3dadd( 30.8392, -54.1004, 13.43, 0.55 ) }
    dend_16 { pt3dadd( 32.2624, -55.0487, 13.7631, 0.83 ) }
    dend_16 { pt3dadd( 34.6599, -56.5767, 14.3225, 0.55 ) }
    dend_16 { pt3dadd( 35.0465, -56.7988, 14.4152, 0.55 ) }
    dend_16 { pt3dadd( 37.1901, -57.9075, 15.0062, 0.55 ) }
    dend_16 { pt3dadd( 38.0898, -58.3312, 15.2741, 0.55 ) }
    dend_16 { pt3dadd( 39.1163, -58.7987, 15.5855, 0.55 ) }
    dend_16 { pt3dadd( 40.4412, -59.3581, 15.9946, 0.55 ) }
    dend_16 { pt3dadd( 42.1457, -59.9721, 16.4836, 0.55 ) }
    dend_16 { pt3dadd( 44.2571, -60.63, 17.1721, 0.55 ) }
    dend_16 { pt3dadd( 44.8473, -60.7415, 17.4228, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 20/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -45.4719, 20.3881, 3.31076, 0.55 ) }
    dend_13 { pt3dadd( -47.8355, 21.8533, 3.73966, 0.55 ) }
    dend_13 { pt3dadd( -51.1624, 23.9368, 4.27064, 0.83 ) }
    dend_13 { pt3dadd( -53.5783, 25.504, 5.41076, 0.55 ) }
    dend_13 { pt3dadd( -56.109, 27.2443, 7.20839, 0.55 ) }
    dend_13 { pt3dadd( -59.5909, 29.6842, 10.0569, 1.38 ) }
    dend_13 { pt3dadd( -61.9694, 31.3433, 12.0936, 0.28 ) }
    dend_13 { pt3dadd( -63.3087, 32.274, 13.2783, 0.55 ) }
    dend_13 { pt3dadd( -69.9138, 36.5583, 18.7818, 0.55 ) }
    dend_13 { pt3dadd( -71.8526, 37.8008, 20.3693, 0.28 ) }
    dend_13 { pt3dadd( -73.3807, 38.8033, 21.5743, 0.83 ) }
    dend_13 { pt3dadd( -76.3957, 40.8585, 23.8363, 0.55 ) }
    dend_13 { pt3dadd( -79.369, 42.9809, 25.5733, 0.55 ) }
    dend_13 { pt3dadd( -81.9406, 44.8914, 26.5437, 0.55 ) }
    dend_13 { pt3dadd( -84.2559, 46.7174, 27.0467, 0.28 ) }
    dend_13 { pt3dadd( -86.6625, 48.71, 27.4946, 0.55 ) }
    dend_13 { pt3dadd( -89.5082, 51.2141, 27.7754, 0.28 ) }
    dend_13 { pt3dadd( -93.1561, 54.6411, 27.8437, 0.55 ) }
    dend_13 { pt3dadd( -96.2717, 57.7914, 27.7473, 0.55 ) }
    dend_13 { pt3dadd( -98.4707, 60.154, 27.5042, 0.28 ) }
    dend_13 { pt3dadd( -99.7443, 61.5632, 27.2302, 0.55 ) }
    dend_13 { pt3dadd( -103.44, 65.85, 26.0294, 0.28 ) }
    dend_13 { pt3dadd( -103.65, 66.0989, 25.9355, 0.55 ) }
    dend_13 { pt3dadd( -105.531, 68.4984, 24.8591, 0.28 ) }
    dend_13 { pt3dadd( -106.407, 69.7148, 24.3741, 0.55 ) }
    dend_13 { pt3dadd( -107.47, 71.3031, 23.8923, 0.28 ) }
    dend_13 { pt3dadd( -108.111, 72.2862, 23.7983, 0.55 ) }
    dend_13 { pt3dadd( -110.321, 75.5469, 24.0277, 0.28 ) }
    dend_13 { pt3dadd( -111.57, 77.204, 24.1997, 0.83 ) }
    dend_13 { pt3dadd( -113.26, 79.2248, 24.4712, 0.28 ) }
    dend_13 { pt3dadd( -114.675, 80.7737, 24.6617, 0.55 ) }
    dend_13 { pt3dadd( -117.833, 83.882, 24.9807, 0.28 ) }
    dend_13 { pt3dadd( -119.815, 85.6741, 25.1154, 0.55 ) }
    dend_13 { pt3dadd( -122.644, 87.8778, 25.1492, 0.28 ) }
    dend_13 { pt3dadd( -124.744, 89.2901, 25.0651, 0.55 ) }
    dend_13 { pt3dadd( -128.199, 91.2705, 24.6703, 0.28 ) }
    dend_13 { pt3dadd( -130.017, 92.1506, 24.3745, 0.28 ) }
    dend_13 { pt3dadd( -130.716, 92.4159, 24.1948, 0.83 ) }
    dend_13 { pt3dadd( -134.668, 93.6448, 23.0522, 0.28 ) }
    dend_13 { pt3dadd( -136.221, 94.0212, 22.411, 0.83 ) }
    dend_13 { pt3dadd( -138.917, 94.5588, 21.2303, 0.28 ) }
    dend_13 { pt3dadd( -139.86, 94.6627, 20.7368, 0.55 ) }
    dend_13 { pt3dadd( -143.856, 94.8367, 18.2254, 0.28 ) }
    dend_13 { pt3dadd( -144.987, 94.7785, 17.3757, 0.55 ) }
    dend_13 { pt3dadd( -149.576, 94.1575, 13.3813, 0.28 ) }
    dend_13 { pt3dadd( -152.049, 93.6286, 10.9895, 0.55 ) }
    dend_13 { pt3dadd( -157.21, 92.0625, 5.79205, 0.28 ) }
    dend_13 { pt3dadd( -158.633, 91.5596, 4.18215, 0.83 ) }
    dend_13 { pt3dadd( -161.423, 90.4134, 0.804641, 0.28 ) }
    dend_13 { pt3dadd( -161.423, 90.4134, 0.804641, 0.55 ) }
    dend_13 { pt3dadd( -163.367, 89.44, -1.50392, 0.28 ) }
    dend_13 { pt3dadd( -164.631, 88.7784, -3.14305, 0.83 ) }
    dend_13 { pt3dadd( -168.414, 86.8666, -8.07228, 0.28 ) }
    dend_13 { pt3dadd( -169.004, 86.6078, -8.83485, 0.55 ) }
    dend_13 { pt3dadd( -169.851, 86.3261, -9.90848, 0.28 ) }
    dend_13 { pt3dadd( -170.87, 86.0331, -11.2396, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 76/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -45.4719, 20.3881, 3.31076, 0.28 ) }
    dend_12 { pt3dadd( -44.4419, 23.0668, 2.59515, 0.28 ) }
    dend_12 { pt3dadd( -44.0694, 24.0236, 2.46533, 0.55 ) }
    dend_12 { pt3dadd( -43.5282, 25.489, 2.33018, 0.28 ) }
    dend_12 { pt3dadd( -43.1084, 26.6893, 2.28107, 0.55 ) }
    dend_12 { pt3dadd( -42.6808, 27.9712, 2.2394, 0.28 ) }
    dend_12 { pt3dadd( -42.3861, 29.1443, 1.92926, 0.55 ) }
    dend_12 { pt3dadd( -42.1986, 30.8736, 0.888454, 0.28 ) }
    dend_12 { pt3dadd( -42.2088, 31.4736, 0.399761, 0.55 ) }
    dend_12 { pt3dadd( -42.3674, 33.4599, -1.41935, 0.28 ) }
    dend_12 { pt3dadd( -42.4356, 34.1606, -2.08294, 0.83 ) }
    dend_12 { pt3dadd( -42.969, 40.3132, -7.77452, 0.28 ) }
    dend_12 { pt3dadd( -43.0327, 41.2245, -8.595, 1.11 ) }
    dend_12 { pt3dadd( -43.1596, 43.7872, -10.9761, 0.28 ) }
    dend_12 { pt3dadd( -43.1937, 45.9924, -12.9299, 0.28 ) }
    dend_12 { pt3dadd( -43.1561, 47.3026, -14.0649, 0.55 ) }
    dend_12 { pt3dadd( -42.9576, 48.9573, -15.2392, 0.28 ) }
    dend_12 { pt3dadd( -42.7698, 49.8361, -15.651, 0.55 ) }
    dend_12 { pt3dadd( -42.4373, 51.7109, -16.8397, 0.28 ) }
    dend_12 { pt3dadd( -42.3612, 52.3263, -17.3088, 0.55 ) }
    dend_12 { pt3dadd( -42.3067, 53.5454, -18.2376, 0.28 ) }
    dend_12 { pt3dadd( -42.3078, 54.2349, -18.6146, 0.55 ) }
    dend_12 { pt3dadd( -42.3763, 56.5934, -19.6114, 0.28 ) }
    dend_12 { pt3dadd( -42.3608, 59.2083, -20.087, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( -42.3024, 62.4655, -20.221, 0.28 ) }
    dend_12 { pt3dadd( -42.3158, 63.4734, -20.2918, 0.55 ) }
    dend_12 { pt3dadd( -42.4892, 67.8645, -20.6556, 0.28 ) }
    dend_12 { pt3dadd( -42.5385, 68.8788, -20.7475, 0.83 ) }
    dend_12 { pt3dadd( -42.7197, 73.2478, -21.1521, 0.28 ) }
    dend_12 { pt3dadd( -42.7372, 74.0205, -21.2246, 0.83 ) }
    dend_12 { pt3dadd( -43.0994, 79.5484, -22.361, 0.28 ) }
    dend_12 { pt3dadd( -43.1689, 80.2698, -22.5306, 0.55 ) }
    dend_12 { pt3dadd( -43.5393, 82.6773, -23.3375, 0.28 ) }
    dend_12 { pt3dadd( -43.6586, 83.3855, -23.6021, 0.55 ) }
    dend_12 { pt3dadd( -44.0189, 85.0636, -24.4355, 0.28 ) }
    dend_12 { pt3dadd( -44.0447, 85.6124, -24.5024, 0.55 ) }
    dend_12 { pt3dadd( -43.9809, 86.7218, -24.3745, 0.28 ) }
    dend_12 { pt3dadd( -43.9493, 87.2701, -24.3037, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 14/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 29.4471, 1.83468, 10.0691, 0.55 ) }
    dend_8 { pt3dadd( 30.6707, 0.76404, 12.3173, 0.55 ) }
    dend_8 { pt3dadd( 30.9441, 0.517425, 12.8089, 1.38 ) }
    dend_8 { pt3dadd( 31.8169, -0.339705, 14.281, 0.55 ) }
    dend_8 { pt3dadd( 33.134, -1.72345, 16.3441, 0.83 ) }
    dend_8 { pt3dadd( 35.0898, -3.77837, 19.4079, 0.55 ) }
    dend_8 { pt3dadd( 35.7037, -4.42336, 20.3696, 0.55 ) }
    dend_8 { pt3dadd( 35.9455, -4.65708, 20.7312, 0.55 ) }
    dend_8 { pt3dadd( 36.7786, -5.46276, 22.0318, 0.55 ) }
    dend_8 { pt3dadd( 37.287, -5.96776, 22.8443, 0.83 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 24/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 29.4471, 1.83468, 10.0691, 0.83 ) }
    dend_7 { pt3dadd( 31.7325, 1.83517, 10.2658, 0.83 ) }
    dend_7 { pt3dadd( 33.3344, 1.88097, 10.3551, 0.83 ) }
    dend_7 { pt3dadd( 34.5801, 1.97171, 10.4912, 0.83 ) }
    dend_7 { pt3dadd( 36.8117, 2.18116, 10.8149, 0.83 ) }
    dend_7 { pt3dadd( 39.1632, 2.44186, 11.1757, 0.83 ) }
    dend_7 { pt3dadd( 41.6654, 2.71126, 11.5406, 0.83 ) }
    dend_7 { pt3dadd( 43.7563, 2.88515, 11.8732, 0.83 ) }
    dend_7 { pt3dadd( 45.9614, 2.95747, 12.2305, 0.55 ) }
    dend_7 { pt3dadd( 48.031, 3.00936, 12.4585, 0.83 ) }
    dend_7 { pt3dadd( 51.1437, 3.01538, 12.5896, 0.83 ) }
    dend_7 { pt3dadd( 53.9205, 2.9627, 12.4917, 0.83 ) }
    dend_7 { pt3dadd( 56.1856, 2.86502, 12.298, 0.55 ) }
    dend_7 { pt3dadd( 57.8125, 2.75311, 12.0871, 0.83 ) }
    dend_7 { pt3dadd( 61.7541, 2.48081, 11.3408, 0.83 ) }
    dend_7 { pt3dadd( 63.1815, 2.40739, 11.0309, 0.83 ) }
    dend_7 { pt3dadd( 65.4377, 2.33355, 10.5226, 0.55 ) }
    dend_7 { pt3dadd( 66.9429, 2.34466, 10.1969, 0.55 ) }
    dend_7 { pt3dadd( 69.4549, 2.5531, 9.71628, 0.83 ) }
    dend_7 { pt3dadd( 71.8362, 2.82607, 9.41613, 0.55 ) }
    dend_7 { pt3dadd( 73.1029, 2.9874, 9.38206, 0.55 ) }
    dend_7 { pt3dadd( 73.9661, 3.10782, 9.41871, 0.55 ) }
    dend_7 { pt3dadd( 75.478, 3.36413, 9.5516, 0.55 ) }
    dend_7 { pt3dadd( 77.5147, 3.71026, 9.81884, 0.55 ) }
    dend_7 { pt3dadd( 79.1753, 3.91492, 10.1465, 0.83 ) }
    dend_7 { pt3dadd( 80.2135, 3.95207, 10.3941, 0.83 ) }
    dend_7 { pt3dadd( 82.3518, 3.87676, 10.9081, 0.55 ) }
    dend_7 { pt3dadd( 84.7453, 3.5626, 11.4786, 0.55 ) }
    dend_7 { pt3dadd( 85.7614, 3.33314, 11.7244, 0.55 ) }
    dend_7 { pt3dadd( 87.7251, 2.6534, 12.2157, 0.28 ) }
    dend_7 { pt3dadd( 89.3135, 1.98629, 12.6137, 0.28 ) }
    dend_7 { pt3dadd( 89.962, 1.65899, 12.7839, 0.55 ) }
    dend_7 { pt3dadd( 91.5865, 0.73597, 13.2082, 0.28 ) }
    dend_7 { pt3dadd( 91.9921, 0.458925, 13.3247, 0.55 ) }
    dend_7 { pt3dadd( 93.9135, -0.918945, 13.8733, 0.28 ) }
    dend_7 { pt3dadd( 94.6253, -1.41277, 14.0715, 0.28 ) }
    dend_7 { pt3dadd( 95.3783, -1.92036, 14.3276, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 61/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 28.7966, 31.2048, 18.4166, 0.55 ) }
    dend_5 { pt3dadd( 26.5348, 32.6451, 17.6942, 0.55 ) }
    dend_5 { pt3dadd( 24.3793, 33.9216, 16.8867, 0.55 ) }
    dend_5 { pt3dadd( 23.622, 34.3677, 16.5932, 0.55 ) }
    dend_5 { pt3dadd( 22.6857, 34.9842, 16.216, 0.83 ) }
    dend_5 { pt3dadd( 19.7314, 37.1469, 14.9981, 0.28 ) }
    dend_5 { pt3dadd( 19.3956, 37.4241, 14.8489, 0.55 ) }
    dend_5 { pt3dadd( 17.6254, 39.0896, 13.9315, 0.28 ) }
    dend_5 { pt3dadd( 17.0713, 39.7928, 13.5657, 1.11 ) }
    dend_5 { pt3dadd( 15.2678, 42.87, 12.2013, 0.28 ) }
    dend_5 { pt3dadd( 14.8598, 43.8598, 11.8034, 0.55 ) }
    dend_5 { pt3dadd( 14.3912, 45.5497, 11.2173, 0.28 ) }
    dend_5 { pt3dadd( 14.2132, 46.4205, 10.9434, 0.55 ) }
    dend_5 { pt3dadd( 13.7141, 49.8288, 10.0211, 0.28 ) }
    dend_5 { pt3dadd( 13.5737, 51.0677, 9.72927, 0.55 ) }
    dend_5 { pt3dadd( 13.4017, 53.0904, 9.3454, 0.28 ) }
    dend_5 { pt3dadd( 13.3754, 53.4264, 9.2944, 0.83 ) }
    dend_5 { pt3dadd( 13.2272, 56.0237, 9.02447, 0.28 ) }
    dend_5 { pt3dadd( 13.2249, 57.9158, 8.73835, 0.28 ) }
    dend_5 { pt3dadd( 13.3081, 59.9293, 8.46141, 0.28 ) }
    dend_5 { pt3dadd( 13.4367, 61.0321, 8.30702, 0.55 ) }
    dend_5 { pt3dadd( 13.9629, 63.9478, 8.10758, 0.28 ) }
    dend_5 { pt3dadd( 14.2486, 65.0553, 8.0623, 0.55 ) }
    dend_5 { pt3dadd( 15.5339, 68.5481, 8.18291, 0.28 ) }
    dend_5 { pt3dadd( 16.5376, 70.7247, 8.46059, 0.83 ) }
    dend_5 { pt3dadd( 17.705, 73.0495, 8.88926, 0.83 ) }
    dend_5 { pt3dadd( 18.9526, 75.3106, 9.52317, 0.28 ) }
    dend_5 { pt3dadd( 19.3984, 76.0395, 9.88857, 0.55 ) }
    dend_5 { pt3dadd( 20.5068, 77.7583, 11.1722, 0.28 ) }
    dend_5 { pt3dadd( 20.6439, 77.9602, 11.4048, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 91/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 28.7966, 31.2048, 18.4166, 0.55 ) }
    dend_2 { pt3dadd( 29.6114, 32.7437, 19.2089, 0.55 ) }
    dend_2 { pt3dadd( 30.1356, 33.7451, 19.7472, 1.11 ) }
    dend_2 { pt3dadd( 31.0161, 35.5064, 20.6973, 0.83 ) }
    dend_2 { pt3dadd( 32.261, 38.0964, 21.8508, 0.83 ) }
    dend_2 { pt3dadd( 33.8851, 41.5594, 23.2628, 0.83 ) }
    dend_2 { pt3dadd( 34.6783, 43.1798, 23.8644, 0.83 ) }
    dend_2 { pt3dadd( 35.302, 44.421, 24.3411, 0.28 ) }
    dend_2 { pt3dadd( 35.7024, 45.2334, 24.6365, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_2 { pt3dadd( 36.9833, 48.0088, 25.5584, 0.83 ) }
    dend_2 { pt3dadd( 37.6147, 49.3929, 25.9677, 0.83 ) }
    dend_2 { pt3dadd( 38.5173, 51.46, 26.4431, 0.55 ) }
    dend_2 { pt3dadd( 39.2405, 53.157, 26.9464, 0.83 ) }
    dend_2 { pt3dadd( 40.2938, 55.641, 27.8891, 0.83 ) }
    dend_2 { pt3dadd( 40.5764, 56.3379, 28.2205, 0.83 ) }
    dend_2 { pt3dadd( 40.9388, 57.394, 28.906, 0.83 ) }
    dend_2 { pt3dadd( 41.2559, 58.5603, 29.713, 0.83 ) }
    dend_2 { pt3dadd( 41.5727, 59.8729, 30.7666, 0.55 ) }
    dend_2 { pt3dadd( 41.8801, 60.9559, 31.6932, 0.28 ) }
    dend_2 { pt3dadd( 42.0698, 61.5805, 32.2673, 0.55 ) }
    dend_2 { pt3dadd( 42.5736, 63.067, 33.5941, 0.28 ) }
    dend_2 { pt3dadd( 42.7535, 63.6272, 34.0345, 0.55 ) }
    dend_2 { pt3dadd( 43.3645, 65.4732, 35.2776, 0.28 ) }
    dend_2 { pt3dadd( 43.4955, 65.9709, 35.5323, 0.83 ) }
    dend_2 { pt3dadd( 43.7811, 67.0075, 35.9725, 0.28 ) }
    dend_2 { pt3dadd( 43.8752, 67.3365, 36.0783, 0.55 ) }
    dend_2 { pt3dadd( 44.2105, 68.6932, 36.4795, 0.28 ) }
    dend_2 { pt3dadd( 44.4461, 69.8157, 36.8045, 0.55 ) }
    dend_2 { pt3dadd( 44.6957, 71.3921, 37.2496, 0.28 ) }
    dend_2 { pt3dadd( 44.9205, 72.7601, 37.694, 0.28 ) }
    dend_2 { pt3dadd( 45.2371, 74.4725, 38.3361, 0.28 ) }
    dend_2 { pt3dadd( 45.611, 76.5143, 39.1428, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 23/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 5.36418, 57.3661, 0.830616, 0.83 ) }
    dend_46 { pt3dadd( 4.70199, 59.2614, 0.991333, 0.83 ) }
    dend_46 { pt3dadd( 3.68725, 62.5021, 1.24524, 0.83 ) }
    dend_46 { pt3dadd( 2.86906, 65.6582, 1.4565, 0.83 ) }
    dend_46 { pt3dadd( 2.24355, 68.2763, 1.49402, 0.83 ) }
    dend_46 { pt3dadd( 1.35294, 72.4827, 1.44443, 0.83 ) }
    dend_46 { pt3dadd( 0.833471, 75.2983, 1.36015, 0.55 ) }
    dend_46 { pt3dadd( 0.438254, 77.9224, 1.13731, 0.83 ) }
    dend_46 { pt3dadd( -0.18553, 83.1719, 0.364576, 0.83 ) }
    dend_46 { pt3dadd( -0.654964, 88.7231, -0.666373, 0.83 ) }
    dend_46 { pt3dadd( -0.824141, 91.0807, -1.24035, 1.11 ) }
    dend_46 { pt3dadd( -1.02615, 94.32, -2.13473, 0.83 ) }
    dend_46 { pt3dadd( -1.30876, 99.8452, -3.68805, 0.83 ) }
    dend_46 { pt3dadd( -1.6549, 105.557, -5.24183, 0.83 ) }
    dend_46 { pt3dadd( -2.00772, 110.389, -6.57911, 0.83 ) }
    dend_46 { pt3dadd( -2.42983, 115.718, -7.97808, 0.83 ) }
    dend_46 { pt3dadd( -2.89178, 120.564, -9.16726, 0.83 ) }
    dend_46 { pt3dadd( -3.39579, 125.132, -10.1915, 0.83 ) }
    dend_46 { pt3dadd( -3.7654, 128.454, -10.7933, 0.83 ) }
    dend_46 { pt3dadd( -4.26221, 132.407, -11.4029, 0.83 ) }
    dend_46 { pt3dadd( -4.51696, 134.371, -11.6546, 0.83 ) }
    dend_46 { pt3dadd( -4.78525, 136.796, -11.8537, 0.55 ) }
    dend_46 { pt3dadd( -5.0758, 139.404, -12.1881, 0.55 ) }
    dend_46 { pt3dadd( -5.45004, 142.708, -12.7148, 0.55 ) }
    dend_46 { pt3dadd( -5.60062, 144.66, -13.0486, 0.55 ) }
    dend_46 { pt3dadd( -5.84643, 148.028, -13.5279, 0.28 ) }
    dend_46 { pt3dadd( -5.94404, 149.502, -13.7506, 0.55 ) }
    dend_46 { pt3dadd( -6.20141, 152.949, -14.5616, 0.28 ) }
    dend_46 { pt3dadd( -6.4101, 155.554, -15.2814, 0.28 ) }
    dend_46 { pt3dadd( -6.59255, 157.375, -15.9399, 0.28 ) }
    dend_46 { pt3dadd( -6.87846, 159.807, -16.9011, 0.55 ) }
    dend_46 { pt3dadd( -7.23317, 162.361, -17.9259, 0.55 ) }
    dend_46 { pt3dadd( -7.95378, 167.327, -19.743, 0.28 ) }
    dend_46 { pt3dadd( -8.34553, 169.875, -20.552, 1.38 ) }
    dend_46 { pt3dadd( -8.99717, 174.023, -21.9715, 0.55 ) }
    dend_46 { pt3dadd( -9.43488, 176.392, -22.8091, 0.55 ) }
    dend_46 { pt3dadd( -9.66938, 177.609, -23.255, 0.55 ) }
    dend_46 { pt3dadd( -10.4516, 181.081, -24.3368, 0.55 ) }
    dend_46 { pt3dadd( -10.9457, 183.424, -24.6373, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 62/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 5.36418, 57.3661, 0.830616, 0.83 ) }
    dend_43 { pt3dadd( 5.58388, 60.8789, 1.09402, 0.83 ) }
    dend_43 { pt3dadd( 5.78183, 63.5074, 1.36616, 0.83 ) }
    dend_43 { pt3dadd( 5.92515, 65.5145, 1.58749, 0.83 ) }
    dend_43 { pt3dadd( 6.1123, 68.1983, 1.9703, 0.83 ) }
    dend_43 { pt3dadd( 6.33028, 70.9481, 2.38452, 0.83 ) }
    dend_43 { pt3dadd( 6.63589, 74.6214, 2.93633, 0.83 ) }
    dend_43 { pt3dadd( 7.01468, 78.8856, 3.60428, 0.83 ) }
    dend_43 { pt3dadd( 7.34061, 82.2863, 4.12661, 0.83 ) }
    dend_43 { pt3dadd( 7.81044, 86.5747, 4.75125, 0.83 ) }
    dend_43 { pt3dadd( 8.08224, 88.8683, 5.06532, 0.83 ) }
    dend_43 { pt3dadd( 8.3611, 91.2928, 5.34651, 0.83 ) }
    dend_43 { pt3dadd( 8.6796, 94.2159, 5.64942, 0.83 ) }
    dend_43 { pt3dadd( 8.87682, 96.5394, 5.79366, 0.83 ) }
    dend_43 { pt3dadd( 8.90951, 97.3132, 5.82438, 0.83 ) }
    dend_43 { pt3dadd( 8.82618, 99.9752, 5.91478, 0.83 ) }
    dend_43 { pt3dadd( 8.4793, 102.898, 5.94105, 0.83 ) }
    dend_43 { pt3dadd( 7.91671, 106.122, 5.89523, 0.83 ) }
    dend_43 { pt3dadd( 7.04977, 110.523, 5.72024, 0.83 ) }
    dend_43 { pt3dadd( 6.47894, 113.267, 5.53763, 0.83 ) }
    dend_43 { pt3dadd( 5.7525, 116.999, 5.13964, 0.83 ) }
    dend_43 { pt3dadd( 4.81485, 121.62, 4.57401, 0.83 ) }
    dend_43 { pt3dadd( 3.74247, 126.88, 3.85688, 0.83 ) }
    dend_43 { pt3dadd( 2.74298, 131.925, 3.08856, 0.83 ) }
    dend_43 { pt3dadd( 1.67657, 137.595, 2.14745, 0.83 ) }
    dend_43 { pt3dadd( 0.550796, 145.215, 0.696934, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 88/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -2.24275, -36.3758, -0.28049, 1.38 ) }
    dend_19 { pt3dadd( -2.01181, -38.6984, -0.511162, 1.38 ) }
    dend_19 { pt3dadd( -1.84373, -40.3888, -0.679051, 1.38 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 91/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -2.24275, -36.3758, -0.28049, 0.83 ) }
    dend_18 { pt3dadd( -3.59689, -39.7611, -0.844915, 0.83 ) }
    dend_18 { pt3dadd( -4.76455, -42.6968, -1.5197, 1.11 ) }
    dend_18 { pt3dadd( -5.67229, -44.9985, -2.10657, 0.28 ) }
    dend_18 { pt3dadd( -7.42993, -49.478, -3.21247, 0.83 ) }
    dend_18 { pt3dadd( -9.4603, -54.6701, -4.38953, 0.28 ) }
    dend_18 { pt3dadd( -10.6019, -57.534, -5.01534, 0.83 ) }
    dend_18 { pt3dadd( -11.8335, -60.5505, -5.75551, 0.28 ) }
    dend_18 { pt3dadd( -12.0223, -60.9831, -5.86434, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_18 { pt3dadd( -13.7948, -64.7131, -6.79654, 0.83 ) }
    dend_18 { pt3dadd( -15.2039, -67.5693, -7.33229, 0.83 ) }
    dend_18 { pt3dadd( -15.9455, -68.9828, -7.53752, 0.83 ) }
    dend_18 { pt3dadd( -17.3886, -71.6076, -7.8678, 0.28 ) }
    dend_18 { pt3dadd( -18.3001, -73.2636, -7.99201, 1.11 ) }
    dend_18 { pt3dadd( -20.6916, -77.5704, -8.25981, 0.28 ) }
    dend_18 { pt3dadd( -22.2478, -80.406, -8.3655, 0.83 ) }
    dend_18 { pt3dadd( -23.4645, -82.7144, -8.35062, 0.28 ) }
    dend_18 { pt3dadd( -23.8067, -83.3953, -8.36036, 0.83 ) }
    dend_18 { pt3dadd( -24.5034, -84.8169, -8.428, 0.28 ) }
    dend_18 { pt3dadd( -24.8427, -85.4997, -8.53717, 0.55 ) }
    dend_18 { pt3dadd( -25.5207, -86.6847, -8.82888, 0.28 ) }
    dend_18 { pt3dadd( -25.9336, -87.303, -9.02278, 1.11 ) }
    dend_18 { pt3dadd( -29.1298, -91.901, -10.3132, 0.28 ) }
    dend_18 { pt3dadd( -29.8487, -92.8742, -10.5429, 0.55 ) }
    dend_18 { pt3dadd( -31.9128, -95.7901, -11.0004, 0.28 ) }
    dend_18 { pt3dadd( -33.2721, -97.7901, -11.1601, 0.28 ) }
    dend_18 { pt3dadd( -34.5915, -99.8414, -11.157, 0.83 ) }
    dend_18 { pt3dadd( -35.9899, -102.242, -10.911, 0.28 ) }
    dend_18 { pt3dadd( -36.7306, -103.784, -10.5047, 0.55 ) }
    dend_18 { pt3dadd( -38.1314, -107.437, -9.42115, 0.28 ) }
    dend_18 { pt3dadd( -38.4092, -108.335, -9.15507, 0.55 ) }
    dend_18 { pt3dadd( -39.2221, -111.643, -8.30997, 0.28 ) }
    dend_18 { pt3dadd( -39.4464, -112.816, -8.07082, 0.83 ) }
    dend_18 { pt3dadd( -40.0867, -116.793, -7.48401, 0.28 ) }
    dend_18 { pt3dadd( -40.5064, -120.113, -7.08368, 0.28 ) }
    dend_18 { pt3dadd( -40.6971, -121.696, -6.97257, 0.83 ) }
    dend_18 { pt3dadd( -41.1077, -125.092, -7.09526, 0.28 ) }
    dend_18 { pt3dadd( -41.484, -128.433, -7.57683, 0.28 ) }
    dend_18 { pt3dadd( -41.5729, -129.238, -7.77757, 0.83 ) }
    dend_18 { pt3dadd( -41.8399, -131.633, -8.66896, 0.28 ) }
    dend_18 { pt3dadd( -41.9999, -133.293, -9.38782, 0.55 ) }
    dend_18 { pt3dadd( -42.3614, -137.827, -11.5528, 0.28 ) }
    dend_18 { pt3dadd( -42.4046, -138.495, -11.9255, 0.55 ) }
    dend_18 { pt3dadd( -42.5252, -140.731, -13.2614, 0.28 ) }
    dend_18 { pt3dadd( -42.5494, -141.212, -13.5244, 0.55 ) }
    dend_18 { pt3dadd( -42.5804, -141.823, -13.8358, 0.28 ) }
    dend_18 { pt3dadd( -42.6003, -142.511, -14.0597, 0.55 ) }
    dend_18 { pt3dadd( -42.6547, -144.502, -14.4626, 0.28 ) }
    dend_18 { pt3dadd( -42.6958, -145.548, -14.5846, 0.55 ) }
    dend_18 { pt3dadd( -42.786, -148.601, -14.7622, 0.28 ) }
    dend_18 { pt3dadd( -42.8052, -149.601, -14.8191, 0.83 ) }
    dend_18 { pt3dadd( -42.8948, -153.698, -15.0059, 0.28 ) }
    dend_18 { pt3dadd( -42.9137, -154.695, -15.0362, 0.83 ) }
    dend_18 { pt3dadd( -43.0205, -160.458, -15.1321, 0.28 ) }
    dend_18 { pt3dadd( -43.0747, -166.097, -15.0561, 0.28 ) }
    dend_18 { pt3dadd( -43.0419, -168.402, -14.9615, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 47/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 45.611, 76.5143, 39.1428, 0.28 ) }
    dend_4 { pt3dadd( 45.5045, 78.8051, 40.3116, 0.28 ) }
    dend_4 { pt3dadd( 45.4317, 81.4725, 41.7574, 0.28 ) }
    dend_4 { pt3dadd( 45.4224, 83.47, 42.8563, 0.28 ) }
    dend_4 { pt3dadd( 45.3838, 84.2164, 43.1641, 0.55 ) }
    dend_4 { pt3dadd( 45.2098, 85.9432, 43.6869, 0.28 ) }
    dend_4 { pt3dadd( 45.0678, 86.9466, 43.9306, 0.55 ) }
    dend_4 { pt3dadd( 44.9079, 88.0449, 44.0576, 0.28 ) }
    dend_4 { pt3dadd( 44.7394, 88.8204, 44.0729, 0.55 ) }
    dend_4 { pt3dadd( 43.6186, 92.7137, 43.7205, 0.28 ) }
    dend_4 { pt3dadd( 43.0477, 94.4537, 43.3855, 0.28 ) }
    dend_4 { pt3dadd( 42.7978, 95.0987, 43.1815, 0.28 ) }
    dend_4 { pt3dadd( 42.0996, 96.666, 42.5786, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 60/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 45.611, 76.5143, 39.1428, 0.55 ) }
    dend_3 { pt3dadd( 46.9703, 77.0505, 36.5008, 0.55 ) }
    dend_3 { pt3dadd( 48.0192, 77.2828, 34.2302, 0.55 ) }
    dend_3 { pt3dadd( 48.8411, 77.3067, 32.0549, 0.55 ) }
    dend_3 { pt3dadd( 50.6862, 77.1168, 26.9746, 0.28 ) }
    dend_3 { pt3dadd( 51.269, 76.9792, 25.5628, 0.55 ) }
    dend_3 { pt3dadd( 52.8759, 76.4645, 22.0921, 0.28 ) }
    dend_3 { pt3dadd( 53.6629, 76.0774, 20.4166, 0.55 ) }
    dend_3 { pt3dadd( 55.1074, 75.287, 17.8423, 0.28 ) }
    dend_3 { pt3dadd( 55.8189, 74.9617, 16.9593, 0.55 ) }
    dend_3 { pt3dadd( 58.1102, 74.0313, 14.9519, 0.28 ) }
    dend_3 { pt3dadd( 59.1202, 73.6446, 14.1352, 0.83 ) }
    dend_3 { pt3dadd( 62.0036, 72.5255, 12.0384, 0.28 ) }
    dend_3 { pt3dadd( 63.8344, 71.7813, 10.7458, 0.55 ) }
    dend_3 { pt3dadd( 66.8157, 70.3904, 8.68952, 0.28 ) }
    dend_3 { pt3dadd( 67.7452, 69.905, 8.06986, 0.55 ) }
    dend_3 { pt3dadd( 70.0427, 68.7449, 6.29237, 0.28 ) }
    dend_3 { pt3dadd( 71.4665, 68.0377, 5.26555, 0.55 ) }
    dend_3 { pt3dadd( 73.6089, 67.0609, 3.94206, 0.28 ) }
    dend_3 { pt3dadd( 75.0964, 66.8242, 3.23243, 0.55 ) }
    dend_3 { pt3dadd( 77.979, 67.9982, 1.55207, 0.28 ) }
    dend_3 { pt3dadd( 82.1919, 70.9055, -1.56033, 0.28 ) }
    dend_3 { pt3dadd( 84.0646, 72.7862, -4.04019, 0.55 ) }
    dend_3 { pt3dadd( 85.3743, 74.4231, -6.93689, 0.28 ) }
    dend_3 { pt3dadd( 85.7688, 75.1186, -8.20349, 0.83 ) }
    dend_3 { pt3dadd( 86.8767, 77.8762, -14.2456, 0.28 ) }
    dend_3 { pt3dadd( 86.893, 77.9871, -14.6357, 0.55 ) }
    dend_3 { pt3dadd( 86.6354, 78.2305, -19.9583, 0.28 ) }
    dend_3 { pt3dadd( 86.5386, 78.2423, -21.078, 0.83 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 89/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -10.9457, 183.424, -24.6373, 0.83 ) }
    dend_48 { pt3dadd( -12.9332, 188.498, -25.7158, 0.83 ) }
    dend_48 { pt3dadd( -13.7702, 190.591, -26.2714, 0.83 ) }
    dend_48 { pt3dadd( -14.7054, 192.98, -26.9439, 0.55 ) }
    dend_48 { pt3dadd( -15.4231, 194.799, -27.4555, 0.83 ) }
    dend_48 { pt3dadd( -16.2061, 196.849, -28.0212, 0.83 ) }
    dend_48 { pt3dadd( -17.07, 199.145, -28.7002, 0.83 ) }
    dend_48 { pt3dadd( -18.107, 202.189, -29.4873, 0.55 ) }
    dend_48 { pt3dadd( -18.3613, 203.012, -29.7643, 0.83 ) }
    dend_48 { pt3dadd( -18.65, 204.035, -30.168, 0.55 ) }
    dend_48 { pt3dadd( -18.9412, 205.048, -30.6109, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_48 { pt3dadd( -19.4213, 206.732, -31.5014, 0.28 ) }
    dend_48 { pt3dadd( -19.8354, 208.335, -32.3826, 0.55 ) }
    dend_48 { pt3dadd( -20.4753, 210.605, -33.832, 0.55 ) }
    dend_48 { pt3dadd( -20.8875, 212.006, -34.839, 0.28 ) }
    dend_48 { pt3dadd( -21.4443, 213.871, -36.3153, 0.55 ) }
    dend_48 { pt3dadd( -22.225, 216.24, -38.3395, 0.55 ) }
    dend_48 { pt3dadd( -22.7433, 217.611, -39.6263, 0.55 ) }
    dend_48 { pt3dadd( -24.2439, 220.679, -43.1077, 0.28 ) }
    dend_48 { pt3dadd( -24.5025, 221.095, -43.6578, 0.55 ) }
    dend_48 { pt3dadd( -25.1748, 221.906, -44.9582, 0.28 ) }
    dend_48 { pt3dadd( -25.7911, 222.518, -46.0699, 0.83 ) }
    dend_48 { pt3dadd( -26.7069, 223.311, -47.5612, 0.55 ) }
    dend_48 { pt3dadd( -28.1214, 224.392, -49.759, 0.83 ) }
    dend_48 { pt3dadd( -29.0966, 225.072, -51.1095, 0.83 ) }
    dend_48 { pt3dadd( -31.9363, 226.923, -54.833, 0.83 ) }
    dend_48 { pt3dadd( -33.0112, 227.579, -56.1883, 0.55 ) }
    dend_48 { pt3dadd( -33.5002, 227.887, -56.8078, 0.83 ) }
    dend_48 { pt3dadd( -35.232, 229.048, -58.9871, 0.28 ) }
    dend_48 { pt3dadd( -35.6537, 229.337, -59.5025, 0.55 ) }
    dend_48 { pt3dadd( -37.4719, 230.44, -61.6789, 0.28 ) }
    dend_48 { pt3dadd( -38.3146, 230.934, -62.5114, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -10.9457, 183.424, -24.6373, 0.55 ) }
    dend_47 { pt3dadd( -10.3898, 184.056, -24.673, 0.55 ) }
    dend_47 { pt3dadd( -10.0553, 184.435, -24.6944, 0.28 ) }
    dend_47 { pt3dadd( -9.50301, 185.063, -24.7299, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 25/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 0.550796, 145.215, 0.696934, 0.55 ) }
    dend_45 { pt3dadd( 2.35758, 146.554, -1.81749, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 27/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 0.550796, 145.215, 0.696934, 0.83 ) }
    dend_44 { pt3dadd( 0.0656282, 147.723, -0.136183, 0.83 ) }
    dend_44 { pt3dadd( -0.604073, 153.403, -2.08927, 0.55 ) }
    dend_44 { pt3dadd( -0.759973, 155.964, -2.89557, 1.11 ) }
    dend_44 { pt3dadd( -0.90041, 159.775, -3.98666, 0.55 ) }
    dend_44 { pt3dadd( -0.920917, 162.184, -4.6464, 0.83 ) }
    dend_44 { pt3dadd( -0.909794, 165.439, -5.51642, 0.55 ) }
    dend_44 { pt3dadd( -0.726247, 170.569, -6.84834, 0.83 ) }
    dend_44 { pt3dadd( -0.40758, 175.636, -8.05352, 0.83 ) }
    dend_44 { pt3dadd( -0.225455, 178.519, -8.74018, 0.83 ) }
    dend_44 { pt3dadd( -0.120365, 180.299, -9.12371, 0.83 ) }
    dend_44 { pt3dadd( -0.0801181, 182.057, -9.44878, 0.55 ) }
    dend_44 { pt3dadd( -0.105533, 183.343, -9.66199, 0.83 ) }
    dend_44 { pt3dadd( -0.312025, 185.742, -10.0582, 0.55 ) }
    dend_44 { pt3dadd( -0.500976, 187.369, -10.3088, 0.55 ) }
    dend_44 { pt3dadd( -0.945982, 190.265, -10.6731, 0.83 ) }
    dend_44 { pt3dadd( -1.58809, 193.619, -10.9857, 0.28 ) }
    dend_44 { pt3dadd( -1.97739, 195.64, -11.1806, 0.55 ) }
    dend_44 { pt3dadd( -2.36257, 197.576, -11.3572, 0.28 ) }
    dend_44 { pt3dadd( -3.45397, 202.728, -11.8236, 0.55 ) }
    dend_44 { pt3dadd( -4.43462, 207.031, -12.2165, 0.28 ) }
    dend_44 { pt3dadd( -5.21429, 210.142, -12.4926, 0.55 ) }
    dend_44 { pt3dadd( -6.36549, 214.597, -12.8624, 0.28 ) }
    dend_44 { pt3dadd( -7.11492, 217.263, -13.0769, 0.55 ) }
    dend_44 { pt3dadd( -8.84416, 222.972, -13.4984, 0.28 ) }
    dend_44 { pt3dadd( -10.0107, 226.746, -13.7808, 0.55 ) }
    dend_44 { pt3dadd( -11.4237, 231.448, -14.0827, 0.28 ) }
    dend_44 { pt3dadd( -11.9164, 233.029, -14.1684, 0.55 ) }
    dend_44 { pt3dadd( -12.5164, 234.84, -14.2174, 0.28 ) }
    dend_44 { pt3dadd( -13.2879, 237.25, -14.3294, 0.55 ) }
    dend_44 { pt3dadd( -14.1609, 240.168, -14.5237, 0.28 ) }
    dend_44 { pt3dadd( -14.7187, 242.025, -14.8442, 0.55 ) }
    dend_44 { pt3dadd( -15.2459, 243.989, -15.3776, 0.28 ) }
    dend_44 { pt3dadd( -16.0563, 247.152, -16.3697, 0.55 ) }
    dend_44 { pt3dadd( -16.691, 249.91, -17.3863, 0.28 ) }
    dend_44 { pt3dadd( -17.0141, 251.495, -18.0877, 0.55 ) }
    dend_44 { pt3dadd( -17.8116, 255.306, -20.0716, 0.28 ) }
    dend_44 { pt3dadd( -18.1336, 256.975, -21.1255, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -1.84373, -40.3888, -0.679051, 0.83 ) }
    dend_21 { pt3dadd( -1.61137, -43.7597, -0.223515, 0.83 ) }
    dend_21 { pt3dadd( -1.30109, -47.3667, 0.260528, 0.83 ) }
    dend_21 { pt3dadd( -0.80991, -52.7819, 0.977101, 0.83 ) }
    dend_21 { pt3dadd( -0.427493, -56.934, 1.52047, 0.83 ) }
    dend_21 { pt3dadd( 0.217267, -62.9704, 2.36525, 0.83 ) }
    dend_21 { pt3dadd( 0.553037, -65.802, 2.76741, 0.83 ) }
    dend_21 { pt3dadd( 0.821502, -67.4028, 3.03782, 1.11 ) }
    dend_21 { pt3dadd( 1.1448, -68.9048, 3.35991, 0.28 ) }
    dend_21 { pt3dadd( 1.25861, -69.393, 3.4768, 0.55 ) }
    dend_21 { pt3dadd( 1.57458, -71.7352, 4.01143, 0.28 ) }
    dend_21 { pt3dadd( 1.5589, -72.8878, 4.2151, 0.55 ) }
    dend_21 { pt3dadd( 1.37305, -75.1126, 4.61392, 0.28 ) }
    dend_21 { pt3dadd( 1.2134, -76.475, 4.835, 0.55 ) }
    dend_21 { pt3dadd( 0.680811, -80.1883, 5.37187, 0.28 ) }
    dend_21 { pt3dadd( 0.0149439, -84.0894, 5.84628, 0.83 ) }
    dend_21 { pt3dadd( -0.595021, -87.1373, 6.1427, 0.28 ) }
    dend_21 { pt3dadd( -1.22304, -90.038, 6.37667, 0.28 ) }
    dend_21 { pt3dadd( -2.18152, -94.3891, 6.59513, 0.28 ) }
    dend_21 { pt3dadd( -2.40522, -95.7038, 6.66554, 0.55 ) }
    dend_21 { pt3dadd( -2.50233, -97.0779, 6.8189, 0.28 ) }
    dend_21 { pt3dadd( -2.47817, -98.3646, 6.99095, 0.55 ) }
    dend_21 { pt3dadd( -2.36169, -99.7973, 7.21833, 0.28 ) }
    dend_21 { pt3dadd( -2.13564, -101.404, 7.48969, 0.55 ) }
    dend_21 { pt3dadd( -1.2643, -106.444, 8.36967, 0.28 ) }
    dend_21 { pt3dadd( -0.433937, -110.534, 9.07713, 0.83 ) }
    dend_21 { pt3dadd( 0.407602, -114.331, 9.74298, 0.28 ) }
    dend_21 { pt3dadd( 0.635395, -115.35, 9.92051, 0.83 ) }
    dend_21 { pt3dadd( 1.17607, -117.731, 10.3289, 0.28 ) }
    dend_21 { pt3dadd( 1.76895, -120.545, 10.8435, 0.28 ) }
    dend_21 { pt3dadd( 2.27385, -122.874, 11.3624, 0.83 ) }
    dend_21 { pt3dadd( 2.81691, -125.464, 11.9857, 0.55 ) }
    dend_21 { pt3dadd( 3.09213, -126.989, 12.34, 0.55 ) }
    dend_21 { pt3dadd( 3.35733, -128.699, 12.6761, 0.83 ) }
    dend_21 { pt3dadd( 3.78648, -132.022, 13.2536, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_21 { pt3dadd( 4.31332, -136.757, 13.829, 0.28 ) }
    dend_21 { pt3dadd( 4.54081, -139.651, 14.0512, 0.55 ) }
    dend_21 { pt3dadd( 4.85055, -144.881, 14.1876, 0.28 ) }
    dend_21 { pt3dadd( 4.96352, -147.55, 14.159, 0.28 ) }
    dend_21 { pt3dadd( 4.98004, -148.592, 14.0999, 0.55 ) }
    dend_21 { pt3dadd( 4.91967, -152.049, 13.6317, 0.28 ) }
    dend_21 { pt3dadd( 4.8231, -153.533, 13.3253, 0.28 ) }
    dend_21 { pt3dadd( 4.69749, -156.947, 12.7253, 0.28 ) }
    dend_21 { pt3dadd( 4.80376, -158.658, 12.6312, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 9/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -1.84373, -40.3888, -0.679051, 0.83 ) }
    dend_20 { pt3dadd( 0.0719189, -43.1185, -0.526372, 0.83 ) }
    dend_20 { pt3dadd( 2.79962, -46.5995, -0.394622, 0.83 ) }
    dend_20 { pt3dadd( 4.88933, -48.9869, -0.387031, 0.83 ) }
    dend_20 { pt3dadd( 7.59715, -51.744, -0.547415, 1.11 ) }
    dend_20 { pt3dadd( 10.2685, -54.2969, -0.863996, 0.83 ) }
    dend_20 { pt3dadd( 12.6045, -56.4426, -1.22374, 0.83 ) }
    dend_20 { pt3dadd( 15.6534, -59.1327, -1.85075, 0.83 ) }
    dend_20 { pt3dadd( 19.3582, -62.3071, -2.80153, 0.83 ) }
    dend_20 { pt3dadd( 22.5134, -64.8968, -3.6833, 0.83 ) }
    dend_20 { pt3dadd( 25.7449, -67.5095, -4.69656, 0.83 ) }
    dend_20 { pt3dadd( 28.1656, -69.577, -5.52578, 0.83 ) }
    dend_20 { pt3dadd( 31.588, -72.7378, -6.7052, 0.83 ) }
    dend_20 { pt3dadd( 33.6889, -74.8796, -7.47218, 0.83 ) }
    dend_20 { pt3dadd( 35.4401, -76.883, -8.04867, 0.83 ) }
    dend_20 { pt3dadd( 38.1034, -80.36, -8.80344, 0.83 ) }
    dend_20 { pt3dadd( 40.0791, -83.1891, -9.2945, 0.83 ) }
    dend_20 { pt3dadd( 41.0932, -84.7175, -9.54508, 0.83 ) }
    dend_20 { pt3dadd( 42.505, -86.9687, -9.90252, 0.83 ) }
    dend_20 { pt3dadd( 44.9503, -91.0618, -10.6307, 0.83 ) }
    dend_20 { pt3dadd( 46.9115, -94.3882, -11.2733, 0.83 ) }
    dend_20 { pt3dadd( 48.972, -97.7162, -12.0526, 0.83 ) }
    dend_20 { pt3dadd( 50.2495, -99.6813, -12.601, 0.83 ) }
    dend_20 { pt3dadd( 52.3327, -102.586, -13.427, 0.83 ) }
    dend_20 { pt3dadd( 55.2697, -106.45, -14.5615, 0.83 ) }
    dend_20 { pt3dadd( 59.1177, -111.236, -16.0823, 0.83 ) }
    dend_20 { pt3dadd( 62.1703, -114.87, -17.2499, 0.83 ) }
    dend_20 { pt3dadd( 66.6503, -120.125, -18.9422, 0.83 ) }
    dend_20 { pt3dadd( 70.0887, -124.152, -20.2191, 0.55 ) }
    dend_20 { pt3dadd( 71.8061, -126.175, -20.8568, 0.55 ) }
    dend_20 { pt3dadd( 73.991, -128.814, -21.667, 0.55 ) }
    dend_20 { pt3dadd( 75.7167, -131.058, -22.3217, 0.55 ) }
    dend_20 { pt3dadd( 77.4631, -133.514, -23.0127, 0.55 ) }
    dend_20 { pt3dadd( 78.7979, -135.521, -23.6155, 0.55 ) }
    dend_20 { pt3dadd( 80.9389, -139.077, -24.7629, 0.55 ) }
    dend_20 { pt3dadd( 82.6064, -141.878, -25.6325, 0.55 ) }
    dend_20 { pt3dadd( 84.0886, -144.425, -26.3769, 0.28 ) }
    dend_20 { pt3dadd( 85.3004, -146.526, -26.9612, 0.55 ) }
    dend_20 { pt3dadd( 87.2094, -149.828, -27.8393, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 48/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -38.3146, 230.934, -62.5114, 0.28 ) }
    dend_50 { pt3dadd( -39.3263, 232.527, -63.0847, 0.28 ) }
    dend_50 { pt3dadd( -39.8034, 233.278, -63.3551, 0.83 ) }
    dend_50 { pt3dadd( -40.8393, 234.909, -63.9421, 0.55 ) }
    dend_50 { pt3dadd( -41.1685, 235.428, -64.1287, 0.83 ) }
    dend_50 { pt3dadd( -42.1246, 236.933, -64.6705, 0.55 ) }
    dend_50 { pt3dadd( -42.617, 237.709, -64.9496, 0.83 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 55/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -38.3146, 230.934, -62.5114, 0.55 ) }
    dend_49 { pt3dadd( -37.1403, 232.317, -62.0905, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 57/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -42.617, 237.709, -64.9496, 0.55 ) }
    dend_52 { pt3dadd( -43.8417, 240.019, -64.5339, 0.55 ) }
    dend_52 { pt3dadd( -44.6094, 241.457, -64.2602, 0.83 ) }
    dend_52 { pt3dadd( -46.3207, 244.5, -63.6791, 0.28 ) }
    dend_52 { pt3dadd( -47.2158, 245.968, -63.4116, 0.55 ) }
    dend_52 { pt3dadd( -48.7557, 248.37, -62.9953, 0.28 ) }
    dend_52 { pt3dadd( -49.2596, 249.198, -62.9443, 0.55 ) }
    dend_52 { pt3dadd( -50.4175, 251.108, -62.8963, 0.28 ) }
    dend_52 { pt3dadd( -50.9996, 252.058, -63.0006, 0.55 ) }
    dend_52 { pt3dadd( -52.056, 253.917, -63.4134, 0.28 ) }
    dend_52 { pt3dadd( -52.5413, 254.844, -63.7466, 0.83 ) }
    dend_52 { pt3dadd( -54.8141, 259.285, -65.7573, 0.28 ) }
    dend_52 { pt3dadd( -55.339, 260.378, -66.2583, 0.83 ) }
    dend_52 { pt3dadd( -56.7807, 263.5, -67.6502, 0.28 ) }
    dend_52 { pt3dadd( -57.488, 265.109, -68.3814, 0.83 ) }
    dend_52 { pt3dadd( -59.2657, 269.325, -70.3333, 0.28 ) }
    dend_52 { pt3dadd( -59.5851, 270.075, -70.6754, 0.55 ) }
    dend_52 { pt3dadd( -61.4634, 274.244, -72.4088, 0.28 ) }
    dend_52 { pt3dadd( -62.0246, 275.544, -72.9489, 1.11 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 76/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -42.617, 237.709, -64.9496, 0.28 ) }
    dend_51 { pt3dadd( -42.4197, 239.156, -66.0849, 0.28 ) }
    dend_51 { pt3dadd( -42.2978, 240.05, -66.7864, 0.55 ) }
    dend_51 { pt3dadd( -42.1863, 240.868, -67.4279, 0.28 ) }
    dend_51 { pt3dadd( -41.9376, 242.691, -68.8586, 0.83 ) }
    dend_51 { pt3dadd( -41.7696, 243.923, -69.8249, 0.28 ) }
    dend_51 { pt3dadd( -41.6455, 244.833, -70.5392, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_37, dend_32, dend_25, dend_14, dend_9, dend_0, dend_41, dend_38, dend_36, dend_33, dend_29, dend_26, dend_22, dend_15, dend_11, dend_10, dend_6, dend_1, dend_53, dend_42, dend_40, dend_39, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_24, dend_23, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_5, dend_2, dend_46, dend_43, dend_19, dend_18, dend_4, dend_3, dend_48, dend_47, dend_45, dend_44, dend_21, dend_20, dend_50, dend_49, dend_52, dend_51]}
    ModelViewParmSubset_2 = new SectionList()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_37, dend_32, dend_25, dend_14, dend_9, dend_0, dend_41, dend_38, dend_36, dend_33, dend_29, dend_26, dend_22, dend_15, dend_11, dend_10, dend_6, dend_1, dend_53, dend_42, dend_40, dend_39, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_24, dend_23, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_5, dend_2, dend_46, dend_43, dend_19, dend_18, dend_4, dend_3, dend_48, dend_47, dend_45, dend_44, dend_21, dend_20, dend_50, dend_49, dend_52, dend_51]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_37, dend_32, dend_25, dend_14, dend_9, dend_0, axon_0, dend_41, dend_38, dend_36, dend_33, dend_29, dend_26, dend_22, dend_15, dend_11, dend_10, dend_6, dend_1, axon_1, dend_53, dend_42, dend_40, dend_39, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_24, dend_23, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_5, dend_2, dend_46, dend_43, dend_19, dend_18, dend_4, dend_3, dend_48, dend_47, dend_45, dend_44, dend_21, dend_20, dend_50, dend_49, dend_52, dend_51]}
    ModelViewParmSubset_5 = new SectionList()
    dend_37 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_38 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_36 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_29 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_26 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_10 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_42 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_39 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_31 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_30 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_27 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_23 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_16 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_13 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_12 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_7 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_5 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_2 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_46 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_43 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_18 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_3 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_48 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_21 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_20 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_52 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_14 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_32 OneSecGrp_SectionRef_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_25 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_37 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_33 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_41 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_34 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_15 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_6 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_35 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_9 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_19 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_11 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_53 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_28 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_40 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_4 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_45 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_49 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_50 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_51 OneSecGrp_SectionRef_57.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_37, dend_32, dend_25, dend_25, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_38 nseg = 3
    dend_36 nseg = 9
    dend_29 nseg = 3
    dend_26 nseg = 3
    dend_10 nseg = 3
    dend_42 nseg = 3
    dend_39 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 5
    dend_27 nseg = 11
    dend_24 nseg = 9
    dend_23 nseg = 7
    dend_16 nseg = 3
    dend_13 nseg = 9
    dend_12 nseg = 3
    dend_7 nseg = 3
    dend_5 nseg = 3
    dend_2 nseg = 3
    dend_46 nseg = 7
    dend_43 nseg = 5
    dend_18 nseg = 7
    dend_3 nseg = 5
    dend_48 nseg = 3
    dend_44 nseg = 5
    dend_21 nseg = 7
    dend_20 nseg = 7
    dend_52 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_LBC_c6138544ab_0_0


