// Cell: bIR215_L5_BP_706acf4049_0_0
/*
{
  "id" : "bIR215_L5_BP_706acf4049_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-2.98402, 8.18068, 2.8199, 0.83", "-5.68443, 10.2737, 3.22716, 1.11", "-7.27661, 11.507, 3.43901, 0.83", "-8.82347, 12.6947, 3.62882, 0.83", "-9.73933, 13.372, 3.73284, 1.11", "-12.6074, 15.4884, 4.0662, 1.11", "-17.7372, 19.1118, 4.65549, 0.83", "-19.5853, 20.3674, 4.85008, 0.83", "-21.0488, 21.3322, 4.97095, 0.83", "-22.4759, 22.2883, 5.07558, 0.83", "-23.6376, 23.0763, 5.13203, 0.55", "-24.5108, 23.6099, 5.18932, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.4845, 6.19064, -6.19013, 0.55", "6.98815, 6.73223, -6.74924, 0.55", "8.44092, 6.86895, -7.48906, 0.83", "10.7402, 7.01444, -8.86332, 0.55", "11.8501, 7.08467, -9.52671, 1.38", "14.5791, 7.25736, -11.1578, 0.55", "15.7414, 7.19888, -11.9361, 0.83", "21.7539, 6.12645, -16.3089, 0.55", "22.3356, 5.98224, -16.79, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.690408, -11.0417, 3.43137, 1.11", "-0.750686, -16.36, 5.33797, 1.11", "-0.775234, -18.526, 6.11446, 0.83", "-0.807849, -21.4036, 7.14607, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.864866, 8.85543, -1.33915, 1.11", "0.971379, 9.96418, -1.33919, 1.11", "1.15365, 11.7727, -1.27331, 1.38", "1.16588, 11.8733, -1.26821, 1.38", "1.39345, 13.114, -1.20777, 0.83", "1.70068, 14.4224, -1.08528, 0.83", "2.20844, 15.8907, -0.795324, 0.83", "2.48355, 16.4432, -0.631004, 0.83", "2.74491, 16.8398, -0.482461, 1.11", "3.48579, 17.8003, -0.113567, 0.55", "4.3448, 18.7982, 0.330889, 0.83", "5.43409, 19.8134, 0.81003, 0.55", "5.9767, 20.2302, 1.01635, 0.83", "6.74455, 20.7929, 1.35402, 0.55", "7.70822, 21.5092, 1.827, 0.55", "9.07604, 22.5917, 2.57193, 0.55", "10.5862, 23.8318, 3.39502, 0.55", "11.5663, 24.6365, 4.0404, 0.55", "12.8007, 25.6542, 4.98229, 0.55", "13.0614, 25.8575, 5.19984, 0.83", "13.7595, 26.3943, 5.82109, 0.55", "14.3366, 26.811, 6.3025, 0.83", "15.6835, 27.9621, 7.45071, 0.55", "16.1661, 28.3831, 7.76798, 0.83", "16.5918, 28.6896, 7.96225, 0.55", "16.9993, 28.9513, 8.0942, 0.83", "17.8803, 29.4313, 8.30275, 0.83", "19.0269, 30.0877, 8.48547, 0.83", "19.7176, 30.5254, 8.52832, 0.55", "20.2473, 30.9078, 8.56379, 0.55", "21.6311, 31.895, 8.63752, 0.83", "22.5175, 32.5281, 8.65179, 0.55", "23.8506, 33.4539, 8.62243, 0.55", "25.0582, 34.2252, 8.54948, 0.55", "26.1304, 34.876, 8.4566, 0.55", "27.4693, 35.634, 8.28034, 0.55", "28.277, 35.9973, 8.14677, 0.55", "28.8116, 36.1973, 7.99127, 0.55", "29.5019, 36.3311, 7.72439, 0.55", "30.5042, 36.3562, 7.23899, 0.55", "31.1191, 36.2867, 6.9107, 0.55", "32.0311, 36.1576, 6.49856, 0.55", "33.807, 35.9691, 5.87771, 0.55", "35.2263, 35.8879, 5.49327, 0.55", "36.7543, 35.8749, 5.17709, 0.55", "37.7526, 35.8998, 5.05174, 0.55", "40.3948, 36.1973, 4.894, 0.55", "41.9889, 36.4902, 4.9143, 0.55", "43.2111, 36.7841, 5.03545, 0.55", "43.9656, 37.0787, 5.13598, 0.55", "44.845, 37.5299, 5.24885, 0.55", "46.3144, 38.4338, 5.31986, 0.55", "46.6428, 38.6529, 5.29337, 0.55", "47.5696, 39.2362, 5.15873, 0.55", "48.4255, 39.8645, 5.03213, 0.83", "48.8913, 40.2135, 4.956, 0.55", "49.5873, 40.8181, 4.81572, 0.83", "53.4561, 44.0379, 5.00206, 0.83", "56.8166, 47.7888, 4.92446, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-24.5108, 23.6099, 5.18932, 0.55", "-26.7446, 24.8455, 4.00581, 0.55", "-29.1736, 26.1891, 2.71886, 0.55", "-32.105, 27.8105, 1.16579, 0.55", "-34.5254, 29.1493, -0.116615, 0.83", "-36.5538, 30.2712, -1.19127, 0.55", "-40.3187, 32.3537, -3.186, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-24.5108, 23.6099, 5.18932, 0.55", "-26.9099, 24.0129, 5.00027, 0.55", "-29.4495, 24.3743, 5.05538, 0.55", "-32.3257, 24.7828, 5.18826, 0.55", "-36.4721, 25.3473, 5.7653, 0.55", "-39.9283, 25.7301, 6.50112, 0.55", "-43.5449, 26.0825, 7.43206, 0.55", "-47.0189, 26.2015, 8.72556, 0.55", "-49.9911, 26.0209, 10.1492, 0.55", "-53.671, 25.5488, 12.3447, 0.55", "-55.2581, 25.233, 13.5363, 0.55", "-56.9684, 24.8765, 14.9018, 0.55", "-59.989, 24.0018, 17.1784, 0.55", "-61.6097, 23.5289, 18.1248, 0.55", "-63.3071, 22.9792, 19.1083, 0.55", "-65.3364, 22.3419, 20.0642, 0.55", "-67.5455, 21.6937, 21.0385, 0.55", "-70.7018, 20.7572, 22.3584, 0.55", "-74.9403, 19.7777, 23.718, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "22.3356, 5.98224, -16.79, 0.55", "28.001, 7.66457, -18.0184, 0.55", "31.2814, 8.42259, -19.1845, 0.55", "34.5262, 9.02241, -20.3774, 0.55", "36.747, 9.3432, -21.1885, 0.55", "39.9957, 9.73738, -22.3462, 0.55", "46.7437, 10.4164, -24.9542, 0.55", "54.4084, 11.119, -28.4228, 0.55", "58.1388, 11.2176, -30.3541, 0.55", "60.1407, 11.2164, -31.5176, 0.55", "62.3365, 11.2224, -32.8825, 0.55", "66.2594, 11.1247, -35.2989, 0.55", "67.6883, 11.0042, -36.2206, 0.55", "73.7376, 10.6267, -40.5917, 0.55", "78.021, 10.4156, -44.0029, 0.55", "80.4859, 10.3392, -46.0358, 0.55", "82.9453, 10.2415, -48.0608, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "22.3356, 5.98224, -16.79, 0.83", "23.873, 7.06449, -16.8607, 0.83", "24.7528, 7.67926, -16.9431, 0.55", "26.0486, 8.60574, -17.1817, 0.83", "26.919, 9.24994, -17.3713, 0.55", "28.1168, 10.1732, -17.6168, 0.83", "29.5541, 11.3169, -17.8584, 0.55", "30.2801, 11.8386, -17.9444, 0.55", "31.963, 12.811, -18.0018, 0.83", "33.4981, 13.5179, -17.8335, 0.55", "34.3547, 13.9099, -17.6537, 0.83", "35.635, 14.5375, -17.246, 0.55", "37.4658, 15.4906, -16.4179, 0.55", "40.0137, 16.6873, -15.1214, 0.55", "42.4447, 17.7503, -13.703, 0.55", "44.3711, 18.5737, -12.5416, 0.55", "47.5457, 19.9479, -10.6107, 0.55", "49.8624, 21.0265, -9.14976, 0.55", "51.2519, 21.8039, -8.22274, 0.55", "53.7921, 23.5126, -6.51051, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.807849, -21.4036, 7.14607, 0.83", "-1.43356, -24.6949, 7.11784, 0.83", "-2.04319, -27.9016, 7.09034, 0.83", "-2.72383, -31.4819, 7.05963, 0.83", "-3.07926, -33.3515, 7.04359, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.807849, -21.4036, 7.14607, 0.55", "0.0865341, -23.8682, 8.86249, 0.55", "0.879045, -26.8869, 11.0961, 0.55", "1.31076, -30.8445, 14.182, 0.55", "1.37027, -32.3832, 15.4233, 0.83", "1.16014, -36.3107, 19.0417, 0.55", "0.884461, -38.3393, 20.9493, 0.55", "0.26436, -42.2845, 24.827, 0.83", "-0.366033, -45.2145, 27.8935, 0.55", "-1.10202, -47.6318, 30.3855, 0.55", "-2.59953, -52.2103, 35.0218, 0.55", "-3.78933, -55.8595, 38.6741, 0.55", "-4.68349, -58.7847, 41.6431, 0.55", "-5.46078, -61.8902, 44.6969, 0.28", "-5.67521, -63.1835, 45.9189, 0.55", "-6.00882, -65.5721, 48.0397, 0.28", "-6.01941, -69.2997, 50.768, 0.55", "-9.05725, -81.7077, 60.5204, 0.55", "-12.4191, -93.1739, 71.2684, 0.55", "-15.0652, -102.598, 84.0151, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-40.3187, 32.3537, -3.186, 0.55", "-42.8894, 32.7311, -1.52245, 0.55", "-43.9554, 32.8408, -0.676372, 0.83", "-45.1829, 32.9188, 0.496605, 0.55", "-46.1125, 32.9865, 1.48694, 0.83", "-48.5527, 33.2572, 4.04968, 0.55", "-49.4762, 33.3773, 5.02651, 0.28", "-51.0014, 33.6096, 6.7965, 0.55", "-53.0493, 33.9336, 9.15957, 0.55", "-54.6125, 34.1729, 10.8745, 0.55", "-56.7084, 34.4853, 13.0918, 0.28", "-57.2607, 34.5644, 13.5952, 0.55", "-58.4087, 34.7384, 14.5889, 0.28", "-59.197, 34.8713, 15.1825, 0.55", "-60.8215, 35.1168, 16.2463, 0.28", "-61.7797, 35.2004, 16.8234, 0.55", "-63.4666, 35.2189, 17.868, 0.28", "-64.6038, 35.2196, 18.5283, 0.55", "-71.1843, 34.9385, 25.8447, 0.55", "-77.0758, 33.7805, 33.6462, 0.55", "-82.7, 31.701, 41.4536, 0.55", "-88.315, 28.4604, 48.8619, 0.55", "-92.7601, 25.7152, 57.2056, 0.55", "-97.9665, 23.2882, 65.2003, 0.55", "-103.277, 22.4782, 73.4494, 0.55", "-108.56, 20.8837, 81.6018, 0.55", "-113.645, 19.9623, 89.9806, 0.55", "-118.254, 18.9261, 98.6177, 0.55", "-121.868, 16.8182, 107.528, 0.55", "-125.567, 15.6282, 116.573, 0.55", "-129.409, 13.4404, 125.369, 0.55", "-132.078, 10.8791, 134.492, 0.55", "-133.074, 9.04242, 144.112, 0.55", "-134.042, 5.3712, 153.195, 0.55", "-133.606, 1.53212, 162.25, 0.55", "-133.68, -1.89209, 171.479, 0.55", "-134.795, -4.60976, 180.875, 0.55", "-137.968, -5.83295, 190.113, 0.55", "-140.281, -8.13002, 199.402, 0.55", "-140.727, -8.74056, 209.218, 0.55", "-142.76, -8.65813, 218.849, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-40.3187, 32.3537, -3.186, 0.55", "-42.0311, 33.2006, -5.37571, 0.55", "-43.3178, 34.1412, -7.78992, 0.55", "-44.5082, 35.2982, -10.3338, 0.55", "-45.2537, 36.0227, -11.9268, 0.55", "-46.6134, 37.3442, -14.8325, 0.83", "-47.6082, 38.3111, -16.9584, 0.55", "-48.7175, 39.6375, -20.0698, 0.83", "-49.0992, 40.5309, -21.804, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-74.9403, 19.7777, 23.718, 0.28", "-75.9809, 17.6666, 23.7613, 0.28", "-76.4891, 16.7445, 23.7123, 0.28", "-77.1515, 15.4358, 23.5931, 0.55", "-77.6952, 14.2883, 23.4942, 0.28", "-78.494, 12.5447, 23.3617, 0.55", "-80.7021, 7.43875, 23.0387, 0.28", "-81.4321, 5.62792, 22.7871, 0.55", "-82.5456, 2.82524, 22.3111, 0.28", "-83.191, 1.13821, 21.9546, 0.55", "-83.6393, -0.0287964, 21.6835, 0.28", "-84.1491, -1.36636, 21.382, 0.55", "-85.6753, -5.80651, 20.461, 0.28", "-86.1603, -7.15779, 20.1407, 0.55", "-87.031, -9.26155, 19.4662, 0.28", "-87.7588, -10.6329, 18.943, 0.28", "-88.4136, -11.5606, 18.5768, 0.55", "-90.6843, -14.1706, 17.647, 0.28", "-91.7373, -15.2292, 17.3005, 0.55", "-94.3251, -17.6691, 16.395, 0.28", "-96.9163, -19.8477, 15.5711, 0.28", "-99.7406, -21.955, 14.7199, 0.28", "-101.032, -22.759, 14.4098, 0.55", "-107.122, -31.0113, 12.4989, 0.55", "-113.721, -39.0918, 12.545, 0.55", "-120.344, -47.0071, 11.0175, 0.55", "-127.253, -54.4263, 8.55547, 0.55", "-134.369, -61.2453, 5.13438, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-74.9403, 19.7777, 23.718, 0.55", "-75.7058, 19.7085, 23.8834, 0.55", "-77.8459, 19.5508, 24.6318, 0.55", "-78.6465, 19.4758, 24.9592, 0.55", "-80.5256, 19.2449, 25.7656, 0.55", "-83.4261, 18.9023, 26.8592, 0.55", "-84.9367, 18.7683, 27.3945, 0.28", "-87.2891, 18.5017, 28.187, 0.55", "-89.0394, 18.2594, 28.7161, 0.55", "-89.7782, 18.1523, 28.9418, 0.28", "-94.2105, 17.5067, 30.2897, 0.55", "-96.288, 17.0921, 30.8029, 0.28", "-99.1013, 16.5015, 31.3304, 0.28", "-101.537, 16.0105, 31.6376, 0.55", "-110.942, 15.7493, 34.7378, 0.55", "-119.942, 15.3744, 38.862, 0.55", "-128.312, 14.13, 44.0133, 0.55", "-136.42, 14.6312, 49.6829, 0.55", "-143.173, 15.032, 56.9204, 0.55", "-148.426, 16.1589, 65.2438, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "82.9453, 10.2415, -48.0608, 0.55", "87.9634, 11.8112, -52.1836, 0.55", "89.5508, 12.2351, -53.5864, 0.55", "91.5384, 12.6997, -55.3171, 0.55", "95.1457, 13.507, -58.6713, 0.55", "98.9132, 14.1903, -62.2635, 0.55", "100.758, 14.3752, -63.9702, 0.83", "102.278, 14.4191, -65.4893, 0.55", "103.416, 14.3541, -66.7399, 0.83", "106.165, 13.8033, -69.9399, 0.55", "108.432, 13.1341, -72.5871, 0.55", "111.04, 12.3488, -75.5013, 0.55", "113.942, 11.5581, -78.8074, 0.55", "115.889, 10.9801, -81.0731, 0.55", "118.086, 10.3197, -83.6999, 0.55", "119.984, 9.8151, -86.1055, 0.55", "121.176, 9.60616, -87.7818, 0.55", "122.686, 9.23955, -91.1582, 0.55", "123.511, 8.94297, -93.2687, 0.55", "124.223, 8.4222, -96.0705, 0.55", "125.204, 7.39588, -100.804, 0.55", "125.404, 7.12388, -101.87, 0.28", "128.001, 3.67325, -114.829, 0.28", "128.876, 2.68805, -118.634, 0.83", "132.325, -1.04444, -132.12, 0.83", "134.098, -3.02848, -138.377, 0.83", "134.95, -3.93445, -140.907, 0.55", "135.928, -4.82709, -143.372, 0.55", "138.625, -6.582, -147.934, 0.55", "141.509, -8.16108, -151.937, 0.28", "142.379, -8.442, -152.163, 0.55", "144.292, -8.91098, -151.976, 0.28", "145.475, -9.11293, -151.691, 0.55", "146.708, -9.33777, -151.287, 0.28", "148.186, -9.53178, -150.736, 0.55", "150.398, -9.70932, -150.152, 0.28", "152.174, -9.90802, -149.739, 0.55", "154.14, -10.0, -149.443, 0.28", "156.811, -10.1209, -149.279, 0.55", "159.806, -10.1906, -149.277, 0.55", "162.441, -10.2241, -149.451, 0.28", "166.086, -10.2412, -149.896, 0.55", "172.388, -10.1099, -151.342, 0.55", "175.171, -9.91382, -152.322, 0.55", "176.366, -9.78212, -152.873, 0.83", "178.644, -9.51939, -154.134, 0.55", "180.225, -9.27451, -155.11, 0.83", "184.475, -8.50363, -157.787, 0.55", "187.073, -8.21504, -159.486, 0.28", "188.167, -8.15958, -160.076, 0.55", "191.168, -8.28026, -161.351, 0.28", "192.22, -8.41833, -161.725, 0.55", "194.389, -8.83218, -162.159, 0.28", "196.599, -9.46038, -162.213, 0.55", "201.065, -10.9523, -161.532, 0.28", "203.125, -11.7265, -160.997, 0.55", "206.189, -13.0503, -160.033, 0.28", "210.061, -14.7045, -158.676, 0.55", "212.86, -15.8614, -157.651, 0.55", "217.707, -17.7114, -155.799, 0.28", "219.696, -18.3821, -155.206, 0.55", "223.122, -19.3505, -154.563, 0.28", "226.534, -20.0589, -154.167, 0.55", "228.403, -20.2407, -154.216, 0.28", "230.089, -20.1797, -154.399, 0.55", "234.847, -19.732, -155.371, 0.28", "238.243, -19.1768, -156.126, 0.28", "241.192, -18.4782, -156.831, 0.55", "244.447, -17.6188, -157.779, 0.28", "245.266, -17.3498, -157.991, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "82.9453, 10.2415, -48.0608, 0.55", "83.9228, 7.65227, -49.4757, 0.55", "84.5579, 5.44899, -50.5237, 0.28", "85.134, 3.44319, -51.3167, 0.55", "86.5675, -0.785282, -53.0358, 0.28", "86.6515, -1.05514, -53.1808, 0.55", "87.131, -2.47285, -54.0532, 0.28", "87.4286, -3.67214, -54.955, 0.55", "87.6752, -4.94271, -56.0319, 0.28", "87.9663, -6.6873, -57.5758, 0.55", "88.693, -11.0624, -61.3757, 0.55", "89.3146, -15.0604, -64.9051, 0.55", "89.7824, -18.2597, -67.7304, 0.55", "90.1883, -21.4071, -70.4559, 0.55", "90.2901, -22.2182, -71.1281, 0.28", "90.42, -23.0766, -71.7792, 0.55", "90.7007, -24.2452, -72.5777, 0.28", "91.4003, -26.3019, -73.826, 0.55", "93.0487, -30.1553, -75.6131, 0.55", "93.9489, -32.2111, -76.3912, 0.28", "94.7469, -34.3224, -77.2733, 0.55", "95.6563, -37.313, -78.6188, 0.28", "96.2431, -39.7486, -79.7603, 0.55", "96.9727, -43.4085, -81.4746, 0.28", "97.7512, -47.1836, -83.1362, 0.55", "98.8136, -52.6765, -85.5952, 0.28", "99.3196, -55.6126, -86.9154, 0.55", "99.7925, -58.6265, -88.3337, 0.28", "100.187, -61.296, -89.7392, 0.28", "100.792, -64.6443, -91.7686, 0.55", "101.553, -67.7186, -93.5759, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "53.7921, 23.5126, -6.51051, 0.55", "56.5187, 23.4905, -5.66679, 0.55", "58.5245, 23.3579, -5.22372, 0.55", "62.9353, 22.9688, -4.46958, 0.55", "64.9338, 22.7162, -4.2955, 0.55", "67.1206, 22.4627, -4.22345, 0.55", "70.0695, 22.1294, -4.33996, 0.55", "73.2051, 21.6363, -4.73173, 0.55", "74.8651, 21.318, -5.11371, 0.55", "78.2705, 20.576, -6.32923, 0.55", "79.8417, 20.2365, -6.93885, 0.55", "83.5327, 19.3548, -8.44314, 0.55", "86.0356, 18.6663, -9.42218, 0.55", "87.8726, 18.1656, -10.0612, 0.83", "90.8099, 17.2685, -11.0287, 0.55", "93.6854, 16.2788, -11.8419, 0.83", "96.1242, 15.3497, -12.4267, 0.55", "98.2859, 14.5762, -12.8457, 0.55", "99.5083, 14.2017, -13.0303, 0.83", "102.353, 13.3669, -13.3189, 0.28", "103.758, 13.0267, -13.3881, 0.28", "105.127, 12.5991, -13.5053, 0.28", "106.605, 12.1737, -13.6464, 0.28", "108.971, 11.526, -13.9284, 0.28", "109.921, 11.2826, -14.017, 0.55", "112.177, 10.7688, -14.0194, 0.55", "116.226, 9.84831, -13.8171, 0.55", "117.345, 9.5748, -13.7071, 0.55", "118.342, 9.30751, -13.5604, 0.83", "120.494, 8.8291, -13.0846, 0.55", "122.363, 8.42316, -12.6423, 0.55", "124.128, 8.04877, -12.2179, 0.55", "125.498, 7.72702, -11.9224, 0.55", "127.684, 7.0445, -11.527, 0.55", "130.279, 5.98684, -11.1541, 0.55", "134.347, 3.84022, -10.7574, 0.55", "136.601, 2.31285, -10.6107, 0.55", "138.573, 0.646624, -10.5114, 0.28", "139.167, 0.0190736, -10.4889, 0.55", "140.499, -1.75889, -10.4265, 0.28", "141.664, -3.76781, -10.3333, 0.55", "142.775, -6.25603, -10.0375, 0.55", "143.518, -7.87342, -9.76481, 0.28", "143.787, -8.43811, -9.63995, 0.55", "144.482, -9.83452, -9.30867, 0.28", "145.426, -11.6385, -8.83069, 0.55", "147.866, -15.948, -7.55846, 0.55", "149.132, -18.1065, -6.86791, 0.55", "150.306, -20.0795, -6.21578, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "53.7921, 23.5126, -6.51051, 0.55", "56.2747, 23.7982, -4.70024, 0.55", "57.07, 23.8912, -4.16297, 0.55", "60.0399, 24.1112, -2.30285, 0.55", "63.3524, 24.4157, -0.170645, 0.55", "67.6012, 24.7854, 2.67199, 0.55", "68.7745, 24.8896, 3.4496, 0.55", "70.8845, 24.9994, 4.81518, 0.55", "73.1921, 25.1807, 6.23253, 0.55", "75.8671, 25.477, 7.77043, 0.55", "78.3857, 25.7903, 9.23264, 0.55", "79.7617, 26.0305, 9.97884, 0.55", "81.3739, 26.3587, 10.8576, 0.55", "83.3635, 26.8253, 11.9158, 0.83", "86.6146, 27.6174, 13.3094, 0.55", "88.7706, 28.0683, 14.1192, 0.83", "91.7708, 28.5689, 15.1251, 0.55", "92.6952, 28.6743, 15.415, 0.55", "95.5715, 28.8676, 16.2386, 0.55", "100.734, 28.9292, 17.4733, 0.55", "104.527, 28.7776, 18.2679, 0.55", "107.54, 28.5144, 18.9498, 0.55", "110.625, 28.0782, 19.7291, 0.55", "111.275, 27.9693, 19.8941, 0.28", "112.597, 27.6976, 20.2198, 0.83", "118.031, 26.5022, 21.5783, 0.55", "121.83, 25.6778, 22.4578, 0.55", "124.945, 25.0694, 23.2649, 0.55", "126.807, 24.6986, 23.7638, 0.83", "128.272, 24.427, 24.1615, 0.28", "129.6, 24.184, 24.5105, 0.55", "139.822, 24.5758, 28.9738, 0.55", "150.691, 23.5344, 31.2835, 0.55", "161.442, 23.7713, 34.2738, 0.55", "171.227, 22.1426, 39.388, 0.55", "180.454, 18.9491, 44.7945, 0.55", "190.5, 14.5727, 46.9124, 0.55", "200.379, 9.38083, 47.0468, 0.55", "211.087, 6.24891, 46.7455, 0.55", "221.714, 2.86198, 47.1625, 0.55", "232.675, 0.764838, 47.0198, 0.55", "243.611, -1.01156, 48.3615, 0.55", "253.992, -4.74659, 50.0521, 0.55", "264.565, -6.66244, 53.0698, 0.55", "274.644, -7.16064, 57.8364, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-3.07926, -33.3515, 7.04359, 1.38", "-1.03842, -36.2193, 5.73811, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-3.07926, -33.3515, 7.04359, 0.55", "-4.04958, -34.586, 6.86377, 0.55", "-5.12014, -36.1667, 6.67174, 0.55", "-5.95804, -37.2144, 6.52662, 0.55", "-6.6364, -38.0933, 6.29048, 0.55", "-8.0808, -39.9189, 5.6226, 0.55", "-9.08696, -41.1398, 5.12159, 0.55", "-9.97229, -42.2353, 4.63894, 0.55", "-12.2492, -44.9042, 3.39722, 0.55", "-14.9924, -47.9957, 1.92624, 0.55", "-17.1073, -50.3394, 0.744596, 0.55", "-18.4513, -51.878, -0.0302112, 0.55", "-19.9936, -53.7225, -0.911719, 0.55", "-21.9537, -56.3616, -1.99273, 0.55", "-23.1033, -58.2282, -2.58902, 0.55", "-24.5511, -60.9047, -3.1751, 0.55", "-25.7136, -63.4081, -3.58219, 0.55", "-26.8875, -66.5273, -3.95542, 0.55", "-27.9992, -70.1842, -4.23589, 0.55", "-28.6003, -72.9747, -4.31972, 0.55", "-28.8297, -74.36, -4.25093, 0.55", "-29.222, -77.6081, -3.87015, 0.55", "-29.5555, -80.6446, -3.42355, 0.55", "-29.7928, -83.6956, -2.71548, 0.55", "-29.9698, -85.4437, -2.22055, 0.55", "-30.5327, -90.8425, -0.488414, 0.55", "-30.5784, -91.2398, -0.354697, 0.55", "-30.8279, -93.6712, 0.533663, 0.55", "-31.4974, -98.0186, 2.17299, 0.55", "-31.7087, -99.4749, 2.63458, 0.55", "-31.9998, -101.762, 2.9612, 0.55", "-32.0399, -102.617, 2.89876, 0.55", "-31.9223, -105.524, 2.19288, 0.55", "-31.6508, -107.417, 1.37882, 0.55", "-30.9946, -110.447, -0.484681, 0.55", "-29.9813, -114.161, -3.00211, 0.28", "-29.688, -115.082, -3.73905, 0.55", "-29.2102, -116.481, -4.97192, 0.28", "-29.1374, -116.693, -5.16875, 0.55", "-28.7689, -117.847, -6.15473, 0.28", "-28.6902, -118.237, -6.41037, 0.55", "-28.4168, -120.253, -7.37765, 0.28", "-28.3512, -120.939, -7.70478, 0.55", "-28.212, -122.921, -8.54874, 0.28", "-28.1661, -123.545, -8.81158, 0.55", "-28.0327, -125.697, -9.6891, 0.28", "-27.9652, -126.687, -10.0964, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-15.0652, -102.598, 84.0151, 0.55", "-17.9728, -108.241, 89.6777, 0.55", "-21.6547, -113.105, 95.6057, 0.55", "-25.1602, -118.532, 101.139, 0.55", "-28.8198, -123.98, 106.551, 0.55", "-31.6817, -130.417, 111.319, 0.55", "-34.4234, -136.589, 116.49, 0.55", "-36.3809, -144.112, 119.945, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-15.0652, -102.598, 84.0151, 0.55", "-14.1542, -111.949, 93.019, 0.55", "-12.7183, -122.729, 100.165, 0.55", "-13.3741, -133.609, 107.274, 0.55", "-14.7783, -145.114, 113.191, 0.55", "-15.6582, -156.568, 119.304, 0.55", "-16.4386, -167.558, 126.229, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-49.0992, 40.5309, -21.804, 0.83", "-48.8677, 41.8853, -23.76, 0.83", "-48.3853, 45.2004, -28.1672, 0.55", "-48.1633, 46.6504, -29.9283, 0.83", "-47.909, 48.2195, -31.6897, 0.55", "-47.6262, 49.8717, -33.2392, 0.55", "-47.4668, 50.7189, -33.8985, 0.28", "-47.3869, 51.3033, -34.1771, 0.55", "-47.0205, 53.3163, -34.6756, 0.28", "-46.8382, 54.1834, -34.8469, 0.55", "-46.2308, 57.216, -35.315, 0.28", "-45.8047, 59.6317, -35.5984, 0.55", "-45.3093, 63.423, -35.907, 0.28", "-44.9842, 66.7659, -36.1035, 0.28", "-44.9062, 68.6432, -36.167, 0.55", "-44.9485, 70.8702, -36.228, 0.28", "-45.0362, 71.9354, -36.2357, 0.55", "-45.3872, 74.4261, -36.3514, 0.28", "-45.7381, 76.0745, -36.5033, 0.28", "-46.1215, 77.6867, -36.698, 0.28", "-46.2919, 78.538, -36.8075, 0.55", "-46.8045, 81.9709, -37.3492, 0.28", "-47.2834, 86.027, -38.0788, 0.55", "-47.4287, 87.4271, -38.3383, 0.55", "-47.5942, 88.8351, -38.566, 0.55", "-48.1084, 91.8188, -39.0827, 0.55", "-48.5762, 93.7707, -39.4518, 0.28", "-48.8402, 94.5075, -39.5931, 0.55", "-49.6928, 96.5074, -39.9189, 0.28", "-50.6958, 98.6235, -40.342, 0.55", "-52.4354, 101.646, -41.042, 0.28", "-53.3046, 102.9, -41.362, 0.28", "-54.7593, 104.616, -41.9635, 0.55", "-56.4082, 106.388, -42.6763, 0.28", "-56.7123, 106.664, -42.7985, 0.55", "-57.817, 107.535, -43.2136, 0.28", "-61.6366, 110.319, -44.5387, 0.55", "-67.0024, 113.692, -46.5094, 0.28", "-68.0043, 114.245, -46.9225, 0.55", "-70.7667, 115.652, -48.0863, 0.28", "-71.9309, 116.222, -48.6031, 0.28", "-72.9496, 116.686, -49.0954, 0.55", "-75.9784, 117.669, -50.7051, 0.28", "-78.1229, 118.166, -51.73, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-49.0992, 40.5309, -21.804, 0.55", "-49.2939, 41.77, -21.955, 0.55", "-49.4285, 42.5003, -21.9759, 0.28", "-49.631, 43.0182, -21.8641, 0.55", "-50.0962, 44.2075, -21.6074, 0.28", "-50.423, 45.0428, -21.4271, 0.55", "-51.0253, 46.5828, -21.0947, 0.28", "-51.4348, 47.4043, -20.7722, 0.55", "-53.013, 49.3339, -19.3062, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-134.369, -61.2453, 5.13438, 0.55", "-140.534, -70.5, 4.72146, 0.55", "-144.924, -80.6889, 3.85909, 0.55", "-148.443, -90.7476, 0.655409, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-134.369, -61.2453, 5.13438, 0.55", "-142.138, -70.582, 1.33708, 0.55", "-148.766, -80.0781, -3.93863, 0.55", "-154.9, -89.7487, -9.4887, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-148.426, 16.1589, 65.2438, 0.55", "-160.19, 19.4951, 74.2985, 0.55", "-173.261, 23.0468, 81.2321, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-148.426, 16.1589, 65.2438, 0.55", "-155.27, 15.5647, 69.1637, 0.55", "-162.415, 16.1082, 72.5113, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "101.553, -67.7186, -93.5759, 0.28", "109.797, -72.7292, -104.824, 0.28", "110.605, -73.2742, -105.808, 0.55", "111.969, -74.1944, -107.47, 0.28", "113.118, -74.9692, -108.868, 0.28", "114.639, -75.9948, -110.72, 0.55", "116.644, -77.3469, -113.161, 0.55", "119.149, -79.3887, -114.16, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "101.553, -67.7186, -93.5759, 0.55", "102.302, -68.8602, -94.602, 0.55", "102.544, -69.3786, -95.063, 0.28", "102.913, -70.2714, -95.8742, 0.55", "103.726, -72.2383, -97.6614, 0.28", "104.289, -73.6014, -98.8999, 0.55", "105.243, -75.9108, -100.999, 0.28", "106.342, -78.7516, -103.788, 0.28", "106.794, -80.0631, -105.099, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "150.306, -20.0795, -6.21578, 0.28", "151.696, -21.8142, -5.37596, 0.28", "153.426, -24.0895, -4.0638, 0.28", "154.511, -25.561, -3.14833, 0.55", "155.162, -26.3632, -2.58923, 0.28", "155.507, -26.7949, -2.284, 0.28", "157.225, -28.9304, -0.814427, 0.55", "157.612, -29.3956, -0.413702, 0.28", "158.509, -30.62, 0.725272, 0.55", "159.279, -31.6922, 1.66069, 0.28", "159.958, -32.562, 2.4082, 0.55", "160.762, -33.6131, 3.22304, 0.55", "162.073, -35.312, 4.27199, 0.55", "162.391, -35.7315, 4.51125, 0.55", "163.53, -37.3047, 5.37761, 0.28", "163.973, -37.952, 5.70881, 0.55", "164.593, -38.7746, 6.13608, 0.28", "165.475, -39.9501, 6.68157, 0.55", "166.978, -41.8334, 7.24944, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "150.306, -20.0795, -6.21578, 0.55", "148.323, -20.1764, -6.46479, 0.55", "146.712, -20.255, -6.66701, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-1.03842, -36.2193, 5.73811, 0.83", "-0.959651, -36.4666, 5.68111, 0.83", "0.078752, -38.6842, 5.18928, 0.83", "0.945148, -40.6234, 4.64165, 0.55", "1.63634, -42.1705, 4.20476, 0.55", "3.10551, -45.4589, 3.27612, 0.83", "4.88751, -49.4475, 2.14975, 0.55", "5.88388, -51.5405, 1.57893, 0.83", "7.74004, -54.8928, 0.721795, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-1.03842, -36.2193, 5.73811, 0.55", "-2.4027, -37.1269, 3.04769, 0.55", "-3.86708, -38.1011, 0.159863, 0.55", "-5.59579, -39.2511, -3.24925, 0.55", "-7.69501, -40.6476, -7.38901, 0.55", "-8.88624, -41.44, -9.73818, 0.55", "-9.12554, -41.5992, -10.2101, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-16.4386, -167.558, 126.229, 0.55", "-16.2545, -175.845, 131.966, 0.55", "-14.9203, -184.755, 136.489, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-16.4386, -167.558, 126.229, 0.55", "-16.9768, -175.245, 130.634, 0.55", "-17.8916, -182.73, 135.314, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-53.013, 49.3339, -19.3062, 0.28", "-54.134, 50.8491, -17.8865, 0.28", "-54.5512, 51.4269, -17.2799, 0.55", "-55.7385, 53.1035, -15.4878, 0.28", "-56.3361, 53.9295, -14.687, 0.55", "-57.9779, 56.1606, -12.6004, 0.28", "-59.6466, 58.4283, -10.4795, 0.55", "-62.4074, 61.9875, -6.923, 0.28", "-62.9949, 62.7518, -6.16531, 0.55", "-64.2911, 64.5369, -4.56816, 0.28", "-64.7952, 65.2763, -3.94357, 0.55", "-70.6811, 70.205, 1.59924, 0.55", "-77.3516, 76.0076, 4.98915, 0.55", "-82.9686, 82.1452, 9.50979, 0.55", "-87.3673, 89.4214, 13.6771, 0.55", "-92.7829, 96.2873, 17.3088, 0.55", "-98.9179, 101.771, 21.9938, 0.55", "-104.354, 106.63, 28.0354, 0.55", "-108.84, 110.638, 35.3474, 0.55", "-113.363, 115.163, 42.3276, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-53.013, 49.3339, -19.3062, 0.55", "-55.899, 48.6787, -17.2281, 0.55", "-57.3999, 48.2826, -16.14, 0.28", "-58.5168, 47.9878, -15.3303, 0.55", "-59.4477, 47.7421, -14.6555, 0.28", "-60.0998, 47.57, -14.1828, 0.55", "-61.8977, 47.0955, -12.8794, 0.28", "-63.1275, 46.6355, -12.1533, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-148.443, -90.7476, 0.655409, 0.55", "-153.227, -102.687, 2.48858, 0.55", "-157.684, -114.447, 5.74811, 0.55", "-161.266, -126.892, 6.78084, 0.55", "-166.085, -138.66, 9.44259, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-148.443, -90.7476, 0.655409, 0.55", "-154.145, -98.2992, -6.08335, 0.55", "-159.482, -104.587, -14.2642, 0.55", "-165.591, -111.92, -20.8872, 0.55", "-173.97, -117.374, -26.8032, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-154.9, -89.7487, -9.4887, 0.55", "-161.649, -96.5222, -17.7681, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-154.9, -89.7487, -9.4887, 0.55", "-158.75, -100.259, -8.86855, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "119.149, -79.3887, -114.16, 0.28", "121.562, -80.5031, -115.166, 0.28", "122.683, -81.0208, -115.633, 0.55", "124.82, -82.008, -116.524, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "119.149, -79.3887, -114.16, 0.55", "118.857, -80.2935, -115.474, 0.55", "118.272, -82.1033, -118.102, 0.28", "118.081, -82.6928, -118.958, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "106.794, -80.0631, -105.099, 0.28", "108.279, -83.4736, -109.555, 0.28", "109.015, -85.1623, -111.761, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "106.794, -80.0631, -105.099, 0.55", "105.074, -80.53, -104.726, 0.55", "100.275, -81.8319, -103.686, 0.28", "99.135, -82.1411, -103.439, 0.55", "96.0169, -82.9872, -102.763, 0.28", "94.007, -83.5325, -102.327, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "7.74004, -54.8928, 0.721795, 0.83", "7.74146, -55.1663, 0.675141, 0.83", "7.8349, -58.752, 0.149421, 0.83", "7.71712, -61.4289, -0.0248264, 0.83", "7.48692, -64.0104, 0.109097, 0.83", "7.12053, -67.446, 0.568774, 0.83", "6.62467, -71.4016, 1.26635, 0.83", "6.14185, -75.827, 2.26791, 0.83", "5.71886, -80.1321, 3.43465, 0.83", "4.83613, -85.39, 4.82563, 0.83", "4.26922, -87.7921, 5.36012, 0.83", "3.80989, -89.5945, 5.65098, 0.83", "2.83917, -93.045, 6.1533, 0.83", "2.00246, -96.1351, 6.41668, 0.83", "0.404026, -102.727, 6.16399, 0.83", "-0.536735, -106.32, 5.54851, 0.83", "-1.46154, -109.623, 4.7406, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "7.74004, -54.8928, 0.721795, 0.55", "6.46266, -57.6623, 1.64393, 0.55", "5.58536, -59.666, 2.46725, 0.55", "5.12149, -60.947, 3.09591, 0.55", "4.58297, -62.9558, 4.21246, 0.55", "3.74231, -66.9362, 6.60823, 0.55", "3.25161, -69.9379, 8.74085, 0.55", "2.99156, -72.3371, 10.6875, 0.55", "2.76217, -74.7502, 12.8436, 0.55", "2.61018, -76.7469, 14.7381, 0.28", "2.58729, -78.3696, 16.5219, 0.55", "2.69702, -81.3042, 20.1943, 0.55", "2.77279, -83.0878, 22.6809, 0.55", "2.79939, -84.0862, 24.0702, 0.55", "2.74108, -85.2596, 25.6807, 0.83", "2.41445, -88.7428, 30.2484, 0.28", "2.2907, -89.8965, 31.7291, 0.55", "2.09362, -91.988, 34.3026, 0.28", "2.05831, -92.6313, 35.1407, 0.55", "2.04053, -94.1515, 37.0359, 0.28", "2.00235, -95.0185, 38.0497, 0.55", "1.31195, -97.8441, 40.7155, 0.55", "2.83056, -105.564, 49.7429, 0.55", "5.10681, -112.94, 58.8982, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-9.12554, -41.5992, -10.2101, 0.55", "-11.5092, -42.6397, -13.5679, 0.55", "-12.2184, -42.8775, -14.518, 0.55", "-14.0149, -43.4767, -16.8241, 0.55", "-17.9801, -44.6506, -21.6757, 0.28", "-18.5779, -44.8101, -22.3549, 0.55", "-21.0938, -45.5577, -25.079, 0.55", "-24.6059, -46.5912, -28.4385, 0.55", "-25.9551, -46.9407, -29.6878, 0.28", "-27.1484, -47.1601, -30.708, 0.28", "-29.2345, -47.4972, -32.1574, 0.55", "-31.7618, -47.7813, -34.0224, 0.28", "-34.0849, -47.8322, -35.7969, 0.55", "-35.8843, -47.7152, -37.1305, 0.55", "-37.1155, -47.5245, -38.0883, 0.55", "-40.713, -46.7884, -41.0143, 0.55", "-44.5077, -45.7406, -44.0143, 0.55", "-46.0806, -45.2164, -45.2112, 0.28", "-47.5711, -44.743, -46.3779, 0.55", "-50.6042, -43.9914, -48.7152, 0.28", "-51.6273, -43.7698, -49.4914, 0.83", "-53.5595, -43.3352, -50.8043, 0.28", "-54.9828, -43.1358, -51.5635, 0.55", "-57.0575, -42.9214, -52.6247, 0.28", "-57.8877, -42.8257, -53.0196, 0.55", "-59.4392, -42.6798, -53.6686, 0.55", "-61.7912, -42.2255, -54.556, 0.55", "-63.3375, -41.8357, -55.048, 0.28", "-64.5935, -41.3705, -55.344, 0.55", "-66.069, -40.6431, -55.6968, 0.28", "-66.3104, -40.5042, -55.7627, 0.55", "-68.4928, -39.1632, -56.7538, 0.28", "-70.056, -38.1538, -57.6439, 0.55", "-72.0803, -36.6754, -59.1087, 0.83", "-73.723, -35.4131, -60.5111, 0.28", "-74.1419, -35.0893, -60.9181, 0.55", "-77.3317, -32.652, -64.2346, 0.28", "-77.8824, -32.2342, -64.8752, 0.55", "-79.4896, -30.8768, -66.8772, 0.28", "-79.904, -30.5276, -67.3974, 0.55", "-80.9786, -29.6211, -68.6501, 0.28", "-81.7469, -28.9704, -69.4835, 0.55", "-83.5024, -27.5242, -71.0581, 0.28", "-84.554, -26.7467, -71.9507, 0.55", "-86.8224, -25.2425, -73.7287, 0.28", "-87.5013, -24.8344, -74.2476, 0.55", "-88.5751, -24.2833, -75.0212, 0.28", "-89.4911, -23.8201, -75.6298, 0.55", "-91.4104, -22.8881, -76.774, 0.28", "-91.9916, -22.6215, -77.0991, 0.55", "-96.3326, -20.5579, -79.3044, 0.28", "-97.8667, -19.7265, -79.9385, 0.55", "-100.617, -18.1133, -80.8873, 0.28", "-101.859, -17.3372, -81.275, 0.55", "-104.724, -15.5826, -81.9974, 0.28", "-105.782, -14.9871, -82.2167, 0.55", "-109.644, -13.1838, -82.8071, 0.28", "-111.263, -12.634, -83.0415, 0.55", "-113.594, -12.2275, -83.3549, 0.55", "-115.033, -12.0682, -83.5148, 0.55", "-117.986, -11.8239, -83.6178, 0.28", "-120.902, -11.6168, -83.5384, 0.28", "-123.334, -11.4374, -83.4021, 0.55", "-126.305, -10.9747, -82.9097, 0.28", "-127.767, -10.5709, -82.4671, 0.55", "-131.215, -9.06475, -81.0569, 0.28", "-132.951, -7.94995, -79.8965, 0.55", "-134.041, -7.05529, -78.8878, 0.28", "-135.228, -6.05471, -77.4345, 0.55", "-136.681, -4.74789, -75.4121, 0.28", "-137.237, -4.28832, -74.6537, 0.55", "-140.216, -2.22606, -71.1304, 0.28", "-141.228, -1.57699, -69.9551, 0.55", "-143.629, -0.144307, -67.093, 0.28", "-144.935, 0.615501, -65.5393, 0.55", "-146.011, 1.23794, -64.2645, 0.55", "-147.306, 1.97112, -62.7802, 0.28", "-148.009, 2.3472, -62.1351, 0.55", "-150.395, 3.69893, -60.1296, 0.28", "-151.627, 4.56574, -59.0487, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-9.12554, -41.5992, -10.2101, 0.55", "-8.98056, -41.6209, -11.0751, 0.55", "-8.81274, -41.5472, -11.933, 0.55", "-8.55201, -41.38, -12.9837, 0.55", "-8.30537, -41.1744, -13.8231, 0.55", "-6.30882, -39.2453, -19.1265, 0.55", "-5.8736, -38.6731, -20.3185, 0.55", "-5.26391, -37.6985, -22.0868, 0.55", "-4.83998, -36.9663, -23.3387, 0.55", "-4.407, -36.1814, -24.5355, 0.28", "-3.66918, -34.8678, -26.313, 0.55", "-2.44857, -32.828, -28.8591, 0.28", "-2.38704, -32.6977, -29.1246, 0.55", "-2.41275, -32.2056, -31.025, 0.28", "-2.64431, -31.9685, -32.314, 0.55", "-3.02148, -31.8224, -33.6997, 0.55", "-3.72702, -31.6927, -36.1943, 0.55", "-5.09611, -31.4722, -41.0968, 0.55", "-5.95507, -31.3537, -44.4078, 0.55", "-6.22046, -31.3204, -45.5589, 0.55", "-7.78924, -31.024, -53.1553, 0.55", "-8.12902, -30.9057, -55.2252, 0.55", "-8.2323, -30.8318, -56.4, 0.55", "-8.23002, -30.7062, -59.1642, 0.55", "-7.81542, -30.7017, -65.827, 0.55", "-7.62246, -30.7654, -67.6237, 0.28", "-7.43258, -30.84, -68.6426, 0.55", "-7.11876, -31.0079, -70.1535, 0.28", "-6.93969, -31.1337, -70.7705, 0.55", "-5.95479, -31.753, -72.4546, 0.28", "-4.73291, -32.7092, -73.1399, 0.55", "-3.97246, -33.4046, -73.5101, 0.28", "-3.23247, -34.1876, -73.7736, 0.55", "-2.55266, -35.0544, -73.9614, 0.28", "-2.25883, -35.5041, -74.0575, 0.55", "-1.55003, -36.6907, -74.2366, 0.28", "-1.38494, -37.0437, -74.3368, 0.55", "-0.489326, -39.0602, -75.0214, 0.28", "-0.0933541, -39.9825, -75.4684, 0.55", "0.741364, -41.9303, -76.675, 0.28", "1.04901, -42.639, -77.213, 0.55", "2.09963, -44.9464, -79.1638, 0.28", "2.34943, -45.5053, -79.6647, 0.55", "3.06298, -47.2758, -81.2993, 0.28", "3.21726, -47.6955, -81.6391, 0.55", "3.5903, -48.8095, -82.5126, 0.28", "3.78851, -49.4507, -83.0869, 0.55", "3.98629, -50.0745, -83.7121, 0.55", "4.38538, -51.3196, -84.9497, 0.28", "4.67264, -52.0755, -85.8386, 0.55", "5.61498, -53.8897, -88.6766, 0.28", "5.974, -54.4545, -89.8086, 0.55", "6.23472, -54.8057, -90.5806, 0.28", "6.51148, -55.1168, -91.3546, 0.55", "7.40708, -55.9616, -93.7112, 0.28", "8.11194, -56.6232, -95.4663, 0.55", "9.43216, -57.9295, -98.318, 0.28", "9.85093, -58.3347, -99.2125, 0.55", "10.7341, -59.0755, -100.822, 0.28", "11.0521, -59.3192, -101.324, 0.55", "11.6494, -59.7136, -102.018, 0.28", "12.209, -60.0453, -102.576, 0.55", "13.8277, -60.8574, -103.91, 0.28", "15.7038, -61.702, -105.404, 0.28", "16.6922, -62.084, -106.086, 0.28", "17.6567, -62.4302, -106.833, 0.55", "19.0634, -62.8603, -107.926, 0.28", "19.6968, -63.0415, -108.397, 0.83", "21.3461, -63.5323, -109.537, 0.28", "22.04, -63.7609, -110.073, 0.55", "25.0093, -64.8906, -112.585, 0.28", "26.4236, -65.4686, -113.968, 0.28", "27.4094, -65.8841, -115.048, 0.55", "27.9397, -66.1375, -115.753, 0.55", "29.2625, -66.8294, -117.759, 0.28", "30.4566, -67.5574, -119.705, 0.55", "31.5428, -68.2735, -121.48, 0.28", "32.48, -68.9396, -123.156, 0.55", "33.2594, -69.4752, -124.534, 0.28", "33.9303, -69.8409, -125.61, 0.55", "35.6167, -70.585, -128.1, 0.28", "36.5011, -70.9627, -129.318, 0.55", "37.8685, -71.5388, -131.086, 0.28", "39.0085, -71.9662, -132.5, 0.55", "41.6764, -72.8033, -135.804, 0.28", "42.7086, -73.0535, -137.231, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-14.9203, -184.755, 136.489, 0.55", "-14.9144, -190.905, 139.286, 0.55", "-14.5319, -197.544, 140.483, 0.55", "-14.3848, -203.944, 142.644, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-14.9203, -184.755, 136.489, 0.55", "-13.6372, -194.258, 142.743, 0.55", "-13.2904, -202.299, 150.885, 0.55", "-12.3166, -208.542, 160.432, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-17.8916, -182.73, 135.314, 0.55", "-17.5418, -191.522, 140.374, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-17.8916, -182.73, 135.314, 0.55", "-19.4624, -191.91, 140.854, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-1.46154, -109.623, 4.7406, 0.83", "-0.698937, -113.718, 4.8612, 0.83", "0.191146, -117.187, 5.11965, 0.83", "1.0759, -120.635, 5.37656, 0.83", "1.91613, -123.909, 5.62054, 0.83", "3.21098, -128.955, 5.99653, 0.83", "4.49648, -133.964, 6.36981, 0.83", "5.76063, -137.309, 6.8786, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.46154, -109.623, 4.7406, 0.55", "-0.0915106, -112.04, 4.14719, 0.55", "0.847349, -113.917, 3.40022, 0.55", "1.43775, -115.296, 2.7467, 0.55", "1.83846, -116.891, 1.88146, 0.83", "2.10696, -118.689, 0.739044, 0.55", "2.36959, -120.447, -0.378389, 0.83", "2.49241, -122.342, -1.71539, 0.55", "2.52504, -123.438, -2.58558, 0.83", "2.39258, -126.965, -5.60643, 0.55", "2.0116, -129.713, -8.0585, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "5.10681, -112.94, 58.8982, 0.55", "3.39234, -121.477, 66.5997, 0.55", "0.363111, -128.831, 75.0775, 0.55", "-3.18074, -135.054, 84.234, 0.55", "-7.50968, -139.887, 93.8791, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "5.10681, -112.94, 58.8982, 0.55", "6.58805, -120.476, 66.7451, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "5.76063, -137.309, 6.8786, 0.55", "5.95124, -140.111, 7.48916, 0.55", "6.3133, -143.696, 8.3254, 0.55", "6.65078, -147.08, 9.09686, 0.55", "6.85376, -149.483, 9.61866, 0.55", "7.15125, -153.767, 10.5009, 0.55", "8.07115, -165.812, 12.6354, 0.55", "8.42545, -169.902, 13.1637, 0.55", "8.64325, -172.783, 13.3954, 0.55", "8.84013, -176.069, 13.4013, 0.55", "8.88524, -178.6, 13.2043, 0.55", "9.08556, -184.518, 12.4578, 0.55", "9.08649, -189.003, 11.9324, 0.55", "9.18863, -191.954, 11.6466, 0.55", "9.5447, -199.618, 11.2874, 0.55", "9.82109, -204.774, 11.2733, 0.55", "10.3194, -211.435, 11.6012, 0.55", "11.152, -219.015, 12.496, 0.55", "12.0166, -224.096, 13.3209, 0.55", "12.6199, -227.105, 13.8622, 0.55", "13.1252, -229.877, 14.3692, 0.55", "13.7718, -233.384, 14.8376, 0.55", "15.0649, -241.819, 15.4575, 0.55", "15.6331, -245.085, 15.5495, 0.55", "16.1765, -248.717, 15.6549, 0.55", "16.9418, -254.168, 15.8001, 0.55", "17.3581, -258.35, 16.009, 0.55", "17.5206, -262.309, 16.2288, 0.55", "17.5163, -266.075, 16.4905, 0.55", "17.4684, -269.748, 16.8161, 0.55", "17.4416, -272.363, 17.0181, 0.55", "17.3785, -276.637, 17.1991, 0.55", "17.1166, -281.755, 17.0642, 0.55", "16.9947, -284.238, 16.799, 0.55", "16.8606, -286.415, 16.3996, 0.55", "16.7153, -290.525, 15.3521, 0.55", "16.5759, -293.126, 14.6261, 0.55", "16.4754, -296.339, 13.8375, 0.55", "16.3641, -298.596, 13.4419, 0.55", "16.0423, -304.467, 12.668, 0.55", "15.7923, -308.867, 12.4262, 0.55", "15.4637, -315.689, 12.6251, 0.55", "15.4672, -320.108, 13.1243, 0.55", "15.4816, -324.751, 13.804, 0.28", "15.4661, -326.617, 14.1649, 0.28", "15.5303, -331.157, 15.4417, 0.28", "15.6512, -335.358, 16.9515, 0.28", "16.4669, -340.955, 19.3402, 0.28", "18.9108, -353.536, 21.1733, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "5.76063, -137.309, 6.8786, 0.55", "7.40259, -138.011, 7.03225, 0.55", "10.7762, -139.733, 7.58926, 0.55", "13.6847, -141.393, 8.19114, 0.28", "16.805, -143.264, 8.929, 0.55", "18.7024, -144.446, 9.62434, 0.28", "22.0066, -146.56, 11.1283, 0.55", "23.3896, -147.644, 12.1449, 0.28", "23.8928, -148.035, 12.6038, 0.28", "24.7726, -148.603, 13.4068, 0.55", "28.2412, -150.511, 16.2522, 0.28", "29.7265, -151.265, 17.4004, 0.55", "34.2529, -153.478, 20.3326, 0.28", "36.7291, -154.588, 21.7399, 0.28", "39.8203, -156.012, 23.3071, 0.55", "44.4267, -158.216, 25.2298, 0.28", "45.0517, -158.511, 25.422, 0.55", "48.1297, -159.953, 26.158, 0.28", "48.4083, -160.087, 26.1941, 0.55", "50.8401, -161.6, 26.5928, 0.28", "51.9917, -162.411, 26.8555, 0.55", "61.5171, -168.486, 29.0938, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-7.50968, -139.887, 93.8791, 0.55", "-8.57234, -143.295, 102.237, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-7.50968, -139.887, 93.8791, 0.55", "-10.6363, -146.09, 100.422, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L5_BP_706acf4049_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -2.98402, 8.18068, 2.8199, 0.83 ) }
    dend_43 { pt3dadd( -5.68443, 10.2737, 3.22716, 1.11 ) }
    dend_43 { pt3dadd( -7.27661, 11.507, 3.43901, 0.83 ) }
    dend_43 { pt3dadd( -8.82347, 12.6947, 3.62882, 0.83 ) }
    dend_43 { pt3dadd( -9.73933, 13.372, 3.73284, 1.11 ) }
    dend_43 { pt3dadd( -12.6074, 15.4884, 4.0662, 1.11 ) }
    dend_43 { pt3dadd( -17.7372, 19.1118, 4.65549, 0.83 ) }
    dend_43 { pt3dadd( -19.5853, 20.3674, 4.85008, 0.83 ) }
    dend_43 { pt3dadd( -21.0488, 21.3322, 4.97095, 0.83 ) }
    dend_43 { pt3dadd( -22.4759, 22.2883, 5.07558, 0.83 ) }
    dend_43 { pt3dadd( -23.6376, 23.0763, 5.13203, 0.55 ) }
    dend_43 { pt3dadd( -24.5108, 23.6099, 5.18932, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.4845, 6.19064, -6.19013, 0.55 ) }
    dend_28 { pt3dadd( 6.98815, 6.73223, -6.74924, 0.55 ) }
    dend_28 { pt3dadd( 8.44092, 6.86895, -7.48906, 0.83 ) }
    dend_28 { pt3dadd( 10.7402, 7.01444, -8.86332, 0.55 ) }
    dend_28 { pt3dadd( 11.8501, 7.08467, -9.52671, 1.38 ) }
    dend_28 { pt3dadd( 14.5791, 7.25736, -11.1578, 0.55 ) }
    dend_28 { pt3dadd( 15.7414, 7.19888, -11.9361, 0.83 ) }
    dend_28 { pt3dadd( 21.7539, 6.12645, -16.3089, 0.55 ) }
    dend_28 { pt3dadd( 22.3356, 5.98224, -16.79, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.690408, -11.0417, 3.43137, 1.11 ) }
    dend_1 { pt3dadd( -0.750686, -16.36, 5.33797, 1.11 ) }
    dend_1 { pt3dadd( -0.775234, -18.526, 6.11446, 0.83 ) }
    dend_1 { pt3dadd( -0.807849, -21.4036, 7.14607, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.864866, 8.85543, -1.33915, 1.11 ) }
    dend_0 { pt3dadd( 0.971379, 9.96418, -1.33919, 1.11 ) }
    dend_0 { pt3dadd( 1.15365, 11.7727, -1.27331, 1.38 ) }
    dend_0 { pt3dadd( 1.16588, 11.8733, -1.26821, 1.38 ) }
    dend_0 { pt3dadd( 1.39345, 13.114, -1.20777, 0.83 ) }
    dend_0 { pt3dadd( 1.70068, 14.4224, -1.08528, 0.83 ) }
    dend_0 { pt3dadd( 2.20844, 15.8907, -0.795324, 0.83 ) }
    dend_0 { pt3dadd( 2.48355, 16.4432, -0.631004, 0.83 ) }
    dend_0 { pt3dadd( 2.74491, 16.8398, -0.482461, 1.11 ) }
    dend_0 { pt3dadd( 3.48579, 17.8003, -0.113567, 0.55 ) }
    dend_0 { pt3dadd( 4.3448, 18.7982, 0.330889, 0.83 ) }
    dend_0 { pt3dadd( 5.43409, 19.8134, 0.81003, 0.55 ) }
    dend_0 { pt3dadd( 5.9767, 20.2302, 1.01635, 0.83 ) }
    dend_0 { pt3dadd( 6.74455, 20.7929, 1.35402, 0.55 ) }
    dend_0 { pt3dadd( 7.70822, 21.5092, 1.827, 0.55 ) }
    dend_0 { pt3dadd( 9.07604, 22.5917, 2.57193, 0.55 ) }
    dend_0 { pt3dadd( 10.5862, 23.8318, 3.39502, 0.55 ) }
    dend_0 { pt3dadd( 11.5663, 24.6365, 4.0404, 0.55 ) }
    dend_0 { pt3dadd( 12.8007, 25.6542, 4.98229, 0.55 ) }
    dend_0 { pt3dadd( 13.0614, 25.8575, 5.19984, 0.83 ) }
    dend_0 { pt3dadd( 13.7595, 26.3943, 5.82109, 0.55 ) }
    dend_0 { pt3dadd( 14.3366, 26.811, 6.3025, 0.83 ) }
    dend_0 { pt3dadd( 15.6835, 27.9621, 7.45071, 0.55 ) }
    dend_0 { pt3dadd( 16.1661, 28.3831, 7.76798, 0.83 ) }
    dend_0 { pt3dadd( 16.5918, 28.6896, 7.96225, 0.55 ) }
    dend_0 { pt3dadd( 16.9993, 28.9513, 8.0942, 0.83 ) }
    dend_0 { pt3dadd( 17.8803, 29.4313, 8.30275, 0.83 ) }
    dend_0 { pt3dadd( 19.0269, 30.0877, 8.48547, 0.83 ) }
    dend_0 { pt3dadd( 19.7176, 30.5254, 8.52832, 0.55 ) }
    dend_0 { pt3dadd( 20.2473, 30.9078, 8.56379, 0.55 ) }
    dend_0 { pt3dadd( 21.6311, 31.895, 8.63752, 0.83 ) }
    dend_0 { pt3dadd( 22.5175, 32.5281, 8.65179, 0.55 ) }
    dend_0 { pt3dadd( 23.8506, 33.4539, 8.62243, 0.55 ) }
    dend_0 { pt3dadd( 25.0582, 34.2252, 8.54948, 0.55 ) }
    dend_0 { pt3dadd( 26.1304, 34.876, 8.4566, 0.55 ) }
    dend_0 { pt3dadd( 27.4693, 35.634, 8.28034, 0.55 ) }
    dend_0 { pt3dadd( 28.277, 35.9973, 8.14677, 0.55 ) }
    dend_0 { pt3dadd( 28.8116, 36.1973, 7.99127, 0.55 ) }
    dend_0 { pt3dadd( 29.5019, 36.3311, 7.72439, 0.55 ) }
    dend_0 { pt3dadd( 30.5042, 36.3562, 7.23899, 0.55 ) }
    dend_0 { pt3dadd( 31.1191, 36.2867, 6.9107, 0.55 ) }
    dend_0 { pt3dadd( 32.0311, 36.1576, 6.49856, 0.55 ) }
    dend_0 { pt3dadd( 33.807, 35.9691, 5.87771, 0.55 ) }
    dend_0 { pt3dadd( 35.2263, 35.8879, 5.49327, 0.55 ) }
    dend_0 { pt3dadd( 36.7543, 35.8749, 5.17709, 0.55 ) }
    dend_0 { pt3dadd( 37.7526, 35.8998, 5.05174, 0.55 ) }
    dend_0 { pt3dadd( 40.3948, 36.1973, 4.894, 0.55 ) }
    dend_0 { pt3dadd( 41.9889, 36.4902, 4.9143, 0.55 ) }
    dend_0 { pt3dadd( 43.2111, 36.7841, 5.03545, 0.55 ) }
    dend_0 { pt3dadd( 43.9656, 37.0787, 5.13598, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 44.845, 37.5299, 5.24885, 0.55 ) }
    dend_0 { pt3dadd( 46.3144, 38.4338, 5.31986, 0.55 ) }
    dend_0 { pt3dadd( 46.6428, 38.6529, 5.29337, 0.55 ) }
    dend_0 { pt3dadd( 47.5696, 39.2362, 5.15873, 0.55 ) }
    dend_0 { pt3dadd( 48.4255, 39.8645, 5.03213, 0.83 ) }
    dend_0 { pt3dadd( 48.8913, 40.2135, 4.956, 0.55 ) }
    dend_0 { pt3dadd( 49.5873, 40.8181, 4.81572, 0.83 ) }
    dend_0 { pt3dadd( 53.4561, 44.0379, 5.00206, 0.83 ) }
    dend_0 { pt3dadd( 56.8166, 47.7888, 4.92446, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -24.5108, 23.6099, 5.18932, 0.55 ) }
    dend_55 { pt3dadd( -26.7446, 24.8455, 4.00581, 0.55 ) }
    dend_55 { pt3dadd( -29.1736, 26.1891, 2.71886, 0.55 ) }
    dend_55 { pt3dadd( -32.105, 27.8105, 1.16579, 0.55 ) }
    dend_55 { pt3dadd( -34.5254, 29.1493, -0.116615, 0.83 ) }
    dend_55 { pt3dadd( -36.5538, 30.2712, -1.19127, 0.55 ) }
    dend_55 { pt3dadd( -40.3187, 32.3537, -3.186, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -24.5108, 23.6099, 5.18932, 0.55 ) }
    dend_44 { pt3dadd( -26.9099, 24.0129, 5.00027, 0.55 ) }
    dend_44 { pt3dadd( -29.4495, 24.3743, 5.05538, 0.55 ) }
    dend_44 { pt3dadd( -32.3257, 24.7828, 5.18826, 0.55 ) }
    dend_44 { pt3dadd( -36.4721, 25.3473, 5.7653, 0.55 ) }
    dend_44 { pt3dadd( -39.9283, 25.7301, 6.50112, 0.55 ) }
    dend_44 { pt3dadd( -43.5449, 26.0825, 7.43206, 0.55 ) }
    dend_44 { pt3dadd( -47.0189, 26.2015, 8.72556, 0.55 ) }
    dend_44 { pt3dadd( -49.9911, 26.0209, 10.1492, 0.55 ) }
    dend_44 { pt3dadd( -53.671, 25.5488, 12.3447, 0.55 ) }
    dend_44 { pt3dadd( -55.2581, 25.233, 13.5363, 0.55 ) }
    dend_44 { pt3dadd( -56.9684, 24.8765, 14.9018, 0.55 ) }
    dend_44 { pt3dadd( -59.989, 24.0018, 17.1784, 0.55 ) }
    dend_44 { pt3dadd( -61.6097, 23.5289, 18.1248, 0.55 ) }
    dend_44 { pt3dadd( -63.3071, 22.9792, 19.1083, 0.55 ) }
    dend_44 { pt3dadd( -65.3364, 22.3419, 20.0642, 0.55 ) }
    dend_44 { pt3dadd( -67.5455, 21.6937, 21.0385, 0.55 ) }
    dend_44 { pt3dadd( -70.7018, 20.7572, 22.3584, 0.55 ) }
    dend_44 { pt3dadd( -74.9403, 19.7777, 23.718, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 22.3356, 5.98224, -16.79, 0.55 ) }
    dend_34 { pt3dadd( 28.001, 7.66457, -18.0184, 0.55 ) }
    dend_34 { pt3dadd( 31.2814, 8.42259, -19.1845, 0.55 ) }
    dend_34 { pt3dadd( 34.5262, 9.02241, -20.3774, 0.55 ) }
    dend_34 { pt3dadd( 36.747, 9.3432, -21.1885, 0.55 ) }
    dend_34 { pt3dadd( 39.9957, 9.73738, -22.3462, 0.55 ) }
    dend_34 { pt3dadd( 46.7437, 10.4164, -24.9542, 0.55 ) }
    dend_34 { pt3dadd( 54.4084, 11.119, -28.4228, 0.55 ) }
    dend_34 { pt3dadd( 58.1388, 11.2176, -30.3541, 0.55 ) }
    dend_34 { pt3dadd( 60.1407, 11.2164, -31.5176, 0.55 ) }
    dend_34 { pt3dadd( 62.3365, 11.2224, -32.8825, 0.55 ) }
    dend_34 { pt3dadd( 66.2594, 11.1247, -35.2989, 0.55 ) }
    dend_34 { pt3dadd( 67.6883, 11.0042, -36.2206, 0.55 ) }
    dend_34 { pt3dadd( 73.7376, 10.6267, -40.5917, 0.55 ) }
    dend_34 { pt3dadd( 78.021, 10.4156, -44.0029, 0.55 ) }
    dend_34 { pt3dadd( 80.4859, 10.3392, -46.0358, 0.55 ) }
    dend_34 { pt3dadd( 82.9453, 10.2415, -48.0608, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 22.3356, 5.98224, -16.79, 0.83 ) }
    dend_29 { pt3dadd( 23.873, 7.06449, -16.8607, 0.83 ) }
    dend_29 { pt3dadd( 24.7528, 7.67926, -16.9431, 0.55 ) }
    dend_29 { pt3dadd( 26.0486, 8.60574, -17.1817, 0.83 ) }
    dend_29 { pt3dadd( 26.919, 9.24994, -17.3713, 0.55 ) }
    dend_29 { pt3dadd( 28.1168, 10.1732, -17.6168, 0.83 ) }
    dend_29 { pt3dadd( 29.5541, 11.3169, -17.8584, 0.55 ) }
    dend_29 { pt3dadd( 30.2801, 11.8386, -17.9444, 0.55 ) }
    dend_29 { pt3dadd( 31.963, 12.811, -18.0018, 0.83 ) }
    dend_29 { pt3dadd( 33.4981, 13.5179, -17.8335, 0.55 ) }
    dend_29 { pt3dadd( 34.3547, 13.9099, -17.6537, 0.83 ) }
    dend_29 { pt3dadd( 35.635, 14.5375, -17.246, 0.55 ) }
    dend_29 { pt3dadd( 37.4658, 15.4906, -16.4179, 0.55 ) }
    dend_29 { pt3dadd( 40.0137, 16.6873, -15.1214, 0.55 ) }
    dend_29 { pt3dadd( 42.4447, 17.7503, -13.703, 0.55 ) }
    dend_29 { pt3dadd( 44.3711, 18.5737, -12.5416, 0.55 ) }
    dend_29 { pt3dadd( 47.5457, 19.9479, -10.6107, 0.55 ) }
    dend_29 { pt3dadd( 49.8624, 21.0265, -9.14976, 0.55 ) }
    dend_29 { pt3dadd( 51.2519, 21.8039, -8.22274, 0.55 ) }
    dend_29 { pt3dadd( 53.7921, 23.5126, -6.51051, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.807849, -21.4036, 7.14607, 0.83 ) }
    dend_11 { pt3dadd( -1.43356, -24.6949, 7.11784, 0.83 ) }
    dend_11 { pt3dadd( -2.04319, -27.9016, 7.09034, 0.83 ) }
    dend_11 { pt3dadd( -2.72383, -31.4819, 7.05963, 0.83 ) }
    dend_11 { pt3dadd( -3.07926, -33.3515, 7.04359, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.807849, -21.4036, 7.14607, 0.55 ) }
    dend_2 { pt3dadd( 0.0865341, -23.8682, 8.86249, 0.55 ) }
    dend_2 { pt3dadd( 0.879045, -26.8869, 11.0961, 0.55 ) }
    dend_2 { pt3dadd( 1.31076, -30.8445, 14.182, 0.55 ) }
    dend_2 { pt3dadd( 1.37027, -32.3832, 15.4233, 0.83 ) }
    dend_2 { pt3dadd( 1.16014, -36.3107, 19.0417, 0.55 ) }
    dend_2 { pt3dadd( 0.884461, -38.3393, 20.9493, 0.55 ) }
    dend_2 { pt3dadd( 0.26436, -42.2845, 24.827, 0.83 ) }
    dend_2 { pt3dadd( -0.366033, -45.2145, 27.8935, 0.55 ) }
    dend_2 { pt3dadd( -1.10202, -47.6318, 30.3855, 0.55 ) }
    dend_2 { pt3dadd( -2.59953, -52.2103, 35.0218, 0.55 ) }
    dend_2 { pt3dadd( -3.78933, -55.8595, 38.6741, 0.55 ) }
    dend_2 { pt3dadd( -4.68349, -58.7847, 41.6431, 0.55 ) }
    dend_2 { pt3dadd( -5.46078, -61.8902, 44.6969, 0.28 ) }
    dend_2 { pt3dadd( -5.67521, -63.1835, 45.9189, 0.55 ) }
    dend_2 { pt3dadd( -6.00882, -65.5721, 48.0397, 0.28 ) }
    dend_2 { pt3dadd( -6.01941, -69.2997, 50.768, 0.55 ) }
    dend_2 { pt3dadd( -9.05725, -81.7077, 60.5204, 0.55 ) }
    dend_2 { pt3dadd( -12.4191, -93.1739, 71.2684, 0.55 ) }
    dend_2 { pt3dadd( -15.0652, -102.598, 84.0151, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -40.3187, 32.3537, -3.186, 0.55 ) }
    dend_61 { pt3dadd( -42.8894, 32.7311, -1.52245, 0.55 ) }
    dend_61 { pt3dadd( -43.9554, 32.8408, -0.676372, 0.83 ) }
    dend_61 { pt3dadd( -45.1829, 32.9188, 0.496605, 0.55 ) }
    dend_61 { pt3dadd( -46.1125, 32.9865, 1.48694, 0.83 ) }
    dend_61 { pt3dadd( -48.5527, 33.2572, 4.04968, 0.55 ) }
    dend_61 { pt3dadd( -49.4762, 33.3773, 5.02651, 0.28 ) }
    dend_61 { pt3dadd( -51.0014, 33.6096, 6.7965, 0.55 ) }
    dend_61 { pt3dadd( -53.0493, 33.9336, 9.15957, 0.55 ) }
    dend_61 { pt3dadd( -54.6125, 34.1729, 10.8745, 0.55 ) }
    dend_61 { pt3dadd( -56.7084, 34.4853, 13.0918, 0.28 ) }
    dend_61 { pt3dadd( -57.2607, 34.5644, 13.5952, 0.55 ) }
    dend_61 { pt3dadd( -58.4087, 34.7384, 14.5889, 0.28 ) }
    dend_61 { pt3dadd( -59.197, 34.8713, 15.1825, 0.55 ) }
    dend_61 { pt3dadd( -60.8215, 35.1168, 16.2463, 0.28 ) }
    dend_61 { pt3dadd( -61.7797, 35.2004, 16.8234, 0.55 ) }
    dend_61 { pt3dadd( -63.4666, 35.2189, 17.868, 0.28 ) }
    dend_61 { pt3dadd( -64.6038, 35.2196, 18.5283, 0.55 ) }
    dend_61 { pt3dadd( -71.1843, 34.9385, 25.8447, 0.55 ) }
    dend_61 { pt3dadd( -77.0758, 33.7805, 33.6462, 0.55 ) }
    dend_61 { pt3dadd( -82.7, 31.701, 41.4536, 0.55 ) }
    dend_61 { pt3dadd( -88.315, 28.4604, 48.8619, 0.55 ) }
    dend_61 { pt3dadd( -92.7601, 25.7152, 57.2056, 0.55 ) }
    dend_61 { pt3dadd( -97.9665, 23.2882, 65.2003, 0.55 ) }
    dend_61 { pt3dadd( -103.277, 22.4782, 73.4494, 0.55 ) }
    dend_61 { pt3dadd( -108.56, 20.8837, 81.6018, 0.55 ) }
    dend_61 { pt3dadd( -113.645, 19.9623, 89.9806, 0.55 ) }
    dend_61 { pt3dadd( -118.254, 18.9261, 98.6177, 0.55 ) }
    dend_61 { pt3dadd( -121.868, 16.8182, 107.528, 0.55 ) }
    dend_61 { pt3dadd( -125.567, 15.6282, 116.573, 0.55 ) }
    dend_61 { pt3dadd( -129.409, 13.4404, 125.369, 0.55 ) }
    dend_61 { pt3dadd( -132.078, 10.8791, 134.492, 0.55 ) }
    dend_61 { pt3dadd( -133.074, 9.04242, 144.112, 0.55 ) }
    dend_61 { pt3dadd( -134.042, 5.3712, 153.195, 0.55 ) }
    dend_61 { pt3dadd( -133.606, 1.53212, 162.25, 0.55 ) }
    dend_61 { pt3dadd( -133.68, -1.89209, 171.479, 0.55 ) }
    dend_61 { pt3dadd( -134.795, -4.60976, 180.875, 0.55 ) }
    dend_61 { pt3dadd( -137.968, -5.83295, 190.113, 0.55 ) }
    dend_61 { pt3dadd( -140.281, -8.13002, 199.402, 0.55 ) }
    dend_61 { pt3dadd( -140.727, -8.74056, 209.218, 0.55 ) }
    dend_61 { pt3dadd( -142.76, -8.65813, 218.849, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -40.3187, 32.3537, -3.186, 0.55 ) }
    dend_56 { pt3dadd( -42.0311, 33.2006, -5.37571, 0.55 ) }
    dend_56 { pt3dadd( -43.3178, 34.1412, -7.78992, 0.55 ) }
    dend_56 { pt3dadd( -44.5082, 35.2982, -10.3338, 0.55 ) }
    dend_56 { pt3dadd( -45.2537, 36.0227, -11.9268, 0.55 ) }
    dend_56 { pt3dadd( -46.6134, 37.3442, -14.8325, 0.83 ) }
    dend_56 { pt3dadd( -47.6082, 38.3111, -16.9584, 0.55 ) }
    dend_56 { pt3dadd( -48.7175, 39.6375, -20.0698, 0.83 ) }
    dend_56 { pt3dadd( -49.0992, 40.5309, -21.804, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -74.9403, 19.7777, 23.718, 0.28 ) }
    dend_48 { pt3dadd( -75.9809, 17.6666, 23.7613, 0.28 ) }
    dend_48 { pt3dadd( -76.4891, 16.7445, 23.7123, 0.28 ) }
    dend_48 { pt3dadd( -77.1515, 15.4358, 23.5931, 0.55 ) }
    dend_48 { pt3dadd( -77.6952, 14.2883, 23.4942, 0.28 ) }
    dend_48 { pt3dadd( -78.494, 12.5447, 23.3617, 0.55 ) }
    dend_48 { pt3dadd( -80.7021, 7.43875, 23.0387, 0.28 ) }
    dend_48 { pt3dadd( -81.4321, 5.62792, 22.7871, 0.55 ) }
    dend_48 { pt3dadd( -82.5456, 2.82524, 22.3111, 0.28 ) }
    dend_48 { pt3dadd( -83.191, 1.13821, 21.9546, 0.55 ) }
    dend_48 { pt3dadd( -83.6393, -0.0287964, 21.6835, 0.28 ) }
    dend_48 { pt3dadd( -84.1491, -1.36636, 21.382, 0.55 ) }
    dend_48 { pt3dadd( -85.6753, -5.80651, 20.461, 0.28 ) }
    dend_48 { pt3dadd( -86.1603, -7.15779, 20.1407, 0.55 ) }
    dend_48 { pt3dadd( -87.031, -9.26155, 19.4662, 0.28 ) }
    dend_48 { pt3dadd( -87.7588, -10.6329, 18.943, 0.28 ) }
    dend_48 { pt3dadd( -88.4136, -11.5606, 18.5768, 0.55 ) }
    dend_48 { pt3dadd( -90.6843, -14.1706, 17.647, 0.28 ) }
    dend_48 { pt3dadd( -91.7373, -15.2292, 17.3005, 0.55 ) }
    dend_48 { pt3dadd( -94.3251, -17.6691, 16.395, 0.28 ) }
    dend_48 { pt3dadd( -96.9163, -19.8477, 15.5711, 0.28 ) }
    dend_48 { pt3dadd( -99.7406, -21.955, 14.7199, 0.28 ) }
    dend_48 { pt3dadd( -101.032, -22.759, 14.4098, 0.55 ) }
    dend_48 { pt3dadd( -107.122, -31.0113, 12.4989, 0.55 ) }
    dend_48 { pt3dadd( -113.721, -39.0918, 12.545, 0.55 ) }
    dend_48 { pt3dadd( -120.344, -47.0071, 11.0175, 0.55 ) }
    dend_48 { pt3dadd( -127.253, -54.4263, 8.55547, 0.55 ) }
    dend_48 { pt3dadd( -134.369, -61.2453, 5.13438, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -74.9403, 19.7777, 23.718, 0.55 ) }
    dend_45 { pt3dadd( -75.7058, 19.7085, 23.8834, 0.55 ) }
    dend_45 { pt3dadd( -77.8459, 19.5508, 24.6318, 0.55 ) }
    dend_45 { pt3dadd( -78.6465, 19.4758, 24.9592, 0.55 ) }
    dend_45 { pt3dadd( -80.5256, 19.2449, 25.7656, 0.55 ) }
    dend_45 { pt3dadd( -83.4261, 18.9023, 26.8592, 0.55 ) }
    dend_45 { pt3dadd( -84.9367, 18.7683, 27.3945, 0.28 ) }
    dend_45 { pt3dadd( -87.2891, 18.5017, 28.187, 0.55 ) }
    dend_45 { pt3dadd( -89.0394, 18.2594, 28.7161, 0.55 ) }
    dend_45 { pt3dadd( -89.7782, 18.1523, 28.9418, 0.28 ) }
    dend_45 { pt3dadd( -94.2105, 17.5067, 30.2897, 0.55 ) }
    dend_45 { pt3dadd( -96.288, 17.0921, 30.8029, 0.28 ) }
    dend_45 { pt3dadd( -99.1013, 16.5015, 31.3304, 0.28 ) }
    dend_45 { pt3dadd( -101.537, 16.0105, 31.6376, 0.55 ) }
    dend_45 { pt3dadd( -110.942, 15.7493, 34.7378, 0.55 ) }
    dend_45 { pt3dadd( -119.942, 15.3744, 38.862, 0.55 ) }
    dend_45 { pt3dadd( -128.312, 14.13, 44.0133, 0.55 ) }
    dend_45 { pt3dadd( -136.42, 14.6312, 49.6829, 0.55 ) }
    dend_45 { pt3dadd( -143.173, 15.032, 56.9204, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -148.426, 16.1589, 65.2438, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 82.9453, 10.2415, -48.0608, 0.55 ) }
    dend_42 { pt3dadd( 87.9634, 11.8112, -52.1836, 0.55 ) }
    dend_42 { pt3dadd( 89.5508, 12.2351, -53.5864, 0.55 ) }
    dend_42 { pt3dadd( 91.5384, 12.6997, -55.3171, 0.55 ) }
    dend_42 { pt3dadd( 95.1457, 13.507, -58.6713, 0.55 ) }
    dend_42 { pt3dadd( 98.9132, 14.1903, -62.2635, 0.55 ) }
    dend_42 { pt3dadd( 100.758, 14.3752, -63.9702, 0.83 ) }
    dend_42 { pt3dadd( 102.278, 14.4191, -65.4893, 0.55 ) }
    dend_42 { pt3dadd( 103.416, 14.3541, -66.7399, 0.83 ) }
    dend_42 { pt3dadd( 106.165, 13.8033, -69.9399, 0.55 ) }
    dend_42 { pt3dadd( 108.432, 13.1341, -72.5871, 0.55 ) }
    dend_42 { pt3dadd( 111.04, 12.3488, -75.5013, 0.55 ) }
    dend_42 { pt3dadd( 113.942, 11.5581, -78.8074, 0.55 ) }
    dend_42 { pt3dadd( 115.889, 10.9801, -81.0731, 0.55 ) }
    dend_42 { pt3dadd( 118.086, 10.3197, -83.6999, 0.55 ) }
    dend_42 { pt3dadd( 119.984, 9.8151, -86.1055, 0.55 ) }
    dend_42 { pt3dadd( 121.176, 9.60616, -87.7818, 0.55 ) }
    dend_42 { pt3dadd( 122.686, 9.23955, -91.1582, 0.55 ) }
    dend_42 { pt3dadd( 123.511, 8.94297, -93.2687, 0.55 ) }
    dend_42 { pt3dadd( 124.223, 8.4222, -96.0705, 0.55 ) }
    dend_42 { pt3dadd( 125.204, 7.39588, -100.804, 0.55 ) }
    dend_42 { pt3dadd( 125.404, 7.12388, -101.87, 0.28 ) }
    dend_42 { pt3dadd( 128.001, 3.67325, -114.829, 0.28 ) }
    dend_42 { pt3dadd( 128.876, 2.68805, -118.634, 0.83 ) }
    dend_42 { pt3dadd( 132.325, -1.04444, -132.12, 0.83 ) }
    dend_42 { pt3dadd( 134.098, -3.02848, -138.377, 0.83 ) }
    dend_42 { pt3dadd( 134.95, -3.93445, -140.907, 0.55 ) }
    dend_42 { pt3dadd( 135.928, -4.82709, -143.372, 0.55 ) }
    dend_42 { pt3dadd( 138.625, -6.582, -147.934, 0.55 ) }
    dend_42 { pt3dadd( 141.509, -8.16108, -151.937, 0.28 ) }
    dend_42 { pt3dadd( 142.379, -8.442, -152.163, 0.55 ) }
    dend_42 { pt3dadd( 144.292, -8.91098, -151.976, 0.28 ) }
    dend_42 { pt3dadd( 145.475, -9.11293, -151.691, 0.55 ) }
    dend_42 { pt3dadd( 146.708, -9.33777, -151.287, 0.28 ) }
    dend_42 { pt3dadd( 148.186, -9.53178, -150.736, 0.55 ) }
    dend_42 { pt3dadd( 150.398, -9.70932, -150.152, 0.28 ) }
    dend_42 { pt3dadd( 152.174, -9.90802, -149.739, 0.55 ) }
    dend_42 { pt3dadd( 154.14, -10.0, -149.443, 0.28 ) }
    dend_42 { pt3dadd( 156.811, -10.1209, -149.279, 0.55 ) }
    dend_42 { pt3dadd( 159.806, -10.1906, -149.277, 0.55 ) }
    dend_42 { pt3dadd( 162.441, -10.2241, -149.451, 0.28 ) }
    dend_42 { pt3dadd( 166.086, -10.2412, -149.896, 0.55 ) }
    dend_42 { pt3dadd( 172.388, -10.1099, -151.342, 0.55 ) }
    dend_42 { pt3dadd( 175.171, -9.91382, -152.322, 0.55 ) }
    dend_42 { pt3dadd( 176.366, -9.78212, -152.873, 0.83 ) }
    dend_42 { pt3dadd( 178.644, -9.51939, -154.134, 0.55 ) }
    dend_42 { pt3dadd( 180.225, -9.27451, -155.11, 0.83 ) }
    dend_42 { pt3dadd( 184.475, -8.50363, -157.787, 0.55 ) }
    dend_42 { pt3dadd( 187.073, -8.21504, -159.486, 0.28 ) }
    dend_42 { pt3dadd( 188.167, -8.15958, -160.076, 0.55 ) }
    dend_42 { pt3dadd( 191.168, -8.28026, -161.351, 0.28 ) }
    dend_42 { pt3dadd( 192.22, -8.41833, -161.725, 0.55 ) }
    dend_42 { pt3dadd( 194.389, -8.83218, -162.159, 0.28 ) }
    dend_42 { pt3dadd( 196.599, -9.46038, -162.213, 0.55 ) }
    dend_42 { pt3dadd( 201.065, -10.9523, -161.532, 0.28 ) }
    dend_42 { pt3dadd( 203.125, -11.7265, -160.997, 0.55 ) }
    dend_42 { pt3dadd( 206.189, -13.0503, -160.033, 0.28 ) }
    dend_42 { pt3dadd( 210.061, -14.7045, -158.676, 0.55 ) }
    dend_42 { pt3dadd( 212.86, -15.8614, -157.651, 0.55 ) }
    dend_42 { pt3dadd( 217.707, -17.7114, -155.799, 0.28 ) }
    dend_42 { pt3dadd( 219.696, -18.3821, -155.206, 0.55 ) }
    dend_42 { pt3dadd( 223.122, -19.3505, -154.563, 0.28 ) }
    dend_42 { pt3dadd( 226.534, -20.0589, -154.167, 0.55 ) }
    dend_42 { pt3dadd( 228.403, -20.2407, -154.216, 0.28 ) }
    dend_42 { pt3dadd( 230.089, -20.1797, -154.399, 0.55 ) }
    dend_42 { pt3dadd( 234.847, -19.732, -155.371, 0.28 ) }
    dend_42 { pt3dadd( 238.243, -19.1768, -156.126, 0.28 ) }
    dend_42 { pt3dadd( 241.192, -18.4782, -156.831, 0.55 ) }
    dend_42 { pt3dadd( 244.447, -17.6188, -157.779, 0.28 ) }
    dend_42 { pt3dadd( 245.266, -17.3498, -157.991, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 82.9453, 10.2415, -48.0608, 0.55 ) }
    dend_35 { pt3dadd( 83.9228, 7.65227, -49.4757, 0.55 ) }
    dend_35 { pt3dadd( 84.5579, 5.44899, -50.5237, 0.28 ) }
    dend_35 { pt3dadd( 85.134, 3.44319, -51.3167, 0.55 ) }
    dend_35 { pt3dadd( 86.5675, -0.785282, -53.0358, 0.28 ) }
    dend_35 { pt3dadd( 86.6515, -1.05514, -53.1808, 0.55 ) }
    dend_35 { pt3dadd( 87.131, -2.47285, -54.0532, 0.28 ) }
    dend_35 { pt3dadd( 87.4286, -3.67214, -54.955, 0.55 ) }
    dend_35 { pt3dadd( 87.6752, -4.94271, -56.0319, 0.28 ) }
    dend_35 { pt3dadd( 87.9663, -6.6873, -57.5758, 0.55 ) }
    dend_35 { pt3dadd( 88.693, -11.0624, -61.3757, 0.55 ) }
    dend_35 { pt3dadd( 89.3146, -15.0604, -64.9051, 0.55 ) }
    dend_35 { pt3dadd( 89.7824, -18.2597, -67.7304, 0.55 ) }
    dend_35 { pt3dadd( 90.1883, -21.4071, -70.4559, 0.55 ) }
    dend_35 { pt3dadd( 90.2901, -22.2182, -71.1281, 0.28 ) }
    dend_35 { pt3dadd( 90.42, -23.0766, -71.7792, 0.55 ) }
    dend_35 { pt3dadd( 90.7007, -24.2452, -72.5777, 0.28 ) }
    dend_35 { pt3dadd( 91.4003, -26.3019, -73.826, 0.55 ) }
    dend_35 { pt3dadd( 93.0487, -30.1553, -75.6131, 0.55 ) }
    dend_35 { pt3dadd( 93.9489, -32.2111, -76.3912, 0.28 ) }
    dend_35 { pt3dadd( 94.7469, -34.3224, -77.2733, 0.55 ) }
    dend_35 { pt3dadd( 95.6563, -37.313, -78.6188, 0.28 ) }
    dend_35 { pt3dadd( 96.2431, -39.7486, -79.7603, 0.55 ) }
    dend_35 { pt3dadd( 96.9727, -43.4085, -81.4746, 0.28 ) }
    dend_35 { pt3dadd( 97.7512, -47.1836, -83.1362, 0.55 ) }
    dend_35 { pt3dadd( 98.8136, -52.6765, -85.5952, 0.28 ) }
    dend_35 { pt3dadd( 99.3196, -55.6126, -86.9154, 0.55 ) }
    dend_35 { pt3dadd( 99.7925, -58.6265, -88.3337, 0.28 ) }
    dend_35 { pt3dadd( 100.187, -61.296, -89.7392, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 100.792, -64.6443, -91.7686, 0.55 ) }
    dend_35 { pt3dadd( 101.553, -67.7186, -93.5759, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 53.7921, 23.5126, -6.51051, 0.55 ) }
    dend_31 { pt3dadd( 56.5187, 23.4905, -5.66679, 0.55 ) }
    dend_31 { pt3dadd( 58.5245, 23.3579, -5.22372, 0.55 ) }
    dend_31 { pt3dadd( 62.9353, 22.9688, -4.46958, 0.55 ) }
    dend_31 { pt3dadd( 64.9338, 22.7162, -4.2955, 0.55 ) }
    dend_31 { pt3dadd( 67.1206, 22.4627, -4.22345, 0.55 ) }
    dend_31 { pt3dadd( 70.0695, 22.1294, -4.33996, 0.55 ) }
    dend_31 { pt3dadd( 73.2051, 21.6363, -4.73173, 0.55 ) }
    dend_31 { pt3dadd( 74.8651, 21.318, -5.11371, 0.55 ) }
    dend_31 { pt3dadd( 78.2705, 20.576, -6.32923, 0.55 ) }
    dend_31 { pt3dadd( 79.8417, 20.2365, -6.93885, 0.55 ) }
    dend_31 { pt3dadd( 83.5327, 19.3548, -8.44314, 0.55 ) }
    dend_31 { pt3dadd( 86.0356, 18.6663, -9.42218, 0.55 ) }
    dend_31 { pt3dadd( 87.8726, 18.1656, -10.0612, 0.83 ) }
    dend_31 { pt3dadd( 90.8099, 17.2685, -11.0287, 0.55 ) }
    dend_31 { pt3dadd( 93.6854, 16.2788, -11.8419, 0.83 ) }
    dend_31 { pt3dadd( 96.1242, 15.3497, -12.4267, 0.55 ) }
    dend_31 { pt3dadd( 98.2859, 14.5762, -12.8457, 0.55 ) }
    dend_31 { pt3dadd( 99.5083, 14.2017, -13.0303, 0.83 ) }
    dend_31 { pt3dadd( 102.353, 13.3669, -13.3189, 0.28 ) }
    dend_31 { pt3dadd( 103.758, 13.0267, -13.3881, 0.28 ) }
    dend_31 { pt3dadd( 105.127, 12.5991, -13.5053, 0.28 ) }
    dend_31 { pt3dadd( 106.605, 12.1737, -13.6464, 0.28 ) }
    dend_31 { pt3dadd( 108.971, 11.526, -13.9284, 0.28 ) }
    dend_31 { pt3dadd( 109.921, 11.2826, -14.017, 0.55 ) }
    dend_31 { pt3dadd( 112.177, 10.7688, -14.0194, 0.55 ) }
    dend_31 { pt3dadd( 116.226, 9.84831, -13.8171, 0.55 ) }
    dend_31 { pt3dadd( 117.345, 9.5748, -13.7071, 0.55 ) }
    dend_31 { pt3dadd( 118.342, 9.30751, -13.5604, 0.83 ) }
    dend_31 { pt3dadd( 120.494, 8.8291, -13.0846, 0.55 ) }
    dend_31 { pt3dadd( 122.363, 8.42316, -12.6423, 0.55 ) }
    dend_31 { pt3dadd( 124.128, 8.04877, -12.2179, 0.55 ) }
    dend_31 { pt3dadd( 125.498, 7.72702, -11.9224, 0.55 ) }
    dend_31 { pt3dadd( 127.684, 7.0445, -11.527, 0.55 ) }
    dend_31 { pt3dadd( 130.279, 5.98684, -11.1541, 0.55 ) }
    dend_31 { pt3dadd( 134.347, 3.84022, -10.7574, 0.55 ) }
    dend_31 { pt3dadd( 136.601, 2.31285, -10.6107, 0.55 ) }
    dend_31 { pt3dadd( 138.573, 0.646624, -10.5114, 0.28 ) }
    dend_31 { pt3dadd( 139.167, 0.0190736, -10.4889, 0.55 ) }
    dend_31 { pt3dadd( 140.499, -1.75889, -10.4265, 0.28 ) }
    dend_31 { pt3dadd( 141.664, -3.76781, -10.3333, 0.55 ) }
    dend_31 { pt3dadd( 142.775, -6.25603, -10.0375, 0.55 ) }
    dend_31 { pt3dadd( 143.518, -7.87342, -9.76481, 0.28 ) }
    dend_31 { pt3dadd( 143.787, -8.43811, -9.63995, 0.55 ) }
    dend_31 { pt3dadd( 144.482, -9.83452, -9.30867, 0.28 ) }
    dend_31 { pt3dadd( 145.426, -11.6385, -8.83069, 0.55 ) }
    dend_31 { pt3dadd( 147.866, -15.948, -7.55846, 0.55 ) }
    dend_31 { pt3dadd( 149.132, -18.1065, -6.86791, 0.55 ) }
    dend_31 { pt3dadd( 150.306, -20.0795, -6.21578, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 53.7921, 23.5126, -6.51051, 0.55 ) }
    dend_30 { pt3dadd( 56.2747, 23.7982, -4.70024, 0.55 ) }
    dend_30 { pt3dadd( 57.07, 23.8912, -4.16297, 0.55 ) }
    dend_30 { pt3dadd( 60.0399, 24.1112, -2.30285, 0.55 ) }
    dend_30 { pt3dadd( 63.3524, 24.4157, -0.170645, 0.55 ) }
    dend_30 { pt3dadd( 67.6012, 24.7854, 2.67199, 0.55 ) }
    dend_30 { pt3dadd( 68.7745, 24.8896, 3.4496, 0.55 ) }
    dend_30 { pt3dadd( 70.8845, 24.9994, 4.81518, 0.55 ) }
    dend_30 { pt3dadd( 73.1921, 25.1807, 6.23253, 0.55 ) }
    dend_30 { pt3dadd( 75.8671, 25.477, 7.77043, 0.55 ) }
    dend_30 { pt3dadd( 78.3857, 25.7903, 9.23264, 0.55 ) }
    dend_30 { pt3dadd( 79.7617, 26.0305, 9.97884, 0.55 ) }
    dend_30 { pt3dadd( 81.3739, 26.3587, 10.8576, 0.55 ) }
    dend_30 { pt3dadd( 83.3635, 26.8253, 11.9158, 0.83 ) }
    dend_30 { pt3dadd( 86.6146, 27.6174, 13.3094, 0.55 ) }
    dend_30 { pt3dadd( 88.7706, 28.0683, 14.1192, 0.83 ) }
    dend_30 { pt3dadd( 91.7708, 28.5689, 15.1251, 0.55 ) }
    dend_30 { pt3dadd( 92.6952, 28.6743, 15.415, 0.55 ) }
    dend_30 { pt3dadd( 95.5715, 28.8676, 16.2386, 0.55 ) }
    dend_30 { pt3dadd( 100.734, 28.9292, 17.4733, 0.55 ) }
    dend_30 { pt3dadd( 104.527, 28.7776, 18.2679, 0.55 ) }
    dend_30 { pt3dadd( 107.54, 28.5144, 18.9498, 0.55 ) }
    dend_30 { pt3dadd( 110.625, 28.0782, 19.7291, 0.55 ) }
    dend_30 { pt3dadd( 111.275, 27.9693, 19.8941, 0.28 ) }
    dend_30 { pt3dadd( 112.597, 27.6976, 20.2198, 0.83 ) }
    dend_30 { pt3dadd( 118.031, 26.5022, 21.5783, 0.55 ) }
    dend_30 { pt3dadd( 121.83, 25.6778, 22.4578, 0.55 ) }
    dend_30 { pt3dadd( 124.945, 25.0694, 23.2649, 0.55 ) }
    dend_30 { pt3dadd( 126.807, 24.6986, 23.7638, 0.83 ) }
    dend_30 { pt3dadd( 128.272, 24.427, 24.1615, 0.28 ) }
    dend_30 { pt3dadd( 129.6, 24.184, 24.5105, 0.55 ) }
    dend_30 { pt3dadd( 139.822, 24.5758, 28.9738, 0.55 ) }
    dend_30 { pt3dadd( 150.691, 23.5344, 31.2835, 0.55 ) }
    dend_30 { pt3dadd( 161.442, 23.7713, 34.2738, 0.55 ) }
    dend_30 { pt3dadd( 171.227, 22.1426, 39.388, 0.55 ) }
    dend_30 { pt3dadd( 180.454, 18.9491, 44.7945, 0.55 ) }
    dend_30 { pt3dadd( 190.5, 14.5727, 46.9124, 0.55 ) }
    dend_30 { pt3dadd( 200.379, 9.38083, 47.0468, 0.55 ) }
    dend_30 { pt3dadd( 211.087, 6.24891, 46.7455, 0.55 ) }
    dend_30 { pt3dadd( 221.714, 2.86198, 47.1625, 0.55 ) }
    dend_30 { pt3dadd( 232.675, 0.764838, 47.0198, 0.55 ) }
    dend_30 { pt3dadd( 243.611, -1.01156, 48.3615, 0.55 ) }
    dend_30 { pt3dadd( 253.992, -4.74659, 50.0521, 0.55 ) }
    dend_30 { pt3dadd( 264.565, -6.66244, 53.0698, 0.55 ) }
    dend_30 { pt3dadd( 274.644, -7.16064, 57.8364, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -3.07926, -33.3515, 7.04359, 1.38 ) }
    dend_13 { pt3dadd( -1.03842, -36.2193, 5.73811, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -3.07926, -33.3515, 7.04359, 0.55 ) }
    dend_12 { pt3dadd( -4.04958, -34.586, 6.86377, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -5.12014, -36.1667, 6.67174, 0.55 ) }
    dend_12 { pt3dadd( -5.95804, -37.2144, 6.52662, 0.55 ) }
    dend_12 { pt3dadd( -6.6364, -38.0933, 6.29048, 0.55 ) }
    dend_12 { pt3dadd( -8.0808, -39.9189, 5.6226, 0.55 ) }
    dend_12 { pt3dadd( -9.08696, -41.1398, 5.12159, 0.55 ) }
    dend_12 { pt3dadd( -9.97229, -42.2353, 4.63894, 0.55 ) }
    dend_12 { pt3dadd( -12.2492, -44.9042, 3.39722, 0.55 ) }
    dend_12 { pt3dadd( -14.9924, -47.9957, 1.92624, 0.55 ) }
    dend_12 { pt3dadd( -17.1073, -50.3394, 0.744596, 0.55 ) }
    dend_12 { pt3dadd( -18.4513, -51.878, -0.0302112, 0.55 ) }
    dend_12 { pt3dadd( -19.9936, -53.7225, -0.911719, 0.55 ) }
    dend_12 { pt3dadd( -21.9537, -56.3616, -1.99273, 0.55 ) }
    dend_12 { pt3dadd( -23.1033, -58.2282, -2.58902, 0.55 ) }
    dend_12 { pt3dadd( -24.5511, -60.9047, -3.1751, 0.55 ) }
    dend_12 { pt3dadd( -25.7136, -63.4081, -3.58219, 0.55 ) }
    dend_12 { pt3dadd( -26.8875, -66.5273, -3.95542, 0.55 ) }
    dend_12 { pt3dadd( -27.9992, -70.1842, -4.23589, 0.55 ) }
    dend_12 { pt3dadd( -28.6003, -72.9747, -4.31972, 0.55 ) }
    dend_12 { pt3dadd( -28.8297, -74.36, -4.25093, 0.55 ) }
    dend_12 { pt3dadd( -29.222, -77.6081, -3.87015, 0.55 ) }
    dend_12 { pt3dadd( -29.5555, -80.6446, -3.42355, 0.55 ) }
    dend_12 { pt3dadd( -29.7928, -83.6956, -2.71548, 0.55 ) }
    dend_12 { pt3dadd( -29.9698, -85.4437, -2.22055, 0.55 ) }
    dend_12 { pt3dadd( -30.5327, -90.8425, -0.488414, 0.55 ) }
    dend_12 { pt3dadd( -30.5784, -91.2398, -0.354697, 0.55 ) }
    dend_12 { pt3dadd( -30.8279, -93.6712, 0.533663, 0.55 ) }
    dend_12 { pt3dadd( -31.4974, -98.0186, 2.17299, 0.55 ) }
    dend_12 { pt3dadd( -31.7087, -99.4749, 2.63458, 0.55 ) }
    dend_12 { pt3dadd( -31.9998, -101.762, 2.9612, 0.55 ) }
    dend_12 { pt3dadd( -32.0399, -102.617, 2.89876, 0.55 ) }
    dend_12 { pt3dadd( -31.9223, -105.524, 2.19288, 0.55 ) }
    dend_12 { pt3dadd( -31.6508, -107.417, 1.37882, 0.55 ) }
    dend_12 { pt3dadd( -30.9946, -110.447, -0.484681, 0.55 ) }
    dend_12 { pt3dadd( -29.9813, -114.161, -3.00211, 0.28 ) }
    dend_12 { pt3dadd( -29.688, -115.082, -3.73905, 0.55 ) }
    dend_12 { pt3dadd( -29.2102, -116.481, -4.97192, 0.28 ) }
    dend_12 { pt3dadd( -29.1374, -116.693, -5.16875, 0.55 ) }
    dend_12 { pt3dadd( -28.7689, -117.847, -6.15473, 0.28 ) }
    dend_12 { pt3dadd( -28.6902, -118.237, -6.41037, 0.55 ) }
    dend_12 { pt3dadd( -28.4168, -120.253, -7.37765, 0.28 ) }
    dend_12 { pt3dadd( -28.3512, -120.939, -7.70478, 0.55 ) }
    dend_12 { pt3dadd( -28.212, -122.921, -8.54874, 0.28 ) }
    dend_12 { pt3dadd( -28.1661, -123.545, -8.81158, 0.55 ) }
    dend_12 { pt3dadd( -28.0327, -125.697, -9.6891, 0.28 ) }
    dend_12 { pt3dadd( -27.9652, -126.687, -10.0964, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -15.0652, -102.598, 84.0151, 0.55 ) }
    dend_10 { pt3dadd( -17.9728, -108.241, 89.6777, 0.55 ) }
    dend_10 { pt3dadd( -21.6547, -113.105, 95.6057, 0.55 ) }
    dend_10 { pt3dadd( -25.1602, -118.532, 101.139, 0.55 ) }
    dend_10 { pt3dadd( -28.8198, -123.98, 106.551, 0.55 ) }
    dend_10 { pt3dadd( -31.6817, -130.417, 111.319, 0.55 ) }
    dend_10 { pt3dadd( -34.4234, -136.589, 116.49, 0.55 ) }
    dend_10 { pt3dadd( -36.3809, -144.112, 119.945, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -15.0652, -102.598, 84.0151, 0.55 ) }
    dend_3 { pt3dadd( -14.1542, -111.949, 93.019, 0.55 ) }
    dend_3 { pt3dadd( -12.7183, -122.729, 100.165, 0.55 ) }
    dend_3 { pt3dadd( -13.3741, -133.609, 107.274, 0.55 ) }
    dend_3 { pt3dadd( -14.7783, -145.114, 113.191, 0.55 ) }
    dend_3 { pt3dadd( -15.6582, -156.568, 119.304, 0.55 ) }
    dend_3 { pt3dadd( -16.4386, -167.558, 126.229, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -49.0992, 40.5309, -21.804, 0.83 ) }
    dend_60 { pt3dadd( -48.8677, 41.8853, -23.76, 0.83 ) }
    dend_60 { pt3dadd( -48.3853, 45.2004, -28.1672, 0.55 ) }
    dend_60 { pt3dadd( -48.1633, 46.6504, -29.9283, 0.83 ) }
    dend_60 { pt3dadd( -47.909, 48.2195, -31.6897, 0.55 ) }
    dend_60 { pt3dadd( -47.6262, 49.8717, -33.2392, 0.55 ) }
    dend_60 { pt3dadd( -47.4668, 50.7189, -33.8985, 0.28 ) }
    dend_60 { pt3dadd( -47.3869, 51.3033, -34.1771, 0.55 ) }
    dend_60 { pt3dadd( -47.0205, 53.3163, -34.6756, 0.28 ) }
    dend_60 { pt3dadd( -46.8382, 54.1834, -34.8469, 0.55 ) }
    dend_60 { pt3dadd( -46.2308, 57.216, -35.315, 0.28 ) }
    dend_60 { pt3dadd( -45.8047, 59.6317, -35.5984, 0.55 ) }
    dend_60 { pt3dadd( -45.3093, 63.423, -35.907, 0.28 ) }
    dend_60 { pt3dadd( -44.9842, 66.7659, -36.1035, 0.28 ) }
    dend_60 { pt3dadd( -44.9062, 68.6432, -36.167, 0.55 ) }
    dend_60 { pt3dadd( -44.9485, 70.8702, -36.228, 0.28 ) }
    dend_60 { pt3dadd( -45.0362, 71.9354, -36.2357, 0.55 ) }
    dend_60 { pt3dadd( -45.3872, 74.4261, -36.3514, 0.28 ) }
    dend_60 { pt3dadd( -45.7381, 76.0745, -36.5033, 0.28 ) }
    dend_60 { pt3dadd( -46.1215, 77.6867, -36.698, 0.28 ) }
    dend_60 { pt3dadd( -46.2919, 78.538, -36.8075, 0.55 ) }
    dend_60 { pt3dadd( -46.8045, 81.9709, -37.3492, 0.28 ) }
    dend_60 { pt3dadd( -47.2834, 86.027, -38.0788, 0.55 ) }
    dend_60 { pt3dadd( -47.4287, 87.4271, -38.3383, 0.55 ) }
    dend_60 { pt3dadd( -47.5942, 88.8351, -38.566, 0.55 ) }
    dend_60 { pt3dadd( -48.1084, 91.8188, -39.0827, 0.55 ) }
    dend_60 { pt3dadd( -48.5762, 93.7707, -39.4518, 0.28 ) }
    dend_60 { pt3dadd( -48.8402, 94.5075, -39.5931, 0.55 ) }
    dend_60 { pt3dadd( -49.6928, 96.5074, -39.9189, 0.28 ) }
    dend_60 { pt3dadd( -50.6958, 98.6235, -40.342, 0.55 ) }
    dend_60 { pt3dadd( -52.4354, 101.646, -41.042, 0.28 ) }
    dend_60 { pt3dadd( -53.3046, 102.9, -41.362, 0.28 ) }
    dend_60 { pt3dadd( -54.7593, 104.616, -41.9635, 0.55 ) }
    dend_60 { pt3dadd( -56.4082, 106.388, -42.6763, 0.28 ) }
    dend_60 { pt3dadd( -56.7123, 106.664, -42.7985, 0.55 ) }
    dend_60 { pt3dadd( -57.817, 107.535, -43.2136, 0.28 ) }
    dend_60 { pt3dadd( -61.6366, 110.319, -44.5387, 0.55 ) }
    dend_60 { pt3dadd( -67.0024, 113.692, -46.5094, 0.28 ) }
    dend_60 { pt3dadd( -68.0043, 114.245, -46.9225, 0.55 ) }
    dend_60 { pt3dadd( -70.7667, 115.652, -48.0863, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -71.9309, 116.222, -48.6031, 0.28 ) }
    dend_60 { pt3dadd( -72.9496, 116.686, -49.0954, 0.55 ) }
    dend_60 { pt3dadd( -75.9784, 117.669, -50.7051, 0.28 ) }
    dend_60 { pt3dadd( -78.1229, 118.166, -51.73, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -49.0992, 40.5309, -21.804, 0.55 ) }
    dend_57 { pt3dadd( -49.2939, 41.77, -21.955, 0.55 ) }
    dend_57 { pt3dadd( -49.4285, 42.5003, -21.9759, 0.28 ) }
    dend_57 { pt3dadd( -49.631, 43.0182, -21.8641, 0.55 ) }
    dend_57 { pt3dadd( -50.0962, 44.2075, -21.6074, 0.28 ) }
    dend_57 { pt3dadd( -50.423, 45.0428, -21.4271, 0.55 ) }
    dend_57 { pt3dadd( -51.0253, 46.5828, -21.0947, 0.28 ) }
    dend_57 { pt3dadd( -51.4348, 47.4043, -20.7722, 0.55 ) }
    dend_57 { pt3dadd( -53.013, 49.3339, -19.3062, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -134.369, -61.2453, 5.13438, 0.55 ) }
    dend_52 { pt3dadd( -140.534, -70.5, 4.72146, 0.55 ) }
    dend_52 { pt3dadd( -144.924, -80.6889, 3.85909, 0.55 ) }
    dend_52 { pt3dadd( -148.443, -90.7476, 0.655409, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -134.369, -61.2453, 5.13438, 0.55 ) }
    dend_49 { pt3dadd( -142.138, -70.582, 1.33708, 0.55 ) }
    dend_49 { pt3dadd( -148.766, -80.0781, -3.93863, 0.55 ) }
    dend_49 { pt3dadd( -154.9, -89.7487, -9.4887, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -148.426, 16.1589, 65.2438, 0.55 ) }
    dend_47 { pt3dadd( -160.19, 19.4951, 74.2985, 0.55 ) }
    dend_47 { pt3dadd( -173.261, 23.0468, 81.2321, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -148.426, 16.1589, 65.2438, 0.55 ) }
    dend_46 { pt3dadd( -155.27, 15.5647, 69.1637, 0.55 ) }
    dend_46 { pt3dadd( -162.415, 16.1082, 72.5113, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 101.553, -67.7186, -93.5759, 0.28 ) }
    dend_39 { pt3dadd( 109.797, -72.7292, -104.824, 0.28 ) }
    dend_39 { pt3dadd( 110.605, -73.2742, -105.808, 0.55 ) }
    dend_39 { pt3dadd( 111.969, -74.1944, -107.47, 0.28 ) }
    dend_39 { pt3dadd( 113.118, -74.9692, -108.868, 0.28 ) }
    dend_39 { pt3dadd( 114.639, -75.9948, -110.72, 0.55 ) }
    dend_39 { pt3dadd( 116.644, -77.3469, -113.161, 0.55 ) }
    dend_39 { pt3dadd( 119.149, -79.3887, -114.16, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 101.553, -67.7186, -93.5759, 0.55 ) }
    dend_36 { pt3dadd( 102.302, -68.8602, -94.602, 0.55 ) }
    dend_36 { pt3dadd( 102.544, -69.3786, -95.063, 0.28 ) }
    dend_36 { pt3dadd( 102.913, -70.2714, -95.8742, 0.55 ) }
    dend_36 { pt3dadd( 103.726, -72.2383, -97.6614, 0.28 ) }
    dend_36 { pt3dadd( 104.289, -73.6014, -98.8999, 0.55 ) }
    dend_36 { pt3dadd( 105.243, -75.9108, -100.999, 0.28 ) }
    dend_36 { pt3dadd( 106.342, -78.7516, -103.788, 0.28 ) }
    dend_36 { pt3dadd( 106.794, -80.0631, -105.099, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 150.306, -20.0795, -6.21578, 0.28 ) }
    dend_33 { pt3dadd( 151.696, -21.8142, -5.37596, 0.28 ) }
    dend_33 { pt3dadd( 153.426, -24.0895, -4.0638, 0.28 ) }
    dend_33 { pt3dadd( 154.511, -25.561, -3.14833, 0.55 ) }
    dend_33 { pt3dadd( 155.162, -26.3632, -2.58923, 0.28 ) }
    dend_33 { pt3dadd( 155.507, -26.7949, -2.284, 0.28 ) }
    dend_33 { pt3dadd( 157.225, -28.9304, -0.814427, 0.55 ) }
    dend_33 { pt3dadd( 157.612, -29.3956, -0.413702, 0.28 ) }
    dend_33 { pt3dadd( 158.509, -30.62, 0.725272, 0.55 ) }
    dend_33 { pt3dadd( 159.279, -31.6922, 1.66069, 0.28 ) }
    dend_33 { pt3dadd( 159.958, -32.562, 2.4082, 0.55 ) }
    dend_33 { pt3dadd( 160.762, -33.6131, 3.22304, 0.55 ) }
    dend_33 { pt3dadd( 162.073, -35.312, 4.27199, 0.55 ) }
    dend_33 { pt3dadd( 162.391, -35.7315, 4.51125, 0.55 ) }
    dend_33 { pt3dadd( 163.53, -37.3047, 5.37761, 0.28 ) }
    dend_33 { pt3dadd( 163.973, -37.952, 5.70881, 0.55 ) }
    dend_33 { pt3dadd( 164.593, -38.7746, 6.13608, 0.28 ) }
    dend_33 { pt3dadd( 165.475, -39.9501, 6.68157, 0.55 ) }
    dend_33 { pt3dadd( 166.978, -41.8334, 7.24944, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 150.306, -20.0795, -6.21578, 0.55 ) }
    dend_32 { pt3dadd( 148.323, -20.1764, -6.46479, 0.55 ) }
    dend_32 { pt3dadd( 146.712, -20.255, -6.66701, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -1.03842, -36.2193, 5.73811, 0.83 ) }
    dend_17 { pt3dadd( -0.959651, -36.4666, 5.68111, 0.83 ) }
    dend_17 { pt3dadd( 0.078752, -38.6842, 5.18928, 0.83 ) }
    dend_17 { pt3dadd( 0.945148, -40.6234, 4.64165, 0.55 ) }
    dend_17 { pt3dadd( 1.63634, -42.1705, 4.20476, 0.55 ) }
    dend_17 { pt3dadd( 3.10551, -45.4589, 3.27612, 0.83 ) }
    dend_17 { pt3dadd( 4.88751, -49.4475, 2.14975, 0.55 ) }
    dend_17 { pt3dadd( 5.88388, -51.5405, 1.57893, 0.83 ) }
    dend_17 { pt3dadd( 7.74004, -54.8928, 0.721795, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -1.03842, -36.2193, 5.73811, 0.55 ) }
    dend_14 { pt3dadd( -2.4027, -37.1269, 3.04769, 0.55 ) }
    dend_14 { pt3dadd( -3.86708, -38.1011, 0.159863, 0.55 ) }
    dend_14 { pt3dadd( -5.59579, -39.2511, -3.24925, 0.55 ) }
    dend_14 { pt3dadd( -7.69501, -40.6476, -7.38901, 0.55 ) }
    dend_14 { pt3dadd( -8.88624, -41.44, -9.73818, 0.55 ) }
    dend_14 { pt3dadd( -9.12554, -41.5992, -10.2101, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -16.4386, -167.558, 126.229, 0.55 ) }
    dend_7 { pt3dadd( -16.2545, -175.845, 131.966, 0.55 ) }
    dend_7 { pt3dadd( -14.9203, -184.755, 136.489, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -16.4386, -167.558, 126.229, 0.55 ) }
    dend_4 { pt3dadd( -16.9768, -175.245, 130.634, 0.55 ) }
    dend_4 { pt3dadd( -17.8916, -182.73, 135.314, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -53.013, 49.3339, -19.3062, 0.28 ) }
    dend_59 { pt3dadd( -54.134, 50.8491, -17.8865, 0.28 ) }
    dend_59 { pt3dadd( -54.5512, 51.4269, -17.2799, 0.55 ) }
    dend_59 { pt3dadd( -55.7385, 53.1035, -15.4878, 0.28 ) }
    dend_59 { pt3dadd( -56.3361, 53.9295, -14.687, 0.55 ) }
    dend_59 { pt3dadd( -57.9779, 56.1606, -12.6004, 0.28 ) }
    dend_59 { pt3dadd( -59.6466, 58.4283, -10.4795, 0.55 ) }
    dend_59 { pt3dadd( -62.4074, 61.9875, -6.923, 0.28 ) }
    dend_59 { pt3dadd( -62.9949, 62.7518, -6.16531, 0.55 ) }
    dend_59 { pt3dadd( -64.2911, 64.5369, -4.56816, 0.28 ) }
    dend_59 { pt3dadd( -64.7952, 65.2763, -3.94357, 0.55 ) }
    dend_59 { pt3dadd( -70.6811, 70.205, 1.59924, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -77.3516, 76.0076, 4.98915, 0.55 ) }
    dend_59 { pt3dadd( -82.9686, 82.1452, 9.50979, 0.55 ) }
    dend_59 { pt3dadd( -87.3673, 89.4214, 13.6771, 0.55 ) }
    dend_59 { pt3dadd( -92.7829, 96.2873, 17.3088, 0.55 ) }
    dend_59 { pt3dadd( -98.9179, 101.771, 21.9938, 0.55 ) }
    dend_59 { pt3dadd( -104.354, 106.63, 28.0354, 0.55 ) }
    dend_59 { pt3dadd( -108.84, 110.638, 35.3474, 0.55 ) }
    dend_59 { pt3dadd( -113.363, 115.163, 42.3276, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -53.013, 49.3339, -19.3062, 0.55 ) }
    dend_58 { pt3dadd( -55.899, 48.6787, -17.2281, 0.55 ) }
    dend_58 { pt3dadd( -57.3999, 48.2826, -16.14, 0.28 ) }
    dend_58 { pt3dadd( -58.5168, 47.9878, -15.3303, 0.55 ) }
    dend_58 { pt3dadd( -59.4477, 47.7421, -14.6555, 0.28 ) }
    dend_58 { pt3dadd( -60.0998, 47.57, -14.1828, 0.55 ) }
    dend_58 { pt3dadd( -61.8977, 47.0955, -12.8794, 0.28 ) }
    dend_58 { pt3dadd( -63.1275, 46.6355, -12.1533, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -148.443, -90.7476, 0.655409, 0.55 ) }
    dend_54 { pt3dadd( -153.227, -102.687, 2.48858, 0.55 ) }
    dend_54 { pt3dadd( -157.684, -114.447, 5.74811, 0.55 ) }
    dend_54 { pt3dadd( -161.266, -126.892, 6.78084, 0.55 ) }
    dend_54 { pt3dadd( -166.085, -138.66, 9.44259, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -148.443, -90.7476, 0.655409, 0.55 ) }
    dend_53 { pt3dadd( -154.145, -98.2992, -6.08335, 0.55 ) }
    dend_53 { pt3dadd( -159.482, -104.587, -14.2642, 0.55 ) }
    dend_53 { pt3dadd( -165.591, -111.92, -20.8872, 0.55 ) }
    dend_53 { pt3dadd( -173.97, -117.374, -26.8032, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -154.9, -89.7487, -9.4887, 0.55 ) }
    dend_51 { pt3dadd( -161.649, -96.5222, -17.7681, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -154.9, -89.7487, -9.4887, 0.55 ) }
    dend_50 { pt3dadd( -158.75, -100.259, -8.86855, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 119.149, -79.3887, -114.16, 0.28 ) }
    dend_41 { pt3dadd( 121.562, -80.5031, -115.166, 0.28 ) }
    dend_41 { pt3dadd( 122.683, -81.0208, -115.633, 0.55 ) }
    dend_41 { pt3dadd( 124.82, -82.008, -116.524, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 119.149, -79.3887, -114.16, 0.55 ) }
    dend_40 { pt3dadd( 118.857, -80.2935, -115.474, 0.55 ) }
    dend_40 { pt3dadd( 118.272, -82.1033, -118.102, 0.28 ) }
    dend_40 { pt3dadd( 118.081, -82.6928, -118.958, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 106.794, -80.0631, -105.099, 0.28 ) }
    dend_38 { pt3dadd( 108.279, -83.4736, -109.555, 0.28 ) }
    dend_38 { pt3dadd( 109.015, -85.1623, -111.761, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 106.794, -80.0631, -105.099, 0.55 ) }
    dend_37 { pt3dadd( 105.074, -80.53, -104.726, 0.55 ) }
    dend_37 { pt3dadd( 100.275, -81.8319, -103.686, 0.28 ) }
    dend_37 { pt3dadd( 99.135, -82.1411, -103.439, 0.55 ) }
    dend_37 { pt3dadd( 96.0169, -82.9872, -102.763, 0.28 ) }
    dend_37 { pt3dadd( 94.007, -83.5325, -102.327, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 7.74004, -54.8928, 0.721795, 0.83 ) }
    dend_23 { pt3dadd( 7.74146, -55.1663, 0.675141, 0.83 ) }
    dend_23 { pt3dadd( 7.8349, -58.752, 0.149421, 0.83 ) }
    dend_23 { pt3dadd( 7.71712, -61.4289, -0.0248264, 0.83 ) }
    dend_23 { pt3dadd( 7.48692, -64.0104, 0.109097, 0.83 ) }
    dend_23 { pt3dadd( 7.12053, -67.446, 0.568774, 0.83 ) }
    dend_23 { pt3dadd( 6.62467, -71.4016, 1.26635, 0.83 ) }
    dend_23 { pt3dadd( 6.14185, -75.827, 2.26791, 0.83 ) }
    dend_23 { pt3dadd( 5.71886, -80.1321, 3.43465, 0.83 ) }
    dend_23 { pt3dadd( 4.83613, -85.39, 4.82563, 0.83 ) }
    dend_23 { pt3dadd( 4.26922, -87.7921, 5.36012, 0.83 ) }
    dend_23 { pt3dadd( 3.80989, -89.5945, 5.65098, 0.83 ) }
    dend_23 { pt3dadd( 2.83917, -93.045, 6.1533, 0.83 ) }
    dend_23 { pt3dadd( 2.00246, -96.1351, 6.41668, 0.83 ) }
    dend_23 { pt3dadd( 0.404026, -102.727, 6.16399, 0.83 ) }
    dend_23 { pt3dadd( -0.536735, -106.32, 5.54851, 0.83 ) }
    dend_23 { pt3dadd( -1.46154, -109.623, 4.7406, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 7.74004, -54.8928, 0.721795, 0.55 ) }
    dend_18 { pt3dadd( 6.46266, -57.6623, 1.64393, 0.55 ) }
    dend_18 { pt3dadd( 5.58536, -59.666, 2.46725, 0.55 ) }
    dend_18 { pt3dadd( 5.12149, -60.947, 3.09591, 0.55 ) }
    dend_18 { pt3dadd( 4.58297, -62.9558, 4.21246, 0.55 ) }
    dend_18 { pt3dadd( 3.74231, -66.9362, 6.60823, 0.55 ) }
    dend_18 { pt3dadd( 3.25161, -69.9379, 8.74085, 0.55 ) }
    dend_18 { pt3dadd( 2.99156, -72.3371, 10.6875, 0.55 ) }
    dend_18 { pt3dadd( 2.76217, -74.7502, 12.8436, 0.55 ) }
    dend_18 { pt3dadd( 2.61018, -76.7469, 14.7381, 0.28 ) }
    dend_18 { pt3dadd( 2.58729, -78.3696, 16.5219, 0.55 ) }
    dend_18 { pt3dadd( 2.69702, -81.3042, 20.1943, 0.55 ) }
    dend_18 { pt3dadd( 2.77279, -83.0878, 22.6809, 0.55 ) }
    dend_18 { pt3dadd( 2.79939, -84.0862, 24.0702, 0.55 ) }
    dend_18 { pt3dadd( 2.74108, -85.2596, 25.6807, 0.83 ) }
    dend_18 { pt3dadd( 2.41445, -88.7428, 30.2484, 0.28 ) }
    dend_18 { pt3dadd( 2.2907, -89.8965, 31.7291, 0.55 ) }
    dend_18 { pt3dadd( 2.09362, -91.988, 34.3026, 0.28 ) }
    dend_18 { pt3dadd( 2.05831, -92.6313, 35.1407, 0.55 ) }
    dend_18 { pt3dadd( 2.04053, -94.1515, 37.0359, 0.28 ) }
    dend_18 { pt3dadd( 2.00235, -95.0185, 38.0497, 0.55 ) }
    dend_18 { pt3dadd( 1.31195, -97.8441, 40.7155, 0.55 ) }
    dend_18 { pt3dadd( 2.83056, -105.564, 49.7429, 0.55 ) }
    dend_18 { pt3dadd( 5.10681, -112.94, 58.8982, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -9.12554, -41.5992, -10.2101, 0.55 ) }
    dend_16 { pt3dadd( -11.5092, -42.6397, -13.5679, 0.55 ) }
    dend_16 { pt3dadd( -12.2184, -42.8775, -14.518, 0.55 ) }
    dend_16 { pt3dadd( -14.0149, -43.4767, -16.8241, 0.55 ) }
    dend_16 { pt3dadd( -17.9801, -44.6506, -21.6757, 0.28 ) }
    dend_16 { pt3dadd( -18.5779, -44.8101, -22.3549, 0.55 ) }
    dend_16 { pt3dadd( -21.0938, -45.5577, -25.079, 0.55 ) }
    dend_16 { pt3dadd( -24.6059, -46.5912, -28.4385, 0.55 ) }
    dend_16 { pt3dadd( -25.9551, -46.9407, -29.6878, 0.28 ) }
    dend_16 { pt3dadd( -27.1484, -47.1601, -30.708, 0.28 ) }
    dend_16 { pt3dadd( -29.2345, -47.4972, -32.1574, 0.55 ) }
    dend_16 { pt3dadd( -31.7618, -47.7813, -34.0224, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -34.0849, -47.8322, -35.7969, 0.55 ) }
    dend_16 { pt3dadd( -35.8843, -47.7152, -37.1305, 0.55 ) }
    dend_16 { pt3dadd( -37.1155, -47.5245, -38.0883, 0.55 ) }
    dend_16 { pt3dadd( -40.713, -46.7884, -41.0143, 0.55 ) }
    dend_16 { pt3dadd( -44.5077, -45.7406, -44.0143, 0.55 ) }
    dend_16 { pt3dadd( -46.0806, -45.2164, -45.2112, 0.28 ) }
    dend_16 { pt3dadd( -47.5711, -44.743, -46.3779, 0.55 ) }
    dend_16 { pt3dadd( -50.6042, -43.9914, -48.7152, 0.28 ) }
    dend_16 { pt3dadd( -51.6273, -43.7698, -49.4914, 0.83 ) }
    dend_16 { pt3dadd( -53.5595, -43.3352, -50.8043, 0.28 ) }
    dend_16 { pt3dadd( -54.9828, -43.1358, -51.5635, 0.55 ) }
    dend_16 { pt3dadd( -57.0575, -42.9214, -52.6247, 0.28 ) }
    dend_16 { pt3dadd( -57.8877, -42.8257, -53.0196, 0.55 ) }
    dend_16 { pt3dadd( -59.4392, -42.6798, -53.6686, 0.55 ) }
    dend_16 { pt3dadd( -61.7912, -42.2255, -54.556, 0.55 ) }
    dend_16 { pt3dadd( -63.3375, -41.8357, -55.048, 0.28 ) }
    dend_16 { pt3dadd( -64.5935, -41.3705, -55.344, 0.55 ) }
    dend_16 { pt3dadd( -66.069, -40.6431, -55.6968, 0.28 ) }
    dend_16 { pt3dadd( -66.3104, -40.5042, -55.7627, 0.55 ) }
    dend_16 { pt3dadd( -68.4928, -39.1632, -56.7538, 0.28 ) }
    dend_16 { pt3dadd( -70.056, -38.1538, -57.6439, 0.55 ) }
    dend_16 { pt3dadd( -72.0803, -36.6754, -59.1087, 0.83 ) }
    dend_16 { pt3dadd( -73.723, -35.4131, -60.5111, 0.28 ) }
    dend_16 { pt3dadd( -74.1419, -35.0893, -60.9181, 0.55 ) }
    dend_16 { pt3dadd( -77.3317, -32.652, -64.2346, 0.28 ) }
    dend_16 { pt3dadd( -77.8824, -32.2342, -64.8752, 0.55 ) }
    dend_16 { pt3dadd( -79.4896, -30.8768, -66.8772, 0.28 ) }
    dend_16 { pt3dadd( -79.904, -30.5276, -67.3974, 0.55 ) }
    dend_16 { pt3dadd( -80.9786, -29.6211, -68.6501, 0.28 ) }
    dend_16 { pt3dadd( -81.7469, -28.9704, -69.4835, 0.55 ) }
    dend_16 { pt3dadd( -83.5024, -27.5242, -71.0581, 0.28 ) }
    dend_16 { pt3dadd( -84.554, -26.7467, -71.9507, 0.55 ) }
    dend_16 { pt3dadd( -86.8224, -25.2425, -73.7287, 0.28 ) }
    dend_16 { pt3dadd( -87.5013, -24.8344, -74.2476, 0.55 ) }
    dend_16 { pt3dadd( -88.5751, -24.2833, -75.0212, 0.28 ) }
    dend_16 { pt3dadd( -89.4911, -23.8201, -75.6298, 0.55 ) }
    dend_16 { pt3dadd( -91.4104, -22.8881, -76.774, 0.28 ) }
    dend_16 { pt3dadd( -91.9916, -22.6215, -77.0991, 0.55 ) }
    dend_16 { pt3dadd( -96.3326, -20.5579, -79.3044, 0.28 ) }
    dend_16 { pt3dadd( -97.8667, -19.7265, -79.9385, 0.55 ) }
    dend_16 { pt3dadd( -100.617, -18.1133, -80.8873, 0.28 ) }
    dend_16 { pt3dadd( -101.859, -17.3372, -81.275, 0.55 ) }
    dend_16 { pt3dadd( -104.724, -15.5826, -81.9974, 0.28 ) }
    dend_16 { pt3dadd( -105.782, -14.9871, -82.2167, 0.55 ) }
    dend_16 { pt3dadd( -109.644, -13.1838, -82.8071, 0.28 ) }
    dend_16 { pt3dadd( -111.263, -12.634, -83.0415, 0.55 ) }
    dend_16 { pt3dadd( -113.594, -12.2275, -83.3549, 0.55 ) }
    dend_16 { pt3dadd( -115.033, -12.0682, -83.5148, 0.55 ) }
    dend_16 { pt3dadd( -117.986, -11.8239, -83.6178, 0.28 ) }
    dend_16 { pt3dadd( -120.902, -11.6168, -83.5384, 0.28 ) }
    dend_16 { pt3dadd( -123.334, -11.4374, -83.4021, 0.55 ) }
    dend_16 { pt3dadd( -126.305, -10.9747, -82.9097, 0.28 ) }
    dend_16 { pt3dadd( -127.767, -10.5709, -82.4671, 0.55 ) }
    dend_16 { pt3dadd( -131.215, -9.06475, -81.0569, 0.28 ) }
    dend_16 { pt3dadd( -132.951, -7.94995, -79.8965, 0.55 ) }
    dend_16 { pt3dadd( -134.041, -7.05529, -78.8878, 0.28 ) }
    dend_16 { pt3dadd( -135.228, -6.05471, -77.4345, 0.55 ) }
    dend_16 { pt3dadd( -136.681, -4.74789, -75.4121, 0.28 ) }
    dend_16 { pt3dadd( -137.237, -4.28832, -74.6537, 0.55 ) }
    dend_16 { pt3dadd( -140.216, -2.22606, -71.1304, 0.28 ) }
    dend_16 { pt3dadd( -141.228, -1.57699, -69.9551, 0.55 ) }
    dend_16 { pt3dadd( -143.629, -0.144307, -67.093, 0.28 ) }
    dend_16 { pt3dadd( -144.935, 0.615501, -65.5393, 0.55 ) }
    dend_16 { pt3dadd( -146.011, 1.23794, -64.2645, 0.55 ) }
    dend_16 { pt3dadd( -147.306, 1.97112, -62.7802, 0.28 ) }
    dend_16 { pt3dadd( -148.009, 2.3472, -62.1351, 0.55 ) }
    dend_16 { pt3dadd( -150.395, 3.69893, -60.1296, 0.28 ) }
    dend_16 { pt3dadd( -151.627, 4.56574, -59.0487, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -9.12554, -41.5992, -10.2101, 0.55 ) }
    dend_15 { pt3dadd( -8.98056, -41.6209, -11.0751, 0.55 ) }
    dend_15 { pt3dadd( -8.81274, -41.5472, -11.933, 0.55 ) }
    dend_15 { pt3dadd( -8.55201, -41.38, -12.9837, 0.55 ) }
    dend_15 { pt3dadd( -8.30537, -41.1744, -13.8231, 0.55 ) }
    dend_15 { pt3dadd( -6.30882, -39.2453, -19.1265, 0.55 ) }
    dend_15 { pt3dadd( -5.8736, -38.6731, -20.3185, 0.55 ) }
    dend_15 { pt3dadd( -5.26391, -37.6985, -22.0868, 0.55 ) }
    dend_15 { pt3dadd( -4.83998, -36.9663, -23.3387, 0.55 ) }
    dend_15 { pt3dadd( -4.407, -36.1814, -24.5355, 0.28 ) }
    dend_15 { pt3dadd( -3.66918, -34.8678, -26.313, 0.55 ) }
    dend_15 { pt3dadd( -2.44857, -32.828, -28.8591, 0.28 ) }
    dend_15 { pt3dadd( -2.38704, -32.6977, -29.1246, 0.55 ) }
    dend_15 { pt3dadd( -2.41275, -32.2056, -31.025, 0.28 ) }
    dend_15 { pt3dadd( -2.64431, -31.9685, -32.314, 0.55 ) }
    dend_15 { pt3dadd( -3.02148, -31.8224, -33.6997, 0.55 ) }
    dend_15 { pt3dadd( -3.72702, -31.6927, -36.1943, 0.55 ) }
    dend_15 { pt3dadd( -5.09611, -31.4722, -41.0968, 0.55 ) }
    dend_15 { pt3dadd( -5.95507, -31.3537, -44.4078, 0.55 ) }
    dend_15 { pt3dadd( -6.22046, -31.3204, -45.5589, 0.55 ) }
    dend_15 { pt3dadd( -7.78924, -31.024, -53.1553, 0.55 ) }
    dend_15 { pt3dadd( -8.12902, -30.9057, -55.2252, 0.55 ) }
    dend_15 { pt3dadd( -8.2323, -30.8318, -56.4, 0.55 ) }
    dend_15 { pt3dadd( -8.23002, -30.7062, -59.1642, 0.55 ) }
    dend_15 { pt3dadd( -7.81542, -30.7017, -65.827, 0.55 ) }
    dend_15 { pt3dadd( -7.62246, -30.7654, -67.6237, 0.28 ) }
    dend_15 { pt3dadd( -7.43258, -30.84, -68.6426, 0.55 ) }
    dend_15 { pt3dadd( -7.11876, -31.0079, -70.1535, 0.28 ) }
    dend_15 { pt3dadd( -6.93969, -31.1337, -70.7705, 0.55 ) }
    dend_15 { pt3dadd( -5.95479, -31.753, -72.4546, 0.28 ) }
    dend_15 { pt3dadd( -4.73291, -32.7092, -73.1399, 0.55 ) }
    dend_15 { pt3dadd( -3.97246, -33.4046, -73.5101, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( -3.23247, -34.1876, -73.7736, 0.55 ) }
    dend_15 { pt3dadd( -2.55266, -35.0544, -73.9614, 0.28 ) }
    dend_15 { pt3dadd( -2.25883, -35.5041, -74.0575, 0.55 ) }
    dend_15 { pt3dadd( -1.55003, -36.6907, -74.2366, 0.28 ) }
    dend_15 { pt3dadd( -1.38494, -37.0437, -74.3368, 0.55 ) }
    dend_15 { pt3dadd( -0.489326, -39.0602, -75.0214, 0.28 ) }
    dend_15 { pt3dadd( -0.0933541, -39.9825, -75.4684, 0.55 ) }
    dend_15 { pt3dadd( 0.741364, -41.9303, -76.675, 0.28 ) }
    dend_15 { pt3dadd( 1.04901, -42.639, -77.213, 0.55 ) }
    dend_15 { pt3dadd( 2.09963, -44.9464, -79.1638, 0.28 ) }
    dend_15 { pt3dadd( 2.34943, -45.5053, -79.6647, 0.55 ) }
    dend_15 { pt3dadd( 3.06298, -47.2758, -81.2993, 0.28 ) }
    dend_15 { pt3dadd( 3.21726, -47.6955, -81.6391, 0.55 ) }
    dend_15 { pt3dadd( 3.5903, -48.8095, -82.5126, 0.28 ) }
    dend_15 { pt3dadd( 3.78851, -49.4507, -83.0869, 0.55 ) }
    dend_15 { pt3dadd( 3.98629, -50.0745, -83.7121, 0.55 ) }
    dend_15 { pt3dadd( 4.38538, -51.3196, -84.9497, 0.28 ) }
    dend_15 { pt3dadd( 4.67264, -52.0755, -85.8386, 0.55 ) }
    dend_15 { pt3dadd( 5.61498, -53.8897, -88.6766, 0.28 ) }
    dend_15 { pt3dadd( 5.974, -54.4545, -89.8086, 0.55 ) }
    dend_15 { pt3dadd( 6.23472, -54.8057, -90.5806, 0.28 ) }
    dend_15 { pt3dadd( 6.51148, -55.1168, -91.3546, 0.55 ) }
    dend_15 { pt3dadd( 7.40708, -55.9616, -93.7112, 0.28 ) }
    dend_15 { pt3dadd( 8.11194, -56.6232, -95.4663, 0.55 ) }
    dend_15 { pt3dadd( 9.43216, -57.9295, -98.318, 0.28 ) }
    dend_15 { pt3dadd( 9.85093, -58.3347, -99.2125, 0.55 ) }
    dend_15 { pt3dadd( 10.7341, -59.0755, -100.822, 0.28 ) }
    dend_15 { pt3dadd( 11.0521, -59.3192, -101.324, 0.55 ) }
    dend_15 { pt3dadd( 11.6494, -59.7136, -102.018, 0.28 ) }
    dend_15 { pt3dadd( 12.209, -60.0453, -102.576, 0.55 ) }
    dend_15 { pt3dadd( 13.8277, -60.8574, -103.91, 0.28 ) }
    dend_15 { pt3dadd( 15.7038, -61.702, -105.404, 0.28 ) }
    dend_15 { pt3dadd( 16.6922, -62.084, -106.086, 0.28 ) }
    dend_15 { pt3dadd( 17.6567, -62.4302, -106.833, 0.55 ) }
    dend_15 { pt3dadd( 19.0634, -62.8603, -107.926, 0.28 ) }
    dend_15 { pt3dadd( 19.6968, -63.0415, -108.397, 0.83 ) }
    dend_15 { pt3dadd( 21.3461, -63.5323, -109.537, 0.28 ) }
    dend_15 { pt3dadd( 22.04, -63.7609, -110.073, 0.55 ) }
    dend_15 { pt3dadd( 25.0093, -64.8906, -112.585, 0.28 ) }
    dend_15 { pt3dadd( 26.4236, -65.4686, -113.968, 0.28 ) }
    dend_15 { pt3dadd( 27.4094, -65.8841, -115.048, 0.55 ) }
    dend_15 { pt3dadd( 27.9397, -66.1375, -115.753, 0.55 ) }
    dend_15 { pt3dadd( 29.2625, -66.8294, -117.759, 0.28 ) }
    dend_15 { pt3dadd( 30.4566, -67.5574, -119.705, 0.55 ) }
    dend_15 { pt3dadd( 31.5428, -68.2735, -121.48, 0.28 ) }
    dend_15 { pt3dadd( 32.48, -68.9396, -123.156, 0.55 ) }
    dend_15 { pt3dadd( 33.2594, -69.4752, -124.534, 0.28 ) }
    dend_15 { pt3dadd( 33.9303, -69.8409, -125.61, 0.55 ) }
    dend_15 { pt3dadd( 35.6167, -70.585, -128.1, 0.28 ) }
    dend_15 { pt3dadd( 36.5011, -70.9627, -129.318, 0.55 ) }
    dend_15 { pt3dadd( 37.8685, -71.5388, -131.086, 0.28 ) }
    dend_15 { pt3dadd( 39.0085, -71.9662, -132.5, 0.55 ) }
    dend_15 { pt3dadd( 41.6764, -72.8033, -135.804, 0.28 ) }
    dend_15 { pt3dadd( 42.7086, -73.0535, -137.231, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -14.9203, -184.755, 136.489, 0.55 ) }
    dend_9 { pt3dadd( -14.9144, -190.905, 139.286, 0.55 ) }
    dend_9 { pt3dadd( -14.5319, -197.544, 140.483, 0.55 ) }
    dend_9 { pt3dadd( -14.3848, -203.944, 142.644, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -14.9203, -184.755, 136.489, 0.55 ) }
    dend_8 { pt3dadd( -13.6372, -194.258, 142.743, 0.55 ) }
    dend_8 { pt3dadd( -13.2904, -202.299, 150.885, 0.55 ) }
    dend_8 { pt3dadd( -12.3166, -208.542, 160.432, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -17.8916, -182.73, 135.314, 0.55 ) }
    dend_6 { pt3dadd( -17.5418, -191.522, 140.374, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -17.8916, -182.73, 135.314, 0.55 ) }
    dend_5 { pt3dadd( -19.4624, -191.91, 140.854, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -1.46154, -109.623, 4.7406, 0.83 ) }
    dend_25 { pt3dadd( -0.698937, -113.718, 4.8612, 0.83 ) }
    dend_25 { pt3dadd( 0.191146, -117.187, 5.11965, 0.83 ) }
    dend_25 { pt3dadd( 1.0759, -120.635, 5.37656, 0.83 ) }
    dend_25 { pt3dadd( 1.91613, -123.909, 5.62054, 0.83 ) }
    dend_25 { pt3dadd( 3.21098, -128.955, 5.99653, 0.83 ) }
    dend_25 { pt3dadd( 4.49648, -133.964, 6.36981, 0.83 ) }
    dend_25 { pt3dadd( 5.76063, -137.309, 6.8786, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.46154, -109.623, 4.7406, 0.55 ) }
    dend_24 { pt3dadd( -0.0915106, -112.04, 4.14719, 0.55 ) }
    dend_24 { pt3dadd( 0.847349, -113.917, 3.40022, 0.55 ) }
    dend_24 { pt3dadd( 1.43775, -115.296, 2.7467, 0.55 ) }
    dend_24 { pt3dadd( 1.83846, -116.891, 1.88146, 0.83 ) }
    dend_24 { pt3dadd( 2.10696, -118.689, 0.739044, 0.55 ) }
    dend_24 { pt3dadd( 2.36959, -120.447, -0.378389, 0.83 ) }
    dend_24 { pt3dadd( 2.49241, -122.342, -1.71539, 0.55 ) }
    dend_24 { pt3dadd( 2.52504, -123.438, -2.58558, 0.83 ) }
    dend_24 { pt3dadd( 2.39258, -126.965, -5.60643, 0.55 ) }
    dend_24 { pt3dadd( 2.0116, -129.713, -8.0585, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 5.10681, -112.94, 58.8982, 0.55 ) }
    dend_20 { pt3dadd( 3.39234, -121.477, 66.5997, 0.55 ) }
    dend_20 { pt3dadd( 0.363111, -128.831, 75.0775, 0.55 ) }
    dend_20 { pt3dadd( -3.18074, -135.054, 84.234, 0.55 ) }
    dend_20 { pt3dadd( -7.50968, -139.887, 93.8791, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 5.10681, -112.94, 58.8982, 0.55 ) }
    dend_19 { pt3dadd( 6.58805, -120.476, 66.7451, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 5.76063, -137.309, 6.8786, 0.55 ) }
    dend_27 { pt3dadd( 5.95124, -140.111, 7.48916, 0.55 ) }
    dend_27 { pt3dadd( 6.3133, -143.696, 8.3254, 0.55 ) }
    dend_27 { pt3dadd( 6.65078, -147.08, 9.09686, 0.55 ) }
    dend_27 { pt3dadd( 6.85376, -149.483, 9.61866, 0.55 ) }
    dend_27 { pt3dadd( 7.15125, -153.767, 10.5009, 0.55 ) }
    dend_27 { pt3dadd( 8.07115, -165.812, 12.6354, 0.55 ) }
    dend_27 { pt3dadd( 8.42545, -169.902, 13.1637, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 8.64325, -172.783, 13.3954, 0.55 ) }
    dend_27 { pt3dadd( 8.84013, -176.069, 13.4013, 0.55 ) }
    dend_27 { pt3dadd( 8.88524, -178.6, 13.2043, 0.55 ) }
    dend_27 { pt3dadd( 9.08556, -184.518, 12.4578, 0.55 ) }
    dend_27 { pt3dadd( 9.08649, -189.003, 11.9324, 0.55 ) }
    dend_27 { pt3dadd( 9.18863, -191.954, 11.6466, 0.55 ) }
    dend_27 { pt3dadd( 9.5447, -199.618, 11.2874, 0.55 ) }
    dend_27 { pt3dadd( 9.82109, -204.774, 11.2733, 0.55 ) }
    dend_27 { pt3dadd( 10.3194, -211.435, 11.6012, 0.55 ) }
    dend_27 { pt3dadd( 11.152, -219.015, 12.496, 0.55 ) }
    dend_27 { pt3dadd( 12.0166, -224.096, 13.3209, 0.55 ) }
    dend_27 { pt3dadd( 12.6199, -227.105, 13.8622, 0.55 ) }
    dend_27 { pt3dadd( 13.1252, -229.877, 14.3692, 0.55 ) }
    dend_27 { pt3dadd( 13.7718, -233.384, 14.8376, 0.55 ) }
    dend_27 { pt3dadd( 15.0649, -241.819, 15.4575, 0.55 ) }
    dend_27 { pt3dadd( 15.6331, -245.085, 15.5495, 0.55 ) }
    dend_27 { pt3dadd( 16.1765, -248.717, 15.6549, 0.55 ) }
    dend_27 { pt3dadd( 16.9418, -254.168, 15.8001, 0.55 ) }
    dend_27 { pt3dadd( 17.3581, -258.35, 16.009, 0.55 ) }
    dend_27 { pt3dadd( 17.5206, -262.309, 16.2288, 0.55 ) }
    dend_27 { pt3dadd( 17.5163, -266.075, 16.4905, 0.55 ) }
    dend_27 { pt3dadd( 17.4684, -269.748, 16.8161, 0.55 ) }
    dend_27 { pt3dadd( 17.4416, -272.363, 17.0181, 0.55 ) }
    dend_27 { pt3dadd( 17.3785, -276.637, 17.1991, 0.55 ) }
    dend_27 { pt3dadd( 17.1166, -281.755, 17.0642, 0.55 ) }
    dend_27 { pt3dadd( 16.9947, -284.238, 16.799, 0.55 ) }
    dend_27 { pt3dadd( 16.8606, -286.415, 16.3996, 0.55 ) }
    dend_27 { pt3dadd( 16.7153, -290.525, 15.3521, 0.55 ) }
    dend_27 { pt3dadd( 16.5759, -293.126, 14.6261, 0.55 ) }
    dend_27 { pt3dadd( 16.4754, -296.339, 13.8375, 0.55 ) }
    dend_27 { pt3dadd( 16.3641, -298.596, 13.4419, 0.55 ) }
    dend_27 { pt3dadd( 16.0423, -304.467, 12.668, 0.55 ) }
    dend_27 { pt3dadd( 15.7923, -308.867, 12.4262, 0.55 ) }
    dend_27 { pt3dadd( 15.4637, -315.689, 12.6251, 0.55 ) }
    dend_27 { pt3dadd( 15.4672, -320.108, 13.1243, 0.55 ) }
    dend_27 { pt3dadd( 15.4816, -324.751, 13.804, 0.28 ) }
    dend_27 { pt3dadd( 15.4661, -326.617, 14.1649, 0.28 ) }
    dend_27 { pt3dadd( 15.5303, -331.157, 15.4417, 0.28 ) }
    dend_27 { pt3dadd( 15.6512, -335.358, 16.9515, 0.28 ) }
    dend_27 { pt3dadd( 16.4669, -340.955, 19.3402, 0.28 ) }
    dend_27 { pt3dadd( 18.9108, -353.536, 21.1733, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 5.76063, -137.309, 6.8786, 0.55 ) }
    dend_26 { pt3dadd( 7.40259, -138.011, 7.03225, 0.55 ) }
    dend_26 { pt3dadd( 10.7762, -139.733, 7.58926, 0.55 ) }
    dend_26 { pt3dadd( 13.6847, -141.393, 8.19114, 0.28 ) }
    dend_26 { pt3dadd( 16.805, -143.264, 8.929, 0.55 ) }
    dend_26 { pt3dadd( 18.7024, -144.446, 9.62434, 0.28 ) }
    dend_26 { pt3dadd( 22.0066, -146.56, 11.1283, 0.55 ) }
    dend_26 { pt3dadd( 23.3896, -147.644, 12.1449, 0.28 ) }
    dend_26 { pt3dadd( 23.8928, -148.035, 12.6038, 0.28 ) }
    dend_26 { pt3dadd( 24.7726, -148.603, 13.4068, 0.55 ) }
    dend_26 { pt3dadd( 28.2412, -150.511, 16.2522, 0.28 ) }
    dend_26 { pt3dadd( 29.7265, -151.265, 17.4004, 0.55 ) }
    dend_26 { pt3dadd( 34.2529, -153.478, 20.3326, 0.28 ) }
    dend_26 { pt3dadd( 36.7291, -154.588, 21.7399, 0.28 ) }
    dend_26 { pt3dadd( 39.8203, -156.012, 23.3071, 0.55 ) }
    dend_26 { pt3dadd( 44.4267, -158.216, 25.2298, 0.28 ) }
    dend_26 { pt3dadd( 45.0517, -158.511, 25.422, 0.55 ) }
    dend_26 { pt3dadd( 48.1297, -159.953, 26.158, 0.28 ) }
    dend_26 { pt3dadd( 48.4083, -160.087, 26.1941, 0.55 ) }
    dend_26 { pt3dadd( 50.8401, -161.6, 26.5928, 0.28 ) }
    dend_26 { pt3dadd( 51.9917, -162.411, 26.8555, 0.55 ) }
    dend_26 { pt3dadd( 61.5171, -168.486, 29.0938, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -7.50968, -139.887, 93.8791, 0.55 ) }
    dend_22 { pt3dadd( -8.57234, -143.295, 102.237, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -7.50968, -139.887, 93.8791, 0.55 ) }
    dend_21 { pt3dadd( -10.6363, -146.09, 100.422, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 3
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_2 nseg = 5
    dend_61 nseg = 13
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 11
    dend_35 nseg = 5
    dend_31 nseg = 5
    dend_30 nseg = 11
    dend_12 nseg = 5
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_59 nseg = 5
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 5
    dend_16 nseg = 9
    dend_15 nseg = 9
    dend_20 nseg = 3
    dend_27 nseg = 11
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L5_BP_706acf4049_0_0


