// Cell: Cell_479427369
/*
{
  "id" : "Cell_479427369",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "451.146, 461.947, 36.4, 12.6792", "457.486, 461.947, 36.4, 12.6792", "463.825, 461.947, 36.4, 12.6792" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "457.486, 461.947, 36.4, 1.0", "463.327, 475.763, 36.4, 1.0", "469.168, 489.579, 36.4, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000394352866936
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "460.579, 465.964, 37.0824, 1.144", "460.691, 466.984, 36.2608, 0.9174", "460.711, 468.1, 35.9304, 0.8544", "460.797, 469.139, 35.5054, 0.8892", "461.138, 470.214, 35.1795, 0.9042", "461.535, 471.247, 35.0568, 0.7136", "462.424, 471.925, 35.0322, 0.7346", "463.545, 472.109, 35.0529, 0.7864", "464.545, 472.573, 35.1613, 0.8198", "465.448, 473.269, 35.2041, 0.957", "466.338, 473.909, 35.0484, 1.0758", "467.355, 474.364, 34.7673, 1.0382" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000394352866936
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "451.823, 462.683, 37.3355, 1.0296", "450.941, 463.282, 37.66, 1.0296", "449.996, 463.903, 37.8235, 1.0296", "448.938, 464.184, 37.8535, 1.0296", "447.904, 464.107, 37.7244, 1.0296", "446.807, 463.821, 37.648, 1.0296", "445.77, 463.786, 37.793, 1.0296", "444.699, 463.832, 38.0775, 1.0296", "443.592, 464.108, 38.3561, 1.0296", "442.497, 464.214, 38.7033, 1.0296" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000394352866936
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "459.245, 466.777, 36.7814, 0.2288", "459.635, 467.851, 36.8334, 0.376", "459.604, 468.991, 36.8522, 0.3386", "459.615, 470.134, 36.8684, 0.3086", "459.469, 471.264, 36.8827, 0.2906", "459.401, 472.391, 36.8962, 0.3054", "459.551, 473.525, 36.9102, 0.3264", "459.724, 474.656, 36.9258, 0.396", "459.904, 475.785, 36.9474, 0.377", "460.069, 476.918, 36.9776, 0.3748", "460.238, 478.048, 37.0219, 0.4386", "460.471, 479.168, 37.0829, 0.4558", "460.802, 480.234, 37.1627, 0.5198", "461.588, 481.061, 37.2627, 0.713", "462.039, 482.064, 37.452, 0.938", "462.353, 483.124, 37.7409, 0.8564", "462.905, 484.116, 37.9977, 0.8402", "463.64, 484.992, 38.2239, 0.8406", "464.196, 485.821, 38.5042, 0.9216", "464.828, 486.715, 38.7402, 0.9108", "465.331, 487.707, 38.9497, 0.7566", "465.608, 488.759, 39.1933, 0.6662", "465.608, 489.902, 39.4618, 0.6918", "465.608, 491.046, 39.7594, 0.7166", "465.824, 492.161, 40.0963, 0.6452", "466.292, 492.912, 40.8078, 0.625", "467.332, 493.174, 41.461, 0.4994", "467.96, 493.546, 42.3021, 0.4668", "468.716, 493.56, 43.1469, 0.5782", "469.631, 493.935, 44.0068, 0.6354", "470.492, 494.602, 44.6984, 0.5518", "471.342, 495.365, 45.1559, 0.4016", "472.232, 496.085, 45.4563, 0.3308", "473.208, 496.669, 45.6162, 0.3338", "474.262, 497.106, 45.6946, 0.3736", "474.911, 498.003, 45.726, 0.5104", "475.907, 498.565, 45.7503, 0.4596", "476.743, 499.328, 45.7976, 0.4688", "477.754, 499.585, 45.8615, 0.442", "478.898, 499.585, 45.9144, 0.3768", "479.454, 500.262, 45.9964, 0.332", "479.932, 501.285, 46.0564, 0.3362", "480.629, 502.162, 46.0992, 0.3782", "481.605, 502.677, 46.083, 0.5184", "482.452, 503.409, 46.0491, 0.4746", "483.094, 504.354, 46.0463, 0.4976", "483.874, 505.148, 46.0916, 0.49", "484.465, 505.762, 46.2568, 0.4912", "485.459, 506.237, 46.4509, 0.4208", "485.861, 507.033, 46.6393, 0.412", "486.314, 508.05, 46.8723, 0.4922", "486.531, 508.749, 47.3908, 0.6306", "486.658, 509.309, 47.9198, 0.4782", "486.992, 510.083, 48.4568, 0.3514", "487.178, 511.136, 49.0703, 0.2758", "487.178, 512.237, 49.6916, 0.2766", "487.448, 512.729, 50.4697, 0.2784", "487.751, 512.888, 51.212, 0.2816", "488.027, 513.997, 51.7868, 0.2876", "488.361, 515.088, 52.2152, 0.3", "488.552, 516.216, 52.519, 0.3164", "489.023, 516.741, 52.8452, 0.3778", "489.752, 517.584, 53.114, 0.3416", "490.588, 518.361, 53.3207, 0.3144", "491.28, 519.262, 53.4999, 0.3014", "491.803, 520.276, 53.6595, 0.3246", "492.105, 521.371, 53.8115, 0.3644", "492.215, 522.475, 54.0212, 0.4564", "492.553, 523.515, 54.2326, 0.5388", "493.24, 524.359, 54.5247, 0.432", "493.802, 525.311, 54.8814, 0.3512", "494.272, 526.343, 55.2059, 0.3172", "494.546, 527.454, 55.5117, 0.3788", "494.759, 528.577, 55.8104, 0.3438", "495.417, 529.513, 56.1212, 0.3188", "495.644, 530.167, 56.6958, 0.3088", "495.646, 531.238, 57.3583, 0.339", "495.734, 532.319, 58.0507, 0.3908", "496.161, 533.34, 58.7059, 0.5072", "496.924, 534.151, 59.2855, 0.6222", "497.316, 535.105, 59.8063, 0.6388", "498.354, 535.254, 60.2381, 0.4802", "499.247, 535.8, 60.5427, 0.418", "499.88, 536.74, 60.767, 0.322", "500.66, 537.539, 60.9846, 0.2796", "501.598, 538.177, 61.1282, 0.2288", "502.74, 538.208, 61.2881, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000394352866936,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "458.585, 457.043, 37.1006, 1.144", "459.053, 456.112, 35.5622, 1.144", "459.806, 455.464, 34.8855, 1.144", "460.096, 454.777, 33.9385, 1.144", "460.056, 453.986, 32.8653, 1.144", "460.694, 453.216, 31.8265, 1.144", "461.359, 452.476, 30.8966, 1.144", "461.954, 451.504, 30.2453, 1.144", "462.604, 450.639, 29.9942, 1.144", "463.151, 449.94, 30.1493, 1.144", "463.796, 449.018, 30.3601, 1.144", "464.286, 447.985, 30.4718, 1.144", "464.639, 446.909, 30.4041, 1.144" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000394352866936
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "452.047, 463.735, 31.3513, 0.7092", "450.966, 464.111, 31.4381, 0.7092", "449.848, 464.35, 31.4639, 0.7092", "449.094, 464.197, 31.5487, 0.7092", "448.13, 463.582, 31.6159, 0.7092", "447.154, 462.988, 31.6663, 0.7092", "446.083, 462.586, 31.7005, 0.7092", "444.984, 462.309, 31.7195, 0.7092", "443.845, 462.223, 31.7246, 0.7092", "442.703, 462.136, 31.7164, 0.7092", "441.788, 461.478, 31.7047, 0.7092", "440.861, 460.812, 31.6884, 0.7092", "439.863, 460.252, 31.6655, 0.7092", "438.776, 459.944, 31.6338, 0.7092", "437.648, 459.746, 31.5899, 0.7092", "437.151, 459.033, 31.5272, 0.7092", "437.15, 457.891, 31.4384, 0.7092", "436.786, 456.869, 31.3163, 0.7092", "436.047, 455.996, 31.1576, 0.7092", "435.35, 455.115, 30.9263, 0.7092", "434.762, 454.215, 30.5407, 0.7092", "434.174, 453.315, 30.0518, 0.7092", "433.586, 452.414, 29.5084, 0.7092", "432.898, 451.526, 29.0514, 0.7092", "432.171, 450.643, 28.7255, 0.7092", "431.169, 450.121, 28.5202, 0.7092", "430.159, 449.589, 28.4175, 0.7092", "429.181, 448.995, 28.3833, 0.7092", "428.203, 448.401, 28.3892, 0.7092", "427.529, 447.481, 28.4088, 0.7092", "426.871, 446.563, 28.4371, 0.7092", "426.594, 445.595, 28.448, 0.7092", "426.052, 444.604, 28.5099, 0.7092", "425.42, 443.651, 28.6185, 0.7092", "424.819, 442.679, 28.7412, 0.7092", "424.361, 442.071, 29.0917, 0.7092", "423.952, 441.254, 29.514, 0.7092", "423.51, 440.199, 29.8474, 0.7092", "422.963, 439.201, 30.0899, 0.7092", "422.26, 438.303, 30.2506, 0.7092", "421.466, 437.48, 30.3397, 0.7092", "420.56, 436.796, 30.3629, 0.7092", "419.598, 436.181, 30.3629, 0.7092", "418.751, 435.411, 30.3629, 0.7092", "417.98, 434.583, 30.3629, 0.7092", "417.271, 433.76, 30.3629, 0.7092", "416.203, 433.347, 30.3626, 0.7092", "415.424, 432.522, 30.3626, 0.7092", "414.898, 431.508, 30.3626, 0.7092", "414.315, 430.539, 30.3624, 0.7092", "413.424, 429.82, 30.3621, 0.7092", "412.436, 429.28, 30.3618, 0.7092", "411.353, 428.911, 30.3615, 0.7092", "410.27, 428.542, 30.361, 0.7092", "409.187, 428.173, 30.3601, 0.7092", "408.426, 427.406, 30.359, 0.7092", "407.812, 426.442, 30.3573, 0.7092", "407.103, 425.545, 30.3551, 0.7092", "406.305, 424.729, 30.352, 0.7092", "405.463, 423.955, 30.3478, 0.7092", "404.621, 423.181, 30.3416, 0.7092", "403.795, 422.389, 30.3332, 0.7092", "403.009, 421.567, 30.3212, 0.7092", "402.531, 420.529, 30.305, 0.7092", "402.065, 419.483, 30.282, 0.7092", "401.635, 418.425, 30.249, 0.7092", "401.279, 417.339, 30.2028, 0.7092", "400.807, 416.297, 30.1409, 0.7092", "400.335, 415.255, 30.0619, 0.7092", "399.771, 414.272, 29.9239, 0.7092", "399.172, 413.311, 29.729, 0.7092", "398.575, 412.35, 29.4997, 0.7092", "397.978, 411.389, 29.2566, 0.7092", "397.228, 410.546, 29.0548, 0.7092", "396.328, 409.844, 28.9218, 0.7092", "395.38, 409.204, 28.856, 0.7092", "394.553, 408.447, 28.8473, 0.7092", "393.952, 407.473, 28.884, 0.7092", "393.54, 406.989, 28.9542, 0.7092", "392.775, 406.206, 29.0682, 0.7092", "392.329, 405.166, 29.2488, 0.7092", "391.883, 404.127, 29.4736, 0.7092", "391.436, 403.087, 29.7212, 0.7092", "391.216, 402.026, 29.9533, 0.7092", "391.493, 400.916, 30.1179, 0.7092", "391.204, 399.963, 30.219, 0.7092", "390.396, 399.154, 30.2646, 0.7092", "389.674, 398.273, 30.2686, 0.7092", "389.039, 397.322, 30.2414, 0.7092", "388.542, 396.292, 30.1927, 0.7092", "388.055, 395.257, 30.128, 0.7092", "387.568, 394.221, 30.0378, 0.7092", "387.096, 393.187, 29.8928, 0.7092", "386.631, 392.152, 29.694, 0.7092", "386.165, 391.118, 29.4624, 0.7092", "385.701, 390.082, 29.2169, 0.7092", "385.234, 389.048, 28.6762, 0.7092" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000394352866936,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "458.98, 457.089, 37.2464, 5.139", "459.316, 455.998, 37.5768, 2.1366" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000394352866936
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "469.168, 489.579, 36.4, 1.0", "475.009, 503.395, 36.4, 1.0", "480.851, 517.211, 36.4, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "467.355, 474.364, 34.7673, 1.0382", "468.268, 474.634, 34.3608, 0.8484", "469.382, 474.623, 33.9391, 0.8512", "470.495, 474.385, 33.6272, 0.7338", "471.536, 474.679, 33.5227, 0.8838", "472.628, 475.015, 33.4446, 0.9772", "473.605, 475.489, 33.2707, 0.9044" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "467.355, 474.364, 34.7673, 1.0382", "466.711, 474.477, 33.6227, 1.3728", "466.635, 475.343, 33.3665, 0.767", "466.782, 476.477, 33.2763, 0.526", "466.418, 477.558, 33.1926, 0.5208", "465.855, 478.555, 33.112, 0.6546", "465.475, 479.628, 33.0322, 0.6638", "465.157, 480.727, 32.9526, 0.6974", "464.933, 481.825, 32.8348, 0.6778", "464.872, 482.922, 32.6141, 0.583", "464.358, 483.906, 32.4159, 0.4602", "463.618, 484.779, 32.2644, 0.4348", "462.826, 485.591, 32.1728, 0.5488", "462.303, 486.547, 32.1594, 0.6654", "461.984, 487.371, 32.1899, 0.8836", "461.194, 488.13, 32.1006, 0.8214", "460.579, 489.079, 31.9841, 0.6836", "460.122, 490.112, 31.8942, 0.5368", "459.657, 491.121, 31.7461, 0.6532", "459.174, 492.115, 31.4429, 0.583", "458.514, 492.988, 31.0492, 0.4692", "457.732, 493.806, 30.6292, 0.4062", "457.226, 494.77, 30.1535, 0.4876", "457.061, 495.812, 29.5901, 0.5914", "457.033, 496.911, 29.0578, 0.5548", "457.028, 498.034, 28.5852, 0.4558", "457.02, 499.164, 28.2061, 0.4224", "456.772, 500.253, 27.967, 0.5472", "456.201, 501.226, 27.802, 0.5586", "455.793, 502.269, 27.6153, 0.5036", "455.672, 503.351, 27.3053, 0.542", "455.681, 504.26, 26.7705, 0.6174", "455.048, 504.841, 26.3416, 0.739", "454.327, 505.718, 25.9616, 0.822", "453.583, 506.57, 25.5735, 0.7522", "452.814, 507.365, 25.1451, 0.566", "451.952, 508.076, 24.7142, 0.4972", "451.168, 508.839, 24.2488, 0.6278", "451.078, 509.906, 23.732, 0.7606", "451.064, 511.039, 23.35, 0.6234", "450.99, 512.18, 23.0555, 0.6262", "450.713, 513.272, 22.7483, 0.529", "450.045, 514.196, 22.4661, 0.6178", "449.198, 514.867, 22.0956, 0.6208", "448.353, 514.867, 21.7196, 0.494", "447.234, 514.869, 21.3245, 0.4436", "446.134, 515.078, 21.0168, 0.3698", "445.393, 515.943, 20.7833, 0.367", "444.458, 516.461, 20.5996, 0.3954", "443.332, 516.622, 20.4501, 0.516", "442.629, 517.446, 20.3053, 0.6384", "441.677, 517.915, 20.109, 0.6688", "440.737, 518.263, 19.7039, 0.5356", "439.669, 518.63, 19.3385, 0.5224", "438.594, 518.74, 19.0086, 0.5084", "437.497, 518.461, 18.7046, 0.6582", "436.382, 518.301, 18.4195, 0.7708", "435.367, 518.463, 17.9897, 0.6376", "435.006, 519.445, 17.6212, 0.6774", "434.219, 519.445, 16.9557, 0.5032", "433.075, 519.466, 16.4184, 0.47", "432.639, 520.426, 15.9978, 0.3728", "431.834, 521.185, 15.6825, 0.3666", "430.706, 521.275, 15.4596, 0.4246", "429.579, 521.308, 15.2513, 0.4244", "428.802, 521.936, 14.9722, 0.4888", "428.902, 522.658, 14.7286, 0.5228", "429.057, 523.792, 14.5242, 0.5414" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "442.497, 464.214, 38.7033, 1.0296", "440.805, 463.932, 40.3021, 0.9152", "439.699, 463.782, 40.864, 0.8086", "438.558, 463.727, 41.0794, 0.8194", "437.441, 463.525, 41.3118, 0.701", "436.367, 463.352, 41.6284, 0.6948", "435.29, 463.339, 42.0269, 0.5636", "434.174, 463.439, 42.387, 0.673", "433.116, 463.481, 42.5905, 0.5366", "432.251, 464.201, 42.728, 0.5576", "431.249, 464.709, 42.8126, 0.4102", "430.108, 464.755, 42.8574, 0.3564", "428.965, 464.755, 42.887, 0.3342", "427.82, 464.755, 42.9288, 0.375", "426.685, 464.721, 43.0004, 0.5114", "425.64, 464.304, 43.1589, 0.4674", "424.497, 464.297, 43.3073, 0.4546", "423.353, 464.297, 43.4448, 0.5548", "422.229, 464.229, 43.5915, 0.5972", "421.19, 463.866, 43.8292, 0.4558", "420.135, 463.458, 44.0426, 0.347", "419.118, 462.941, 44.1946, 0.315", "418.033, 462.709, 44.3027, 0.349", "416.892, 462.655, 44.3699, 0.4162", "415.759, 462.492, 44.4004, 0.5182", "415.302, 461.969, 44.401, 0.8188", "414.549, 461.106, 44.3943, 0.8354", "413.803, 460.24, 44.3834, 0.745", "413.062, 459.372, 44.3677, 0.7068", "412.391, 458.452, 44.3475, 0.6958", "411.549, 457.677, 44.3234, 0.6116", "410.76, 456.853, 44.2974, 0.5384", "410.207, 455.9, 44.1918, 0.4566", "409.152, 455.567, 44.1165, 0.5016", "408.125, 455.092, 44.0756, 0.5462", "407.262, 454.343, 44.0709, 0.586", "406.359, 453.661, 44.102, 0.6416", "405.284, 453.312, 44.1672, 0.6038", "404.14, 453.287, 44.2635, 0.5302", "403.499, 452.974, 44.5486, 0.6408", "402.711, 452.197, 44.7885, 0.5604", "402.087, 451.393, 44.9884, 0.4268", "401.23, 450.85, 45.1562, 0.3306", "400.127, 450.671, 45.3023, 0.332", "399.04, 450.33, 45.4398, 0.3768", "397.947, 450.022, 45.5826, 0.4852", "396.866, 449.68, 45.768, 0.5634", "395.799, 449.353, 46.0491, 0.6196", "394.772, 449.234, 46.4898, 0.6938", "393.909, 448.735, 47.0445, 0.7484", "393.091, 448.435, 47.7022, 0.567", "392.729, 447.529, 48.2255, 0.4592", "392.01, 446.683, 48.6352, 0.5212", "390.953, 446.284, 48.9527, 0.5098", "389.866, 445.98, 49.2052, 0.4168", "388.961, 445.309, 49.4276, 0.362", "388.147, 444.685, 49.6488, 0.3786", "387.872, 444.026, 50.2272, 0.5206", "387.23, 443.452, 50.8738, 0.4722", "386.161, 443.06, 51.3766, 0.523", "385.039, 442.855, 51.7434, 0.3934", "383.898, 442.792, 51.9854, 0.3254", "382.755, 442.792, 52.1139, 0.2746", "381.611, 442.792, 52.1416, 0.2746", "380.467, 442.792, 52.1368, 0.2746", "379.116, 442.792, 52.1304, 0.2746", "377.971, 442.792, 52.1212, 0.2746", "376.828, 442.792, 52.1083, 0.2746", "375.684, 442.792, 52.0906, 0.2746", "374.54, 442.792, 52.066, 0.2746", "373.398, 442.856, 52.0302, 0.2746", "372.262, 442.976, 51.9798, 0.2746", "371.124, 443.096, 51.9137, 0.2746", "370.099, 443.602, 51.8308, 0.2746", "368.993, 443.707, 51.6779, 0.2746", "367.865, 443.707, 51.4576, 0.2746", "366.73, 443.707, 51.2145, 0.2746", "365.587, 443.707, 51.0034, 0.2746", "364.443, 443.707, 50.8211, 0.2744", "363.333, 443.507, 50.601, 0.2744", "362.225, 443.299, 50.3588, 0.2742", "361.121, 443.035, 50.1379, 0.2736", "360.02, 442.72, 49.9626, 0.2728", "358.909, 442.472, 49.8106, 0.2712", "357.767, 442.414, 49.6818, 0.2684", "356.624, 442.358, 49.5765, 0.2626", "355.509, 442.163, 49.4525, 0.2542", "354.414, 441.87, 49.2881, 0.2288", "353.407, 441.418, 48.7522, 0.2288" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "442.497, 464.214, 38.7033, 1.0296", "441.391, 464.192, 38.9166, 0.7342", "440.256, 464.045, 39.0152, 0.7504", "439.122, 463.899, 39.0051, 0.6962", "437.987, 463.754, 38.9242, 0.5468", "436.885, 463.643, 38.7173, 0.507", "435.795, 463.543, 38.3939, 0.6536", "434.714, 463.413, 38.0912, 0.7722", "433.592, 463.195, 37.8473, 0.8218", "432.458, 463.139, 37.6547, 0.8228", "431.316, 463.209, 37.5046, 0.8098", "430.176, 463.151, 37.3884, 0.8574", "429.038, 463.138, 37.2492, 0.596", "427.9, 463.144, 37.067, 0.4374", "426.762, 463.148, 36.8469, 0.3902", "425.624, 463.154, 36.6002, 0.4798", "424.486, 463.16, 36.3376, 0.6994", "423.348, 463.164, 36.062, 0.8462", "422.331, 463.656, 35.8095, 1.0118", "421.247, 463.93, 35.5667, 0.9182", "420.105, 464.002, 35.3178, 0.859", "418.974, 463.881, 35.0518, 0.6536", "418.02, 463.614, 34.5635, 0.507", "417.072, 463.346, 33.9049, 0.4724", "416.077, 463.541, 33.2489, 0.6296", "415.016, 463.956, 32.692, 0.7622", "413.919, 464.28, 32.2224, 0.634", "412.828, 464.49, 31.7895, 0.6104", "411.751, 464.451, 31.3088, 0.672", "410.959, 464.259, 30.6779, 0.7328", "409.941, 464.122, 30.1014, 0.6462", "408.803, 464.189, 29.6444, 0.767", "407.75, 464.494, 29.3482, 0.7688", "406.74, 465.017, 29.1343, 0.7066", "405.846, 465.646, 28.891, 0.6816", "404.937, 466.19, 28.5592, 0.6534", "403.879, 466.456, 28.271, 0.5126", "402.747, 466.513, 28.07, 0.4538", "401.626, 466.522, 27.8382, 0.5058", "400.501, 466.557, 27.5901, 0.7362", "399.435, 466.894, 27.384, 0.971", "398.451, 467.476, 27.2056, 0.967", "397.601, 468.203, 26.9696, 0.8058", "396.628, 468.688, 26.679, 0.5638", "395.53, 468.992, 26.4152, 0.5276", "394.42, 469.072, 26.243, 0.5166", "393.398, 468.89, 25.9722, 0.6828", "392.788, 469.116, 25.5674, 0.7712", "391.767, 469.623, 25.2608, 0.8564", "390.749, 470.105, 24.9533, 0.7104", "389.7, 470.509, 24.6574, 0.7718", "388.596, 470.711, 24.4706, 0.8754", "387.512, 470.961, 24.325, 0.8884", "386.4, 471.139, 24.1483, 0.8662", "385.303, 471.427, 23.9655, 0.8204", "384.327, 472.001, 23.7857, 0.9878", "383.463, 472.709, 23.5508, 0.9892", "382.613, 473.434, 23.2702, 0.8896", "381.677, 474.085, 23.0104, 0.7416", "380.591, 474.388, 22.8189, 0.747", "379.513, 474.762, 22.675, 0.7722", "378.47, 475.23, 22.542, 0.7452", "377.657, 476.02, 22.4017, 0.8252", "377.147, 477.031, 22.2144, 0.7988", "376.637, 477.953, 21.8733, 0.6836", "375.772, 478.592, 21.4561, 0.7906", "374.711, 479.003, 21.0669, 0.8074", "373.688, 479.505, 20.7444, 0.8024", "372.717, 480.112, 20.475, 0.741", "371.808, 480.783, 20.2325, 0.6504", "371.135, 481.673, 19.9685, 0.599", "370.695, 482.702, 19.6655, 0.6262", "370.312, 483.761, 19.3416, 0.5372", "369.773, 484.719, 18.9988, 0.5912", "368.928, 485.47, 18.748, 0.5456", "368.027, 486.134, 18.545, 0.4798", "367.345, 487.0, 18.3117, 0.4974", "366.879, 488.044, 18.0914, 0.539", "366.29, 488.997, 17.836, 0.571", "365.454, 489.733, 17.505, 0.6218", "364.734, 490.532, 17.0946, 0.528", "364.372, 491.582, 16.6522, 0.5802", "363.997, 492.648, 16.2442, 0.4946", "363.278, 493.504, 15.8794, 0.5348", "362.273, 493.995, 15.5347, 0.5606", "361.296, 494.465, 15.1248, 0.6144", "360.35, 494.881, 14.5905, 0.6844", "359.309, 495.178, 14.0011, 0.7312", "358.208, 495.351, 13.4252, 0.5326", "357.092, 495.48, 12.8862, 0.4074", "356.095, 495.935, 12.4043, 0.3688", "355.217, 496.65, 12.0263, 0.5016", "354.315, 497.321, 11.7166, 0.442", "353.391, 497.971, 11.5175, 0.4414", "352.572, 498.742, 11.4601, 0.3654", "351.793, 499.571, 11.4559, 0.3592", "350.755, 499.719, 11.4489, 0.38", "349.638, 499.894, 11.4215, 0.4922", "348.573, 500.303, 11.3624, 0.5714", "347.508, 500.72, 11.2518, 0.6566", "346.51, 501.165, 11.0048, 0.6542", "345.461, 501.297, 10.6375, 0.516", "344.353, 501.324, 10.3916, 0.4492", "343.245, 501.477, 10.1419, 0.5508", "342.117, 501.581, 9.9904, 0.5592", "340.999, 501.608, 9.8092, 0.5338", "339.875, 501.756, 9.6412, 0.4576", "338.738, 501.758, 9.52, 0.4576" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "464.639, 446.909, 30.4041, 1.144", "465.714, 446.174, 31.8718, 0.6864", "466.681, 445.575, 31.367, 0.8788", "467.572, 444.999, 31.0887, 0.812", "468.523, 444.461, 30.7434, 0.6678", "469.393, 443.727, 30.4797, 0.7292", "470.352, 443.157, 30.3775, 0.8484", "471.391, 442.701, 30.3643, 0.815", "472.323, 442.04, 30.3677, 0.8436", "473.146, 441.246, 30.3708, 0.9156", "473.984, 440.525, 30.2672, 0.9546" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "464.639, 446.909, 30.4041, 1.144", "464.783, 446.186, 29.9622, 0.9148" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_28",
    "id" : "apic_28",
    "points3d" : [ "459.316, 455.998, 37.5768, 2.1366", "460.487, 456.251, 36.3104, 1.6016", "461.406, 456.384, 32.9484, 1.0084", "461.56, 456.265, 31.4474, 0.709", "461.286, 456.821, 29.7083, 0.771", "460.812, 456.882, 27.827, 0.8644", "460.572, 456.7, 25.9059, 0.6864", "460.135, 456.559, 21.931, 0.9152" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "459.316, 455.998, 37.5768, 2.1366", "460.457, 455.771, 37.9016, 1.1176", "461.463, 455.258, 38.2502, 1.3662", "461.772, 454.278, 38.7321, 1.3846", "462.27, 453.334, 39.2804, 1.2776", "463.099, 452.602, 39.807, 1.3078", "464.053, 451.985, 40.2564, 1.1682", "464.764, 451.09, 40.5824, 1.1726", "465.531, 450.242, 40.7974, 1.2772", "466.342, 449.434, 40.9217, 1.2316", "467.157, 448.63, 40.9965, 1.164", "467.987, 447.844, 41.0561, 1.1864" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "473.605, 475.489, 33.2707, 0.9044", "474.838, 475.349, 33.0218, 0.4576", "475.76, 474.678, 32.5822, 0.562", "476.536, 473.856, 32.3954, 0.7724", "477.176, 472.94, 32.1146, 0.6806", "477.796, 471.996, 31.81, 0.5622", "478.125, 470.924, 31.474, 0.5508", "478.325, 469.844, 31.0873, 0.6628", "478.707, 468.765, 30.7566, 0.68", "479.102, 467.691, 30.4674, 0.7212", "479.564, 466.65, 30.1938, 0.7536", "480.1, 465.67, 29.8668, 0.5692", "480.402, 464.653, 29.4157, 0.498", "480.599, 463.578, 28.9145, 0.4268", "481.196, 462.643, 28.4301, 0.4564", "482.148, 462.137, 27.9418, 0.6418", "483.258, 462.067, 27.4394, 0.5812", "484.312, 461.821, 26.9592, 0.6002", "485.17, 461.151, 26.469, 0.6838", "486.027, 460.452, 26.0025, 0.6036", "486.911, 459.768, 25.606, 0.4546", "487.845, 459.264, 25.3095, 0.4082", "488.943, 459.067, 25.0936, 0.351", "489.677, 458.3, 24.7948, 0.3316", "490.526, 457.552, 24.5608, 0.335", "491.299, 456.771, 24.3849, 0.3762", "492.318, 456.099, 24.3144, 0.5134", "493.057, 455.234, 24.2435, 0.4728", "493.771, 454.341, 24.1559, 0.457", "494.629, 453.669, 24.0481, 0.5962", "495.135, 453.605, 23.6964, 0.4938", "496.053, 453.033, 23.3299, 0.4528", "496.293, 452.929, 22.9692, 0.3398", "497.263, 452.468, 22.5456, 0.311", "498.125, 451.722, 22.2222, 0.295", "499.118, 451.157, 21.9887, 0.312", "500.147, 450.655, 21.833, 0.3446", "501.254, 450.368, 21.7084, 0.4024", "502.383, 450.258, 21.574, 0.5212", "503.505, 450.109, 21.4057, 0.6866", "504.648, 450.109, 21.2492, 0.5716", "505.571, 449.876, 21.0409, 0.5752", "505.762, 448.824, 20.7959, 0.4436", "506.251, 447.892, 20.6018, 0.4144", "507.234, 447.533, 20.4523, 0.4608", "508.368, 447.635, 20.335, 0.517", "509.348, 447.089, 20.2334, 0.537", "510.479, 446.961, 20.1376, 0.5266", "511.617, 446.961, 19.9886, 0.5068", "512.614, 447.304, 19.8148, 0.475", "513.172, 447.19, 19.6101, 0.3906", "514.164, 446.753, 19.3715, 0.3572", "514.249, 445.8, 18.9787, 0.3836", "514.887, 445.106, 18.4752, 0.4628", "515.258, 445.016, 17.7766, 0.691", "516.158, 445.016, 17.1948, 0.7202", "517.279, 445.016, 16.6709, 0.627", "518.27, 444.711, 16.2277, 0.4828", "518.677, 444.694, 15.8385, 0.5328", "519.786, 444.673, 15.4543, 0.4578", "520.916, 444.516, 15.1323, 0.4482", "522.016, 444.206, 14.8212, 0.4884", "523.138, 443.986, 14.52, 0.739", "523.885, 443.332, 13.9919, 0.8066", "523.609, 443.071, 13.2535, 0.7996", "523.961, 442.493, 12.682, 0.742", "524.267, 441.397, 12.255, 0.6228", "524.755, 440.392, 11.9619, 0.6916", "525.676, 439.985, 11.7897, 0.7844", "526.791, 440.05, 11.7228, 0.6688", "527.591, 439.248, 11.7046, 0.7066", "528.302, 438.359, 11.6682, 0.6954", "528.536, 437.279, 11.6819, 0.8418", "529.023, 436.247, 11.639, 0.7576", "529.328, 435.178, 11.5374, 0.9564", "529.328, 434.377, 11.3422, 0.9746", "529.544, 433.983, 10.8326, 0.879", "529.617, 433.615, 10.2998, 0.872", "529.602, 433.227, 9.8232, 0.949", "529.5, 432.87, 9.4735, 1.1102", "529.297, 432.616, 9.2414, 1.322", "529.093, 432.413, 9.116, 1.2202", "528.737, 432.26, 9.07, 0.9152" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "473.605, 475.489, 33.2707, 0.9044", "473.913, 475.845, 33.0596, 0.5908", "474.719, 476.657, 32.9123, 0.4182", "475.578, 477.412, 32.816, 0.4024", "476.531, 478.04, 32.7723, 0.4976", "477.503, 478.596, 32.8336, 0.756", "478.473, 479.174, 32.9801, 0.8372", "479.385, 479.799, 33.2212, 0.8598", "480.196, 480.587, 33.4589, 0.8372", "480.884, 481.499, 33.6182, 0.879", "481.788, 482.156, 33.6381, 0.7784", "482.737, 482.759, 33.6834, 0.7718", "483.604, 483.499, 33.6731, 0.8012", "484.568, 484.041, 33.5292, 0.6532", "485.637, 484.439, 33.3939, 0.6762", "486.565, 485.021, 33.3928, 0.6464", "487.581, 485.541, 33.3516, 0.7136", "488.639, 485.89, 33.194, 0.7024", "489.745, 486.179, 33.0344, 0.6548" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "429.057, 523.792, 14.5242, 0.5414", "429.057, 524.572, 14.6191, 0.6864", "429.573, 525.252, 14.3279, 0.6218", "430.659, 525.395, 14.1537, 0.5216", "431.803, 525.395, 14.0512, 0.6002", "432.947, 525.395, 14.0218, 0.6056", "434.091, 525.395, 14.063, 0.6106", "435.234, 525.395, 14.1708, 0.6432", "436.262, 525.266, 14.5211, 0.5932", "437.305, 525.166, 14.9912, 0.5764", "438.449, 525.166, 15.3723, 0.4068", "439.588, 525.166, 15.7013, 0.305", "440.728, 525.166, 15.969, 0.2288", "441.871, 525.166, 16.3061, 0.2288" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "429.057, 523.792, 14.5242, 0.5414", "428.789, 524.098, 14.303, 0.5644", "428.095, 524.89, 13.9902, 0.4326", "427.385, 525.769, 13.7676, 0.351", "426.564, 526.564, 13.6511, 0.323", "426.129, 526.876, 13.8034, 0.3602", "425.484, 527.734, 13.9944, 0.454", "425.156, 528.828, 14.1568, 0.5078", "424.694, 529.846, 14.2744, 0.5022", "423.663, 530.271, 14.3192, 0.547", "422.54, 530.428, 14.2909, 0.8186", "421.678, 530.896, 14.1887, 0.8662", "420.612, 531.099, 13.9328, 0.6508", "419.54, 531.453, 13.6741, 0.5818", "418.46, 531.83, 13.4378, 0.4496", "417.355, 532.12, 13.2096, 0.4554", "416.232, 532.327, 12.9763, 0.3924", "415.098, 532.47, 12.7294, 0.4036", "413.954, 532.489, 12.4648, 0.4904", "413.117, 533.015, 11.937, 0.5604", "412.301, 533.463, 11.2487, 0.6722", "411.41, 533.404, 10.4924, 0.5084", "410.27, 533.399, 9.8773, 0.4068", "409.126, 533.381, 9.4363, 0.3814", "408.004, 533.175, 8.9964, 0.4576" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "473.984, 440.525, 30.2672, 0.9546", "474.411, 440.228, 29.7007, 0.2288", "474.628, 439.248, 29.6803, 0.2822", "475.648, 439.001, 29.6724, 0.2882", "475.674, 437.859, 29.664, 0.3014", "475.857, 436.759, 29.6545, 0.319", "476.133, 435.664, 29.643, 0.3824", "476.64, 434.701, 29.6265, 0.35", "477.277, 433.976, 29.6036, 0.3314", "477.573, 432.882, 29.5739, 0.3272", "477.865, 431.796, 29.5386, 0.3986", "478.65, 431.059, 29.5008, 0.3754", "478.764, 430.536, 29.3443, 0.4024", "479.295, 429.636, 29.2348, 0.341", "480.398, 429.458, 29.1768, 0.3126", "481.29, 428.872, 29.1718, 0.299", "482.045, 428.017, 29.22, 0.3148", "482.755, 427.17, 29.3135, 0.3746", "483.062, 426.752, 29.552, 0.3362", "483.678, 425.897, 29.8987, 0.304", "484.256, 424.928, 30.2196, 0.2822", "484.747, 423.915, 30.5281, 0.2888", "485.306, 422.916, 30.7625, 0.3006", "485.836, 421.903, 30.9296, 0.3252", "486.646, 421.2, 31.036, 0.3576", "486.816, 420.756, 31.1324, 0.4798", "487.19, 419.69, 31.2606, 0.407", "487.401, 418.566, 31.3569, 0.3506", "487.734, 417.496, 31.4331, 0.3232", "488.717, 416.989, 31.4919, 0.3544", "489.717, 416.433, 31.5361, 0.4738", "490.542, 415.695, 31.5694, 0.396", "491.03, 414.661, 31.6028, 0.3308", "491.48, 413.609, 31.6498, 0.2848", "491.975, 412.637, 31.7131, 0.2934", "492.014, 411.496, 31.799, 0.3102", "492.443, 410.547, 31.9141, 0.3354", "493.074, 409.495, 32.1418, 0.4136", "493.674, 408.521, 32.3742, 0.4046", "494.273, 407.547, 32.6113, 0.451", "494.099, 407.042, 33.0442, 0.457", "494.044, 406.01, 33.5454, 0.399", "494.084, 404.871, 33.9542, 0.399", "494.557, 403.887, 34.2742, 0.3342", "494.914, 402.832, 34.5271, 0.3006", "495.318, 401.864, 34.8113, 0.2758", "495.596, 400.795, 35.0837, 0.2766", "495.905, 399.694, 35.2951, 0.2784", "496.104, 398.573, 35.4766, 0.2816", "496.104, 397.429, 35.6345, 0.2876", "496.104, 396.285, 35.7818, 0.2998", "495.962, 395.168, 35.9783, 0.3158", "495.875, 394.042, 36.2102, 0.3766", "495.875, 392.898, 36.4498, 0.3398", "495.875, 391.755, 36.6957, 0.3108", "495.875, 391.071, 37.2632, 0.2954", "495.706, 389.72, 37.7787, 0.308", "495.797, 388.601, 38.1889, 0.3616", "496.114, 387.504, 38.4829, 0.3134", "496.652, 386.526, 38.6756, 0.2542", "497.247, 385.579, 38.7971, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "473.984, 440.525, 30.2672, 0.9546", "474.545, 440.602, 30.0989, 0.8022", "475.576, 440.932, 29.9513, 0.9226", "476.581, 441.442, 29.911, 1.0198", "477.519, 442.039, 29.9813, 1.124", "478.336, 442.802, 30.0961, 1.0014", "479.039, 443.7, 30.1708, 0.9344", "479.645, 444.633, 30.13, 0.9476", "480.221, 445.58, 29.9771, 0.9914", "480.702, 446.596, 29.8449, 0.7498", "481.079, 447.624, 29.8463, 0.7236", "481.751, 448.483, 29.8777, 0.6878", "482.633, 449.186, 29.8472, 0.7896", "483.501, 449.92, 29.8029, 0.847", "484.419, 450.599, 29.7618, 0.9046", "485.364, 451.243, 29.7072, 1.019", "486.303, 451.871, 29.6786, 0.9662", "486.786, 452.834, 29.6148, 0.7818", "487.284, 453.841, 29.5599, 0.6302", "488.22, 454.343, 29.3692, 0.7992", "489.202, 454.654, 28.9677, 0.7562", "490.266, 454.981, 28.5065, 0.5768", "491.402, 455.0, 28.0739, 0.4986", "492.532, 454.841, 27.7281, 0.492" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "464.783, 446.186, 29.9622, 0.9148", "464.368, 445.177, 30.4301, 0.2288", "464.337, 444.568, 28.9058, 0.6406", "465.036, 444.732, 28.1411, 0.5704", "465.743, 444.899, 27.1376, 0.6226", "466.799, 445.167, 26.1836, 0.5196", "467.859, 445.426, 25.3193, 0.6128", "468.993, 445.566, 24.6784, 0.5494", "470.018, 445.916, 24.2368, 0.6642", "470.829, 446.706, 23.9646, 0.6638", "471.836, 447.235, 23.7871, 0.783", "472.474, 447.834, 23.5903, 0.65", "472.242, 448.87, 23.2683, 0.7496", "472.558, 449.889, 22.9552, 0.6282", "473.48, 450.551, 22.7018, 0.7424" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "464.783, 446.186, 29.9622, 0.9148", "464.618, 445.34, 29.2412, 0.8236" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "467.987, 447.844, 41.0561, 1.1864", "468.883, 447.193, 41.1228, 0.9678", "469.809, 446.519, 41.2101, 0.9098", "470.717, 445.842, 41.3577, 0.9468", "471.552, 445.108, 41.5968, 1.0004", "472.477, 444.435, 41.8037, 0.9436" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "467.987, 447.844, 41.0561, 1.1864", "467.34, 447.338, 41.44, 0.4576", "466.305, 446.905, 42.0753, 0.3722", "465.29, 446.519, 42.3886, 0.3242", "464.17, 446.314, 42.749, 0.319", "463.243, 445.893, 43.1536, 0.359", "463.272, 445.907, 43.7072, 0.4214", "463.309, 445.931, 44.6608, 0.5946", "462.579, 446.088, 45.7425, 0.6356", "462.264, 445.094, 46.6306, 0.6992", "461.441, 444.457, 47.3248, 0.6494", "460.422, 444.539, 47.95, 0.6832", "459.712, 443.734, 48.3787, 0.5908", "459.509, 442.609, 48.6556, 0.7156", "459.092, 441.57, 48.8726, 0.6536", "458.204, 440.971, 49.1375, 0.591", "457.135, 440.712, 49.5054, 0.6774", "456.229, 440.185, 49.8985, 0.77", "455.432, 439.374, 50.2614, 0.8124", "454.596, 438.668, 50.708, 0.8314", "453.783, 437.934, 51.1848, 0.6998", "453.431, 436.974, 51.5617, 0.5778", "453.092, 436.029, 51.8795, 0.6768", "452.135, 435.586, 52.2844, 0.6526", "451.333, 434.838, 52.6285, 0.4736", "451.233, 433.722, 52.8604, 0.333", "451.138, 432.591, 53.009, 0.2886", "450.729, 431.524, 53.0986, 0.3004", "450.273, 430.478, 53.1339, 0.323", "449.687, 429.495, 53.1238, 0.3606", "449.132, 428.501, 53.0961, 0.454", "448.944, 427.372, 53.0569, 0.5102", "448.757, 426.244, 53.004, 0.4946", "448.398, 425.162, 52.9357, 0.5916", "447.99, 424.093, 52.8497, 0.6184", "447.56, 423.426, 52.6406, 0.4958", "446.854, 422.525, 52.4409, 0.4174", "446.979, 421.389, 52.2441, 0.4646", "446.81, 420.278, 52.0419, 0.5316", "446.151, 419.453, 51.7863, 0.5288", "445.191, 418.875, 51.4494, 0.68", "444.23, 418.296, 51.0555, 0.6584", "443.364, 417.595, 50.6593, 0.4846", "443.133, 416.576, 50.1278, 0.3532", "442.306, 415.972, 49.6216, 0.3272", "441.433, 415.289, 49.1887, 0.368", "440.72, 414.395, 48.8107, 0.4676", "440.178, 413.468, 48.3731, 0.5358", "439.79, 412.514, 47.8044, 0.543", "439.391, 411.563, 47.1509, 0.6764", "438.551, 410.786, 46.6004, 0.798", "437.69, 410.035, 46.1308, 0.7192", "436.796, 409.321, 45.7234, 0.6786", "436.493, 408.319, 45.2318, 0.5468", "436.161, 407.294, 44.6844, 0.5778", "435.613, 406.292, 44.1988, 0.671", "435.333, 405.548, 43.6198, 0.6702", "434.952, 405.421, 42.8786, 0.8252", "434.458, 404.457, 42.2808, 1.038", "433.703, 403.705, 41.8124, 1.111", "433.247, 403.375, 41.2423, 0.976", "432.37, 402.792, 40.7949, 0.6654", "431.826, 401.823, 40.4606, 0.6102", "430.957, 401.671, 40.0851, 0.4968", "430.65, 402.039, 39.7762, 0.5694", "429.915, 402.917, 39.5262, 0.4734", "429.133, 402.917, 39.2101, 0.5016", "428.07, 402.509, 38.9407, 0.4688", "427.055, 402.002, 38.715, 0.5904", "426.026, 402.116, 38.4065, 0.617", "425.38, 402.415, 38.1475, 0.4874", "424.82, 403.262, 37.9274, 0.4312", "423.71, 403.465, 37.7154, 0.3466", "422.915, 403.012, 37.4758, 0.3246", "422.328, 402.065, 37.2294, 0.315", "421.678, 401.315, 36.9667, 0.3754", "421.454, 401.617, 36.5506, 0.3374", "420.863, 401.201, 35.9232, 0.3068", "419.721, 401.201, 35.3298, 0.2872", "419.047, 401.086, 34.6304, 0.2978", "418.018, 401.887, 33.9556, 0.3174", "417.789, 401.887, 33.0882, 0.3558", "417.784, 401.585, 32.4484, 0.4168", "417.547, 400.527, 31.9186, 0.5784", "416.894, 399.784, 31.6319, 0.6434", "416.191, 399.03, 31.4566, 0.5306", "415.997, 397.962, 31.3474, 0.5372", "414.928, 397.654, 31.2746, 0.4192", "414.014, 397.654, 31.1704, 0.3746", "413.685, 397.654, 30.9957, 0.36", "412.637, 397.54, 30.6575, 0.4606", "411.533, 397.364, 30.3884, 0.4856", "410.256, 397.284, 29.9788, 0.6288", "409.221, 397.674, 29.5229, 0.6532", "408.113, 397.884, 29.09, 0.7248", "406.596, 398.094, 28.7515, 0.7308", "405.506, 398.356, 28.4928, 0.6708", "404.453, 398.371, 28.1887, 0.6752", "403.562, 397.77, 27.9656, 0.5806", "402.45, 397.653, 27.872, 0.6732", "401.316, 397.647, 27.8331, 0.6894", "400.185, 397.605, 27.7572, 0.7876", "399.074, 397.387, 27.6791, 0.867", "397.944, 397.414, 27.6385, 0.8262", "396.811, 397.308, 27.6128, 0.7482", "395.7, 397.108, 27.5517, 0.6154", "394.635, 396.773, 27.606, 0.5398", "393.544, 396.647, 27.8043, 0.4888", "392.47, 396.297, 27.9754, 0.4166", "391.39, 395.929, 28.103, 0.4034", "390.301, 396.025, 28.3192, 0.4814", "389.208, 396.314, 28.5398, 0.5848", "388.234, 396.485, 28.824, 0.5186", "387.142, 396.224, 28.9478, 0.5036", "386.184, 395.675, 28.917, 0.6408", "385.32, 395.014, 28.723, 0.7792", "384.385, 394.399, 28.488, 0.6844", "383.362, 394.013, 28.3368, 0.6136", "382.226, 393.949, 28.2268, 0.4294", "381.105, 393.76, 28.1341, 0.3452", "380.017, 393.417, 28.0274, 0.3124", "378.924, 393.152, 27.8502, 0.3396", "377.807, 393.02, 27.6161, 0.42", "376.698, 392.823, 27.354, 0.4232", "375.598, 392.632, 27.0427, 0.451", "374.471, 392.565, 26.719, 0.6258", "373.486, 392.227, 26.3533, 0.579", "372.917, 392.062, 26.133, 0.4624", "372.307, 391.986, 25.9874, 0.3938", "371.798, 391.809, 25.9017, 0.463", "371.467, 391.453, 25.8644, 0.5524", "371.315, 391.147, 25.8574, 0.4518", "370.934, 390.842, 25.8647, 0.4122", "370.704, 390.384, 25.8647, 0.3134", "370.704, 389.723, 25.8647, 0.2542", "370.704, 389.469, 25.8647, 0.2288" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "489.745, 486.179, 33.0344, 0.6548", "489.941, 486.264, 32.8779, 0.4682", "490.893, 486.812, 32.6508, 0.3714", "491.529, 487.737, 32.3873, 0.354", "492.243, 488.574, 32.1997, 0.4496", "493.321, 488.941, 32.0636, 0.464", "494.405, 489.265, 31.9259, 0.5942", "495.379, 489.857, 31.8083, 0.5634", "496.299, 490.534, 31.7052, 0.6832", "497.297, 491.092, 31.5972, 0.7324", "498.329, 491.554, 31.4364, 0.7482", "499.385, 491.911, 31.19, 0.687", "500.463, 492.281, 30.9358, 0.5534", "501.543, 492.661, 30.6992, 0.4046", "502.611, 493.066, 30.4707, 0.3362", "503.418, 493.73, 30.2039, 0.3434", "503.794, 494.78, 29.8967, 0.3926", "504.403, 495.659, 29.5868, 0.5404", "505.309, 496.296, 29.2482, 0.54", "506.127, 497.093, 28.9685, 0.4992", "506.96, 497.876, 28.763, 0.388", "507.816, 498.628, 28.6278, 0.3542", "508.518, 499.529, 28.5443, 0.3702", "509.145, 500.477, 28.4911, 0.4746", "509.966, 501.27, 28.4533, 0.536", "510.874, 501.966, 28.4124, 0.6032", "511.776, 502.667, 28.359, 0.4994", "512.706, 503.31, 28.2559, 0.4968", "513.65, 503.872, 28.1005, 0.4888", "514.718, 504.239, 28.0196, 0.4888", "515.818, 504.378, 27.9112, 0.4152", "516.922, 504.312, 27.7452, 0.4056", "518.042, 504.528, 27.6032, 0.4618", "519.104, 504.931, 27.4576, 0.6652", "520.062, 505.364, 27.2233, 0.7878", "520.861, 505.719, 27.064, 0.8764", "521.88, 506.151, 26.9662, 0.8006", "522.823, 506.794, 26.8526, 0.6812", "523.859, 507.228, 26.6546, 0.5862", "524.966, 507.397, 26.3833, 0.7104", "526.039, 507.777, 26.1106, 0.8554", "526.99, 508.303, 25.7421, 0.8532", "528.068, 508.627, 25.3795, 0.793", "529.198, 508.787, 25.1356, 0.724", "530.283, 509.102, 24.9077, 0.6176", "531.372, 509.377, 24.8338, 0.5436", "532.492, 509.607, 24.7982, 0.496", "533.492, 510.086, 24.6876, 0.4302", "534.388, 510.787, 24.575, 0.4278", "535.279, 511.469, 24.5627, 0.5276", "536.306, 511.964, 24.5521, 0.6672", "537.32, 512.435, 24.4695, 0.6874", "538.276, 513.065, 24.4258, 0.7406", "539.25, 513.658, 24.4384, 0.7596", "540.179, 514.291, 24.5384, 0.7264", "541.102, 514.94, 24.6694, 0.7676", "542.094, 515.501, 24.7436, 0.8042", "543.093, 516.04, 24.7797, 0.8348", "544.133, 516.471, 24.8335, 0.8438", "545.138, 516.909, 24.81, 0.8638", "545.831, 517.819, 24.7568, 0.8848", "546.513, 518.737, 24.7019, 1.0004", "547.054, 519.745, 24.6565, 0.8426", "547.81, 520.433, 24.5778, 0.9836", "548.799, 520.973, 24.4742, 0.9728", "549.617, 521.765, 24.4132, 0.9006", "550.361, 522.623, 24.3866, 0.7928", "551.281, 523.299, 24.3905, 0.6926", "552.142, 524.047, 24.4213, 0.7098", "552.573, 524.478, 24.5456, 0.6718", "553.348, 525.263, 24.7344, 0.7112", "554.224, 525.979, 24.8654, 0.71", "555.247, 526.487, 24.9446, 0.6096", "556.275, 526.99, 24.9808, 0.6722", "556.76, 527.877, 24.7974, 0.7232", "557.146, 528.105, 24.6557, 0.6764", "558.169, 528.602, 24.5764, 0.8188", "559.25, 528.923, 24.5994, 0.8844", "560.335, 529.209, 24.729, 0.8264", "561.411, 529.577, 24.8872, 0.6756", "562.46, 530.03, 25.0387, 0.6064", "563.452, 530.597, 25.153, 0.601", "564.37, 531.27, 25.2213, 0.6796", "565.216, 532.026, 25.2311, 0.6254", "566.054, 532.746, 25.2879, 0.8068", "566.883, 533.444, 25.4918, 0.6912", "567.698, 534.194, 25.7603, 0.6114", "568.57, 534.935, 25.9832, 0.4984", "569.422, 535.693, 26.1576, 0.5742", "570.143, 536.578, 26.2791, 0.7028", "570.752, 537.544, 26.3497, 0.7726", "571.221, 538.564, 26.4141, 0.8052", "571.656, 539.593, 26.4774, 0.6494", "572.021, 540.628, 26.4228, 0.4932", "572.0, 541.676, 26.18, 0.4744", "572.201, 542.663, 25.8608, 0.5", "572.859, 543.598, 25.5928, 0.4802", "573.573, 544.492, 25.3792, 0.5414", "574.317, 545.361, 25.2266, 0.6386", "575.08, 546.212, 25.1325, 0.6692", "575.74, 547.126, 25.0491, 0.5364", "576.18, 548.151, 25.011, 0.5238", "576.594, 549.201, 25.0393, 0.5098", "577.273, 550.1, 25.0751, 0.6684", "578.142, 550.841, 25.1028, 0.7518", "579.088, 551.484, 25.1205, 0.7854", "580.008, 552.16, 25.1328, 0.7504", "580.849, 552.918, 25.16, 0.6988", "581.549, 553.741, 25.1356, 0.5388", "582.273, 554.474, 24.9407, 0.5536", "583.198, 555.116, 24.7744, 0.4434", "584.044, 555.854, 24.6798, 0.4492", "584.729, 556.761, 24.61, 0.356", "585.495, 557.423, 24.3404, 0.4576" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "489.745, 486.179, 33.0344, 0.6548", "490.712, 485.371, 33.1744, 0.2288", "491.699, 484.795, 33.1582, 0.2746", "492.508, 483.991, 33.152, 0.2746", "493.286, 483.29, 33.143, 0.2746", "494.431, 483.29, 33.1304, 0.2746", "495.557, 483.118, 33.1128, 0.2746", "496.665, 482.836, 33.0882, 0.2748", "497.732, 482.445, 33.0548, 0.2748", "498.721, 481.875, 33.0067, 0.275", "499.768, 481.415, 32.9364, 0.2754", "500.85, 481.045, 32.8406, 0.2762", "501.933, 480.677, 32.72, 0.2778", "502.629, 479.879, 32.5766, 0.2802", "503.059, 479.903, 32.2204, 0.2854", "503.611, 479.309, 31.7904, 0.2942", "504.73, 479.17, 31.4549, 0.3118", "505.758, 478.711, 31.2088, 0.3398", "506.861, 478.518, 31.0453, 0.4156", "508.004, 478.484, 30.9565, 0.4374", "509.147, 478.484, 30.9347, 0.3682", "509.97, 477.857, 30.9383, 0.3166", "510.993, 477.382, 30.9436, 0.305", "512.043, 476.942, 30.9509, 0.3332", "513.026, 476.359, 30.9613, 0.3728", "514.023, 475.807, 30.9756, 0.5074", "514.715, 474.926, 30.9949, 0.4592", "515.663, 474.317, 31.024, 0.4446", "516.778, 474.15, 31.0654, 0.5116", "517.885, 473.917, 31.1206, 0.6362", "518.987, 473.679, 31.1889, 0.6366", "520.13, 473.679, 31.269, 0.615", "520.227, 473.221, 31.5196, 0.6796", "521.37, 473.221, 31.7237, 0.5226", "522.515, 473.221, 31.8847, 0.4294", "523.596, 472.871, 32.0068, 0.4404", "524.711, 472.621, 32.095, 0.4834", "525.846, 472.535, 32.1574, 0.4548", "526.987, 472.497, 32.2028, 0.4702", "528.115, 472.306, 32.2636, 0.6248", "528.616, 472.223, 32.3397, 0.7548", "529.747, 472.075, 32.431, 0.6134", "530.791, 471.867, 32.681, 0.6054", "531.617, 471.359, 32.926, 0.5016", "532.192, 470.556, 33.124, 0.5126", "533.218, 470.07, 33.2808, 0.6876", "533.588, 469.612, 33.4012, 0.7198", "534.711, 469.462, 33.4877, 0.5962", "535.836, 469.383, 33.5737, 0.5716", "536.966, 469.383, 33.6902, 0.6782", "537.932, 469.048, 33.8537, 0.592", "539.072, 468.979, 33.9559, 0.439", "540.078, 468.56, 33.9791, 0.3484", "541.003, 467.912, 33.9343, 0.3898", "541.898, 467.405, 33.7739, 0.3654", "542.961, 467.069, 33.5692, 0.3532", "544.086, 466.866, 33.3869, 0.3988" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "492.532, 454.841, 27.7281, 0.492", "493.117, 454.418, 30.154, 0.6864", "494.126, 454.39, 30.0843, 0.795", "495.23, 454.682, 30.0513, 0.776", "496.296, 454.971, 29.888, 0.7102", "497.359, 455.081, 29.5859, 0.736", "498.479, 455.116, 29.2788, 0.7512", "499.587, 455.304, 29.08, 0.7096", "500.628, 455.709, 28.8887, 0.742", "501.695, 456.089, 28.7213, 0.7264", "502.779, 456.454, 28.611, 0.8388", "503.819, 456.888, 28.5004, 0.8188", "504.783, 457.476, 28.387, 0.7446", "505.746, 458.007, 28.4043, 0.7898", "506.786, 458.429, 28.516, 0.6702", "507.741, 458.98, 28.714, 0.7506", "508.733, 459.521, 28.9022, 0.805", "509.85, 459.659, 29.0142, 0.9102", "510.984, 459.698, 28.9946, 0.8542", "512.08, 459.914, 28.8204, 0.8244", "513.124, 460.355, 28.6224, 0.637", "514.185, 460.778, 28.434, 0.4744", "515.117, 460.685, 28.0473, 0.4214", "515.948, 461.363, 27.6718, 0.4874", "516.921, 461.963, 27.3958, 0.7294", "518.0, 462.34, 27.2054, 0.8246", "519.033, 462.832, 27.0796, 0.6594", "520.155, 462.923, 27.0133, 0.6382", "521.299, 462.923, 27.0029, 0.5878", "522.443, 462.923, 27.008, 0.5472", "523.586, 462.923, 27.0155, 0.674", "524.731, 462.923, 27.0262, 0.6162", "525.875, 462.923, 27.0407, 0.5562", "527.018, 462.923, 27.0614, 0.446", "528.163, 462.923, 27.0906, 0.4642", "529.307, 462.923, 27.1303, 0.5608", "530.45, 462.928, 27.1855, 0.8934", "531.572, 463.152, 27.2656, 0.9948", "531.75, 463.396, 27.3767, 0.9378", "532.422, 464.313, 27.5436, 0.8786", "533.416, 464.785, 27.7085, 0.771", "534.031, 464.436, 28.0193, 0.5592", "535.163, 464.35, 28.56, 0.6864" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "492.532, 454.841, 27.7281, 0.492", "492.479, 455.286, 27.2401, 0.4954", "492.525, 456.236, 26.7355, 0.4232", "492.85, 457.332, 26.3752, 0.4434", "493.384, 458.345, 26.1167, 0.4198", "494.224, 459.079, 25.937, 0.4436", "495.135, 459.576, 25.823, 0.6174", "495.93, 460.213, 25.7695, 0.54", "497.015, 460.553, 25.7328, 0.5032", "498.074, 460.986, 25.6785, 0.6044", "499.144, 461.371, 25.6021, 0.6556", "500.268, 461.573, 25.4976, 0.729", "501.328, 461.995, 25.3627, 0.7382", "501.825, 462.923, 25.2008, 0.686", "502.034, 463.935, 24.7775, 0.695", "502.492, 464.902, 24.4177, 0.656", "502.964, 464.628, 23.9702, 0.6274", "503.971, 464.297, 23.592, 0.8198", "504.726, 464.866, 23.4161, 0.8982", "505.286, 465.767, 23.3733, 1.0216", "506.112, 466.441, 23.2187, 0.902", "506.752, 467.009, 22.857, 0.769", "506.312, 467.906, 22.2956, 0.7756", "506.546, 468.698, 21.7403, 0.705", "507.665, 468.862, 21.1588, 0.5184", "508.012, 469.102, 20.3834, 0.4418", "508.919, 469.102, 19.6507, 0.3672", "508.701, 469.972, 19.117, 0.3566", "508.69, 471.114, 18.7337, 0.405", "508.69, 472.258, 18.4495, 0.3936", "508.831, 473.371, 18.2451, 0.4058", "509.756, 474.014, 18.0939, 0.4932", "510.596, 474.746, 17.9332, 0.572", "511.337, 475.287, 17.5706, 0.6654", "512.434, 475.509, 17.2155, 0.6342", "513.543, 475.7, 16.8571, 0.6544", "514.458, 475.896, 16.4153, 0.5414", "515.307, 475.738, 15.8225, 0.6048", "515.529, 474.746, 15.2354, 0.54", "515.555, 474.268, 14.5824, 0.6202", "515.555, 473.284, 13.8328, 0.7106", "515.555, 472.142, 13.2244, 0.9338", "516.214, 471.393, 12.7498, 1.0786", "517.326, 471.39, 12.3057, 1.049", "518.369, 471.39, 11.8476, 0.8396", "519.325, 471.561, 11.3607, 0.9742", "519.984, 472.425, 10.9917, 0.9738", "520.551, 473.416, 10.6982, 1.0422", "521.422, 474.134, 10.4731, 1.0618", "522.179, 474.894, 10.1912, 0.9322", "523.041, 475.607, 9.9554, 0.8106", "523.955, 476.293, 9.7933, 0.6948", "524.617, 477.204, 9.6757, 0.6356", "525.395, 478.026, 9.5586, 0.9152" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "473.48, 450.551, 22.7018, 0.7424", "473.815, 450.529, 22.5014, 0.681", "474.957, 450.455, 22.3482, 0.5212", "476.099, 450.38, 22.2379, 0.4466", "476.971, 450.803, 22.1035, 0.3756", "477.571, 451.727, 21.8856, 0.3766", "478.031, 452.697, 21.7199, 0.4206", "479.01, 453.22, 21.6023, 0.5258", "479.691, 454.135, 21.5286, 0.834", "480.271, 455.106, 21.5186, 0.857", "480.812, 456.072, 21.5841, 0.8164", "481.403, 457.006, 21.6336, 0.6882", "481.521, 458.134, 21.6406, 0.7066", "482.042, 459.088, 21.6034, 0.6422", "482.605, 460.022, 21.5247, 0.772", "483.561, 460.537, 21.432, 0.9472", "483.872, 461.164, 21.1327, 0.903", "483.811, 462.082, 20.697, 0.7824", "484.022, 463.185, 20.386, 0.7468", "484.532, 464.176, 20.2087, 0.9122", "485.232, 465.053, 20.0463, 1.0106", "485.831, 465.987, 19.8554, 1.0604", "486.402, 466.966, 19.7106, 0.8814", "487.144, 467.834, 19.6034, 0.723", "487.977, 468.614, 19.4916, 0.5", "488.973, 468.931, 19.3309, 0.4308", "489.973, 469.287, 19.1951, 0.4614", "490.452, 470.24, 19.124, 0.663", "490.603, 471.314, 19.1778, 0.7916", "491.307, 472.184, 19.2203, 0.8462", "492.331, 472.592, 19.2262, 0.9266", "493.44, 472.826, 19.1822, 0.7156", "494.368, 473.486, 19.0705, 0.7016", "495.441, 473.883, 18.8824, 0.6762", "495.786, 474.005, 18.5584, 0.6234", "496.756, 474.353, 18.0278, 0.5544", "497.782, 474.517, 17.3628, 0.5166", "498.605, 474.767, 16.749, 0.4642", "499.443, 475.381, 16.0748, 0.511", "500.398, 475.806, 15.4123, 0.5874", "501.484, 476.08, 14.8837, 0.5472", "502.557, 476.424, 14.5438, 0.4406", "503.609, 476.745, 14.3469, 0.4006", "504.281, 477.665, 14.2506, 0.4762", "505.003, 478.547, 14.2397, 0.5762", "506.021, 479.014, 14.3508, 0.497", "507.044, 479.516, 14.45, 0.4908", "507.772, 480.392, 14.5267, 0.4826", "508.779, 480.933, 14.5827, 0.4532", "509.771, 481.503, 14.6205, 0.4658", "510.665, 482.217, 14.6423, 0.6232", "511.601, 482.874, 14.651, 0.7208", "512.65, 483.331, 14.6639, 0.702", "513.49, 484.101, 14.6826, 0.7194", "514.357, 484.847, 14.7095, 0.7264", "515.406, 485.29, 14.744, 0.6344", "516.292, 485.96, 14.7734, 0.7456", "516.737, 486.974, 14.8683, 0.7284", "517.58, 487.489, 14.9976, 0.6358", "518.706, 487.617, 15.1267, 0.5302", "519.849, 487.662, 15.1914, 0.471", "520.682, 487.361, 15.1161, 0.383", "521.284, 486.496, 15.0142, 0.3446", "521.719, 485.575, 14.7834, 0.3532", "522.526, 484.82, 14.5267, 0.4404", "523.273, 483.961, 14.3273, 0.485", "524.174, 483.316, 14.1901, 0.4506", "525.268, 483.03, 14.1092, 0.4978", "526.25, 482.467, 14.0652, 0.5014", "527.234, 481.918, 14.0535, 0.6886", "528.34, 481.688, 14.0521, 0.6148", "529.484, 481.688, 14.0504, 0.694", "530.628, 481.688, 14.0476, 0.7048", "531.771, 481.688, 14.044, 0.7008", "532.872, 481.451, 14.0389, 0.5784", "533.929, 481.013, 14.0319, 0.4528", "534.888, 480.408, 14.0218, 0.4156", "535.857, 479.803, 14.007, 0.5404", "536.903, 479.35, 13.9871, 0.5174", "538.02, 479.185, 13.9625, 0.5656", "539.161, 479.155, 13.9336, 0.672", "540.219, 478.749, 13.8538, 0.5568", "541.224, 478.234, 13.7659, 0.4874", "542.328, 478.026, 13.7052, 0.5756", "543.471, 478.026, 13.6682, 0.6", "544.742, 478.142, 13.7102, 0.6354", "545.836, 478.429, 13.7654, 0.5184", "546.809, 479.024, 13.8048, 0.5018", "547.728, 479.695, 13.818, 0.644", "548.327, 480.622, 13.7721, 0.7538", "549.026, 481.503, 13.6584, 0.7886", "549.648, 482.461, 13.5503, 0.757", "550.198, 483.433, 13.4478, 0.7096", "550.82, 484.366, 13.3078, 0.566", "551.53, 485.262, 13.2182, 0.5688", "552.142, 486.214, 13.1482, 0.6432", "552.714, 486.979, 13.3185, 0.9152" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "473.48, 450.551, 22.7018, 0.7424", "473.504, 450.607, 20.7648, 0.4576", "473.113, 451.4, 20.0278, 0.5404", "473.378, 452.347, 19.6529, 0.563", "473.142, 453.374, 19.334, 0.4296", "473.329, 454.377, 19.0736, 0.346", "474.285, 454.962, 18.8667, 0.3126", "475.079, 455.758, 18.648, 0.3454", "474.476, 456.639, 18.4363, 0.4026", "473.885, 457.404, 18.0634, 0.5286", "474.18, 458.458, 17.7173, 0.6662", "475.161, 458.862, 17.3818, 0.6982", "475.933, 459.427, 16.9456, 0.6972", "476.279, 460.504, 16.5875, 0.9904", "476.473, 461.619, 16.3033, 1.0154", "477.191, 462.499, 16.0703, 0.8338", "477.565, 463.384, 15.6789, 0.917", "478.164, 464.279, 15.3014, 0.863", "478.576, 465.322, 15.0296, 0.8586", "478.712, 466.45, 14.8319, 0.6158", "478.767, 467.589, 14.702, 0.6186", "479.484, 468.409, 14.6339, 0.483", "480.085, 469.331, 14.6191, 0.6864" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "464.618, 445.34, 29.2412, 0.8236", "464.359, 444.994, 27.6377, 0.4576", "465.17, 444.978, 28.4477, 0.3606", "466.236, 445.161, 28.8075, 0.3022", "467.349, 445.429, 29.1284, 0.2786", "468.461, 445.697, 29.4078, 0.2826", "469.573, 445.956, 29.6531, 0.288", "470.681, 446.137, 29.932, 0.305", "471.788, 446.317, 30.2201, 0.305", "472.895, 446.497, 30.9252, 0.4576" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "464.618, 445.34, 29.2412, 0.8236", "463.75, 444.475, 28.6462, 0.7276", "462.793, 443.926, 28.1655, 0.6542", "461.979, 444.239, 27.6363, 0.467", "460.959, 444.532, 27.2194, 0.3674", "459.975, 444.557, 27.148, 0.3546", "458.922, 444.547, 27.267, 0.413", "457.93, 444.441, 27.1572, 0.579", "457.182, 443.715, 26.9027, 0.6074" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_27",
    "id" : "apic_27",
    "points3d" : [ "472.477, 444.435, 41.8037, 0.9436", "472.669, 444.505, 43.2793, 0.6864", "473.71, 444.571, 43.47, 0.4444", "474.852, 444.638, 43.5361, 0.326", "475.993, 444.716, 43.5778, 0.2754", "477.134, 444.794, 43.5971, 0.2764", "478.273, 444.843, 43.5977, 0.278", "479.413, 444.727, 43.5887, 0.281", "480.551, 444.61, 43.5711, 0.2864", "481.64, 444.455, 43.5355, 0.2966", "482.677, 444.18, 43.4778, 0.316", "483.769, 443.863, 43.4406, 0.3474", "484.884, 443.702, 43.423, 0.4294", "486.028, 443.702, 43.423, 0.4644", "487.172, 443.702, 43.4392, 0.4126", "488.298, 443.575, 43.514, 0.4254", "489.42, 443.551, 43.6173, 0.3778", "490.536, 443.793, 43.6946, 0.4068", "491.612, 444.179, 43.7466, 0.3486", "492.725, 444.442, 43.773, 0.3272", "493.729, 444.984, 43.7744, 0.327", "494.833, 445.26, 43.7528, 0.3612", "495.858, 445.739, 43.7189, 0.4862", "496.933, 445.99, 43.65, 0.4198", "498.066, 445.99, 43.5383, 0.3698", "499.211, 445.99, 43.4507, 0.3824", "500.35, 445.904, 43.3863, 0.3506", "501.482, 445.761, 43.344, 0.3302", "502.626, 445.761, 43.3224, 0.3326", "503.77, 445.761, 43.3194, 0.3718", "504.914, 445.761, 43.3289, 0.507", "506.058, 445.761, 43.3426, 0.4518", "507.202, 445.761, 43.3622, 0.461", "508.346, 445.761, 43.3877, 0.3966", "509.49, 445.761, 43.4185, 0.4428", "510.629, 445.802, 43.475, 0.4098", "511.764, 445.883, 43.5697, 0.467", "512.872, 446.125, 43.6612, 0.4566", "513.968, 446.452, 43.7279, 0.5448", "515.049, 446.817, 43.7696, 0.645", "516.128, 447.135, 43.7861, 0.6804", "517.271, 447.135, 43.7811, 0.5598", "518.406, 447.282, 43.762, 0.555", "519.469, 447.635, 43.7256, 0.6292", "520.581, 447.82, 43.6346, 0.5908", "521.698, 448.029, 43.5308, 0.6866", "522.742, 447.99, 43.5425, 0.739", "523.799, 448.307, 43.5817, 0.7604", "524.87, 448.678, 43.647, 0.7098", "525.906, 448.942, 43.8544, 0.5954", "527.042, 449.02, 44.0392, 0.4826", "528.164, 449.156, 44.1916, 0.4796", "529.271, 449.335, 44.3061, 0.6152", "530.32, 449.72, 44.4374, 0.8688", "531.403, 450.059, 44.5351, 0.872", "532.318, 450.719, 44.6393, 0.627", "533.122, 451.485, 44.7188, 0.4764", "534.148, 451.854, 44.8045, 0.5528", "535.281, 451.923, 44.8644, 0.57", "536.38, 452.23, 44.886, 0.5192", "537.432, 452.672, 44.8776, 0.5972", "538.497, 453.052, 44.8003, 0.5928", "539.297, 453.803, 44.714, 0.6222", "540.288, 454.279, 44.6222, 0.4942", "541.047, 454.995, 44.4528, 0.4548", "541.989, 455.613, 44.3159, 0.5676", "542.883, 456.311, 44.17, 0.5592", "543.629, 457.142, 43.96, 0.6864" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "472.477, 444.435, 41.8037, 0.9436", "473.257, 443.672, 41.9723, 0.91", "473.506, 442.563, 42.105, 0.9568", "473.592, 441.431, 42.2433, 0.9722", "474.102, 440.453, 42.4385, 0.891" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "544.086, 466.866, 33.3869, 0.3988", "544.417, 467.775, 33.32, 0.6864", "545.268, 468.533, 33.3455, 0.6908", "546.242, 469.118, 33.3558, 0.7004", "547.223, 469.628, 33.3707, 0.6842", "548.201, 470.205, 33.3889, 0.5904", "549.252, 470.651, 33.4093, 0.4972", "550.327, 470.765, 33.4687, 0.3898", "551.37, 471.069, 33.5194, 0.3304", "552.323, 471.671, 33.6, 0.4576" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "544.086, 466.866, 33.3869, 0.3988", "544.922, 466.752, 33.2394, 0.3816", "545.867, 466.466, 33.0439, 0.3842", "547.0, 466.409, 32.9039, 0.4516", "548.145, 466.409, 32.8135, 0.5004", "549.253, 466.376, 32.7219, 0.5052", "550.018, 467.033, 32.627, 0.472", "550.721, 467.896, 32.5954, 0.385", "551.484, 466.83, 32.6586, 0.3476", "551.663, 465.741, 32.7421, 0.3644", "552.531, 465.198, 32.8406, 0.4322", "553.213, 465.623, 33.11, 0.6102", "554.255, 466.078, 33.6, 0.6864" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "457.182, 443.715, 26.9027, 0.6074", "457.493, 443.992, 26.9948, 0.4576", "456.489, 443.285, 25.893, 0.6848", "455.564, 443.079, 25.3316, 0.7096", "454.449, 443.253, 24.8665, 0.602", "453.323, 443.453, 24.5081, 0.6894", "452.22, 443.753, 24.2452, 0.604", "451.202, 444.219, 24.0643, 0.5036", "450.427, 445.042, 23.9473, 0.4932", "449.488, 444.39, 23.8498, 0.536", "448.694, 443.996, 23.725, 0.5434", "447.775, 444.676, 23.5634, 0.678", "446.781, 445.057, 23.2954, 0.7982", "445.819, 444.958, 22.8362, 0.7326", "444.914, 444.526, 22.4168, 0.6402", "443.874, 444.991, 22.0254, 0.783", "443.021, 445.207, 21.4259, 0.8952", "442.151, 445.866, 20.9297, 0.7012", "441.267, 445.49, 20.5052, 0.462", "441.305, 444.378, 20.062, 0.3486", "441.341, 443.264, 19.5854, 0.367", "440.659, 442.888, 19.15, 0.4356", "439.809, 443.532, 18.783, 0.6222", "439.147, 444.461, 18.4257, 0.6818", "438.614, 445.415, 18.0135, 0.8086", "438.113, 446.263, 17.4297, 0.7356", "437.884, 446.969, 16.8412, 0.723", "438.755, 447.004, 16.0692, 0.791", "439.73, 447.105, 15.3009, 0.9322", "440.858, 447.301, 14.7333, 0.8898", "441.359, 448.17, 14.0568, 1.144" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "457.182, 443.715, 26.9027, 0.6074", "457.422, 443.342, 26.6179, 0.6444", "458.249, 442.68, 26.3222, 0.5588", "459.199, 442.092, 26.1649, 0.462", "459.822, 441.203, 26.1338, 0.44", "459.48, 440.26, 26.1828, 0.5498", "458.63, 439.505, 26.2604, 0.7092", "457.798, 438.724, 26.3374, 0.7608", "457.189, 437.776, 26.4261, 0.898", "456.688, 436.767, 26.5283, 0.9492", "456.21, 435.75, 26.5334, 0.8878", "455.669, 434.761, 26.4275, 0.8458", "454.914, 433.917, 26.2847, 0.648", "454.276, 432.975, 26.1237, 0.6356", "454.109, 431.869, 25.9426, 0.7208", "454.01, 430.733, 25.7278, 0.8126", "453.564, 429.756, 25.4128, 0.8452", "452.969, 428.865, 25.0155, 0.8894", "452.365, 427.904, 24.6812, 0.821", "451.937, 426.846, 24.4334, 0.7372", "451.368, 425.855, 24.2693, 0.6002", "450.545, 425.069, 24.1968, 0.4878", "450.158, 424.032, 24.2626, 0.5058", "449.915, 423.018, 24.1805, 0.5838", "449.595, 422.281, 24.1046, 0.5126", "449.045, 421.306, 24.0607, 0.5148", "448.562, 420.306, 24.0556, 0.5526", "448.217, 419.973, 24.285, 0.4576", "447.762, 418.933, 24.4801, 0.3982", "447.762, 417.943, 24.6546, 0.4072", "447.674, 416.807, 24.7808, 0.5304", "447.456, 415.696, 24.8573, 0.702", "447.219, 414.595, 24.887, 0.607", "447.172, 413.454, 24.8735, 0.607", "447.075, 412.318, 24.8545, 0.6684", "447.015, 411.178, 24.8282, 0.7128", "446.961, 410.036, 24.7943, 0.6738", "447.081, 408.922, 24.7531, 0.5032", "447.681, 407.984, 24.6568, 0.437", "448.4, 407.112, 24.5459, 0.4724", "449.02, 406.294, 24.4474, 0.6848", "449.02, 405.155, 24.3494, 0.8242", "449.02, 404.01, 24.2869, 0.9452", "449.196, 402.936, 24.2911, 0.921", "448.977, 401.837, 24.365, 0.9388", "448.799, 400.724, 24.3715, 0.8956", "448.573, 399.625, 24.3821, 0.7282", "447.932, 398.681, 24.4196, 0.612", "447.214, 397.797, 24.5087, 0.601", "446.734, 396.822, 24.6313, 0.5022", "446.56, 395.768, 24.7481, 0.4704", "445.876, 394.889, 24.9754, 0.5912", "445.134, 394.023, 25.2132, 0.6286", "444.331, 393.22, 25.4122, 0.69", "443.661, 392.368, 25.6346, 0.612", "443.144, 391.423, 25.9921, 0.715", "442.627, 390.478, 26.4429, 0.8458", "441.952, 389.574, 26.8335, 0.6938", "441.555, 388.505, 27.1449, 0.4974", "440.964, 387.644, 27.4694, 0.4042", "440.298, 386.751, 27.7662, 0.5186", "439.452, 385.981, 27.9415, 0.4808", "438.564, 385.279, 28.026, 0.4802", "437.491, 384.883, 28.0498, 0.597", "436.418, 384.486, 28.0227, 0.701", "435.471, 383.904, 27.8732, 0.524", "434.516, 383.315, 27.6472, 0.3902", "433.561, 382.69, 27.456, 0.342", "432.605, 382.06, 27.305, 0.4262", "431.621, 381.48, 27.188, 0.4274", "430.51, 381.219, 27.0978, 0.4956", "429.99, 380.212, 27.0276, 0.5282", "429.857, 379.077, 26.9587, 0.5876", "429.605, 378.081, 26.8604, 0.476", "428.63, 377.506, 26.6921, 0.4286", "427.656, 376.933, 26.4743, 0.481", "426.905, 376.121, 26.2618, 0.5836", "426.306, 375.146, 26.0795, 0.5178", "425.974, 374.081, 25.9182, 0.4958", "425.855, 372.943, 25.7698, 0.6566", "425.736, 371.805, 25.6276, 0.6622", "425.552, 370.772, 25.4514, 0.4912", "424.671, 370.157, 25.1342, 0.367", "423.79, 369.543, 24.722, 0.3464", "422.772, 369.081, 24.3678, 0.434", "421.701, 368.677, 24.1178, 0.443", "420.6, 368.385, 23.9579, 0.5184", "419.476, 368.172, 23.8759, 0.6012", "418.371, 367.904, 23.8599, 0.573", "417.346, 367.392, 23.882, 0.4906", "416.294, 366.952, 23.9173, 0.4814", "415.225, 366.54, 23.9604, 0.683", "414.195, 366.044, 24.012, 0.682", "413.237, 365.446, 24.0797, 0.6692", "412.697, 364.506, 24.2654, 0.699", "412.135, 363.521, 24.4331, 0.7226", "411.188, 362.897, 24.5409, 0.6916", "410.408, 362.083, 24.5921, 0.5384", "409.346, 361.743, 24.5916, 0.4926", "408.305, 361.426, 24.4331, 0.6212", "407.211, 361.201, 24.2262, 0.7402", "406.153, 360.834, 24.0607, 0.6242", "405.672, 359.904, 23.9397, 0.4406", "405.594, 358.766, 23.8602, 0.4068", "405.594, 357.622, 23.8092, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "457.182, 443.715, 26.9027, 0.6074", "456.311, 442.793, 25.8647, 0.6864", "455.64, 441.961, 25.8773, 0.5752", "455.116, 440.993, 25.8821, 0.439", "454.083, 440.739, 25.8899, 0.4264", "453.043, 440.718, 25.9011, 0.3846", "452.513, 439.708, 25.9134, 0.396", "451.864, 438.771, 25.9263, 0.4442", "451.401, 437.733, 25.9515, 0.6298", "450.864, 436.794, 26.0394, 0.7342", "450.159, 435.906, 26.0714, 0.7204", "449.387, 435.098, 26.0229, 0.7862", "448.533, 434.362, 26.0126, 0.6948", "447.716, 433.59, 26.1005, 0.6446", "447.099, 432.642, 26.2209, 0.6584", "446.549, 431.639, 26.3376, 0.6218", "445.934, 430.685, 26.4942, 0.629", "445.403, 429.702, 26.7117, 0.507", "445.013, 428.637, 26.8811, 0.4796", "444.647, 427.583, 26.9147, 0.608", "444.043, 426.634, 26.9371, 0.6616", "443.29, 425.802, 27.0259, 0.7406", "442.46, 425.025, 27.113, 0.7596", "441.471, 424.466, 27.1737, 0.7268", "440.653, 423.723, 27.1452, 0.7664", "439.954, 422.827, 27.1169, 0.8098", "439.322, 421.896, 27.1606, 0.809", "438.719, 420.932, 27.2364, 0.9714", "438.096, 420.017, 27.4016, 0.9342", "437.654, 419.155, 27.3619, 0.9074", "437.331, 418.712, 27.1561, 0.8802", "436.526, 418.036, 27.2051, 0.949", "435.7, 417.355, 27.4176, 0.9566", "434.819, 416.725, 27.7264, 0.8672", "433.908, 416.198, 28.1319, 0.7458", "433.146, 415.397, 28.474, 0.7626", "432.702, 414.377, 28.639, 0.7642", "432.465, 413.265, 28.6569, 0.9106", "432.307, 412.139, 28.6034, 0.9416", "432.252, 411.014, 28.4766, 1.0246", "432.013, 409.923, 28.3727, 1.0528", "431.5, 408.931, 28.42, 1.0302", "431.002, 407.919, 28.5421, 1.1216", "430.708, 406.826, 28.7031, 1.1024", "430.303, 405.78, 28.9243, 1.0672", "430.023, 404.687, 29.1194, 0.9994", "429.971, 403.552, 29.2037, 0.8866", "429.986, 402.426, 29.2107, 0.8434", "429.771, 401.343, 29.2578, 0.6444", "429.225, 400.35, 29.2261, 0.624", "428.946, 399.344, 29.118, 0.7228", "429.263, 398.265, 29.09, 0.7016", "429.43, 397.172, 29.0805, 0.512", "429.148, 396.07, 29.0158, 0.43", "428.848, 394.998, 28.8554, 0.3442", "428.351, 394.147, 28.5796, 0.3192", "427.424, 393.529, 28.2257, 0.3096", "426.495, 392.911, 27.8113, 0.3414", "425.592, 392.217, 27.4417, 0.3892", "424.7, 391.502, 27.1418, 0.5328", "423.807, 390.787, 26.9021, 0.5306", "422.943, 390.056, 26.6974, 0.4586", "422.385, 389.151, 26.3774, 0.4258", "421.828, 388.245, 25.979, 0.5622", "421.594, 387.142, 25.6785, 0.5432", "421.07, 386.135, 25.4842, 0.6836", "420.126, 385.496, 25.3859, 0.5508", "419.116, 384.962, 25.3722, 0.6102", "418.092, 384.521, 25.492, 0.3814", "417.038, 384.18, 26.0767, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "474.102, 440.453, 42.4385, 0.891", "473.801, 440.16, 44.0356, 0.4576", "472.876, 440.041, 45.1088, 0.6868", "472.635, 440.397, 45.6775, 0.6742", "471.633, 440.111, 46.1518, 0.7258", "470.5, 440.041, 46.5433, 0.6886", "469.355, 440.034, 46.8608, 0.8044", "468.212, 440.016, 47.112, 0.5818", "467.482, 439.842, 47.3346, 0.4606", "467.215, 439.78, 47.7792, 0.4228", "466.726, 438.753, 48.1384, 0.5896", "465.979, 437.911, 48.4179, 0.664", "465.084, 437.248, 48.6248, 0.5686", "464.453, 436.353, 48.7684, 0.6088", "463.383, 435.99, 48.8589, 0.5448", "462.294, 435.762, 48.9135, 0.6418", "461.31, 435.178, 48.9908, 0.69", "460.228, 434.909, 49.1014, 0.5038", "459.658, 433.973, 49.2545, 0.3516", "458.76, 433.449, 49.4589, 0.276", "457.867, 432.737, 49.7199, 0.2774", "457.571, 432.736, 50.2093, 0.2796", "456.564, 432.369, 50.8418, 0.284", "455.983, 431.469, 51.5606, 0.292", "455.342, 430.623, 52.3194, 0.3064", "454.336, 430.143, 53.0572, 0.3354", "453.331, 429.661, 53.7552, 0.3778", "452.51, 429.058, 54.4762, 0.5118", "451.759, 428.464, 55.1046, 0.4922", "451.039, 427.6, 55.6394, 0.3848", "450.359, 426.719, 56.1333, 0.3002", "449.714, 425.807, 56.5676, 0.2748", "449.188, 424.791, 56.8789, 0.2752", "448.621, 423.798, 57.0984, 0.2758", "448.036, 422.814, 57.2678, 0.2766", "447.453, 421.831, 57.405, 0.2782", "446.79, 420.922, 57.5943, 0.2814", "446.122, 420.021, 57.8365, 0.2872", "445.47, 419.108, 58.1106, 0.2988", "445.003, 418.063, 58.3209, 0.3144", "444.536, 417.019, 58.4615, 0.3738", "444.497, 415.898, 58.5981, 0.3348", "444.463, 414.777, 58.6936, 0.3016", "444.227, 413.804, 58.7126, 0.2774", "443.134, 413.465, 58.5872, 0.2796" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "474.102, 440.453, 42.4385, 0.891", "474.586, 439.821, 42.555, 0.8154", "475.243, 438.936, 42.5312, 0.767", "475.497, 437.905, 42.3702, 0.6914", "476.234, 437.178, 42.3853, 0.709", "477.167, 436.622, 42.5373, 0.6632", "478.055, 435.914, 42.6227, 0.7312" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_26",
    "id" : "apic_26",
    "points3d" : [ "443.134, 413.465, 58.5872, 0.2796", "443.133, 413.19, 58.1983, 0.284", "443.132, 412.534, 57.4123, 0.292", "442.917, 411.552, 56.488, 0.3064", "442.707, 410.543, 55.5313, 0.3356", "442.674, 409.401, 54.7658, 0.3772", "442.674, 408.347, 54.0677, 0.5174", "442.277, 408.258, 53.5144, 0.4706", "441.506, 407.56, 53.0718, 0.4978", "440.538, 407.075, 52.7601, 0.4544", "440.371, 407.368, 52.5711, 0.6002", "439.927, 407.591, 52.593, 0.4594", "439.904, 407.002, 52.9959, 0.3634", "439.152, 406.241, 53.3084, 0.2988", "438.033, 406.16, 53.482, 0.3142", "436.889, 406.16, 53.5097, 0.3734", "435.745, 406.16, 53.3873, 0.3338", "434.601, 406.16, 53.123, 0.3", "434.434, 406.16, 52.4034, 0.2746", "434.17, 406.115, 51.4458, 0.2748", "433.042, 405.928, 50.6565, 0.2748", "431.913, 405.739, 50.0231, 0.2752", "430.772, 405.701, 49.5345, 0.2758", "430.044, 406.025, 48.9516, 0.2766", "428.982, 406.142, 48.4868, 0.2784", "427.84, 406.16, 48.1606, 0.2818", "426.696, 406.16, 47.9265, 0.2882", "425.552, 406.184, 47.7786, 0.2994", "424.609, 406.592, 47.712, 0.323", "423.997, 407.559, 47.7193, 0.354", "423.148, 408.275, 47.7537, 0.4728", "422.339, 409.069, 47.7968, 0.394", "421.336, 409.364, 47.8848, 0.3268", "420.208, 409.364, 48.0211, 0.277", "419.077, 409.364, 48.1634, 0.2792", "417.933, 409.364, 48.2348, 0.2828", "416.789, 409.364, 48.225, 0.2898", "415.645, 409.364, 48.127, 0.3034", "414.501, 409.364, 47.9416, 0.327", "413.357, 409.364, 47.6823, 0.376", "412.506, 409.502, 47.1755, 0.4416", "411.838, 409.725, 46.3854, 0.6866", "410.903, 409.823, 45.5991, 0.542", "409.759, 409.823, 44.9943, 0.4344", "408.615, 409.823, 44.5572, 0.3718", "407.471, 409.823, 44.2697, 0.5058", "406.327, 409.823, 44.1126, 0.4562", "405.183, 409.823, 44.0348, 0.4388", "404.039, 409.823, 43.9712, 0.502", "402.91, 409.902, 43.869, 0.613", "401.809, 410.122, 43.6895, 0.6206", "400.7, 410.32, 43.4829, 0.4518", "399.643, 410.738, 43.3233, 0.34", "398.872, 411.245, 43.2076, 0.3024", "397.918, 411.874, 43.1326, 0.3212", "396.888, 412.365, 43.0942, 0.3864", "395.838, 412.819, 43.0833, 0.3588", "394.726, 412.99, 43.0833, 0.3418", "393.583, 413.008, 43.0833, 0.373", "392.439, 413.026, 43.0833, 0.356", "391.402, 413.486, 43.0833, 0.2288" ],
    "parent" : "apic_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_25",
    "id" : "apic_25",
    "points3d" : [ "443.134, 413.465, 58.5872, 0.2796", "442.243, 412.558, 60.1199, 0.2288", "441.44, 411.744, 60.6833, 0.2778", "440.671, 410.934, 60.9498, 0.2806", "439.906, 410.124, 61.3096, 0.2854", "439.142, 409.315, 61.7254, 0.2966", "438.377, 408.505, 62.1642, 0.305", "437.608, 407.696, 62.5862, 0.3814", "436.799, 406.887, 63.1767, 0.2288" ],
    "parent" : "apic_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "478.055, 435.914, 42.6227, 0.7312", "477.75, 434.914, 42.726, 0.2288", "477.493, 433.804, 42.7218, 0.2818", "477.324, 432.672, 42.7199, 0.288", "477.135, 431.543, 42.7165, 0.2994", "477.118, 430.399, 42.7109, 0.3204", "476.993, 429.265, 42.7028, 0.3612", "476.858, 428.132, 42.6913, 0.427", "476.768, 426.998, 42.6745, 0.5978", "476.26, 425.973, 42.6504, 0.6772", "475.833, 424.911, 42.6174, 0.6028", "475.699, 423.776, 42.574, 0.6256", "475.509, 422.65, 42.5202, 0.8036" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "478.055, 435.914, 42.6227, 0.7312", "478.667, 435.408, 42.6636, 0.5724", "479.685, 434.948, 42.7462, 0.5174", "480.719, 434.537, 42.9352, 0.626", "481.753, 434.073, 43.1306, 0.7184", "482.822, 433.676, 43.3322, 0.7334", "483.88, 433.345, 43.6176, 0.6054", "484.72, 432.623, 43.8889, 0.6656", "485.286, 431.639, 44.0961, 0.7056", "486.091, 430.848, 44.2459, 0.6712", "486.992, 430.142, 44.3632, 0.6756", "487.867, 429.406, 44.462, 0.5826", "488.88, 428.891, 44.5542, 0.672", "489.853, 428.295, 44.6732, 0.7096", "490.807, 427.749, 44.9067, 0.7168", "491.914, 427.562, 45.1514, 0.5736", "492.977, 427.157, 45.3678, 0.6124", "493.633, 426.249, 45.5622, 0.5802", "494.127, 425.234, 45.7859, 0.5692", "494.969, 424.513, 46.0412, 0.5386", "496.092, 424.394, 46.2319, 0.5336", "497.221, 424.214, 46.375, 0.5018", "498.103, 423.499, 46.482, 0.5514", "498.85, 422.634, 46.5609, 0.8034", "499.752, 421.931, 46.62, 0.9518", "500.579, 421.142, 46.6752, 0.9416", "501.391, 420.336, 46.7454, 0.9362", "502.21, 419.544, 46.8524, 0.8606", "503.103, 418.901, 47.0576, 0.8122", "504.104, 418.35, 47.2234, 0.7308", "505.013, 417.657, 47.3432, 0.7706", "505.911, 416.953, 47.413, 0.8336", "506.644, 416.111, 47.3735, 0.7744" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "475.509, 422.65, 42.5202, 0.8036", "475.133, 421.646, 42.4096, 0.7024", "474.823, 420.565, 42.2624, 0.5478", "474.635, 419.467, 42.1246, 0.5612", "473.781, 418.734, 41.995, 0.5002", "473.374, 417.692, 41.8706, 0.5756", "472.982, 417.076, 41.6632, 0.486", "472.318, 416.194, 41.419, 0.52", "471.535, 415.359, 41.2264, 0.5262", "470.75, 414.562, 41.0648, 0.5838", "469.717, 414.113, 40.885, 0.4682", "468.694, 413.613, 40.7767, 0.4194", "468.014, 412.695, 40.7361, 0.4388", "467.471, 411.687, 40.7453, 0.627", "466.814, 410.751, 40.7898, 0.6966", "466.539, 409.454, 40.9466, 0.8074", "465.92, 408.494, 41.1099, 0.8734", "465.198, 407.611, 41.295, 0.9854", "464.384, 406.824, 41.5176, 1.015", "463.618, 405.992, 41.708, 1.019", "463.246, 404.931, 41.9079, 0.8152", "462.822, 403.929, 42.184, 0.5488", "462.229, 402.991, 42.3914, 0.4272", "461.213, 402.592, 42.5348, 0.4558", "460.461, 401.738, 42.6233, 0.647", "459.516, 401.114, 42.6692, 0.7882", "458.585, 400.123, 42.6756, 0.7132", "457.891, 399.218, 42.653, 0.6082", "457.493, 398.145, 42.625, 0.7044", "456.696, 397.328, 42.5919, 0.8432", "455.838, 396.634, 42.4897, 0.8356", "455.012, 395.85, 42.4054, 0.7344", "454.396, 394.909, 42.3385, 0.7416", "453.497, 394.249, 42.2884, 0.725", "452.427, 393.904, 42.2551, 0.8368", "452.031, 393.587, 42.1996, 0.8136", "450.975, 393.271, 42.1764, 0.7418", "450.005, 392.676, 42.1733, 0.749", "449.084, 392.017, 42.1938, 0.7678", "448.562, 391.064, 42.2397, 0.7786", "448.219, 389.998, 42.3531, 0.6848", "447.924, 388.959, 42.4796, 0.8342", "447.265, 388.044, 42.611, 0.9152", "446.709, 387.395, 42.8602, 0.8732", "446.273, 386.427, 43.1155, 0.8124", "446.048, 385.426, 43.3787, 0.6148", "445.931, 384.329, 43.5856, 0.4344", "445.868, 383.198, 43.7231, 0.3398", "445.371, 382.175, 43.7965, 0.374", "445.023, 381.088, 43.8138, 0.335", "444.452, 380.105, 43.7718, 0.302", "443.911, 379.109, 43.6775, 0.2784", "443.362, 378.114, 43.5789, 0.2818", "442.872, 377.09, 43.5411, 0.288", "442.602, 375.979, 43.5663, 0.3", "442.096, 375.161, 43.654, 0.321", "441.124, 374.759, 43.839, 0.3626", "440.52, 373.864, 44.1924, 0.429", "439.917, 372.969, 44.6594, 0.6038", "439.164, 372.123, 45.0848, 0.6774", "438.859, 371.604, 45.4532, 0.6556", "438.28, 370.619, 45.7755, 0.4704", "438.028, 369.52, 46.0606, 0.3692", "437.495, 368.668, 46.4436, 0.3814", "437.126, 367.907, 47.0005, 0.3484", "436.879, 366.796, 47.5174, 0.328", "436.633, 365.686, 47.9895, 0.3214", "436.387, 364.576, 48.4137, 0.387", "436.204, 363.452, 48.7729, 0.3586", "436.085, 362.314, 49.0566, 0.348", "435.965, 361.177, 49.2988, 0.353", "435.861, 360.037, 49.5429, 0.4714", "435.496, 359.231, 49.9358, 0.3914", "434.855, 358.774, 50.5817, 0.322", "434.055, 358.054, 51.1501, 0.2684", "433.424, 357.124, 51.5805, 0.2626", "432.355, 356.732, 51.8818, 0.2542", "431.293, 356.385, 52.0657, 0.2288", "430.315, 355.791, 52.1534, 0.2288" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "475.509, 422.65, 42.5202, 0.8036", "475.26, 422.526, 41.9202, 0.2288", "475.052, 422.421, 40.1593, 0.3012", "475.382, 422.065, 39.489, 0.3232", "475.501, 421.872, 38.9043, 0.3682", "476.052, 420.875, 38.3866, 0.4318", "476.196, 419.776, 37.8826, 0.6446", "476.196, 418.953, 37.4354, 0.5794", "476.799, 418.53, 36.7682, 0.6312", "477.84, 418.634, 35.9568, 0.5752", "478.936, 418.801, 35.077, 0.523", "480.06, 419.014, 34.2275, 0.6328", "480.255, 419.197, 33.201, 0.5206", "480.624, 419.224, 31.9245, 0.4734", "480.53, 418.342, 30.5682, 0.5192", "480.26, 417.609, 29.1402, 0.644", "480.704, 417.68, 27.6847, 0.6806", "481.835, 417.844, 26.5076, 0.5524", "482.959, 417.945, 25.576, 0.5796", "483.079, 416.702, 24.5185, 0.4872", "483.647, 416.236, 23.4335, 0.5508", "484.663, 416.263, 22.4442, 0.4442", "485.806, 416.242, 21.6384, 0.4216", "485.633, 415.544, 20.769, 0.4438", "485.073, 415.184, 19.7669, 0.6324", "483.974, 414.384, 19.0061, 0.7252", "483.033, 413.736, 18.405, 0.7702", "482.594, 412.827, 17.9046, 0.5574", "482.596, 411.758, 17.3505, 0.4538", "482.334, 410.918, 16.7244, 0.4516", "481.341, 410.638, 16.0241, 0.669", "481.07, 409.614, 15.3936, 0.685", "481.383, 408.533, 14.8523, 0.535", "481.746, 407.59, 14.3758, 0.4418", "481.734, 408.377, 13.7362, 0.5142", "482.625, 407.988, 13.0164, 0.604", "483.365, 407.135, 12.444, 0.755", "483.784, 406.114, 11.9893, 0.6542", "483.958, 404.984, 11.6379, 0.7138", "483.521, 403.999, 11.3792, 0.7708", "483.151, 403.011, 11.0606, 0.68", "483.033, 401.999, 10.7162, 0.551", "483.385, 400.91, 10.4384, 0.5774", "483.075, 399.942, 10.2178, 0.7088", "482.276, 399.148, 10.0442, 0.783", "481.277, 398.59, 9.9086, 0.8266", "480.299, 397.996, 9.7975, 0.678", "479.326, 397.396, 9.6866, 0.6018", "478.796, 396.43, 9.4777, 0.4068", "478.31, 395.429, 9.1958, 0.305", "477.634, 394.672, 8.9006, 0.2288", "476.504, 394.492, 8.4342, 0.2288" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "506.644, 416.111, 47.3735, 0.7744", "507.299, 416.355, 48.1578, 0.2288", "508.381, 416.727, 48.2048, 0.2748", "509.447, 417.139, 48.2233, 0.2752", "510.503, 417.581, 48.2504, 0.2758", "511.559, 418.021, 48.2885, 0.2766", "512.633, 418.227, 48.3386, 0.2784", "513.75, 417.971, 48.4019, 0.2818", "514.854, 417.736, 48.5027, 0.2882", "515.93, 417.554, 48.6942, 0.2994", "517.039, 417.276, 48.872, 0.3228", "518.143, 416.974, 49.0344, 0.3538", "519.242, 416.661, 49.1814, 0.4722", "518.979, 416.793, 49.5295, 0.3934", "520.06, 416.418, 49.8044, 0.3254", "521.14, 416.043, 50.013, 0.2746", "522.221, 415.668, 50.171, 0.2746", "523.327, 415.383, 50.2751, 0.2746", "524.445, 415.143, 50.3269, 0.2746", "525.564, 414.902, 50.3311, 0.2746", "526.396, 415.161, 50.3395, 0.2746", "527.529, 415.017, 50.332, 0.2746", "528.664, 414.873, 50.3135, 0.2746", "529.799, 414.73, 50.2888, 0.2746", "530.94, 414.728, 50.2762, 0.2746", "532.085, 414.753, 50.276, 0.2746", "533.221, 414.825, 50.2821, 0.2746", "534.341, 415.067, 50.2855, 0.2746", "535.458, 415.31, 50.2852, 0.2746", "536.576, 415.552, 50.2818, 0.2746", "537.688, 415.82, 50.2771, 0.2746", "538.799, 416.097, 50.2743, 0.2746", "539.909, 416.375, 50.2751, 0.2746", "541.033, 416.57, 50.2852, 0.2746", "542.167, 416.723, 50.3048, 0.2746", "543.299, 416.875, 50.3303, 0.2746", "544.44, 416.979, 50.3527, 0.2748", "545.581, 417.057, 50.3686, 0.275", "546.714, 417.07, 50.379, 0.2752", "547.796, 416.701, 50.3815, 0.2758", "548.879, 416.331, 50.379, 0.2768", "549.986, 416.224, 50.379, 0.2786", "551.117, 416.391, 50.3857, 0.2826", "552.249, 416.558, 50.3983, 0.288", "553.38, 416.725, 50.4143, 0.305", "554.513, 416.891, 50.4328, 0.305", "555.643, 417.058, 50.4734, 0.4576" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "506.644, 416.111, 47.3735, 0.7744", "507.594, 414.877, 47.3306, 0.6024", "508.392, 414.091, 47.3864, 0.5878", "509.262, 413.375, 47.5283, 0.6846", "510.105, 412.607, 47.7, 0.72", "510.991, 411.906, 47.9209, 0.7974", "511.891, 411.238, 48.1362, 0.885", "512.789, 410.569, 48.2978, 0.8596", "513.737, 409.958, 48.4683, 0.811", "514.658, 409.289, 48.6186, 0.7274", "515.486, 408.516, 48.7326, 0.77", "516.237, 407.656, 48.7721, 0.804", "516.991, 406.796, 48.7595, 0.8574", "517.742, 405.937, 48.7113, 0.774", "518.495, 405.078, 48.6382, 0.5888", "519.398, 404.378, 48.5834, 0.6232", "520.312, 403.691, 48.557, 0.4548", "521.227, 403.004, 48.5632, 0.355", "522.142, 402.317, 48.599, 0.2824", "523.185, 401.853, 48.6654, 0.289", "524.239, 401.409, 48.7684, 0.3012", "525.294, 400.965, 48.9152, 0.3238", "526.263, 400.41, 49.1098, 0.3666", "526.979, 399.517, 49.3492, 0.4418", "527.517, 398.674, 49.7633, 0.601", "527.9, 397.872, 50.4179, 0.7998", "528.283, 397.07, 51.2266, 0.95", "528.906, 396.144, 51.7896, 1.1462", "529.635, 395.273, 52.171, 1.2204", "530.419, 394.44, 52.4544, 1.1648", "531.076, 393.534, 52.7156, 1.083", "531.747, 392.622, 52.9365, 1.058" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "531.747, 392.622, 52.9365, 1.058", "532.757, 392.783, 53.2014, 0.4576", "533.883, 392.981, 53.4027, 0.696", "534.995, 392.812, 53.4772, 0.6932", "535.926, 392.184, 53.583, 0.752", "536.758, 391.453, 53.7855, 0.7806", "537.74, 390.902, 53.9983, 0.7668", "538.853, 390.683, 54.1772, 0.8364", "539.909, 390.264, 54.3236, 0.9582", "540.851, 389.622, 54.4435, 0.993", "541.732, 388.894, 54.5432, 1.069", "542.44, 388.001, 54.6364, 1.1538", "543.169, 387.148, 54.7946, 1.1248", "544.018, 386.405, 55.0024, 1.062", "544.888, 385.668, 55.1866, 0.9878", "545.917, 385.186, 55.328, 0.876", "546.917, 384.678, 55.3801, 0.7708", "547.809, 383.974, 55.4546, 0.7674", "548.628, 383.221, 55.6329, 0.974", "549.533, 382.563, 55.888, 1.0108", "550.531, 382.046, 56.1943, 0.9294", "551.56, 381.552, 56.4827, 0.8176", "552.62, 381.197, 56.8033, 0.8792", "553.737, 381.005, 57.0024, 1.0584", "554.697, 380.398, 57.1091, 1.0782", "555.62, 379.778, 57.276, 1.0294", "556.468, 379.015, 57.3877, 0.8958", "557.396, 378.353, 57.4538, 0.856", "558.357, 377.758, 57.5854, 0.6898", "559.471, 377.51, 57.7122, 0.6002", "560.612, 377.442, 57.8099, 0.5184", "561.643, 377.001, 57.8838, 0.643", "562.426, 376.334, 58.1529, 0.6794", "563.362, 375.69, 58.4242, 0.7738", "564.242, 374.96, 58.6396, 0.817", "565.182, 374.321, 58.7989, 0.8532", "566.216, 373.851, 58.9806, 0.9042", "567.073, 373.136, 59.2004, 0.848", "567.656, 372.188, 59.4516, 0.7884", "568.336, 371.272, 59.6652, 0.6908", "569.156, 370.474, 59.8402, 0.6768", "570.055, 369.772, 59.9822, 0.7548", "571.078, 369.262, 60.0922, 0.8522", "572.086, 368.74, 60.1857, 0.8056", "572.888, 367.932, 60.2927, 0.678", "573.466, 366.976, 60.468, 0.6398", "573.862, 365.947, 60.6894, 0.5208", "574.708, 365.197, 60.8709, 0.5356", "575.724, 364.685, 61.0173, 0.5624", "576.642, 364.003, 61.1366, 0.6168", "577.591, 363.364, 61.238, 0.6934", "578.395, 362.603, 61.332, 0.7246", "578.83, 361.556, 61.4415, 0.6362", "579.583, 360.756, 61.614, 0.724", "580.586, 360.289, 61.8761, 0.8088", "581.533, 359.667, 62.1536, 0.8864", "582.392, 358.944, 62.4109, 0.96", "583.294, 358.276, 62.566, 0.9778", "584.271, 357.699, 62.7348, 0.9014", "585.232, 357.118, 62.9552, 0.8348", "586.205, 356.537, 63.1806, 0.8036", "587.148, 355.889, 63.3833, 0.756", "588.094, 355.266, 63.604, 0.8464", "589.003, 354.609, 63.8649, 0.8314", "589.875, 353.877, 64.09, 0.776", "590.768, 353.167, 64.2496, 0.8072", "591.724, 352.539, 64.3642, 0.903", "592.633, 351.849, 64.4468, 0.8948", "593.434, 351.036, 64.5058, 0.866", "594.193, 350.189, 64.5574, 0.8798", "595.155, 349.626, 64.6215, 0.8076", "596.236, 349.272, 64.7069, 0.6906", "597.208, 348.685, 64.8189, 0.6212", "598.083, 347.978, 64.9978, 0.6912", "599.034, 347.553, 65.2781, 0.5428", "600.145, 347.627, 65.5942, 0.4738", "601.237, 347.582, 65.8202, 0.489", "602.268, 347.159, 65.9336, 0.7388", "603.245, 346.569, 66.022, 0.8122", "604.203, 345.946, 66.1203, 0.7812", "605.203, 345.444, 66.2869, 0.8474", "606.237, 345.01, 66.5381, 0.8274", "607.268, 344.565, 66.8553, 0.7986", "608.224, 343.993, 67.2134, 0.7024", "608.965, 343.148, 67.5391, 0.7328", "609.544, 342.164, 67.8048, 0.6908", "610.234, 341.262, 68.0282, 0.863", "611.055, 340.466, 68.234, 1.1096", "611.966, 339.784, 68.4485, 1.236", "612.984, 339.31, 68.7268, 1.2454", "613.927, 338.925, 69.176, 0.9808", "614.767, 338.368, 69.757, 0.7146", "615.528, 337.566, 70.299, 0.734", "616.315, 336.739, 70.726, 0.7976", "617.276, 336.147, 71.0444, 1.0106", "618.214, 335.508, 71.2715, 1.1722", "619.07, 334.75, 71.4314, 1.2326", "620.0, 334.091, 71.5548, 1.1316", "620.992, 333.601, 71.7651, 1.0624", "621.922, 332.997, 72.0756, 0.8204", "622.869, 332.387, 72.4329, 0.694", "623.978, 332.203, 72.798, 0.7262", "625.086, 332.038, 73.0358, 0.6346", "626.148, 331.785, 73.3482, 0.513", "627.219, 331.738, 73.7324, 0.5132", "628.351, 331.607, 74.0438, 0.5606", "629.309, 330.991, 74.2787, 0.6496", "630.034, 330.108, 74.457, 0.5804", "631.054, 329.598, 74.5956, 0.673", "632.182, 329.41, 74.6925, 0.6884", "633.273, 329.064, 74.7807, 0.7876", "634.239, 328.484, 74.9428, 0.8596", "635.184, 327.842, 75.0831, 0.8488", "636.089, 327.15, 75.2612, 0.614", "637.094, 326.651, 75.5126, 0.535", "638.174, 326.284, 75.7305, 0.4896", "639.184, 325.875, 75.8881, 0.6004", "639.947, 325.203, 76.2544, 0.7748", "640.75, 324.445, 76.6822, 0.7918", "641.805, 324.036, 77.0997, 0.7068", "642.857, 323.733, 77.5642, 0.6584", "643.716, 323.053, 78.0906, 0.7248", "644.461, 322.246, 78.636, 0.7772", "645.112, 321.335, 79.123, 0.7604", "645.71, 320.417, 79.5746, 0.8248", "646.651, 319.795, 79.9254, 0.9356", "647.718, 319.405, 80.2124, 0.9562", "648.729, 318.929, 80.4709, 0.9754", "649.625, 318.238, 80.626, 1.1044", "650.37, 317.405, 80.6963, 1.1174", "650.911, 316.405, 80.7946, 1.0954", "651.333, 315.364, 80.9872, 1.0514", "651.935, 314.44, 81.2697, 0.9854", "652.75, 313.642, 81.5766, 1.0138", "653.614, 312.945, 81.9613, 1.0238", "654.458, 312.28, 82.4533, 1.0182", "655.197, 311.451, 82.9254, 0.8988", "655.793, 310.492, 83.279, 0.976", "656.214, 309.467, 83.629, 1.0424", "656.57, 308.452, 84.0918, 1.0814", "657.072, 307.491, 84.6098, 1.104", "657.745, 306.598, 85.1435, 0.928", "658.536, 305.8, 85.6615, 0.9734", "659.362, 305.016, 86.1344, 0.8552", "660.077, 304.153, 86.6141, 0.7038", "660.734, 303.286, 87.1497, 0.7812", "661.465, 302.54, 87.7671, 0.7878", "662.307, 301.848, 88.3935, 0.777", "663.156, 301.088, 88.9445, 0.64", "663.948, 300.264, 89.4211, 0.7268", "664.833, 299.564, 89.8632, 0.833", "665.734, 298.923, 90.3487, 0.8402", "666.672, 298.386, 90.9107, 0.629", "667.64, 298.017, 91.5855, 0.4126", "668.543, 297.449, 92.2939, 0.3046", "669.422, 296.747, 92.9664, 0.283", "670.299, 296.046, 93.5917, 0.2904", "671.179, 295.343, 94.1612, 0.3034", "672.039, 294.629, 94.687, 0.3302", "672.883, 293.903, 95.1824, 0.3672", "673.724, 293.177, 95.6522, 0.4972", "674.567, 292.451, 96.0924, 0.4416" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "531.747, 392.622, 52.9365, 1.058", "532.068, 392.022, 53.0942, 0.853", "532.468, 390.96, 53.2465, 0.7846", "532.875, 389.919, 53.433, 0.7466", "533.448, 388.951, 53.5797, 0.7026", "534.005, 387.967, 53.6186, 0.7212", "534.708, 387.091, 53.6418, 0.7288", "535.357, 386.26, 53.7933, 0.6436", "535.93, 385.348, 53.9006, 0.7386", "536.505, 384.417, 53.865, 0.831", "537.24, 383.565, 53.8219, 0.952", "538.034, 382.741, 53.825, 0.9618", "538.794, 381.889, 53.8765, 0.8768", "539.322, 380.958, 54.0714, 0.7644", "539.903, 380.064, 54.4121, 0.7932", "540.231, 378.998, 54.7196, 0.8404", "540.666, 377.971, 54.882, 0.9568", "541.192, 376.963, 54.9763, 0.8024", "541.779, 376.014, 55.1306, 0.7138", "542.635, 375.279, 55.2672, 0.7328", "543.481, 374.546, 55.323, 0.7932", "544.08, 373.618, 55.508, 0.7836", "544.781, 372.732, 55.7766, 0.899", "545.396, 371.808, 56.1327, 0.9246", "546.012, 370.852, 56.4858, 0.9698", "546.536, 369.837, 56.8168, 1.0646", "547.041, 368.852, 57.199, 1.1878", "547.564, 367.91, 57.6274, 1.2128", "548.25, 367.008, 57.9908, 1.102", "548.903, 366.097, 58.1818, 0.9754", "549.565, 365.177, 58.2789, 0.8126", "550.21, 364.234, 58.3758, 0.6208", "550.966, 363.387, 58.5141, 0.6476", "551.773, 362.741, 58.8182, 0.6694", "552.654, 362.055, 59.1721, 0.6158", "553.172, 361.036, 59.4672, 0.5164", "554.062, 360.319, 59.6876, 0.561", "555.031, 359.712, 59.8296, 0.6762", "555.835, 358.9, 59.9026, 0.7328", "556.442, 357.93, 59.9222, 0.6834", "557.057, 356.966, 59.9242, 0.6558", "557.867, 356.16, 59.9259, 0.7512", "558.766, 355.456, 59.9281, 0.6746", "559.442, 354.533, 59.9315, 0.6186", "560.218, 353.693, 59.9362, 0.5534", "560.976, 352.836, 59.9427, 0.7034", "561.593, 351.873, 59.9516, 0.8118", "562.231, 350.923, 59.9642, 0.9214", "562.918, 350.008, 59.9816, 0.8808", "563.68, 349.159, 60.006, 0.845", "564.659, 348.572, 60.0407, 0.8164", "565.552, 347.858, 60.0897, 0.8086", "566.275, 346.972, 60.1558, 0.8024", "566.989, 346.079, 60.244, 0.752", "567.822, 345.303, 60.373, 0.847", "568.719, 344.641, 60.5948, 0.7966", "569.536, 343.85, 60.8283, 0.8854", "570.219, 342.932, 61.0344, 0.852", "571.015, 342.113, 61.222, 0.8378", "571.937, 341.437, 61.399, 0.8078", "572.779, 340.666, 61.5768, 0.7696", "573.515, 339.811, 61.7974, 0.8436", "574.159, 339.02, 62.1877, 0.965", "574.945, 338.232, 62.5982, 1.0354", "575.874, 337.564, 62.9264, 1.0032", "576.706, 336.78, 63.1798, 1.046", "577.516, 335.972, 63.3682, 1.087", "578.333, 335.17, 63.5037, 1.119", "579.171, 334.393, 63.6101, 1.164", "580.09, 333.757, 63.7521, 1.089", "581.182, 333.562, 63.9766, 1.03", "582.304, 333.411, 64.1724, 0.7632", "583.278, 332.839, 64.33, 0.5738", "583.956, 331.927, 64.4529, 0.573", "584.417, 330.884, 64.5523, 0.6994", "585.081, 329.975, 64.6629, 0.7706", "585.927, 329.254, 64.8049, 0.7792", "586.656, 328.394, 64.8544, 0.7086", "587.51, 327.663, 64.8679, 0.7706", "588.455, 327.075, 64.9348, 0.6326", "589.002, 326.127, 65.0882, 0.6912", "589.344, 325.064, 65.2109, 0.6456", "589.997, 324.158, 65.324, 0.8512", "590.68, 323.278, 65.5418, 0.9688", "591.387, 322.408, 65.802, 0.865", "591.784, 321.416, 66.1147, 0.6318", "591.872, 320.288, 66.3832, 0.6272", "592.276, 319.278, 66.5686, 0.601", "593.107, 318.515, 66.668, 0.6388", "594.01, 317.865, 66.7464, 0.5186", "594.767, 317.105, 66.9326, 0.5324", "595.268, 316.12, 67.1611, 0.5552", "595.82, 315.133, 67.3532, 0.6084", "596.617, 314.352, 67.4657, 0.6548", "597.487, 313.636, 67.5209, 0.7656", "598.271, 312.816, 67.6085, 0.8502", "598.938, 311.964, 67.8227, 0.9082", "599.71, 311.223, 68.1478, 1.0382", "600.581, 310.5, 68.4726, 0.9386", "601.306, 309.626, 68.7504, 1.0388", "601.896, 308.648, 68.9791, 0.983", "602.515, 307.695, 69.1821, 0.9084", "603.198, 306.8, 69.391, 0.6308", "604.038, 306.052, 69.5635, 0.5624", "604.88, 305.312, 69.6354, 0.5588", "605.555, 304.429, 69.7197, 0.6388", "606.138, 303.461, 69.853, 0.5962", "606.489, 302.388, 69.9793, 0.5274", "606.82, 301.296, 70.0885, 0.5814", "607.218, 300.223, 70.1977, 0.7146", "607.57, 299.149, 70.352, 0.8002", "607.604, 298.412, 70.572, 0.8282", "607.943, 297.616, 70.737, 0.8262", "608.499, 296.651, 70.7809, 0.8582", "609.202, 295.753, 70.8072, 0.7434", "609.856, 294.848, 70.9386, 0.6884", "610.58, 293.975, 71.1208, 0.7344", "611.369, 293.145, 71.3079, 0.79", "612.068, 292.243, 71.5296, 0.8084", "612.693, 291.321, 71.8491, 0.7956", "613.142, 290.274, 72.1003, 0.7694", "613.218, 289.233, 72.4889, 0.734", "612.997, 288.186, 72.9439, 0.605", "613.404, 287.133, 73.2586, 0.6724", "613.916, 286.129, 73.4698, 0.6806", "614.484, 285.145, 73.7173, 0.8066", "615.155, 284.243, 74.0415, 0.732", "615.728, 283.298, 74.4509, 0.716", "616.328, 282.38, 74.9605, 0.7798", "616.969, 281.46, 75.521, 0.901", "617.516, 280.457, 76.0449, 0.8828", "618.187, 279.55, 76.5666, 0.8844", "618.989, 278.834, 77.1795, 0.7152", "619.896, 278.276, 77.8674, 0.7804", "620.833, 277.842, 78.6282, 0.892", "621.747, 277.228, 79.3475, 0.9156", "622.541, 276.518, 80.0808, 0.9356", "623.291, 275.763, 80.7778, 0.859", "623.807, 274.82, 81.405, 0.8098", "624.033, 273.754, 81.891, 0.7246", "624.073, 272.67, 82.0929, 0.7656", "624.24, 271.615, 82.126, 0.7928", "624.789, 270.677, 82.1929, 0.85", "625.326, 269.729, 82.3049, 0.6962", "625.667, 268.736, 82.3012, 0.7568", "626.114, 267.754, 82.266, 0.7918", "626.357, 266.685, 82.3746, 1.0046", "626.556, 265.581, 82.5684, 1.138", "626.822, 264.5, 82.8318, 1.2812", "627.237, 263.457, 83.1174, 1.3658", "627.786, 262.454, 83.3846, 1.2562", "628.296, 261.431, 83.6192, 1.2022", "628.581, 260.333, 83.8228, 1.0644", "628.711, 259.197, 84.0308, 0.9898", "628.987, 258.117, 84.3116, 0.662", "629.31, 257.04, 84.6566, 0.5158", "629.463, 255.93, 85.0466, 0.5202", "629.742, 254.999, 85.5767, 0.7926", "630.174, 254.047, 86.1521, 0.9322", "630.51, 253.0, 86.5393, 0.9042", "631.057, 252.096, 86.6704, 0.8722", "631.697, 251.17, 86.7255, 0.7164", "632.28, 250.26, 86.8798, 0.6678", "632.904, 249.408, 87.141, 0.5548", "633.513, 248.465, 87.4062, 0.456", "633.729, 247.361, 87.579, 0.4224", "634.093, 246.3, 87.6347, 0.5484", "634.564, 245.261, 87.6688, 0.5546", "634.828, 244.165, 87.6114, 0.5258", "635.523, 243.496, 87.6064, 0.4392", "636.257, 242.701, 87.5286, 0.4398", "636.797, 241.711, 87.5745, 0.5746" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "674.567, 292.451, 96.0924, 0.4416", "675.378, 292.06, 98.2288, 0.2288", "676.357, 291.758, 99.9186, 0.2746", "677.377, 291.499, 100.636, 0.2746", "678.396, 291.241, 101.471, 0.2746", "679.417, 290.983, 102.375, 0.2748", "680.435, 290.725, 103.301, 0.2748", "681.456, 290.467, 104.214, 0.2752", "682.271, 290.861, 104.998, 0.2758", "682.914, 291.808, 105.614, 0.2766", "683.547, 292.751, 106.142, 0.2784", "684.161, 293.682, 106.691, 0.2822", "684.776, 294.613, 107.285, 0.288", "685.39, 295.544, 107.942, 0.3008", "686.004, 296.477, 108.68, 0.318", "686.617, 297.408, 109.496, 0.3808", "687.275, 297.082, 110.477, 0.3476", "687.943, 296.415, 111.6, 0.3248", "688.615, 295.747, 112.816, 0.3228", "689.284, 295.079, 114.078, 0.3538", "690.148, 294.808, 115.292, 0.4722", "691.231, 294.984, 116.379, 0.3934", "692.315, 295.16, 117.343, 0.3256", "693.398, 295.335, 118.206, 0.2748", "694.481, 295.511, 118.994, 0.2748", "695.565, 295.687, 119.726, 0.2752", "696.646, 295.862, 120.418, 0.2758", "697.729, 296.039, 121.076, 0.2766", "698.812, 296.215, 121.699, 0.2784", "699.753, 295.645, 122.189, 0.2818", "700.669, 294.961, 122.568, 0.2882", "701.588, 294.277, 122.875, 0.2994", "702.504, 293.598, 123.145, 0.3228", "703.447, 294.159, 123.52, 0.3538", "704.388, 294.718, 123.984, 0.4722", "705.331, 295.279, 124.522, 0.3934", "706.271, 295.838, 125.105, 0.3254", "707.356, 296.127, 125.617, 0.2746", "708.482, 296.332, 126.04, 0.2746", "709.607, 296.536, 126.388, 0.2748", "710.708, 296.655, 126.768, 0.2748", "711.796, 296.718, 127.228, 0.275", "712.883, 296.782, 127.753, 0.2754", "713.969, 296.845, 128.325, 0.2764", "715.072, 297.044, 128.838, 0.278", "716.182, 297.318, 129.251, 0.281", "717.294, 297.59, 129.604, 0.2862", "718.239, 298.204, 129.911, 0.2966", "719.138, 298.911, 130.191, 0.3134", "720.055, 299.447, 130.542, 0.356", "721.004, 299.721, 131.076, 0.3814", "721.951, 299.995, 132.651, 0.6864" ],
    "parent" : "apic_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "674.567, 292.451, 96.0924, 0.4416", "674.802, 292.274, 96.3987, 0.4046", "675.716, 291.587, 96.5938, 0.4724", "676.633, 290.901, 96.6997, 0.3936", "677.547, 290.213, 96.7372, 0.326", "678.503, 289.6, 96.7285, 0.2758", "679.576, 289.204, 96.6918, 0.2766", "680.648, 288.807, 96.6372, 0.2782", "681.721, 288.412, 96.5594, 0.2814", "682.794, 288.015, 96.455, 0.2872", "683.874, 287.635, 96.3228, 0.2988", "684.953, 287.256, 96.1657, 0.3144" ],
    "parent" : "apic_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "636.797, 241.711, 87.5745, 0.5746", "636.539, 240.742, 87.8786, 0.6336", "636.406, 239.706, 88.3291, 0.5238", "636.411, 238.569, 88.734, 0.4704", "636.432, 237.459, 88.9694, 0.5556", "636.556, 236.33, 89.1688, 0.7376", "636.929, 235.286, 89.4149, 0.7274", "637.294, 234.303, 89.7134, 0.5678", "637.15, 233.171, 89.9676, 0.4944", "637.062, 232.034, 90.188, 0.654", "637.062, 230.89, 90.3571, 0.6572" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "636.797, 241.711, 87.5745, 0.5746", "637.786, 240.881, 85.4661, 0.2288", "638.629, 240.116, 85.4627, 0.2762", "639.083, 239.082, 85.4613, 0.2776", "640.034, 238.478, 85.4596, 0.2798", "641.044, 237.941, 85.4571, 0.2844", "642.003, 237.317, 85.4535, 0.2928", "642.885, 236.608, 85.4484, 0.3082", "643.247, 235.579, 85.4412, 0.3388", "643.648, 234.53, 85.4314, 0.3844", "644.453, 233.885, 85.4174, 0.524", "644.931, 232.936, 85.398, 0.5144", "645.2, 231.826, 85.3714, 0.427", "645.301, 230.692, 85.3345, 0.373", "645.301, 229.548, 85.2796, 0.436", "645.405, 228.419, 85.2029, 0.4458", "646.153, 227.558, 85.1015, 0.5294", "646.656, 226.533, 84.985, 0.5926" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "684.953, 287.256, 96.1657, 0.3144", "685.521, 287.158, 96.824, 0.2288", "686.648, 286.961, 97.1936, 0.2746", "687.552, 286.436, 97.3364, 0.2746", "688.158, 285.467, 97.5271, 0.2746", "688.45, 284.445, 97.8552, 0.2746", "688.693, 283.436, 98.3035, 0.2748", "689.633, 282.785, 98.6992, 0.2748", "690.573, 282.134, 99.0492, 0.2752", "691.487, 281.45, 99.3572, 0.2758", "692.325, 280.671, 99.6226, 0.2766", "693.002, 279.795, 99.9205, 0.2782", "693.552, 278.842, 100.308, 0.2814", "693.898, 277.8, 100.755, 0.287", "694.057, 276.679, 101.217, 0.2988", "694.432, 275.617, 101.653, 0.3142", "694.74, 274.541, 102.125, 0.3734", "695.046, 273.465, 102.613, 0.3338", "695.354, 272.389, 103.108, 0.3", "695.664, 271.313, 103.609, 0.2746", "696.034, 270.259, 104.11, 0.2746", "696.403, 269.204, 104.595, 0.2746", "696.773, 268.149, 105.047, 0.2746", "697.185, 267.109, 105.444, 0.2746", "697.784, 266.134, 105.716, 0.2746", "698.383, 265.16, 105.89, 0.2746", "698.982, 264.185, 105.988, 0.2746", "699.585, 263.213, 106.034, 0.2746", "700.214, 262.257, 106.049, 0.2746", "700.843, 261.302, 106.05, 0.2746", "701.471, 260.346, 106.052, 0.2746", "702.09, 259.385, 106.055, 0.2746", "702.543, 258.335, 106.059, 0.2746", "702.995, 257.284, 106.064, 0.2746", "703.45, 256.233, 106.072, 0.2746", "703.903, 255.183, 106.082, 0.2746", "704.471, 254.193, 106.097, 0.2746", "705.07, 253.219, 106.118, 0.2746", "705.672, 252.244, 106.147, 0.2746", "706.271, 251.27, 106.186, 0.2746", "706.997, 250.393, 106.243, 0.2746", "707.773, 249.553, 106.325, 0.2746", "708.422, 248.611, 106.437, 0.2746", "709.161, 247.764, 106.584, 0.2746", "710.13, 247.159, 106.764, 0.2746", "710.844, 246.67, 107.129, 0.2746", "711.427, 246.219, 107.676, 0.2746", "712.273, 245.474, 108.077, 0.2746", "713.078, 244.726, 108.29, 0.2746", "713.338, 243.919, 107.999, 0.2746", "713.596, 243.113, 107.323, 0.2746", "713.854, 242.307, 106.378, 0.2746", "714.055, 241.328, 105.435, 0.2746", "714.203, 240.194, 104.707, 0.2746", "714.456, 239.086, 104.201, 0.2746", "714.835, 238.006, 103.919, 0.2746", "715.443, 237.064, 103.789, 0.2746", "716.221, 236.226, 103.749, 0.2746", "716.943, 235.34, 103.742, 0.2746", "717.616, 234.415, 103.74, 0.2744", "718.273, 233.479, 103.74, 0.2744", "718.932, 232.543, 103.74, 0.2742", "719.59, 231.607, 103.74, 0.2736", "720.331, 230.74, 103.74, 0.2728", "721.109, 229.9, 103.74, 0.2712", "721.689, 228.914, 103.74, 0.2684", "722.099, 227.889, 103.74, 0.2626", "722.0, 226.75, 103.74, 0.2542", "721.82, 225.633, 103.74, 0.2288", "721.309, 224.609, 103.74, 0.2288" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "684.953, 287.256, 96.1657, 0.3144", "685.484, 287.602, 95.716, 0.3738", "686.489, 287.716, 95.3425, 0.3348", "687.201, 287.945, 94.9617, 0.3014", "687.701, 287.945, 94.6758, 0.2774", "688.844, 287.945, 94.4776, 0.2796", "689.989, 287.945, 94.3592, 0.2838", "691.133, 287.945, 94.3121, 0.2914", "692.268, 287.945, 94.2452, 0.3056", "693.413, 287.945, 94.2054, 0.3342", "694.557, 287.945, 94.1808, 0.375", "695.701, 287.945, 94.1724, 0.5112", "696.844, 287.966, 94.1822, 0.4684", "697.982, 288.02, 94.2127, 0.4492", "699.127, 288.02, 94.262, 0.5804", "700.271, 288.02, 94.3314, 0.47", "701.414, 288.02, 94.4297, 0.3826", "702.559, 288.02, 94.5633, 0.3354", "703.703, 288.02, 94.7341, 0.3778", "704.83, 288.174, 94.9399, 0.5118", "706.278, 288.45, 95.4044, 0.4922", "707.293, 288.675, 95.9778, 0.3848", "708.299, 288.937, 96.5331, 0.3002", "709.443, 288.937, 96.9511, 0.2748", "710.588, 288.937, 97.2415, 0.2752", "711.732, 288.937, 97.4159, 0.2758", "712.875, 288.937, 97.4865, 0.2766", "714.02, 288.937, 97.5044, 0.2786", "715.164, 288.937, 97.5044, 0.2822", "716.307, 288.937, 97.5044, 0.2882", "717.452, 288.937, 97.5044, 0.3004", "718.596, 288.937, 97.5044, 0.322", "719.74, 288.937, 97.5044, 0.3644", "720.883, 288.937, 97.5047, 0.4302", "722.028, 288.937, 97.5047, 0.6178", "723.172, 288.937, 97.5047, 0.645", "724.315, 288.937, 97.5047, 0.8784", "725.46, 288.937, 97.505, 0.8822", "726.604, 288.937, 97.5052, 0.6826", "727.747, 288.937, 97.5055, 0.6292", "728.892, 288.937, 97.5058, 0.594", "730.036, 288.937, 97.5066, 0.4498", "731.164, 289.104, 97.5075, 0.3358", "732.294, 289.292, 97.5086, 0.2942", "733.429, 289.394, 97.5103, 0.3108", "734.573, 289.394, 97.5125, 0.3426", "735.716, 289.394, 97.5159, 0.397", "736.848, 289.533, 97.5204, 0.5184", "737.973, 289.746, 97.5268, 0.6434", "739.08, 290.012, 97.5358, 0.6778", "740.143, 290.438, 97.5481, 0.5546", "741.206, 290.856, 97.5652, 0.5462", "742.289, 291.225, 97.5895, 0.6068", "743.372, 291.594, 97.6251, 0.5782", "744.51, 291.65, 97.6732, 0.5224", "745.655, 291.668, 97.734, 0.4328", "746.793, 291.711, 97.8166, 0.4284", "747.898, 291.903, 97.9812, 0.553", "749.005, 292.092, 98.1982, 0.5938", "750.148, 292.13, 98.3676, 0.4494", "751.293, 292.166, 98.492, 0.3352", "752.432, 292.251, 98.5746, 0.2926", "753.56, 292.44, 98.6196, 0.3094", "754.689, 292.627, 98.6325, 0.3334", "755.82, 292.795, 98.6303, 0.41", "756.953, 292.959, 98.6269, 0.3976", "758.086, 293.105, 98.6227, 0.4384", "759.224, 293.225, 98.6166, 0.4328", "760.362, 293.346, 98.6079, 0.3594", "761.435, 293.727, 98.5958, 0.3002", "762.497, 294.152, 98.5793, 0.2748", "763.615, 294.319, 98.5558, 0.275", "764.758, 294.376, 98.5214, 0.2754", "765.898, 294.446, 98.474, 0.2762", "766.919, 294.957, 98.4138, 0.2776", "767.943, 295.47, 98.3416, 0.2802", "768.984, 295.877, 98.1798, 0.285", "770.033, 296.263, 97.9555, 0.2938", "771.177, 296.263, 97.7785, 0.3112", "772.312, 296.383, 97.6458, 0.3384", "773.335, 296.859, 97.5534, 0.413", "774.025, 297.757, 97.4971, 0.4328", "774.966, 298.34, 97.4725, 0.3594", "776.067, 298.655, 97.4593, 0.3004", "777.155, 299.0, 97.4403, 0.2752", "778.192, 299.483, 97.4154, 0.2758", "779.236, 299.949, 97.3843, 0.2766", "780.344, 300.227, 97.347, 0.2784", "780.885, 300.82, 97.228, 0.2816", "781.666, 301.552, 97.148, 0.2876", "782.289, 302.473, 97.0746, 0.3", "783.068, 303.295, 97.0026, 0.3164", "783.763, 304.187, 96.9394, 0.3776", "784.098, 305.268, 96.8752, 0.3418", "784.53, 305.933, 96.6336, 0.3134", "784.739, 307.043, 96.4547, 0.305", "785.583, 307.617, 96.3376, 0.305", "786.385, 308.079, 96.6, 0.4576" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "637.062, 230.89, 90.3571, 0.6572", "637.429, 231.638, 90.2899, 0.6864", "638.503, 231.334, 91.1666, 0.491", "639.577, 231.03, 91.5558, 0.4376", "640.646, 230.658, 91.9794, 0.3596", "641.635, 230.105, 92.4076, 0.3426", "642.581, 229.612, 92.8922, 0.3792", "643.646, 229.796, 93.5446, 0.3444", "644.573, 229.437, 94.2665, 0.3192", "645.352, 228.699, 95.0608, 0.3112", "645.939, 228.278, 96.1887, 0.3382", "646.526, 227.857, 97.5551, 0.413", "647.236, 227.576, 99.0357, 0.4326", "648.182, 227.566, 100.502, 0.3592", "649.156, 227.762, 101.839, 0.3", "649.93, 227.891, 102.971, 0.2746", "650.968, 227.832, 104.01, 0.2746", "652.005, 227.774, 104.983, 0.2748", "653.023, 227.598, 105.9, 0.2748", "653.961, 226.979, 106.71, 0.275", "654.901, 226.36, 107.457, 0.2752", "655.839, 225.741, 108.168, 0.276", "656.778, 225.122, 108.857, 0.2774", "657.718, 224.503, 109.554, 0.2794", "658.656, 223.884, 110.286, 0.2838", "659.486, 223.326, 111.17, 0.2914", "660.257, 222.802, 112.224, 0.3054", "660.885, 222.076, 113.364, 0.3338", "661.405, 221.197, 114.527, 0.3738", "661.922, 220.318, 115.683, 0.511", "662.159, 219.257, 116.743, 0.4594", "662.365, 218.176, 117.701, 0.4746", "662.57, 217.095, 118.577, 0.4226", "662.775, 216.014, 119.395, 0.4866", "663.219, 215.078, 120.198, 0.5118", "663.914, 214.294, 121.011, 0.5568", "664.609, 213.512, 121.831, 0.4184", "664.896, 212.552, 122.563, 0.3254", "664.749, 211.418, 123.143, 0.2744", "664.52, 210.297, 123.616, 0.2742", "664.258, 209.196, 124.03, 0.2736", "663.542, 208.375, 124.539, 0.2728", "662.823, 207.555, 125.161, 0.2712", "662.106, 206.734, 125.873, 0.2684", "661.427, 205.896, 126.64, 0.2626", "661.198, 204.869, 127.45, 0.2542", "660.966, 203.841, 128.249, 0.2288", "660.737, 202.814, 129.886, 0.2288" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "637.062, 230.89, 90.3571, 0.6572", "637.062, 229.788, 90.4624, 0.482", "637.062, 228.644, 90.5103, 0.3498", "637.062, 227.5, 90.5232, 0.3146", "637.062, 226.356, 90.5265, 0.374", "637.062, 225.212, 90.5265, 0.3352", "637.062, 224.068, 90.5265, 0.3028", "637.062, 222.924, 90.5268, 0.2794", "637.062, 221.78, 90.5268, 0.2838", "637.062, 220.636, 90.5268, 0.2912", "637.062, 219.492, 90.5268, 0.3056", "637.062, 218.348, 90.5271, 0.3318", "637.062, 217.204, 90.5274, 0.3836", "637.062, 216.06, 90.5276, 0.463", "636.659, 215.035, 90.5279, 0.6912", "635.914, 214.178, 90.5288, 0.7204", "635.458, 213.141, 90.5296, 0.6276", "635.44, 211.998, 90.5307, 0.4836", "635.081, 210.932, 90.5324, 0.5356", "634.799, 209.833, 90.5346, 0.4592", "634.643, 208.7, 90.5377, 0.4682", "634.546, 207.561, 90.5425, 0.4406", "634.546, 206.417, 90.5486, 0.374", "634.546, 205.273, 90.5576, 0.327", "634.546, 204.128, 90.5699, 0.3264", "634.546, 202.984, 90.5873, 0.3606", "634.546, 201.84, 90.6108, 0.4848", "634.546, 200.697, 90.6441, 0.4176", "634.546, 199.553, 90.6931, 0.3652", "634.546, 198.408, 90.7612, 0.3738", "634.546, 197.264, 90.8496, 0.3348", "634.546, 196.12, 90.9577, 0.3016", "634.556, 195.221, 91.1585, 0.2774", "635.033, 194.893, 91.5034, 0.2798", "635.242, 193.774, 91.7882, 0.2842", "635.276, 192.632, 92.0186, 0.2924", "635.367, 191.492, 92.209, 0.3086", "635.378, 190.348, 92.3698, 0.3322", "635.378, 189.204, 92.5092, 0.4082", "635.378, 188.06, 92.6456, 0.393", "635.378, 186.916, 92.8052, 0.435", "635.262, 186.695, 93.3038, 0.402", "635.148, 185.56, 93.711, 0.4212", "634.825, 184.492, 94.033, 0.524", "634.581, 183.393, 94.2766, 0.6174", "633.956, 182.438, 94.4496, 0.8042", "633.432, 181.501, 94.5602, 0.6258", "633.318, 180.397, 94.696, 0.5552", "633.318, 179.253, 94.8122, 0.5336", "633.318, 178.109, 94.911, 0.4224", "633.318, 176.976, 95.0261, 0.3324", "632.745, 176.157, 95.0947, 0.2876", "632.541, 175.043, 95.1644, 0.2986", "632.403, 173.915, 95.2417, 0.32", "632.403, 172.771, 95.3484, 0.3548", "632.403, 171.628, 95.4881, 0.4436", "632.403, 170.565, 95.7852, 0.49", "632.403, 169.447, 96.1218, 0.4626", "632.289, 168.32, 96.4541, 0.5062", "632.632, 167.367, 96.9508, 0.586", "632.741, 166.705, 97.3636, 0.5088", "633.0, 165.974, 97.8586, 0.5434", "633.354, 164.894, 98.2304, 0.4318", "633.581, 163.779, 98.5146, 0.3928", "633.937, 162.696, 98.735, 0.4198", "634.473, 161.687, 98.9131, 0.4452", "634.806, 160.615, 99.0979, 0.3834", "634.806, 159.471, 99.3, 0.3396", "634.791, 158.341, 99.57, 0.3734", "634.64, 157.334, 100.062, 0.3338", "634.489, 156.328, 100.707, 0.3", "634.484, 155.24, 101.384, 0.2748", "634.484, 154.148, 102.052, 0.2748", "634.484, 153.019, 102.589, 0.275", "634.484, 151.875, 102.957, 0.2754", "634.37, 150.768, 103.209, 0.2762", "634.026, 149.734, 103.452, 0.2774", "633.999, 148.596, 103.564, 0.2798", "633.37, 147.736, 103.55, 0.2842", "632.528, 147.03, 103.367, 0.2922", "631.684, 146.324, 103.065, 0.3084", "630.833, 145.608, 102.719, 0.332", "629.961, 144.866, 102.442, 0.4074", "629.181, 144.05, 102.252, 0.392", "628.609, 143.058, 102.143, 0.4328", "627.984, 142.108, 102.102, 0.3976", "627.189, 141.285, 102.105, 0.415", "626.437, 140.428, 102.132, 0.5036", "625.807, 139.473, 102.17, 0.6232", "625.172, 138.522, 102.222, 0.6036", "624.513, 137.585, 102.285, 0.5952", "623.828, 136.684, 102.381, 0.4432", "623.041, 135.897, 102.57, 0.3656", "622.317, 135.038, 102.777, 0.3748", "621.659, 134.102, 102.936, 0.3362", "621.043, 133.139, 103.051, 0.305", "620.471, 132.148, 103.126, 0.2796", "619.78, 131.256, 103.164, 0.305", "618.919, 130.502, 103.173, 0.2288" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "646.656, 226.533, 84.985, 0.5926", "647.12, 226.145, 87.67, 0.2288", "647.836, 225.64, 88.7211, 0.2746", "647.273, 225.93, 89.1069, 0.2746", "648.075, 225.114, 89.427, 0.2746", "648.877, 224.298, 89.6823, 0.2748", "649.679, 223.484, 89.8761, 0.2748", "650.481, 222.668, 90.0119, 0.2752", "651.283, 221.854, 90.0942, 0.2758", "652.085, 221.038, 90.1698, 0.2766", "652.885, 220.222, 90.2418, 0.2782", "653.861, 219.643, 90.3148, 0.2814", "654.883, 219.135, 90.386, 0.287", "655.961, 218.752, 90.4299, 0.2988", "657.039, 218.37, 90.452, 0.3142", "658.122, 217.998, 90.4621, 0.3734", "659.203, 217.63, 90.4646, 0.3338", "660.286, 217.26, 90.4632, 0.3", "661.37, 216.892, 90.4613, 0.2746", "662.453, 216.524, 90.4624, 0.2746", "663.536, 216.154, 90.4658, 0.2746", "664.617, 215.786, 90.4702, 0.2746", "665.702, 215.417, 90.4761, 0.2746", "666.784, 215.049, 90.4845, 0.2746", "667.867, 214.68, 90.4963, 0.2746", "668.951, 214.311, 90.5114, 0.2746", "670.034, 213.943, 90.531, 0.2746", "671.161, 213.764, 90.5654, 0.2746", "672.294, 213.613, 90.6119, 0.2746", "673.427, 213.464, 90.6657, 0.2746", "674.56, 213.312, 90.7225, 0.2746", "675.693, 213.163, 90.7788, 0.2746", "676.741, 212.776, 90.8208, 0.2746", "677.702, 212.156, 90.8396, 0.2746", "678.663, 211.536, 90.8429, 0.2746", "679.629, 210.957, 90.8404, 0.2744", "680.697, 211.365, 90.8597, 0.2744", "681.766, 211.773, 90.8978, 0.2742", "682.828, 211.864, 90.956, 0.2736", "683.883, 211.428, 91.0347, 0.2728", "684.939, 210.992, 91.126, 0.2712", "685.995, 210.697, 91.2106, 0.2684", "687.052, 211.122, 91.2355, 0.2626", "688.111, 211.546, 91.2159, 0.2542", "689.174, 211.868, 91.1786, 0.2288", "690.268, 211.575, 91.2842, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "646.656, 226.533, 84.985, 0.5926", "646.596, 226.279, 84.7689, 0.6986", "646.445, 225.327, 84.3674, 0.7212", "646.155, 224.258, 84.021, 0.6906", "645.103, 224.031, 83.725, 0.5302", "644.042, 223.757, 83.4742, 0.505", "643.505, 223.077, 83.1023, 0.511", "643.005, 222.103, 82.8167, 0.4958", "642.538, 221.059, 82.5882, 0.5936", "642.02, 220.039, 82.3715, 0.6222", "641.658, 218.99, 82.1584, 0.5008", "641.64, 217.846, 81.9431, 0.435", "640.976, 217.183, 81.6253, 0.4578", "640.495, 216.429, 81.1087, 0.7114", "640.495, 215.31, 80.5913, 0.6138", "640.495, 214.166, 80.1091, 0.4416", "640.495, 213.022, 79.6496, 0.3112", "640.495, 211.894, 79.1456, 0.2954", "640.495, 210.795, 78.5694, 0.314", "640.495, 210.303, 77.7305, 0.3434", "639.859, 210.083, 76.7239, 0.4224", "639.81, 208.995, 75.9195, 0.4502", "639.81, 207.851, 75.3242, 0.3912", "639.81, 206.707, 74.9179, 0.361", "639.81, 205.563, 74.6693, 0.3784", "639.81, 204.419, 74.5382, 0.513", "639.872, 203.288, 74.4251, 0.4944", "640.018, 202.171, 74.2476, 0.389", "640.036, 201.027, 74.0746, 0.3078", "640.038, 199.883, 73.906, 0.2892", "640.038, 198.78, 73.6677, 0.3012", "640.038, 197.691, 73.3471, 0.326", "640.038, 196.559, 73.0433, 0.3596", "640.038, 195.415, 72.8174, 0.4832", "640.038, 194.271, 72.6527, 0.4136", "640.038, 193.127, 72.5435, 0.3628", "640.038, 191.983, 72.4819, 0.347", "640.038, 190.839, 72.4469, 0.3934", "640.038, 189.695, 72.4122, 0.5714", "640.038, 188.551, 72.364, 0.4528", "640.038, 187.407, 72.2966, 0.3514", "640.038, 186.263, 72.2025, 0.2758", "640.038, 185.119, 72.0692, 0.2766", "640.038, 183.975, 71.8808, 0.2782", "640.038, 182.831, 71.6307, 0.2814", "640.038, 181.699, 71.2746, 0.2872", "640.038, 180.603, 70.7722, 0.2988", "640.038, 179.883, 69.9882, 0.3144", "640.047, 179.545, 68.959, 0.3738", "640.497, 178.504, 68.1542, 0.335", "641.047, 177.503, 67.5676, 0.3018", "641.448, 176.431, 67.1821, 0.278", "641.93, 175.393, 66.9696, 0.281", "642.127, 174.268, 66.892, 0.2862", "642.492, 173.189, 66.883, 0.2962", "643.036, 172.195, 66.8721, 0.3146", "643.622, 171.285, 66.8564, 0.3508", "643.919, 170.18, 66.8338, 0.4062", "644.216, 169.075, 66.8035, 0.565", "644.508, 167.97, 66.7663, 0.5864", "644.556, 166.829, 66.7128, 0.5804", "644.556, 165.695, 66.6165, 0.5612", "644.556, 164.56, 66.5011, 0.5656", "644.547, 163.425, 66.3916, 0.61", "644.323, 162.304, 66.358, 0.5138", "644.098, 161.182, 66.4065, 0.5168", "643.982, 160.133, 66.5843, 0.5578", "643.857, 159.002, 66.8816, 0.4618", "643.731, 157.873, 67.2725, 0.431", "643.659, 156.788, 67.7751, 0.3462", "643.724, 155.817, 68.4631, 0.324", "643.792, 154.847, 69.2614, 0.314", "644.098, 153.855, 70.0571, 0.3732", "644.098, 152.878, 70.644, 0.3334", "644.098, 151.734, 71.045, 0.299", "644.098, 150.59, 71.2844, 0.2728", "644.098, 149.446, 71.395, 0.2712", "644.098, 148.302, 71.4274, 0.2684", "644.556, 147.347, 71.4274, 0.2626", "644.556, 146.203, 71.4274, 0.2542", "644.89, 145.116, 71.4274, 0.2288", "645.929, 144.698, 71.4274, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_738",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_739",
    "groups" : [ ],
    "sections" : [ "dend_21", "dend_18", "dend_17", "dend_1", "dend_0", "apic_0", "dend_25", "dend_22", "dend_20", "dend_19", "dend_12", "dend_2", "apic_28", "apic_1", "dend_31", "dend_26", "dend_24", "dend_23", "dend_16", "dend_13", "dend_9", "dend_3", "apic_3", "apic_2", "dend_30", "dend_27", "dend_15", "dend_14", "dend_11", "dend_10", "dend_8", "dend_4", "apic_27", "apic_4", "dend_29", "dend_28", "dend_7", "dend_6", "dend_5", "apic_24", "apic_5", "apic_26", "apic_25", "apic_21", "apic_6", "apic_23", "apic_22", "apic_20", "apic_7", "apic_15", "apic_8", "apic_19", "apic_16", "apic_12", "apic_9", "apic_18", "apic_17", "apic_14", "apic_13", "apic_11", "apic_10" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_21", "dend_18", "dend_17", "dend_1", "dend_0", "dend_25", "dend_22", "dend_20", "dend_19", "dend_12", "dend_2", "dend_31", "dend_26", "dend_24", "dend_23", "dend_16", "dend_13", "dend_9", "dend_3", "dend_30", "dend_27", "dend_15", "dend_14", "dend_11", "dend_10", "dend_8", "dend_4", "dend_29", "dend_28", "dend_7", "dend_6", "dend_5" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_28", "apic_1", "apic_3", "apic_2", "apic_27", "apic_4", "apic_24", "apic_5", "apic_26", "apic_25", "apic_21", "apic_6", "apic_23", "apic_22", "apic_20", "apic_7", "apic_15", "apic_8", "apic_19", "apic_16", "apic_12", "apic_9", "apic_18", "apic_17", "apic_14", "apic_13", "apic_11", "apic_10" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30441",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "apic_0", "axon_1", "axon_1", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_4", "apic_4", "apic_4", "apic_4", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "2.6648488"
  }, {
    "group" : "apic",
    "value" : "2.6648488"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "209.80556"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "7.8276775E-5",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "5.1371735E-10",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.5168655",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "4.2897425E-4",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.017671222",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.2304885E-5",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0015424324",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.19573206",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "1.990249E-4",
    "erev" : "-96.33703"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "4.5123506E-5",
    "erev" : "-96.33703"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "6.359287E-6",
    "erev" : "-96.33703"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "2.8151568E-5",
    "erev" : "-96.33703"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "5.528706E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0050255745",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_479427369",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_479427369

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_1
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_28, id: apic_28, parent: apic_0
create apic_28
public apic_28
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_2
create dend_9
public dend_9
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_3
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: apic_27, id: apic_27, parent: apic_3
create apic_27
public apic_27
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_7, id: dend_7, parent: dend_4
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: apic_24, id: apic_24, parent: apic_4
create apic_24
public apic_24
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_26, id: apic_26, parent: apic_24
create apic_26
public apic_26
// Section: apic_25, id: apic_25, parent: apic_24
create apic_25
public apic_25
// Section: apic_21, id: apic_21, parent: apic_5
create apic_21
public apic_21
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_23, id: apic_23, parent: apic_21
create apic_23
public apic_23
// Section: apic_22, id: apic_22, parent: apic_21
create apic_22
public apic_22
// Section: apic_20, id: apic_20, parent: apic_6
create apic_20
public apic_20
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_15, id: apic_15, parent: apic_7
create apic_15
public apic_15
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: apic_19, id: apic_19, parent: apic_15
create apic_19
public apic_19
// Section: apic_16, id: apic_16, parent: apic_15
create apic_16
public apic_16
// Section: apic_12, id: apic_12, parent: apic_8
create apic_12
public apic_12
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_18, id: apic_18, parent: apic_16
create apic_18
public apic_18
// Section: apic_17, id: apic_17, parent: apic_16
create apic_17
public apic_17
// Section: apic_14, id: apic_14, parent: apic_12
create apic_14
public apic_14
// Section: apic_13, id: apic_13, parent: apic_12
create apic_13
public apic_13
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_738, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_738
// Group: {name=ModelViewParmSubset_739, groups=[], sections=[dend_21, dend_18, dend_17, dend_1, dend_0, apic_0, dend_25, dend_22, dend_20, dend_19, dend_12, dend_2, apic_28, apic_1, dend_31, dend_26, dend_24, dend_23, dend_16, dend_13, dend_9, dend_3, apic_3, apic_2, dend_30, dend_27, dend_15, dend_14, dend_11, dend_10, dend_8, dend_4, apic_27, apic_4, dend_29, dend_28, dend_7, dend_6, dend_5, apic_24, apic_5, apic_26, apic_25, apic_21, apic_6, apic_23, apic_22, apic_20, apic_7, apic_15, apic_8, apic_19, apic_16, apic_12, apic_9, apic_18, apic_17, apic_14, apic_13, apic_11, apic_10]}
objref ModelViewParmSubset_739
// Group: {name=dend, groups=[], sections=[dend_21, dend_18, dend_17, dend_1, dend_0, dend_25, dend_22, dend_20, dend_19, dend_12, dend_2, dend_31, dend_26, dend_24, dend_23, dend_16, dend_13, dend_9, dend_3, dend_30, dend_27, dend_15, dend_14, dend_11, dend_10, dend_8, dend_4, dend_29, dend_28, dend_7, dend_6, dend_5]}
objref dend
// Group: {name=apic, groups=[], sections=[apic_0, apic_28, apic_1, apic_3, apic_2, apic_27, apic_4, apic_24, apic_5, apic_26, apic_25, apic_21, apic_6, apic_23, apic_22, apic_20, apic_7, apic_15, apic_8, apic_19, apic_16, apic_12, apic_9, apic_18, apic_17, apic_14, apic_13, apic_11, apic_10]}
objref apic
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_30441, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_30441
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, axon_1, axon_1, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_4, apic_4, apic_4, apic_4, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_479427369
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000394352866936)
    connect dend_21(0), soma_0(0.5000394352866936)
    connect dend_18(0), soma_0(0.5000394352866936)
    connect dend_17(0), soma_0(0.5000394352866936)
    connect dend_1(0), soma_0(0.5000394352866936)
    connect dend_0(0), soma_0(0.5000394352866936)
    connect apic_0(0), soma_0(0.5000394352866936)
    connect axon_1(0), axon_0(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_12(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_28(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect apic_27(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_7(0), dend_4(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect apic_24(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_26(0), apic_24(1.0)
    connect apic_25(0), apic_24(1.0)
    connect apic_21(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_23(0), apic_21(1.0)
    connect apic_22(0), apic_21(1.0)
    connect apic_20(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_15(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect apic_19(0), apic_15(1.0)
    connect apic_16(0), apic_15(1.0)
    connect apic_12(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_18(0), apic_16(1.0)
    connect apic_17(0), apic_16(1.0)
    connect apic_14(0), apic_12(1.0)
    connect apic_13(0), apic_12(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 451.146, 461.947, 36.4, 12.6792 ) }
    soma_0 { pt3dadd( 457.486, 461.947, 36.4, 12.6792 ) }
    soma_0 { pt3dadd( 463.825, 461.947, 36.4, 12.6792 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 457.486, 461.947, 36.4, 1.0 ) }
    axon_0 { pt3dadd( 463.327, 475.763, 36.4, 1.0 ) }
    axon_0 { pt3dadd( 469.168, 489.579, 36.4, 1.0 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 6/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 460.579, 465.964, 37.0824, 1.144 ) }
    dend_21 { pt3dadd( 460.691, 466.984, 36.2608, 0.9174 ) }
    dend_21 { pt3dadd( 460.711, 468.1, 35.9304, 0.8544 ) }
    dend_21 { pt3dadd( 460.797, 469.139, 35.5054, 0.8892 ) }
    dend_21 { pt3dadd( 461.138, 470.214, 35.1795, 0.9042 ) }
    dend_21 { pt3dadd( 461.535, 471.247, 35.0568, 0.7136 ) }
    dend_21 { pt3dadd( 462.424, 471.925, 35.0322, 0.7346 ) }
    dend_21 { pt3dadd( 463.545, 472.109, 35.0529, 0.7864 ) }
    dend_21 { pt3dadd( 464.545, 472.573, 35.1613, 0.8198 ) }
    dend_21 { pt3dadd( 465.448, 473.269, 35.2041, 0.957 ) }
    dend_21 { pt3dadd( 466.338, 473.909, 35.0484, 1.0758 ) }
    dend_21 { pt3dadd( 467.355, 474.364, 34.7673, 1.0382 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 18/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 451.823, 462.683, 37.3355, 1.0296 ) }
    dend_18 { pt3dadd( 450.941, 463.282, 37.66, 1.0296 ) }
    dend_18 { pt3dadd( 449.996, 463.903, 37.8235, 1.0296 ) }
    dend_18 { pt3dadd( 448.938, 464.184, 37.8535, 1.0296 ) }
    dend_18 { pt3dadd( 447.904, 464.107, 37.7244, 1.0296 ) }
    dend_18 { pt3dadd( 446.807, 463.821, 37.648, 1.0296 ) }
    dend_18 { pt3dadd( 445.77, 463.786, 37.793, 1.0296 ) }
    dend_18 { pt3dadd( 444.699, 463.832, 38.0775, 1.0296 ) }
    dend_18 { pt3dadd( 443.592, 464.108, 38.3561, 1.0296 ) }
    dend_18 { pt3dadd( 442.497, 464.214, 38.7033, 1.0296 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 28/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 459.245, 466.777, 36.7814, 0.2288 ) }
    dend_17 { pt3dadd( 459.635, 467.851, 36.8334, 0.376 ) }
    dend_17 { pt3dadd( 459.604, 468.991, 36.8522, 0.3386 ) }
    dend_17 { pt3dadd( 459.615, 470.134, 36.8684, 0.3086 ) }
    dend_17 { pt3dadd( 459.469, 471.264, 36.8827, 0.2906 ) }
    dend_17 { pt3dadd( 459.401, 472.391, 36.8962, 0.3054 ) }
    dend_17 { pt3dadd( 459.551, 473.525, 36.9102, 0.3264 ) }
    dend_17 { pt3dadd( 459.724, 474.656, 36.9258, 0.396 ) }
    dend_17 { pt3dadd( 459.904, 475.785, 36.9474, 0.377 ) }
    dend_17 { pt3dadd( 460.069, 476.918, 36.9776, 0.3748 ) }
    dend_17 { pt3dadd( 460.238, 478.048, 37.0219, 0.4386 ) }
    dend_17 { pt3dadd( 460.471, 479.168, 37.0829, 0.4558 ) }
    dend_17 { pt3dadd( 460.802, 480.234, 37.1627, 0.5198 ) }
    dend_17 { pt3dadd( 461.588, 481.061, 37.2627, 0.713 ) }
    dend_17 { pt3dadd( 462.039, 482.064, 37.452, 0.938 ) }
    dend_17 { pt3dadd( 462.353, 483.124, 37.7409, 0.8564 ) }
    dend_17 { pt3dadd( 462.905, 484.116, 37.9977, 0.8402 ) }
    dend_17 { pt3dadd( 463.64, 484.992, 38.2239, 0.8406 ) }
    dend_17 { pt3dadd( 464.196, 485.821, 38.5042, 0.9216 ) }
    dend_17 { pt3dadd( 464.828, 486.715, 38.7402, 0.9108 ) }
    dend_17 { pt3dadd( 465.331, 487.707, 38.9497, 0.7566 ) }
    dend_17 { pt3dadd( 465.608, 488.759, 39.1933, 0.6662 ) }
    dend_17 { pt3dadd( 465.608, 489.902, 39.4618, 0.6918 ) }
    dend_17 { pt3dadd( 465.608, 491.046, 39.7594, 0.7166 ) }
    dend_17 { pt3dadd( 465.824, 492.161, 40.0963, 0.6452 ) }
    dend_17 { pt3dadd( 466.292, 492.912, 40.8078, 0.625 ) }
    dend_17 { pt3dadd( 467.332, 493.174, 41.461, 0.4994 ) }
    dend_17 { pt3dadd( 467.96, 493.546, 42.3021, 0.4668 ) }
    dend_17 { pt3dadd( 468.716, 493.56, 43.1469, 0.5782 ) }
    dend_17 { pt3dadd( 469.631, 493.935, 44.0068, 0.6354 ) }
    dend_17 { pt3dadd( 470.492, 494.602, 44.6984, 0.5518 ) }
    dend_17 { pt3dadd( 471.342, 495.365, 45.1559, 0.4016 ) }
    dend_17 { pt3dadd( 472.232, 496.085, 45.4563, 0.3308 ) }
    dend_17 { pt3dadd( 473.208, 496.669, 45.6162, 0.3338 ) }
    dend_17 { pt3dadd( 474.262, 497.106, 45.6946, 0.3736 ) }
    dend_17 { pt3dadd( 474.911, 498.003, 45.726, 0.5104 ) }
    dend_17 { pt3dadd( 475.907, 498.565, 45.7503, 0.4596 ) }
    dend_17 { pt3dadd( 476.743, 499.328, 45.7976, 0.4688 ) }
    dend_17 { pt3dadd( 477.754, 499.585, 45.8615, 0.442 ) }
    dend_17 { pt3dadd( 478.898, 499.585, 45.9144, 0.3768 ) }
    dend_17 { pt3dadd( 479.454, 500.262, 45.9964, 0.332 ) }
    dend_17 { pt3dadd( 479.932, 501.285, 46.0564, 0.3362 ) }
    dend_17 { pt3dadd( 480.629, 502.162, 46.0992, 0.3782 ) }
    dend_17 { pt3dadd( 481.605, 502.677, 46.083, 0.5184 ) }
    dend_17 { pt3dadd( 482.452, 503.409, 46.0491, 0.4746 ) }
    dend_17 { pt3dadd( 483.094, 504.354, 46.0463, 0.4976 ) }
    dend_17 { pt3dadd( 483.874, 505.148, 46.0916, 0.49 ) }
    dend_17 { pt3dadd( 484.465, 505.762, 46.2568, 0.4912 ) }
    dend_17 { pt3dadd( 485.459, 506.237, 46.4509, 0.4208 ) }
    dend_17 { pt3dadd( 485.861, 507.033, 46.6393, 0.412 ) }
    dend_17 { pt3dadd( 486.314, 508.05, 46.8723, 0.4922 ) }
    dend_17 { pt3dadd( 486.531, 508.749, 47.3908, 0.6306 ) }
    dend_17 { pt3dadd( 486.658, 509.309, 47.9198, 0.4782 ) }
    dend_17 { pt3dadd( 486.992, 510.083, 48.4568, 0.3514 ) }
    dend_17 { pt3dadd( 487.178, 511.136, 49.0703, 0.2758 ) }
    dend_17 { pt3dadd( 487.178, 512.237, 49.6916, 0.2766 ) }
    dend_17 { pt3dadd( 487.448, 512.729, 50.4697, 0.2784 ) }
    dend_17 { pt3dadd( 487.751, 512.888, 51.212, 0.2816 ) }
    dend_17 { pt3dadd( 488.027, 513.997, 51.7868, 0.2876 ) }
    dend_17 { pt3dadd( 488.361, 515.088, 52.2152, 0.3 ) }
    dend_17 { pt3dadd( 488.552, 516.216, 52.519, 0.3164 ) }
    dend_17 { pt3dadd( 489.023, 516.741, 52.8452, 0.3778 ) }
    dend_17 { pt3dadd( 489.752, 517.584, 53.114, 0.3416 ) }
    dend_17 { pt3dadd( 490.588, 518.361, 53.3207, 0.3144 ) }
    dend_17 { pt3dadd( 491.28, 519.262, 53.4999, 0.3014 ) }
    dend_17 { pt3dadd( 491.803, 520.276, 53.6595, 0.3246 ) }
    dend_17 { pt3dadd( 492.105, 521.371, 53.8115, 0.3644 ) }
    dend_17 { pt3dadd( 492.215, 522.475, 54.0212, 0.4564 ) }
    dend_17 { pt3dadd( 492.553, 523.515, 54.2326, 0.5388 ) }
    dend_17 { pt3dadd( 493.24, 524.359, 54.5247, 0.432 ) }
    dend_17 { pt3dadd( 493.802, 525.311, 54.8814, 0.3512 ) }
    dend_17 { pt3dadd( 494.272, 526.343, 55.2059, 0.3172 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_17 { pt3dadd( 494.546, 527.454, 55.5117, 0.3788 ) }
    dend_17 { pt3dadd( 494.759, 528.577, 55.8104, 0.3438 ) }
    dend_17 { pt3dadd( 495.417, 529.513, 56.1212, 0.3188 ) }
    dend_17 { pt3dadd( 495.644, 530.167, 56.6958, 0.3088 ) }
    dend_17 { pt3dadd( 495.646, 531.238, 57.3583, 0.339 ) }
    dend_17 { pt3dadd( 495.734, 532.319, 58.0507, 0.3908 ) }
    dend_17 { pt3dadd( 496.161, 533.34, 58.7059, 0.5072 ) }
    dend_17 { pt3dadd( 496.924, 534.151, 59.2855, 0.6222 ) }
    dend_17 { pt3dadd( 497.316, 535.105, 59.8063, 0.6388 ) }
    dend_17 { pt3dadd( 498.354, 535.254, 60.2381, 0.4802 ) }
    dend_17 { pt3dadd( 499.247, 535.8, 60.5427, 0.418 ) }
    dend_17 { pt3dadd( 499.88, 536.74, 60.767, 0.322 ) }
    dend_17 { pt3dadd( 500.66, 537.539, 60.9846, 0.2796 ) }
    dend_17 { pt3dadd( 501.598, 538.177, 61.1282, 0.2288 ) }
    dend_17 { pt3dadd( 502.74, 538.208, 61.2881, 0.2288 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 15/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 458.585, 457.043, 37.1006, 1.144 ) }
    dend_1 { pt3dadd( 459.053, 456.112, 35.5622, 1.144 ) }
    dend_1 { pt3dadd( 459.806, 455.464, 34.8855, 1.144 ) }
    dend_1 { pt3dadd( 460.096, 454.777, 33.9385, 1.144 ) }
    dend_1 { pt3dadd( 460.056, 453.986, 32.8653, 1.144 ) }
    dend_1 { pt3dadd( 460.694, 453.216, 31.8265, 1.144 ) }
    dend_1 { pt3dadd( 461.359, 452.476, 30.8966, 1.144 ) }
    dend_1 { pt3dadd( 461.954, 451.504, 30.2453, 1.144 ) }
    dend_1 { pt3dadd( 462.604, 450.639, 29.9942, 1.144 ) }
    dend_1 { pt3dadd( 463.151, 449.94, 30.1493, 1.144 ) }
    dend_1 { pt3dadd( 463.796, 449.018, 30.3601, 1.144 ) }
    dend_1 { pt3dadd( 464.286, 447.985, 30.4718, 1.144 ) }
    dend_1 { pt3dadd( 464.639, 446.909, 30.4041, 1.144 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 452.047, 463.735, 31.3513, 0.7092 ) }
    dend_0 { pt3dadd( 450.966, 464.111, 31.4381, 0.7092 ) }
    dend_0 { pt3dadd( 449.848, 464.35, 31.4639, 0.7092 ) }
    dend_0 { pt3dadd( 449.094, 464.197, 31.5487, 0.7092 ) }
    dend_0 { pt3dadd( 448.13, 463.582, 31.6159, 0.7092 ) }
    dend_0 { pt3dadd( 447.154, 462.988, 31.6663, 0.7092 ) }
    dend_0 { pt3dadd( 446.083, 462.586, 31.7005, 0.7092 ) }
    dend_0 { pt3dadd( 444.984, 462.309, 31.7195, 0.7092 ) }
    dend_0 { pt3dadd( 443.845, 462.223, 31.7246, 0.7092 ) }
    dend_0 { pt3dadd( 442.703, 462.136, 31.7164, 0.7092 ) }
    dend_0 { pt3dadd( 441.788, 461.478, 31.7047, 0.7092 ) }
    dend_0 { pt3dadd( 440.861, 460.812, 31.6884, 0.7092 ) }
    dend_0 { pt3dadd( 439.863, 460.252, 31.6655, 0.7092 ) }
    dend_0 { pt3dadd( 438.776, 459.944, 31.6338, 0.7092 ) }
    dend_0 { pt3dadd( 437.648, 459.746, 31.5899, 0.7092 ) }
    dend_0 { pt3dadd( 437.151, 459.033, 31.5272, 0.7092 ) }
    dend_0 { pt3dadd( 437.15, 457.891, 31.4384, 0.7092 ) }
    dend_0 { pt3dadd( 436.786, 456.869, 31.3163, 0.7092 ) }
    dend_0 { pt3dadd( 436.047, 455.996, 31.1576, 0.7092 ) }
    dend_0 { pt3dadd( 435.35, 455.115, 30.9263, 0.7092 ) }
    dend_0 { pt3dadd( 434.762, 454.215, 30.5407, 0.7092 ) }
    dend_0 { pt3dadd( 434.174, 453.315, 30.0518, 0.7092 ) }
    dend_0 { pt3dadd( 433.586, 452.414, 29.5084, 0.7092 ) }
    dend_0 { pt3dadd( 432.898, 451.526, 29.0514, 0.7092 ) }
    dend_0 { pt3dadd( 432.171, 450.643, 28.7255, 0.7092 ) }
    dend_0 { pt3dadd( 431.169, 450.121, 28.5202, 0.7092 ) }
    dend_0 { pt3dadd( 430.159, 449.589, 28.4175, 0.7092 ) }
    dend_0 { pt3dadd( 429.181, 448.995, 28.3833, 0.7092 ) }
    dend_0 { pt3dadd( 428.203, 448.401, 28.3892, 0.7092 ) }
    dend_0 { pt3dadd( 427.529, 447.481, 28.4088, 0.7092 ) }
    dend_0 { pt3dadd( 426.871, 446.563, 28.4371, 0.7092 ) }
    dend_0 { pt3dadd( 426.594, 445.595, 28.448, 0.7092 ) }
    dend_0 { pt3dadd( 426.052, 444.604, 28.5099, 0.7092 ) }
    dend_0 { pt3dadd( 425.42, 443.651, 28.6185, 0.7092 ) }
    dend_0 { pt3dadd( 424.819, 442.679, 28.7412, 0.7092 ) }
    dend_0 { pt3dadd( 424.361, 442.071, 29.0917, 0.7092 ) }
    dend_0 { pt3dadd( 423.952, 441.254, 29.514, 0.7092 ) }
    dend_0 { pt3dadd( 423.51, 440.199, 29.8474, 0.7092 ) }
    dend_0 { pt3dadd( 422.963, 439.201, 30.0899, 0.7092 ) }
    dend_0 { pt3dadd( 422.26, 438.303, 30.2506, 0.7092 ) }
    dend_0 { pt3dadd( 421.466, 437.48, 30.3397, 0.7092 ) }
    dend_0 { pt3dadd( 420.56, 436.796, 30.3629, 0.7092 ) }
    dend_0 { pt3dadd( 419.598, 436.181, 30.3629, 0.7092 ) }
    dend_0 { pt3dadd( 418.751, 435.411, 30.3629, 0.7092 ) }
    dend_0 { pt3dadd( 417.98, 434.583, 30.3629, 0.7092 ) }
    dend_0 { pt3dadd( 417.271, 433.76, 30.3629, 0.7092 ) }
    dend_0 { pt3dadd( 416.203, 433.347, 30.3626, 0.7092 ) }
    dend_0 { pt3dadd( 415.424, 432.522, 30.3626, 0.7092 ) }
    dend_0 { pt3dadd( 414.898, 431.508, 30.3626, 0.7092 ) }
    dend_0 { pt3dadd( 414.315, 430.539, 30.3624, 0.7092 ) }
    dend_0 { pt3dadd( 413.424, 429.82, 30.3621, 0.7092 ) }
    dend_0 { pt3dadd( 412.436, 429.28, 30.3618, 0.7092 ) }
    dend_0 { pt3dadd( 411.353, 428.911, 30.3615, 0.7092 ) }
    dend_0 { pt3dadd( 410.27, 428.542, 30.361, 0.7092 ) }
    dend_0 { pt3dadd( 409.187, 428.173, 30.3601, 0.7092 ) }
    dend_0 { pt3dadd( 408.426, 427.406, 30.359, 0.7092 ) }
    dend_0 { pt3dadd( 407.812, 426.442, 30.3573, 0.7092 ) }
    dend_0 { pt3dadd( 407.103, 425.545, 30.3551, 0.7092 ) }
    dend_0 { pt3dadd( 406.305, 424.729, 30.352, 0.7092 ) }
    dend_0 { pt3dadd( 405.463, 423.955, 30.3478, 0.7092 ) }
    dend_0 { pt3dadd( 404.621, 423.181, 30.3416, 0.7092 ) }
    dend_0 { pt3dadd( 403.795, 422.389, 30.3332, 0.7092 ) }
    dend_0 { pt3dadd( 403.009, 421.567, 30.3212, 0.7092 ) }
    dend_0 { pt3dadd( 402.531, 420.529, 30.305, 0.7092 ) }
    dend_0 { pt3dadd( 402.065, 419.483, 30.282, 0.7092 ) }
    dend_0 { pt3dadd( 401.635, 418.425, 30.249, 0.7092 ) }
    dend_0 { pt3dadd( 401.279, 417.339, 30.2028, 0.7092 ) }
    dend_0 { pt3dadd( 400.807, 416.297, 30.1409, 0.7092 ) }
    dend_0 { pt3dadd( 400.335, 415.255, 30.0619, 0.7092 ) }
    dend_0 { pt3dadd( 399.771, 414.272, 29.9239, 0.7092 ) }
    dend_0 { pt3dadd( 399.172, 413.311, 29.729, 0.7092 ) }
    dend_0 { pt3dadd( 398.575, 412.35, 29.4997, 0.7092 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 397.978, 411.389, 29.2566, 0.7092 ) }
    dend_0 { pt3dadd( 397.228, 410.546, 29.0548, 0.7092 ) }
    dend_0 { pt3dadd( 396.328, 409.844, 28.9218, 0.7092 ) }
    dend_0 { pt3dadd( 395.38, 409.204, 28.856, 0.7092 ) }
    dend_0 { pt3dadd( 394.553, 408.447, 28.8473, 0.7092 ) }
    dend_0 { pt3dadd( 393.952, 407.473, 28.884, 0.7092 ) }
    dend_0 { pt3dadd( 393.54, 406.989, 28.9542, 0.7092 ) }
    dend_0 { pt3dadd( 392.775, 406.206, 29.0682, 0.7092 ) }
    dend_0 { pt3dadd( 392.329, 405.166, 29.2488, 0.7092 ) }
    dend_0 { pt3dadd( 391.883, 404.127, 29.4736, 0.7092 ) }
    dend_0 { pt3dadd( 391.436, 403.087, 29.7212, 0.7092 ) }
    dend_0 { pt3dadd( 391.216, 402.026, 29.9533, 0.7092 ) }
    dend_0 { pt3dadd( 391.493, 400.916, 30.1179, 0.7092 ) }
    dend_0 { pt3dadd( 391.204, 399.963, 30.219, 0.7092 ) }
    dend_0 { pt3dadd( 390.396, 399.154, 30.2646, 0.7092 ) }
    dend_0 { pt3dadd( 389.674, 398.273, 30.2686, 0.7092 ) }
    dend_0 { pt3dadd( 389.039, 397.322, 30.2414, 0.7092 ) }
    dend_0 { pt3dadd( 388.542, 396.292, 30.1927, 0.7092 ) }
    dend_0 { pt3dadd( 388.055, 395.257, 30.128, 0.7092 ) }
    dend_0 { pt3dadd( 387.568, 394.221, 30.0378, 0.7092 ) }
    dend_0 { pt3dadd( 387.096, 393.187, 29.8928, 0.7092 ) }
    dend_0 { pt3dadd( 386.631, 392.152, 29.694, 0.7092 ) }
    dend_0 { pt3dadd( 386.165, 391.118, 29.4624, 0.7092 ) }
    dend_0 { pt3dadd( 385.701, 390.082, 29.2169, 0.7092 ) }
    dend_0 { pt3dadd( 385.234, 389.048, 28.6762, 0.7092 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 25/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 458.98, 457.089, 37.2464, 5.139 ) }
    apic_0 { pt3dadd( 459.316, 455.998, 37.5768, 2.1366 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 27/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 469.168, 489.579, 36.4, 1.0 ) }
    axon_1 { pt3dadd( 475.009, 503.395, 36.4, 1.0 ) }
    axon_1 { pt3dadd( 480.851, 517.211, 36.4, 1.0 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 30/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 467.355, 474.364, 34.7673, 1.0382 ) }
    dend_25 { pt3dadd( 468.268, 474.634, 34.3608, 0.8484 ) }
    dend_25 { pt3dadd( 469.382, 474.623, 33.9391, 0.8512 ) }
    dend_25 { pt3dadd( 470.495, 474.385, 33.6272, 0.7338 ) }
    dend_25 { pt3dadd( 471.536, 474.679, 33.5227, 0.8838 ) }
    dend_25 { pt3dadd( 472.628, 475.015, 33.4446, 0.9772 ) }
    dend_25 { pt3dadd( 473.605, 475.489, 33.2707, 0.9044 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 37/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 467.355, 474.364, 34.7673, 1.0382 ) }
    dend_22 { pt3dadd( 466.711, 474.477, 33.6227, 1.3728 ) }
    dend_22 { pt3dadd( 466.635, 475.343, 33.3665, 0.767 ) }
    dend_22 { pt3dadd( 466.782, 476.477, 33.2763, 0.526 ) }
    dend_22 { pt3dadd( 466.418, 477.558, 33.1926, 0.5208 ) }
    dend_22 { pt3dadd( 465.855, 478.555, 33.112, 0.6546 ) }
    dend_22 { pt3dadd( 465.475, 479.628, 33.0322, 0.6638 ) }
    dend_22 { pt3dadd( 465.157, 480.727, 32.9526, 0.6974 ) }
    dend_22 { pt3dadd( 464.933, 481.825, 32.8348, 0.6778 ) }
    dend_22 { pt3dadd( 464.872, 482.922, 32.6141, 0.583 ) }
    dend_22 { pt3dadd( 464.358, 483.906, 32.4159, 0.4602 ) }
    dend_22 { pt3dadd( 463.618, 484.779, 32.2644, 0.4348 ) }
    dend_22 { pt3dadd( 462.826, 485.591, 32.1728, 0.5488 ) }
    dend_22 { pt3dadd( 462.303, 486.547, 32.1594, 0.6654 ) }
    dend_22 { pt3dadd( 461.984, 487.371, 32.1899, 0.8836 ) }
    dend_22 { pt3dadd( 461.194, 488.13, 32.1006, 0.8214 ) }
    dend_22 { pt3dadd( 460.579, 489.079, 31.9841, 0.6836 ) }
    dend_22 { pt3dadd( 460.122, 490.112, 31.8942, 0.5368 ) }
    dend_22 { pt3dadd( 459.657, 491.121, 31.7461, 0.6532 ) }
    dend_22 { pt3dadd( 459.174, 492.115, 31.4429, 0.583 ) }
    dend_22 { pt3dadd( 458.514, 492.988, 31.0492, 0.4692 ) }
    dend_22 { pt3dadd( 457.732, 493.806, 30.6292, 0.4062 ) }
    dend_22 { pt3dadd( 457.226, 494.77, 30.1535, 0.4876 ) }
    dend_22 { pt3dadd( 457.061, 495.812, 29.5901, 0.5914 ) }
    dend_22 { pt3dadd( 457.033, 496.911, 29.0578, 0.5548 ) }
    dend_22 { pt3dadd( 457.028, 498.034, 28.5852, 0.4558 ) }
    dend_22 { pt3dadd( 457.02, 499.164, 28.2061, 0.4224 ) }
    dend_22 { pt3dadd( 456.772, 500.253, 27.967, 0.5472 ) }
    dend_22 { pt3dadd( 456.201, 501.226, 27.802, 0.5586 ) }
    dend_22 { pt3dadd( 455.793, 502.269, 27.6153, 0.5036 ) }
    dend_22 { pt3dadd( 455.672, 503.351, 27.3053, 0.542 ) }
    dend_22 { pt3dadd( 455.681, 504.26, 26.7705, 0.6174 ) }
    dend_22 { pt3dadd( 455.048, 504.841, 26.3416, 0.739 ) }
    dend_22 { pt3dadd( 454.327, 505.718, 25.9616, 0.822 ) }
    dend_22 { pt3dadd( 453.583, 506.57, 25.5735, 0.7522 ) }
    dend_22 { pt3dadd( 452.814, 507.365, 25.1451, 0.566 ) }
    dend_22 { pt3dadd( 451.952, 508.076, 24.7142, 0.4972 ) }
    dend_22 { pt3dadd( 451.168, 508.839, 24.2488, 0.6278 ) }
    dend_22 { pt3dadd( 451.078, 509.906, 23.732, 0.7606 ) }
    dend_22 { pt3dadd( 451.064, 511.039, 23.35, 0.6234 ) }
    dend_22 { pt3dadd( 450.99, 512.18, 23.0555, 0.6262 ) }
    dend_22 { pt3dadd( 450.713, 513.272, 22.7483, 0.529 ) }
    dend_22 { pt3dadd( 450.045, 514.196, 22.4661, 0.6178 ) }
    dend_22 { pt3dadd( 449.198, 514.867, 22.0956, 0.6208 ) }
    dend_22 { pt3dadd( 448.353, 514.867, 21.7196, 0.494 ) }
    dend_22 { pt3dadd( 447.234, 514.869, 21.3245, 0.4436 ) }
    dend_22 { pt3dadd( 446.134, 515.078, 21.0168, 0.3698 ) }
    dend_22 { pt3dadd( 445.393, 515.943, 20.7833, 0.367 ) }
    dend_22 { pt3dadd( 444.458, 516.461, 20.5996, 0.3954 ) }
    dend_22 { pt3dadd( 443.332, 516.622, 20.4501, 0.516 ) }
    dend_22 { pt3dadd( 442.629, 517.446, 20.3053, 0.6384 ) }
    dend_22 { pt3dadd( 441.677, 517.915, 20.109, 0.6688 ) }
    dend_22 { pt3dadd( 440.737, 518.263, 19.7039, 0.5356 ) }
    dend_22 { pt3dadd( 439.669, 518.63, 19.3385, 0.5224 ) }
    dend_22 { pt3dadd( 438.594, 518.74, 19.0086, 0.5084 ) }
    dend_22 { pt3dadd( 437.497, 518.461, 18.7046, 0.6582 ) }
    dend_22 { pt3dadd( 436.382, 518.301, 18.4195, 0.7708 ) }
    dend_22 { pt3dadd( 435.367, 518.463, 17.9897, 0.6376 ) }
    dend_22 { pt3dadd( 435.006, 519.445, 17.6212, 0.6774 ) }
    dend_22 { pt3dadd( 434.219, 519.445, 16.9557, 0.5032 ) }
    dend_22 { pt3dadd( 433.075, 519.466, 16.4184, 0.47 ) }
    dend_22 { pt3dadd( 432.639, 520.426, 15.9978, 0.3728 ) }
    dend_22 { pt3dadd( 431.834, 521.185, 15.6825, 0.3666 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_22 { pt3dadd( 430.706, 521.275, 15.4596, 0.4246 ) }
    dend_22 { pt3dadd( 429.579, 521.308, 15.2513, 0.4244 ) }
    dend_22 { pt3dadd( 428.802, 521.936, 14.9722, 0.4888 ) }
    dend_22 { pt3dadd( 428.902, 522.658, 14.7286, 0.5228 ) }
    dend_22 { pt3dadd( 429.057, 523.792, 14.5242, 0.5414 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 5/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 442.497, 464.214, 38.7033, 1.0296 ) }
    dend_20 { pt3dadd( 440.805, 463.932, 40.3021, 0.9152 ) }
    dend_20 { pt3dadd( 439.699, 463.782, 40.864, 0.8086 ) }
    dend_20 { pt3dadd( 438.558, 463.727, 41.0794, 0.8194 ) }
    dend_20 { pt3dadd( 437.441, 463.525, 41.3118, 0.701 ) }
    dend_20 { pt3dadd( 436.367, 463.352, 41.6284, 0.6948 ) }
    dend_20 { pt3dadd( 435.29, 463.339, 42.0269, 0.5636 ) }
    dend_20 { pt3dadd( 434.174, 463.439, 42.387, 0.673 ) }
    dend_20 { pt3dadd( 433.116, 463.481, 42.5905, 0.5366 ) }
    dend_20 { pt3dadd( 432.251, 464.201, 42.728, 0.5576 ) }
    dend_20 { pt3dadd( 431.249, 464.709, 42.8126, 0.4102 ) }
    dend_20 { pt3dadd( 430.108, 464.755, 42.8574, 0.3564 ) }
    dend_20 { pt3dadd( 428.965, 464.755, 42.887, 0.3342 ) }
    dend_20 { pt3dadd( 427.82, 464.755, 42.9288, 0.375 ) }
    dend_20 { pt3dadd( 426.685, 464.721, 43.0004, 0.5114 ) }
    dend_20 { pt3dadd( 425.64, 464.304, 43.1589, 0.4674 ) }
    dend_20 { pt3dadd( 424.497, 464.297, 43.3073, 0.4546 ) }
    dend_20 { pt3dadd( 423.353, 464.297, 43.4448, 0.5548 ) }
    dend_20 { pt3dadd( 422.229, 464.229, 43.5915, 0.5972 ) }
    dend_20 { pt3dadd( 421.19, 463.866, 43.8292, 0.4558 ) }
    dend_20 { pt3dadd( 420.135, 463.458, 44.0426, 0.347 ) }
    dend_20 { pt3dadd( 419.118, 462.941, 44.1946, 0.315 ) }
    dend_20 { pt3dadd( 418.033, 462.709, 44.3027, 0.349 ) }
    dend_20 { pt3dadd( 416.892, 462.655, 44.3699, 0.4162 ) }
    dend_20 { pt3dadd( 415.759, 462.492, 44.4004, 0.5182 ) }
    dend_20 { pt3dadd( 415.302, 461.969, 44.401, 0.8188 ) }
    dend_20 { pt3dadd( 414.549, 461.106, 44.3943, 0.8354 ) }
    dend_20 { pt3dadd( 413.803, 460.24, 44.3834, 0.745 ) }
    dend_20 { pt3dadd( 413.062, 459.372, 44.3677, 0.7068 ) }
    dend_20 { pt3dadd( 412.391, 458.452, 44.3475, 0.6958 ) }
    dend_20 { pt3dadd( 411.549, 457.677, 44.3234, 0.6116 ) }
    dend_20 { pt3dadd( 410.76, 456.853, 44.2974, 0.5384 ) }
    dend_20 { pt3dadd( 410.207, 455.9, 44.1918, 0.4566 ) }
    dend_20 { pt3dadd( 409.152, 455.567, 44.1165, 0.5016 ) }
    dend_20 { pt3dadd( 408.125, 455.092, 44.0756, 0.5462 ) }
    dend_20 { pt3dadd( 407.262, 454.343, 44.0709, 0.586 ) }
    dend_20 { pt3dadd( 406.359, 453.661, 44.102, 0.6416 ) }
    dend_20 { pt3dadd( 405.284, 453.312, 44.1672, 0.6038 ) }
    dend_20 { pt3dadd( 404.14, 453.287, 44.2635, 0.5302 ) }
    dend_20 { pt3dadd( 403.499, 452.974, 44.5486, 0.6408 ) }
    dend_20 { pt3dadd( 402.711, 452.197, 44.7885, 0.5604 ) }
    dend_20 { pt3dadd( 402.087, 451.393, 44.9884, 0.4268 ) }
    dend_20 { pt3dadd( 401.23, 450.85, 45.1562, 0.3306 ) }
    dend_20 { pt3dadd( 400.127, 450.671, 45.3023, 0.332 ) }
    dend_20 { pt3dadd( 399.04, 450.33, 45.4398, 0.3768 ) }
    dend_20 { pt3dadd( 397.947, 450.022, 45.5826, 0.4852 ) }
    dend_20 { pt3dadd( 396.866, 449.68, 45.768, 0.5634 ) }
    dend_20 { pt3dadd( 395.799, 449.353, 46.0491, 0.6196 ) }
    dend_20 { pt3dadd( 394.772, 449.234, 46.4898, 0.6938 ) }
    dend_20 { pt3dadd( 393.909, 448.735, 47.0445, 0.7484 ) }
    dend_20 { pt3dadd( 393.091, 448.435, 47.7022, 0.567 ) }
    dend_20 { pt3dadd( 392.729, 447.529, 48.2255, 0.4592 ) }
    dend_20 { pt3dadd( 392.01, 446.683, 48.6352, 0.5212 ) }
    dend_20 { pt3dadd( 390.953, 446.284, 48.9527, 0.5098 ) }
    dend_20 { pt3dadd( 389.866, 445.98, 49.2052, 0.4168 ) }
    dend_20 { pt3dadd( 388.961, 445.309, 49.4276, 0.362 ) }
    dend_20 { pt3dadd( 388.147, 444.685, 49.6488, 0.3786 ) }
    dend_20 { pt3dadd( 387.872, 444.026, 50.2272, 0.5206 ) }
    dend_20 { pt3dadd( 387.23, 443.452, 50.8738, 0.4722 ) }
    dend_20 { pt3dadd( 386.161, 443.06, 51.3766, 0.523 ) }
    dend_20 { pt3dadd( 385.039, 442.855, 51.7434, 0.3934 ) }
    dend_20 { pt3dadd( 383.898, 442.792, 51.9854, 0.3254 ) }
    dend_20 { pt3dadd( 382.755, 442.792, 52.1139, 0.2746 ) }
    dend_20 { pt3dadd( 381.611, 442.792, 52.1416, 0.2746 ) }
    dend_20 { pt3dadd( 380.467, 442.792, 52.1368, 0.2746 ) }
    dend_20 { pt3dadd( 379.116, 442.792, 52.1304, 0.2746 ) }
    dend_20 { pt3dadd( 377.971, 442.792, 52.1212, 0.2746 ) }
    dend_20 { pt3dadd( 376.828, 442.792, 52.1083, 0.2746 ) }
    dend_20 { pt3dadd( 375.684, 442.792, 52.0906, 0.2746 ) }
    dend_20 { pt3dadd( 374.54, 442.792, 52.066, 0.2746 ) }
    dend_20 { pt3dadd( 373.398, 442.856, 52.0302, 0.2746 ) }
    dend_20 { pt3dadd( 372.262, 442.976, 51.9798, 0.2746 ) }
    dend_20 { pt3dadd( 371.124, 443.096, 51.9137, 0.2746 ) }
    dend_20 { pt3dadd( 370.099, 443.602, 51.8308, 0.2746 ) }
    dend_20 { pt3dadd( 368.993, 443.707, 51.6779, 0.2746 ) }
    dend_20 { pt3dadd( 367.865, 443.707, 51.4576, 0.2746 ) }
    dend_20 { pt3dadd( 366.73, 443.707, 51.2145, 0.2746 ) }
    dend_20 { pt3dadd( 365.587, 443.707, 51.0034, 0.2746 ) }
    dend_20 { pt3dadd( 364.443, 443.707, 50.8211, 0.2744 ) }
    dend_20 { pt3dadd( 363.333, 443.507, 50.601, 0.2744 ) }
    dend_20 { pt3dadd( 362.225, 443.299, 50.3588, 0.2742 ) }
    dend_20 { pt3dadd( 361.121, 443.035, 50.1379, 0.2736 ) }
    dend_20 { pt3dadd( 360.02, 442.72, 49.9626, 0.2728 ) }
    dend_20 { pt3dadd( 358.909, 442.472, 49.8106, 0.2712 ) }
    dend_20 { pt3dadd( 357.767, 442.414, 49.6818, 0.2684 ) }
    dend_20 { pt3dadd( 356.624, 442.358, 49.5765, 0.2626 ) }
    dend_20 { pt3dadd( 355.509, 442.163, 49.4525, 0.2542 ) }
    dend_20 { pt3dadd( 354.414, 441.87, 49.2881, 0.2288 ) }
    dend_20 { pt3dadd( 353.407, 441.418, 48.7522, 0.2288 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 94/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 442.497, 464.214, 38.7033, 1.0296 ) }
    dend_19 { pt3dadd( 441.391, 464.192, 38.9166, 0.7342 ) }
    dend_19 { pt3dadd( 440.256, 464.045, 39.0152, 0.7504 ) }
    dend_19 { pt3dadd( 439.122, 463.899, 39.0051, 0.6962 ) }
    dend_19 { pt3dadd( 437.987, 463.754, 38.9242, 0.5468 ) }
    dend_19 { pt3dadd( 436.885, 463.643, 38.7173, 0.507 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_19 { pt3dadd( 435.795, 463.543, 38.3939, 0.6536 ) }
    dend_19 { pt3dadd( 434.714, 463.413, 38.0912, 0.7722 ) }
    dend_19 { pt3dadd( 433.592, 463.195, 37.8473, 0.8218 ) }
    dend_19 { pt3dadd( 432.458, 463.139, 37.6547, 0.8228 ) }
    dend_19 { pt3dadd( 431.316, 463.209, 37.5046, 0.8098 ) }
    dend_19 { pt3dadd( 430.176, 463.151, 37.3884, 0.8574 ) }
    dend_19 { pt3dadd( 429.038, 463.138, 37.2492, 0.596 ) }
    dend_19 { pt3dadd( 427.9, 463.144, 37.067, 0.4374 ) }
    dend_19 { pt3dadd( 426.762, 463.148, 36.8469, 0.3902 ) }
    dend_19 { pt3dadd( 425.624, 463.154, 36.6002, 0.4798 ) }
    dend_19 { pt3dadd( 424.486, 463.16, 36.3376, 0.6994 ) }
    dend_19 { pt3dadd( 423.348, 463.164, 36.062, 0.8462 ) }
    dend_19 { pt3dadd( 422.331, 463.656, 35.8095, 1.0118 ) }
    dend_19 { pt3dadd( 421.247, 463.93, 35.5667, 0.9182 ) }
    dend_19 { pt3dadd( 420.105, 464.002, 35.3178, 0.859 ) }
    dend_19 { pt3dadd( 418.974, 463.881, 35.0518, 0.6536 ) }
    dend_19 { pt3dadd( 418.02, 463.614, 34.5635, 0.507 ) }
    dend_19 { pt3dadd( 417.072, 463.346, 33.9049, 0.4724 ) }
    dend_19 { pt3dadd( 416.077, 463.541, 33.2489, 0.6296 ) }
    dend_19 { pt3dadd( 415.016, 463.956, 32.692, 0.7622 ) }
    dend_19 { pt3dadd( 413.919, 464.28, 32.2224, 0.634 ) }
    dend_19 { pt3dadd( 412.828, 464.49, 31.7895, 0.6104 ) }
    dend_19 { pt3dadd( 411.751, 464.451, 31.3088, 0.672 ) }
    dend_19 { pt3dadd( 410.959, 464.259, 30.6779, 0.7328 ) }
    dend_19 { pt3dadd( 409.941, 464.122, 30.1014, 0.6462 ) }
    dend_19 { pt3dadd( 408.803, 464.189, 29.6444, 0.767 ) }
    dend_19 { pt3dadd( 407.75, 464.494, 29.3482, 0.7688 ) }
    dend_19 { pt3dadd( 406.74, 465.017, 29.1343, 0.7066 ) }
    dend_19 { pt3dadd( 405.846, 465.646, 28.891, 0.6816 ) }
    dend_19 { pt3dadd( 404.937, 466.19, 28.5592, 0.6534 ) }
    dend_19 { pt3dadd( 403.879, 466.456, 28.271, 0.5126 ) }
    dend_19 { pt3dadd( 402.747, 466.513, 28.07, 0.4538 ) }
    dend_19 { pt3dadd( 401.626, 466.522, 27.8382, 0.5058 ) }
    dend_19 { pt3dadd( 400.501, 466.557, 27.5901, 0.7362 ) }
    dend_19 { pt3dadd( 399.435, 466.894, 27.384, 0.971 ) }
    dend_19 { pt3dadd( 398.451, 467.476, 27.2056, 0.967 ) }
    dend_19 { pt3dadd( 397.601, 468.203, 26.9696, 0.8058 ) }
    dend_19 { pt3dadd( 396.628, 468.688, 26.679, 0.5638 ) }
    dend_19 { pt3dadd( 395.53, 468.992, 26.4152, 0.5276 ) }
    dend_19 { pt3dadd( 394.42, 469.072, 26.243, 0.5166 ) }
    dend_19 { pt3dadd( 393.398, 468.89, 25.9722, 0.6828 ) }
    dend_19 { pt3dadd( 392.788, 469.116, 25.5674, 0.7712 ) }
    dend_19 { pt3dadd( 391.767, 469.623, 25.2608, 0.8564 ) }
    dend_19 { pt3dadd( 390.749, 470.105, 24.9533, 0.7104 ) }
    dend_19 { pt3dadd( 389.7, 470.509, 24.6574, 0.7718 ) }
    dend_19 { pt3dadd( 388.596, 470.711, 24.4706, 0.8754 ) }
    dend_19 { pt3dadd( 387.512, 470.961, 24.325, 0.8884 ) }
    dend_19 { pt3dadd( 386.4, 471.139, 24.1483, 0.8662 ) }
    dend_19 { pt3dadd( 385.303, 471.427, 23.9655, 0.8204 ) }
    dend_19 { pt3dadd( 384.327, 472.001, 23.7857, 0.9878 ) }
    dend_19 { pt3dadd( 383.463, 472.709, 23.5508, 0.9892 ) }
    dend_19 { pt3dadd( 382.613, 473.434, 23.2702, 0.8896 ) }
    dend_19 { pt3dadd( 381.677, 474.085, 23.0104, 0.7416 ) }
    dend_19 { pt3dadd( 380.591, 474.388, 22.8189, 0.747 ) }
    dend_19 { pt3dadd( 379.513, 474.762, 22.675, 0.7722 ) }
    dend_19 { pt3dadd( 378.47, 475.23, 22.542, 0.7452 ) }
    dend_19 { pt3dadd( 377.657, 476.02, 22.4017, 0.8252 ) }
    dend_19 { pt3dadd( 377.147, 477.031, 22.2144, 0.7988 ) }
    dend_19 { pt3dadd( 376.637, 477.953, 21.8733, 0.6836 ) }
    dend_19 { pt3dadd( 375.772, 478.592, 21.4561, 0.7906 ) }
    dend_19 { pt3dadd( 374.711, 479.003, 21.0669, 0.8074 ) }
    dend_19 { pt3dadd( 373.688, 479.505, 20.7444, 0.8024 ) }
    dend_19 { pt3dadd( 372.717, 480.112, 20.475, 0.741 ) }
    dend_19 { pt3dadd( 371.808, 480.783, 20.2325, 0.6504 ) }
    dend_19 { pt3dadd( 371.135, 481.673, 19.9685, 0.599 ) }
    dend_19 { pt3dadd( 370.695, 482.702, 19.6655, 0.6262 ) }
    dend_19 { pt3dadd( 370.312, 483.761, 19.3416, 0.5372 ) }
    dend_19 { pt3dadd( 369.773, 484.719, 18.9988, 0.5912 ) }
    dend_19 { pt3dadd( 368.928, 485.47, 18.748, 0.5456 ) }
    dend_19 { pt3dadd( 368.027, 486.134, 18.545, 0.4798 ) }
    dend_19 { pt3dadd( 367.345, 487.0, 18.3117, 0.4974 ) }
    dend_19 { pt3dadd( 366.879, 488.044, 18.0914, 0.539 ) }
    dend_19 { pt3dadd( 366.29, 488.997, 17.836, 0.571 ) }
    dend_19 { pt3dadd( 365.454, 489.733, 17.505, 0.6218 ) }
    dend_19 { pt3dadd( 364.734, 490.532, 17.0946, 0.528 ) }
    dend_19 { pt3dadd( 364.372, 491.582, 16.6522, 0.5802 ) }
    dend_19 { pt3dadd( 363.997, 492.648, 16.2442, 0.4946 ) }
    dend_19 { pt3dadd( 363.278, 493.504, 15.8794, 0.5348 ) }
    dend_19 { pt3dadd( 362.273, 493.995, 15.5347, 0.5606 ) }
    dend_19 { pt3dadd( 361.296, 494.465, 15.1248, 0.6144 ) }
    dend_19 { pt3dadd( 360.35, 494.881, 14.5905, 0.6844 ) }
    dend_19 { pt3dadd( 359.309, 495.178, 14.0011, 0.7312 ) }
    dend_19 { pt3dadd( 358.208, 495.351, 13.4252, 0.5326 ) }
    dend_19 { pt3dadd( 357.092, 495.48, 12.8862, 0.4074 ) }
    dend_19 { pt3dadd( 356.095, 495.935, 12.4043, 0.3688 ) }
    dend_19 { pt3dadd( 355.217, 496.65, 12.0263, 0.5016 ) }
    dend_19 { pt3dadd( 354.315, 497.321, 11.7166, 0.442 ) }
    dend_19 { pt3dadd( 353.391, 497.971, 11.5175, 0.4414 ) }
    dend_19 { pt3dadd( 352.572, 498.742, 11.4601, 0.3654 ) }
    dend_19 { pt3dadd( 351.793, 499.571, 11.4559, 0.3592 ) }
    dend_19 { pt3dadd( 350.755, 499.719, 11.4489, 0.38 ) }
    dend_19 { pt3dadd( 349.638, 499.894, 11.4215, 0.4922 ) }
    dend_19 { pt3dadd( 348.573, 500.303, 11.3624, 0.5714 ) }
    dend_19 { pt3dadd( 347.508, 500.72, 11.2518, 0.6566 ) }
    dend_19 { pt3dadd( 346.51, 501.165, 11.0048, 0.6542 ) }
    dend_19 { pt3dadd( 345.461, 501.297, 10.6375, 0.516 ) }
    dend_19 { pt3dadd( 344.353, 501.324, 10.3916, 0.4492 ) }
    dend_19 { pt3dadd( 343.245, 501.477, 10.1419, 0.5508 ) }
    dend_19 { pt3dadd( 342.117, 501.581, 9.9904, 0.5592 ) }
    dend_19 { pt3dadd( 340.999, 501.608, 9.8092, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_19 { pt3dadd( 339.875, 501.756, 9.6412, 0.4576 ) }
    dend_19 { pt3dadd( 338.738, 501.758, 9.52, 0.4576 ) }
    // Section: dend_12, id: dend_12, parent: dend_1 (entry count 2/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 464.639, 446.909, 30.4041, 1.144 ) }
    dend_12 { pt3dadd( 465.714, 446.174, 31.8718, 0.6864 ) }
    dend_12 { pt3dadd( 466.681, 445.575, 31.367, 0.8788 ) }
    dend_12 { pt3dadd( 467.572, 444.999, 31.0887, 0.812 ) }
    dend_12 { pt3dadd( 468.523, 444.461, 30.7434, 0.6678 ) }
    dend_12 { pt3dadd( 469.393, 443.727, 30.4797, 0.7292 ) }
    dend_12 { pt3dadd( 470.352, 443.157, 30.3775, 0.8484 ) }
    dend_12 { pt3dadd( 471.391, 442.701, 30.3643, 0.815 ) }
    dend_12 { pt3dadd( 472.323, 442.04, 30.3677, 0.8436 ) }
    dend_12 { pt3dadd( 473.146, 441.246, 30.3708, 0.9156 ) }
    dend_12 { pt3dadd( 473.984, 440.525, 30.2672, 0.9546 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 13/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 464.639, 446.909, 30.4041, 1.144 ) }
    dend_2 { pt3dadd( 464.783, 446.186, 29.9622, 0.9148 ) }
    // Section: apic_28, id: apic_28, parent: apic_0 (entry count 15/100)
    apic_28 { pt3dclear() }
    apic_28 { pt3dadd( 459.316, 455.998, 37.5768, 2.1366 ) }
    apic_28 { pt3dadd( 460.487, 456.251, 36.3104, 1.6016 ) }
    apic_28 { pt3dadd( 461.406, 456.384, 32.9484, 1.0084 ) }
    apic_28 { pt3dadd( 461.56, 456.265, 31.4474, 0.709 ) }
    apic_28 { pt3dadd( 461.286, 456.821, 29.7083, 0.771 ) }
    apic_28 { pt3dadd( 460.812, 456.882, 27.827, 0.8644 ) }
    apic_28 { pt3dadd( 460.572, 456.7, 25.9059, 0.6864 ) }
    apic_28 { pt3dadd( 460.135, 456.559, 21.931, 0.9152 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 23/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 459.316, 455.998, 37.5768, 2.1366 ) }
    apic_1 { pt3dadd( 460.457, 455.771, 37.9016, 1.1176 ) }
    apic_1 { pt3dadd( 461.463, 455.258, 38.2502, 1.3662 ) }
    apic_1 { pt3dadd( 461.772, 454.278, 38.7321, 1.3846 ) }
    apic_1 { pt3dadd( 462.27, 453.334, 39.2804, 1.2776 ) }
    apic_1 { pt3dadd( 463.099, 452.602, 39.807, 1.3078 ) }
    apic_1 { pt3dadd( 464.053, 451.985, 40.2564, 1.1682 ) }
    apic_1 { pt3dadd( 464.764, 451.09, 40.5824, 1.1726 ) }
    apic_1 { pt3dadd( 465.531, 450.242, 40.7974, 1.2772 ) }
    apic_1 { pt3dadd( 466.342, 449.434, 40.9217, 1.2316 ) }
    apic_1 { pt3dadd( 467.157, 448.63, 40.9965, 1.164 ) }
    apic_1 { pt3dadd( 467.987, 447.844, 41.0561, 1.1864 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 35/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 473.605, 475.489, 33.2707, 0.9044 ) }
    dend_31 { pt3dadd( 474.838, 475.349, 33.0218, 0.4576 ) }
    dend_31 { pt3dadd( 475.76, 474.678, 32.5822, 0.562 ) }
    dend_31 { pt3dadd( 476.536, 473.856, 32.3954, 0.7724 ) }
    dend_31 { pt3dadd( 477.176, 472.94, 32.1146, 0.6806 ) }
    dend_31 { pt3dadd( 477.796, 471.996, 31.81, 0.5622 ) }
    dend_31 { pt3dadd( 478.125, 470.924, 31.474, 0.5508 ) }
    dend_31 { pt3dadd( 478.325, 469.844, 31.0873, 0.6628 ) }
    dend_31 { pt3dadd( 478.707, 468.765, 30.7566, 0.68 ) }
    dend_31 { pt3dadd( 479.102, 467.691, 30.4674, 0.7212 ) }
    dend_31 { pt3dadd( 479.564, 466.65, 30.1938, 0.7536 ) }
    dend_31 { pt3dadd( 480.1, 465.67, 29.8668, 0.5692 ) }
    dend_31 { pt3dadd( 480.402, 464.653, 29.4157, 0.498 ) }
    dend_31 { pt3dadd( 480.599, 463.578, 28.9145, 0.4268 ) }
    dend_31 { pt3dadd( 481.196, 462.643, 28.4301, 0.4564 ) }
    dend_31 { pt3dadd( 482.148, 462.137, 27.9418, 0.6418 ) }
    dend_31 { pt3dadd( 483.258, 462.067, 27.4394, 0.5812 ) }
    dend_31 { pt3dadd( 484.312, 461.821, 26.9592, 0.6002 ) }
    dend_31 { pt3dadd( 485.17, 461.151, 26.469, 0.6838 ) }
    dend_31 { pt3dadd( 486.027, 460.452, 26.0025, 0.6036 ) }
    dend_31 { pt3dadd( 486.911, 459.768, 25.606, 0.4546 ) }
    dend_31 { pt3dadd( 487.845, 459.264, 25.3095, 0.4082 ) }
    dend_31 { pt3dadd( 488.943, 459.067, 25.0936, 0.351 ) }
    dend_31 { pt3dadd( 489.677, 458.3, 24.7948, 0.3316 ) }
    dend_31 { pt3dadd( 490.526, 457.552, 24.5608, 0.335 ) }
    dend_31 { pt3dadd( 491.299, 456.771, 24.3849, 0.3762 ) }
    dend_31 { pt3dadd( 492.318, 456.099, 24.3144, 0.5134 ) }
    dend_31 { pt3dadd( 493.057, 455.234, 24.2435, 0.4728 ) }
    dend_31 { pt3dadd( 493.771, 454.341, 24.1559, 0.457 ) }
    dend_31 { pt3dadd( 494.629, 453.669, 24.0481, 0.5962 ) }
    dend_31 { pt3dadd( 495.135, 453.605, 23.6964, 0.4938 ) }
    dend_31 { pt3dadd( 496.053, 453.033, 23.3299, 0.4528 ) }
    dend_31 { pt3dadd( 496.293, 452.929, 22.9692, 0.3398 ) }
    dend_31 { pt3dadd( 497.263, 452.468, 22.5456, 0.311 ) }
    dend_31 { pt3dadd( 498.125, 451.722, 22.2222, 0.295 ) }
    dend_31 { pt3dadd( 499.118, 451.157, 21.9887, 0.312 ) }
    dend_31 { pt3dadd( 500.147, 450.655, 21.833, 0.3446 ) }
    dend_31 { pt3dadd( 501.254, 450.368, 21.7084, 0.4024 ) }
    dend_31 { pt3dadd( 502.383, 450.258, 21.574, 0.5212 ) }
    dend_31 { pt3dadd( 503.505, 450.109, 21.4057, 0.6866 ) }
    dend_31 { pt3dadd( 504.648, 450.109, 21.2492, 0.5716 ) }
    dend_31 { pt3dadd( 505.571, 449.876, 21.0409, 0.5752 ) }
    dend_31 { pt3dadd( 505.762, 448.824, 20.7959, 0.4436 ) }
    dend_31 { pt3dadd( 506.251, 447.892, 20.6018, 0.4144 ) }
    dend_31 { pt3dadd( 507.234, 447.533, 20.4523, 0.4608 ) }
    dend_31 { pt3dadd( 508.368, 447.635, 20.335, 0.517 ) }
    dend_31 { pt3dadd( 509.348, 447.089, 20.2334, 0.537 ) }
    dend_31 { pt3dadd( 510.479, 446.961, 20.1376, 0.5266 ) }
    dend_31 { pt3dadd( 511.617, 446.961, 19.9886, 0.5068 ) }
    dend_31 { pt3dadd( 512.614, 447.304, 19.8148, 0.475 ) }
    dend_31 { pt3dadd( 513.172, 447.19, 19.6101, 0.3906 ) }
    dend_31 { pt3dadd( 514.164, 446.753, 19.3715, 0.3572 ) }
    dend_31 { pt3dadd( 514.249, 445.8, 18.9787, 0.3836 ) }
    dend_31 { pt3dadd( 514.887, 445.106, 18.4752, 0.4628 ) }
    dend_31 { pt3dadd( 515.258, 445.016, 17.7766, 0.691 ) }
    dend_31 { pt3dadd( 516.158, 445.016, 17.1948, 0.7202 ) }
    dend_31 { pt3dadd( 517.279, 445.016, 16.6709, 0.627 ) }
    dend_31 { pt3dadd( 518.27, 444.711, 16.2277, 0.4828 ) }
    dend_31 { pt3dadd( 518.677, 444.694, 15.8385, 0.5328 ) }
    dend_31 { pt3dadd( 519.786, 444.673, 15.4543, 0.4578 ) }
    dend_31 { pt3dadd( 520.916, 444.516, 15.1323, 0.4482 ) }
    dend_31 { pt3dadd( 522.016, 444.206, 14.8212, 0.4884 ) }
    dend_31 { pt3dadd( 523.138, 443.986, 14.52, 0.739 ) }
    dend_31 { pt3dadd( 523.885, 443.332, 13.9919, 0.8066 ) }
    dend_31 { pt3dadd( 523.609, 443.071, 13.2535, 0.7996 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_31 { pt3dadd( 523.961, 442.493, 12.682, 0.742 ) }
    dend_31 { pt3dadd( 524.267, 441.397, 12.255, 0.6228 ) }
    dend_31 { pt3dadd( 524.755, 440.392, 11.9619, 0.6916 ) }
    dend_31 { pt3dadd( 525.676, 439.985, 11.7897, 0.7844 ) }
    dend_31 { pt3dadd( 526.791, 440.05, 11.7228, 0.6688 ) }
    dend_31 { pt3dadd( 527.591, 439.248, 11.7046, 0.7066 ) }
    dend_31 { pt3dadd( 528.302, 438.359, 11.6682, 0.6954 ) }
    dend_31 { pt3dadd( 528.536, 437.279, 11.6819, 0.8418 ) }
    dend_31 { pt3dadd( 529.023, 436.247, 11.639, 0.7576 ) }
    dend_31 { pt3dadd( 529.328, 435.178, 11.5374, 0.9564 ) }
    dend_31 { pt3dadd( 529.328, 434.377, 11.3422, 0.9746 ) }
    dend_31 { pt3dadd( 529.544, 433.983, 10.8326, 0.879 ) }
    dend_31 { pt3dadd( 529.617, 433.615, 10.2998, 0.872 ) }
    dend_31 { pt3dadd( 529.602, 433.227, 9.8232, 0.949 ) }
    dend_31 { pt3dadd( 529.5, 432.87, 9.4735, 1.1102 ) }
    dend_31 { pt3dadd( 529.297, 432.616, 9.2414, 1.322 ) }
    dend_31 { pt3dadd( 529.093, 432.413, 9.116, 1.2202 ) }
    dend_31 { pt3dadd( 528.737, 432.26, 9.07, 0.9152 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 18/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 473.605, 475.489, 33.2707, 0.9044 ) }
    dend_26 { pt3dadd( 473.913, 475.845, 33.0596, 0.5908 ) }
    dend_26 { pt3dadd( 474.719, 476.657, 32.9123, 0.4182 ) }
    dend_26 { pt3dadd( 475.578, 477.412, 32.816, 0.4024 ) }
    dend_26 { pt3dadd( 476.531, 478.04, 32.7723, 0.4976 ) }
    dend_26 { pt3dadd( 477.503, 478.596, 32.8336, 0.756 ) }
    dend_26 { pt3dadd( 478.473, 479.174, 32.9801, 0.8372 ) }
    dend_26 { pt3dadd( 479.385, 479.799, 33.2212, 0.8598 ) }
    dend_26 { pt3dadd( 480.196, 480.587, 33.4589, 0.8372 ) }
    dend_26 { pt3dadd( 480.884, 481.499, 33.6182, 0.879 ) }
    dend_26 { pt3dadd( 481.788, 482.156, 33.6381, 0.7784 ) }
    dend_26 { pt3dadd( 482.737, 482.759, 33.6834, 0.7718 ) }
    dend_26 { pt3dadd( 483.604, 483.499, 33.6731, 0.8012 ) }
    dend_26 { pt3dadd( 484.568, 484.041, 33.5292, 0.6532 ) }
    dend_26 { pt3dadd( 485.637, 484.439, 33.3939, 0.6762 ) }
    dend_26 { pt3dadd( 486.565, 485.021, 33.3928, 0.6464 ) }
    dend_26 { pt3dadd( 487.581, 485.541, 33.3516, 0.7136 ) }
    dend_26 { pt3dadd( 488.639, 485.89, 33.194, 0.7024 ) }
    dend_26 { pt3dadd( 489.745, 486.179, 33.0344, 0.6548 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 37/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 429.057, 523.792, 14.5242, 0.5414 ) }
    dend_24 { pt3dadd( 429.057, 524.572, 14.6191, 0.6864 ) }
    dend_24 { pt3dadd( 429.573, 525.252, 14.3279, 0.6218 ) }
    dend_24 { pt3dadd( 430.659, 525.395, 14.1537, 0.5216 ) }
    dend_24 { pt3dadd( 431.803, 525.395, 14.0512, 0.6002 ) }
    dend_24 { pt3dadd( 432.947, 525.395, 14.0218, 0.6056 ) }
    dend_24 { pt3dadd( 434.091, 525.395, 14.063, 0.6106 ) }
    dend_24 { pt3dadd( 435.234, 525.395, 14.1708, 0.6432 ) }
    dend_24 { pt3dadd( 436.262, 525.266, 14.5211, 0.5932 ) }
    dend_24 { pt3dadd( 437.305, 525.166, 14.9912, 0.5764 ) }
    dend_24 { pt3dadd( 438.449, 525.166, 15.3723, 0.4068 ) }
    dend_24 { pt3dadd( 439.588, 525.166, 15.7013, 0.305 ) }
    dend_24 { pt3dadd( 440.728, 525.166, 15.969, 0.2288 ) }
    dend_24 { pt3dadd( 441.871, 525.166, 16.3061, 0.2288 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 51/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 429.057, 523.792, 14.5242, 0.5414 ) }
    dend_23 { pt3dadd( 428.789, 524.098, 14.303, 0.5644 ) }
    dend_23 { pt3dadd( 428.095, 524.89, 13.9902, 0.4326 ) }
    dend_23 { pt3dadd( 427.385, 525.769, 13.7676, 0.351 ) }
    dend_23 { pt3dadd( 426.564, 526.564, 13.6511, 0.323 ) }
    dend_23 { pt3dadd( 426.129, 526.876, 13.8034, 0.3602 ) }
    dend_23 { pt3dadd( 425.484, 527.734, 13.9944, 0.454 ) }
    dend_23 { pt3dadd( 425.156, 528.828, 14.1568, 0.5078 ) }
    dend_23 { pt3dadd( 424.694, 529.846, 14.2744, 0.5022 ) }
    dend_23 { pt3dadd( 423.663, 530.271, 14.3192, 0.547 ) }
    dend_23 { pt3dadd( 422.54, 530.428, 14.2909, 0.8186 ) }
    dend_23 { pt3dadd( 421.678, 530.896, 14.1887, 0.8662 ) }
    dend_23 { pt3dadd( 420.612, 531.099, 13.9328, 0.6508 ) }
    dend_23 { pt3dadd( 419.54, 531.453, 13.6741, 0.5818 ) }
    dend_23 { pt3dadd( 418.46, 531.83, 13.4378, 0.4496 ) }
    dend_23 { pt3dadd( 417.355, 532.12, 13.2096, 0.4554 ) }
    dend_23 { pt3dadd( 416.232, 532.327, 12.9763, 0.3924 ) }
    dend_23 { pt3dadd( 415.098, 532.47, 12.7294, 0.4036 ) }
    dend_23 { pt3dadd( 413.954, 532.489, 12.4648, 0.4904 ) }
    dend_23 { pt3dadd( 413.117, 533.015, 11.937, 0.5604 ) }
    dend_23 { pt3dadd( 412.301, 533.463, 11.2487, 0.6722 ) }
    dend_23 { pt3dadd( 411.41, 533.404, 10.4924, 0.5084 ) }
    dend_23 { pt3dadd( 410.27, 533.399, 9.8773, 0.4068 ) }
    dend_23 { pt3dadd( 409.126, 533.381, 9.4363, 0.3814 ) }
    dend_23 { pt3dadd( 408.004, 533.175, 8.9964, 0.4576 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 76/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 473.984, 440.525, 30.2672, 0.9546 ) }
    dend_16 { pt3dadd( 474.411, 440.228, 29.7007, 0.2288 ) }
    dend_16 { pt3dadd( 474.628, 439.248, 29.6803, 0.2822 ) }
    dend_16 { pt3dadd( 475.648, 439.001, 29.6724, 0.2882 ) }
    dend_16 { pt3dadd( 475.674, 437.859, 29.664, 0.3014 ) }
    dend_16 { pt3dadd( 475.857, 436.759, 29.6545, 0.319 ) }
    dend_16 { pt3dadd( 476.133, 435.664, 29.643, 0.3824 ) }
    dend_16 { pt3dadd( 476.64, 434.701, 29.6265, 0.35 ) }
    dend_16 { pt3dadd( 477.277, 433.976, 29.6036, 0.3314 ) }
    dend_16 { pt3dadd( 477.573, 432.882, 29.5739, 0.3272 ) }
    dend_16 { pt3dadd( 477.865, 431.796, 29.5386, 0.3986 ) }
    dend_16 { pt3dadd( 478.65, 431.059, 29.5008, 0.3754 ) }
    dend_16 { pt3dadd( 478.764, 430.536, 29.3443, 0.4024 ) }
    dend_16 { pt3dadd( 479.295, 429.636, 29.2348, 0.341 ) }
    dend_16 { pt3dadd( 480.398, 429.458, 29.1768, 0.3126 ) }
    dend_16 { pt3dadd( 481.29, 428.872, 29.1718, 0.299 ) }
    dend_16 { pt3dadd( 482.045, 428.017, 29.22, 0.3148 ) }
    dend_16 { pt3dadd( 482.755, 427.17, 29.3135, 0.3746 ) }
    dend_16 { pt3dadd( 483.062, 426.752, 29.552, 0.3362 ) }
    dend_16 { pt3dadd( 483.678, 425.897, 29.8987, 0.304 ) }
    dend_16 { pt3dadd( 484.256, 424.928, 30.2196, 0.2822 ) }
    dend_16 { pt3dadd( 484.747, 423.915, 30.5281, 0.2888 ) }
    dend_16 { pt3dadd( 485.306, 422.916, 30.7625, 0.3006 ) }
    dend_16 { pt3dadd( 485.836, 421.903, 30.9296, 0.3252 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_16 { pt3dadd( 486.646, 421.2, 31.036, 0.3576 ) }
    dend_16 { pt3dadd( 486.816, 420.756, 31.1324, 0.4798 ) }
    dend_16 { pt3dadd( 487.19, 419.69, 31.2606, 0.407 ) }
    dend_16 { pt3dadd( 487.401, 418.566, 31.3569, 0.3506 ) }
    dend_16 { pt3dadd( 487.734, 417.496, 31.4331, 0.3232 ) }
    dend_16 { pt3dadd( 488.717, 416.989, 31.4919, 0.3544 ) }
    dend_16 { pt3dadd( 489.717, 416.433, 31.5361, 0.4738 ) }
    dend_16 { pt3dadd( 490.542, 415.695, 31.5694, 0.396 ) }
    dend_16 { pt3dadd( 491.03, 414.661, 31.6028, 0.3308 ) }
    dend_16 { pt3dadd( 491.48, 413.609, 31.6498, 0.2848 ) }
    dend_16 { pt3dadd( 491.975, 412.637, 31.7131, 0.2934 ) }
    dend_16 { pt3dadd( 492.014, 411.496, 31.799, 0.3102 ) }
    dend_16 { pt3dadd( 492.443, 410.547, 31.9141, 0.3354 ) }
    dend_16 { pt3dadd( 493.074, 409.495, 32.1418, 0.4136 ) }
    dend_16 { pt3dadd( 493.674, 408.521, 32.3742, 0.4046 ) }
    dend_16 { pt3dadd( 494.273, 407.547, 32.6113, 0.451 ) }
    dend_16 { pt3dadd( 494.099, 407.042, 33.0442, 0.457 ) }
    dend_16 { pt3dadd( 494.044, 406.01, 33.5454, 0.399 ) }
    dend_16 { pt3dadd( 494.084, 404.871, 33.9542, 0.399 ) }
    dend_16 { pt3dadd( 494.557, 403.887, 34.2742, 0.3342 ) }
    dend_16 { pt3dadd( 494.914, 402.832, 34.5271, 0.3006 ) }
    dend_16 { pt3dadd( 495.318, 401.864, 34.8113, 0.2758 ) }
    dend_16 { pt3dadd( 495.596, 400.795, 35.0837, 0.2766 ) }
    dend_16 { pt3dadd( 495.905, 399.694, 35.2951, 0.2784 ) }
    dend_16 { pt3dadd( 496.104, 398.573, 35.4766, 0.2816 ) }
    dend_16 { pt3dadd( 496.104, 397.429, 35.6345, 0.2876 ) }
    dend_16 { pt3dadd( 496.104, 396.285, 35.7818, 0.2998 ) }
    dend_16 { pt3dadd( 495.962, 395.168, 35.9783, 0.3158 ) }
    dend_16 { pt3dadd( 495.875, 394.042, 36.2102, 0.3766 ) }
    dend_16 { pt3dadd( 495.875, 392.898, 36.4498, 0.3398 ) }
    dend_16 { pt3dadd( 495.875, 391.755, 36.6957, 0.3108 ) }
    dend_16 { pt3dadd( 495.875, 391.071, 37.2632, 0.2954 ) }
    dend_16 { pt3dadd( 495.706, 389.72, 37.7787, 0.308 ) }
    dend_16 { pt3dadd( 495.797, 388.601, 38.1889, 0.3616 ) }
    dend_16 { pt3dadd( 496.114, 387.504, 38.4829, 0.3134 ) }
    dend_16 { pt3dadd( 496.652, 386.526, 38.6756, 0.2542 ) }
    dend_16 { pt3dadd( 497.247, 385.579, 38.7971, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 37/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 473.984, 440.525, 30.2672, 0.9546 ) }
    dend_13 { pt3dadd( 474.545, 440.602, 30.0989, 0.8022 ) }
    dend_13 { pt3dadd( 475.576, 440.932, 29.9513, 0.9226 ) }
    dend_13 { pt3dadd( 476.581, 441.442, 29.911, 1.0198 ) }
    dend_13 { pt3dadd( 477.519, 442.039, 29.9813, 1.124 ) }
    dend_13 { pt3dadd( 478.336, 442.802, 30.0961, 1.0014 ) }
    dend_13 { pt3dadd( 479.039, 443.7, 30.1708, 0.9344 ) }
    dend_13 { pt3dadd( 479.645, 444.633, 30.13, 0.9476 ) }
    dend_13 { pt3dadd( 480.221, 445.58, 29.9771, 0.9914 ) }
    dend_13 { pt3dadd( 480.702, 446.596, 29.8449, 0.7498 ) }
    dend_13 { pt3dadd( 481.079, 447.624, 29.8463, 0.7236 ) }
    dend_13 { pt3dadd( 481.751, 448.483, 29.8777, 0.6878 ) }
    dend_13 { pt3dadd( 482.633, 449.186, 29.8472, 0.7896 ) }
    dend_13 { pt3dadd( 483.501, 449.92, 29.8029, 0.847 ) }
    dend_13 { pt3dadd( 484.419, 450.599, 29.7618, 0.9046 ) }
    dend_13 { pt3dadd( 485.364, 451.243, 29.7072, 1.019 ) }
    dend_13 { pt3dadd( 486.303, 451.871, 29.6786, 0.9662 ) }
    dend_13 { pt3dadd( 486.786, 452.834, 29.6148, 0.7818 ) }
    dend_13 { pt3dadd( 487.284, 453.841, 29.5599, 0.6302 ) }
    dend_13 { pt3dadd( 488.22, 454.343, 29.3692, 0.7992 ) }
    dend_13 { pt3dadd( 489.202, 454.654, 28.9677, 0.7562 ) }
    dend_13 { pt3dadd( 490.266, 454.981, 28.5065, 0.5768 ) }
    dend_13 { pt3dadd( 491.402, 455.0, 28.0739, 0.4986 ) }
    dend_13 { pt3dadd( 492.532, 454.841, 27.7281, 0.492 ) }
    // Section: dend_9, id: dend_9, parent: dend_2 (entry count 61/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 464.783, 446.186, 29.9622, 0.9148 ) }
    dend_9 { pt3dadd( 464.368, 445.177, 30.4301, 0.2288 ) }
    dend_9 { pt3dadd( 464.337, 444.568, 28.9058, 0.6406 ) }
    dend_9 { pt3dadd( 465.036, 444.732, 28.1411, 0.5704 ) }
    dend_9 { pt3dadd( 465.743, 444.899, 27.1376, 0.6226 ) }
    dend_9 { pt3dadd( 466.799, 445.167, 26.1836, 0.5196 ) }
    dend_9 { pt3dadd( 467.859, 445.426, 25.3193, 0.6128 ) }
    dend_9 { pt3dadd( 468.993, 445.566, 24.6784, 0.5494 ) }
    dend_9 { pt3dadd( 470.018, 445.916, 24.2368, 0.6642 ) }
    dend_9 { pt3dadd( 470.829, 446.706, 23.9646, 0.6638 ) }
    dend_9 { pt3dadd( 471.836, 447.235, 23.7871, 0.783 ) }
    dend_9 { pt3dadd( 472.474, 447.834, 23.5903, 0.65 ) }
    dend_9 { pt3dadd( 472.242, 448.87, 23.2683, 0.7496 ) }
    dend_9 { pt3dadd( 472.558, 449.889, 22.9552, 0.6282 ) }
    dend_9 { pt3dadd( 473.48, 450.551, 22.7018, 0.7424 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 76/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 464.783, 446.186, 29.9622, 0.9148 ) }
    dend_3 { pt3dadd( 464.618, 445.34, 29.2412, 0.8236 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 78/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 467.987, 447.844, 41.0561, 1.1864 ) }
    apic_3 { pt3dadd( 468.883, 447.193, 41.1228, 0.9678 ) }
    apic_3 { pt3dadd( 469.809, 446.519, 41.2101, 0.9098 ) }
    apic_3 { pt3dadd( 470.717, 445.842, 41.3577, 0.9468 ) }
    apic_3 { pt3dadd( 471.552, 445.108, 41.5968, 1.0004 ) }
    apic_3 { pt3dadd( 472.477, 444.435, 41.8037, 0.9436 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 84/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 467.987, 447.844, 41.0561, 1.1864 ) }
    apic_2 { pt3dadd( 467.34, 447.338, 41.44, 0.4576 ) }
    apic_2 { pt3dadd( 466.305, 446.905, 42.0753, 0.3722 ) }
    apic_2 { pt3dadd( 465.29, 446.519, 42.3886, 0.3242 ) }
    apic_2 { pt3dadd( 464.17, 446.314, 42.749, 0.319 ) }
    apic_2 { pt3dadd( 463.243, 445.893, 43.1536, 0.359 ) }
    apic_2 { pt3dadd( 463.272, 445.907, 43.7072, 0.4214 ) }
    apic_2 { pt3dadd( 463.309, 445.931, 44.6608, 0.5946 ) }
    apic_2 { pt3dadd( 462.579, 446.088, 45.7425, 0.6356 ) }
    apic_2 { pt3dadd( 462.264, 445.094, 46.6306, 0.6992 ) }
    apic_2 { pt3dadd( 461.441, 444.457, 47.3248, 0.6494 ) }
    apic_2 { pt3dadd( 460.422, 444.539, 47.95, 0.6832 ) }
    apic_2 { pt3dadd( 459.712, 443.734, 48.3787, 0.5908 ) }
    apic_2 { pt3dadd( 459.509, 442.609, 48.6556, 0.7156 ) }
    apic_2 { pt3dadd( 459.092, 441.57, 48.8726, 0.6536 ) }
    apic_2 { pt3dadd( 458.204, 440.971, 49.1375, 0.591 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_2 { pt3dadd( 457.135, 440.712, 49.5054, 0.6774 ) }
    apic_2 { pt3dadd( 456.229, 440.185, 49.8985, 0.77 ) }
    apic_2 { pt3dadd( 455.432, 439.374, 50.2614, 0.8124 ) }
    apic_2 { pt3dadd( 454.596, 438.668, 50.708, 0.8314 ) }
    apic_2 { pt3dadd( 453.783, 437.934, 51.1848, 0.6998 ) }
    apic_2 { pt3dadd( 453.431, 436.974, 51.5617, 0.5778 ) }
    apic_2 { pt3dadd( 453.092, 436.029, 51.8795, 0.6768 ) }
    apic_2 { pt3dadd( 452.135, 435.586, 52.2844, 0.6526 ) }
    apic_2 { pt3dadd( 451.333, 434.838, 52.6285, 0.4736 ) }
    apic_2 { pt3dadd( 451.233, 433.722, 52.8604, 0.333 ) }
    apic_2 { pt3dadd( 451.138, 432.591, 53.009, 0.2886 ) }
    apic_2 { pt3dadd( 450.729, 431.524, 53.0986, 0.3004 ) }
    apic_2 { pt3dadd( 450.273, 430.478, 53.1339, 0.323 ) }
    apic_2 { pt3dadd( 449.687, 429.495, 53.1238, 0.3606 ) }
    apic_2 { pt3dadd( 449.132, 428.501, 53.0961, 0.454 ) }
    apic_2 { pt3dadd( 448.944, 427.372, 53.0569, 0.5102 ) }
    apic_2 { pt3dadd( 448.757, 426.244, 53.004, 0.4946 ) }
    apic_2 { pt3dadd( 448.398, 425.162, 52.9357, 0.5916 ) }
    apic_2 { pt3dadd( 447.99, 424.093, 52.8497, 0.6184 ) }
    apic_2 { pt3dadd( 447.56, 423.426, 52.6406, 0.4958 ) }
    apic_2 { pt3dadd( 446.854, 422.525, 52.4409, 0.4174 ) }
    apic_2 { pt3dadd( 446.979, 421.389, 52.2441, 0.4646 ) }
    apic_2 { pt3dadd( 446.81, 420.278, 52.0419, 0.5316 ) }
    apic_2 { pt3dadd( 446.151, 419.453, 51.7863, 0.5288 ) }
    apic_2 { pt3dadd( 445.191, 418.875, 51.4494, 0.68 ) }
    apic_2 { pt3dadd( 444.23, 418.296, 51.0555, 0.6584 ) }
    apic_2 { pt3dadd( 443.364, 417.595, 50.6593, 0.4846 ) }
    apic_2 { pt3dadd( 443.133, 416.576, 50.1278, 0.3532 ) }
    apic_2 { pt3dadd( 442.306, 415.972, 49.6216, 0.3272 ) }
    apic_2 { pt3dadd( 441.433, 415.289, 49.1887, 0.368 ) }
    apic_2 { pt3dadd( 440.72, 414.395, 48.8107, 0.4676 ) }
    apic_2 { pt3dadd( 440.178, 413.468, 48.3731, 0.5358 ) }
    apic_2 { pt3dadd( 439.79, 412.514, 47.8044, 0.543 ) }
    apic_2 { pt3dadd( 439.391, 411.563, 47.1509, 0.6764 ) }
    apic_2 { pt3dadd( 438.551, 410.786, 46.6004, 0.798 ) }
    apic_2 { pt3dadd( 437.69, 410.035, 46.1308, 0.7192 ) }
    apic_2 { pt3dadd( 436.796, 409.321, 45.7234, 0.6786 ) }
    apic_2 { pt3dadd( 436.493, 408.319, 45.2318, 0.5468 ) }
    apic_2 { pt3dadd( 436.161, 407.294, 44.6844, 0.5778 ) }
    apic_2 { pt3dadd( 435.613, 406.292, 44.1988, 0.671 ) }
    apic_2 { pt3dadd( 435.333, 405.548, 43.6198, 0.6702 ) }
    apic_2 { pt3dadd( 434.952, 405.421, 42.8786, 0.8252 ) }
    apic_2 { pt3dadd( 434.458, 404.457, 42.2808, 1.038 ) }
    apic_2 { pt3dadd( 433.703, 403.705, 41.8124, 1.111 ) }
    apic_2 { pt3dadd( 433.247, 403.375, 41.2423, 0.976 ) }
    apic_2 { pt3dadd( 432.37, 402.792, 40.7949, 0.6654 ) }
    apic_2 { pt3dadd( 431.826, 401.823, 40.4606, 0.6102 ) }
    apic_2 { pt3dadd( 430.957, 401.671, 40.0851, 0.4968 ) }
    apic_2 { pt3dadd( 430.65, 402.039, 39.7762, 0.5694 ) }
    apic_2 { pt3dadd( 429.915, 402.917, 39.5262, 0.4734 ) }
    apic_2 { pt3dadd( 429.133, 402.917, 39.2101, 0.5016 ) }
    apic_2 { pt3dadd( 428.07, 402.509, 38.9407, 0.4688 ) }
    apic_2 { pt3dadd( 427.055, 402.002, 38.715, 0.5904 ) }
    apic_2 { pt3dadd( 426.026, 402.116, 38.4065, 0.617 ) }
    apic_2 { pt3dadd( 425.38, 402.415, 38.1475, 0.4874 ) }
    apic_2 { pt3dadd( 424.82, 403.262, 37.9274, 0.4312 ) }
    apic_2 { pt3dadd( 423.71, 403.465, 37.7154, 0.3466 ) }
    apic_2 { pt3dadd( 422.915, 403.012, 37.4758, 0.3246 ) }
    apic_2 { pt3dadd( 422.328, 402.065, 37.2294, 0.315 ) }
    apic_2 { pt3dadd( 421.678, 401.315, 36.9667, 0.3754 ) }
    apic_2 { pt3dadd( 421.454, 401.617, 36.5506, 0.3374 ) }
    apic_2 { pt3dadd( 420.863, 401.201, 35.9232, 0.3068 ) }
    apic_2 { pt3dadd( 419.721, 401.201, 35.3298, 0.2872 ) }
    apic_2 { pt3dadd( 419.047, 401.086, 34.6304, 0.2978 ) }
    apic_2 { pt3dadd( 418.018, 401.887, 33.9556, 0.3174 ) }
    apic_2 { pt3dadd( 417.789, 401.887, 33.0882, 0.3558 ) }
    apic_2 { pt3dadd( 417.784, 401.585, 32.4484, 0.4168 ) }
    apic_2 { pt3dadd( 417.547, 400.527, 31.9186, 0.5784 ) }
    apic_2 { pt3dadd( 416.894, 399.784, 31.6319, 0.6434 ) }
    apic_2 { pt3dadd( 416.191, 399.03, 31.4566, 0.5306 ) }
    apic_2 { pt3dadd( 415.997, 397.962, 31.3474, 0.5372 ) }
    apic_2 { pt3dadd( 414.928, 397.654, 31.2746, 0.4192 ) }
    apic_2 { pt3dadd( 414.014, 397.654, 31.1704, 0.3746 ) }
    apic_2 { pt3dadd( 413.685, 397.654, 30.9957, 0.36 ) }
    apic_2 { pt3dadd( 412.637, 397.54, 30.6575, 0.4606 ) }
    apic_2 { pt3dadd( 411.533, 397.364, 30.3884, 0.4856 ) }
    apic_2 { pt3dadd( 410.256, 397.284, 29.9788, 0.6288 ) }
    apic_2 { pt3dadd( 409.221, 397.674, 29.5229, 0.6532 ) }
    apic_2 { pt3dadd( 408.113, 397.884, 29.09, 0.7248 ) }
    apic_2 { pt3dadd( 406.596, 398.094, 28.7515, 0.7308 ) }
    apic_2 { pt3dadd( 405.506, 398.356, 28.4928, 0.6708 ) }
    apic_2 { pt3dadd( 404.453, 398.371, 28.1887, 0.6752 ) }
    apic_2 { pt3dadd( 403.562, 397.77, 27.9656, 0.5806 ) }
    apic_2 { pt3dadd( 402.45, 397.653, 27.872, 0.6732 ) }
    apic_2 { pt3dadd( 401.316, 397.647, 27.8331, 0.6894 ) }
    apic_2 { pt3dadd( 400.185, 397.605, 27.7572, 0.7876 ) }
    apic_2 { pt3dadd( 399.074, 397.387, 27.6791, 0.867 ) }
    apic_2 { pt3dadd( 397.944, 397.414, 27.6385, 0.8262 ) }
    apic_2 { pt3dadd( 396.811, 397.308, 27.6128, 0.7482 ) }
    apic_2 { pt3dadd( 395.7, 397.108, 27.5517, 0.6154 ) }
    apic_2 { pt3dadd( 394.635, 396.773, 27.606, 0.5398 ) }
    apic_2 { pt3dadd( 393.544, 396.647, 27.8043, 0.4888 ) }
    apic_2 { pt3dadd( 392.47, 396.297, 27.9754, 0.4166 ) }
    apic_2 { pt3dadd( 391.39, 395.929, 28.103, 0.4034 ) }
    apic_2 { pt3dadd( 390.301, 396.025, 28.3192, 0.4814 ) }
    apic_2 { pt3dadd( 389.208, 396.314, 28.5398, 0.5848 ) }
    apic_2 { pt3dadd( 388.234, 396.485, 28.824, 0.5186 ) }
    apic_2 { pt3dadd( 387.142, 396.224, 28.9478, 0.5036 ) }
    apic_2 { pt3dadd( 386.184, 395.675, 28.917, 0.6408 ) }
    apic_2 { pt3dadd( 385.32, 395.014, 28.723, 0.7792 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    apic_2 { pt3dadd( 384.385, 394.399, 28.488, 0.6844 ) }
    apic_2 { pt3dadd( 383.362, 394.013, 28.3368, 0.6136 ) }
    apic_2 { pt3dadd( 382.226, 393.949, 28.2268, 0.4294 ) }
    apic_2 { pt3dadd( 381.105, 393.76, 28.1341, 0.3452 ) }
    apic_2 { pt3dadd( 380.017, 393.417, 28.0274, 0.3124 ) }
    apic_2 { pt3dadd( 378.924, 393.152, 27.8502, 0.3396 ) }
    apic_2 { pt3dadd( 377.807, 393.02, 27.6161, 0.42 ) }
    apic_2 { pt3dadd( 376.698, 392.823, 27.354, 0.4232 ) }
    apic_2 { pt3dadd( 375.598, 392.632, 27.0427, 0.451 ) }
    apic_2 { pt3dadd( 374.471, 392.565, 26.719, 0.6258 ) }
    apic_2 { pt3dadd( 373.486, 392.227, 26.3533, 0.579 ) }
    apic_2 { pt3dadd( 372.917, 392.062, 26.133, 0.4624 ) }
    apic_2 { pt3dadd( 372.307, 391.986, 25.9874, 0.3938 ) }
    apic_2 { pt3dadd( 371.798, 391.809, 25.9017, 0.463 ) }
    apic_2 { pt3dadd( 371.467, 391.453, 25.8644, 0.5524 ) }
    apic_2 { pt3dadd( 371.315, 391.147, 25.8574, 0.4518 ) }
    apic_2 { pt3dadd( 370.934, 390.842, 25.8647, 0.4122 ) }
    apic_2 { pt3dadd( 370.704, 390.384, 25.8647, 0.3134 ) }
    apic_2 { pt3dadd( 370.704, 389.723, 25.8647, 0.2542 ) }
    apic_2 { pt3dadd( 370.704, 389.469, 25.8647, 0.2288 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 20/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 489.745, 486.179, 33.0344, 0.6548 ) }
    dend_30 { pt3dadd( 489.941, 486.264, 32.8779, 0.4682 ) }
    dend_30 { pt3dadd( 490.893, 486.812, 32.6508, 0.3714 ) }
    dend_30 { pt3dadd( 491.529, 487.737, 32.3873, 0.354 ) }
    dend_30 { pt3dadd( 492.243, 488.574, 32.1997, 0.4496 ) }
    dend_30 { pt3dadd( 493.321, 488.941, 32.0636, 0.464 ) }
    dend_30 { pt3dadd( 494.405, 489.265, 31.9259, 0.5942 ) }
    dend_30 { pt3dadd( 495.379, 489.857, 31.8083, 0.5634 ) }
    dend_30 { pt3dadd( 496.299, 490.534, 31.7052, 0.6832 ) }
    dend_30 { pt3dadd( 497.297, 491.092, 31.5972, 0.7324 ) }
    dend_30 { pt3dadd( 498.329, 491.554, 31.4364, 0.7482 ) }
    dend_30 { pt3dadd( 499.385, 491.911, 31.19, 0.687 ) }
    dend_30 { pt3dadd( 500.463, 492.281, 30.9358, 0.5534 ) }
    dend_30 { pt3dadd( 501.543, 492.661, 30.6992, 0.4046 ) }
    dend_30 { pt3dadd( 502.611, 493.066, 30.4707, 0.3362 ) }
    dend_30 { pt3dadd( 503.418, 493.73, 30.2039, 0.3434 ) }
    dend_30 { pt3dadd( 503.794, 494.78, 29.8967, 0.3926 ) }
    dend_30 { pt3dadd( 504.403, 495.659, 29.5868, 0.5404 ) }
    dend_30 { pt3dadd( 505.309, 496.296, 29.2482, 0.54 ) }
    dend_30 { pt3dadd( 506.127, 497.093, 28.9685, 0.4992 ) }
    dend_30 { pt3dadd( 506.96, 497.876, 28.763, 0.388 ) }
    dend_30 { pt3dadd( 507.816, 498.628, 28.6278, 0.3542 ) }
    dend_30 { pt3dadd( 508.518, 499.529, 28.5443, 0.3702 ) }
    dend_30 { pt3dadd( 509.145, 500.477, 28.4911, 0.4746 ) }
    dend_30 { pt3dadd( 509.966, 501.27, 28.4533, 0.536 ) }
    dend_30 { pt3dadd( 510.874, 501.966, 28.4124, 0.6032 ) }
    dend_30 { pt3dadd( 511.776, 502.667, 28.359, 0.4994 ) }
    dend_30 { pt3dadd( 512.706, 503.31, 28.2559, 0.4968 ) }
    dend_30 { pt3dadd( 513.65, 503.872, 28.1005, 0.4888 ) }
    dend_30 { pt3dadd( 514.718, 504.239, 28.0196, 0.4888 ) }
    dend_30 { pt3dadd( 515.818, 504.378, 27.9112, 0.4152 ) }
    dend_30 { pt3dadd( 516.922, 504.312, 27.7452, 0.4056 ) }
    dend_30 { pt3dadd( 518.042, 504.528, 27.6032, 0.4618 ) }
    dend_30 { pt3dadd( 519.104, 504.931, 27.4576, 0.6652 ) }
    dend_30 { pt3dadd( 520.062, 505.364, 27.2233, 0.7878 ) }
    dend_30 { pt3dadd( 520.861, 505.719, 27.064, 0.8764 ) }
    dend_30 { pt3dadd( 521.88, 506.151, 26.9662, 0.8006 ) }
    dend_30 { pt3dadd( 522.823, 506.794, 26.8526, 0.6812 ) }
    dend_30 { pt3dadd( 523.859, 507.228, 26.6546, 0.5862 ) }
    dend_30 { pt3dadd( 524.966, 507.397, 26.3833, 0.7104 ) }
    dend_30 { pt3dadd( 526.039, 507.777, 26.1106, 0.8554 ) }
    dend_30 { pt3dadd( 526.99, 508.303, 25.7421, 0.8532 ) }
    dend_30 { pt3dadd( 528.068, 508.627, 25.3795, 0.793 ) }
    dend_30 { pt3dadd( 529.198, 508.787, 25.1356, 0.724 ) }
    dend_30 { pt3dadd( 530.283, 509.102, 24.9077, 0.6176 ) }
    dend_30 { pt3dadd( 531.372, 509.377, 24.8338, 0.5436 ) }
    dend_30 { pt3dadd( 532.492, 509.607, 24.7982, 0.496 ) }
    dend_30 { pt3dadd( 533.492, 510.086, 24.6876, 0.4302 ) }
    dend_30 { pt3dadd( 534.388, 510.787, 24.575, 0.4278 ) }
    dend_30 { pt3dadd( 535.279, 511.469, 24.5627, 0.5276 ) }
    dend_30 { pt3dadd( 536.306, 511.964, 24.5521, 0.6672 ) }
    dend_30 { pt3dadd( 537.32, 512.435, 24.4695, 0.6874 ) }
    dend_30 { pt3dadd( 538.276, 513.065, 24.4258, 0.7406 ) }
    dend_30 { pt3dadd( 539.25, 513.658, 24.4384, 0.7596 ) }
    dend_30 { pt3dadd( 540.179, 514.291, 24.5384, 0.7264 ) }
    dend_30 { pt3dadd( 541.102, 514.94, 24.6694, 0.7676 ) }
    dend_30 { pt3dadd( 542.094, 515.501, 24.7436, 0.8042 ) }
    dend_30 { pt3dadd( 543.093, 516.04, 24.7797, 0.8348 ) }
    dend_30 { pt3dadd( 544.133, 516.471, 24.8335, 0.8438 ) }
    dend_30 { pt3dadd( 545.138, 516.909, 24.81, 0.8638 ) }
    dend_30 { pt3dadd( 545.831, 517.819, 24.7568, 0.8848 ) }
    dend_30 { pt3dadd( 546.513, 518.737, 24.7019, 1.0004 ) }
    dend_30 { pt3dadd( 547.054, 519.745, 24.6565, 0.8426 ) }
    dend_30 { pt3dadd( 547.81, 520.433, 24.5778, 0.9836 ) }
    dend_30 { pt3dadd( 548.799, 520.973, 24.4742, 0.9728 ) }
    dend_30 { pt3dadd( 549.617, 521.765, 24.4132, 0.9006 ) }
    dend_30 { pt3dadd( 550.361, 522.623, 24.3866, 0.7928 ) }
    dend_30 { pt3dadd( 551.281, 523.299, 24.3905, 0.6926 ) }
    dend_30 { pt3dadd( 552.142, 524.047, 24.4213, 0.7098 ) }
    dend_30 { pt3dadd( 552.573, 524.478, 24.5456, 0.6718 ) }
    dend_30 { pt3dadd( 553.348, 525.263, 24.7344, 0.7112 ) }
    dend_30 { pt3dadd( 554.224, 525.979, 24.8654, 0.71 ) }
    dend_30 { pt3dadd( 555.247, 526.487, 24.9446, 0.6096 ) }
    dend_30 { pt3dadd( 556.275, 526.99, 24.9808, 0.6722 ) }
    dend_30 { pt3dadd( 556.76, 527.877, 24.7974, 0.7232 ) }
    dend_30 { pt3dadd( 557.146, 528.105, 24.6557, 0.6764 ) }
    dend_30 { pt3dadd( 558.169, 528.602, 24.5764, 0.8188 ) }
    dend_30 { pt3dadd( 559.25, 528.923, 24.5994, 0.8844 ) }
    dend_30 { pt3dadd( 560.335, 529.209, 24.729, 0.8264 ) }
    dend_30 { pt3dadd( 561.411, 529.577, 24.8872, 0.6756 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_30 { pt3dadd( 562.46, 530.03, 25.0387, 0.6064 ) }
    dend_30 { pt3dadd( 563.452, 530.597, 25.153, 0.601 ) }
    dend_30 { pt3dadd( 564.37, 531.27, 25.2213, 0.6796 ) }
    dend_30 { pt3dadd( 565.216, 532.026, 25.2311, 0.6254 ) }
    dend_30 { pt3dadd( 566.054, 532.746, 25.2879, 0.8068 ) }
    dend_30 { pt3dadd( 566.883, 533.444, 25.4918, 0.6912 ) }
    dend_30 { pt3dadd( 567.698, 534.194, 25.7603, 0.6114 ) }
    dend_30 { pt3dadd( 568.57, 534.935, 25.9832, 0.4984 ) }
    dend_30 { pt3dadd( 569.422, 535.693, 26.1576, 0.5742 ) }
    dend_30 { pt3dadd( 570.143, 536.578, 26.2791, 0.7028 ) }
    dend_30 { pt3dadd( 570.752, 537.544, 26.3497, 0.7726 ) }
    dend_30 { pt3dadd( 571.221, 538.564, 26.4141, 0.8052 ) }
    dend_30 { pt3dadd( 571.656, 539.593, 26.4774, 0.6494 ) }
    dend_30 { pt3dadd( 572.021, 540.628, 26.4228, 0.4932 ) }
    dend_30 { pt3dadd( 572.0, 541.676, 26.18, 0.4744 ) }
    dend_30 { pt3dadd( 572.201, 542.663, 25.8608, 0.5 ) }
    dend_30 { pt3dadd( 572.859, 543.598, 25.5928, 0.4802 ) }
    dend_30 { pt3dadd( 573.573, 544.492, 25.3792, 0.5414 ) }
    dend_30 { pt3dadd( 574.317, 545.361, 25.2266, 0.6386 ) }
    dend_30 { pt3dadd( 575.08, 546.212, 25.1325, 0.6692 ) }
    dend_30 { pt3dadd( 575.74, 547.126, 25.0491, 0.5364 ) }
    dend_30 { pt3dadd( 576.18, 548.151, 25.011, 0.5238 ) }
    dend_30 { pt3dadd( 576.594, 549.201, 25.0393, 0.5098 ) }
    dend_30 { pt3dadd( 577.273, 550.1, 25.0751, 0.6684 ) }
    dend_30 { pt3dadd( 578.142, 550.841, 25.1028, 0.7518 ) }
    dend_30 { pt3dadd( 579.088, 551.484, 25.1205, 0.7854 ) }
    dend_30 { pt3dadd( 580.008, 552.16, 25.1328, 0.7504 ) }
    dend_30 { pt3dadd( 580.849, 552.918, 25.16, 0.6988 ) }
    dend_30 { pt3dadd( 581.549, 553.741, 25.1356, 0.5388 ) }
    dend_30 { pt3dadd( 582.273, 554.474, 24.9407, 0.5536 ) }
    dend_30 { pt3dadd( 583.198, 555.116, 24.7744, 0.4434 ) }
    dend_30 { pt3dadd( 584.044, 555.854, 24.6798, 0.4492 ) }
    dend_30 { pt3dadd( 584.729, 556.761, 24.61, 0.356 ) }
    dend_30 { pt3dadd( 585.495, 557.423, 24.3404, 0.4576 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 34/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 489.745, 486.179, 33.0344, 0.6548 ) }
    dend_27 { pt3dadd( 490.712, 485.371, 33.1744, 0.2288 ) }
    dend_27 { pt3dadd( 491.699, 484.795, 33.1582, 0.2746 ) }
    dend_27 { pt3dadd( 492.508, 483.991, 33.152, 0.2746 ) }
    dend_27 { pt3dadd( 493.286, 483.29, 33.143, 0.2746 ) }
    dend_27 { pt3dadd( 494.431, 483.29, 33.1304, 0.2746 ) }
    dend_27 { pt3dadd( 495.557, 483.118, 33.1128, 0.2746 ) }
    dend_27 { pt3dadd( 496.665, 482.836, 33.0882, 0.2748 ) }
    dend_27 { pt3dadd( 497.732, 482.445, 33.0548, 0.2748 ) }
    dend_27 { pt3dadd( 498.721, 481.875, 33.0067, 0.275 ) }
    dend_27 { pt3dadd( 499.768, 481.415, 32.9364, 0.2754 ) }
    dend_27 { pt3dadd( 500.85, 481.045, 32.8406, 0.2762 ) }
    dend_27 { pt3dadd( 501.933, 480.677, 32.72, 0.2778 ) }
    dend_27 { pt3dadd( 502.629, 479.879, 32.5766, 0.2802 ) }
    dend_27 { pt3dadd( 503.059, 479.903, 32.2204, 0.2854 ) }
    dend_27 { pt3dadd( 503.611, 479.309, 31.7904, 0.2942 ) }
    dend_27 { pt3dadd( 504.73, 479.17, 31.4549, 0.3118 ) }
    dend_27 { pt3dadd( 505.758, 478.711, 31.2088, 0.3398 ) }
    dend_27 { pt3dadd( 506.861, 478.518, 31.0453, 0.4156 ) }
    dend_27 { pt3dadd( 508.004, 478.484, 30.9565, 0.4374 ) }
    dend_27 { pt3dadd( 509.147, 478.484, 30.9347, 0.3682 ) }
    dend_27 { pt3dadd( 509.97, 477.857, 30.9383, 0.3166 ) }
    dend_27 { pt3dadd( 510.993, 477.382, 30.9436, 0.305 ) }
    dend_27 { pt3dadd( 512.043, 476.942, 30.9509, 0.3332 ) }
    dend_27 { pt3dadd( 513.026, 476.359, 30.9613, 0.3728 ) }
    dend_27 { pt3dadd( 514.023, 475.807, 30.9756, 0.5074 ) }
    dend_27 { pt3dadd( 514.715, 474.926, 30.9949, 0.4592 ) }
    dend_27 { pt3dadd( 515.663, 474.317, 31.024, 0.4446 ) }
    dend_27 { pt3dadd( 516.778, 474.15, 31.0654, 0.5116 ) }
    dend_27 { pt3dadd( 517.885, 473.917, 31.1206, 0.6362 ) }
    dend_27 { pt3dadd( 518.987, 473.679, 31.1889, 0.6366 ) }
    dend_27 { pt3dadd( 520.13, 473.679, 31.269, 0.615 ) }
    dend_27 { pt3dadd( 520.227, 473.221, 31.5196, 0.6796 ) }
    dend_27 { pt3dadd( 521.37, 473.221, 31.7237, 0.5226 ) }
    dend_27 { pt3dadd( 522.515, 473.221, 31.8847, 0.4294 ) }
    dend_27 { pt3dadd( 523.596, 472.871, 32.0068, 0.4404 ) }
    dend_27 { pt3dadd( 524.711, 472.621, 32.095, 0.4834 ) }
    dend_27 { pt3dadd( 525.846, 472.535, 32.1574, 0.4548 ) }
    dend_27 { pt3dadd( 526.987, 472.497, 32.2028, 0.4702 ) }
    dend_27 { pt3dadd( 528.115, 472.306, 32.2636, 0.6248 ) }
    dend_27 { pt3dadd( 528.616, 472.223, 32.3397, 0.7548 ) }
    dend_27 { pt3dadd( 529.747, 472.075, 32.431, 0.6134 ) }
    dend_27 { pt3dadd( 530.791, 471.867, 32.681, 0.6054 ) }
    dend_27 { pt3dadd( 531.617, 471.359, 32.926, 0.5016 ) }
    dend_27 { pt3dadd( 532.192, 470.556, 33.124, 0.5126 ) }
    dend_27 { pt3dadd( 533.218, 470.07, 33.2808, 0.6876 ) }
    dend_27 { pt3dadd( 533.588, 469.612, 33.4012, 0.7198 ) }
    dend_27 { pt3dadd( 534.711, 469.462, 33.4877, 0.5962 ) }
    dend_27 { pt3dadd( 535.836, 469.383, 33.5737, 0.5716 ) }
    dend_27 { pt3dadd( 536.966, 469.383, 33.6902, 0.6782 ) }
    dend_27 { pt3dadd( 537.932, 469.048, 33.8537, 0.592 ) }
    dend_27 { pt3dadd( 539.072, 468.979, 33.9559, 0.439 ) }
    dend_27 { pt3dadd( 540.078, 468.56, 33.9791, 0.3484 ) }
    dend_27 { pt3dadd( 541.003, 467.912, 33.9343, 0.3898 ) }
    dend_27 { pt3dadd( 541.898, 467.405, 33.7739, 0.3654 ) }
    dend_27 { pt3dadd( 542.961, 467.069, 33.5692, 0.3532 ) }
    dend_27 { pt3dadd( 544.086, 466.866, 33.3869, 0.3988 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 91/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 492.532, 454.841, 27.7281, 0.492 ) }
    dend_15 { pt3dadd( 493.117, 454.418, 30.154, 0.6864 ) }
    dend_15 { pt3dadd( 494.126, 454.39, 30.0843, 0.795 ) }
    dend_15 { pt3dadd( 495.23, 454.682, 30.0513, 0.776 ) }
    dend_15 { pt3dadd( 496.296, 454.971, 29.888, 0.7102 ) }
    dend_15 { pt3dadd( 497.359, 455.081, 29.5859, 0.736 ) }
    dend_15 { pt3dadd( 498.479, 455.116, 29.2788, 0.7512 ) }
    dend_15 { pt3dadd( 499.587, 455.304, 29.08, 0.7096 ) }
    dend_15 { pt3dadd( 500.628, 455.709, 28.8887, 0.742 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_15 { pt3dadd( 501.695, 456.089, 28.7213, 0.7264 ) }
    dend_15 { pt3dadd( 502.779, 456.454, 28.611, 0.8388 ) }
    dend_15 { pt3dadd( 503.819, 456.888, 28.5004, 0.8188 ) }
    dend_15 { pt3dadd( 504.783, 457.476, 28.387, 0.7446 ) }
    dend_15 { pt3dadd( 505.746, 458.007, 28.4043, 0.7898 ) }
    dend_15 { pt3dadd( 506.786, 458.429, 28.516, 0.6702 ) }
    dend_15 { pt3dadd( 507.741, 458.98, 28.714, 0.7506 ) }
    dend_15 { pt3dadd( 508.733, 459.521, 28.9022, 0.805 ) }
    dend_15 { pt3dadd( 509.85, 459.659, 29.0142, 0.9102 ) }
    dend_15 { pt3dadd( 510.984, 459.698, 28.9946, 0.8542 ) }
    dend_15 { pt3dadd( 512.08, 459.914, 28.8204, 0.8244 ) }
    dend_15 { pt3dadd( 513.124, 460.355, 28.6224, 0.637 ) }
    dend_15 { pt3dadd( 514.185, 460.778, 28.434, 0.4744 ) }
    dend_15 { pt3dadd( 515.117, 460.685, 28.0473, 0.4214 ) }
    dend_15 { pt3dadd( 515.948, 461.363, 27.6718, 0.4874 ) }
    dend_15 { pt3dadd( 516.921, 461.963, 27.3958, 0.7294 ) }
    dend_15 { pt3dadd( 518.0, 462.34, 27.2054, 0.8246 ) }
    dend_15 { pt3dadd( 519.033, 462.832, 27.0796, 0.6594 ) }
    dend_15 { pt3dadd( 520.155, 462.923, 27.0133, 0.6382 ) }
    dend_15 { pt3dadd( 521.299, 462.923, 27.0029, 0.5878 ) }
    dend_15 { pt3dadd( 522.443, 462.923, 27.008, 0.5472 ) }
    dend_15 { pt3dadd( 523.586, 462.923, 27.0155, 0.674 ) }
    dend_15 { pt3dadd( 524.731, 462.923, 27.0262, 0.6162 ) }
    dend_15 { pt3dadd( 525.875, 462.923, 27.0407, 0.5562 ) }
    dend_15 { pt3dadd( 527.018, 462.923, 27.0614, 0.446 ) }
    dend_15 { pt3dadd( 528.163, 462.923, 27.0906, 0.4642 ) }
    dend_15 { pt3dadd( 529.307, 462.923, 27.1303, 0.5608 ) }
    dend_15 { pt3dadd( 530.45, 462.928, 27.1855, 0.8934 ) }
    dend_15 { pt3dadd( 531.572, 463.152, 27.2656, 0.9948 ) }
    dend_15 { pt3dadd( 531.75, 463.396, 27.3767, 0.9378 ) }
    dend_15 { pt3dadd( 532.422, 464.313, 27.5436, 0.8786 ) }
    dend_15 { pt3dadd( 533.416, 464.785, 27.7085, 0.771 ) }
    dend_15 { pt3dadd( 534.031, 464.436, 28.0193, 0.5592 ) }
    dend_15 { pt3dadd( 535.163, 464.35, 28.56, 0.6864 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 34/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 492.532, 454.841, 27.7281, 0.492 ) }
    dend_14 { pt3dadd( 492.479, 455.286, 27.2401, 0.4954 ) }
    dend_14 { pt3dadd( 492.525, 456.236, 26.7355, 0.4232 ) }
    dend_14 { pt3dadd( 492.85, 457.332, 26.3752, 0.4434 ) }
    dend_14 { pt3dadd( 493.384, 458.345, 26.1167, 0.4198 ) }
    dend_14 { pt3dadd( 494.224, 459.079, 25.937, 0.4436 ) }
    dend_14 { pt3dadd( 495.135, 459.576, 25.823, 0.6174 ) }
    dend_14 { pt3dadd( 495.93, 460.213, 25.7695, 0.54 ) }
    dend_14 { pt3dadd( 497.015, 460.553, 25.7328, 0.5032 ) }
    dend_14 { pt3dadd( 498.074, 460.986, 25.6785, 0.6044 ) }
    dend_14 { pt3dadd( 499.144, 461.371, 25.6021, 0.6556 ) }
    dend_14 { pt3dadd( 500.268, 461.573, 25.4976, 0.729 ) }
    dend_14 { pt3dadd( 501.328, 461.995, 25.3627, 0.7382 ) }
    dend_14 { pt3dadd( 501.825, 462.923, 25.2008, 0.686 ) }
    dend_14 { pt3dadd( 502.034, 463.935, 24.7775, 0.695 ) }
    dend_14 { pt3dadd( 502.492, 464.902, 24.4177, 0.656 ) }
    dend_14 { pt3dadd( 502.964, 464.628, 23.9702, 0.6274 ) }
    dend_14 { pt3dadd( 503.971, 464.297, 23.592, 0.8198 ) }
    dend_14 { pt3dadd( 504.726, 464.866, 23.4161, 0.8982 ) }
    dend_14 { pt3dadd( 505.286, 465.767, 23.3733, 1.0216 ) }
    dend_14 { pt3dadd( 506.112, 466.441, 23.2187, 0.902 ) }
    dend_14 { pt3dadd( 506.752, 467.009, 22.857, 0.769 ) }
    dend_14 { pt3dadd( 506.312, 467.906, 22.2956, 0.7756 ) }
    dend_14 { pt3dadd( 506.546, 468.698, 21.7403, 0.705 ) }
    dend_14 { pt3dadd( 507.665, 468.862, 21.1588, 0.5184 ) }
    dend_14 { pt3dadd( 508.012, 469.102, 20.3834, 0.4418 ) }
    dend_14 { pt3dadd( 508.919, 469.102, 19.6507, 0.3672 ) }
    dend_14 { pt3dadd( 508.701, 469.972, 19.117, 0.3566 ) }
    dend_14 { pt3dadd( 508.69, 471.114, 18.7337, 0.405 ) }
    dend_14 { pt3dadd( 508.69, 472.258, 18.4495, 0.3936 ) }
    dend_14 { pt3dadd( 508.831, 473.371, 18.2451, 0.4058 ) }
    dend_14 { pt3dadd( 509.756, 474.014, 18.0939, 0.4932 ) }
    dend_14 { pt3dadd( 510.596, 474.746, 17.9332, 0.572 ) }
    dend_14 { pt3dadd( 511.337, 475.287, 17.5706, 0.6654 ) }
    dend_14 { pt3dadd( 512.434, 475.509, 17.2155, 0.6342 ) }
    dend_14 { pt3dadd( 513.543, 475.7, 16.8571, 0.6544 ) }
    dend_14 { pt3dadd( 514.458, 475.896, 16.4153, 0.5414 ) }
    dend_14 { pt3dadd( 515.307, 475.738, 15.8225, 0.6048 ) }
    dend_14 { pt3dadd( 515.529, 474.746, 15.2354, 0.54 ) }
    dend_14 { pt3dadd( 515.555, 474.268, 14.5824, 0.6202 ) }
    dend_14 { pt3dadd( 515.555, 473.284, 13.8328, 0.7106 ) }
    dend_14 { pt3dadd( 515.555, 472.142, 13.2244, 0.9338 ) }
    dend_14 { pt3dadd( 516.214, 471.393, 12.7498, 1.0786 ) }
    dend_14 { pt3dadd( 517.326, 471.39, 12.3057, 1.049 ) }
    dend_14 { pt3dadd( 518.369, 471.39, 11.8476, 0.8396 ) }
    dend_14 { pt3dadd( 519.325, 471.561, 11.3607, 0.9742 ) }
    dend_14 { pt3dadd( 519.984, 472.425, 10.9917, 0.9738 ) }
    dend_14 { pt3dadd( 520.551, 473.416, 10.6982, 1.0422 ) }
    dend_14 { pt3dadd( 521.422, 474.134, 10.4731, 1.0618 ) }
    dend_14 { pt3dadd( 522.179, 474.894, 10.1912, 0.9322 ) }
    dend_14 { pt3dadd( 523.041, 475.607, 9.9554, 0.8106 ) }
    dend_14 { pt3dadd( 523.955, 476.293, 9.7933, 0.6948 ) }
    dend_14 { pt3dadd( 524.617, 477.204, 9.6757, 0.6356 ) }
    dend_14 { pt3dadd( 525.395, 478.026, 9.5586, 0.9152 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 88/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 473.48, 450.551, 22.7018, 0.7424 ) }
    dend_11 { pt3dadd( 473.815, 450.529, 22.5014, 0.681 ) }
    dend_11 { pt3dadd( 474.957, 450.455, 22.3482, 0.5212 ) }
    dend_11 { pt3dadd( 476.099, 450.38, 22.2379, 0.4466 ) }
    dend_11 { pt3dadd( 476.971, 450.803, 22.1035, 0.3756 ) }
    dend_11 { pt3dadd( 477.571, 451.727, 21.8856, 0.3766 ) }
    dend_11 { pt3dadd( 478.031, 452.697, 21.7199, 0.4206 ) }
    dend_11 { pt3dadd( 479.01, 453.22, 21.6023, 0.5258 ) }
    dend_11 { pt3dadd( 479.691, 454.135, 21.5286, 0.834 ) }
    dend_11 { pt3dadd( 480.271, 455.106, 21.5186, 0.857 ) }
    dend_11 { pt3dadd( 480.812, 456.072, 21.5841, 0.8164 ) }
    dend_11 { pt3dadd( 481.403, 457.006, 21.6336, 0.6882 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( 481.521, 458.134, 21.6406, 0.7066 ) }
    dend_11 { pt3dadd( 482.042, 459.088, 21.6034, 0.6422 ) }
    dend_11 { pt3dadd( 482.605, 460.022, 21.5247, 0.772 ) }
    dend_11 { pt3dadd( 483.561, 460.537, 21.432, 0.9472 ) }
    dend_11 { pt3dadd( 483.872, 461.164, 21.1327, 0.903 ) }
    dend_11 { pt3dadd( 483.811, 462.082, 20.697, 0.7824 ) }
    dend_11 { pt3dadd( 484.022, 463.185, 20.386, 0.7468 ) }
    dend_11 { pt3dadd( 484.532, 464.176, 20.2087, 0.9122 ) }
    dend_11 { pt3dadd( 485.232, 465.053, 20.0463, 1.0106 ) }
    dend_11 { pt3dadd( 485.831, 465.987, 19.8554, 1.0604 ) }
    dend_11 { pt3dadd( 486.402, 466.966, 19.7106, 0.8814 ) }
    dend_11 { pt3dadd( 487.144, 467.834, 19.6034, 0.723 ) }
    dend_11 { pt3dadd( 487.977, 468.614, 19.4916, 0.5 ) }
    dend_11 { pt3dadd( 488.973, 468.931, 19.3309, 0.4308 ) }
    dend_11 { pt3dadd( 489.973, 469.287, 19.1951, 0.4614 ) }
    dend_11 { pt3dadd( 490.452, 470.24, 19.124, 0.663 ) }
    dend_11 { pt3dadd( 490.603, 471.314, 19.1778, 0.7916 ) }
    dend_11 { pt3dadd( 491.307, 472.184, 19.2203, 0.8462 ) }
    dend_11 { pt3dadd( 492.331, 472.592, 19.2262, 0.9266 ) }
    dend_11 { pt3dadd( 493.44, 472.826, 19.1822, 0.7156 ) }
    dend_11 { pt3dadd( 494.368, 473.486, 19.0705, 0.7016 ) }
    dend_11 { pt3dadd( 495.441, 473.883, 18.8824, 0.6762 ) }
    dend_11 { pt3dadd( 495.786, 474.005, 18.5584, 0.6234 ) }
    dend_11 { pt3dadd( 496.756, 474.353, 18.0278, 0.5544 ) }
    dend_11 { pt3dadd( 497.782, 474.517, 17.3628, 0.5166 ) }
    dend_11 { pt3dadd( 498.605, 474.767, 16.749, 0.4642 ) }
    dend_11 { pt3dadd( 499.443, 475.381, 16.0748, 0.511 ) }
    dend_11 { pt3dadd( 500.398, 475.806, 15.4123, 0.5874 ) }
    dend_11 { pt3dadd( 501.484, 476.08, 14.8837, 0.5472 ) }
    dend_11 { pt3dadd( 502.557, 476.424, 14.5438, 0.4406 ) }
    dend_11 { pt3dadd( 503.609, 476.745, 14.3469, 0.4006 ) }
    dend_11 { pt3dadd( 504.281, 477.665, 14.2506, 0.4762 ) }
    dend_11 { pt3dadd( 505.003, 478.547, 14.2397, 0.5762 ) }
    dend_11 { pt3dadd( 506.021, 479.014, 14.3508, 0.497 ) }
    dend_11 { pt3dadd( 507.044, 479.516, 14.45, 0.4908 ) }
    dend_11 { pt3dadd( 507.772, 480.392, 14.5267, 0.4826 ) }
    dend_11 { pt3dadd( 508.779, 480.933, 14.5827, 0.4532 ) }
    dend_11 { pt3dadd( 509.771, 481.503, 14.6205, 0.4658 ) }
    dend_11 { pt3dadd( 510.665, 482.217, 14.6423, 0.6232 ) }
    dend_11 { pt3dadd( 511.601, 482.874, 14.651, 0.7208 ) }
    dend_11 { pt3dadd( 512.65, 483.331, 14.6639, 0.702 ) }
    dend_11 { pt3dadd( 513.49, 484.101, 14.6826, 0.7194 ) }
    dend_11 { pt3dadd( 514.357, 484.847, 14.7095, 0.7264 ) }
    dend_11 { pt3dadd( 515.406, 485.29, 14.744, 0.6344 ) }
    dend_11 { pt3dadd( 516.292, 485.96, 14.7734, 0.7456 ) }
    dend_11 { pt3dadd( 516.737, 486.974, 14.8683, 0.7284 ) }
    dend_11 { pt3dadd( 517.58, 487.489, 14.9976, 0.6358 ) }
    dend_11 { pt3dadd( 518.706, 487.617, 15.1267, 0.5302 ) }
    dend_11 { pt3dadd( 519.849, 487.662, 15.1914, 0.471 ) }
    dend_11 { pt3dadd( 520.682, 487.361, 15.1161, 0.383 ) }
    dend_11 { pt3dadd( 521.284, 486.496, 15.0142, 0.3446 ) }
    dend_11 { pt3dadd( 521.719, 485.575, 14.7834, 0.3532 ) }
    dend_11 { pt3dadd( 522.526, 484.82, 14.5267, 0.4404 ) }
    dend_11 { pt3dadd( 523.273, 483.961, 14.3273, 0.485 ) }
    dend_11 { pt3dadd( 524.174, 483.316, 14.1901, 0.4506 ) }
    dend_11 { pt3dadd( 525.268, 483.03, 14.1092, 0.4978 ) }
    dend_11 { pt3dadd( 526.25, 482.467, 14.0652, 0.5014 ) }
    dend_11 { pt3dadd( 527.234, 481.918, 14.0535, 0.6886 ) }
    dend_11 { pt3dadd( 528.34, 481.688, 14.0521, 0.6148 ) }
    dend_11 { pt3dadd( 529.484, 481.688, 14.0504, 0.694 ) }
    dend_11 { pt3dadd( 530.628, 481.688, 14.0476, 0.7048 ) }
    dend_11 { pt3dadd( 531.771, 481.688, 14.044, 0.7008 ) }
    dend_11 { pt3dadd( 532.872, 481.451, 14.0389, 0.5784 ) }
    dend_11 { pt3dadd( 533.929, 481.013, 14.0319, 0.4528 ) }
    dend_11 { pt3dadd( 534.888, 480.408, 14.0218, 0.4156 ) }
    dend_11 { pt3dadd( 535.857, 479.803, 14.007, 0.5404 ) }
    dend_11 { pt3dadd( 536.903, 479.35, 13.9871, 0.5174 ) }
    dend_11 { pt3dadd( 538.02, 479.185, 13.9625, 0.5656 ) }
    dend_11 { pt3dadd( 539.161, 479.155, 13.9336, 0.672 ) }
    dend_11 { pt3dadd( 540.219, 478.749, 13.8538, 0.5568 ) }
    dend_11 { pt3dadd( 541.224, 478.234, 13.7659, 0.4874 ) }
    dend_11 { pt3dadd( 542.328, 478.026, 13.7052, 0.5756 ) }
    dend_11 { pt3dadd( 543.471, 478.026, 13.6682, 0.6 ) }
    dend_11 { pt3dadd( 544.742, 478.142, 13.7102, 0.6354 ) }
    dend_11 { pt3dadd( 545.836, 478.429, 13.7654, 0.5184 ) }
    dend_11 { pt3dadd( 546.809, 479.024, 13.8048, 0.5018 ) }
    dend_11 { pt3dadd( 547.728, 479.695, 13.818, 0.644 ) }
    dend_11 { pt3dadd( 548.327, 480.622, 13.7721, 0.7538 ) }
    dend_11 { pt3dadd( 549.026, 481.503, 13.6584, 0.7886 ) }
    dend_11 { pt3dadd( 549.648, 482.461, 13.5503, 0.757 ) }
    dend_11 { pt3dadd( 550.198, 483.433, 13.4478, 0.7096 ) }
    dend_11 { pt3dadd( 550.82, 484.366, 13.3078, 0.566 ) }
    dend_11 { pt3dadd( 551.53, 485.262, 13.2182, 0.5688 ) }
    dend_11 { pt3dadd( 552.142, 486.214, 13.1482, 0.6432 ) }
    dend_11 { pt3dadd( 552.714, 486.979, 13.3185, 0.9152 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 85/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 473.48, 450.551, 22.7018, 0.7424 ) }
    dend_10 { pt3dadd( 473.504, 450.607, 20.7648, 0.4576 ) }
    dend_10 { pt3dadd( 473.113, 451.4, 20.0278, 0.5404 ) }
    dend_10 { pt3dadd( 473.378, 452.347, 19.6529, 0.563 ) }
    dend_10 { pt3dadd( 473.142, 453.374, 19.334, 0.4296 ) }
    dend_10 { pt3dadd( 473.329, 454.377, 19.0736, 0.346 ) }
    dend_10 { pt3dadd( 474.285, 454.962, 18.8667, 0.3126 ) }
    dend_10 { pt3dadd( 475.079, 455.758, 18.648, 0.3454 ) }
    dend_10 { pt3dadd( 474.476, 456.639, 18.4363, 0.4026 ) }
    dend_10 { pt3dadd( 473.885, 457.404, 18.0634, 0.5286 ) }
    dend_10 { pt3dadd( 474.18, 458.458, 17.7173, 0.6662 ) }
    dend_10 { pt3dadd( 475.161, 458.862, 17.3818, 0.6982 ) }
    dend_10 { pt3dadd( 475.933, 459.427, 16.9456, 0.6972 ) }
    dend_10 { pt3dadd( 476.279, 460.504, 16.5875, 0.9904 ) }
    dend_10 { pt3dadd( 476.473, 461.619, 16.3033, 1.0154 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_10 { pt3dadd( 477.191, 462.499, 16.0703, 0.8338 ) }
    dend_10 { pt3dadd( 477.565, 463.384, 15.6789, 0.917 ) }
    dend_10 { pt3dadd( 478.164, 464.279, 15.3014, 0.863 ) }
    dend_10 { pt3dadd( 478.576, 465.322, 15.0296, 0.8586 ) }
    dend_10 { pt3dadd( 478.712, 466.45, 14.8319, 0.6158 ) }
    dend_10 { pt3dadd( 478.767, 467.589, 14.702, 0.6186 ) }
    dend_10 { pt3dadd( 479.484, 468.409, 14.6339, 0.483 ) }
    dend_10 { pt3dadd( 480.085, 469.331, 14.6191, 0.6864 ) }
    // Section: dend_8, id: dend_8, parent: dend_3 (entry count 8/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 464.618, 445.34, 29.2412, 0.8236 ) }
    dend_8 { pt3dadd( 464.359, 444.994, 27.6377, 0.4576 ) }
    dend_8 { pt3dadd( 465.17, 444.978, 28.4477, 0.3606 ) }
    dend_8 { pt3dadd( 466.236, 445.161, 28.8075, 0.3022 ) }
    dend_8 { pt3dadd( 467.349, 445.429, 29.1284, 0.2786 ) }
    dend_8 { pt3dadd( 468.461, 445.697, 29.4078, 0.2826 ) }
    dend_8 { pt3dadd( 469.573, 445.956, 29.6531, 0.288 ) }
    dend_8 { pt3dadd( 470.681, 446.137, 29.932, 0.305 ) }
    dend_8 { pt3dadd( 471.788, 446.317, 30.2201, 0.305 ) }
    dend_8 { pt3dadd( 472.895, 446.497, 30.9252, 0.4576 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 18/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 464.618, 445.34, 29.2412, 0.8236 ) }
    dend_4 { pt3dadd( 463.75, 444.475, 28.6462, 0.7276 ) }
    dend_4 { pt3dadd( 462.793, 443.926, 28.1655, 0.6542 ) }
    dend_4 { pt3dadd( 461.979, 444.239, 27.6363, 0.467 ) }
    dend_4 { pt3dadd( 460.959, 444.532, 27.2194, 0.3674 ) }
    dend_4 { pt3dadd( 459.975, 444.557, 27.148, 0.3546 ) }
    dend_4 { pt3dadd( 458.922, 444.547, 27.267, 0.413 ) }
    dend_4 { pt3dadd( 457.93, 444.441, 27.1572, 0.579 ) }
    dend_4 { pt3dadd( 457.182, 443.715, 26.9027, 0.6074 ) }
    // Section: apic_27, id: apic_27, parent: apic_3 (entry count 27/100)
    apic_27 { pt3dclear() }
    apic_27 { pt3dadd( 472.477, 444.435, 41.8037, 0.9436 ) }
    apic_27 { pt3dadd( 472.669, 444.505, 43.2793, 0.6864 ) }
    apic_27 { pt3dadd( 473.71, 444.571, 43.47, 0.4444 ) }
    apic_27 { pt3dadd( 474.852, 444.638, 43.5361, 0.326 ) }
    apic_27 { pt3dadd( 475.993, 444.716, 43.5778, 0.2754 ) }
    apic_27 { pt3dadd( 477.134, 444.794, 43.5971, 0.2764 ) }
    apic_27 { pt3dadd( 478.273, 444.843, 43.5977, 0.278 ) }
    apic_27 { pt3dadd( 479.413, 444.727, 43.5887, 0.281 ) }
    apic_27 { pt3dadd( 480.551, 444.61, 43.5711, 0.2864 ) }
    apic_27 { pt3dadd( 481.64, 444.455, 43.5355, 0.2966 ) }
    apic_27 { pt3dadd( 482.677, 444.18, 43.4778, 0.316 ) }
    apic_27 { pt3dadd( 483.769, 443.863, 43.4406, 0.3474 ) }
    apic_27 { pt3dadd( 484.884, 443.702, 43.423, 0.4294 ) }
    apic_27 { pt3dadd( 486.028, 443.702, 43.423, 0.4644 ) }
    apic_27 { pt3dadd( 487.172, 443.702, 43.4392, 0.4126 ) }
    apic_27 { pt3dadd( 488.298, 443.575, 43.514, 0.4254 ) }
    apic_27 { pt3dadd( 489.42, 443.551, 43.6173, 0.3778 ) }
    apic_27 { pt3dadd( 490.536, 443.793, 43.6946, 0.4068 ) }
    apic_27 { pt3dadd( 491.612, 444.179, 43.7466, 0.3486 ) }
    apic_27 { pt3dadd( 492.725, 444.442, 43.773, 0.3272 ) }
    apic_27 { pt3dadd( 493.729, 444.984, 43.7744, 0.327 ) }
    apic_27 { pt3dadd( 494.833, 445.26, 43.7528, 0.3612 ) }
    apic_27 { pt3dadd( 495.858, 445.739, 43.7189, 0.4862 ) }
    apic_27 { pt3dadd( 496.933, 445.99, 43.65, 0.4198 ) }
    apic_27 { pt3dadd( 498.066, 445.99, 43.5383, 0.3698 ) }
    apic_27 { pt3dadd( 499.211, 445.99, 43.4507, 0.3824 ) }
    apic_27 { pt3dadd( 500.35, 445.904, 43.3863, 0.3506 ) }
    apic_27 { pt3dadd( 501.482, 445.761, 43.344, 0.3302 ) }
    apic_27 { pt3dadd( 502.626, 445.761, 43.3224, 0.3326 ) }
    apic_27 { pt3dadd( 503.77, 445.761, 43.3194, 0.3718 ) }
    apic_27 { pt3dadd( 504.914, 445.761, 43.3289, 0.507 ) }
    apic_27 { pt3dadd( 506.058, 445.761, 43.3426, 0.4518 ) }
    apic_27 { pt3dadd( 507.202, 445.761, 43.3622, 0.461 ) }
    apic_27 { pt3dadd( 508.346, 445.761, 43.3877, 0.3966 ) }
    apic_27 { pt3dadd( 509.49, 445.761, 43.4185, 0.4428 ) }
    apic_27 { pt3dadd( 510.629, 445.802, 43.475, 0.4098 ) }
    apic_27 { pt3dadd( 511.764, 445.883, 43.5697, 0.467 ) }
    apic_27 { pt3dadd( 512.872, 446.125, 43.6612, 0.4566 ) }
    apic_27 { pt3dadd( 513.968, 446.452, 43.7279, 0.5448 ) }
    apic_27 { pt3dadd( 515.049, 446.817, 43.7696, 0.645 ) }
    apic_27 { pt3dadd( 516.128, 447.135, 43.7861, 0.6804 ) }
    apic_27 { pt3dadd( 517.271, 447.135, 43.7811, 0.5598 ) }
    apic_27 { pt3dadd( 518.406, 447.282, 43.762, 0.555 ) }
    apic_27 { pt3dadd( 519.469, 447.635, 43.7256, 0.6292 ) }
    apic_27 { pt3dadd( 520.581, 447.82, 43.6346, 0.5908 ) }
    apic_27 { pt3dadd( 521.698, 448.029, 43.5308, 0.6866 ) }
    apic_27 { pt3dadd( 522.742, 447.99, 43.5425, 0.739 ) }
    apic_27 { pt3dadd( 523.799, 448.307, 43.5817, 0.7604 ) }
    apic_27 { pt3dadd( 524.87, 448.678, 43.647, 0.7098 ) }
    apic_27 { pt3dadd( 525.906, 448.942, 43.8544, 0.5954 ) }
    apic_27 { pt3dadd( 527.042, 449.02, 44.0392, 0.4826 ) }
    apic_27 { pt3dadd( 528.164, 449.156, 44.1916, 0.4796 ) }
    apic_27 { pt3dadd( 529.271, 449.335, 44.3061, 0.6152 ) }
    apic_27 { pt3dadd( 530.32, 449.72, 44.4374, 0.8688 ) }
    apic_27 { pt3dadd( 531.403, 450.059, 44.5351, 0.872 ) }
    apic_27 { pt3dadd( 532.318, 450.719, 44.6393, 0.627 ) }
    apic_27 { pt3dadd( 533.122, 451.485, 44.7188, 0.4764 ) }
    apic_27 { pt3dadd( 534.148, 451.854, 44.8045, 0.5528 ) }
    apic_27 { pt3dadd( 535.281, 451.923, 44.8644, 0.57 ) }
    apic_27 { pt3dadd( 536.38, 452.23, 44.886, 0.5192 ) }
    apic_27 { pt3dadd( 537.432, 452.672, 44.8776, 0.5972 ) }
    apic_27 { pt3dadd( 538.497, 453.052, 44.8003, 0.5928 ) }
    apic_27 { pt3dadd( 539.297, 453.803, 44.714, 0.6222 ) }
    apic_27 { pt3dadd( 540.288, 454.279, 44.6222, 0.4942 ) }
    apic_27 { pt3dadd( 541.047, 454.995, 44.4528, 0.4548 ) }
    apic_27 { pt3dadd( 541.989, 455.613, 44.3159, 0.5676 ) }
    apic_27 { pt3dadd( 542.883, 456.311, 44.17, 0.5592 ) }
    apic_27 { pt3dadd( 543.629, 457.142, 43.96, 0.6864 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 95/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 472.477, 444.435, 41.8037, 0.9436 ) }
    apic_4 { pt3dadd( 473.257, 443.672, 41.9723, 0.91 ) }
    apic_4 { pt3dadd( 473.506, 442.563, 42.105, 0.9568 ) }
    apic_4 { pt3dadd( 473.592, 441.431, 42.2433, 0.9722 ) }
    apic_4 { pt3dadd( 474.102, 440.453, 42.4385, 0.891 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 0/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 544.086, 466.866, 33.3869, 0.3988 ) }
    dend_29 { pt3dadd( 544.417, 467.775, 33.32, 0.6864 ) }
    dend_29 { pt3dadd( 545.268, 468.533, 33.3455, 0.6908 ) }
    dend_29 { pt3dadd( 546.242, 469.118, 33.3558, 0.7004 ) }
    dend_29 { pt3dadd( 547.223, 469.628, 33.3707, 0.6842 ) }
    dend_29 { pt3dadd( 548.201, 470.205, 33.3889, 0.5904 ) }
    dend_29 { pt3dadd( 549.252, 470.651, 33.4093, 0.4972 ) }
    dend_29 { pt3dadd( 550.327, 470.765, 33.4687, 0.3898 ) }
    dend_29 { pt3dadd( 551.37, 471.069, 33.5194, 0.3304 ) }
    dend_29 { pt3dadd( 552.323, 471.671, 33.6, 0.4576 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 10/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 544.086, 466.866, 33.3869, 0.3988 ) }
    dend_28 { pt3dadd( 544.922, 466.752, 33.2394, 0.3816 ) }
    dend_28 { pt3dadd( 545.867, 466.466, 33.0439, 0.3842 ) }
    dend_28 { pt3dadd( 547.0, 466.409, 32.9039, 0.4516 ) }
    dend_28 { pt3dadd( 548.145, 466.409, 32.8135, 0.5004 ) }
    dend_28 { pt3dadd( 549.253, 466.376, 32.7219, 0.5052 ) }
    dend_28 { pt3dadd( 550.018, 467.033, 32.627, 0.472 ) }
    dend_28 { pt3dadd( 550.721, 467.896, 32.5954, 0.385 ) }
    dend_28 { pt3dadd( 551.484, 466.83, 32.6586, 0.3476 ) }
    dend_28 { pt3dadd( 551.663, 465.741, 32.7421, 0.3644 ) }
    dend_28 { pt3dadd( 552.531, 465.198, 32.8406, 0.4322 ) }
    dend_28 { pt3dadd( 553.213, 465.623, 33.11, 0.6102 ) }
    dend_28 { pt3dadd( 554.255, 466.078, 33.6, 0.6864 ) }
    // Section: dend_7, id: dend_7, parent: dend_4 (entry count 23/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 457.182, 443.715, 26.9027, 0.6074 ) }
    dend_7 { pt3dadd( 457.493, 443.992, 26.9948, 0.4576 ) }
    dend_7 { pt3dadd( 456.489, 443.285, 25.893, 0.6848 ) }
    dend_7 { pt3dadd( 455.564, 443.079, 25.3316, 0.7096 ) }
    dend_7 { pt3dadd( 454.449, 443.253, 24.8665, 0.602 ) }
    dend_7 { pt3dadd( 453.323, 443.453, 24.5081, 0.6894 ) }
    dend_7 { pt3dadd( 452.22, 443.753, 24.2452, 0.604 ) }
    dend_7 { pt3dadd( 451.202, 444.219, 24.0643, 0.5036 ) }
    dend_7 { pt3dadd( 450.427, 445.042, 23.9473, 0.4932 ) }
    dend_7 { pt3dadd( 449.488, 444.39, 23.8498, 0.536 ) }
    dend_7 { pt3dadd( 448.694, 443.996, 23.725, 0.5434 ) }
    dend_7 { pt3dadd( 447.775, 444.676, 23.5634, 0.678 ) }
    dend_7 { pt3dadd( 446.781, 445.057, 23.2954, 0.7982 ) }
    dend_7 { pt3dadd( 445.819, 444.958, 22.8362, 0.7326 ) }
    dend_7 { pt3dadd( 444.914, 444.526, 22.4168, 0.6402 ) }
    dend_7 { pt3dadd( 443.874, 444.991, 22.0254, 0.783 ) }
    dend_7 { pt3dadd( 443.021, 445.207, 21.4259, 0.8952 ) }
    dend_7 { pt3dadd( 442.151, 445.866, 20.9297, 0.7012 ) }
    dend_7 { pt3dadd( 441.267, 445.49, 20.5052, 0.462 ) }
    dend_7 { pt3dadd( 441.305, 444.378, 20.062, 0.3486 ) }
    dend_7 { pt3dadd( 441.341, 443.264, 19.5854, 0.367 ) }
    dend_7 { pt3dadd( 440.659, 442.888, 19.15, 0.4356 ) }
    dend_7 { pt3dadd( 439.809, 443.532, 18.783, 0.6222 ) }
    dend_7 { pt3dadd( 439.147, 444.461, 18.4257, 0.6818 ) }
    dend_7 { pt3dadd( 438.614, 445.415, 18.0135, 0.8086 ) }
    dend_7 { pt3dadd( 438.113, 446.263, 17.4297, 0.7356 ) }
    dend_7 { pt3dadd( 437.884, 446.969, 16.8412, 0.723 ) }
    dend_7 { pt3dadd( 438.755, 447.004, 16.0692, 0.791 ) }
    dend_7 { pt3dadd( 439.73, 447.105, 15.3009, 0.9322 ) }
    dend_7 { pt3dadd( 440.858, 447.301, 14.7333, 0.8898 ) }
    dend_7 { pt3dadd( 441.359, 448.17, 14.0568, 1.144 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 54/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 457.182, 443.715, 26.9027, 0.6074 ) }
    dend_6 { pt3dadd( 457.422, 443.342, 26.6179, 0.6444 ) }
    dend_6 { pt3dadd( 458.249, 442.68, 26.3222, 0.5588 ) }
    dend_6 { pt3dadd( 459.199, 442.092, 26.1649, 0.462 ) }
    dend_6 { pt3dadd( 459.822, 441.203, 26.1338, 0.44 ) }
    dend_6 { pt3dadd( 459.48, 440.26, 26.1828, 0.5498 ) }
    dend_6 { pt3dadd( 458.63, 439.505, 26.2604, 0.7092 ) }
    dend_6 { pt3dadd( 457.798, 438.724, 26.3374, 0.7608 ) }
    dend_6 { pt3dadd( 457.189, 437.776, 26.4261, 0.898 ) }
    dend_6 { pt3dadd( 456.688, 436.767, 26.5283, 0.9492 ) }
    dend_6 { pt3dadd( 456.21, 435.75, 26.5334, 0.8878 ) }
    dend_6 { pt3dadd( 455.669, 434.761, 26.4275, 0.8458 ) }
    dend_6 { pt3dadd( 454.914, 433.917, 26.2847, 0.648 ) }
    dend_6 { pt3dadd( 454.276, 432.975, 26.1237, 0.6356 ) }
    dend_6 { pt3dadd( 454.109, 431.869, 25.9426, 0.7208 ) }
    dend_6 { pt3dadd( 454.01, 430.733, 25.7278, 0.8126 ) }
    dend_6 { pt3dadd( 453.564, 429.756, 25.4128, 0.8452 ) }
    dend_6 { pt3dadd( 452.969, 428.865, 25.0155, 0.8894 ) }
    dend_6 { pt3dadd( 452.365, 427.904, 24.6812, 0.821 ) }
    dend_6 { pt3dadd( 451.937, 426.846, 24.4334, 0.7372 ) }
    dend_6 { pt3dadd( 451.368, 425.855, 24.2693, 0.6002 ) }
    dend_6 { pt3dadd( 450.545, 425.069, 24.1968, 0.4878 ) }
    dend_6 { pt3dadd( 450.158, 424.032, 24.2626, 0.5058 ) }
    dend_6 { pt3dadd( 449.915, 423.018, 24.1805, 0.5838 ) }
    dend_6 { pt3dadd( 449.595, 422.281, 24.1046, 0.5126 ) }
    dend_6 { pt3dadd( 449.045, 421.306, 24.0607, 0.5148 ) }
    dend_6 { pt3dadd( 448.562, 420.306, 24.0556, 0.5526 ) }
    dend_6 { pt3dadd( 448.217, 419.973, 24.285, 0.4576 ) }
    dend_6 { pt3dadd( 447.762, 418.933, 24.4801, 0.3982 ) }
    dend_6 { pt3dadd( 447.762, 417.943, 24.6546, 0.4072 ) }
    dend_6 { pt3dadd( 447.674, 416.807, 24.7808, 0.5304 ) }
    dend_6 { pt3dadd( 447.456, 415.696, 24.8573, 0.702 ) }
    dend_6 { pt3dadd( 447.219, 414.595, 24.887, 0.607 ) }
    dend_6 { pt3dadd( 447.172, 413.454, 24.8735, 0.607 ) }
    dend_6 { pt3dadd( 447.075, 412.318, 24.8545, 0.6684 ) }
    dend_6 { pt3dadd( 447.015, 411.178, 24.8282, 0.7128 ) }
    dend_6 { pt3dadd( 446.961, 410.036, 24.7943, 0.6738 ) }
    dend_6 { pt3dadd( 447.081, 408.922, 24.7531, 0.5032 ) }
    dend_6 { pt3dadd( 447.681, 407.984, 24.6568, 0.437 ) }
    dend_6 { pt3dadd( 448.4, 407.112, 24.5459, 0.4724 ) }
    dend_6 { pt3dadd( 449.02, 406.294, 24.4474, 0.6848 ) }
    dend_6 { pt3dadd( 449.02, 405.155, 24.3494, 0.8242 ) }
    dend_6 { pt3dadd( 449.02, 404.01, 24.2869, 0.9452 ) }
    dend_6 { pt3dadd( 449.196, 402.936, 24.2911, 0.921 ) }
    dend_6 { pt3dadd( 448.977, 401.837, 24.365, 0.9388 ) }
    dend_6 { pt3dadd( 448.799, 400.724, 24.3715, 0.8956 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_6 { pt3dadd( 448.573, 399.625, 24.3821, 0.7282 ) }
    dend_6 { pt3dadd( 447.932, 398.681, 24.4196, 0.612 ) }
    dend_6 { pt3dadd( 447.214, 397.797, 24.5087, 0.601 ) }
    dend_6 { pt3dadd( 446.734, 396.822, 24.6313, 0.5022 ) }
    dend_6 { pt3dadd( 446.56, 395.768, 24.7481, 0.4704 ) }
    dend_6 { pt3dadd( 445.876, 394.889, 24.9754, 0.5912 ) }
    dend_6 { pt3dadd( 445.134, 394.023, 25.2132, 0.6286 ) }
    dend_6 { pt3dadd( 444.331, 393.22, 25.4122, 0.69 ) }
    dend_6 { pt3dadd( 443.661, 392.368, 25.6346, 0.612 ) }
    dend_6 { pt3dadd( 443.144, 391.423, 25.9921, 0.715 ) }
    dend_6 { pt3dadd( 442.627, 390.478, 26.4429, 0.8458 ) }
    dend_6 { pt3dadd( 441.952, 389.574, 26.8335, 0.6938 ) }
    dend_6 { pt3dadd( 441.555, 388.505, 27.1449, 0.4974 ) }
    dend_6 { pt3dadd( 440.964, 387.644, 27.4694, 0.4042 ) }
    dend_6 { pt3dadd( 440.298, 386.751, 27.7662, 0.5186 ) }
    dend_6 { pt3dadd( 439.452, 385.981, 27.9415, 0.4808 ) }
    dend_6 { pt3dadd( 438.564, 385.279, 28.026, 0.4802 ) }
    dend_6 { pt3dadd( 437.491, 384.883, 28.0498, 0.597 ) }
    dend_6 { pt3dadd( 436.418, 384.486, 28.0227, 0.701 ) }
    dend_6 { pt3dadd( 435.471, 383.904, 27.8732, 0.524 ) }
    dend_6 { pt3dadd( 434.516, 383.315, 27.6472, 0.3902 ) }
    dend_6 { pt3dadd( 433.561, 382.69, 27.456, 0.342 ) }
    dend_6 { pt3dadd( 432.605, 382.06, 27.305, 0.4262 ) }
    dend_6 { pt3dadd( 431.621, 381.48, 27.188, 0.4274 ) }
    dend_6 { pt3dadd( 430.51, 381.219, 27.0978, 0.4956 ) }
    dend_6 { pt3dadd( 429.99, 380.212, 27.0276, 0.5282 ) }
    dend_6 { pt3dadd( 429.857, 379.077, 26.9587, 0.5876 ) }
    dend_6 { pt3dadd( 429.605, 378.081, 26.8604, 0.476 ) }
    dend_6 { pt3dadd( 428.63, 377.506, 26.6921, 0.4286 ) }
    dend_6 { pt3dadd( 427.656, 376.933, 26.4743, 0.481 ) }
    dend_6 { pt3dadd( 426.905, 376.121, 26.2618, 0.5836 ) }
    dend_6 { pt3dadd( 426.306, 375.146, 26.0795, 0.5178 ) }
    dend_6 { pt3dadd( 425.974, 374.081, 25.9182, 0.4958 ) }
    dend_6 { pt3dadd( 425.855, 372.943, 25.7698, 0.6566 ) }
    dend_6 { pt3dadd( 425.736, 371.805, 25.6276, 0.6622 ) }
    dend_6 { pt3dadd( 425.552, 370.772, 25.4514, 0.4912 ) }
    dend_6 { pt3dadd( 424.671, 370.157, 25.1342, 0.367 ) }
    dend_6 { pt3dadd( 423.79, 369.543, 24.722, 0.3464 ) }
    dend_6 { pt3dadd( 422.772, 369.081, 24.3678, 0.434 ) }
    dend_6 { pt3dadd( 421.701, 368.677, 24.1178, 0.443 ) }
    dend_6 { pt3dadd( 420.6, 368.385, 23.9579, 0.5184 ) }
    dend_6 { pt3dadd( 419.476, 368.172, 23.8759, 0.6012 ) }
    dend_6 { pt3dadd( 418.371, 367.904, 23.8599, 0.573 ) }
    dend_6 { pt3dadd( 417.346, 367.392, 23.882, 0.4906 ) }
    dend_6 { pt3dadd( 416.294, 366.952, 23.9173, 0.4814 ) }
    dend_6 { pt3dadd( 415.225, 366.54, 23.9604, 0.683 ) }
    dend_6 { pt3dadd( 414.195, 366.044, 24.012, 0.682 ) }
    dend_6 { pt3dadd( 413.237, 365.446, 24.0797, 0.6692 ) }
    dend_6 { pt3dadd( 412.697, 364.506, 24.2654, 0.699 ) }
    dend_6 { pt3dadd( 412.135, 363.521, 24.4331, 0.7226 ) }
    dend_6 { pt3dadd( 411.188, 362.897, 24.5409, 0.6916 ) }
    dend_6 { pt3dadd( 410.408, 362.083, 24.5921, 0.5384 ) }
    dend_6 { pt3dadd( 409.346, 361.743, 24.5916, 0.4926 ) }
    dend_6 { pt3dadd( 408.305, 361.426, 24.4331, 0.6212 ) }
    dend_6 { pt3dadd( 407.211, 361.201, 24.2262, 0.7402 ) }
    dend_6 { pt3dadd( 406.153, 360.834, 24.0607, 0.6242 ) }
    dend_6 { pt3dadd( 405.672, 359.904, 23.9397, 0.4406 ) }
    dend_6 { pt3dadd( 405.594, 358.766, 23.8602, 0.4068 ) }
    dend_6 { pt3dadd( 405.594, 357.622, 23.8092, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 59/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 457.182, 443.715, 26.9027, 0.6074 ) }
    dend_5 { pt3dadd( 456.311, 442.793, 25.8647, 0.6864 ) }
    dend_5 { pt3dadd( 455.64, 441.961, 25.8773, 0.5752 ) }
    dend_5 { pt3dadd( 455.116, 440.993, 25.8821, 0.439 ) }
    dend_5 { pt3dadd( 454.083, 440.739, 25.8899, 0.4264 ) }
    dend_5 { pt3dadd( 453.043, 440.718, 25.9011, 0.3846 ) }
    dend_5 { pt3dadd( 452.513, 439.708, 25.9134, 0.396 ) }
    dend_5 { pt3dadd( 451.864, 438.771, 25.9263, 0.4442 ) }
    dend_5 { pt3dadd( 451.401, 437.733, 25.9515, 0.6298 ) }
    dend_5 { pt3dadd( 450.864, 436.794, 26.0394, 0.7342 ) }
    dend_5 { pt3dadd( 450.159, 435.906, 26.0714, 0.7204 ) }
    dend_5 { pt3dadd( 449.387, 435.098, 26.0229, 0.7862 ) }
    dend_5 { pt3dadd( 448.533, 434.362, 26.0126, 0.6948 ) }
    dend_5 { pt3dadd( 447.716, 433.59, 26.1005, 0.6446 ) }
    dend_5 { pt3dadd( 447.099, 432.642, 26.2209, 0.6584 ) }
    dend_5 { pt3dadd( 446.549, 431.639, 26.3376, 0.6218 ) }
    dend_5 { pt3dadd( 445.934, 430.685, 26.4942, 0.629 ) }
    dend_5 { pt3dadd( 445.403, 429.702, 26.7117, 0.507 ) }
    dend_5 { pt3dadd( 445.013, 428.637, 26.8811, 0.4796 ) }
    dend_5 { pt3dadd( 444.647, 427.583, 26.9147, 0.608 ) }
    dend_5 { pt3dadd( 444.043, 426.634, 26.9371, 0.6616 ) }
    dend_5 { pt3dadd( 443.29, 425.802, 27.0259, 0.7406 ) }
    dend_5 { pt3dadd( 442.46, 425.025, 27.113, 0.7596 ) }
    dend_5 { pt3dadd( 441.471, 424.466, 27.1737, 0.7268 ) }
    dend_5 { pt3dadd( 440.653, 423.723, 27.1452, 0.7664 ) }
    dend_5 { pt3dadd( 439.954, 422.827, 27.1169, 0.8098 ) }
    dend_5 { pt3dadd( 439.322, 421.896, 27.1606, 0.809 ) }
    dend_5 { pt3dadd( 438.719, 420.932, 27.2364, 0.9714 ) }
    dend_5 { pt3dadd( 438.096, 420.017, 27.4016, 0.9342 ) }
    dend_5 { pt3dadd( 437.654, 419.155, 27.3619, 0.9074 ) }
    dend_5 { pt3dadd( 437.331, 418.712, 27.1561, 0.8802 ) }
    dend_5 { pt3dadd( 436.526, 418.036, 27.2051, 0.949 ) }
    dend_5 { pt3dadd( 435.7, 417.355, 27.4176, 0.9566 ) }
    dend_5 { pt3dadd( 434.819, 416.725, 27.7264, 0.8672 ) }
    dend_5 { pt3dadd( 433.908, 416.198, 28.1319, 0.7458 ) }
    dend_5 { pt3dadd( 433.146, 415.397, 28.474, 0.7626 ) }
    dend_5 { pt3dadd( 432.702, 414.377, 28.639, 0.7642 ) }
    dend_5 { pt3dadd( 432.465, 413.265, 28.6569, 0.9106 ) }
    dend_5 { pt3dadd( 432.307, 412.139, 28.6034, 0.9416 ) }
    dend_5 { pt3dadd( 432.252, 411.014, 28.4766, 1.0246 ) }
    dend_5 { pt3dadd( 432.013, 409.923, 28.3727, 1.0528 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_5 { pt3dadd( 431.5, 408.931, 28.42, 1.0302 ) }
    dend_5 { pt3dadd( 431.002, 407.919, 28.5421, 1.1216 ) }
    dend_5 { pt3dadd( 430.708, 406.826, 28.7031, 1.1024 ) }
    dend_5 { pt3dadd( 430.303, 405.78, 28.9243, 1.0672 ) }
    dend_5 { pt3dadd( 430.023, 404.687, 29.1194, 0.9994 ) }
    dend_5 { pt3dadd( 429.971, 403.552, 29.2037, 0.8866 ) }
    dend_5 { pt3dadd( 429.986, 402.426, 29.2107, 0.8434 ) }
    dend_5 { pt3dadd( 429.771, 401.343, 29.2578, 0.6444 ) }
    dend_5 { pt3dadd( 429.225, 400.35, 29.2261, 0.624 ) }
    dend_5 { pt3dadd( 428.946, 399.344, 29.118, 0.7228 ) }
    dend_5 { pt3dadd( 429.263, 398.265, 29.09, 0.7016 ) }
    dend_5 { pt3dadd( 429.43, 397.172, 29.0805, 0.512 ) }
    dend_5 { pt3dadd( 429.148, 396.07, 29.0158, 0.43 ) }
    dend_5 { pt3dadd( 428.848, 394.998, 28.8554, 0.3442 ) }
    dend_5 { pt3dadd( 428.351, 394.147, 28.5796, 0.3192 ) }
    dend_5 { pt3dadd( 427.424, 393.529, 28.2257, 0.3096 ) }
    dend_5 { pt3dadd( 426.495, 392.911, 27.8113, 0.3414 ) }
    dend_5 { pt3dadd( 425.592, 392.217, 27.4417, 0.3892 ) }
    dend_5 { pt3dadd( 424.7, 391.502, 27.1418, 0.5328 ) }
    dend_5 { pt3dadd( 423.807, 390.787, 26.9021, 0.5306 ) }
    dend_5 { pt3dadd( 422.943, 390.056, 26.6974, 0.4586 ) }
    dend_5 { pt3dadd( 422.385, 389.151, 26.3774, 0.4258 ) }
    dend_5 { pt3dadd( 421.828, 388.245, 25.979, 0.5622 ) }
    dend_5 { pt3dadd( 421.594, 387.142, 25.6785, 0.5432 ) }
    dend_5 { pt3dadd( 421.07, 386.135, 25.4842, 0.6836 ) }
    dend_5 { pt3dadd( 420.126, 385.496, 25.3859, 0.5508 ) }
    dend_5 { pt3dadd( 419.116, 384.962, 25.3722, 0.6102 ) }
    dend_5 { pt3dadd( 418.092, 384.521, 25.492, 0.3814 ) }
    dend_5 { pt3dadd( 417.038, 384.18, 26.0767, 0.2288 ) }
    // Section: apic_24, id: apic_24, parent: apic_4 (entry count 29/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 474.102, 440.453, 42.4385, 0.891 ) }
    apic_24 { pt3dadd( 473.801, 440.16, 44.0356, 0.4576 ) }
    apic_24 { pt3dadd( 472.876, 440.041, 45.1088, 0.6868 ) }
    apic_24 { pt3dadd( 472.635, 440.397, 45.6775, 0.6742 ) }
    apic_24 { pt3dadd( 471.633, 440.111, 46.1518, 0.7258 ) }
    apic_24 { pt3dadd( 470.5, 440.041, 46.5433, 0.6886 ) }
    apic_24 { pt3dadd( 469.355, 440.034, 46.8608, 0.8044 ) }
    apic_24 { pt3dadd( 468.212, 440.016, 47.112, 0.5818 ) }
    apic_24 { pt3dadd( 467.482, 439.842, 47.3346, 0.4606 ) }
    apic_24 { pt3dadd( 467.215, 439.78, 47.7792, 0.4228 ) }
    apic_24 { pt3dadd( 466.726, 438.753, 48.1384, 0.5896 ) }
    apic_24 { pt3dadd( 465.979, 437.911, 48.4179, 0.664 ) }
    apic_24 { pt3dadd( 465.084, 437.248, 48.6248, 0.5686 ) }
    apic_24 { pt3dadd( 464.453, 436.353, 48.7684, 0.6088 ) }
    apic_24 { pt3dadd( 463.383, 435.99, 48.8589, 0.5448 ) }
    apic_24 { pt3dadd( 462.294, 435.762, 48.9135, 0.6418 ) }
    apic_24 { pt3dadd( 461.31, 435.178, 48.9908, 0.69 ) }
    apic_24 { pt3dadd( 460.228, 434.909, 49.1014, 0.5038 ) }
    apic_24 { pt3dadd( 459.658, 433.973, 49.2545, 0.3516 ) }
    apic_24 { pt3dadd( 458.76, 433.449, 49.4589, 0.276 ) }
    apic_24 { pt3dadd( 457.867, 432.737, 49.7199, 0.2774 ) }
    apic_24 { pt3dadd( 457.571, 432.736, 50.2093, 0.2796 ) }
    apic_24 { pt3dadd( 456.564, 432.369, 50.8418, 0.284 ) }
    apic_24 { pt3dadd( 455.983, 431.469, 51.5606, 0.292 ) }
    apic_24 { pt3dadd( 455.342, 430.623, 52.3194, 0.3064 ) }
    apic_24 { pt3dadd( 454.336, 430.143, 53.0572, 0.3354 ) }
    apic_24 { pt3dadd( 453.331, 429.661, 53.7552, 0.3778 ) }
    apic_24 { pt3dadd( 452.51, 429.058, 54.4762, 0.5118 ) }
    apic_24 { pt3dadd( 451.759, 428.464, 55.1046, 0.4922 ) }
    apic_24 { pt3dadd( 451.039, 427.6, 55.6394, 0.3848 ) }
    apic_24 { pt3dadd( 450.359, 426.719, 56.1333, 0.3002 ) }
    apic_24 { pt3dadd( 449.714, 425.807, 56.5676, 0.2748 ) }
    apic_24 { pt3dadd( 449.188, 424.791, 56.8789, 0.2752 ) }
    apic_24 { pt3dadd( 448.621, 423.798, 57.0984, 0.2758 ) }
    apic_24 { pt3dadd( 448.036, 422.814, 57.2678, 0.2766 ) }
    apic_24 { pt3dadd( 447.453, 421.831, 57.405, 0.2782 ) }
    apic_24 { pt3dadd( 446.79, 420.922, 57.5943, 0.2814 ) }
    apic_24 { pt3dadd( 446.122, 420.021, 57.8365, 0.2872 ) }
    apic_24 { pt3dadd( 445.47, 419.108, 58.1106, 0.2988 ) }
    apic_24 { pt3dadd( 445.003, 418.063, 58.3209, 0.3144 ) }
    apic_24 { pt3dadd( 444.536, 417.019, 58.4615, 0.3738 ) }
    apic_24 { pt3dadd( 444.497, 415.898, 58.5981, 0.3348 ) }
    apic_24 { pt3dadd( 444.463, 414.777, 58.6936, 0.3016 ) }
    apic_24 { pt3dadd( 444.227, 413.804, 58.7126, 0.2774 ) }
    apic_24 { pt3dadd( 443.134, 413.465, 58.5872, 0.2796 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 74/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 474.102, 440.453, 42.4385, 0.891 ) }
    apic_5 { pt3dadd( 474.586, 439.821, 42.555, 0.8154 ) }
    apic_5 { pt3dadd( 475.243, 438.936, 42.5312, 0.767 ) }
    apic_5 { pt3dadd( 475.497, 437.905, 42.3702, 0.6914 ) }
    apic_5 { pt3dadd( 476.234, 437.178, 42.3853, 0.709 ) }
    apic_5 { pt3dadd( 477.167, 436.622, 42.5373, 0.6632 ) }
    apic_5 { pt3dadd( 478.055, 435.914, 42.6227, 0.7312 ) }
    // Section: apic_26, id: apic_26, parent: apic_24 (entry count 81/100)
    apic_26 { pt3dclear() }
    apic_26 { pt3dadd( 443.134, 413.465, 58.5872, 0.2796 ) }
    apic_26 { pt3dadd( 443.133, 413.19, 58.1983, 0.284 ) }
    apic_26 { pt3dadd( 443.132, 412.534, 57.4123, 0.292 ) }
    apic_26 { pt3dadd( 442.917, 411.552, 56.488, 0.3064 ) }
    apic_26 { pt3dadd( 442.707, 410.543, 55.5313, 0.3356 ) }
    apic_26 { pt3dadd( 442.674, 409.401, 54.7658, 0.3772 ) }
    apic_26 { pt3dadd( 442.674, 408.347, 54.0677, 0.5174 ) }
    apic_26 { pt3dadd( 442.277, 408.258, 53.5144, 0.4706 ) }
    apic_26 { pt3dadd( 441.506, 407.56, 53.0718, 0.4978 ) }
    apic_26 { pt3dadd( 440.538, 407.075, 52.7601, 0.4544 ) }
    apic_26 { pt3dadd( 440.371, 407.368, 52.5711, 0.6002 ) }
    apic_26 { pt3dadd( 439.927, 407.591, 52.593, 0.4594 ) }
    apic_26 { pt3dadd( 439.904, 407.002, 52.9959, 0.3634 ) }
    apic_26 { pt3dadd( 439.152, 406.241, 53.3084, 0.2988 ) }
    apic_26 { pt3dadd( 438.033, 406.16, 53.482, 0.3142 ) }
    apic_26 { pt3dadd( 436.889, 406.16, 53.5097, 0.3734 ) }
    apic_26 { pt3dadd( 435.745, 406.16, 53.3873, 0.3338 ) }
    apic_26 { pt3dadd( 434.601, 406.16, 53.123, 0.3 ) }
    apic_26 { pt3dadd( 434.434, 406.16, 52.4034, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_26 { pt3dadd( 434.17, 406.115, 51.4458, 0.2748 ) }
    apic_26 { pt3dadd( 433.042, 405.928, 50.6565, 0.2748 ) }
    apic_26 { pt3dadd( 431.913, 405.739, 50.0231, 0.2752 ) }
    apic_26 { pt3dadd( 430.772, 405.701, 49.5345, 0.2758 ) }
    apic_26 { pt3dadd( 430.044, 406.025, 48.9516, 0.2766 ) }
    apic_26 { pt3dadd( 428.982, 406.142, 48.4868, 0.2784 ) }
    apic_26 { pt3dadd( 427.84, 406.16, 48.1606, 0.2818 ) }
    apic_26 { pt3dadd( 426.696, 406.16, 47.9265, 0.2882 ) }
    apic_26 { pt3dadd( 425.552, 406.184, 47.7786, 0.2994 ) }
    apic_26 { pt3dadd( 424.609, 406.592, 47.712, 0.323 ) }
    apic_26 { pt3dadd( 423.997, 407.559, 47.7193, 0.354 ) }
    apic_26 { pt3dadd( 423.148, 408.275, 47.7537, 0.4728 ) }
    apic_26 { pt3dadd( 422.339, 409.069, 47.7968, 0.394 ) }
    apic_26 { pt3dadd( 421.336, 409.364, 47.8848, 0.3268 ) }
    apic_26 { pt3dadd( 420.208, 409.364, 48.0211, 0.277 ) }
    apic_26 { pt3dadd( 419.077, 409.364, 48.1634, 0.2792 ) }
    apic_26 { pt3dadd( 417.933, 409.364, 48.2348, 0.2828 ) }
    apic_26 { pt3dadd( 416.789, 409.364, 48.225, 0.2898 ) }
    apic_26 { pt3dadd( 415.645, 409.364, 48.127, 0.3034 ) }
    apic_26 { pt3dadd( 414.501, 409.364, 47.9416, 0.327 ) }
    apic_26 { pt3dadd( 413.357, 409.364, 47.6823, 0.376 ) }
    apic_26 { pt3dadd( 412.506, 409.502, 47.1755, 0.4416 ) }
    apic_26 { pt3dadd( 411.838, 409.725, 46.3854, 0.6866 ) }
    apic_26 { pt3dadd( 410.903, 409.823, 45.5991, 0.542 ) }
    apic_26 { pt3dadd( 409.759, 409.823, 44.9943, 0.4344 ) }
    apic_26 { pt3dadd( 408.615, 409.823, 44.5572, 0.3718 ) }
    apic_26 { pt3dadd( 407.471, 409.823, 44.2697, 0.5058 ) }
    apic_26 { pt3dadd( 406.327, 409.823, 44.1126, 0.4562 ) }
    apic_26 { pt3dadd( 405.183, 409.823, 44.0348, 0.4388 ) }
    apic_26 { pt3dadd( 404.039, 409.823, 43.9712, 0.502 ) }
    apic_26 { pt3dadd( 402.91, 409.902, 43.869, 0.613 ) }
    apic_26 { pt3dadd( 401.809, 410.122, 43.6895, 0.6206 ) }
    apic_26 { pt3dadd( 400.7, 410.32, 43.4829, 0.4518 ) }
    apic_26 { pt3dadd( 399.643, 410.738, 43.3233, 0.34 ) }
    apic_26 { pt3dadd( 398.872, 411.245, 43.2076, 0.3024 ) }
    apic_26 { pt3dadd( 397.918, 411.874, 43.1326, 0.3212 ) }
    apic_26 { pt3dadd( 396.888, 412.365, 43.0942, 0.3864 ) }
    apic_26 { pt3dadd( 395.838, 412.819, 43.0833, 0.3588 ) }
    apic_26 { pt3dadd( 394.726, 412.99, 43.0833, 0.3418 ) }
    apic_26 { pt3dadd( 393.583, 413.008, 43.0833, 0.373 ) }
    apic_26 { pt3dadd( 392.439, 413.026, 43.0833, 0.356 ) }
    apic_26 { pt3dadd( 391.402, 413.486, 43.0833, 0.2288 ) }
    // Section: apic_25, id: apic_25, parent: apic_24 (entry count 42/100)
    apic_25 { pt3dclear() }
    apic_25 { pt3dadd( 443.134, 413.465, 58.5872, 0.2796 ) }
    apic_25 { pt3dadd( 442.243, 412.558, 60.1199, 0.2288 ) }
    apic_25 { pt3dadd( 441.44, 411.744, 60.6833, 0.2778 ) }
    apic_25 { pt3dadd( 440.671, 410.934, 60.9498, 0.2806 ) }
    apic_25 { pt3dadd( 439.906, 410.124, 61.3096, 0.2854 ) }
    apic_25 { pt3dadd( 439.142, 409.315, 61.7254, 0.2966 ) }
    apic_25 { pt3dadd( 438.377, 408.505, 62.1642, 0.305 ) }
    apic_25 { pt3dadd( 437.608, 407.696, 62.5862, 0.3814 ) }
    apic_25 { pt3dadd( 436.799, 406.887, 63.1767, 0.2288 ) }
    // Section: apic_21, id: apic_21, parent: apic_5 (entry count 51/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 478.055, 435.914, 42.6227, 0.7312 ) }
    apic_21 { pt3dadd( 477.75, 434.914, 42.726, 0.2288 ) }
    apic_21 { pt3dadd( 477.493, 433.804, 42.7218, 0.2818 ) }
    apic_21 { pt3dadd( 477.324, 432.672, 42.7199, 0.288 ) }
    apic_21 { pt3dadd( 477.135, 431.543, 42.7165, 0.2994 ) }
    apic_21 { pt3dadd( 477.118, 430.399, 42.7109, 0.3204 ) }
    apic_21 { pt3dadd( 476.993, 429.265, 42.7028, 0.3612 ) }
    apic_21 { pt3dadd( 476.858, 428.132, 42.6913, 0.427 ) }
    apic_21 { pt3dadd( 476.768, 426.998, 42.6745, 0.5978 ) }
    apic_21 { pt3dadd( 476.26, 425.973, 42.6504, 0.6772 ) }
    apic_21 { pt3dadd( 475.833, 424.911, 42.6174, 0.6028 ) }
    apic_21 { pt3dadd( 475.699, 423.776, 42.574, 0.6256 ) }
    apic_21 { pt3dadd( 475.509, 422.65, 42.5202, 0.8036 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 64/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 478.055, 435.914, 42.6227, 0.7312 ) }
    apic_6 { pt3dadd( 478.667, 435.408, 42.6636, 0.5724 ) }
    apic_6 { pt3dadd( 479.685, 434.948, 42.7462, 0.5174 ) }
    apic_6 { pt3dadd( 480.719, 434.537, 42.9352, 0.626 ) }
    apic_6 { pt3dadd( 481.753, 434.073, 43.1306, 0.7184 ) }
    apic_6 { pt3dadd( 482.822, 433.676, 43.3322, 0.7334 ) }
    apic_6 { pt3dadd( 483.88, 433.345, 43.6176, 0.6054 ) }
    apic_6 { pt3dadd( 484.72, 432.623, 43.8889, 0.6656 ) }
    apic_6 { pt3dadd( 485.286, 431.639, 44.0961, 0.7056 ) }
    apic_6 { pt3dadd( 486.091, 430.848, 44.2459, 0.6712 ) }
    apic_6 { pt3dadd( 486.992, 430.142, 44.3632, 0.6756 ) }
    apic_6 { pt3dadd( 487.867, 429.406, 44.462, 0.5826 ) }
    apic_6 { pt3dadd( 488.88, 428.891, 44.5542, 0.672 ) }
    apic_6 { pt3dadd( 489.853, 428.295, 44.6732, 0.7096 ) }
    apic_6 { pt3dadd( 490.807, 427.749, 44.9067, 0.7168 ) }
    apic_6 { pt3dadd( 491.914, 427.562, 45.1514, 0.5736 ) }
    apic_6 { pt3dadd( 492.977, 427.157, 45.3678, 0.6124 ) }
    apic_6 { pt3dadd( 493.633, 426.249, 45.5622, 0.5802 ) }
    apic_6 { pt3dadd( 494.127, 425.234, 45.7859, 0.5692 ) }
    apic_6 { pt3dadd( 494.969, 424.513, 46.0412, 0.5386 ) }
    apic_6 { pt3dadd( 496.092, 424.394, 46.2319, 0.5336 ) }
    apic_6 { pt3dadd( 497.221, 424.214, 46.375, 0.5018 ) }
    apic_6 { pt3dadd( 498.103, 423.499, 46.482, 0.5514 ) }
    apic_6 { pt3dadd( 498.85, 422.634, 46.5609, 0.8034 ) }
    apic_6 { pt3dadd( 499.752, 421.931, 46.62, 0.9518 ) }
    apic_6 { pt3dadd( 500.579, 421.142, 46.6752, 0.9416 ) }
    apic_6 { pt3dadd( 501.391, 420.336, 46.7454, 0.9362 ) }
    apic_6 { pt3dadd( 502.21, 419.544, 46.8524, 0.8606 ) }
    apic_6 { pt3dadd( 503.103, 418.901, 47.0576, 0.8122 ) }
    apic_6 { pt3dadd( 504.104, 418.35, 47.2234, 0.7308 ) }
    apic_6 { pt3dadd( 505.013, 417.657, 47.3432, 0.7706 ) }
    apic_6 { pt3dadd( 505.911, 416.953, 47.413, 0.8336 ) }
    apic_6 { pt3dadd( 506.644, 416.111, 47.3735, 0.7744 ) }
    // Section: apic_23, id: apic_23, parent: apic_21 (entry count 97/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 475.509, 422.65, 42.5202, 0.8036 ) }
    apic_23 { pt3dadd( 475.133, 421.646, 42.4096, 0.7024 ) }
    apic_23 { pt3dadd( 474.823, 420.565, 42.2624, 0.5478 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_23 { pt3dadd( 474.635, 419.467, 42.1246, 0.5612 ) }
    apic_23 { pt3dadd( 473.781, 418.734, 41.995, 0.5002 ) }
    apic_23 { pt3dadd( 473.374, 417.692, 41.8706, 0.5756 ) }
    apic_23 { pt3dadd( 472.982, 417.076, 41.6632, 0.486 ) }
    apic_23 { pt3dadd( 472.318, 416.194, 41.419, 0.52 ) }
    apic_23 { pt3dadd( 471.535, 415.359, 41.2264, 0.5262 ) }
    apic_23 { pt3dadd( 470.75, 414.562, 41.0648, 0.5838 ) }
    apic_23 { pt3dadd( 469.717, 414.113, 40.885, 0.4682 ) }
    apic_23 { pt3dadd( 468.694, 413.613, 40.7767, 0.4194 ) }
    apic_23 { pt3dadd( 468.014, 412.695, 40.7361, 0.4388 ) }
    apic_23 { pt3dadd( 467.471, 411.687, 40.7453, 0.627 ) }
    apic_23 { pt3dadd( 466.814, 410.751, 40.7898, 0.6966 ) }
    apic_23 { pt3dadd( 466.539, 409.454, 40.9466, 0.8074 ) }
    apic_23 { pt3dadd( 465.92, 408.494, 41.1099, 0.8734 ) }
    apic_23 { pt3dadd( 465.198, 407.611, 41.295, 0.9854 ) }
    apic_23 { pt3dadd( 464.384, 406.824, 41.5176, 1.015 ) }
    apic_23 { pt3dadd( 463.618, 405.992, 41.708, 1.019 ) }
    apic_23 { pt3dadd( 463.246, 404.931, 41.9079, 0.8152 ) }
    apic_23 { pt3dadd( 462.822, 403.929, 42.184, 0.5488 ) }
    apic_23 { pt3dadd( 462.229, 402.991, 42.3914, 0.4272 ) }
    apic_23 { pt3dadd( 461.213, 402.592, 42.5348, 0.4558 ) }
    apic_23 { pt3dadd( 460.461, 401.738, 42.6233, 0.647 ) }
    apic_23 { pt3dadd( 459.516, 401.114, 42.6692, 0.7882 ) }
    apic_23 { pt3dadd( 458.585, 400.123, 42.6756, 0.7132 ) }
    apic_23 { pt3dadd( 457.891, 399.218, 42.653, 0.6082 ) }
    apic_23 { pt3dadd( 457.493, 398.145, 42.625, 0.7044 ) }
    apic_23 { pt3dadd( 456.696, 397.328, 42.5919, 0.8432 ) }
    apic_23 { pt3dadd( 455.838, 396.634, 42.4897, 0.8356 ) }
    apic_23 { pt3dadd( 455.012, 395.85, 42.4054, 0.7344 ) }
    apic_23 { pt3dadd( 454.396, 394.909, 42.3385, 0.7416 ) }
    apic_23 { pt3dadd( 453.497, 394.249, 42.2884, 0.725 ) }
    apic_23 { pt3dadd( 452.427, 393.904, 42.2551, 0.8368 ) }
    apic_23 { pt3dadd( 452.031, 393.587, 42.1996, 0.8136 ) }
    apic_23 { pt3dadd( 450.975, 393.271, 42.1764, 0.7418 ) }
    apic_23 { pt3dadd( 450.005, 392.676, 42.1733, 0.749 ) }
    apic_23 { pt3dadd( 449.084, 392.017, 42.1938, 0.7678 ) }
    apic_23 { pt3dadd( 448.562, 391.064, 42.2397, 0.7786 ) }
    apic_23 { pt3dadd( 448.219, 389.998, 42.3531, 0.6848 ) }
    apic_23 { pt3dadd( 447.924, 388.959, 42.4796, 0.8342 ) }
    apic_23 { pt3dadd( 447.265, 388.044, 42.611, 0.9152 ) }
    apic_23 { pt3dadd( 446.709, 387.395, 42.8602, 0.8732 ) }
    apic_23 { pt3dadd( 446.273, 386.427, 43.1155, 0.8124 ) }
    apic_23 { pt3dadd( 446.048, 385.426, 43.3787, 0.6148 ) }
    apic_23 { pt3dadd( 445.931, 384.329, 43.5856, 0.4344 ) }
    apic_23 { pt3dadd( 445.868, 383.198, 43.7231, 0.3398 ) }
    apic_23 { pt3dadd( 445.371, 382.175, 43.7965, 0.374 ) }
    apic_23 { pt3dadd( 445.023, 381.088, 43.8138, 0.335 ) }
    apic_23 { pt3dadd( 444.452, 380.105, 43.7718, 0.302 ) }
    apic_23 { pt3dadd( 443.911, 379.109, 43.6775, 0.2784 ) }
    apic_23 { pt3dadd( 443.362, 378.114, 43.5789, 0.2818 ) }
    apic_23 { pt3dadd( 442.872, 377.09, 43.5411, 0.288 ) }
    apic_23 { pt3dadd( 442.602, 375.979, 43.5663, 0.3 ) }
    apic_23 { pt3dadd( 442.096, 375.161, 43.654, 0.321 ) }
    apic_23 { pt3dadd( 441.124, 374.759, 43.839, 0.3626 ) }
    apic_23 { pt3dadd( 440.52, 373.864, 44.1924, 0.429 ) }
    apic_23 { pt3dadd( 439.917, 372.969, 44.6594, 0.6038 ) }
    apic_23 { pt3dadd( 439.164, 372.123, 45.0848, 0.6774 ) }
    apic_23 { pt3dadd( 438.859, 371.604, 45.4532, 0.6556 ) }
    apic_23 { pt3dadd( 438.28, 370.619, 45.7755, 0.4704 ) }
    apic_23 { pt3dadd( 438.028, 369.52, 46.0606, 0.3692 ) }
    apic_23 { pt3dadd( 437.495, 368.668, 46.4436, 0.3814 ) }
    apic_23 { pt3dadd( 437.126, 367.907, 47.0005, 0.3484 ) }
    apic_23 { pt3dadd( 436.879, 366.796, 47.5174, 0.328 ) }
    apic_23 { pt3dadd( 436.633, 365.686, 47.9895, 0.3214 ) }
    apic_23 { pt3dadd( 436.387, 364.576, 48.4137, 0.387 ) }
    apic_23 { pt3dadd( 436.204, 363.452, 48.7729, 0.3586 ) }
    apic_23 { pt3dadd( 436.085, 362.314, 49.0566, 0.348 ) }
    apic_23 { pt3dadd( 435.965, 361.177, 49.2988, 0.353 ) }
    apic_23 { pt3dadd( 435.861, 360.037, 49.5429, 0.4714 ) }
    apic_23 { pt3dadd( 435.496, 359.231, 49.9358, 0.3914 ) }
    apic_23 { pt3dadd( 434.855, 358.774, 50.5817, 0.322 ) }
    apic_23 { pt3dadd( 434.055, 358.054, 51.1501, 0.2684 ) }
    apic_23 { pt3dadd( 433.424, 357.124, 51.5805, 0.2626 ) }
    apic_23 { pt3dadd( 432.355, 356.732, 51.8818, 0.2542 ) }
    apic_23 { pt3dadd( 431.293, 356.385, 52.0657, 0.2288 ) }
    apic_23 { pt3dadd( 430.315, 355.791, 52.1534, 0.2288 ) }
    // Section: apic_22, id: apic_22, parent: apic_21 (entry count 76/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 475.509, 422.65, 42.5202, 0.8036 ) }
    apic_22 { pt3dadd( 475.26, 422.526, 41.9202, 0.2288 ) }
    apic_22 { pt3dadd( 475.052, 422.421, 40.1593, 0.3012 ) }
    apic_22 { pt3dadd( 475.382, 422.065, 39.489, 0.3232 ) }
    apic_22 { pt3dadd( 475.501, 421.872, 38.9043, 0.3682 ) }
    apic_22 { pt3dadd( 476.052, 420.875, 38.3866, 0.4318 ) }
    apic_22 { pt3dadd( 476.196, 419.776, 37.8826, 0.6446 ) }
    apic_22 { pt3dadd( 476.196, 418.953, 37.4354, 0.5794 ) }
    apic_22 { pt3dadd( 476.799, 418.53, 36.7682, 0.6312 ) }
    apic_22 { pt3dadd( 477.84, 418.634, 35.9568, 0.5752 ) }
    apic_22 { pt3dadd( 478.936, 418.801, 35.077, 0.523 ) }
    apic_22 { pt3dadd( 480.06, 419.014, 34.2275, 0.6328 ) }
    apic_22 { pt3dadd( 480.255, 419.197, 33.201, 0.5206 ) }
    apic_22 { pt3dadd( 480.624, 419.224, 31.9245, 0.4734 ) }
    apic_22 { pt3dadd( 480.53, 418.342, 30.5682, 0.5192 ) }
    apic_22 { pt3dadd( 480.26, 417.609, 29.1402, 0.644 ) }
    apic_22 { pt3dadd( 480.704, 417.68, 27.6847, 0.6806 ) }
    apic_22 { pt3dadd( 481.835, 417.844, 26.5076, 0.5524 ) }
    apic_22 { pt3dadd( 482.959, 417.945, 25.576, 0.5796 ) }
    apic_22 { pt3dadd( 483.079, 416.702, 24.5185, 0.4872 ) }
    apic_22 { pt3dadd( 483.647, 416.236, 23.4335, 0.5508 ) }
    apic_22 { pt3dadd( 484.663, 416.263, 22.4442, 0.4442 ) }
    apic_22 { pt3dadd( 485.806, 416.242, 21.6384, 0.4216 ) }
    apic_22 { pt3dadd( 485.633, 415.544, 20.769, 0.4438 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_22 { pt3dadd( 485.073, 415.184, 19.7669, 0.6324 ) }
    apic_22 { pt3dadd( 483.974, 414.384, 19.0061, 0.7252 ) }
    apic_22 { pt3dadd( 483.033, 413.736, 18.405, 0.7702 ) }
    apic_22 { pt3dadd( 482.594, 412.827, 17.9046, 0.5574 ) }
    apic_22 { pt3dadd( 482.596, 411.758, 17.3505, 0.4538 ) }
    apic_22 { pt3dadd( 482.334, 410.918, 16.7244, 0.4516 ) }
    apic_22 { pt3dadd( 481.341, 410.638, 16.0241, 0.669 ) }
    apic_22 { pt3dadd( 481.07, 409.614, 15.3936, 0.685 ) }
    apic_22 { pt3dadd( 481.383, 408.533, 14.8523, 0.535 ) }
    apic_22 { pt3dadd( 481.746, 407.59, 14.3758, 0.4418 ) }
    apic_22 { pt3dadd( 481.734, 408.377, 13.7362, 0.5142 ) }
    apic_22 { pt3dadd( 482.625, 407.988, 13.0164, 0.604 ) }
    apic_22 { pt3dadd( 483.365, 407.135, 12.444, 0.755 ) }
    apic_22 { pt3dadd( 483.784, 406.114, 11.9893, 0.6542 ) }
    apic_22 { pt3dadd( 483.958, 404.984, 11.6379, 0.7138 ) }
    apic_22 { pt3dadd( 483.521, 403.999, 11.3792, 0.7708 ) }
    apic_22 { pt3dadd( 483.151, 403.011, 11.0606, 0.68 ) }
    apic_22 { pt3dadd( 483.033, 401.999, 10.7162, 0.551 ) }
    apic_22 { pt3dadd( 483.385, 400.91, 10.4384, 0.5774 ) }
    apic_22 { pt3dadd( 483.075, 399.942, 10.2178, 0.7088 ) }
    apic_22 { pt3dadd( 482.276, 399.148, 10.0442, 0.783 ) }
    apic_22 { pt3dadd( 481.277, 398.59, 9.9086, 0.8266 ) }
    apic_22 { pt3dadd( 480.299, 397.996, 9.7975, 0.678 ) }
    apic_22 { pt3dadd( 479.326, 397.396, 9.6866, 0.6018 ) }
    apic_22 { pt3dadd( 478.796, 396.43, 9.4777, 0.4068 ) }
    apic_22 { pt3dadd( 478.31, 395.429, 9.1958, 0.305 ) }
    apic_22 { pt3dadd( 477.634, 394.672, 8.9006, 0.2288 ) }
    apic_22 { pt3dadd( 476.504, 394.492, 8.4342, 0.2288 ) }
    // Section: apic_20, id: apic_20, parent: apic_6 (entry count 28/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 506.644, 416.111, 47.3735, 0.7744 ) }
    apic_20 { pt3dadd( 507.299, 416.355, 48.1578, 0.2288 ) }
    apic_20 { pt3dadd( 508.381, 416.727, 48.2048, 0.2748 ) }
    apic_20 { pt3dadd( 509.447, 417.139, 48.2233, 0.2752 ) }
    apic_20 { pt3dadd( 510.503, 417.581, 48.2504, 0.2758 ) }
    apic_20 { pt3dadd( 511.559, 418.021, 48.2885, 0.2766 ) }
    apic_20 { pt3dadd( 512.633, 418.227, 48.3386, 0.2784 ) }
    apic_20 { pt3dadd( 513.75, 417.971, 48.4019, 0.2818 ) }
    apic_20 { pt3dadd( 514.854, 417.736, 48.5027, 0.2882 ) }
    apic_20 { pt3dadd( 515.93, 417.554, 48.6942, 0.2994 ) }
    apic_20 { pt3dadd( 517.039, 417.276, 48.872, 0.3228 ) }
    apic_20 { pt3dadd( 518.143, 416.974, 49.0344, 0.3538 ) }
    apic_20 { pt3dadd( 519.242, 416.661, 49.1814, 0.4722 ) }
    apic_20 { pt3dadd( 518.979, 416.793, 49.5295, 0.3934 ) }
    apic_20 { pt3dadd( 520.06, 416.418, 49.8044, 0.3254 ) }
    apic_20 { pt3dadd( 521.14, 416.043, 50.013, 0.2746 ) }
    apic_20 { pt3dadd( 522.221, 415.668, 50.171, 0.2746 ) }
    apic_20 { pt3dadd( 523.327, 415.383, 50.2751, 0.2746 ) }
    apic_20 { pt3dadd( 524.445, 415.143, 50.3269, 0.2746 ) }
    apic_20 { pt3dadd( 525.564, 414.902, 50.3311, 0.2746 ) }
    apic_20 { pt3dadd( 526.396, 415.161, 50.3395, 0.2746 ) }
    apic_20 { pt3dadd( 527.529, 415.017, 50.332, 0.2746 ) }
    apic_20 { pt3dadd( 528.664, 414.873, 50.3135, 0.2746 ) }
    apic_20 { pt3dadd( 529.799, 414.73, 50.2888, 0.2746 ) }
    apic_20 { pt3dadd( 530.94, 414.728, 50.2762, 0.2746 ) }
    apic_20 { pt3dadd( 532.085, 414.753, 50.276, 0.2746 ) }
    apic_20 { pt3dadd( 533.221, 414.825, 50.2821, 0.2746 ) }
    apic_20 { pt3dadd( 534.341, 415.067, 50.2855, 0.2746 ) }
    apic_20 { pt3dadd( 535.458, 415.31, 50.2852, 0.2746 ) }
    apic_20 { pt3dadd( 536.576, 415.552, 50.2818, 0.2746 ) }
    apic_20 { pt3dadd( 537.688, 415.82, 50.2771, 0.2746 ) }
    apic_20 { pt3dadd( 538.799, 416.097, 50.2743, 0.2746 ) }
    apic_20 { pt3dadd( 539.909, 416.375, 50.2751, 0.2746 ) }
    apic_20 { pt3dadd( 541.033, 416.57, 50.2852, 0.2746 ) }
    apic_20 { pt3dadd( 542.167, 416.723, 50.3048, 0.2746 ) }
    apic_20 { pt3dadd( 543.299, 416.875, 50.3303, 0.2746 ) }
    apic_20 { pt3dadd( 544.44, 416.979, 50.3527, 0.2748 ) }
    apic_20 { pt3dadd( 545.581, 417.057, 50.3686, 0.275 ) }
    apic_20 { pt3dadd( 546.714, 417.07, 50.379, 0.2752 ) }
    apic_20 { pt3dadd( 547.796, 416.701, 50.3815, 0.2758 ) }
    apic_20 { pt3dadd( 548.879, 416.331, 50.379, 0.2768 ) }
    apic_20 { pt3dadd( 549.986, 416.224, 50.379, 0.2786 ) }
    apic_20 { pt3dadd( 551.117, 416.391, 50.3857, 0.2826 ) }
    apic_20 { pt3dadd( 552.249, 416.558, 50.3983, 0.288 ) }
    apic_20 { pt3dadd( 553.38, 416.725, 50.4143, 0.305 ) }
    apic_20 { pt3dadd( 554.513, 416.891, 50.4328, 0.305 ) }
    apic_20 { pt3dadd( 555.643, 417.058, 50.4734, 0.4576 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 75/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 506.644, 416.111, 47.3735, 0.7744 ) }
    apic_7 { pt3dadd( 507.594, 414.877, 47.3306, 0.6024 ) }
    apic_7 { pt3dadd( 508.392, 414.091, 47.3864, 0.5878 ) }
    apic_7 { pt3dadd( 509.262, 413.375, 47.5283, 0.6846 ) }
    apic_7 { pt3dadd( 510.105, 412.607, 47.7, 0.72 ) }
    apic_7 { pt3dadd( 510.991, 411.906, 47.9209, 0.7974 ) }
    apic_7 { pt3dadd( 511.891, 411.238, 48.1362, 0.885 ) }
    apic_7 { pt3dadd( 512.789, 410.569, 48.2978, 0.8596 ) }
    apic_7 { pt3dadd( 513.737, 409.958, 48.4683, 0.811 ) }
    apic_7 { pt3dadd( 514.658, 409.289, 48.6186, 0.7274 ) }
    apic_7 { pt3dadd( 515.486, 408.516, 48.7326, 0.77 ) }
    apic_7 { pt3dadd( 516.237, 407.656, 48.7721, 0.804 ) }
    apic_7 { pt3dadd( 516.991, 406.796, 48.7595, 0.8574 ) }
    apic_7 { pt3dadd( 517.742, 405.937, 48.7113, 0.774 ) }
    apic_7 { pt3dadd( 518.495, 405.078, 48.6382, 0.5888 ) }
    apic_7 { pt3dadd( 519.398, 404.378, 48.5834, 0.6232 ) }
    apic_7 { pt3dadd( 520.312, 403.691, 48.557, 0.4548 ) }
    apic_7 { pt3dadd( 521.227, 403.004, 48.5632, 0.355 ) }
    apic_7 { pt3dadd( 522.142, 402.317, 48.599, 0.2824 ) }
    apic_7 { pt3dadd( 523.185, 401.853, 48.6654, 0.289 ) }
    apic_7 { pt3dadd( 524.239, 401.409, 48.7684, 0.3012 ) }
    apic_7 { pt3dadd( 525.294, 400.965, 48.9152, 0.3238 ) }
    apic_7 { pt3dadd( 526.263, 400.41, 49.1098, 0.3666 ) }
    apic_7 { pt3dadd( 526.979, 399.517, 49.3492, 0.4418 ) }
    apic_7 { pt3dadd( 527.517, 398.674, 49.7633, 0.601 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_7 { pt3dadd( 527.9, 397.872, 50.4179, 0.7998 ) }
    apic_7 { pt3dadd( 528.283, 397.07, 51.2266, 0.95 ) }
    apic_7 { pt3dadd( 528.906, 396.144, 51.7896, 1.1462 ) }
    apic_7 { pt3dadd( 529.635, 395.273, 52.171, 1.2204 ) }
    apic_7 { pt3dadd( 530.419, 394.44, 52.4544, 1.1648 ) }
    apic_7 { pt3dadd( 531.076, 393.534, 52.7156, 1.083 ) }
    apic_7 { pt3dadd( 531.747, 392.622, 52.9365, 1.058 ) }
    // Section: apic_15, id: apic_15, parent: apic_7 (entry count 7/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 531.747, 392.622, 52.9365, 1.058 ) }
    apic_15 { pt3dadd( 532.757, 392.783, 53.2014, 0.4576 ) }
    apic_15 { pt3dadd( 533.883, 392.981, 53.4027, 0.696 ) }
    apic_15 { pt3dadd( 534.995, 392.812, 53.4772, 0.6932 ) }
    apic_15 { pt3dadd( 535.926, 392.184, 53.583, 0.752 ) }
    apic_15 { pt3dadd( 536.758, 391.453, 53.7855, 0.7806 ) }
    apic_15 { pt3dadd( 537.74, 390.902, 53.9983, 0.7668 ) }
    apic_15 { pt3dadd( 538.853, 390.683, 54.1772, 0.8364 ) }
    apic_15 { pt3dadd( 539.909, 390.264, 54.3236, 0.9582 ) }
    apic_15 { pt3dadd( 540.851, 389.622, 54.4435, 0.993 ) }
    apic_15 { pt3dadd( 541.732, 388.894, 54.5432, 1.069 ) }
    apic_15 { pt3dadd( 542.44, 388.001, 54.6364, 1.1538 ) }
    apic_15 { pt3dadd( 543.169, 387.148, 54.7946, 1.1248 ) }
    apic_15 { pt3dadd( 544.018, 386.405, 55.0024, 1.062 ) }
    apic_15 { pt3dadd( 544.888, 385.668, 55.1866, 0.9878 ) }
    apic_15 { pt3dadd( 545.917, 385.186, 55.328, 0.876 ) }
    apic_15 { pt3dadd( 546.917, 384.678, 55.3801, 0.7708 ) }
    apic_15 { pt3dadd( 547.809, 383.974, 55.4546, 0.7674 ) }
    apic_15 { pt3dadd( 548.628, 383.221, 55.6329, 0.974 ) }
    apic_15 { pt3dadd( 549.533, 382.563, 55.888, 1.0108 ) }
    apic_15 { pt3dadd( 550.531, 382.046, 56.1943, 0.9294 ) }
    apic_15 { pt3dadd( 551.56, 381.552, 56.4827, 0.8176 ) }
    apic_15 { pt3dadd( 552.62, 381.197, 56.8033, 0.8792 ) }
    apic_15 { pt3dadd( 553.737, 381.005, 57.0024, 1.0584 ) }
    apic_15 { pt3dadd( 554.697, 380.398, 57.1091, 1.0782 ) }
    apic_15 { pt3dadd( 555.62, 379.778, 57.276, 1.0294 ) }
    apic_15 { pt3dadd( 556.468, 379.015, 57.3877, 0.8958 ) }
    apic_15 { pt3dadd( 557.396, 378.353, 57.4538, 0.856 ) }
    apic_15 { pt3dadd( 558.357, 377.758, 57.5854, 0.6898 ) }
    apic_15 { pt3dadd( 559.471, 377.51, 57.7122, 0.6002 ) }
    apic_15 { pt3dadd( 560.612, 377.442, 57.8099, 0.5184 ) }
    apic_15 { pt3dadd( 561.643, 377.001, 57.8838, 0.643 ) }
    apic_15 { pt3dadd( 562.426, 376.334, 58.1529, 0.6794 ) }
    apic_15 { pt3dadd( 563.362, 375.69, 58.4242, 0.7738 ) }
    apic_15 { pt3dadd( 564.242, 374.96, 58.6396, 0.817 ) }
    apic_15 { pt3dadd( 565.182, 374.321, 58.7989, 0.8532 ) }
    apic_15 { pt3dadd( 566.216, 373.851, 58.9806, 0.9042 ) }
    apic_15 { pt3dadd( 567.073, 373.136, 59.2004, 0.848 ) }
    apic_15 { pt3dadd( 567.656, 372.188, 59.4516, 0.7884 ) }
    apic_15 { pt3dadd( 568.336, 371.272, 59.6652, 0.6908 ) }
    apic_15 { pt3dadd( 569.156, 370.474, 59.8402, 0.6768 ) }
    apic_15 { pt3dadd( 570.055, 369.772, 59.9822, 0.7548 ) }
    apic_15 { pt3dadd( 571.078, 369.262, 60.0922, 0.8522 ) }
    apic_15 { pt3dadd( 572.086, 368.74, 60.1857, 0.8056 ) }
    apic_15 { pt3dadd( 572.888, 367.932, 60.2927, 0.678 ) }
    apic_15 { pt3dadd( 573.466, 366.976, 60.468, 0.6398 ) }
    apic_15 { pt3dadd( 573.862, 365.947, 60.6894, 0.5208 ) }
    apic_15 { pt3dadd( 574.708, 365.197, 60.8709, 0.5356 ) }
    apic_15 { pt3dadd( 575.724, 364.685, 61.0173, 0.5624 ) }
    apic_15 { pt3dadd( 576.642, 364.003, 61.1366, 0.6168 ) }
    apic_15 { pt3dadd( 577.591, 363.364, 61.238, 0.6934 ) }
    apic_15 { pt3dadd( 578.395, 362.603, 61.332, 0.7246 ) }
    apic_15 { pt3dadd( 578.83, 361.556, 61.4415, 0.6362 ) }
    apic_15 { pt3dadd( 579.583, 360.756, 61.614, 0.724 ) }
    apic_15 { pt3dadd( 580.586, 360.289, 61.8761, 0.8088 ) }
    apic_15 { pt3dadd( 581.533, 359.667, 62.1536, 0.8864 ) }
    apic_15 { pt3dadd( 582.392, 358.944, 62.4109, 0.96 ) }
    apic_15 { pt3dadd( 583.294, 358.276, 62.566, 0.9778 ) }
    apic_15 { pt3dadd( 584.271, 357.699, 62.7348, 0.9014 ) }
    apic_15 { pt3dadd( 585.232, 357.118, 62.9552, 0.8348 ) }
    apic_15 { pt3dadd( 586.205, 356.537, 63.1806, 0.8036 ) }
    apic_15 { pt3dadd( 587.148, 355.889, 63.3833, 0.756 ) }
    apic_15 { pt3dadd( 588.094, 355.266, 63.604, 0.8464 ) }
    apic_15 { pt3dadd( 589.003, 354.609, 63.8649, 0.8314 ) }
    apic_15 { pt3dadd( 589.875, 353.877, 64.09, 0.776 ) }
    apic_15 { pt3dadd( 590.768, 353.167, 64.2496, 0.8072 ) }
    apic_15 { pt3dadd( 591.724, 352.539, 64.3642, 0.903 ) }
    apic_15 { pt3dadd( 592.633, 351.849, 64.4468, 0.8948 ) }
    apic_15 { pt3dadd( 593.434, 351.036, 64.5058, 0.866 ) }
    apic_15 { pt3dadd( 594.193, 350.189, 64.5574, 0.8798 ) }
    apic_15 { pt3dadd( 595.155, 349.626, 64.6215, 0.8076 ) }
    apic_15 { pt3dadd( 596.236, 349.272, 64.7069, 0.6906 ) }
    apic_15 { pt3dadd( 597.208, 348.685, 64.8189, 0.6212 ) }
    apic_15 { pt3dadd( 598.083, 347.978, 64.9978, 0.6912 ) }
    apic_15 { pt3dadd( 599.034, 347.553, 65.2781, 0.5428 ) }
    apic_15 { pt3dadd( 600.145, 347.627, 65.5942, 0.4738 ) }
    apic_15 { pt3dadd( 601.237, 347.582, 65.8202, 0.489 ) }
    apic_15 { pt3dadd( 602.268, 347.159, 65.9336, 0.7388 ) }
    apic_15 { pt3dadd( 603.245, 346.569, 66.022, 0.8122 ) }
    apic_15 { pt3dadd( 604.203, 345.946, 66.1203, 0.7812 ) }
    apic_15 { pt3dadd( 605.203, 345.444, 66.2869, 0.8474 ) }
    apic_15 { pt3dadd( 606.237, 345.01, 66.5381, 0.8274 ) }
    apic_15 { pt3dadd( 607.268, 344.565, 66.8553, 0.7986 ) }
    apic_15 { pt3dadd( 608.224, 343.993, 67.2134, 0.7024 ) }
    apic_15 { pt3dadd( 608.965, 343.148, 67.5391, 0.7328 ) }
    apic_15 { pt3dadd( 609.544, 342.164, 67.8048, 0.6908 ) }
    apic_15 { pt3dadd( 610.234, 341.262, 68.0282, 0.863 ) }
    apic_15 { pt3dadd( 611.055, 340.466, 68.234, 1.1096 ) }
    apic_15 { pt3dadd( 611.966, 339.784, 68.4485, 1.236 ) }
    apic_15 { pt3dadd( 612.984, 339.31, 68.7268, 1.2454 ) }
    apic_15 { pt3dadd( 613.927, 338.925, 69.176, 0.9808 ) }
    apic_15 { pt3dadd( 614.767, 338.368, 69.757, 0.7146 ) }
    apic_15 { pt3dadd( 615.528, 337.566, 70.299, 0.734 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_15 { pt3dadd( 616.315, 336.739, 70.726, 0.7976 ) }
    apic_15 { pt3dadd( 617.276, 336.147, 71.0444, 1.0106 ) }
    apic_15 { pt3dadd( 618.214, 335.508, 71.2715, 1.1722 ) }
    apic_15 { pt3dadd( 619.07, 334.75, 71.4314, 1.2326 ) }
    apic_15 { pt3dadd( 620.0, 334.091, 71.5548, 1.1316 ) }
    apic_15 { pt3dadd( 620.992, 333.601, 71.7651, 1.0624 ) }
    apic_15 { pt3dadd( 621.922, 332.997, 72.0756, 0.8204 ) }
    apic_15 { pt3dadd( 622.869, 332.387, 72.4329, 0.694 ) }
    apic_15 { pt3dadd( 623.978, 332.203, 72.798, 0.7262 ) }
    apic_15 { pt3dadd( 625.086, 332.038, 73.0358, 0.6346 ) }
    apic_15 { pt3dadd( 626.148, 331.785, 73.3482, 0.513 ) }
    apic_15 { pt3dadd( 627.219, 331.738, 73.7324, 0.5132 ) }
    apic_15 { pt3dadd( 628.351, 331.607, 74.0438, 0.5606 ) }
    apic_15 { pt3dadd( 629.309, 330.991, 74.2787, 0.6496 ) }
    apic_15 { pt3dadd( 630.034, 330.108, 74.457, 0.5804 ) }
    apic_15 { pt3dadd( 631.054, 329.598, 74.5956, 0.673 ) }
    apic_15 { pt3dadd( 632.182, 329.41, 74.6925, 0.6884 ) }
    apic_15 { pt3dadd( 633.273, 329.064, 74.7807, 0.7876 ) }
    apic_15 { pt3dadd( 634.239, 328.484, 74.9428, 0.8596 ) }
    apic_15 { pt3dadd( 635.184, 327.842, 75.0831, 0.8488 ) }
    apic_15 { pt3dadd( 636.089, 327.15, 75.2612, 0.614 ) }
    apic_15 { pt3dadd( 637.094, 326.651, 75.5126, 0.535 ) }
    apic_15 { pt3dadd( 638.174, 326.284, 75.7305, 0.4896 ) }
    apic_15 { pt3dadd( 639.184, 325.875, 75.8881, 0.6004 ) }
    apic_15 { pt3dadd( 639.947, 325.203, 76.2544, 0.7748 ) }
    apic_15 { pt3dadd( 640.75, 324.445, 76.6822, 0.7918 ) }
    apic_15 { pt3dadd( 641.805, 324.036, 77.0997, 0.7068 ) }
    apic_15 { pt3dadd( 642.857, 323.733, 77.5642, 0.6584 ) }
    apic_15 { pt3dadd( 643.716, 323.053, 78.0906, 0.7248 ) }
    apic_15 { pt3dadd( 644.461, 322.246, 78.636, 0.7772 ) }
    apic_15 { pt3dadd( 645.112, 321.335, 79.123, 0.7604 ) }
    apic_15 { pt3dadd( 645.71, 320.417, 79.5746, 0.8248 ) }
    apic_15 { pt3dadd( 646.651, 319.795, 79.9254, 0.9356 ) }
    apic_15 { pt3dadd( 647.718, 319.405, 80.2124, 0.9562 ) }
    apic_15 { pt3dadd( 648.729, 318.929, 80.4709, 0.9754 ) }
    apic_15 { pt3dadd( 649.625, 318.238, 80.626, 1.1044 ) }
    apic_15 { pt3dadd( 650.37, 317.405, 80.6963, 1.1174 ) }
    apic_15 { pt3dadd( 650.911, 316.405, 80.7946, 1.0954 ) }
    apic_15 { pt3dadd( 651.333, 315.364, 80.9872, 1.0514 ) }
    apic_15 { pt3dadd( 651.935, 314.44, 81.2697, 0.9854 ) }
    apic_15 { pt3dadd( 652.75, 313.642, 81.5766, 1.0138 ) }
    apic_15 { pt3dadd( 653.614, 312.945, 81.9613, 1.0238 ) }
    apic_15 { pt3dadd( 654.458, 312.28, 82.4533, 1.0182 ) }
    apic_15 { pt3dadd( 655.197, 311.451, 82.9254, 0.8988 ) }
    apic_15 { pt3dadd( 655.793, 310.492, 83.279, 0.976 ) }
    apic_15 { pt3dadd( 656.214, 309.467, 83.629, 1.0424 ) }
    apic_15 { pt3dadd( 656.57, 308.452, 84.0918, 1.0814 ) }
    apic_15 { pt3dadd( 657.072, 307.491, 84.6098, 1.104 ) }
    apic_15 { pt3dadd( 657.745, 306.598, 85.1435, 0.928 ) }
    apic_15 { pt3dadd( 658.536, 305.8, 85.6615, 0.9734 ) }
    apic_15 { pt3dadd( 659.362, 305.016, 86.1344, 0.8552 ) }
    apic_15 { pt3dadd( 660.077, 304.153, 86.6141, 0.7038 ) }
    apic_15 { pt3dadd( 660.734, 303.286, 87.1497, 0.7812 ) }
    apic_15 { pt3dadd( 661.465, 302.54, 87.7671, 0.7878 ) }
    apic_15 { pt3dadd( 662.307, 301.848, 88.3935, 0.777 ) }
    apic_15 { pt3dadd( 663.156, 301.088, 88.9445, 0.64 ) }
    apic_15 { pt3dadd( 663.948, 300.264, 89.4211, 0.7268 ) }
    apic_15 { pt3dadd( 664.833, 299.564, 89.8632, 0.833 ) }
    apic_15 { pt3dadd( 665.734, 298.923, 90.3487, 0.8402 ) }
    apic_15 { pt3dadd( 666.672, 298.386, 90.9107, 0.629 ) }
    apic_15 { pt3dadd( 667.64, 298.017, 91.5855, 0.4126 ) }
    apic_15 { pt3dadd( 668.543, 297.449, 92.2939, 0.3046 ) }
    apic_15 { pt3dadd( 669.422, 296.747, 92.9664, 0.283 ) }
    apic_15 { pt3dadd( 670.299, 296.046, 93.5917, 0.2904 ) }
    apic_15 { pt3dadd( 671.179, 295.343, 94.1612, 0.3034 ) }
    apic_15 { pt3dadd( 672.039, 294.629, 94.687, 0.3302 ) }
    apic_15 { pt3dadd( 672.883, 293.903, 95.1824, 0.3672 ) }
    apic_15 { pt3dadd( 673.724, 293.177, 95.6522, 0.4972 ) }
    apic_15 { pt3dadd( 674.567, 292.451, 96.0924, 0.4416 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 69/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 531.747, 392.622, 52.9365, 1.058 ) }
    apic_8 { pt3dadd( 532.068, 392.022, 53.0942, 0.853 ) }
    apic_8 { pt3dadd( 532.468, 390.96, 53.2465, 0.7846 ) }
    apic_8 { pt3dadd( 532.875, 389.919, 53.433, 0.7466 ) }
    apic_8 { pt3dadd( 533.448, 388.951, 53.5797, 0.7026 ) }
    apic_8 { pt3dadd( 534.005, 387.967, 53.6186, 0.7212 ) }
    apic_8 { pt3dadd( 534.708, 387.091, 53.6418, 0.7288 ) }
    apic_8 { pt3dadd( 535.357, 386.26, 53.7933, 0.6436 ) }
    apic_8 { pt3dadd( 535.93, 385.348, 53.9006, 0.7386 ) }
    apic_8 { pt3dadd( 536.505, 384.417, 53.865, 0.831 ) }
    apic_8 { pt3dadd( 537.24, 383.565, 53.8219, 0.952 ) }
    apic_8 { pt3dadd( 538.034, 382.741, 53.825, 0.9618 ) }
    apic_8 { pt3dadd( 538.794, 381.889, 53.8765, 0.8768 ) }
    apic_8 { pt3dadd( 539.322, 380.958, 54.0714, 0.7644 ) }
    apic_8 { pt3dadd( 539.903, 380.064, 54.4121, 0.7932 ) }
    apic_8 { pt3dadd( 540.231, 378.998, 54.7196, 0.8404 ) }
    apic_8 { pt3dadd( 540.666, 377.971, 54.882, 0.9568 ) }
    apic_8 { pt3dadd( 541.192, 376.963, 54.9763, 0.8024 ) }
    apic_8 { pt3dadd( 541.779, 376.014, 55.1306, 0.7138 ) }
    apic_8 { pt3dadd( 542.635, 375.279, 55.2672, 0.7328 ) }
    apic_8 { pt3dadd( 543.481, 374.546, 55.323, 0.7932 ) }
    apic_8 { pt3dadd( 544.08, 373.618, 55.508, 0.7836 ) }
    apic_8 { pt3dadd( 544.781, 372.732, 55.7766, 0.899 ) }
    apic_8 { pt3dadd( 545.396, 371.808, 56.1327, 0.9246 ) }
    apic_8 { pt3dadd( 546.012, 370.852, 56.4858, 0.9698 ) }
    apic_8 { pt3dadd( 546.536, 369.837, 56.8168, 1.0646 ) }
    apic_8 { pt3dadd( 547.041, 368.852, 57.199, 1.1878 ) }
    apic_8 { pt3dadd( 547.564, 367.91, 57.6274, 1.2128 ) }
    apic_8 { pt3dadd( 548.25, 367.008, 57.9908, 1.102 ) }
    apic_8 { pt3dadd( 548.903, 366.097, 58.1818, 0.9754 ) }
    apic_8 { pt3dadd( 549.565, 365.177, 58.2789, 0.8126 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    apic_8 { pt3dadd( 550.21, 364.234, 58.3758, 0.6208 ) }
    apic_8 { pt3dadd( 550.966, 363.387, 58.5141, 0.6476 ) }
    apic_8 { pt3dadd( 551.773, 362.741, 58.8182, 0.6694 ) }
    apic_8 { pt3dadd( 552.654, 362.055, 59.1721, 0.6158 ) }
    apic_8 { pt3dadd( 553.172, 361.036, 59.4672, 0.5164 ) }
    apic_8 { pt3dadd( 554.062, 360.319, 59.6876, 0.561 ) }
    apic_8 { pt3dadd( 555.031, 359.712, 59.8296, 0.6762 ) }
    apic_8 { pt3dadd( 555.835, 358.9, 59.9026, 0.7328 ) }
    apic_8 { pt3dadd( 556.442, 357.93, 59.9222, 0.6834 ) }
    apic_8 { pt3dadd( 557.057, 356.966, 59.9242, 0.6558 ) }
    apic_8 { pt3dadd( 557.867, 356.16, 59.9259, 0.7512 ) }
    apic_8 { pt3dadd( 558.766, 355.456, 59.9281, 0.6746 ) }
    apic_8 { pt3dadd( 559.442, 354.533, 59.9315, 0.6186 ) }
    apic_8 { pt3dadd( 560.218, 353.693, 59.9362, 0.5534 ) }
    apic_8 { pt3dadd( 560.976, 352.836, 59.9427, 0.7034 ) }
    apic_8 { pt3dadd( 561.593, 351.873, 59.9516, 0.8118 ) }
    apic_8 { pt3dadd( 562.231, 350.923, 59.9642, 0.9214 ) }
    apic_8 { pt3dadd( 562.918, 350.008, 59.9816, 0.8808 ) }
    apic_8 { pt3dadd( 563.68, 349.159, 60.006, 0.845 ) }
    apic_8 { pt3dadd( 564.659, 348.572, 60.0407, 0.8164 ) }
    apic_8 { pt3dadd( 565.552, 347.858, 60.0897, 0.8086 ) }
    apic_8 { pt3dadd( 566.275, 346.972, 60.1558, 0.8024 ) }
    apic_8 { pt3dadd( 566.989, 346.079, 60.244, 0.752 ) }
    apic_8 { pt3dadd( 567.822, 345.303, 60.373, 0.847 ) }
    apic_8 { pt3dadd( 568.719, 344.641, 60.5948, 0.7966 ) }
    apic_8 { pt3dadd( 569.536, 343.85, 60.8283, 0.8854 ) }
    apic_8 { pt3dadd( 570.219, 342.932, 61.0344, 0.852 ) }
    apic_8 { pt3dadd( 571.015, 342.113, 61.222, 0.8378 ) }
    apic_8 { pt3dadd( 571.937, 341.437, 61.399, 0.8078 ) }
    apic_8 { pt3dadd( 572.779, 340.666, 61.5768, 0.7696 ) }
    apic_8 { pt3dadd( 573.515, 339.811, 61.7974, 0.8436 ) }
    apic_8 { pt3dadd( 574.159, 339.02, 62.1877, 0.965 ) }
    apic_8 { pt3dadd( 574.945, 338.232, 62.5982, 1.0354 ) }
    apic_8 { pt3dadd( 575.874, 337.564, 62.9264, 1.0032 ) }
    apic_8 { pt3dadd( 576.706, 336.78, 63.1798, 1.046 ) }
    apic_8 { pt3dadd( 577.516, 335.972, 63.3682, 1.087 ) }
    apic_8 { pt3dadd( 578.333, 335.17, 63.5037, 1.119 ) }
    apic_8 { pt3dadd( 579.171, 334.393, 63.6101, 1.164 ) }
    apic_8 { pt3dadd( 580.09, 333.757, 63.7521, 1.089 ) }
    apic_8 { pt3dadd( 581.182, 333.562, 63.9766, 1.03 ) }
    apic_8 { pt3dadd( 582.304, 333.411, 64.1724, 0.7632 ) }
    apic_8 { pt3dadd( 583.278, 332.839, 64.33, 0.5738 ) }
    apic_8 { pt3dadd( 583.956, 331.927, 64.4529, 0.573 ) }
    apic_8 { pt3dadd( 584.417, 330.884, 64.5523, 0.6994 ) }
    apic_8 { pt3dadd( 585.081, 329.975, 64.6629, 0.7706 ) }
    apic_8 { pt3dadd( 585.927, 329.254, 64.8049, 0.7792 ) }
    apic_8 { pt3dadd( 586.656, 328.394, 64.8544, 0.7086 ) }
    apic_8 { pt3dadd( 587.51, 327.663, 64.8679, 0.7706 ) }
    apic_8 { pt3dadd( 588.455, 327.075, 64.9348, 0.6326 ) }
    apic_8 { pt3dadd( 589.002, 326.127, 65.0882, 0.6912 ) }
    apic_8 { pt3dadd( 589.344, 325.064, 65.2109, 0.6456 ) }
    apic_8 { pt3dadd( 589.997, 324.158, 65.324, 0.8512 ) }
    apic_8 { pt3dadd( 590.68, 323.278, 65.5418, 0.9688 ) }
    apic_8 { pt3dadd( 591.387, 322.408, 65.802, 0.865 ) }
    apic_8 { pt3dadd( 591.784, 321.416, 66.1147, 0.6318 ) }
    apic_8 { pt3dadd( 591.872, 320.288, 66.3832, 0.6272 ) }
    apic_8 { pt3dadd( 592.276, 319.278, 66.5686, 0.601 ) }
    apic_8 { pt3dadd( 593.107, 318.515, 66.668, 0.6388 ) }
    apic_8 { pt3dadd( 594.01, 317.865, 66.7464, 0.5186 ) }
    apic_8 { pt3dadd( 594.767, 317.105, 66.9326, 0.5324 ) }
    apic_8 { pt3dadd( 595.268, 316.12, 67.1611, 0.5552 ) }
    apic_8 { pt3dadd( 595.82, 315.133, 67.3532, 0.6084 ) }
    apic_8 { pt3dadd( 596.617, 314.352, 67.4657, 0.6548 ) }
    apic_8 { pt3dadd( 597.487, 313.636, 67.5209, 0.7656 ) }
    apic_8 { pt3dadd( 598.271, 312.816, 67.6085, 0.8502 ) }
    apic_8 { pt3dadd( 598.938, 311.964, 67.8227, 0.9082 ) }
    apic_8 { pt3dadd( 599.71, 311.223, 68.1478, 1.0382 ) }
    apic_8 { pt3dadd( 600.581, 310.5, 68.4726, 0.9386 ) }
    apic_8 { pt3dadd( 601.306, 309.626, 68.7504, 1.0388 ) }
    apic_8 { pt3dadd( 601.896, 308.648, 68.9791, 0.983 ) }
    apic_8 { pt3dadd( 602.515, 307.695, 69.1821, 0.9084 ) }
    apic_8 { pt3dadd( 603.198, 306.8, 69.391, 0.6308 ) }
    apic_8 { pt3dadd( 604.038, 306.052, 69.5635, 0.5624 ) }
    apic_8 { pt3dadd( 604.88, 305.312, 69.6354, 0.5588 ) }
    apic_8 { pt3dadd( 605.555, 304.429, 69.7197, 0.6388 ) }
    apic_8 { pt3dadd( 606.138, 303.461, 69.853, 0.5962 ) }
    apic_8 { pt3dadd( 606.489, 302.388, 69.9793, 0.5274 ) }
    apic_8 { pt3dadd( 606.82, 301.296, 70.0885, 0.5814 ) }
    apic_8 { pt3dadd( 607.218, 300.223, 70.1977, 0.7146 ) }
    apic_8 { pt3dadd( 607.57, 299.149, 70.352, 0.8002 ) }
    apic_8 { pt3dadd( 607.604, 298.412, 70.572, 0.8282 ) }
    apic_8 { pt3dadd( 607.943, 297.616, 70.737, 0.8262 ) }
    apic_8 { pt3dadd( 608.499, 296.651, 70.7809, 0.8582 ) }
    apic_8 { pt3dadd( 609.202, 295.753, 70.8072, 0.7434 ) }
    apic_8 { pt3dadd( 609.856, 294.848, 70.9386, 0.6884 ) }
    apic_8 { pt3dadd( 610.58, 293.975, 71.1208, 0.7344 ) }
    apic_8 { pt3dadd( 611.369, 293.145, 71.3079, 0.79 ) }
    apic_8 { pt3dadd( 612.068, 292.243, 71.5296, 0.8084 ) }
    apic_8 { pt3dadd( 612.693, 291.321, 71.8491, 0.7956 ) }
    apic_8 { pt3dadd( 613.142, 290.274, 72.1003, 0.7694 ) }
    apic_8 { pt3dadd( 613.218, 289.233, 72.4889, 0.734 ) }
    apic_8 { pt3dadd( 612.997, 288.186, 72.9439, 0.605 ) }
    apic_8 { pt3dadd( 613.404, 287.133, 73.2586, 0.6724 ) }
    apic_8 { pt3dadd( 613.916, 286.129, 73.4698, 0.6806 ) }
    apic_8 { pt3dadd( 614.484, 285.145, 73.7173, 0.8066 ) }
    apic_8 { pt3dadd( 615.155, 284.243, 74.0415, 0.732 ) }
    apic_8 { pt3dadd( 615.728, 283.298, 74.4509, 0.716 ) }
    apic_8 { pt3dadd( 616.328, 282.38, 74.9605, 0.7798 ) }
    apic_8 { pt3dadd( 616.969, 281.46, 75.521, 0.901 ) }
    apic_8 { pt3dadd( 617.516, 280.457, 76.0449, 0.8828 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_8 { pt3dadd( 618.187, 279.55, 76.5666, 0.8844 ) }
    apic_8 { pt3dadd( 618.989, 278.834, 77.1795, 0.7152 ) }
    apic_8 { pt3dadd( 619.896, 278.276, 77.8674, 0.7804 ) }
    apic_8 { pt3dadd( 620.833, 277.842, 78.6282, 0.892 ) }
    apic_8 { pt3dadd( 621.747, 277.228, 79.3475, 0.9156 ) }
    apic_8 { pt3dadd( 622.541, 276.518, 80.0808, 0.9356 ) }
    apic_8 { pt3dadd( 623.291, 275.763, 80.7778, 0.859 ) }
    apic_8 { pt3dadd( 623.807, 274.82, 81.405, 0.8098 ) }
    apic_8 { pt3dadd( 624.033, 273.754, 81.891, 0.7246 ) }
    apic_8 { pt3dadd( 624.073, 272.67, 82.0929, 0.7656 ) }
    apic_8 { pt3dadd( 624.24, 271.615, 82.126, 0.7928 ) }
    apic_8 { pt3dadd( 624.789, 270.677, 82.1929, 0.85 ) }
    apic_8 { pt3dadd( 625.326, 269.729, 82.3049, 0.6962 ) }
    apic_8 { pt3dadd( 625.667, 268.736, 82.3012, 0.7568 ) }
    apic_8 { pt3dadd( 626.114, 267.754, 82.266, 0.7918 ) }
    apic_8 { pt3dadd( 626.357, 266.685, 82.3746, 1.0046 ) }
    apic_8 { pt3dadd( 626.556, 265.581, 82.5684, 1.138 ) }
    apic_8 { pt3dadd( 626.822, 264.5, 82.8318, 1.2812 ) }
    apic_8 { pt3dadd( 627.237, 263.457, 83.1174, 1.3658 ) }
    apic_8 { pt3dadd( 627.786, 262.454, 83.3846, 1.2562 ) }
    apic_8 { pt3dadd( 628.296, 261.431, 83.6192, 1.2022 ) }
    apic_8 { pt3dadd( 628.581, 260.333, 83.8228, 1.0644 ) }
    apic_8 { pt3dadd( 628.711, 259.197, 84.0308, 0.9898 ) }
    apic_8 { pt3dadd( 628.987, 258.117, 84.3116, 0.662 ) }
    apic_8 { pt3dadd( 629.31, 257.04, 84.6566, 0.5158 ) }
    apic_8 { pt3dadd( 629.463, 255.93, 85.0466, 0.5202 ) }
    apic_8 { pt3dadd( 629.742, 254.999, 85.5767, 0.7926 ) }
    apic_8 { pt3dadd( 630.174, 254.047, 86.1521, 0.9322 ) }
    apic_8 { pt3dadd( 630.51, 253.0, 86.5393, 0.9042 ) }
    apic_8 { pt3dadd( 631.057, 252.096, 86.6704, 0.8722 ) }
    apic_8 { pt3dadd( 631.697, 251.17, 86.7255, 0.7164 ) }
    apic_8 { pt3dadd( 632.28, 250.26, 86.8798, 0.6678 ) }
    apic_8 { pt3dadd( 632.904, 249.408, 87.141, 0.5548 ) }
    apic_8 { pt3dadd( 633.513, 248.465, 87.4062, 0.456 ) }
    apic_8 { pt3dadd( 633.729, 247.361, 87.579, 0.4224 ) }
    apic_8 { pt3dadd( 634.093, 246.3, 87.6347, 0.5484 ) }
    apic_8 { pt3dadd( 634.564, 245.261, 87.6688, 0.5546 ) }
    apic_8 { pt3dadd( 634.828, 244.165, 87.6114, 0.5258 ) }
    apic_8 { pt3dadd( 635.523, 243.496, 87.6064, 0.4392 ) }
    apic_8 { pt3dadd( 636.257, 242.701, 87.5286, 0.4398 ) }
    apic_8 { pt3dadd( 636.797, 241.711, 87.5745, 0.5746 ) }
    // Section: apic_19, id: apic_19, parent: apic_15 (entry count 41/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 674.567, 292.451, 96.0924, 0.4416 ) }
    apic_19 { pt3dadd( 675.378, 292.06, 98.2288, 0.2288 ) }
    apic_19 { pt3dadd( 676.357, 291.758, 99.9186, 0.2746 ) }
    apic_19 { pt3dadd( 677.377, 291.499, 100.636, 0.2746 ) }
    apic_19 { pt3dadd( 678.396, 291.241, 101.471, 0.2746 ) }
    apic_19 { pt3dadd( 679.417, 290.983, 102.375, 0.2748 ) }
    apic_19 { pt3dadd( 680.435, 290.725, 103.301, 0.2748 ) }
    apic_19 { pt3dadd( 681.456, 290.467, 104.214, 0.2752 ) }
    apic_19 { pt3dadd( 682.271, 290.861, 104.998, 0.2758 ) }
    apic_19 { pt3dadd( 682.914, 291.808, 105.614, 0.2766 ) }
    apic_19 { pt3dadd( 683.547, 292.751, 106.142, 0.2784 ) }
    apic_19 { pt3dadd( 684.161, 293.682, 106.691, 0.2822 ) }
    apic_19 { pt3dadd( 684.776, 294.613, 107.285, 0.288 ) }
    apic_19 { pt3dadd( 685.39, 295.544, 107.942, 0.3008 ) }
    apic_19 { pt3dadd( 686.004, 296.477, 108.68, 0.318 ) }
    apic_19 { pt3dadd( 686.617, 297.408, 109.496, 0.3808 ) }
    apic_19 { pt3dadd( 687.275, 297.082, 110.477, 0.3476 ) }
    apic_19 { pt3dadd( 687.943, 296.415, 111.6, 0.3248 ) }
    apic_19 { pt3dadd( 688.615, 295.747, 112.816, 0.3228 ) }
    apic_19 { pt3dadd( 689.284, 295.079, 114.078, 0.3538 ) }
    apic_19 { pt3dadd( 690.148, 294.808, 115.292, 0.4722 ) }
    apic_19 { pt3dadd( 691.231, 294.984, 116.379, 0.3934 ) }
    apic_19 { pt3dadd( 692.315, 295.16, 117.343, 0.3256 ) }
    apic_19 { pt3dadd( 693.398, 295.335, 118.206, 0.2748 ) }
    apic_19 { pt3dadd( 694.481, 295.511, 118.994, 0.2748 ) }
    apic_19 { pt3dadd( 695.565, 295.687, 119.726, 0.2752 ) }
    apic_19 { pt3dadd( 696.646, 295.862, 120.418, 0.2758 ) }
    apic_19 { pt3dadd( 697.729, 296.039, 121.076, 0.2766 ) }
    apic_19 { pt3dadd( 698.812, 296.215, 121.699, 0.2784 ) }
    apic_19 { pt3dadd( 699.753, 295.645, 122.189, 0.2818 ) }
    apic_19 { pt3dadd( 700.669, 294.961, 122.568, 0.2882 ) }
    apic_19 { pt3dadd( 701.588, 294.277, 122.875, 0.2994 ) }
    apic_19 { pt3dadd( 702.504, 293.598, 123.145, 0.3228 ) }
    apic_19 { pt3dadd( 703.447, 294.159, 123.52, 0.3538 ) }
    apic_19 { pt3dadd( 704.388, 294.718, 123.984, 0.4722 ) }
    apic_19 { pt3dadd( 705.331, 295.279, 124.522, 0.3934 ) }
    apic_19 { pt3dadd( 706.271, 295.838, 125.105, 0.3254 ) }
    apic_19 { pt3dadd( 707.356, 296.127, 125.617, 0.2746 ) }
    apic_19 { pt3dadd( 708.482, 296.332, 126.04, 0.2746 ) }
    apic_19 { pt3dadd( 709.607, 296.536, 126.388, 0.2748 ) }
    apic_19 { pt3dadd( 710.708, 296.655, 126.768, 0.2748 ) }
    apic_19 { pt3dadd( 711.796, 296.718, 127.228, 0.275 ) }
    apic_19 { pt3dadd( 712.883, 296.782, 127.753, 0.2754 ) }
    apic_19 { pt3dadd( 713.969, 296.845, 128.325, 0.2764 ) }
    apic_19 { pt3dadd( 715.072, 297.044, 128.838, 0.278 ) }
    apic_19 { pt3dadd( 716.182, 297.318, 129.251, 0.281 ) }
    apic_19 { pt3dadd( 717.294, 297.59, 129.604, 0.2862 ) }
    apic_19 { pt3dadd( 718.239, 298.204, 129.911, 0.2966 ) }
    apic_19 { pt3dadd( 719.138, 298.911, 130.191, 0.3134 ) }
    apic_19 { pt3dadd( 720.055, 299.447, 130.542, 0.356 ) }
    apic_19 { pt3dadd( 721.004, 299.721, 131.076, 0.3814 ) }
    apic_19 { pt3dadd( 721.951, 299.995, 132.651, 0.6864 ) }
    // Section: apic_16, id: apic_16, parent: apic_15 (entry count 93/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 674.567, 292.451, 96.0924, 0.4416 ) }
    apic_16 { pt3dadd( 674.802, 292.274, 96.3987, 0.4046 ) }
    apic_16 { pt3dadd( 675.716, 291.587, 96.5938, 0.4724 ) }
    apic_16 { pt3dadd( 676.633, 290.901, 96.6997, 0.3936 ) }
    apic_16 { pt3dadd( 677.547, 290.213, 96.7372, 0.326 ) }
    apic_16 { pt3dadd( 678.503, 289.6, 96.7285, 0.2758 ) }
    apic_16 { pt3dadd( 679.576, 289.204, 96.6918, 0.2766 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    apic_16 { pt3dadd( 680.648, 288.807, 96.6372, 0.2782 ) }
    apic_16 { pt3dadd( 681.721, 288.412, 96.5594, 0.2814 ) }
    apic_16 { pt3dadd( 682.794, 288.015, 96.455, 0.2872 ) }
    apic_16 { pt3dadd( 683.874, 287.635, 96.3228, 0.2988 ) }
    apic_16 { pt3dadd( 684.953, 287.256, 96.1657, 0.3144 ) }
    // Section: apic_12, id: apic_12, parent: apic_8 (entry count 5/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 636.797, 241.711, 87.5745, 0.5746 ) }
    apic_12 { pt3dadd( 636.539, 240.742, 87.8786, 0.6336 ) }
    apic_12 { pt3dadd( 636.406, 239.706, 88.3291, 0.5238 ) }
    apic_12 { pt3dadd( 636.411, 238.569, 88.734, 0.4704 ) }
    apic_12 { pt3dadd( 636.432, 237.459, 88.9694, 0.5556 ) }
    apic_12 { pt3dadd( 636.556, 236.33, 89.1688, 0.7376 ) }
    apic_12 { pt3dadd( 636.929, 235.286, 89.4149, 0.7274 ) }
    apic_12 { pt3dadd( 637.294, 234.303, 89.7134, 0.5678 ) }
    apic_12 { pt3dadd( 637.15, 233.171, 89.9676, 0.4944 ) }
    apic_12 { pt3dadd( 637.062, 232.034, 90.188, 0.654 ) }
    apic_12 { pt3dadd( 637.062, 230.89, 90.3571, 0.6572 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 16/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 636.797, 241.711, 87.5745, 0.5746 ) }
    apic_9 { pt3dadd( 637.786, 240.881, 85.4661, 0.2288 ) }
    apic_9 { pt3dadd( 638.629, 240.116, 85.4627, 0.2762 ) }
    apic_9 { pt3dadd( 639.083, 239.082, 85.4613, 0.2776 ) }
    apic_9 { pt3dadd( 640.034, 238.478, 85.4596, 0.2798 ) }
    apic_9 { pt3dadd( 641.044, 237.941, 85.4571, 0.2844 ) }
    apic_9 { pt3dadd( 642.003, 237.317, 85.4535, 0.2928 ) }
    apic_9 { pt3dadd( 642.885, 236.608, 85.4484, 0.3082 ) }
    apic_9 { pt3dadd( 643.247, 235.579, 85.4412, 0.3388 ) }
    apic_9 { pt3dadd( 643.648, 234.53, 85.4314, 0.3844 ) }
    apic_9 { pt3dadd( 644.453, 233.885, 85.4174, 0.524 ) }
    apic_9 { pt3dadd( 644.931, 232.936, 85.398, 0.5144 ) }
    apic_9 { pt3dadd( 645.2, 231.826, 85.3714, 0.427 ) }
    apic_9 { pt3dadd( 645.301, 230.692, 85.3345, 0.373 ) }
    apic_9 { pt3dadd( 645.301, 229.548, 85.2796, 0.436 ) }
    apic_9 { pt3dadd( 645.405, 228.419, 85.2029, 0.4458 ) }
    apic_9 { pt3dadd( 646.153, 227.558, 85.1015, 0.5294 ) }
    apic_9 { pt3dadd( 646.656, 226.533, 84.985, 0.5926 ) }
    // Section: apic_18, id: apic_18, parent: apic_16 (entry count 34/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 684.953, 287.256, 96.1657, 0.3144 ) }
    apic_18 { pt3dadd( 685.521, 287.158, 96.824, 0.2288 ) }
    apic_18 { pt3dadd( 686.648, 286.961, 97.1936, 0.2746 ) }
    apic_18 { pt3dadd( 687.552, 286.436, 97.3364, 0.2746 ) }
    apic_18 { pt3dadd( 688.158, 285.467, 97.5271, 0.2746 ) }
    apic_18 { pt3dadd( 688.45, 284.445, 97.8552, 0.2746 ) }
    apic_18 { pt3dadd( 688.693, 283.436, 98.3035, 0.2748 ) }
    apic_18 { pt3dadd( 689.633, 282.785, 98.6992, 0.2748 ) }
    apic_18 { pt3dadd( 690.573, 282.134, 99.0492, 0.2752 ) }
    apic_18 { pt3dadd( 691.487, 281.45, 99.3572, 0.2758 ) }
    apic_18 { pt3dadd( 692.325, 280.671, 99.6226, 0.2766 ) }
    apic_18 { pt3dadd( 693.002, 279.795, 99.9205, 0.2782 ) }
    apic_18 { pt3dadd( 693.552, 278.842, 100.308, 0.2814 ) }
    apic_18 { pt3dadd( 693.898, 277.8, 100.755, 0.287 ) }
    apic_18 { pt3dadd( 694.057, 276.679, 101.217, 0.2988 ) }
    apic_18 { pt3dadd( 694.432, 275.617, 101.653, 0.3142 ) }
    apic_18 { pt3dadd( 694.74, 274.541, 102.125, 0.3734 ) }
    apic_18 { pt3dadd( 695.046, 273.465, 102.613, 0.3338 ) }
    apic_18 { pt3dadd( 695.354, 272.389, 103.108, 0.3 ) }
    apic_18 { pt3dadd( 695.664, 271.313, 103.609, 0.2746 ) }
    apic_18 { pt3dadd( 696.034, 270.259, 104.11, 0.2746 ) }
    apic_18 { pt3dadd( 696.403, 269.204, 104.595, 0.2746 ) }
    apic_18 { pt3dadd( 696.773, 268.149, 105.047, 0.2746 ) }
    apic_18 { pt3dadd( 697.185, 267.109, 105.444, 0.2746 ) }
    apic_18 { pt3dadd( 697.784, 266.134, 105.716, 0.2746 ) }
    apic_18 { pt3dadd( 698.383, 265.16, 105.89, 0.2746 ) }
    apic_18 { pt3dadd( 698.982, 264.185, 105.988, 0.2746 ) }
    apic_18 { pt3dadd( 699.585, 263.213, 106.034, 0.2746 ) }
    apic_18 { pt3dadd( 700.214, 262.257, 106.049, 0.2746 ) }
    apic_18 { pt3dadd( 700.843, 261.302, 106.05, 0.2746 ) }
    apic_18 { pt3dadd( 701.471, 260.346, 106.052, 0.2746 ) }
    apic_18 { pt3dadd( 702.09, 259.385, 106.055, 0.2746 ) }
    apic_18 { pt3dadd( 702.543, 258.335, 106.059, 0.2746 ) }
    apic_18 { pt3dadd( 702.995, 257.284, 106.064, 0.2746 ) }
    apic_18 { pt3dadd( 703.45, 256.233, 106.072, 0.2746 ) }
    apic_18 { pt3dadd( 703.903, 255.183, 106.082, 0.2746 ) }
    apic_18 { pt3dadd( 704.471, 254.193, 106.097, 0.2746 ) }
    apic_18 { pt3dadd( 705.07, 253.219, 106.118, 0.2746 ) }
    apic_18 { pt3dadd( 705.672, 252.244, 106.147, 0.2746 ) }
    apic_18 { pt3dadd( 706.271, 251.27, 106.186, 0.2746 ) }
    apic_18 { pt3dadd( 706.997, 250.393, 106.243, 0.2746 ) }
    apic_18 { pt3dadd( 707.773, 249.553, 106.325, 0.2746 ) }
    apic_18 { pt3dadd( 708.422, 248.611, 106.437, 0.2746 ) }
    apic_18 { pt3dadd( 709.161, 247.764, 106.584, 0.2746 ) }
    apic_18 { pt3dadd( 710.13, 247.159, 106.764, 0.2746 ) }
    apic_18 { pt3dadd( 710.844, 246.67, 107.129, 0.2746 ) }
    apic_18 { pt3dadd( 711.427, 246.219, 107.676, 0.2746 ) }
    apic_18 { pt3dadd( 712.273, 245.474, 108.077, 0.2746 ) }
    apic_18 { pt3dadd( 713.078, 244.726, 108.29, 0.2746 ) }
    apic_18 { pt3dadd( 713.338, 243.919, 107.999, 0.2746 ) }
    apic_18 { pt3dadd( 713.596, 243.113, 107.323, 0.2746 ) }
    apic_18 { pt3dadd( 713.854, 242.307, 106.378, 0.2746 ) }
    apic_18 { pt3dadd( 714.055, 241.328, 105.435, 0.2746 ) }
    apic_18 { pt3dadd( 714.203, 240.194, 104.707, 0.2746 ) }
    apic_18 { pt3dadd( 714.456, 239.086, 104.201, 0.2746 ) }
    apic_18 { pt3dadd( 714.835, 238.006, 103.919, 0.2746 ) }
    apic_18 { pt3dadd( 715.443, 237.064, 103.789, 0.2746 ) }
    apic_18 { pt3dadd( 716.221, 236.226, 103.749, 0.2746 ) }
    apic_18 { pt3dadd( 716.943, 235.34, 103.742, 0.2746 ) }
    apic_18 { pt3dadd( 717.616, 234.415, 103.74, 0.2744 ) }
    apic_18 { pt3dadd( 718.273, 233.479, 103.74, 0.2744 ) }
    apic_18 { pt3dadd( 718.932, 232.543, 103.74, 0.2742 ) }
    apic_18 { pt3dadd( 719.59, 231.607, 103.74, 0.2736 ) }
    apic_18 { pt3dadd( 720.331, 230.74, 103.74, 0.2728 ) }
    apic_18 { pt3dadd( 721.109, 229.9, 103.74, 0.2712 ) }
    apic_18 { pt3dadd( 721.689, 228.914, 103.74, 0.2684 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    apic_18 { pt3dadd( 722.099, 227.889, 103.74, 0.2626 ) }
    apic_18 { pt3dadd( 722.0, 226.75, 103.74, 0.2542 ) }
    apic_18 { pt3dadd( 721.82, 225.633, 103.74, 0.2288 ) }
    apic_18 { pt3dadd( 721.309, 224.609, 103.74, 0.2288 ) }
    // Section: apic_17, id: apic_17, parent: apic_16 (entry count 4/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 684.953, 287.256, 96.1657, 0.3144 ) }
    apic_17 { pt3dadd( 685.484, 287.602, 95.716, 0.3738 ) }
    apic_17 { pt3dadd( 686.489, 287.716, 95.3425, 0.3348 ) }
    apic_17 { pt3dadd( 687.201, 287.945, 94.9617, 0.3014 ) }
    apic_17 { pt3dadd( 687.701, 287.945, 94.6758, 0.2774 ) }
    apic_17 { pt3dadd( 688.844, 287.945, 94.4776, 0.2796 ) }
    apic_17 { pt3dadd( 689.989, 287.945, 94.3592, 0.2838 ) }
    apic_17 { pt3dadd( 691.133, 287.945, 94.3121, 0.2914 ) }
    apic_17 { pt3dadd( 692.268, 287.945, 94.2452, 0.3056 ) }
    apic_17 { pt3dadd( 693.413, 287.945, 94.2054, 0.3342 ) }
    apic_17 { pt3dadd( 694.557, 287.945, 94.1808, 0.375 ) }
    apic_17 { pt3dadd( 695.701, 287.945, 94.1724, 0.5112 ) }
    apic_17 { pt3dadd( 696.844, 287.966, 94.1822, 0.4684 ) }
    apic_17 { pt3dadd( 697.982, 288.02, 94.2127, 0.4492 ) }
    apic_17 { pt3dadd( 699.127, 288.02, 94.262, 0.5804 ) }
    apic_17 { pt3dadd( 700.271, 288.02, 94.3314, 0.47 ) }
    apic_17 { pt3dadd( 701.414, 288.02, 94.4297, 0.3826 ) }
    apic_17 { pt3dadd( 702.559, 288.02, 94.5633, 0.3354 ) }
    apic_17 { pt3dadd( 703.703, 288.02, 94.7341, 0.3778 ) }
    apic_17 { pt3dadd( 704.83, 288.174, 94.9399, 0.5118 ) }
    apic_17 { pt3dadd( 706.278, 288.45, 95.4044, 0.4922 ) }
    apic_17 { pt3dadd( 707.293, 288.675, 95.9778, 0.3848 ) }
    apic_17 { pt3dadd( 708.299, 288.937, 96.5331, 0.3002 ) }
    apic_17 { pt3dadd( 709.443, 288.937, 96.9511, 0.2748 ) }
    apic_17 { pt3dadd( 710.588, 288.937, 97.2415, 0.2752 ) }
    apic_17 { pt3dadd( 711.732, 288.937, 97.4159, 0.2758 ) }
    apic_17 { pt3dadd( 712.875, 288.937, 97.4865, 0.2766 ) }
    apic_17 { pt3dadd( 714.02, 288.937, 97.5044, 0.2786 ) }
    apic_17 { pt3dadd( 715.164, 288.937, 97.5044, 0.2822 ) }
    apic_17 { pt3dadd( 716.307, 288.937, 97.5044, 0.2882 ) }
    apic_17 { pt3dadd( 717.452, 288.937, 97.5044, 0.3004 ) }
    apic_17 { pt3dadd( 718.596, 288.937, 97.5044, 0.322 ) }
    apic_17 { pt3dadd( 719.74, 288.937, 97.5044, 0.3644 ) }
    apic_17 { pt3dadd( 720.883, 288.937, 97.5047, 0.4302 ) }
    apic_17 { pt3dadd( 722.028, 288.937, 97.5047, 0.6178 ) }
    apic_17 { pt3dadd( 723.172, 288.937, 97.5047, 0.645 ) }
    apic_17 { pt3dadd( 724.315, 288.937, 97.5047, 0.8784 ) }
    apic_17 { pt3dadd( 725.46, 288.937, 97.505, 0.8822 ) }
    apic_17 { pt3dadd( 726.604, 288.937, 97.5052, 0.6826 ) }
    apic_17 { pt3dadd( 727.747, 288.937, 97.5055, 0.6292 ) }
    apic_17 { pt3dadd( 728.892, 288.937, 97.5058, 0.594 ) }
    apic_17 { pt3dadd( 730.036, 288.937, 97.5066, 0.4498 ) }
    apic_17 { pt3dadd( 731.164, 289.104, 97.5075, 0.3358 ) }
    apic_17 { pt3dadd( 732.294, 289.292, 97.5086, 0.2942 ) }
    apic_17 { pt3dadd( 733.429, 289.394, 97.5103, 0.3108 ) }
    apic_17 { pt3dadd( 734.573, 289.394, 97.5125, 0.3426 ) }
    apic_17 { pt3dadd( 735.716, 289.394, 97.5159, 0.397 ) }
    apic_17 { pt3dadd( 736.848, 289.533, 97.5204, 0.5184 ) }
    apic_17 { pt3dadd( 737.973, 289.746, 97.5268, 0.6434 ) }
    apic_17 { pt3dadd( 739.08, 290.012, 97.5358, 0.6778 ) }
    apic_17 { pt3dadd( 740.143, 290.438, 97.5481, 0.5546 ) }
    apic_17 { pt3dadd( 741.206, 290.856, 97.5652, 0.5462 ) }
    apic_17 { pt3dadd( 742.289, 291.225, 97.5895, 0.6068 ) }
    apic_17 { pt3dadd( 743.372, 291.594, 97.6251, 0.5782 ) }
    apic_17 { pt3dadd( 744.51, 291.65, 97.6732, 0.5224 ) }
    apic_17 { pt3dadd( 745.655, 291.668, 97.734, 0.4328 ) }
    apic_17 { pt3dadd( 746.793, 291.711, 97.8166, 0.4284 ) }
    apic_17 { pt3dadd( 747.898, 291.903, 97.9812, 0.553 ) }
    apic_17 { pt3dadd( 749.005, 292.092, 98.1982, 0.5938 ) }
    apic_17 { pt3dadd( 750.148, 292.13, 98.3676, 0.4494 ) }
    apic_17 { pt3dadd( 751.293, 292.166, 98.492, 0.3352 ) }
    apic_17 { pt3dadd( 752.432, 292.251, 98.5746, 0.2926 ) }
    apic_17 { pt3dadd( 753.56, 292.44, 98.6196, 0.3094 ) }
    apic_17 { pt3dadd( 754.689, 292.627, 98.6325, 0.3334 ) }
    apic_17 { pt3dadd( 755.82, 292.795, 98.6303, 0.41 ) }
    apic_17 { pt3dadd( 756.953, 292.959, 98.6269, 0.3976 ) }
    apic_17 { pt3dadd( 758.086, 293.105, 98.6227, 0.4384 ) }
    apic_17 { pt3dadd( 759.224, 293.225, 98.6166, 0.4328 ) }
    apic_17 { pt3dadd( 760.362, 293.346, 98.6079, 0.3594 ) }
    apic_17 { pt3dadd( 761.435, 293.727, 98.5958, 0.3002 ) }
    apic_17 { pt3dadd( 762.497, 294.152, 98.5793, 0.2748 ) }
    apic_17 { pt3dadd( 763.615, 294.319, 98.5558, 0.275 ) }
    apic_17 { pt3dadd( 764.758, 294.376, 98.5214, 0.2754 ) }
    apic_17 { pt3dadd( 765.898, 294.446, 98.474, 0.2762 ) }
    apic_17 { pt3dadd( 766.919, 294.957, 98.4138, 0.2776 ) }
    apic_17 { pt3dadd( 767.943, 295.47, 98.3416, 0.2802 ) }
    apic_17 { pt3dadd( 768.984, 295.877, 98.1798, 0.285 ) }
    apic_17 { pt3dadd( 770.033, 296.263, 97.9555, 0.2938 ) }
    apic_17 { pt3dadd( 771.177, 296.263, 97.7785, 0.3112 ) }
    apic_17 { pt3dadd( 772.312, 296.383, 97.6458, 0.3384 ) }
    apic_17 { pt3dadd( 773.335, 296.859, 97.5534, 0.413 ) }
    apic_17 { pt3dadd( 774.025, 297.757, 97.4971, 0.4328 ) }
    apic_17 { pt3dadd( 774.966, 298.34, 97.4725, 0.3594 ) }
    apic_17 { pt3dadd( 776.067, 298.655, 97.4593, 0.3004 ) }
    apic_17 { pt3dadd( 777.155, 299.0, 97.4403, 0.2752 ) }
    apic_17 { pt3dadd( 778.192, 299.483, 97.4154, 0.2758 ) }
    apic_17 { pt3dadd( 779.236, 299.949, 97.3843, 0.2766 ) }
    apic_17 { pt3dadd( 780.344, 300.227, 97.347, 0.2784 ) }
    apic_17 { pt3dadd( 780.885, 300.82, 97.228, 0.2816 ) }
    apic_17 { pt3dadd( 781.666, 301.552, 97.148, 0.2876 ) }
    apic_17 { pt3dadd( 782.289, 302.473, 97.0746, 0.3 ) }
    apic_17 { pt3dadd( 783.068, 303.295, 97.0026, 0.3164 ) }
    apic_17 { pt3dadd( 783.763, 304.187, 96.9394, 0.3776 ) }
    apic_17 { pt3dadd( 784.098, 305.268, 96.8752, 0.3418 ) }
    apic_17 { pt3dadd( 784.53, 305.933, 96.6336, 0.3134 ) }
    apic_17 { pt3dadd( 784.739, 307.043, 96.4547, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    apic_17 { pt3dadd( 785.583, 307.617, 96.3376, 0.305 ) }
    apic_17 { pt3dadd( 786.385, 308.079, 96.6, 0.4576 ) }
    // Section: apic_14, id: apic_14, parent: apic_12 (entry count 2/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 637.062, 230.89, 90.3571, 0.6572 ) }
    apic_14 { pt3dadd( 637.429, 231.638, 90.2899, 0.6864 ) }
    apic_14 { pt3dadd( 638.503, 231.334, 91.1666, 0.491 ) }
    apic_14 { pt3dadd( 639.577, 231.03, 91.5558, 0.4376 ) }
    apic_14 { pt3dadd( 640.646, 230.658, 91.9794, 0.3596 ) }
    apic_14 { pt3dadd( 641.635, 230.105, 92.4076, 0.3426 ) }
    apic_14 { pt3dadd( 642.581, 229.612, 92.8922, 0.3792 ) }
    apic_14 { pt3dadd( 643.646, 229.796, 93.5446, 0.3444 ) }
    apic_14 { pt3dadd( 644.573, 229.437, 94.2665, 0.3192 ) }
    apic_14 { pt3dadd( 645.352, 228.699, 95.0608, 0.3112 ) }
    apic_14 { pt3dadd( 645.939, 228.278, 96.1887, 0.3382 ) }
    apic_14 { pt3dadd( 646.526, 227.857, 97.5551, 0.413 ) }
    apic_14 { pt3dadd( 647.236, 227.576, 99.0357, 0.4326 ) }
    apic_14 { pt3dadd( 648.182, 227.566, 100.502, 0.3592 ) }
    apic_14 { pt3dadd( 649.156, 227.762, 101.839, 0.3 ) }
    apic_14 { pt3dadd( 649.93, 227.891, 102.971, 0.2746 ) }
    apic_14 { pt3dadd( 650.968, 227.832, 104.01, 0.2746 ) }
    apic_14 { pt3dadd( 652.005, 227.774, 104.983, 0.2748 ) }
    apic_14 { pt3dadd( 653.023, 227.598, 105.9, 0.2748 ) }
    apic_14 { pt3dadd( 653.961, 226.979, 106.71, 0.275 ) }
    apic_14 { pt3dadd( 654.901, 226.36, 107.457, 0.2752 ) }
    apic_14 { pt3dadd( 655.839, 225.741, 108.168, 0.276 ) }
    apic_14 { pt3dadd( 656.778, 225.122, 108.857, 0.2774 ) }
    apic_14 { pt3dadd( 657.718, 224.503, 109.554, 0.2794 ) }
    apic_14 { pt3dadd( 658.656, 223.884, 110.286, 0.2838 ) }
    apic_14 { pt3dadd( 659.486, 223.326, 111.17, 0.2914 ) }
    apic_14 { pt3dadd( 660.257, 222.802, 112.224, 0.3054 ) }
    apic_14 { pt3dadd( 660.885, 222.076, 113.364, 0.3338 ) }
    apic_14 { pt3dadd( 661.405, 221.197, 114.527, 0.3738 ) }
    apic_14 { pt3dadd( 661.922, 220.318, 115.683, 0.511 ) }
    apic_14 { pt3dadd( 662.159, 219.257, 116.743, 0.4594 ) }
    apic_14 { pt3dadd( 662.365, 218.176, 117.701, 0.4746 ) }
    apic_14 { pt3dadd( 662.57, 217.095, 118.577, 0.4226 ) }
    apic_14 { pt3dadd( 662.775, 216.014, 119.395, 0.4866 ) }
    apic_14 { pt3dadd( 663.219, 215.078, 120.198, 0.5118 ) }
    apic_14 { pt3dadd( 663.914, 214.294, 121.011, 0.5568 ) }
    apic_14 { pt3dadd( 664.609, 213.512, 121.831, 0.4184 ) }
    apic_14 { pt3dadd( 664.896, 212.552, 122.563, 0.3254 ) }
    apic_14 { pt3dadd( 664.749, 211.418, 123.143, 0.2744 ) }
    apic_14 { pt3dadd( 664.52, 210.297, 123.616, 0.2742 ) }
    apic_14 { pt3dadd( 664.258, 209.196, 124.03, 0.2736 ) }
    apic_14 { pt3dadd( 663.542, 208.375, 124.539, 0.2728 ) }
    apic_14 { pt3dadd( 662.823, 207.555, 125.161, 0.2712 ) }
    apic_14 { pt3dadd( 662.106, 206.734, 125.873, 0.2684 ) }
    apic_14 { pt3dadd( 661.427, 205.896, 126.64, 0.2626 ) }
    apic_14 { pt3dadd( 661.198, 204.869, 127.45, 0.2542 ) }
    apic_14 { pt3dadd( 660.966, 203.841, 128.249, 0.2288 ) }
    apic_14 { pt3dadd( 660.737, 202.814, 129.886, 0.2288 ) }
    // Section: apic_13, id: apic_13, parent: apic_12 (entry count 50/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 637.062, 230.89, 90.3571, 0.6572 ) }
    apic_13 { pt3dadd( 637.062, 229.788, 90.4624, 0.482 ) }
    apic_13 { pt3dadd( 637.062, 228.644, 90.5103, 0.3498 ) }
    apic_13 { pt3dadd( 637.062, 227.5, 90.5232, 0.3146 ) }
    apic_13 { pt3dadd( 637.062, 226.356, 90.5265, 0.374 ) }
    apic_13 { pt3dadd( 637.062, 225.212, 90.5265, 0.3352 ) }
    apic_13 { pt3dadd( 637.062, 224.068, 90.5265, 0.3028 ) }
    apic_13 { pt3dadd( 637.062, 222.924, 90.5268, 0.2794 ) }
    apic_13 { pt3dadd( 637.062, 221.78, 90.5268, 0.2838 ) }
    apic_13 { pt3dadd( 637.062, 220.636, 90.5268, 0.2912 ) }
    apic_13 { pt3dadd( 637.062, 219.492, 90.5268, 0.3056 ) }
    apic_13 { pt3dadd( 637.062, 218.348, 90.5271, 0.3318 ) }
    apic_13 { pt3dadd( 637.062, 217.204, 90.5274, 0.3836 ) }
    apic_13 { pt3dadd( 637.062, 216.06, 90.5276, 0.463 ) }
    apic_13 { pt3dadd( 636.659, 215.035, 90.5279, 0.6912 ) }
    apic_13 { pt3dadd( 635.914, 214.178, 90.5288, 0.7204 ) }
    apic_13 { pt3dadd( 635.458, 213.141, 90.5296, 0.6276 ) }
    apic_13 { pt3dadd( 635.44, 211.998, 90.5307, 0.4836 ) }
    apic_13 { pt3dadd( 635.081, 210.932, 90.5324, 0.5356 ) }
    apic_13 { pt3dadd( 634.799, 209.833, 90.5346, 0.4592 ) }
    apic_13 { pt3dadd( 634.643, 208.7, 90.5377, 0.4682 ) }
    apic_13 { pt3dadd( 634.546, 207.561, 90.5425, 0.4406 ) }
    apic_13 { pt3dadd( 634.546, 206.417, 90.5486, 0.374 ) }
    apic_13 { pt3dadd( 634.546, 205.273, 90.5576, 0.327 ) }
    apic_13 { pt3dadd( 634.546, 204.128, 90.5699, 0.3264 ) }
    apic_13 { pt3dadd( 634.546, 202.984, 90.5873, 0.3606 ) }
    apic_13 { pt3dadd( 634.546, 201.84, 90.6108, 0.4848 ) }
    apic_13 { pt3dadd( 634.546, 200.697, 90.6441, 0.4176 ) }
    apic_13 { pt3dadd( 634.546, 199.553, 90.6931, 0.3652 ) }
    apic_13 { pt3dadd( 634.546, 198.408, 90.7612, 0.3738 ) }
    apic_13 { pt3dadd( 634.546, 197.264, 90.8496, 0.3348 ) }
    apic_13 { pt3dadd( 634.546, 196.12, 90.9577, 0.3016 ) }
    apic_13 { pt3dadd( 634.556, 195.221, 91.1585, 0.2774 ) }
    apic_13 { pt3dadd( 635.033, 194.893, 91.5034, 0.2798 ) }
    apic_13 { pt3dadd( 635.242, 193.774, 91.7882, 0.2842 ) }
    apic_13 { pt3dadd( 635.276, 192.632, 92.0186, 0.2924 ) }
    apic_13 { pt3dadd( 635.367, 191.492, 92.209, 0.3086 ) }
    apic_13 { pt3dadd( 635.378, 190.348, 92.3698, 0.3322 ) }
    apic_13 { pt3dadd( 635.378, 189.204, 92.5092, 0.4082 ) }
    apic_13 { pt3dadd( 635.378, 188.06, 92.6456, 0.393 ) }
    apic_13 { pt3dadd( 635.378, 186.916, 92.8052, 0.435 ) }
    apic_13 { pt3dadd( 635.262, 186.695, 93.3038, 0.402 ) }
    apic_13 { pt3dadd( 635.148, 185.56, 93.711, 0.4212 ) }
    apic_13 { pt3dadd( 634.825, 184.492, 94.033, 0.524 ) }
    apic_13 { pt3dadd( 634.581, 183.393, 94.2766, 0.6174 ) }
    apic_13 { pt3dadd( 633.956, 182.438, 94.4496, 0.8042 ) }
    apic_13 { pt3dadd( 633.432, 181.501, 94.5602, 0.6258 ) }
    apic_13 { pt3dadd( 633.318, 180.397, 94.696, 0.5552 ) }
    apic_13 { pt3dadd( 633.318, 179.253, 94.8122, 0.5336 ) }
    apic_13 { pt3dadd( 633.318, 178.109, 94.911, 0.4224 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    apic_13 { pt3dadd( 633.318, 176.976, 95.0261, 0.3324 ) }
    apic_13 { pt3dadd( 632.745, 176.157, 95.0947, 0.2876 ) }
    apic_13 { pt3dadd( 632.541, 175.043, 95.1644, 0.2986 ) }
    apic_13 { pt3dadd( 632.403, 173.915, 95.2417, 0.32 ) }
    apic_13 { pt3dadd( 632.403, 172.771, 95.3484, 0.3548 ) }
    apic_13 { pt3dadd( 632.403, 171.628, 95.4881, 0.4436 ) }
    apic_13 { pt3dadd( 632.403, 170.565, 95.7852, 0.49 ) }
    apic_13 { pt3dadd( 632.403, 169.447, 96.1218, 0.4626 ) }
    apic_13 { pt3dadd( 632.289, 168.32, 96.4541, 0.5062 ) }
    apic_13 { pt3dadd( 632.632, 167.367, 96.9508, 0.586 ) }
    apic_13 { pt3dadd( 632.741, 166.705, 97.3636, 0.5088 ) }
    apic_13 { pt3dadd( 633.0, 165.974, 97.8586, 0.5434 ) }
    apic_13 { pt3dadd( 633.354, 164.894, 98.2304, 0.4318 ) }
    apic_13 { pt3dadd( 633.581, 163.779, 98.5146, 0.3928 ) }
    apic_13 { pt3dadd( 633.937, 162.696, 98.735, 0.4198 ) }
    apic_13 { pt3dadd( 634.473, 161.687, 98.9131, 0.4452 ) }
    apic_13 { pt3dadd( 634.806, 160.615, 99.0979, 0.3834 ) }
    apic_13 { pt3dadd( 634.806, 159.471, 99.3, 0.3396 ) }
    apic_13 { pt3dadd( 634.791, 158.341, 99.57, 0.3734 ) }
    apic_13 { pt3dadd( 634.64, 157.334, 100.062, 0.3338 ) }
    apic_13 { pt3dadd( 634.489, 156.328, 100.707, 0.3 ) }
    apic_13 { pt3dadd( 634.484, 155.24, 101.384, 0.2748 ) }
    apic_13 { pt3dadd( 634.484, 154.148, 102.052, 0.2748 ) }
    apic_13 { pt3dadd( 634.484, 153.019, 102.589, 0.275 ) }
    apic_13 { pt3dadd( 634.484, 151.875, 102.957, 0.2754 ) }
    apic_13 { pt3dadd( 634.37, 150.768, 103.209, 0.2762 ) }
    apic_13 { pt3dadd( 634.026, 149.734, 103.452, 0.2774 ) }
    apic_13 { pt3dadd( 633.999, 148.596, 103.564, 0.2798 ) }
    apic_13 { pt3dadd( 633.37, 147.736, 103.55, 0.2842 ) }
    apic_13 { pt3dadd( 632.528, 147.03, 103.367, 0.2922 ) }
    apic_13 { pt3dadd( 631.684, 146.324, 103.065, 0.3084 ) }
    apic_13 { pt3dadd( 630.833, 145.608, 102.719, 0.332 ) }
    apic_13 { pt3dadd( 629.961, 144.866, 102.442, 0.4074 ) }
    apic_13 { pt3dadd( 629.181, 144.05, 102.252, 0.392 ) }
    apic_13 { pt3dadd( 628.609, 143.058, 102.143, 0.4328 ) }
    apic_13 { pt3dadd( 627.984, 142.108, 102.102, 0.3976 ) }
    apic_13 { pt3dadd( 627.189, 141.285, 102.105, 0.415 ) }
    apic_13 { pt3dadd( 626.437, 140.428, 102.132, 0.5036 ) }
    apic_13 { pt3dadd( 625.807, 139.473, 102.17, 0.6232 ) }
    apic_13 { pt3dadd( 625.172, 138.522, 102.222, 0.6036 ) }
    apic_13 { pt3dadd( 624.513, 137.585, 102.285, 0.5952 ) }
    apic_13 { pt3dadd( 623.828, 136.684, 102.381, 0.4432 ) }
    apic_13 { pt3dadd( 623.041, 135.897, 102.57, 0.3656 ) }
    apic_13 { pt3dadd( 622.317, 135.038, 102.777, 0.3748 ) }
    apic_13 { pt3dadd( 621.659, 134.102, 102.936, 0.3362 ) }
    apic_13 { pt3dadd( 621.043, 133.139, 103.051, 0.305 ) }
    apic_13 { pt3dadd( 620.471, 132.148, 103.126, 0.2796 ) }
    apic_13 { pt3dadd( 619.78, 131.256, 103.164, 0.305 ) }
    apic_13 { pt3dadd( 618.919, 130.502, 103.173, 0.2288 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 49/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 646.656, 226.533, 84.985, 0.5926 ) }
    apic_11 { pt3dadd( 647.12, 226.145, 87.67, 0.2288 ) }
    apic_11 { pt3dadd( 647.836, 225.64, 88.7211, 0.2746 ) }
    apic_11 { pt3dadd( 647.273, 225.93, 89.1069, 0.2746 ) }
    apic_11 { pt3dadd( 648.075, 225.114, 89.427, 0.2746 ) }
    apic_11 { pt3dadd( 648.877, 224.298, 89.6823, 0.2748 ) }
    apic_11 { pt3dadd( 649.679, 223.484, 89.8761, 0.2748 ) }
    apic_11 { pt3dadd( 650.481, 222.668, 90.0119, 0.2752 ) }
    apic_11 { pt3dadd( 651.283, 221.854, 90.0942, 0.2758 ) }
    apic_11 { pt3dadd( 652.085, 221.038, 90.1698, 0.2766 ) }
    apic_11 { pt3dadd( 652.885, 220.222, 90.2418, 0.2782 ) }
    apic_11 { pt3dadd( 653.861, 219.643, 90.3148, 0.2814 ) }
    apic_11 { pt3dadd( 654.883, 219.135, 90.386, 0.287 ) }
    apic_11 { pt3dadd( 655.961, 218.752, 90.4299, 0.2988 ) }
    apic_11 { pt3dadd( 657.039, 218.37, 90.452, 0.3142 ) }
    apic_11 { pt3dadd( 658.122, 217.998, 90.4621, 0.3734 ) }
    apic_11 { pt3dadd( 659.203, 217.63, 90.4646, 0.3338 ) }
    apic_11 { pt3dadd( 660.286, 217.26, 90.4632, 0.3 ) }
    apic_11 { pt3dadd( 661.37, 216.892, 90.4613, 0.2746 ) }
    apic_11 { pt3dadd( 662.453, 216.524, 90.4624, 0.2746 ) }
    apic_11 { pt3dadd( 663.536, 216.154, 90.4658, 0.2746 ) }
    apic_11 { pt3dadd( 664.617, 215.786, 90.4702, 0.2746 ) }
    apic_11 { pt3dadd( 665.702, 215.417, 90.4761, 0.2746 ) }
    apic_11 { pt3dadd( 666.784, 215.049, 90.4845, 0.2746 ) }
    apic_11 { pt3dadd( 667.867, 214.68, 90.4963, 0.2746 ) }
    apic_11 { pt3dadd( 668.951, 214.311, 90.5114, 0.2746 ) }
    apic_11 { pt3dadd( 670.034, 213.943, 90.531, 0.2746 ) }
    apic_11 { pt3dadd( 671.161, 213.764, 90.5654, 0.2746 ) }
    apic_11 { pt3dadd( 672.294, 213.613, 90.6119, 0.2746 ) }
    apic_11 { pt3dadd( 673.427, 213.464, 90.6657, 0.2746 ) }
    apic_11 { pt3dadd( 674.56, 213.312, 90.7225, 0.2746 ) }
    apic_11 { pt3dadd( 675.693, 213.163, 90.7788, 0.2746 ) }
    apic_11 { pt3dadd( 676.741, 212.776, 90.8208, 0.2746 ) }
    apic_11 { pt3dadd( 677.702, 212.156, 90.8396, 0.2746 ) }
    apic_11 { pt3dadd( 678.663, 211.536, 90.8429, 0.2746 ) }
    apic_11 { pt3dadd( 679.629, 210.957, 90.8404, 0.2744 ) }
    apic_11 { pt3dadd( 680.697, 211.365, 90.8597, 0.2744 ) }
    apic_11 { pt3dadd( 681.766, 211.773, 90.8978, 0.2742 ) }
    apic_11 { pt3dadd( 682.828, 211.864, 90.956, 0.2736 ) }
    apic_11 { pt3dadd( 683.883, 211.428, 91.0347, 0.2728 ) }
    apic_11 { pt3dadd( 684.939, 210.992, 91.126, 0.2712 ) }
    apic_11 { pt3dadd( 685.995, 210.697, 91.2106, 0.2684 ) }
    apic_11 { pt3dadd( 687.052, 211.122, 91.2355, 0.2626 ) }
    apic_11 { pt3dadd( 688.111, 211.546, 91.2159, 0.2542 ) }
    apic_11 { pt3dadd( 689.174, 211.868, 91.1786, 0.2288 ) }
    apic_11 { pt3dadd( 690.268, 211.575, 91.2842, 0.2288 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 95/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 646.656, 226.533, 84.985, 0.5926 ) }
    apic_10 { pt3dadd( 646.596, 226.279, 84.7689, 0.6986 ) }
    apic_10 { pt3dadd( 646.445, 225.327, 84.3674, 0.7212 ) }
    apic_10 { pt3dadd( 646.155, 224.258, 84.021, 0.6906 ) }
    apic_10 { pt3dadd( 645.103, 224.031, 83.725, 0.5302 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    apic_10 { pt3dadd( 644.042, 223.757, 83.4742, 0.505 ) }
    apic_10 { pt3dadd( 643.505, 223.077, 83.1023, 0.511 ) }
    apic_10 { pt3dadd( 643.005, 222.103, 82.8167, 0.4958 ) }
    apic_10 { pt3dadd( 642.538, 221.059, 82.5882, 0.5936 ) }
    apic_10 { pt3dadd( 642.02, 220.039, 82.3715, 0.6222 ) }
    apic_10 { pt3dadd( 641.658, 218.99, 82.1584, 0.5008 ) }
    apic_10 { pt3dadd( 641.64, 217.846, 81.9431, 0.435 ) }
    apic_10 { pt3dadd( 640.976, 217.183, 81.6253, 0.4578 ) }
    apic_10 { pt3dadd( 640.495, 216.429, 81.1087, 0.7114 ) }
    apic_10 { pt3dadd( 640.495, 215.31, 80.5913, 0.6138 ) }
    apic_10 { pt3dadd( 640.495, 214.166, 80.1091, 0.4416 ) }
    apic_10 { pt3dadd( 640.495, 213.022, 79.6496, 0.3112 ) }
    apic_10 { pt3dadd( 640.495, 211.894, 79.1456, 0.2954 ) }
    apic_10 { pt3dadd( 640.495, 210.795, 78.5694, 0.314 ) }
    apic_10 { pt3dadd( 640.495, 210.303, 77.7305, 0.3434 ) }
    apic_10 { pt3dadd( 639.859, 210.083, 76.7239, 0.4224 ) }
    apic_10 { pt3dadd( 639.81, 208.995, 75.9195, 0.4502 ) }
    apic_10 { pt3dadd( 639.81, 207.851, 75.3242, 0.3912 ) }
    apic_10 { pt3dadd( 639.81, 206.707, 74.9179, 0.361 ) }
    apic_10 { pt3dadd( 639.81, 205.563, 74.6693, 0.3784 ) }
    apic_10 { pt3dadd( 639.81, 204.419, 74.5382, 0.513 ) }
    apic_10 { pt3dadd( 639.872, 203.288, 74.4251, 0.4944 ) }
    apic_10 { pt3dadd( 640.018, 202.171, 74.2476, 0.389 ) }
    apic_10 { pt3dadd( 640.036, 201.027, 74.0746, 0.3078 ) }
    apic_10 { pt3dadd( 640.038, 199.883, 73.906, 0.2892 ) }
    apic_10 { pt3dadd( 640.038, 198.78, 73.6677, 0.3012 ) }
    apic_10 { pt3dadd( 640.038, 197.691, 73.3471, 0.326 ) }
    apic_10 { pt3dadd( 640.038, 196.559, 73.0433, 0.3596 ) }
    apic_10 { pt3dadd( 640.038, 195.415, 72.8174, 0.4832 ) }
    apic_10 { pt3dadd( 640.038, 194.271, 72.6527, 0.4136 ) }
    apic_10 { pt3dadd( 640.038, 193.127, 72.5435, 0.3628 ) }
    apic_10 { pt3dadd( 640.038, 191.983, 72.4819, 0.347 ) }
    apic_10 { pt3dadd( 640.038, 190.839, 72.4469, 0.3934 ) }
    apic_10 { pt3dadd( 640.038, 189.695, 72.4122, 0.5714 ) }
    apic_10 { pt3dadd( 640.038, 188.551, 72.364, 0.4528 ) }
    apic_10 { pt3dadd( 640.038, 187.407, 72.2966, 0.3514 ) }
    apic_10 { pt3dadd( 640.038, 186.263, 72.2025, 0.2758 ) }
    apic_10 { pt3dadd( 640.038, 185.119, 72.0692, 0.2766 ) }
    apic_10 { pt3dadd( 640.038, 183.975, 71.8808, 0.2782 ) }
    apic_10 { pt3dadd( 640.038, 182.831, 71.6307, 0.2814 ) }
    apic_10 { pt3dadd( 640.038, 181.699, 71.2746, 0.2872 ) }
    apic_10 { pt3dadd( 640.038, 180.603, 70.7722, 0.2988 ) }
    apic_10 { pt3dadd( 640.038, 179.883, 69.9882, 0.3144 ) }
    apic_10 { pt3dadd( 640.047, 179.545, 68.959, 0.3738 ) }
    apic_10 { pt3dadd( 640.497, 178.504, 68.1542, 0.335 ) }
    apic_10 { pt3dadd( 641.047, 177.503, 67.5676, 0.3018 ) }
    apic_10 { pt3dadd( 641.448, 176.431, 67.1821, 0.278 ) }
    apic_10 { pt3dadd( 641.93, 175.393, 66.9696, 0.281 ) }
    apic_10 { pt3dadd( 642.127, 174.268, 66.892, 0.2862 ) }
    apic_10 { pt3dadd( 642.492, 173.189, 66.883, 0.2962 ) }
    apic_10 { pt3dadd( 643.036, 172.195, 66.8721, 0.3146 ) }
    apic_10 { pt3dadd( 643.622, 171.285, 66.8564, 0.3508 ) }
    apic_10 { pt3dadd( 643.919, 170.18, 66.8338, 0.4062 ) }
    apic_10 { pt3dadd( 644.216, 169.075, 66.8035, 0.565 ) }
    apic_10 { pt3dadd( 644.508, 167.97, 66.7663, 0.5864 ) }
    apic_10 { pt3dadd( 644.556, 166.829, 66.7128, 0.5804 ) }
    apic_10 { pt3dadd( 644.556, 165.695, 66.6165, 0.5612 ) }
    apic_10 { pt3dadd( 644.556, 164.56, 66.5011, 0.5656 ) }
    apic_10 { pt3dadd( 644.547, 163.425, 66.3916, 0.61 ) }
    apic_10 { pt3dadd( 644.323, 162.304, 66.358, 0.5138 ) }
    apic_10 { pt3dadd( 644.098, 161.182, 66.4065, 0.5168 ) }
    apic_10 { pt3dadd( 643.982, 160.133, 66.5843, 0.5578 ) }
    apic_10 { pt3dadd( 643.857, 159.002, 66.8816, 0.4618 ) }
    apic_10 { pt3dadd( 643.731, 157.873, 67.2725, 0.431 ) }
    apic_10 { pt3dadd( 643.659, 156.788, 67.7751, 0.3462 ) }
    apic_10 { pt3dadd( 643.724, 155.817, 68.4631, 0.324 ) }
    apic_10 { pt3dadd( 643.792, 154.847, 69.2614, 0.314 ) }
    apic_10 { pt3dadd( 644.098, 153.855, 70.0571, 0.3732 ) }
    apic_10 { pt3dadd( 644.098, 152.878, 70.644, 0.3334 ) }
    apic_10 { pt3dadd( 644.098, 151.734, 71.045, 0.299 ) }
    apic_10 { pt3dadd( 644.098, 150.59, 71.2844, 0.2728 ) }
    apic_10 { pt3dadd( 644.098, 149.446, 71.395, 0.2712 ) }
    apic_10 { pt3dadd( 644.098, 148.302, 71.4274, 0.2684 ) }
    apic_10 { pt3dadd( 644.556, 147.347, 71.4274, 0.2626 ) }
    apic_10 { pt3dadd( 644.556, 146.203, 71.4274, 0.2542 ) }
    apic_10 { pt3dadd( 644.89, 145.116, 71.4274, 0.2288 ) }
    apic_10 { pt3dadd( 645.929, 144.698, 71.4274, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_738, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_738 = new SectionList()
    soma_0 ModelViewParmSubset_738.append()
    axon_0 ModelViewParmSubset_738.append()
    axon_1 ModelViewParmSubset_738.append()

    // Group: {name=ModelViewParmSubset_739, groups=[], sections=[dend_21, dend_18, dend_17, dend_1, dend_0, apic_0, dend_25, dend_22, dend_20, dend_19, dend_12, dend_2, apic_28, apic_1, dend_31, dend_26, dend_24, dend_23, dend_16, dend_13, dend_9, dend_3, apic_3, apic_2, dend_30, dend_27, dend_15, dend_14, dend_11, dend_10, dend_8, dend_4, apic_27, apic_4, dend_29, dend_28, dend_7, dend_6, dend_5, apic_24, apic_5, apic_26, apic_25, apic_21, apic_6, apic_23, apic_22, apic_20, apic_7, apic_15, apic_8, apic_19, apic_16, apic_12, apic_9, apic_18, apic_17, apic_14, apic_13, apic_11, apic_10]}
    ModelViewParmSubset_739 = new SectionList()
    dend_21 ModelViewParmSubset_739.append()
    dend_18 ModelViewParmSubset_739.append()
    dend_17 ModelViewParmSubset_739.append()
    dend_1 ModelViewParmSubset_739.append()
    dend_0 ModelViewParmSubset_739.append()
    apic_0 ModelViewParmSubset_739.append()
    dend_25 ModelViewParmSubset_739.append()
    dend_22 ModelViewParmSubset_739.append()
    dend_20 ModelViewParmSubset_739.append()
    dend_19 ModelViewParmSubset_739.append()
    dend_12 ModelViewParmSubset_739.append()
    dend_2 ModelViewParmSubset_739.append()
    apic_28 ModelViewParmSubset_739.append()
    apic_1 ModelViewParmSubset_739.append()
    dend_31 ModelViewParmSubset_739.append()
    dend_26 ModelViewParmSubset_739.append()
    dend_24 ModelViewParmSubset_739.append()
    dend_23 ModelViewParmSubset_739.append()
    dend_16 ModelViewParmSubset_739.append()
    dend_13 ModelViewParmSubset_739.append()
    dend_9 ModelViewParmSubset_739.append()
    dend_3 ModelViewParmSubset_739.append()
    apic_3 ModelViewParmSubset_739.append()
    apic_2 ModelViewParmSubset_739.append()
    dend_30 ModelViewParmSubset_739.append()
    dend_27 ModelViewParmSubset_739.append()
    dend_15 ModelViewParmSubset_739.append()
    dend_14 ModelViewParmSubset_739.append()
    dend_11 ModelViewParmSubset_739.append()
    dend_10 ModelViewParmSubset_739.append()
    dend_8 ModelViewParmSubset_739.append()
    dend_4 ModelViewParmSubset_739.append()
    apic_27 ModelViewParmSubset_739.append()
    apic_4 ModelViewParmSubset_739.append()
    dend_29 ModelViewParmSubset_739.append()
    dend_28 ModelViewParmSubset_739.append()
    dend_7 ModelViewParmSubset_739.append()
    dend_6 ModelViewParmSubset_739.append()
    dend_5 ModelViewParmSubset_739.append()
    apic_24 ModelViewParmSubset_739.append()
    apic_5 ModelViewParmSubset_739.append()
    apic_26 ModelViewParmSubset_739.append()
    apic_25 ModelViewParmSubset_739.append()
    apic_21 ModelViewParmSubset_739.append()
    apic_6 ModelViewParmSubset_739.append()
    apic_23 ModelViewParmSubset_739.append()
    apic_22 ModelViewParmSubset_739.append()
    apic_20 ModelViewParmSubset_739.append()
    apic_7 ModelViewParmSubset_739.append()
    apic_15 ModelViewParmSubset_739.append()
    apic_8 ModelViewParmSubset_739.append()
    apic_19 ModelViewParmSubset_739.append()
    apic_16 ModelViewParmSubset_739.append()
    apic_12 ModelViewParmSubset_739.append()
    apic_9 ModelViewParmSubset_739.append()
    apic_18 ModelViewParmSubset_739.append()
    apic_17 ModelViewParmSubset_739.append()
    apic_14 ModelViewParmSubset_739.append()
    apic_13 ModelViewParmSubset_739.append()
    apic_11 ModelViewParmSubset_739.append()
    apic_10 ModelViewParmSubset_739.append()

    // Group: {name=dend, groups=[], sections=[dend_21, dend_18, dend_17, dend_1, dend_0, dend_25, dend_22, dend_20, dend_19, dend_12, dend_2, dend_31, dend_26, dend_24, dend_23, dend_16, dend_13, dend_9, dend_3, dend_30, dend_27, dend_15, dend_14, dend_11, dend_10, dend_8, dend_4, dend_29, dend_28, dend_7, dend_6, dend_5]}
    dend = new SectionList()
    dend_21 dend.append()
    dend_18 dend.append()
    dend_17 dend.append()
    dend_1 dend.append()
    dend_0 dend.append()
    dend_25 dend.append()
    dend_22 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_12 dend.append()
    dend_2 dend.append()
    dend_31 dend.append()
    dend_26 dend.append()
    dend_24 dend.append()
    dend_23 dend.append()
    dend_16 dend.append()
    dend_13 dend.append()
    dend_9 dend.append()
    dend_3 dend.append()
    dend_30 dend.append()
    dend_27 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_11 dend.append()
    dend_10 dend.append()
    dend_8 dend.append()
    dend_4 dend.append()
    dend_29 dend.append()
    dend_28 dend.append()
    dend_7 dend.append()
    dend_6 dend.append()
    dend_5 dend.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_28, apic_1, apic_3, apic_2, apic_27, apic_4, apic_24, apic_5, apic_26, apic_25, apic_21, apic_6, apic_23, apic_22, apic_20, apic_7, apic_15, apic_8, apic_19, apic_16, apic_12, apic_9, apic_18, apic_17, apic_14, apic_13, apic_11, apic_10]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_28 apic.append()
    apic_1 apic.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_3 apic.append()
    apic_2 apic.append()
    apic_27 apic.append()
    apic_4 apic.append()
    apic_24 apic.append()
    apic_5 apic.append()
    apic_26 apic.append()
    apic_25 apic.append()
    apic_21 apic.append()
    apic_6 apic.append()
    apic_23 apic.append()
    apic_22 apic.append()
    apic_20 apic.append()
    apic_7 apic.append()
    apic_15 apic.append()
    apic_8 apic.append()
    apic_19 apic.append()
    apic_16 apic.append()
    apic_12 apic.append()
    apic_9 apic.append()
    apic_18 apic.append()
    apic_17 apic.append()
    apic_14 apic.append()
    apic_13 apic.append()
    apic_11 apic.append()
    apic_10 apic.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_30441, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_30441 = new SectionList()
    soma_0 OneSecGrp_SectionRef_30441.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, axon_1, axon_1, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_4, apic_4, apic_4, apic_4, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    apic_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 2.6648488  // units: uF/cm2
    forsec apic cm = 2.6648488  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 209.80556  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 7.8276775E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 5.1371735E-10  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.5168655  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 4.2897425E-4  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.017671222  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 2.2304885E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.0015424324  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.19573206  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 1.990249E-4  // units: S cm-2
        e_pas_nml2 = -96.33703  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 4.5123506E-5  // units: S cm-2
        e_pas_nml2 = -96.33703  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 6.359287E-6  // units: S cm-2
        e_pas_nml2 = -96.33703  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 2.8151568E-5  // units: S cm-2
        e_pas_nml2 = -96.33703  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 5.528706E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0050255745  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_479427369
    forsec soma {
        insert CaDynamics_479427369
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_17 nseg = 5
    dend_0 nseg = 5
    dend_22 nseg = 3
    dend_20 nseg = 5
    dend_19 nseg = 7
    dend_31 nseg = 5
    dend_16 nseg = 3
    apic_2 nseg = 7
    dend_30 nseg = 7
    dend_27 nseg = 3
    dend_15 nseg = 3
    dend_14 nseg = 3
    dend_11 nseg = 5
    apic_27 nseg = 3
    dend_6 nseg = 5
    dend_5 nseg = 3
    apic_24 nseg = 3
    apic_26 nseg = 3
    apic_23 nseg = 5
    apic_22 nseg = 3
    apic_20 nseg = 3
    apic_15 nseg = 9
    apic_8 nseg = 9
    apic_19 nseg = 3
    apic_18 nseg = 3
    apic_17 nseg = 5
    apic_14 nseg = 3
    apic_13 nseg = 5
    apic_11 nseg = 3
    apic_10 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_479427369


