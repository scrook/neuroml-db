// Cell: cNAC187_L4_BP_ad80b53045_0_0
/*
{
  "id" : "cNAC187_L4_BP_ad80b53045_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.08452, 6.27464, 0.312461, 1.46623", "-2.79927, 5.64032, 0.287115, 2.64844", "-2.51401, 5.00599, 0.26177, 4.10361", "-2.22875, 4.37167, 0.236425, 4.91598", "-1.94349, 3.73735, 0.21108, 5.72835", "-1.65823, 3.10303, 0.185734, 6.53421", "-1.37297, 2.46871, 0.160389, 7.31212", "-1.08771, 1.83438, 0.135044, 8.08989", "-0.802456, 1.20006, 0.109699, 8.85679", "-0.517198, 0.56574, 0.0843534, 8.93483", "-0.23194, -0.0685822, 0.0590082, 8.92633", "0.0533189, -0.702904, 0.033663, 8.91784", "0.338577, -1.33723, 0.00831775, 8.90934", "0.623836, -1.97155, -0.0170275, 8.90084", "0.909094, -2.60587, -0.0423727, 8.82493", "1.19435, -3.24019, -0.067718, 7.82232", "1.47961, -3.87451, -0.0930632, 6.5965", "1.76487, -4.50884, -0.118408, 5.37067", "2.05013, -5.14316, -0.143754, 4.14485", "2.33539, -5.77748, -0.169099, 2.91903", "2.62064, -6.4118, -0.194444, 1.76337" ]
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.61629, -6.03981, -1.26548, 1.33", "2.56923, -10.2847, -2.02955, 1.33", "4.14917, -17.3226, -3.29636, 0.66", "5.37241, -22.7716, -4.27715, 0.66", "6.67588, -28.578, -5.32228, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001318721313
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.62064, -6.4118, -0.194444, 0.33", "8.77276, -20.0921, -0.194444, 0.33", "14.9249, -33.7725, -0.194444, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.67588, -28.578, -5.32228, 0.66", "6.4511, -46.2363, -1.72764, 0.66", "6.08849, -72.4654, 3.64052, 0.66", "5.60484, -104.49, 10.4301, 0.66", "5.32802, -129.209, 15.7128, 0.66", "5.18641, -143.552, 18.7694, 0.66", "5.12402, -148.312, 19.7726, 0.66", "5.05479, -154.77, 21.1808, 0.66", "4.8865, -160.809, 22.5262, 0.66", "4.70508, -167.773, 23.957, 0.66", "4.68008, -171.523, 24.2873, 0.66", "4.64977, -176.189, 24.2873, 0.66", "4.75974, -183.202, 23.5234, 0.66", "4.90448, -192.407, 22.0899, 0.66", "5.04684, -196.418, 21.4422, 0.66", "5.8785, -215.245, 18.2542, 0.66", "6.18649, -219.688, 17.4456, 0.66", "7.4219, -233.408, 14.6538, 0.66", "8.01095, -239.2, 13.4367, 0.66", "9.25386, -249.847, 11.3571, 0.66", "9.92627, -255.96, 10.5513, 0.66", "10.5165, -261.926, 10.3431, 0.66", "11.0639, -267.69, 10.3379, 0.66", "11.3864, -273.244, 10.319, 0.66", "11.6703, -279.117, 10.0684, 0.66", "11.8194, -288.181, 9.51455, 0.66", "11.9312, -293.7, 9.43114, 0.66", "11.9653, -300.394, 9.40921, 0.66", "11.9884, -309.456, 9.33394, 0.66", "11.9848, -315.231, 9.0229, 0.66", "12.0704, -322.99, 8.28443, 0.66", "12.3806, -330.302, 7.55594, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.67588, -28.578, -5.32228, 0.66", "9.29305, -30.7549, -5.51395, 0.66", "15.3098, -35.7595, -5.95458, 0.33", "29.0821, -47.215, -6.96321, 0.33", "29.6018, -47.6473, -7.00126, 0.66", "35.1596, -52.2701, -7.40829, 0.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "14.9249, -33.7725, -0.194444, 0.33", "21.077, -47.4528, -0.194444, 0.33", "27.2291, -61.1331, -0.194444, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "12.3806, -330.302, 7.55594, 0.66", "14.5332, -333.824, 9.82604, 0.66", "15.565, -335.842, 11.3391, 0.66", "16.7173, -338.993, 14.4307, 0.66", "17.3267, -340.889, 16.5543, 0.66", "18.3284, -344.39, 20.8264, 0.66", "19.1039, -346.946, 24.1063, 0.66", "19.7191, -349.294, 27.4648, 0.66", "21.0988, -353.862, 34.6968, 0.66", "21.917, -356.261, 38.81, 0.66", "22.8326, -359.039, 43.6691, 0.33", "23.2541, -360.129, 45.5655, 0.33", "23.4321, -360.474, 46.2067, 0.66", "24.6824, -362.306, 49.8887, 0.33", "25.0882, -362.646, 50.5184, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.3806, -330.302, 7.55594, 0.66", "12.2426, -334.673, 8.76254, 0.66", "12.0431, -340.322, 10.341, 0.66", "11.8613, -351.616, 13.4438, 0.66", "11.7689, -356.535, 14.7274, 0.66", "11.7129, -362.525, 16.3731, 0.66", "11.6927, -368.603, 17.8736, 0.66", "11.7265, -372.016, 18.6232, 0.66", "11.729, -376.728, 19.4225, 0.66", "11.8253, -385.777, 20.6383, 0.66", "11.9864, -390.91, 21.1302, 0.66", "12.1757, -396.927, 21.6011, 0.66", "12.3712, -402.005, 21.6697, 0.66", "12.4295, -404.755, 21.6478, 0.66", "12.5533, -413.992, 21.3839, 0.66", "12.6663, -418.766, 21.1139, 0.66", "12.7512, -425.38, 20.6391, 0.66", "12.8345, -430.687, 20.4984, 0.66", "12.8839, -433.041, 20.414, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "12.8839, -433.041, 20.414, 0.66", "13.2345, -436.776, 20.7106, 0.66", "13.3386, -442.86, 21.6561, 0.66", "13.2993, -449.356, 22.818, 0.66", "13.1645, -453.619, 23.5715, 0.66", "12.9863, -459.505, 24.4837, 0.66", "12.6291, -469.906, 25.7532, 0.66", "12.2564, -477.015, 26.4465, 0.66", "11.9071, -481.892, 26.9421, 0.66", "11.6236, -486.991, 27.3573, 0.66", "11.3707, -492.708, 27.7836, 0.66", "11.2517, -496.619, 28.0519, 0.66", "11.2623, -501.985, 28.3339, 0.66", "11.3796, -506.921, 28.6021, 0.66", "11.5873, -518.536, 29.4814, 0.66", "11.7198, -523.156, 29.9283, 0.66", "11.9732, -534.751, 30.9334, 0.66", "12.0866, -539.42, 31.1765, 0.66", "12.1873, -543.912, 31.2405, 0.66", "12.2981, -547.947, 31.1369, 0.66", "12.4241, -554.552, 30.8629, 0.66", "12.4784, -560.2, 30.5474, 0.66", "12.6445, -571.043, 29.576, 0.66", "12.8358, -576.522, 29.1369, 0.66", "13.0018, -580.787, 28.8254, 0.66", "13.2651, -586.528, 28.4605, 0.66", "14.3024, -608.127, 27.0555, 0.66", "14.8273, -616.058, 26.4532, 0.66", "16.3811, -636.872, 24.6449, 0.66", "17.0267, -644.734, 23.881, 0.66", "17.6768, -652.472, 23.1941, 0.66", "18.1603, -657.855, 22.7643, 0.66", "18.9137, -665.223, 22.1691, 0.66", "19.5977, -673.419, 21.4802, 0.66", "20.3807, -682.341, 20.4075, 0.66", "20.7848, -687.326, 19.8057, 0.66", "21.0373, -690.805, 19.481, 0.66", "21.7312, -704.326, 18.8876, 0.66", "21.9399, -708.541, 18.712, 0.66", "22.31, -715.447, 18.123, 0.66", "22.7301, -722.347, 17.4406, 0.66", "23.1232, -727.696, 16.9879, 0.66", "24.0222, -740.814, 16.3996, 0.66", "25.0973, -755.894, 16.1381, 0.66", "25.9085, -766.158, 15.9386, 0.66", "26.337, -771.313, 15.7459, 0.66", "28.0643, -790.162, 14.729, 0.66", "29.1754, -802.237, 13.6056, 0.66", "29.5257, -805.762, 13.2128, 0.66", "30.1613, -811.471, 12.4653, 0.66", "31.1775, -819.831, 11.1401, 0.66", "31.5907, -823.436, 10.4203, 0.66", "32.6902, -833.07, 8.06907, 0.66", "35.1798, -853.152, 2.90503, 0.66", "36.4162, -863.526, 0.566635, 0.66", "36.8767, -867.407, -0.164634, 0.33", "37.1884, -870.003, -0.551725, 1.33", "37.9758, -876.178, -1.06783, 0.66", "39.0594, -883.651, -1.16442, 0.66", "39.8897, -888.964, -1.03673, 0.66", "40.747, -894.351, -0.726834, 0.66", "41.5545, -898.758, -0.456133, 0.66", "44.7846, -916.887, 1.11343, 0.66", "45.2034, -919.447, 1.38867, 0.33", "45.7401, -923.103, 1.75067, 1.33", "46.2841, -926.728, 2.03084, 0.66", "46.6806, -929.576, 2.22784, 0.33", "47.6807, -937.439, 2.77958, 0.66", "47.7763, -941.515, 3.32029, 0.66", "47.7004, -946.91, 4.22507, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 25
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "12.8839, -433.041, 20.414, 0.66", "9.62877, -442.636, 18.8483, 0.66", "6.98281, -450.78, 17.4503, 0.66", "5.05671, -456.915, 16.8303, 0.33", "2.32449, -465.56, 16.285, 0.33", "1.85682, -466.975, 16.2618, 0.66", "0.385595, -471.572, 16.317, 0.33", "-0.67272, -474.934, 16.5599, 0.66", "-2.87956, -482.897, 17.0019, 0.33", "-3.21678, -484.159, 17.1129, 0.66", "-5.50386, -492.698, 17.8375, 0.33", "-6.54586, -497.132, 18.4155, 0.33", "-7.51583, -501.961, 19.2162, 0.66", "-8.58995, -507.751, 20.358, 0.33", "-9.06113, -510.879, 20.9521, 0.33", "-9.24698, -512.638, 21.4005, 0.66", "-9.76595, -520.083, 24.4447, 0.33", "-9.87236, -521.173, 25.0256, 0.66", "-10.1114, -523.932, 26.7704, 0.33", "-10.2663, -525.35, 27.6868, 0.33", "-10.4333, -526.847, 28.5013, 0.66", "-11.1368, -532.432, 30.9352, 0.33", "-11.6569, -535.827, 31.8362, 0.33", "-11.8138, -537.107, 32.1016, 0.66", "-11.9999, -539.587, 32.4364, 0.33", "-12.0872, -540.898, 32.5273, 0.66", "-12.1822, -542.561, 32.5482, 0.33", "-12.2583, -544.278, 32.4512, 0.66", "-12.421, -546.797, 32.3405, 0.33", "-12.5024, -547.715, 32.313, 0.66", "-13.3409, -555.329, 32.2154, 0.33", "-13.405, -555.815, 32.2083, 0.66", "-13.6938, -557.564, 32.1772, 0.33", "-13.8689, -558.475, 32.158, 0.66", "-14.3387, -560.967, 32.3556, 0.33", "-14.541, -562.111, 32.5265, 0.66", "-14.8557, -564.162, 32.943, 0.33", "-15.0616, -565.616, 33.2625, 0.66", "-15.2621, -567.283, 33.6824, 0.33", "-16.1384, -575.051, 35.906, 0.33", "-16.3793, -577.324, 36.6721, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "47.7004, -946.91, 4.22507, 0.66", "48.5598, -950.499, 3.62278, 0.66", "48.8664, -952.382, 3.71301, 1.33", "49.0612, -954.007, 3.90772, 0.66", "49.2867, -956.048, 4.08741, 0.66", "49.6902, -960.456, 4.65837, 0.33", "50.1711, -965.794, 5.48559, 0.66", "50.6322, -972.711, 6.9372, 0.66", "50.8646, -976.161, 7.7941, 0.66", "51.2288, -980.002, 8.69746, 0.33", "51.797, -984.906, 9.69138, 0.33", "51.9766, -986.287, 9.87729, 0.66", "52.2475, -987.42, 9.86041, 0.33", "52.532, -988.393, 9.70531, 0.66", "54.3224, -994.052, 8.57859, 0.33", "55.0965, -996.415, 8.11638, 0.66", "55.8367, -998.65, 7.59469, 0.33", "57.7124, -1005.02, 6.31555, 0.33", "58.7665, -1008.76, 5.71071, 0.66", "60.5828, -1015.54, 4.85766, 0.33", "61.3519, -1018.75, 4.59552, 0.66", "62.0881, -1021.92, 4.40834, 1.33", "63.6541, -1029.18, 4.24088, 0.33", "64.2975, -1032.79, 4.34256, 0.33", "64.531, -1034.2, 4.4117, 0.66", "65.0058, -1037.79, 4.67669, 0.33", "65.5539, -1042.61, 5.08112, 0.33", "65.7433, -1044.37, 5.28245, 1.33", "66.2638, -1049.43, 5.84838, 0.33", "66.3695, -1051.18, 6.03323, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "47.7004, -946.91, 4.22507, 0.66", "46.673, -948.927, 1.90326, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "66.3695, -1051.18, 6.03323, 0.66", "64.5941, -1050.81, 4.80114, 0.66" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "66.3695, -1051.18, 6.03323, 0.66", "66.6785, -1052.68, 5.93313, 0.66", "68.0542, -1059.33, 5.48739, 0.33", "68.4918, -1061.44, 5.34561, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "68.4918, -1061.44, 5.34561, 0.33", "70.0774, -1072.72, 13.3907, 0.33", "70.2661, -1073.81, 14.1039, 1.33", "70.9109, -1076.86, 15.9755, 0.33", "71.0916, -1077.49, 16.3031, 0.66", "72.1486, -1080.47, 17.6477, 0.33", "72.4694, -1081.38, 18.0558, 0.66", "72.9237, -1082.18, 18.0934, 0.33", "73.5715, -1083.19, 18.1323, 0.66", "76.0597, -1086.31, 18.1854, 0.33", "77.0743, -1087.44, 18.1764, 1.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "68.4918, -1061.44, 5.34561, 0.33", "66.4272, -1077.21, 8.56174, 0.33", "65.3013, -1085.8, 10.3157, 0.33", "65.1243, -1087.15, 10.5914, 0.66", "63.9622, -1096.02, 12.4017, 0.33", "63.8073, -1097.21, 12.6431, 0.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_2", "dend_1", "dend_12", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6", "dend_11", "dend_8", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_0", "dend_2", "dend_1", "dend_12", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6", "dend_11", "dend_8", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_11", "dend_8", "dend_8", "dend_8", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_BP_ad80b53045_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_16
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_11, dend_8, dend_8, dend_8, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_0(0), soma_0(0.4500001318721313)
    connect axon_0(0), soma_0(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.08452, 6.27464, 0.312461, 1.46623 ) }
    soma_0 { pt3dadd( -2.79927, 5.64032, 0.287115, 2.64844 ) }
    soma_0 { pt3dadd( -2.51401, 5.00599, 0.26177, 4.10361 ) }
    soma_0 { pt3dadd( -2.22875, 4.37167, 0.236425, 4.91598 ) }
    soma_0 { pt3dadd( -1.94349, 3.73735, 0.21108, 5.72835 ) }
    soma_0 { pt3dadd( -1.65823, 3.10303, 0.185734, 6.53421 ) }
    soma_0 { pt3dadd( -1.37297, 2.46871, 0.160389, 7.31212 ) }
    soma_0 { pt3dadd( -1.08771, 1.83438, 0.135044, 8.08989 ) }
    soma_0 { pt3dadd( -0.802456, 1.20006, 0.109699, 8.85679 ) }
    soma_0 { pt3dadd( -0.517198, 0.56574, 0.0843534, 8.93483 ) }
    soma_0 { pt3dadd( -0.23194, -0.0685822, 0.0590082, 8.92633 ) }
    soma_0 { pt3dadd( 0.0533189, -0.702904, 0.033663, 8.91784 ) }
    soma_0 { pt3dadd( 0.338577, -1.33723, 0.00831775, 8.90934 ) }
    soma_0 { pt3dadd( 0.623836, -1.97155, -0.0170275, 8.90084 ) }
    soma_0 { pt3dadd( 0.909094, -2.60587, -0.0423727, 8.82493 ) }
    soma_0 { pt3dadd( 1.19435, -3.24019, -0.067718, 7.82232 ) }
    soma_0 { pt3dadd( 1.47961, -3.87451, -0.0930632, 6.5965 ) }
    soma_0 { pt3dadd( 1.76487, -4.50884, -0.118408, 5.37067 ) }
    soma_0 { pt3dadd( 2.05013, -5.14316, -0.143754, 4.14485 ) }
    soma_0 { pt3dadd( 2.33539, -5.77748, -0.169099, 2.91903 ) }
    soma_0 { pt3dadd( 2.62064, -6.4118, -0.194444, 1.76337 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 21/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.61629, -6.03981, -1.26548, 1.33 ) }
    dend_0 { pt3dadd( 2.56923, -10.2847, -2.02955, 1.33 ) }
    dend_0 { pt3dadd( 4.14917, -17.3226, -3.29636, 0.66 ) }
    dend_0 { pt3dadd( 5.37241, -22.7716, -4.27715, 0.66 ) }
    dend_0 { pt3dadd( 6.67588, -28.578, -5.32228, 1.33 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 26/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.62064, -6.4118, -0.194444, 0.33 ) }
    axon_0 { pt3dadd( 8.77276, -20.0921, -0.194444, 0.33 ) }
    axon_0 { pt3dadd( 14.9249, -33.7725, -0.194444, 0.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 29/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.67588, -28.578, -5.32228, 0.66 ) }
    dend_2 { pt3dadd( 6.4511, -46.2363, -1.72764, 0.66 ) }
    dend_2 { pt3dadd( 6.08849, -72.4654, 3.64052, 0.66 ) }
    dend_2 { pt3dadd( 5.60484, -104.49, 10.4301, 0.66 ) }
    dend_2 { pt3dadd( 5.32802, -129.209, 15.7128, 0.66 ) }
    dend_2 { pt3dadd( 5.18641, -143.552, 18.7694, 0.66 ) }
    dend_2 { pt3dadd( 5.12402, -148.312, 19.7726, 0.66 ) }
    dend_2 { pt3dadd( 5.05479, -154.77, 21.1808, 0.66 ) }
    dend_2 { pt3dadd( 4.8865, -160.809, 22.5262, 0.66 ) }
    dend_2 { pt3dadd( 4.70508, -167.773, 23.957, 0.66 ) }
    dend_2 { pt3dadd( 4.68008, -171.523, 24.2873, 0.66 ) }
    dend_2 { pt3dadd( 4.64977, -176.189, 24.2873, 0.66 ) }
    dend_2 { pt3dadd( 4.75974, -183.202, 23.5234, 0.66 ) }
    dend_2 { pt3dadd( 4.90448, -192.407, 22.0899, 0.66 ) }
    dend_2 { pt3dadd( 5.04684, -196.418, 21.4422, 0.66 ) }
    dend_2 { pt3dadd( 5.8785, -215.245, 18.2542, 0.66 ) }
    dend_2 { pt3dadd( 6.18649, -219.688, 17.4456, 0.66 ) }
    dend_2 { pt3dadd( 7.4219, -233.408, 14.6538, 0.66 ) }
    dend_2 { pt3dadd( 8.01095, -239.2, 13.4367, 0.66 ) }
    dend_2 { pt3dadd( 9.25386, -249.847, 11.3571, 0.66 ) }
    dend_2 { pt3dadd( 9.92627, -255.96, 10.5513, 0.66 ) }
    dend_2 { pt3dadd( 10.5165, -261.926, 10.3431, 0.66 ) }
    dend_2 { pt3dadd( 11.0639, -267.69, 10.3379, 0.66 ) }
    dend_2 { pt3dadd( 11.3864, -273.244, 10.319, 0.66 ) }
    dend_2 { pt3dadd( 11.6703, -279.117, 10.0684, 0.66 ) }
    dend_2 { pt3dadd( 11.8194, -288.181, 9.51455, 0.66 ) }
    dend_2 { pt3dadd( 11.9312, -293.7, 9.43114, 0.66 ) }
    dend_2 { pt3dadd( 11.9653, -300.394, 9.40921, 0.66 ) }
    dend_2 { pt3dadd( 11.9884, -309.456, 9.33394, 0.66 ) }
    dend_2 { pt3dadd( 11.9848, -315.231, 9.0229, 0.66 ) }
    dend_2 { pt3dadd( 12.0704, -322.99, 8.28443, 0.66 ) }
    dend_2 { pt3dadd( 12.3806, -330.302, 7.55594, 0.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 61/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.67588, -28.578, -5.32228, 0.66 ) }
    dend_1 { pt3dadd( 9.29305, -30.7549, -5.51395, 0.66 ) }
    dend_1 { pt3dadd( 15.3098, -35.7595, -5.95458, 0.33 ) }
    dend_1 { pt3dadd( 29.0821, -47.215, -6.96321, 0.33 ) }
    dend_1 { pt3dadd( 29.6018, -47.6473, -7.00126, 0.66 ) }
    dend_1 { pt3dadd( 35.1596, -52.2701, -7.40829, 0.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 67/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 14.9249, -33.7725, -0.194444, 0.33 ) }
    axon_1 { pt3dadd( 21.077, -47.4528, -0.194444, 0.33 ) }
    axon_1 { pt3dadd( 27.2291, -61.1331, -0.194444, 0.33 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 70/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 12.3806, -330.302, 7.55594, 0.66 ) }
    dend_12 { pt3dadd( 14.5332, -333.824, 9.82604, 0.66 ) }
    dend_12 { pt3dadd( 15.565, -335.842, 11.3391, 0.66 ) }
    dend_12 { pt3dadd( 16.7173, -338.993, 14.4307, 0.66 ) }
    dend_12 { pt3dadd( 17.3267, -340.889, 16.5543, 0.66 ) }
    dend_12 { pt3dadd( 18.3284, -344.39, 20.8264, 0.66 ) }
    dend_12 { pt3dadd( 19.1039, -346.946, 24.1063, 0.66 ) }
    dend_12 { pt3dadd( 19.7191, -349.294, 27.4648, 0.66 ) }
    dend_12 { pt3dadd( 21.0988, -353.862, 34.6968, 0.66 ) }
    dend_12 { pt3dadd( 21.917, -356.261, 38.81, 0.66 ) }
    dend_12 { pt3dadd( 22.8326, -359.039, 43.6691, 0.33 ) }
    dend_12 { pt3dadd( 23.2541, -360.129, 45.5655, 0.33 ) }
    dend_12 { pt3dadd( 23.4321, -360.474, 46.2067, 0.66 ) }
    dend_12 { pt3dadd( 24.6824, -362.306, 49.8887, 0.33 ) }
    dend_12 { pt3dadd( 25.0882, -362.646, 50.5184, 0.66 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 85/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.3806, -330.302, 7.55594, 0.66 ) }
    dend_3 { pt3dadd( 12.2426, -334.673, 8.76254, 0.66 ) }
    dend_3 { pt3dadd( 12.0431, -340.322, 10.341, 0.66 ) }
    dend_3 { pt3dadd( 11.8613, -351.616, 13.4438, 0.66 ) }
    dend_3 { pt3dadd( 11.7689, -356.535, 14.7274, 0.66 ) }
    dend_3 { pt3dadd( 11.7129, -362.525, 16.3731, 0.66 ) }
    dend_3 { pt3dadd( 11.6927, -368.603, 17.8736, 0.66 ) }
    dend_3 { pt3dadd( 11.7265, -372.016, 18.6232, 0.66 ) }
    dend_3 { pt3dadd( 11.729, -376.728, 19.4225, 0.66 ) }
    dend_3 { pt3dadd( 11.8253, -385.777, 20.6383, 0.66 ) }
    dend_3 { pt3dadd( 11.9864, -390.91, 21.1302, 0.66 ) }
    dend_3 { pt3dadd( 12.1757, -396.927, 21.6011, 0.66 ) }
    dend_3 { pt3dadd( 12.3712, -402.005, 21.6697, 0.66 ) }
    dend_3 { pt3dadd( 12.4295, -404.755, 21.6478, 0.66 ) }
    dend_3 { pt3dadd( 12.5533, -413.992, 21.3839, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_3 { pt3dadd( 12.6663, -418.766, 21.1139, 0.66 ) }
    dend_3 { pt3dadd( 12.7512, -425.38, 20.6391, 0.66 ) }
    dend_3 { pt3dadd( 12.8345, -430.687, 20.4984, 0.66 ) }
    dend_3 { pt3dadd( 12.8839, -433.041, 20.414, 0.66 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 4/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 12.8839, -433.041, 20.414, 0.66 ) }
    dend_5 { pt3dadd( 13.2345, -436.776, 20.7106, 0.66 ) }
    dend_5 { pt3dadd( 13.3386, -442.86, 21.6561, 0.66 ) }
    dend_5 { pt3dadd( 13.2993, -449.356, 22.818, 0.66 ) }
    dend_5 { pt3dadd( 13.1645, -453.619, 23.5715, 0.66 ) }
    dend_5 { pt3dadd( 12.9863, -459.505, 24.4837, 0.66 ) }
    dend_5 { pt3dadd( 12.6291, -469.906, 25.7532, 0.66 ) }
    dend_5 { pt3dadd( 12.2564, -477.015, 26.4465, 0.66 ) }
    dend_5 { pt3dadd( 11.9071, -481.892, 26.9421, 0.66 ) }
    dend_5 { pt3dadd( 11.6236, -486.991, 27.3573, 0.66 ) }
    dend_5 { pt3dadd( 11.3707, -492.708, 27.7836, 0.66 ) }
    dend_5 { pt3dadd( 11.2517, -496.619, 28.0519, 0.66 ) }
    dend_5 { pt3dadd( 11.2623, -501.985, 28.3339, 0.66 ) }
    dend_5 { pt3dadd( 11.3796, -506.921, 28.6021, 0.66 ) }
    dend_5 { pt3dadd( 11.5873, -518.536, 29.4814, 0.66 ) }
    dend_5 { pt3dadd( 11.7198, -523.156, 29.9283, 0.66 ) }
    dend_5 { pt3dadd( 11.9732, -534.751, 30.9334, 0.66 ) }
    dend_5 { pt3dadd( 12.0866, -539.42, 31.1765, 0.66 ) }
    dend_5 { pt3dadd( 12.1873, -543.912, 31.2405, 0.66 ) }
    dend_5 { pt3dadd( 12.2981, -547.947, 31.1369, 0.66 ) }
    dend_5 { pt3dadd( 12.4241, -554.552, 30.8629, 0.66 ) }
    dend_5 { pt3dadd( 12.4784, -560.2, 30.5474, 0.66 ) }
    dend_5 { pt3dadd( 12.6445, -571.043, 29.576, 0.66 ) }
    dend_5 { pt3dadd( 12.8358, -576.522, 29.1369, 0.66 ) }
    dend_5 { pt3dadd( 13.0018, -580.787, 28.8254, 0.66 ) }
    dend_5 { pt3dadd( 13.2651, -586.528, 28.4605, 0.66 ) }
    dend_5 { pt3dadd( 14.3024, -608.127, 27.0555, 0.66 ) }
    dend_5 { pt3dadd( 14.8273, -616.058, 26.4532, 0.66 ) }
    dend_5 { pt3dadd( 16.3811, -636.872, 24.6449, 0.66 ) }
    dend_5 { pt3dadd( 17.0267, -644.734, 23.881, 0.66 ) }
    dend_5 { pt3dadd( 17.6768, -652.472, 23.1941, 0.66 ) }
    dend_5 { pt3dadd( 18.1603, -657.855, 22.7643, 0.66 ) }
    dend_5 { pt3dadd( 18.9137, -665.223, 22.1691, 0.66 ) }
    dend_5 { pt3dadd( 19.5977, -673.419, 21.4802, 0.66 ) }
    dend_5 { pt3dadd( 20.3807, -682.341, 20.4075, 0.66 ) }
    dend_5 { pt3dadd( 20.7848, -687.326, 19.8057, 0.66 ) }
    dend_5 { pt3dadd( 21.0373, -690.805, 19.481, 0.66 ) }
    dend_5 { pt3dadd( 21.7312, -704.326, 18.8876, 0.66 ) }
    dend_5 { pt3dadd( 21.9399, -708.541, 18.712, 0.66 ) }
    dend_5 { pt3dadd( 22.31, -715.447, 18.123, 0.66 ) }
    dend_5 { pt3dadd( 22.7301, -722.347, 17.4406, 0.66 ) }
    dend_5 { pt3dadd( 23.1232, -727.696, 16.9879, 0.66 ) }
    dend_5 { pt3dadd( 24.0222, -740.814, 16.3996, 0.66 ) }
    dend_5 { pt3dadd( 25.0973, -755.894, 16.1381, 0.66 ) }
    dend_5 { pt3dadd( 25.9085, -766.158, 15.9386, 0.66 ) }
    dend_5 { pt3dadd( 26.337, -771.313, 15.7459, 0.66 ) }
    dend_5 { pt3dadd( 28.0643, -790.162, 14.729, 0.66 ) }
    dend_5 { pt3dadd( 29.1754, -802.237, 13.6056, 0.66 ) }
    dend_5 { pt3dadd( 29.5257, -805.762, 13.2128, 0.66 ) }
    dend_5 { pt3dadd( 30.1613, -811.471, 12.4653, 0.66 ) }
    dend_5 { pt3dadd( 31.1775, -819.831, 11.1401, 0.66 ) }
    dend_5 { pt3dadd( 31.5907, -823.436, 10.4203, 0.66 ) }
    dend_5 { pt3dadd( 32.6902, -833.07, 8.06907, 0.66 ) }
    dend_5 { pt3dadd( 35.1798, -853.152, 2.90503, 0.66 ) }
    dend_5 { pt3dadd( 36.4162, -863.526, 0.566635, 0.66 ) }
    dend_5 { pt3dadd( 36.8767, -867.407, -0.164634, 0.33 ) }
    dend_5 { pt3dadd( 37.1884, -870.003, -0.551725, 1.33 ) }
    dend_5 { pt3dadd( 37.9758, -876.178, -1.06783, 0.66 ) }
    dend_5 { pt3dadd( 39.0594, -883.651, -1.16442, 0.66 ) }
    dend_5 { pt3dadd( 39.8897, -888.964, -1.03673, 0.66 ) }
    dend_5 { pt3dadd( 40.747, -894.351, -0.726834, 0.66 ) }
    dend_5 { pt3dadd( 41.5545, -898.758, -0.456133, 0.66 ) }
    dend_5 { pt3dadd( 44.7846, -916.887, 1.11343, 0.66 ) }
    dend_5 { pt3dadd( 45.2034, -919.447, 1.38867, 0.33 ) }
    dend_5 { pt3dadd( 45.7401, -923.103, 1.75067, 1.33 ) }
    dend_5 { pt3dadd( 46.2841, -926.728, 2.03084, 0.66 ) }
    dend_5 { pt3dadd( 46.6806, -929.576, 2.22784, 0.33 ) }
    dend_5 { pt3dadd( 47.6807, -937.439, 2.77958, 0.66 ) }
    dend_5 { pt3dadd( 47.7763, -941.515, 3.32029, 0.66 ) }
    dend_5 { pt3dadd( 47.7004, -946.91, 4.22507, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 74/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 12.8839, -433.041, 20.414, 0.66 ) }
    dend_4 { pt3dadd( 9.62877, -442.636, 18.8483, 0.66 ) }
    dend_4 { pt3dadd( 6.98281, -450.78, 17.4503, 0.66 ) }
    dend_4 { pt3dadd( 5.05671, -456.915, 16.8303, 0.33 ) }
    dend_4 { pt3dadd( 2.32449, -465.56, 16.285, 0.33 ) }
    dend_4 { pt3dadd( 1.85682, -466.975, 16.2618, 0.66 ) }
    dend_4 { pt3dadd( 0.385595, -471.572, 16.317, 0.33 ) }
    dend_4 { pt3dadd( -0.67272, -474.934, 16.5599, 0.66 ) }
    dend_4 { pt3dadd( -2.87956, -482.897, 17.0019, 0.33 ) }
    dend_4 { pt3dadd( -3.21678, -484.159, 17.1129, 0.66 ) }
    dend_4 { pt3dadd( -5.50386, -492.698, 17.8375, 0.33 ) }
    dend_4 { pt3dadd( -6.54586, -497.132, 18.4155, 0.33 ) }
    dend_4 { pt3dadd( -7.51583, -501.961, 19.2162, 0.66 ) }
    dend_4 { pt3dadd( -8.58995, -507.751, 20.358, 0.33 ) }
    dend_4 { pt3dadd( -9.06113, -510.879, 20.9521, 0.33 ) }
    dend_4 { pt3dadd( -9.24698, -512.638, 21.4005, 0.66 ) }
    dend_4 { pt3dadd( -9.76595, -520.083, 24.4447, 0.33 ) }
    dend_4 { pt3dadd( -9.87236, -521.173, 25.0256, 0.66 ) }
    dend_4 { pt3dadd( -10.1114, -523.932, 26.7704, 0.33 ) }
    dend_4 { pt3dadd( -10.2663, -525.35, 27.6868, 0.33 ) }
    dend_4 { pt3dadd( -10.4333, -526.847, 28.5013, 0.66 ) }
    dend_4 { pt3dadd( -11.1368, -532.432, 30.9352, 0.33 ) }
    dend_4 { pt3dadd( -11.6569, -535.827, 31.8362, 0.33 ) }
    dend_4 { pt3dadd( -11.8138, -537.107, 32.1016, 0.66 ) }
    dend_4 { pt3dadd( -11.9999, -539.587, 32.4364, 0.33 ) }
    dend_4 { pt3dadd( -12.0872, -540.898, 32.5273, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_4 { pt3dadd( -12.1822, -542.561, 32.5482, 0.33 ) }
    dend_4 { pt3dadd( -12.2583, -544.278, 32.4512, 0.66 ) }
    dend_4 { pt3dadd( -12.421, -546.797, 32.3405, 0.33 ) }
    dend_4 { pt3dadd( -12.5024, -547.715, 32.313, 0.66 ) }
    dend_4 { pt3dadd( -13.3409, -555.329, 32.2154, 0.33 ) }
    dend_4 { pt3dadd( -13.405, -555.815, 32.2083, 0.66 ) }
    dend_4 { pt3dadd( -13.6938, -557.564, 32.1772, 0.33 ) }
    dend_4 { pt3dadd( -13.8689, -558.475, 32.158, 0.66 ) }
    dend_4 { pt3dadd( -14.3387, -560.967, 32.3556, 0.33 ) }
    dend_4 { pt3dadd( -14.541, -562.111, 32.5265, 0.66 ) }
    dend_4 { pt3dadd( -14.8557, -564.162, 32.943, 0.33 ) }
    dend_4 { pt3dadd( -15.0616, -565.616, 33.2625, 0.66 ) }
    dend_4 { pt3dadd( -15.2621, -567.283, 33.6824, 0.33 ) }
    dend_4 { pt3dadd( -16.1384, -575.051, 35.906, 0.33 ) }
    dend_4 { pt3dadd( -16.3793, -577.324, 36.6721, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 47.7004, -946.91, 4.22507, 0.66 ) }
    dend_7 { pt3dadd( 48.5598, -950.499, 3.62278, 0.66 ) }
    dend_7 { pt3dadd( 48.8664, -952.382, 3.71301, 1.33 ) }
    dend_7 { pt3dadd( 49.0612, -954.007, 3.90772, 0.66 ) }
    dend_7 { pt3dadd( 49.2867, -956.048, 4.08741, 0.66 ) }
    dend_7 { pt3dadd( 49.6902, -960.456, 4.65837, 0.33 ) }
    dend_7 { pt3dadd( 50.1711, -965.794, 5.48559, 0.66 ) }
    dend_7 { pt3dadd( 50.6322, -972.711, 6.9372, 0.66 ) }
    dend_7 { pt3dadd( 50.8646, -976.161, 7.7941, 0.66 ) }
    dend_7 { pt3dadd( 51.2288, -980.002, 8.69746, 0.33 ) }
    dend_7 { pt3dadd( 51.797, -984.906, 9.69138, 0.33 ) }
    dend_7 { pt3dadd( 51.9766, -986.287, 9.87729, 0.66 ) }
    dend_7 { pt3dadd( 52.2475, -987.42, 9.86041, 0.33 ) }
    dend_7 { pt3dadd( 52.532, -988.393, 9.70531, 0.66 ) }
    dend_7 { pt3dadd( 54.3224, -994.052, 8.57859, 0.33 ) }
    dend_7 { pt3dadd( 55.0965, -996.415, 8.11638, 0.66 ) }
    dend_7 { pt3dadd( 55.8367, -998.65, 7.59469, 0.33 ) }
    dend_7 { pt3dadd( 57.7124, -1005.02, 6.31555, 0.33 ) }
    dend_7 { pt3dadd( 58.7665, -1008.76, 5.71071, 0.66 ) }
    dend_7 { pt3dadd( 60.5828, -1015.54, 4.85766, 0.33 ) }
    dend_7 { pt3dadd( 61.3519, -1018.75, 4.59552, 0.66 ) }
    dend_7 { pt3dadd( 62.0881, -1021.92, 4.40834, 1.33 ) }
    dend_7 { pt3dadd( 63.6541, -1029.18, 4.24088, 0.33 ) }
    dend_7 { pt3dadd( 64.2975, -1032.79, 4.34256, 0.33 ) }
    dend_7 { pt3dadd( 64.531, -1034.2, 4.4117, 0.66 ) }
    dend_7 { pt3dadd( 65.0058, -1037.79, 4.67669, 0.33 ) }
    dend_7 { pt3dadd( 65.5539, -1042.61, 5.08112, 0.33 ) }
    dend_7 { pt3dadd( 65.7433, -1044.37, 5.28245, 1.33 ) }
    dend_7 { pt3dadd( 66.2638, -1049.43, 5.84838, 0.33 ) }
    dend_7 { pt3dadd( 66.3695, -1051.18, 6.03323, 0.66 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 45/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 47.7004, -946.91, 4.22507, 0.66 ) }
    dend_6 { pt3dadd( 46.673, -948.927, 1.90326, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 47/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 66.3695, -1051.18, 6.03323, 0.66 ) }
    dend_11 { pt3dadd( 64.5941, -1050.81, 4.80114, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 49/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 66.3695, -1051.18, 6.03323, 0.66 ) }
    dend_8 { pt3dadd( 66.6785, -1052.68, 5.93313, 0.66 ) }
    dend_8 { pt3dadd( 68.0542, -1059.33, 5.48739, 0.33 ) }
    dend_8 { pt3dadd( 68.4918, -1061.44, 5.34561, 1.33 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 53/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 68.4918, -1061.44, 5.34561, 0.33 ) }
    dend_10 { pt3dadd( 70.0774, -1072.72, 13.3907, 0.33 ) }
    dend_10 { pt3dadd( 70.2661, -1073.81, 14.1039, 1.33 ) }
    dend_10 { pt3dadd( 70.9109, -1076.86, 15.9755, 0.33 ) }
    dend_10 { pt3dadd( 71.0916, -1077.49, 16.3031, 0.66 ) }
    dend_10 { pt3dadd( 72.1486, -1080.47, 17.6477, 0.33 ) }
    dend_10 { pt3dadd( 72.4694, -1081.38, 18.0558, 0.66 ) }
    dend_10 { pt3dadd( 72.9237, -1082.18, 18.0934, 0.33 ) }
    dend_10 { pt3dadd( 73.5715, -1083.19, 18.1323, 0.66 ) }
    dend_10 { pt3dadd( 76.0597, -1086.31, 18.1854, 0.33 ) }
    dend_10 { pt3dadd( 77.0743, -1087.44, 18.1764, 1.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 64/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 68.4918, -1061.44, 5.34561, 0.33 ) }
    dend_9 { pt3dadd( 66.4272, -1077.21, 8.56174, 0.33 ) }
    dend_9 { pt3dadd( 65.3013, -1085.8, 10.3157, 0.33 ) }
    dend_9 { pt3dadd( 65.1243, -1087.15, 10.5914, 0.66 ) }
    dend_9 { pt3dadd( 63.9622, -1096.02, 12.4017, 0.33 ) }
    dend_9 { pt3dadd( 63.8073, -1097.21, 12.6431, 0.66 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_0 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_2 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_12 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_3 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_5 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_7 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_6 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_8 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_9 OneSecGrp_SectionRef_16.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_11, dend_8, dend_8, dend_8, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_8 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_2 nseg = 15
    dend_12 nseg = 3
    dend_3 nseg = 5
    dend_5 nseg = 25
    dend_4 nseg = 7
    dend_7 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_BP_ad80b53045_0_0


