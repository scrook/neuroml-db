// Cell: cNAC187_L6_BP_41b33b48e3_0_0
/*
{
  "id" : "cNAC187_L6_BP_41b33b48e3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-2.87117, 8.06617, 2.79576, 0.83", "-5.4133, 10.0365, 3.17915, 1.11", "-6.91216, 11.1975, 3.37858, 0.83", "-8.36835, 12.3156, 3.55727, 0.83", "-9.23053, 12.9532, 3.65518, 1.11", "-11.9305, 14.9456, 3.96901, 1.11", "-16.7596, 18.3566, 4.52375, 0.83", "-18.4994, 19.5386, 4.70694, 0.83", "-19.8771, 20.4468, 4.82073, 0.83", "-21.2206, 21.3469, 4.91922, 0.83", "-22.3142, 22.0887, 4.97237, 0.55", "-23.1362, 22.5911, 5.0263, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.46477, 6.18217, -6.18434, 0.55", "6.9399, 6.7176, -6.73708, 0.55", "8.37614, 6.85275, -7.46848, 0.83", "10.6492, 6.99659, -8.8271, 0.55", "11.7465, 7.06603, -9.48293, 1.38", "14.4444, 7.23675, -11.0954, 0.55", "15.5935, 7.17894, -11.8649, 0.83", "21.5375, 6.11872, -16.1879, 0.55", "22.1126, 5.97614, -16.6635, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.691575, -11.1446, 3.46824, 1.11", "-0.754067, -16.6583, 5.44492, 1.11", "-0.779518, -18.9039, 6.24995, 0.83", "-0.813331, -21.8873, 7.31948, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.866776, 10.4417, -1.39467, 1.11", "0.914798, 12.9458, -1.37411, 1.11", "0.965209, 17.0315, -1.1937, 1.38", "0.971458, 17.2592, -1.17915, 1.38", "1.21382, 20.0794, -0.951268, 0.83", "1.57164, 23.0644, -0.538439, 0.83", "2.21378, 26.4414, 0.364478, 0.83", "2.5959, 27.7257, 0.880893, 0.83", "2.98489, 28.6586, 1.36154, 1.11", "4.15054, 30.9357, 2.62046, 0.55", "5.50904, 33.3162, 4.1215, 0.83", "7.33119, 35.7742, 5.85655, 0.55", "8.27585, 36.7994, 6.65601, 0.83", "9.58504, 38.189, 7.8863, 0.55", "11.192, 39.9556, 9.53497, 0.55", "13.4109, 42.6101, 12.0292, 0.55", "15.853, 45.642, 14.7822, 0.55", "17.3602, 47.6089, 16.8065, 0.55", "19.1675, 50.0948, 19.6316, 0.55", "19.5379, 50.5937, 20.2686, 0.83", "20.5043, 51.9124, 22.0576, 0.55", "21.3301, 52.942, 23.469, 0.83", "23.2111, 55.7453, 26.8071, 0.55", "23.9494, 56.7693, 27.8015, 0.83", "24.6713, 57.5275, 28.499, 0.55", "25.4052, 58.1825, 29.0527, 0.83", "27.0592, 59.4064, 30.09, 0.83", "29.2688, 61.0707, 31.249, 0.83", "30.6399, 62.1683, 31.8014, 0.55", "31.6822, 63.1148, 32.2284, 0.55", "34.42, 65.5613, 33.304, 0.83", "36.1968, 67.1304, 33.9225, 0.55", "38.9086, 69.4309, 34.7453, 0.55", "41.4085, 71.3642, 35.3949, 0.55", "43.6533, 73.0046, 35.9132, 0.55", "46.5075, 74.9307, 36.4344, 0.55", "48.2633, 75.882, 36.695, 0.55", "49.4791, 76.421, 36.7262, 0.55", "51.1153, 76.8387, 36.6311, 0.55", "53.5866, 77.0658, 36.2921, 0.55", "55.138, 77.0149, 36.0231, 0.55", "57.3905, 76.8808, 35.7851, 0.55", "61.6397, 76.76, 35.707, 0.55", "64.9463, 76.8187, 35.8799, 0.55", "68.4257, 77.0483, 36.2713, 0.55", "70.6367, 77.2727, 36.699, 0.55", "76.3295, 78.3857, 38.1916, 0.55", "79.665, 79.3111, 39.3334, 0.55", "82.1373, 80.1754, 40.4312, 0.55", "83.6271, 80.9626, 41.1583, 0.55", "85.3493, 82.122, 41.9914, 0.55", "88.285, 84.3963, 43.125, 0.55", "88.9679, 84.943, 43.2869, 0.55", "90.943, 86.4076, 43.6179, 0.55", "92.7539, 87.9613, 43.9142, 0.83", "93.7435, 88.8227, 44.0597, 0.55", "95.2273, 90.2964, 44.2164, 0.83", "102.822, 98.1672, 47.1589, 0.83", "109.432, 107.145, 49.1569, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-23.1362, 22.5911, 5.0263, 0.55", "-24.8826, 23.6297, 4.05663, 0.55", "-26.7817, 24.7591, 3.00221, 0.55", "-29.0735, 26.1221, 1.72975, 0.55", "-30.9659, 27.2476, 0.679044, 0.83", "-32.5517, 28.1907, -0.201445, 0.55", "-35.4952, 29.9413, -1.83576, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-23.1362, 22.5911, 5.0263, 0.55", "-25.4681, 22.9594, 4.91948, 0.55", "-27.9265, 23.2951, 5.05548, 0.55", "-30.7082, 23.6767, 5.27767, 0.55", "-34.7037, 24.2167, 5.97165, 0.55", "-38.0241, 24.5905, 6.79957, 0.55", "-41.4922, 24.9405, 7.82322, 0.55", "-44.8071, 25.0779, 9.20013, 0.55", "-47.6292, 24.9331, 10.6943, 0.55", "-51.1053, 24.528, 12.9713, 0.55", "-52.5945, 24.2531, 14.194, 0.55", "-54.1962, 23.9439, 15.5907, 0.55", "-57.0282, 23.1561, 17.9352, 0.55", "-58.5579, 22.7205, 18.9272, 0.55", "-60.1598, 22.2114, 19.9606, 0.55", "-62.0834, 21.6144, 20.9826, 0.55", "-64.1801, 21.0064, 22.0295, 0.55", "-67.1784, 20.1252, 23.456, 0.55", "-71.2223, 19.1968, 24.9626, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "22.1126, 5.97614, -16.6635, 0.55", "28.4669, 7.46282, -18.0067, 0.55", "32.1143, 8.14512, -19.3097, 0.55", "35.707, 8.66111, -20.6606, 0.55", "38.1578, 8.91553, -21.5904, 0.55", "41.7368, 9.20198, -22.9283, 0.55", "49.1524, 9.67005, -25.9475, 0.55", "57.5559, 10.1908, -29.9404, 0.55", "61.6169, 10.2091, -32.1805, 0.55", "63.7879, 10.1758, -33.5286, 0.55", "66.1676, 10.1586, -35.1036, 0.55", "70.4095, 10.0067, -37.9067, 0.55", "71.9456, 9.86377, -38.9838, 0.55", "78.449, 9.4631, -44.0415, 0.55", "83.051, 9.28099, -47.9622, 0.55", "85.7017, 9.23423, -50.2895, 0.55", "88.3445, 9.16373, -52.6105, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "22.1126, 5.97614, -16.6635, 0.83", "23.9473, 6.84068, -16.5896, 0.83", "24.9947, 7.34182, -16.5923, 0.55", "26.537, 8.13261, -16.7133, 0.83", "27.5761, 8.69414, -16.8198, 0.55", "29.0136, 9.50066, -16.9408, 0.83", "30.7473, 10.4914, -17.0216, 0.55", "31.6136, 10.9245, -17.039, 0.55", "33.5823, 11.6467, -16.9911, 0.83", "35.3521, 12.0615, -16.7627, 0.55", "36.3426, 12.2676, -16.5461, 0.83", "37.8359, 12.5818, -16.0666, 0.55", "39.9913, 13.0237, -15.1106, 0.55", "42.9717, 13.4669, -13.6625, 0.55", "45.8072, 13.7605, -12.1115, 0.55", "48.052, 13.9637, -10.8481, 0.55", "51.7551, 14.3117, -8.74391, 0.55", "54.474, 14.6302, -7.13488, 0.55", "56.1315, 14.9422, -6.0836, 0.55", "59.2168, 15.8045, -4.07027, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.813331, -21.8873, 7.31948, 0.83", "-1.41955, -25.8309, 7.22781, 0.83", "-2.01018, -29.6732, 7.13851, 0.83", "-2.66962, -33.9631, 7.0388, 0.83", "-3.01398, -36.2033, 6.98673, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.813331, -21.8873, 7.31948, 0.55", "-0.0393966, -23.692, 8.23522, 0.55", "0.74397, -25.8814, 9.51364, 0.55", "1.4163, -28.707, 11.4354, 0.55", "1.61759, -29.7979, 12.2352, 0.83", "2.0035, -32.5643, 14.6544, 0.55", "2.10408, -33.9808, 15.9684, 0.55", "2.28497, -36.7328, 18.6529, 0.83", "2.35358, -38.7676, 20.808, 0.55", "2.26203, -40.4281, 22.6123, 0.55", "2.00223, -43.5629, 25.9997, 0.55", "1.78748, -46.0607, 28.6708, 0.55", "1.66348, -48.0688, 30.8247, 0.55", "1.61969, -50.2119, 33.007, 0.28", "1.66025, -51.112, 33.8577, 0.55", "1.74347, -52.7761, 35.3256, 0.28", "2.06581, -55.3997, 37.1183, 0.55", "1.3597, -63.9088, 44.2301, 0.55", "0.757001, -71.7698, 52.061, 0.55", "1.25573, -78.3349, 61.0125, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-35.4952, 29.9413, -1.83576, 0.55", "-38.8514, 30.6322, 0.540007, 0.55", "-40.2333, 30.8693, 1.7398, 0.83", "-41.8116, 31.0948, 3.39333, 0.55", "-43.0002, 31.2862, 4.78222, 0.83", "-46.1217, 31.9108, 8.37014, 0.55", "-47.3023, 32.1717, 9.73577, 0.28", "-49.2416, 32.662, 12.1993, 0.55", "-51.8463, 33.3355, 15.4878, 0.55", "-53.8405, 33.831, 17.879, 0.55", "-56.5197, 34.4767, 20.9753, 0.28", "-57.231, 34.6353, 21.6825, 0.55", "-58.7132, 34.9733, 23.0808, 0.28", "-59.7366, 35.2157, 23.9203, 0.55", "-61.8566, 35.6629, 25.4379, 0.28", "-63.111, 35.8396, 26.2706, 0.55", "-65.3186, 35.9798, 27.7866, 0.28", "-66.8099, 36.0545, 28.7505, 0.55", "-75.2101, 36.4112, 39.0621, 0.55", "-82.656, 35.6189, 50.0598, 0.55", "-89.7494, 33.5807, 61.1299, 0.55", "-96.8676, 29.9415, 71.7649, 0.55", "-102.339, 27.0369, 83.5393, 0.55", "-108.86, 24.5409, 94.8652, 0.55", "-115.489, 24.2496, 106.396, 0.55", "-122.095, 22.8913, 117.866, 0.55", "-128.412, 22.4581, 129.567, 0.55", "-134.07, 21.8864, 141.595, 0.55", "-138.376, 19.8801, 154.023, 0.55", "-142.781, 19.1247, 166.555, 0.55", "-147.403, 17.0035, 178.849, 0.55", "-150.426, 14.3918, 191.54, 0.55", "-151.149, 12.7782, 204.727, 0.55", "-151.888, 8.64292, 217.351, 0.55", "-150.734, 4.25964, 229.86, 0.55", "-150.253, 0.458233, 242.601, 0.55", "-151.161, -2.36149, 255.572, 0.55", "-154.843, -3.15178, 268.333, 0.55", "-157.37, -5.39745, 281.201, 0.55", "-157.327, -5.34769, 294.507, 0.55", "-159.432, -4.35802, 307.606, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-35.4952, 29.9413, -1.83576, 0.55", "-36.969, 30.7411, -3.79206, 0.55", "-38.0609, 31.6244, -5.93843, 0.55", "-39.0636, 32.701, -8.1945, 0.55", "-39.6914, 33.3752, -9.60722, 0.55", "-40.8367, 34.605, -12.1842, 0.83", "-41.6746, 35.5047, -14.0695, 0.55", "-42.5944, 36.7403, -16.8243, 0.83", "-42.8961, 37.5638, -18.3532, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-71.2223, 19.1968, 24.9626, 0.28", "-72.2798, 17.2875, 24.7357, 0.28", "-72.7907, 16.4643, 24.5734, 0.28", "-73.4605, 15.2993, 24.2976, 0.55", "-74.0134, 14.2756, 24.0613, 0.28", "-74.8282, 12.7167, 23.7187, 0.55", "-77.0929, 8.13809, 22.7766, 0.28", "-77.8449, 6.5288, 22.3162, 0.55", "-78.9926, 4.04799, 21.5237, 0.28", "-79.6593, 2.56221, 20.9823, 0.55", "-80.122, 1.53751, 20.5851, 0.28", "-80.6487, 0.361753, 20.1383, 0.55", "-82.2433, -3.55823, 18.7303, 0.28", "-82.7472, -4.74542, 18.2647, 0.55", "-83.6371, -6.56718, 17.3766, 0.28", "-84.3654, -7.73762, 16.7194, 0.28", "-85.0091, -8.5209, 16.2624, 0.55", "-87.2207, -10.7185, 15.0664, 0.28", "-88.2409, -11.6079, 14.6087, 0.55", "-90.7408, -13.6378, 13.4539, 0.28", "-93.2341, -15.4365, 12.4067, 0.28", "-95.9411, -17.156, 11.3414, 0.28", "-97.1737, -17.8046, 10.9471, 0.55", "-103.164, -24.926, 8.12383, 0.55", "-109.646, -32.107, 7.12647, 0.55", "-116.123, -38.9415, 4.69531, 0.55", "-122.835, -45.1911, 1.45984, 0.55", "-129.702, -50.7602, -2.58936, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-71.2223, 19.1968, 24.9626, 0.55", "-71.9253, 19.1347, 25.1397, 0.55", "-73.8821, 18.9981, 25.8987, 0.55", "-74.6127, 18.933, 26.2268, 0.55", "-76.3262, 18.7299, 27.0327, 0.55", "-78.9757, 18.4268, 28.1367, 0.55", "-80.3567, 18.3095, 28.6793, 0.28", "-82.5084, 18.0728, 29.4872, 0.55", "-84.1112, 17.8551, 30.0329, 0.55", "-84.7876, 17.7587, 30.2655, 0.28", "-88.846, 17.1779, 31.6554, 0.55", "-90.7517, 16.8002, 32.1989, 0.28", "-93.3373, 16.2592, 32.7804, 0.28", "-95.5808, 15.8075, 33.1453, 0.55", "-104.186, 15.6044, 36.3001, 0.55", "-112.386, 15.3118, 40.3913, 0.55", "-119.971, 14.2304, 45.4264, 0.55", "-127.301, 14.7723, 50.9071, 0.55", "-133.33, 15.2457, 57.7985, 0.55", "-137.939, 16.4085, 65.6381, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "88.3445, 9.16373, -52.6105, 0.55", "93.4661, 10.9138, -56.5474, 0.55", "95.0718, 11.4224, -57.906, 0.55", "97.0722, 11.9894, -59.5981, 0.55", "100.692, 13.0371, -62.8845, 0.55", "104.444, 14.0003, -66.442, 0.55", "106.256, 14.3158, -68.1693, 0.83", "107.73, 14.4998, -69.7283, 0.55", "108.814, 14.5719, -71.0291, 0.83", "111.364, 14.4138, -74.44, 0.55", "113.431, 14.0796, -77.3129, 0.55", "115.809, 13.6476, -80.4944, 0.55", "118.468, 13.2624, -84.0759, 0.55", "120.243, 12.9701, -86.5365, 0.55", "122.242, 12.6502, -89.3831, 0.55", "123.977, 12.4708, -91.9584, 0.55", "125.081, 12.5027, -93.7103, 0.55", "126.434, 12.7572, -97.1696, 0.55", "127.151, 12.8702, -99.3405, 0.55", "127.704, 12.958, -102.23, 0.55", "128.393, 13.0005, -107.131, 0.55", "128.521, 12.9741, -108.244, 0.28", "130.214, 12.4907, -121.812, 0.28", "130.828, 12.3578, -125.796, 0.83", "133.304, 11.6032, -139.998, 0.83", "134.582, 10.9845, -146.659, 0.83", "135.215, 10.614, -149.386, 0.55", "135.976, 10.2207, -152.055, 0.55", "138.243, 9.25617, -157.075, 0.55", "140.737, 8.29201, -161.522, 0.28", "141.544, 7.94401, -161.864, 0.55", "143.36, 7.15133, -161.917, 0.28", "144.501, 6.70322, -161.764, 0.55", "145.69, 6.19608, -161.504, 0.28", "147.131, 5.64357, -161.11, 0.55", "149.299, 4.98457, -160.726, 0.28", "151.03, 4.4158, -160.486, 0.55", "152.962, 3.94897, -160.346, 0.28", "155.584, 3.37741, -160.384, 0.55", "158.53, 2.84506, -160.589, 0.55", "161.122, 2.4474, -160.933, 0.28", "164.709, 1.97557, -161.598, 0.55", "170.921, 1.48269, -163.368, 0.55", "173.679, 1.48223, -164.447, 0.55", "174.869, 1.55981, -165.025, 0.83", "177.134, 1.77138, -166.328, 0.55", "178.713, 2.0034, -167.316, 0.83", "182.977, 2.74791, -169.995, 0.55", "185.551, 3.0436, -171.737, 0.28", "186.627, 3.07358, -172.365, 0.55", "189.541, 2.80937, -173.821, 0.28", "190.549, 2.607, -174.284, 0.55", "192.612, 1.98172, -174.942, 0.28", "194.689, 1.05036, -175.286, 0.55", "198.867, -1.24153, -175.269, 0.28", "200.785, -2.43603, -175.067, 0.55", "203.614, -4.41966, -174.645, 0.28", "207.193, -6.94278, -173.974, 0.55", "209.789, -8.7405, -173.437, 0.55", "214.311, -11.7257, -172.394, 0.28", "216.177, -12.8246, -172.106, 0.55", "219.415, -14.4441, -171.934, 0.28", "222.675, -15.7508, -171.936, 0.55", "224.49, -16.2029, -172.146, 0.28", "226.161, -16.361, -172.415, 0.55", "230.912, -16.4291, -173.55, 0.28", "234.34, -16.2366, -174.363, 0.28", "237.352, -15.85, -175.065, 0.55", "240.687, -15.2967, -175.982, 0.28", "241.536, -15.1135, -176.174, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "88.3445, 9.16373, -52.6105, 0.55", "88.9087, 6.90367, -54.4502, 0.55", "89.2063, 4.97503, -55.8603, 0.28", "89.4792, 3.18964, -56.993, 0.55", "90.2607, -0.591504, -59.4357, 0.28", "90.3026, -0.825359, -59.6243, 0.55", "90.5565, -2.03809, -60.7205, 0.28", "90.665, -3.02073, -61.796, 0.55", "90.712, -4.03108, -63.0458, 0.28", "90.7301, -5.4006, -64.8209, 0.55", "90.7739, -8.84805, -69.2048, 0.55", "90.7724, -11.9826, -73.2623, 0.55", "90.7432, -14.4874, -76.5086, 0.55", "90.6644, -16.955, -79.6492, 0.55", "90.6421, -17.5961, -80.4301, 0.28", "90.641, -18.2885, -81.2012, 0.55", "90.7399, -19.2598, -82.1736, 0.28", "91.1123, -21.0228, -83.7478, 0.55", "92.1427, -24.4684, -86.1968, 0.55", "92.7164, -26.3417, -87.34, 0.28", "93.1838, -28.235, -88.5859, 0.55", "93.6346, -30.8727, -90.43, 0.28", "93.855, -32.9942, -91.9673, 0.55", "94.0422, -36.1641, -94.2689, 0.28", "94.2625, -39.4565, -96.5444, 0.55", "94.5154, -44.2312, -99.8908, 0.28", "94.5918, -46.7748, -101.682, 0.55", "94.6248, -49.3688, -103.578, 0.28", "94.6265, -51.6355, -105.395, 0.28", "94.7281, -54.4427, -107.93, 0.55", "95.0161, -57.0549, -110.214, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "59.2168, 15.8045, -4.07027, 0.55", "62.4141, 15.1366, -3.15082, 0.55", "64.7425, 14.5338, -2.69976, 0.55", "69.8426, 13.1251, -1.98094, 0.55", "72.1378, 12.4207, -1.86341, 0.55", "74.6531, 11.6929, -1.87159, 0.55", "78.0456, 10.7506, -2.13382, 0.55", "81.6246, 9.62355, -2.74757, 0.55", "83.5074, 8.98408, -3.28633, 0.55", "87.3502, 7.6275, -4.91352, 0.55", "89.1235, 7.01158, -5.72153, 0.55", "93.2726, 5.47637, -7.71621, 0.55", "96.0687, 4.32427, -9.03249, 0.55", "98.1221, 3.47318, -9.90407, 0.83", "101.387, 1.99235, -11.2464, 0.55", "104.562, 0.394631, -12.4173, 0.83", "107.238, -1.07924, -13.2985, 0.55", "109.62, -2.34096, -13.9556, 0.55", "110.98, -2.9883, -14.2569, 0.83", "114.15, -4.47111, -14.7866, 0.28", "115.732, -5.12963, -14.952, 0.28", "117.253, -5.87631, -15.1848, 0.28", "118.903, -6.63828, -15.4485, 0.28", "121.55, -7.81175, -15.9325, 0.28", "122.616, -8.26681, -16.0955, 0.55", "125.161, -9.30107, -16.2283, 0.55", "129.731, -11.1836, -16.2225, 0.55", "130.99, -11.7335, -16.1596, 0.55", "132.108, -12.2577, -16.0492, 0.83", "134.541, -13.296, -15.6098, 0.55", "136.655, -14.1905, -15.1926, 0.55", "138.654, -15.0257, -14.7894, 0.55", "140.199, -15.7058, -14.5207, 0.55", "142.632, -16.9774, -14.2045, 0.55", "145.47, -18.762, -13.9761, 0.55", "149.823, -22.1032, -13.9055, 0.55", "152.169, -24.3383, -13.9979, 0.55", "154.157, -26.6742, -14.1574, 0.28", "154.732, -27.5233, -14.231, 0.55", "155.947, -29.8606, -14.4315, 0.28", "156.921, -32.4388, -14.6221, 0.55", "157.74, -35.5927, -14.6362, 0.55", "158.297, -37.6579, -14.5509, 0.28", "158.503, -38.3849, -14.4864, 0.55", "159.048, -40.1914, -14.301, 0.28", "159.804, -42.5406, -14.0038, 0.55", "161.831, -48.2066, -13.1447, 0.55", "162.898, -51.0603, -12.6526, 0.55", "163.893, -53.6749, -12.1786, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "59.2168, 15.8045, -4.07027, 0.55", "61.3444, 15.3752, -2.67077, 0.55", "62.0253, 15.2465, -2.25706, 0.55", "64.5462, 14.6889, -0.853422, 0.55", "67.3677, 14.1045, 0.76925, 0.55", "70.986, 13.3189, 2.93512, 0.55", "71.9853, 13.105, 3.52756, 0.55", "73.7705, 12.6637, 4.55287, 0.55", "75.7301, 12.2437, 5.6224, 0.55", "78.0117, 11.845, 6.79098, 0.55", "80.1652, 11.4948, 7.90874, 0.55", "81.3505, 11.3685, 8.48813, 0.55", "82.7462, 11.2573, 9.17863, 0.55", "84.4768, 11.1746, 10.0198, 0.83", "87.3016, 11.1227, 11.125, 0.55", "89.1616, 11.0485, 11.7517, 0.83", "91.7288, 10.8643, 12.5032, 0.55", "92.5123, 10.7718, 12.71, 0.55", "94.9289, 10.389, 13.2665, 0.55", "99.2197, 9.5151, 14.0174, 0.55", "102.341, 8.73427, 14.4434, 0.55", "104.801, 7.98977, 14.7989, 0.55", "107.298, 7.07868, 15.2007, 0.55", "107.822, 6.87278, 15.2832, 0.28", "108.879, 6.41547, 15.4341, 0.83", "113.215, 4.46882, 16.0575, 0.55", "116.247, 3.12938, 16.4377, 0.55", "118.744, 2.07039, 16.8313, 0.55", "120.236, 1.42873, 17.0788, 0.83", "121.412, 0.939224, 17.2813, 0.28", "122.479, 0.5001, 17.4559, 0.55", "131.06, -1.37028, 20.6392, 0.55", "139.918, -4.10345, 21.7831, 0.55", "148.878, -5.91, 23.7081, 0.55", "156.821, -9.46555, 27.1014, 0.55", "164.085, -14.2586, 30.4957, 0.55", "171.779, -19.5351, 30.9563, 0.55", "179.173, -25.095, 29.6646, 0.55", "187.538, -29.0298, 28.325, 0.55", "195.815, -33.2862, 27.5336, 0.55", "204.541, -36.449, 26.4872, 0.55", "213.327, -39.6127, 26.7106, 0.55", "221.38, -44.3419, 26.9139, 0.55", "229.884, -47.8653, 28.5029, 0.55", "238.225, -50.4876, 31.7897, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-3.01398, -36.2033, 6.98673, 1.38", "0.169723, -39.4132, 6.74911, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-3.01398, -36.2033, 6.98673, 0.55", "-4.44152, -37.7865, 7.16829, 0.55", "-6.03373, -39.8289, 7.36853, 0.55", "-7.26004, -41.1721, 7.53889, 0.55", "-8.31101, -42.2929, 7.52509, 0.55", "-10.6217, -44.6065, 7.28792, 0.55", "-12.2432, -46.1473, 7.07923, 0.55", "-13.6915, -47.5288, 6.84175, 0.55", "-17.4026, -50.8813, 6.23596, 0.55", "-21.8507, -54.7549, 5.54251, 0.55", "-25.2987, -57.6842, 4.94905, 0.55", "-27.5054, -59.6107, 4.53972, 0.55", "-30.0415, -61.9284, 4.07676, 0.55", "-33.2734, -65.2748, 3.52722, 0.55", "-35.1808, -67.6703, 3.24088, 0.55", "-37.5359, -71.138, 3.07734, 0.55", "-39.4301, -74.405, 3.01343, 0.55", "-41.3796, -78.5048, 2.97478, 0.55", "-43.2567, -83.3412, 3.00462, 0.55", "-44.3149, -87.0587, 3.07642, 0.55", "-44.7014, -88.9166, 3.21981, 0.55", "-45.3204, -93.2985, 3.76604, 0.55", "-45.8147, -97.4033, 4.37611, 0.55", "-46.0665, -101.552, 5.27227, 0.55", "-46.2211, -103.932, 5.91823, 0.55", "-46.6243, -111.295, 8.17927, 0.55", "-46.6565, -111.837, 8.35561, 0.55", "-46.7826, -115.161, 9.50942, 0.55", "-47.2672, -121.091, 11.742, 0.55", "-47.454, -123.072, 12.3727, 0.55", "-47.8815, -126.161, 12.8386, 0.55", "-48.0403, -127.308, 12.7462, 0.55", "-48.4886, -131.194, 11.6867, 0.55", "-48.6987, -133.715, 10.4554, 0.55", "-49.0157, -137.73, 7.66911, 0.55", "-49.2481, -142.649, 3.85973, 0.28", "-49.3051, -143.865, 2.75234, 0.55", "-49.4036, -145.707, 0.91106, 0.28", "-49.4227, -145.984, 0.619183, 0.55", "-49.5219, -147.504, -0.848297, 0.28", "-49.5774, -148.018, -1.22422, 0.55", "-49.8681, -150.696, -2.65548, 0.28", "-50.0008, -151.606, -3.12704, 0.55", "-50.4008, -154.235, -4.33745, 0.28", "-50.5227, -155.063, -4.71587, 0.55", "-50.9614, -157.919, -5.97247, 0.28", "-51.1571, -159.233, -6.55799, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "1.25573, -78.3349, 61.0125, 0.55", "-1.42198, -86.5066, 69.3274, 0.55", "-5.21347, -93.6582, 78.1343, 0.55", "-8.76478, -101.583, 86.3598, 0.55", "-12.5475, -109.554, 94.4377, 0.55", "-15.2204, -118.838, 101.49, 0.55", "-17.6901, -127.739, 109.09, 0.55", "-19.1957, -138.466, 114.163, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "1.25573, -78.3349, 61.0125, 0.55", "3.554, -86.71, 68.9173, 0.55", "6.15242, -96.3552, 75.092, 0.55", "6.88213, -106.176, 81.489, 0.55", "6.82304, -116.594, 86.909, 0.55", "7.2543, -126.944, 92.4408, 0.55", "7.85466, -136.87, 98.6875, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-42.8961, 37.5638, -18.3532, 0.83", "-42.3877, 39.4615, -19.6638, 0.83", "-41.3152, 43.9816, -22.551, 0.55", "-40.8761, 45.9065, -23.6602, 0.83", "-40.4226, 47.9444, -24.7263, 0.55", "-40.0048, 49.9944, -25.5688, 0.55", "-39.8096, 51.0035, -25.8747, 0.28", "-39.7462, 51.642, -25.9347, 0.55", "-39.5533, 53.7003, -25.6995, 0.28", "-39.4575, 54.5745, -25.5522, 0.55", "-39.1828, 57.5888, -24.927, 0.28", "-39.0404, 59.9584, -24.364, 0.55", "-39.0143, 63.6249, -23.4044, 0.28", "-39.1155, 66.8278, -22.5205, 0.28", "-39.2828, 68.606, -22.0104, 0.55", "-39.6126, 70.7037, -21.4291, 0.28", "-39.8396, 71.6967, -21.15, 0.55", "-40.4848, 74.0414, -20.6257, 0.28", "-41.006, 75.6108, -20.3792, 0.28", "-41.5427, 77.1582, -20.1908, 0.28", "-41.7941, 77.979, -20.0886, 0.55", "-42.6181, 81.3304, -19.7193, 0.28", "-43.4498, 85.3255, -19.3293, 0.55", "-43.7161, 86.7081, -19.1962, 0.55", "-44.0103, 88.0868, -19.0375, 0.55", "-44.7805, 91.0105, -18.7768, 0.55", "-45.4013, 92.926, -18.6702, 0.28", "-45.7181, 93.645, -18.6555, 0.55", "-46.7208, 95.5709, -18.601, 0.28", "-47.8584, 97.6282, -18.6416, 0.55", "-49.7512, 100.581, -18.8698, 0.28", "-50.6691, 101.807, -19.0316, 0.28", "-52.1371, 103.523, -19.4732, 0.55", "-53.7698, 105.316, -20.0521, 0.28", "-54.0661, 105.596, -20.1655, 0.55", "-55.1319, 106.482, -20.5888, 0.28", "-58.8124, 109.298, -22.0195, 0.55", "-63.8828, 112.786, -24.2845, 0.28", "-64.808, 113.38, -24.7707, 0.55", "-67.3371, 114.914, -26.1677, 0.28", "-68.3935, 115.549, -26.7867, 0.28", "-69.3034, 116.084, -27.3749, 0.55", "-71.9188, 117.349, -29.3711, 0.28", "-73.7714, 118.023, -30.7383, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-42.8961, 37.5638, -18.3532, 0.55", "-43.0331, 38.4056, -18.4024, 0.55", "-43.1302, 38.8983, -18.3865, 0.28", "-43.2769, 39.2407, -18.2948, 0.55", "-43.6138, 40.0269, -18.0841, 0.28", "-43.8505, 40.5792, -17.9361, 0.55", "-44.2867, 41.5972, -17.6634, 0.28", "-44.5853, 42.1325, -17.4241, 0.55", "-45.7336, 43.3504, -16.4125, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-129.702, -50.7602, -2.58936, 0.55", "-134.987, -57.7625, -4.22311, 0.55", "-138.887, -65.4942, -6.37658, 0.55", "-142.102, -72.7997, -10.3664, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-129.702, -50.7602, -2.58936, 0.55", "-134.989, -56.6245, -5.56447, 0.55", "-139.475, -62.5989, -9.4839, 0.55", "-143.63, -68.6984, -13.5724, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-137.939, 16.4085, 65.6381, 0.55", "-142.883, 16.4552, 69.6371, 0.55", "-148.139, 17.3454, 73.1043, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-137.939, 16.4085, 65.6381, 0.55", "-145.848, 15.5919, 68.9623, 0.55", "-153.657, 16.171, 72.5601, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "95.0161, -57.0549, -110.214, 0.28", "102.961, -62.032, -124.567, 0.28", "103.758, -62.5886, -125.841, 0.55", "105.103, -63.5283, -127.991, 0.28", "106.235, -64.3195, -129.803, 0.28", "107.735, -65.3669, -132.2, 0.55", "109.711, -66.7478, -135.361, 0.55", "112.479, -68.9922, -136.977, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "95.0161, -57.0549, -110.214, 0.55", "95.603, -58.0984, -111.528, 0.55", "95.7683, -58.5601, -112.115, 0.28", "96.0035, -59.3454, -113.14, 0.55", "96.5218, -61.0753, -115.399, 0.28", "96.8809, -62.2742, -116.965, 0.55", "97.4894, -64.3054, -119.617, 0.28", "98.1557, -66.751, -123.088, 0.28", "98.4054, -67.8677, -124.712, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "163.893, -53.6749, -12.1786, 0.28", "165.972, -57.6393, -11.1635, 0.28", "168.519, -62.8742, -9.42667, 0.28", "170.102, -66.2698, -8.17463, 0.55", "171.077, -68.1584, -7.37997, 0.28", "171.592, -69.1746, -6.94383, 0.28", "174.159, -74.1912, -4.86352, 0.55", "174.742, -75.3131, -4.25719, 0.28", "176.042, -78.2529, -2.49581, 0.55", "177.153, -80.8034, -1.07098, 0.28", "178.157, -82.886, 0.0611869, 0.55", "179.34, -85.3704, 1.26123, 0.55", "181.279, -89.3068, 2.68924, 0.55", "181.746, -90.2708, 3.00441, 0.55", "183.399, -93.8596, 4.12954, 0.28", "184.03, -95.3202, 4.5453, 0.55", "184.941, -97.1965, 5.08359, 0.28", "186.238, -99.8572, 5.72879, 0.55", "188.487, -104.052, 6.1754, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "163.893, -53.6749, -12.1786, 0.55", "162.622, -53.4755, -12.3362, 0.55", "161.59, -53.3136, -12.4642, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.169723, -39.4132, 6.74911, 0.83", "0.323359, -39.7234, 6.74396, 0.83", "2.07469, -42.4606, 6.91265, 0.83", "3.62642, -44.8602, 6.89907, 0.55", "4.86437, -46.7747, 6.88824, 0.55", "7.49568, -50.8439, 6.86521, 0.83", "10.6872, -55.7796, 6.83729, 0.55", "12.4212, -58.3612, 6.88172, 0.83", "15.467, -62.4613, 7.17031, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.169723, -39.4132, 6.74911, 0.55", "-0.0347446, -40.3745, 4.04585, 0.55", "-0.254216, -41.4063, 1.14424, 0.55", "-0.513304, -42.6243, -2.28115, 0.55", "-0.827921, -44.1035, -6.44067, 0.55", "-1.00646, -44.9428, -8.80106, 0.55", "-1.04232, -45.1114, -9.27523, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "7.85466, -136.87, 98.6875, 0.55", "8.89438, -143.165, 103.049, 0.55", "10.7986, -149.851, 106.425, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "7.85466, -136.87, 98.6875, 0.55", "8.25992, -144.159, 102.862, 0.55", "8.33331, -151.276, 107.341, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-45.7336, 43.3504, -16.4125, 0.28", "-46.8093, 44.9765, -14.9626, 0.28", "-47.2063, 45.5988, -14.343, 0.55", "-48.3331, 47.4051, -12.5132, 0.28", "-48.9046, 48.2924, -11.6957, 0.55", "-50.4795, 50.6867, -9.56488, 0.28", "-52.0802, 53.1201, -7.3992, 0.55", "-54.7294, 56.9498, -3.76033, 0.28", "-55.293, 57.7719, -2.98533, 0.55", "-56.538, 59.6847, -1.35562, 0.28", "-57.0214, 60.4752, -0.719877, 0.55", "-62.7879, 65.8321, 5.03494, 0.55", "-69.4342, 72.0255, 8.5754, 0.55", "-74.9472, 78.5865, 13.2257, 0.55", "-79.2043, 86.2879, 17.4248, 0.55", "-84.5347, 93.5642, 21.1273, 0.55", "-90.5834, 99.4661, 25.99, 0.55", "-95.8685, 104.761, 32.2427, 0.55", "-100.138, 109.211, 39.7949, 0.55", "-104.451, 114.182, 46.9891, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-45.7336, 43.3504, -16.4125, 0.55", "-49.7186, 41.783, -15.0858, 0.55", "-51.7866, 40.8992, -14.404, 0.28", "-53.3256, 40.2415, -13.8967, 0.55", "-54.6083, 39.6934, -13.4738, 0.28", "-55.5067, 39.3094, -13.1776, 0.55", "-57.984, 38.2508, -12.361, 0.28", "-59.615, 37.4177, -12.0354, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-142.102, -72.7997, -10.3664, 0.55", "-146.272, -81.6944, -9.56404, 0.55", "-150.263, -90.503, -7.66107, 0.55", "-153.502, -99.8082, -7.41702, 0.55", "-157.735, -108.593, -5.98493, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-142.102, -72.7997, -10.3664, 0.55", "-147.34, -80.9162, -17.1531, 0.55", "-151.919, -87.9427, -25.4609, 0.55", "-157.567, -95.8058, -32.2169, 0.55", "-165.474, -101.581, -38.8111, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-143.63, -68.6984, -13.5724, 0.55", "-149.144, -73.0474, -20.7819, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-143.63, -68.6984, -13.5724, 0.55", "-147.386, -77.7271, -16.0889, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "112.479, -68.9922, -136.977, 0.28", "115.181, -70.2289, -138.568, 0.28", "116.436, -70.8033, -139.307, 0.55", "118.829, -71.8987, -140.716, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "112.479, -68.9922, -136.977, 0.55", "112.105, -70.1032, -138.114, 0.55", "111.358, -72.3255, -140.387, 0.28", "111.115, -73.0494, -141.128, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "98.4054, -67.8677, -124.712, 0.28", "99.4617, -71.2843, -128.869, 0.28", "99.9847, -72.9761, -130.928, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "98.4054, -67.8677, -124.712, 0.55", "96.965, -68.7096, -123.712, 0.55", "92.9485, -71.0573, -120.923, 0.28", "91.9944, -71.615, -120.261, 0.55", "89.3842, -73.1406, -118.448, 0.28", "87.7018, -74.124, -117.28, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "15.467, -62.4613, 7.17031, 0.83", "15.5023, -62.7897, 7.14725, 0.83", "16.0366, -67.0777, 6.95937, 0.83", "16.1736, -70.2775, 7.04104, 0.83", "16.111, -73.3456, 7.45287, 0.83", "15.9034, -77.4074, 8.32031, 0.83", "15.5453, -82.0753, 9.50308, 0.83", "15.1868, -87.2678, 11.0989, 0.83", "14.8562, -92.2951, 12.8857, 0.83", "14.0289, -98.4777, 14.9613, 0.83", "13.4782, -101.33, 15.7612, 0.83", "13.0461, -103.484, 16.2259, 0.83", "12.1221, -107.624, 17.035, 0.83", "11.3686, -111.347, 17.5467, 0.83", "10.1358, -119.349, 17.7163, 0.83", "9.47362, -123.766, 17.2355, 0.83", "8.84074, -127.857, 16.4984, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "15.467, -62.4613, 7.17031, 0.55", "14.4614, -65.1071, 6.73614, 0.55", "13.6487, -67.0341, 6.54065, 0.55", "13.1094, -68.27, 6.54073, 0.55", "12.2733, -70.2088, 6.74709, 0.55", "10.6096, -74.054, 7.41768, 0.55", "9.20201, -76.9774, 8.20341, 0.55", "7.97725, -79.33, 9.05786, 0.55", "6.62267, -81.7143, 10.0482, 0.55", "5.44422, -83.6959, 10.955, 0.28", "4.36827, -85.3245, 11.8968, 0.55", "2.18857, -88.3052, 13.9516, 0.55", "0.688637, -90.1424, 15.3457, 0.55", "-0.157646, -91.1715, 16.1133, 0.55", "-1.18502, -92.3848, 16.9394, 0.83", "-4.16703, -95.9747, 19.1656, 0.28", "-5.14037, -97.1616, 19.8743, 0.55", "-6.81185, -99.3, 21.1182, 0.28", "-7.34519, -99.9612, 21.5442, 0.55", "-8.5096, -101.509, 22.5513, 0.28", "-9.14145, -102.387, 23.0692, 0.55", "-11.0557, -105.222, 24.0045, 0.55", "-15.6763, -112.916, 29.9431, 0.55", "-20.0194, -120.267, 36.4958, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.04232, -45.1114, -9.27523, 0.55", "-1.85638, -46.6585, -14.1982, 0.55", "-2.12894, -47.0296, -15.6126, 0.55", "-2.87252, -47.9636, -19.0833, 0.55", "-4.64864, -49.8377, -26.4872, 0.28", "-4.94503, -50.0976, -27.5463, 0.55", "-6.25794, -51.2822, -31.85, 0.55", "-8.32443, -52.9136, -37.3656, 0.55", "-9.14309, -53.4811, -39.4411, 0.28", "-9.91735, -53.8711, -41.1876, 0.28", "-11.4497, -54.4885, -43.8718, 0.55", "-13.2571, -55.0862, -47.2518, 0.28", "-14.9002, -55.3791, -50.4373, 0.55", "-16.2047, -55.4131, -52.8678, 0.55", "-17.0806, -55.3015, -54.5873, 0.55", "-19.5846, -54.759, -59.7629, 0.55", "-22.2891, -53.8519, -65.1413, 0.55", "-23.4403, -53.3647, -67.3238, 0.28", "-24.5127, -52.9322, -69.4268, 0.55", "-26.7007, -52.3111, -73.6537, 0.28", "-27.443, -52.1406, -75.064, 0.83", "-28.9263, -51.7953, -77.5585, 0.28", "-30.1205, -51.6847, -79.1581, 0.55", "-31.8801, -51.6157, -81.4351, 0.28", "-32.6005, -51.5754, -82.3138, 0.55", "-33.9913, -51.5384, -83.855, 0.55", "-36.1657, -51.1941, -86.097, 0.55", "-37.6491, -50.8539, -87.4744, 0.28", "-38.9182, -50.393, -88.4862, 0.55", "-40.4182, -49.6297, -89.6903, 0.28", "-40.6606, -49.4806, -89.8975, 0.55", "-42.6498, -48.0366, -92.2151, 0.28", "-43.9831, -46.9464, -94.0781, 0.55", "-45.5568, -45.3313, -96.8471, 0.83", "-46.7255, -43.9486, -99.3353, 0.28", "-46.9977, -43.5946, -100.025, 0.55", "-48.9546, -40.9397, -105.516, 0.28", "-49.2565, -40.4866, -106.539, 0.55", "-50.0769, -38.9975, -109.68, 0.28", "-50.2863, -38.6145, -110.495, 0.55", "-50.8799, -37.6183, -112.5, 0.28", "-51.3372, -36.9015, -113.864, 0.55", "-52.5527, -35.3062, -116.613, 0.28", "-53.3017, -34.4585, -118.198, 0.55", "-54.9833, -32.8388, -121.445, 0.28", "-55.4909, -32.4053, -122.399, 0.55", "-56.3123, -31.8345, -123.852, 0.28", "-57.0395, -31.355, -125.033, 0.55", "-58.6297, -30.3947, -127.36, 0.28", "-59.1214, -30.1225, -128.041, 0.55", "-62.9159, -27.9964, -132.877, 0.28", "-64.3398, -27.1165, -134.43, 0.55", "-67.0002, -25.3844, -137.013, 0.28", "-68.2258, -24.5428, -138.137, 0.55", "-71.1409, -22.6416, -140.535, 0.28", "-72.2392, -22.0028, -141.366, 0.55", "-76.3328, -20.121, -144.141, 0.28", "-78.0437, -19.5848, -145.279, 0.55", "-80.4923, -19.2847, -146.869, 0.55", "-82.0169, -19.2112, -147.809, 0.55", "-85.2573, -19.1569, -149.482, 0.28", "-88.5498, -19.141, -150.93, 0.28", "-91.3328, -19.118, -152.06, 0.55", "-94.9193, -18.7837, -153.092, 0.28", "-96.802, -18.3989, -153.387, 0.55", "-101.468, -16.8034, -153.706, 0.28", "-104.077, -15.5527, -153.385, 0.55", "-105.877, -14.5224, -152.884, 0.28", "-108.023, -13.3602, -151.943, 0.55", "-110.783, -11.8316, -150.527, 0.28", "-111.83, -11.2967, -150.0, 0.55", "-117.122, -8.93357, -147.754, 0.28", "-118.906, -8.19445, -147.012, 0.55", "-123.168, -6.57087, -145.165, 0.28", "-125.485, -5.71174, -144.163, 0.55", "-127.389, -5.00835, -143.342, 0.55", "-129.654, -4.18247, -142.41, 0.28", "-130.798, -3.76462, -142.081, 0.55", "-134.589, -2.25808, -141.174, 0.28", "-136.581, -1.27196, -140.664, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-1.04232, -45.1114, -9.27523, 0.55", "-0.542957, -45.1974, -9.55257, 0.55", "-0.030015, -45.2214, -9.81712, 0.55", "0.626969, -45.2025, -10.1141, 0.55", "1.17337, -45.1417, -10.3329, 0.55", "4.85597, -44.3623, -11.5017, 0.55", "5.68965, -44.0961, -11.7741, 0.55", "6.92215, -43.6179, -12.1993, 0.55", "7.79505, -43.2514, -12.5051, 0.55", "8.64783, -42.8466, -12.7848, 0.28", "9.96516, -42.1524, -13.1541, 0.55", "11.9317, -41.0604, -13.6017, 0.28", "12.1032, -40.998, -13.6807, 0.55", "13.105, -40.8221, -14.4785, 0.28", "13.6895, -40.7583, -15.1284, 0.55", "14.2566, -40.756, -15.8911, 0.55", "15.2557, -40.8381, -17.2752, 0.55", "17.2236, -41.0224, -19.9858, 0.55", "18.5769, -41.1691, -21.7818, 0.55", "19.0602, -41.2264, -22.3889, 0.55", "22.3303, -41.5615, -26.3024, 0.55", "23.2602, -41.6315, -27.3243, 0.55", "23.8249, -41.6699, -27.8581, 0.55", "25.2493, -41.8008, -28.9864, 0.55", "28.8245, -42.3259, -31.4888, 0.55", "29.8162, -42.5128, -32.1205, 0.28", "30.4082, -42.6467, -32.4364, 0.55", "31.2944, -42.884, -32.887, 0.28", "31.6722, -43.0201, -33.0435, 0.55", "32.8824, -43.5895, -33.2092, 0.28", "33.6505, -44.3105, -32.8385, 0.55", "34.0915, -44.8204, -32.583, 0.28", "34.4624, -45.3785, -32.2927, 0.55", "34.7631, -45.9834, -32.001, 0.28", "34.8946, -46.2949, -31.8796, 0.55", "35.1763, -47.109, -31.5631, 0.28", "35.2654, -47.353, -31.5117, 0.55", "35.8129, -48.7546, -31.2885, 0.28", "36.1262, -49.4054, -31.2481, 0.55", "36.9214, -50.8001, -31.2705, 0.28", "37.263, -51.3153, -31.3171, 0.55", "38.4967, -53.0099, -31.5243, 0.28", "38.8082, -53.4223, -31.5885, 0.55", "39.7876, -54.7298, -31.8515, 0.28", "39.9893, -55.0356, -31.9021, 0.55", "40.4955, -55.8436, -32.0437, 0.28", "40.8167, -56.3136, -32.1628, 0.55", "41.1651, -56.7761, -32.3033, 0.55", "41.8572, -57.6987, -32.5772, 0.28", "42.3659, -58.271, -32.7764, 0.55", "44.05, -59.7079, -33.411, 0.28", "44.728, -60.1768, -33.676, 0.55", "45.1997, -60.4749, -33.8492, 0.28", "45.6821, -60.7476, -34.0156, 0.55", "47.1813, -61.5128, -34.4972, 0.28", "48.3105, -62.1053, -34.8357, 0.55", "50.1971, -63.2252, -35.2906, 0.28", "50.7912, -63.5737, -35.431, 0.55", "51.9115, -64.213, -35.6161, 0.28", "52.2776, -64.4222, -35.6519, 0.55", "52.8424, -64.7546, -35.6183, 0.28", "53.3279, -65.0343, -35.5503, 0.55", "54.6012, -65.7255, -35.2421, 0.28", "56.0576, -66.4593, -34.8652, 0.28", "56.777, -66.7968, -34.6254, 0.28", "57.5222, -67.1151, -34.4248, 0.55", "58.6172, -67.5305, -34.135, 0.28", "59.1007, -67.7079, -33.9964, 0.83", "60.3136, -68.1754, -33.5995, 0.28", "60.8509, -68.3909, -33.4551, 0.55", "63.2489, -69.4286, -32.9229, 0.28", "64.4835, -69.9633, -32.745, 0.28", "65.4022, -70.3532, -32.6679, 0.55", "65.9569, -70.5919, -32.6761, 0.55", "67.4633, -71.2458, -32.7971, 0.28", "68.8833, -71.9138, -32.9593, 0.55", "70.1733, -72.5571, -33.1078, 0.28", "71.3561, -73.1547, -33.2938, 0.55", "72.3333, -73.6386, -33.4425, 0.28", "73.1261, -73.9843, -33.5276, 0.55", "75.0233, -74.7225, -33.657, 0.28", "75.974, -75.0946, -33.689, 0.55", "77.3866, -75.6561, -33.6924, 0.28", "78.5376, -76.085, -33.6715, 0.55", "81.2423, -76.9819, -33.6239, 0.28", "82.3706, -77.2922, -33.6673, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "10.7986, -149.851, 106.425, 0.55", "11.0789, -158.21, 110.171, 0.55", "10.8241, -167.233, 111.753, 0.55", "10.8694, -175.928, 114.646, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "10.7986, -149.851, 106.425, 0.55", "12.7262, -157.55, 110.988, 0.55", "14.4711, -164.044, 117.2, 0.55", "17.1278, -169.15, 124.319, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "8.33331, -151.276, 107.341, 0.55", "10.1348, -161.086, 113.094, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "8.33331, -151.276, 107.341, 0.55", "7.9777, -161.475, 113.51, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "8.84074, -127.857, 16.4984, 0.83", "9.59088, -130.915, 17.1664, 0.83", "10.3375, -133.477, 17.9244, 0.83", "11.0798, -136.023, 18.6778, 0.83", "11.7846, -138.441, 19.3933, 0.83", "12.8709, -142.167, 20.496, 0.83", "13.9493, -145.866, 21.5907, 0.83", "14.8545, -148.288, 22.6408, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "8.84074, -127.857, 16.4984, 0.55", "10.4736, -130.255, 16.2536, 0.55", "11.6417, -132.153, 15.7615, 0.55", "12.4089, -133.566, 15.2849, 0.55", "13.0197, -135.234, 14.5975, 0.83", "13.5376, -137.145, 13.6365, 0.55", "14.0443, -139.013, 12.6966, 0.83", "14.4399, -141.051, 11.5346, 0.55", "14.639, -142.243, 10.7606, 0.83", "15.059, -146.117, 8.02491, 0.55", "15.1131, -149.168, 5.76886, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-20.0194, -120.267, 36.4958, 0.55", "-25.9764, -129.749, 40.6556, 0.55", "-33.5507, -138.1, 44.6061, 0.55", "-42.0544, -145.36, 48.8102, 0.55", "-51.5855, -151.248, 52.9569, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-20.0194, -120.267, 36.4958, 0.55", "-24.2932, -128.964, 42.8561, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "14.8545, -148.288, 22.6408, 0.55", "15.0247, -150.248, 23.3174, 0.55", "15.315, -152.744, 24.2426, 0.55", "15.5893, -155.101, 25.1026, 0.55", "15.7632, -156.78, 25.6887, 0.55", "16.0371, -159.779, 26.6886, 0.55", "16.9291, -168.228, 29.2734, 0.55", "17.2974, -171.106, 30.0215, 0.55", "17.5604, -173.144, 30.4448, 0.55", "17.8717, -175.488, 30.7383, 0.55", "18.0741, -177.314, 30.8048, 0.55", "18.6661, -181.594, 30.7779, 0.55", "19.0019, -184.845, 30.7589, 0.55", "19.2828, -186.974, 30.8062, 0.55", "20.0053, -192.471, 31.2122, 0.55", "20.4755, -196.154, 31.6507, 0.55", "21.1179, -200.879, 32.4836, 0.55", "21.9387, -206.206, 33.8424, 0.55", "22.6616, -209.741, 34.9647, 0.55", "23.1437, -211.825, 35.6823, 0.55", "23.5511, -213.747, 36.3403, 0.55", "24.1034, -216.19, 37.0533, 0.55", "25.3416, -222.114, 38.3682, 0.55", "25.8954, -224.412, 38.7861, 0.55", "26.4489, -226.974, 39.2372, 0.55", "27.2468, -230.823, 39.8964, 0.55", "27.7218, -233.783, 40.4397, 0.55", "28.0057, -236.599, 40.9285, 0.55", "28.1552, -239.287, 41.4019, 0.55", "28.2577, -241.907, 41.9049, 0.55", "28.3411, -243.773, 42.2435, 0.55", "28.4914, -246.834, 42.6896, 0.55", "28.6058, -250.535, 42.9453, 0.55", "28.7016, -252.342, 42.931, 0.55", "28.7971, -253.939, 42.7972, 0.55", "29.1067, -256.963, 42.359, 0.55", "29.281, -258.885, 42.0293, 0.55", "29.5266, -261.247, 41.7101, 0.55", "29.6417, -262.9, 41.5892, 0.55", "29.8716, -267.184, 41.4469, 0.55", "29.9756, -270.375, 41.5746, 0.55", "30.0729, -275.283, 42.1833, 0.55", "30.219, -278.424, 42.8744, 0.55", "30.3516, -281.713, 43.7106, 0.28", "30.3739, -283.031, 44.104, 0.28", "30.4262, -286.207, 45.3576, 0.28", "30.4573, -289.121, 46.7575, 0.28", "30.8866, -292.933, 49.0019, 0.28", "32.9265, -301.677, 51.6883, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "14.8545, -148.288, 22.6408, 0.55", "16.1309, -148.744, 23.7196, 0.55", "18.6461, -149.943, 26.1553, 0.55", "20.7633, -151.141, 28.3688, 0.28", "22.9922, -152.511, 30.8257, 0.55", "24.2161, -153.378, 32.52, 0.28", "26.1914, -154.933, 35.7089, 0.55", "26.8235, -155.763, 37.3708, 0.28", "27.0044, -156.06, 38.0459, 0.28", "27.3098, -156.467, 39.2155, 0.55", "28.6602, -157.765, 43.54, 0.28", "29.2715, -158.262, 45.3299, 0.55", "31.4377, -159.713, 50.3253, 0.28", "32.7219, -160.417, 52.8921, 0.28", "34.4325, -161.337, 55.9491, 0.55", "37.2155, -162.799, 60.1845, 0.28", "37.6304, -162.995, 60.7041, 0.55", "39.7886, -163.959, 63.0949, 0.28", "40.0009, -164.05, 63.2873, 0.55", "41.8398, -165.175, 65.0672, 0.28", "42.6785, -165.796, 65.9779, 0.55", "49.5228, -170.323, 73.5018, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-51.5855, -151.248, 52.9569, 0.55", "-58.9177, -156.171, 58.9222, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-51.5855, -151.248, 52.9569, 0.55", "-59.0245, -159.275, 56.0301, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_BP_41b33b48e3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -2.87117, 8.06617, 2.79576, 0.83 ) }
    dend_43 { pt3dadd( -5.4133, 10.0365, 3.17915, 1.11 ) }
    dend_43 { pt3dadd( -6.91216, 11.1975, 3.37858, 0.83 ) }
    dend_43 { pt3dadd( -8.36835, 12.3156, 3.55727, 0.83 ) }
    dend_43 { pt3dadd( -9.23053, 12.9532, 3.65518, 1.11 ) }
    dend_43 { pt3dadd( -11.9305, 14.9456, 3.96901, 1.11 ) }
    dend_43 { pt3dadd( -16.7596, 18.3566, 4.52375, 0.83 ) }
    dend_43 { pt3dadd( -18.4994, 19.5386, 4.70694, 0.83 ) }
    dend_43 { pt3dadd( -19.8771, 20.4468, 4.82073, 0.83 ) }
    dend_43 { pt3dadd( -21.2206, 21.3469, 4.91922, 0.83 ) }
    dend_43 { pt3dadd( -22.3142, 22.0887, 4.97237, 0.55 ) }
    dend_43 { pt3dadd( -23.1362, 22.5911, 5.0263, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.46477, 6.18217, -6.18434, 0.55 ) }
    dend_28 { pt3dadd( 6.9399, 6.7176, -6.73708, 0.55 ) }
    dend_28 { pt3dadd( 8.37614, 6.85275, -7.46848, 0.83 ) }
    dend_28 { pt3dadd( 10.6492, 6.99659, -8.8271, 0.55 ) }
    dend_28 { pt3dadd( 11.7465, 7.06603, -9.48293, 1.38 ) }
    dend_28 { pt3dadd( 14.4444, 7.23675, -11.0954, 0.55 ) }
    dend_28 { pt3dadd( 15.5935, 7.17894, -11.8649, 0.83 ) }
    dend_28 { pt3dadd( 21.5375, 6.11872, -16.1879, 0.55 ) }
    dend_28 { pt3dadd( 22.1126, 5.97614, -16.6635, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.691575, -11.1446, 3.46824, 1.11 ) }
    dend_1 { pt3dadd( -0.754067, -16.6583, 5.44492, 1.11 ) }
    dend_1 { pt3dadd( -0.779518, -18.9039, 6.24995, 0.83 ) }
    dend_1 { pt3dadd( -0.813331, -21.8873, 7.31948, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.866776, 10.4417, -1.39467, 1.11 ) }
    dend_0 { pt3dadd( 0.914798, 12.9458, -1.37411, 1.11 ) }
    dend_0 { pt3dadd( 0.965209, 17.0315, -1.1937, 1.38 ) }
    dend_0 { pt3dadd( 0.971458, 17.2592, -1.17915, 1.38 ) }
    dend_0 { pt3dadd( 1.21382, 20.0794, -0.951268, 0.83 ) }
    dend_0 { pt3dadd( 1.57164, 23.0644, -0.538439, 0.83 ) }
    dend_0 { pt3dadd( 2.21378, 26.4414, 0.364478, 0.83 ) }
    dend_0 { pt3dadd( 2.5959, 27.7257, 0.880893, 0.83 ) }
    dend_0 { pt3dadd( 2.98489, 28.6586, 1.36154, 1.11 ) }
    dend_0 { pt3dadd( 4.15054, 30.9357, 2.62046, 0.55 ) }
    dend_0 { pt3dadd( 5.50904, 33.3162, 4.1215, 0.83 ) }
    dend_0 { pt3dadd( 7.33119, 35.7742, 5.85655, 0.55 ) }
    dend_0 { pt3dadd( 8.27585, 36.7994, 6.65601, 0.83 ) }
    dend_0 { pt3dadd( 9.58504, 38.189, 7.8863, 0.55 ) }
    dend_0 { pt3dadd( 11.192, 39.9556, 9.53497, 0.55 ) }
    dend_0 { pt3dadd( 13.4109, 42.6101, 12.0292, 0.55 ) }
    dend_0 { pt3dadd( 15.853, 45.642, 14.7822, 0.55 ) }
    dend_0 { pt3dadd( 17.3602, 47.6089, 16.8065, 0.55 ) }
    dend_0 { pt3dadd( 19.1675, 50.0948, 19.6316, 0.55 ) }
    dend_0 { pt3dadd( 19.5379, 50.5937, 20.2686, 0.83 ) }
    dend_0 { pt3dadd( 20.5043, 51.9124, 22.0576, 0.55 ) }
    dend_0 { pt3dadd( 21.3301, 52.942, 23.469, 0.83 ) }
    dend_0 { pt3dadd( 23.2111, 55.7453, 26.8071, 0.55 ) }
    dend_0 { pt3dadd( 23.9494, 56.7693, 27.8015, 0.83 ) }
    dend_0 { pt3dadd( 24.6713, 57.5275, 28.499, 0.55 ) }
    dend_0 { pt3dadd( 25.4052, 58.1825, 29.0527, 0.83 ) }
    dend_0 { pt3dadd( 27.0592, 59.4064, 30.09, 0.83 ) }
    dend_0 { pt3dadd( 29.2688, 61.0707, 31.249, 0.83 ) }
    dend_0 { pt3dadd( 30.6399, 62.1683, 31.8014, 0.55 ) }
    dend_0 { pt3dadd( 31.6822, 63.1148, 32.2284, 0.55 ) }
    dend_0 { pt3dadd( 34.42, 65.5613, 33.304, 0.83 ) }
    dend_0 { pt3dadd( 36.1968, 67.1304, 33.9225, 0.55 ) }
    dend_0 { pt3dadd( 38.9086, 69.4309, 34.7453, 0.55 ) }
    dend_0 { pt3dadd( 41.4085, 71.3642, 35.3949, 0.55 ) }
    dend_0 { pt3dadd( 43.6533, 73.0046, 35.9132, 0.55 ) }
    dend_0 { pt3dadd( 46.5075, 74.9307, 36.4344, 0.55 ) }
    dend_0 { pt3dadd( 48.2633, 75.882, 36.695, 0.55 ) }
    dend_0 { pt3dadd( 49.4791, 76.421, 36.7262, 0.55 ) }
    dend_0 { pt3dadd( 51.1153, 76.8387, 36.6311, 0.55 ) }
    dend_0 { pt3dadd( 53.5866, 77.0658, 36.2921, 0.55 ) }
    dend_0 { pt3dadd( 55.138, 77.0149, 36.0231, 0.55 ) }
    dend_0 { pt3dadd( 57.3905, 76.8808, 35.7851, 0.55 ) }
    dend_0 { pt3dadd( 61.6397, 76.76, 35.707, 0.55 ) }
    dend_0 { pt3dadd( 64.9463, 76.8187, 35.8799, 0.55 ) }
    dend_0 { pt3dadd( 68.4257, 77.0483, 36.2713, 0.55 ) }
    dend_0 { pt3dadd( 70.6367, 77.2727, 36.699, 0.55 ) }
    dend_0 { pt3dadd( 76.3295, 78.3857, 38.1916, 0.55 ) }
    dend_0 { pt3dadd( 79.665, 79.3111, 39.3334, 0.55 ) }
    dend_0 { pt3dadd( 82.1373, 80.1754, 40.4312, 0.55 ) }
    dend_0 { pt3dadd( 83.6271, 80.9626, 41.1583, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 85.3493, 82.122, 41.9914, 0.55 ) }
    dend_0 { pt3dadd( 88.285, 84.3963, 43.125, 0.55 ) }
    dend_0 { pt3dadd( 88.9679, 84.943, 43.2869, 0.55 ) }
    dend_0 { pt3dadd( 90.943, 86.4076, 43.6179, 0.55 ) }
    dend_0 { pt3dadd( 92.7539, 87.9613, 43.9142, 0.83 ) }
    dend_0 { pt3dadd( 93.7435, 88.8227, 44.0597, 0.55 ) }
    dend_0 { pt3dadd( 95.2273, 90.2964, 44.2164, 0.83 ) }
    dend_0 { pt3dadd( 102.822, 98.1672, 47.1589, 0.83 ) }
    dend_0 { pt3dadd( 109.432, 107.145, 49.1569, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -23.1362, 22.5911, 5.0263, 0.55 ) }
    dend_55 { pt3dadd( -24.8826, 23.6297, 4.05663, 0.55 ) }
    dend_55 { pt3dadd( -26.7817, 24.7591, 3.00221, 0.55 ) }
    dend_55 { pt3dadd( -29.0735, 26.1221, 1.72975, 0.55 ) }
    dend_55 { pt3dadd( -30.9659, 27.2476, 0.679044, 0.83 ) }
    dend_55 { pt3dadd( -32.5517, 28.1907, -0.201445, 0.55 ) }
    dend_55 { pt3dadd( -35.4952, 29.9413, -1.83576, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -23.1362, 22.5911, 5.0263, 0.55 ) }
    dend_44 { pt3dadd( -25.4681, 22.9594, 4.91948, 0.55 ) }
    dend_44 { pt3dadd( -27.9265, 23.2951, 5.05548, 0.55 ) }
    dend_44 { pt3dadd( -30.7082, 23.6767, 5.27767, 0.55 ) }
    dend_44 { pt3dadd( -34.7037, 24.2167, 5.97165, 0.55 ) }
    dend_44 { pt3dadd( -38.0241, 24.5905, 6.79957, 0.55 ) }
    dend_44 { pt3dadd( -41.4922, 24.9405, 7.82322, 0.55 ) }
    dend_44 { pt3dadd( -44.8071, 25.0779, 9.20013, 0.55 ) }
    dend_44 { pt3dadd( -47.6292, 24.9331, 10.6943, 0.55 ) }
    dend_44 { pt3dadd( -51.1053, 24.528, 12.9713, 0.55 ) }
    dend_44 { pt3dadd( -52.5945, 24.2531, 14.194, 0.55 ) }
    dend_44 { pt3dadd( -54.1962, 23.9439, 15.5907, 0.55 ) }
    dend_44 { pt3dadd( -57.0282, 23.1561, 17.9352, 0.55 ) }
    dend_44 { pt3dadd( -58.5579, 22.7205, 18.9272, 0.55 ) }
    dend_44 { pt3dadd( -60.1598, 22.2114, 19.9606, 0.55 ) }
    dend_44 { pt3dadd( -62.0834, 21.6144, 20.9826, 0.55 ) }
    dend_44 { pt3dadd( -64.1801, 21.0064, 22.0295, 0.55 ) }
    dend_44 { pt3dadd( -67.1784, 20.1252, 23.456, 0.55 ) }
    dend_44 { pt3dadd( -71.2223, 19.1968, 24.9626, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 22.1126, 5.97614, -16.6635, 0.55 ) }
    dend_34 { pt3dadd( 28.4669, 7.46282, -18.0067, 0.55 ) }
    dend_34 { pt3dadd( 32.1143, 8.14512, -19.3097, 0.55 ) }
    dend_34 { pt3dadd( 35.707, 8.66111, -20.6606, 0.55 ) }
    dend_34 { pt3dadd( 38.1578, 8.91553, -21.5904, 0.55 ) }
    dend_34 { pt3dadd( 41.7368, 9.20198, -22.9283, 0.55 ) }
    dend_34 { pt3dadd( 49.1524, 9.67005, -25.9475, 0.55 ) }
    dend_34 { pt3dadd( 57.5559, 10.1908, -29.9404, 0.55 ) }
    dend_34 { pt3dadd( 61.6169, 10.2091, -32.1805, 0.55 ) }
    dend_34 { pt3dadd( 63.7879, 10.1758, -33.5286, 0.55 ) }
    dend_34 { pt3dadd( 66.1676, 10.1586, -35.1036, 0.55 ) }
    dend_34 { pt3dadd( 70.4095, 10.0067, -37.9067, 0.55 ) }
    dend_34 { pt3dadd( 71.9456, 9.86377, -38.9838, 0.55 ) }
    dend_34 { pt3dadd( 78.449, 9.4631, -44.0415, 0.55 ) }
    dend_34 { pt3dadd( 83.051, 9.28099, -47.9622, 0.55 ) }
    dend_34 { pt3dadd( 85.7017, 9.23423, -50.2895, 0.55 ) }
    dend_34 { pt3dadd( 88.3445, 9.16373, -52.6105, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 22.1126, 5.97614, -16.6635, 0.83 ) }
    dend_29 { pt3dadd( 23.9473, 6.84068, -16.5896, 0.83 ) }
    dend_29 { pt3dadd( 24.9947, 7.34182, -16.5923, 0.55 ) }
    dend_29 { pt3dadd( 26.537, 8.13261, -16.7133, 0.83 ) }
    dend_29 { pt3dadd( 27.5761, 8.69414, -16.8198, 0.55 ) }
    dend_29 { pt3dadd( 29.0136, 9.50066, -16.9408, 0.83 ) }
    dend_29 { pt3dadd( 30.7473, 10.4914, -17.0216, 0.55 ) }
    dend_29 { pt3dadd( 31.6136, 10.9245, -17.039, 0.55 ) }
    dend_29 { pt3dadd( 33.5823, 11.6467, -16.9911, 0.83 ) }
    dend_29 { pt3dadd( 35.3521, 12.0615, -16.7627, 0.55 ) }
    dend_29 { pt3dadd( 36.3426, 12.2676, -16.5461, 0.83 ) }
    dend_29 { pt3dadd( 37.8359, 12.5818, -16.0666, 0.55 ) }
    dend_29 { pt3dadd( 39.9913, 13.0237, -15.1106, 0.55 ) }
    dend_29 { pt3dadd( 42.9717, 13.4669, -13.6625, 0.55 ) }
    dend_29 { pt3dadd( 45.8072, 13.7605, -12.1115, 0.55 ) }
    dend_29 { pt3dadd( 48.052, 13.9637, -10.8481, 0.55 ) }
    dend_29 { pt3dadd( 51.7551, 14.3117, -8.74391, 0.55 ) }
    dend_29 { pt3dadd( 54.474, 14.6302, -7.13488, 0.55 ) }
    dend_29 { pt3dadd( 56.1315, 14.9422, -6.0836, 0.55 ) }
    dend_29 { pt3dadd( 59.2168, 15.8045, -4.07027, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.813331, -21.8873, 7.31948, 0.83 ) }
    dend_11 { pt3dadd( -1.41955, -25.8309, 7.22781, 0.83 ) }
    dend_11 { pt3dadd( -2.01018, -29.6732, 7.13851, 0.83 ) }
    dend_11 { pt3dadd( -2.66962, -33.9631, 7.0388, 0.83 ) }
    dend_11 { pt3dadd( -3.01398, -36.2033, 6.98673, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.813331, -21.8873, 7.31948, 0.55 ) }
    dend_2 { pt3dadd( -0.0393966, -23.692, 8.23522, 0.55 ) }
    dend_2 { pt3dadd( 0.74397, -25.8814, 9.51364, 0.55 ) }
    dend_2 { pt3dadd( 1.4163, -28.707, 11.4354, 0.55 ) }
    dend_2 { pt3dadd( 1.61759, -29.7979, 12.2352, 0.83 ) }
    dend_2 { pt3dadd( 2.0035, -32.5643, 14.6544, 0.55 ) }
    dend_2 { pt3dadd( 2.10408, -33.9808, 15.9684, 0.55 ) }
    dend_2 { pt3dadd( 2.28497, -36.7328, 18.6529, 0.83 ) }
    dend_2 { pt3dadd( 2.35358, -38.7676, 20.808, 0.55 ) }
    dend_2 { pt3dadd( 2.26203, -40.4281, 22.6123, 0.55 ) }
    dend_2 { pt3dadd( 2.00223, -43.5629, 25.9997, 0.55 ) }
    dend_2 { pt3dadd( 1.78748, -46.0607, 28.6708, 0.55 ) }
    dend_2 { pt3dadd( 1.66348, -48.0688, 30.8247, 0.55 ) }
    dend_2 { pt3dadd( 1.61969, -50.2119, 33.007, 0.28 ) }
    dend_2 { pt3dadd( 1.66025, -51.112, 33.8577, 0.55 ) }
    dend_2 { pt3dadd( 1.74347, -52.7761, 35.3256, 0.28 ) }
    dend_2 { pt3dadd( 2.06581, -55.3997, 37.1183, 0.55 ) }
    dend_2 { pt3dadd( 1.3597, -63.9088, 44.2301, 0.55 ) }
    dend_2 { pt3dadd( 0.757001, -71.7698, 52.061, 0.55 ) }
    dend_2 { pt3dadd( 1.25573, -78.3349, 61.0125, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -35.4952, 29.9413, -1.83576, 0.55 ) }
    dend_61 { pt3dadd( -38.8514, 30.6322, 0.540007, 0.55 ) }
    dend_61 { pt3dadd( -40.2333, 30.8693, 1.7398, 0.83 ) }
    dend_61 { pt3dadd( -41.8116, 31.0948, 3.39333, 0.55 ) }
    dend_61 { pt3dadd( -43.0002, 31.2862, 4.78222, 0.83 ) }
    dend_61 { pt3dadd( -46.1217, 31.9108, 8.37014, 0.55 ) }
    dend_61 { pt3dadd( -47.3023, 32.1717, 9.73577, 0.28 ) }
    dend_61 { pt3dadd( -49.2416, 32.662, 12.1993, 0.55 ) }
    dend_61 { pt3dadd( -51.8463, 33.3355, 15.4878, 0.55 ) }
    dend_61 { pt3dadd( -53.8405, 33.831, 17.879, 0.55 ) }
    dend_61 { pt3dadd( -56.5197, 34.4767, 20.9753, 0.28 ) }
    dend_61 { pt3dadd( -57.231, 34.6353, 21.6825, 0.55 ) }
    dend_61 { pt3dadd( -58.7132, 34.9733, 23.0808, 0.28 ) }
    dend_61 { pt3dadd( -59.7366, 35.2157, 23.9203, 0.55 ) }
    dend_61 { pt3dadd( -61.8566, 35.6629, 25.4379, 0.28 ) }
    dend_61 { pt3dadd( -63.111, 35.8396, 26.2706, 0.55 ) }
    dend_61 { pt3dadd( -65.3186, 35.9798, 27.7866, 0.28 ) }
    dend_61 { pt3dadd( -66.8099, 36.0545, 28.7505, 0.55 ) }
    dend_61 { pt3dadd( -75.2101, 36.4112, 39.0621, 0.55 ) }
    dend_61 { pt3dadd( -82.656, 35.6189, 50.0598, 0.55 ) }
    dend_61 { pt3dadd( -89.7494, 33.5807, 61.1299, 0.55 ) }
    dend_61 { pt3dadd( -96.8676, 29.9415, 71.7649, 0.55 ) }
    dend_61 { pt3dadd( -102.339, 27.0369, 83.5393, 0.55 ) }
    dend_61 { pt3dadd( -108.86, 24.5409, 94.8652, 0.55 ) }
    dend_61 { pt3dadd( -115.489, 24.2496, 106.396, 0.55 ) }
    dend_61 { pt3dadd( -122.095, 22.8913, 117.866, 0.55 ) }
    dend_61 { pt3dadd( -128.412, 22.4581, 129.567, 0.55 ) }
    dend_61 { pt3dadd( -134.07, 21.8864, 141.595, 0.55 ) }
    dend_61 { pt3dadd( -138.376, 19.8801, 154.023, 0.55 ) }
    dend_61 { pt3dadd( -142.781, 19.1247, 166.555, 0.55 ) }
    dend_61 { pt3dadd( -147.403, 17.0035, 178.849, 0.55 ) }
    dend_61 { pt3dadd( -150.426, 14.3918, 191.54, 0.55 ) }
    dend_61 { pt3dadd( -151.149, 12.7782, 204.727, 0.55 ) }
    dend_61 { pt3dadd( -151.888, 8.64292, 217.351, 0.55 ) }
    dend_61 { pt3dadd( -150.734, 4.25964, 229.86, 0.55 ) }
    dend_61 { pt3dadd( -150.253, 0.458233, 242.601, 0.55 ) }
    dend_61 { pt3dadd( -151.161, -2.36149, 255.572, 0.55 ) }
    dend_61 { pt3dadd( -154.843, -3.15178, 268.333, 0.55 ) }
    dend_61 { pt3dadd( -157.37, -5.39745, 281.201, 0.55 ) }
    dend_61 { pt3dadd( -157.327, -5.34769, 294.507, 0.55 ) }
    dend_61 { pt3dadd( -159.432, -4.35802, 307.606, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -35.4952, 29.9413, -1.83576, 0.55 ) }
    dend_56 { pt3dadd( -36.969, 30.7411, -3.79206, 0.55 ) }
    dend_56 { pt3dadd( -38.0609, 31.6244, -5.93843, 0.55 ) }
    dend_56 { pt3dadd( -39.0636, 32.701, -8.1945, 0.55 ) }
    dend_56 { pt3dadd( -39.6914, 33.3752, -9.60722, 0.55 ) }
    dend_56 { pt3dadd( -40.8367, 34.605, -12.1842, 0.83 ) }
    dend_56 { pt3dadd( -41.6746, 35.5047, -14.0695, 0.55 ) }
    dend_56 { pt3dadd( -42.5944, 36.7403, -16.8243, 0.83 ) }
    dend_56 { pt3dadd( -42.8961, 37.5638, -18.3532, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -71.2223, 19.1968, 24.9626, 0.28 ) }
    dend_48 { pt3dadd( -72.2798, 17.2875, 24.7357, 0.28 ) }
    dend_48 { pt3dadd( -72.7907, 16.4643, 24.5734, 0.28 ) }
    dend_48 { pt3dadd( -73.4605, 15.2993, 24.2976, 0.55 ) }
    dend_48 { pt3dadd( -74.0134, 14.2756, 24.0613, 0.28 ) }
    dend_48 { pt3dadd( -74.8282, 12.7167, 23.7187, 0.55 ) }
    dend_48 { pt3dadd( -77.0929, 8.13809, 22.7766, 0.28 ) }
    dend_48 { pt3dadd( -77.8449, 6.5288, 22.3162, 0.55 ) }
    dend_48 { pt3dadd( -78.9926, 4.04799, 21.5237, 0.28 ) }
    dend_48 { pt3dadd( -79.6593, 2.56221, 20.9823, 0.55 ) }
    dend_48 { pt3dadd( -80.122, 1.53751, 20.5851, 0.28 ) }
    dend_48 { pt3dadd( -80.6487, 0.361753, 20.1383, 0.55 ) }
    dend_48 { pt3dadd( -82.2433, -3.55823, 18.7303, 0.28 ) }
    dend_48 { pt3dadd( -82.7472, -4.74542, 18.2647, 0.55 ) }
    dend_48 { pt3dadd( -83.6371, -6.56718, 17.3766, 0.28 ) }
    dend_48 { pt3dadd( -84.3654, -7.73762, 16.7194, 0.28 ) }
    dend_48 { pt3dadd( -85.0091, -8.5209, 16.2624, 0.55 ) }
    dend_48 { pt3dadd( -87.2207, -10.7185, 15.0664, 0.28 ) }
    dend_48 { pt3dadd( -88.2409, -11.6079, 14.6087, 0.55 ) }
    dend_48 { pt3dadd( -90.7408, -13.6378, 13.4539, 0.28 ) }
    dend_48 { pt3dadd( -93.2341, -15.4365, 12.4067, 0.28 ) }
    dend_48 { pt3dadd( -95.9411, -17.156, 11.3414, 0.28 ) }
    dend_48 { pt3dadd( -97.1737, -17.8046, 10.9471, 0.55 ) }
    dend_48 { pt3dadd( -103.164, -24.926, 8.12383, 0.55 ) }
    dend_48 { pt3dadd( -109.646, -32.107, 7.12647, 0.55 ) }
    dend_48 { pt3dadd( -116.123, -38.9415, 4.69531, 0.55 ) }
    dend_48 { pt3dadd( -122.835, -45.1911, 1.45984, 0.55 ) }
    dend_48 { pt3dadd( -129.702, -50.7602, -2.58936, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -71.2223, 19.1968, 24.9626, 0.55 ) }
    dend_45 { pt3dadd( -71.9253, 19.1347, 25.1397, 0.55 ) }
    dend_45 { pt3dadd( -73.8821, 18.9981, 25.8987, 0.55 ) }
    dend_45 { pt3dadd( -74.6127, 18.933, 26.2268, 0.55 ) }
    dend_45 { pt3dadd( -76.3262, 18.7299, 27.0327, 0.55 ) }
    dend_45 { pt3dadd( -78.9757, 18.4268, 28.1367, 0.55 ) }
    dend_45 { pt3dadd( -80.3567, 18.3095, 28.6793, 0.28 ) }
    dend_45 { pt3dadd( -82.5084, 18.0728, 29.4872, 0.55 ) }
    dend_45 { pt3dadd( -84.1112, 17.8551, 30.0329, 0.55 ) }
    dend_45 { pt3dadd( -84.7876, 17.7587, 30.2655, 0.28 ) }
    dend_45 { pt3dadd( -88.846, 17.1779, 31.6554, 0.55 ) }
    dend_45 { pt3dadd( -90.7517, 16.8002, 32.1989, 0.28 ) }
    dend_45 { pt3dadd( -93.3373, 16.2592, 32.7804, 0.28 ) }
    dend_45 { pt3dadd( -95.5808, 15.8075, 33.1453, 0.55 ) }
    dend_45 { pt3dadd( -104.186, 15.6044, 36.3001, 0.55 ) }
    dend_45 { pt3dadd( -112.386, 15.3118, 40.3913, 0.55 ) }
    dend_45 { pt3dadd( -119.971, 14.2304, 45.4264, 0.55 ) }
    dend_45 { pt3dadd( -127.301, 14.7723, 50.9071, 0.55 ) }
    dend_45 { pt3dadd( -133.33, 15.2457, 57.7985, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -137.939, 16.4085, 65.6381, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 88.3445, 9.16373, -52.6105, 0.55 ) }
    dend_42 { pt3dadd( 93.4661, 10.9138, -56.5474, 0.55 ) }
    dend_42 { pt3dadd( 95.0718, 11.4224, -57.906, 0.55 ) }
    dend_42 { pt3dadd( 97.0722, 11.9894, -59.5981, 0.55 ) }
    dend_42 { pt3dadd( 100.692, 13.0371, -62.8845, 0.55 ) }
    dend_42 { pt3dadd( 104.444, 14.0003, -66.442, 0.55 ) }
    dend_42 { pt3dadd( 106.256, 14.3158, -68.1693, 0.83 ) }
    dend_42 { pt3dadd( 107.73, 14.4998, -69.7283, 0.55 ) }
    dend_42 { pt3dadd( 108.814, 14.5719, -71.0291, 0.83 ) }
    dend_42 { pt3dadd( 111.364, 14.4138, -74.44, 0.55 ) }
    dend_42 { pt3dadd( 113.431, 14.0796, -77.3129, 0.55 ) }
    dend_42 { pt3dadd( 115.809, 13.6476, -80.4944, 0.55 ) }
    dend_42 { pt3dadd( 118.468, 13.2624, -84.0759, 0.55 ) }
    dend_42 { pt3dadd( 120.243, 12.9701, -86.5365, 0.55 ) }
    dend_42 { pt3dadd( 122.242, 12.6502, -89.3831, 0.55 ) }
    dend_42 { pt3dadd( 123.977, 12.4708, -91.9584, 0.55 ) }
    dend_42 { pt3dadd( 125.081, 12.5027, -93.7103, 0.55 ) }
    dend_42 { pt3dadd( 126.434, 12.7572, -97.1696, 0.55 ) }
    dend_42 { pt3dadd( 127.151, 12.8702, -99.3405, 0.55 ) }
    dend_42 { pt3dadd( 127.704, 12.958, -102.23, 0.55 ) }
    dend_42 { pt3dadd( 128.393, 13.0005, -107.131, 0.55 ) }
    dend_42 { pt3dadd( 128.521, 12.9741, -108.244, 0.28 ) }
    dend_42 { pt3dadd( 130.214, 12.4907, -121.812, 0.28 ) }
    dend_42 { pt3dadd( 130.828, 12.3578, -125.796, 0.83 ) }
    dend_42 { pt3dadd( 133.304, 11.6032, -139.998, 0.83 ) }
    dend_42 { pt3dadd( 134.582, 10.9845, -146.659, 0.83 ) }
    dend_42 { pt3dadd( 135.215, 10.614, -149.386, 0.55 ) }
    dend_42 { pt3dadd( 135.976, 10.2207, -152.055, 0.55 ) }
    dend_42 { pt3dadd( 138.243, 9.25617, -157.075, 0.55 ) }
    dend_42 { pt3dadd( 140.737, 8.29201, -161.522, 0.28 ) }
    dend_42 { pt3dadd( 141.544, 7.94401, -161.864, 0.55 ) }
    dend_42 { pt3dadd( 143.36, 7.15133, -161.917, 0.28 ) }
    dend_42 { pt3dadd( 144.501, 6.70322, -161.764, 0.55 ) }
    dend_42 { pt3dadd( 145.69, 6.19608, -161.504, 0.28 ) }
    dend_42 { pt3dadd( 147.131, 5.64357, -161.11, 0.55 ) }
    dend_42 { pt3dadd( 149.299, 4.98457, -160.726, 0.28 ) }
    dend_42 { pt3dadd( 151.03, 4.4158, -160.486, 0.55 ) }
    dend_42 { pt3dadd( 152.962, 3.94897, -160.346, 0.28 ) }
    dend_42 { pt3dadd( 155.584, 3.37741, -160.384, 0.55 ) }
    dend_42 { pt3dadd( 158.53, 2.84506, -160.589, 0.55 ) }
    dend_42 { pt3dadd( 161.122, 2.4474, -160.933, 0.28 ) }
    dend_42 { pt3dadd( 164.709, 1.97557, -161.598, 0.55 ) }
    dend_42 { pt3dadd( 170.921, 1.48269, -163.368, 0.55 ) }
    dend_42 { pt3dadd( 173.679, 1.48223, -164.447, 0.55 ) }
    dend_42 { pt3dadd( 174.869, 1.55981, -165.025, 0.83 ) }
    dend_42 { pt3dadd( 177.134, 1.77138, -166.328, 0.55 ) }
    dend_42 { pt3dadd( 178.713, 2.0034, -167.316, 0.83 ) }
    dend_42 { pt3dadd( 182.977, 2.74791, -169.995, 0.55 ) }
    dend_42 { pt3dadd( 185.551, 3.0436, -171.737, 0.28 ) }
    dend_42 { pt3dadd( 186.627, 3.07358, -172.365, 0.55 ) }
    dend_42 { pt3dadd( 189.541, 2.80937, -173.821, 0.28 ) }
    dend_42 { pt3dadd( 190.549, 2.607, -174.284, 0.55 ) }
    dend_42 { pt3dadd( 192.612, 1.98172, -174.942, 0.28 ) }
    dend_42 { pt3dadd( 194.689, 1.05036, -175.286, 0.55 ) }
    dend_42 { pt3dadd( 198.867, -1.24153, -175.269, 0.28 ) }
    dend_42 { pt3dadd( 200.785, -2.43603, -175.067, 0.55 ) }
    dend_42 { pt3dadd( 203.614, -4.41966, -174.645, 0.28 ) }
    dend_42 { pt3dadd( 207.193, -6.94278, -173.974, 0.55 ) }
    dend_42 { pt3dadd( 209.789, -8.7405, -173.437, 0.55 ) }
    dend_42 { pt3dadd( 214.311, -11.7257, -172.394, 0.28 ) }
    dend_42 { pt3dadd( 216.177, -12.8246, -172.106, 0.55 ) }
    dend_42 { pt3dadd( 219.415, -14.4441, -171.934, 0.28 ) }
    dend_42 { pt3dadd( 222.675, -15.7508, -171.936, 0.55 ) }
    dend_42 { pt3dadd( 224.49, -16.2029, -172.146, 0.28 ) }
    dend_42 { pt3dadd( 226.161, -16.361, -172.415, 0.55 ) }
    dend_42 { pt3dadd( 230.912, -16.4291, -173.55, 0.28 ) }
    dend_42 { pt3dadd( 234.34, -16.2366, -174.363, 0.28 ) }
    dend_42 { pt3dadd( 237.352, -15.85, -175.065, 0.55 ) }
    dend_42 { pt3dadd( 240.687, -15.2967, -175.982, 0.28 ) }
    dend_42 { pt3dadd( 241.536, -15.1135, -176.174, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 88.3445, 9.16373, -52.6105, 0.55 ) }
    dend_35 { pt3dadd( 88.9087, 6.90367, -54.4502, 0.55 ) }
    dend_35 { pt3dadd( 89.2063, 4.97503, -55.8603, 0.28 ) }
    dend_35 { pt3dadd( 89.4792, 3.18964, -56.993, 0.55 ) }
    dend_35 { pt3dadd( 90.2607, -0.591504, -59.4357, 0.28 ) }
    dend_35 { pt3dadd( 90.3026, -0.825359, -59.6243, 0.55 ) }
    dend_35 { pt3dadd( 90.5565, -2.03809, -60.7205, 0.28 ) }
    dend_35 { pt3dadd( 90.665, -3.02073, -61.796, 0.55 ) }
    dend_35 { pt3dadd( 90.712, -4.03108, -63.0458, 0.28 ) }
    dend_35 { pt3dadd( 90.7301, -5.4006, -64.8209, 0.55 ) }
    dend_35 { pt3dadd( 90.7739, -8.84805, -69.2048, 0.55 ) }
    dend_35 { pt3dadd( 90.7724, -11.9826, -73.2623, 0.55 ) }
    dend_35 { pt3dadd( 90.7432, -14.4874, -76.5086, 0.55 ) }
    dend_35 { pt3dadd( 90.6644, -16.955, -79.6492, 0.55 ) }
    dend_35 { pt3dadd( 90.6421, -17.5961, -80.4301, 0.28 ) }
    dend_35 { pt3dadd( 90.641, -18.2885, -81.2012, 0.55 ) }
    dend_35 { pt3dadd( 90.7399, -19.2598, -82.1736, 0.28 ) }
    dend_35 { pt3dadd( 91.1123, -21.0228, -83.7478, 0.55 ) }
    dend_35 { pt3dadd( 92.1427, -24.4684, -86.1968, 0.55 ) }
    dend_35 { pt3dadd( 92.7164, -26.3417, -87.34, 0.28 ) }
    dend_35 { pt3dadd( 93.1838, -28.235, -88.5859, 0.55 ) }
    dend_35 { pt3dadd( 93.6346, -30.8727, -90.43, 0.28 ) }
    dend_35 { pt3dadd( 93.855, -32.9942, -91.9673, 0.55 ) }
    dend_35 { pt3dadd( 94.0422, -36.1641, -94.2689, 0.28 ) }
    dend_35 { pt3dadd( 94.2625, -39.4565, -96.5444, 0.55 ) }
    dend_35 { pt3dadd( 94.5154, -44.2312, -99.8908, 0.28 ) }
    dend_35 { pt3dadd( 94.5918, -46.7748, -101.682, 0.55 ) }
    dend_35 { pt3dadd( 94.6248, -49.3688, -103.578, 0.28 ) }
    dend_35 { pt3dadd( 94.6265, -51.6355, -105.395, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 94.7281, -54.4427, -107.93, 0.55 ) }
    dend_35 { pt3dadd( 95.0161, -57.0549, -110.214, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 59.2168, 15.8045, -4.07027, 0.55 ) }
    dend_31 { pt3dadd( 62.4141, 15.1366, -3.15082, 0.55 ) }
    dend_31 { pt3dadd( 64.7425, 14.5338, -2.69976, 0.55 ) }
    dend_31 { pt3dadd( 69.8426, 13.1251, -1.98094, 0.55 ) }
    dend_31 { pt3dadd( 72.1378, 12.4207, -1.86341, 0.55 ) }
    dend_31 { pt3dadd( 74.6531, 11.6929, -1.87159, 0.55 ) }
    dend_31 { pt3dadd( 78.0456, 10.7506, -2.13382, 0.55 ) }
    dend_31 { pt3dadd( 81.6246, 9.62355, -2.74757, 0.55 ) }
    dend_31 { pt3dadd( 83.5074, 8.98408, -3.28633, 0.55 ) }
    dend_31 { pt3dadd( 87.3502, 7.6275, -4.91352, 0.55 ) }
    dend_31 { pt3dadd( 89.1235, 7.01158, -5.72153, 0.55 ) }
    dend_31 { pt3dadd( 93.2726, 5.47637, -7.71621, 0.55 ) }
    dend_31 { pt3dadd( 96.0687, 4.32427, -9.03249, 0.55 ) }
    dend_31 { pt3dadd( 98.1221, 3.47318, -9.90407, 0.83 ) }
    dend_31 { pt3dadd( 101.387, 1.99235, -11.2464, 0.55 ) }
    dend_31 { pt3dadd( 104.562, 0.394631, -12.4173, 0.83 ) }
    dend_31 { pt3dadd( 107.238, -1.07924, -13.2985, 0.55 ) }
    dend_31 { pt3dadd( 109.62, -2.34096, -13.9556, 0.55 ) }
    dend_31 { pt3dadd( 110.98, -2.9883, -14.2569, 0.83 ) }
    dend_31 { pt3dadd( 114.15, -4.47111, -14.7866, 0.28 ) }
    dend_31 { pt3dadd( 115.732, -5.12963, -14.952, 0.28 ) }
    dend_31 { pt3dadd( 117.253, -5.87631, -15.1848, 0.28 ) }
    dend_31 { pt3dadd( 118.903, -6.63828, -15.4485, 0.28 ) }
    dend_31 { pt3dadd( 121.55, -7.81175, -15.9325, 0.28 ) }
    dend_31 { pt3dadd( 122.616, -8.26681, -16.0955, 0.55 ) }
    dend_31 { pt3dadd( 125.161, -9.30107, -16.2283, 0.55 ) }
    dend_31 { pt3dadd( 129.731, -11.1836, -16.2225, 0.55 ) }
    dend_31 { pt3dadd( 130.99, -11.7335, -16.1596, 0.55 ) }
    dend_31 { pt3dadd( 132.108, -12.2577, -16.0492, 0.83 ) }
    dend_31 { pt3dadd( 134.541, -13.296, -15.6098, 0.55 ) }
    dend_31 { pt3dadd( 136.655, -14.1905, -15.1926, 0.55 ) }
    dend_31 { pt3dadd( 138.654, -15.0257, -14.7894, 0.55 ) }
    dend_31 { pt3dadd( 140.199, -15.7058, -14.5207, 0.55 ) }
    dend_31 { pt3dadd( 142.632, -16.9774, -14.2045, 0.55 ) }
    dend_31 { pt3dadd( 145.47, -18.762, -13.9761, 0.55 ) }
    dend_31 { pt3dadd( 149.823, -22.1032, -13.9055, 0.55 ) }
    dend_31 { pt3dadd( 152.169, -24.3383, -13.9979, 0.55 ) }
    dend_31 { pt3dadd( 154.157, -26.6742, -14.1574, 0.28 ) }
    dend_31 { pt3dadd( 154.732, -27.5233, -14.231, 0.55 ) }
    dend_31 { pt3dadd( 155.947, -29.8606, -14.4315, 0.28 ) }
    dend_31 { pt3dadd( 156.921, -32.4388, -14.6221, 0.55 ) }
    dend_31 { pt3dadd( 157.74, -35.5927, -14.6362, 0.55 ) }
    dend_31 { pt3dadd( 158.297, -37.6579, -14.5509, 0.28 ) }
    dend_31 { pt3dadd( 158.503, -38.3849, -14.4864, 0.55 ) }
    dend_31 { pt3dadd( 159.048, -40.1914, -14.301, 0.28 ) }
    dend_31 { pt3dadd( 159.804, -42.5406, -14.0038, 0.55 ) }
    dend_31 { pt3dadd( 161.831, -48.2066, -13.1447, 0.55 ) }
    dend_31 { pt3dadd( 162.898, -51.0603, -12.6526, 0.55 ) }
    dend_31 { pt3dadd( 163.893, -53.6749, -12.1786, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 59.2168, 15.8045, -4.07027, 0.55 ) }
    dend_30 { pt3dadd( 61.3444, 15.3752, -2.67077, 0.55 ) }
    dend_30 { pt3dadd( 62.0253, 15.2465, -2.25706, 0.55 ) }
    dend_30 { pt3dadd( 64.5462, 14.6889, -0.853422, 0.55 ) }
    dend_30 { pt3dadd( 67.3677, 14.1045, 0.76925, 0.55 ) }
    dend_30 { pt3dadd( 70.986, 13.3189, 2.93512, 0.55 ) }
    dend_30 { pt3dadd( 71.9853, 13.105, 3.52756, 0.55 ) }
    dend_30 { pt3dadd( 73.7705, 12.6637, 4.55287, 0.55 ) }
    dend_30 { pt3dadd( 75.7301, 12.2437, 5.6224, 0.55 ) }
    dend_30 { pt3dadd( 78.0117, 11.845, 6.79098, 0.55 ) }
    dend_30 { pt3dadd( 80.1652, 11.4948, 7.90874, 0.55 ) }
    dend_30 { pt3dadd( 81.3505, 11.3685, 8.48813, 0.55 ) }
    dend_30 { pt3dadd( 82.7462, 11.2573, 9.17863, 0.55 ) }
    dend_30 { pt3dadd( 84.4768, 11.1746, 10.0198, 0.83 ) }
    dend_30 { pt3dadd( 87.3016, 11.1227, 11.125, 0.55 ) }
    dend_30 { pt3dadd( 89.1616, 11.0485, 11.7517, 0.83 ) }
    dend_30 { pt3dadd( 91.7288, 10.8643, 12.5032, 0.55 ) }
    dend_30 { pt3dadd( 92.5123, 10.7718, 12.71, 0.55 ) }
    dend_30 { pt3dadd( 94.9289, 10.389, 13.2665, 0.55 ) }
    dend_30 { pt3dadd( 99.2197, 9.5151, 14.0174, 0.55 ) }
    dend_30 { pt3dadd( 102.341, 8.73427, 14.4434, 0.55 ) }
    dend_30 { pt3dadd( 104.801, 7.98977, 14.7989, 0.55 ) }
    dend_30 { pt3dadd( 107.298, 7.07868, 15.2007, 0.55 ) }
    dend_30 { pt3dadd( 107.822, 6.87278, 15.2832, 0.28 ) }
    dend_30 { pt3dadd( 108.879, 6.41547, 15.4341, 0.83 ) }
    dend_30 { pt3dadd( 113.215, 4.46882, 16.0575, 0.55 ) }
    dend_30 { pt3dadd( 116.247, 3.12938, 16.4377, 0.55 ) }
    dend_30 { pt3dadd( 118.744, 2.07039, 16.8313, 0.55 ) }
    dend_30 { pt3dadd( 120.236, 1.42873, 17.0788, 0.83 ) }
    dend_30 { pt3dadd( 121.412, 0.939224, 17.2813, 0.28 ) }
    dend_30 { pt3dadd( 122.479, 0.5001, 17.4559, 0.55 ) }
    dend_30 { pt3dadd( 131.06, -1.37028, 20.6392, 0.55 ) }
    dend_30 { pt3dadd( 139.918, -4.10345, 21.7831, 0.55 ) }
    dend_30 { pt3dadd( 148.878, -5.91, 23.7081, 0.55 ) }
    dend_30 { pt3dadd( 156.821, -9.46555, 27.1014, 0.55 ) }
    dend_30 { pt3dadd( 164.085, -14.2586, 30.4957, 0.55 ) }
    dend_30 { pt3dadd( 171.779, -19.5351, 30.9563, 0.55 ) }
    dend_30 { pt3dadd( 179.173, -25.095, 29.6646, 0.55 ) }
    dend_30 { pt3dadd( 187.538, -29.0298, 28.325, 0.55 ) }
    dend_30 { pt3dadd( 195.815, -33.2862, 27.5336, 0.55 ) }
    dend_30 { pt3dadd( 204.541, -36.449, 26.4872, 0.55 ) }
    dend_30 { pt3dadd( 213.327, -39.6127, 26.7106, 0.55 ) }
    dend_30 { pt3dadd( 221.38, -44.3419, 26.9139, 0.55 ) }
    dend_30 { pt3dadd( 229.884, -47.8653, 28.5029, 0.55 ) }
    dend_30 { pt3dadd( 238.225, -50.4876, 31.7897, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -3.01398, -36.2033, 6.98673, 1.38 ) }
    dend_13 { pt3dadd( 0.169723, -39.4132, 6.74911, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -3.01398, -36.2033, 6.98673, 0.55 ) }
    dend_12 { pt3dadd( -4.44152, -37.7865, 7.16829, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -6.03373, -39.8289, 7.36853, 0.55 ) }
    dend_12 { pt3dadd( -7.26004, -41.1721, 7.53889, 0.55 ) }
    dend_12 { pt3dadd( -8.31101, -42.2929, 7.52509, 0.55 ) }
    dend_12 { pt3dadd( -10.6217, -44.6065, 7.28792, 0.55 ) }
    dend_12 { pt3dadd( -12.2432, -46.1473, 7.07923, 0.55 ) }
    dend_12 { pt3dadd( -13.6915, -47.5288, 6.84175, 0.55 ) }
    dend_12 { pt3dadd( -17.4026, -50.8813, 6.23596, 0.55 ) }
    dend_12 { pt3dadd( -21.8507, -54.7549, 5.54251, 0.55 ) }
    dend_12 { pt3dadd( -25.2987, -57.6842, 4.94905, 0.55 ) }
    dend_12 { pt3dadd( -27.5054, -59.6107, 4.53972, 0.55 ) }
    dend_12 { pt3dadd( -30.0415, -61.9284, 4.07676, 0.55 ) }
    dend_12 { pt3dadd( -33.2734, -65.2748, 3.52722, 0.55 ) }
    dend_12 { pt3dadd( -35.1808, -67.6703, 3.24088, 0.55 ) }
    dend_12 { pt3dadd( -37.5359, -71.138, 3.07734, 0.55 ) }
    dend_12 { pt3dadd( -39.4301, -74.405, 3.01343, 0.55 ) }
    dend_12 { pt3dadd( -41.3796, -78.5048, 2.97478, 0.55 ) }
    dend_12 { pt3dadd( -43.2567, -83.3412, 3.00462, 0.55 ) }
    dend_12 { pt3dadd( -44.3149, -87.0587, 3.07642, 0.55 ) }
    dend_12 { pt3dadd( -44.7014, -88.9166, 3.21981, 0.55 ) }
    dend_12 { pt3dadd( -45.3204, -93.2985, 3.76604, 0.55 ) }
    dend_12 { pt3dadd( -45.8147, -97.4033, 4.37611, 0.55 ) }
    dend_12 { pt3dadd( -46.0665, -101.552, 5.27227, 0.55 ) }
    dend_12 { pt3dadd( -46.2211, -103.932, 5.91823, 0.55 ) }
    dend_12 { pt3dadd( -46.6243, -111.295, 8.17927, 0.55 ) }
    dend_12 { pt3dadd( -46.6565, -111.837, 8.35561, 0.55 ) }
    dend_12 { pt3dadd( -46.7826, -115.161, 9.50942, 0.55 ) }
    dend_12 { pt3dadd( -47.2672, -121.091, 11.742, 0.55 ) }
    dend_12 { pt3dadd( -47.454, -123.072, 12.3727, 0.55 ) }
    dend_12 { pt3dadd( -47.8815, -126.161, 12.8386, 0.55 ) }
    dend_12 { pt3dadd( -48.0403, -127.308, 12.7462, 0.55 ) }
    dend_12 { pt3dadd( -48.4886, -131.194, 11.6867, 0.55 ) }
    dend_12 { pt3dadd( -48.6987, -133.715, 10.4554, 0.55 ) }
    dend_12 { pt3dadd( -49.0157, -137.73, 7.66911, 0.55 ) }
    dend_12 { pt3dadd( -49.2481, -142.649, 3.85973, 0.28 ) }
    dend_12 { pt3dadd( -49.3051, -143.865, 2.75234, 0.55 ) }
    dend_12 { pt3dadd( -49.4036, -145.707, 0.91106, 0.28 ) }
    dend_12 { pt3dadd( -49.4227, -145.984, 0.619183, 0.55 ) }
    dend_12 { pt3dadd( -49.5219, -147.504, -0.848297, 0.28 ) }
    dend_12 { pt3dadd( -49.5774, -148.018, -1.22422, 0.55 ) }
    dend_12 { pt3dadd( -49.8681, -150.696, -2.65548, 0.28 ) }
    dend_12 { pt3dadd( -50.0008, -151.606, -3.12704, 0.55 ) }
    dend_12 { pt3dadd( -50.4008, -154.235, -4.33745, 0.28 ) }
    dend_12 { pt3dadd( -50.5227, -155.063, -4.71587, 0.55 ) }
    dend_12 { pt3dadd( -50.9614, -157.919, -5.97247, 0.28 ) }
    dend_12 { pt3dadd( -51.1571, -159.233, -6.55799, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 1.25573, -78.3349, 61.0125, 0.55 ) }
    dend_10 { pt3dadd( -1.42198, -86.5066, 69.3274, 0.55 ) }
    dend_10 { pt3dadd( -5.21347, -93.6582, 78.1343, 0.55 ) }
    dend_10 { pt3dadd( -8.76478, -101.583, 86.3598, 0.55 ) }
    dend_10 { pt3dadd( -12.5475, -109.554, 94.4377, 0.55 ) }
    dend_10 { pt3dadd( -15.2204, -118.838, 101.49, 0.55 ) }
    dend_10 { pt3dadd( -17.6901, -127.739, 109.09, 0.55 ) }
    dend_10 { pt3dadd( -19.1957, -138.466, 114.163, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 1.25573, -78.3349, 61.0125, 0.55 ) }
    dend_3 { pt3dadd( 3.554, -86.71, 68.9173, 0.55 ) }
    dend_3 { pt3dadd( 6.15242, -96.3552, 75.092, 0.55 ) }
    dend_3 { pt3dadd( 6.88213, -106.176, 81.489, 0.55 ) }
    dend_3 { pt3dadd( 6.82304, -116.594, 86.909, 0.55 ) }
    dend_3 { pt3dadd( 7.2543, -126.944, 92.4408, 0.55 ) }
    dend_3 { pt3dadd( 7.85466, -136.87, 98.6875, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -42.8961, 37.5638, -18.3532, 0.83 ) }
    dend_60 { pt3dadd( -42.3877, 39.4615, -19.6638, 0.83 ) }
    dend_60 { pt3dadd( -41.3152, 43.9816, -22.551, 0.55 ) }
    dend_60 { pt3dadd( -40.8761, 45.9065, -23.6602, 0.83 ) }
    dend_60 { pt3dadd( -40.4226, 47.9444, -24.7263, 0.55 ) }
    dend_60 { pt3dadd( -40.0048, 49.9944, -25.5688, 0.55 ) }
    dend_60 { pt3dadd( -39.8096, 51.0035, -25.8747, 0.28 ) }
    dend_60 { pt3dadd( -39.7462, 51.642, -25.9347, 0.55 ) }
    dend_60 { pt3dadd( -39.5533, 53.7003, -25.6995, 0.28 ) }
    dend_60 { pt3dadd( -39.4575, 54.5745, -25.5522, 0.55 ) }
    dend_60 { pt3dadd( -39.1828, 57.5888, -24.927, 0.28 ) }
    dend_60 { pt3dadd( -39.0404, 59.9584, -24.364, 0.55 ) }
    dend_60 { pt3dadd( -39.0143, 63.6249, -23.4044, 0.28 ) }
    dend_60 { pt3dadd( -39.1155, 66.8278, -22.5205, 0.28 ) }
    dend_60 { pt3dadd( -39.2828, 68.606, -22.0104, 0.55 ) }
    dend_60 { pt3dadd( -39.6126, 70.7037, -21.4291, 0.28 ) }
    dend_60 { pt3dadd( -39.8396, 71.6967, -21.15, 0.55 ) }
    dend_60 { pt3dadd( -40.4848, 74.0414, -20.6257, 0.28 ) }
    dend_60 { pt3dadd( -41.006, 75.6108, -20.3792, 0.28 ) }
    dend_60 { pt3dadd( -41.5427, 77.1582, -20.1908, 0.28 ) }
    dend_60 { pt3dadd( -41.7941, 77.979, -20.0886, 0.55 ) }
    dend_60 { pt3dadd( -42.6181, 81.3304, -19.7193, 0.28 ) }
    dend_60 { pt3dadd( -43.4498, 85.3255, -19.3293, 0.55 ) }
    dend_60 { pt3dadd( -43.7161, 86.7081, -19.1962, 0.55 ) }
    dend_60 { pt3dadd( -44.0103, 88.0868, -19.0375, 0.55 ) }
    dend_60 { pt3dadd( -44.7805, 91.0105, -18.7768, 0.55 ) }
    dend_60 { pt3dadd( -45.4013, 92.926, -18.6702, 0.28 ) }
    dend_60 { pt3dadd( -45.7181, 93.645, -18.6555, 0.55 ) }
    dend_60 { pt3dadd( -46.7208, 95.5709, -18.601, 0.28 ) }
    dend_60 { pt3dadd( -47.8584, 97.6282, -18.6416, 0.55 ) }
    dend_60 { pt3dadd( -49.7512, 100.581, -18.8698, 0.28 ) }
    dend_60 { pt3dadd( -50.6691, 101.807, -19.0316, 0.28 ) }
    dend_60 { pt3dadd( -52.1371, 103.523, -19.4732, 0.55 ) }
    dend_60 { pt3dadd( -53.7698, 105.316, -20.0521, 0.28 ) }
    dend_60 { pt3dadd( -54.0661, 105.596, -20.1655, 0.55 ) }
    dend_60 { pt3dadd( -55.1319, 106.482, -20.5888, 0.28 ) }
    dend_60 { pt3dadd( -58.8124, 109.298, -22.0195, 0.55 ) }
    dend_60 { pt3dadd( -63.8828, 112.786, -24.2845, 0.28 ) }
    dend_60 { pt3dadd( -64.808, 113.38, -24.7707, 0.55 ) }
    dend_60 { pt3dadd( -67.3371, 114.914, -26.1677, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -68.3935, 115.549, -26.7867, 0.28 ) }
    dend_60 { pt3dadd( -69.3034, 116.084, -27.3749, 0.55 ) }
    dend_60 { pt3dadd( -71.9188, 117.349, -29.3711, 0.28 ) }
    dend_60 { pt3dadd( -73.7714, 118.023, -30.7383, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -42.8961, 37.5638, -18.3532, 0.55 ) }
    dend_57 { pt3dadd( -43.0331, 38.4056, -18.4024, 0.55 ) }
    dend_57 { pt3dadd( -43.1302, 38.8983, -18.3865, 0.28 ) }
    dend_57 { pt3dadd( -43.2769, 39.2407, -18.2948, 0.55 ) }
    dend_57 { pt3dadd( -43.6138, 40.0269, -18.0841, 0.28 ) }
    dend_57 { pt3dadd( -43.8505, 40.5792, -17.9361, 0.55 ) }
    dend_57 { pt3dadd( -44.2867, 41.5972, -17.6634, 0.28 ) }
    dend_57 { pt3dadd( -44.5853, 42.1325, -17.4241, 0.55 ) }
    dend_57 { pt3dadd( -45.7336, 43.3504, -16.4125, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -129.702, -50.7602, -2.58936, 0.55 ) }
    dend_52 { pt3dadd( -134.987, -57.7625, -4.22311, 0.55 ) }
    dend_52 { pt3dadd( -138.887, -65.4942, -6.37658, 0.55 ) }
    dend_52 { pt3dadd( -142.102, -72.7997, -10.3664, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -129.702, -50.7602, -2.58936, 0.55 ) }
    dend_49 { pt3dadd( -134.989, -56.6245, -5.56447, 0.55 ) }
    dend_49 { pt3dadd( -139.475, -62.5989, -9.4839, 0.55 ) }
    dend_49 { pt3dadd( -143.63, -68.6984, -13.5724, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -137.939, 16.4085, 65.6381, 0.55 ) }
    dend_47 { pt3dadd( -142.883, 16.4552, 69.6371, 0.55 ) }
    dend_47 { pt3dadd( -148.139, 17.3454, 73.1043, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -137.939, 16.4085, 65.6381, 0.55 ) }
    dend_46 { pt3dadd( -145.848, 15.5919, 68.9623, 0.55 ) }
    dend_46 { pt3dadd( -153.657, 16.171, 72.5601, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 95.0161, -57.0549, -110.214, 0.28 ) }
    dend_39 { pt3dadd( 102.961, -62.032, -124.567, 0.28 ) }
    dend_39 { pt3dadd( 103.758, -62.5886, -125.841, 0.55 ) }
    dend_39 { pt3dadd( 105.103, -63.5283, -127.991, 0.28 ) }
    dend_39 { pt3dadd( 106.235, -64.3195, -129.803, 0.28 ) }
    dend_39 { pt3dadd( 107.735, -65.3669, -132.2, 0.55 ) }
    dend_39 { pt3dadd( 109.711, -66.7478, -135.361, 0.55 ) }
    dend_39 { pt3dadd( 112.479, -68.9922, -136.977, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 95.0161, -57.0549, -110.214, 0.55 ) }
    dend_36 { pt3dadd( 95.603, -58.0984, -111.528, 0.55 ) }
    dend_36 { pt3dadd( 95.7683, -58.5601, -112.115, 0.28 ) }
    dend_36 { pt3dadd( 96.0035, -59.3454, -113.14, 0.55 ) }
    dend_36 { pt3dadd( 96.5218, -61.0753, -115.399, 0.28 ) }
    dend_36 { pt3dadd( 96.8809, -62.2742, -116.965, 0.55 ) }
    dend_36 { pt3dadd( 97.4894, -64.3054, -119.617, 0.28 ) }
    dend_36 { pt3dadd( 98.1557, -66.751, -123.088, 0.28 ) }
    dend_36 { pt3dadd( 98.4054, -67.8677, -124.712, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 163.893, -53.6749, -12.1786, 0.28 ) }
    dend_33 { pt3dadd( 165.972, -57.6393, -11.1635, 0.28 ) }
    dend_33 { pt3dadd( 168.519, -62.8742, -9.42667, 0.28 ) }
    dend_33 { pt3dadd( 170.102, -66.2698, -8.17463, 0.55 ) }
    dend_33 { pt3dadd( 171.077, -68.1584, -7.37997, 0.28 ) }
    dend_33 { pt3dadd( 171.592, -69.1746, -6.94383, 0.28 ) }
    dend_33 { pt3dadd( 174.159, -74.1912, -4.86352, 0.55 ) }
    dend_33 { pt3dadd( 174.742, -75.3131, -4.25719, 0.28 ) }
    dend_33 { pt3dadd( 176.042, -78.2529, -2.49581, 0.55 ) }
    dend_33 { pt3dadd( 177.153, -80.8034, -1.07098, 0.28 ) }
    dend_33 { pt3dadd( 178.157, -82.886, 0.0611869, 0.55 ) }
    dend_33 { pt3dadd( 179.34, -85.3704, 1.26123, 0.55 ) }
    dend_33 { pt3dadd( 181.279, -89.3068, 2.68924, 0.55 ) }
    dend_33 { pt3dadd( 181.746, -90.2708, 3.00441, 0.55 ) }
    dend_33 { pt3dadd( 183.399, -93.8596, 4.12954, 0.28 ) }
    dend_33 { pt3dadd( 184.03, -95.3202, 4.5453, 0.55 ) }
    dend_33 { pt3dadd( 184.941, -97.1965, 5.08359, 0.28 ) }
    dend_33 { pt3dadd( 186.238, -99.8572, 5.72879, 0.55 ) }
    dend_33 { pt3dadd( 188.487, -104.052, 6.1754, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 163.893, -53.6749, -12.1786, 0.55 ) }
    dend_32 { pt3dadd( 162.622, -53.4755, -12.3362, 0.55 ) }
    dend_32 { pt3dadd( 161.59, -53.3136, -12.4642, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.169723, -39.4132, 6.74911, 0.83 ) }
    dend_17 { pt3dadd( 0.323359, -39.7234, 6.74396, 0.83 ) }
    dend_17 { pt3dadd( 2.07469, -42.4606, 6.91265, 0.83 ) }
    dend_17 { pt3dadd( 3.62642, -44.8602, 6.89907, 0.55 ) }
    dend_17 { pt3dadd( 4.86437, -46.7747, 6.88824, 0.55 ) }
    dend_17 { pt3dadd( 7.49568, -50.8439, 6.86521, 0.83 ) }
    dend_17 { pt3dadd( 10.6872, -55.7796, 6.83729, 0.55 ) }
    dend_17 { pt3dadd( 12.4212, -58.3612, 6.88172, 0.83 ) }
    dend_17 { pt3dadd( 15.467, -62.4613, 7.17031, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.169723, -39.4132, 6.74911, 0.55 ) }
    dend_14 { pt3dadd( -0.0347446, -40.3745, 4.04585, 0.55 ) }
    dend_14 { pt3dadd( -0.254216, -41.4063, 1.14424, 0.55 ) }
    dend_14 { pt3dadd( -0.513304, -42.6243, -2.28115, 0.55 ) }
    dend_14 { pt3dadd( -0.827921, -44.1035, -6.44067, 0.55 ) }
    dend_14 { pt3dadd( -1.00646, -44.9428, -8.80106, 0.55 ) }
    dend_14 { pt3dadd( -1.04232, -45.1114, -9.27523, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 7.85466, -136.87, 98.6875, 0.55 ) }
    dend_7 { pt3dadd( 8.89438, -143.165, 103.049, 0.55 ) }
    dend_7 { pt3dadd( 10.7986, -149.851, 106.425, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 7.85466, -136.87, 98.6875, 0.55 ) }
    dend_4 { pt3dadd( 8.25992, -144.159, 102.862, 0.55 ) }
    dend_4 { pt3dadd( 8.33331, -151.276, 107.341, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -45.7336, 43.3504, -16.4125, 0.28 ) }
    dend_59 { pt3dadd( -46.8093, 44.9765, -14.9626, 0.28 ) }
    dend_59 { pt3dadd( -47.2063, 45.5988, -14.343, 0.55 ) }
    dend_59 { pt3dadd( -48.3331, 47.4051, -12.5132, 0.28 ) }
    dend_59 { pt3dadd( -48.9046, 48.2924, -11.6957, 0.55 ) }
    dend_59 { pt3dadd( -50.4795, 50.6867, -9.56488, 0.28 ) }
    dend_59 { pt3dadd( -52.0802, 53.1201, -7.3992, 0.55 ) }
    dend_59 { pt3dadd( -54.7294, 56.9498, -3.76033, 0.28 ) }
    dend_59 { pt3dadd( -55.293, 57.7719, -2.98533, 0.55 ) }
    dend_59 { pt3dadd( -56.538, 59.6847, -1.35562, 0.28 ) }
    dend_59 { pt3dadd( -57.0214, 60.4752, -0.719877, 0.55 ) }
    dend_59 { pt3dadd( -62.7879, 65.8321, 5.03494, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -69.4342, 72.0255, 8.5754, 0.55 ) }
    dend_59 { pt3dadd( -74.9472, 78.5865, 13.2257, 0.55 ) }
    dend_59 { pt3dadd( -79.2043, 86.2879, 17.4248, 0.55 ) }
    dend_59 { pt3dadd( -84.5347, 93.5642, 21.1273, 0.55 ) }
    dend_59 { pt3dadd( -90.5834, 99.4661, 25.99, 0.55 ) }
    dend_59 { pt3dadd( -95.8685, 104.761, 32.2427, 0.55 ) }
    dend_59 { pt3dadd( -100.138, 109.211, 39.7949, 0.55 ) }
    dend_59 { pt3dadd( -104.451, 114.182, 46.9891, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -45.7336, 43.3504, -16.4125, 0.55 ) }
    dend_58 { pt3dadd( -49.7186, 41.783, -15.0858, 0.55 ) }
    dend_58 { pt3dadd( -51.7866, 40.8992, -14.404, 0.28 ) }
    dend_58 { pt3dadd( -53.3256, 40.2415, -13.8967, 0.55 ) }
    dend_58 { pt3dadd( -54.6083, 39.6934, -13.4738, 0.28 ) }
    dend_58 { pt3dadd( -55.5067, 39.3094, -13.1776, 0.55 ) }
    dend_58 { pt3dadd( -57.984, 38.2508, -12.361, 0.28 ) }
    dend_58 { pt3dadd( -59.615, 37.4177, -12.0354, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -142.102, -72.7997, -10.3664, 0.55 ) }
    dend_54 { pt3dadd( -146.272, -81.6944, -9.56404, 0.55 ) }
    dend_54 { pt3dadd( -150.263, -90.503, -7.66107, 0.55 ) }
    dend_54 { pt3dadd( -153.502, -99.8082, -7.41702, 0.55 ) }
    dend_54 { pt3dadd( -157.735, -108.593, -5.98493, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -142.102, -72.7997, -10.3664, 0.55 ) }
    dend_53 { pt3dadd( -147.34, -80.9162, -17.1531, 0.55 ) }
    dend_53 { pt3dadd( -151.919, -87.9427, -25.4609, 0.55 ) }
    dend_53 { pt3dadd( -157.567, -95.8058, -32.2169, 0.55 ) }
    dend_53 { pt3dadd( -165.474, -101.581, -38.8111, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -143.63, -68.6984, -13.5724, 0.55 ) }
    dend_51 { pt3dadd( -149.144, -73.0474, -20.7819, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -143.63, -68.6984, -13.5724, 0.55 ) }
    dend_50 { pt3dadd( -147.386, -77.7271, -16.0889, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 112.479, -68.9922, -136.977, 0.28 ) }
    dend_41 { pt3dadd( 115.181, -70.2289, -138.568, 0.28 ) }
    dend_41 { pt3dadd( 116.436, -70.8033, -139.307, 0.55 ) }
    dend_41 { pt3dadd( 118.829, -71.8987, -140.716, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 112.479, -68.9922, -136.977, 0.55 ) }
    dend_40 { pt3dadd( 112.105, -70.1032, -138.114, 0.55 ) }
    dend_40 { pt3dadd( 111.358, -72.3255, -140.387, 0.28 ) }
    dend_40 { pt3dadd( 111.115, -73.0494, -141.128, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 98.4054, -67.8677, -124.712, 0.28 ) }
    dend_38 { pt3dadd( 99.4617, -71.2843, -128.869, 0.28 ) }
    dend_38 { pt3dadd( 99.9847, -72.9761, -130.928, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 98.4054, -67.8677, -124.712, 0.55 ) }
    dend_37 { pt3dadd( 96.965, -68.7096, -123.712, 0.55 ) }
    dend_37 { pt3dadd( 92.9485, -71.0573, -120.923, 0.28 ) }
    dend_37 { pt3dadd( 91.9944, -71.615, -120.261, 0.55 ) }
    dend_37 { pt3dadd( 89.3842, -73.1406, -118.448, 0.28 ) }
    dend_37 { pt3dadd( 87.7018, -74.124, -117.28, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 15.467, -62.4613, 7.17031, 0.83 ) }
    dend_23 { pt3dadd( 15.5023, -62.7897, 7.14725, 0.83 ) }
    dend_23 { pt3dadd( 16.0366, -67.0777, 6.95937, 0.83 ) }
    dend_23 { pt3dadd( 16.1736, -70.2775, 7.04104, 0.83 ) }
    dend_23 { pt3dadd( 16.111, -73.3456, 7.45287, 0.83 ) }
    dend_23 { pt3dadd( 15.9034, -77.4074, 8.32031, 0.83 ) }
    dend_23 { pt3dadd( 15.5453, -82.0753, 9.50308, 0.83 ) }
    dend_23 { pt3dadd( 15.1868, -87.2678, 11.0989, 0.83 ) }
    dend_23 { pt3dadd( 14.8562, -92.2951, 12.8857, 0.83 ) }
    dend_23 { pt3dadd( 14.0289, -98.4777, 14.9613, 0.83 ) }
    dend_23 { pt3dadd( 13.4782, -101.33, 15.7612, 0.83 ) }
    dend_23 { pt3dadd( 13.0461, -103.484, 16.2259, 0.83 ) }
    dend_23 { pt3dadd( 12.1221, -107.624, 17.035, 0.83 ) }
    dend_23 { pt3dadd( 11.3686, -111.347, 17.5467, 0.83 ) }
    dend_23 { pt3dadd( 10.1358, -119.349, 17.7163, 0.83 ) }
    dend_23 { pt3dadd( 9.47362, -123.766, 17.2355, 0.83 ) }
    dend_23 { pt3dadd( 8.84074, -127.857, 16.4984, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 15.467, -62.4613, 7.17031, 0.55 ) }
    dend_18 { pt3dadd( 14.4614, -65.1071, 6.73614, 0.55 ) }
    dend_18 { pt3dadd( 13.6487, -67.0341, 6.54065, 0.55 ) }
    dend_18 { pt3dadd( 13.1094, -68.27, 6.54073, 0.55 ) }
    dend_18 { pt3dadd( 12.2733, -70.2088, 6.74709, 0.55 ) }
    dend_18 { pt3dadd( 10.6096, -74.054, 7.41768, 0.55 ) }
    dend_18 { pt3dadd( 9.20201, -76.9774, 8.20341, 0.55 ) }
    dend_18 { pt3dadd( 7.97725, -79.33, 9.05786, 0.55 ) }
    dend_18 { pt3dadd( 6.62267, -81.7143, 10.0482, 0.55 ) }
    dend_18 { pt3dadd( 5.44422, -83.6959, 10.955, 0.28 ) }
    dend_18 { pt3dadd( 4.36827, -85.3245, 11.8968, 0.55 ) }
    dend_18 { pt3dadd( 2.18857, -88.3052, 13.9516, 0.55 ) }
    dend_18 { pt3dadd( 0.688637, -90.1424, 15.3457, 0.55 ) }
    dend_18 { pt3dadd( -0.157646, -91.1715, 16.1133, 0.55 ) }
    dend_18 { pt3dadd( -1.18502, -92.3848, 16.9394, 0.83 ) }
    dend_18 { pt3dadd( -4.16703, -95.9747, 19.1656, 0.28 ) }
    dend_18 { pt3dadd( -5.14037, -97.1616, 19.8743, 0.55 ) }
    dend_18 { pt3dadd( -6.81185, -99.3, 21.1182, 0.28 ) }
    dend_18 { pt3dadd( -7.34519, -99.9612, 21.5442, 0.55 ) }
    dend_18 { pt3dadd( -8.5096, -101.509, 22.5513, 0.28 ) }
    dend_18 { pt3dadd( -9.14145, -102.387, 23.0692, 0.55 ) }
    dend_18 { pt3dadd( -11.0557, -105.222, 24.0045, 0.55 ) }
    dend_18 { pt3dadd( -15.6763, -112.916, 29.9431, 0.55 ) }
    dend_18 { pt3dadd( -20.0194, -120.267, 36.4958, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.04232, -45.1114, -9.27523, 0.55 ) }
    dend_16 { pt3dadd( -1.85638, -46.6585, -14.1982, 0.55 ) }
    dend_16 { pt3dadd( -2.12894, -47.0296, -15.6126, 0.55 ) }
    dend_16 { pt3dadd( -2.87252, -47.9636, -19.0833, 0.55 ) }
    dend_16 { pt3dadd( -4.64864, -49.8377, -26.4872, 0.28 ) }
    dend_16 { pt3dadd( -4.94503, -50.0976, -27.5463, 0.55 ) }
    dend_16 { pt3dadd( -6.25794, -51.2822, -31.85, 0.55 ) }
    dend_16 { pt3dadd( -8.32443, -52.9136, -37.3656, 0.55 ) }
    dend_16 { pt3dadd( -9.14309, -53.4811, -39.4411, 0.28 ) }
    dend_16 { pt3dadd( -9.91735, -53.8711, -41.1876, 0.28 ) }
    dend_16 { pt3dadd( -11.4497, -54.4885, -43.8718, 0.55 ) }
    dend_16 { pt3dadd( -13.2571, -55.0862, -47.2518, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -14.9002, -55.3791, -50.4373, 0.55 ) }
    dend_16 { pt3dadd( -16.2047, -55.4131, -52.8678, 0.55 ) }
    dend_16 { pt3dadd( -17.0806, -55.3015, -54.5873, 0.55 ) }
    dend_16 { pt3dadd( -19.5846, -54.759, -59.7629, 0.55 ) }
    dend_16 { pt3dadd( -22.2891, -53.8519, -65.1413, 0.55 ) }
    dend_16 { pt3dadd( -23.4403, -53.3647, -67.3238, 0.28 ) }
    dend_16 { pt3dadd( -24.5127, -52.9322, -69.4268, 0.55 ) }
    dend_16 { pt3dadd( -26.7007, -52.3111, -73.6537, 0.28 ) }
    dend_16 { pt3dadd( -27.443, -52.1406, -75.064, 0.83 ) }
    dend_16 { pt3dadd( -28.9263, -51.7953, -77.5585, 0.28 ) }
    dend_16 { pt3dadd( -30.1205, -51.6847, -79.1581, 0.55 ) }
    dend_16 { pt3dadd( -31.8801, -51.6157, -81.4351, 0.28 ) }
    dend_16 { pt3dadd( -32.6005, -51.5754, -82.3138, 0.55 ) }
    dend_16 { pt3dadd( -33.9913, -51.5384, -83.855, 0.55 ) }
    dend_16 { pt3dadd( -36.1657, -51.1941, -86.097, 0.55 ) }
    dend_16 { pt3dadd( -37.6491, -50.8539, -87.4744, 0.28 ) }
    dend_16 { pt3dadd( -38.9182, -50.393, -88.4862, 0.55 ) }
    dend_16 { pt3dadd( -40.4182, -49.6297, -89.6903, 0.28 ) }
    dend_16 { pt3dadd( -40.6606, -49.4806, -89.8975, 0.55 ) }
    dend_16 { pt3dadd( -42.6498, -48.0366, -92.2151, 0.28 ) }
    dend_16 { pt3dadd( -43.9831, -46.9464, -94.0781, 0.55 ) }
    dend_16 { pt3dadd( -45.5568, -45.3313, -96.8471, 0.83 ) }
    dend_16 { pt3dadd( -46.7255, -43.9486, -99.3353, 0.28 ) }
    dend_16 { pt3dadd( -46.9977, -43.5946, -100.025, 0.55 ) }
    dend_16 { pt3dadd( -48.9546, -40.9397, -105.516, 0.28 ) }
    dend_16 { pt3dadd( -49.2565, -40.4866, -106.539, 0.55 ) }
    dend_16 { pt3dadd( -50.0769, -38.9975, -109.68, 0.28 ) }
    dend_16 { pt3dadd( -50.2863, -38.6145, -110.495, 0.55 ) }
    dend_16 { pt3dadd( -50.8799, -37.6183, -112.5, 0.28 ) }
    dend_16 { pt3dadd( -51.3372, -36.9015, -113.864, 0.55 ) }
    dend_16 { pt3dadd( -52.5527, -35.3062, -116.613, 0.28 ) }
    dend_16 { pt3dadd( -53.3017, -34.4585, -118.198, 0.55 ) }
    dend_16 { pt3dadd( -54.9833, -32.8388, -121.445, 0.28 ) }
    dend_16 { pt3dadd( -55.4909, -32.4053, -122.399, 0.55 ) }
    dend_16 { pt3dadd( -56.3123, -31.8345, -123.852, 0.28 ) }
    dend_16 { pt3dadd( -57.0395, -31.355, -125.033, 0.55 ) }
    dend_16 { pt3dadd( -58.6297, -30.3947, -127.36, 0.28 ) }
    dend_16 { pt3dadd( -59.1214, -30.1225, -128.041, 0.55 ) }
    dend_16 { pt3dadd( -62.9159, -27.9964, -132.877, 0.28 ) }
    dend_16 { pt3dadd( -64.3398, -27.1165, -134.43, 0.55 ) }
    dend_16 { pt3dadd( -67.0002, -25.3844, -137.013, 0.28 ) }
    dend_16 { pt3dadd( -68.2258, -24.5428, -138.137, 0.55 ) }
    dend_16 { pt3dadd( -71.1409, -22.6416, -140.535, 0.28 ) }
    dend_16 { pt3dadd( -72.2392, -22.0028, -141.366, 0.55 ) }
    dend_16 { pt3dadd( -76.3328, -20.121, -144.141, 0.28 ) }
    dend_16 { pt3dadd( -78.0437, -19.5848, -145.279, 0.55 ) }
    dend_16 { pt3dadd( -80.4923, -19.2847, -146.869, 0.55 ) }
    dend_16 { pt3dadd( -82.0169, -19.2112, -147.809, 0.55 ) }
    dend_16 { pt3dadd( -85.2573, -19.1569, -149.482, 0.28 ) }
    dend_16 { pt3dadd( -88.5498, -19.141, -150.93, 0.28 ) }
    dend_16 { pt3dadd( -91.3328, -19.118, -152.06, 0.55 ) }
    dend_16 { pt3dadd( -94.9193, -18.7837, -153.092, 0.28 ) }
    dend_16 { pt3dadd( -96.802, -18.3989, -153.387, 0.55 ) }
    dend_16 { pt3dadd( -101.468, -16.8034, -153.706, 0.28 ) }
    dend_16 { pt3dadd( -104.077, -15.5527, -153.385, 0.55 ) }
    dend_16 { pt3dadd( -105.877, -14.5224, -152.884, 0.28 ) }
    dend_16 { pt3dadd( -108.023, -13.3602, -151.943, 0.55 ) }
    dend_16 { pt3dadd( -110.783, -11.8316, -150.527, 0.28 ) }
    dend_16 { pt3dadd( -111.83, -11.2967, -150.0, 0.55 ) }
    dend_16 { pt3dadd( -117.122, -8.93357, -147.754, 0.28 ) }
    dend_16 { pt3dadd( -118.906, -8.19445, -147.012, 0.55 ) }
    dend_16 { pt3dadd( -123.168, -6.57087, -145.165, 0.28 ) }
    dend_16 { pt3dadd( -125.485, -5.71174, -144.163, 0.55 ) }
    dend_16 { pt3dadd( -127.389, -5.00835, -143.342, 0.55 ) }
    dend_16 { pt3dadd( -129.654, -4.18247, -142.41, 0.28 ) }
    dend_16 { pt3dadd( -130.798, -3.76462, -142.081, 0.55 ) }
    dend_16 { pt3dadd( -134.589, -2.25808, -141.174, 0.28 ) }
    dend_16 { pt3dadd( -136.581, -1.27196, -140.664, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -1.04232, -45.1114, -9.27523, 0.55 ) }
    dend_15 { pt3dadd( -0.542957, -45.1974, -9.55257, 0.55 ) }
    dend_15 { pt3dadd( -0.030015, -45.2214, -9.81712, 0.55 ) }
    dend_15 { pt3dadd( 0.626969, -45.2025, -10.1141, 0.55 ) }
    dend_15 { pt3dadd( 1.17337, -45.1417, -10.3329, 0.55 ) }
    dend_15 { pt3dadd( 4.85597, -44.3623, -11.5017, 0.55 ) }
    dend_15 { pt3dadd( 5.68965, -44.0961, -11.7741, 0.55 ) }
    dend_15 { pt3dadd( 6.92215, -43.6179, -12.1993, 0.55 ) }
    dend_15 { pt3dadd( 7.79505, -43.2514, -12.5051, 0.55 ) }
    dend_15 { pt3dadd( 8.64783, -42.8466, -12.7848, 0.28 ) }
    dend_15 { pt3dadd( 9.96516, -42.1524, -13.1541, 0.55 ) }
    dend_15 { pt3dadd( 11.9317, -41.0604, -13.6017, 0.28 ) }
    dend_15 { pt3dadd( 12.1032, -40.998, -13.6807, 0.55 ) }
    dend_15 { pt3dadd( 13.105, -40.8221, -14.4785, 0.28 ) }
    dend_15 { pt3dadd( 13.6895, -40.7583, -15.1284, 0.55 ) }
    dend_15 { pt3dadd( 14.2566, -40.756, -15.8911, 0.55 ) }
    dend_15 { pt3dadd( 15.2557, -40.8381, -17.2752, 0.55 ) }
    dend_15 { pt3dadd( 17.2236, -41.0224, -19.9858, 0.55 ) }
    dend_15 { pt3dadd( 18.5769, -41.1691, -21.7818, 0.55 ) }
    dend_15 { pt3dadd( 19.0602, -41.2264, -22.3889, 0.55 ) }
    dend_15 { pt3dadd( 22.3303, -41.5615, -26.3024, 0.55 ) }
    dend_15 { pt3dadd( 23.2602, -41.6315, -27.3243, 0.55 ) }
    dend_15 { pt3dadd( 23.8249, -41.6699, -27.8581, 0.55 ) }
    dend_15 { pt3dadd( 25.2493, -41.8008, -28.9864, 0.55 ) }
    dend_15 { pt3dadd( 28.8245, -42.3259, -31.4888, 0.55 ) }
    dend_15 { pt3dadd( 29.8162, -42.5128, -32.1205, 0.28 ) }
    dend_15 { pt3dadd( 30.4082, -42.6467, -32.4364, 0.55 ) }
    dend_15 { pt3dadd( 31.2944, -42.884, -32.887, 0.28 ) }
    dend_15 { pt3dadd( 31.6722, -43.0201, -33.0435, 0.55 ) }
    dend_15 { pt3dadd( 32.8824, -43.5895, -33.2092, 0.28 ) }
    dend_15 { pt3dadd( 33.6505, -44.3105, -32.8385, 0.55 ) }
    dend_15 { pt3dadd( 34.0915, -44.8204, -32.583, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 34.4624, -45.3785, -32.2927, 0.55 ) }
    dend_15 { pt3dadd( 34.7631, -45.9834, -32.001, 0.28 ) }
    dend_15 { pt3dadd( 34.8946, -46.2949, -31.8796, 0.55 ) }
    dend_15 { pt3dadd( 35.1763, -47.109, -31.5631, 0.28 ) }
    dend_15 { pt3dadd( 35.2654, -47.353, -31.5117, 0.55 ) }
    dend_15 { pt3dadd( 35.8129, -48.7546, -31.2885, 0.28 ) }
    dend_15 { pt3dadd( 36.1262, -49.4054, -31.2481, 0.55 ) }
    dend_15 { pt3dadd( 36.9214, -50.8001, -31.2705, 0.28 ) }
    dend_15 { pt3dadd( 37.263, -51.3153, -31.3171, 0.55 ) }
    dend_15 { pt3dadd( 38.4967, -53.0099, -31.5243, 0.28 ) }
    dend_15 { pt3dadd( 38.8082, -53.4223, -31.5885, 0.55 ) }
    dend_15 { pt3dadd( 39.7876, -54.7298, -31.8515, 0.28 ) }
    dend_15 { pt3dadd( 39.9893, -55.0356, -31.9021, 0.55 ) }
    dend_15 { pt3dadd( 40.4955, -55.8436, -32.0437, 0.28 ) }
    dend_15 { pt3dadd( 40.8167, -56.3136, -32.1628, 0.55 ) }
    dend_15 { pt3dadd( 41.1651, -56.7761, -32.3033, 0.55 ) }
    dend_15 { pt3dadd( 41.8572, -57.6987, -32.5772, 0.28 ) }
    dend_15 { pt3dadd( 42.3659, -58.271, -32.7764, 0.55 ) }
    dend_15 { pt3dadd( 44.05, -59.7079, -33.411, 0.28 ) }
    dend_15 { pt3dadd( 44.728, -60.1768, -33.676, 0.55 ) }
    dend_15 { pt3dadd( 45.1997, -60.4749, -33.8492, 0.28 ) }
    dend_15 { pt3dadd( 45.6821, -60.7476, -34.0156, 0.55 ) }
    dend_15 { pt3dadd( 47.1813, -61.5128, -34.4972, 0.28 ) }
    dend_15 { pt3dadd( 48.3105, -62.1053, -34.8357, 0.55 ) }
    dend_15 { pt3dadd( 50.1971, -63.2252, -35.2906, 0.28 ) }
    dend_15 { pt3dadd( 50.7912, -63.5737, -35.431, 0.55 ) }
    dend_15 { pt3dadd( 51.9115, -64.213, -35.6161, 0.28 ) }
    dend_15 { pt3dadd( 52.2776, -64.4222, -35.6519, 0.55 ) }
    dend_15 { pt3dadd( 52.8424, -64.7546, -35.6183, 0.28 ) }
    dend_15 { pt3dadd( 53.3279, -65.0343, -35.5503, 0.55 ) }
    dend_15 { pt3dadd( 54.6012, -65.7255, -35.2421, 0.28 ) }
    dend_15 { pt3dadd( 56.0576, -66.4593, -34.8652, 0.28 ) }
    dend_15 { pt3dadd( 56.777, -66.7968, -34.6254, 0.28 ) }
    dend_15 { pt3dadd( 57.5222, -67.1151, -34.4248, 0.55 ) }
    dend_15 { pt3dadd( 58.6172, -67.5305, -34.135, 0.28 ) }
    dend_15 { pt3dadd( 59.1007, -67.7079, -33.9964, 0.83 ) }
    dend_15 { pt3dadd( 60.3136, -68.1754, -33.5995, 0.28 ) }
    dend_15 { pt3dadd( 60.8509, -68.3909, -33.4551, 0.55 ) }
    dend_15 { pt3dadd( 63.2489, -69.4286, -32.9229, 0.28 ) }
    dend_15 { pt3dadd( 64.4835, -69.9633, -32.745, 0.28 ) }
    dend_15 { pt3dadd( 65.4022, -70.3532, -32.6679, 0.55 ) }
    dend_15 { pt3dadd( 65.9569, -70.5919, -32.6761, 0.55 ) }
    dend_15 { pt3dadd( 67.4633, -71.2458, -32.7971, 0.28 ) }
    dend_15 { pt3dadd( 68.8833, -71.9138, -32.9593, 0.55 ) }
    dend_15 { pt3dadd( 70.1733, -72.5571, -33.1078, 0.28 ) }
    dend_15 { pt3dadd( 71.3561, -73.1547, -33.2938, 0.55 ) }
    dend_15 { pt3dadd( 72.3333, -73.6386, -33.4425, 0.28 ) }
    dend_15 { pt3dadd( 73.1261, -73.9843, -33.5276, 0.55 ) }
    dend_15 { pt3dadd( 75.0233, -74.7225, -33.657, 0.28 ) }
    dend_15 { pt3dadd( 75.974, -75.0946, -33.689, 0.55 ) }
    dend_15 { pt3dadd( 77.3866, -75.6561, -33.6924, 0.28 ) }
    dend_15 { pt3dadd( 78.5376, -76.085, -33.6715, 0.55 ) }
    dend_15 { pt3dadd( 81.2423, -76.9819, -33.6239, 0.28 ) }
    dend_15 { pt3dadd( 82.3706, -77.2922, -33.6673, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 10.7986, -149.851, 106.425, 0.55 ) }
    dend_9 { pt3dadd( 11.0789, -158.21, 110.171, 0.55 ) }
    dend_9 { pt3dadd( 10.8241, -167.233, 111.753, 0.55 ) }
    dend_9 { pt3dadd( 10.8694, -175.928, 114.646, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 10.7986, -149.851, 106.425, 0.55 ) }
    dend_8 { pt3dadd( 12.7262, -157.55, 110.988, 0.55 ) }
    dend_8 { pt3dadd( 14.4711, -164.044, 117.2, 0.55 ) }
    dend_8 { pt3dadd( 17.1278, -169.15, 124.319, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 8.33331, -151.276, 107.341, 0.55 ) }
    dend_6 { pt3dadd( 10.1348, -161.086, 113.094, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 8.33331, -151.276, 107.341, 0.55 ) }
    dend_5 { pt3dadd( 7.9777, -161.475, 113.51, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 8.84074, -127.857, 16.4984, 0.83 ) }
    dend_25 { pt3dadd( 9.59088, -130.915, 17.1664, 0.83 ) }
    dend_25 { pt3dadd( 10.3375, -133.477, 17.9244, 0.83 ) }
    dend_25 { pt3dadd( 11.0798, -136.023, 18.6778, 0.83 ) }
    dend_25 { pt3dadd( 11.7846, -138.441, 19.3933, 0.83 ) }
    dend_25 { pt3dadd( 12.8709, -142.167, 20.496, 0.83 ) }
    dend_25 { pt3dadd( 13.9493, -145.866, 21.5907, 0.83 ) }
    dend_25 { pt3dadd( 14.8545, -148.288, 22.6408, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 8.84074, -127.857, 16.4984, 0.55 ) }
    dend_24 { pt3dadd( 10.4736, -130.255, 16.2536, 0.55 ) }
    dend_24 { pt3dadd( 11.6417, -132.153, 15.7615, 0.55 ) }
    dend_24 { pt3dadd( 12.4089, -133.566, 15.2849, 0.55 ) }
    dend_24 { pt3dadd( 13.0197, -135.234, 14.5975, 0.83 ) }
    dend_24 { pt3dadd( 13.5376, -137.145, 13.6365, 0.55 ) }
    dend_24 { pt3dadd( 14.0443, -139.013, 12.6966, 0.83 ) }
    dend_24 { pt3dadd( 14.4399, -141.051, 11.5346, 0.55 ) }
    dend_24 { pt3dadd( 14.639, -142.243, 10.7606, 0.83 ) }
    dend_24 { pt3dadd( 15.059, -146.117, 8.02491, 0.55 ) }
    dend_24 { pt3dadd( 15.1131, -149.168, 5.76886, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -20.0194, -120.267, 36.4958, 0.55 ) }
    dend_20 { pt3dadd( -25.9764, -129.749, 40.6556, 0.55 ) }
    dend_20 { pt3dadd( -33.5507, -138.1, 44.6061, 0.55 ) }
    dend_20 { pt3dadd( -42.0544, -145.36, 48.8102, 0.55 ) }
    dend_20 { pt3dadd( -51.5855, -151.248, 52.9569, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -20.0194, -120.267, 36.4958, 0.55 ) }
    dend_19 { pt3dadd( -24.2932, -128.964, 42.8561, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 14.8545, -148.288, 22.6408, 0.55 ) }
    dend_27 { pt3dadd( 15.0247, -150.248, 23.3174, 0.55 ) }
    dend_27 { pt3dadd( 15.315, -152.744, 24.2426, 0.55 ) }
    dend_27 { pt3dadd( 15.5893, -155.101, 25.1026, 0.55 ) }
    dend_27 { pt3dadd( 15.7632, -156.78, 25.6887, 0.55 ) }
    dend_27 { pt3dadd( 16.0371, -159.779, 26.6886, 0.55 ) }
    dend_27 { pt3dadd( 16.9291, -168.228, 29.2734, 0.55 ) }
    dend_27 { pt3dadd( 17.2974, -171.106, 30.0215, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 17.5604, -173.144, 30.4448, 0.55 ) }
    dend_27 { pt3dadd( 17.8717, -175.488, 30.7383, 0.55 ) }
    dend_27 { pt3dadd( 18.0741, -177.314, 30.8048, 0.55 ) }
    dend_27 { pt3dadd( 18.6661, -181.594, 30.7779, 0.55 ) }
    dend_27 { pt3dadd( 19.0019, -184.845, 30.7589, 0.55 ) }
    dend_27 { pt3dadd( 19.2828, -186.974, 30.8062, 0.55 ) }
    dend_27 { pt3dadd( 20.0053, -192.471, 31.2122, 0.55 ) }
    dend_27 { pt3dadd( 20.4755, -196.154, 31.6507, 0.55 ) }
    dend_27 { pt3dadd( 21.1179, -200.879, 32.4836, 0.55 ) }
    dend_27 { pt3dadd( 21.9387, -206.206, 33.8424, 0.55 ) }
    dend_27 { pt3dadd( 22.6616, -209.741, 34.9647, 0.55 ) }
    dend_27 { pt3dadd( 23.1437, -211.825, 35.6823, 0.55 ) }
    dend_27 { pt3dadd( 23.5511, -213.747, 36.3403, 0.55 ) }
    dend_27 { pt3dadd( 24.1034, -216.19, 37.0533, 0.55 ) }
    dend_27 { pt3dadd( 25.3416, -222.114, 38.3682, 0.55 ) }
    dend_27 { pt3dadd( 25.8954, -224.412, 38.7861, 0.55 ) }
    dend_27 { pt3dadd( 26.4489, -226.974, 39.2372, 0.55 ) }
    dend_27 { pt3dadd( 27.2468, -230.823, 39.8964, 0.55 ) }
    dend_27 { pt3dadd( 27.7218, -233.783, 40.4397, 0.55 ) }
    dend_27 { pt3dadd( 28.0057, -236.599, 40.9285, 0.55 ) }
    dend_27 { pt3dadd( 28.1552, -239.287, 41.4019, 0.55 ) }
    dend_27 { pt3dadd( 28.2577, -241.907, 41.9049, 0.55 ) }
    dend_27 { pt3dadd( 28.3411, -243.773, 42.2435, 0.55 ) }
    dend_27 { pt3dadd( 28.4914, -246.834, 42.6896, 0.55 ) }
    dend_27 { pt3dadd( 28.6058, -250.535, 42.9453, 0.55 ) }
    dend_27 { pt3dadd( 28.7016, -252.342, 42.931, 0.55 ) }
    dend_27 { pt3dadd( 28.7971, -253.939, 42.7972, 0.55 ) }
    dend_27 { pt3dadd( 29.1067, -256.963, 42.359, 0.55 ) }
    dend_27 { pt3dadd( 29.281, -258.885, 42.0293, 0.55 ) }
    dend_27 { pt3dadd( 29.5266, -261.247, 41.7101, 0.55 ) }
    dend_27 { pt3dadd( 29.6417, -262.9, 41.5892, 0.55 ) }
    dend_27 { pt3dadd( 29.8716, -267.184, 41.4469, 0.55 ) }
    dend_27 { pt3dadd( 29.9756, -270.375, 41.5746, 0.55 ) }
    dend_27 { pt3dadd( 30.0729, -275.283, 42.1833, 0.55 ) }
    dend_27 { pt3dadd( 30.219, -278.424, 42.8744, 0.55 ) }
    dend_27 { pt3dadd( 30.3516, -281.713, 43.7106, 0.28 ) }
    dend_27 { pt3dadd( 30.3739, -283.031, 44.104, 0.28 ) }
    dend_27 { pt3dadd( 30.4262, -286.207, 45.3576, 0.28 ) }
    dend_27 { pt3dadd( 30.4573, -289.121, 46.7575, 0.28 ) }
    dend_27 { pt3dadd( 30.8866, -292.933, 49.0019, 0.28 ) }
    dend_27 { pt3dadd( 32.9265, -301.677, 51.6883, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 14.8545, -148.288, 22.6408, 0.55 ) }
    dend_26 { pt3dadd( 16.1309, -148.744, 23.7196, 0.55 ) }
    dend_26 { pt3dadd( 18.6461, -149.943, 26.1553, 0.55 ) }
    dend_26 { pt3dadd( 20.7633, -151.141, 28.3688, 0.28 ) }
    dend_26 { pt3dadd( 22.9922, -152.511, 30.8257, 0.55 ) }
    dend_26 { pt3dadd( 24.2161, -153.378, 32.52, 0.28 ) }
    dend_26 { pt3dadd( 26.1914, -154.933, 35.7089, 0.55 ) }
    dend_26 { pt3dadd( 26.8235, -155.763, 37.3708, 0.28 ) }
    dend_26 { pt3dadd( 27.0044, -156.06, 38.0459, 0.28 ) }
    dend_26 { pt3dadd( 27.3098, -156.467, 39.2155, 0.55 ) }
    dend_26 { pt3dadd( 28.6602, -157.765, 43.54, 0.28 ) }
    dend_26 { pt3dadd( 29.2715, -158.262, 45.3299, 0.55 ) }
    dend_26 { pt3dadd( 31.4377, -159.713, 50.3253, 0.28 ) }
    dend_26 { pt3dadd( 32.7219, -160.417, 52.8921, 0.28 ) }
    dend_26 { pt3dadd( 34.4325, -161.337, 55.9491, 0.55 ) }
    dend_26 { pt3dadd( 37.2155, -162.799, 60.1845, 0.28 ) }
    dend_26 { pt3dadd( 37.6304, -162.995, 60.7041, 0.55 ) }
    dend_26 { pt3dadd( 39.7886, -163.959, 63.0949, 0.28 ) }
    dend_26 { pt3dadd( 40.0009, -164.05, 63.2873, 0.55 ) }
    dend_26 { pt3dadd( 41.8398, -165.175, 65.0672, 0.28 ) }
    dend_26 { pt3dadd( 42.6785, -165.796, 65.9779, 0.55 ) }
    dend_26 { pt3dadd( 49.5228, -170.323, 73.5018, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -51.5855, -151.248, 52.9569, 0.55 ) }
    dend_22 { pt3dadd( -58.9177, -156.171, 58.9222, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -51.5855, -151.248, 52.9569, 0.55 ) }
    dend_21 { pt3dadd( -59.0245, -159.275, 56.0301, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 9
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 17
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 11
    dend_35 nseg = 5
    dend_31 nseg = 7
    dend_30 nseg = 11
    dend_12 nseg = 7
    dend_10 nseg = 5
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 5
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 11
    dend_15 nseg = 5
    dend_20 nseg = 3
    dend_27 nseg = 7
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_BP_41b33b48e3_0_0


