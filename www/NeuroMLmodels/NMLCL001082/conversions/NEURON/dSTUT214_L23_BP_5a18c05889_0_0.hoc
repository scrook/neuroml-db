// Cell: dSTUT214_L23_BP_5a18c05889_0_0
/*
{
  "id" : "dSTUT214_L23_BP_5a18c05889_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -8.70147, 10.7418, 1.66", "-0.344698, -9.81395, 11.6872, 1.66", "-0.659634, -11.0147, 12.7077, 1.66", "-1.20049, -13.0768, 14.4601, 1.39", "-3.35148, -21.2779, 21.4297, 1.11", "-3.72882, -22.7166, 22.6524, 1.11", "-4.20672, -24.5387, 24.2009, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 7.66878, -0.778182, 1.39", "0.630767, 14.9279, 2.47044, 0.83", "0.635272, 17.3182, 3.54012, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-4.20672, -24.5387, 24.2009, 0.83", "-6.59394, -29.3238, 22.4722, 0.83", "-7.16235, -30.4632, 22.0606, 0.83", "-8.6133, -33.3716, 21.0099, 0.83", "-9.26373, -34.6754, 20.5389, 0.83", "-10.6625, -37.4793, 19.526, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-4.20672, -24.5387, 24.2009, 0.83", "-3.9354, -26.2023, 24.5901, 0.83", "-3.68435, -27.7095, 24.919, 0.83", "-3.41397, -29.699, 25.3077, 0.83", "-2.68606, -34.2314, 26.0919, 0.83", "-2.02153, -37.9625, 26.6931, 0.55", "-0.861679, -44.2946, 27.5701, 0.55", "-0.202714, -47.4233, 28.0558, 0.83", "0.632587, -50.9826, 28.6354, 0.55", "2.12874, -56.7536, 29.8035, 0.55", "2.58544, -58.3934, 30.1664, 0.55", "3.83192, -62.8363, 31.1804, 0.55", "5.38699, -68.4299, 32.6124, 0.55", "6.30428, -71.7791, 33.509, 0.55", "7.47094, -76.2476, 34.7363, 0.55", "9.25904, -84.3561, 36.9697, 0.55", "10.0809, -88.6655, 38.102, 0.55", "10.6343, -91.8997, 38.8832, 0.55", "10.9045, -94.1762, 39.2949, 0.55", "11.0469, -96.1942, 39.5889, 0.55", "11.1383, -100.275, 40.2272, 0.55", "11.1339, -102.328, 40.5533, 0.55", "11.0794, -105.462, 41.1797, 0.55", "10.9754, -109.659, 42.0855, 0.55", "10.7313, -115.728, 43.4682, 0.55", "10.5255, -121.181, 44.8017, 0.55", "10.2785, -125.944, 46.0551, 0.83", "9.99099, -130.489, 47.4089, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.635272, 17.3182, 3.54012, 0.83", "-1.21975, 23.852, 0.843757, 0.83", "-1.6316, 25.5779, 0.173081, 0.83", "-2.14641, 27.6931, -0.6686, 0.83", "-2.52613, 29.4423, -1.32588, 0.83", "-3.0962, 32.2408, -2.32688, 0.83", "-3.7641, 35.9041, -3.57847, 0.83", "-4.17488, 38.5066, -4.25428, 0.83", "-4.61562, 41.3243, -5.04276, 0.83", "-5.078, 44.2201, -5.97743, 0.55", "-5.22667, 45.1371, -6.27856, 0.55", "-5.50834, 46.7042, -6.79314, 0.55", "-6.02948, 49.9796, -7.82966, 0.55", "-6.41785, 52.3542, -8.54428, 0.55", "-7.34247, 58.3084, -10.3473, 0.55", "-7.83197, 60.9941, -11.2586, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.635272, 17.3182, 3.54012, 0.83", "1.69585, 20.0371, 4.42832, 0.83", "2.48758, 22.1803, 5.21671, 0.83", "3.66165, 25.5578, 6.59241, 0.83", "4.7616, 28.8121, 7.95601, 0.83", "5.99864, 32.9292, 9.52283, 0.83", "6.9124, 36.0331, 10.6184, 0.83", "7.51685, 38.3789, 11.4651, 0.83", "8.13529, 40.9521, 12.3055, 0.83", "8.26638, 41.652, 12.4975, 0.83", "9.69557, 49.7011, 14.2593, 0.83", "9.94221, 51.4117, 14.5221, 0.83", "10.2353, 53.7381, 14.7567, 0.83", "10.4594, 55.7517, 14.9152, 0.83", "10.6742, 58.0862, 15.0641, 0.83", "10.9687, 61.0354, 15.2509, 0.83", "11.1903, 64.0725, 15.4422, 0.83", "11.3491, 65.8084, 15.5494, 0.83", "11.6699, 68.4949, 15.7026, 0.83", "11.9409, 71.1355, 15.8648, 0.83", "12.2703, 73.912, 15.9961, 0.83", "12.7058, 77.5405, 16.2083, 0.83", "13.0078, 79.9102, 16.459, 0.83", "13.1549, 81.2208, 16.6384, 0.83", "13.3028, 82.702, 16.9233, 0.83", "13.5384, 84.8926, 17.4801, 0.83", "13.7682, 88.1042, 18.5294, 0.55", "14.1155, 92.3159, 20.0818, 0.55", "14.1555, 93.5532, 20.569, 0.55", "14.2262, 96.1554, 21.5791, 0.55", "14.2241, 97.2458, 21.989, 0.55", "14.1849, 99.2898, 22.757, 0.55", "14.1695, 101.424, 23.4491, 0.55", "14.2606, 104.53, 24.2516, 0.55", "14.3228, 106.576, 24.747, 0.55", "14.3369, 108.439, 25.1394, 0.55", "14.4178, 110.768, 25.6124, 0.55", "14.6413, 113.197, 26.0392, 0.55", "15.0553, 116.513, 26.6595, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-10.6625, -37.4793, 19.526, 0.83", "-12.5695, -42.3338, 21.5723, 0.83", "-14.0372, -46.185, 23.005, 0.83", "-15.7601, -50.8349, 24.5255, 0.83", "-17.1718, -54.6814, 25.6478, 0.83", "-18.0297, -57.0189, 26.3298, 0.83", "-19.0526, -59.806, 27.143, 0.83", "-19.6919, -61.8269, 27.5942, 0.83", "-20.3996, -64.1362, 28.0051, 0.83", "-21.1728, -67.0996, 28.0869, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-10.6625, -37.4793, 19.526, 0.55", "-11.2664, -37.0845, 26.1789, 0.55", "-11.7102, -36.5956, 33.313, 0.55", "-11.9356, -36.3472, 36.937, 0.55", "-12.2196, -36.0344, 41.5015, 0.28", "-12.2665, -35.9827, 42.2556, 0.83", "-12.5126, -35.7117, 46.2113, 0.28", "-12.5365, -35.6211, 46.8858, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-7.83197, 60.9941, -11.2586, 0.55", "-7.63232, 63.1833, -11.5775, 0.55", "-7.44642, 65.4959, -11.9756, 0.55", "-7.30786, 67.1216, -12.2409, 0.55", "-7.07021, 69.5617, -12.6376, 0.83", "-6.89558, 71.2963, -12.9105, 0.55", "-6.71404, 72.9135, -13.1655, 0.55", "-6.52354, 74.4267, -13.3639, 1.11", "-6.21155, 77.0534, -13.7906, 0.55", "-6.13779, 77.9324, -13.9388, 0.55", "-6.05495, 79.0412, -14.1358, 1.11", "-5.9635, 80.4173, -14.3865, 0.55", "-5.92026, 81.3166, -14.5434, 1.11", "-5.80094, 84.0621, -14.9836, 0.55", "-5.8327, 85.509, -15.2879, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-7.83197, 60.9941, -11.2586, 0.28", "-8.63473, 63.6694, -13.9397, 0.28", "-8.73637, 64.071, -14.3313, 0.55", "-9.54814, 67.6256, -17.6477, 0.28", "-10.2413, 70.9489, -20.935, 1.11", "-10.5642, 72.6819, -22.7492, 0.28", "-10.5642, 72.6819, -22.7492, 0.55", "-10.6193, 74.8037, -24.5405, 0.28", "-10.5513, 75.6209, -25.1457, 1.11", "-9.39132, 79.2782, -26.8404, 0.55", "-7.9132, 82.142, -27.2943, 0.28", "-5.20903, 86.6323, -27.4746, 1.11", "-2.67406, 90.4453, -27.2264, 0.28", "-2.60399, 90.5342, -27.2016, 0.55", "-0.354266, 93.0572, -26.0316, 0.28", "-0.133857, 93.2792, -25.8689, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-21.1728, -67.0996, 28.0869, 0.83", "-21.2053, -72.5449, 30.2144, 0.83", "-21.2859, -76.9033, 32.2246, 0.83", "-21.2665, -78.943, 33.1832, 0.83", "-21.2833, -80.1119, 33.8368, 0.83", "-21.4231, -83.3043, 35.6963, 0.83", "-21.5036, -85.1976, 36.6536, 0.83", "-21.5807, -88.809, 38.1126, 0.83", "-21.5285, -91.3139, 39.1432, 0.83", "-21.2051, -95.5968, 40.7736, 0.83", "-20.9031, -97.8063, 41.4729, 0.83", "-19.9648, -103.263, 42.6711, 0.83", "-19.129, -108.146, 43.411, 0.83", "-18.5053, -112.198, 43.6552, 0.83", "-18.1884, -115.135, 43.7307, 0.83", "-18.1314, -115.728, 43.7254, 0.83", "-17.9655, -119.125, 43.859, 0.28", "-17.9917, -120.022, 43.953, 0.83", "-18.2115, -122.338, 44.1158, 0.28", "-18.6505, -126.453, 44.3334, 0.28", "-18.7586, -127.335, 44.4127, 0.28", "-19.0849, -130.145, 44.6897, 0.83", "-19.3147, -132.631, 44.9756, 0.28", "-19.4891, -134.622, 45.2341, 0.83", "-19.5676, -136.215, 45.492, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-21.1728, -67.0996, 28.0869, 0.55", "-23.5414, -71.7268, 26.4384, 0.55", "-24.6317, -73.7028, 25.7937, 0.55", "-27.0442, -77.885, 24.542, 0.55", "-28.1261, -79.6696, 24.0494, 0.55", "-29.2489, -81.3992, 23.6147, 0.28", "-29.7506, -82.1721, 23.4205, 0.55", "-31.0895, -83.9415, 23.1048, 0.28", "-31.9813, -85.0881, 22.9325, 0.55", "-33.1147, -86.4104, 22.8663, 0.28", "-34.9128, -88.3899, 22.7526, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L23_BP_5a18c05889_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -8.70147, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.344698, -9.81395, 11.6872, 1.66 ) }
    dend_5 { pt3dadd( -0.659634, -11.0147, 12.7077, 1.66 ) }
    dend_5 { pt3dadd( -1.20049, -13.0768, 14.4601, 1.39 ) }
    dend_5 { pt3dadd( -3.35148, -21.2779, 21.4297, 1.11 ) }
    dend_5 { pt3dadd( -3.72882, -22.7166, 22.6524, 1.11 ) }
    dend_5 { pt3dadd( -4.20672, -24.5387, 24.2009, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 7.66878, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.630767, 14.9279, 2.47044, 0.83 ) }
    dend_0 { pt3dadd( 0.635272, 17.3182, 3.54012, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -4.20672, -24.5387, 24.2009, 0.83 ) }
    dend_7 { pt3dadd( -6.59394, -29.3238, 22.4722, 0.83 ) }
    dend_7 { pt3dadd( -7.16235, -30.4632, 22.0606, 0.83 ) }
    dend_7 { pt3dadd( -8.6133, -33.3716, 21.0099, 0.83 ) }
    dend_7 { pt3dadd( -9.26373, -34.6754, 20.5389, 0.83 ) }
    dend_7 { pt3dadd( -10.6625, -37.4793, 19.526, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -4.20672, -24.5387, 24.2009, 0.83 ) }
    dend_6 { pt3dadd( -3.9354, -26.2023, 24.5901, 0.83 ) }
    dend_6 { pt3dadd( -3.68435, -27.7095, 24.919, 0.83 ) }
    dend_6 { pt3dadd( -3.41397, -29.699, 25.3077, 0.83 ) }
    dend_6 { pt3dadd( -2.68606, -34.2314, 26.0919, 0.83 ) }
    dend_6 { pt3dadd( -2.02153, -37.9625, 26.6931, 0.55 ) }
    dend_6 { pt3dadd( -0.861679, -44.2946, 27.5701, 0.55 ) }
    dend_6 { pt3dadd( -0.202714, -47.4233, 28.0558, 0.83 ) }
    dend_6 { pt3dadd( 0.632587, -50.9826, 28.6354, 0.55 ) }
    dend_6 { pt3dadd( 2.12874, -56.7536, 29.8035, 0.55 ) }
    dend_6 { pt3dadd( 2.58544, -58.3934, 30.1664, 0.55 ) }
    dend_6 { pt3dadd( 3.83192, -62.8363, 31.1804, 0.55 ) }
    dend_6 { pt3dadd( 5.38699, -68.4299, 32.6124, 0.55 ) }
    dend_6 { pt3dadd( 6.30428, -71.7791, 33.509, 0.55 ) }
    dend_6 { pt3dadd( 7.47094, -76.2476, 34.7363, 0.55 ) }
    dend_6 { pt3dadd( 9.25904, -84.3561, 36.9697, 0.55 ) }
    dend_6 { pt3dadd( 10.0809, -88.6655, 38.102, 0.55 ) }
    dend_6 { pt3dadd( 10.6343, -91.8997, 38.8832, 0.55 ) }
    dend_6 { pt3dadd( 10.9045, -94.1762, 39.2949, 0.55 ) }
    dend_6 { pt3dadd( 11.0469, -96.1942, 39.5889, 0.55 ) }
    dend_6 { pt3dadd( 11.1383, -100.275, 40.2272, 0.55 ) }
    dend_6 { pt3dadd( 11.1339, -102.328, 40.5533, 0.55 ) }
    dend_6 { pt3dadd( 11.0794, -105.462, 41.1797, 0.55 ) }
    dend_6 { pt3dadd( 10.9754, -109.659, 42.0855, 0.55 ) }
    dend_6 { pt3dadd( 10.7313, -115.728, 43.4682, 0.55 ) }
    dend_6 { pt3dadd( 10.5255, -121.181, 44.8017, 0.55 ) }
    dend_6 { pt3dadd( 10.2785, -125.944, 46.0551, 0.83 ) }
    dend_6 { pt3dadd( 9.99099, -130.489, 47.4089, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.635272, 17.3182, 3.54012, 0.83 ) }
    dend_2 { pt3dadd( -1.21975, 23.852, 0.843757, 0.83 ) }
    dend_2 { pt3dadd( -1.6316, 25.5779, 0.173081, 0.83 ) }
    dend_2 { pt3dadd( -2.14641, 27.6931, -0.6686, 0.83 ) }
    dend_2 { pt3dadd( -2.52613, 29.4423, -1.32588, 0.83 ) }
    dend_2 { pt3dadd( -3.0962, 32.2408, -2.32688, 0.83 ) }
    dend_2 { pt3dadd( -3.7641, 35.9041, -3.57847, 0.83 ) }
    dend_2 { pt3dadd( -4.17488, 38.5066, -4.25428, 0.83 ) }
    dend_2 { pt3dadd( -4.61562, 41.3243, -5.04276, 0.83 ) }
    dend_2 { pt3dadd( -5.078, 44.2201, -5.97743, 0.55 ) }
    dend_2 { pt3dadd( -5.22667, 45.1371, -6.27856, 0.55 ) }
    dend_2 { pt3dadd( -5.50834, 46.7042, -6.79314, 0.55 ) }
    dend_2 { pt3dadd( -6.02948, 49.9796, -7.82966, 0.55 ) }
    dend_2 { pt3dadd( -6.41785, 52.3542, -8.54428, 0.55 ) }
    dend_2 { pt3dadd( -7.34247, 58.3084, -10.3473, 0.55 ) }
    dend_2 { pt3dadd( -7.83197, 60.9941, -11.2586, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.635272, 17.3182, 3.54012, 0.83 ) }
    dend_1 { pt3dadd( 1.69585, 20.0371, 4.42832, 0.83 ) }
    dend_1 { pt3dadd( 2.48758, 22.1803, 5.21671, 0.83 ) }
    dend_1 { pt3dadd( 3.66165, 25.5578, 6.59241, 0.83 ) }
    dend_1 { pt3dadd( 4.7616, 28.8121, 7.95601, 0.83 ) }
    dend_1 { pt3dadd( 5.99864, 32.9292, 9.52283, 0.83 ) }
    dend_1 { pt3dadd( 6.9124, 36.0331, 10.6184, 0.83 ) }
    dend_1 { pt3dadd( 7.51685, 38.3789, 11.4651, 0.83 ) }
    dend_1 { pt3dadd( 8.13529, 40.9521, 12.3055, 0.83 ) }
    dend_1 { pt3dadd( 8.26638, 41.652, 12.4975, 0.83 ) }
    dend_1 { pt3dadd( 9.69557, 49.7011, 14.2593, 0.83 ) }
    dend_1 { pt3dadd( 9.94221, 51.4117, 14.5221, 0.83 ) }
    dend_1 { pt3dadd( 10.2353, 53.7381, 14.7567, 0.83 ) }
    dend_1 { pt3dadd( 10.4594, 55.7517, 14.9152, 0.83 ) }
    dend_1 { pt3dadd( 10.6742, 58.0862, 15.0641, 0.83 ) }
    dend_1 { pt3dadd( 10.9687, 61.0354, 15.2509, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 11.1903, 64.0725, 15.4422, 0.83 ) }
    dend_1 { pt3dadd( 11.3491, 65.8084, 15.5494, 0.83 ) }
    dend_1 { pt3dadd( 11.6699, 68.4949, 15.7026, 0.83 ) }
    dend_1 { pt3dadd( 11.9409, 71.1355, 15.8648, 0.83 ) }
    dend_1 { pt3dadd( 12.2703, 73.912, 15.9961, 0.83 ) }
    dend_1 { pt3dadd( 12.7058, 77.5405, 16.2083, 0.83 ) }
    dend_1 { pt3dadd( 13.0078, 79.9102, 16.459, 0.83 ) }
    dend_1 { pt3dadd( 13.1549, 81.2208, 16.6384, 0.83 ) }
    dend_1 { pt3dadd( 13.3028, 82.702, 16.9233, 0.83 ) }
    dend_1 { pt3dadd( 13.5384, 84.8926, 17.4801, 0.83 ) }
    dend_1 { pt3dadd( 13.7682, 88.1042, 18.5294, 0.55 ) }
    dend_1 { pt3dadd( 14.1155, 92.3159, 20.0818, 0.55 ) }
    dend_1 { pt3dadd( 14.1555, 93.5532, 20.569, 0.55 ) }
    dend_1 { pt3dadd( 14.2262, 96.1554, 21.5791, 0.55 ) }
    dend_1 { pt3dadd( 14.2241, 97.2458, 21.989, 0.55 ) }
    dend_1 { pt3dadd( 14.1849, 99.2898, 22.757, 0.55 ) }
    dend_1 { pt3dadd( 14.1695, 101.424, 23.4491, 0.55 ) }
    dend_1 { pt3dadd( 14.2606, 104.53, 24.2516, 0.55 ) }
    dend_1 { pt3dadd( 14.3228, 106.576, 24.747, 0.55 ) }
    dend_1 { pt3dadd( 14.3369, 108.439, 25.1394, 0.55 ) }
    dend_1 { pt3dadd( 14.4178, 110.768, 25.6124, 0.55 ) }
    dend_1 { pt3dadd( 14.6413, 113.197, 26.0392, 0.55 ) }
    dend_1 { pt3dadd( 15.0553, 116.513, 26.6595, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -10.6625, -37.4793, 19.526, 0.83 ) }
    dend_9 { pt3dadd( -12.5695, -42.3338, 21.5723, 0.83 ) }
    dend_9 { pt3dadd( -14.0372, -46.185, 23.005, 0.83 ) }
    dend_9 { pt3dadd( -15.7601, -50.8349, 24.5255, 0.83 ) }
    dend_9 { pt3dadd( -17.1718, -54.6814, 25.6478, 0.83 ) }
    dend_9 { pt3dadd( -18.0297, -57.0189, 26.3298, 0.83 ) }
    dend_9 { pt3dadd( -19.0526, -59.806, 27.143, 0.83 ) }
    dend_9 { pt3dadd( -19.6919, -61.8269, 27.5942, 0.83 ) }
    dend_9 { pt3dadd( -20.3996, -64.1362, 28.0051, 0.83 ) }
    dend_9 { pt3dadd( -21.1728, -67.0996, 28.0869, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -10.6625, -37.4793, 19.526, 0.55 ) }
    dend_8 { pt3dadd( -11.2664, -37.0845, 26.1789, 0.55 ) }
    dend_8 { pt3dadd( -11.7102, -36.5956, 33.313, 0.55 ) }
    dend_8 { pt3dadd( -11.9356, -36.3472, 36.937, 0.55 ) }
    dend_8 { pt3dadd( -12.2196, -36.0344, 41.5015, 0.28 ) }
    dend_8 { pt3dadd( -12.2665, -35.9827, 42.2556, 0.83 ) }
    dend_8 { pt3dadd( -12.5126, -35.7117, 46.2113, 0.28 ) }
    dend_8 { pt3dadd( -12.5365, -35.6211, 46.8858, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -7.83197, 60.9941, -11.2586, 0.55 ) }
    dend_4 { pt3dadd( -7.63232, 63.1833, -11.5775, 0.55 ) }
    dend_4 { pt3dadd( -7.44642, 65.4959, -11.9756, 0.55 ) }
    dend_4 { pt3dadd( -7.30786, 67.1216, -12.2409, 0.55 ) }
    dend_4 { pt3dadd( -7.07021, 69.5617, -12.6376, 0.83 ) }
    dend_4 { pt3dadd( -6.89558, 71.2963, -12.9105, 0.55 ) }
    dend_4 { pt3dadd( -6.71404, 72.9135, -13.1655, 0.55 ) }
    dend_4 { pt3dadd( -6.52354, 74.4267, -13.3639, 1.11 ) }
    dend_4 { pt3dadd( -6.21155, 77.0534, -13.7906, 0.55 ) }
    dend_4 { pt3dadd( -6.13779, 77.9324, -13.9388, 0.55 ) }
    dend_4 { pt3dadd( -6.05495, 79.0412, -14.1358, 1.11 ) }
    dend_4 { pt3dadd( -5.9635, 80.4173, -14.3865, 0.55 ) }
    dend_4 { pt3dadd( -5.92026, 81.3166, -14.5434, 1.11 ) }
    dend_4 { pt3dadd( -5.80094, 84.0621, -14.9836, 0.55 ) }
    dend_4 { pt3dadd( -5.8327, 85.509, -15.2879, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -7.83197, 60.9941, -11.2586, 0.28 ) }
    dend_3 { pt3dadd( -8.63473, 63.6694, -13.9397, 0.28 ) }
    dend_3 { pt3dadd( -8.73637, 64.071, -14.3313, 0.55 ) }
    dend_3 { pt3dadd( -9.54814, 67.6256, -17.6477, 0.28 ) }
    dend_3 { pt3dadd( -10.2413, 70.9489, -20.935, 1.11 ) }
    dend_3 { pt3dadd( -10.5642, 72.6819, -22.7492, 0.28 ) }
    dend_3 { pt3dadd( -10.5642, 72.6819, -22.7492, 0.55 ) }
    dend_3 { pt3dadd( -10.6193, 74.8037, -24.5405, 0.28 ) }
    dend_3 { pt3dadd( -10.5513, 75.6209, -25.1457, 1.11 ) }
    dend_3 { pt3dadd( -9.39132, 79.2782, -26.8404, 0.55 ) }
    dend_3 { pt3dadd( -7.9132, 82.142, -27.2943, 0.28 ) }
    dend_3 { pt3dadd( -5.20903, 86.6323, -27.4746, 1.11 ) }
    dend_3 { pt3dadd( -2.67406, 90.4453, -27.2264, 0.28 ) }
    dend_3 { pt3dadd( -2.60399, 90.5342, -27.2016, 0.55 ) }
    dend_3 { pt3dadd( -0.354266, 93.0572, -26.0316, 0.28 ) }
    dend_3 { pt3dadd( -0.133857, 93.2792, -25.8689, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -21.1728, -67.0996, 28.0869, 0.83 ) }
    dend_11 { pt3dadd( -21.2053, -72.5449, 30.2144, 0.83 ) }
    dend_11 { pt3dadd( -21.2859, -76.9033, 32.2246, 0.83 ) }
    dend_11 { pt3dadd( -21.2665, -78.943, 33.1832, 0.83 ) }
    dend_11 { pt3dadd( -21.2833, -80.1119, 33.8368, 0.83 ) }
    dend_11 { pt3dadd( -21.4231, -83.3043, 35.6963, 0.83 ) }
    dend_11 { pt3dadd( -21.5036, -85.1976, 36.6536, 0.83 ) }
    dend_11 { pt3dadd( -21.5807, -88.809, 38.1126, 0.83 ) }
    dend_11 { pt3dadd( -21.5285, -91.3139, 39.1432, 0.83 ) }
    dend_11 { pt3dadd( -21.2051, -95.5968, 40.7736, 0.83 ) }
    dend_11 { pt3dadd( -20.9031, -97.8063, 41.4729, 0.83 ) }
    dend_11 { pt3dadd( -19.9648, -103.263, 42.6711, 0.83 ) }
    dend_11 { pt3dadd( -19.129, -108.146, 43.411, 0.83 ) }
    dend_11 { pt3dadd( -18.5053, -112.198, 43.6552, 0.83 ) }
    dend_11 { pt3dadd( -18.1884, -115.135, 43.7307, 0.83 ) }
    dend_11 { pt3dadd( -18.1314, -115.728, 43.7254, 0.83 ) }
    dend_11 { pt3dadd( -17.9655, -119.125, 43.859, 0.28 ) }
    dend_11 { pt3dadd( -17.9917, -120.022, 43.953, 0.83 ) }
    dend_11 { pt3dadd( -18.2115, -122.338, 44.1158, 0.28 ) }
    dend_11 { pt3dadd( -18.6505, -126.453, 44.3334, 0.28 ) }
    dend_11 { pt3dadd( -18.7586, -127.335, 44.4127, 0.28 ) }
    dend_11 { pt3dadd( -19.0849, -130.145, 44.6897, 0.83 ) }
    dend_11 { pt3dadd( -19.3147, -132.631, 44.9756, 0.28 ) }
    dend_11 { pt3dadd( -19.4891, -134.622, 45.2341, 0.83 ) }
    dend_11 { pt3dadd( -19.5676, -136.215, 45.492, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -21.1728, -67.0996, 28.0869, 0.55 ) }
    dend_10 { pt3dadd( -23.5414, -71.7268, 26.4384, 0.55 ) }
    dend_10 { pt3dadd( -24.6317, -73.7028, 25.7937, 0.55 ) }
    dend_10 { pt3dadd( -27.0442, -77.885, 24.542, 0.55 ) }
    dend_10 { pt3dadd( -28.1261, -79.6696, 24.0494, 0.55 ) }
    dend_10 { pt3dadd( -29.2489, -81.3992, 23.6147, 0.28 ) }
    dend_10 { pt3dadd( -29.7506, -82.1721, 23.4205, 0.55 ) }
    dend_10 { pt3dadd( -31.0895, -83.9415, 23.1048, 0.28 ) }
    dend_10 { pt3dadd( -31.9813, -85.0881, 22.9325, 0.55 ) }
    dend_10 { pt3dadd( -33.1147, -86.4104, 22.8663, 0.28 ) }
    dend_10 { pt3dadd( -34.9128, -88.3899, 22.7526, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_6 nseg = 5
    dend_2 nseg = 3
    dend_1 nseg = 5
    dend_3 nseg = 3
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L23_BP_5a18c05889_0_0


