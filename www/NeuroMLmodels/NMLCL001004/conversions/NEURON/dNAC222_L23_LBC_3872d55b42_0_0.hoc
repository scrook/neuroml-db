// Cell: dNAC222_L23_LBC_3872d55b42_0_0
/*
{
  "id" : "dNAC222_L23_LBC_3872d55b42_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.701302, 11.9739, -1.24376, 2.36127", "-0.606294, 10.7546, -1.0834, 3.83931", "-0.511286, 9.53541, -0.92305, 4.78417", "-0.416278, 8.31617, -0.762698, 6.14661", "-0.32127, 7.09693, -0.602345, 7.73722", "-0.226261, 5.8777, -0.441992, 8.31396", "-0.131253, 4.65846, -0.281639, 8.14547", "-0.0362448, 3.43922, -0.121287, 7.98262", "0.0587634, 2.21999, 0.0390659, 7.82998", "0.153772, 1.00075, 0.199419, 7.57671", "0.24878, -0.218488, 0.359771, 7.56649", "0.343788, -1.43772, 0.520124, 7.52579", "0.438796, -2.65696, 0.680477, 7.17937", "0.533805, -3.8762, 0.840829, 6.69186", "0.628813, -5.09544, 1.00118, 6.36625", "0.723821, -6.31467, 1.16153, 6.05036", "0.818829, -7.53391, 1.32189, 5.80715", "0.913837, -8.75315, 1.48224, 5.61319", "1.00885, -9.97238, 1.64259, 5.41924", "1.10385, -11.1916, 1.80295, 4.79633", "1.19886, -12.4109, 1.9633, 2.79741" ]
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "3.06534, -11.6199, -6.34462, 0.83", "3.75681, -12.5999, -6.21777, 0.83", "4.12541, -13.1071, -6.12408, 0.83", "5.05195, -14.5021, -5.86994, 0.55", "5.71244, -15.5583, -5.69184, 0.55", "6.35366, -16.5706, -5.52214, 0.83", "8.30526, -19.6614, -5.06731, 0.55", "9.32244, -21.3028, -4.90912, 0.55", "10.0431, -22.4987, -4.86733, 0.55", "12.6693, -27.0139, -4.92441, 0.55", "13.1979, -27.8807, -4.96079, 0.55", "14.3074, -29.6249, -5.12943, 0.55", "16.3287, -32.5795, -5.6647, 0.55", "17.5753, -34.3357, -6.12097, 0.55", "18.726, -35.8567, -6.59788, 0.55", "20.1235, -37.681, -7.27713, 0.55", "21.9204, -40.039, -8.14599, 0.55", "23.3332, -41.8566, -8.79243, 0.55", "24.921, -43.8308, -9.57916, 0.55", "25.6029, -44.6488, -9.92955, 0.55", "26.3922, -45.6158, -10.4132, 0.28", "27.1306, -46.5266, -10.8947, 0.55", "28.4293, -47.9709, -11.5943, 0.28", "30.2933, -49.9522, -12.5031, 0.28", "30.9231, -50.5273, -12.7724, 0.55", "33.078, -52.2619, -13.5826, 0.28", "34.1296, -53.103, -13.881, 0.28", "36.214, -54.8917, -14.1659, 0.55", "37.4917, -56.0425, -14.1781, 0.28", "38.4126, -56.8778, -14.1441, 0.28", "39.2905, -57.6856, -14.0909, 0.55", "42.0611, -60.2941, -13.8028, 0.28", "45.8956, -64.1355, -13.3941, 0.28", "47.1077, -65.423, -13.2513, 0.55", "48.811, -67.3181, -13.0072, 0.83", "53.4553, -72.5251, -14.6483, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "1.93534, -14.0287, -8.45462, 1.11", "1.82672, -14.6871, -8.90624, 1.11", "1.56403, -16.6868, -10.3337, 0.83", "1.19495, -19.4962, -12.3393, 0.83", "0.376646, -25.7253, -16.7859, 0.83", "-0.0458967, -28.9417, -19.0819, 0.83", "-0.33206, -31.12, -20.6369, 0.83", "-0.770914, -34.0489, -22.8713, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-4.02466, 6.59439, -9.39462, 0.83", "-5.84156, 8.07219, -9.06373, 0.83", "-7.83956, 9.82965, -8.35336, 0.55", "-10.3387, 12.0744, -7.22545, 0.55", "-12.282, 13.8778, -6.24322, 0.55", "-12.8193, 14.4219, -5.97496, 0.28", "-14.7103, 16.5731, -5.06813, 0.28", "-17.0918, 19.8094, -4.04871, 0.55", "-19.4573, 23.3554, -3.16596, 0.55", "-21.316, 26.1721, -2.56705, 0.55", "-23.8891, 30.2151, -1.77016, 0.55", "-26.438, 34.1765, -0.981568, 0.55", "-31.6609, 42.118, 0.505233, 0.55", "-33.2175, 44.4652, 0.948828, 0.55", "-36.1781, 48.941, 1.92736, 0.55", "-38.2782, 52.0842, 2.80291, 0.55", "-40.6363, 55.5797, 4.0591, 0.55", "-41.9547, 57.4552, 4.86748, 0.55", "-43.9425, 60.3009, 6.31338, 0.55", "-44.7935, 61.6254, 6.92891, 0.55", "-46.7899, 65.4958, 8.38072, 0.55", "-47.7534, 67.6562, 8.8646, 0.55", "-48.6657, 70.0352, 9.19036, 0.28", "-49.2563, 71.7085, 9.31102, 0.55", "-50.3269, 74.813, 9.15968, 0.55", "-51.1375, 77.3484, 8.88017, 0.55", "-51.7838, 79.4868, 8.34691, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-1.15466, 12.8468, -0.304621, 2.77", "-0.702558, 14.5559, -0.304621, 2.77", "0.175112, 17.8738, -0.304621, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.62534, 1.37714, -0.954618, 0.83", "8.31228, 2.09891, -1.22556, 0.83", "10.9306, 2.76948, -1.74568, 0.55", "13.9877, 3.57187, -2.45027, 0.55", "16.2497, 4.05227, -2.97808, 0.55", "17.2672, 4.21827, -3.22098, 0.83", "21.1899, 4.72602, -4.14013, 0.55", "25.1805, 5.21268, -5.11139, 0.55", "29.422, 5.67848, -6.17181, 0.55", "34.8567, 6.20321, -7.54544, 0.55", "36.7908, 6.34073, -7.9784, 0.55", "40.308, 6.54296, -8.66467, 0.55", "41.7902, 6.59603, -8.89606, 0.55", "42.7195, 6.67839, -8.98671, 0.28", "43.6627, 6.87485, -9.0787, 0.28", "45.2382, 7.54417, -9.22893, 0.55", "46.6616, 8.39938, -9.37976, 0.55", "47.7945, 9.22993, -9.51164, 0.55", "49.3291, 10.3511, -9.68974, 0.28", "49.864, 10.7583, -9.74113, 0.28", "50.6979, 11.4159, -9.79371, 0.55", "52.5865, 12.9012, -9.86364, 0.28", "54.5763, 14.4215, -9.87539, 0.28", "55.8719, 15.3434, -9.7567, 0.28", "57.2965, 16.2723, -9.51828, 0.28", "59.4734, 17.4844, -8.9372, 0.55", "60.1089, 17.8019, -8.69813, 0.55", "61.5356, 18.4806, -8.05008, 0.28", "64.3821, 19.8488, -6.6067, 0.28", "66.5693, 20.9214, -5.49182, 0.55", "69.714, 22.5032, -3.93159, 0.55", "71.366, 23.3466, -3.07099, 0.55", "73.1705, 24.2832, -2.1265, 0.55", "74.2833, 24.8667, -1.56071, 0.55", "76.8902, 26.392, -0.40958, 0.28", "78.4973, 27.4918, 0.185972, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.85466, -14.0184, 5.15538, 2.77", "-0.938689, -15.1502, 5.35477, 2.77", "-1.107, -17.4174, 5.75416, 1.94", "-1.35048, -20.6969, 6.33192, 1.94", "-1.5004, -22.7163, 6.68767, 1.66", "-1.61816, -24.3025, 6.9671, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.19886, -12.4109, 1.9633, 0.83", "2.36419, -27.3656, 1.9633, 0.83", "3.52951, -42.3202, 1.9633, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-0.770914, -34.0489, -22.8713, 0.55", "-2.05557, -35.7434, -26.3361, 0.55", "-2.475, -36.2966, -27.4672, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-0.770914, -34.0489, -22.8713, 0.55", "1.75414, -36.747, -29.5552, 0.55", "3.04754, -38.2374, -32.6608, 0.55", "4.36799, -39.7589, -35.8314, 0.55", "5.65684, -41.244, -38.9261, 0.55", "6.54054, -42.2623, -41.048, 0.28", "7.01258, -42.8062, -42.1815, 0.55", "9.05096, -45.1262, -46.2068, 0.28", "12.0088, -49.7311, -54.0529, 0.28", "14.0069, -54.7352, -61.971, 0.28", "14.0298, -61.2927, -69.019, 0.28" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "0.175112, 17.8738, -0.304621, 1.66", "1.51059, 19.8248, -0.398657, 1.66" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "0.175112, 17.8738, -0.304621, 0.55", "2.77548, 21.5783, -2.20174, 0.55", "4.79217, 24.1277, -3.05411, 0.55", "8.93736, 28.764, -4.20828, 0.55", "10.0879, 29.961, -4.47409, 0.55", "11.6843, 31.5064, -4.78711, 0.55", "13.5496, 33.1882, -5.15143, 0.55", "17.4421, 36.5335, -5.83408, 0.55", "21.335, 39.5168, -6.19016, 0.55", "24.3814, 41.6622, -6.21826, 0.55", "25.7295, 42.5094, -6.27315, 0.55", "29.7592, 44.9152, -6.51948, 0.55", "32.521, 46.4007, -6.81274, 0.55", "35.2939, 47.8549, -7.23532, 0.55", "38.2337, 49.2584, -7.64835, 0.55", "41.8386, 50.8795, -8.18628, 0.55", "44.5536, 52.1852, -8.6964, 0.55", "49.1593, 54.5574, -9.69114, 0.55", "51.3278, 55.8167, -10.2224, 0.28", "54.0026, 57.8135, -10.9378, 0.28", "55.5453, 59.3137, -11.3123, 0.55", "58.2057, 62.9971, -11.6535, 0.28", "59.0943, 64.7702, -11.6318, 0.28", "60.1171, 67.816, -11.5441, 0.55", "60.7963, 70.5579, -11.5323, 0.55", "61.437, 73.6485, -11.5714, 0.55", "61.9329, 76.007, -11.5834, 0.55", "62.7279, 79.0645, -11.59, 0.28", "64.3254, 84.34, -11.793, 0.28", "65.1149, 86.5956, -12.019, 0.55", "65.8601, 88.6563, -12.3282, 0.55", "66.4933, 90.1989, -12.6559, 0.55", "67.6906, 93.0313, -13.3147, 0.55", "76.0608, 100.527, -13.4797, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-1.61816, -24.3025, 6.9671, 1.66", "-3.15725, -24.8832, 6.98081, 1.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.61816, -24.3025, 6.9671, 0.55", "-2.55052, -25.5792, 7.24415, 0.55", "-3.86475, -27.5901, 7.53527, 0.55", "-5.19343, -29.7512, 7.73128, 0.55", "-6.09966, -31.1789, 7.90843, 0.55", "-6.88147, -32.2831, 8.13602, 0.55", "-7.72975, -33.448, 8.40485, 0.55", "-8.55294, -34.6736, 8.70638, 0.55", "-9.29831, -35.7737, 8.99187, 0.55", "-10.6068, -37.6489, 9.45729, 0.55", "-12.8493, -40.6777, 10.2625, 0.55", "-13.7988, -41.9162, 10.6656, 0.55", "-15.1263, -43.6232, 11.3347, 0.55", "-15.7699, -44.4083, 11.6632, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "3.52951, -42.3202, 1.9633, 0.28", "4.69484, -57.2749, 1.9633, 0.28", "5.86017, -72.2296, 1.9633, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-2.475, -36.2966, -27.4672, 0.55", "-2.79827, -38.7726, -30.757, 0.55", "-2.87294, -39.7538, -31.9693, 0.55", "-2.80025, -42.4046, -35.2029, 0.55", "-2.64528, -43.9505, -36.9909, 0.55", "-2.49459, -45.4538, -38.7297, 0.28", "-2.3539, -46.8573, -40.353, 0.28", "-2.2449, -47.4425, -41.031, 0.55", "-1.29993, -50.9977, -45.1552, 0.28", "-0.923849, -52.065, -46.1939, 0.55", "0.12547, -57.9175, -51.1123, 0.55", "2.48084, -62.4953, -56.7997, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-2.475, -36.2966, -27.4672, 0.55", "-4.34874, -35.4372, -31.0621, 0.55", "-6.74033, -34.3403, -35.6504, 0.55", "-9.07512, -33.2694, -40.1298, 0.28", "-10.2272, -32.741, -42.3401, 0.55", "-14.2092, -31.8149, -48.7988, 0.55", "-19.2187, -30.9243, -54.5054, 0.55", "-24.6534, -29.7536, -59.7597, 0.55", "-29.3097, -28.7211, -65.736, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "1.51059, 19.8248, -0.398657, 1.66", "1.44964, 21.747, -0.553825, 1.66", "1.39977, 23.3196, -0.680762, 1.66", "1.35948, 24.5901, -0.783321, 1.66" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "1.51059, 19.8248, -0.398657, 1.11", "0.248865, 20.6211, 2.66713, 1.11", "-0.056628, 20.8139, 3.40942, 1.11", "-1.88747, 21.9693, 7.85804, 0.83", "-2.88852, 22.6011, 10.2904, 0.83", "-6.38632, 24.8086, 18.7895, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-3.15725, -24.8832, 6.98081, 1.66", "-3.24899, -25.6268, 6.98131, 1.66" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-3.15725, -24.8832, 6.98081, 0.55", "-3.6961, -27.594, 8.81782, 0.55", "-4.05641, -29.9199, 10.5256, 0.55", "-4.1727, -30.6993, 11.1206, 0.55", "-4.54482, -33.0314, 12.9491, 0.55", "-4.77388, -35.0137, 14.5547, 0.55", "-4.98094, -37.3052, 16.3824, 0.55", "-5.11381, -38.5546, 17.5043, 0.55", "-5.36361, -40.2382, 19.0381, 0.55", "-5.70199, -42.0048, 20.6269, 0.55", "-6.08017, -43.924, 22.3457, 0.55", "-6.32099, -44.9323, 23.2678, 0.55", "-6.89668, -47.0501, 25.3461, 0.55", "-7.31673, -48.7632, 27.0271, 0.55", "-7.50389, -49.6372, 27.923, 0.55", "-7.75318, -50.7197, 29.1148, 0.55", "-8.22116, -52.3046, 30.926, 0.55", "-8.82483, -54.1729, 33.2031, 0.55", "-9.57501, -56.4639, 36.0286, 0.55", "-10.3104, -58.4678, 38.6462, 0.55", "-10.8097, -59.7343, 40.3471, 0.55", "-11.6653, -61.6588, 42.9605, 0.55", "-12.5473, -63.3603, 45.3139, 0.55", "-13.5984, -64.9949, 47.6723, 0.55", "-14.7994, -66.5055, 50.0894, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-15.7699, -44.4083, 11.6632, 0.55", "-18.5045, -45.0472, 11.4055, 0.55", "-19.6771, -45.306, 11.24, 0.55", "-21.293, -45.7062, 10.9583, 0.55", "-23.1143, -46.2073, 10.6021, 0.55", "-24.6366, -46.6316, 10.2658, 0.55", "-27.1186, -47.375, 9.68192, 0.55", "-29.5163, -48.1292, 9.07416, 0.55", "-31.3563, -48.7243, 8.68568, 0.55", "-32.8066, -49.1982, 8.38321, 0.55", "-35.0549, -49.9743, 7.90351, 0.55", "-36.3526, -50.4237, 7.65572, 0.28", "-38.2186, -51.1987, 7.34703, 0.55", "-40.4587, -52.0746, 7.10802, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-15.7699, -44.4083, 11.6632, 0.55", "-17.591, -45.9158, 14.5338, 0.55", "-21.4217, -49.4683, 20.9733, 0.55", "-23.5775, -51.4203, 24.3464, 0.55", "-26.0635, -53.6357, 28.1105, 0.55", "-28.5054, -55.7602, 31.8279, 0.55", "-31.7804, -58.6094, 36.8136, 0.55", "-35.4313, -61.7435, 42.1111, 0.55", "-39.0014, -65.1098, 47.3665, 0.55", "-41.5532, -67.5334, 51.2379, 0.55", "-44.7318, -70.2155, 55.67, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "1.35948, 24.5901, -0.783321, 1.11", "0.611361, 27.4987, -2.60379, 1.11", "0.0733713, 29.5903, -3.91292, 1.11", "-0.507554, 31.8488, -5.32654, 0.83", "-0.871625, 33.2643, -6.21246, 0.83", "-1.56597, 35.9637, -7.90207, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "1.35948, 24.5901, -0.783321, 0.55", "4.45224, 27.1548, -2.26853, 0.55", "5.7802, 28.3542, -2.75578, 0.55", "10.7833, 33.0396, -4.06443, 0.55", "13.385, 35.6706, -4.56726, 0.55", "15.8144, 38.2159, -4.8697, 0.55", "17.2292, 39.7174, -4.96915, 0.55", "19.3279, 42.0177, -4.7063, 0.55", "21.0293, 43.8568, -4.2358, 0.55", "22.8153, 45.7079, -3.62516, 0.55", "24.5944, 47.4851, -3.11331, 0.55", "25.7277, 48.6197, -2.83364, 0.55", "30.3776, 53.0924, -1.94929, 0.55", "33.0722, 55.5518, -1.53433, 0.55", "36.6823, 58.7122, -1.04762, 0.55", "38.6557, 60.3093, -0.796384, 0.55", "40.2651, 61.5577, -0.537611, 0.55", "43.1381, 63.6125, -0.222097, 0.83", "46.6449, 66.0065, -0.074382, 0.55", "49.0246, 67.713, 0.00280309, 0.55", "50.3667, 68.6732, 0.114037, 0.55", "53.3874, 70.701, 0.358228, 0.55", "59.0155, 74.2776, 0.873058, 0.55", "62.519, 76.6828, 1.20787, 0.55", "64.3307, 78.0536, 1.3421, 0.83", "66.2624, 79.6214, 1.48858, 0.55", "67.743, 80.9148, 1.75772, 0.55", "68.9079, 81.9598, 2.23546, 0.55", "70.8356, 83.6595, 3.63093, 0.55", "72.16, 84.7943, 4.73361, 0.55", "72.7675, 85.3559, 5.26408, 0.55", "76.4771, 89.7678, 9.00649, 0.55", "78.557, 92.8368, 11.3624, 0.55", "79.3454, 94.0962, 12.2981, 0.55", "79.9826, 95.32, 13.1882, 0.55", "80.7383, 97.0867, 14.2664, 0.55", "82.4118, 101.802, 16.5284, 0.55", "82.7829, 103.112, 17.061, 0.55", "83.5411, 105.651, 18.0043, 0.55", "84.6793, 109.511, 19.4947, 0.55", "85.7085, 112.637, 20.7777, 0.55", "86.6326, 114.939, 21.8791, 0.55", "88.474, 118.55, 23.7763, 0.55", "89.4387, 120.193, 24.6922, 0.55", "90.4864, 121.871, 25.6318, 0.28", "91.2089, 122.959, 26.3017, 0.83", "93.4216, 126.431, 28.6059, 0.55", "95.63, 129.946, 30.7246, 0.55", "96.7694, 131.711, 31.7, 0.28", "97.5009, 132.82, 32.3393, 0.55", "99.4827, 135.676, 34.0703, 0.28", "100.649, 137.481, 35.1195, 0.28", "101.734, 139.668, 36.131, 0.28", "107.356, 149.283, 40.2282, 0.28" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-6.38632, 24.8086, 18.7895, 0.83", "-6.72737, 26.2131, 18.2829, 0.83", "-6.9601, 27.4113, 18.1475, 0.83", "-7.52761, 29.9682, 18.2328, 0.55", "-7.93579, 31.4882, 18.6377, 0.55", "-8.16273, 32.2467, 18.9926, 0.55", "-8.9673, 34.4165, 20.3843, 0.55", "-9.74444, 36.046, 21.8905, 0.55", "-10.5678, 37.5825, 23.5885, 0.55", "-12.04, 40.1066, 26.768, 0.55", "-13.1895, 41.9929, 29.3411, 0.55", "-14.2818, 43.6161, 31.7328, 0.55", "-15.399, 45.0346, 34.049, 0.55", "-15.8916, 45.574, 35.0419, 0.55", "-16.6948, 46.3819, 36.7693, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-6.38632, 24.8086, 18.7895, 0.55", "-6.68741, 25.277, 19.6275, 0.55", "-7.25022, 26.3944, 21.6387, 0.55", "-7.87748, 27.8343, 24.0483, 0.55", "-8.4307, 29.178, 26.2036, 0.55", "-8.73934, 30.0573, 27.5757, 0.55", "-8.9306, 30.6503, 28.523, 0.55", "-9.27272, 31.9634, 30.6656, 0.55", "-9.4246, 32.8876, 32.2048, 0.55", "-9.58273, 34.1585, 34.4398, 0.55", "-9.66422, 34.7475, 35.5612, 0.55", "-9.7887, 35.642, 37.3337, 0.55", "-9.96256, 36.6719, 39.4711, 0.55", "-10.2342, 37.9278, 42.2575, 0.55", "-10.441, 38.9607, 44.824, 0.55", "-10.6501, 39.8862, 47.2347, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-3.24899, -25.6268, 6.98131, 1.11", "-3.65156, -28.8763, 4.85491, 1.11", "-4.03376, -31.9614, 2.83613, 1.11", "-4.26141, -33.7989, 1.63369, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-3.24899, -25.6268, 6.98131, 0.55", "-0.989219, -27.8669, 5.7001, 0.55", "0.349549, -29.2009, 4.72617, 0.55", "1.54504, -30.5384, 3.82172, 0.55", "2.04758, -31.061, 3.49084, 0.55", "3.91406, -33.0243, 2.28149, 0.55", "5.35403, -34.5598, 1.4798, 0.55", "7.63928, -37.0554, 0.498886, 0.55", "9.52025, -39.2207, -0.238665, 0.55", "11.7841, -41.7942, -0.905602, 0.55", "13.4693, -43.6177, -1.24834, 0.55", "18.0201, -48.3727, -1.37525, 0.55", "19.3829, -49.8085, -1.22541, 0.55", "20.107, -50.5601, -1.05084, 0.55", "22.5266, -53.0193, -0.298992, 0.55", "23.5887, -54.1494, 0.166313, 0.55", "27.0546, -57.5295, 1.99623, 0.55", "28.0847, -58.5117, 2.58352, 0.55", "29.2031, -59.5236, 3.13429, 0.55", "30.4648, -60.6413, 3.70711, 0.55", "33.6388, -63.4183, 5.06429, 0.55", "36.6146, -66.0091, 6.24165, 0.55", "38.2152, -67.3335, 6.69289, 0.55", "40.9096, -69.5213, 7.32361, 0.55", "41.519, -70.0223, 7.4308, 0.55", "44.1272, -72.2076, 7.66802, 0.55", "45.5505, -73.4719, 7.52734, 0.83", "47.5107, -75.4389, 7.24244, 0.28", "48.6187, -76.5644, 7.09599, 0.55", "49.7931, -77.8274, 6.64392, 0.28", "51.352, -79.5065, 5.79924, 0.83", "53.1783, -81.5408, 4.61885, 0.28", "55.4518, -84.06, 3.12187, 0.28", "56.271, -84.9945, 2.59115, 0.55", "61.0939, -90.4956, -1.02853, 0.28", "61.6613, -91.0745, -1.51747, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-44.7318, -70.2155, 55.67, 0.55", "-46.0281, -71.7529, 56.4941, 0.55", "-47.4513, -73.3854, 57.2657, 0.55", "-49.4803, -75.7129, 58.3659, 0.55", "-51.2851, -77.7831, 59.3444, 0.55", "-53.1109, -79.8774, 60.3343, 0.55", "-54.3911, -81.3459, 61.0284, 0.28", "-55.1473, -82.1389, 61.3934, 0.28" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-44.7318, -70.2155, 55.67, 0.55", "-45.8987, -71.0131, 57.4911, 0.55", "-47.8432, -72.3422, 60.5257, 0.55", "-49.2627, -73.3125, 62.741, 0.55", "-50.5783, -74.2118, 64.7942, 0.55", "-52.5824, -75.5815, 67.9216, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-1.56597, 35.9637, -7.90207, 0.55", "-3.00754, 36.8045, -9.27311, 0.55", "-8.70809, 40.6658, -15.3456, 0.55", "-10.8679, 42.1999, -17.7601, 0.55", "-13.076, 43.9876, -20.7519, 0.55", "-15.3287, 45.7683, -24.055, 0.55", "-17.362, 47.2982, -27.0581, 0.55", "-18.2132, 47.9557, -28.4287, 0.55", "-19.581, 49.1562, -30.9157, 0.55", "-22.3072, 51.5506, -35.7896, 0.55", "-25.0861, 53.8018, -40.0448, 0.55", "-27.8983, 56.0396, -44.1395, 0.55", "-29.3922, 57.3156, -46.0665, 0.55", "-30.4209, 58.4371, -47.34, 0.55", "-32.0268, 60.7927, -49.2278, 0.55", "-33.8874, 64.1901, -51.1863, 0.55", "-36.0844, 70.018, -53.7775, 0.55", "-37.5296, 75.0306, -55.6522, 0.55", "-39.3128, 81.6068, -57.6062, 0.55", "-40.4783, 85.854, -58.6333, 0.28", "-40.7897, 87.0333, -58.8429, 0.28", "-41.2882, 88.9394, -59.1348, 0.55", "-42.1526, 91.4962, -59.2058, 0.55", "-43.5417, 95.5194, -59.1739, 0.55", "-44.4596, 97.515, -58.9202, 0.28", "-45.5704, 99.753, -58.7062, 0.55", "-47.1526, 102.89, -58.591, 0.28", "-49.0492, 106.628, -58.752, 0.55", "-50.6219, 109.814, -58.9935, 0.55", "-52.1895, 113.179, -59.5194, 0.28", "-54.1926, 117.388, -60.2173, 0.28", "-54.7658, 118.509, -60.4696, 0.28", "-55.8989, 121.029, -61.29, 0.55", "-61.0688, 130.043, -65.5401, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-1.56597, 35.9637, -7.90207, 0.55", "-0.350458, 38.8216, -9.63714, 0.55", "0.187768, 40.3191, -10.5162, 0.55", "1.13445, 43.6381, -12.485, 0.55", "2.21409, 48.3941, -15.1969, 0.55", "3.36973, 53.6452, -17.9036, 0.55", "3.90852, 56.5062, -19.3313, 0.55", "4.29028, 59.5752, -20.8965, 0.55", "4.42496, 61.7788, -22.0156, 0.55", "4.55844, 64.3613, -23.3021, 0.55", "4.6745, 68.0586, -24.9884, 0.55", "4.70303, 71.7959, -26.7081, 0.55", "4.69424, 74.2983, -27.8882, 0.55", "4.71839, 77.5474, -29.38, 0.55", "4.80893, 85.9769, -32.647, 0.55", "4.9, 89.5424, -33.7743, 0.55", "4.99737, 92.6065, -34.5984, 0.55", "5.17249, 96.7517, -35.4834, 0.55", "5.24083, 98.2076, -35.7277, 0.55", "5.63982, 108.498, -36.5987, 0.55", "5.78849, 114.357, -36.8447, 0.55", "6.05163, 119.543, -37.0033, 0.55", "6.35158, 123.051, -37.1018, 0.55", "6.76037, 127.152, -37.0539, 0.55", "7.33608, 132.68, -36.8312, 0.28", "7.7317, 136.607, -36.575, 0.28", "8.04901, 140.46, -36.2343, 0.55", "8.84609, 150.618, -34.9168, 0.55", "9.28129, 156.087, -34.1616, 0.28", "9.48559, 159.036, -33.7765, 0.55", "9.70914, 162.2, -33.4179, 0.55", "9.8846, 165.075, -33.1107, 0.55", "10.1427, 168.811, -32.8651, 0.55", "10.6007, 173.309, -32.5561, 0.55", "11.0811, 176.567, -32.5006, 0.28", "11.824, 181.442, -32.3294, 0.55", "12.5213, 185.884, -32.1351, 0.28", "13.1806, 189.862, -31.96, 0.55", "14.3558, 196.621, -31.6861, 0.55", "15.1249, 201.278, -31.4613, 0.55", "16.9882, 213.45, -30.7317, 0.28", "17.5476, 217.569, -30.3963, 0.55", "21.0384, 231.899, -31.0919, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-16.6948, 46.3819, 36.7693, 0.55", "-21.8853, 47.866, 40.481, 0.55", "-23.6788, 48.3787, 41.7635, 0.55", "-28.2898, 49.6971, 45.0608, 0.55", "-32.5605, 50.9182, 48.1147, 0.55", "-35.1062, 51.646, 49.9351, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-16.6948, 46.3819, 36.7693, 0.55", "-16.6682, 47.4547, 36.8574, 0.55", "-16.637, 48.8414, 37.0118, 0.55", "-16.5725, 53.1674, 37.6306, 0.55", "-16.6553, 58.2103, 38.5031, 0.55", "-16.7518, 61.3413, 39.0775, 0.55", "-16.9834, 66.7751, 40.0689, 0.55", "-17.3025, 71.1631, 40.9447, 0.55", "-17.6727, 73.9964, 41.5571, 0.55", "-18.4552, 77.8358, 42.4817, 0.55", "-18.9254, 79.4722, 42.8638, 0.55", "-19.5458, 81.0358, 43.2422, 0.55", "-21.2582, 84.3607, 43.9488, 0.55", "-22.765, 86.8419, 44.2809, 0.55", "-24.529, 89.2681, 44.4879, 0.55", "-26.5908, 91.9247, 44.6562, 0.55", "-28.8001, 94.6095, 44.8011, 0.55", "-32.3126, 98.6797, 44.9349, 0.28", "-34.8922, 101.541, 44.8611, 0.28", "-37.21, 104.101, 44.7258, 0.28" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-4.26141, -33.7989, 1.63369, 1.11", "-3.92417, -35.9185, 1.20953, 1.11", "-3.53371, -38.3727, 0.71844, 1.11", "-3.07679, -41.2446, 0.143765, 1.11", "-2.70309, -43.5934, -0.326246, 1.11" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-4.26141, -33.7989, 1.63369, 0.55", "-7.05883, -35.9277, 1.55042, 0.55", "-9.87125, -38.3917, 1.47053, 0.55", "-12.3954, -40.7826, 0.945108, 0.55", "-14.8141, -43.2019, 0.352479, 0.55", "-17.5038, -45.8667, -0.163515, 0.55", "-20.2578, -48.6222, -0.640649, 0.55", "-23.9254, -52.6744, -1.26528, 0.55", "-27.9176, -57.5506, -2.04502, 0.55", "-29.6518, -59.617, -2.37525, 0.55", "-33.3094, -63.8116, -3.11946, 0.55", "-34.709, -65.297, -3.39959, 0.55", "-36.203, -66.7357, -3.64385, 0.55", "-39.8365, -70.0583, -4.17499, 0.55", "-45.8336, -75.3008, -5.04201, 0.55", "-48.4293, -77.4507, -5.62662, 0.55", "-50.9475, -79.4942, -6.32578, 0.55", "-52.7024, -80.8161, -6.78977, 0.55", "-54.433, -81.9924, -7.23587, 0.28", "-56.6612, -83.3273, -7.76249, 0.83", "-57.6738, -83.8472, -8.21136, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-2.70309, -43.5934, -0.326246, 1.11", "-2.71433, -46.5882, -0.941859, 1.11", "-2.73762, -52.8005, -2.21886, 0.83", "-2.75453, -57.3078, -3.14538, 0.83", "-2.76882, -61.1191, -3.92884, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-2.70309, -43.5934, -0.326246, 0.55", "-4.09076, -46.6349, 0.787777, 0.55", "-4.83572, -48.5564, 1.37014, 0.55", "-5.91253, -51.8307, 2.1795, 0.55", "-7.03404, -55.4651, 2.94529, 0.55", "-7.98835, -58.6376, 3.7147, 0.55", "-8.55302, -60.5145, 4.16996, 0.55", "-9.08451, -62.3903, 4.49274, 0.55", "-9.6193, -64.6626, 4.87183, 0.55", "-9.7932, -65.6194, 5.01839, 0.55", "-10.1446, -69.7906, 5.33577, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-57.6738, -83.8472, -8.21136, 0.55", "-58.7497, -84.3343, -10.1343, 0.55", "-59.2934, -84.6341, -11.0814, 0.55", "-61.6775, -85.8453, -15.7436, 0.55", "-62.7573, -86.3339, -17.8243, 0.28", "-63.3047, -86.5816, -18.879, 0.28", "-64.0666, -86.9263, -20.3469, 0.55", "-64.8464, -87.338, -22.0628, 0.55", "-67.0566, -88.5346, -27.0881, 0.28", "-67.5709, -88.7602, -28.107, 0.83", "-69.7272, -91.4267, -35.5228, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-57.6738, -83.8472, -8.21136, 0.28", "-58.3201, -84.6014, -10.2315, 0.28", "-58.5907, -84.8918, -11.0918, 0.55", "-61.3675, -87.8711, -19.9203, 0.28", "-61.5377, -88.0537, -20.4614, 0.55", "-62.3076, -88.8797, -22.9092, 0.28", "-62.6154, -89.2099, -23.8878, 0.55", "-64.4955, -91.3721, -31.0794, 0.28", "-65.8625, -95.0063, -39.7222, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-2.76882, -61.1191, -3.92884, 0.83", "-3.22095, -63.501, -4.24262, 0.83", "-3.70546, -66.0535, -4.57886, 0.83", "-4.54159, -70.4583, -5.15912, 0.83", "-5.02677, -73.0143, -5.49583, 0.83", "-5.69664, -76.5434, -5.96071, 0.83", "-6.16978, -79.0359, -6.28907, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-2.76882, -61.1191, -3.92884, 0.55", "-2.00968, -62.4062, -4.1364, 0.55", "-1.25986, -63.8476, -4.44313, 0.55", "0.0119207, -66.5394, -4.72701, 0.55", "1.6077, -69.6597, -5.06431, 0.55", "2.24745, -70.9433, -5.19349, 0.55", "3.06353, -72.5423, -5.36495, 0.55", "4.47935, -75.237, -5.68591, 0.55", "6.63434, -79.2475, -6.29631, 0.55", "9.05036, -83.6273, -7.26036, 0.55", "9.66199, -84.7576, -7.59309, 0.55", "10.403, -86.0497, -8.03781, 0.55", "12.3885, -89.4915, -9.3516, 0.55", "14.6496, -93.3293, -11.0021, 0.55", "16.1572, -95.7899, -12.297, 0.28", "16.7265, -96.7616, -12.8019, 0.28", "17.4812, -97.9881, -13.4302, 0.28", "18.2348, -99.1208, -13.9968, 0.28", "19.6327, -101.05, -14.8652, 0.55", "20.9769, -102.656, -15.5171, 0.55", "22.3835, -104.274, -16.0963, 0.55", "24.4123, -106.62, -16.9145, 0.55", "26.9252, -109.561, -17.7685, 0.55", "28.3631, -111.206, -18.2361, 0.28", "29.9976, -113.124, -18.7228, 0.28", "30.6302, -113.868, -18.892, 0.28", "31.935, -115.314, -19.2001, 0.55", "33.967, -117.911, -19.4755, 0.28", "36.6368, -126.082, -21.918, 0.28" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-10.1446, -69.7906, 5.33577, 0.55", "-10.9796, -71.7759, 6.08429, 0.55", "-12.3138, -74.9478, 7.28028, 0.55", "-13.4372, -77.6186, 8.28731, 0.28", "-14.8505, -80.9787, 9.55423, 0.55", "-15.3192, -82.093, 9.9744, 0.28" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-10.1446, -69.7906, 5.33577, 0.55", "-11.297, -72.7164, 6.7462, 0.55", "-11.8806, -73.9463, 7.57191, 0.55", "-13.0901, -76.2432, 9.43194, 0.55", "-13.8806, -77.6796, 10.8242, 0.55", "-14.6376, -79.0316, 12.2019, 0.55", "-16.0823, -81.7985, 14.9944, 0.55", "-17.3037, -83.9829, 17.2027, 0.55", "-18.0821, -85.393, 18.8622, 0.55", "-19.0948, -87.2632, 21.3531, 0.28", "-19.5512, -88.039, 22.4301, 0.55", "-20.2, -89.0265, 23.8356, 0.28", "-21.0284, -90.3456, 25.5592, 0.55", "-22.817, -93.121, 28.9923, 0.28", "-23.2686, -93.7495, 29.7488, 0.55", "-24.3616, -94.9323, 31.2275, 0.28", "-25.2665, -95.6398, 32.4299, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-6.16978, -79.0359, -6.28907, 0.83", "-6.8504, -83.0122, -6.69985, 0.83", "-7.58574, -87.308, -7.14365, 0.83", "-8.25259, -91.2038, -7.54611, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-6.16978, -79.0359, -6.28907, 0.55", "-7.74745, -80.0643, -7.36406, 0.55", "-9.55013, -81.0631, -8.73607, 0.55", "-12.2636, -82.5835, -10.7454, 0.55", "-14.5376, -83.8669, -12.3509, 1.38", "-15.2933, -84.2772, -12.8575, 1.38", "-18.3054, -85.891, -14.9114, 0.55", "-19.9948, -86.8212, -16.3307, 0.55", "-21.6634, -87.8376, -18.0862, 0.55", "-22.2706, -88.2413, -18.7615, 0.55", "-22.89, -88.6636, -19.4382, 0.55", "-25.3711, -90.5449, -22.0756, 0.55", "-27.9625, -92.8895, -24.7983, 0.55", "-30.4968, -95.4738, -27.5318, 0.55", "-32.5365, -97.5814, -29.6022, 0.55", "-34.2023, -99.5225, -31.2212, 0.28", "-35.5115, -101.153, -32.5803, 0.55", "-37.1826, -103.296, -34.2481, 0.55", "-40.009, -106.953, -36.9077, 0.55", "-42.3472, -110.114, -39.1499, 0.55", "-44.6488, -113.381, -41.6197, 0.55", "-48.7038, -119.277, -46.4133, 0.55", "-49.6436, -120.558, -47.5976, 0.55", "-55.2841, -125.211, -54.4491, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-8.25259, -91.2038, -7.54611, 0.83", "-7.53578, -95.0458, -5.58978, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-8.25259, -91.2038, -7.54611, 0.55", "-10.7748, -93.9514, -8.75649, 0.55", "-11.3551, -94.6243, -8.96859, 0.28", "-15.1288, -98.8143, -10.5812, 0.28", "-16.6017, -100.427, -11.3483, 0.28", "-17.2549, -101.169, -11.7201, 0.28", "-18.762, -102.966, -12.768, 0.28", "-20.2597, -104.936, -13.9201, 0.55", "-22.9999, -108.917, -16.333, 0.55", "-24.5811, -111.355, -17.9323, 0.28", "-25.2997, -112.484, -18.7531, 0.55", "-27.5153, -116.088, -21.591, 0.28", "-28.189, -117.187, -22.5674, 0.55", "-29.0902, -118.951, -24.2065, 0.55", "-34.3298, -126.194, -26.662, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-7.53578, -95.0458, -5.58978, 0.83", "-8.35109, -99.8844, -7.85881, 0.83", "-8.67993, -101.868, -8.62416, 0.83", "-9.63251, -106.322, -10.0244, 0.55", "-10.359, -109.365, -10.7041, 0.55", "-10.7541, -111.035, -10.981, 0.55", "-11.5104, -114.496, -11.4331, 0.55", "-12.0636, -117.42, -11.4394, 0.55", "-12.721, -120.772, -11.213, 0.55", "-13.2568, -123.603, -10.9188, 0.55", "-13.4795, -125.233, -10.7099, 0.55", "-13.6124, -126.648, -10.5771, 0.55", "-13.6706, -128.304, -10.4905, 0.55", "-13.6985, -130.6, -10.4735, 0.55", "-13.5985, -133.464, -10.7452, 0.55", "-13.6195, -136.022, -11.1706, 0.55", "-13.7107, -137.993, -11.4128, 0.55", "-13.7476, -139.266, -11.5216, 0.55", "-13.8065, -141.284, -11.6139, 0.55", "-13.8359, -144.284, -11.6438, 0.55", "-13.7863, -147.989, -11.7554, 0.55", "-13.7159, -151.326, -11.9567, 0.55", "-13.5315, -154.746, -12.236, 0.55", "-13.3781, -158.151, -12.6915, 0.55", "-13.2637, -160.407, -13.1097, 0.55", "-13.0473, -164.279, -13.9388, 0.55", "-12.8829, -167.883, -14.9759, 0.55", "-12.8033, -171.091, -16.1868, 0.55", "-12.7763, -176.322, -18.3385, 0.55", "-12.7767, -178.878, -19.3348, 0.55", "-12.8327, -181.575, -20.2749, 0.55", "-12.9005, -184.347, -21.0841, 0.55", "-13.0319, -188.366, -22.2944, 0.55", "-13.185, -190.886, -22.8433, 0.55", "-13.4226, -195.49, -23.584, 0.55", "-13.5098, -197.549, -23.8567, 0.55", "-13.5834, -199.957, -24.1257, 0.55", "-13.6115, -204.973, -24.7349, 0.55", "-13.55, -212.732, -25.9302, 0.55", "-13.4525, -216.666, -26.7774, 0.55", "-13.3846, -218.813, -27.3604, 0.55", "-13.3531, -220.735, -27.9001, 0.55", "-13.2274, -225.057, -29.1285, 0.55", "-13.0815, -227.382, -29.7528, 0.55", "-12.948, -229.304, -30.3414, 0.55", "-12.7752, -232.171, -31.1296, 0.55", "-12.6282, -235.505, -31.8932, 0.55", "-12.5554, -238.061, -32.4693, 0.55", "-12.5313, -241.746, -33.2025, 0.55", "-12.5234, -242.371, -33.3318, 0.55", "-12.3568, -247.887, -34.6089, 0.55", "-12.0698, -253.998, -36.1215, 0.55", "-11.8355, -258.037, -36.9995, 0.55", "-11.7125, -260.287, -37.4802, 0.28", "-11.6279, -261.4, -37.709, 0.28", "-11.5047, -262.813, -37.9992, 0.55", "-11.2676, -265.928, -38.6448, 0.28", "-10.9384, -269.927, -39.6314, 0.28", "-10.7285, -273.406, -40.4247, 0.28", "-10.6824, -274.231, -40.6206, 0.55", "-10.6377, -277.585, -41.5383, 0.28", "-10.7571, -281.62, -42.6846, 0.28", "-10.8938, -284.448, -43.3765, 0.28", "-11.1966, -289.761, -44.4592, 0.28", "-11.4394, -292.824, -44.7938, 0.55", "-11.9865, -298.786, -45.1221, 0.28", "-12.4534, -303.195, -45.1084, 0.28", "-12.9126, -307.495, -44.9485, 0.55", "-13.1867, -309.828, -44.8223, 0.28", "-14.1032, -317.433, -44.2732, 0.28", "-14.4667, -320.27, -44.1411, 0.55", "-14.9998, -325.097, -43.8769, 0.28", "-15.1917, -327.108, -43.8409, 0.83", "-15.6334, -331.933, -43.9549, 0.28", "-15.7215, -333.388, -44.0116, 0.55", "-15.7554, -339.796, -44.3824, 0.28", "-15.74, -343.465, -44.6203, 0.55", "-15.6634, -346.721, -44.8612, 0.28", "-15.621, -347.891, -44.9519, 0.55", "-15.3054, -352.508, -45.3198, 0.28", "-15.186, -353.716, -45.3942, 0.83", "-16.4053, -363.817, -46.9484, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.53578, -95.0458, -5.58978, 0.55", "-7.22348, -97.4914, -5.55095, 0.55", "-6.87395, -100.049, -5.27987, 0.55", "-6.66719, -102.526, -4.94182, 0.55", "-6.44845, -105.777, -4.46368, 0.55", "-6.16722, -108.742, -3.83529, 0.55", "-5.59744, -113.771, -2.59402, 0.55", "-5.30139, -115.922, -1.7895, 0.55", "-4.8235, -118.278, -0.716484, 0.55", "-4.62353, -119.09, -0.276718, 0.55", "-3.65662, -122.677, 1.97009, 0.55", "-2.97916, -124.828, 3.42347, 0.55", "-1.97082, -128.116, 5.72161, 0.55", "-1.3408, -130.185, 7.20552, 0.55", "-0.330003, -133.633, 9.78145, 0.55", "0.334737, -136.532, 12.0413, 0.55", "0.619307, -138.207, 13.4479, 0.55", "0.933409, -140.73, 15.7534, 0.55", "1.16891, -143.399, 18.1911, 0.55", "1.33298, -145.85, 20.4408, 0.55", "1.46008, -148.444, 22.759, 0.55", "1.65808, -152.109, 25.8542, 0.55", "1.7565, -153.623, 27.0578, 0.28", "1.92051, -155.357, 28.2054, 0.55", "2.12776, -157.423, 28.9827, 0.28", "2.2575, -158.351, 29.1176, 0.55", "2.40006, -159.165, 29.0438, 0.28", "2.58432, -160.221, 28.738, 0.83", "3.44862, -164.566, 27.2861, 0.28", "3.6048, -165.471, 27.0188, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_42", "dend_41", "dend_28", "dend_27", "dend_0", "dend_44", "dend_43", "dend_30", "dend_29", "dend_6", "dend_1", "dend_46", "dend_45", "dend_36", "dend_31", "dend_8", "dend_7", "dend_5", "dend_2", "dend_38", "dend_37", "dend_33", "dend_32", "dend_10", "dend_9", "dend_4", "dend_3", "dend_40", "dend_39", "dend_35", "dend_34", "dend_14", "dend_11", "dend_18", "dend_15", "dend_13", "dend_12", "dend_20", "dend_19", "dend_17", "dend_16", "dend_22", "dend_21", "dend_24", "dend_23", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_47", "dend_42", "dend_41", "dend_28", "dend_27", "dend_0", "dend_44", "dend_43", "dend_30", "dend_29", "dend_6", "dend_1", "dend_46", "dend_45", "dend_36", "dend_31", "dend_8", "dend_7", "dend_5", "dend_2", "dend_38", "dend_37", "dend_33", "dend_32", "dend_10", "dend_9", "dend_4", "dend_3", "dend_40", "dend_39", "dend_35", "dend_34", "dend_14", "dend_11", "dend_18", "dend_15", "dend_13", "dend_12", "dend_20", "dend_19", "dend_17", "dend_16", "dend_22", "dend_21", "dend_24", "dend_23", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L23_LBC_3872d55b42_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_36, id: dend_36, parent: dend_30
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_42, dend_41, dend_28, dend_27, dend_0, dend_44, dend_43, dend_30, dend_29, dend_6, dend_1, dend_46, dend_45, dend_36, dend_31, dend_8, dend_7, dend_5, dend_2, dend_38, dend_37, dend_33, dend_32, dend_10, dend_9, dend_4, dend_3, dend_40, dend_39, dend_35, dend_34, dend_14, dend_11, dend_18, dend_15, dend_13, dend_12, dend_20, dend_19, dend_17, dend_16, dend_22, dend_21, dend_24, dend_23, dend_26, dend_25]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_47, dend_42, dend_41, dend_28, dend_27, dend_0, dend_44, dend_43, dend_30, dend_29, dend_6, dend_1, dend_46, dend_45, dend_36, dend_31, dend_8, dend_7, dend_5, dend_2, dend_38, dend_37, dend_33, dend_32, dend_10, dend_9, dend_4, dend_3, dend_40, dend_39, dend_35, dend_34, dend_14, dend_11, dend_18, dend_15, dend_13, dend_12, dend_20, dend_19, dend_17, dend_16, dend_22, dend_21, dend_24, dend_23, dend_26, dend_25]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_41
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_47(0), soma_0(0.4999995275182907)
    connect dend_42(0), soma_0(0.4999995275182907)
    connect dend_41(0), soma_0(0.4999995275182907)
    connect dend_28(0), soma_0(0.4999995275182907)
    connect dend_27(0), soma_0(0.4999995275182907)
    connect dend_0(0), soma_0(0.4999995275182907)
    connect axon_0(0), soma_0(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_36(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.701302, 11.9739, -1.24376, 2.36127 ) }
    soma_0 { pt3dadd( -0.606294, 10.7546, -1.0834, 3.83931 ) }
    soma_0 { pt3dadd( -0.511286, 9.53541, -0.92305, 4.78417 ) }
    soma_0 { pt3dadd( -0.416278, 8.31617, -0.762698, 6.14661 ) }
    soma_0 { pt3dadd( -0.32127, 7.09693, -0.602345, 7.73722 ) }
    soma_0 { pt3dadd( -0.226261, 5.8777, -0.441992, 8.31396 ) }
    soma_0 { pt3dadd( -0.131253, 4.65846, -0.281639, 8.14547 ) }
    soma_0 { pt3dadd( -0.0362448, 3.43922, -0.121287, 7.98262 ) }
    soma_0 { pt3dadd( 0.0587634, 2.21999, 0.0390659, 7.82998 ) }
    soma_0 { pt3dadd( 0.153772, 1.00075, 0.199419, 7.57671 ) }
    soma_0 { pt3dadd( 0.24878, -0.218488, 0.359771, 7.56649 ) }
    soma_0 { pt3dadd( 0.343788, -1.43772, 0.520124, 7.52579 ) }
    soma_0 { pt3dadd( 0.438796, -2.65696, 0.680477, 7.17937 ) }
    soma_0 { pt3dadd( 0.533805, -3.8762, 0.840829, 6.69186 ) }
    soma_0 { pt3dadd( 0.628813, -5.09544, 1.00118, 6.36625 ) }
    soma_0 { pt3dadd( 0.723821, -6.31467, 1.16153, 6.05036 ) }
    soma_0 { pt3dadd( 0.818829, -7.53391, 1.32189, 5.80715 ) }
    soma_0 { pt3dadd( 0.913837, -8.75315, 1.48224, 5.61319 ) }
    soma_0 { pt3dadd( 1.00885, -9.97238, 1.64259, 5.41924 ) }
    soma_0 { pt3dadd( 1.10385, -11.1916, 1.80295, 4.79633 ) }
    soma_0 { pt3dadd( 1.19886, -12.4109, 1.9633, 2.79741 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 3.06534, -11.6199, -6.34462, 0.83 ) }
    dend_47 { pt3dadd( 3.75681, -12.5999, -6.21777, 0.83 ) }
    dend_47 { pt3dadd( 4.12541, -13.1071, -6.12408, 0.83 ) }
    dend_47 { pt3dadd( 5.05195, -14.5021, -5.86994, 0.55 ) }
    dend_47 { pt3dadd( 5.71244, -15.5583, -5.69184, 0.55 ) }
    dend_47 { pt3dadd( 6.35366, -16.5706, -5.52214, 0.83 ) }
    dend_47 { pt3dadd( 8.30526, -19.6614, -5.06731, 0.55 ) }
    dend_47 { pt3dadd( 9.32244, -21.3028, -4.90912, 0.55 ) }
    dend_47 { pt3dadd( 10.0431, -22.4987, -4.86733, 0.55 ) }
    dend_47 { pt3dadd( 12.6693, -27.0139, -4.92441, 0.55 ) }
    dend_47 { pt3dadd( 13.1979, -27.8807, -4.96079, 0.55 ) }
    dend_47 { pt3dadd( 14.3074, -29.6249, -5.12943, 0.55 ) }
    dend_47 { pt3dadd( 16.3287, -32.5795, -5.6647, 0.55 ) }
    dend_47 { pt3dadd( 17.5753, -34.3357, -6.12097, 0.55 ) }
    dend_47 { pt3dadd( 18.726, -35.8567, -6.59788, 0.55 ) }
    dend_47 { pt3dadd( 20.1235, -37.681, -7.27713, 0.55 ) }
    dend_47 { pt3dadd( 21.9204, -40.039, -8.14599, 0.55 ) }
    dend_47 { pt3dadd( 23.3332, -41.8566, -8.79243, 0.55 ) }
    dend_47 { pt3dadd( 24.921, -43.8308, -9.57916, 0.55 ) }
    dend_47 { pt3dadd( 25.6029, -44.6488, -9.92955, 0.55 ) }
    dend_47 { pt3dadd( 26.3922, -45.6158, -10.4132, 0.28 ) }
    dend_47 { pt3dadd( 27.1306, -46.5266, -10.8947, 0.55 ) }
    dend_47 { pt3dadd( 28.4293, -47.9709, -11.5943, 0.28 ) }
    dend_47 { pt3dadd( 30.2933, -49.9522, -12.5031, 0.28 ) }
    dend_47 { pt3dadd( 30.9231, -50.5273, -12.7724, 0.55 ) }
    dend_47 { pt3dadd( 33.078, -52.2619, -13.5826, 0.28 ) }
    dend_47 { pt3dadd( 34.1296, -53.103, -13.881, 0.28 ) }
    dend_47 { pt3dadd( 36.214, -54.8917, -14.1659, 0.55 ) }
    dend_47 { pt3dadd( 37.4917, -56.0425, -14.1781, 0.28 ) }
    dend_47 { pt3dadd( 38.4126, -56.8778, -14.1441, 0.28 ) }
    dend_47 { pt3dadd( 39.2905, -57.6856, -14.0909, 0.55 ) }
    dend_47 { pt3dadd( 42.0611, -60.2941, -13.8028, 0.28 ) }
    dend_47 { pt3dadd( 45.8956, -64.1355, -13.3941, 0.28 ) }
    dend_47 { pt3dadd( 47.1077, -65.423, -13.2513, 0.55 ) }
    dend_47 { pt3dadd( 48.811, -67.3181, -13.0072, 0.83 ) }
    dend_47 { pt3dadd( 53.4553, -72.5251, -14.6483, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 57/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 1.93534, -14.0287, -8.45462, 1.11 ) }
    dend_42 { pt3dadd( 1.82672, -14.6871, -8.90624, 1.11 ) }
    dend_42 { pt3dadd( 1.56403, -16.6868, -10.3337, 0.83 ) }
    dend_42 { pt3dadd( 1.19495, -19.4962, -12.3393, 0.83 ) }
    dend_42 { pt3dadd( 0.376646, -25.7253, -16.7859, 0.83 ) }
    dend_42 { pt3dadd( -0.0458967, -28.9417, -19.0819, 0.83 ) }
    dend_42 { pt3dadd( -0.33206, -31.12, -20.6369, 0.83 ) }
    dend_42 { pt3dadd( -0.770914, -34.0489, -22.8713, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 65/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -4.02466, 6.59439, -9.39462, 0.83 ) }
    dend_41 { pt3dadd( -5.84156, 8.07219, -9.06373, 0.83 ) }
    dend_41 { pt3dadd( -7.83956, 9.82965, -8.35336, 0.55 ) }
    dend_41 { pt3dadd( -10.3387, 12.0744, -7.22545, 0.55 ) }
    dend_41 { pt3dadd( -12.282, 13.8778, -6.24322, 0.55 ) }
    dend_41 { pt3dadd( -12.8193, 14.4219, -5.97496, 0.28 ) }
    dend_41 { pt3dadd( -14.7103, 16.5731, -5.06813, 0.28 ) }
    dend_41 { pt3dadd( -17.0918, 19.8094, -4.04871, 0.55 ) }
    dend_41 { pt3dadd( -19.4573, 23.3554, -3.16596, 0.55 ) }
    dend_41 { pt3dadd( -21.316, 26.1721, -2.56705, 0.55 ) }
    dend_41 { pt3dadd( -23.8891, 30.2151, -1.77016, 0.55 ) }
    dend_41 { pt3dadd( -26.438, 34.1765, -0.981568, 0.55 ) }
    dend_41 { pt3dadd( -31.6609, 42.118, 0.505233, 0.55 ) }
    dend_41 { pt3dadd( -33.2175, 44.4652, 0.948828, 0.55 ) }
    dend_41 { pt3dadd( -36.1781, 48.941, 1.92736, 0.55 ) }
    dend_41 { pt3dadd( -38.2782, 52.0842, 2.80291, 0.55 ) }
    dend_41 { pt3dadd( -40.6363, 55.5797, 4.0591, 0.55 ) }
    dend_41 { pt3dadd( -41.9547, 57.4552, 4.86748, 0.55 ) }
    dend_41 { pt3dadd( -43.9425, 60.3009, 6.31338, 0.55 ) }
    dend_41 { pt3dadd( -44.7935, 61.6254, 6.92891, 0.55 ) }
    dend_41 { pt3dadd( -46.7899, 65.4958, 8.38072, 0.55 ) }
    dend_41 { pt3dadd( -47.7534, 67.6562, 8.8646, 0.55 ) }
    dend_41 { pt3dadd( -48.6657, 70.0352, 9.19036, 0.28 ) }
    dend_41 { pt3dadd( -49.2563, 71.7085, 9.31102, 0.55 ) }
    dend_41 { pt3dadd( -50.3269, 74.813, 9.15968, 0.55 ) }
    dend_41 { pt3dadd( -51.1375, 77.3484, 8.88017, 0.55 ) }
    dend_41 { pt3dadd( -51.7838, 79.4868, 8.34691, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 92/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -1.15466, 12.8468, -0.304621, 2.77 ) }
    dend_28 { pt3dadd( -0.702558, 14.5559, -0.304621, 2.77 ) }
    dend_28 { pt3dadd( 0.175112, 17.8738, -0.304621, 1.94 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 95/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.62534, 1.37714, -0.954618, 0.83 ) }
    dend_27 { pt3dadd( 8.31228, 2.09891, -1.22556, 0.83 ) }
    dend_27 { pt3dadd( 10.9306, 2.76948, -1.74568, 0.55 ) }
    dend_27 { pt3dadd( 13.9877, 3.57187, -2.45027, 0.55 ) }
    dend_27 { pt3dadd( 16.2497, 4.05227, -2.97808, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_27 { pt3dadd( 17.2672, 4.21827, -3.22098, 0.83 ) }
    dend_27 { pt3dadd( 21.1899, 4.72602, -4.14013, 0.55 ) }
    dend_27 { pt3dadd( 25.1805, 5.21268, -5.11139, 0.55 ) }
    dend_27 { pt3dadd( 29.422, 5.67848, -6.17181, 0.55 ) }
    dend_27 { pt3dadd( 34.8567, 6.20321, -7.54544, 0.55 ) }
    dend_27 { pt3dadd( 36.7908, 6.34073, -7.9784, 0.55 ) }
    dend_27 { pt3dadd( 40.308, 6.54296, -8.66467, 0.55 ) }
    dend_27 { pt3dadd( 41.7902, 6.59603, -8.89606, 0.55 ) }
    dend_27 { pt3dadd( 42.7195, 6.67839, -8.98671, 0.28 ) }
    dend_27 { pt3dadd( 43.6627, 6.87485, -9.0787, 0.28 ) }
    dend_27 { pt3dadd( 45.2382, 7.54417, -9.22893, 0.55 ) }
    dend_27 { pt3dadd( 46.6616, 8.39938, -9.37976, 0.55 ) }
    dend_27 { pt3dadd( 47.7945, 9.22993, -9.51164, 0.55 ) }
    dend_27 { pt3dadd( 49.3291, 10.3511, -9.68974, 0.28 ) }
    dend_27 { pt3dadd( 49.864, 10.7583, -9.74113, 0.28 ) }
    dend_27 { pt3dadd( 50.6979, 11.4159, -9.79371, 0.55 ) }
    dend_27 { pt3dadd( 52.5865, 12.9012, -9.86364, 0.28 ) }
    dend_27 { pt3dadd( 54.5763, 14.4215, -9.87539, 0.28 ) }
    dend_27 { pt3dadd( 55.8719, 15.3434, -9.7567, 0.28 ) }
    dend_27 { pt3dadd( 57.2965, 16.2723, -9.51828, 0.28 ) }
    dend_27 { pt3dadd( 59.4734, 17.4844, -8.9372, 0.55 ) }
    dend_27 { pt3dadd( 60.1089, 17.8019, -8.69813, 0.55 ) }
    dend_27 { pt3dadd( 61.5356, 18.4806, -8.05008, 0.28 ) }
    dend_27 { pt3dadd( 64.3821, 19.8488, -6.6067, 0.28 ) }
    dend_27 { pt3dadd( 66.5693, 20.9214, -5.49182, 0.55 ) }
    dend_27 { pt3dadd( 69.714, 22.5032, -3.93159, 0.55 ) }
    dend_27 { pt3dadd( 71.366, 23.3466, -3.07099, 0.55 ) }
    dend_27 { pt3dadd( 73.1705, 24.2832, -2.1265, 0.55 ) }
    dend_27 { pt3dadd( 74.2833, 24.8667, -1.56071, 0.55 ) }
    dend_27 { pt3dadd( 76.8902, 26.392, -0.40958, 0.28 ) }
    dend_27 { pt3dadd( 78.4973, 27.4918, 0.185972, 0.28 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 31/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.85466, -14.0184, 5.15538, 2.77 ) }
    dend_0 { pt3dadd( -0.938689, -15.1502, 5.35477, 2.77 ) }
    dend_0 { pt3dadd( -1.107, -17.4174, 5.75416, 1.94 ) }
    dend_0 { pt3dadd( -1.35048, -20.6969, 6.33192, 1.94 ) }
    dend_0 { pt3dadd( -1.5004, -22.7163, 6.68767, 1.66 ) }
    dend_0 { pt3dadd( -1.61816, -24.3025, 6.9671, 1.66 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 37/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.19886, -12.4109, 1.9633, 0.83 ) }
    axon_0 { pt3dadd( 2.36419, -27.3656, 1.9633, 0.83 ) }
    axon_0 { pt3dadd( 3.52951, -42.3202, 1.9633, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 40/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -0.770914, -34.0489, -22.8713, 0.55 ) }
    dend_44 { pt3dadd( -2.05557, -35.7434, -26.3361, 0.55 ) }
    dend_44 { pt3dadd( -2.475, -36.2966, -27.4672, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 43/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -0.770914, -34.0489, -22.8713, 0.55 ) }
    dend_43 { pt3dadd( 1.75414, -36.747, -29.5552, 0.55 ) }
    dend_43 { pt3dadd( 3.04754, -38.2374, -32.6608, 0.55 ) }
    dend_43 { pt3dadd( 4.36799, -39.7589, -35.8314, 0.55 ) }
    dend_43 { pt3dadd( 5.65684, -41.244, -38.9261, 0.55 ) }
    dend_43 { pt3dadd( 6.54054, -42.2623, -41.048, 0.28 ) }
    dend_43 { pt3dadd( 7.01258, -42.8062, -42.1815, 0.55 ) }
    dend_43 { pt3dadd( 9.05096, -45.1262, -46.2068, 0.28 ) }
    dend_43 { pt3dadd( 12.0088, -49.7311, -54.0529, 0.28 ) }
    dend_43 { pt3dadd( 14.0069, -54.7352, -61.971, 0.28 ) }
    dend_43 { pt3dadd( 14.0298, -61.2927, -69.019, 0.28 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 54/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 0.175112, 17.8738, -0.304621, 1.66 ) }
    dend_30 { pt3dadd( 1.51059, 19.8248, -0.398657, 1.66 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 56/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 0.175112, 17.8738, -0.304621, 0.55 ) }
    dend_29 { pt3dadd( 2.77548, 21.5783, -2.20174, 0.55 ) }
    dend_29 { pt3dadd( 4.79217, 24.1277, -3.05411, 0.55 ) }
    dend_29 { pt3dadd( 8.93736, 28.764, -4.20828, 0.55 ) }
    dend_29 { pt3dadd( 10.0879, 29.961, -4.47409, 0.55 ) }
    dend_29 { pt3dadd( 11.6843, 31.5064, -4.78711, 0.55 ) }
    dend_29 { pt3dadd( 13.5496, 33.1882, -5.15143, 0.55 ) }
    dend_29 { pt3dadd( 17.4421, 36.5335, -5.83408, 0.55 ) }
    dend_29 { pt3dadd( 21.335, 39.5168, -6.19016, 0.55 ) }
    dend_29 { pt3dadd( 24.3814, 41.6622, -6.21826, 0.55 ) }
    dend_29 { pt3dadd( 25.7295, 42.5094, -6.27315, 0.55 ) }
    dend_29 { pt3dadd( 29.7592, 44.9152, -6.51948, 0.55 ) }
    dend_29 { pt3dadd( 32.521, 46.4007, -6.81274, 0.55 ) }
    dend_29 { pt3dadd( 35.2939, 47.8549, -7.23532, 0.55 ) }
    dend_29 { pt3dadd( 38.2337, 49.2584, -7.64835, 0.55 ) }
    dend_29 { pt3dadd( 41.8386, 50.8795, -8.18628, 0.55 ) }
    dend_29 { pt3dadd( 44.5536, 52.1852, -8.6964, 0.55 ) }
    dend_29 { pt3dadd( 49.1593, 54.5574, -9.69114, 0.55 ) }
    dend_29 { pt3dadd( 51.3278, 55.8167, -10.2224, 0.28 ) }
    dend_29 { pt3dadd( 54.0026, 57.8135, -10.9378, 0.28 ) }
    dend_29 { pt3dadd( 55.5453, 59.3137, -11.3123, 0.55 ) }
    dend_29 { pt3dadd( 58.2057, 62.9971, -11.6535, 0.28 ) }
    dend_29 { pt3dadd( 59.0943, 64.7702, -11.6318, 0.28 ) }
    dend_29 { pt3dadd( 60.1171, 67.816, -11.5441, 0.55 ) }
    dend_29 { pt3dadd( 60.7963, 70.5579, -11.5323, 0.55 ) }
    dend_29 { pt3dadd( 61.437, 73.6485, -11.5714, 0.55 ) }
    dend_29 { pt3dadd( 61.9329, 76.007, -11.5834, 0.55 ) }
    dend_29 { pt3dadd( 62.7279, 79.0645, -11.59, 0.28 ) }
    dend_29 { pt3dadd( 64.3254, 84.34, -11.793, 0.28 ) }
    dend_29 { pt3dadd( 65.1149, 86.5956, -12.019, 0.55 ) }
    dend_29 { pt3dadd( 65.8601, 88.6563, -12.3282, 0.55 ) }
    dend_29 { pt3dadd( 66.4933, 90.1989, -12.6559, 0.55 ) }
    dend_29 { pt3dadd( 67.6906, 93.0313, -13.3147, 0.55 ) }
    dend_29 { pt3dadd( 76.0608, 100.527, -13.4797, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 90/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -1.61816, -24.3025, 6.9671, 1.66 ) }
    dend_6 { pt3dadd( -3.15725, -24.8832, 6.98081, 1.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 92/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.61816, -24.3025, 6.9671, 0.55 ) }
    dend_1 { pt3dadd( -2.55052, -25.5792, 7.24415, 0.55 ) }
    dend_1 { pt3dadd( -3.86475, -27.5901, 7.53527, 0.55 ) }
    dend_1 { pt3dadd( -5.19343, -29.7512, 7.73128, 0.55 ) }
    dend_1 { pt3dadd( -6.09966, -31.1789, 7.90843, 0.55 ) }
    dend_1 { pt3dadd( -6.88147, -32.2831, 8.13602, 0.55 ) }
    dend_1 { pt3dadd( -7.72975, -33.448, 8.40485, 0.55 ) }
    dend_1 { pt3dadd( -8.55294, -34.6736, 8.70638, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( -9.29831, -35.7737, 8.99187, 0.55 ) }
    dend_1 { pt3dadd( -10.6068, -37.6489, 9.45729, 0.55 ) }
    dend_1 { pt3dadd( -12.8493, -40.6777, 10.2625, 0.55 ) }
    dend_1 { pt3dadd( -13.7988, -41.9162, 10.6656, 0.55 ) }
    dend_1 { pt3dadd( -15.1263, -43.6232, 11.3347, 0.55 ) }
    dend_1 { pt3dadd( -15.7699, -44.4083, 11.6632, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 6/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 3.52951, -42.3202, 1.9633, 0.28 ) }
    axon_1 { pt3dadd( 4.69484, -57.2749, 1.9633, 0.28 ) }
    axon_1 { pt3dadd( 5.86017, -72.2296, 1.9633, 0.28 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 9/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -2.475, -36.2966, -27.4672, 0.55 ) }
    dend_46 { pt3dadd( -2.79827, -38.7726, -30.757, 0.55 ) }
    dend_46 { pt3dadd( -2.87294, -39.7538, -31.9693, 0.55 ) }
    dend_46 { pt3dadd( -2.80025, -42.4046, -35.2029, 0.55 ) }
    dend_46 { pt3dadd( -2.64528, -43.9505, -36.9909, 0.55 ) }
    dend_46 { pt3dadd( -2.49459, -45.4538, -38.7297, 0.28 ) }
    dend_46 { pt3dadd( -2.3539, -46.8573, -40.353, 0.28 ) }
    dend_46 { pt3dadd( -2.2449, -47.4425, -41.031, 0.55 ) }
    dend_46 { pt3dadd( -1.29993, -50.9977, -45.1552, 0.28 ) }
    dend_46 { pt3dadd( -0.923849, -52.065, -46.1939, 0.55 ) }
    dend_46 { pt3dadd( 0.12547, -57.9175, -51.1123, 0.55 ) }
    dend_46 { pt3dadd( 2.48084, -62.4953, -56.7997, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 21/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -2.475, -36.2966, -27.4672, 0.55 ) }
    dend_45 { pt3dadd( -4.34874, -35.4372, -31.0621, 0.55 ) }
    dend_45 { pt3dadd( -6.74033, -34.3403, -35.6504, 0.55 ) }
    dend_45 { pt3dadd( -9.07512, -33.2694, -40.1298, 0.28 ) }
    dend_45 { pt3dadd( -10.2272, -32.741, -42.3401, 0.55 ) }
    dend_45 { pt3dadd( -14.2092, -31.8149, -48.7988, 0.55 ) }
    dend_45 { pt3dadd( -19.2187, -30.9243, -54.5054, 0.55 ) }
    dend_45 { pt3dadd( -24.6534, -29.7536, -59.7597, 0.55 ) }
    dend_45 { pt3dadd( -29.3097, -28.7211, -65.736, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_30 (entry count 30/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 1.51059, 19.8248, -0.398657, 1.66 ) }
    dend_36 { pt3dadd( 1.44964, 21.747, -0.553825, 1.66 ) }
    dend_36 { pt3dadd( 1.39977, 23.3196, -0.680762, 1.66 ) }
    dend_36 { pt3dadd( 1.35948, 24.5901, -0.783321, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 34/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 1.51059, 19.8248, -0.398657, 1.11 ) }
    dend_31 { pt3dadd( 0.248865, 20.6211, 2.66713, 1.11 ) }
    dend_31 { pt3dadd( -0.056628, 20.8139, 3.40942, 1.11 ) }
    dend_31 { pt3dadd( -1.88747, 21.9693, 7.85804, 0.83 ) }
    dend_31 { pt3dadd( -2.88852, 22.6011, 10.2904, 0.83 ) }
    dend_31 { pt3dadd( -6.38632, 24.8086, 18.7895, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -3.15725, -24.8832, 6.98081, 1.66 ) }
    dend_8 { pt3dadd( -3.24899, -25.6268, 6.98131, 1.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 42/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -3.15725, -24.8832, 6.98081, 0.55 ) }
    dend_7 { pt3dadd( -3.6961, -27.594, 8.81782, 0.55 ) }
    dend_7 { pt3dadd( -4.05641, -29.9199, 10.5256, 0.55 ) }
    dend_7 { pt3dadd( -4.1727, -30.6993, 11.1206, 0.55 ) }
    dend_7 { pt3dadd( -4.54482, -33.0314, 12.9491, 0.55 ) }
    dend_7 { pt3dadd( -4.77388, -35.0137, 14.5547, 0.55 ) }
    dend_7 { pt3dadd( -4.98094, -37.3052, 16.3824, 0.55 ) }
    dend_7 { pt3dadd( -5.11381, -38.5546, 17.5043, 0.55 ) }
    dend_7 { pt3dadd( -5.36361, -40.2382, 19.0381, 0.55 ) }
    dend_7 { pt3dadd( -5.70199, -42.0048, 20.6269, 0.55 ) }
    dend_7 { pt3dadd( -6.08017, -43.924, 22.3457, 0.55 ) }
    dend_7 { pt3dadd( -6.32099, -44.9323, 23.2678, 0.55 ) }
    dend_7 { pt3dadd( -6.89668, -47.0501, 25.3461, 0.55 ) }
    dend_7 { pt3dadd( -7.31673, -48.7632, 27.0271, 0.55 ) }
    dend_7 { pt3dadd( -7.50389, -49.6372, 27.923, 0.55 ) }
    dend_7 { pt3dadd( -7.75318, -50.7197, 29.1148, 0.55 ) }
    dend_7 { pt3dadd( -8.22116, -52.3046, 30.926, 0.55 ) }
    dend_7 { pt3dadd( -8.82483, -54.1729, 33.2031, 0.55 ) }
    dend_7 { pt3dadd( -9.57501, -56.4639, 36.0286, 0.55 ) }
    dend_7 { pt3dadd( -10.3104, -58.4678, 38.6462, 0.55 ) }
    dend_7 { pt3dadd( -10.8097, -59.7343, 40.3471, 0.55 ) }
    dend_7 { pt3dadd( -11.6653, -61.6588, 42.9605, 0.55 ) }
    dend_7 { pt3dadd( -12.5473, -63.3603, 45.3139, 0.55 ) }
    dend_7 { pt3dadd( -13.5984, -64.9949, 47.6723, 0.55 ) }
    dend_7 { pt3dadd( -14.7994, -66.5055, 50.0894, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 67/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -15.7699, -44.4083, 11.6632, 0.55 ) }
    dend_5 { pt3dadd( -18.5045, -45.0472, 11.4055, 0.55 ) }
    dend_5 { pt3dadd( -19.6771, -45.306, 11.24, 0.55 ) }
    dend_5 { pt3dadd( -21.293, -45.7062, 10.9583, 0.55 ) }
    dend_5 { pt3dadd( -23.1143, -46.2073, 10.6021, 0.55 ) }
    dend_5 { pt3dadd( -24.6366, -46.6316, 10.2658, 0.55 ) }
    dend_5 { pt3dadd( -27.1186, -47.375, 9.68192, 0.55 ) }
    dend_5 { pt3dadd( -29.5163, -48.1292, 9.07416, 0.55 ) }
    dend_5 { pt3dadd( -31.3563, -48.7243, 8.68568, 0.55 ) }
    dend_5 { pt3dadd( -32.8066, -49.1982, 8.38321, 0.55 ) }
    dend_5 { pt3dadd( -35.0549, -49.9743, 7.90351, 0.55 ) }
    dend_5 { pt3dadd( -36.3526, -50.4237, 7.65572, 0.28 ) }
    dend_5 { pt3dadd( -38.2186, -51.1987, 7.34703, 0.55 ) }
    dend_5 { pt3dadd( -40.4587, -52.0746, 7.10802, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 81/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -15.7699, -44.4083, 11.6632, 0.55 ) }
    dend_2 { pt3dadd( -17.591, -45.9158, 14.5338, 0.55 ) }
    dend_2 { pt3dadd( -21.4217, -49.4683, 20.9733, 0.55 ) }
    dend_2 { pt3dadd( -23.5775, -51.4203, 24.3464, 0.55 ) }
    dend_2 { pt3dadd( -26.0635, -53.6357, 28.1105, 0.55 ) }
    dend_2 { pt3dadd( -28.5054, -55.7602, 31.8279, 0.55 ) }
    dend_2 { pt3dadd( -31.7804, -58.6094, 36.8136, 0.55 ) }
    dend_2 { pt3dadd( -35.4313, -61.7435, 42.1111, 0.55 ) }
    dend_2 { pt3dadd( -39.0014, -65.1098, 47.3665, 0.55 ) }
    dend_2 { pt3dadd( -41.5532, -67.5334, 51.2379, 0.55 ) }
    dend_2 { pt3dadd( -44.7318, -70.2155, 55.67, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 92/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 1.35948, 24.5901, -0.783321, 1.11 ) }
    dend_38 { pt3dadd( 0.611361, 27.4987, -2.60379, 1.11 ) }
    dend_38 { pt3dadd( 0.0733713, 29.5903, -3.91292, 1.11 ) }
    dend_38 { pt3dadd( -0.507554, 31.8488, -5.32654, 0.83 ) }
    dend_38 { pt3dadd( -0.871625, 33.2643, -6.21246, 0.83 ) }
    dend_38 { pt3dadd( -1.56597, 35.9637, -7.90207, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 98/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 1.35948, 24.5901, -0.783321, 0.55 ) }
    dend_37 { pt3dadd( 4.45224, 27.1548, -2.26853, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_37 { pt3dadd( 5.7802, 28.3542, -2.75578, 0.55 ) }
    dend_37 { pt3dadd( 10.7833, 33.0396, -4.06443, 0.55 ) }
    dend_37 { pt3dadd( 13.385, 35.6706, -4.56726, 0.55 ) }
    dend_37 { pt3dadd( 15.8144, 38.2159, -4.8697, 0.55 ) }
    dend_37 { pt3dadd( 17.2292, 39.7174, -4.96915, 0.55 ) }
    dend_37 { pt3dadd( 19.3279, 42.0177, -4.7063, 0.55 ) }
    dend_37 { pt3dadd( 21.0293, 43.8568, -4.2358, 0.55 ) }
    dend_37 { pt3dadd( 22.8153, 45.7079, -3.62516, 0.55 ) }
    dend_37 { pt3dadd( 24.5944, 47.4851, -3.11331, 0.55 ) }
    dend_37 { pt3dadd( 25.7277, 48.6197, -2.83364, 0.55 ) }
    dend_37 { pt3dadd( 30.3776, 53.0924, -1.94929, 0.55 ) }
    dend_37 { pt3dadd( 33.0722, 55.5518, -1.53433, 0.55 ) }
    dend_37 { pt3dadd( 36.6823, 58.7122, -1.04762, 0.55 ) }
    dend_37 { pt3dadd( 38.6557, 60.3093, -0.796384, 0.55 ) }
    dend_37 { pt3dadd( 40.2651, 61.5577, -0.537611, 0.55 ) }
    dend_37 { pt3dadd( 43.1381, 63.6125, -0.222097, 0.83 ) }
    dend_37 { pt3dadd( 46.6449, 66.0065, -0.074382, 0.55 ) }
    dend_37 { pt3dadd( 49.0246, 67.713, 0.00280309, 0.55 ) }
    dend_37 { pt3dadd( 50.3667, 68.6732, 0.114037, 0.55 ) }
    dend_37 { pt3dadd( 53.3874, 70.701, 0.358228, 0.55 ) }
    dend_37 { pt3dadd( 59.0155, 74.2776, 0.873058, 0.55 ) }
    dend_37 { pt3dadd( 62.519, 76.6828, 1.20787, 0.55 ) }
    dend_37 { pt3dadd( 64.3307, 78.0536, 1.3421, 0.83 ) }
    dend_37 { pt3dadd( 66.2624, 79.6214, 1.48858, 0.55 ) }
    dend_37 { pt3dadd( 67.743, 80.9148, 1.75772, 0.55 ) }
    dend_37 { pt3dadd( 68.9079, 81.9598, 2.23546, 0.55 ) }
    dend_37 { pt3dadd( 70.8356, 83.6595, 3.63093, 0.55 ) }
    dend_37 { pt3dadd( 72.16, 84.7943, 4.73361, 0.55 ) }
    dend_37 { pt3dadd( 72.7675, 85.3559, 5.26408, 0.55 ) }
    dend_37 { pt3dadd( 76.4771, 89.7678, 9.00649, 0.55 ) }
    dend_37 { pt3dadd( 78.557, 92.8368, 11.3624, 0.55 ) }
    dend_37 { pt3dadd( 79.3454, 94.0962, 12.2981, 0.55 ) }
    dend_37 { pt3dadd( 79.9826, 95.32, 13.1882, 0.55 ) }
    dend_37 { pt3dadd( 80.7383, 97.0867, 14.2664, 0.55 ) }
    dend_37 { pt3dadd( 82.4118, 101.802, 16.5284, 0.55 ) }
    dend_37 { pt3dadd( 82.7829, 103.112, 17.061, 0.55 ) }
    dend_37 { pt3dadd( 83.5411, 105.651, 18.0043, 0.55 ) }
    dend_37 { pt3dadd( 84.6793, 109.511, 19.4947, 0.55 ) }
    dend_37 { pt3dadd( 85.7085, 112.637, 20.7777, 0.55 ) }
    dend_37 { pt3dadd( 86.6326, 114.939, 21.8791, 0.55 ) }
    dend_37 { pt3dadd( 88.474, 118.55, 23.7763, 0.55 ) }
    dend_37 { pt3dadd( 89.4387, 120.193, 24.6922, 0.55 ) }
    dend_37 { pt3dadd( 90.4864, 121.871, 25.6318, 0.28 ) }
    dend_37 { pt3dadd( 91.2089, 122.959, 26.3017, 0.83 ) }
    dend_37 { pt3dadd( 93.4216, 126.431, 28.6059, 0.55 ) }
    dend_37 { pt3dadd( 95.63, 129.946, 30.7246, 0.55 ) }
    dend_37 { pt3dadd( 96.7694, 131.711, 31.7, 0.28 ) }
    dend_37 { pt3dadd( 97.5009, 132.82, 32.3393, 0.55 ) }
    dend_37 { pt3dadd( 99.4827, 135.676, 34.0703, 0.28 ) }
    dend_37 { pt3dadd( 100.649, 137.481, 35.1195, 0.28 ) }
    dend_37 { pt3dadd( 101.734, 139.668, 36.131, 0.28 ) }
    dend_37 { pt3dadd( 107.356, 149.283, 40.2282, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 52/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -6.38632, 24.8086, 18.7895, 0.83 ) }
    dend_33 { pt3dadd( -6.72737, 26.2131, 18.2829, 0.83 ) }
    dend_33 { pt3dadd( -6.9601, 27.4113, 18.1475, 0.83 ) }
    dend_33 { pt3dadd( -7.52761, 29.9682, 18.2328, 0.55 ) }
    dend_33 { pt3dadd( -7.93579, 31.4882, 18.6377, 0.55 ) }
    dend_33 { pt3dadd( -8.16273, 32.2467, 18.9926, 0.55 ) }
    dend_33 { pt3dadd( -8.9673, 34.4165, 20.3843, 0.55 ) }
    dend_33 { pt3dadd( -9.74444, 36.046, 21.8905, 0.55 ) }
    dend_33 { pt3dadd( -10.5678, 37.5825, 23.5885, 0.55 ) }
    dend_33 { pt3dadd( -12.04, 40.1066, 26.768, 0.55 ) }
    dend_33 { pt3dadd( -13.1895, 41.9929, 29.3411, 0.55 ) }
    dend_33 { pt3dadd( -14.2818, 43.6161, 31.7328, 0.55 ) }
    dend_33 { pt3dadd( -15.399, 45.0346, 34.049, 0.55 ) }
    dend_33 { pt3dadd( -15.8916, 45.574, 35.0419, 0.55 ) }
    dend_33 { pt3dadd( -16.6948, 46.3819, 36.7693, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 67/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -6.38632, 24.8086, 18.7895, 0.55 ) }
    dend_32 { pt3dadd( -6.68741, 25.277, 19.6275, 0.55 ) }
    dend_32 { pt3dadd( -7.25022, 26.3944, 21.6387, 0.55 ) }
    dend_32 { pt3dadd( -7.87748, 27.8343, 24.0483, 0.55 ) }
    dend_32 { pt3dadd( -8.4307, 29.178, 26.2036, 0.55 ) }
    dend_32 { pt3dadd( -8.73934, 30.0573, 27.5757, 0.55 ) }
    dend_32 { pt3dadd( -8.9306, 30.6503, 28.523, 0.55 ) }
    dend_32 { pt3dadd( -9.27272, 31.9634, 30.6656, 0.55 ) }
    dend_32 { pt3dadd( -9.4246, 32.8876, 32.2048, 0.55 ) }
    dend_32 { pt3dadd( -9.58273, 34.1585, 34.4398, 0.55 ) }
    dend_32 { pt3dadd( -9.66422, 34.7475, 35.5612, 0.55 ) }
    dend_32 { pt3dadd( -9.7887, 35.642, 37.3337, 0.55 ) }
    dend_32 { pt3dadd( -9.96256, 36.6719, 39.4711, 0.55 ) }
    dend_32 { pt3dadd( -10.2342, 37.9278, 42.2575, 0.55 ) }
    dend_32 { pt3dadd( -10.441, 38.9607, 44.824, 0.55 ) }
    dend_32 { pt3dadd( -10.6501, 39.8862, 47.2347, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 83/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -3.24899, -25.6268, 6.98131, 1.11 ) }
    dend_10 { pt3dadd( -3.65156, -28.8763, 4.85491, 1.11 ) }
    dend_10 { pt3dadd( -4.03376, -31.9614, 2.83613, 1.11 ) }
    dend_10 { pt3dadd( -4.26141, -33.7989, 1.63369, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 87/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -3.24899, -25.6268, 6.98131, 0.55 ) }
    dend_9 { pt3dadd( -0.989219, -27.8669, 5.7001, 0.55 ) }
    dend_9 { pt3dadd( 0.349549, -29.2009, 4.72617, 0.55 ) }
    dend_9 { pt3dadd( 1.54504, -30.5384, 3.82172, 0.55 ) }
    dend_9 { pt3dadd( 2.04758, -31.061, 3.49084, 0.55 ) }
    dend_9 { pt3dadd( 3.91406, -33.0243, 2.28149, 0.55 ) }
    dend_9 { pt3dadd( 5.35403, -34.5598, 1.4798, 0.55 ) }
    dend_9 { pt3dadd( 7.63928, -37.0554, 0.498886, 0.55 ) }
    dend_9 { pt3dadd( 9.52025, -39.2207, -0.238665, 0.55 ) }
    dend_9 { pt3dadd( 11.7841, -41.7942, -0.905602, 0.55 ) }
    dend_9 { pt3dadd( 13.4693, -43.6177, -1.24834, 0.55 ) }
    dend_9 { pt3dadd( 18.0201, -48.3727, -1.37525, 0.55 ) }
    dend_9 { pt3dadd( 19.3829, -49.8085, -1.22541, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_9 { pt3dadd( 20.107, -50.5601, -1.05084, 0.55 ) }
    dend_9 { pt3dadd( 22.5266, -53.0193, -0.298992, 0.55 ) }
    dend_9 { pt3dadd( 23.5887, -54.1494, 0.166313, 0.55 ) }
    dend_9 { pt3dadd( 27.0546, -57.5295, 1.99623, 0.55 ) }
    dend_9 { pt3dadd( 28.0847, -58.5117, 2.58352, 0.55 ) }
    dend_9 { pt3dadd( 29.2031, -59.5236, 3.13429, 0.55 ) }
    dend_9 { pt3dadd( 30.4648, -60.6413, 3.70711, 0.55 ) }
    dend_9 { pt3dadd( 33.6388, -63.4183, 5.06429, 0.55 ) }
    dend_9 { pt3dadd( 36.6146, -66.0091, 6.24165, 0.55 ) }
    dend_9 { pt3dadd( 38.2152, -67.3335, 6.69289, 0.55 ) }
    dend_9 { pt3dadd( 40.9096, -69.5213, 7.32361, 0.55 ) }
    dend_9 { pt3dadd( 41.519, -70.0223, 7.4308, 0.55 ) }
    dend_9 { pt3dadd( 44.1272, -72.2076, 7.66802, 0.55 ) }
    dend_9 { pt3dadd( 45.5505, -73.4719, 7.52734, 0.83 ) }
    dend_9 { pt3dadd( 47.5107, -75.4389, 7.24244, 0.28 ) }
    dend_9 { pt3dadd( 48.6187, -76.5644, 7.09599, 0.55 ) }
    dend_9 { pt3dadd( 49.7931, -77.8274, 6.64392, 0.28 ) }
    dend_9 { pt3dadd( 51.352, -79.5065, 5.79924, 0.83 ) }
    dend_9 { pt3dadd( 53.1783, -81.5408, 4.61885, 0.28 ) }
    dend_9 { pt3dadd( 55.4518, -84.06, 3.12187, 0.28 ) }
    dend_9 { pt3dadd( 56.271, -84.9945, 2.59115, 0.55 ) }
    dend_9 { pt3dadd( 61.0939, -90.4956, -1.02853, 0.28 ) }
    dend_9 { pt3dadd( 61.6613, -91.0745, -1.51747, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 23/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -44.7318, -70.2155, 55.67, 0.55 ) }
    dend_4 { pt3dadd( -46.0281, -71.7529, 56.4941, 0.55 ) }
    dend_4 { pt3dadd( -47.4513, -73.3854, 57.2657, 0.55 ) }
    dend_4 { pt3dadd( -49.4803, -75.7129, 58.3659, 0.55 ) }
    dend_4 { pt3dadd( -51.2851, -77.7831, 59.3444, 0.55 ) }
    dend_4 { pt3dadd( -53.1109, -79.8774, 60.3343, 0.55 ) }
    dend_4 { pt3dadd( -54.3911, -81.3459, 61.0284, 0.28 ) }
    dend_4 { pt3dadd( -55.1473, -82.1389, 61.3934, 0.28 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -44.7318, -70.2155, 55.67, 0.55 ) }
    dend_3 { pt3dadd( -45.8987, -71.0131, 57.4911, 0.55 ) }
    dend_3 { pt3dadd( -47.8432, -72.3422, 60.5257, 0.55 ) }
    dend_3 { pt3dadd( -49.2627, -73.3125, 62.741, 0.55 ) }
    dend_3 { pt3dadd( -50.5783, -74.2118, 64.7942, 0.55 ) }
    dend_3 { pt3dadd( -52.5824, -75.5815, 67.9216, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 37/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -1.56597, 35.9637, -7.90207, 0.55 ) }
    dend_40 { pt3dadd( -3.00754, 36.8045, -9.27311, 0.55 ) }
    dend_40 { pt3dadd( -8.70809, 40.6658, -15.3456, 0.55 ) }
    dend_40 { pt3dadd( -10.8679, 42.1999, -17.7601, 0.55 ) }
    dend_40 { pt3dadd( -13.076, 43.9876, -20.7519, 0.55 ) }
    dend_40 { pt3dadd( -15.3287, 45.7683, -24.055, 0.55 ) }
    dend_40 { pt3dadd( -17.362, 47.2982, -27.0581, 0.55 ) }
    dend_40 { pt3dadd( -18.2132, 47.9557, -28.4287, 0.55 ) }
    dend_40 { pt3dadd( -19.581, 49.1562, -30.9157, 0.55 ) }
    dend_40 { pt3dadd( -22.3072, 51.5506, -35.7896, 0.55 ) }
    dend_40 { pt3dadd( -25.0861, 53.8018, -40.0448, 0.55 ) }
    dend_40 { pt3dadd( -27.8983, 56.0396, -44.1395, 0.55 ) }
    dend_40 { pt3dadd( -29.3922, 57.3156, -46.0665, 0.55 ) }
    dend_40 { pt3dadd( -30.4209, 58.4371, -47.34, 0.55 ) }
    dend_40 { pt3dadd( -32.0268, 60.7927, -49.2278, 0.55 ) }
    dend_40 { pt3dadd( -33.8874, 64.1901, -51.1863, 0.55 ) }
    dend_40 { pt3dadd( -36.0844, 70.018, -53.7775, 0.55 ) }
    dend_40 { pt3dadd( -37.5296, 75.0306, -55.6522, 0.55 ) }
    dend_40 { pt3dadd( -39.3128, 81.6068, -57.6062, 0.55 ) }
    dend_40 { pt3dadd( -40.4783, 85.854, -58.6333, 0.28 ) }
    dend_40 { pt3dadd( -40.7897, 87.0333, -58.8429, 0.28 ) }
    dend_40 { pt3dadd( -41.2882, 88.9394, -59.1348, 0.55 ) }
    dend_40 { pt3dadd( -42.1526, 91.4962, -59.2058, 0.55 ) }
    dend_40 { pt3dadd( -43.5417, 95.5194, -59.1739, 0.55 ) }
    dend_40 { pt3dadd( -44.4596, 97.515, -58.9202, 0.28 ) }
    dend_40 { pt3dadd( -45.5704, 99.753, -58.7062, 0.55 ) }
    dend_40 { pt3dadd( -47.1526, 102.89, -58.591, 0.28 ) }
    dend_40 { pt3dadd( -49.0492, 106.628, -58.752, 0.55 ) }
    dend_40 { pt3dadd( -50.6219, 109.814, -58.9935, 0.55 ) }
    dend_40 { pt3dadd( -52.1895, 113.179, -59.5194, 0.28 ) }
    dend_40 { pt3dadd( -54.1926, 117.388, -60.2173, 0.28 ) }
    dend_40 { pt3dadd( -54.7658, 118.509, -60.4696, 0.28 ) }
    dend_40 { pt3dadd( -55.8989, 121.029, -61.29, 0.55 ) }
    dend_40 { pt3dadd( -61.0688, 130.043, -65.5401, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 71/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -1.56597, 35.9637, -7.90207, 0.55 ) }
    dend_39 { pt3dadd( -0.350458, 38.8216, -9.63714, 0.55 ) }
    dend_39 { pt3dadd( 0.187768, 40.3191, -10.5162, 0.55 ) }
    dend_39 { pt3dadd( 1.13445, 43.6381, -12.485, 0.55 ) }
    dend_39 { pt3dadd( 2.21409, 48.3941, -15.1969, 0.55 ) }
    dend_39 { pt3dadd( 3.36973, 53.6452, -17.9036, 0.55 ) }
    dend_39 { pt3dadd( 3.90852, 56.5062, -19.3313, 0.55 ) }
    dend_39 { pt3dadd( 4.29028, 59.5752, -20.8965, 0.55 ) }
    dend_39 { pt3dadd( 4.42496, 61.7788, -22.0156, 0.55 ) }
    dend_39 { pt3dadd( 4.55844, 64.3613, -23.3021, 0.55 ) }
    dend_39 { pt3dadd( 4.6745, 68.0586, -24.9884, 0.55 ) }
    dend_39 { pt3dadd( 4.70303, 71.7959, -26.7081, 0.55 ) }
    dend_39 { pt3dadd( 4.69424, 74.2983, -27.8882, 0.55 ) }
    dend_39 { pt3dadd( 4.71839, 77.5474, -29.38, 0.55 ) }
    dend_39 { pt3dadd( 4.80893, 85.9769, -32.647, 0.55 ) }
    dend_39 { pt3dadd( 4.9, 89.5424, -33.7743, 0.55 ) }
    dend_39 { pt3dadd( 4.99737, 92.6065, -34.5984, 0.55 ) }
    dend_39 { pt3dadd( 5.17249, 96.7517, -35.4834, 0.55 ) }
    dend_39 { pt3dadd( 5.24083, 98.2076, -35.7277, 0.55 ) }
    dend_39 { pt3dadd( 5.63982, 108.498, -36.5987, 0.55 ) }
    dend_39 { pt3dadd( 5.78849, 114.357, -36.8447, 0.55 ) }
    dend_39 { pt3dadd( 6.05163, 119.543, -37.0033, 0.55 ) }
    dend_39 { pt3dadd( 6.35158, 123.051, -37.1018, 0.55 ) }
    dend_39 { pt3dadd( 6.76037, 127.152, -37.0539, 0.55 ) }
    dend_39 { pt3dadd( 7.33608, 132.68, -36.8312, 0.28 ) }
    dend_39 { pt3dadd( 7.7317, 136.607, -36.575, 0.28 ) }
    dend_39 { pt3dadd( 8.04901, 140.46, -36.2343, 0.55 ) }
    dend_39 { pt3dadd( 8.84609, 150.618, -34.9168, 0.55 ) }
    dend_39 { pt3dadd( 9.28129, 156.087, -34.1616, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_39 { pt3dadd( 9.48559, 159.036, -33.7765, 0.55 ) }
    dend_39 { pt3dadd( 9.70914, 162.2, -33.4179, 0.55 ) }
    dend_39 { pt3dadd( 9.8846, 165.075, -33.1107, 0.55 ) }
    dend_39 { pt3dadd( 10.1427, 168.811, -32.8651, 0.55 ) }
    dend_39 { pt3dadd( 10.6007, 173.309, -32.5561, 0.55 ) }
    dend_39 { pt3dadd( 11.0811, 176.567, -32.5006, 0.28 ) }
    dend_39 { pt3dadd( 11.824, 181.442, -32.3294, 0.55 ) }
    dend_39 { pt3dadd( 12.5213, 185.884, -32.1351, 0.28 ) }
    dend_39 { pt3dadd( 13.1806, 189.862, -31.96, 0.55 ) }
    dend_39 { pt3dadd( 14.3558, 196.621, -31.6861, 0.55 ) }
    dend_39 { pt3dadd( 15.1249, 201.278, -31.4613, 0.55 ) }
    dend_39 { pt3dadd( 16.9882, 213.45, -30.7317, 0.28 ) }
    dend_39 { pt3dadd( 17.5476, 217.569, -30.3963, 0.55 ) }
    dend_39 { pt3dadd( 21.0384, 231.899, -31.0919, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 14/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -16.6948, 46.3819, 36.7693, 0.55 ) }
    dend_35 { pt3dadd( -21.8853, 47.866, 40.481, 0.55 ) }
    dend_35 { pt3dadd( -23.6788, 48.3787, 41.7635, 0.55 ) }
    dend_35 { pt3dadd( -28.2898, 49.6971, 45.0608, 0.55 ) }
    dend_35 { pt3dadd( -32.5605, 50.9182, 48.1147, 0.55 ) }
    dend_35 { pt3dadd( -35.1062, 51.646, 49.9351, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 20/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -16.6948, 46.3819, 36.7693, 0.55 ) }
    dend_34 { pt3dadd( -16.6682, 47.4547, 36.8574, 0.55 ) }
    dend_34 { pt3dadd( -16.637, 48.8414, 37.0118, 0.55 ) }
    dend_34 { pt3dadd( -16.5725, 53.1674, 37.6306, 0.55 ) }
    dend_34 { pt3dadd( -16.6553, 58.2103, 38.5031, 0.55 ) }
    dend_34 { pt3dadd( -16.7518, 61.3413, 39.0775, 0.55 ) }
    dend_34 { pt3dadd( -16.9834, 66.7751, 40.0689, 0.55 ) }
    dend_34 { pt3dadd( -17.3025, 71.1631, 40.9447, 0.55 ) }
    dend_34 { pt3dadd( -17.6727, 73.9964, 41.5571, 0.55 ) }
    dend_34 { pt3dadd( -18.4552, 77.8358, 42.4817, 0.55 ) }
    dend_34 { pt3dadd( -18.9254, 79.4722, 42.8638, 0.55 ) }
    dend_34 { pt3dadd( -19.5458, 81.0358, 43.2422, 0.55 ) }
    dend_34 { pt3dadd( -21.2582, 84.3607, 43.9488, 0.55 ) }
    dend_34 { pt3dadd( -22.765, 86.8419, 44.2809, 0.55 ) }
    dend_34 { pt3dadd( -24.529, 89.2681, 44.4879, 0.55 ) }
    dend_34 { pt3dadd( -26.5908, 91.9247, 44.6562, 0.55 ) }
    dend_34 { pt3dadd( -28.8001, 94.6095, 44.8011, 0.55 ) }
    dend_34 { pt3dadd( -32.3126, 98.6797, 44.9349, 0.28 ) }
    dend_34 { pt3dadd( -34.8922, 101.541, 44.8611, 0.28 ) }
    dend_34 { pt3dadd( -37.21, 104.101, 44.7258, 0.28 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 40/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -4.26141, -33.7989, 1.63369, 1.11 ) }
    dend_14 { pt3dadd( -3.92417, -35.9185, 1.20953, 1.11 ) }
    dend_14 { pt3dadd( -3.53371, -38.3727, 0.71844, 1.11 ) }
    dend_14 { pt3dadd( -3.07679, -41.2446, 0.143765, 1.11 ) }
    dend_14 { pt3dadd( -2.70309, -43.5934, -0.326246, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 45/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -4.26141, -33.7989, 1.63369, 0.55 ) }
    dend_11 { pt3dadd( -7.05883, -35.9277, 1.55042, 0.55 ) }
    dend_11 { pt3dadd( -9.87125, -38.3917, 1.47053, 0.55 ) }
    dend_11 { pt3dadd( -12.3954, -40.7826, 0.945108, 0.55 ) }
    dend_11 { pt3dadd( -14.8141, -43.2019, 0.352479, 0.55 ) }
    dend_11 { pt3dadd( -17.5038, -45.8667, -0.163515, 0.55 ) }
    dend_11 { pt3dadd( -20.2578, -48.6222, -0.640649, 0.55 ) }
    dend_11 { pt3dadd( -23.9254, -52.6744, -1.26528, 0.55 ) }
    dend_11 { pt3dadd( -27.9176, -57.5506, -2.04502, 0.55 ) }
    dend_11 { pt3dadd( -29.6518, -59.617, -2.37525, 0.55 ) }
    dend_11 { pt3dadd( -33.3094, -63.8116, -3.11946, 0.55 ) }
    dend_11 { pt3dadd( -34.709, -65.297, -3.39959, 0.55 ) }
    dend_11 { pt3dadd( -36.203, -66.7357, -3.64385, 0.55 ) }
    dend_11 { pt3dadd( -39.8365, -70.0583, -4.17499, 0.55 ) }
    dend_11 { pt3dadd( -45.8336, -75.3008, -5.04201, 0.55 ) }
    dend_11 { pt3dadd( -48.4293, -77.4507, -5.62662, 0.55 ) }
    dend_11 { pt3dadd( -50.9475, -79.4942, -6.32578, 0.55 ) }
    dend_11 { pt3dadd( -52.7024, -80.8161, -6.78977, 0.55 ) }
    dend_11 { pt3dadd( -54.433, -81.9924, -7.23587, 0.28 ) }
    dend_11 { pt3dadd( -56.6612, -83.3273, -7.76249, 0.83 ) }
    dend_11 { pt3dadd( -57.6738, -83.8472, -8.21136, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 66/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -2.70309, -43.5934, -0.326246, 1.11 ) }
    dend_18 { pt3dadd( -2.71433, -46.5882, -0.941859, 1.11 ) }
    dend_18 { pt3dadd( -2.73762, -52.8005, -2.21886, 0.83 ) }
    dend_18 { pt3dadd( -2.75453, -57.3078, -3.14538, 0.83 ) }
    dend_18 { pt3dadd( -2.76882, -61.1191, -3.92884, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 71/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -2.70309, -43.5934, -0.326246, 0.55 ) }
    dend_15 { pt3dadd( -4.09076, -46.6349, 0.787777, 0.55 ) }
    dend_15 { pt3dadd( -4.83572, -48.5564, 1.37014, 0.55 ) }
    dend_15 { pt3dadd( -5.91253, -51.8307, 2.1795, 0.55 ) }
    dend_15 { pt3dadd( -7.03404, -55.4651, 2.94529, 0.55 ) }
    dend_15 { pt3dadd( -7.98835, -58.6376, 3.7147, 0.55 ) }
    dend_15 { pt3dadd( -8.55302, -60.5145, 4.16996, 0.55 ) }
    dend_15 { pt3dadd( -9.08451, -62.3903, 4.49274, 0.55 ) }
    dend_15 { pt3dadd( -9.6193, -64.6626, 4.87183, 0.55 ) }
    dend_15 { pt3dadd( -9.7932, -65.6194, 5.01839, 0.55 ) }
    dend_15 { pt3dadd( -10.1446, -69.7906, 5.33577, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 82/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -57.6738, -83.8472, -8.21136, 0.55 ) }
    dend_13 { pt3dadd( -58.7497, -84.3343, -10.1343, 0.55 ) }
    dend_13 { pt3dadd( -59.2934, -84.6341, -11.0814, 0.55 ) }
    dend_13 { pt3dadd( -61.6775, -85.8453, -15.7436, 0.55 ) }
    dend_13 { pt3dadd( -62.7573, -86.3339, -17.8243, 0.28 ) }
    dend_13 { pt3dadd( -63.3047, -86.5816, -18.879, 0.28 ) }
    dend_13 { pt3dadd( -64.0666, -86.9263, -20.3469, 0.55 ) }
    dend_13 { pt3dadd( -64.8464, -87.338, -22.0628, 0.55 ) }
    dend_13 { pt3dadd( -67.0566, -88.5346, -27.0881, 0.28 ) }
    dend_13 { pt3dadd( -67.5709, -88.7602, -28.107, 0.83 ) }
    dend_13 { pt3dadd( -69.7272, -91.4267, -35.5228, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 93/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -57.6738, -83.8472, -8.21136, 0.28 ) }
    dend_12 { pt3dadd( -58.3201, -84.6014, -10.2315, 0.28 ) }
    dend_12 { pt3dadd( -58.5907, -84.8918, -11.0918, 0.55 ) }
    dend_12 { pt3dadd( -61.3675, -87.8711, -19.9203, 0.28 ) }
    dend_12 { pt3dadd( -61.5377, -88.0537, -20.4614, 0.55 ) }
    dend_12 { pt3dadd( -62.3076, -88.8797, -22.9092, 0.28 ) }
    dend_12 { pt3dadd( -62.6154, -89.2099, -23.8878, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_12 { pt3dadd( -64.4955, -91.3721, -31.0794, 0.28 ) }
    dend_12 { pt3dadd( -65.8625, -95.0063, -39.7222, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -2.76882, -61.1191, -3.92884, 0.83 ) }
    dend_20 { pt3dadd( -3.22095, -63.501, -4.24262, 0.83 ) }
    dend_20 { pt3dadd( -3.70546, -66.0535, -4.57886, 0.83 ) }
    dend_20 { pt3dadd( -4.54159, -70.4583, -5.15912, 0.83 ) }
    dend_20 { pt3dadd( -5.02677, -73.0143, -5.49583, 0.83 ) }
    dend_20 { pt3dadd( -5.69664, -76.5434, -5.96071, 0.83 ) }
    dend_20 { pt3dadd( -6.16978, -79.0359, -6.28907, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 9/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -2.76882, -61.1191, -3.92884, 0.55 ) }
    dend_19 { pt3dadd( -2.00968, -62.4062, -4.1364, 0.55 ) }
    dend_19 { pt3dadd( -1.25986, -63.8476, -4.44313, 0.55 ) }
    dend_19 { pt3dadd( 0.0119207, -66.5394, -4.72701, 0.55 ) }
    dend_19 { pt3dadd( 1.6077, -69.6597, -5.06431, 0.55 ) }
    dend_19 { pt3dadd( 2.24745, -70.9433, -5.19349, 0.55 ) }
    dend_19 { pt3dadd( 3.06353, -72.5423, -5.36495, 0.55 ) }
    dend_19 { pt3dadd( 4.47935, -75.237, -5.68591, 0.55 ) }
    dend_19 { pt3dadd( 6.63434, -79.2475, -6.29631, 0.55 ) }
    dend_19 { pt3dadd( 9.05036, -83.6273, -7.26036, 0.55 ) }
    dend_19 { pt3dadd( 9.66199, -84.7576, -7.59309, 0.55 ) }
    dend_19 { pt3dadd( 10.403, -86.0497, -8.03781, 0.55 ) }
    dend_19 { pt3dadd( 12.3885, -89.4915, -9.3516, 0.55 ) }
    dend_19 { pt3dadd( 14.6496, -93.3293, -11.0021, 0.55 ) }
    dend_19 { pt3dadd( 16.1572, -95.7899, -12.297, 0.28 ) }
    dend_19 { pt3dadd( 16.7265, -96.7616, -12.8019, 0.28 ) }
    dend_19 { pt3dadd( 17.4812, -97.9881, -13.4302, 0.28 ) }
    dend_19 { pt3dadd( 18.2348, -99.1208, -13.9968, 0.28 ) }
    dend_19 { pt3dadd( 19.6327, -101.05, -14.8652, 0.55 ) }
    dend_19 { pt3dadd( 20.9769, -102.656, -15.5171, 0.55 ) }
    dend_19 { pt3dadd( 22.3835, -104.274, -16.0963, 0.55 ) }
    dend_19 { pt3dadd( 24.4123, -106.62, -16.9145, 0.55 ) }
    dend_19 { pt3dadd( 26.9252, -109.561, -17.7685, 0.55 ) }
    dend_19 { pt3dadd( 28.3631, -111.206, -18.2361, 0.28 ) }
    dend_19 { pt3dadd( 29.9976, -113.124, -18.7228, 0.28 ) }
    dend_19 { pt3dadd( 30.6302, -113.868, -18.892, 0.28 ) }
    dend_19 { pt3dadd( 31.935, -115.314, -19.2001, 0.55 ) }
    dend_19 { pt3dadd( 33.967, -117.911, -19.4755, 0.28 ) }
    dend_19 { pt3dadd( 36.6368, -126.082, -21.918, 0.28 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 38/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -10.1446, -69.7906, 5.33577, 0.55 ) }
    dend_17 { pt3dadd( -10.9796, -71.7759, 6.08429, 0.55 ) }
    dend_17 { pt3dadd( -12.3138, -74.9478, 7.28028, 0.55 ) }
    dend_17 { pt3dadd( -13.4372, -77.6186, 8.28731, 0.28 ) }
    dend_17 { pt3dadd( -14.8505, -80.9787, 9.55423, 0.55 ) }
    dend_17 { pt3dadd( -15.3192, -82.093, 9.9744, 0.28 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 44/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -10.1446, -69.7906, 5.33577, 0.55 ) }
    dend_16 { pt3dadd( -11.297, -72.7164, 6.7462, 0.55 ) }
    dend_16 { pt3dadd( -11.8806, -73.9463, 7.57191, 0.55 ) }
    dend_16 { pt3dadd( -13.0901, -76.2432, 9.43194, 0.55 ) }
    dend_16 { pt3dadd( -13.8806, -77.6796, 10.8242, 0.55 ) }
    dend_16 { pt3dadd( -14.6376, -79.0316, 12.2019, 0.55 ) }
    dend_16 { pt3dadd( -16.0823, -81.7985, 14.9944, 0.55 ) }
    dend_16 { pt3dadd( -17.3037, -83.9829, 17.2027, 0.55 ) }
    dend_16 { pt3dadd( -18.0821, -85.393, 18.8622, 0.55 ) }
    dend_16 { pt3dadd( -19.0948, -87.2632, 21.3531, 0.28 ) }
    dend_16 { pt3dadd( -19.5512, -88.039, 22.4301, 0.55 ) }
    dend_16 { pt3dadd( -20.2, -89.0265, 23.8356, 0.28 ) }
    dend_16 { pt3dadd( -21.0284, -90.3456, 25.5592, 0.55 ) }
    dend_16 { pt3dadd( -22.817, -93.121, 28.9923, 0.28 ) }
    dend_16 { pt3dadd( -23.2686, -93.7495, 29.7488, 0.55 ) }
    dend_16 { pt3dadd( -24.3616, -94.9323, 31.2275, 0.28 ) }
    dend_16 { pt3dadd( -25.2665, -95.6398, 32.4299, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 61/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -6.16978, -79.0359, -6.28907, 0.83 ) }
    dend_22 { pt3dadd( -6.8504, -83.0122, -6.69985, 0.83 ) }
    dend_22 { pt3dadd( -7.58574, -87.308, -7.14365, 0.83 ) }
    dend_22 { pt3dadd( -8.25259, -91.2038, -7.54611, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -6.16978, -79.0359, -6.28907, 0.55 ) }
    dend_21 { pt3dadd( -7.74745, -80.0643, -7.36406, 0.55 ) }
    dend_21 { pt3dadd( -9.55013, -81.0631, -8.73607, 0.55 ) }
    dend_21 { pt3dadd( -12.2636, -82.5835, -10.7454, 0.55 ) }
    dend_21 { pt3dadd( -14.5376, -83.8669, -12.3509, 1.38 ) }
    dend_21 { pt3dadd( -15.2933, -84.2772, -12.8575, 1.38 ) }
    dend_21 { pt3dadd( -18.3054, -85.891, -14.9114, 0.55 ) }
    dend_21 { pt3dadd( -19.9948, -86.8212, -16.3307, 0.55 ) }
    dend_21 { pt3dadd( -21.6634, -87.8376, -18.0862, 0.55 ) }
    dend_21 { pt3dadd( -22.2706, -88.2413, -18.7615, 0.55 ) }
    dend_21 { pt3dadd( -22.89, -88.6636, -19.4382, 0.55 ) }
    dend_21 { pt3dadd( -25.3711, -90.5449, -22.0756, 0.55 ) }
    dend_21 { pt3dadd( -27.9625, -92.8895, -24.7983, 0.55 ) }
    dend_21 { pt3dadd( -30.4968, -95.4738, -27.5318, 0.55 ) }
    dend_21 { pt3dadd( -32.5365, -97.5814, -29.6022, 0.55 ) }
    dend_21 { pt3dadd( -34.2023, -99.5225, -31.2212, 0.28 ) }
    dend_21 { pt3dadd( -35.5115, -101.153, -32.5803, 0.55 ) }
    dend_21 { pt3dadd( -37.1826, -103.296, -34.2481, 0.55 ) }
    dend_21 { pt3dadd( -40.009, -106.953, -36.9077, 0.55 ) }
    dend_21 { pt3dadd( -42.3472, -110.114, -39.1499, 0.55 ) }
    dend_21 { pt3dadd( -44.6488, -113.381, -41.6197, 0.55 ) }
    dend_21 { pt3dadd( -48.7038, -119.277, -46.4133, 0.55 ) }
    dend_21 { pt3dadd( -49.6436, -120.558, -47.5976, 0.55 ) }
    dend_21 { pt3dadd( -55.2841, -125.211, -54.4491, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 89/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -8.25259, -91.2038, -7.54611, 0.83 ) }
    dend_24 { pt3dadd( -7.53578, -95.0458, -5.58978, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 91/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -8.25259, -91.2038, -7.54611, 0.55 ) }
    dend_23 { pt3dadd( -10.7748, -93.9514, -8.75649, 0.55 ) }
    dend_23 { pt3dadd( -11.3551, -94.6243, -8.96859, 0.28 ) }
    dend_23 { pt3dadd( -15.1288, -98.8143, -10.5812, 0.28 ) }
    dend_23 { pt3dadd( -16.6017, -100.427, -11.3483, 0.28 ) }
    dend_23 { pt3dadd( -17.2549, -101.169, -11.7201, 0.28 ) }
    dend_23 { pt3dadd( -18.762, -102.966, -12.768, 0.28 ) }
    dend_23 { pt3dadd( -20.2597, -104.936, -13.9201, 0.55 ) }
    dend_23 { pt3dadd( -22.9999, -108.917, -16.333, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_23 { pt3dadd( -24.5811, -111.355, -17.9323, 0.28 ) }
    dend_23 { pt3dadd( -25.2997, -112.484, -18.7531, 0.55 ) }
    dend_23 { pt3dadd( -27.5153, -116.088, -21.591, 0.28 ) }
    dend_23 { pt3dadd( -28.189, -117.187, -22.5674, 0.55 ) }
    dend_23 { pt3dadd( -29.0902, -118.951, -24.2065, 0.55 ) }
    dend_23 { pt3dadd( -34.3298, -126.194, -26.662, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 6/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -7.53578, -95.0458, -5.58978, 0.83 ) }
    dend_26 { pt3dadd( -8.35109, -99.8844, -7.85881, 0.83 ) }
    dend_26 { pt3dadd( -8.67993, -101.868, -8.62416, 0.83 ) }
    dend_26 { pt3dadd( -9.63251, -106.322, -10.0244, 0.55 ) }
    dend_26 { pt3dadd( -10.359, -109.365, -10.7041, 0.55 ) }
    dend_26 { pt3dadd( -10.7541, -111.035, -10.981, 0.55 ) }
    dend_26 { pt3dadd( -11.5104, -114.496, -11.4331, 0.55 ) }
    dend_26 { pt3dadd( -12.0636, -117.42, -11.4394, 0.55 ) }
    dend_26 { pt3dadd( -12.721, -120.772, -11.213, 0.55 ) }
    dend_26 { pt3dadd( -13.2568, -123.603, -10.9188, 0.55 ) }
    dend_26 { pt3dadd( -13.4795, -125.233, -10.7099, 0.55 ) }
    dend_26 { pt3dadd( -13.6124, -126.648, -10.5771, 0.55 ) }
    dend_26 { pt3dadd( -13.6706, -128.304, -10.4905, 0.55 ) }
    dend_26 { pt3dadd( -13.6985, -130.6, -10.4735, 0.55 ) }
    dend_26 { pt3dadd( -13.5985, -133.464, -10.7452, 0.55 ) }
    dend_26 { pt3dadd( -13.6195, -136.022, -11.1706, 0.55 ) }
    dend_26 { pt3dadd( -13.7107, -137.993, -11.4128, 0.55 ) }
    dend_26 { pt3dadd( -13.7476, -139.266, -11.5216, 0.55 ) }
    dend_26 { pt3dadd( -13.8065, -141.284, -11.6139, 0.55 ) }
    dend_26 { pt3dadd( -13.8359, -144.284, -11.6438, 0.55 ) }
    dend_26 { pt3dadd( -13.7863, -147.989, -11.7554, 0.55 ) }
    dend_26 { pt3dadd( -13.7159, -151.326, -11.9567, 0.55 ) }
    dend_26 { pt3dadd( -13.5315, -154.746, -12.236, 0.55 ) }
    dend_26 { pt3dadd( -13.3781, -158.151, -12.6915, 0.55 ) }
    dend_26 { pt3dadd( -13.2637, -160.407, -13.1097, 0.55 ) }
    dend_26 { pt3dadd( -13.0473, -164.279, -13.9388, 0.55 ) }
    dend_26 { pt3dadd( -12.8829, -167.883, -14.9759, 0.55 ) }
    dend_26 { pt3dadd( -12.8033, -171.091, -16.1868, 0.55 ) }
    dend_26 { pt3dadd( -12.7763, -176.322, -18.3385, 0.55 ) }
    dend_26 { pt3dadd( -12.7767, -178.878, -19.3348, 0.55 ) }
    dend_26 { pt3dadd( -12.8327, -181.575, -20.2749, 0.55 ) }
    dend_26 { pt3dadd( -12.9005, -184.347, -21.0841, 0.55 ) }
    dend_26 { pt3dadd( -13.0319, -188.366, -22.2944, 0.55 ) }
    dend_26 { pt3dadd( -13.185, -190.886, -22.8433, 0.55 ) }
    dend_26 { pt3dadd( -13.4226, -195.49, -23.584, 0.55 ) }
    dend_26 { pt3dadd( -13.5098, -197.549, -23.8567, 0.55 ) }
    dend_26 { pt3dadd( -13.5834, -199.957, -24.1257, 0.55 ) }
    dend_26 { pt3dadd( -13.6115, -204.973, -24.7349, 0.55 ) }
    dend_26 { pt3dadd( -13.55, -212.732, -25.9302, 0.55 ) }
    dend_26 { pt3dadd( -13.4525, -216.666, -26.7774, 0.55 ) }
    dend_26 { pt3dadd( -13.3846, -218.813, -27.3604, 0.55 ) }
    dend_26 { pt3dadd( -13.3531, -220.735, -27.9001, 0.55 ) }
    dend_26 { pt3dadd( -13.2274, -225.057, -29.1285, 0.55 ) }
    dend_26 { pt3dadd( -13.0815, -227.382, -29.7528, 0.55 ) }
    dend_26 { pt3dadd( -12.948, -229.304, -30.3414, 0.55 ) }
    dend_26 { pt3dadd( -12.7752, -232.171, -31.1296, 0.55 ) }
    dend_26 { pt3dadd( -12.6282, -235.505, -31.8932, 0.55 ) }
    dend_26 { pt3dadd( -12.5554, -238.061, -32.4693, 0.55 ) }
    dend_26 { pt3dadd( -12.5313, -241.746, -33.2025, 0.55 ) }
    dend_26 { pt3dadd( -12.5234, -242.371, -33.3318, 0.55 ) }
    dend_26 { pt3dadd( -12.3568, -247.887, -34.6089, 0.55 ) }
    dend_26 { pt3dadd( -12.0698, -253.998, -36.1215, 0.55 ) }
    dend_26 { pt3dadd( -11.8355, -258.037, -36.9995, 0.55 ) }
    dend_26 { pt3dadd( -11.7125, -260.287, -37.4802, 0.28 ) }
    dend_26 { pt3dadd( -11.6279, -261.4, -37.709, 0.28 ) }
    dend_26 { pt3dadd( -11.5047, -262.813, -37.9992, 0.55 ) }
    dend_26 { pt3dadd( -11.2676, -265.928, -38.6448, 0.28 ) }
    dend_26 { pt3dadd( -10.9384, -269.927, -39.6314, 0.28 ) }
    dend_26 { pt3dadd( -10.7285, -273.406, -40.4247, 0.28 ) }
    dend_26 { pt3dadd( -10.6824, -274.231, -40.6206, 0.55 ) }
    dend_26 { pt3dadd( -10.6377, -277.585, -41.5383, 0.28 ) }
    dend_26 { pt3dadd( -10.7571, -281.62, -42.6846, 0.28 ) }
    dend_26 { pt3dadd( -10.8938, -284.448, -43.3765, 0.28 ) }
    dend_26 { pt3dadd( -11.1966, -289.761, -44.4592, 0.28 ) }
    dend_26 { pt3dadd( -11.4394, -292.824, -44.7938, 0.55 ) }
    dend_26 { pt3dadd( -11.9865, -298.786, -45.1221, 0.28 ) }
    dend_26 { pt3dadd( -12.4534, -303.195, -45.1084, 0.28 ) }
    dend_26 { pt3dadd( -12.9126, -307.495, -44.9485, 0.55 ) }
    dend_26 { pt3dadd( -13.1867, -309.828, -44.8223, 0.28 ) }
    dend_26 { pt3dadd( -14.1032, -317.433, -44.2732, 0.28 ) }
    dend_26 { pt3dadd( -14.4667, -320.27, -44.1411, 0.55 ) }
    dend_26 { pt3dadd( -14.9998, -325.097, -43.8769, 0.28 ) }
    dend_26 { pt3dadd( -15.1917, -327.108, -43.8409, 0.83 ) }
    dend_26 { pt3dadd( -15.6334, -331.933, -43.9549, 0.28 ) }
    dend_26 { pt3dadd( -15.7215, -333.388, -44.0116, 0.55 ) }
    dend_26 { pt3dadd( -15.7554, -339.796, -44.3824, 0.28 ) }
    dend_26 { pt3dadd( -15.74, -343.465, -44.6203, 0.55 ) }
    dend_26 { pt3dadd( -15.6634, -346.721, -44.8612, 0.28 ) }
    dend_26 { pt3dadd( -15.621, -347.891, -44.9519, 0.55 ) }
    dend_26 { pt3dadd( -15.3054, -352.508, -45.3198, 0.28 ) }
    dend_26 { pt3dadd( -15.186, -353.716, -45.3942, 0.83 ) }
    dend_26 { pt3dadd( -16.4053, -363.817, -46.9484, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 88/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.53578, -95.0458, -5.58978, 0.55 ) }
    dend_25 { pt3dadd( -7.22348, -97.4914, -5.55095, 0.55 ) }
    dend_25 { pt3dadd( -6.87395, -100.049, -5.27987, 0.55 ) }
    dend_25 { pt3dadd( -6.66719, -102.526, -4.94182, 0.55 ) }
    dend_25 { pt3dadd( -6.44845, -105.777, -4.46368, 0.55 ) }
    dend_25 { pt3dadd( -6.16722, -108.742, -3.83529, 0.55 ) }
    dend_25 { pt3dadd( -5.59744, -113.771, -2.59402, 0.55 ) }
    dend_25 { pt3dadd( -5.30139, -115.922, -1.7895, 0.55 ) }
    dend_25 { pt3dadd( -4.8235, -118.278, -0.716484, 0.55 ) }
    dend_25 { pt3dadd( -4.62353, -119.09, -0.276718, 0.55 ) }
    dend_25 { pt3dadd( -3.65662, -122.677, 1.97009, 0.55 ) }
    dend_25 { pt3dadd( -2.97916, -124.828, 3.42347, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_25 { pt3dadd( -1.97082, -128.116, 5.72161, 0.55 ) }
    dend_25 { pt3dadd( -1.3408, -130.185, 7.20552, 0.55 ) }
    dend_25 { pt3dadd( -0.330003, -133.633, 9.78145, 0.55 ) }
    dend_25 { pt3dadd( 0.334737, -136.532, 12.0413, 0.55 ) }
    dend_25 { pt3dadd( 0.619307, -138.207, 13.4479, 0.55 ) }
    dend_25 { pt3dadd( 0.933409, -140.73, 15.7534, 0.55 ) }
    dend_25 { pt3dadd( 1.16891, -143.399, 18.1911, 0.55 ) }
    dend_25 { pt3dadd( 1.33298, -145.85, 20.4408, 0.55 ) }
    dend_25 { pt3dadd( 1.46008, -148.444, 22.759, 0.55 ) }
    dend_25 { pt3dadd( 1.65808, -152.109, 25.8542, 0.55 ) }
    dend_25 { pt3dadd( 1.7565, -153.623, 27.0578, 0.28 ) }
    dend_25 { pt3dadd( 1.92051, -155.357, 28.2054, 0.55 ) }
    dend_25 { pt3dadd( 2.12776, -157.423, 28.9827, 0.28 ) }
    dend_25 { pt3dadd( 2.2575, -158.351, 29.1176, 0.55 ) }
    dend_25 { pt3dadd( 2.40006, -159.165, 29.0438, 0.28 ) }
    dend_25 { pt3dadd( 2.58432, -160.221, 28.738, 0.83 ) }
    dend_25 { pt3dadd( 3.44862, -164.566, 27.2861, 0.28 ) }
    dend_25 { pt3dadd( 3.6048, -165.471, 27.0188, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_42, dend_41, dend_28, dend_27, dend_0, dend_44, dend_43, dend_30, dend_29, dend_6, dend_1, dend_46, dend_45, dend_36, dend_31, dend_8, dend_7, dend_5, dend_2, dend_38, dend_37, dend_33, dend_32, dend_10, dend_9, dend_4, dend_3, dend_40, dend_39, dend_35, dend_34, dend_14, dend_11, dend_18, dend_15, dend_13, dend_12, dend_20, dend_19, dend_17, dend_16, dend_22, dend_21, dend_24, dend_23, dend_26, dend_25]}
    ModelViewParmSubset_2 = new SectionList()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_47, dend_42, dend_41, dend_28, dend_27, dend_0, dend_44, dend_43, dend_30, dend_29, dend_6, dend_1, dend_46, dend_45, dend_36, dend_31, dend_8, dend_7, dend_5, dend_2, dend_38, dend_37, dend_33, dend_32, dend_10, dend_9, dend_4, dend_3, dend_40, dend_39, dend_35, dend_34, dend_14, dend_11, dend_18, dend_15, dend_13, dend_12, dend_20, dend_19, dend_17, dend_16, dend_22, dend_21, dend_24, dend_23, dend_26, dend_25]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_47 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_41 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_27 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_43 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_29 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_46 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_7 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_37 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_9 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_39 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_11 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_19 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_16 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_21 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_23 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_26 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_25 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_28 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_30 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_6 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_36 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_8 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_10 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_42 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_38 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_31 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_44 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_18 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_33 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_32 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_20 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_17 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_22 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_35 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_24 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_4 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_12 OneSecGrp_SectionRef_41.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_47 nseg = 5
    dend_41 nseg = 5
    dend_27 nseg = 5
    dend_43 nseg = 3
    dend_29 nseg = 5
    dend_46 nseg = 3
    dend_45 nseg = 3
    dend_7 nseg = 3
    dend_2 nseg = 3
    dend_37 nseg = 9
    dend_9 nseg = 5
    dend_40 nseg = 7
    dend_39 nseg = 11
    dend_34 nseg = 3
    dend_11 nseg = 3
    dend_19 nseg = 3
    dend_16 nseg = 3
    dend_21 nseg = 5
    dend_23 nseg = 3
    dend_26 nseg = 13
    dend_25 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L23_LBC_3872d55b42_0_0


