// Cell: cNAC187_L4_NBC_36cd91dc08_0_0
/*
{
  "id" : "cNAC187_L4_NBC_36cd91dc08_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-7.43002, -7.14884, -0.034622, 2.50374", "-6.6077, -6.46772, -0.0380434, 4.42492", "-5.78537, -5.7866, -0.0414649, 9.53787", "-4.96305, -5.10547, -0.0448864, 10.4902", "-4.14072, -4.42435, -0.0483079, 10.6433", "-3.31839, -3.74322, -0.0517294, 10.5673", "-2.49607, -3.0621, -0.0551509, 10.1499", "-1.67374, -2.38098, -0.0585724, 9.69481", "-0.851413, -1.69985, -0.0619939, 9.23972", "-0.0290863, -1.01873, -0.0654154, 9.00279", "0.79324, -0.337605, -0.0688369, 8.97028", "1.61557, 0.343519, -0.0722584, 8.95274", "2.43789, 1.02464, -0.0756799, 8.9352", "3.26022, 1.70577, -0.0791013, 8.91317", "4.08255, 2.38689, -0.0825228, 8.85399", "4.90487, 3.06802, -0.0859443, 8.77123", "5.7272, 3.74914, -0.0893658, 8.34273", "6.54953, 4.43026, -0.0927873, 7.49401", "7.37185, 5.11139, -0.0962088, 6.34034", "8.19418, 5.79251, -0.0996303, 4.815", "9.0165, 6.47364, -0.103052, 2.95062" ]
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "8.9604, 7.33538, -11.8639, 1.33", "11.2135, 12.048, -11.4798, 1.33", "13.1755, 16.1518, -11.1452, 1.33", "15.6518, 21.3313, -10.723, 0.67", "16.144, 22.3608, -10.6391, 0.67", "17.4132, 25.0155, -10.4227, 0.67", "18.0608, 26.3702, -10.3122, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "6.02039, 7.39538, -0.533942, 0.67", "4.08506, 10.0154, 1.52132, 0.67", "2.7325, 12.2022, 2.90837, 0.67", "-1.58311, 21.1355, 7.49267, 0.67", "-3.70378, 26.8024, 9.8555, 0.67", "-5.70009, 33.622, 12.2556, 0.67", "-6.45802, 37.0061, 13.2631, 0.67", "-6.98454, 40.0465, 13.9758, 0.67", "-7.41144, 44.6912, 14.6365, 0.67", "-7.43255, 48.4958, 14.709, 0.67", "-7.15446, 54.2059, 14.791, 0.67", "-6.92232, 58.6726, 15.1055, 0.67", "-6.90998, 59.9604, 15.2392, 0.67", "-6.97789, 63.3511, 15.6875, 0.33", "-7.11712, 65.8525, 16.0712, 0.67", "-7.36111, 69.3794, 16.6358, 0.33", "-7.53223, 71.8511, 16.9869, 0.67", "-7.71197, 74.06, 17.2977, 0.33", "-7.76273, 75.3614, 17.4348, 0.67", "-7.72173, 77.2594, 17.579, 0.33", "-7.60369, 79.1011, 17.4941, 0.67", "-7.37897, 80.7711, 17.1987, 0.33", "-7.13166, 82.0122, 16.9075, 0.67", "-6.61882, 84.2277, 16.3411, 0.67", "-6.06331, 86.3804, 15.765, 0.67", "-5.11925, 89.4257, 14.9013, 0.33", "-4.32561, 91.6099, 14.2589, 0.67", "-3.86942, 92.7455, 13.9105, 0.33", "-3.60835, 93.3744, 13.7094, 0.67", "-3.16156, 94.5392, 13.3218, 0.33", "-2.72245, 95.9317, 12.8479, 0.67", "-3.87452, 105.006, 15.4643, 0.67", "-6.11034, 113.797, 18.3357, 0.67", "-8.07572, 122.223, 22.2941, 0.67", "-9.23573, 130.772, 26.3065, 0.67", "-12.1155, 138.922, 30.2825, 0.67", "-13.2936, 147.462, 34.3083, 0.67", "-13.1631, 156.206, 38.0587, 0.67", "-12.2633, 165.234, 40.9238, 0.67", "-13.1792, 173.957, 44.6107, 0.67", "-14.8345, 182.988, 47.1055, 0.67", "-14.6942, 192.315, 48.9802, 0.67", "-13.3006, 201.693, 49.7788, 0.67", "-11.2384, 210.979, 49.5528, 0.67", "-9.56363, 220.313, 48.7788, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "3.52039, 6.68538, -19.4339, 1.33", "2.93151, 9.98314, -19.0783, 1.33", "2.9065, 14.9166, -17.9602, 1.33", "2.91776, 19.0555, -17.3326, 2.0", "2.91776, 19.0555, -17.3326, 2.0", "2.91644, 22.3036, -17.1664, 1.33", "2.91342, 29.7383, -16.7859, 1.33", "3.12318, 38.1619, -16.4349, 1.33", "3.33807, 43.796, -16.3, 0.67", "3.72204, 50.5958, -15.8429, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-7.8796, -1.14462, -4.34395, 1.33", "-17.2646, 4.77381, -5.92685, 1.33", "-18.4715, 5.44283, -6.12906, 1.33", "-23.8316, 8.2369, -6.98223, 0.67", "-27.537, 10.1766, -7.77984, 0.67", "-34.4886, 13.5265, -9.6093, 0.67", "-37.1214, 14.7033, -10.434, 0.67", "-43.8146, 17.6999, -13.1974, 0.67", "-49.4709, 20.074, -15.6629, 0.67", "-55.5031, 22.3918, -18.3393, 0.67", "-59.6796, 23.9648, -20.3014, 0.67", "-63.2517, 25.0818, -22.1548, 0.67", "-69.7274, 27.0578, -25.9599, 0.67", "-74.9349, 28.7864, -29.3589, 0.67", "-77.1982, 29.4391, -30.8725, 0.67", "-80.1459, 30.0834, -32.6012, 0.67", "-85.7801, 31.2715, -35.6409, 0.67", "-90.5877, 32.1581, -38.0797, 0.33", "-92.8476, 32.4608, -39.1758, 0.67", "-96.1471, 32.8837, -40.8054, 0.67", "-103.977, 34.2987, -44.7861, 0.67", "-106.78, 34.9793, -46.148, 0.33", "-109.558, 35.8832, -47.4951, 0.67", "-112.578, 36.9901, -48.993, 0.67", "-116.791, 38.7854, -51.3523, 0.33", "-121.365, 41.4542, -54.6213, 0.67", "-123.483, 43.0002, -56.5322, 0.67", "-126.329, 45.1111, -59.4481, 0.33", "-127.447, 45.9411, -60.646, 0.33", "-128.151, 46.5492, -61.4593, 1.33", "-130.915, 49.4123, -64.8784, 0.33", "-132.42, 51.1422, -66.9905, 0.33", "-134.175, 53.4269, -69.5483, 0.67", "-135.392, 55.0603, -71.3077, 0.33", "-136.268, 56.2476, -72.6115, 0.33", "-137.768, 58.2747, -74.7845, 0.67", "-138.743, 59.5548, -76.0544, 0.33", "-140.015, 61.4321, -77.7265, 0.67", "-142.373, 64.9371, -81.2911, 0.33", "-143.272, 66.1886, -82.8852, 0.33", "-143.84, 66.8698, -83.8782, 0.33", "-144.425, 67.5502, -84.9677, 0.33", "-146.123, 69.5531, -88.5943, 0.67", "-149.077, 72.933, -94.9767, 0.67", "-151.095, 75.0185, -98.8254, 0.33", "-152.467, 76.2314, -101.126, 0.67", "-154.877, 78.1318, -104.773, 0.33", "-156.753, 79.3192, -107.194, 0.67", "-159.356, 80.4981, -109.692, 0.33", "-162.654, 81.3494, -111.38, 0.67", "-165.251, 81.6732, -112.384, 0.33", "-166.784, 81.7455, -112.905, 0.67", "-169.522, 81.854, -113.863, 0.33", "-172.068, 82.0285, -114.803, 0.67", "-177.223, 82.4403, -117.187, 0.67", "-182.27, 83.0928, -119.826, 0.33", "-184.79, 83.7838, -121.119, 0.67", "-190.123, 85.8466, -123.787, 0.33", "-193.698, 87.7347, -125.677, 0.67", "-197.746, 90.4306, -127.752, 0.33", "-199.605, 91.8751, -128.645, 0.67", "-207.868, 98.8092, -132.234, 0.33", "-209.445, 100.227, -132.904, 0.67", "-214.04, 104.824, -134.899, 0.33", "-220.104, 111.546, -137.358, 0.33", "-221.577, 113.338, -137.94, 0.67", "-223.399, 115.673, -138.737, 0.33", "-224.315, 116.934, -139.186, 0.67", "-227.771, 121.688, -140.785, 0.33", "-231.204, 126.52, -142.079, 0.67", "-234.433, 132.263, -143.782, 0.33", "-234.831, 133.033, -144.003, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-7.42961, -3.20462, -0.553942, 0.67", "-8.44161, -4.04852, 1.37705, 0.67", "-10.0567, -5.31017, 4.20177, 1.33", "-15.106, -8.88524, 12.3735, 0.33", "-16.9609, -10.1467, 15.1789, 0.67", "-19.6283, -11.8053, 19.0513, 0.67", "-20.566, -12.3322, 20.3178, 0.33", "-21.0478, -12.5557, 20.919, 0.67", "-25.3654, -14.2098, 25.6327, 0.33", "-27.8882, -14.9951, 27.9399, 0.67", "-30.9131, -15.7797, 30.6751, 0.67", "-34.136, -16.4037, 33.3428, 0.67", "-37.0318, -16.8497, 35.6101, 0.67", "-39.8707, -17.2196, 37.7271, 0.33", "-41.0868, -17.3011, 38.4985, 0.67", "-42.8325, -17.3216, 39.4953, 0.33", "-44.4783, -17.3171, 40.2606, 0.67", "-45.9743, -17.1989, 40.8496, 0.33", "-52.6521, -20.7748, 50.2691, 0.33", "-59.2965, -24.065, 59.8154, 0.33", "-66.1784, -27.7004, 69.0635, 0.33", "-74.0919, -32.8031, 76.6427, 0.33", "-82.3957, -37.6063, 83.9968, 0.33", "-91.542, -43.1725, 89.6064, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-4.0096, -8.12462, -10.3139, 1.33", "-5.58378, -9.74632, -11.4138, 1.33", "-8.2563, -12.4996, -13.2811, 1.33", "-10.6146, -14.9291, -14.9288, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.3696, -8.75462, -7.51395, 1.33", "-4.95708, -10.5958, -6.8466, 1.33", "-5.91024, -13.583, -5.76386, 1.33", "-6.71819, -16.1152, -4.84606, 1.33", "-8.39068, -21.3568, -2.94619, 1.33", "-9.40603, -24.539, -1.79279, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-0.609607, -6.78462, -14.2639, 1.33", "-0.0623389, -11.9189, -14.8823, 0.67", "0.766521, -19.0492, -16.452, 0.67", "1.15044, -22.1554, -17.2645, 1.33", "1.83313, -26.8358, -18.5373, 0.67", "3.38234, -35.7532, -21.1816, 0.67", "4.22407, -40.3768, -22.5775, 0.67", "4.69091, -44.7292, -24.1535, 0.67", "4.85248, -47.3958, -25.2877, 0.67", "4.96687, -51.588, -27.3351, 0.67", "4.9027, -54.8489, -29.1068, 0.67", "4.44537, -57.957, -30.8698, 0.67", "2.91735, -62.2337, -33.2983, 0.67", "2.47812, -63.1316, -33.8422, 0.67", "0.0661721, -67.2137, -36.584, 0.67", "-1.41986, -69.3939, -38.1791, 0.67", "-1.97751, -70.2531, -38.8213, 0.67", "-3.38805, -72.7094, -40.6925, 0.67", "-5.36016, -77.0121, -43.7506, 0.67", "-5.87074, -78.3918, -44.7768, 0.33", "-6.24232, -79.9248, -45.9752, 1.33", "-6.82182, -83.2377, -48.77, 0.67", "-7.00735, -84.7917, -50.3948, 0.33", "-7.1077, -85.8028, -51.5873, 0.67", "-7.35499, -88.1264, -54.6892, 0.67", "-7.44982, -89.4822, -56.6384, 0.67", "-7.51494, -91.2731, -59.3982, 1.33", "-7.49021, -96.2202, -67.9674, 0.33", "-7.46128, -96.637, -68.7538, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "3.0304, -4.04462, 5.81606, 1.33", "2.78579, -8.04782, 9.16856, 1.33", "2.6342, -11.351, 11.8625, 1.33", "2.29202, -16.7099, 16.1398, 1.33", "1.94241, -22.2548, 20.531, 1.33", "1.83207, -24.1023, 22.0011, 1.33", "1.66363, -27.3613, 24.5268, 1.33", "1.61264, -28.3951, 25.428, 1.33", "1.43759, -30.3221, 27.1819, 1.33", "1.28949, -32.298, 28.6778, 1.33", "1.45538, -34.7199, 30.0921, 1.33", "1.4855, -36.6678, 31.2049, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "9.43039, 3.50538, 4.45605, 1.33", "12.8533, 2.5285, 5.08352, 1.33", "19.1517, 0.730981, 6.23808, 1.33", "24.5342, -0.805133, 7.22475, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "9.0165, 6.47364, -0.103052, 0.67", "20.5684, 16.042, -0.103052, 0.67", "32.1203, 25.6103, -0.103052, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "18.0608, 26.3702, -10.3122, 0.33", "23.3435, 31.5493, -11.1235, 0.33", "26.4726, 34.9315, -11.6636, 0.67", "29.6863, 38.5647, -12.2421, 0.33", "31.9696, 41.1715, -12.6755, 0.67", "36.4402, 46.3538, -13.5397, 0.67", "38.4971, 48.7428, -13.9215, 0.33", "40.4752, 51.3521, -14.2189, 0.33", "40.7938, 51.7778, -14.2795, 1.33", "44.4465, 56.7548, -14.8991, 0.33", "45.5081, 58.13, -15.0513, 0.67", "47.0322, 60.0501, -15.2188, 0.33", "48.0012, 61.3084, -15.284, 0.67", "51.0881, 65.295, -15.4467, 0.33", "52.7523, 67.5835, -15.5056, 0.67", "54.9812, 70.9683, -15.6554, 0.33", "55.6192, 72.0082, -15.7438, 0.33", "55.9752, 72.6743, -15.8289, 0.67", "56.761, 74.4168, -16.1092, 0.33", "57.2815, 75.8994, -16.385, 0.67", "58.5318, 79.9211, -17.1301, 0.33", "59.0653, 81.7412, -17.4635, 0.67", "59.7009, 83.925, -17.906, 0.33", "60.4145, 86.4718, -18.4508, 0.67", "61.4035, 89.9128, -19.1738, 0.33", "64.289, 99.3161, -21.0448, 0.67", "65.2981, 102.412, -21.6022, 0.33", "66.5542, 105.93, -22.2095, 0.67", "67.1711, 107.513, -22.4675, 0.33", "69.2761, 112.59, -23.2351, 0.67", "70.1372, 114.658, -23.5179, 0.33", "70.623, 115.949, -23.7163, 0.67", "71.8604, 119.359, -24.1483, 0.33", "72.2194, 120.388, -24.2743, 0.67", "73.0742, 122.946, -24.6349, 0.33", "73.8406, 126.275, -25.3064, 0.67", "74.6495, 131.234, -26.5199, 0.33" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "18.0608, 26.3702, -10.3122, 0.67", "18.8408, 29.3559, -7.82682, 0.67", "19.1061, 31.1524, -6.48159, 1.33", "19.2125, 32.3573, -5.52692, 0.67", "19.3923, 33.7765, -4.28812, 0.67", "19.5801, 35.0444, -3.09082, 0.67", "19.8586, 36.8623, -1.29155, 0.67", "20.0292, 37.9198, -0.237519, 1.33", "20.2096, 39.6599, 1.74917, 0.67", "20.2486, 40.9772, 3.44614, 0.67", "20.2405, 41.6112, 4.33507, 0.67", "20.208, 42.8123, 6.14097, 0.33", "20.1889, 43.1611, 6.6511, 1.33", "19.9124, 45.0312, 9.07862, 0.33", "19.7259, 45.7611, 9.8571, 1.33", "19.0473, 47.7137, 11.6427, 0.67", "18.8414, 48.3084, 12.112, 0.33", "18.6245, 48.957, 12.5688, 0.67", "18.1234, 50.6727, 13.6859, 0.33", "18.0023, 51.1975, 13.9811, 1.33", "17.7008, 52.8042, 14.8544, 0.67", "17.4737, 54.6733, 15.747, 0.67", "17.4408, 55.7199, 16.2227, 1.33", "17.5162, 57.7417, 17.072, 0.67", "17.5618, 58.1442, 17.2287, 1.33", "17.7885, 59.1425, 17.609, 0.33", "18.3522, 60.6688, 18.2498, 0.67", "18.9583, 61.9824, 18.8307, 0.33", "19.2321, 62.5372, 19.0874, 1.33", "20.0551, 64.075, 19.8185, 0.33", "20.608, 65.0434, 20.4335, 2.0", "22.1134, 67.0587, 21.8922, 0.67", "22.5237, 67.5903, 22.3084, 0.33", "23.2648, 68.5102, 23.0665, 2.0", "24.3369, 69.7811, 24.1605, 0.67", "26.4983, 72.2353, 26.3737, 1.33", "29.1091, 75.1562, 29.1061, 0.67", "30.6463, 80.2319, 32.939, 0.67", "32.7899, 85.5614, 36.0722, 0.67" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "3.72204, 50.5958, -15.8429, 0.33", "2.52805, 54.3434, -13.7065, 0.33", "2.31723, 55.0402, -13.4269, 0.67", "0.841385, 60.9656, -11.8105, 0.67", "-0.691627, 67.3651, -10.5015, 0.33", "-1.8043, 72.1982, -9.42021, 0.33", "-2.34908, 74.8356, -8.82122, 0.67", "-3.28019, 79.5467, -7.629, 0.67", "-4.24363, 85.1948, -6.46151, 0.67", "-4.74387, 88.4694, -6.0137, 0.67", "-5.37685, 93.8451, -5.43114, 0.33", "-5.6712, 97.0301, -4.99524, 0.67", "-6.02444, 100.578, -4.41917, 0.33", "-6.31345, 104.184, -3.78324, 0.67", "-6.55084, 107.453, -3.32624, 0.33", "-6.72229, 111.635, -2.93686, 0.67", "-6.76031, 113.726, -2.86788, 0.33", "-6.77571, 115.678, -2.81076, 0.33", "-6.55059, 121.144, -2.79118, 0.67", "-6.23239, 125.523, -2.75003, 0.33", "-6.11828, 126.615, -2.75574, 0.67", "-5.95102, 128.719, -2.80292, 0.33", "-5.84155, 130.122, -2.84588, 0.67", "-5.56511, 133.431, -2.94955, 0.33", "-5.53649, 133.829, -2.96339, 0.67", "-5.3117, 137.792, -3.09804, 0.33", "-5.28858, 139.448, -3.13419, 0.33", "-5.4533, 145.302, -3.17125, 0.33", "-5.5366, 146.499, -3.1158, 0.67", "-5.77725, 148.447, -2.89231, 0.33", "-5.9057, 149.302, -2.76725, 0.67", "-6.18543, 150.874, -2.35707, 0.33", "-6.44882, 152.137, -1.77751, 0.67", "-7.31904, 154.975, 0.0938456, 0.33", "-7.69617, 156.025, 0.882947, 0.67", "-8.2873, 157.571, 2.14104, 0.33", "-9.27613, 160.212, 4.28031, 0.67", "-10.519, 163.624, 6.95127, 0.33", "-10.868, 164.581, 7.65013, 0.33", "-10.977, 164.902, 7.83757, 0.67", "-11.5885, 167.142, 8.7226, 0.33", "-12.1119, 169.505, 9.4286, 0.67", "-12.4746, 171.374, 9.99361, 0.33", "-12.5949, 172.124, 10.1593, 0.67", "-12.9623, 174.988, 10.7764, 0.33", "-13.1852, 176.898, 11.217, 0.67", "-13.5678, 180.837, 11.9594, 0.33", "-13.9319, 184.765, 12.718, 0.33", "-14.3528, 188.936, 13.4728, 0.67", "-14.5726, 190.847, 13.7399, 0.33", "-14.5726, 190.847, 13.7399, 0.67", "-15.0279, 194.629, 13.0725, 0.33", "-15.0363, 196.255, 12.0903, 0.67" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "3.72204, 50.5958, -15.8429, 0.67", "4.26805, 57.4417, -19.1328, 0.67", "5.11378, 61.4765, -21.0873, 0.67", "5.50085, 62.6926, -21.7837, 0.33", "6.60758, 66.0164, -23.7581, 0.67", "8.87036, 72.2859, -27.6115, 0.67", "9.45548, 73.7251, -28.4936, 0.33", "11.4879, 78.3137, -31.3568, 0.67", "13.0739, 82.199, -34.1489, 0.67", "14.1213, 84.9534, -36.2095, 0.67", "15.0347, 87.582, -38.3306, 0.67", "16.0902, 91.1186, -41.3071, 0.67", "17.0235, 96.7744, -46.2462, 0.67", "17.1417, 100.172, -49.1334, 0.33", "17.0975, 101.458, -50.1742, 0.67", "16.7214, 104.965, -53.0995, 0.33", "16.2059, 107.506, -55.1395, 0.67", "15.4917, 109.955, -57.1038, 0.33", "14.7301, 112.217, -58.7696, 0.33", "14.1343, 113.967, -59.9016, 0.67", "13.0871, 117.166, -61.8718, 0.33", "12.2926, 119.666, -63.3035, 0.67", "11.5551, 122.339, -64.7519, 0.33", "11.0331, 124.215, -65.6656, 0.33", "10.1989, 127.289, -67.3546, 0.33", "9.76049, 129.138, -68.3818, 0.67", "9.17241, 132.351, -70.2219, 0.33", "8.62143, 135.784, -72.2648, 0.33", "8.40665, 137.859, -73.5006, 0.67", "8.0932, 143.019, -76.6667, 0.33", "8.03391, 144.728, -77.7717, 0.67", "8.03974, 148.181, -79.9232, 0.33", "8.0623, 148.656, -80.2289, 0.67", "8.1999, 152.034, -82.312, 0.33", "8.23142, 153.475, -83.118, 0.67", "8.21745, 156.582, -84.5116, 0.33", "8.2, 157.765, -84.9926, 0.67", "8.13209, 161.779, -86.4046, 0.33", "8.14411, 165.383, -87.6668, 0.67", "8.18447, 170.601, -89.4104, 0.33", "8.22827, 172.875, -90.2489, 0.67", "8.29969, 176.36, -91.4904, 0.33", "8.32473, 177.208, -91.8036, 0.67", "8.55164, 181.973, -93.5628, 0.33", "8.8811, 186.13, -95.4135, 0.33", "9.16599, 188.93, -96.5773, 0.67" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-91.542, -43.1725, 89.6064, 0.33", "-98.3092, -45.7552, 96.4573, 0.33", "-103.935, -49.472, 103.802, 0.33", "-108.575, -51.3342, 112.427, 0.33", "-114.164, -51.9906, 120.658, 0.33", "-118.1, -50.9907, 129.763, 0.33", "-121.977, -51.3943, 138.939, 0.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-91.542, -43.1725, 89.6064, 0.33", "-97.737, -46.5385, 96.5938, 0.33", "-103.855, -49.4252, 103.858, 0.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-10.6146, -14.9291, -14.9288, 0.67", "-13.5846, -18.2675, -16.9083, 0.67", "-14.2765, -19.0451, -17.3694, 0.67", "-16.7194, -21.7909, -18.9975, 0.67", "-19.1844, -24.5615, -20.6404, 0.67", "-20.2107, -25.715, -21.3243, 1.33" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-10.6146, -14.9291, -14.9288, 1.33", "-11.4038, -12.4943, -19.9484, 1.33", "-12.4129, -11.2004, -24.0069, 0.67", "-14.114, -8.95802, -30.7641, 0.67", "-16.4088, -5.89479, -39.2599, 0.67", "-16.9705, -5.20587, -41.1244, 0.67", "-20.0535, -1.81827, -50.9695, 0.67", "-21.9871, 0.0266705, -57.2935, 0.67", "-24.7291, 2.3154, -66.5293, 0.67", "-25.9628, 3.11843, -70.7635, 0.67", "-26.8366, 3.60278, -73.162, 0.67", "-28.1357, 4.49187, -76.8569, 0.67", "-28.7639, 5.15639, -79.1944, 0.67", "-30.4115, 6.88954, -86.2323, 0.67", "-31.5031, 8.05313, -91.3322, 0.67", "-31.9972, 8.84724, -94.3533, 0.67", "-32.7953, 10.7884, -100.726, 0.67", "-33.86, 13.5894, -109.063, 0.67", "-34.7627, 15.9948, -116.005, 0.67", "-34.9458, 16.6863, -117.943, 0.67", "-35.2683, 18.929, -123.616, 0.67", "-35.4075, 21.4977, -130.512, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-9.40603, -24.539, -1.79279, 0.67", "-14.304, -29.5891, -3.28737, 0.67", "-15.9847, -31.2991, -3.7613, 0.67", "-19.7865, -35.3065, -5.00624, 0.67", "-21.9068, -37.5816, -5.7925, 0.67", "-25.642, -41.2367, -7.28458, 0.67", "-27.4332, -42.8614, -8.03584, 0.67", "-30.6953, -45.2814, -9.45458, 0.67", "-32.6293, -46.5955, -10.7567, 0.67", "-33.5779, -47.1048, -11.9312, 0.67", "-35.9455, -48.1858, -16.0306, 0.67", "-36.7522, -48.5814, -17.7431, 0.67", "-38.7857, -50.0632, -22.4206, 0.67", "-40.157, -51.2174, -25.5667, 0.67", "-42.317, -53.42, -30.1422, 0.67", "-43.2531, -54.6252, -32.1539, 0.67", "-44.5828, -56.924, -35.1785, 0.67", "-46.1862, -60.0024, -38.3658, 0.67", "-47.3058, -61.8835, -39.8548, 0.67", "-48.6928, -64.0664, -41.3535, 0.67", "-49.9763, -66.0877, -42.6419, 0.67", "-51.0102, -67.7845, -43.7885, 0.67", "-52.8019, -70.7293, -45.8064, 0.67", "-56.1669, -75.7904, -49.4496, 0.67", "-57.193, -77.3027, -50.5866, 0.67", "-58.3561, -78.8826, -51.9944, 0.67", "-59.8506, -80.7069, -53.9373, 0.67", "-61.6709, -82.7886, -56.6815, 0.67", "-62.8335, -84.1479, -58.9038, 0.67", "-63.8799, -85.6375, -61.5109, 0.67", "-65.0676, -87.1869, -64.3175, 0.67", "-66.9417, -89.3699, -68.6529, 0.67", "-67.68, -90.1166, -70.3257, 1.33", "-68.9663, -91.452, -73.2121, 0.67", "-70.1138, -92.7161, -75.4386, 0.67", "-70.7752, -93.3896, -76.436, 0.67", "-72.1592, -94.5816, -78.0001, 0.33", "-72.7361, -94.9516, -78.5206, 0.67", "-75.2571, -96.4202, -80.3271, 0.67", "-76.4887, -97.1245, -81.0493, 0.33", "-77.9953, -97.9591, -81.8545, 0.67", "-80.0579, -99.2954, -82.9698, 0.33", "-80.7957, -99.8526, -83.3467, 0.67", "-81.8335, -100.648, -83.8869, 0.33", "-82.2658, -100.938, -84.0779, 1.33" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-9.40603, -24.539, -1.79279, 0.67", "-8.51819, -25.5712, 0.0574369, 0.67", "-7.72844, -26.4435, 1.63953, 0.67", "-5.21562, -29.1466, 5.91185, 0.67", "-3.59733, -30.8229, 8.31833, 0.67", "-2.13465, -32.4441, 10.3958, 0.67", "-0.508567, -34.2097, 12.6555, 0.67", "0.187297, -34.9543, 13.5839, 0.67", "2.63126, -37.7057, 16.5839, 0.67", "4.3593, -39.6223, 18.2905, 0.67", "5.5497, -41.1206, 19.3859, 0.67", "8.13227, -44.9542, 21.7874, 0.67", "10.3232, -48.3382, 23.7285, 0.67", "11.7087, -50.3874, 25.0154, 0.67", "12.928, -52.3205, 26.2446, 0.67", "14.2583, -54.6347, 27.7585, 0.67", "15.3348, -56.4963, 28.9764, 0.67", "17.0973, -59.9047, 31.0356, 0.67", "18.5516, -62.7276, 33.0023, 0.67", "19.5377, -64.5185, 34.4892, 0.67", "21.0509, -67.3266, 37.131, 0.33", "24.8691, -72.4807, 42.2602, 0.33", "28.6684, -77.1969, 47.8076, 0.33", "33.4335, -80.8238, 53.4281, 0.33", "38.3784, -83.0097, 59.6105, 0.33" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-7.46128, -96.637, -68.7538, 0.67", "-7.1124, -99.4786, -66.2315, 0.67", "-6.90016, -102.966, -63.0497, 0.67", "-6.85809, -104.927, -61.3465, 0.67", "-6.74417, -113.42, -54.4189, 0.33", "-6.75749, -115.605, -52.7911, 0.67", "-6.84613, -119.03, -50.4923, 0.33", "-6.91416, -120.794, -49.2833, 0.33", "-7.01039, -122.702, -48.0555, 0.33", "-7.02312, -124.381, -47.2705, 0.67", "-7.03825, -127.275, -46.7007, 0.67", "-6.90468, -130.125, -46.1799, 0.33", "-6.63753, -132.794, -45.8629, 0.33", "-6.56368, -133.233, -45.8011, 0.67", "-6.27741, -134.65, -45.534, 0.33", "-5.7458, -136.938, -44.9857, 0.67", "-4.95263, -138.982, -44.2927, 0.33" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-7.46128, -96.637, -68.7538, 0.67", "-7.19853, -99.9206, -68.426, 0.67", "-6.71948, -104.872, -67.9028, 0.67", "-6.53344, -107.161, -67.6727, 0.33", "-6.50639, -107.478, -67.6481, 0.67", "-6.25981, -110.81, -67.4472, 0.33", "-6.22323, -111.526, -67.4432, 0.67", "-6.17118, -113.83, -67.5948, 0.33", "-6.26678, -114.959, -67.7687, 0.67", "-6.59688, -117.399, -68.2073, 0.33", "-6.70342, -118.378, -68.4572, 0.67", "-7.07185, -121.313, -69.3233, 0.33", "-7.41569, -123.724, -70.0872, 0.67", "-7.87906, -126.727, -71.1193, 0.33", "-8.18135, -128.897, -71.8615, 0.33", "-8.75625, -132.581, -73.1099, 0.67" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "1.4855, -36.6678, 31.2049, 0.67", "1.79732, -38.6669, 32.0082, 0.67", "2.45556, -42.3734, 33.1684, 0.67", "2.68088, -43.1651, 33.3888, 0.67", "3.23265, -45.003, 33.6901, 0.67", "4.20774, -48.4776, 33.9205, 0.67", "4.94441, -50.8052, 33.9839, 0.67", "5.60558, -52.6267, 33.8937, 0.67", "7.04803, -56.1922, 33.5074, 1.33", "8.5204, -59.4127, 33.2306, 1.33", "10.5775, -63.5632, 33.0605, 1.33", "11.9339, -66.2497, 33.0503, 1.33", "13.2152, -68.7035, 33.1885, 1.33", "14.8635, -71.7729, 33.5818, 0.67", "15.9775, -73.7625, 34.1821, 0.67", "17.2757, -75.648, 35.158, 0.67", "17.8557, -76.3944, 35.6699, 1.33", "18.8705, -77.6317, 36.6054, 0.67", "19.8503, -78.673, 37.4482, 0.67", "22.3263, -81.0551, 39.1613, 0.67", "24.1454, -82.6408, 39.9829, 0.67", "25.7715, -83.991, 40.5034, 0.67", "27.5907, -85.6239, 40.9736, 0.67", "28.3992, -86.4197, 41.1271, 1.33", "29.7749, -87.9284, 41.3092, 0.67", "31.922, -90.3586, 41.4438, 0.67", "33.0947, -91.7389, 41.5648, 1.33", "34.93, -93.8544, 41.7544, 1.33", "35.8814, -95.0423, 41.8522, 0.33", "36.4082, -95.7121, 41.9063, 1.33", "37.5093, -97.1373, 42.0192, 0.67", "37.8748, -97.63, 42.0565, 0.67", "38.7302, -98.6563, 42.1447, 0.33", "40.1355, -100.152, 42.2906, 0.67", "41.2304, -101.272, 42.3606, 0.33", "41.647, -101.698, 42.3847, 1.33", "42.7187, -102.846, 42.4354, 0.33", "43.4822, -103.663, 42.4648, 0.67", "44.4568, -104.581, 42.4879, 0.33", "45.3516, -105.234, 42.4902, 1.33", "48.9965, -112.454, 42.2984, 1.33", "52.6165, -119.59, 41.0994, 1.33", "57.6793, -125.709, 39.5565, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "1.4855, -36.6678, 31.2049, 0.67", "6.27445, -42.8565, 35.8371, 0.67", "9.64058, -47.488, 38.9571, 0.67", "10.9329, -49.2214, 40.2782, 0.67", "11.9993, -50.6782, 41.3711, 0.67", "13.569, -52.7874, 43.0242, 0.67", "14.4832, -54.0158, 43.9869, 0.33", "15.9907, -56.1943, 45.523, 0.67", "18.8137, -59.7747, 48.5214, 0.33", "20.5441, -62.168, 50.6482, 0.67", "22.5327, -64.9309, 53.2468, 0.33", "27.4306, -72.5859, 59.2066, 0.33", "32.8376, -80.7148, 63.9807, 0.33", "37.7531, -88.0996, 70.2584, 0.33", "44.062, -94.2307, 76.6392, 0.33", "49.6107, -101.415, 82.6151, 0.33", "53.8759, -108.37, 89.7948, 0.33", "58.4952, -116.845, 94.7877, 0.33", "62.8181, -125.545, 99.6605, 0.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "24.5342, -0.805133, 7.22475, 0.67", "25.6024, -0.478093, 9.23914, 0.67", "26.3964, -0.248738, 10.8669, 0.67", "29.6217, 0.816014, 17.8132, 0.67", "31.0397, 1.28251, 20.8908, 0.67", "32.3266, 1.70584, 23.6836, 0.67", "37.4909, 3.40477, 34.8917, 0.67", "39.0892, 3.93084, 38.6092, 0.67", "40.4515, 4.47227, 42.0109, 0.67", "41.0287, 4.7226, 43.5712, 0.67", "45.3333, 4.38464, 50.9489, 0.67", "49.1451, 4.73607, 58.5923, 0.67", "51.9982, 3.71354, 66.5852, 0.67", "54.8072, 2.90264, 74.6181, 0.67", "58.2687, 2.82326, 82.4338, 0.67", "62.0108, 4.26869, 89.9824, 0.67", "67.5115, 5.59378, 96.3902, 0.67", "73.4849, 8.13503, 101.953, 0.67", "79.7504, 10.7563, 107.143, 0.67", "86.0307, 14.3833, 111.669, 0.67", "91.7378, 18.4682, 116.549, 0.67", "97.2962, 21.7442, 122.157, 0.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "24.5342, -0.805133, 7.22475, 0.67", "24.886, -1.04093, 7.24473, 0.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "32.1203, 25.6103, -0.103052, 0.688916", "43.6723, 35.1786, -0.103052, 0.688916", "55.2242, 44.747, -0.103052, 0.688916" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "9.16599, 188.93, -96.5773, 0.67", "6.49585, 190.704, -96.7517, 0.67", "4.3048, 192.14, -96.9164, 0.33", "2.71608, 193.186, -97.0557, 0.67", "-1.88223, 196.258, -97.4958, 0.33", "-3.66794, 197.37, -97.693, 0.67", "-7.42348, 199.564, -98.2956, 0.33", "-8.11832, 199.961, -98.4239, 0.67", "-10.8047, 201.461, -98.9751, 0.33", "-12.1221, 202.184, -99.3007, 0.67", "-16.91, 204.544, -100.625, 0.33", "-19.6376, 205.735, -101.456, 0.67" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "9.16599, 188.93, -96.5773, 0.33", "6.52359, 195.915, -100.07, 0.33", "5.63434, 198.265, -101.246, 0.33", "5.01821, 199.894, -102.06, 0.67", "3.40927, 204.147, -104.187, 0.33", "3.21025, 204.673, -104.45, 0.67" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-20.2107, -25.715, -21.3243, 0.33", "-21.4186, -28.6127, -21.7676, 0.33", "-23.1096, -32.3051, -21.9916, 0.67", "-24.9844, -36.165, -22.0036, 0.33", "-28.263, -42.7038, -21.4592, 0.67", "-29.97, -46.0683, -21.0026, 0.33", "-30.2997, -46.7015, -20.8799, 0.67", "-32.6605, -50.8958, -19.7899, 0.33", "-33.2436, -51.8196, -19.4373, 0.67", "-35.4918, -55.2827, -17.6602, 0.33", "-36.0597, -56.0691, -17.1685, 0.67", "-38.4048, -59.3044, -15.2462, 0.33", "-39.275, -60.5437, -14.6593, 0.67", "-40.6242, -62.6256, -14.1875, 0.33", "-41.7936, -64.452, -14.0527, 0.33", "-42.1752, -65.0631, -14.1269, 0.67", "-42.9546, -66.4802, -14.5162, 0.33", "-43.8745, -68.4565, -15.3468, 0.67", "-45.283, -71.9824, -17.0825, 0.33", "-45.7412, -73.2401, -17.7696, 0.33", "-45.8934, -73.6574, -18.0238, 0.67", "-47.0934, -76.9835, -20.0394, 0.33", "-47.1976, -77.2808, -20.217, 0.67", "-47.9026, -79.2035, -21.2236, 0.33", "-48.222, -80.0902, -21.6626, 0.67", "-49.1612, -82.6974, -23.1301, 0.33", "-49.4429, -83.4266, -23.5815, 0.67" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-20.2107, -25.715, -21.3243, 0.67", "-28.0231, -29.5956, -17.6317, 0.67", "-31.0113, -31.076, -16.2355, 0.67", "-33.635, -32.3513, -14.895, 0.67", "-36.8732, -33.8527, -13.1993, 0.67", "-43.4489, -36.6525, -9.69089, 0.67", "-47.1863, -38.0201, -7.6841, 0.67", "-48.4208, -38.3694, -7.06028, 0.67", "-52.2575, -39.0853, -5.32743, 0.67", "-53.4116, -39.225, -4.87798, 0.33", "-55.6406, -39.4087, -4.16199, 0.67", "-62.4197, -39.9737, -2.42636, 0.67", "-63.8723, -40.0831, -2.14899, 0.67", "-71.7859, -40.6867, -1.06325, 0.67", "-74.201, -40.9296, -0.876512, 0.67", "-76.7038, -41.2601, -0.69781, 0.33", "-78.2353, -41.4797, -0.636678, 0.67", "-79.9626, -41.7065, -0.618334, 0.33", "-83.7601, -42.1764, -0.463662, 0.67", "-84.8543, -42.283, -0.386179, 0.67", "-87.5293, -42.5379, -0.2243, 0.67", "-90.0503, -42.6672, -0.145506, 0.33", "-91.5974, -42.6739, -0.129287, 0.67", "-93.1597, -42.6461, -0.14682, 0.67", "-96.3543, -42.525, -0.163449, 0.67", "-98.5605, -42.4102, -0.297651, 0.67", "-100.112, -42.3709, -0.462494, 0.67", "-103.217, -42.3449, -0.82236, 0.67", "-104.676, -42.3215, -0.983106, 0.67", "-109.481, -42.2946, -1.64236, 0.67", "-112.245, -42.2962, -2.09419, 0.33", "-113.646, -42.3241, -2.34586, 0.67", "-115.049, -42.458, -2.59475, 0.33", "-117.216, -42.7011, -2.99669, 0.67", "-121.149, -43.1642, -3.76793, 0.67", "-125.874, -43.8424, -4.757, 0.67", "-129.49, -44.3472, -5.40565, 0.67", "-137.207, -45.3895, -6.85182, 0.67" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-35.4075, 21.4977, -130.512, 0.33", "-34.8273, 27.3336, -138.029, 0.33", "-34.6092, 29.3379, -140.746, 0.67", "-34.1352, 33.2581, -145.958, 0.33", "-34.0828, 33.6645, -146.51, 0.67", "-33.6546, 37.336, -151.67, 0.33", "-33.512, 38.8339, -153.799, 0.33", "-33.2353, 41.1576, -157.09, 0.67", "-32.8171, 45.6267, -163.611, 0.33", "-32.731, 47.4411, -166.096, 0.67", "-32.6389, 49.7301, -169.283, 0.33", "-32.6444, 50.6336, -170.555, 0.67", "-32.6333, 51.9503, -172.527, 0.67" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-35.4075, 21.4977, -130.512, 0.33", "-39.3126, 24.3808, -139.98, 0.33", "-39.7554, 24.6928, -140.866, 1.33", "-42.4285, 26.6499, -145.743, 0.33", "-43.3909, 27.3562, -147.368, 0.33", "-43.8633, 27.6984, -148.165, 0.67", "-44.9309, 28.5193, -149.94, 0.33", "-46.3483, 29.6199, -151.969, 0.67", "-47.7358, 30.7317, -154.14, 0.33", "-49.7316, 32.0986, -157.228, 1.33", "-51.712, 33.3675, -161.111, 0.67", "-52.5871, 33.8654, -162.943, 0.67", "-54.2334, 34.7677, -166.743, 0.67", "-55.9584, 35.7214, -171.286, 0.67", "-57.5076, 36.4372, -174.978, 0.67", "-62.2672, 38.4736, -185.695, 0.33", "-62.9427, 38.7446, -187.207, 0.67", "-64.4642, 39.3036, -190.633, 0.33", "-65.6437, 39.7558, -193.272, 1.33", "-70.162, 41.456, -202.921, 0.33", "-70.5693, 41.6534, -203.753, 0.67" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-82.2658, -100.938, -84.0779, 0.33", "-84.0555, -102.907, -85.9065, 0.33", "-84.9618, -103.96, -86.8602, 0.67", "-87.3309, -106.562, -89.2644, 0.33", "-87.764, -107.024, -89.717, 0.67", "-90.5351, -110.05, -93.0124, 0.33", "-91.275, -110.858, -93.8924, 0.67", "-92.4448, -112.186, -95.4692, 0.33", "-93.2549, -113.151, -96.6863, 0.67", "-94.7263, -114.969, -99.1061, 0.33", "-96.261, -116.741, -101.62, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-82.2658, -100.938, -84.0779, 0.67", "-83.8045, -103.438, -84.0946, 0.67", "-84.9892, -105.477, -84.2523, 0.67", "-86.636, -108.431, -84.5248, 0.33", "-87.2445, -109.649, -84.6908, 0.67", "-88.2272, -111.771, -85.0012, 0.33", "-88.4086, -112.249, -85.0836, 0.67", "-89.4002, -115.625, -85.8478, 0.33", "-89.5114, -116.145, -85.971, 0.67", "-89.9833, -119.154, -86.7074, 0.33", "-90.0922, -119.974, -86.8973, 0.67", "-90.3745, -123.679, -87.7879, 0.33", "-90.41, -124.413, -87.9581, 0.67", "-90.4285, -125.875, -88.2731, 0.33", "-90.459, -127.737, -88.6882, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "24.886, -1.04093, 7.24473, 0.67", "28.7642, 1.50171, 5.7743, 0.67", "33.442, 4.81713, 3.22415, 0.67", "37.242, 7.34544, 1.04008, 0.67", "40.6746, 9.55058, -0.901097, 0.67", "41.6278, 10.1654, -1.43775, 1.33", "44.7057, 12.191, -3.92504, 0.67", "47.7212, 14.2158, -7.27604, 0.67", "50.3624, 15.8316, -10.9712, 0.67", "51.6603, 16.5425, -13.0209, 0.67", "52.1139, 16.7663, -13.7449, 1.33", "59.56, 20.6226, -25.9058, 0.33", "60.4133, 21.094, -27.2278, 0.33", "61.188, 21.5327, -28.333, 1.33", "62.7919, 22.6867, -30.5474, 0.33", "63.5965, 23.3516, -31.5213, 0.33", "65.7181, 25.3467, -33.3961, 0.67", "68.6533, 28.3818, -34.8381, 0.67", "70.3935, 30.1823, -35.7081, 0.67", "73.2539, 33.0674, -37.1271, 0.33", "74.4361, 34.1444, -37.6828, 1.33", "77.0709, 36.1718, -38.7265, 0.33", "79.0484, 37.3673, -39.4178, 1.33", "81.9463, 38.6138, -40.3396, 0.33", "83.4443, 38.9786, -40.739, 0.67", "86.5701, 39.0353, -41.5073, 1.33", "90.9623, 38.6357, -42.5481, 0.67", "93.3598, 38.1827, -43.1147, 0.67", "96.3513, 37.5376, -43.8046, 0.33", "97.4077, 37.2786, -44.0239, 1.33", "101.973, 35.9869, -44.9893, 0.33", "103.55, 35.5199, -45.337, 0.33", "104.715, 35.2024, -45.6733, 0.67", "106.593, 34.7659, -46.1345, 0.33", "108.13, 34.4267, -46.5018, 0.67", "110.345, 33.9568, -47.1395, 0.33", "112.558, 33.481, -47.8299, 0.67", "115.62, 32.7294, -48.8353, 0.33", "116.438, 32.5167, -49.1068, 0.67", "118.327, 31.9432, -49.7278, 0.33", "121.704, 30.8745, -50.7882, 0.33", "123.542, 30.2667, -51.3167, 0.67", "126.554, 29.2173, -52.0169, 0.33", "128.071, 28.6589, -52.2397, 0.67", "130.234, 27.899, -52.4501, 0.33", "131.427, 27.533, -52.5161, 0.33", "132.288, 27.3016, -52.5755, 0.67", "135.714, 26.4372, -53.0142, 0.33", "136.939, 26.1822, -53.2302, 0.67", "139.133, 25.8985, -53.6662, 0.33", "142.075, 25.7152, -54.3465, 0.67", "145.244, 25.592, -55.1438, 0.33", "145.674, 25.582, -55.2623, 0.67", "148.412, 25.553, -56.1252, 0.33", "150.326, 25.5457, -56.7605, 0.67", "153.226, 25.4334, -57.6944, 0.33", "153.991, 25.4381, -57.8815, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "24.886, -1.04093, 7.24473, 0.67", "28.2071, -8.44109, 8.79711, 0.67", "30.0647, -12.8435, 9.4532, 0.67", "31.2021, -15.7217, 9.96863, 0.67", "32.5481, -19.3221, 10.628, 0.67", "33.5366, -22.2679, 11.1436, 0.67", "35.1054, -26.9343, 11.9081, 0.67", "36.0956, -29.9878, 12.2617, 0.67", "37.9989, -34.7778, 12.8744, 0.67", "39.8335, -38.5227, 13.3535, 0.67", "41.8558, -42.2712, 13.8178, 0.67", "44.2489, -46.2967, 14.277, 0.67", "47.2431, -50.9553, 14.7505, 0.67", "49.4866, -54.1365, 15.1065, 0.67", "53.279, -59.248, 15.5828, 0.67", "54.6623, -61.1212, 15.8209, 0.67", "56.1717, -63.0728, 16.1072, 0.33", "57.6022, -65.0937, 16.4482, 0.67", "59.3448, -68.0364, 17.0096, 0.67", "59.8639, -69.2974, 17.3042, 0.67", "60.6552, -72.6084, 18.4274, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-137.207, -45.3895, -6.85182, 0.33", "-138.531, -47.1543, -7.59661, 0.33", "-138.691, -47.3736, -7.68983, 0.67", "-139.364, -48.2792, -8.0736, 0.33", "-140.321, -49.6085, -8.63874, 0.67", "-141.104, -50.7212, -9.11092, 0.33", "-142.318, -52.5125, -9.96534, 0.67", "-143.352, -54.0617, -10.7803, 0.33", "-143.745, -54.644, -11.1913, 0.67", "-144.44, -55.5782, -12.0341, 0.33", "-144.869, -56.11, -12.6381, 0.67", "-145.764, -57.2983, -14.2709, 0.33", "-145.982, -57.6633, -14.785, 0.67", "-147.001, -59.43, -17.7352, 0.33", "-147.329, -60.1645, -18.9367, 0.33", "-147.445, -60.4657, -19.4125, 0.33", "-147.664, -61.1274, -20.42, 0.67", "-148.149, -63.0005, -22.8945, 0.33", "-148.447, -64.8322, -24.9721, 0.67", "-148.577, -66.4426, -26.318, 0.33", "-148.579, -66.9287, -26.7399, 0.67", "-151.752, -72.0276, -32.9778, 0.67", "-156.408, -77.0538, -38.2725, 0.67" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-137.207, -45.3895, -6.85182, 0.67", "-139.392, -44.8305, -6.49998, 0.67", "-140.625, -44.515, -6.30138, 0.67", "-141.765, -44.2231, -6.11766, 0.67", "-143.628, -43.7463, -5.81758, 0.67", "-146.212, -43.0851, -5.40142, 0.67", "-148.133, -42.5935, -5.09204, 0.67" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-96.261, -116.741, -101.62, 0.33", "-97.1755, -118.069, -103.292, 0.33", "-97.4169, -118.412, -103.704, 0.67", "-99.8617, -121.747, -106.977, 0.33", "-100.431, -122.516, -107.654, 0.67", "-103.277, -126.226, -110.712, 0.33", "-104.193, -127.298, -111.532, 0.33", "-105.667, -128.954, -112.725, 0.67", "-109.265, -132.554, -115.068, 0.33", "-109.924, -133.126, -115.376, 0.67", "-111.515, -134.535, -116.043, 0.33", "-114.605, -137.318, -117.518, 0.33", "-115.679, -138.263, -118.117, 0.67", "-117.615, -139.846, -119.518, 0.33", "-118.443, -140.482, -120.268, 0.67", "-123.005, -144.094, -124.902, 0.33", "-126.522, -146.995, -128.779, 0.67", "-129.662, -149.663, -132.524, 0.33", "-134.181, -153.459, -138.036, 0.33", "-136.237, -155.24, -140.725, 0.67", "-138.283, -156.9, -143.456, 0.33", "-138.761, -157.198, -144.076, 0.67" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-96.261, -116.741, -101.62, 0.33", "-97.4747, -117.655, -101.763, 0.33", "-98.3904, -118.421, -101.682, 0.67", "-102.719, -122.15, -100.889, 0.33", "-103.447, -122.776, -100.756, 0.67", "-105.319, -124.389, -100.413, 0.33", "-107.289, -126.086, -100.052, 0.67", "-109.969, -128.554, -99.5635, 0.33", "-110.636, -129.222, -99.3384, 0.67" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "60.6552, -72.6084, 18.4274, 0.33", "61.0967, -74.0381, 18.6711, 0.33", "61.7292, -76.0961, 19.0229, 0.67", "62.8948, -79.855, 19.6614, 0.67", "63.7619, -82.8077, 20.1809, 0.67", "64.7362, -86.0807, 20.7896, 0.67", "65.6218, -89.1257, 21.4662, 0.67", "66.457, -91.9072, 22.201, 0.67", "66.7647, -92.9039, 22.4991, 0.67", "67.4413, -94.824, 23.1129, 0.67", "68.1691, -97.0354, 23.8968, 0.67", "69.1954, -100.098, 25.0209, 0.67", "70.5938, -103.823, 26.3328, 0.33", "71.0043, -104.903, 26.6899, 0.67", "71.7483, -106.826, 27.235, 0.67", "72.6994, -109.023, 27.7207, 0.67", "73.9912, -111.839, 28.141, 0.67", "75.0804, -114.215, 28.162, 0.67", "76.2528, -116.683, 27.9077, 0.67", "77.0071, -118.132, 27.6216, 0.67", "78.1152, -119.969, 27.1132, 0.33", "78.5828, -120.635, 26.8261, 1.33", "80.9426, -123.803, 25.1016, 0.67", "82.1457, -125.305, 24.1568, 0.67", "84.1825, -127.668, 22.5131, 0.67", "85.6504, -129.403, 21.3371, 0.67", "87.6409, -131.867, 19.6999, 0.33", "87.9016, -132.152, 19.4983, 0.67", "91.5571, -140.494, 19.0964, 0.67", "94.5825, -148.993, 17.7806, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "60.6552, -72.6084, 18.4274, 0.67", "59.593, -73.931, 18.9657, 0.67", "53.743, -80.0284, 21.2301, 0.67", "47.6548, -85.8505, 23.5892, 0.67", "41.4237, -90.6611, 27.405, 0.67", "36.178, -96.005, 31.9276, 0.67", "31.6735, -101.59, 36.9325, 0.67", "27.0322, -105.852, 43.0007, 0.67", "22.9532, -109.931, 49.5775, 0.67", "19.1398, -112.896, 56.8706, 0.67", "16.9763, -115.752, 64.8513, 0.67", "16.2532, -117.758, 73.3357, 0.67", "15.9095, -119.94, 81.8002, 0.67", "14.583, -120.544, 90.426, 0.67", "13.9511, -121.603, 99.0866, 0.67", "12.7529, -123.959, 107.426, 0.67", "10.7211, -126.118, 115.657, 0.67", "9.5979, -130.316, 123.249, 0.67", "9.73658, -132.753, 131.649, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-148.133, -42.5935, -5.09204, 0.67", "-154.03, -38.6764, -6.2741, 0.67", "-154.916, -38.0879, -6.45169, 0.67", "-157.446, -36.4078, -6.9587, 0.33", "-157.913, -36.0973, -7.0524, 0.67", "-163.436, -32.4292, -8.15934, 0.33", "-169.642, -28.0387, -8.66633, 0.33", "-175.844, -23.7317, -9.68649, 0.33" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-148.133, -42.5935, -5.09204, 0.67", "-150.643, -41.959, -4.56367, 0.67", "-153.723, -41.024, -3.94466, 0.33", "-156.431, -39.968, -4.29288, 0.67", "-157.702, -39.4724, -4.45629, 0.33", "-158.871, -39.0161, -4.60675, 0.67", "-160.086, -38.5425, -4.76292, 0.33", "-160.627, -38.3491, -4.95721, 0.67", "-162.769, -35.9855, -9.60269, 0.33", "-170.187, -31.3116, -12.6355, 0.33", "-178.223, -27.1884, -14.7502, 0.33" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-175.844, -23.7317, -9.68649, 0.33", "-183.307, -19.1048, -12.9185, 0.33", "-189.993, -14.1017, -17.1389, 0.33", "-195.673, -8.72874, -22.2788, 0.33", "-201.006, -3.14387, -27.5621, 0.33", "-206.278, 2.77815, -32.5302, 0.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-175.844, -23.7317, -9.68649, 0.33", "-182.04, -19.6051, -11.6911, 0.33", "-188.334, -15.6216, -13.6819, 0.33", "-194.08, -10.7053, -15.1817, 0.33", "-199.752, -6.35389, -18.0685, 0.33", "-205.055, -2.07495, -21.6745, 0.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-178.223, -27.1884, -14.7502, 0.33", "-186.029, -24.8365, -20.3742, 0.33" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-178.223, -27.1884, -14.7502, 0.33", "-185.009, -23.9247, -17.6848, 0.33" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_45", "dend_44", "dend_39", "dend_38", "dend_35", "dend_20", "dend_13", "dend_10", "dend_7", "dend_0", "dend_47", "dend_46", "dend_43", "dend_40", "dend_37", "dend_36", "dend_24", "dend_21", "dend_15", "dend_14", "dend_12", "dend_11", "dend_9", "dend_8", "dend_6", "dend_1", "dend_42", "dend_41", "dend_34", "dend_25", "dend_23", "dend_22", "dend_17", "dend_16", "dend_5", "dend_2", "dend_33", "dend_26", "dend_19", "dend_18", "dend_4", "dend_3", "dend_30", "dend_27", "dend_32", "dend_31", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_45", "dend_44", "dend_39", "dend_38", "dend_35", "dend_20", "dend_13", "dend_10", "dend_7", "dend_0", "dend_47", "dend_46", "dend_43", "dend_40", "dend_37", "dend_36", "dend_24", "dend_21", "dend_15", "dend_14", "dend_12", "dend_11", "dend_9", "dend_8", "dend_6", "dend_1", "dend_42", "dend_41", "dend_34", "dend_25", "dend_23", "dend_22", "dend_17", "dend_16", "dend_5", "dend_2", "dend_33", "dend_26", "dend_19", "dend_18", "dend_4", "dend_3", "dend_30", "dend_27", "dend_32", "dend_31", "dend_29", "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_28" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_NBC_36cd91dc08_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_24
create dend_34
public dend_34
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_33, id: dend_33, parent: dend_25
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_44, dend_39, dend_38, dend_35, dend_20, dend_13, dend_10, dend_7, dend_0, dend_47, dend_46, dend_43, dend_40, dend_37, dend_36, dend_24, dend_21, dend_15, dend_14, dend_12, dend_11, dend_9, dend_8, dend_6, dend_1, dend_42, dend_41, dend_34, dend_25, dend_23, dend_22, dend_17, dend_16, dend_5, dend_2, dend_33, dend_26, dend_19, dend_18, dend_4, dend_3, dend_30, dend_27, dend_32, dend_31, dend_29, dend_28]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_45, dend_44, dend_39, dend_38, dend_35, dend_20, dend_13, dend_10, dend_7, dend_0, dend_47, dend_46, dend_43, dend_40, dend_37, dend_36, dend_24, dend_21, dend_15, dend_14, dend_12, dend_11, dend_9, dend_8, dend_6, dend_1, dend_42, dend_41, dend_34, dend_25, dend_23, dend_22, dend_17, dend_16, dend_5, dend_2, dend_33, dend_26, dend_19, dend_18, dend_4, dend_3, dend_30, dend_27, dend_32, dend_31, dend_29, dend_28]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_30
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, axon_0, axon_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_28]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_45(0), soma_0(0.4999998506351923)
    connect dend_44(0), soma_0(0.4999998506351923)
    connect dend_39(0), soma_0(0.4999998506351923)
    connect dend_38(0), soma_0(0.4999998506351923)
    connect dend_35(0), soma_0(0.4999998506351923)
    connect dend_20(0), soma_0(0.4999998506351923)
    connect dend_13(0), soma_0(0.4999998506351923)
    connect dend_10(0), soma_0(0.4999998506351923)
    connect dend_7(0), soma_0(0.4999998506351923)
    connect dend_0(0), soma_0(0.4999998506351923)
    connect axon_0(0), soma_0(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_34(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_33(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -7.43002, -7.14884, -0.034622, 2.50374 ) }
    soma_0 { pt3dadd( -6.6077, -6.46772, -0.0380434, 4.42492 ) }
    soma_0 { pt3dadd( -5.78537, -5.7866, -0.0414649, 9.53787 ) }
    soma_0 { pt3dadd( -4.96305, -5.10547, -0.0448864, 10.4902 ) }
    soma_0 { pt3dadd( -4.14072, -4.42435, -0.0483079, 10.6433 ) }
    soma_0 { pt3dadd( -3.31839, -3.74322, -0.0517294, 10.5673 ) }
    soma_0 { pt3dadd( -2.49607, -3.0621, -0.0551509, 10.1499 ) }
    soma_0 { pt3dadd( -1.67374, -2.38098, -0.0585724, 9.69481 ) }
    soma_0 { pt3dadd( -0.851413, -1.69985, -0.0619939, 9.23972 ) }
    soma_0 { pt3dadd( -0.0290863, -1.01873, -0.0654154, 9.00279 ) }
    soma_0 { pt3dadd( 0.79324, -0.337605, -0.0688369, 8.97028 ) }
    soma_0 { pt3dadd( 1.61557, 0.343519, -0.0722584, 8.95274 ) }
    soma_0 { pt3dadd( 2.43789, 1.02464, -0.0756799, 8.9352 ) }
    soma_0 { pt3dadd( 3.26022, 1.70577, -0.0791013, 8.91317 ) }
    soma_0 { pt3dadd( 4.08255, 2.38689, -0.0825228, 8.85399 ) }
    soma_0 { pt3dadd( 4.90487, 3.06802, -0.0859443, 8.77123 ) }
    soma_0 { pt3dadd( 5.7272, 3.74914, -0.0893658, 8.34273 ) }
    soma_0 { pt3dadd( 6.54953, 4.43026, -0.0927873, 7.49401 ) }
    soma_0 { pt3dadd( 7.37185, 5.11139, -0.0962088, 6.34034 ) }
    soma_0 { pt3dadd( 8.19418, 5.79251, -0.0996303, 4.815 ) }
    soma_0 { pt3dadd( 9.0165, 6.47364, -0.103052, 2.95062 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 21/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 8.9604, 7.33538, -11.8639, 1.33 ) }
    dend_45 { pt3dadd( 11.2135, 12.048, -11.4798, 1.33 ) }
    dend_45 { pt3dadd( 13.1755, 16.1518, -11.1452, 1.33 ) }
    dend_45 { pt3dadd( 15.6518, 21.3313, -10.723, 0.67 ) }
    dend_45 { pt3dadd( 16.144, 22.3608, -10.6391, 0.67 ) }
    dend_45 { pt3dadd( 17.4132, 25.0155, -10.4227, 0.67 ) }
    dend_45 { pt3dadd( 18.0608, 26.3702, -10.3122, 1.33 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 28/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 6.02039, 7.39538, -0.533942, 0.67 ) }
    dend_44 { pt3dadd( 4.08506, 10.0154, 1.52132, 0.67 ) }
    dend_44 { pt3dadd( 2.7325, 12.2022, 2.90837, 0.67 ) }
    dend_44 { pt3dadd( -1.58311, 21.1355, 7.49267, 0.67 ) }
    dend_44 { pt3dadd( -3.70378, 26.8024, 9.8555, 0.67 ) }
    dend_44 { pt3dadd( -5.70009, 33.622, 12.2556, 0.67 ) }
    dend_44 { pt3dadd( -6.45802, 37.0061, 13.2631, 0.67 ) }
    dend_44 { pt3dadd( -6.98454, 40.0465, 13.9758, 0.67 ) }
    dend_44 { pt3dadd( -7.41144, 44.6912, 14.6365, 0.67 ) }
    dend_44 { pt3dadd( -7.43255, 48.4958, 14.709, 0.67 ) }
    dend_44 { pt3dadd( -7.15446, 54.2059, 14.791, 0.67 ) }
    dend_44 { pt3dadd( -6.92232, 58.6726, 15.1055, 0.67 ) }
    dend_44 { pt3dadd( -6.90998, 59.9604, 15.2392, 0.67 ) }
    dend_44 { pt3dadd( -6.97789, 63.3511, 15.6875, 0.33 ) }
    dend_44 { pt3dadd( -7.11712, 65.8525, 16.0712, 0.67 ) }
    dend_44 { pt3dadd( -7.36111, 69.3794, 16.6358, 0.33 ) }
    dend_44 { pt3dadd( -7.53223, 71.8511, 16.9869, 0.67 ) }
    dend_44 { pt3dadd( -7.71197, 74.06, 17.2977, 0.33 ) }
    dend_44 { pt3dadd( -7.76273, 75.3614, 17.4348, 0.67 ) }
    dend_44 { pt3dadd( -7.72173, 77.2594, 17.579, 0.33 ) }
    dend_44 { pt3dadd( -7.60369, 79.1011, 17.4941, 0.67 ) }
    dend_44 { pt3dadd( -7.37897, 80.7711, 17.1987, 0.33 ) }
    dend_44 { pt3dadd( -7.13166, 82.0122, 16.9075, 0.67 ) }
    dend_44 { pt3dadd( -6.61882, 84.2277, 16.3411, 0.67 ) }
    dend_44 { pt3dadd( -6.06331, 86.3804, 15.765, 0.67 ) }
    dend_44 { pt3dadd( -5.11925, 89.4257, 14.9013, 0.33 ) }
    dend_44 { pt3dadd( -4.32561, 91.6099, 14.2589, 0.67 ) }
    dend_44 { pt3dadd( -3.86942, 92.7455, 13.9105, 0.33 ) }
    dend_44 { pt3dadd( -3.60835, 93.3744, 13.7094, 0.67 ) }
    dend_44 { pt3dadd( -3.16156, 94.5392, 13.3218, 0.33 ) }
    dend_44 { pt3dadd( -2.72245, 95.9317, 12.8479, 0.67 ) }
    dend_44 { pt3dadd( -3.87452, 105.006, 15.4643, 0.67 ) }
    dend_44 { pt3dadd( -6.11034, 113.797, 18.3357, 0.67 ) }
    dend_44 { pt3dadd( -8.07572, 122.223, 22.2941, 0.67 ) }
    dend_44 { pt3dadd( -9.23573, 130.772, 26.3065, 0.67 ) }
    dend_44 { pt3dadd( -12.1155, 138.922, 30.2825, 0.67 ) }
    dend_44 { pt3dadd( -13.2936, 147.462, 34.3083, 0.67 ) }
    dend_44 { pt3dadd( -13.1631, 156.206, 38.0587, 0.67 ) }
    dend_44 { pt3dadd( -12.2633, 165.234, 40.9238, 0.67 ) }
    dend_44 { pt3dadd( -13.1792, 173.957, 44.6107, 0.67 ) }
    dend_44 { pt3dadd( -14.8345, 182.988, 47.1055, 0.67 ) }
    dend_44 { pt3dadd( -14.6942, 192.315, 48.9802, 0.67 ) }
    dend_44 { pt3dadd( -13.3006, 201.693, 49.7788, 0.67 ) }
    dend_44 { pt3dadd( -11.2384, 210.979, 49.5528, 0.67 ) }
    dend_44 { pt3dadd( -9.56363, 220.313, 48.7788, 0.67 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 73/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 3.52039, 6.68538, -19.4339, 1.33 ) }
    dend_39 { pt3dadd( 2.93151, 9.98314, -19.0783, 1.33 ) }
    dend_39 { pt3dadd( 2.9065, 14.9166, -17.9602, 1.33 ) }
    dend_39 { pt3dadd( 2.91776, 19.0555, -17.3326, 2.0 ) }
    dend_39 { pt3dadd( 2.91776, 19.0555, -17.3326, 2.0 ) }
    dend_39 { pt3dadd( 2.91644, 22.3036, -17.1664, 1.33 ) }
    dend_39 { pt3dadd( 2.91342, 29.7383, -16.7859, 1.33 ) }
    dend_39 { pt3dadd( 3.12318, 38.1619, -16.4349, 1.33 ) }
    dend_39 { pt3dadd( 3.33807, 43.796, -16.3, 0.67 ) }
    dend_39 { pt3dadd( 3.72204, 50.5958, -15.8429, 0.67 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -7.8796, -1.14462, -4.34395, 1.33 ) }
    dend_38 { pt3dadd( -17.2646, 4.77381, -5.92685, 1.33 ) }
    dend_38 { pt3dadd( -18.4715, 5.44283, -6.12906, 1.33 ) }
    dend_38 { pt3dadd( -23.8316, 8.2369, -6.98223, 0.67 ) }
    dend_38 { pt3dadd( -27.537, 10.1766, -7.77984, 0.67 ) }
    dend_38 { pt3dadd( -34.4886, 13.5265, -9.6093, 0.67 ) }
    dend_38 { pt3dadd( -37.1214, 14.7033, -10.434, 0.67 ) }
    dend_38 { pt3dadd( -43.8146, 17.6999, -13.1974, 0.67 ) }
    dend_38 { pt3dadd( -49.4709, 20.074, -15.6629, 0.67 ) }
    dend_38 { pt3dadd( -55.5031, 22.3918, -18.3393, 0.67 ) }
    dend_38 { pt3dadd( -59.6796, 23.9648, -20.3014, 0.67 ) }
    dend_38 { pt3dadd( -63.2517, 25.0818, -22.1548, 0.67 ) }
    dend_38 { pt3dadd( -69.7274, 27.0578, -25.9599, 0.67 ) }
    dend_38 { pt3dadd( -74.9349, 28.7864, -29.3589, 0.67 ) }
    dend_38 { pt3dadd( -77.1982, 29.4391, -30.8725, 0.67 ) }
    dend_38 { pt3dadd( -80.1459, 30.0834, -32.6012, 0.67 ) }
    dend_38 { pt3dadd( -85.7801, 31.2715, -35.6409, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_38 { pt3dadd( -90.5877, 32.1581, -38.0797, 0.33 ) }
    dend_38 { pt3dadd( -92.8476, 32.4608, -39.1758, 0.67 ) }
    dend_38 { pt3dadd( -96.1471, 32.8837, -40.8054, 0.67 ) }
    dend_38 { pt3dadd( -103.977, 34.2987, -44.7861, 0.67 ) }
    dend_38 { pt3dadd( -106.78, 34.9793, -46.148, 0.33 ) }
    dend_38 { pt3dadd( -109.558, 35.8832, -47.4951, 0.67 ) }
    dend_38 { pt3dadd( -112.578, 36.9901, -48.993, 0.67 ) }
    dend_38 { pt3dadd( -116.791, 38.7854, -51.3523, 0.33 ) }
    dend_38 { pt3dadd( -121.365, 41.4542, -54.6213, 0.67 ) }
    dend_38 { pt3dadd( -123.483, 43.0002, -56.5322, 0.67 ) }
    dend_38 { pt3dadd( -126.329, 45.1111, -59.4481, 0.33 ) }
    dend_38 { pt3dadd( -127.447, 45.9411, -60.646, 0.33 ) }
    dend_38 { pt3dadd( -128.151, 46.5492, -61.4593, 1.33 ) }
    dend_38 { pt3dadd( -130.915, 49.4123, -64.8784, 0.33 ) }
    dend_38 { pt3dadd( -132.42, 51.1422, -66.9905, 0.33 ) }
    dend_38 { pt3dadd( -134.175, 53.4269, -69.5483, 0.67 ) }
    dend_38 { pt3dadd( -135.392, 55.0603, -71.3077, 0.33 ) }
    dend_38 { pt3dadd( -136.268, 56.2476, -72.6115, 0.33 ) }
    dend_38 { pt3dadd( -137.768, 58.2747, -74.7845, 0.67 ) }
    dend_38 { pt3dadd( -138.743, 59.5548, -76.0544, 0.33 ) }
    dend_38 { pt3dadd( -140.015, 61.4321, -77.7265, 0.67 ) }
    dend_38 { pt3dadd( -142.373, 64.9371, -81.2911, 0.33 ) }
    dend_38 { pt3dadd( -143.272, 66.1886, -82.8852, 0.33 ) }
    dend_38 { pt3dadd( -143.84, 66.8698, -83.8782, 0.33 ) }
    dend_38 { pt3dadd( -144.425, 67.5502, -84.9677, 0.33 ) }
    dend_38 { pt3dadd( -146.123, 69.5531, -88.5943, 0.67 ) }
    dend_38 { pt3dadd( -149.077, 72.933, -94.9767, 0.67 ) }
    dend_38 { pt3dadd( -151.095, 75.0185, -98.8254, 0.33 ) }
    dend_38 { pt3dadd( -152.467, 76.2314, -101.126, 0.67 ) }
    dend_38 { pt3dadd( -154.877, 78.1318, -104.773, 0.33 ) }
    dend_38 { pt3dadd( -156.753, 79.3192, -107.194, 0.67 ) }
    dend_38 { pt3dadd( -159.356, 80.4981, -109.692, 0.33 ) }
    dend_38 { pt3dadd( -162.654, 81.3494, -111.38, 0.67 ) }
    dend_38 { pt3dadd( -165.251, 81.6732, -112.384, 0.33 ) }
    dend_38 { pt3dadd( -166.784, 81.7455, -112.905, 0.67 ) }
    dend_38 { pt3dadd( -169.522, 81.854, -113.863, 0.33 ) }
    dend_38 { pt3dadd( -172.068, 82.0285, -114.803, 0.67 ) }
    dend_38 { pt3dadd( -177.223, 82.4403, -117.187, 0.67 ) }
    dend_38 { pt3dadd( -182.27, 83.0928, -119.826, 0.33 ) }
    dend_38 { pt3dadd( -184.79, 83.7838, -121.119, 0.67 ) }
    dend_38 { pt3dadd( -190.123, 85.8466, -123.787, 0.33 ) }
    dend_38 { pt3dadd( -193.698, 87.7347, -125.677, 0.67 ) }
    dend_38 { pt3dadd( -197.746, 90.4306, -127.752, 0.33 ) }
    dend_38 { pt3dadd( -199.605, 91.8751, -128.645, 0.67 ) }
    dend_38 { pt3dadd( -207.868, 98.8092, -132.234, 0.33 ) }
    dend_38 { pt3dadd( -209.445, 100.227, -132.904, 0.67 ) }
    dend_38 { pt3dadd( -214.04, 104.824, -134.899, 0.33 ) }
    dend_38 { pt3dadd( -220.104, 111.546, -137.358, 0.33 ) }
    dend_38 { pt3dadd( -221.577, 113.338, -137.94, 0.67 ) }
    dend_38 { pt3dadd( -223.399, 115.673, -138.737, 0.33 ) }
    dend_38 { pt3dadd( -224.315, 116.934, -139.186, 0.67 ) }
    dend_38 { pt3dadd( -227.771, 121.688, -140.785, 0.33 ) }
    dend_38 { pt3dadd( -231.204, 126.52, -142.079, 0.67 ) }
    dend_38 { pt3dadd( -234.433, 132.263, -143.782, 0.33 ) }
    dend_38 { pt3dadd( -234.831, 133.033, -144.003, 0.67 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 55/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -7.42961, -3.20462, -0.553942, 0.67 ) }
    dend_35 { pt3dadd( -8.44161, -4.04852, 1.37705, 0.67 ) }
    dend_35 { pt3dadd( -10.0567, -5.31017, 4.20177, 1.33 ) }
    dend_35 { pt3dadd( -15.106, -8.88524, 12.3735, 0.33 ) }
    dend_35 { pt3dadd( -16.9609, -10.1467, 15.1789, 0.67 ) }
    dend_35 { pt3dadd( -19.6283, -11.8053, 19.0513, 0.67 ) }
    dend_35 { pt3dadd( -20.566, -12.3322, 20.3178, 0.33 ) }
    dend_35 { pt3dadd( -21.0478, -12.5557, 20.919, 0.67 ) }
    dend_35 { pt3dadd( -25.3654, -14.2098, 25.6327, 0.33 ) }
    dend_35 { pt3dadd( -27.8882, -14.9951, 27.9399, 0.67 ) }
    dend_35 { pt3dadd( -30.9131, -15.7797, 30.6751, 0.67 ) }
    dend_35 { pt3dadd( -34.136, -16.4037, 33.3428, 0.67 ) }
    dend_35 { pt3dadd( -37.0318, -16.8497, 35.6101, 0.67 ) }
    dend_35 { pt3dadd( -39.8707, -17.2196, 37.7271, 0.33 ) }
    dend_35 { pt3dadd( -41.0868, -17.3011, 38.4985, 0.67 ) }
    dend_35 { pt3dadd( -42.8325, -17.3216, 39.4953, 0.33 ) }
    dend_35 { pt3dadd( -44.4783, -17.3171, 40.2606, 0.67 ) }
    dend_35 { pt3dadd( -45.9743, -17.1989, 40.8496, 0.33 ) }
    dend_35 { pt3dadd( -52.6521, -20.7748, 50.2691, 0.33 ) }
    dend_35 { pt3dadd( -59.2965, -24.065, 59.8154, 0.33 ) }
    dend_35 { pt3dadd( -66.1784, -27.7004, 69.0635, 0.33 ) }
    dend_35 { pt3dadd( -74.0919, -32.8031, 76.6427, 0.33 ) }
    dend_35 { pt3dadd( -82.3957, -37.6063, 83.9968, 0.33 ) }
    dend_35 { pt3dadd( -91.542, -43.1725, 89.6064, 0.33 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 79/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -4.0096, -8.12462, -10.3139, 1.33 ) }
    dend_20 { pt3dadd( -5.58378, -9.74632, -11.4138, 1.33 ) }
    dend_20 { pt3dadd( -8.2563, -12.4996, -13.2811, 1.33 ) }
    dend_20 { pt3dadd( -10.6146, -14.9291, -14.9288, 2.0 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 83/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.3696, -8.75462, -7.51395, 1.33 ) }
    dend_13 { pt3dadd( -4.95708, -10.5958, -6.8466, 1.33 ) }
    dend_13 { pt3dadd( -5.91024, -13.583, -5.76386, 1.33 ) }
    dend_13 { pt3dadd( -6.71819, -16.1152, -4.84606, 1.33 ) }
    dend_13 { pt3dadd( -8.39068, -21.3568, -2.94619, 1.33 ) }
    dend_13 { pt3dadd( -9.40603, -24.539, -1.79279, 1.33 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 89/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -0.609607, -6.78462, -14.2639, 1.33 ) }
    dend_10 { pt3dadd( -0.0623389, -11.9189, -14.8823, 0.67 ) }
    dend_10 { pt3dadd( 0.766521, -19.0492, -16.452, 0.67 ) }
    dend_10 { pt3dadd( 1.15044, -22.1554, -17.2645, 1.33 ) }
    dend_10 { pt3dadd( 1.83313, -26.8358, -18.5373, 0.67 ) }
    dend_10 { pt3dadd( 3.38234, -35.7532, -21.1816, 0.67 ) }
    dend_10 { pt3dadd( 4.22407, -40.3768, -22.5775, 0.67 ) }
    dend_10 { pt3dadd( 4.69091, -44.7292, -24.1535, 0.67 ) }
    dend_10 { pt3dadd( 4.85248, -47.3958, -25.2877, 0.67 ) }
    dend_10 { pt3dadd( 4.96687, -51.588, -27.3351, 0.67 ) }
    dend_10 { pt3dadd( 4.9027, -54.8489, -29.1068, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_10 { pt3dadd( 4.44537, -57.957, -30.8698, 0.67 ) }
    dend_10 { pt3dadd( 2.91735, -62.2337, -33.2983, 0.67 ) }
    dend_10 { pt3dadd( 2.47812, -63.1316, -33.8422, 0.67 ) }
    dend_10 { pt3dadd( 0.0661721, -67.2137, -36.584, 0.67 ) }
    dend_10 { pt3dadd( -1.41986, -69.3939, -38.1791, 0.67 ) }
    dend_10 { pt3dadd( -1.97751, -70.2531, -38.8213, 0.67 ) }
    dend_10 { pt3dadd( -3.38805, -72.7094, -40.6925, 0.67 ) }
    dend_10 { pt3dadd( -5.36016, -77.0121, -43.7506, 0.67 ) }
    dend_10 { pt3dadd( -5.87074, -78.3918, -44.7768, 0.33 ) }
    dend_10 { pt3dadd( -6.24232, -79.9248, -45.9752, 1.33 ) }
    dend_10 { pt3dadd( -6.82182, -83.2377, -48.77, 0.67 ) }
    dend_10 { pt3dadd( -7.00735, -84.7917, -50.3948, 0.33 ) }
    dend_10 { pt3dadd( -7.1077, -85.8028, -51.5873, 0.67 ) }
    dend_10 { pt3dadd( -7.35499, -88.1264, -54.6892, 0.67 ) }
    dend_10 { pt3dadd( -7.44982, -89.4822, -56.6384, 0.67 ) }
    dend_10 { pt3dadd( -7.51494, -91.2731, -59.3982, 1.33 ) }
    dend_10 { pt3dadd( -7.49021, -96.2202, -67.9674, 0.33 ) }
    dend_10 { pt3dadd( -7.46128, -96.637, -68.7538, 0.67 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 18/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 3.0304, -4.04462, 5.81606, 1.33 ) }
    dend_7 { pt3dadd( 2.78579, -8.04782, 9.16856, 1.33 ) }
    dend_7 { pt3dadd( 2.6342, -11.351, 11.8625, 1.33 ) }
    dend_7 { pt3dadd( 2.29202, -16.7099, 16.1398, 1.33 ) }
    dend_7 { pt3dadd( 1.94241, -22.2548, 20.531, 1.33 ) }
    dend_7 { pt3dadd( 1.83207, -24.1023, 22.0011, 1.33 ) }
    dend_7 { pt3dadd( 1.66363, -27.3613, 24.5268, 1.33 ) }
    dend_7 { pt3dadd( 1.61264, -28.3951, 25.428, 1.33 ) }
    dend_7 { pt3dadd( 1.43759, -30.3221, 27.1819, 1.33 ) }
    dend_7 { pt3dadd( 1.28949, -32.298, 28.6778, 1.33 ) }
    dend_7 { pt3dadd( 1.45538, -34.7199, 30.0921, 1.33 ) }
    dend_7 { pt3dadd( 1.4855, -36.6678, 31.2049, 1.33 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 9.43039, 3.50538, 4.45605, 1.33 ) }
    dend_0 { pt3dadd( 12.8533, 2.5285, 5.08352, 1.33 ) }
    dend_0 { pt3dadd( 19.1517, 0.730981, 6.23808, 1.33 ) }
    dend_0 { pt3dadd( 24.5342, -0.805133, 7.22475, 1.33 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 34/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 9.0165, 6.47364, -0.103052, 0.67 ) }
    axon_0 { pt3dadd( 20.5684, 16.042, -0.103052, 0.67 ) }
    axon_0 { pt3dadd( 32.1203, 25.6103, -0.103052, 0.67 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 37/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 18.0608, 26.3702, -10.3122, 0.33 ) }
    dend_47 { pt3dadd( 23.3435, 31.5493, -11.1235, 0.33 ) }
    dend_47 { pt3dadd( 26.4726, 34.9315, -11.6636, 0.67 ) }
    dend_47 { pt3dadd( 29.6863, 38.5647, -12.2421, 0.33 ) }
    dend_47 { pt3dadd( 31.9696, 41.1715, -12.6755, 0.67 ) }
    dend_47 { pt3dadd( 36.4402, 46.3538, -13.5397, 0.67 ) }
    dend_47 { pt3dadd( 38.4971, 48.7428, -13.9215, 0.33 ) }
    dend_47 { pt3dadd( 40.4752, 51.3521, -14.2189, 0.33 ) }
    dend_47 { pt3dadd( 40.7938, 51.7778, -14.2795, 1.33 ) }
    dend_47 { pt3dadd( 44.4465, 56.7548, -14.8991, 0.33 ) }
    dend_47 { pt3dadd( 45.5081, 58.13, -15.0513, 0.67 ) }
    dend_47 { pt3dadd( 47.0322, 60.0501, -15.2188, 0.33 ) }
    dend_47 { pt3dadd( 48.0012, 61.3084, -15.284, 0.67 ) }
    dend_47 { pt3dadd( 51.0881, 65.295, -15.4467, 0.33 ) }
    dend_47 { pt3dadd( 52.7523, 67.5835, -15.5056, 0.67 ) }
    dend_47 { pt3dadd( 54.9812, 70.9683, -15.6554, 0.33 ) }
    dend_47 { pt3dadd( 55.6192, 72.0082, -15.7438, 0.33 ) }
    dend_47 { pt3dadd( 55.9752, 72.6743, -15.8289, 0.67 ) }
    dend_47 { pt3dadd( 56.761, 74.4168, -16.1092, 0.33 ) }
    dend_47 { pt3dadd( 57.2815, 75.8994, -16.385, 0.67 ) }
    dend_47 { pt3dadd( 58.5318, 79.9211, -17.1301, 0.33 ) }
    dend_47 { pt3dadd( 59.0653, 81.7412, -17.4635, 0.67 ) }
    dend_47 { pt3dadd( 59.7009, 83.925, -17.906, 0.33 ) }
    dend_47 { pt3dadd( 60.4145, 86.4718, -18.4508, 0.67 ) }
    dend_47 { pt3dadd( 61.4035, 89.9128, -19.1738, 0.33 ) }
    dend_47 { pt3dadd( 64.289, 99.3161, -21.0448, 0.67 ) }
    dend_47 { pt3dadd( 65.2981, 102.412, -21.6022, 0.33 ) }
    dend_47 { pt3dadd( 66.5542, 105.93, -22.2095, 0.67 ) }
    dend_47 { pt3dadd( 67.1711, 107.513, -22.4675, 0.33 ) }
    dend_47 { pt3dadd( 69.2761, 112.59, -23.2351, 0.67 ) }
    dend_47 { pt3dadd( 70.1372, 114.658, -23.5179, 0.33 ) }
    dend_47 { pt3dadd( 70.623, 115.949, -23.7163, 0.67 ) }
    dend_47 { pt3dadd( 71.8604, 119.359, -24.1483, 0.33 ) }
    dend_47 { pt3dadd( 72.2194, 120.388, -24.2743, 0.67 ) }
    dend_47 { pt3dadd( 73.0742, 122.946, -24.6349, 0.33 ) }
    dend_47 { pt3dadd( 73.8406, 126.275, -25.3064, 0.67 ) }
    dend_47 { pt3dadd( 74.6495, 131.234, -26.5199, 0.33 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 74/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 18.0608, 26.3702, -10.3122, 0.67 ) }
    dend_46 { pt3dadd( 18.8408, 29.3559, -7.82682, 0.67 ) }
    dend_46 { pt3dadd( 19.1061, 31.1524, -6.48159, 1.33 ) }
    dend_46 { pt3dadd( 19.2125, 32.3573, -5.52692, 0.67 ) }
    dend_46 { pt3dadd( 19.3923, 33.7765, -4.28812, 0.67 ) }
    dend_46 { pt3dadd( 19.5801, 35.0444, -3.09082, 0.67 ) }
    dend_46 { pt3dadd( 19.8586, 36.8623, -1.29155, 0.67 ) }
    dend_46 { pt3dadd( 20.0292, 37.9198, -0.237519, 1.33 ) }
    dend_46 { pt3dadd( 20.2096, 39.6599, 1.74917, 0.67 ) }
    dend_46 { pt3dadd( 20.2486, 40.9772, 3.44614, 0.67 ) }
    dend_46 { pt3dadd( 20.2405, 41.6112, 4.33507, 0.67 ) }
    dend_46 { pt3dadd( 20.208, 42.8123, 6.14097, 0.33 ) }
    dend_46 { pt3dadd( 20.1889, 43.1611, 6.6511, 1.33 ) }
    dend_46 { pt3dadd( 19.9124, 45.0312, 9.07862, 0.33 ) }
    dend_46 { pt3dadd( 19.7259, 45.7611, 9.8571, 1.33 ) }
    dend_46 { pt3dadd( 19.0473, 47.7137, 11.6427, 0.67 ) }
    dend_46 { pt3dadd( 18.8414, 48.3084, 12.112, 0.33 ) }
    dend_46 { pt3dadd( 18.6245, 48.957, 12.5688, 0.67 ) }
    dend_46 { pt3dadd( 18.1234, 50.6727, 13.6859, 0.33 ) }
    dend_46 { pt3dadd( 18.0023, 51.1975, 13.9811, 1.33 ) }
    dend_46 { pt3dadd( 17.7008, 52.8042, 14.8544, 0.67 ) }
    dend_46 { pt3dadd( 17.4737, 54.6733, 15.747, 0.67 ) }
    dend_46 { pt3dadd( 17.4408, 55.7199, 16.2227, 1.33 ) }
    dend_46 { pt3dadd( 17.5162, 57.7417, 17.072, 0.67 ) }
    dend_46 { pt3dadd( 17.5618, 58.1442, 17.2287, 1.33 ) }
    dend_46 { pt3dadd( 17.7885, 59.1425, 17.609, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_46 { pt3dadd( 18.3522, 60.6688, 18.2498, 0.67 ) }
    dend_46 { pt3dadd( 18.9583, 61.9824, 18.8307, 0.33 ) }
    dend_46 { pt3dadd( 19.2321, 62.5372, 19.0874, 1.33 ) }
    dend_46 { pt3dadd( 20.0551, 64.075, 19.8185, 0.33 ) }
    dend_46 { pt3dadd( 20.608, 65.0434, 20.4335, 2.0 ) }
    dend_46 { pt3dadd( 22.1134, 67.0587, 21.8922, 0.67 ) }
    dend_46 { pt3dadd( 22.5237, 67.5903, 22.3084, 0.33 ) }
    dend_46 { pt3dadd( 23.2648, 68.5102, 23.0665, 2.0 ) }
    dend_46 { pt3dadd( 24.3369, 69.7811, 24.1605, 0.67 ) }
    dend_46 { pt3dadd( 26.4983, 72.2353, 26.3737, 1.33 ) }
    dend_46 { pt3dadd( 29.1091, 75.1562, 29.1061, 0.67 ) }
    dend_46 { pt3dadd( 30.6463, 80.2319, 32.939, 0.67 ) }
    dend_46 { pt3dadd( 32.7899, 85.5614, 36.0722, 0.67 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 13/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 3.72204, 50.5958, -15.8429, 0.33 ) }
    dend_43 { pt3dadd( 2.52805, 54.3434, -13.7065, 0.33 ) }
    dend_43 { pt3dadd( 2.31723, 55.0402, -13.4269, 0.67 ) }
    dend_43 { pt3dadd( 0.841385, 60.9656, -11.8105, 0.67 ) }
    dend_43 { pt3dadd( -0.691627, 67.3651, -10.5015, 0.33 ) }
    dend_43 { pt3dadd( -1.8043, 72.1982, -9.42021, 0.33 ) }
    dend_43 { pt3dadd( -2.34908, 74.8356, -8.82122, 0.67 ) }
    dend_43 { pt3dadd( -3.28019, 79.5467, -7.629, 0.67 ) }
    dend_43 { pt3dadd( -4.24363, 85.1948, -6.46151, 0.67 ) }
    dend_43 { pt3dadd( -4.74387, 88.4694, -6.0137, 0.67 ) }
    dend_43 { pt3dadd( -5.37685, 93.8451, -5.43114, 0.33 ) }
    dend_43 { pt3dadd( -5.6712, 97.0301, -4.99524, 0.67 ) }
    dend_43 { pt3dadd( -6.02444, 100.578, -4.41917, 0.33 ) }
    dend_43 { pt3dadd( -6.31345, 104.184, -3.78324, 0.67 ) }
    dend_43 { pt3dadd( -6.55084, 107.453, -3.32624, 0.33 ) }
    dend_43 { pt3dadd( -6.72229, 111.635, -2.93686, 0.67 ) }
    dend_43 { pt3dadd( -6.76031, 113.726, -2.86788, 0.33 ) }
    dend_43 { pt3dadd( -6.77571, 115.678, -2.81076, 0.33 ) }
    dend_43 { pt3dadd( -6.55059, 121.144, -2.79118, 0.67 ) }
    dend_43 { pt3dadd( -6.23239, 125.523, -2.75003, 0.33 ) }
    dend_43 { pt3dadd( -6.11828, 126.615, -2.75574, 0.67 ) }
    dend_43 { pt3dadd( -5.95102, 128.719, -2.80292, 0.33 ) }
    dend_43 { pt3dadd( -5.84155, 130.122, -2.84588, 0.67 ) }
    dend_43 { pt3dadd( -5.56511, 133.431, -2.94955, 0.33 ) }
    dend_43 { pt3dadd( -5.53649, 133.829, -2.96339, 0.67 ) }
    dend_43 { pt3dadd( -5.3117, 137.792, -3.09804, 0.33 ) }
    dend_43 { pt3dadd( -5.28858, 139.448, -3.13419, 0.33 ) }
    dend_43 { pt3dadd( -5.4533, 145.302, -3.17125, 0.33 ) }
    dend_43 { pt3dadd( -5.5366, 146.499, -3.1158, 0.67 ) }
    dend_43 { pt3dadd( -5.77725, 148.447, -2.89231, 0.33 ) }
    dend_43 { pt3dadd( -5.9057, 149.302, -2.76725, 0.67 ) }
    dend_43 { pt3dadd( -6.18543, 150.874, -2.35707, 0.33 ) }
    dend_43 { pt3dadd( -6.44882, 152.137, -1.77751, 0.67 ) }
    dend_43 { pt3dadd( -7.31904, 154.975, 0.0938456, 0.33 ) }
    dend_43 { pt3dadd( -7.69617, 156.025, 0.882947, 0.67 ) }
    dend_43 { pt3dadd( -8.2873, 157.571, 2.14104, 0.33 ) }
    dend_43 { pt3dadd( -9.27613, 160.212, 4.28031, 0.67 ) }
    dend_43 { pt3dadd( -10.519, 163.624, 6.95127, 0.33 ) }
    dend_43 { pt3dadd( -10.868, 164.581, 7.65013, 0.33 ) }
    dend_43 { pt3dadd( -10.977, 164.902, 7.83757, 0.67 ) }
    dend_43 { pt3dadd( -11.5885, 167.142, 8.7226, 0.33 ) }
    dend_43 { pt3dadd( -12.1119, 169.505, 9.4286, 0.67 ) }
    dend_43 { pt3dadd( -12.4746, 171.374, 9.99361, 0.33 ) }
    dend_43 { pt3dadd( -12.5949, 172.124, 10.1593, 0.67 ) }
    dend_43 { pt3dadd( -12.9623, 174.988, 10.7764, 0.33 ) }
    dend_43 { pt3dadd( -13.1852, 176.898, 11.217, 0.67 ) }
    dend_43 { pt3dadd( -13.5678, 180.837, 11.9594, 0.33 ) }
    dend_43 { pt3dadd( -13.9319, 184.765, 12.718, 0.33 ) }
    dend_43 { pt3dadd( -14.3528, 188.936, 13.4728, 0.67 ) }
    dend_43 { pt3dadd( -14.5726, 190.847, 13.7399, 0.33 ) }
    dend_43 { pt3dadd( -14.5726, 190.847, 13.7399, 0.67 ) }
    dend_43 { pt3dadd( -15.0279, 194.629, 13.0725, 0.33 ) }
    dend_43 { pt3dadd( -15.0363, 196.255, 12.0903, 0.67 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 66/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 3.72204, 50.5958, -15.8429, 0.67 ) }
    dend_40 { pt3dadd( 4.26805, 57.4417, -19.1328, 0.67 ) }
    dend_40 { pt3dadd( 5.11378, 61.4765, -21.0873, 0.67 ) }
    dend_40 { pt3dadd( 5.50085, 62.6926, -21.7837, 0.33 ) }
    dend_40 { pt3dadd( 6.60758, 66.0164, -23.7581, 0.67 ) }
    dend_40 { pt3dadd( 8.87036, 72.2859, -27.6115, 0.67 ) }
    dend_40 { pt3dadd( 9.45548, 73.7251, -28.4936, 0.33 ) }
    dend_40 { pt3dadd( 11.4879, 78.3137, -31.3568, 0.67 ) }
    dend_40 { pt3dadd( 13.0739, 82.199, -34.1489, 0.67 ) }
    dend_40 { pt3dadd( 14.1213, 84.9534, -36.2095, 0.67 ) }
    dend_40 { pt3dadd( 15.0347, 87.582, -38.3306, 0.67 ) }
    dend_40 { pt3dadd( 16.0902, 91.1186, -41.3071, 0.67 ) }
    dend_40 { pt3dadd( 17.0235, 96.7744, -46.2462, 0.67 ) }
    dend_40 { pt3dadd( 17.1417, 100.172, -49.1334, 0.33 ) }
    dend_40 { pt3dadd( 17.0975, 101.458, -50.1742, 0.67 ) }
    dend_40 { pt3dadd( 16.7214, 104.965, -53.0995, 0.33 ) }
    dend_40 { pt3dadd( 16.2059, 107.506, -55.1395, 0.67 ) }
    dend_40 { pt3dadd( 15.4917, 109.955, -57.1038, 0.33 ) }
    dend_40 { pt3dadd( 14.7301, 112.217, -58.7696, 0.33 ) }
    dend_40 { pt3dadd( 14.1343, 113.967, -59.9016, 0.67 ) }
    dend_40 { pt3dadd( 13.0871, 117.166, -61.8718, 0.33 ) }
    dend_40 { pt3dadd( 12.2926, 119.666, -63.3035, 0.67 ) }
    dend_40 { pt3dadd( 11.5551, 122.339, -64.7519, 0.33 ) }
    dend_40 { pt3dadd( 11.0331, 124.215, -65.6656, 0.33 ) }
    dend_40 { pt3dadd( 10.1989, 127.289, -67.3546, 0.33 ) }
    dend_40 { pt3dadd( 9.76049, 129.138, -68.3818, 0.67 ) }
    dend_40 { pt3dadd( 9.17241, 132.351, -70.2219, 0.33 ) }
    dend_40 { pt3dadd( 8.62143, 135.784, -72.2648, 0.33 ) }
    dend_40 { pt3dadd( 8.40665, 137.859, -73.5006, 0.67 ) }
    dend_40 { pt3dadd( 8.0932, 143.019, -76.6667, 0.33 ) }
    dend_40 { pt3dadd( 8.03391, 144.728, -77.7717, 0.67 ) }
    dend_40 { pt3dadd( 8.03974, 148.181, -79.9232, 0.33 ) }
    dend_40 { pt3dadd( 8.0623, 148.656, -80.2289, 0.67 ) }
    dend_40 { pt3dadd( 8.1999, 152.034, -82.312, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_40 { pt3dadd( 8.23142, 153.475, -83.118, 0.67 ) }
    dend_40 { pt3dadd( 8.21745, 156.582, -84.5116, 0.33 ) }
    dend_40 { pt3dadd( 8.2, 157.765, -84.9926, 0.67 ) }
    dend_40 { pt3dadd( 8.13209, 161.779, -86.4046, 0.33 ) }
    dend_40 { pt3dadd( 8.14411, 165.383, -87.6668, 0.67 ) }
    dend_40 { pt3dadd( 8.18447, 170.601, -89.4104, 0.33 ) }
    dend_40 { pt3dadd( 8.22827, 172.875, -90.2489, 0.67 ) }
    dend_40 { pt3dadd( 8.29969, 176.36, -91.4904, 0.33 ) }
    dend_40 { pt3dadd( 8.32473, 177.208, -91.8036, 0.67 ) }
    dend_40 { pt3dadd( 8.55164, 181.973, -93.5628, 0.33 ) }
    dend_40 { pt3dadd( 8.8811, 186.13, -95.4135, 0.33 ) }
    dend_40 { pt3dadd( 9.16599, 188.93, -96.5773, 0.67 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 12/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -91.542, -43.1725, 89.6064, 0.33 ) }
    dend_37 { pt3dadd( -98.3092, -45.7552, 96.4573, 0.33 ) }
    dend_37 { pt3dadd( -103.935, -49.472, 103.802, 0.33 ) }
    dend_37 { pt3dadd( -108.575, -51.3342, 112.427, 0.33 ) }
    dend_37 { pt3dadd( -114.164, -51.9906, 120.658, 0.33 ) }
    dend_37 { pt3dadd( -118.1, -50.9907, 129.763, 0.33 ) }
    dend_37 { pt3dadd( -121.977, -51.3943, 138.939, 0.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 19/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -91.542, -43.1725, 89.6064, 0.33 ) }
    dend_36 { pt3dadd( -97.737, -46.5385, 96.5938, 0.33 ) }
    dend_36 { pt3dadd( -103.855, -49.4252, 103.858, 0.33 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 22/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -10.6146, -14.9291, -14.9288, 0.67 ) }
    dend_24 { pt3dadd( -13.5846, -18.2675, -16.9083, 0.67 ) }
    dend_24 { pt3dadd( -14.2765, -19.0451, -17.3694, 0.67 ) }
    dend_24 { pt3dadd( -16.7194, -21.7909, -18.9975, 0.67 ) }
    dend_24 { pt3dadd( -19.1844, -24.5615, -20.6404, 0.67 ) }
    dend_24 { pt3dadd( -20.2107, -25.715, -21.3243, 1.33 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 28/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -10.6146, -14.9291, -14.9288, 1.33 ) }
    dend_21 { pt3dadd( -11.4038, -12.4943, -19.9484, 1.33 ) }
    dend_21 { pt3dadd( -12.4129, -11.2004, -24.0069, 0.67 ) }
    dend_21 { pt3dadd( -14.114, -8.95802, -30.7641, 0.67 ) }
    dend_21 { pt3dadd( -16.4088, -5.89479, -39.2599, 0.67 ) }
    dend_21 { pt3dadd( -16.9705, -5.20587, -41.1244, 0.67 ) }
    dend_21 { pt3dadd( -20.0535, -1.81827, -50.9695, 0.67 ) }
    dend_21 { pt3dadd( -21.9871, 0.0266705, -57.2935, 0.67 ) }
    dend_21 { pt3dadd( -24.7291, 2.3154, -66.5293, 0.67 ) }
    dend_21 { pt3dadd( -25.9628, 3.11843, -70.7635, 0.67 ) }
    dend_21 { pt3dadd( -26.8366, 3.60278, -73.162, 0.67 ) }
    dend_21 { pt3dadd( -28.1357, 4.49187, -76.8569, 0.67 ) }
    dend_21 { pt3dadd( -28.7639, 5.15639, -79.1944, 0.67 ) }
    dend_21 { pt3dadd( -30.4115, 6.88954, -86.2323, 0.67 ) }
    dend_21 { pt3dadd( -31.5031, 8.05313, -91.3322, 0.67 ) }
    dend_21 { pt3dadd( -31.9972, 8.84724, -94.3533, 0.67 ) }
    dend_21 { pt3dadd( -32.7953, 10.7884, -100.726, 0.67 ) }
    dend_21 { pt3dadd( -33.86, 13.5894, -109.063, 0.67 ) }
    dend_21 { pt3dadd( -34.7627, 15.9948, -116.005, 0.67 ) }
    dend_21 { pt3dadd( -34.9458, 16.6863, -117.943, 0.67 ) }
    dend_21 { pt3dadd( -35.2683, 18.929, -123.616, 0.67 ) }
    dend_21 { pt3dadd( -35.4075, 21.4977, -130.512, 0.67 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 50/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -9.40603, -24.539, -1.79279, 0.67 ) }
    dend_15 { pt3dadd( -14.304, -29.5891, -3.28737, 0.67 ) }
    dend_15 { pt3dadd( -15.9847, -31.2991, -3.7613, 0.67 ) }
    dend_15 { pt3dadd( -19.7865, -35.3065, -5.00624, 0.67 ) }
    dend_15 { pt3dadd( -21.9068, -37.5816, -5.7925, 0.67 ) }
    dend_15 { pt3dadd( -25.642, -41.2367, -7.28458, 0.67 ) }
    dend_15 { pt3dadd( -27.4332, -42.8614, -8.03584, 0.67 ) }
    dend_15 { pt3dadd( -30.6953, -45.2814, -9.45458, 0.67 ) }
    dend_15 { pt3dadd( -32.6293, -46.5955, -10.7567, 0.67 ) }
    dend_15 { pt3dadd( -33.5779, -47.1048, -11.9312, 0.67 ) }
    dend_15 { pt3dadd( -35.9455, -48.1858, -16.0306, 0.67 ) }
    dend_15 { pt3dadd( -36.7522, -48.5814, -17.7431, 0.67 ) }
    dend_15 { pt3dadd( -38.7857, -50.0632, -22.4206, 0.67 ) }
    dend_15 { pt3dadd( -40.157, -51.2174, -25.5667, 0.67 ) }
    dend_15 { pt3dadd( -42.317, -53.42, -30.1422, 0.67 ) }
    dend_15 { pt3dadd( -43.2531, -54.6252, -32.1539, 0.67 ) }
    dend_15 { pt3dadd( -44.5828, -56.924, -35.1785, 0.67 ) }
    dend_15 { pt3dadd( -46.1862, -60.0024, -38.3658, 0.67 ) }
    dend_15 { pt3dadd( -47.3058, -61.8835, -39.8548, 0.67 ) }
    dend_15 { pt3dadd( -48.6928, -64.0664, -41.3535, 0.67 ) }
    dend_15 { pt3dadd( -49.9763, -66.0877, -42.6419, 0.67 ) }
    dend_15 { pt3dadd( -51.0102, -67.7845, -43.7885, 0.67 ) }
    dend_15 { pt3dadd( -52.8019, -70.7293, -45.8064, 0.67 ) }
    dend_15 { pt3dadd( -56.1669, -75.7904, -49.4496, 0.67 ) }
    dend_15 { pt3dadd( -57.193, -77.3027, -50.5866, 0.67 ) }
    dend_15 { pt3dadd( -58.3561, -78.8826, -51.9944, 0.67 ) }
    dend_15 { pt3dadd( -59.8506, -80.7069, -53.9373, 0.67 ) }
    dend_15 { pt3dadd( -61.6709, -82.7886, -56.6815, 0.67 ) }
    dend_15 { pt3dadd( -62.8335, -84.1479, -58.9038, 0.67 ) }
    dend_15 { pt3dadd( -63.8799, -85.6375, -61.5109, 0.67 ) }
    dend_15 { pt3dadd( -65.0676, -87.1869, -64.3175, 0.67 ) }
    dend_15 { pt3dadd( -66.9417, -89.3699, -68.6529, 0.67 ) }
    dend_15 { pt3dadd( -67.68, -90.1166, -70.3257, 1.33 ) }
    dend_15 { pt3dadd( -68.9663, -91.452, -73.2121, 0.67 ) }
    dend_15 { pt3dadd( -70.1138, -92.7161, -75.4386, 0.67 ) }
    dend_15 { pt3dadd( -70.7752, -93.3896, -76.436, 0.67 ) }
    dend_15 { pt3dadd( -72.1592, -94.5816, -78.0001, 0.33 ) }
    dend_15 { pt3dadd( -72.7361, -94.9516, -78.5206, 0.67 ) }
    dend_15 { pt3dadd( -75.2571, -96.4202, -80.3271, 0.67 ) }
    dend_15 { pt3dadd( -76.4887, -97.1245, -81.0493, 0.33 ) }
    dend_15 { pt3dadd( -77.9953, -97.9591, -81.8545, 0.67 ) }
    dend_15 { pt3dadd( -80.0579, -99.2954, -82.9698, 0.33 ) }
    dend_15 { pt3dadd( -80.7957, -99.8526, -83.3467, 0.67 ) }
    dend_15 { pt3dadd( -81.8335, -100.648, -83.8869, 0.33 ) }
    dend_15 { pt3dadd( -82.2658, -100.938, -84.0779, 1.33 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 95/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -9.40603, -24.539, -1.79279, 0.67 ) }
    dend_14 { pt3dadd( -8.51819, -25.5712, 0.0574369, 0.67 ) }
    dend_14 { pt3dadd( -7.72844, -26.4435, 1.63953, 0.67 ) }
    dend_14 { pt3dadd( -5.21562, -29.1466, 5.91185, 0.67 ) }
    dend_14 { pt3dadd( -3.59733, -30.8229, 8.31833, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_14 { pt3dadd( -2.13465, -32.4441, 10.3958, 0.67 ) }
    dend_14 { pt3dadd( -0.508567, -34.2097, 12.6555, 0.67 ) }
    dend_14 { pt3dadd( 0.187297, -34.9543, 13.5839, 0.67 ) }
    dend_14 { pt3dadd( 2.63126, -37.7057, 16.5839, 0.67 ) }
    dend_14 { pt3dadd( 4.3593, -39.6223, 18.2905, 0.67 ) }
    dend_14 { pt3dadd( 5.5497, -41.1206, 19.3859, 0.67 ) }
    dend_14 { pt3dadd( 8.13227, -44.9542, 21.7874, 0.67 ) }
    dend_14 { pt3dadd( 10.3232, -48.3382, 23.7285, 0.67 ) }
    dend_14 { pt3dadd( 11.7087, -50.3874, 25.0154, 0.67 ) }
    dend_14 { pt3dadd( 12.928, -52.3205, 26.2446, 0.67 ) }
    dend_14 { pt3dadd( 14.2583, -54.6347, 27.7585, 0.67 ) }
    dend_14 { pt3dadd( 15.3348, -56.4963, 28.9764, 0.67 ) }
    dend_14 { pt3dadd( 17.0973, -59.9047, 31.0356, 0.67 ) }
    dend_14 { pt3dadd( 18.5516, -62.7276, 33.0023, 0.67 ) }
    dend_14 { pt3dadd( 19.5377, -64.5185, 34.4892, 0.67 ) }
    dend_14 { pt3dadd( 21.0509, -67.3266, 37.131, 0.33 ) }
    dend_14 { pt3dadd( 24.8691, -72.4807, 42.2602, 0.33 ) }
    dend_14 { pt3dadd( 28.6684, -77.1969, 47.8076, 0.33 ) }
    dend_14 { pt3dadd( 33.4335, -80.8238, 53.4281, 0.33 ) }
    dend_14 { pt3dadd( 38.3784, -83.0097, 59.6105, 0.33 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 20/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -7.46128, -96.637, -68.7538, 0.67 ) }
    dend_12 { pt3dadd( -7.1124, -99.4786, -66.2315, 0.67 ) }
    dend_12 { pt3dadd( -6.90016, -102.966, -63.0497, 0.67 ) }
    dend_12 { pt3dadd( -6.85809, -104.927, -61.3465, 0.67 ) }
    dend_12 { pt3dadd( -6.74417, -113.42, -54.4189, 0.33 ) }
    dend_12 { pt3dadd( -6.75749, -115.605, -52.7911, 0.67 ) }
    dend_12 { pt3dadd( -6.84613, -119.03, -50.4923, 0.33 ) }
    dend_12 { pt3dadd( -6.91416, -120.794, -49.2833, 0.33 ) }
    dend_12 { pt3dadd( -7.01039, -122.702, -48.0555, 0.33 ) }
    dend_12 { pt3dadd( -7.02312, -124.381, -47.2705, 0.67 ) }
    dend_12 { pt3dadd( -7.03825, -127.275, -46.7007, 0.67 ) }
    dend_12 { pt3dadd( -6.90468, -130.125, -46.1799, 0.33 ) }
    dend_12 { pt3dadd( -6.63753, -132.794, -45.8629, 0.33 ) }
    dend_12 { pt3dadd( -6.56368, -133.233, -45.8011, 0.67 ) }
    dend_12 { pt3dadd( -6.27741, -134.65, -45.534, 0.33 ) }
    dend_12 { pt3dadd( -5.7458, -136.938, -44.9857, 0.67 ) }
    dend_12 { pt3dadd( -4.95263, -138.982, -44.2927, 0.33 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 37/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -7.46128, -96.637, -68.7538, 0.67 ) }
    dend_11 { pt3dadd( -7.19853, -99.9206, -68.426, 0.67 ) }
    dend_11 { pt3dadd( -6.71948, -104.872, -67.9028, 0.67 ) }
    dend_11 { pt3dadd( -6.53344, -107.161, -67.6727, 0.33 ) }
    dend_11 { pt3dadd( -6.50639, -107.478, -67.6481, 0.67 ) }
    dend_11 { pt3dadd( -6.25981, -110.81, -67.4472, 0.33 ) }
    dend_11 { pt3dadd( -6.22323, -111.526, -67.4432, 0.67 ) }
    dend_11 { pt3dadd( -6.17118, -113.83, -67.5948, 0.33 ) }
    dend_11 { pt3dadd( -6.26678, -114.959, -67.7687, 0.67 ) }
    dend_11 { pt3dadd( -6.59688, -117.399, -68.2073, 0.33 ) }
    dend_11 { pt3dadd( -6.70342, -118.378, -68.4572, 0.67 ) }
    dend_11 { pt3dadd( -7.07185, -121.313, -69.3233, 0.33 ) }
    dend_11 { pt3dadd( -7.41569, -123.724, -70.0872, 0.67 ) }
    dend_11 { pt3dadd( -7.87906, -126.727, -71.1193, 0.33 ) }
    dend_11 { pt3dadd( -8.18135, -128.897, -71.8615, 0.33 ) }
    dend_11 { pt3dadd( -8.75625, -132.581, -73.1099, 0.67 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 53/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 1.4855, -36.6678, 31.2049, 0.67 ) }
    dend_9 { pt3dadd( 1.79732, -38.6669, 32.0082, 0.67 ) }
    dend_9 { pt3dadd( 2.45556, -42.3734, 33.1684, 0.67 ) }
    dend_9 { pt3dadd( 2.68088, -43.1651, 33.3888, 0.67 ) }
    dend_9 { pt3dadd( 3.23265, -45.003, 33.6901, 0.67 ) }
    dend_9 { pt3dadd( 4.20774, -48.4776, 33.9205, 0.67 ) }
    dend_9 { pt3dadd( 4.94441, -50.8052, 33.9839, 0.67 ) }
    dend_9 { pt3dadd( 5.60558, -52.6267, 33.8937, 0.67 ) }
    dend_9 { pt3dadd( 7.04803, -56.1922, 33.5074, 1.33 ) }
    dend_9 { pt3dadd( 8.5204, -59.4127, 33.2306, 1.33 ) }
    dend_9 { pt3dadd( 10.5775, -63.5632, 33.0605, 1.33 ) }
    dend_9 { pt3dadd( 11.9339, -66.2497, 33.0503, 1.33 ) }
    dend_9 { pt3dadd( 13.2152, -68.7035, 33.1885, 1.33 ) }
    dend_9 { pt3dadd( 14.8635, -71.7729, 33.5818, 0.67 ) }
    dend_9 { pt3dadd( 15.9775, -73.7625, 34.1821, 0.67 ) }
    dend_9 { pt3dadd( 17.2757, -75.648, 35.158, 0.67 ) }
    dend_9 { pt3dadd( 17.8557, -76.3944, 35.6699, 1.33 ) }
    dend_9 { pt3dadd( 18.8705, -77.6317, 36.6054, 0.67 ) }
    dend_9 { pt3dadd( 19.8503, -78.673, 37.4482, 0.67 ) }
    dend_9 { pt3dadd( 22.3263, -81.0551, 39.1613, 0.67 ) }
    dend_9 { pt3dadd( 24.1454, -82.6408, 39.9829, 0.67 ) }
    dend_9 { pt3dadd( 25.7715, -83.991, 40.5034, 0.67 ) }
    dend_9 { pt3dadd( 27.5907, -85.6239, 40.9736, 0.67 ) }
    dend_9 { pt3dadd( 28.3992, -86.4197, 41.1271, 1.33 ) }
    dend_9 { pt3dadd( 29.7749, -87.9284, 41.3092, 0.67 ) }
    dend_9 { pt3dadd( 31.922, -90.3586, 41.4438, 0.67 ) }
    dend_9 { pt3dadd( 33.0947, -91.7389, 41.5648, 1.33 ) }
    dend_9 { pt3dadd( 34.93, -93.8544, 41.7544, 1.33 ) }
    dend_9 { pt3dadd( 35.8814, -95.0423, 41.8522, 0.33 ) }
    dend_9 { pt3dadd( 36.4082, -95.7121, 41.9063, 1.33 ) }
    dend_9 { pt3dadd( 37.5093, -97.1373, 42.0192, 0.67 ) }
    dend_9 { pt3dadd( 37.8748, -97.63, 42.0565, 0.67 ) }
    dend_9 { pt3dadd( 38.7302, -98.6563, 42.1447, 0.33 ) }
    dend_9 { pt3dadd( 40.1355, -100.152, 42.2906, 0.67 ) }
    dend_9 { pt3dadd( 41.2304, -101.272, 42.3606, 0.33 ) }
    dend_9 { pt3dadd( 41.647, -101.698, 42.3847, 1.33 ) }
    dend_9 { pt3dadd( 42.7187, -102.846, 42.4354, 0.33 ) }
    dend_9 { pt3dadd( 43.4822, -103.663, 42.4648, 0.67 ) }
    dend_9 { pt3dadd( 44.4568, -104.581, 42.4879, 0.33 ) }
    dend_9 { pt3dadd( 45.3516, -105.234, 42.4902, 1.33 ) }
    dend_9 { pt3dadd( 48.9965, -112.454, 42.2984, 1.33 ) }
    dend_9 { pt3dadd( 52.6165, -119.59, 41.0994, 1.33 ) }
    dend_9 { pt3dadd( 57.6793, -125.709, 39.5565, 1.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 96/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 1.4855, -36.6678, 31.2049, 0.67 ) }
    dend_8 { pt3dadd( 6.27445, -42.8565, 35.8371, 0.67 ) }
    dend_8 { pt3dadd( 9.64058, -47.488, 38.9571, 0.67 ) }
    dend_8 { pt3dadd( 10.9329, -49.2214, 40.2782, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_8 { pt3dadd( 11.9993, -50.6782, 41.3711, 0.67 ) }
    dend_8 { pt3dadd( 13.569, -52.7874, 43.0242, 0.67 ) }
    dend_8 { pt3dadd( 14.4832, -54.0158, 43.9869, 0.33 ) }
    dend_8 { pt3dadd( 15.9907, -56.1943, 45.523, 0.67 ) }
    dend_8 { pt3dadd( 18.8137, -59.7747, 48.5214, 0.33 ) }
    dend_8 { pt3dadd( 20.5441, -62.168, 50.6482, 0.67 ) }
    dend_8 { pt3dadd( 22.5327, -64.9309, 53.2468, 0.33 ) }
    dend_8 { pt3dadd( 27.4306, -72.5859, 59.2066, 0.33 ) }
    dend_8 { pt3dadd( 32.8376, -80.7148, 63.9807, 0.33 ) }
    dend_8 { pt3dadd( 37.7531, -88.0996, 70.2584, 0.33 ) }
    dend_8 { pt3dadd( 44.062, -94.2307, 76.6392, 0.33 ) }
    dend_8 { pt3dadd( 49.6107, -101.415, 82.6151, 0.33 ) }
    dend_8 { pt3dadd( 53.8759, -108.37, 89.7948, 0.33 ) }
    dend_8 { pt3dadd( 58.4952, -116.845, 94.7877, 0.33 ) }
    dend_8 { pt3dadd( 62.8181, -125.545, 99.6605, 0.33 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 15/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 24.5342, -0.805133, 7.22475, 0.67 ) }
    dend_6 { pt3dadd( 25.6024, -0.478093, 9.23914, 0.67 ) }
    dend_6 { pt3dadd( 26.3964, -0.248738, 10.8669, 0.67 ) }
    dend_6 { pt3dadd( 29.6217, 0.816014, 17.8132, 0.67 ) }
    dend_6 { pt3dadd( 31.0397, 1.28251, 20.8908, 0.67 ) }
    dend_6 { pt3dadd( 32.3266, 1.70584, 23.6836, 0.67 ) }
    dend_6 { pt3dadd( 37.4909, 3.40477, 34.8917, 0.67 ) }
    dend_6 { pt3dadd( 39.0892, 3.93084, 38.6092, 0.67 ) }
    dend_6 { pt3dadd( 40.4515, 4.47227, 42.0109, 0.67 ) }
    dend_6 { pt3dadd( 41.0287, 4.7226, 43.5712, 0.67 ) }
    dend_6 { pt3dadd( 45.3333, 4.38464, 50.9489, 0.67 ) }
    dend_6 { pt3dadd( 49.1451, 4.73607, 58.5923, 0.67 ) }
    dend_6 { pt3dadd( 51.9982, 3.71354, 66.5852, 0.67 ) }
    dend_6 { pt3dadd( 54.8072, 2.90264, 74.6181, 0.67 ) }
    dend_6 { pt3dadd( 58.2687, 2.82326, 82.4338, 0.67 ) }
    dend_6 { pt3dadd( 62.0108, 4.26869, 89.9824, 0.67 ) }
    dend_6 { pt3dadd( 67.5115, 5.59378, 96.3902, 0.67 ) }
    dend_6 { pt3dadd( 73.4849, 8.13503, 101.953, 0.67 ) }
    dend_6 { pt3dadd( 79.7504, 10.7563, 107.143, 0.67 ) }
    dend_6 { pt3dadd( 86.0307, 14.3833, 111.669, 0.67 ) }
    dend_6 { pt3dadd( 91.7378, 18.4682, 116.549, 0.67 ) }
    dend_6 { pt3dadd( 97.2962, 21.7442, 122.157, 0.67 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 37/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 24.5342, -0.805133, 7.22475, 0.67 ) }
    dend_1 { pt3dadd( 24.886, -1.04093, 7.24473, 0.67 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 39/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 32.1203, 25.6103, -0.103052, 0.688916 ) }
    axon_1 { pt3dadd( 43.6723, 35.1786, -0.103052, 0.688916 ) }
    axon_1 { pt3dadd( 55.2242, 44.747, -0.103052, 0.688916 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 42/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 9.16599, 188.93, -96.5773, 0.67 ) }
    dend_42 { pt3dadd( 6.49585, 190.704, -96.7517, 0.67 ) }
    dend_42 { pt3dadd( 4.3048, 192.14, -96.9164, 0.33 ) }
    dend_42 { pt3dadd( 2.71608, 193.186, -97.0557, 0.67 ) }
    dend_42 { pt3dadd( -1.88223, 196.258, -97.4958, 0.33 ) }
    dend_42 { pt3dadd( -3.66794, 197.37, -97.693, 0.67 ) }
    dend_42 { pt3dadd( -7.42348, 199.564, -98.2956, 0.33 ) }
    dend_42 { pt3dadd( -8.11832, 199.961, -98.4239, 0.67 ) }
    dend_42 { pt3dadd( -10.8047, 201.461, -98.9751, 0.33 ) }
    dend_42 { pt3dadd( -12.1221, 202.184, -99.3007, 0.67 ) }
    dend_42 { pt3dadd( -16.91, 204.544, -100.625, 0.33 ) }
    dend_42 { pt3dadd( -19.6376, 205.735, -101.456, 0.67 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 54/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 9.16599, 188.93, -96.5773, 0.33 ) }
    dend_41 { pt3dadd( 6.52359, 195.915, -100.07, 0.33 ) }
    dend_41 { pt3dadd( 5.63434, 198.265, -101.246, 0.33 ) }
    dend_41 { pt3dadd( 5.01821, 199.894, -102.06, 0.67 ) }
    dend_41 { pt3dadd( 3.40927, 204.147, -104.187, 0.33 ) }
    dend_41 { pt3dadd( 3.21025, 204.673, -104.45, 0.67 ) }
    // Section: dend_34, id: dend_34, parent: dend_24 (entry count 60/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -20.2107, -25.715, -21.3243, 0.33 ) }
    dend_34 { pt3dadd( -21.4186, -28.6127, -21.7676, 0.33 ) }
    dend_34 { pt3dadd( -23.1096, -32.3051, -21.9916, 0.67 ) }
    dend_34 { pt3dadd( -24.9844, -36.165, -22.0036, 0.33 ) }
    dend_34 { pt3dadd( -28.263, -42.7038, -21.4592, 0.67 ) }
    dend_34 { pt3dadd( -29.97, -46.0683, -21.0026, 0.33 ) }
    dend_34 { pt3dadd( -30.2997, -46.7015, -20.8799, 0.67 ) }
    dend_34 { pt3dadd( -32.6605, -50.8958, -19.7899, 0.33 ) }
    dend_34 { pt3dadd( -33.2436, -51.8196, -19.4373, 0.67 ) }
    dend_34 { pt3dadd( -35.4918, -55.2827, -17.6602, 0.33 ) }
    dend_34 { pt3dadd( -36.0597, -56.0691, -17.1685, 0.67 ) }
    dend_34 { pt3dadd( -38.4048, -59.3044, -15.2462, 0.33 ) }
    dend_34 { pt3dadd( -39.275, -60.5437, -14.6593, 0.67 ) }
    dend_34 { pt3dadd( -40.6242, -62.6256, -14.1875, 0.33 ) }
    dend_34 { pt3dadd( -41.7936, -64.452, -14.0527, 0.33 ) }
    dend_34 { pt3dadd( -42.1752, -65.0631, -14.1269, 0.67 ) }
    dend_34 { pt3dadd( -42.9546, -66.4802, -14.5162, 0.33 ) }
    dend_34 { pt3dadd( -43.8745, -68.4565, -15.3468, 0.67 ) }
    dend_34 { pt3dadd( -45.283, -71.9824, -17.0825, 0.33 ) }
    dend_34 { pt3dadd( -45.7412, -73.2401, -17.7696, 0.33 ) }
    dend_34 { pt3dadd( -45.8934, -73.6574, -18.0238, 0.67 ) }
    dend_34 { pt3dadd( -47.0934, -76.9835, -20.0394, 0.33 ) }
    dend_34 { pt3dadd( -47.1976, -77.2808, -20.217, 0.67 ) }
    dend_34 { pt3dadd( -47.9026, -79.2035, -21.2236, 0.33 ) }
    dend_34 { pt3dadd( -48.222, -80.0902, -21.6626, 0.67 ) }
    dend_34 { pt3dadd( -49.1612, -82.6974, -23.1301, 0.33 ) }
    dend_34 { pt3dadd( -49.4429, -83.4266, -23.5815, 0.67 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 87/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -20.2107, -25.715, -21.3243, 0.67 ) }
    dend_25 { pt3dadd( -28.0231, -29.5956, -17.6317, 0.67 ) }
    dend_25 { pt3dadd( -31.0113, -31.076, -16.2355, 0.67 ) }
    dend_25 { pt3dadd( -33.635, -32.3513, -14.895, 0.67 ) }
    dend_25 { pt3dadd( -36.8732, -33.8527, -13.1993, 0.67 ) }
    dend_25 { pt3dadd( -43.4489, -36.6525, -9.69089, 0.67 ) }
    dend_25 { pt3dadd( -47.1863, -38.0201, -7.6841, 0.67 ) }
    dend_25 { pt3dadd( -48.4208, -38.3694, -7.06028, 0.67 ) }
    dend_25 { pt3dadd( -52.2575, -39.0853, -5.32743, 0.67 ) }
    dend_25 { pt3dadd( -53.4116, -39.225, -4.87798, 0.33 ) }
    dend_25 { pt3dadd( -55.6406, -39.4087, -4.16199, 0.67 ) }
    dend_25 { pt3dadd( -62.4197, -39.9737, -2.42636, 0.67 ) }
    dend_25 { pt3dadd( -63.8723, -40.0831, -2.14899, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_25 { pt3dadd( -71.7859, -40.6867, -1.06325, 0.67 ) }
    dend_25 { pt3dadd( -74.201, -40.9296, -0.876512, 0.67 ) }
    dend_25 { pt3dadd( -76.7038, -41.2601, -0.69781, 0.33 ) }
    dend_25 { pt3dadd( -78.2353, -41.4797, -0.636678, 0.67 ) }
    dend_25 { pt3dadd( -79.9626, -41.7065, -0.618334, 0.33 ) }
    dend_25 { pt3dadd( -83.7601, -42.1764, -0.463662, 0.67 ) }
    dend_25 { pt3dadd( -84.8543, -42.283, -0.386179, 0.67 ) }
    dend_25 { pt3dadd( -87.5293, -42.5379, -0.2243, 0.67 ) }
    dend_25 { pt3dadd( -90.0503, -42.6672, -0.145506, 0.33 ) }
    dend_25 { pt3dadd( -91.5974, -42.6739, -0.129287, 0.67 ) }
    dend_25 { pt3dadd( -93.1597, -42.6461, -0.14682, 0.67 ) }
    dend_25 { pt3dadd( -96.3543, -42.525, -0.163449, 0.67 ) }
    dend_25 { pt3dadd( -98.5605, -42.4102, -0.297651, 0.67 ) }
    dend_25 { pt3dadd( -100.112, -42.3709, -0.462494, 0.67 ) }
    dend_25 { pt3dadd( -103.217, -42.3449, -0.82236, 0.67 ) }
    dend_25 { pt3dadd( -104.676, -42.3215, -0.983106, 0.67 ) }
    dend_25 { pt3dadd( -109.481, -42.2946, -1.64236, 0.67 ) }
    dend_25 { pt3dadd( -112.245, -42.2962, -2.09419, 0.33 ) }
    dend_25 { pt3dadd( -113.646, -42.3241, -2.34586, 0.67 ) }
    dend_25 { pt3dadd( -115.049, -42.458, -2.59475, 0.33 ) }
    dend_25 { pt3dadd( -117.216, -42.7011, -2.99669, 0.67 ) }
    dend_25 { pt3dadd( -121.149, -43.1642, -3.76793, 0.67 ) }
    dend_25 { pt3dadd( -125.874, -43.8424, -4.757, 0.67 ) }
    dend_25 { pt3dadd( -129.49, -44.3472, -5.40565, 0.67 ) }
    dend_25 { pt3dadd( -137.207, -45.3895, -6.85182, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 25/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -35.4075, 21.4977, -130.512, 0.33 ) }
    dend_23 { pt3dadd( -34.8273, 27.3336, -138.029, 0.33 ) }
    dend_23 { pt3dadd( -34.6092, 29.3379, -140.746, 0.67 ) }
    dend_23 { pt3dadd( -34.1352, 33.2581, -145.958, 0.33 ) }
    dend_23 { pt3dadd( -34.0828, 33.6645, -146.51, 0.67 ) }
    dend_23 { pt3dadd( -33.6546, 37.336, -151.67, 0.33 ) }
    dend_23 { pt3dadd( -33.512, 38.8339, -153.799, 0.33 ) }
    dend_23 { pt3dadd( -33.2353, 41.1576, -157.09, 0.67 ) }
    dend_23 { pt3dadd( -32.8171, 45.6267, -163.611, 0.33 ) }
    dend_23 { pt3dadd( -32.731, 47.4411, -166.096, 0.67 ) }
    dend_23 { pt3dadd( -32.6389, 49.7301, -169.283, 0.33 ) }
    dend_23 { pt3dadd( -32.6444, 50.6336, -170.555, 0.67 ) }
    dend_23 { pt3dadd( -32.6333, 51.9503, -172.527, 0.67 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 38/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -35.4075, 21.4977, -130.512, 0.33 ) }
    dend_22 { pt3dadd( -39.3126, 24.3808, -139.98, 0.33 ) }
    dend_22 { pt3dadd( -39.7554, 24.6928, -140.866, 1.33 ) }
    dend_22 { pt3dadd( -42.4285, 26.6499, -145.743, 0.33 ) }
    dend_22 { pt3dadd( -43.3909, 27.3562, -147.368, 0.33 ) }
    dend_22 { pt3dadd( -43.8633, 27.6984, -148.165, 0.67 ) }
    dend_22 { pt3dadd( -44.9309, 28.5193, -149.94, 0.33 ) }
    dend_22 { pt3dadd( -46.3483, 29.6199, -151.969, 0.67 ) }
    dend_22 { pt3dadd( -47.7358, 30.7317, -154.14, 0.33 ) }
    dend_22 { pt3dadd( -49.7316, 32.0986, -157.228, 1.33 ) }
    dend_22 { pt3dadd( -51.712, 33.3675, -161.111, 0.67 ) }
    dend_22 { pt3dadd( -52.5871, 33.8654, -162.943, 0.67 ) }
    dend_22 { pt3dadd( -54.2334, 34.7677, -166.743, 0.67 ) }
    dend_22 { pt3dadd( -55.9584, 35.7214, -171.286, 0.67 ) }
    dend_22 { pt3dadd( -57.5076, 36.4372, -174.978, 0.67 ) }
    dend_22 { pt3dadd( -62.2672, 38.4736, -185.695, 0.33 ) }
    dend_22 { pt3dadd( -62.9427, 38.7446, -187.207, 0.67 ) }
    dend_22 { pt3dadd( -64.4642, 39.3036, -190.633, 0.33 ) }
    dend_22 { pt3dadd( -65.6437, 39.7558, -193.272, 1.33 ) }
    dend_22 { pt3dadd( -70.162, 41.456, -202.921, 0.33 ) }
    dend_22 { pt3dadd( -70.5693, 41.6534, -203.753, 0.67 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 59/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -82.2658, -100.938, -84.0779, 0.33 ) }
    dend_17 { pt3dadd( -84.0555, -102.907, -85.9065, 0.33 ) }
    dend_17 { pt3dadd( -84.9618, -103.96, -86.8602, 0.67 ) }
    dend_17 { pt3dadd( -87.3309, -106.562, -89.2644, 0.33 ) }
    dend_17 { pt3dadd( -87.764, -107.024, -89.717, 0.67 ) }
    dend_17 { pt3dadd( -90.5351, -110.05, -93.0124, 0.33 ) }
    dend_17 { pt3dadd( -91.275, -110.858, -93.8924, 0.67 ) }
    dend_17 { pt3dadd( -92.4448, -112.186, -95.4692, 0.33 ) }
    dend_17 { pt3dadd( -93.2549, -113.151, -96.6863, 0.67 ) }
    dend_17 { pt3dadd( -94.7263, -114.969, -99.1061, 0.33 ) }
    dend_17 { pt3dadd( -96.261, -116.741, -101.62, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 70/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -82.2658, -100.938, -84.0779, 0.67 ) }
    dend_16 { pt3dadd( -83.8045, -103.438, -84.0946, 0.67 ) }
    dend_16 { pt3dadd( -84.9892, -105.477, -84.2523, 0.67 ) }
    dend_16 { pt3dadd( -86.636, -108.431, -84.5248, 0.33 ) }
    dend_16 { pt3dadd( -87.2445, -109.649, -84.6908, 0.67 ) }
    dend_16 { pt3dadd( -88.2272, -111.771, -85.0012, 0.33 ) }
    dend_16 { pt3dadd( -88.4086, -112.249, -85.0836, 0.67 ) }
    dend_16 { pt3dadd( -89.4002, -115.625, -85.8478, 0.33 ) }
    dend_16 { pt3dadd( -89.5114, -116.145, -85.971, 0.67 ) }
    dend_16 { pt3dadd( -89.9833, -119.154, -86.7074, 0.33 ) }
    dend_16 { pt3dadd( -90.0922, -119.974, -86.8973, 0.67 ) }
    dend_16 { pt3dadd( -90.3745, -123.679, -87.7879, 0.33 ) }
    dend_16 { pt3dadd( -90.41, -124.413, -87.9581, 0.67 ) }
    dend_16 { pt3dadd( -90.4285, -125.875, -88.2731, 0.33 ) }
    dend_16 { pt3dadd( -90.459, -127.737, -88.6882, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 85/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 24.886, -1.04093, 7.24473, 0.67 ) }
    dend_5 { pt3dadd( 28.7642, 1.50171, 5.7743, 0.67 ) }
    dend_5 { pt3dadd( 33.442, 4.81713, 3.22415, 0.67 ) }
    dend_5 { pt3dadd( 37.242, 7.34544, 1.04008, 0.67 ) }
    dend_5 { pt3dadd( 40.6746, 9.55058, -0.901097, 0.67 ) }
    dend_5 { pt3dadd( 41.6278, 10.1654, -1.43775, 1.33 ) }
    dend_5 { pt3dadd( 44.7057, 12.191, -3.92504, 0.67 ) }
    dend_5 { pt3dadd( 47.7212, 14.2158, -7.27604, 0.67 ) }
    dend_5 { pt3dadd( 50.3624, 15.8316, -10.9712, 0.67 ) }
    dend_5 { pt3dadd( 51.6603, 16.5425, -13.0209, 0.67 ) }
    dend_5 { pt3dadd( 52.1139, 16.7663, -13.7449, 1.33 ) }
    dend_5 { pt3dadd( 59.56, 20.6226, -25.9058, 0.33 ) }
    dend_5 { pt3dadd( 60.4133, 21.094, -27.2278, 0.33 ) }
    dend_5 { pt3dadd( 61.188, 21.5327, -28.333, 1.33 ) }
    dend_5 { pt3dadd( 62.7919, 22.6867, -30.5474, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_5 { pt3dadd( 63.5965, 23.3516, -31.5213, 0.33 ) }
    dend_5 { pt3dadd( 65.7181, 25.3467, -33.3961, 0.67 ) }
    dend_5 { pt3dadd( 68.6533, 28.3818, -34.8381, 0.67 ) }
    dend_5 { pt3dadd( 70.3935, 30.1823, -35.7081, 0.67 ) }
    dend_5 { pt3dadd( 73.2539, 33.0674, -37.1271, 0.33 ) }
    dend_5 { pt3dadd( 74.4361, 34.1444, -37.6828, 1.33 ) }
    dend_5 { pt3dadd( 77.0709, 36.1718, -38.7265, 0.33 ) }
    dend_5 { pt3dadd( 79.0484, 37.3673, -39.4178, 1.33 ) }
    dend_5 { pt3dadd( 81.9463, 38.6138, -40.3396, 0.33 ) }
    dend_5 { pt3dadd( 83.4443, 38.9786, -40.739, 0.67 ) }
    dend_5 { pt3dadd( 86.5701, 39.0353, -41.5073, 1.33 ) }
    dend_5 { pt3dadd( 90.9623, 38.6357, -42.5481, 0.67 ) }
    dend_5 { pt3dadd( 93.3598, 38.1827, -43.1147, 0.67 ) }
    dend_5 { pt3dadd( 96.3513, 37.5376, -43.8046, 0.33 ) }
    dend_5 { pt3dadd( 97.4077, 37.2786, -44.0239, 1.33 ) }
    dend_5 { pt3dadd( 101.973, 35.9869, -44.9893, 0.33 ) }
    dend_5 { pt3dadd( 103.55, 35.5199, -45.337, 0.33 ) }
    dend_5 { pt3dadd( 104.715, 35.2024, -45.6733, 0.67 ) }
    dend_5 { pt3dadd( 106.593, 34.7659, -46.1345, 0.33 ) }
    dend_5 { pt3dadd( 108.13, 34.4267, -46.5018, 0.67 ) }
    dend_5 { pt3dadd( 110.345, 33.9568, -47.1395, 0.33 ) }
    dend_5 { pt3dadd( 112.558, 33.481, -47.8299, 0.67 ) }
    dend_5 { pt3dadd( 115.62, 32.7294, -48.8353, 0.33 ) }
    dend_5 { pt3dadd( 116.438, 32.5167, -49.1068, 0.67 ) }
    dend_5 { pt3dadd( 118.327, 31.9432, -49.7278, 0.33 ) }
    dend_5 { pt3dadd( 121.704, 30.8745, -50.7882, 0.33 ) }
    dend_5 { pt3dadd( 123.542, 30.2667, -51.3167, 0.67 ) }
    dend_5 { pt3dadd( 126.554, 29.2173, -52.0169, 0.33 ) }
    dend_5 { pt3dadd( 128.071, 28.6589, -52.2397, 0.67 ) }
    dend_5 { pt3dadd( 130.234, 27.899, -52.4501, 0.33 ) }
    dend_5 { pt3dadd( 131.427, 27.533, -52.5161, 0.33 ) }
    dend_5 { pt3dadd( 132.288, 27.3016, -52.5755, 0.67 ) }
    dend_5 { pt3dadd( 135.714, 26.4372, -53.0142, 0.33 ) }
    dend_5 { pt3dadd( 136.939, 26.1822, -53.2302, 0.67 ) }
    dend_5 { pt3dadd( 139.133, 25.8985, -53.6662, 0.33 ) }
    dend_5 { pt3dadd( 142.075, 25.7152, -54.3465, 0.67 ) }
    dend_5 { pt3dadd( 145.244, 25.592, -55.1438, 0.33 ) }
    dend_5 { pt3dadd( 145.674, 25.582, -55.2623, 0.67 ) }
    dend_5 { pt3dadd( 148.412, 25.553, -56.1252, 0.33 ) }
    dend_5 { pt3dadd( 150.326, 25.5457, -56.7605, 0.67 ) }
    dend_5 { pt3dadd( 153.226, 25.4334, -57.6944, 0.33 ) }
    dend_5 { pt3dadd( 153.991, 25.4381, -57.8815, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 42/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 24.886, -1.04093, 7.24473, 0.67 ) }
    dend_2 { pt3dadd( 28.2071, -8.44109, 8.79711, 0.67 ) }
    dend_2 { pt3dadd( 30.0647, -12.8435, 9.4532, 0.67 ) }
    dend_2 { pt3dadd( 31.2021, -15.7217, 9.96863, 0.67 ) }
    dend_2 { pt3dadd( 32.5481, -19.3221, 10.628, 0.67 ) }
    dend_2 { pt3dadd( 33.5366, -22.2679, 11.1436, 0.67 ) }
    dend_2 { pt3dadd( 35.1054, -26.9343, 11.9081, 0.67 ) }
    dend_2 { pt3dadd( 36.0956, -29.9878, 12.2617, 0.67 ) }
    dend_2 { pt3dadd( 37.9989, -34.7778, 12.8744, 0.67 ) }
    dend_2 { pt3dadd( 39.8335, -38.5227, 13.3535, 0.67 ) }
    dend_2 { pt3dadd( 41.8558, -42.2712, 13.8178, 0.67 ) }
    dend_2 { pt3dadd( 44.2489, -46.2967, 14.277, 0.67 ) }
    dend_2 { pt3dadd( 47.2431, -50.9553, 14.7505, 0.67 ) }
    dend_2 { pt3dadd( 49.4866, -54.1365, 15.1065, 0.67 ) }
    dend_2 { pt3dadd( 53.279, -59.248, 15.5828, 0.67 ) }
    dend_2 { pt3dadd( 54.6623, -61.1212, 15.8209, 0.67 ) }
    dend_2 { pt3dadd( 56.1717, -63.0728, 16.1072, 0.33 ) }
    dend_2 { pt3dadd( 57.6022, -65.0937, 16.4482, 0.67 ) }
    dend_2 { pt3dadd( 59.3448, -68.0364, 17.0096, 0.67 ) }
    dend_2 { pt3dadd( 59.8639, -69.2974, 17.3042, 0.67 ) }
    dend_2 { pt3dadd( 60.6552, -72.6084, 18.4274, 0.67 ) }
    // Section: dend_33, id: dend_33, parent: dend_25 (entry count 63/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -137.207, -45.3895, -6.85182, 0.33 ) }
    dend_33 { pt3dadd( -138.531, -47.1543, -7.59661, 0.33 ) }
    dend_33 { pt3dadd( -138.691, -47.3736, -7.68983, 0.67 ) }
    dend_33 { pt3dadd( -139.364, -48.2792, -8.0736, 0.33 ) }
    dend_33 { pt3dadd( -140.321, -49.6085, -8.63874, 0.67 ) }
    dend_33 { pt3dadd( -141.104, -50.7212, -9.11092, 0.33 ) }
    dend_33 { pt3dadd( -142.318, -52.5125, -9.96534, 0.67 ) }
    dend_33 { pt3dadd( -143.352, -54.0617, -10.7803, 0.33 ) }
    dend_33 { pt3dadd( -143.745, -54.644, -11.1913, 0.67 ) }
    dend_33 { pt3dadd( -144.44, -55.5782, -12.0341, 0.33 ) }
    dend_33 { pt3dadd( -144.869, -56.11, -12.6381, 0.67 ) }
    dend_33 { pt3dadd( -145.764, -57.2983, -14.2709, 0.33 ) }
    dend_33 { pt3dadd( -145.982, -57.6633, -14.785, 0.67 ) }
    dend_33 { pt3dadd( -147.001, -59.43, -17.7352, 0.33 ) }
    dend_33 { pt3dadd( -147.329, -60.1645, -18.9367, 0.33 ) }
    dend_33 { pt3dadd( -147.445, -60.4657, -19.4125, 0.33 ) }
    dend_33 { pt3dadd( -147.664, -61.1274, -20.42, 0.67 ) }
    dend_33 { pt3dadd( -148.149, -63.0005, -22.8945, 0.33 ) }
    dend_33 { pt3dadd( -148.447, -64.8322, -24.9721, 0.67 ) }
    dend_33 { pt3dadd( -148.577, -66.4426, -26.318, 0.33 ) }
    dend_33 { pt3dadd( -148.579, -66.9287, -26.7399, 0.67 ) }
    dend_33 { pt3dadd( -151.752, -72.0276, -32.9778, 0.67 ) }
    dend_33 { pt3dadd( -156.408, -77.0538, -38.2725, 0.67 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 86/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -137.207, -45.3895, -6.85182, 0.67 ) }
    dend_26 { pt3dadd( -139.392, -44.8305, -6.49998, 0.67 ) }
    dend_26 { pt3dadd( -140.625, -44.515, -6.30138, 0.67 ) }
    dend_26 { pt3dadd( -141.765, -44.2231, -6.11766, 0.67 ) }
    dend_26 { pt3dadd( -143.628, -43.7463, -5.81758, 0.67 ) }
    dend_26 { pt3dadd( -146.212, -43.0851, -5.40142, 0.67 ) }
    dend_26 { pt3dadd( -148.133, -42.5935, -5.09204, 0.67 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 93/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -96.261, -116.741, -101.62, 0.33 ) }
    dend_19 { pt3dadd( -97.1755, -118.069, -103.292, 0.33 ) }
    dend_19 { pt3dadd( -97.4169, -118.412, -103.704, 0.67 ) }
    dend_19 { pt3dadd( -99.8617, -121.747, -106.977, 0.33 ) }
    dend_19 { pt3dadd( -100.431, -122.516, -107.654, 0.67 ) }
    dend_19 { pt3dadd( -103.277, -126.226, -110.712, 0.33 ) }
    dend_19 { pt3dadd( -104.193, -127.298, -111.532, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_19 { pt3dadd( -105.667, -128.954, -112.725, 0.67 ) }
    dend_19 { pt3dadd( -109.265, -132.554, -115.068, 0.33 ) }
    dend_19 { pt3dadd( -109.924, -133.126, -115.376, 0.67 ) }
    dend_19 { pt3dadd( -111.515, -134.535, -116.043, 0.33 ) }
    dend_19 { pt3dadd( -114.605, -137.318, -117.518, 0.33 ) }
    dend_19 { pt3dadd( -115.679, -138.263, -118.117, 0.67 ) }
    dend_19 { pt3dadd( -117.615, -139.846, -119.518, 0.33 ) }
    dend_19 { pt3dadd( -118.443, -140.482, -120.268, 0.67 ) }
    dend_19 { pt3dadd( -123.005, -144.094, -124.902, 0.33 ) }
    dend_19 { pt3dadd( -126.522, -146.995, -128.779, 0.67 ) }
    dend_19 { pt3dadd( -129.662, -149.663, -132.524, 0.33 ) }
    dend_19 { pt3dadd( -134.181, -153.459, -138.036, 0.33 ) }
    dend_19 { pt3dadd( -136.237, -155.24, -140.725, 0.67 ) }
    dend_19 { pt3dadd( -138.283, -156.9, -143.456, 0.33 ) }
    dend_19 { pt3dadd( -138.761, -157.198, -144.076, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 15/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -96.261, -116.741, -101.62, 0.33 ) }
    dend_18 { pt3dadd( -97.4747, -117.655, -101.763, 0.33 ) }
    dend_18 { pt3dadd( -98.3904, -118.421, -101.682, 0.67 ) }
    dend_18 { pt3dadd( -102.719, -122.15, -100.889, 0.33 ) }
    dend_18 { pt3dadd( -103.447, -122.776, -100.756, 0.67 ) }
    dend_18 { pt3dadd( -105.319, -124.389, -100.413, 0.33 ) }
    dend_18 { pt3dadd( -107.289, -126.086, -100.052, 0.67 ) }
    dend_18 { pt3dadd( -109.969, -128.554, -99.5635, 0.33 ) }
    dend_18 { pt3dadd( -110.636, -129.222, -99.3384, 0.67 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 24/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 60.6552, -72.6084, 18.4274, 0.33 ) }
    dend_4 { pt3dadd( 61.0967, -74.0381, 18.6711, 0.33 ) }
    dend_4 { pt3dadd( 61.7292, -76.0961, 19.0229, 0.67 ) }
    dend_4 { pt3dadd( 62.8948, -79.855, 19.6614, 0.67 ) }
    dend_4 { pt3dadd( 63.7619, -82.8077, 20.1809, 0.67 ) }
    dend_4 { pt3dadd( 64.7362, -86.0807, 20.7896, 0.67 ) }
    dend_4 { pt3dadd( 65.6218, -89.1257, 21.4662, 0.67 ) }
    dend_4 { pt3dadd( 66.457, -91.9072, 22.201, 0.67 ) }
    dend_4 { pt3dadd( 66.7647, -92.9039, 22.4991, 0.67 ) }
    dend_4 { pt3dadd( 67.4413, -94.824, 23.1129, 0.67 ) }
    dend_4 { pt3dadd( 68.1691, -97.0354, 23.8968, 0.67 ) }
    dend_4 { pt3dadd( 69.1954, -100.098, 25.0209, 0.67 ) }
    dend_4 { pt3dadd( 70.5938, -103.823, 26.3328, 0.33 ) }
    dend_4 { pt3dadd( 71.0043, -104.903, 26.6899, 0.67 ) }
    dend_4 { pt3dadd( 71.7483, -106.826, 27.235, 0.67 ) }
    dend_4 { pt3dadd( 72.6994, -109.023, 27.7207, 0.67 ) }
    dend_4 { pt3dadd( 73.9912, -111.839, 28.141, 0.67 ) }
    dend_4 { pt3dadd( 75.0804, -114.215, 28.162, 0.67 ) }
    dend_4 { pt3dadd( 76.2528, -116.683, 27.9077, 0.67 ) }
    dend_4 { pt3dadd( 77.0071, -118.132, 27.6216, 0.67 ) }
    dend_4 { pt3dadd( 78.1152, -119.969, 27.1132, 0.33 ) }
    dend_4 { pt3dadd( 78.5828, -120.635, 26.8261, 1.33 ) }
    dend_4 { pt3dadd( 80.9426, -123.803, 25.1016, 0.67 ) }
    dend_4 { pt3dadd( 82.1457, -125.305, 24.1568, 0.67 ) }
    dend_4 { pt3dadd( 84.1825, -127.668, 22.5131, 0.67 ) }
    dend_4 { pt3dadd( 85.6504, -129.403, 21.3371, 0.67 ) }
    dend_4 { pt3dadd( 87.6409, -131.867, 19.6999, 0.33 ) }
    dend_4 { pt3dadd( 87.9016, -132.152, 19.4983, 0.67 ) }
    dend_4 { pt3dadd( 91.5571, -140.494, 19.0964, 0.67 ) }
    dend_4 { pt3dadd( 94.5825, -148.993, 17.7806, 0.67 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 54/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 60.6552, -72.6084, 18.4274, 0.67 ) }
    dend_3 { pt3dadd( 59.593, -73.931, 18.9657, 0.67 ) }
    dend_3 { pt3dadd( 53.743, -80.0284, 21.2301, 0.67 ) }
    dend_3 { pt3dadd( 47.6548, -85.8505, 23.5892, 0.67 ) }
    dend_3 { pt3dadd( 41.4237, -90.6611, 27.405, 0.67 ) }
    dend_3 { pt3dadd( 36.178, -96.005, 31.9276, 0.67 ) }
    dend_3 { pt3dadd( 31.6735, -101.59, 36.9325, 0.67 ) }
    dend_3 { pt3dadd( 27.0322, -105.852, 43.0007, 0.67 ) }
    dend_3 { pt3dadd( 22.9532, -109.931, 49.5775, 0.67 ) }
    dend_3 { pt3dadd( 19.1398, -112.896, 56.8706, 0.67 ) }
    dend_3 { pt3dadd( 16.9763, -115.752, 64.8513, 0.67 ) }
    dend_3 { pt3dadd( 16.2532, -117.758, 73.3357, 0.67 ) }
    dend_3 { pt3dadd( 15.9095, -119.94, 81.8002, 0.67 ) }
    dend_3 { pt3dadd( 14.583, -120.544, 90.426, 0.67 ) }
    dend_3 { pt3dadd( 13.9511, -121.603, 99.0866, 0.67 ) }
    dend_3 { pt3dadd( 12.7529, -123.959, 107.426, 0.67 ) }
    dend_3 { pt3dadd( 10.7211, -126.118, 115.657, 0.67 ) }
    dend_3 { pt3dadd( 9.5979, -130.316, 123.249, 0.67 ) }
    dend_3 { pt3dadd( 9.73658, -132.753, 131.649, 0.67 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 73/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -148.133, -42.5935, -5.09204, 0.67 ) }
    dend_30 { pt3dadd( -154.03, -38.6764, -6.2741, 0.67 ) }
    dend_30 { pt3dadd( -154.916, -38.0879, -6.45169, 0.67 ) }
    dend_30 { pt3dadd( -157.446, -36.4078, -6.9587, 0.33 ) }
    dend_30 { pt3dadd( -157.913, -36.0973, -7.0524, 0.67 ) }
    dend_30 { pt3dadd( -163.436, -32.4292, -8.15934, 0.33 ) }
    dend_30 { pt3dadd( -169.642, -28.0387, -8.66633, 0.33 ) }
    dend_30 { pt3dadd( -175.844, -23.7317, -9.68649, 0.33 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 81/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -148.133, -42.5935, -5.09204, 0.67 ) }
    dend_27 { pt3dadd( -150.643, -41.959, -4.56367, 0.67 ) }
    dend_27 { pt3dadd( -153.723, -41.024, -3.94466, 0.33 ) }
    dend_27 { pt3dadd( -156.431, -39.968, -4.29288, 0.67 ) }
    dend_27 { pt3dadd( -157.702, -39.4724, -4.45629, 0.33 ) }
    dend_27 { pt3dadd( -158.871, -39.0161, -4.60675, 0.67 ) }
    dend_27 { pt3dadd( -160.086, -38.5425, -4.76292, 0.33 ) }
    dend_27 { pt3dadd( -160.627, -38.3491, -4.95721, 0.67 ) }
    dend_27 { pt3dadd( -162.769, -35.9855, -9.60269, 0.33 ) }
    dend_27 { pt3dadd( -170.187, -31.3116, -12.6355, 0.33 ) }
    dend_27 { pt3dadd( -178.223, -27.1884, -14.7502, 0.33 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 92/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -175.844, -23.7317, -9.68649, 0.33 ) }
    dend_32 { pt3dadd( -183.307, -19.1048, -12.9185, 0.33 ) }
    dend_32 { pt3dadd( -189.993, -14.1017, -17.1389, 0.33 ) }
    dend_32 { pt3dadd( -195.673, -8.72874, -22.2788, 0.33 ) }
    dend_32 { pt3dadd( -201.006, -3.14387, -27.5621, 0.33 ) }
    dend_32 { pt3dadd( -206.278, 2.77815, -32.5302, 0.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 98/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -175.844, -23.7317, -9.68649, 0.33 ) }
    dend_31 { pt3dadd( -182.04, -19.6051, -11.6911, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_31 { pt3dadd( -188.334, -15.6216, -13.6819, 0.33 ) }
    dend_31 { pt3dadd( -194.08, -10.7053, -15.1817, 0.33 ) }
    dend_31 { pt3dadd( -199.752, -6.35389, -18.0685, 0.33 ) }
    dend_31 { pt3dadd( -205.055, -2.07495, -21.6745, 0.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 4/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -178.223, -27.1884, -14.7502, 0.33 ) }
    dend_29 { pt3dadd( -186.029, -24.8365, -20.3742, 0.33 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 6/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -178.223, -27.1884, -14.7502, 0.33 ) }
    dend_28 { pt3dadd( -185.009, -23.9247, -17.6848, 0.33 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_44, dend_39, dend_38, dend_35, dend_20, dend_13, dend_10, dend_7, dend_0, dend_47, dend_46, dend_43, dend_40, dend_37, dend_36, dend_24, dend_21, dend_15, dend_14, dend_12, dend_11, dend_9, dend_8, dend_6, dend_1, dend_42, dend_41, dend_34, dend_25, dend_23, dend_22, dend_17, dend_16, dend_5, dend_2, dend_33, dend_26, dend_19, dend_18, dend_4, dend_3, dend_30, dend_27, dend_32, dend_31, dend_29, dend_28]}
    ModelViewParmSubset_2 = new SectionList()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_45, dend_44, dend_39, dend_38, dend_35, dend_20, dend_13, dend_10, dend_7, dend_0, dend_47, dend_46, dend_43, dend_40, dend_37, dend_36, dend_24, dend_21, dend_15, dend_14, dend_12, dend_11, dend_9, dend_8, dend_6, dend_1, dend_42, dend_41, dend_34, dend_25, dend_23, dend_22, dend_17, dend_16, dend_5, dend_2, dend_33, dend_26, dend_19, dend_18, dend_4, dend_3, dend_30, dend_27, dend_32, dend_31, dend_29, dend_28]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_44 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_39 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_38 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_35 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_10 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_7 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_47 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_46 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_43 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_40 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_37 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_21 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_15 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_14 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_9 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_8 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_25 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_23 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_22 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_5 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_2 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_33 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_19 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_3 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_32 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_20 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_0 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_1 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_13 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_45 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_24 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_11 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_36 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_26 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_30 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_27 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_28 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_29 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_41 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_31 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_42 OneSecGrp_SectionRef_30.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, axon_0, axon_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_28]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_28 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_44 nseg = 11
    dend_39 nseg = 3
    dend_38 nseg = 15
    dend_35 nseg = 7
    dend_10 nseg = 5
    dend_7 nseg = 3
    dend_47 nseg = 7
    dend_46 nseg = 5
    dend_43 nseg = 7
    dend_40 nseg = 9
    dend_37 nseg = 3
    dend_21 nseg = 7
    dend_15 nseg = 7
    dend_14 nseg = 5
    dend_12 nseg = 3
    dend_9 nseg = 5
    dend_8 nseg = 7
    dend_6 nseg = 7
    dend_34 nseg = 3
    dend_25 nseg = 7
    dend_23 nseg = 3
    dend_22 nseg = 5
    dend_5 nseg = 9
    dend_2 nseg = 5
    dend_33 nseg = 3
    dend_19 nseg = 3
    dend_4 nseg = 5
    dend_3 nseg = 7
    dend_32 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_NBC_36cd91dc08_0_0


