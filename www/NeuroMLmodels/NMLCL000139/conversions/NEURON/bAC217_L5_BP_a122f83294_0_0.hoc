// Cell: bAC217_L5_BP_a122f83294_0_0
/*
{
  "id" : "bAC217_L5_BP_a122f83294_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.3435, 8.54545, 2.8968, 0.83", "-6.54811, 11.0293, 3.3801, 1.11", "-8.43757, 12.4928, 3.63151, 0.83", "-10.2733, 13.9023, 3.85676, 0.83", "-11.3601, 14.7061, 3.98019, 1.11", "-14.7637, 17.2176, 4.3758, 1.11", "-20.8513, 21.5175, 5.07511, 0.83", "-23.0444, 23.0076, 5.30604, 0.83", "-24.7812, 24.1525, 5.44948, 0.83", "-26.4747, 25.2871, 5.57364, 0.83", "-27.8533, 26.2223, 5.64063, 0.55", "-28.8896, 26.8555, 5.70862, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "5.44264, 6.60173, -6.47104, 0.55", "9.33033, 7.44272, -7.33924, 0.55", "11.5862, 7.65501, -8.48804, 0.83", "15.1566, 7.88094, -10.622, 0.55", "16.8801, 7.99, -11.6521, 1.38", "21.1177, 8.25815, -14.1849, 0.55", "22.9226, 8.16734, -15.3934, 0.83", "32.2588, 6.50206, -22.1836, 0.55", "33.1621, 6.27812, -22.9306, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.68487, -10.5531, 3.2562, 1.11", "-0.734625, -14.9429, 4.82993, 1.11", "-0.754887, -16.7307, 5.47085, 0.83", "-0.781807, -19.1059, 6.32236, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "1.07494, 10.1854, -1.45684, 1.11", "1.37667, 12.4658, -1.48629, 1.11", "1.90733, 16.1835, -1.40252, 1.38", "1.94156, 16.3901, -1.39561, 1.38", "2.51951, 18.9328, -1.33985, 0.83", "3.28488, 21.6081, -1.18269, 0.83", "4.52485, 24.596, -0.747336, 0.83", "5.18044, 25.7129, -0.49776, 0.83", "5.79106, 26.5096, -0.276636, 1.11", "7.49282, 28.4308, 0.243028, 0.55", "9.46246, 30.4189, 0.879214, 0.83", "11.914, 32.4251, 1.51256, 0.55", "13.1181, 33.2415, 1.76167, 0.83", "14.8345, 34.3399, 2.2073, 0.55", "17.0052, 35.7387, 2.867, 0.55", "20.1147, 37.8586, 3.9538, 0.55", "23.5516, 40.2921, 5.15517, 0.55", "25.8176, 41.8694, 6.16172, 0.55", "28.7131, 43.8623, 7.6928, 0.55", "29.3297, 44.259, 8.0541, 0.83", "30.9926, 45.3047, 9.10054, 0.55", "32.355, 46.1139, 9.89985, 0.83", "35.5559, 48.3705, 11.8165, 0.55", "36.6733, 49.1983, 12.3112, 0.83", "37.6269, 49.796, 12.5726, 0.55", "38.5199, 50.3036, 12.7125, 0.83", "40.4195, 51.225, 12.8582, 0.83", "42.8658, 52.4912, 12.8669, 0.83", "44.3211, 53.3422, 12.7351, 0.55", "45.4417, 54.0912, 12.6396, 0.55", "48.3619, 56.0241, 12.3515, 0.83", "50.2222, 57.2644, 12.0996, 0.55", "53.0014, 59.0758, 11.6171, 0.55", "55.4991, 60.5787, 11.0851, 0.55", "57.7053, 61.8432, 10.5553, 0.55", "60.4368, 63.3105, 9.77045, 0.55", "62.0685, 64.002, 9.24105, 0.55", "63.1242, 64.3772, 8.75356, 0.55", "64.4566, 64.6062, 7.98874, 0.55", "66.3469, 64.5909, 6.67778, 0.55", "67.4905, 64.4068, 5.8109, 0.55", "69.2084, 64.0787, 4.67765, 0.55", "72.6165, 63.5671, 2.84188, 0.55", "75.3814, 63.2997, 1.603, 0.55", "78.3948, 63.1637, 0.468928, 0.55", "80.3921, 63.1425, -0.106157, 0.55", "85.7516, 63.5617, -1.27218, 0.55", "89.0307, 64.0468, -1.73961, 0.55", "91.5839, 64.56, -1.88226, 0.55", "93.1768, 65.11, -1.9173, 0.55", "95.0403, 65.9737, -1.96649, 0.55", "98.128, 67.7284, -2.28798, 0.55", "98.8057, 68.1564, -2.44616, 0.55", "100.698, 69.2931, -3.01497, 0.55", "102.45, 70.528, -3.54444, 0.83", "103.402, 71.2148, -3.84734, 0.55", "104.822, 72.4128, -4.35372, 0.83", "113.016, 78.7659, -5.1978, 0.83", "120.129, 86.2574, -6.41552, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-28.8896, 26.8555, 5.70862, 0.55", "-30.7153, 27.646, 4.89969, 0.55", "-32.7005, 28.5055, 4.02005, 0.55", "-35.0963, 29.5428, 2.95852, 0.55", "-37.0746, 30.3993, 2.08199, 0.83", "-38.7324, 31.1171, 1.34745, 0.55", "-41.8095, 32.4493, -0.0159511, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-28.8896, 26.8555, 5.70862, 0.55", "-30.7638, 27.4347, 5.10837, 0.55", "-32.8122, 27.9335, 4.65133, 0.55", "-35.1497, 28.4804, 4.18739, 0.55", "-38.6158, 29.1554, 3.80716, 0.55", "-41.5695, 29.5855, 3.66239, 0.55", "-44.7009, 29.9579, 3.62158, 0.55", "-47.811, 30.0425, 3.83089, 0.55", "-50.5543, 29.8116, 4.1793, 0.55", "-54.0617, 29.2214, 4.87727, 0.55", "-55.6367, 28.8174, 5.33653, 0.55", "-57.3544, 28.3492, 5.88943, 0.55", "-60.3576, 27.3592, 6.69905, 0.55", "-61.9004, 26.8925, 6.92208, 0.55", "-63.5149, 26.3618, 7.13569, 0.55", "-65.3902, 25.7971, 7.22801, 0.55", "-67.4146, 25.235, 7.28953, 0.55", "-70.289, 24.4411, 7.31971, 0.55", "-74.0427, 23.6983, 7.1163, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "33.1621, 6.27812, -22.9306, 0.55", "38.5543, 8.47795, -24.2588, 0.55", "41.7334, 9.4586, -25.4268, 0.55", "44.9004, 10.2771, -26.5912, 0.55", "47.0797, 10.752, -27.3655, 0.55", "50.2762, 11.3801, -28.4556, 0.55", "56.9467, 12.5122, -30.8898, 0.55", "64.5635, 13.6369, -34.1322, 0.55", "68.318, 13.9047, -35.8987, 0.55", "70.3479, 13.9726, -36.9593, 0.55", "72.5789, 14.0374, -38.2101, 0.55", "76.5778, 14.0532, -40.4023, 0.55", "78.0483, 13.9695, -41.2245, 0.55", "84.2846, 13.6546, -45.186, 0.55", "88.7121, 13.4263, -48.3085, 0.55", "91.2582, 13.325, -50.182, 0.55", "93.8012, 13.204, -52.0438, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "33.1621, 6.27812, -22.9306, 0.83", "35.2752, 7.84452, -23.0646, 0.83", "36.4851, 8.73257, -23.1996, 0.55", "38.2676, 10.0644, -23.5635, 0.83", "39.4646, 10.9882, -23.8501, 0.55", "41.1103, 12.3117, -24.2246, 0.83", "43.0831, 13.9523, -24.6015, 0.55", "44.0812, 14.7044, -24.7389, 0.55", "46.4017, 16.1231, -24.8474, 0.83", "48.5223, 17.1757, -24.6292, 0.55", "49.7048, 17.7637, -24.3872, 0.83", "51.4688, 18.7072, -23.833, 0.55", "53.9866, 20.1459, -22.7003, 0.55", "57.4935, 21.9736, -20.9161, 0.55", "60.8402, 23.6156, -18.9565, 0.55", "63.4926, 24.8921, -17.3504, 0.55", "67.8625, 27.0205, -14.6805, 0.55", "71.0483, 28.6823, -12.6632, 0.55", "72.9537, 29.8638, -11.3884, 0.55", "76.4263, 32.4268, -9.04697, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.781807, -19.1059, 6.32236, 0.83", "-0.730281, -21.6692, 6.22265, 0.83", "-0.68008, -24.1666, 6.1255, 0.83", "-0.624031, -26.955, 6.01704, 0.83", "-0.594764, -28.4111, 5.96041, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.781807, -19.1059, 6.32236, 0.55", "-0.262464, -20.6343, 7.43327, 0.55", "0.179456, -22.5098, 8.86399, 0.55", "0.373708, -24.9755, 10.8143, 0.55", "0.380002, -25.9353, 11.5942, 0.83", "0.152517, -28.3891, 13.8517, 0.55", "-0.0707892, -29.6584, 15.0352, 0.55", "-0.564048, -32.1277, 17.4383, 0.83", "-1.04369, -33.9634, 19.333, 0.55", "-1.57263, -35.4804, 20.8639, 0.55", "-2.63578, -38.3551, 23.7074, 0.55", "-3.47912, -40.6462, 25.947, 0.55", "-4.11958, -42.4821, 27.7704, 0.55", "-4.68834, -44.4292, 29.6516, 0.28", "-4.85507, -45.2389, 30.4083, 0.55", "-5.11871, -46.7337, 31.7233, 0.28", "-5.1891, -49.0612, 33.4327, 0.55", "-7.32324, -56.8429, 39.4235, 0.55", "-9.70952, -64.0386, 46.0212, 0.55", "-11.7513, -69.9468, 53.8904, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-41.8095, 32.4493, -0.0159511, 0.55", "-43.8447, 32.6006, 1.20426, 0.55", "-44.6923, 32.6186, 1.82768, 0.83", "-45.673, 32.5911, 2.69553, 0.55", "-46.419, 32.5712, 3.4316, 0.83", "-48.3778, 32.5924, 5.34059, 0.55", "-49.1196, 32.6137, 6.06938, 0.28", "-50.3501, 32.666, 7.39523, 0.55", "-52.0021, 32.7463, 9.16577, 0.55", "-53.2604, 32.8065, 10.4486, 0.55", "-54.9449, 32.8853, 12.105, 0.28", "-55.3863, 32.908, 12.4792, 0.55", "-56.3027, 32.9658, 13.217, 0.28", "-56.9295, 33.0206, 13.6563, 0.55", "-58.2161, 33.1209, 14.4375, 0.28", "-58.9723, 33.1358, 14.8561, 0.55", "-60.3018, 33.0616, 15.608, 0.28", "-61.1967, 33.005, 16.0806, 0.55", "-66.4707, 32.2626, 21.4842, 0.55", "-71.2108, 30.8315, 27.2329, 0.55", "-75.727, 28.6966, 32.9436, 0.55", "-80.2014, 25.692, 38.2837, 0.55", "-83.8122, 23.0365, 44.4055, 0.55", "-88.0053, 20.6315, 50.2535, 0.55", "-92.3187, 19.4531, 56.383, 0.55", "-96.5918, 17.6777, 62.3958, 0.55", "-100.732, 16.4104, 68.6257, 0.55", "-104.512, 15.0489, 75.0622, 0.55", "-107.512, 12.8662, 81.6804, 0.55", "-110.6, 11.3798, 88.4494, 0.55", "-113.77, 9.13802, 94.9677, 0.55", "-116.04, 6.61187, 101.752, 0.55", "-117.051, 4.6444, 109.009, 0.55", "-117.988, 1.29771, 115.754, 0.55", "-117.839, -2.15141, 122.51, 0.55", "-118.097, -5.3006, 129.408, 0.55", "-119.175, -7.93463, 136.441, 0.55", "-121.863, -9.44797, 143.373, 0.55", "-123.869, -11.7741, 150.311, 0.55", "-124.486, -12.8004, 157.803, 0.55", "-126.334, -13.3122, 165.144, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-41.8095, 32.4493, -0.0159511, 0.55", "-43.4866, 33.3325, -2.16686, 0.55", "-44.743, 34.3285, -4.52806, 0.55", "-45.9081, 35.5456, -7.00645, 0.55", "-46.6376, 36.3077, -8.55839, 0.55", "-47.9684, 37.698, -11.3893, 0.83", "-48.9421, 38.7151, -13.4604, 0.55", "-50.0229, 40.1252, -16.4896, 0.83", "-50.3961, 41.0691, -18.1677, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-74.0427, 23.6983, 7.1163, 0.28", "-75.1702, 21.5268, 6.40451, 0.28", "-75.6993, 20.5965, 6.00931, 0.28", "-76.3747, 19.2825, 5.41386, 0.55", "-76.9298, 18.1264, 4.90777, 0.28", "-77.7497, 16.3642, 4.16443, 0.55", "-80.0323, 11.1805, 2.09037, 0.28", "-80.7474, 9.36721, 1.22928, 0.55", "-81.8125, 6.57791, -0.187595, 0.28", "-82.4077, 4.9119, -1.10509, 0.55", "-82.8144, 3.76476, -1.76539, 0.28", "-83.2791, 2.44773, -2.51169, 0.55", "-84.6705, -1.95296, -4.86137, 0.28", "-85.104, -3.28233, -5.62307, 0.55", "-85.8497, -5.30666, -7.0206, 0.28", "-86.4793, -6.59726, -8.06129, 0.28", "-87.0713, -7.45618, -8.82253, 0.55", "-89.2133, -9.86332, -10.9799, 0.28", "-90.2285, -10.8368, -11.86, 0.55", "-92.7061, -13.0463, -14.0421, 0.28", "-95.2071, -14.9961, -16.0837, 0.28", "-97.9426, -16.848, -18.2015, 0.28", "-99.2144, -17.5424, -19.0537, 0.55", "-105.141, -25.448, -24.5219, 0.55", "-112.154, -33.5484, -28.0904, 0.55", "-118.742, -41.14, -33.2383, 0.55", "-125.357, -47.9886, -39.3109, 0.55", "-131.907, -53.9843, -46.2882, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-74.0427, 23.6983, 7.1163, 0.55", "-74.8467, 23.6453, 7.06706, 0.55", "-77.1696, 23.483, 7.2149, 0.55", "-78.0515, 23.398, 7.31358, 0.55", "-80.1319, 23.1361, 7.57224, 0.55", "-83.303, 22.7723, 7.82636, 0.55", "-84.9448, 22.6336, 7.93344, 0.28", "-87.4914, 22.3665, 8.04942, 0.55", "-89.3707, 22.1339, 8.06851, 0.55", "-90.1647, 22.0304, 8.07792, 0.28", "-94.9262, 21.4077, 8.1282, 0.55", "-97.128, 21.0234, 8.01542, 0.28", "-100.065, 20.5028, 7.69372, 0.28", "-102.569, 20.0988, 7.27288, 0.55", "-112.722, 19.8552, 7.81805, 0.55", "-122.747, 19.2936, 9.44698, 0.55", "-132.43, 17.6367, 12.0815, 0.55", "-141.969, 17.6367, 15.6113, 0.55", "-150.58, 17.1803, 21.0042, 0.55", "-157.983, 17.1779, 27.979, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "93.8012, 13.204, -52.0438, 0.55", "97.3188, 14.1926, -55.0197, 0.55", "98.4451, 14.4398, -56.0157, 0.55", "99.8617, 14.7091, -57.2335, 0.55", "102.449, 15.1376, -59.583, 0.55", "105.173, 15.4626, -62.0695, 0.55", "106.521, 15.5297, -63.2251, 0.83", "107.651, 15.4929, -64.2353, 0.55", "108.514, 15.3805, -65.0518, 0.83", "110.654, 14.8133, -67.0772, 0.55", "112.445, 14.1996, -68.7154, 0.55", "114.499, 13.5051, -70.5078, 0.55", "116.778, 12.7777, -72.5601, 0.55", "118.316, 12.2497, -73.9611, 0.55", "120.055, 11.6365, -75.5886, 0.55", "121.557, 11.128, -77.0991, 0.55", "122.497, 10.8535, -78.1798, 0.55", "123.766, 10.2256, -80.3862, 0.55", "124.484, 9.77269, -81.7562, 0.55", "125.186, 9.03814, -83.5614, 0.55", "126.235, 7.67061, -86.5903, 0.55", "126.463, 7.33257, -87.266, 0.28", "129.348, 3.14602, -95.4487, 0.28", "130.271, 1.94986, -97.8533, 0.83", "133.808, -2.40877, -106.328, 0.83", "135.599, -4.57914, -110.211, 0.83", "136.429, -5.50965, -111.76, 0.55", "137.341, -6.40458, -113.264, 0.55", "139.656, -8.01881, -116.009, 0.55", "142.051, -9.39691, -118.399, 0.28", "142.699, -9.51523, -118.484, 0.55", "144.071, -9.56001, -118.231, 0.28", "144.9, -9.49971, -117.973, 0.55", "145.759, -9.42868, -117.63, 0.28", "146.779, -9.28118, -117.186, 0.55", "148.303, -9.02511, -116.706, 0.28", "149.536, -8.86696, -116.349, 0.55", "150.894, -8.63291, -116.086, 0.28", "152.753, -8.35223, -115.892, 0.55", "154.839, -8.02389, -115.81, 0.55", "156.679, -7.74626, -115.863, 0.28", "159.233, -7.37657, -116.08, 0.55", "163.666, -6.74357, -116.947, 0.55", "165.626, -6.42874, -117.587, 0.55", "166.469, -6.28351, -117.959, 0.83", "168.086, -6.03436, -118.814, 0.55", "169.206, -5.83655, -119.488, 0.83", "172.207, -5.23768, -121.354, 0.55", "174.065, -5.00509, -122.505, 0.28", "174.849, -4.93041, -122.893, 0.55", "177.012, -4.85144, -123.674, 0.28", "177.778, -4.87597, -123.881, 0.55", "179.354, -4.95633, -124.055, 0.28", "180.962, -5.11179, -123.932, 0.55", "184.197, -5.44228, -123.103, 0.28", "185.687, -5.61522, -122.555, 0.55", "187.915, -5.9601, -121.594, 0.28", "190.72, -6.36006, -120.29, 0.55", "192.742, -6.61549, -119.323, 0.55", "196.221, -6.94159, -117.624, 0.28", "197.646, -7.04401, -117.055, 0.55", "200.101, -7.15865, -116.369, 0.28", "202.529, -7.1417, -115.897, 0.55", "203.849, -7.03839, -115.856, 0.28", "205.022, -6.81702, -115.952, 0.55", "208.322, -6.08434, -116.586, 0.28", "210.653, -5.41311, -117.122, 0.28", "212.656, -4.69269, -117.659, 0.55", "214.864, -3.86677, -118.382, 0.28", "215.413, -3.6189, -118.555, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "93.8012, 13.204, -52.0438, 0.55", "94.599, 11.4027, -52.9488, 0.55", "95.1382, 9.86651, -53.6134, 0.28", "95.6247, 8.47185, -54.1062, 0.55", "96.8038, 5.53853, -55.1746, 0.28", "96.8744, 5.3502, -55.2676, 0.55", "97.2742, 4.35953, -55.832, 0.28", "97.5401, 3.51362, -56.4255, 0.55", "97.7761, 2.61203, -57.14, 0.28", "98.0683, 1.37077, -58.1674, 0.55", "98.7973, -1.74047, -60.6937, 0.55", "99.435, -4.5864, -63.0428, 0.55", "99.9247, -6.86493, -64.9237, 0.55", "100.368, -9.10713, -66.7375, 0.55", "100.48, -9.68429, -67.1839, 0.28", "100.612, -10.2929, -67.614, 0.55", "100.864, -11.1156, -68.1365, 0.28", "101.446, -12.5522, -68.9433, 0.55", "102.763, -15.2183, -70.0649, 0.55", "103.476, -16.6357, -70.5407, 0.28", "104.123, -18.0979, -71.0894, 0.55", "104.886, -20.1794, -71.9371, 0.28", "105.402, -21.8813, -72.6618, 0.55", "106.07, -24.4442, -73.7527, 0.28", "106.776, -27.0841, -74.8032, 0.55", "107.755, -30.929, -76.3616, 0.28", "108.235, -32.9865, -77.1997, 0.55", "108.696, -35.1018, -78.1047, 0.28", "109.09, -36.9798, -79.0108, 0.28", "109.667, -39.3378, -80.3311, 0.55", "110.338, -41.4942, -81.5009, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "76.4263, 32.4268, -9.04697, 0.55", "79.0252, 32.5639, -8.1522, 0.55", "80.9462, 32.5375, -7.65412, 0.55", "85.1804, 32.3668, -6.76155, 0.55", "87.1066, 32.2015, -6.51122, 0.55", "89.2177, 32.0324, -6.35299, 0.55", "92.0712, 31.7939, -6.34542, 0.55", "95.1182, 31.3837, -6.58219, 0.55", "96.7388, 31.0965, -6.87002, 0.55", "100.08, 30.3839, -7.86707, 0.55", "101.624, 30.0536, -8.37418, 0.55", "105.253, 29.1906, -9.6273, 0.55", "107.716, 28.5221, -10.4297, 0.55", "109.521, 28.0428, -10.9427, 0.83", "112.407, 27.1885, -11.7023, 0.55", "115.232, 26.2569, -12.3076, 0.83", "117.626, 25.3899, -12.7123, 0.55", "119.744, 24.678, -12.9802, 0.55", "120.938, 24.3405, -13.087, 0.83", "123.71, 23.6023, -13.2035, 0.28", "125.076, 23.3135, -13.1969, 0.28", "126.41, 22.9353, -13.2299, 0.28", "127.85, 22.5606, -13.2827, 0.28", "130.157, 21.9878, -13.4239, 0.28", "131.082, 21.7759, -13.4585, 0.55", "133.269, 21.3527, -13.3466, 0.55", "137.188, 20.6126, -12.9477, 0.55", "138.27, 20.3944, -12.7839, 0.55", "139.233, 20.1816, -12.5891, 0.83", "141.304, 19.8308, -12.0246, 0.55", "143.1, 19.5379, -11.5074, 0.55", "144.797, 19.2704, -11.0132, 0.55", "146.116, 19.0299, -10.6594, 0.55", "148.227, 18.4773, -10.153, 0.55", "150.744, 17.5753, -9.62264, 0.55", "154.709, 15.676, -8.92839, 0.55", "156.918, 14.293, -8.58404, 0.55", "158.861, 12.7638, -8.28151, 0.28", "159.451, 12.1819, -8.18639, 0.55", "160.781, 10.5224, -7.9289, 0.28", "161.956, 8.63869, -7.62656, 0.55", "163.086, 6.31104, -7.08918, 0.55", "163.839, 4.80571, -6.66198, 0.28", "164.11, 4.28304, -6.48409, 0.55", "164.808, 2.99339, -6.0217, 0.28", "165.751, 1.33312, -5.37499, 0.55", "168.18, -2.61587, -3.69923, 0.55", "169.438, -4.58781, -2.80737, 0.55", "170.602, -6.38799, -1.97156, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "76.4263, 32.4268, -9.04697, 0.55", "79.0648, 32.992, -7.02182, 0.55", "79.9116, 33.1708, -6.41964, 0.55", "83.0826, 33.6862, -4.31821, 0.55", "86.6157, 34.3307, -1.91729, 0.55", "91.1441, 35.1447, 1.28155, 0.55", "92.3948, 35.3711, 2.15668, 0.55", "94.6477, 35.6908, 3.70195, 0.55", "97.1122, 36.1, 5.30333, 0.55", "99.9701, 36.6584, 7.03718, 0.55", "102.66, 37.2228, 8.68194, 0.55", "104.129, 37.6015, 9.51675, 0.55", "105.848, 38.0964, 10.4954, 0.55", "107.969, 38.7719, 11.6687, 0.83", "111.445, 39.8771, 13.2177, 0.55", "113.757, 40.5183, 14.1274, 0.83", "116.983, 41.2613, 15.2735, 0.55", "117.979, 41.4353, 15.6094, 0.55", "121.085, 41.8224, 16.5817, 0.55", "126.678, 42.1843, 18.0883, 0.55", "130.797, 42.2253, 19.091, 0.55", "134.073, 42.1071, 19.9562, 0.55", "137.429, 41.8121, 20.9458, 0.55", "138.137, 41.7315, 21.1569, 0.28", "139.578, 41.512, 21.5799, 0.83", "145.504, 40.5262, 23.3477, 0.55", "149.649, 39.8427, 24.506, 0.55", "153.043, 39.3638, 25.543, 0.55", "155.07, 39.0713, 26.1815, 0.83", "156.665, 38.8636, 26.6877, 0.28", "158.111, 38.6777, 27.1335, 0.55", "169.106, 39.8745, 32.2893, 0.55", "180.93, 39.3343, 35.2552, 0.55", "192.559, 40.2447, 38.8388, 0.55", "203.119, 39.2865, 44.8781, 0.55", "213.108, 36.6319, 51.3638, 0.55", "224.147, 32.4138, 54.4059, 0.55", "235.099, 27.1186, 55.3592, 0.55", "246.907, 24.055, 55.6724, 0.55", "258.608, 20.7773, 56.789, 0.55", "270.653, 18.864, 57.1864, 0.55", "282.608, 17.4363, 59.1692, 0.55", "294.007, 13.8888, 61.697, 0.55", "305.51, 12.4515, 65.506, 0.55", "316.367, 12.7024, 71.0707, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-0.594764, -28.4111, 5.96041, 1.38", "2.37073, -31.4761, 4.89817, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-0.594764, -28.4111, 5.96041, 0.55", "-1.29056, -29.9909, 5.36642, 0.55", "-2.02367, -31.9835, 4.73054, 0.55", "-2.63272, -33.3271, 4.22714, 0.55", "-3.0616, -34.4472, 3.69766, 0.55", "-3.90073, -36.7765, 2.39545, 0.55", "-4.47626, -38.3404, 1.44807, 0.55", "-4.95828, -39.7398, 0.572112, 0.55", "-6.22327, -43.1693, -1.68983, 0.55", "-7.78115, -47.1604, -4.39618, 0.55", "-8.96557, -50.1909, -6.53466, 0.55", "-9.69782, -52.1725, -7.91562, 0.55", "-10.5284, -54.5365, -9.48781, 0.55", "-11.5525, -57.8782, -11.4276, 0.55", "-12.1169, -60.2024, -12.5073, 0.55", "-12.8533, -63.5047, -13.676, 0.55", "-13.415, -66.5618, -14.5274, 0.55", "-13.899, -70.3241, -15.313, 0.55", "-14.2723, -74.6904, -15.9398, 0.55", "-14.3675, -77.9803, -16.1602, 0.55", "-14.3987, -79.6034, -16.1205, 0.55", "-14.4308, -83.3876, -15.7267, 0.55", "-14.4717, -86.921, -15.2476, 0.55", "-14.5409, -90.4594, -14.4475, 0.55", "-14.6671, -92.4959, -13.9163, 0.55", "-15.1746, -98.7931, -12.0715, 0.55", "-15.2195, -99.2575, -11.9313, 0.55", "-15.4977, -102.095, -10.9856, 0.55", "-16.2501, -107.21, -9.35179, 0.55", "-16.4454, -108.919, -8.88937, 0.55", "-16.5123, -111.588, -8.55837, 0.55", "-16.3751, -112.57, -8.59317, 0.55", "-15.4021, -115.849, -9.10078, 0.55", "-14.3921, -117.941, -9.70472, 0.55", "-12.2691, -121.239, -11.1464, 0.55", "-9.3363, -125.237, -13.0537, 0.28", "-8.50981, -126.219, -13.6234, 0.55", "-7.16477, -127.702, -14.5912, 0.28", "-6.95571, -127.926, -14.7481, 0.55", "-5.88796, -129.154, -15.5267, 0.28", "-5.61288, -129.579, -15.7316, 0.55", "-4.50346, -131.809, -16.4871, 0.28", "-4.15522, -132.573, -16.7556, 0.55", "-3.25106, -134.79, -17.4508, 0.28", "-2.96569, -135.488, -17.6656, 0.55", "-2.0216, -137.899, -18.3887, 0.28", "-1.57915, -139.007, -18.7221, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-11.7513, -69.9468, 53.8904, 0.55", "-16.5805, -78.9746, 63.5295, 0.55", "-22.4837, -86.5968, 73.7663, 0.55", "-28.2714, -95.1544, 83.3061, 0.55", "-34.3358, -103.712, 92.672, 0.55", "-39.3922, -114.006, 100.808, 0.55", "-44.1335, -123.909, 109.594, 0.55", "-48.141, -136.084, 115.377, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-11.7513, -69.9468, 53.8904, 0.55", "-11.3046, -78.9945, 62.8191, 0.55", "-10.1192, -89.425, 70.001, 0.55", "-10.96, -100.04, 76.9571, 0.55", "-12.3939, -111.303, 82.6901, 0.55", "-13.3379, -122.494, 88.6617, 0.55", "-14.2785, -133.223, 95.4276, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-50.3961, 41.0691, -18.1677, 0.83", "-50.0278, 42.725, -19.3225, 0.83", "-49.265, 46.6667, -21.8658, 0.55", "-48.9525, 48.3452, -22.844, 0.83", "-48.6288, 50.1223, -23.7853, 0.55", "-48.3309, 51.9097, -24.5315, 0.55", "-48.1908, 52.7897, -24.8041, 0.28", "-48.1509, 53.3455, -24.859, 0.55", "-48.0219, 55.1382, -24.6637, 0.28", "-47.9539, 55.9, -24.5399, 0.55", "-47.7649, 58.5259, -24.0098, 0.28", "-47.6784, 60.5887, -23.5291, 0.55", "-47.711, 63.7767, -22.7037, 0.28", "-47.846, 66.559, -21.94, 0.28", "-48.0169, 68.1013, -21.4964, 0.55", "-48.3341, 69.9179, -20.9876, 0.28", "-48.5456, 70.7763, -20.7416, 0.55", "-49.1434, 72.8006, -20.275, 0.28", "-49.6237, 74.1532, -20.0512, 0.28", "-50.1183, 75.4863, -19.8775, 0.28", "-50.3518, 76.1943, -19.7842, 0.55", "-51.1303, 79.0887, -19.4498, 0.28", "-51.9288, 82.5421, -19.0987, 0.55", "-52.1865, 83.7377, -18.9793, 0.55", "-52.4677, 84.9294, -18.8369, 0.55", "-53.1929, 87.4532, -18.5974, 0.55", "-53.7706, 89.1041, -18.4934, 0.28", "-54.0608, 89.7219, -18.4743, 0.55", "-54.9715, 91.3734, -18.406, 0.28", "-56.0046, 93.1359, -18.4173, 0.55", "-57.7172, 95.6592, -18.5748, 0.28", "-58.5446, 96.7044, -18.6951, 0.28", "-59.867, 98.162, -19.0459, 0.55", "-61.3375, 99.683, -19.512, 0.28", "-61.6036, 99.9194, -19.6037, 0.55", "-62.5586, 100.665, -19.9468, 0.28", "-65.8501, 103.029, -21.1043, 0.55", "-70.3837, 105.944, -22.9533, 0.28", "-71.2117, 106.438, -23.3539, 0.55", "-73.4751, 107.714, -24.5079, 0.28", "-74.4214, 108.24, -25.0208, 0.28", "-75.2374, 108.684, -25.5102, 0.55", "-77.5848, 109.722, -27.1819, 0.28", "-79.2416, 110.264, -28.3251, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-50.3961, 41.0691, -18.1677, 0.55", "-50.6207, 42.3871, -18.3286, 0.55", "-50.7726, 43.164, -18.3505, 0.28", "-50.9916, 43.7143, -18.2285, 0.55", "-51.4945, 44.9779, -17.9485, 0.28", "-51.8477, 45.8655, -17.7518, 0.55", "-52.4988, 47.5017, -17.3892, 0.28", "-52.9366, 48.3741, -17.039, 0.55", "-54.6056, 50.4195, -15.4468, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-131.907, -53.9843, -46.2882, 0.55", "-139.32, -64.6596, -51.229, 0.55", "-144.456, -76.4977, -56.4084, 0.55", "-147.791, -87.6294, -64.0435, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-131.907, -53.9843, -46.2882, 0.55", "-137.092, -59.2766, -52.7506, 0.55", "-141.197, -64.3001, -60.1381, 0.55", "-144.884, -69.3883, -67.6997, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-157.983, 17.1779, 27.979, 0.55", "-162.994, 17.2383, 30.2112, 0.55", "-168.176, 17.9658, 31.8614, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-157.983, 17.1779, 27.979, 0.55", "-168.695, 15.8559, 29.9426, 0.55", "-179.49, 16.3455, 31.8334, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "110.338, -41.4942, -81.5009, 0.28", "120.138, -47.7937, -93.8518, 0.28", "121.114, -48.4477, -94.9186, 0.55", "122.762, -49.5518, -96.7197, 0.28", "124.15, -50.4815, -98.2362, 0.28", "125.987, -51.7122, -100.244, 0.55", "128.408, -53.3347, -102.891, 0.55", "131.587, -55.3484, -103.818, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "110.338, -41.4942, -81.5009, 0.55", "111.535, -43.1346, -82.9232, 0.55", "111.936, -43.8845, -83.5668, 0.28", "112.558, -45.1789, -84.7028, 0.55", "113.929, -48.0303, -87.2054, 0.28", "114.879, -50.0065, -88.9398, 0.55", "116.489, -53.3546, -91.8782, 0.28", "118.37, -57.4815, -95.7984, 0.28", "119.16, -59.3902, -97.6454, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "170.602, -6.38799, -1.97156, 0.28", "172.817, -8.84718, -0.255747, 0.28", "175.564, -12.0352, 2.31826, 0.28", "177.286, -14.0854, 4.08548, 0.55", "178.315, -15.1881, 5.14481, 0.28", "178.86, -15.7809, 5.72144, 0.28", "181.574, -18.7207, 8.51153, 0.55", "182.182, -19.3443, 9.24523, 0.28", "183.585, -20.9751, 11.3021, 0.55", "184.794, -22.4163, 13.0062, 0.28", "185.86, -23.5849, 14.3733, 0.55", "187.127, -25.0157, 15.8871, 0.55", "189.206, -27.3814, 17.9175, 0.55", "189.711, -27.9698, 18.3879, 0.55", "191.523, -30.1852, 20.1016, 0.28", "192.23, -31.1033, 20.7663, 0.55", "193.217, -32.2655, 21.6234, 0.28", "194.626, -33.9397, 22.7468, 0.55", "197.037, -36.6787, 24.0745, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "170.602, -6.38799, -1.97156, 0.55", "167.662, -6.63349, -2.4485, 0.55", "165.275, -6.83285, -2.83581, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.37073, -31.4761, 4.89817, 0.83", "2.48038, -31.679, 4.87945, 0.83", "3.72686, -33.4609, 4.8263, 0.83", "4.81812, -35.0213, 4.67122, 0.55", "5.6887, -36.2662, 4.54751, 0.55", "7.53916, -38.9121, 4.28456, 0.83", "9.78365, -42.1215, 3.96561, 0.55", "11.005, -43.799, 3.83305, 0.83", "13.1552, -46.4569, 3.74504, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "2.37073, -31.4761, 4.89817, 0.55", "1.57014, -32.3501, 2.521, 0.55", "0.710796, -33.2883, -0.0305916, 0.55", "-0.303664, -34.3959, -3.04277, 0.55", "-1.53555, -35.7408, -6.70054, 0.55", "-2.2346, -36.504, -8.7762, 0.55", "-2.37503, -36.6573, -9.19316, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-14.2785, -133.223, 95.4276, 0.55", "-14.2795, -140.476, 100.721, 0.55", "-12.956, -148.126, 105.233, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-14.2785, -133.223, 95.4276, 0.55", "-15.0709, -141.323, 100.052, 0.55", "-16.2474, -149.198, 104.974, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-54.6056, 50.4195, -15.4468, 0.28", "-55.9421, 52.3113, -13.679, 0.28", "-56.4361, 53.0343, -12.9249, 0.55", "-57.8397, 55.1331, -10.6981, 0.28", "-58.5504, 56.1652, -9.70188, 0.55", "-60.5077, 58.9509, -7.10381, 0.28", "-62.4969, 61.7823, -4.46322, 0.55", "-65.7839, 66.23, -0.0314314, 0.28", "-66.4835, 67.1851, 0.912578, 0.55", "-68.0311, 69.4124, 2.90117, 0.28", "-68.6332, 70.3345, 3.67781, 0.55", "-75.7036, 76.4879, 10.6681, 0.55", "-83.8455, 83.665, 15.0173, 0.55", "-90.6412, 91.2908, 20.7079, 0.55", "-95.9605, 100.326, 25.8839, 0.55", "-102.553, 108.833, 30.4528, 0.55", "-109.974, 115.65, 36.3835, 0.55", "-116.467, 121.732, 43.9709, 0.55", "-121.723, 126.802, 53.1026, 0.55", "-127.044, 132.502, 61.8153, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-54.6056, 50.4195, -15.4468, 0.55", "-58.3285, 49.1994, -13.3161, 0.55", "-60.2622, 48.4961, -12.2064, 0.28", "-61.7013, 47.9727, -11.3806, 0.55", "-62.9006, 47.5364, -10.6924, 0.28", "-63.7407, 47.2309, -10.2103, 0.55", "-66.0571, 46.3884, -8.88106, 0.28", "-67.6164, 45.6689, -8.19178, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-147.791, -87.6294, -64.0435, 0.55", "-152.172, -97.8838, -66.3531, 0.55", "-156.552, -108.344, -67.3872, 0.55", "-159.748, -118.892, -70.2514, 0.55", "-164.32, -129.199, -71.8459, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-147.791, -87.6294, -64.0435, 0.55", "-151.802, -93.7739, -73.9306, 0.55", "-155.006, -98.3524, -84.9019, 0.55", "-159.46, -104.263, -94.7413, 0.55", "-166.403, -108.194, -104.119, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-144.884, -69.3883, -67.6997, 0.55", "-149.3, -71.9551, -77.8138, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-144.884, -69.3883, -67.6997, 0.55", "-151.632, -84.0767, -69.9498, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "131.587, -55.3484, -103.818, 0.28", "134.447, -56.1485, -104.998, 0.28", "135.775, -56.5202, -105.546, 0.55", "138.308, -57.2291, -106.591, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "131.587, -55.3484, -103.818, 0.55", "131.514, -56.6293, -104.61, 0.55", "131.369, -59.1917, -106.195, 0.28", "131.322, -60.0263, -106.712, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "119.16, -59.3902, -97.6454, 0.28", "120.896, -63.0064, -101.284, 0.28", "121.756, -64.7969, -103.086, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "119.16, -59.3902, -97.6454, 0.55", "117.427, -59.8898, -97.3556, 0.55", "112.597, -61.2831, -96.5475, 0.28", "111.449, -61.614, -96.3556, 0.55", "108.31, -62.5194, -95.8304, 0.28", "106.286, -63.103, -95.4919, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "13.1552, -46.4569, 3.74504, 0.83", "13.1986, -46.7325, 3.71374, 0.83", "13.8288, -50.3318, 3.39989, 0.83", "14.0809, -53.0364, 3.35725, 0.83", "14.1635, -55.6491, 3.60156, 0.83", "14.1723, -59.1243, 4.19968, 0.83", "14.084, -63.1293, 5.04618, 0.83", "14.024, -67.5922, 6.22457, 0.83", "13.9834, -71.9205, 7.57001, 0.83", "13.5755, -77.2573, 9.12726, 0.83", "13.2417, -79.7212, 9.71448, 0.83", "12.9738, -81.5785, 10.0401, 0.83", "12.3784, -85.1485, 10.5959, 0.83", "11.9051, -88.3481, 10.9118, 0.83", "11.201, -95.1778, 10.7975, 0.83", "10.819, -98.9276, 10.2475, 0.83", "10.4441, -102.391, 9.49122, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "13.1552, -46.4569, 3.74504, 0.55", "12.2225, -48.881, 3.89207, 0.55", "11.5191, -50.6389, 4.12838, 0.55", "11.0974, -51.7587, 4.39103, 0.55", "10.5174, -53.5025, 4.97141, 0.55", "9.45556, -56.9451, 6.34236, 0.55", "8.62697, -59.5452, 7.66554, 0.55", "7.96223, -61.6238, 8.94832, 0.55", "7.23806, -63.7227, 10.3925, 0.55", "6.6219, -65.4619, 11.6812, 0.28", "6.09563, -66.8791, 12.9426, 0.55", "5.07411, -69.4524, 15.6021, 0.55", "4.35911, -71.0304, 17.4035, 0.55", "3.94878, -71.9151, 18.4036, 0.55", "3.41222, -72.9631, 19.5275, 0.83", "1.79543, -76.0773, 22.6504, 0.28", "1.26168, -77.1086, 23.6557, 0.55", "0.356972, -78.9687, 25.4101, 0.28", "0.0781622, -79.541, 25.9929, 0.55", "-0.500735, -80.8814, 27.3357, 0.28", "-0.824173, -81.6449, 28.0425, 0.55", "-2.02505, -84.1548, 29.6658, 0.55", "-3.59561, -90.7593, 36.7017, 0.55", "-4.72416, -97.0139, 44.1313, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-2.37503, -36.6573, -9.19316, 0.55", "-4.10091, -37.752, -12.2167, 0.55", "-4.62406, -38.0165, -13.0746, 0.55", "-5.95578, -38.6844, -15.1614, 0.55", "-8.92371, -40.0324, -19.5636, 0.28", "-9.37605, -40.2209, -20.1826, 0.55", "-11.2811, -41.08, -22.6722, 0.55", "-13.969, -42.2722, -25.7677, 0.55", "-15.0086, -42.6898, -26.9216, 0.28", "-15.9414, -42.9828, -27.8699, 0.28", "-17.5975, -43.4566, -29.2414, 0.55", "-19.6085, -43.924, -30.9968, 0.28", "-21.4724, -44.1738, -32.6625, 0.55", "-22.9331, -44.2339, -33.9182, 0.55", "-23.9399, -44.1802, -34.8164, 0.55", "-26.8901, -43.8701, -37.5508, 0.55", "-30.0323, -43.3115, -40.3618, 0.55", "-31.3459, -43.0034, -41.4873, 0.28", "-32.5865, -42.7313, -42.5816, 0.55", "-35.0941, -42.3584, -44.7763, 0.28", "-35.9377, -42.2599, -45.506, 0.83", "-37.5419, -42.0609, -46.7531, 0.28", "-38.7256, -42.0183, -47.4932, 0.55", "-40.4468, -42.0213, -48.5329, 0.28", "-41.1384, -42.0143, -48.9235, 0.55", "-42.4332, -42.0294, -49.577, 0.55", "-44.4236, -41.8537, -50.4857, 0.55", "-45.7462, -41.6607, -51.0051, 0.28", "-46.8406, -41.3774, -51.3386, 0.55", "-48.1425, -40.89, -51.7351, 0.28", "-48.3569, -40.7932, -51.8071, 0.55", "-50.2777, -39.844, -52.7966, 0.28", "-51.6467, -39.1216, -53.66, 0.55", "-53.4158, -38.0387, -55.0459, 0.83", "-54.8439, -37.1056, -56.354, 0.28", "-55.2051, -36.8657, -56.7299, 0.55", "-57.9397, -35.0633, -59.7782, 0.28", "-58.4073, -34.7545, -60.3628, 0.55", "-59.7763, -33.7346, -62.1827, 0.28", "-60.129, -33.4722, -62.6554, 0.55", "-61.0496, -32.7915, -63.7987, 0.28", "-61.712, -32.3029, -64.5627, 0.55", "-63.2423, -31.2223, -66.0259, 0.28", "-64.154, -30.6511, -66.8587, 0.55", "-66.1139, -29.5674, -68.5285, 0.28", "-66.6974, -29.279, -69.0167, 0.55", "-67.6147, -28.9037, -69.7484, 0.28", "-68.3997, -28.5897, -70.3284, 0.55", "-70.0492, -27.9651, -71.4316, 0.28", "-70.5487, -27.7894, -71.7472, 0.55", "-74.2992, -26.4163, -73.9142, 0.28", "-75.6431, -25.8443, -74.5559, 0.55", "-78.076, -24.7148, -75.5454, 0.28", "-79.1812, -24.1642, -75.9575, 0.55", "-81.7384, -22.9254, -76.7605, 0.28", "-82.681, -22.5128, -77.0162, 0.55", "-86.0996, -21.3243, -77.7686, 0.28", "-87.5157, -21.0023, -78.0722, 0.55", "-89.5188, -20.8676, -78.4875, 0.55", "-90.7502, -20.863, -78.715, 0.55", "-93.2825, -20.9249, -78.9885, 0.28", "-95.7911, -21.0159, -79.1032, 0.28", "-97.888, -21.0863, -79.1388, 0.55", "-100.492, -20.9654, -78.9037, 0.28", "-101.803, -20.7564, -78.617, 0.55", "-104.967, -19.7915, -77.6282, 0.28", "-106.62, -19.0028, -76.7452, 0.55", "-107.695, -18.3425, -75.9516, 0.28", "-108.888, -17.6021, -74.783, 0.55", "-110.372, -16.6268, -73.1444, 0.28", "-110.936, -16.2882, -72.5305, 0.55", "-113.884, -14.8133, -69.703, 0.28", "-114.879, -14.3562, -68.7609, 0.55", "-117.235, -13.3636, -66.4622, 0.28", "-118.515, -12.8404, -65.2144, 0.55", "-119.568, -12.4122, -64.1909, 0.55", "-120.831, -11.9104, -63.0019, 0.28", "-121.505, -11.6561, -62.494, 0.55", "-123.787, -10.728, -60.9283, 0.28", "-124.984, -10.1047, -60.0814, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-2.37503, -36.6573, -9.19316, 0.55", "-2.10963, -36.6812, -9.77272, 0.55", "-1.83195, -36.635, -10.3451, 0.55", "-1.45509, -36.5209, -11.0374, 0.55", "-1.12896, -36.3763, -11.5849, 0.55", "1.22323, -34.9916, -14.9752, 0.55", "1.73891, -34.5801, -15.7427, 0.55", "2.47547, -33.8795, -16.8909, 0.55", "2.99043, -33.353, -17.7061, 0.55", "3.50003, -32.7871, -18.4821, 0.28", "4.31964, -31.8365, -19.62, 0.55", "5.60453, -30.3549, -21.2227, 0.28", "5.69446, -30.2623, -21.4003, 0.55", "6.02228, -29.9331, -22.7501, 0.28", "6.09685, -29.7866, -23.7037, 0.55", "6.08976, -29.7119, -24.7506, 0.55", "6.06175, -29.675, -26.6373, 0.55", "6.01988, -29.6271, -30.3412, 0.55", "6.03845, -29.6148, -32.8297, 0.55", "6.06843, -29.6153, -33.6884, 0.55", "6.39247, -29.5572, -39.3227, 0.55", "6.54136, -29.5115, -40.8424, 0.55", "6.68854, -29.4779, -41.6882, 0.55", "7.2082, -29.4266, -43.6311, 0.55", "8.75544, -29.5073, -48.231, 0.55", "9.23128, -29.5737, -49.4548, 0.28", "9.55857, -29.6368, -50.1329, 0.55", "10.0679, -29.7712, -51.131, 0.28", "10.3131, -29.8661, -51.5278, 0.55", "11.3376, -30.3106, -52.5116, 0.28", "12.3485, -30.9781, -52.7423, 0.55", "12.9697, -31.4656, -52.8442, 0.28", "13.5585, -32.0158, -52.8732, 0.55", "14.093, -32.6276, -52.8584, 0.28", "14.3287, -32.9468, -52.8609, 0.55", "14.8901, -33.7899, -52.8276, 0.28", "15.0338, -34.0427, -52.8592, 0.55", "15.8425, -35.4902, -53.1277, 0.28", "16.2281, -36.1546, -53.347, 0.55", "17.0909, -37.5616, -53.9949, 0.28", "17.4262, -38.0749, -54.2994, 0.55", "18.59, -39.7473, -55.4213, 0.28", "18.8739, -40.1529, -55.7139, 0.55", "19.7278, -41.441, -56.6888, 0.28", "19.9108, -41.7461, -56.8893, 0.55", "20.3656, -42.5566, -57.4081, 0.28", "20.6293, -43.0247, -57.7602, 0.55", "20.9018, -43.4808, -58.1483, 0.55", "21.4469, -44.391, -58.9151, 0.28", "21.8353, -44.9443, -59.4687, 0.55", "23.0778, -46.2745, -61.2446, 0.28", "23.5575, -46.6903, -61.9596, 0.55", "23.895, -46.9487, -62.445, 0.28", "24.243, -47.1775, -62.9296, 0.55", "25.3374, -47.7982, -64.3975, 0.28", "26.1798, -48.2829, -65.4828, 0.55", "27.6772, -49.2331, -67.2083, 0.28", "28.15, -49.5277, -67.7489, 0.55", "29.092, -50.0624, -68.6962, 0.28", "29.4161, -50.237, -68.984, 0.55", "29.9761, -50.5155, -69.35, 0.28", "30.4824, -50.7476, -69.6296, 0.55", "31.8906, -51.308, -70.2447, 0.28", "33.5102, -51.8865, -70.9222, 0.28", "34.3423, -52.1439, -71.2076, 0.28", "35.1687, -52.3771, -71.5431, 0.55", "36.3728, -52.6629, -72.0363, 0.28", "36.9107, -52.7822, -72.2443, 0.83", "38.2956, -53.1054, -72.7242, 0.28", "38.8895, -53.2582, -72.9652, 0.55", "41.4755, -54.0256, -74.1461, 0.28", "42.7435, -54.4227, -74.8391, 0.28", "43.6496, -54.7104, -75.4032, 0.55", "44.1609, -54.8886, -75.7924, 0.55", "45.4852, -55.3803, -76.9375, 0.28", "46.7085, -55.9011, -78.0633, 0.55", "47.8237, -56.4142, -79.0899, 0.28", "48.8143, -56.894, -80.0759, 0.55", "49.6347, -57.2794, -80.8853, 0.28", "50.3177, -57.5403, -81.5069, 0.55", "51.9896, -58.0659, -82.9221, 0.28", "52.8494, -58.3312, -83.6025, 0.55", "54.1572, -58.734, -84.5747, 0.28", "55.2346, -59.0305, -85.3437, 0.55", "57.7511, -59.6058, -87.144, 0.28", "58.7508, -59.777, -87.9461, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-12.956, -148.126, 105.233, 0.55", "-12.5235, -155.132, 108.793, 0.55", "-10.919, -162.573, 110.796, 0.55", "-10.0153, -169.817, 113.737, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-12.956, -148.126, 105.233, 0.55", "-12.0222, -156.018, 111.304, 0.55", "-12.6672, -162.859, 118.569, 0.55", "-13.5581, -168.058, 127.064, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-16.2474, -149.198, 104.974, 0.55", "-16.1738, -159.081, 110.545, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-16.2474, -149.198, 104.974, 0.55", "-18.536, -162.235, 112.591, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "10.4441, -102.391, 9.49122, 0.83", "11.4651, -105.688, 9.98438, 0.83", "12.4789, -108.449, 10.5909, 0.83", "13.4868, -111.194, 11.1937, 0.83", "14.4439, -113.801, 11.7662, 0.83", "15.9188, -117.818, 12.6485, 0.83", "17.3832, -121.807, 13.5244, 0.83", "18.6088, -124.418, 14.4228, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "10.4441, -102.391, 9.49122, 0.55", "11.5915, -103.816, 9.44067, 0.55", "12.4549, -104.937, 9.20267, 0.55", "13.0462, -105.771, 8.94607, 0.55", "13.5754, -106.763, 8.53373, 0.83", "14.0881, -107.898, 7.93425, 0.55", "14.5895, -109.009, 7.34788, 0.83", "15.0542, -110.222, 6.60648, 0.55", "15.316, -110.929, 6.11106, 0.83", "16.0506, -113.226, 4.33979, 0.55", "16.4691, -115.043, 2.85172, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-4.72416, -97.0139, 44.1313, 0.55", "-7.86416, -104.797, 49.6874, 0.55", "-12.3848, -111.669, 55.4888, 0.55", "-17.6065, -117.624, 61.7011, 0.55", "-23.7078, -122.445, 68.0922, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-4.72416, -97.0139, 44.1313, 0.55", "-7.1971, -106.096, 52.4687, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "18.6088, -124.418, 14.4228, 0.55", "18.7532, -126.063, 14.8762, 0.55", "18.9789, -128.157, 15.5215, 0.55", "19.1956, -130.134, 16.1204, 0.55", "19.3396, -131.541, 16.5209, 0.55", "19.5798, -134.053, 17.1902, 0.55", "20.4073, -141.102, 18.925, 0.55", "20.7719, -143.488, 19.4289, 0.55", "21.0579, -145.169, 19.7031, 0.55", "21.4411, -147.084, 19.8698, 0.55", "21.7482, -148.565, 19.8629, 0.55", "22.6043, -152.013, 19.7338, 0.55", "23.1656, -154.64, 19.608, 0.55", "23.566, -156.361, 19.5877, 0.55", "24.5282, -160.83, 19.7562, 0.55", "25.1211, -163.838, 19.9956, 0.55", "25.8462, -167.719, 20.5237, 0.55", "26.6358, -172.122, 21.4712, 0.55", "27.2448, -175.052, 22.3172, 0.55", "27.6337, -176.779, 22.8738, 0.55", "27.9644, -178.375, 23.3747, 0.55", "28.4417, -180.39, 23.9238, 0.55", "29.622, -185.249, 24.9064, 0.55", "30.1597, -187.121, 25.2342, 0.55", "30.713, -189.211, 25.572, 0.55", "31.5226, -192.352, 26.0563, 0.55", "32.028, -194.779, 26.4224, 0.55", "32.3849, -197.099, 26.7061, 0.55", "32.6289, -199.321, 26.9518, 0.55", "32.8228, -201.493, 27.2127, 0.55", "32.9739, -203.038, 27.3858, 0.55", "33.2592, -205.563, 27.5878, 0.55", "33.621, -208.594, 27.5936, 0.55", "33.8629, -210.061, 27.4978, 0.55", "34.115, -211.345, 27.3214, 0.55", "34.738, -213.753, 26.8753, 0.55", "35.129, -215.281, 26.5462, 0.55", "35.6128, -217.163, 26.2169, 0.55", "35.882, -218.493, 26.052, 0.55", "36.4844, -221.96, 25.7411, 0.55", "36.8234, -224.566, 25.675, 0.55", "37.1946, -228.613, 25.8795, 0.55", "37.4237, -231.223, 26.2669, 0.55", "37.6201, -233.968, 26.7552, 0.28", "37.6604, -235.075, 26.9887, 0.28", "37.6815, -237.768, 27.7895, 0.28", "37.6265, -240.261, 28.7151, 0.28", "37.7564, -243.531, 30.3463, 0.28", "39.4812, -250.752, 32.4325, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "18.6088, -124.418, 14.4228, 0.55", "19.5962, -124.77, 15.3328, 0.55", "21.5421, -125.716, 17.3602, 0.55", "23.1816, -126.671, 19.1889, 0.28", "24.9069, -127.769, 21.2103, 0.55", "25.8427, -128.48, 22.5909, 0.28", "27.3382, -129.773, 25.1749, 0.55", "27.8016, -130.482, 26.4993, 0.28", "27.9271, -130.742, 27.035, 0.28", "28.1326, -131.107, 27.9672, 0.55", "29.058, -132.279, 31.4353, 0.28", "29.4807, -132.729, 32.8752, 0.55", "31.031, -134.014, 36.916, 0.28", "31.9619, -134.633, 39.0033, 0.28", "33.2194, -135.426, 41.4955, 0.55", "35.301, -136.653, 44.9624, 0.28", "35.6159, -136.814, 45.3909, 0.55", "37.2667, -137.588, 47.3735, 0.28", "37.4311, -137.659, 47.5346, 0.55", "38.8668, -138.549, 49.0053, 0.28", "39.5223, -139.046, 49.7503, 0.55", "44.8382, -142.673, 55.9273, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-23.7078, -122.445, 68.0922, 0.55", "-27.6352, -125.842, 73.5248, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-23.7078, -122.445, 68.0922, 0.55", "-27.1536, -127.589, 70.7329, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_BP_a122f83294_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.3435, 8.54545, 2.8968, 0.83 ) }
    dend_43 { pt3dadd( -6.54811, 11.0293, 3.3801, 1.11 ) }
    dend_43 { pt3dadd( -8.43757, 12.4928, 3.63151, 0.83 ) }
    dend_43 { pt3dadd( -10.2733, 13.9023, 3.85676, 0.83 ) }
    dend_43 { pt3dadd( -11.3601, 14.7061, 3.98019, 1.11 ) }
    dend_43 { pt3dadd( -14.7637, 17.2176, 4.3758, 1.11 ) }
    dend_43 { pt3dadd( -20.8513, 21.5175, 5.07511, 0.83 ) }
    dend_43 { pt3dadd( -23.0444, 23.0076, 5.30604, 0.83 ) }
    dend_43 { pt3dadd( -24.7812, 24.1525, 5.44948, 0.83 ) }
    dend_43 { pt3dadd( -26.4747, 25.2871, 5.57364, 0.83 ) }
    dend_43 { pt3dadd( -27.8533, 26.2223, 5.64063, 0.55 ) }
    dend_43 { pt3dadd( -28.8896, 26.8555, 5.70862, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 5.44264, 6.60173, -6.47104, 0.55 ) }
    dend_28 { pt3dadd( 9.33033, 7.44272, -7.33924, 0.55 ) }
    dend_28 { pt3dadd( 11.5862, 7.65501, -8.48804, 0.83 ) }
    dend_28 { pt3dadd( 15.1566, 7.88094, -10.622, 0.55 ) }
    dend_28 { pt3dadd( 16.8801, 7.99, -11.6521, 1.38 ) }
    dend_28 { pt3dadd( 21.1177, 8.25815, -14.1849, 0.55 ) }
    dend_28 { pt3dadd( 22.9226, 8.16734, -15.3934, 0.83 ) }
    dend_28 { pt3dadd( 32.2588, 6.50206, -22.1836, 0.55 ) }
    dend_28 { pt3dadd( 33.1621, 6.27812, -22.9306, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.68487, -10.5531, 3.2562, 1.11 ) }
    dend_1 { pt3dadd( -0.734625, -14.9429, 4.82993, 1.11 ) }
    dend_1 { pt3dadd( -0.754887, -16.7307, 5.47085, 0.83 ) }
    dend_1 { pt3dadd( -0.781807, -19.1059, 6.32236, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 1.07494, 10.1854, -1.45684, 1.11 ) }
    dend_0 { pt3dadd( 1.37667, 12.4658, -1.48629, 1.11 ) }
    dend_0 { pt3dadd( 1.90733, 16.1835, -1.40252, 1.38 ) }
    dend_0 { pt3dadd( 1.94156, 16.3901, -1.39561, 1.38 ) }
    dend_0 { pt3dadd( 2.51951, 18.9328, -1.33985, 0.83 ) }
    dend_0 { pt3dadd( 3.28488, 21.6081, -1.18269, 0.83 ) }
    dend_0 { pt3dadd( 4.52485, 24.596, -0.747336, 0.83 ) }
    dend_0 { pt3dadd( 5.18044, 25.7129, -0.49776, 0.83 ) }
    dend_0 { pt3dadd( 5.79106, 26.5096, -0.276636, 1.11 ) }
    dend_0 { pt3dadd( 7.49282, 28.4308, 0.243028, 0.55 ) }
    dend_0 { pt3dadd( 9.46246, 30.4189, 0.879214, 0.83 ) }
    dend_0 { pt3dadd( 11.914, 32.4251, 1.51256, 0.55 ) }
    dend_0 { pt3dadd( 13.1181, 33.2415, 1.76167, 0.83 ) }
    dend_0 { pt3dadd( 14.8345, 34.3399, 2.2073, 0.55 ) }
    dend_0 { pt3dadd( 17.0052, 35.7387, 2.867, 0.55 ) }
    dend_0 { pt3dadd( 20.1147, 37.8586, 3.9538, 0.55 ) }
    dend_0 { pt3dadd( 23.5516, 40.2921, 5.15517, 0.55 ) }
    dend_0 { pt3dadd( 25.8176, 41.8694, 6.16172, 0.55 ) }
    dend_0 { pt3dadd( 28.7131, 43.8623, 7.6928, 0.55 ) }
    dend_0 { pt3dadd( 29.3297, 44.259, 8.0541, 0.83 ) }
    dend_0 { pt3dadd( 30.9926, 45.3047, 9.10054, 0.55 ) }
    dend_0 { pt3dadd( 32.355, 46.1139, 9.89985, 0.83 ) }
    dend_0 { pt3dadd( 35.5559, 48.3705, 11.8165, 0.55 ) }
    dend_0 { pt3dadd( 36.6733, 49.1983, 12.3112, 0.83 ) }
    dend_0 { pt3dadd( 37.6269, 49.796, 12.5726, 0.55 ) }
    dend_0 { pt3dadd( 38.5199, 50.3036, 12.7125, 0.83 ) }
    dend_0 { pt3dadd( 40.4195, 51.225, 12.8582, 0.83 ) }
    dend_0 { pt3dadd( 42.8658, 52.4912, 12.8669, 0.83 ) }
    dend_0 { pt3dadd( 44.3211, 53.3422, 12.7351, 0.55 ) }
    dend_0 { pt3dadd( 45.4417, 54.0912, 12.6396, 0.55 ) }
    dend_0 { pt3dadd( 48.3619, 56.0241, 12.3515, 0.83 ) }
    dend_0 { pt3dadd( 50.2222, 57.2644, 12.0996, 0.55 ) }
    dend_0 { pt3dadd( 53.0014, 59.0758, 11.6171, 0.55 ) }
    dend_0 { pt3dadd( 55.4991, 60.5787, 11.0851, 0.55 ) }
    dend_0 { pt3dadd( 57.7053, 61.8432, 10.5553, 0.55 ) }
    dend_0 { pt3dadd( 60.4368, 63.3105, 9.77045, 0.55 ) }
    dend_0 { pt3dadd( 62.0685, 64.002, 9.24105, 0.55 ) }
    dend_0 { pt3dadd( 63.1242, 64.3772, 8.75356, 0.55 ) }
    dend_0 { pt3dadd( 64.4566, 64.6062, 7.98874, 0.55 ) }
    dend_0 { pt3dadd( 66.3469, 64.5909, 6.67778, 0.55 ) }
    dend_0 { pt3dadd( 67.4905, 64.4068, 5.8109, 0.55 ) }
    dend_0 { pt3dadd( 69.2084, 64.0787, 4.67765, 0.55 ) }
    dend_0 { pt3dadd( 72.6165, 63.5671, 2.84188, 0.55 ) }
    dend_0 { pt3dadd( 75.3814, 63.2997, 1.603, 0.55 ) }
    dend_0 { pt3dadd( 78.3948, 63.1637, 0.468928, 0.55 ) }
    dend_0 { pt3dadd( 80.3921, 63.1425, -0.106157, 0.55 ) }
    dend_0 { pt3dadd( 85.7516, 63.5617, -1.27218, 0.55 ) }
    dend_0 { pt3dadd( 89.0307, 64.0468, -1.73961, 0.55 ) }
    dend_0 { pt3dadd( 91.5839, 64.56, -1.88226, 0.55 ) }
    dend_0 { pt3dadd( 93.1768, 65.11, -1.9173, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 95.0403, 65.9737, -1.96649, 0.55 ) }
    dend_0 { pt3dadd( 98.128, 67.7284, -2.28798, 0.55 ) }
    dend_0 { pt3dadd( 98.8057, 68.1564, -2.44616, 0.55 ) }
    dend_0 { pt3dadd( 100.698, 69.2931, -3.01497, 0.55 ) }
    dend_0 { pt3dadd( 102.45, 70.528, -3.54444, 0.83 ) }
    dend_0 { pt3dadd( 103.402, 71.2148, -3.84734, 0.55 ) }
    dend_0 { pt3dadd( 104.822, 72.4128, -4.35372, 0.83 ) }
    dend_0 { pt3dadd( 113.016, 78.7659, -5.1978, 0.83 ) }
    dend_0 { pt3dadd( 120.129, 86.2574, -6.41552, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -28.8896, 26.8555, 5.70862, 0.55 ) }
    dend_55 { pt3dadd( -30.7153, 27.646, 4.89969, 0.55 ) }
    dend_55 { pt3dadd( -32.7005, 28.5055, 4.02005, 0.55 ) }
    dend_55 { pt3dadd( -35.0963, 29.5428, 2.95852, 0.55 ) }
    dend_55 { pt3dadd( -37.0746, 30.3993, 2.08199, 0.83 ) }
    dend_55 { pt3dadd( -38.7324, 31.1171, 1.34745, 0.55 ) }
    dend_55 { pt3dadd( -41.8095, 32.4493, -0.0159511, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -28.8896, 26.8555, 5.70862, 0.55 ) }
    dend_44 { pt3dadd( -30.7638, 27.4347, 5.10837, 0.55 ) }
    dend_44 { pt3dadd( -32.8122, 27.9335, 4.65133, 0.55 ) }
    dend_44 { pt3dadd( -35.1497, 28.4804, 4.18739, 0.55 ) }
    dend_44 { pt3dadd( -38.6158, 29.1554, 3.80716, 0.55 ) }
    dend_44 { pt3dadd( -41.5695, 29.5855, 3.66239, 0.55 ) }
    dend_44 { pt3dadd( -44.7009, 29.9579, 3.62158, 0.55 ) }
    dend_44 { pt3dadd( -47.811, 30.0425, 3.83089, 0.55 ) }
    dend_44 { pt3dadd( -50.5543, 29.8116, 4.1793, 0.55 ) }
    dend_44 { pt3dadd( -54.0617, 29.2214, 4.87727, 0.55 ) }
    dend_44 { pt3dadd( -55.6367, 28.8174, 5.33653, 0.55 ) }
    dend_44 { pt3dadd( -57.3544, 28.3492, 5.88943, 0.55 ) }
    dend_44 { pt3dadd( -60.3576, 27.3592, 6.69905, 0.55 ) }
    dend_44 { pt3dadd( -61.9004, 26.8925, 6.92208, 0.55 ) }
    dend_44 { pt3dadd( -63.5149, 26.3618, 7.13569, 0.55 ) }
    dend_44 { pt3dadd( -65.3902, 25.7971, 7.22801, 0.55 ) }
    dend_44 { pt3dadd( -67.4146, 25.235, 7.28953, 0.55 ) }
    dend_44 { pt3dadd( -70.289, 24.4411, 7.31971, 0.55 ) }
    dend_44 { pt3dadd( -74.0427, 23.6983, 7.1163, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 33.1621, 6.27812, -22.9306, 0.55 ) }
    dend_34 { pt3dadd( 38.5543, 8.47795, -24.2588, 0.55 ) }
    dend_34 { pt3dadd( 41.7334, 9.4586, -25.4268, 0.55 ) }
    dend_34 { pt3dadd( 44.9004, 10.2771, -26.5912, 0.55 ) }
    dend_34 { pt3dadd( 47.0797, 10.752, -27.3655, 0.55 ) }
    dend_34 { pt3dadd( 50.2762, 11.3801, -28.4556, 0.55 ) }
    dend_34 { pt3dadd( 56.9467, 12.5122, -30.8898, 0.55 ) }
    dend_34 { pt3dadd( 64.5635, 13.6369, -34.1322, 0.55 ) }
    dend_34 { pt3dadd( 68.318, 13.9047, -35.8987, 0.55 ) }
    dend_34 { pt3dadd( 70.3479, 13.9726, -36.9593, 0.55 ) }
    dend_34 { pt3dadd( 72.5789, 14.0374, -38.2101, 0.55 ) }
    dend_34 { pt3dadd( 76.5778, 14.0532, -40.4023, 0.55 ) }
    dend_34 { pt3dadd( 78.0483, 13.9695, -41.2245, 0.55 ) }
    dend_34 { pt3dadd( 84.2846, 13.6546, -45.186, 0.55 ) }
    dend_34 { pt3dadd( 88.7121, 13.4263, -48.3085, 0.55 ) }
    dend_34 { pt3dadd( 91.2582, 13.325, -50.182, 0.55 ) }
    dend_34 { pt3dadd( 93.8012, 13.204, -52.0438, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 33.1621, 6.27812, -22.9306, 0.83 ) }
    dend_29 { pt3dadd( 35.2752, 7.84452, -23.0646, 0.83 ) }
    dend_29 { pt3dadd( 36.4851, 8.73257, -23.1996, 0.55 ) }
    dend_29 { pt3dadd( 38.2676, 10.0644, -23.5635, 0.83 ) }
    dend_29 { pt3dadd( 39.4646, 10.9882, -23.8501, 0.55 ) }
    dend_29 { pt3dadd( 41.1103, 12.3117, -24.2246, 0.83 ) }
    dend_29 { pt3dadd( 43.0831, 13.9523, -24.6015, 0.55 ) }
    dend_29 { pt3dadd( 44.0812, 14.7044, -24.7389, 0.55 ) }
    dend_29 { pt3dadd( 46.4017, 16.1231, -24.8474, 0.83 ) }
    dend_29 { pt3dadd( 48.5223, 17.1757, -24.6292, 0.55 ) }
    dend_29 { pt3dadd( 49.7048, 17.7637, -24.3872, 0.83 ) }
    dend_29 { pt3dadd( 51.4688, 18.7072, -23.833, 0.55 ) }
    dend_29 { pt3dadd( 53.9866, 20.1459, -22.7003, 0.55 ) }
    dend_29 { pt3dadd( 57.4935, 21.9736, -20.9161, 0.55 ) }
    dend_29 { pt3dadd( 60.8402, 23.6156, -18.9565, 0.55 ) }
    dend_29 { pt3dadd( 63.4926, 24.8921, -17.3504, 0.55 ) }
    dend_29 { pt3dadd( 67.8625, 27.0205, -14.6805, 0.55 ) }
    dend_29 { pt3dadd( 71.0483, 28.6823, -12.6632, 0.55 ) }
    dend_29 { pt3dadd( 72.9537, 29.8638, -11.3884, 0.55 ) }
    dend_29 { pt3dadd( 76.4263, 32.4268, -9.04697, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.781807, -19.1059, 6.32236, 0.83 ) }
    dend_11 { pt3dadd( -0.730281, -21.6692, 6.22265, 0.83 ) }
    dend_11 { pt3dadd( -0.68008, -24.1666, 6.1255, 0.83 ) }
    dend_11 { pt3dadd( -0.624031, -26.955, 6.01704, 0.83 ) }
    dend_11 { pt3dadd( -0.594764, -28.4111, 5.96041, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.781807, -19.1059, 6.32236, 0.55 ) }
    dend_2 { pt3dadd( -0.262464, -20.6343, 7.43327, 0.55 ) }
    dend_2 { pt3dadd( 0.179456, -22.5098, 8.86399, 0.55 ) }
    dend_2 { pt3dadd( 0.373708, -24.9755, 10.8143, 0.55 ) }
    dend_2 { pt3dadd( 0.380002, -25.9353, 11.5942, 0.83 ) }
    dend_2 { pt3dadd( 0.152517, -28.3891, 13.8517, 0.55 ) }
    dend_2 { pt3dadd( -0.0707892, -29.6584, 15.0352, 0.55 ) }
    dend_2 { pt3dadd( -0.564048, -32.1277, 17.4383, 0.83 ) }
    dend_2 { pt3dadd( -1.04369, -33.9634, 19.333, 0.55 ) }
    dend_2 { pt3dadd( -1.57263, -35.4804, 20.8639, 0.55 ) }
    dend_2 { pt3dadd( -2.63578, -38.3551, 23.7074, 0.55 ) }
    dend_2 { pt3dadd( -3.47912, -40.6462, 25.947, 0.55 ) }
    dend_2 { pt3dadd( -4.11958, -42.4821, 27.7704, 0.55 ) }
    dend_2 { pt3dadd( -4.68834, -44.4292, 29.6516, 0.28 ) }
    dend_2 { pt3dadd( -4.85507, -45.2389, 30.4083, 0.55 ) }
    dend_2 { pt3dadd( -5.11871, -46.7337, 31.7233, 0.28 ) }
    dend_2 { pt3dadd( -5.1891, -49.0612, 33.4327, 0.55 ) }
    dend_2 { pt3dadd( -7.32324, -56.8429, 39.4235, 0.55 ) }
    dend_2 { pt3dadd( -9.70952, -64.0386, 46.0212, 0.55 ) }
    dend_2 { pt3dadd( -11.7513, -69.9468, 53.8904, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -41.8095, 32.4493, -0.0159511, 0.55 ) }
    dend_61 { pt3dadd( -43.8447, 32.6006, 1.20426, 0.55 ) }
    dend_61 { pt3dadd( -44.6923, 32.6186, 1.82768, 0.83 ) }
    dend_61 { pt3dadd( -45.673, 32.5911, 2.69553, 0.55 ) }
    dend_61 { pt3dadd( -46.419, 32.5712, 3.4316, 0.83 ) }
    dend_61 { pt3dadd( -48.3778, 32.5924, 5.34059, 0.55 ) }
    dend_61 { pt3dadd( -49.1196, 32.6137, 6.06938, 0.28 ) }
    dend_61 { pt3dadd( -50.3501, 32.666, 7.39523, 0.55 ) }
    dend_61 { pt3dadd( -52.0021, 32.7463, 9.16577, 0.55 ) }
    dend_61 { pt3dadd( -53.2604, 32.8065, 10.4486, 0.55 ) }
    dend_61 { pt3dadd( -54.9449, 32.8853, 12.105, 0.28 ) }
    dend_61 { pt3dadd( -55.3863, 32.908, 12.4792, 0.55 ) }
    dend_61 { pt3dadd( -56.3027, 32.9658, 13.217, 0.28 ) }
    dend_61 { pt3dadd( -56.9295, 33.0206, 13.6563, 0.55 ) }
    dend_61 { pt3dadd( -58.2161, 33.1209, 14.4375, 0.28 ) }
    dend_61 { pt3dadd( -58.9723, 33.1358, 14.8561, 0.55 ) }
    dend_61 { pt3dadd( -60.3018, 33.0616, 15.608, 0.28 ) }
    dend_61 { pt3dadd( -61.1967, 33.005, 16.0806, 0.55 ) }
    dend_61 { pt3dadd( -66.4707, 32.2626, 21.4842, 0.55 ) }
    dend_61 { pt3dadd( -71.2108, 30.8315, 27.2329, 0.55 ) }
    dend_61 { pt3dadd( -75.727, 28.6966, 32.9436, 0.55 ) }
    dend_61 { pt3dadd( -80.2014, 25.692, 38.2837, 0.55 ) }
    dend_61 { pt3dadd( -83.8122, 23.0365, 44.4055, 0.55 ) }
    dend_61 { pt3dadd( -88.0053, 20.6315, 50.2535, 0.55 ) }
    dend_61 { pt3dadd( -92.3187, 19.4531, 56.383, 0.55 ) }
    dend_61 { pt3dadd( -96.5918, 17.6777, 62.3958, 0.55 ) }
    dend_61 { pt3dadd( -100.732, 16.4104, 68.6257, 0.55 ) }
    dend_61 { pt3dadd( -104.512, 15.0489, 75.0622, 0.55 ) }
    dend_61 { pt3dadd( -107.512, 12.8662, 81.6804, 0.55 ) }
    dend_61 { pt3dadd( -110.6, 11.3798, 88.4494, 0.55 ) }
    dend_61 { pt3dadd( -113.77, 9.13802, 94.9677, 0.55 ) }
    dend_61 { pt3dadd( -116.04, 6.61187, 101.752, 0.55 ) }
    dend_61 { pt3dadd( -117.051, 4.6444, 109.009, 0.55 ) }
    dend_61 { pt3dadd( -117.988, 1.29771, 115.754, 0.55 ) }
    dend_61 { pt3dadd( -117.839, -2.15141, 122.51, 0.55 ) }
    dend_61 { pt3dadd( -118.097, -5.3006, 129.408, 0.55 ) }
    dend_61 { pt3dadd( -119.175, -7.93463, 136.441, 0.55 ) }
    dend_61 { pt3dadd( -121.863, -9.44797, 143.373, 0.55 ) }
    dend_61 { pt3dadd( -123.869, -11.7741, 150.311, 0.55 ) }
    dend_61 { pt3dadd( -124.486, -12.8004, 157.803, 0.55 ) }
    dend_61 { pt3dadd( -126.334, -13.3122, 165.144, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -41.8095, 32.4493, -0.0159511, 0.55 ) }
    dend_56 { pt3dadd( -43.4866, 33.3325, -2.16686, 0.55 ) }
    dend_56 { pt3dadd( -44.743, 34.3285, -4.52806, 0.55 ) }
    dend_56 { pt3dadd( -45.9081, 35.5456, -7.00645, 0.55 ) }
    dend_56 { pt3dadd( -46.6376, 36.3077, -8.55839, 0.55 ) }
    dend_56 { pt3dadd( -47.9684, 37.698, -11.3893, 0.83 ) }
    dend_56 { pt3dadd( -48.9421, 38.7151, -13.4604, 0.55 ) }
    dend_56 { pt3dadd( -50.0229, 40.1252, -16.4896, 0.83 ) }
    dend_56 { pt3dadd( -50.3961, 41.0691, -18.1677, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -74.0427, 23.6983, 7.1163, 0.28 ) }
    dend_48 { pt3dadd( -75.1702, 21.5268, 6.40451, 0.28 ) }
    dend_48 { pt3dadd( -75.6993, 20.5965, 6.00931, 0.28 ) }
    dend_48 { pt3dadd( -76.3747, 19.2825, 5.41386, 0.55 ) }
    dend_48 { pt3dadd( -76.9298, 18.1264, 4.90777, 0.28 ) }
    dend_48 { pt3dadd( -77.7497, 16.3642, 4.16443, 0.55 ) }
    dend_48 { pt3dadd( -80.0323, 11.1805, 2.09037, 0.28 ) }
    dend_48 { pt3dadd( -80.7474, 9.36721, 1.22928, 0.55 ) }
    dend_48 { pt3dadd( -81.8125, 6.57791, -0.187595, 0.28 ) }
    dend_48 { pt3dadd( -82.4077, 4.9119, -1.10509, 0.55 ) }
    dend_48 { pt3dadd( -82.8144, 3.76476, -1.76539, 0.28 ) }
    dend_48 { pt3dadd( -83.2791, 2.44773, -2.51169, 0.55 ) }
    dend_48 { pt3dadd( -84.6705, -1.95296, -4.86137, 0.28 ) }
    dend_48 { pt3dadd( -85.104, -3.28233, -5.62307, 0.55 ) }
    dend_48 { pt3dadd( -85.8497, -5.30666, -7.0206, 0.28 ) }
    dend_48 { pt3dadd( -86.4793, -6.59726, -8.06129, 0.28 ) }
    dend_48 { pt3dadd( -87.0713, -7.45618, -8.82253, 0.55 ) }
    dend_48 { pt3dadd( -89.2133, -9.86332, -10.9799, 0.28 ) }
    dend_48 { pt3dadd( -90.2285, -10.8368, -11.86, 0.55 ) }
    dend_48 { pt3dadd( -92.7061, -13.0463, -14.0421, 0.28 ) }
    dend_48 { pt3dadd( -95.2071, -14.9961, -16.0837, 0.28 ) }
    dend_48 { pt3dadd( -97.9426, -16.848, -18.2015, 0.28 ) }
    dend_48 { pt3dadd( -99.2144, -17.5424, -19.0537, 0.55 ) }
    dend_48 { pt3dadd( -105.141, -25.448, -24.5219, 0.55 ) }
    dend_48 { pt3dadd( -112.154, -33.5484, -28.0904, 0.55 ) }
    dend_48 { pt3dadd( -118.742, -41.14, -33.2383, 0.55 ) }
    dend_48 { pt3dadd( -125.357, -47.9886, -39.3109, 0.55 ) }
    dend_48 { pt3dadd( -131.907, -53.9843, -46.2882, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -74.0427, 23.6983, 7.1163, 0.55 ) }
    dend_45 { pt3dadd( -74.8467, 23.6453, 7.06706, 0.55 ) }
    dend_45 { pt3dadd( -77.1696, 23.483, 7.2149, 0.55 ) }
    dend_45 { pt3dadd( -78.0515, 23.398, 7.31358, 0.55 ) }
    dend_45 { pt3dadd( -80.1319, 23.1361, 7.57224, 0.55 ) }
    dend_45 { pt3dadd( -83.303, 22.7723, 7.82636, 0.55 ) }
    dend_45 { pt3dadd( -84.9448, 22.6336, 7.93344, 0.28 ) }
    dend_45 { pt3dadd( -87.4914, 22.3665, 8.04942, 0.55 ) }
    dend_45 { pt3dadd( -89.3707, 22.1339, 8.06851, 0.55 ) }
    dend_45 { pt3dadd( -90.1647, 22.0304, 8.07792, 0.28 ) }
    dend_45 { pt3dadd( -94.9262, 21.4077, 8.1282, 0.55 ) }
    dend_45 { pt3dadd( -97.128, 21.0234, 8.01542, 0.28 ) }
    dend_45 { pt3dadd( -100.065, 20.5028, 7.69372, 0.28 ) }
    dend_45 { pt3dadd( -102.569, 20.0988, 7.27288, 0.55 ) }
    dend_45 { pt3dadd( -112.722, 19.8552, 7.81805, 0.55 ) }
    dend_45 { pt3dadd( -122.747, 19.2936, 9.44698, 0.55 ) }
    dend_45 { pt3dadd( -132.43, 17.6367, 12.0815, 0.55 ) }
    dend_45 { pt3dadd( -141.969, 17.6367, 15.6113, 0.55 ) }
    dend_45 { pt3dadd( -150.58, 17.1803, 21.0042, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -157.983, 17.1779, 27.979, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 93.8012, 13.204, -52.0438, 0.55 ) }
    dend_42 { pt3dadd( 97.3188, 14.1926, -55.0197, 0.55 ) }
    dend_42 { pt3dadd( 98.4451, 14.4398, -56.0157, 0.55 ) }
    dend_42 { pt3dadd( 99.8617, 14.7091, -57.2335, 0.55 ) }
    dend_42 { pt3dadd( 102.449, 15.1376, -59.583, 0.55 ) }
    dend_42 { pt3dadd( 105.173, 15.4626, -62.0695, 0.55 ) }
    dend_42 { pt3dadd( 106.521, 15.5297, -63.2251, 0.83 ) }
    dend_42 { pt3dadd( 107.651, 15.4929, -64.2353, 0.55 ) }
    dend_42 { pt3dadd( 108.514, 15.3805, -65.0518, 0.83 ) }
    dend_42 { pt3dadd( 110.654, 14.8133, -67.0772, 0.55 ) }
    dend_42 { pt3dadd( 112.445, 14.1996, -68.7154, 0.55 ) }
    dend_42 { pt3dadd( 114.499, 13.5051, -70.5078, 0.55 ) }
    dend_42 { pt3dadd( 116.778, 12.7777, -72.5601, 0.55 ) }
    dend_42 { pt3dadd( 118.316, 12.2497, -73.9611, 0.55 ) }
    dend_42 { pt3dadd( 120.055, 11.6365, -75.5886, 0.55 ) }
    dend_42 { pt3dadd( 121.557, 11.128, -77.0991, 0.55 ) }
    dend_42 { pt3dadd( 122.497, 10.8535, -78.1798, 0.55 ) }
    dend_42 { pt3dadd( 123.766, 10.2256, -80.3862, 0.55 ) }
    dend_42 { pt3dadd( 124.484, 9.77269, -81.7562, 0.55 ) }
    dend_42 { pt3dadd( 125.186, 9.03814, -83.5614, 0.55 ) }
    dend_42 { pt3dadd( 126.235, 7.67061, -86.5903, 0.55 ) }
    dend_42 { pt3dadd( 126.463, 7.33257, -87.266, 0.28 ) }
    dend_42 { pt3dadd( 129.348, 3.14602, -95.4487, 0.28 ) }
    dend_42 { pt3dadd( 130.271, 1.94986, -97.8533, 0.83 ) }
    dend_42 { pt3dadd( 133.808, -2.40877, -106.328, 0.83 ) }
    dend_42 { pt3dadd( 135.599, -4.57914, -110.211, 0.83 ) }
    dend_42 { pt3dadd( 136.429, -5.50965, -111.76, 0.55 ) }
    dend_42 { pt3dadd( 137.341, -6.40458, -113.264, 0.55 ) }
    dend_42 { pt3dadd( 139.656, -8.01881, -116.009, 0.55 ) }
    dend_42 { pt3dadd( 142.051, -9.39691, -118.399, 0.28 ) }
    dend_42 { pt3dadd( 142.699, -9.51523, -118.484, 0.55 ) }
    dend_42 { pt3dadd( 144.071, -9.56001, -118.231, 0.28 ) }
    dend_42 { pt3dadd( 144.9, -9.49971, -117.973, 0.55 ) }
    dend_42 { pt3dadd( 145.759, -9.42868, -117.63, 0.28 ) }
    dend_42 { pt3dadd( 146.779, -9.28118, -117.186, 0.55 ) }
    dend_42 { pt3dadd( 148.303, -9.02511, -116.706, 0.28 ) }
    dend_42 { pt3dadd( 149.536, -8.86696, -116.349, 0.55 ) }
    dend_42 { pt3dadd( 150.894, -8.63291, -116.086, 0.28 ) }
    dend_42 { pt3dadd( 152.753, -8.35223, -115.892, 0.55 ) }
    dend_42 { pt3dadd( 154.839, -8.02389, -115.81, 0.55 ) }
    dend_42 { pt3dadd( 156.679, -7.74626, -115.863, 0.28 ) }
    dend_42 { pt3dadd( 159.233, -7.37657, -116.08, 0.55 ) }
    dend_42 { pt3dadd( 163.666, -6.74357, -116.947, 0.55 ) }
    dend_42 { pt3dadd( 165.626, -6.42874, -117.587, 0.55 ) }
    dend_42 { pt3dadd( 166.469, -6.28351, -117.959, 0.83 ) }
    dend_42 { pt3dadd( 168.086, -6.03436, -118.814, 0.55 ) }
    dend_42 { pt3dadd( 169.206, -5.83655, -119.488, 0.83 ) }
    dend_42 { pt3dadd( 172.207, -5.23768, -121.354, 0.55 ) }
    dend_42 { pt3dadd( 174.065, -5.00509, -122.505, 0.28 ) }
    dend_42 { pt3dadd( 174.849, -4.93041, -122.893, 0.55 ) }
    dend_42 { pt3dadd( 177.012, -4.85144, -123.674, 0.28 ) }
    dend_42 { pt3dadd( 177.778, -4.87597, -123.881, 0.55 ) }
    dend_42 { pt3dadd( 179.354, -4.95633, -124.055, 0.28 ) }
    dend_42 { pt3dadd( 180.962, -5.11179, -123.932, 0.55 ) }
    dend_42 { pt3dadd( 184.197, -5.44228, -123.103, 0.28 ) }
    dend_42 { pt3dadd( 185.687, -5.61522, -122.555, 0.55 ) }
    dend_42 { pt3dadd( 187.915, -5.9601, -121.594, 0.28 ) }
    dend_42 { pt3dadd( 190.72, -6.36006, -120.29, 0.55 ) }
    dend_42 { pt3dadd( 192.742, -6.61549, -119.323, 0.55 ) }
    dend_42 { pt3dadd( 196.221, -6.94159, -117.624, 0.28 ) }
    dend_42 { pt3dadd( 197.646, -7.04401, -117.055, 0.55 ) }
    dend_42 { pt3dadd( 200.101, -7.15865, -116.369, 0.28 ) }
    dend_42 { pt3dadd( 202.529, -7.1417, -115.897, 0.55 ) }
    dend_42 { pt3dadd( 203.849, -7.03839, -115.856, 0.28 ) }
    dend_42 { pt3dadd( 205.022, -6.81702, -115.952, 0.55 ) }
    dend_42 { pt3dadd( 208.322, -6.08434, -116.586, 0.28 ) }
    dend_42 { pt3dadd( 210.653, -5.41311, -117.122, 0.28 ) }
    dend_42 { pt3dadd( 212.656, -4.69269, -117.659, 0.55 ) }
    dend_42 { pt3dadd( 214.864, -3.86677, -118.382, 0.28 ) }
    dend_42 { pt3dadd( 215.413, -3.6189, -118.555, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 93.8012, 13.204, -52.0438, 0.55 ) }
    dend_35 { pt3dadd( 94.599, 11.4027, -52.9488, 0.55 ) }
    dend_35 { pt3dadd( 95.1382, 9.86651, -53.6134, 0.28 ) }
    dend_35 { pt3dadd( 95.6247, 8.47185, -54.1062, 0.55 ) }
    dend_35 { pt3dadd( 96.8038, 5.53853, -55.1746, 0.28 ) }
    dend_35 { pt3dadd( 96.8744, 5.3502, -55.2676, 0.55 ) }
    dend_35 { pt3dadd( 97.2742, 4.35953, -55.832, 0.28 ) }
    dend_35 { pt3dadd( 97.5401, 3.51362, -56.4255, 0.55 ) }
    dend_35 { pt3dadd( 97.7761, 2.61203, -57.14, 0.28 ) }
    dend_35 { pt3dadd( 98.0683, 1.37077, -58.1674, 0.55 ) }
    dend_35 { pt3dadd( 98.7973, -1.74047, -60.6937, 0.55 ) }
    dend_35 { pt3dadd( 99.435, -4.5864, -63.0428, 0.55 ) }
    dend_35 { pt3dadd( 99.9247, -6.86493, -64.9237, 0.55 ) }
    dend_35 { pt3dadd( 100.368, -9.10713, -66.7375, 0.55 ) }
    dend_35 { pt3dadd( 100.48, -9.68429, -67.1839, 0.28 ) }
    dend_35 { pt3dadd( 100.612, -10.2929, -67.614, 0.55 ) }
    dend_35 { pt3dadd( 100.864, -11.1156, -68.1365, 0.28 ) }
    dend_35 { pt3dadd( 101.446, -12.5522, -68.9433, 0.55 ) }
    dend_35 { pt3dadd( 102.763, -15.2183, -70.0649, 0.55 ) }
    dend_35 { pt3dadd( 103.476, -16.6357, -70.5407, 0.28 ) }
    dend_35 { pt3dadd( 104.123, -18.0979, -71.0894, 0.55 ) }
    dend_35 { pt3dadd( 104.886, -20.1794, -71.9371, 0.28 ) }
    dend_35 { pt3dadd( 105.402, -21.8813, -72.6618, 0.55 ) }
    dend_35 { pt3dadd( 106.07, -24.4442, -73.7527, 0.28 ) }
    dend_35 { pt3dadd( 106.776, -27.0841, -74.8032, 0.55 ) }
    dend_35 { pt3dadd( 107.755, -30.929, -76.3616, 0.28 ) }
    dend_35 { pt3dadd( 108.235, -32.9865, -77.1997, 0.55 ) }
    dend_35 { pt3dadd( 108.696, -35.1018, -78.1047, 0.28 ) }
    dend_35 { pt3dadd( 109.09, -36.9798, -79.0108, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 109.667, -39.3378, -80.3311, 0.55 ) }
    dend_35 { pt3dadd( 110.338, -41.4942, -81.5009, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 76.4263, 32.4268, -9.04697, 0.55 ) }
    dend_31 { pt3dadd( 79.0252, 32.5639, -8.1522, 0.55 ) }
    dend_31 { pt3dadd( 80.9462, 32.5375, -7.65412, 0.55 ) }
    dend_31 { pt3dadd( 85.1804, 32.3668, -6.76155, 0.55 ) }
    dend_31 { pt3dadd( 87.1066, 32.2015, -6.51122, 0.55 ) }
    dend_31 { pt3dadd( 89.2177, 32.0324, -6.35299, 0.55 ) }
    dend_31 { pt3dadd( 92.0712, 31.7939, -6.34542, 0.55 ) }
    dend_31 { pt3dadd( 95.1182, 31.3837, -6.58219, 0.55 ) }
    dend_31 { pt3dadd( 96.7388, 31.0965, -6.87002, 0.55 ) }
    dend_31 { pt3dadd( 100.08, 30.3839, -7.86707, 0.55 ) }
    dend_31 { pt3dadd( 101.624, 30.0536, -8.37418, 0.55 ) }
    dend_31 { pt3dadd( 105.253, 29.1906, -9.6273, 0.55 ) }
    dend_31 { pt3dadd( 107.716, 28.5221, -10.4297, 0.55 ) }
    dend_31 { pt3dadd( 109.521, 28.0428, -10.9427, 0.83 ) }
    dend_31 { pt3dadd( 112.407, 27.1885, -11.7023, 0.55 ) }
    dend_31 { pt3dadd( 115.232, 26.2569, -12.3076, 0.83 ) }
    dend_31 { pt3dadd( 117.626, 25.3899, -12.7123, 0.55 ) }
    dend_31 { pt3dadd( 119.744, 24.678, -12.9802, 0.55 ) }
    dend_31 { pt3dadd( 120.938, 24.3405, -13.087, 0.83 ) }
    dend_31 { pt3dadd( 123.71, 23.6023, -13.2035, 0.28 ) }
    dend_31 { pt3dadd( 125.076, 23.3135, -13.1969, 0.28 ) }
    dend_31 { pt3dadd( 126.41, 22.9353, -13.2299, 0.28 ) }
    dend_31 { pt3dadd( 127.85, 22.5606, -13.2827, 0.28 ) }
    dend_31 { pt3dadd( 130.157, 21.9878, -13.4239, 0.28 ) }
    dend_31 { pt3dadd( 131.082, 21.7759, -13.4585, 0.55 ) }
    dend_31 { pt3dadd( 133.269, 21.3527, -13.3466, 0.55 ) }
    dend_31 { pt3dadd( 137.188, 20.6126, -12.9477, 0.55 ) }
    dend_31 { pt3dadd( 138.27, 20.3944, -12.7839, 0.55 ) }
    dend_31 { pt3dadd( 139.233, 20.1816, -12.5891, 0.83 ) }
    dend_31 { pt3dadd( 141.304, 19.8308, -12.0246, 0.55 ) }
    dend_31 { pt3dadd( 143.1, 19.5379, -11.5074, 0.55 ) }
    dend_31 { pt3dadd( 144.797, 19.2704, -11.0132, 0.55 ) }
    dend_31 { pt3dadd( 146.116, 19.0299, -10.6594, 0.55 ) }
    dend_31 { pt3dadd( 148.227, 18.4773, -10.153, 0.55 ) }
    dend_31 { pt3dadd( 150.744, 17.5753, -9.62264, 0.55 ) }
    dend_31 { pt3dadd( 154.709, 15.676, -8.92839, 0.55 ) }
    dend_31 { pt3dadd( 156.918, 14.293, -8.58404, 0.55 ) }
    dend_31 { pt3dadd( 158.861, 12.7638, -8.28151, 0.28 ) }
    dend_31 { pt3dadd( 159.451, 12.1819, -8.18639, 0.55 ) }
    dend_31 { pt3dadd( 160.781, 10.5224, -7.9289, 0.28 ) }
    dend_31 { pt3dadd( 161.956, 8.63869, -7.62656, 0.55 ) }
    dend_31 { pt3dadd( 163.086, 6.31104, -7.08918, 0.55 ) }
    dend_31 { pt3dadd( 163.839, 4.80571, -6.66198, 0.28 ) }
    dend_31 { pt3dadd( 164.11, 4.28304, -6.48409, 0.55 ) }
    dend_31 { pt3dadd( 164.808, 2.99339, -6.0217, 0.28 ) }
    dend_31 { pt3dadd( 165.751, 1.33312, -5.37499, 0.55 ) }
    dend_31 { pt3dadd( 168.18, -2.61587, -3.69923, 0.55 ) }
    dend_31 { pt3dadd( 169.438, -4.58781, -2.80737, 0.55 ) }
    dend_31 { pt3dadd( 170.602, -6.38799, -1.97156, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 76.4263, 32.4268, -9.04697, 0.55 ) }
    dend_30 { pt3dadd( 79.0648, 32.992, -7.02182, 0.55 ) }
    dend_30 { pt3dadd( 79.9116, 33.1708, -6.41964, 0.55 ) }
    dend_30 { pt3dadd( 83.0826, 33.6862, -4.31821, 0.55 ) }
    dend_30 { pt3dadd( 86.6157, 34.3307, -1.91729, 0.55 ) }
    dend_30 { pt3dadd( 91.1441, 35.1447, 1.28155, 0.55 ) }
    dend_30 { pt3dadd( 92.3948, 35.3711, 2.15668, 0.55 ) }
    dend_30 { pt3dadd( 94.6477, 35.6908, 3.70195, 0.55 ) }
    dend_30 { pt3dadd( 97.1122, 36.1, 5.30333, 0.55 ) }
    dend_30 { pt3dadd( 99.9701, 36.6584, 7.03718, 0.55 ) }
    dend_30 { pt3dadd( 102.66, 37.2228, 8.68194, 0.55 ) }
    dend_30 { pt3dadd( 104.129, 37.6015, 9.51675, 0.55 ) }
    dend_30 { pt3dadd( 105.848, 38.0964, 10.4954, 0.55 ) }
    dend_30 { pt3dadd( 107.969, 38.7719, 11.6687, 0.83 ) }
    dend_30 { pt3dadd( 111.445, 39.8771, 13.2177, 0.55 ) }
    dend_30 { pt3dadd( 113.757, 40.5183, 14.1274, 0.83 ) }
    dend_30 { pt3dadd( 116.983, 41.2613, 15.2735, 0.55 ) }
    dend_30 { pt3dadd( 117.979, 41.4353, 15.6094, 0.55 ) }
    dend_30 { pt3dadd( 121.085, 41.8224, 16.5817, 0.55 ) }
    dend_30 { pt3dadd( 126.678, 42.1843, 18.0883, 0.55 ) }
    dend_30 { pt3dadd( 130.797, 42.2253, 19.091, 0.55 ) }
    dend_30 { pt3dadd( 134.073, 42.1071, 19.9562, 0.55 ) }
    dend_30 { pt3dadd( 137.429, 41.8121, 20.9458, 0.55 ) }
    dend_30 { pt3dadd( 138.137, 41.7315, 21.1569, 0.28 ) }
    dend_30 { pt3dadd( 139.578, 41.512, 21.5799, 0.83 ) }
    dend_30 { pt3dadd( 145.504, 40.5262, 23.3477, 0.55 ) }
    dend_30 { pt3dadd( 149.649, 39.8427, 24.506, 0.55 ) }
    dend_30 { pt3dadd( 153.043, 39.3638, 25.543, 0.55 ) }
    dend_30 { pt3dadd( 155.07, 39.0713, 26.1815, 0.83 ) }
    dend_30 { pt3dadd( 156.665, 38.8636, 26.6877, 0.28 ) }
    dend_30 { pt3dadd( 158.111, 38.6777, 27.1335, 0.55 ) }
    dend_30 { pt3dadd( 169.106, 39.8745, 32.2893, 0.55 ) }
    dend_30 { pt3dadd( 180.93, 39.3343, 35.2552, 0.55 ) }
    dend_30 { pt3dadd( 192.559, 40.2447, 38.8388, 0.55 ) }
    dend_30 { pt3dadd( 203.119, 39.2865, 44.8781, 0.55 ) }
    dend_30 { pt3dadd( 213.108, 36.6319, 51.3638, 0.55 ) }
    dend_30 { pt3dadd( 224.147, 32.4138, 54.4059, 0.55 ) }
    dend_30 { pt3dadd( 235.099, 27.1186, 55.3592, 0.55 ) }
    dend_30 { pt3dadd( 246.907, 24.055, 55.6724, 0.55 ) }
    dend_30 { pt3dadd( 258.608, 20.7773, 56.789, 0.55 ) }
    dend_30 { pt3dadd( 270.653, 18.864, 57.1864, 0.55 ) }
    dend_30 { pt3dadd( 282.608, 17.4363, 59.1692, 0.55 ) }
    dend_30 { pt3dadd( 294.007, 13.8888, 61.697, 0.55 ) }
    dend_30 { pt3dadd( 305.51, 12.4515, 65.506, 0.55 ) }
    dend_30 { pt3dadd( 316.367, 12.7024, 71.0707, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -0.594764, -28.4111, 5.96041, 1.38 ) }
    dend_13 { pt3dadd( 2.37073, -31.4761, 4.89817, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -0.594764, -28.4111, 5.96041, 0.55 ) }
    dend_12 { pt3dadd( -1.29056, -29.9909, 5.36642, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -2.02367, -31.9835, 4.73054, 0.55 ) }
    dend_12 { pt3dadd( -2.63272, -33.3271, 4.22714, 0.55 ) }
    dend_12 { pt3dadd( -3.0616, -34.4472, 3.69766, 0.55 ) }
    dend_12 { pt3dadd( -3.90073, -36.7765, 2.39545, 0.55 ) }
    dend_12 { pt3dadd( -4.47626, -38.3404, 1.44807, 0.55 ) }
    dend_12 { pt3dadd( -4.95828, -39.7398, 0.572112, 0.55 ) }
    dend_12 { pt3dadd( -6.22327, -43.1693, -1.68983, 0.55 ) }
    dend_12 { pt3dadd( -7.78115, -47.1604, -4.39618, 0.55 ) }
    dend_12 { pt3dadd( -8.96557, -50.1909, -6.53466, 0.55 ) }
    dend_12 { pt3dadd( -9.69782, -52.1725, -7.91562, 0.55 ) }
    dend_12 { pt3dadd( -10.5284, -54.5365, -9.48781, 0.55 ) }
    dend_12 { pt3dadd( -11.5525, -57.8782, -11.4276, 0.55 ) }
    dend_12 { pt3dadd( -12.1169, -60.2024, -12.5073, 0.55 ) }
    dend_12 { pt3dadd( -12.8533, -63.5047, -13.676, 0.55 ) }
    dend_12 { pt3dadd( -13.415, -66.5618, -14.5274, 0.55 ) }
    dend_12 { pt3dadd( -13.899, -70.3241, -15.313, 0.55 ) }
    dend_12 { pt3dadd( -14.2723, -74.6904, -15.9398, 0.55 ) }
    dend_12 { pt3dadd( -14.3675, -77.9803, -16.1602, 0.55 ) }
    dend_12 { pt3dadd( -14.3987, -79.6034, -16.1205, 0.55 ) }
    dend_12 { pt3dadd( -14.4308, -83.3876, -15.7267, 0.55 ) }
    dend_12 { pt3dadd( -14.4717, -86.921, -15.2476, 0.55 ) }
    dend_12 { pt3dadd( -14.5409, -90.4594, -14.4475, 0.55 ) }
    dend_12 { pt3dadd( -14.6671, -92.4959, -13.9163, 0.55 ) }
    dend_12 { pt3dadd( -15.1746, -98.7931, -12.0715, 0.55 ) }
    dend_12 { pt3dadd( -15.2195, -99.2575, -11.9313, 0.55 ) }
    dend_12 { pt3dadd( -15.4977, -102.095, -10.9856, 0.55 ) }
    dend_12 { pt3dadd( -16.2501, -107.21, -9.35179, 0.55 ) }
    dend_12 { pt3dadd( -16.4454, -108.919, -8.88937, 0.55 ) }
    dend_12 { pt3dadd( -16.5123, -111.588, -8.55837, 0.55 ) }
    dend_12 { pt3dadd( -16.3751, -112.57, -8.59317, 0.55 ) }
    dend_12 { pt3dadd( -15.4021, -115.849, -9.10078, 0.55 ) }
    dend_12 { pt3dadd( -14.3921, -117.941, -9.70472, 0.55 ) }
    dend_12 { pt3dadd( -12.2691, -121.239, -11.1464, 0.55 ) }
    dend_12 { pt3dadd( -9.3363, -125.237, -13.0537, 0.28 ) }
    dend_12 { pt3dadd( -8.50981, -126.219, -13.6234, 0.55 ) }
    dend_12 { pt3dadd( -7.16477, -127.702, -14.5912, 0.28 ) }
    dend_12 { pt3dadd( -6.95571, -127.926, -14.7481, 0.55 ) }
    dend_12 { pt3dadd( -5.88796, -129.154, -15.5267, 0.28 ) }
    dend_12 { pt3dadd( -5.61288, -129.579, -15.7316, 0.55 ) }
    dend_12 { pt3dadd( -4.50346, -131.809, -16.4871, 0.28 ) }
    dend_12 { pt3dadd( -4.15522, -132.573, -16.7556, 0.55 ) }
    dend_12 { pt3dadd( -3.25106, -134.79, -17.4508, 0.28 ) }
    dend_12 { pt3dadd( -2.96569, -135.488, -17.6656, 0.55 ) }
    dend_12 { pt3dadd( -2.0216, -137.899, -18.3887, 0.28 ) }
    dend_12 { pt3dadd( -1.57915, -139.007, -18.7221, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -11.7513, -69.9468, 53.8904, 0.55 ) }
    dend_10 { pt3dadd( -16.5805, -78.9746, 63.5295, 0.55 ) }
    dend_10 { pt3dadd( -22.4837, -86.5968, 73.7663, 0.55 ) }
    dend_10 { pt3dadd( -28.2714, -95.1544, 83.3061, 0.55 ) }
    dend_10 { pt3dadd( -34.3358, -103.712, 92.672, 0.55 ) }
    dend_10 { pt3dadd( -39.3922, -114.006, 100.808, 0.55 ) }
    dend_10 { pt3dadd( -44.1335, -123.909, 109.594, 0.55 ) }
    dend_10 { pt3dadd( -48.141, -136.084, 115.377, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -11.7513, -69.9468, 53.8904, 0.55 ) }
    dend_3 { pt3dadd( -11.3046, -78.9945, 62.8191, 0.55 ) }
    dend_3 { pt3dadd( -10.1192, -89.425, 70.001, 0.55 ) }
    dend_3 { pt3dadd( -10.96, -100.04, 76.9571, 0.55 ) }
    dend_3 { pt3dadd( -12.3939, -111.303, 82.6901, 0.55 ) }
    dend_3 { pt3dadd( -13.3379, -122.494, 88.6617, 0.55 ) }
    dend_3 { pt3dadd( -14.2785, -133.223, 95.4276, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -50.3961, 41.0691, -18.1677, 0.83 ) }
    dend_60 { pt3dadd( -50.0278, 42.725, -19.3225, 0.83 ) }
    dend_60 { pt3dadd( -49.265, 46.6667, -21.8658, 0.55 ) }
    dend_60 { pt3dadd( -48.9525, 48.3452, -22.844, 0.83 ) }
    dend_60 { pt3dadd( -48.6288, 50.1223, -23.7853, 0.55 ) }
    dend_60 { pt3dadd( -48.3309, 51.9097, -24.5315, 0.55 ) }
    dend_60 { pt3dadd( -48.1908, 52.7897, -24.8041, 0.28 ) }
    dend_60 { pt3dadd( -48.1509, 53.3455, -24.859, 0.55 ) }
    dend_60 { pt3dadd( -48.0219, 55.1382, -24.6637, 0.28 ) }
    dend_60 { pt3dadd( -47.9539, 55.9, -24.5399, 0.55 ) }
    dend_60 { pt3dadd( -47.7649, 58.5259, -24.0098, 0.28 ) }
    dend_60 { pt3dadd( -47.6784, 60.5887, -23.5291, 0.55 ) }
    dend_60 { pt3dadd( -47.711, 63.7767, -22.7037, 0.28 ) }
    dend_60 { pt3dadd( -47.846, 66.559, -21.94, 0.28 ) }
    dend_60 { pt3dadd( -48.0169, 68.1013, -21.4964, 0.55 ) }
    dend_60 { pt3dadd( -48.3341, 69.9179, -20.9876, 0.28 ) }
    dend_60 { pt3dadd( -48.5456, 70.7763, -20.7416, 0.55 ) }
    dend_60 { pt3dadd( -49.1434, 72.8006, -20.275, 0.28 ) }
    dend_60 { pt3dadd( -49.6237, 74.1532, -20.0512, 0.28 ) }
    dend_60 { pt3dadd( -50.1183, 75.4863, -19.8775, 0.28 ) }
    dend_60 { pt3dadd( -50.3518, 76.1943, -19.7842, 0.55 ) }
    dend_60 { pt3dadd( -51.1303, 79.0887, -19.4498, 0.28 ) }
    dend_60 { pt3dadd( -51.9288, 82.5421, -19.0987, 0.55 ) }
    dend_60 { pt3dadd( -52.1865, 83.7377, -18.9793, 0.55 ) }
    dend_60 { pt3dadd( -52.4677, 84.9294, -18.8369, 0.55 ) }
    dend_60 { pt3dadd( -53.1929, 87.4532, -18.5974, 0.55 ) }
    dend_60 { pt3dadd( -53.7706, 89.1041, -18.4934, 0.28 ) }
    dend_60 { pt3dadd( -54.0608, 89.7219, -18.4743, 0.55 ) }
    dend_60 { pt3dadd( -54.9715, 91.3734, -18.406, 0.28 ) }
    dend_60 { pt3dadd( -56.0046, 93.1359, -18.4173, 0.55 ) }
    dend_60 { pt3dadd( -57.7172, 95.6592, -18.5748, 0.28 ) }
    dend_60 { pt3dadd( -58.5446, 96.7044, -18.6951, 0.28 ) }
    dend_60 { pt3dadd( -59.867, 98.162, -19.0459, 0.55 ) }
    dend_60 { pt3dadd( -61.3375, 99.683, -19.512, 0.28 ) }
    dend_60 { pt3dadd( -61.6036, 99.9194, -19.6037, 0.55 ) }
    dend_60 { pt3dadd( -62.5586, 100.665, -19.9468, 0.28 ) }
    dend_60 { pt3dadd( -65.8501, 103.029, -21.1043, 0.55 ) }
    dend_60 { pt3dadd( -70.3837, 105.944, -22.9533, 0.28 ) }
    dend_60 { pt3dadd( -71.2117, 106.438, -23.3539, 0.55 ) }
    dend_60 { pt3dadd( -73.4751, 107.714, -24.5079, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -74.4214, 108.24, -25.0208, 0.28 ) }
    dend_60 { pt3dadd( -75.2374, 108.684, -25.5102, 0.55 ) }
    dend_60 { pt3dadd( -77.5848, 109.722, -27.1819, 0.28 ) }
    dend_60 { pt3dadd( -79.2416, 110.264, -28.3251, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -50.3961, 41.0691, -18.1677, 0.55 ) }
    dend_57 { pt3dadd( -50.6207, 42.3871, -18.3286, 0.55 ) }
    dend_57 { pt3dadd( -50.7726, 43.164, -18.3505, 0.28 ) }
    dend_57 { pt3dadd( -50.9916, 43.7143, -18.2285, 0.55 ) }
    dend_57 { pt3dadd( -51.4945, 44.9779, -17.9485, 0.28 ) }
    dend_57 { pt3dadd( -51.8477, 45.8655, -17.7518, 0.55 ) }
    dend_57 { pt3dadd( -52.4988, 47.5017, -17.3892, 0.28 ) }
    dend_57 { pt3dadd( -52.9366, 48.3741, -17.039, 0.55 ) }
    dend_57 { pt3dadd( -54.6056, 50.4195, -15.4468, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -131.907, -53.9843, -46.2882, 0.55 ) }
    dend_52 { pt3dadd( -139.32, -64.6596, -51.229, 0.55 ) }
    dend_52 { pt3dadd( -144.456, -76.4977, -56.4084, 0.55 ) }
    dend_52 { pt3dadd( -147.791, -87.6294, -64.0435, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -131.907, -53.9843, -46.2882, 0.55 ) }
    dend_49 { pt3dadd( -137.092, -59.2766, -52.7506, 0.55 ) }
    dend_49 { pt3dadd( -141.197, -64.3001, -60.1381, 0.55 ) }
    dend_49 { pt3dadd( -144.884, -69.3883, -67.6997, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -157.983, 17.1779, 27.979, 0.55 ) }
    dend_47 { pt3dadd( -162.994, 17.2383, 30.2112, 0.55 ) }
    dend_47 { pt3dadd( -168.176, 17.9658, 31.8614, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -157.983, 17.1779, 27.979, 0.55 ) }
    dend_46 { pt3dadd( -168.695, 15.8559, 29.9426, 0.55 ) }
    dend_46 { pt3dadd( -179.49, 16.3455, 31.8334, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 110.338, -41.4942, -81.5009, 0.28 ) }
    dend_39 { pt3dadd( 120.138, -47.7937, -93.8518, 0.28 ) }
    dend_39 { pt3dadd( 121.114, -48.4477, -94.9186, 0.55 ) }
    dend_39 { pt3dadd( 122.762, -49.5518, -96.7197, 0.28 ) }
    dend_39 { pt3dadd( 124.15, -50.4815, -98.2362, 0.28 ) }
    dend_39 { pt3dadd( 125.987, -51.7122, -100.244, 0.55 ) }
    dend_39 { pt3dadd( 128.408, -53.3347, -102.891, 0.55 ) }
    dend_39 { pt3dadd( 131.587, -55.3484, -103.818, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 110.338, -41.4942, -81.5009, 0.55 ) }
    dend_36 { pt3dadd( 111.535, -43.1346, -82.9232, 0.55 ) }
    dend_36 { pt3dadd( 111.936, -43.8845, -83.5668, 0.28 ) }
    dend_36 { pt3dadd( 112.558, -45.1789, -84.7028, 0.55 ) }
    dend_36 { pt3dadd( 113.929, -48.0303, -87.2054, 0.28 ) }
    dend_36 { pt3dadd( 114.879, -50.0065, -88.9398, 0.55 ) }
    dend_36 { pt3dadd( 116.489, -53.3546, -91.8782, 0.28 ) }
    dend_36 { pt3dadd( 118.37, -57.4815, -95.7984, 0.28 ) }
    dend_36 { pt3dadd( 119.16, -59.3902, -97.6454, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 170.602, -6.38799, -1.97156, 0.28 ) }
    dend_33 { pt3dadd( 172.817, -8.84718, -0.255747, 0.28 ) }
    dend_33 { pt3dadd( 175.564, -12.0352, 2.31826, 0.28 ) }
    dend_33 { pt3dadd( 177.286, -14.0854, 4.08548, 0.55 ) }
    dend_33 { pt3dadd( 178.315, -15.1881, 5.14481, 0.28 ) }
    dend_33 { pt3dadd( 178.86, -15.7809, 5.72144, 0.28 ) }
    dend_33 { pt3dadd( 181.574, -18.7207, 8.51153, 0.55 ) }
    dend_33 { pt3dadd( 182.182, -19.3443, 9.24523, 0.28 ) }
    dend_33 { pt3dadd( 183.585, -20.9751, 11.3021, 0.55 ) }
    dend_33 { pt3dadd( 184.794, -22.4163, 13.0062, 0.28 ) }
    dend_33 { pt3dadd( 185.86, -23.5849, 14.3733, 0.55 ) }
    dend_33 { pt3dadd( 187.127, -25.0157, 15.8871, 0.55 ) }
    dend_33 { pt3dadd( 189.206, -27.3814, 17.9175, 0.55 ) }
    dend_33 { pt3dadd( 189.711, -27.9698, 18.3879, 0.55 ) }
    dend_33 { pt3dadd( 191.523, -30.1852, 20.1016, 0.28 ) }
    dend_33 { pt3dadd( 192.23, -31.1033, 20.7663, 0.55 ) }
    dend_33 { pt3dadd( 193.217, -32.2655, 21.6234, 0.28 ) }
    dend_33 { pt3dadd( 194.626, -33.9397, 22.7468, 0.55 ) }
    dend_33 { pt3dadd( 197.037, -36.6787, 24.0745, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 170.602, -6.38799, -1.97156, 0.55 ) }
    dend_32 { pt3dadd( 167.662, -6.63349, -2.4485, 0.55 ) }
    dend_32 { pt3dadd( 165.275, -6.83285, -2.83581, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.37073, -31.4761, 4.89817, 0.83 ) }
    dend_17 { pt3dadd( 2.48038, -31.679, 4.87945, 0.83 ) }
    dend_17 { pt3dadd( 3.72686, -33.4609, 4.8263, 0.83 ) }
    dend_17 { pt3dadd( 4.81812, -35.0213, 4.67122, 0.55 ) }
    dend_17 { pt3dadd( 5.6887, -36.2662, 4.54751, 0.55 ) }
    dend_17 { pt3dadd( 7.53916, -38.9121, 4.28456, 0.83 ) }
    dend_17 { pt3dadd( 9.78365, -42.1215, 3.96561, 0.55 ) }
    dend_17 { pt3dadd( 11.005, -43.799, 3.83305, 0.83 ) }
    dend_17 { pt3dadd( 13.1552, -46.4569, 3.74504, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 2.37073, -31.4761, 4.89817, 0.55 ) }
    dend_14 { pt3dadd( 1.57014, -32.3501, 2.521, 0.55 ) }
    dend_14 { pt3dadd( 0.710796, -33.2883, -0.0305916, 0.55 ) }
    dend_14 { pt3dadd( -0.303664, -34.3959, -3.04277, 0.55 ) }
    dend_14 { pt3dadd( -1.53555, -35.7408, -6.70054, 0.55 ) }
    dend_14 { pt3dadd( -2.2346, -36.504, -8.7762, 0.55 ) }
    dend_14 { pt3dadd( -2.37503, -36.6573, -9.19316, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -14.2785, -133.223, 95.4276, 0.55 ) }
    dend_7 { pt3dadd( -14.2795, -140.476, 100.721, 0.55 ) }
    dend_7 { pt3dadd( -12.956, -148.126, 105.233, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -14.2785, -133.223, 95.4276, 0.55 ) }
    dend_4 { pt3dadd( -15.0709, -141.323, 100.052, 0.55 ) }
    dend_4 { pt3dadd( -16.2474, -149.198, 104.974, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -54.6056, 50.4195, -15.4468, 0.28 ) }
    dend_59 { pt3dadd( -55.9421, 52.3113, -13.679, 0.28 ) }
    dend_59 { pt3dadd( -56.4361, 53.0343, -12.9249, 0.55 ) }
    dend_59 { pt3dadd( -57.8397, 55.1331, -10.6981, 0.28 ) }
    dend_59 { pt3dadd( -58.5504, 56.1652, -9.70188, 0.55 ) }
    dend_59 { pt3dadd( -60.5077, 58.9509, -7.10381, 0.28 ) }
    dend_59 { pt3dadd( -62.4969, 61.7823, -4.46322, 0.55 ) }
    dend_59 { pt3dadd( -65.7839, 66.23, -0.0314314, 0.28 ) }
    dend_59 { pt3dadd( -66.4835, 67.1851, 0.912578, 0.55 ) }
    dend_59 { pt3dadd( -68.0311, 69.4124, 2.90117, 0.28 ) }
    dend_59 { pt3dadd( -68.6332, 70.3345, 3.67781, 0.55 ) }
    dend_59 { pt3dadd( -75.7036, 76.4879, 10.6681, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -83.8455, 83.665, 15.0173, 0.55 ) }
    dend_59 { pt3dadd( -90.6412, 91.2908, 20.7079, 0.55 ) }
    dend_59 { pt3dadd( -95.9605, 100.326, 25.8839, 0.55 ) }
    dend_59 { pt3dadd( -102.553, 108.833, 30.4528, 0.55 ) }
    dend_59 { pt3dadd( -109.974, 115.65, 36.3835, 0.55 ) }
    dend_59 { pt3dadd( -116.467, 121.732, 43.9709, 0.55 ) }
    dend_59 { pt3dadd( -121.723, 126.802, 53.1026, 0.55 ) }
    dend_59 { pt3dadd( -127.044, 132.502, 61.8153, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -54.6056, 50.4195, -15.4468, 0.55 ) }
    dend_58 { pt3dadd( -58.3285, 49.1994, -13.3161, 0.55 ) }
    dend_58 { pt3dadd( -60.2622, 48.4961, -12.2064, 0.28 ) }
    dend_58 { pt3dadd( -61.7013, 47.9727, -11.3806, 0.55 ) }
    dend_58 { pt3dadd( -62.9006, 47.5364, -10.6924, 0.28 ) }
    dend_58 { pt3dadd( -63.7407, 47.2309, -10.2103, 0.55 ) }
    dend_58 { pt3dadd( -66.0571, 46.3884, -8.88106, 0.28 ) }
    dend_58 { pt3dadd( -67.6164, 45.6689, -8.19178, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -147.791, -87.6294, -64.0435, 0.55 ) }
    dend_54 { pt3dadd( -152.172, -97.8838, -66.3531, 0.55 ) }
    dend_54 { pt3dadd( -156.552, -108.344, -67.3872, 0.55 ) }
    dend_54 { pt3dadd( -159.748, -118.892, -70.2514, 0.55 ) }
    dend_54 { pt3dadd( -164.32, -129.199, -71.8459, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -147.791, -87.6294, -64.0435, 0.55 ) }
    dend_53 { pt3dadd( -151.802, -93.7739, -73.9306, 0.55 ) }
    dend_53 { pt3dadd( -155.006, -98.3524, -84.9019, 0.55 ) }
    dend_53 { pt3dadd( -159.46, -104.263, -94.7413, 0.55 ) }
    dend_53 { pt3dadd( -166.403, -108.194, -104.119, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -144.884, -69.3883, -67.6997, 0.55 ) }
    dend_51 { pt3dadd( -149.3, -71.9551, -77.8138, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -144.884, -69.3883, -67.6997, 0.55 ) }
    dend_50 { pt3dadd( -151.632, -84.0767, -69.9498, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 131.587, -55.3484, -103.818, 0.28 ) }
    dend_41 { pt3dadd( 134.447, -56.1485, -104.998, 0.28 ) }
    dend_41 { pt3dadd( 135.775, -56.5202, -105.546, 0.55 ) }
    dend_41 { pt3dadd( 138.308, -57.2291, -106.591, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 131.587, -55.3484, -103.818, 0.55 ) }
    dend_40 { pt3dadd( 131.514, -56.6293, -104.61, 0.55 ) }
    dend_40 { pt3dadd( 131.369, -59.1917, -106.195, 0.28 ) }
    dend_40 { pt3dadd( 131.322, -60.0263, -106.712, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 119.16, -59.3902, -97.6454, 0.28 ) }
    dend_38 { pt3dadd( 120.896, -63.0064, -101.284, 0.28 ) }
    dend_38 { pt3dadd( 121.756, -64.7969, -103.086, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 119.16, -59.3902, -97.6454, 0.55 ) }
    dend_37 { pt3dadd( 117.427, -59.8898, -97.3556, 0.55 ) }
    dend_37 { pt3dadd( 112.597, -61.2831, -96.5475, 0.28 ) }
    dend_37 { pt3dadd( 111.449, -61.614, -96.3556, 0.55 ) }
    dend_37 { pt3dadd( 108.31, -62.5194, -95.8304, 0.28 ) }
    dend_37 { pt3dadd( 106.286, -63.103, -95.4919, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 13.1552, -46.4569, 3.74504, 0.83 ) }
    dend_23 { pt3dadd( 13.1986, -46.7325, 3.71374, 0.83 ) }
    dend_23 { pt3dadd( 13.8288, -50.3318, 3.39989, 0.83 ) }
    dend_23 { pt3dadd( 14.0809, -53.0364, 3.35725, 0.83 ) }
    dend_23 { pt3dadd( 14.1635, -55.6491, 3.60156, 0.83 ) }
    dend_23 { pt3dadd( 14.1723, -59.1243, 4.19968, 0.83 ) }
    dend_23 { pt3dadd( 14.084, -63.1293, 5.04618, 0.83 ) }
    dend_23 { pt3dadd( 14.024, -67.5922, 6.22457, 0.83 ) }
    dend_23 { pt3dadd( 13.9834, -71.9205, 7.57001, 0.83 ) }
    dend_23 { pt3dadd( 13.5755, -77.2573, 9.12726, 0.83 ) }
    dend_23 { pt3dadd( 13.2417, -79.7212, 9.71448, 0.83 ) }
    dend_23 { pt3dadd( 12.9738, -81.5785, 10.0401, 0.83 ) }
    dend_23 { pt3dadd( 12.3784, -85.1485, 10.5959, 0.83 ) }
    dend_23 { pt3dadd( 11.9051, -88.3481, 10.9118, 0.83 ) }
    dend_23 { pt3dadd( 11.201, -95.1778, 10.7975, 0.83 ) }
    dend_23 { pt3dadd( 10.819, -98.9276, 10.2475, 0.83 ) }
    dend_23 { pt3dadd( 10.4441, -102.391, 9.49122, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 13.1552, -46.4569, 3.74504, 0.55 ) }
    dend_18 { pt3dadd( 12.2225, -48.881, 3.89207, 0.55 ) }
    dend_18 { pt3dadd( 11.5191, -50.6389, 4.12838, 0.55 ) }
    dend_18 { pt3dadd( 11.0974, -51.7587, 4.39103, 0.55 ) }
    dend_18 { pt3dadd( 10.5174, -53.5025, 4.97141, 0.55 ) }
    dend_18 { pt3dadd( 9.45556, -56.9451, 6.34236, 0.55 ) }
    dend_18 { pt3dadd( 8.62697, -59.5452, 7.66554, 0.55 ) }
    dend_18 { pt3dadd( 7.96223, -61.6238, 8.94832, 0.55 ) }
    dend_18 { pt3dadd( 7.23806, -63.7227, 10.3925, 0.55 ) }
    dend_18 { pt3dadd( 6.6219, -65.4619, 11.6812, 0.28 ) }
    dend_18 { pt3dadd( 6.09563, -66.8791, 12.9426, 0.55 ) }
    dend_18 { pt3dadd( 5.07411, -69.4524, 15.6021, 0.55 ) }
    dend_18 { pt3dadd( 4.35911, -71.0304, 17.4035, 0.55 ) }
    dend_18 { pt3dadd( 3.94878, -71.9151, 18.4036, 0.55 ) }
    dend_18 { pt3dadd( 3.41222, -72.9631, 19.5275, 0.83 ) }
    dend_18 { pt3dadd( 1.79543, -76.0773, 22.6504, 0.28 ) }
    dend_18 { pt3dadd( 1.26168, -77.1086, 23.6557, 0.55 ) }
    dend_18 { pt3dadd( 0.356972, -78.9687, 25.4101, 0.28 ) }
    dend_18 { pt3dadd( 0.0781622, -79.541, 25.9929, 0.55 ) }
    dend_18 { pt3dadd( -0.500735, -80.8814, 27.3357, 0.28 ) }
    dend_18 { pt3dadd( -0.824173, -81.6449, 28.0425, 0.55 ) }
    dend_18 { pt3dadd( -2.02505, -84.1548, 29.6658, 0.55 ) }
    dend_18 { pt3dadd( -3.59561, -90.7593, 36.7017, 0.55 ) }
    dend_18 { pt3dadd( -4.72416, -97.0139, 44.1313, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -2.37503, -36.6573, -9.19316, 0.55 ) }
    dend_16 { pt3dadd( -4.10091, -37.752, -12.2167, 0.55 ) }
    dend_16 { pt3dadd( -4.62406, -38.0165, -13.0746, 0.55 ) }
    dend_16 { pt3dadd( -5.95578, -38.6844, -15.1614, 0.55 ) }
    dend_16 { pt3dadd( -8.92371, -40.0324, -19.5636, 0.28 ) }
    dend_16 { pt3dadd( -9.37605, -40.2209, -20.1826, 0.55 ) }
    dend_16 { pt3dadd( -11.2811, -41.08, -22.6722, 0.55 ) }
    dend_16 { pt3dadd( -13.969, -42.2722, -25.7677, 0.55 ) }
    dend_16 { pt3dadd( -15.0086, -42.6898, -26.9216, 0.28 ) }
    dend_16 { pt3dadd( -15.9414, -42.9828, -27.8699, 0.28 ) }
    dend_16 { pt3dadd( -17.5975, -43.4566, -29.2414, 0.55 ) }
    dend_16 { pt3dadd( -19.6085, -43.924, -30.9968, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -21.4724, -44.1738, -32.6625, 0.55 ) }
    dend_16 { pt3dadd( -22.9331, -44.2339, -33.9182, 0.55 ) }
    dend_16 { pt3dadd( -23.9399, -44.1802, -34.8164, 0.55 ) }
    dend_16 { pt3dadd( -26.8901, -43.8701, -37.5508, 0.55 ) }
    dend_16 { pt3dadd( -30.0323, -43.3115, -40.3618, 0.55 ) }
    dend_16 { pt3dadd( -31.3459, -43.0034, -41.4873, 0.28 ) }
    dend_16 { pt3dadd( -32.5865, -42.7313, -42.5816, 0.55 ) }
    dend_16 { pt3dadd( -35.0941, -42.3584, -44.7763, 0.28 ) }
    dend_16 { pt3dadd( -35.9377, -42.2599, -45.506, 0.83 ) }
    dend_16 { pt3dadd( -37.5419, -42.0609, -46.7531, 0.28 ) }
    dend_16 { pt3dadd( -38.7256, -42.0183, -47.4932, 0.55 ) }
    dend_16 { pt3dadd( -40.4468, -42.0213, -48.5329, 0.28 ) }
    dend_16 { pt3dadd( -41.1384, -42.0143, -48.9235, 0.55 ) }
    dend_16 { pt3dadd( -42.4332, -42.0294, -49.577, 0.55 ) }
    dend_16 { pt3dadd( -44.4236, -41.8537, -50.4857, 0.55 ) }
    dend_16 { pt3dadd( -45.7462, -41.6607, -51.0051, 0.28 ) }
    dend_16 { pt3dadd( -46.8406, -41.3774, -51.3386, 0.55 ) }
    dend_16 { pt3dadd( -48.1425, -40.89, -51.7351, 0.28 ) }
    dend_16 { pt3dadd( -48.3569, -40.7932, -51.8071, 0.55 ) }
    dend_16 { pt3dadd( -50.2777, -39.844, -52.7966, 0.28 ) }
    dend_16 { pt3dadd( -51.6467, -39.1216, -53.66, 0.55 ) }
    dend_16 { pt3dadd( -53.4158, -38.0387, -55.0459, 0.83 ) }
    dend_16 { pt3dadd( -54.8439, -37.1056, -56.354, 0.28 ) }
    dend_16 { pt3dadd( -55.2051, -36.8657, -56.7299, 0.55 ) }
    dend_16 { pt3dadd( -57.9397, -35.0633, -59.7782, 0.28 ) }
    dend_16 { pt3dadd( -58.4073, -34.7545, -60.3628, 0.55 ) }
    dend_16 { pt3dadd( -59.7763, -33.7346, -62.1827, 0.28 ) }
    dend_16 { pt3dadd( -60.129, -33.4722, -62.6554, 0.55 ) }
    dend_16 { pt3dadd( -61.0496, -32.7915, -63.7987, 0.28 ) }
    dend_16 { pt3dadd( -61.712, -32.3029, -64.5627, 0.55 ) }
    dend_16 { pt3dadd( -63.2423, -31.2223, -66.0259, 0.28 ) }
    dend_16 { pt3dadd( -64.154, -30.6511, -66.8587, 0.55 ) }
    dend_16 { pt3dadd( -66.1139, -29.5674, -68.5285, 0.28 ) }
    dend_16 { pt3dadd( -66.6974, -29.279, -69.0167, 0.55 ) }
    dend_16 { pt3dadd( -67.6147, -28.9037, -69.7484, 0.28 ) }
    dend_16 { pt3dadd( -68.3997, -28.5897, -70.3284, 0.55 ) }
    dend_16 { pt3dadd( -70.0492, -27.9651, -71.4316, 0.28 ) }
    dend_16 { pt3dadd( -70.5487, -27.7894, -71.7472, 0.55 ) }
    dend_16 { pt3dadd( -74.2992, -26.4163, -73.9142, 0.28 ) }
    dend_16 { pt3dadd( -75.6431, -25.8443, -74.5559, 0.55 ) }
    dend_16 { pt3dadd( -78.076, -24.7148, -75.5454, 0.28 ) }
    dend_16 { pt3dadd( -79.1812, -24.1642, -75.9575, 0.55 ) }
    dend_16 { pt3dadd( -81.7384, -22.9254, -76.7605, 0.28 ) }
    dend_16 { pt3dadd( -82.681, -22.5128, -77.0162, 0.55 ) }
    dend_16 { pt3dadd( -86.0996, -21.3243, -77.7686, 0.28 ) }
    dend_16 { pt3dadd( -87.5157, -21.0023, -78.0722, 0.55 ) }
    dend_16 { pt3dadd( -89.5188, -20.8676, -78.4875, 0.55 ) }
    dend_16 { pt3dadd( -90.7502, -20.863, -78.715, 0.55 ) }
    dend_16 { pt3dadd( -93.2825, -20.9249, -78.9885, 0.28 ) }
    dend_16 { pt3dadd( -95.7911, -21.0159, -79.1032, 0.28 ) }
    dend_16 { pt3dadd( -97.888, -21.0863, -79.1388, 0.55 ) }
    dend_16 { pt3dadd( -100.492, -20.9654, -78.9037, 0.28 ) }
    dend_16 { pt3dadd( -101.803, -20.7564, -78.617, 0.55 ) }
    dend_16 { pt3dadd( -104.967, -19.7915, -77.6282, 0.28 ) }
    dend_16 { pt3dadd( -106.62, -19.0028, -76.7452, 0.55 ) }
    dend_16 { pt3dadd( -107.695, -18.3425, -75.9516, 0.28 ) }
    dend_16 { pt3dadd( -108.888, -17.6021, -74.783, 0.55 ) }
    dend_16 { pt3dadd( -110.372, -16.6268, -73.1444, 0.28 ) }
    dend_16 { pt3dadd( -110.936, -16.2882, -72.5305, 0.55 ) }
    dend_16 { pt3dadd( -113.884, -14.8133, -69.703, 0.28 ) }
    dend_16 { pt3dadd( -114.879, -14.3562, -68.7609, 0.55 ) }
    dend_16 { pt3dadd( -117.235, -13.3636, -66.4622, 0.28 ) }
    dend_16 { pt3dadd( -118.515, -12.8404, -65.2144, 0.55 ) }
    dend_16 { pt3dadd( -119.568, -12.4122, -64.1909, 0.55 ) }
    dend_16 { pt3dadd( -120.831, -11.9104, -63.0019, 0.28 ) }
    dend_16 { pt3dadd( -121.505, -11.6561, -62.494, 0.55 ) }
    dend_16 { pt3dadd( -123.787, -10.728, -60.9283, 0.28 ) }
    dend_16 { pt3dadd( -124.984, -10.1047, -60.0814, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -2.37503, -36.6573, -9.19316, 0.55 ) }
    dend_15 { pt3dadd( -2.10963, -36.6812, -9.77272, 0.55 ) }
    dend_15 { pt3dadd( -1.83195, -36.635, -10.3451, 0.55 ) }
    dend_15 { pt3dadd( -1.45509, -36.5209, -11.0374, 0.55 ) }
    dend_15 { pt3dadd( -1.12896, -36.3763, -11.5849, 0.55 ) }
    dend_15 { pt3dadd( 1.22323, -34.9916, -14.9752, 0.55 ) }
    dend_15 { pt3dadd( 1.73891, -34.5801, -15.7427, 0.55 ) }
    dend_15 { pt3dadd( 2.47547, -33.8795, -16.8909, 0.55 ) }
    dend_15 { pt3dadd( 2.99043, -33.353, -17.7061, 0.55 ) }
    dend_15 { pt3dadd( 3.50003, -32.7871, -18.4821, 0.28 ) }
    dend_15 { pt3dadd( 4.31964, -31.8365, -19.62, 0.55 ) }
    dend_15 { pt3dadd( 5.60453, -30.3549, -21.2227, 0.28 ) }
    dend_15 { pt3dadd( 5.69446, -30.2623, -21.4003, 0.55 ) }
    dend_15 { pt3dadd( 6.02228, -29.9331, -22.7501, 0.28 ) }
    dend_15 { pt3dadd( 6.09685, -29.7866, -23.7037, 0.55 ) }
    dend_15 { pt3dadd( 6.08976, -29.7119, -24.7506, 0.55 ) }
    dend_15 { pt3dadd( 6.06175, -29.675, -26.6373, 0.55 ) }
    dend_15 { pt3dadd( 6.01988, -29.6271, -30.3412, 0.55 ) }
    dend_15 { pt3dadd( 6.03845, -29.6148, -32.8297, 0.55 ) }
    dend_15 { pt3dadd( 6.06843, -29.6153, -33.6884, 0.55 ) }
    dend_15 { pt3dadd( 6.39247, -29.5572, -39.3227, 0.55 ) }
    dend_15 { pt3dadd( 6.54136, -29.5115, -40.8424, 0.55 ) }
    dend_15 { pt3dadd( 6.68854, -29.4779, -41.6882, 0.55 ) }
    dend_15 { pt3dadd( 7.2082, -29.4266, -43.6311, 0.55 ) }
    dend_15 { pt3dadd( 8.75544, -29.5073, -48.231, 0.55 ) }
    dend_15 { pt3dadd( 9.23128, -29.5737, -49.4548, 0.28 ) }
    dend_15 { pt3dadd( 9.55857, -29.6368, -50.1329, 0.55 ) }
    dend_15 { pt3dadd( 10.0679, -29.7712, -51.131, 0.28 ) }
    dend_15 { pt3dadd( 10.3131, -29.8661, -51.5278, 0.55 ) }
    dend_15 { pt3dadd( 11.3376, -30.3106, -52.5116, 0.28 ) }
    dend_15 { pt3dadd( 12.3485, -30.9781, -52.7423, 0.55 ) }
    dend_15 { pt3dadd( 12.9697, -31.4656, -52.8442, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 13.5585, -32.0158, -52.8732, 0.55 ) }
    dend_15 { pt3dadd( 14.093, -32.6276, -52.8584, 0.28 ) }
    dend_15 { pt3dadd( 14.3287, -32.9468, -52.8609, 0.55 ) }
    dend_15 { pt3dadd( 14.8901, -33.7899, -52.8276, 0.28 ) }
    dend_15 { pt3dadd( 15.0338, -34.0427, -52.8592, 0.55 ) }
    dend_15 { pt3dadd( 15.8425, -35.4902, -53.1277, 0.28 ) }
    dend_15 { pt3dadd( 16.2281, -36.1546, -53.347, 0.55 ) }
    dend_15 { pt3dadd( 17.0909, -37.5616, -53.9949, 0.28 ) }
    dend_15 { pt3dadd( 17.4262, -38.0749, -54.2994, 0.55 ) }
    dend_15 { pt3dadd( 18.59, -39.7473, -55.4213, 0.28 ) }
    dend_15 { pt3dadd( 18.8739, -40.1529, -55.7139, 0.55 ) }
    dend_15 { pt3dadd( 19.7278, -41.441, -56.6888, 0.28 ) }
    dend_15 { pt3dadd( 19.9108, -41.7461, -56.8893, 0.55 ) }
    dend_15 { pt3dadd( 20.3656, -42.5566, -57.4081, 0.28 ) }
    dend_15 { pt3dadd( 20.6293, -43.0247, -57.7602, 0.55 ) }
    dend_15 { pt3dadd( 20.9018, -43.4808, -58.1483, 0.55 ) }
    dend_15 { pt3dadd( 21.4469, -44.391, -58.9151, 0.28 ) }
    dend_15 { pt3dadd( 21.8353, -44.9443, -59.4687, 0.55 ) }
    dend_15 { pt3dadd( 23.0778, -46.2745, -61.2446, 0.28 ) }
    dend_15 { pt3dadd( 23.5575, -46.6903, -61.9596, 0.55 ) }
    dend_15 { pt3dadd( 23.895, -46.9487, -62.445, 0.28 ) }
    dend_15 { pt3dadd( 24.243, -47.1775, -62.9296, 0.55 ) }
    dend_15 { pt3dadd( 25.3374, -47.7982, -64.3975, 0.28 ) }
    dend_15 { pt3dadd( 26.1798, -48.2829, -65.4828, 0.55 ) }
    dend_15 { pt3dadd( 27.6772, -49.2331, -67.2083, 0.28 ) }
    dend_15 { pt3dadd( 28.15, -49.5277, -67.7489, 0.55 ) }
    dend_15 { pt3dadd( 29.092, -50.0624, -68.6962, 0.28 ) }
    dend_15 { pt3dadd( 29.4161, -50.237, -68.984, 0.55 ) }
    dend_15 { pt3dadd( 29.9761, -50.5155, -69.35, 0.28 ) }
    dend_15 { pt3dadd( 30.4824, -50.7476, -69.6296, 0.55 ) }
    dend_15 { pt3dadd( 31.8906, -51.308, -70.2447, 0.28 ) }
    dend_15 { pt3dadd( 33.5102, -51.8865, -70.9222, 0.28 ) }
    dend_15 { pt3dadd( 34.3423, -52.1439, -71.2076, 0.28 ) }
    dend_15 { pt3dadd( 35.1687, -52.3771, -71.5431, 0.55 ) }
    dend_15 { pt3dadd( 36.3728, -52.6629, -72.0363, 0.28 ) }
    dend_15 { pt3dadd( 36.9107, -52.7822, -72.2443, 0.83 ) }
    dend_15 { pt3dadd( 38.2956, -53.1054, -72.7242, 0.28 ) }
    dend_15 { pt3dadd( 38.8895, -53.2582, -72.9652, 0.55 ) }
    dend_15 { pt3dadd( 41.4755, -54.0256, -74.1461, 0.28 ) }
    dend_15 { pt3dadd( 42.7435, -54.4227, -74.8391, 0.28 ) }
    dend_15 { pt3dadd( 43.6496, -54.7104, -75.4032, 0.55 ) }
    dend_15 { pt3dadd( 44.1609, -54.8886, -75.7924, 0.55 ) }
    dend_15 { pt3dadd( 45.4852, -55.3803, -76.9375, 0.28 ) }
    dend_15 { pt3dadd( 46.7085, -55.9011, -78.0633, 0.55 ) }
    dend_15 { pt3dadd( 47.8237, -56.4142, -79.0899, 0.28 ) }
    dend_15 { pt3dadd( 48.8143, -56.894, -80.0759, 0.55 ) }
    dend_15 { pt3dadd( 49.6347, -57.2794, -80.8853, 0.28 ) }
    dend_15 { pt3dadd( 50.3177, -57.5403, -81.5069, 0.55 ) }
    dend_15 { pt3dadd( 51.9896, -58.0659, -82.9221, 0.28 ) }
    dend_15 { pt3dadd( 52.8494, -58.3312, -83.6025, 0.55 ) }
    dend_15 { pt3dadd( 54.1572, -58.734, -84.5747, 0.28 ) }
    dend_15 { pt3dadd( 55.2346, -59.0305, -85.3437, 0.55 ) }
    dend_15 { pt3dadd( 57.7511, -59.6058, -87.144, 0.28 ) }
    dend_15 { pt3dadd( 58.7508, -59.777, -87.9461, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -12.956, -148.126, 105.233, 0.55 ) }
    dend_9 { pt3dadd( -12.5235, -155.132, 108.793, 0.55 ) }
    dend_9 { pt3dadd( -10.919, -162.573, 110.796, 0.55 ) }
    dend_9 { pt3dadd( -10.0153, -169.817, 113.737, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -12.956, -148.126, 105.233, 0.55 ) }
    dend_8 { pt3dadd( -12.0222, -156.018, 111.304, 0.55 ) }
    dend_8 { pt3dadd( -12.6672, -162.859, 118.569, 0.55 ) }
    dend_8 { pt3dadd( -13.5581, -168.058, 127.064, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -16.2474, -149.198, 104.974, 0.55 ) }
    dend_6 { pt3dadd( -16.1738, -159.081, 110.545, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -16.2474, -149.198, 104.974, 0.55 ) }
    dend_5 { pt3dadd( -18.536, -162.235, 112.591, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 10.4441, -102.391, 9.49122, 0.83 ) }
    dend_25 { pt3dadd( 11.4651, -105.688, 9.98438, 0.83 ) }
    dend_25 { pt3dadd( 12.4789, -108.449, 10.5909, 0.83 ) }
    dend_25 { pt3dadd( 13.4868, -111.194, 11.1937, 0.83 ) }
    dend_25 { pt3dadd( 14.4439, -113.801, 11.7662, 0.83 ) }
    dend_25 { pt3dadd( 15.9188, -117.818, 12.6485, 0.83 ) }
    dend_25 { pt3dadd( 17.3832, -121.807, 13.5244, 0.83 ) }
    dend_25 { pt3dadd( 18.6088, -124.418, 14.4228, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 10.4441, -102.391, 9.49122, 0.55 ) }
    dend_24 { pt3dadd( 11.5915, -103.816, 9.44067, 0.55 ) }
    dend_24 { pt3dadd( 12.4549, -104.937, 9.20267, 0.55 ) }
    dend_24 { pt3dadd( 13.0462, -105.771, 8.94607, 0.55 ) }
    dend_24 { pt3dadd( 13.5754, -106.763, 8.53373, 0.83 ) }
    dend_24 { pt3dadd( 14.0881, -107.898, 7.93425, 0.55 ) }
    dend_24 { pt3dadd( 14.5895, -109.009, 7.34788, 0.83 ) }
    dend_24 { pt3dadd( 15.0542, -110.222, 6.60648, 0.55 ) }
    dend_24 { pt3dadd( 15.316, -110.929, 6.11106, 0.83 ) }
    dend_24 { pt3dadd( 16.0506, -113.226, 4.33979, 0.55 ) }
    dend_24 { pt3dadd( 16.4691, -115.043, 2.85172, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -4.72416, -97.0139, 44.1313, 0.55 ) }
    dend_20 { pt3dadd( -7.86416, -104.797, 49.6874, 0.55 ) }
    dend_20 { pt3dadd( -12.3848, -111.669, 55.4888, 0.55 ) }
    dend_20 { pt3dadd( -17.6065, -117.624, 61.7011, 0.55 ) }
    dend_20 { pt3dadd( -23.7078, -122.445, 68.0922, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -4.72416, -97.0139, 44.1313, 0.55 ) }
    dend_19 { pt3dadd( -7.1971, -106.096, 52.4687, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 18.6088, -124.418, 14.4228, 0.55 ) }
    dend_27 { pt3dadd( 18.7532, -126.063, 14.8762, 0.55 ) }
    dend_27 { pt3dadd( 18.9789, -128.157, 15.5215, 0.55 ) }
    dend_27 { pt3dadd( 19.1956, -130.134, 16.1204, 0.55 ) }
    dend_27 { pt3dadd( 19.3396, -131.541, 16.5209, 0.55 ) }
    dend_27 { pt3dadd( 19.5798, -134.053, 17.1902, 0.55 ) }
    dend_27 { pt3dadd( 20.4073, -141.102, 18.925, 0.55 ) }
    dend_27 { pt3dadd( 20.7719, -143.488, 19.4289, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 21.0579, -145.169, 19.7031, 0.55 ) }
    dend_27 { pt3dadd( 21.4411, -147.084, 19.8698, 0.55 ) }
    dend_27 { pt3dadd( 21.7482, -148.565, 19.8629, 0.55 ) }
    dend_27 { pt3dadd( 22.6043, -152.013, 19.7338, 0.55 ) }
    dend_27 { pt3dadd( 23.1656, -154.64, 19.608, 0.55 ) }
    dend_27 { pt3dadd( 23.566, -156.361, 19.5877, 0.55 ) }
    dend_27 { pt3dadd( 24.5282, -160.83, 19.7562, 0.55 ) }
    dend_27 { pt3dadd( 25.1211, -163.838, 19.9956, 0.55 ) }
    dend_27 { pt3dadd( 25.8462, -167.719, 20.5237, 0.55 ) }
    dend_27 { pt3dadd( 26.6358, -172.122, 21.4712, 0.55 ) }
    dend_27 { pt3dadd( 27.2448, -175.052, 22.3172, 0.55 ) }
    dend_27 { pt3dadd( 27.6337, -176.779, 22.8738, 0.55 ) }
    dend_27 { pt3dadd( 27.9644, -178.375, 23.3747, 0.55 ) }
    dend_27 { pt3dadd( 28.4417, -180.39, 23.9238, 0.55 ) }
    dend_27 { pt3dadd( 29.622, -185.249, 24.9064, 0.55 ) }
    dend_27 { pt3dadd( 30.1597, -187.121, 25.2342, 0.55 ) }
    dend_27 { pt3dadd( 30.713, -189.211, 25.572, 0.55 ) }
    dend_27 { pt3dadd( 31.5226, -192.352, 26.0563, 0.55 ) }
    dend_27 { pt3dadd( 32.028, -194.779, 26.4224, 0.55 ) }
    dend_27 { pt3dadd( 32.3849, -197.099, 26.7061, 0.55 ) }
    dend_27 { pt3dadd( 32.6289, -199.321, 26.9518, 0.55 ) }
    dend_27 { pt3dadd( 32.8228, -201.493, 27.2127, 0.55 ) }
    dend_27 { pt3dadd( 32.9739, -203.038, 27.3858, 0.55 ) }
    dend_27 { pt3dadd( 33.2592, -205.563, 27.5878, 0.55 ) }
    dend_27 { pt3dadd( 33.621, -208.594, 27.5936, 0.55 ) }
    dend_27 { pt3dadd( 33.8629, -210.061, 27.4978, 0.55 ) }
    dend_27 { pt3dadd( 34.115, -211.345, 27.3214, 0.55 ) }
    dend_27 { pt3dadd( 34.738, -213.753, 26.8753, 0.55 ) }
    dend_27 { pt3dadd( 35.129, -215.281, 26.5462, 0.55 ) }
    dend_27 { pt3dadd( 35.6128, -217.163, 26.2169, 0.55 ) }
    dend_27 { pt3dadd( 35.882, -218.493, 26.052, 0.55 ) }
    dend_27 { pt3dadd( 36.4844, -221.96, 25.7411, 0.55 ) }
    dend_27 { pt3dadd( 36.8234, -224.566, 25.675, 0.55 ) }
    dend_27 { pt3dadd( 37.1946, -228.613, 25.8795, 0.55 ) }
    dend_27 { pt3dadd( 37.4237, -231.223, 26.2669, 0.55 ) }
    dend_27 { pt3dadd( 37.6201, -233.968, 26.7552, 0.28 ) }
    dend_27 { pt3dadd( 37.6604, -235.075, 26.9887, 0.28 ) }
    dend_27 { pt3dadd( 37.6815, -237.768, 27.7895, 0.28 ) }
    dend_27 { pt3dadd( 37.6265, -240.261, 28.7151, 0.28 ) }
    dend_27 { pt3dadd( 37.7564, -243.531, 30.3463, 0.28 ) }
    dend_27 { pt3dadd( 39.4812, -250.752, 32.4325, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 18.6088, -124.418, 14.4228, 0.55 ) }
    dend_26 { pt3dadd( 19.5962, -124.77, 15.3328, 0.55 ) }
    dend_26 { pt3dadd( 21.5421, -125.716, 17.3602, 0.55 ) }
    dend_26 { pt3dadd( 23.1816, -126.671, 19.1889, 0.28 ) }
    dend_26 { pt3dadd( 24.9069, -127.769, 21.2103, 0.55 ) }
    dend_26 { pt3dadd( 25.8427, -128.48, 22.5909, 0.28 ) }
    dend_26 { pt3dadd( 27.3382, -129.773, 25.1749, 0.55 ) }
    dend_26 { pt3dadd( 27.8016, -130.482, 26.4993, 0.28 ) }
    dend_26 { pt3dadd( 27.9271, -130.742, 27.035, 0.28 ) }
    dend_26 { pt3dadd( 28.1326, -131.107, 27.9672, 0.55 ) }
    dend_26 { pt3dadd( 29.058, -132.279, 31.4353, 0.28 ) }
    dend_26 { pt3dadd( 29.4807, -132.729, 32.8752, 0.55 ) }
    dend_26 { pt3dadd( 31.031, -134.014, 36.916, 0.28 ) }
    dend_26 { pt3dadd( 31.9619, -134.633, 39.0033, 0.28 ) }
    dend_26 { pt3dadd( 33.2194, -135.426, 41.4955, 0.55 ) }
    dend_26 { pt3dadd( 35.301, -136.653, 44.9624, 0.28 ) }
    dend_26 { pt3dadd( 35.6159, -136.814, 45.3909, 0.55 ) }
    dend_26 { pt3dadd( 37.2667, -137.588, 47.3735, 0.28 ) }
    dend_26 { pt3dadd( 37.4311, -137.659, 47.5346, 0.55 ) }
    dend_26 { pt3dadd( 38.8668, -138.549, 49.0053, 0.28 ) }
    dend_26 { pt3dadd( 39.5223, -139.046, 49.7503, 0.55 ) }
    dend_26 { pt3dadd( 44.8382, -142.673, 55.9273, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -23.7078, -122.445, 68.0922, 0.55 ) }
    dend_22 { pt3dadd( -27.6352, -125.842, 73.5248, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -23.7078, -122.445, 68.0922, 0.55 ) }
    dend_21 { pt3dadd( -27.1536, -127.589, 70.7329, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 9
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 9
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 13
    dend_12 nseg = 7
    dend_10 nseg = 5
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_52 nseg = 3
    dend_33 nseg = 3
    dend_59 nseg = 7
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 9
    dend_15 nseg = 5
    dend_20 nseg = 3
    dend_27 nseg = 7
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_BP_a122f83294_0_0


